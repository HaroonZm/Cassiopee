================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import os
import sys

if os.getenv("LOCAL"):
    sys.stdin = open("_in.txt", "r")

sys.setrecursionlimit(10 ** 9)
INF = float("inf")
IINF = 10 ** 18
MOD = 10 ** 9 + 7

class UnionFind:
    def __init__(self, size=None, nodes=None):
        assert size is not None or nodes is not None
        if size is not None:
            self._parents = [i for i in range(size)]
            self._ranks = [0 for _ in range(size)]
            self._sizes = [1 for _ in range(size)]
        else:
            self._parents = {k: k for k in nodes}
            self._ranks = {k: 0 for k in nodes}
            self._sizes = {k: 1 for k in nodes}

    def unite(self, x, y):
        x = self.root(x)
        y = self.root(y)
        if x == y:
            return
        if self._ranks[x] > self._ranks[y]:
            self._parents[y] = x
            self._sizes[x] += self._sizes[y]
        else:
            self._parents[x] = y
            self._sizes[y] += self._sizes[x]
            if self._ranks[x] == self._ranks[y]:
                self._ranks[y] += 1

    def root(self, x):
        if self._parents[x] == x:
            return x
        self._parents[x] = self.root(self._parents[x])
        return self._parents[x]

    def size(self, x):
        return self._sizes[self.root(x)]

def argsort(li, key=None, reverse=False):
    return [i for _, i in sorted(
        [(a, i) for i, a in enumerate(li)], key=(lambda t: key(t[0])) if key else None, reverse=reverse
    )]

N, M = list(map(int, sys.stdin.buffer.readline().split()))
A, B = list(zip(*[map(int, sys.stdin.buffer.readline().split()) for _ in range(N)]))
VU = [list(map(int, sys.stdin.buffer.readline().split())) for _ in range(M)]

graph = [[] for _ in range(N)]
for v, u in VU:
    v -= 1
    u -= 1
    graph[v].append(u)
    graph[u].append(v)

reqs = [max(a, b) for a, b in zip(A, B)]
uses = list(B)

idx = argsort([a - b for a, b in zip(A, B)])
uf = UnionFind(size=N)
seen = [False] * N
ans = [INF] * N
for v in idx:
    seen[v] = True
    roots = set()
    for u in graph[v]:
        if not seen[u]:
            continue
        roots.add(uf.root(u))
    use_all = uses[v]
    for r in roots:
        use_all += uses[r]
    req_v = reqs[v] + use_all - uses[v]
    for r in roots:
        req_v = min(req_v, max(reqs[r], reqs[v] - uses[v]) + use_all - uses[r])
    for r in roots:
        uf.unite(v, r)
    reqs[uf.root(v)] = req_v
    uses[uf.root(v)] = use_all
ans = reqs[uf.root(0)]
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' os' (ID: 1994)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7615602016448975
    2. '\n' → logprob: -0.7615602016448975
    3. '<|end|>' → logprob: -3.3865602016448975
    4. 'import' → logprob: -4.511560440063477
    5. '
' → logprob: -5.011560440063477
    6. '\' → logprob: -5.386560440063477
    7. '```' → logprob: -5.386560440063477
    8. '<|end|>' → logprob: -6.761560440063477
    9. 'newline' → logprob: -6.886560440063477
    10. ' .' → logprob: -7.261560440063477

Token 4: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.02324768900871277
    2. 'sys' → logprob: -3.773247718811035
    3. '_sys' → logprob: -14.523247718811035
    4. ' ' → logprob: -14.648247718811035
    5. ' shutil' → logprob: -14.773247718811035
    6. '	sys' → logprob: -15.523247718811035
    7. ' subprocess' → logprob: -15.773247718811035
    8. ' re' → logprob: -16.14824676513672
    9. ' system' → logprob: -16.39824676513672
    10. '=sys' → logprob: -16.52324676513672

Token 5: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4900774657726288
    2. '<|end|>' → logprob: -1.8650774955749512
    3. '\n' → logprob: -2.115077495574951
    4. '

' → logprob: -2.615077495574951
    5. 'import' → logprob: -4.615077495574951
    6. '<|end|>' → logprob: -4.740077495574951
    7. 'newline' → logprob: -4.990077495574951
    8. '```' → logprob: -5.240077495574951
    9. '.' → logprob: -5.865077495574951
    10. '\' → logprob: -6.740077495574951

Token 6: 'if' (ID: 366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3994133174419403
    2. 'import' → logprob: -1.8994133472442627
    3. '#' → logprob: -2.2744133472442627
    4. '\' → logprob: -3.2744133472442627
    5. '.' → logprob: -5.024413108825684
    6. 'os' → logprob: -5.149413108825684
    7. 'print' → logprob: -5.399413108825684
    8. '```' → logprob: -5.524413108825684
    9. '<|end|>' → logprob: -5.649413108825684
    10. '
' → logprob: -6.274413108825684

Token 7: ' os' (ID: 1994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16621580719947815
    2. ' os' → logprob: -1.9162157773971558
    3. '  ' → logprob: -5.666215896606445
    4. ' __' → logprob: -7.166215896606445
    5. ' ' → logprob: -7.541215896606445
    6. 'os' → logprob: -7.791215896606445
    7. ' sys' → logprob: -8.416215896606445
    8. ''' → logprob: -9.041215896606445
    9. '"' → logprob: -9.291215896606445
    10. '_' → logprob: -9.291215896606445

Token 8: '.getenv' (ID: 105382)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003035266126971692
    2. '.path' → logprob: -8.750303268432617
    3. ' .' → logprob: -9.000303268432617
    4. '.getcwd' → logprob: -12.375303268432617
    5. '.listdir' → logprob: -12.750303268432617
    6. '.chdir' → logprob: -13.375303268432617
    7. '."""' → logprob: -13.625303268432617
    8. '.)' → logprob: -13.750303268432617
    9. '.")' → logprob: -14.000303268432617
    10. '```' → logprob: -14.125303268432617

Token 9: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07064270228147507
    2. '('' → logprob: -2.6956427097320557
    3. '("("' → logprob: -7.820642471313477
    4. '("' → logprob: -8.195642471313477
    5. '(
' → logprob: -11.195642471313477
    6. ' (' → logprob: -12.570642471313477
    7. '()' → logprob: -13.070642471313477
    8. '(

' → logprob: -13.070642471313477
    9. '(`' → logprob: -13.695642471313477
    10. ''' → logprob: -14.070642471313477

Token 10: 'LOCAL' (ID: 90515)
  Prédit: 'HOME'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HOME' → logprob: -0.6661243438720703
    2. 'USER' → logprob: -1.4161243438720703
    3. 'PATH' → logprob: -1.6661243438720703
    4. 'DJ' → logprob: -4.29112434387207
    5. 'DEBUG' → logprob: -4.66612434387207
    6. 'PY' → logprob: -4.79112434387207
    7. 'MY' → logprob: -5.16612434387207
    8. 'ENV' → logprob: -5.16612434387207
    9. 'V' → logprob: -5.79112434387207
    10. '"' → logprob: -6.91612434387207

Token 11: '"):
' (ID: 33645)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.7134061455726624
    2. '")' → logprob: -1.8384060859680176
    3. '"):
' → logprob: -2.3384060859680176
    4. '_ENV' → logprob: -2.7134060859680176
    5. '_DEV' → logprob: -3.3384060859680176
    6. '"):
' → logprob: -3.4634060859680176
    7. '_' → logprob: -3.5884060859680176
    8. '_TEST' → logprob: -3.8384060859680176
    9. '_RUN' → logprob: -4.338406085968018
    10. '_DEBUG' → logprob: -4.463406085968018

Token 12: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.3060475289821625
    2. '   ' → logprob: -1.6810475587844849
    3. ' print' → logprob: -2.9310474395751953
    4. ' os' → logprob: -4.431047439575195
    5. '     
' → logprob: -5.681047439575195
    6. ' sys' → logprob: -6.181047439575195
    7. '    
' → logprob: -6.181047439575195
    8. '```' → logprob: -6.681047439575195
    9. '\' → logprob: -7.181047439575195
    10. ' ' → logprob: -7.306047439575195

Token 13: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3206639587879181
    2. ' print' → logprob: -1.4456639289855957
    3. ' sys' → logprob: -3.8206639289855957
    4. ' os' → logprob: -4.820663928985596
    5. 'print' → logprob: -5.320663928985596
    6. '    ' → logprob: -6.570663928985596
    7. '```' → logprob: -6.945663928985596
    8. ' pass' → logprob: -7.570663928985596
    9. ' ' → logprob: -9.195664405822754
    10. '       ' → logprob: -9.320664405822754

Token 14: '.stdin' (ID: 93480)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.26105695962905884
    2. '.' → logprob: -1.886056900024414
    3. '.stdout' → logprob: -2.636056900024414
    4. '.path' → logprob: -6.136056900024414
    5. '.stderr' → logprob: -6.136056900024414
    6. '.argv' → logprob: -6.886056900024414
    7. '.stdin' → logprob: -7.136056900024414
    8. '.ex' → logprob: -8.761056900024414
    9. ' .' → logprob: -9.636056900024414
    10. '.append' → logprob: -11.261056900024414

Token 15: ' =' (ID: 314)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5678167939186096
    2. '.' → logprob: -1.3178167343139648
    3. '.read' → logprob: -1.8178167343139648
    4. '.write' → logprob: -5.942816734313965
    5. ' .' → logprob: -8.817816734313965
    6. '.readlines' → logprob: -9.192816734313965
    7. ' readline' → logprob: -9.692816734313965
    8. '.Read' → logprob: -10.442816734313965
    9. '.READ' → logprob: -10.692816734313965
    10. '.seek' → logprob: -11.067816734313965

Token 16: ' open' (ID: 2494)
  Prédit: ' open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.011058318428695202
    2. 'open' → logprob: -4.511058330535889
    3. ' sys' → logprob: -11.63605785369873
    4. 'sys' → logprob: -13.76105785369873
    5. '	open' → logprob: -14.51105785369873
    6. '=open' → logprob: -15.63605785369873
    7. '(open' → logprob: -17.636058807373047
    8. ' ' → logprob: -18.136058807373047
    9. '```' → logprob: -18.511058807373047
    10. ' os' → logprob: -18.636058807373047

Token 17: '("_' (ID: 35483)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48766112327575684
    2. '('' → logprob: -1.1126611232757568
    3. '("' → logprob: -3.112661123275757
    4. '("("' → logprob: -4.487661361694336
    5. '(os' → logprob: -7.612661361694336
    6. '<|end|>' → logprob: -8.987661361694336
    7. '("./' → logprob: -9.112661361694336
    8. '('./' → logprob: -9.237661361694336
    9. '```' → logprob: -9.237661361694336
    10. '(`' → logprob: -9.612661361694336

Token 18: 'in' (ID: 258)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03506038710474968
    2. 'local' → logprob: -3.660060405731201
    3. '.input' → logprob: -6.660060405731201
    4. 'stdin' → logprob: -6.660060405731201
    5. '_input' → logprob: -7.035060405731201
    6. 'in' → logprob: -7.035060405731201
    7. 'dev' → logprob: -7.285060405731201
    8. '_local' → logprob: -7.285060405731201
    9. 'main' → logprob: -7.410060405731201
    10. 'output' → logprob: -8.035059928894043

Token 19: '.txt' (ID: 7186)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.0014746295055374503
    2. 'puts' → logprob: -6.751474857330322
    3. 'p' → logprob: -8.876474380493164
    4. '.txt' → logprob: -9.001474380493164
    5. '.' → logprob: -10.376474380493164
    6. '_put' → logprob: -12.251474380493164
    7. 'pu' → logprob: -13.876474380493164
    8. '.py' → logprob: -14.001474380493164
    9. 'PUT' → logprob: -14.126474380493164
    10. '.put' → logprob: -14.126474380493164

Token 20: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.20907306671142578
    2. '",' → logprob: -1.7090730667114258
    3. '","' → logprob: -4.959073066711426
    4. '"' → logprob: -7.459073066711426
    5. ')' → logprob: -11.334073066711426
    6. '")
' → logprob: -11.459073066711426
    7. '",'' → logprob: -12.084073066711426
    8. '",
' → logprob: -13.959073066711426
    9. ',"' → logprob: -13.959073066711426
    10. '```' → logprob: -14.209073066711426

Token 21: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1096317246556282
    2. ' "' → logprob: -2.7346317768096924
    3. ''r' → logprob: -3.3596317768096924
    4. ''' → logprob: -5.984631538391113
    5. ' '' → logprob: -7.484631538391113
    6. 'r' → logprob: -7.609631538391113
    7. '"text' → logprob: -9.234631538391113
    8. '"encoding' → logprob: -9.359631538391113
    9. ''t' → logprob: -9.359631538391113
    10. '"os' → logprob: -9.609631538391113

Token 22: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.1424973713001236e-05
    2. 'rt' → logprob: -10.375031471252441
    3. 'read' → logprob: -15.750031471252441
    4. 'w' → logprob: -18.625030517578125
    5. 'rb' → logprob: -18.625030517578125
    6. '```' → logprob: -19.125030517578125
    7. ' r' → logprob: -19.500030517578125
    8. 't' → logprob: -19.750030517578125
    9. '")' → logprob: -20.750030517578125
    10. '"' → logprob: -20.750030517578125

Token 23: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.10025443881750107
    2. ')' → logprob: -2.350254535675049
    3. ')")' → logprob: -10.60025405883789
    4. '')' → logprob: -11.22525405883789
    5. '"' → logprob: -12.35025405883789
    6. '")
' → logprob: -12.97525405883789
    7. ' )' → logprob: -13.97525405883789
    8. ')
' → logprob: -14.72525405883789
    9. '`)' → logprob: -14.97525405883789
    10. ' ")' → logprob: -15.22525405883789

Token 24: 'sys' (ID: 17324)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5271567702293396
    2. 'print' → logprob: -1.1521568298339844
    3. '#' → logprob: -3.0271568298339844
    4. 'input' → logprob: -4.027156829833984
    5. 'data' → logprob: -4.527156829833984
    6. 'n' → logprob: -5.277156829833984
    7. 'import' → logprob: -5.777156829833984
    8. 'output' → logprob: -6.527156829833984
    9. '    
' → logprob: -6.777156829833984
    10. '```' → logprob: -6.902156829833984

Token 25: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03374309465289116
    2. '.stdin' → logprob: -3.783743143081665
    3. '.stdout' → logprob: -4.908742904663086
    4. '.exit' → logprob: -6.158742904663086
    5. '.readline' → logprob: -7.908742904663086
    6. '.stderr' → logprob: -8.033742904663086
    7. '.argv' → logprob: -8.908742904663086
    8. '.write' → logprob: -10.408742904663086
    9. ' .' → logprob: -11.283742904663086
    10. '.std' → logprob: -11.533742904663086

Token 26: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.4981722831726074
    2. 'encoding' → logprob: -1.4981722831726074
    3. 'up' → logprob: -2.6231722831726074
    4. 'rec' → logprob: -2.8731722831726074
    5. 'default' → logprob: -2.9981722831726074
    6. '_encoding' → logprob: -2.9981722831726074
    7. 'attr' → logprob: -3.1231722831726074
    8. '_trace' → logprob: -3.3731722831726074
    9. '_' → logprob: -3.3731722831726074
    10. 'set' → logprob: -3.6231722831726074

Token 27: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0018578420858830214
    2. 'urs' → logprob: -7.001857757568359
    3. 'limit' → logprob: -8.37685775756836
    4. 'ur' → logprob: -8.50185775756836
    5. 'utf' → logprob: -8.62685775756836
    6. 'urf' → logprob: -8.75185775756836
    7. 'ursive' → logprob: -9.50185775756836
    8. 'ursor' → logprob: -10.37685775756836
    9. '_limit' → logprob: -11.25185775756836
    10. 't' → logprob: -11.25185775756836

Token 28: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.4498052223643754e-05
    2. '_limit' → logprob: -11.500014305114746
    3. ' limit' → logprob: -12.375014305114746
    4. 'lim' → logprob: -17.250015258789062
    5. 'Limit' → logprob: -18.125015258789062
    6. '-limit' → logprob: -18.250015258789062
    7. 'depth' → logprob: -18.375015258789062
    8. '(limit' → logprob: -19.125015258789062
    9. '.limit' → logprob: -19.250015258789062
    10. '_LIMIT' → logprob: -20.875015258789062

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '(
' → logprob: -14.375000953674316
    3. ' (' → logprob: -15.875000953674316
    4. '(

' → logprob: -16.25
    5. '()' → logprob: -17.5
    6. '((' → logprob: -17.625
    7. '100' → logprob: -18.875
    8. '40' → logprob: -18.875
    9. '(int' → logprob: -19.25
    10. ')' → logprob: -19.25

Token 30: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.002875369042158127
    2. '100' → logprob: -5.877875328063965
    3. ' ' → logprob: -10.002875328063965
    4. '200' → logprob: -11.752875328063965
    5. '300' → logprob: -12.002875328063965
    6. '500' → logprob: -12.627875328063965
    7. '250' → logprob: -13.377875328063965
    8. '1' → logprob: -13.377875328063965
    9. '400' → logprob: -13.502875328063965
    10. '999' → logprob: -13.627875328063965

Token 31: ' **' (ID: 6240)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5270276069641113
    2. '0' → logprob: -1.6520276069641113
    3. '**' → logprob: -2.7770276069641113
    4. '6' → logprob: -2.7770276069641113
    5. '5' → logprob: -3.2770276069641113
    6. '00' → logprob: -3.5270276069641113
    7. '7' → logprob: -3.6520276069641113
    8. '4' → logprob: -8.152027130126953
    9. '8' → logprob: -9.527027130126953
    10. '```' → logprob: -10.652027130126953

Token 32: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.018197467550635338
    2. '9' → logprob: -4.018197536468506
    3. '8' → logprob: -10.143197059631348
    4. '6' → logprob: -11.893197059631348
    5. '**' → logprob: -14.268197059631348
    6. '```' → logprob: -15.518197059631348
    7. '

' → logprob: -15.768197059631348
    8. '+' → logprob: -16.018198013305664
    9. ' ' → logprob: -16.518198013305664
    10. '  ' → logprob: -16.643198013305664

Token 33: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.03374793753027916
    2. '9' → logprob: -3.408747911453247
    3. '8' → logprob: -9.783747673034668
    4. '6' → logprob: -10.033747673034668
    5. '**' → logprob: -13.908747673034668
    6. '+' → logprob: -14.908747673034668
    7. '```' → logprob: -15.908747673034668
    8. '

' → logprob: -16.033748626708984
    9. '``' → logprob: -16.033748626708984
    10. '10' → logprob: -16.533748626708984

Token 34: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.000000953674316
    4. '))' → logprob: -15.750000953674316
    5. ')

' → logprob: -18.25
    6. '0' → logprob: -18.875
    7. '6' → logprob: -19.5
    8. ')`' → logprob: -19.75
    9. ')
' → logprob: -20.125
    10. '),' → logprob: -20.5

Token 35: 'INF' (ID: 64358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7680618166923523
    2. '
' → logprob: -0.8930618166923523
    3. 'n' → logprob: -3.018061876296997
    4. '

' → logprob: -3.018061876296997
    5. '\' → logprob: -5.018061637878418
    6. '\n' → logprob: -5.018061637878418
    7. '' → logprob: -5.268061637878418
    8. '```' → logprob: -6.268061637878418
    9. '#' → logprob: -6.393061637878418
    10. '
' → logprob: -6.643061637878418

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2841885983943939
    2. '=' → logprob: -1.4091886281967163
    3. ')' → logprob: -6.034188747406006
    4. ' =)' → logprob: -8.284188270568848
    5. '_' → logprob: -8.784188270568848
    6. ' )' → logprob: -9.034188270568848
    7. ',' → logprob: -10.159188270568848
    8. ' ' → logprob: -10.659188270568848
    9. ')=' → logprob: -12.159188270568848
    10. '	' → logprob: -12.659188270568848

Token 37: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07277321815490723
    2. 'float' → logprob: -3.0727732181549072
    3. ' ' → logprob: -3.9477732181549072
    4. ' float' → logprob: -5.697772979736328
    5. 'int' → logprob: -7.197772979736328
    6. '1' → logprob: -7.697772979736328
    7. ' int' → logprob: -11.072772979736328
    8. '9' → logprob: -11.322772979736328
    9. '100' → logprob: -11.822772979736328
    10. '(float' → logprob: -13.322772979736328

Token 38: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0012004701420664787
    2. '("' → logprob: -6.7512006759643555
    3. '(' → logprob: -10.501200675964355
    4. '('+' → logprob: -13.876200675964355
    5. ''' → logprob: -14.501200675964355
    6. '("("' → logprob: -15.251200675964355
    7. '('-' → logprob: -15.251200675964355
    8. '('(' → logprob: -15.751200675964355
    9. '"' → logprob: -15.876200675964355
    10. '>('' → logprob: -16.12619972229004

Token 39: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.020741695538163185
    2. ''in' → logprob: -4.0207414627075195
    3. ''' → logprob: -6.2707414627075195
    4. '"' → logprob: -7.6457414627075195
    5. ''i' → logprob: -10.02074146270752
    6. ''ins' → logprob: -10.14574146270752
    7. '-inf' → logprob: -10.64574146270752
    8. 'in' → logprob: -11.02074146270752
    9. '"in' → logprob: -11.52074146270752
    10. ''inc' → logprob: -11.89574146270752

Token 40: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.005308585241436958
    2. ')' → logprob: -5.255308628082275
    3. ')")' → logprob: -9.630308151245117
    4. '"' → logprob: -12.255308151245117
    5. ' ")' → logprob: -13.380308151245117
    6. ' )' → logprob: -14.130308151245117
    7. '")
' → logprob: -14.630308151245117
    8. '}")' → logprob: -15.005308151245117
    9. ')"' → logprob: -15.130308151245117
    10. '')' → logprob: -15.380308151245117

Token 41: 'I' (ID: 40)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31751176714897156
    2. 'n' → logprob: -1.317511796951294
    3. 'class' → logprob: -6.067511558532715
    4. '
' → logprob: -7.192511558532715
    5. 'a' → logprob: -8.442511558532715
    6. '```' → logprob: -8.442511558532715
    7. '#' → logprob: -8.567511558532715
    8. '\' → logprob: -8.817511558532715
    9. 'input' → logprob: -10.067511558532715
    10. 'from' → logprob: -10.067511558532715

Token 42: 'INF' (ID: 64358)
  Prédit: 'NF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'NF' → logprob: -0.5985207557678223
    2. 'N' → logprob: -0.8485207557678223
    3. 'n' → logprob: -4.098520755767822
    4. 'NP' → logprob: -5.973520755767822
    5. 'NR' → logprob: -6.973520755767822
    6. 'np' → logprob: -7.598520755767822
    7. 'NFL' → logprob: -7.598520755767822
    8. 'nf' → logprob: -7.723520755767822
    9. 'NV' → logprob: -8.223520278930664
    10. 'M' → logprob: -8.848520278930664

Token 43: ' =' (ID: 314)
  Prédit: 'NF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'NF' → logprob: -0.9469037055969238
    2. 'N' → logprob: -1.0719037055969238
    3. 'F' → logprob: -1.4469037055969238
    4. 'nf' → logprob: -3.571903705596924
    5. '=' → logprob: -6.071903705596924
    6. 'n' → logprob: -6.196903705596924
    7. 'NV' → logprob: -7.196903705596924
    8. 'f' → logprob: -7.571903705596924
    9. 'NFL' → logprob: -8.571903228759766
    10. 'INF' → logprob: -9.196903228759766

Token 44: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03249713033437729
    2. 'int' → logprob: -4.532496929168701
    3. '1' → logprob: -4.657496929168701
    4. ' ' → logprob: -5.157496929168701
    5. '(' → logprob: -6.032496929168701
    6. '100' → logprob: -6.657496929168701
    7. '922' → logprob: -6.657496929168701
    8. 'float' → logprob: -8.53249740600586
    9. '999' → logprob: -8.78249740600586
    10. '987' → logprob: -8.90749740600586

Token 45: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.020845845341682434
    2. '1' → logprob: -4.895845890045166
    3. '(' → logprob: -5.145845890045166
    4. 'int' → logprob: -5.395845890045166
    5. '922' → logprob: -6.395845890045166
    6. '100' → logprob: -7.895845890045166
    7. 'float' → logprob: -8.270845413208008
    8. '0' → logprob: -8.770845413208008
    9. '999' → logprob: -9.520845413208008
    10. '987' → logprob: -9.645845413208008

Token 46: ' **' (ID: 6240)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.17850764095783234
    2. '15' → logprob: -2.4285075664520264
    3. '9' → logprob: -3.5535075664520264
    4. '10' → logprob: -3.5535075664520264
    5. '12' → logprob: -4.5535078048706055
    6. '**' → logprob: -6.0535078048706055
    7. '16' → logprob: -6.1785078048706055
    8. '14' → logprob: -7.0535078048706055
    9. '17' → logprob: -7.3035078048706055
    10. '20' → logprob: -7.4285078048706055

Token 47: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.37019070982933044
    2. '15' → logprob: -1.2451907396316528
    3. '16' → logprob: -4.120190620422363
    4. '10' → logprob: -5.995190620422363
    5. '17' → logprob: -7.245190620422363
    6. '14' → logprob: -7.745190620422363
    7. '19' → logprob: -7.870190620422363
    8. '9' → logprob: -7.870190620422363
    9. '12' → logprob: -7.870190620422363
    10. '20' → logprob: -7.870190620422363

Token 48: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.30818063020706177
    2. '15' → logprob: -1.433180570602417
    3. '16' → logprob: -3.808180570602417
    4. '10' → logprob: -6.058180809020996
    5. '17' → logprob: -7.308180809020996
    6. '19' → logprob: -7.683180809020996
    7. '20' → logprob: -8.058180809020996
    8. '14' → logprob: -8.058180809020996
    9. '12' → logprob: -8.308180809020996
    10. '9' → logprob: -9.933180809020996

Token 49: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9856347441673279
    2. 'n' → logprob: -1.7356348037719727
    3. '#' → logprob: -1.9856348037719727
    4. '\n' → logprob: -2.3606348037719727
    5. 'def' → logprob: -2.6106348037719727
    6. '\' → logprob: -2.9856348037719727
    7. '```' → logprob: -3.4856348037719727
    8. ')' → logprob: -4.610634803771973
    9. '<|end|>' → logprob: -5.110634803771973
    10. '

' → logprob: -5.235634803771973

Token 50: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05017974227666855
    2. 'n' → logprob: -3.0501797199249268
    3. 'N' → logprob: -7.050179958343506
    4. 'from' → logprob: -8.800179481506348
    5. 'class' → logprob: -9.050179481506348
    6. 'MOD' → logprob: -9.175179481506348
    7. 'dp' → logprob: -9.550179481506348
    8. '\' → logprob: -9.675179481506348
    9. '#' → logprob: -9.800179481506348
    10. 'a' → logprob: -10.175179481506348

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03808750957250595
    2. '=' → logprob: -3.2880876064300537
    3. ' ' → logprob: -10.163087844848633
    4. ' =)' → logprob: -13.163087844848633
    5. ' =
' → logprob: -13.288087844848633
    6. ')' → logprob: -13.913087844848633
    7. '<|end|>' → logprob: -14.038087844848633
    8. ',' → logprob: -14.288087844848633
    9. '  ' → logprob: -14.663087844848633
    10. '_' → logprob: -15.288087844848633

Token 52: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16138753294944763
    2. ' ' → logprob: -1.91138756275177
    3. '998' → logprob: -7.2863874435424805
    4. '100' → logprob: -7.6613874435424805
    5. '1' → logprob: -12.16138744354248
    6. 'int' → logprob: -14.53638744354248
    7. ' (' → logprob: -14.53638744354248
    8. '(' → logprob: -14.78638744354248
    9. '999' → logprob: -15.53638744354248
    10. 'pow' → logprob: -16.036388397216797

Token 53: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08386684954166412
    2. '100' → logprob: -2.833866834640503
    3. '998' → logprob: -3.833866834640503
    4. '1' → logprob: -11.208867073059082
    5. ' ' → logprob: -11.333867073059082
    6. '999' → logprob: -12.083867073059082
    7. '(' → logprob: -13.583867073059082
    8. '9' → logprob: -13.833867073059082
    9. 'int' → logprob: -13.958867073059082
    10. '```' → logprob: -14.333867073059082

Token 54: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0005008471780456603
    2. '**' → logprob: -7.625500679016113
    3. '09' → logprob: -11.500500679016113
    4. '+' → logprob: -13.125500679016113
    5. ' ' → logprob: -15.250500679016113
    6. '_' → logprob: -16.12550163269043
    7. '^' → logprob: -16.25050163269043
    8. '10' → logprob: -16.50050163269043
    9. '```' → logprob: -16.50050163269043
    10. '7' → logprob: -17.12550163269043

Token 55: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. '09' → logprob: -14.125000953674316
    3. '10' → logprob: -18.125
    4. ' ' → logprob: -18.5
    5. '+' → logprob: -20.25
    6. '19' → logprob: -20.75
    7. '18' → logprob: -20.75
    8. '```' → logprob: -20.75
    9. '９' → logprob: -22.25
    10. '4' → logprob: -22.375

Token 56: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.375
    3. '10' → logprob: -18.5
    4. '```' → logprob: -19.875
    5. '18' → logprob: -20.125
    6. '19' → logprob: -20.75
    7. ' ' → logprob: -20.875
    8. '９' → logprob: -21.75
    9. '8' → logprob: -22.0
    10. '+' → logprob: -22.25

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005261510610580444
    2. ' +' → logprob: -5.255261421203613
    3. '7' → logprob: -10.505261421203613
    4. '＋' → logprob: -16.00526237487793
    5. '+
' → logprob: -16.00526237487793
    6. ' ' → logprob: -16.50526237487793
    7. ' ' → logprob: -17.13026237487793
    8. ' plus' → logprob: -17.25526237487793
    9. ' +
' → logprob: -18.25526237487793
    10. '9' → logprob: -18.50526237487793

Token 58: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -16.0
    3. ' ' → logprob: -16.25
    4. '```' → logprob: -18.375
    5. '   ' → logprob: -19.75
    6. '７' → logprob: -21.0
    7. '07' → logprob: -21.3125
    8. '  ' → logprob: -21.3125
    9. '' → logprob: -21.5625
    10. '``' → logprob: -21.875

Token 59: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. '+' → logprob: -19.75
    4. '```' → logprob: -20.125
    5. '７' → logprob: -21.5
    6. '   ' → logprob: -21.5
    7. '' → logprob: -22.8125
    8. '​' → logprob: -23.3125
    9. '``' → logprob: -23.375
    10. '07' → logprob: -23.375

Token 60: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.276942640542984
    2. 'def' → logprob: -2.151942729949951
    3. '\n' → logprob: -3.151942729949951
    4. '

' → logprob: -3.276942729949951
    5. '#' → logprob: -4.276942729949951
    6. 'n' → logprob: -4.901942729949951
    7. '\' → logprob: -4.901942729949951
    8. '```' → logprob: -5.026942729949951
    9. '' → logprob: -5.276942729949951
    10. 'newline' → logprob: -6.526942729949951

Token 61: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023327818140387535
    2. 'n' → logprob: -3.7733278274536133
    3. 'class' → logprob: -10.023327827453613
    4. 'N' → logprob: -11.023327827453613
    5. 'from' → logprob: -11.773327827453613
    6. 'd' → logprob: -12.523327827453613
    7. 'de' → logprob: -12.648327827453613
    8. '#' → logprob: -12.773327827453613
    9. 'input' → logprob: -13.648327827453613
    10. 'a' → logprob: -13.773327827453613

Token 62: ' Union' (ID: 14746)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07147777825593948
    2. ' Solution' → logprob: -3.0714778900146484
    3. ' Solver' → logprob: -4.196477890014648
    4. ' Segment' → logprob: -6.071477890014648
    5. ' Factor' → logprob: -7.071477890014648
    6. ' My' → logprob: -7.571477890014648
    7. ' Node' → logprob: -7.696477890014648
    8. ' Graph' → logprob: -7.696477890014648
    9. ' Tree' → logprob: -7.821477890014648
    10. ' DFS' → logprob: -8.071477890014648

Token 63: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.0002627662615850568
    2. '-F' → logprob: -8.500263214111328
    3. '[' → logprob: -10.750263214111328
    4. 'F' → logprob: -10.750263214111328
    5. ' Find' → logprob: -11.625263214111328
    6. '-' → logprob: -12.875263214111328
    7. 'Finder' → logprob: -13.875263214111328
    8. '[int' → logprob: -14.000263214111328
    9. '_Find' → logprob: -14.000263214111328
    10. 'Fi' → logprob: -14.750263214111328

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007843759376555681
    2. '():' → logprob: -7.750784397125244
    3. ' :' → logprob: -8.375783920288086
    4. '(' → logprob: -9.500783920288086
    5. '(object' → logprob: -10.500783920288086
    6. ':**' → logprob: -12.125783920288086
    7. '：' → logprob: -12.500783920288086
    8. '):' → logprob: -12.500783920288086
    9. '(":' → logprob: -13.250783920288086
    10. ':
' → logprob: -13.375783920288086

Token 65: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005463555920869112
    2. ':
' → logprob: -5.630463600158691
    3. '(object' → logprob: -7.130463600158691
    4. '   ' → logprob: -7.755463600158691
    5. '():' → logprob: -8.130463600158691
    6. '(' → logprob: -9.255463600158691
    7. ' :' → logprob: -9.505463600158691
    8. '```' → logprob: -10.255463600158691
    9. '  ' → logprob: -10.880463600158691
    10. ' ' → logprob: -11.255463600158691

Token 66: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.07542219012975693
    2. 'def' (adapté à ' def') → logprob: -3.2004222869873047
    3. '   ' → logprob: -3.4504222869873047
    4. '    ' → logprob: -8.825422286987305
    5. '	def' → logprob: -11.700422286987305
    6. 'class' → logprob: -12.575422286987305
    7. '    
' → logprob: -12.700422286987305
    8. ' ' → logprob: -12.950422286987305
    9. ' 
' → logprob: -12.950422286987305
    10. ' __' → logprob: -13.575422286987305

Token 67: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00035786881926469505
    2. '__' → logprob: -8.250357627868652
    3. ' init' → logprob: -9.750357627868652
    4. 'init' → logprob: -10.375357627868652
    5. ' _' → logprob: -12.750357627868652
    6. ' ' → logprob: -13.250357627868652
    7. '_init' → logprob: -13.250357627868652
    8. ' def' → logprob: -15.125357627868652
    9. ' ' → logprob: -16.37535858154297
    10. 'in' → logprob: -16.37535858154297

Token 68: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -17.125
    3. ' init' → logprob: -18.625
    4. 'nit' → logprob: -19.0
    5. 'int' → logprob: -19.5
    6. 'in' → logprob: -19.75
    7. '```' → logprob: -19.75
    8. 'inite' → logprob: -19.875
    9. 'innit' → logprob: -20.0
    10. 'i' → logprob: -20.5

Token 69: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.036486413329839706
    2. '(' → logprob: -4.036486625671387
    3. '(self' → logprob: -4.286486625671387
    4. '__' → logprob: -5.661486625671387
    5. '_(' → logprob: -7.536486625671387
    6. ' (' → logprob: -8.911486625671387
    7. '__(
' → logprob: -9.036486625671387
    8. '_' → logprob: -10.161486625671387
    9. '__((' → logprob: -10.786486625671387
    10. ')(' → logprob: -10.911486625671387

Token 70: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.848420551046729e-05
    2. ' self' → logprob: -9.7500581741333
    3. '(self' → logprob: -17.375059127807617
    4. '   ' → logprob: -18.000059127807617
    5. '
' → logprob: -18.125059127807617
    6. '	self' → logprob: -18.500059127807617
    7. 's' → logprob: -18.625059127807617
    8. ')' → logprob: -18.750059127807617
    9. ' ' → logprob: -18.750059127807617
    10. 'n' → logprob: -19.125059127807617

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08960310369729996
    2. ' ,' → logprob: -2.4646031856536865
    3. '(' → logprob: -8.339603424072266
    4. 'self' → logprob: -8.714603424072266
    5. ' (' → logprob: -9.714603424072266
    6. ',n' → logprob: -9.964603424072266
    7. ',self' → logprob: -10.464603424072266
    8. ',size' → logprob: -10.589603424072266
    9. ')' → logprob: -10.964603424072266
    10. ',(' → logprob: -11.214603424072266

Token 72: ' size' (ID: 2349)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08339547365903854
    2. 'self' → logprob: -2.583395481109619
    3. ' n' → logprob: -5.458395481109619
    4. ' self' → logprob: -8.458395004272461
    5. '   ' → logprob: -10.958395004272461
    6. 'size' → logprob: -13.208395004272461
    7. ' ' → logprob: -13.458395004272461
    8. '	n' → logprob: -13.708395004272461
    9. '       ' → logprob: -14.583395004272461
    10. '  ' → logprob: -15.333395004272461

Token 73: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005038236267864704
    2. ')' → logprob: -8.125503540039062
    3. ' ):' → logprob: -8.750503540039062
    4. '):
' → logprob: -10.250503540039062
    5. ':' → logprob: -11.375503540039062
    6. ',' → logprob: -14.125503540039062
    7. '):
' → logprob: -14.875503540039062
    8. '=' → logprob: -15.250503540039062
    9. '():' → logprob: -15.500503540039062
    10. '}:' → logprob: -15.500503540039062

Token 74: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10161245614290237
    2. ',' → logprob: -2.3516125679016113
    3. ')' → logprob: -7.226612567901611
    4. ' ):' → logprob: -7.351612567901611
    5. ' ,' → logprob: -11.101612091064453
    6. '):
' → logprob: -12.351612091064453
    7. ',size' → logprob: -12.476612091064453
    8. '   ' → logprob: -12.601612091064453
    9. ':' → logprob: -12.726612091064453
    10. ' )' → logprob: -13.226612091064453

Token 75: ' nodes' (ID: 15749)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.36904051899909973
    2. ' n' → logprob: -1.4940404891967773
    3. 'arr' → logprob: -3.7440404891967773
    4. 'parents' → logprob: -4.619040489196777
    5. ' parents' → logprob: -5.369040489196777
    6. 'data' → logprob: -5.369040489196777
    7. '_n' → logprob: -5.619040489196777
    8. 'parent' → logprob: -5.994040489196777
    9. ' data' → logprob: -5.994040489196777
    10. 'N' → logprob: -5.994040489196777

Token 76: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.003129471093416214
    2. '=' → logprob: -5.878129482269287
    3. '=[]' → logprob: -8.128129005432129
    4. '):' → logprob: -11.128129005432129
    5. ')' → logprob: -11.878129005432129
    6. ':' → logprob: -12.753129005432129
    7. ' =' → logprob: -13.378129005432129
    8. '={}' → logprob: -13.503129005432129
    9. ' None' → logprob: -14.628129005432129
    10. ',' → logprob: -15.128129005432129

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001439459010725841
    2. ',' → logprob: -9.500144004821777
    3. ' ):' → logprob: -10.250144004821777
    4. ')' → logprob: -10.625144004821777
    5. '):
' → logprob: -11.875144004821777
    6. ':' → logprob: -13.500144004821777
    7. '   ' → logprob: -14.500144004821777
    8. ' ' → logprob: -16.12514305114746
    9. '=None' → logprob: -16.37514305114746
    10. '):
' → logprob: -16.50014305114746

Token 78: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019001346081495285
    2. '       ' → logprob: -4.769001483917236
    3. ',' → logprob: -5.019001483917236
    4. ':' → logprob: -6.269001483917236
    5. '):
' → logprob: -6.644001483917236
    6. '   ' → logprob: -7.894001483917236
    7. ')' → logprob: -9.769001007080078
    8. ' ' → logprob: -10.644001007080078
    9. ' ):' → logprob: -10.894001007080078
    10. '<|end|>' → logprob: -11.394001007080078

Token 79: ' assert' (ID: 3696)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08989175409078598
    2. 'if' → logprob: -2.9648916721343994
    3. '       ' → logprob: -3.7148916721343994
    4. ' self' → logprob: -4.8398919105529785
    5. 'self' → logprob: -6.5898919105529785
    6. ' super' → logprob: -7.3398919105529785
    7. 'super' → logprob: -9.21489143371582
    8. '   ' → logprob: -12.21489143371582
    9. ' ' → logprob: -12.33989143371582
    10. 'If' → logprob: -13.46489143371582

Token 80: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.2729353606700897
    2. 'size' → logprob: -2.272935390472412
    3. '(size' → logprob: -2.397935390472412
    4. ' (' → logprob: -3.147935390472412
    5. '(not' → logprob: -6.772935390472412
    6. ' not' → logprob: -7.897935390472412
    7. ' isinstance' → logprob: -8.147934913635254
    8. 'not' → logprob: -9.522934913635254
    9. '(' → logprob: -9.772934913635254
    10. ' nodes' → logprob: -11.397934913635254

Token 81: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.022627877071499825
    2. 'is' → logprob: -4.272627830505371
    3. ' or' → logprob: -5.397627830505371
    4. '>' → logprob: -5.772627830505371
    5. ' >' → logprob: -7.522627830505371
    6. 'or' → logprob: -8.897627830505371
    7. ' ' → logprob: -10.022627830505371
    8. '<|end|>' → logprob: -10.897627830505371
    9. '>=' → logprob: -11.022627830505371
    10. '!=' → logprob: -11.522627830505371

Token 82: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20772188901901245
    2. ' not' → logprob: -1.7077219486236572
    3. 'None' → logprob: -5.457721710205078
    4. ' None' → logprob: -6.207721710205078
    5. '(not' → logprob: -12.957721710205078
    6. '=None' → logprob: -13.332721710205078
    7. '(None' → logprob: -13.457721710205078
    8. '	not' → logprob: -13.457721710205078
    9. 'Not' → logprob: -13.707721710205078
    10. ' ' → logprob: -14.332721710205078

Token 83: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.018153805285692215
    2. ' None' → logprob: -4.018153667449951
    3. 'int' → logprob: -13.39315414428711
    4. '(None' → logprob: -13.89315414428711
    5. '_None' → logprob: -14.14315414428711
    6. 'not' → logprob: -14.64315414428711
    7. 'none' → logprob: -16.01815414428711
    8. ' ' → logprob: -16.14315414428711
    9. '=None' → logprob: -16.89315414428711
    10. '  ' → logprob: -17.64315414428711

Token 84: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0022147269919514656
    2. 'or' → logprob: -6.7522149085998535
    3. '<|end|>' → logprob: -7.6272149085998535
    4. ' ' → logprob: -8.002214431762695
    5. ' and' → logprob: -8.627214431762695
    6. '       ' → logprob: -11.127214431762695
    7. '        ' → logprob: -11.627214431762695
    8. ',' → logprob: -11.752214431762695
    9. '<|end|>' → logprob: -12.502214431762695
    10. '  ' → logprob: -13.252214431762695

Token 85: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.38688918948173523
    2. 'nodes' → logprob: -1.1368892192840576
    3. '(nodes' → logprob: -11.011889457702637
    4. '	nodes' → logprob: -14.011889457702637
    5. 'node' → logprob: -15.136889457702637
    6. 'n' → logprob: -15.636889457702637
    7. 'not' → logprob: -16.38688850402832
    8. ' ' → logprob: -16.51188850402832
    9. '_nodes' → logprob: -16.76188850402832
    10. 'Nodes' → logprob: -16.88688850402832

Token 86: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0012068998767063022
    2. ' ' → logprob: -7.251206874847412
    3. 'is' → logprob: -7.876206874847412
    4. '<|end|>' → logprob: -9.50120735168457
    5. '=' → logprob: -10.25120735168457
    6. '<|end|>' → logprob: -13.25120735168457
    7. '!' → logprob: -13.75120735168457
    8. ')' → logprob: -14.12620735168457
    9. '!=' → logprob: -14.50120735168457
    10. '=is' → logprob: -14.50120735168457

Token 87: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06198415905237198
    2. ' not' → logprob: -2.811984062194824
    3. 'n' → logprob: -12.811984062194824
    4. '
' → logprob: -12.936984062194824
    5. '!' → logprob: -12.936984062194824
    6. '	not' → logprob: -13.311984062194824
    7. 'None' → logprob: -13.436984062194824
    8. ' ' → logprob: -13.561984062194824
    9. 'Not' → logprob: -13.561984062194824
    10. '[' → logprob: -14.186984062194824

Token 88: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00523612555116415
    2. ' None' → logprob: -5.2552361488342285
    3. 'none' → logprob: -13.50523567199707
    4. '_None' → logprob: -14.88023567199707
    5. '=None' → logprob: -15.13023567199707
    6. '(None' → logprob: -15.63023567199707
    7. '_none' → logprob: -15.88023567199707
    8. ',None' → logprob: -17.50523567199707
    9. ' ' → logprob: -18.00523567199707
    10. 'not' → logprob: -18.25523567199707

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16621257364749908
    2. ',' → logprob: -2.041212558746338
    3. '<|end|>' → logprob: -4.416212558746338
    4. '       ' → logprob: -4.916212558746338
    5. '        
' → logprob: -7.041212558746338
    6. ':' → logprob: -7.166212558746338
    7. ' 
' → logprob: -7.791212558746338
    8. '<|end|>' → logprob: -7.791212558746338
    9. '  
' → logprob: -8.041213035583496
    10. ',
' → logprob: -8.541213035583496

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03482220694422722
    2. '
' → logprob: -4.1598219871521
    3. ',' → logprob: -4.2848219871521
    4. '<|end|>' → logprob: -6.4098219871521
    5. ':' → logprob: -6.9098219871521
    6. '.' → logprob: -7.5348219871521
    7. '        
' → logprob: -7.6598219871521
    8. '<|end|>' → logprob: -8.409822463989258
    9. ',
' → logprob: -8.659822463989258
    10. ';' → logprob: -9.159822463989258

Token 91: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03497682139277458
    2. '
' → logprob: -3.7849767208099365
    3. ':' → logprob: -5.284976959228516
    4. ' if' → logprob: -5.534976959228516
    5. ',' → logprob: -7.409976959228516
    6. ':
' → logprob: -8.034976959228516
    7. '        
' → logprob: -8.159976959228516
    8. '   ' → logprob: -8.284976959228516
    9. '    
' → logprob: -8.284976959228516
    10. 'if' (adapté à ' if') → logprob: -8.659976959228516

Token 92: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.0060580819845199585
    2. ' nodes' → logprob: -5.506058216094971
    3. 'size' → logprob: -6.256058216094971
    4. ' ' → logprob: -10.506057739257812
    5. 'nodes' → logprob: -10.631057739257812
    6. ' sizes' → logprob: -13.006057739257812
    7. ' not' → logprob: -13.006057739257812
    8. '(size' → logprob: -13.756057739257812
    9. '	size' → logprob: -14.506057739257812
    10. '(nodes' → logprob: -15.256057739257812

Token 93: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0001872094871941954
    2. 'is' → logprob: -8.875186920166016
    3. ':' → logprob: -10.500186920166016
    4. ' ' → logprob: -11.000186920166016
    5. '<|end|>' → logprob: -13.750186920166016
    6. '<|end|>' → logprob: -14.625186920166016
    7. ')' → logprob: -14.875186920166016
    8. '>' → logprob: -15.875186920166016
    9. ' not' → logprob: -16.000186920166016
    10. '	is' → logprob: -16.125186920166016

Token 94: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.006176917813718319
    2. 'not' → logprob: -5.506176948547363
    3. ' None' → logprob: -6.256176948547363
    4. ' ' → logprob: -8.881176948547363
    5. 'None' → logprob: -10.256176948547363
    6. '	not' → logprob: -13.756176948547363
    7. '<|end|>' → logprob: -14.881176948547363
    8. ' no' → logprob: -14.881176948547363
    9. ' n' → logprob: -15.131176948547363
    10. 'n' → logprob: -15.256176948547363

Token 95: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20143496990203857
    2. ' None' → logprob: -1.7014349699020386
    3. '_None' → logprob: -11.701435089111328
    4. ' ' → logprob: -12.451435089111328
    5. 'N' → logprob: -12.701435089111328
    6. '=None' → logprob: -13.076435089111328
    7. ' not' → logprob: -13.951435089111328
    8. 'not' → logprob: -14.201435089111328
    9. 'none' → logprob: -14.326435089111328
    10. '_none' → logprob: -14.701435089111328

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011728443205356598
    2. ':
' → logprob: -6.75117301940918
    3. ' :' → logprob: -13.25117301940918
    4. '):' → logprob: -14.25117301940918
    5. ':

' → logprob: -16.62617301940918
    6. '):
' → logprob: -16.87617301940918
    7. ':return' → logprob: -16.87617301940918
    8. ' and' → logprob: -17.50117301940918
    9. ':
' → logprob: -17.75117301940918
    10. '       ' → logprob: -17.87617301940918

Token 97: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04300855100154877
    2. ':
' → logprob: -3.16800856590271
    3. '       ' → logprob: -12.043008804321289
    4. '):' → logprob: -14.043008804321289
    5. '):
' → logprob: -14.043008804321289
    6. ':

' → logprob: -14.418008804321289
    7. ' and' → logprob: -15.043008804321289
    8. ':
' → logprob: -15.293008804321289
    9. ' :' → logprob: -15.668008804321289
    10. '   ' → logprob: -16.16800880432129

Token 98: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.606935441493988
    2. ' self' → logprob: -1.1069355010986328
    3. '       ' → logprob: -2.106935501098633
    4. ':' → logprob: -7.731935501098633
    5. '           ' → logprob: -7.856935501098633
    6. ',' → logprob: -7.981935501098633
    7. '   ' → logprob: -7.981935501098633
    8. '
' → logprob: -8.481935501098633
    9. 's' → logprob: -8.481935501098633
    10. '<|end|>' → logprob: -8.481935501098633

Token 99: '._' (ID: 2697)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.5364813208580017
    2. '.size' → logprob: -1.6614813804626465
    3. '.n' → logprob: -2.2864813804626465
    4. '._' → logprob: -2.5364813804626465
    5. '.parents' → logprob: -3.7864813804626465
    6. ' .' → logprob: -4.7864813804626465
    7. '.' → logprob: -4.7864813804626465
    8. '.rank' → logprob: -6.0364813804626465
    9. '.union' → logprob: -7.6614813804626465
    10. '.root' → logprob: -7.7864813804626465

Token 100: 'parents' (ID: 40404)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.042681463062763214
    2. 'par' → logprob: -3.9176814556121826
    3. 'size' → logprob: -4.667681694030762
    4. 'n' → logprob: -4.667681694030762
    5. 'parents' → logprob: -6.167681694030762
    6. '_par' → logprob: -7.917681694030762
    7. '_parent' → logprob: -8.042681694030762
    8. 'data' → logprob: -8.542681694030762
    9. 'pa' → logprob: -9.792681694030762
    10. 'p' → logprob: -11.042681694030762

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269427090883255
    2. '=' → logprob: -2.1269426345825195
    3. '=[' → logprob: -12.12694263458252
    4. ' =[' → logprob: -12.62694263458252
    5. ' ' → logprob: -13.00194263458252
    6. '=size' → logprob: -13.75194263458252
    7. '[' → logprob: -14.25194263458252
    8. '=[]' → logprob: -14.62694263458252
    9. '=list' → logprob: -15.12694263458252
    10. ',' → logprob: -15.87694263458252

Token 102: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0006484562181867659
    2. ' [-' → logprob: -7.750648498535156
    3. 'list' → logprob: -8.875648498535156
    4. '[list' → logprob: -9.750648498535156
    5. '[size' → logprob: -11.750648498535156
    6. ' list' → logprob: -12.000648498535156
    7. '[' → logprob: -12.250648498535156
    8. ' [' → logprob: -14.500648498535156
    9. '[node' → logprob: -16.500648498535156
    10. ' ' → logprob: -17.000648498535156

Token 103: 'i' (ID: 72)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015686016529798508
    2. '-i' → logprob: -4.26568603515625
    3. 'i' → logprob: -7.14068603515625
    4. ' -' → logprob: -7.39068603515625
    5. ' i' → logprob: -9.26568603515625
    6. '-n' → logprob: -11.89068603515625
    7. '-node' → logprob: -12.89068603515625
    8. '-l' → logprob: -13.76568603515625
    9. '	i' → logprob: -13.76568603515625
    10. '-self' → logprob: -13.89068603515625

Token 104: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008725075051188469
    2. 'for' → logprob: -4.758725166320801
    3. ' ' → logprob: -9.6337251663208
    4. '<|end|>' → logprob: -11.1337251663208
    5. '	for' → logprob: -11.3837251663208
    6. '
' → logprob: -11.7587251663208
    7. '-' → logprob: -12.6337251663208
    8. ' 
' → logprob: -13.1337251663208
    9. ')' → logprob: -13.2587251663208
    10. 'f' → logprob: -13.7587251663208

Token 105: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.038600899279117584
    2. ' range' → logprob: -3.4136009216308594
    3. 'range' → logprob: -6.163600921630859
    4. 'i' → logprob: -6.288600921630859
    5. ' ' → logprob: -7.538600921630859
    6. ' in' → logprob: -7.788600921630859
    7. '  ' → logprob: -10.78860092163086
    8. '	i' → logprob: -12.03860092163086
    9. '_range' → logprob: -13.16360092163086
    10. ' _' → logprob: -13.53860092163086

Token 106: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3760141134262085
    2. ' in' → logprob: -1.5010141134262085
    3. ' ' → logprob: -2.501014232635498
    4. 'range' → logprob: -5.126014232635498
    5. 'in' → logprob: -7.251014232635498
    6. ' xrange' → logprob: -7.251014232635498
    7. '  ' → logprob: -8.37601375579834
    8. '_range' → logprob: -8.37601375579834
    9. ' _' → logprob: -8.37601375579834
    10. ' i' → logprob: -8.75101375579834

Token 107: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804275393486023
    2. 'range' → logprob: -3.2880427837371826
    3. '	range' → logprob: -14.288043022155762
    4. '(range' → logprob: -14.663043022155762
    5. ' ' → logprob: -16.538042068481445
    6. ' xrange' → logprob: -16.788042068481445
    7. '_range' → logprob: -17.038042068481445
    8. '
' → logprob: -18.163042068481445
    9. '  ' → logprob: -18.288042068481445
    10. '   ' → logprob: -18.663042068481445

Token 108: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.0002445317804813385
    2. '(' → logprob: -8.375244140625
    3. ' (' → logprob: -11.250244140625
    4. ' size' → logprob: -14.625244140625
    5. '(s' → logprob: -15.750244140625
    6. '=size' → logprob: -16.250244140625
    7. '(space' → logprob: -16.250244140625
    8. 'size' → logprob: -17.000244140625
    9. ',size' → logprob: -17.250244140625
    10. '[size' → logprob: -17.750244140625

Token 109: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0020869735162705183
    2. ')]
' → logprob: -6.252087116241455
    3. ')' → logprob: -9.752086639404297
    4. ']' → logprob: -10.252086639404297
    5. ' )' → logprob: -10.377086639404297
    6. ')]

' → logprob: -11.252086639404297
    7. ' ]' → logprob: -12.002086639404297
    8. '       ' → logprob: -12.127086639404297
    9. ')]
' → logprob: -13.002086639404297
    10. '   ' → logprob: -13.877086639404297

Token 110: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1559908092021942
    2. '           ' → logprob: -2.4059908390045166
    3. ' self' → logprob: -3.4059908390045166
    4. '       ' → logprob: -3.9059908390045166
    5. '   ' → logprob: -7.7809906005859375
    6. '	self' → logprob: -8.030990600585938
    7. ' ' → logprob: -9.405990600585938
    8. '_self' → logprob: -10.405990600585938
    9. '  ' → logprob: -10.780990600585938
    10. ',self' → logprob: -11.155990600585938

Token 112: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0066240704618394375
    2. '.' → logprob: -5.131624221801758
    3. ']._' → logprob: -8.256624221801758
    4. ')._' → logprob: -8.381624221801758
    5. ' .' → logprob: -9.256624221801758
    6. '.size' → logprob: -9.631624221801758
    7. '.parent' → logprob: -11.881624221801758
    8. '.parents' → logprob: -12.506624221801758
    9. '.py' → logprob: -12.756624221801758
    10. '..' → logprob: -12.756624221801758

Token 113: 'r' (ID: 81)
  Prédit: 'sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.05821741744875908
    2. 'r' → logprob: -3.0582175254821777
    3. 'size' → logprob: -4.808217525482178
    4. 'rank' → logprob: -7.058217525482178
    5. 'siz' → logprob: -9.18321704864502
    6. '_sizes' → logprob: -9.30821704864502
    7. 'sz' → logprob: -9.55821704864502
    8. 'parents' → logprob: -9.55821704864502
    9. '_r' → logprob: -10.18321704864502
    10. 'counts' → logprob: -10.18321704864502

Token 114: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -0.048983484506607056
    2. 'ank' → logprob: -3.048983573913574
    3. 'a' → logprob: -9.798983573913574
    4. 'sizes' → logprob: -10.423983573913574
    5. '   ' → logprob: -10.611483573913574
    6. '[' → logprob: -10.736483573913574
    7. 'n' → logprob: -10.923983573913574
    8. '

' → logprob: -11.048983573913574
    9. '```' → logprob: -11.236483573913574
    10. '
' → logprob: -11.236483573913574

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004084455315023661
    2. '=' → logprob: -5.504084587097168
    3. ' ' → logprob: -12.129084587097168
    4. ' =[' → logprob: -14.629084587097168
    5. '=[]' → logprob: -16.25408363342285
    6. '  ' → logprob: -16.87908363342285
    7. '   ' → logprob: -16.87908363342285
    8. '[' → logprob: -17.37908363342285
    9. ')' → logprob: -17.50408363342285
    10. '<|end|>' → logprob: -17.75408363342285

Token 116: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1269425004720688
    2. ' [' → logprob: -2.1269423961639404
    3. '[size' → logprob: -11.50194263458252
    4. '   ' → logprob: -13.12694263458252
    5. ' ' → logprob: -13.62694263458252
    6. '[i' → logprob: -14.87694263458252
    7. '0' → logprob: -15.37694263458252
    8. ' ' → logprob: -16.251941680908203
    9. '[s' → logprob: -16.751941680908203
    10. '[len' → logprob: -16.876941680908203

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.625036239624023
    3. '1' → logprob: -11.375036239624023
    4. '   ' → logprob: -17.625036239624023
    5. '  ' → logprob: -19.000036239624023
    6. '۰' → logprob: -19.625036239624023
    7. '         ' → logprob: -20.312536239624023
    8. '(' → logprob: -20.437536239624023
    9. '０' → logprob: -20.562536239624023
    10. '000' → logprob: -20.625036239624023

Token 118: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03284590691328049
    2. ']*' → logprob: -3.657845973968506
    3. ' for' → logprob: -5.782845973968506
    4. ' ]' → logprob: -5.782845973968506
    5. ',' → logprob: -8.032845497131348
    6. ' ' → logprob: -11.032845497131348
    7. ']*(' → logprob: -11.282845497131348
    8. 'for' → logprob: -12.157845497131348
    9. ')' → logprob: -13.032845497131348
    10. ']+' → logprob: -13.407845497131348

Token 119: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1014418676495552
    2. ' _' → logprob: -2.8514418601989746
    3. ' ' → logprob: -3.4764418601989746
    4. ' i' → logprob: -4.976441860198975
    5. '(' → logprob: -7.601441860198975
    6. 'i' → logprob: -8.601442337036133
    7. '_i' → logprob: -9.226442337036133
    8. ' in' → logprob: -9.601442337036133
    9. '(i' → logprob: -10.976442337036133
    10. ' (' → logprob: -12.351442337036133

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0910506322979927
    2. 'in' → logprob: -2.591050624847412
    3. 'range' → logprob: -4.466050624847412
    4. ' ' → logprob: -8.21605110168457
    5. 'size' → logprob: -8.59105110168457
    6. ' range' → logprob: -9.96605110168457
    7. 'i' → logprob: -9.96605110168457
    8. '(range' → logprob: -11.09105110168457
    9. '(size' → logprob: -11.21605110168457
    10. '  ' → logprob: -12.71605110168457

Token 121: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04303412884473801
    2. ' range' → logprob: -3.168034076690674
    3. 'size' → logprob: -11.418034553527832
    4. '(range' → logprob: -11.543034553527832
    5. ' ' → logprob: -11.793034553527832
    6. '   ' → logprob: -13.168034553527832
    7. '	range' → logprob: -13.418034553527832
    8. '  ' → logprob: -14.043034553527832
    9. ' size' → logprob: -14.418034553527832
    10. 'ange' → logprob: -14.668034553527832

Token 122: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. '(s' → logprob: -15.87500286102295
    4. ' (' → logprob: -18.375001907348633
    5. '(si' → logprob: -19.000001907348633
    6. 'size' → logprob: -19.125001907348633
    7. '(
' → logprob: -19.125001907348633
    8. ',size' → logprob: -19.250001907348633
    9. ' size' → logprob: -19.750001907348633
    10. '=size' → logprob: -19.875001907348633

Token 123: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007589825429022312
    2. ')' → logprob: -5.257589817047119
    3. ']
' → logprob: -6.757589817047119
    4. ')]' → logprob: -7.382589817047119
    5. '       ' → logprob: -7.632589817047119
    6. '           ' → logprob: -10.257590293884277
    7. ' ]' → logprob: -10.882590293884277
    8. '])' → logprob: -11.382590293884277
    9. '   ' → logprob: -11.757590293884277
    10. ')
' → logprob: -12.007590293884277

Token 124: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00830711331218481
    2. '<|end|>' → logprob: -4.883306980133057
    3. 'else' → logprob: -8.383307456970215
    4. 'elif' → logprob: -8.508307456970215
    5. '<|end|>' → logprob: -9.383307456970215
    6. ' else' → logprob: -9.633307456970215
    7. '	' → logprob: -11.133307456970215
    8. ',' → logprob: -11.133307456970215
    9. ')' → logprob: -11.258307456970215
    10. '	elif' → logprob: -11.383307456970215

Token 125: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10287990421056747
    2. '           ' → logprob: -2.6028800010681152
    3. '       ' → logprob: -4.227880001068115
    4. ' self' → logprob: -5.352880001068115
    5. 'else' → logprob: -5.602880001068115
    6. '
' → logprob: -8.102879524230957
    7. 'elif' → logprob: -8.602879524230957
    8. '   ' → logprob: -9.477879524230957
    9. 'return' → logprob: -10.352879524230957
    10. ' else' → logprob: -10.852879524230957

Token 126: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.004351910203695297
    2. '.' → logprob: -5.50435209274292
    3. '.size' → logprob: -8.754351615905762
    4. ' .' → logprob: -10.504351615905762
    5. '.__' → logprob: -11.129351615905762
    6. '.count' → logprob: -11.379351615905762
    7. ' ' → logprob: -12.129351615905762
    8. '.is' → logprob: -12.379351615905762
    9. ']._' → logprob: -12.379351615905762
    10. ')._' → logprob: -12.379351615905762

Token 127: 'sizes' (ID: 131812)
  Prédit: 'sizes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.032989516854286194
    2. 'size' → logprob: -3.782989501953125
    3. 'counts' → logprob: -5.157989501953125
    4. 'siz' → logprob: -6.907989501953125
    5. '_sizes' → logprob: -7.157989501953125
    6. 'roots' → logprob: -7.907989501953125
    7. 'parents' → logprob: -7.907989501953125
    8. 'count' → logprob: -8.157989501953125
    9. '_size' → logprob: -8.407989501953125
    10. 'sz' → logprob: -8.407989501953125

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804837539792061
    2. '=' → logprob: -3.288048267364502
    3. ' ' → logprob: -12.53804874420166
    4. ' =[' → logprob: -13.66304874420166
    5. '=[' → logprob: -14.03804874420166
    6. '[' → logprob: -14.03804874420166
    7. ')' → logprob: -15.53804874420166
    8. '=[]' → logprob: -15.78804874420166
    9. ']' → logprob: -15.78804874420166
    10. ' ' → logprob: -17.163047790527344

Token 129: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1215280145406723
    2. ' [' → logprob: -2.371527910232544
    3. '[size' → logprob: -3.871527910232544
    4. '[i' → logprob: -8.496527671813965
    5. '[s' → logprob: -10.996527671813965
    6. '[length' → logprob: -11.746527671813965
    7. '[I' → logprob: -11.871527671813965
    8. ' ' → logprob: -12.246527671813965
    9. '[count' → logprob: -12.496527671813965
    10. '[len' → logprob: -12.621527671813965

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.250024795532227
    4. '
' → logprob: -16.125024795532227
    5. '  ' → logprob: -16.500024795532227
    6. '１' → logprob: -17.625024795532227
    7. '۱' → logprob: -18.000024795532227
    8. ']' → logprob: -18.000024795532227
    9. '0' → logprob: -18.187524795532227
    10. ')' → logprob: -18.375024795532227

Token 131: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0047556147910654545
    2. 'for' → logprob: -5.37975549697876
    3. ' ' → logprob: -9.629755973815918
    4. ']' → logprob: -9.629755973815918
    5. ',' → logprob: -13.504755973815918
    6. ')' → logprob: -14.129755973815918
    7. '	for' → logprob: -14.254755973815918
    8. ']*' → logprob: -14.629755973815918
    9. ' if' → logprob: -14.879755973815918
    10. '
' → logprob: -15.629755973815918

Token 132: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0031869823578745127
    2. ' _' → logprob: -5.75318717956543
    3. ' ' → logprob: -11.62818717956543
    4. ' ' → logprob: -16.87818717956543
    5. ' i' → logprob: -17.12818717956543
    6. ' in' → logprob: -17.37818717956543
    7. '_range' → logprob: -17.50318717956543
    8. ' range' → logprob: -17.50318717956543
    9. '_
' → logprob: -18.00318717956543
    10. '_i' → logprob: -18.25318717956543

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2951625883579254
    2. '_' → logprob: -2.0451626777648926
    3. 'range' → logprob: -2.4201626777648926
    4. 'in' → logprob: -3.9201626777648926
    5. ' ' → logprob: -4.545162677764893
    6. ' range' → logprob: -5.170162677764893
    7. ' _' → logprob: -7.795162677764893
    8. '_range' → logprob: -7.920162677764893
    9. ' i' → logprob: -8.920162200927734
    10. 'i' → logprob: -9.045162200927734

Token 134: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01429290883243084
    2. ' range' → logprob: -4.2642927169799805
    3. '_' → logprob: -9.01429271697998
    4. '_range' → logprob: -12.13929271697998
    5. 'size' → logprob: -13.51429271697998
    6. ' ' → logprob: -15.01429271697998
    7. '(range' → logprob: -15.63929271697998
    8. '	range' → logprob: -15.63929271697998
    9. ' _' → logprob: -16.389293670654297
    10. 'r' → logprob: -16.639293670654297

Token 135: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.0004068395064678043
    2. 'size' → logprob: -8.000407218933105
    3. ' size' → logprob: -9.625407218933105
    4. '(' → logprob: -12.875407218933105
    5. ' (' → logprob: -12.875407218933105
    6. ',size' → logprob: -16.62540626525879
    7. '(s' → logprob: -16.62540626525879
    8. '<size' → logprob: -17.50040626525879
    9. '[size' → logprob: -17.62540626525879
    10. '=size' → logprob: -17.62540626525879

Token 136: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2690100371837616
    2. ')]' → logprob: -1.519010066986084
    3. ')' → logprob: -4.269010066986084
    4. ']
' → logprob: -6.519010066986084
    5. '])' → logprob: -6.769010066986084
    6. '       ' → logprob: -8.519009590148926
    7. ')
' → logprob: -10.269009590148926
    8. ')]
' → logprob: -10.644009590148926
    9. ' ]' → logprob: -11.019009590148926
    10. '           ' → logprob: -11.644009590148926

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10784206539392471
    2. '<|end|>' → logprob: -2.357841968536377
    3. '
' → logprob: -5.482841968536377
    4. 'else' → logprob: -7.357841968536377
    5. ' else' → logprob: -7.607841968536377
    6. 'elif' → logprob: -7.857841968536377
    7. '<|end|>' → logprob: -7.857841968536377
    8. ')' → logprob: -7.982841968536377
    9. ',' → logprob: -8.107842445373535
    10. '   ' → logprob: -8.232842445373535

Token 138: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.18731746077537537
    2. 'elif' → logprob: -2.187317371368408
    3. '       ' → logprob: -3.062317371368408
    4. ' else' → logprob: -4.562317371368408
    5. ' elif' → logprob: -7.312317371368408
    6. '   ' → logprob: -7.687317371368408
    7. 'if' → logprob: -8.312317848205566
    8. ' if' → logprob: -12.812317848205566
    9. '	elif' → logprob: -13.437317848205566
    10. '	else' → logprob: -13.437317848205566

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011066209524869919
    2. ':
' → logprob: -4.511066436767578
    3. ' :' → logprob: -11.886066436767578
    4. '       ' → logprob: -12.136066436767578
    5. '<|end|>' → logprob: -13.511066436767578
    6. ':

' → logprob: -14.136066436767578
    7. ',' → logprob: -14.261066436767578
    8. '):' → logprob: -14.511066436767578
    9. ' :
' → logprob: -15.136066436767578
    10. '):
' → logprob: -15.136066436767578

Token 140: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005714281927794218
    2. '           ' → logprob: -6.380714416503906
    3. ':' → logprob: -6.505714416503906
    4. 'self' → logprob: -6.505714416503906
    5. ':
' → logprob: -7.630714416503906
    6. '   ' → logprob: -8.380714416503906
    7. '<|end|>' → logprob: -9.255714416503906
    8. ' self' → logprob: -9.505714416503906
    9. '```' → logprob: -10.005714416503906
    10. '	       ' → logprob: -10.880714416503906

Token 141: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.42112112045288086
    2. '       ' → logprob: -1.2961211204528809
    3. 'n' → logprob: -3.421121120452881
    4. 'node' → logprob: -3.921121120452881
    5. 'nodes' → logprob: -4.796121120452881
    6. ' self' → logprob: -4.921121120452881
    7. 'size' → logprob: -7.296121120452881
    8. ' n' → logprob: -8.046121597290039
    9. ' node' → logprob: -8.296121597290039
    10. 'assert' → logprob: -8.546121597290039

Token 142: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00031162876985035837
    2. '.' → logprob: -8.375311851501465
    3. ' .' → logprob: -10.875311851501465
    4. '_nodes' → logprob: -10.875311851501465
    5. '=' → logprob: -11.500311851501465
    6. '_' → logprob: -12.250311851501465
    7. ' =' → logprob: -12.500311851501465
    8. '_size' → logprob: -12.500311851501465
    9. '
' → logprob: -12.875311851501465
    10. 's' → logprob: -13.250311851501465

Token 143: 'parents' (ID: 40404)
  Prédit: 'parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.0012936893617734313
    2. 'sizes' → logprob: -7.251293659210205
    3. 'r' → logprob: -8.876294136047363
    4. '_par' → logprob: -9.126294136047363
    5. 'size' → logprob: -9.751294136047363
    6. 'nodes' → logprob: -9.876294136047363
    7. '_sizes' → logprob: -10.126294136047363
    8. 'parent' → logprob: -10.126294136047363
    9. '.parents' → logprob: -10.251294136047363
    10. '_size' → logprob: -11.001294136047363

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048597704619169235
    2. ' =' → logprob: -3.048597812652588
    3. '[' → logprob: -12.67359733581543
    4. '={}' → logprob: -12.67359733581543
    5. '={' → logprob: -13.92359733581543
    6. ',' → logprob: -14.04859733581543
    7. '{' → logprob: -14.54859733581543
    8. ':' → logprob: -14.67359733581543
    9. '=[' → logprob: -14.67359733581543
    10. '=dict' → logprob: -15.29859733581543

Token 145: ' {' (ID: 354)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.013406439684331417
    2. ' [' → logprob: -4.638406276702881
    3. '{' → logprob: -6.763406276702881
    4. '[' → logprob: -7.013406276702881
    5. '[node' → logprob: -7.138406276702881
    6. '[list' → logprob: -7.513406276702881
    7. '[i' → logprob: -9.638406753540039
    8. 'list' → logprob: -10.263406753540039
    9. ' {' → logprob: -10.513406753540039
    10. '{}' → logprob: -11.013406753540039

Token 146: 'k' (ID: 74)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.03419755771756172
    2. 'n' → logprob: -3.5341975688934326
    3. ' node' → logprob: -6.0341973304748535
    4. 'i' → logprob: -7.1591973304748535
    5. 'u' → logprob: -7.9091973304748535
    6. 'x' → logprob: -7.9091973304748535
    7. 'k' → logprob: -8.409197807312012
    8. 'v' → logprob: -9.284197807312012
    9. '   ' → logprob: -9.409197807312012
    10. ' n' → logprob: -10.034197807312012

Token 147: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2019384205341339
    2. ':k' → logprob: -1.7019383907318115
    3. ' :' → logprob: -7.576938629150391
    4. ':i' → logprob: -11.95193862915039
    5. 'for' → logprob: -13.82693862915039
    6. ':v' → logprob: -13.95193862915039
    7. '   ' → logprob: -14.32693862915039
    8. ' for' → logprob: -14.57693862915039
    9. ':
' → logprob: -14.95193862915039
    10. ':key' → logprob: -14.95193862915039

Token 148: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00014656837447546422
    2. ' k' → logprob: -9.125146865844727
    3. 'v' → logprob: -10.375146865844727
    4. '	k' → logprob: -12.625146865844727
    5. '
' → logprob: -13.500146865844727
    6. ' ' → logprob: -14.625146865844727
    7. '{k' → logprob: -15.875146865844727
    8. '   ' → logprob: -16.062646865844727
    9. '<|end|>' → logprob: -16.500146865844727
    10. ' 
' → logprob: -16.687646865844727

Token 149: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20141734182834625
    2. ' for' → logprob: -1.701417326927185
    3. ',' → logprob: -13.076416969299316
    4. '	for' → logprob: -13.701416969299316
    5. ' ' → logprob: -14.576416969299316
    6. '}' → logprob: -15.701416969299316
    7. '
' → logprob: -16.451417922973633
    8. '   ' → logprob: -17.076417922973633
    9. ')' → logprob: -17.451417922973633
    10. '

' → logprob: -19.076417922973633

Token 150: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023246178403496742
    2. ' k' → logprob: -3.7732462882995605
    3. '	k' → logprob: -14.898245811462402
    4. ' ' → logprob: -15.898245811462402
    5. 'v' → logprob: -16.39824676513672
    6. 'n' → logprob: -17.14824676513672
    7. ' ' → logprob: -17.27324676513672
    8. '
' → logprob: -18.64824676513672
    9. 'node' → logprob: -18.89824676513672
    10. ' node' → logprob: -18.89824676513672

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.37224164605140686
    2. 'k' → logprob: -1.7472416162490845
    3. 'in' → logprob: -1.9972416162490845
    4. ' k' → logprob: -7.122241497039795
    5. ' ' → logprob: -11.497241973876953
    6. 'n' → logprob: -12.122241973876953
    7. ',k' → logprob: -12.247241973876953
    8. ',' → logprob: -12.497241973876953
    9. 'i' → logprob: -12.497241973876953
    10. '
' → logprob: -13.247241973876953

Token 152: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.02635987289249897
    2. ' nodes' → logprob: -3.651359796524048
    3. '(nodes' → logprob: -10.526359558105469
    4. '
' → logprob: -11.151359558105469
    5. '	nodes' → logprob: -11.401359558105469
    6. ' ' → logprob: -13.026359558105469
    7. '   ' → logprob: -13.526359558105469
    8. 'node' → logprob: -13.776359558105469
    9. '.nodes' → logprob: -14.776359558105469
    10. 'range' → logprob: -15.026359558105469

Token 153: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.001283567980863154
    2. '       ' → logprob: -7.251283645629883
    3. '}
' → logprob: -7.751283645629883
    4. '           ' → logprob: -9.626283645629883
    5. '<|end|>' → logprob: -10.126283645629883
    6. ' }' → logprob: -11.251283645629883
    7. ',' → logprob: -11.751283645629883
    8. ')' → logprob: -11.876283645629883
    9. '               ' → logprob: -12.751283645629883
    10. '<|end|>' → logprob: -13.251283645629883

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01661992259323597
    2. 'self' → logprob: -4.14162015914917
    3. '       ' → logprob: -7.51662015914917
    4. ' self' → logprob: -10.766619682312012
    5. '   ' → logprob: -11.141619682312012
    6. '          ' → logprob: -13.891619682312012
    7. '<|end|>' → logprob: -14.016619682312012
    8. '	       ' → logprob: -14.141619682312012
    9. '	self' → logprob: -14.266619682312012
    10. '               ' → logprob: -14.391619682312012

Token 155: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0010189944878220558
    2. ' self' → logprob: -7.25101900100708
    3. '           ' → logprob: -8.251018524169922
    4. '       ' → logprob: -10.126018524169922
    5. 'from' → logprob: -12.251018524169922
    6. '	self' → logprob: -13.626018524169922
    7. '   ' → logprob: -13.751018524169922
    8. ' ' → logprob: -14.876018524169922
    9. 's' → logprob: -16.126018524169922
    10. '(self' → logprob: -16.251018524169922

Token 156: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0009032421512529254
    2. '.' → logprob: -8.000903129577637
    3. '_r' → logprob: -8.375903129577637
    4. '.r' → logprob: -8.500903129577637
    5. '_' → logprob: -9.625903129577637
    6. ' .' → logprob: -10.250903129577637
    7. '   ' → logprob: -11.875903129577637
    8. ']._' → logprob: -12.625903129577637
    9. '_sizes' → logprob: -12.750903129577637
    10. ' ' → logprob: -12.875903129577637

Token 157: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00022046364028938115
    2. 'sizes' → logprob: -8.87522029876709
    3. '_r' → logprob: -9.87522029876709
    4. 'parents' → logprob: -11.00022029876709
    5. 'anks' → logprob: -12.37522029876709
    6. ' ranks' → logprob: -12.50022029876709
    7. 'Ranks' → logprob: -14.37522029876709
    8. 'rank' → logprob: -14.37522029876709
    9. '_sizes' → logprob: -14.50022029876709
    10. '   ' → logprob: -14.87522029876709

Token 158: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -0.000192812061868608
    2. 'ank' → logprob: -9.000192642211914
    3. 'a' → logprob: -10.875192642211914
    4. 'r' → logprob: -11.875192642211914
    5. 'n' → logprob: -12.125192642211914
    6. 's' → logprob: -12.250192642211914
    7. 'ights' → logprob: -12.750192642211914
    8. 'an' → logprob: -12.875192642211914
    9. '[' → logprob: -13.000192642211914
    10. '```' → logprob: -13.125192642211914

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026330720633268356
    2. '=' → logprob: -3.6513307094573975
    3. ':' → logprob: -10.651330947875977
    4. ' ' → logprob: -12.276330947875977
    5. '[' → logprob: -13.901330947875977
    6. ' ={' → logprob: -14.276330947875977
    7. '<|end|>' → logprob: -15.651330947875977
    8. ')' → logprob: -15.901330947875977
    9. 's' → logprob: -16.901330947875977
    10. ' :' → logprob: -16.901330947875977

Token 160: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.49271178245544434
    2. '{k' → logprob: -0.9927117824554443
    3. ' {' → logprob: -3.9927117824554443
    4. '{i' → logprob: -11.617712020874023
    5. 'default' → logprob: -14.492712020874023
    6. '{x' → logprob: -14.617712020874023
    7. 'dict' → logprob: -14.617712020874023
    8. '{id' → logprob: -14.867712020874023
    9. '{}' → logprob: -14.992712020874023
    10. '   ' → logprob: -15.117712020874023

Token 161: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.000713266315869987
    2. ' k' → logprob: -7.250713348388672
    3. '   ' → logprob: -13.125713348388672
    4. '{k' → logprob: -14.500713348388672
    5. ' ' → logprob: -15.000713348388672
    6. 'node' → logprob: -16.000713348388672
    7. '
' → logprob: -16.375713348388672
    8. '0' → logprob: -16.625713348388672
    9. '(k' → logprob: -16.875713348388672
    10. '    ' → logprob: -17.000713348388672

Token 162: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.735893965815194e-05
    2. ' :' → logprob: -11.000017166137695
    3. '0' → logprob: -15.375017166137695
    4. ':k' → logprob: -15.375017166137695
    5. ' ' → logprob: -17.125017166137695
    6. '   ' → logprob: -17.500017166137695
    7. ':return' → logprob: -17.500017166137695
    8. ':
' → logprob: -17.625017166137695
    9. '1' → logprob: -17.625017166137695
    10. 'for' → logprob: -18.625017166137695

Token 163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620353225618601
    2. ' ' → logprob: -5.379620552062988
    3. '  ' → logprob: -16.629619598388672
    4. '   ' → logprob: -17.004619598388672
    5. '
' → logprob: -17.442119598388672
    6. '1' → logprob: -17.942119598388672
    7. '۰' → logprob: -18.067119598388672
    8. '

' → logprob: -18.567119598388672
    9. ' ' → logprob: -18.692119598388672
    10. '０' → logprob: -18.692119598388672

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. 'for' → logprob: -17.875123977661133
    4. '۰' → logprob: -18.250123977661133
    5. '
' → logprob: -18.312623977661133
    6. '1' → logprob: -18.312623977661133
    7. '

' → logprob: -18.375123977661133
    8. '   ' → logprob: -18.937623977661133
    9. '０' → logprob: -19.062623977661133
    10. '  ' → logprob: -19.187623977661133

Token 165: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3134285807609558
    2. 'for' → logprob: -1.3134286403656006
    3. ',' → logprob: -8.81342887878418
    4. ' ' → logprob: -11.06342887878418
    5. '}' → logprob: -13.31342887878418
    6. ' fo' → logprob: -15.31342887878418
    7. ' f' → logprob: -15.93842887878418
    8. '	for' → logprob: -16.06342887878418
    9. ')' → logprob: -16.43842887878418
    10. ' ' → logprob: -16.68842887878418

Token 166: ' k' (ID: 372)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.28679004311561584
    2. 'nodes' → logprob: -1.5367900133132935
    3. 'k' → logprob: -3.536790132522583
    4. ' k' → logprob: -5.286789894104004
    5. '_nodes' → logprob: -9.661789894104004
    6. '_k' → logprob: -11.286789894104004
    7. '	nodes' → logprob: -11.786789894104004
    8. '(nodes' → logprob: -12.036789894104004
    9. '_' → logprob: -12.911789894104004
    10. ' ' → logprob: -14.036789894104004

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048656292259693146
    2. 'in' → logprob: -3.0486562252044678
    3. ' ' → logprob: -9.923656463623047
    4. 'nodes' → logprob: -11.173656463623047
    5. 'n' → logprob: -12.923656463623047
    6. ' nodes' → logprob: -13.298656463623047
    7. '_nodes' → logprob: -14.423656463623047
    8. 'k' → logprob: -14.423656463623047
    9. '_' → logprob: -16.048656463623047
    10. '(nodes' → logprob: -16.298656463623047

Token 168: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.1799507737159729
    2. ' nodes' → logprob: -1.8049507141113281
    3. '(nodes' → logprob: -8.929950714111328
    4. '	nodes' → logprob: -10.304950714111328
    5. ' ' → logprob: -11.304950714111328
    6. '_nodes' → logprob: -11.679950714111328
    7. '.nodes' → logprob: -11.804950714111328
    8. '
' → logprob: -12.554950714111328
    9. '   ' → logprob: -13.054950714111328
    10. 'tokens' → logprob: -13.554950714111328

Token 169: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.002034988021478057
    2. '       ' → logprob: -6.627035140991211
    3. '}
' → logprob: -7.377035140991211
    4. '           ' → logprob: -10.002035140991211
    5. ' }' → logprob: -10.752035140991211
    6. ',' → logprob: -11.377035140991211
    7. '   ' → logprob: -12.752035140991211
    8. ')' → logprob: -14.002035140991211
    9. '               ' → logprob: -15.127035140991211
    10. '<|end|>' → logprob: -15.877035140991211

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.751746746478602e-05
    2. '       ' → logprob: -10.37504768371582
    3. '   ' → logprob: -11.75004768371582
    4. 'self' → logprob: -12.50004768371582
    5. '<|end|>' → logprob: -13.25004768371582
    6. '          ' → logprob: -13.87504768371582
    7. '         ' → logprob: -14.87504768371582
    8. ' self' → logprob: -15.37504768371582
    9. '            
' → logprob: -15.62504768371582
    10. ' ' → logprob: -15.75004768371582

Token 171: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010126946493983269
    2. ' self' → logprob: -4.760127067565918
    3. '           ' → logprob: -6.510127067565918
    4. '   ' → logprob: -11.885127067565918
    5. '       ' → logprob: -12.010127067565918
    6. '	self' → logprob: -12.260127067565918
    7. ' ' → logprob: -12.385127067565918
    8. '  ' → logprob: -14.760127067565918
    9. '(self' → logprob: -15.635127067565918
    10. '_self' → logprob: -16.6351261138916

Token 172: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0007336281123571098
    2. '_sizes' → logprob: -7.625733852386475
    3. '_' → logprob: -8.625733375549316
    4. '_s' → logprob: -10.250733375549316
    5. '.' → logprob: -10.625733375549316
    6. ']._' → logprob: -13.500733375549316
    7. ')._' → logprob: -14.000733375549316
    8. ' .' → logprob: -14.250733375549316
    9. '."_' → logprob: -14.375733375549316
    10. '.__' → logprob: -14.875733375549316

Token 173: 'sizes' (ID: 131812)
  Prédit: 'sizes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.0007381578907370567
    2. '_sizes' → logprob: -7.250738143920898
    3. ' sizes' → logprob: -10.750738143920898
    4. 'size' → logprob: -12.625738143920898
    5. 'parents' → logprob: -13.625738143920898
    6. 's' → logprob: -13.750738143920898
    7. 'siz' → logprob: -14.625738143920898
    8. '_s' → logprob: -16.0007381439209
    9. 'izes' → logprob: -16.3757381439209
    10. '
' → logprob: -16.5007381439209

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695088982582092
    2. '=' → logprob: -2.126950979232788
    3. '<|end|>' → logprob: -11.251951217651367
    4. ' ' → logprob: -12.126951217651367
    5. '[' → logprob: -13.001951217651367
    6. ')' → logprob: -14.376951217651367
    7. ' ={' → logprob: -14.501951217651367
    8. '{' → logprob: -14.876951217651367
    9. ':' → logprob: -15.626951217651367
    10. 's' → logprob: -15.751951217651367

Token 175: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.19128471612930298
    2. '{' → logprob: -2.441284656524658
    3. '{k' → logprob: -2.441284656524658
    4. '{i' → logprob: -12.941285133361816
    5. ' ' → logprob: -14.691285133361816
    6. '{s' → logprob: -14.816285133361816
    7. '{x' → logprob: -14.941285133361816
    8. '{id' → logprob: -14.941285133361816
    9. '{return' → logprob: -15.066285133361816
    10. '{name' → logprob: -15.691285133361816

Token 176: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.704273118884885e-07
    2. ' k' → logprob: -14.625000953674316
    3. '{k' → logprob: -16.125
    4. '
' → logprob: -17.5
    5. '   ' → logprob: -18.0
    6. ' ' → logprob: -19.125
    7. '(k' → logprob: -19.25
    8. '{' → logprob: -20.25
    9. '<|end|>' → logprob: -20.25
    10. '```' → logprob: -20.5

Token 177: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.288163083605468e-05
    2. ' :' → logprob: -9.875052452087402
    3. '1' → logprob: -14.750052452087402
    4. 'for' → logprob: -15.375052452087402
    5. ' for' → logprob: -15.500052452087402
    6. ':k' → logprob: -15.500052452087402
    7. ' ' → logprob: -16.37505340576172
    8. ':
' → logprob: -16.62505340576172
    9. '0' → logprob: -17.12505340576172
    10. '[' → logprob: -17.12505340576172

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889287173748016
    2. ' ' → logprob: -2.578892946243286
    3. '
' → logprob: -13.578892707824707
    4. '   ' → logprob: -14.891392707824707
    5. 'for' → logprob: -15.578892707824707
    6. '  ' → logprob: -15.703892707824707
    7. ' ' → logprob: -15.703892707824707
    8. ' for' → logprob: -15.953892707824707
    9. '```' → logprob: -15.953892707824707
    10. '<|end|>' → logprob: -16.328893661499023

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '
' → logprob: -17.000024795532227
    4. '   ' → logprob: -17.750024795532227
    5. '```' → logprob: -17.750024795532227
    6. '

' → logprob: -18.625024795532227
    7. 'for' → logprob: -18.687524795532227
    8. '{' → logprob: -18.875024795532227
    9. '۱' → logprob: -19.187524795532227
    10. '  ' → logprob: -19.312524795532227

Token 180: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16022758185863495
    2. 'for' → logprob: -1.9102275371551514
    3. ' ' → logprob: -13.28522777557373
    4. '}' → logprob: -13.41022777557373
    5. '	for' → logprob: -16.785226821899414
    6. 'k' → logprob: -16.785226821899414
    7. ',' → logprob: -17.160226821899414
    8. ')' → logprob: -17.410226821899414
    9. ' k' → logprob: -17.910226821899414
    10. ' ' → logprob: -18.035226821899414

Token 181: ' k' (ID: 372)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.32337063550949097
    2. ' k' → logprob: -2.1983706951141357
    3. 'k' → logprob: -2.3233706951141357
    4. 'nodes' → logprob: -2.6983706951141357
    5. '(nodes' → logprob: -11.198370933532715
    6. '_nodes' → logprob: -11.448370933532715
    7. ' ' → logprob: -11.823370933532715
    8. '	nodes' → logprob: -12.073370933532715
    9. '_k' → logprob: -12.573370933532715
    10. '
' → logprob: -12.698370933532715

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029767030850052834
    2. 'in' → logprob: -3.5297670364379883
    3. 'nodes' → logprob: -11.279767036437988
    4. ' ' → logprob: -13.154767036437988
    5. 'k' → logprob: -13.904767036437988
    6. ' nodes' → logprob: -14.529767036437988
    7. 'n' → logprob: -15.404767036437988
    8. '_nodes' → logprob: -16.529766082763672
    9. 's' → logprob: -16.654766082763672
    10. 'ins' → logprob: -17.279766082763672

Token 183: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.17979320883750916
    2. ' nodes' → logprob: -1.8047932386398315
    3. '(nodes' → logprob: -10.679793357849121
    4. '	nodes' → logprob: -11.179793357849121
    5. '_nodes' → logprob: -12.554793357849121
    6. '.nodes' → logprob: -13.054793357849121
    7. ' ' → logprob: -13.179793357849121
    8. '
' → logprob: -13.679793357849121
    9. 'node' → logprob: -13.929793357849121
    10. '   ' → logprob: -14.929793357849121

Token 184: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -8.315936429426074e-05
    2. '       ' → logprob: -9.625082969665527
    3. '}
' → logprob: -11.625082969665527
    4. ' }' → logprob: -12.625082969665527
    5. ')' → logprob: -13.000082969665527
    6. '   ' → logprob: -13.500082969665527
    7. '})' → logprob: -14.125082969665527
    8. '}

' → logprob: -15.625082969665527
    9. '           ' → logprob: -16.000083923339844
    10. '	' → logprob: -16.875083923339844

Token 185: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.288308322429657
    2. '   ' → logprob: -1.4133083820343018
    3. ' def' → logprob: -5.413308143615723
    4. '    
' → logprob: -6.788308143615723
    5. '	def' → logprob: -7.163308143615723
    6. '       ' → logprob: -8.538308143615723
    7. '<|end|>' → logprob: -8.663308143615723
    8. '
' → logprob: -9.163308143615723
    9. ' 
' → logprob: -10.038308143615723
    10. ')' → logprob: -10.038308143615723

Token 186: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008620839565992355
    2. ' def' → logprob: -4.883620738983154
    3. '   ' → logprob: -7.008620738983154
    4. '
' → logprob: -10.008621215820312
    5. '    
' → logprob: -10.258621215820312
    6. ' 
' → logprob: -11.633621215820312
    7. '	def' → logprob: -11.758621215820312
    8. ' ' → logprob: -12.258621215820312
    9. '        
' → logprob: -13.383621215820312
    10. '  
' → logprob: -13.508621215820312

Token 187: ' unite' (ID: 96146)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.009967854246497154
    2. 'find' → logprob: -4.634967803955078
    3. ' root' → logprob: -9.134967803955078
    4. ' ' → logprob: -9.884967803955078
    5. '_find' → logprob: -11.884967803955078
    6. ' union' → logprob: -12.134967803955078
    7. ' unite' → logprob: -12.259967803955078
    8. '	find' → logprob: -12.259967803955078
    9. '  ' → logprob: -12.509967803955078
    10. 'root' → logprob: -12.634967803955078

Token 188: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5761687159538269
    2. '(self' → logprob: -0.8261687159538269
    3. '(s' → logprob: -9.20116901397705
    4. ' (' → logprob: -9.70116901397705
    5. 'self' → logprob: -10.95116901397705
    6. '(a' → logprob: -10.95116901397705
    7. '(
' → logprob: -11.70116901397705
    8. '(this' → logprob: -12.20116901397705
    9. '(sel' → logprob: -13.07616901397705
    10. '(Self' → logprob: -13.32616901397705

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005732863210141659
    2. ' ,' → logprob: -7.50057315826416
    3. 'self' → logprob: -11.25057315826416
    4. '   ' → logprob: -13.50057315826416
    5. '_,' → logprob: -13.62557315826416
    6. '       ' → logprob: -13.75057315826416
    7. ',u' → logprob: -14.00057315826416
    8. ',a' → logprob: -14.12557315826416
    9. ',x' → logprob: -14.87557315826416
    10. ')' → logprob: -15.12557315826416

Token 190: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.013904205523431301
    2. ' x' → logprob: -4.388904094696045
    3. 'self' → logprob: -7.263904094696045
    4. 'a' → logprob: -7.388904094696045
    5. 'u' → logprob: -10.388904571533203
    6. ' self' → logprob: -11.138904571533203
    7. ' a' → logprob: -11.263904571533203
    8. '   ' → logprob: -12.388904571533203
    9. ' u' → logprob: -13.388904571533203
    10. ' ' → logprob: -13.388904571533203

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4855663721391466e-05
    2. ' ,' → logprob: -11.125015258789062
    3. '‌,' → logprob: -18.125015258789062
    4. ',
' → logprob: -18.375015258789062
    5. ':' → logprob: -19.125015258789062
    6. ',y' → logprob: -19.250015258789062
    7. ',x' → logprob: -19.500015258789062
    8. '_,' → logprob: -20.125015258789062
    9. '1' → logprob: -20.750015258789062
    10. '   ' → logprob: -20.875015258789062

Token 192: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.313262403011322
    2. ' y' → logprob: -1.3132624626159668
    3. '	y' → logprob: -14.938261985778809
    4. ' ' → logprob: -15.313261985778809
    5. '   ' → logprob: -16.813262939453125
    6. '    ' → logprob: -17.938262939453125
    7. '  ' → logprob: -18.063262939453125
    8. ')y' → logprob: -18.063262939453125
    9. 'b' → logprob: -19.188262939453125
    10. ''y' → logprob: -19.313262939453125

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002699662698432803
    2. ')' → logprob: -6.252699851989746
    3. '):
' → logprob: -7.252699851989746
    4. ' ):' → logprob: -9.877699851989746
    5. '):
' → logprob: -11.627699851989746
    6. ':' → logprob: -14.252699851989746
    7. '):

' → logprob: -14.752699851989746
    8. ')：' → logprob: -15.127699851989746
    9. ' ' → logprob: -15.377699851989746
    10. ' )' → logprob: -15.502699851989746

Token 194: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4183545410633087
    2. '       ' → logprob: -1.2933545112609863
    3. '):' → logprob: -3.4183545112609863
    4. ':
' → logprob: -4.168354511260986
    5. '):
' → logprob: -4.543354511260986
    6. ')' → logprob: -5.793354511260986
    7. '   ' → logprob: -5.793354511260986
    8. '<|end|>' → logprob: -6.543354511260986
    9. '#' → logprob: -8.293354988098145
    10. ',' → logprob: -8.543354988098145

Token 195: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.12338291853666306
    2. '       ' → logprob: -2.623382806777954
    3. ' x' → logprob: -3.623382806777954
    4. 'rx' → logprob: -4.373383045196533
    5. 'root' → logprob: -6.373383045196533
    6. ' rx' → logprob: -6.998383045196533
    7. 'px' → logprob: -7.248383045196533
    8. '   ' → logprob: -7.998383045196533
    9. '        ' → logprob: -8.998382568359375
    10. '           ' → logprob: -9.498382568359375

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2538449764251709
    2. '=' → logprob: -2.378844976425171
    3. '_root' → logprob: -2.378844976425171
    4. 'root' → logprob: -3.503844976425171
    5. '_parent' → logprob: -5.62884521484375
    6. '=find' → logprob: -6.00384521484375
    7. ',' → logprob: -7.37884521484375
    8. '=root' → logprob: -7.75384521484375
    9. ')' → logprob: -8.00384521484375
    10. 'r' → logprob: -8.00384521484375

Token 197: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013266648165881634
    2. ' self' → logprob: -6.626326560974121
    3. '   ' → logprob: -14.876326560974121
    4. '(self' → logprob: -15.876326560974121
    5. ' ' → logprob: -16.626327514648438
    6. '
' → logprob: -17.626327514648438
    7. '[self' → logprob: -17.751327514648438
    8. '  ' → logprob: -18.376327514648438
    9. '=self' → logprob: -18.501327514648438
    10. '    ' → logprob: -18.626327514648438

Token 198: '.root' (ID: 25375)
  Prédit: '.find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00013464801304508
    2. '.' → logprob: -10.125134468078613
    3. '._' → logprob: -10.250134468078613
    4. 'find' → logprob: -10.375134468078613
    5. '.findall' → logprob: -11.000134468078613
    6. '.root' → logprob: -12.125134468078613
    7. '_find' → logprob: -13.125134468078613
    8. '.fin' → logprob: -14.375134468078613
    9. '.get' → logprob: -14.375134468078613
    10. '.f' → logprob: -14.500134468078613

Token 199: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003360582049936056
    2. '(' → logprob: -8.000335693359375
    3. ' (' → logprob: -14.875335693359375
    4. '(
' → logprob: -15.500335693359375
    5. '((' → logprob: -17.875335693359375
    6. 'x' → logprob: -18.375335693359375
    7. '(self' → logprob: -18.875335693359375
    8. '(

' → logprob: -20.000335693359375
    9. '(y' → logprob: -20.750335693359375
    10. '(X' → logprob: -21.250335693359375

Token 200: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10031644254922867
    2. ')' → logprob: -2.3503165245056152
    3. ' )
' → logprob: -9.475316047668457
    4. ')
' → logprob: -10.350316047668457
    5. ' )' → logprob: -14.475316047668457
    6. ')

' → logprob: -14.600316047668457
    7. ')y' → logprob: -16.225317001342773
    8. ')`
' → logprob: -18.350317001342773
    9. '),' → logprob: -18.850317001342773
    10. ',' → logprob: -18.975317001342773

Token 201: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13251854479312897
    2. '<|end|>' → logprob: -3.1325185298919678
    3. '       ' → logprob: -3.3825185298919678
    4. 'y' → logprob: -3.8825185298919678
    5. ' y' → logprob: -4.257518768310547
    6. ')' → logprob: -5.632518768310547
    7. ' 
' → logprob: -6.382518768310547
    8. ';y' → logprob: -6.882518768310547
    9. '        
' → logprob: -7.132518768310547
    10. ',y' → logprob: -7.257518768310547

Token 202: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0019301822176203132
    2. ' y' → logprob: -6.251930236816406
    3. '       ' → logprob: -13.501930236816406
    4. '	y' → logprob: -16.376930236816406
    5. ',y' → logprob: -16.501930236816406
    6. '   ' → logprob: -16.751930236816406
    7. ',' → logprob: -19.501930236816406
    8. '    ' → logprob: -19.751930236816406
    9. ')y' → logprob: -20.126930236816406
    10. '        
' → logprob: -20.501930236816406

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20250734686851501
    2. '=' → logprob: -1.8275073766708374
    3. ')' → logprob: -4.077507495880127
    4. '<|end|>' → logprob: -5.702507495880127
    5. ' ' → logprob: -6.452507495880127
    6. ' )' → logprob: -8.077507019042969
    7. ',' → logprob: -9.452507019042969
    8. '.' → logprob: -9.827507019042969
    9. '<|end|>' → logprob: -9.827507019042969
    10. '_' → logprob: -11.077507019042969

Token 204: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.40532249212265015
    2. 'self' → logprob: -1.655322551727295
    3. ' y' → logprob: -2.530322551727295
    4. 'y' → logprob: -3.530322551727295
    5. ' root' → logprob: -3.780322551727295
    6. 'root' → logprob: -4.655322551727295
    7. ' ' → logprob: -7.780322551727295
    8. ' x' → logprob: -8.655322074890137
    9. 'x' → logprob: -8.905322074890137
    10. '<|end|>' → logprob: -9.905322074890137

Token 205: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.07834983617067337
    2. '.' → logprob: -2.7033498287200928
    3. 'root' → logprob: -4.828350067138672
    4. ' root' → logprob: -8.828350067138672
    5. '.
' → logprob: -9.328350067138672
    6. ' .' → logprob: -9.578350067138672
    7. '[root' → logprob: -10.453350067138672
    8. '(root' → logprob: -11.203350067138672
    9. ')' → logprob: -11.453350067138672
    10. ').' → logprob: -12.578350067138672

Token 206: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00151081255171448
    2. '(' → logprob: -6.5015106201171875
    3. '(x' → logprob: -11.751510620117188
    4. '(
' → logprob: -14.876510620117188
    5. ' (' → logprob: -16.626510620117188
    6. 'y' → logprob: -16.626510620117188
    7. ')' → logprob: -17.751510620117188
    8. ',y' → logprob: -18.751510620117188
    9. '(user' → logprob: -19.001510620117188
    10. ' y' → logprob: -19.501510620117188

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038229089113883674
    2. ')
' → logprob: -7.875382423400879
    3. ' )' → logprob: -13.750382423400879
    4. '<|end|>' → logprob: -14.750382423400879
    5. ')return' → logprob: -15.750382423400879
    6. '),' → logprob: -15.875382423400879
    7. ')x' → logprob: -16.625381469726562
    8. ')
' → logprob: -16.625381469726562
    9. ')

' → logprob: -16.750381469726562
    10. ')y' → logprob: -16.875381469726562

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01459475327283144
    2. '
' → logprob: -4.639594554901123
    3. '<|end|>' → logprob: -5.639594554901123
    4. ' if' → logprob: -8.264595031738281
    5. '        
' → logprob: -8.389595031738281
    6. ')' → logprob: -8.389595031738281
    7. ' 
' → logprob: -9.264595031738281
    8. '  
' → logprob: -9.264595031738281
    9. 'if' → logprob: -9.389595031738281
    10. '   ' → logprob: -9.764595031738281

Token 209: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00020449401927180588
    2. '       ' → logprob: -8.750204086303711
    3. ' if' → logprob: -10.000204086303711
    4. '   ' → logprob: -14.875204086303711
    5. '	if' → logprob: -16.37520408630371
    6. 'If' → logprob: -17.00020408630371
    7. '        
' → logprob: -17.25020408630371
    8. 'return' → logprob: -17.75020408630371
    9. ' ' → logprob: -18.25020408630371
    10. '    ' → logprob: -18.25020408630371

Token 210: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.313264399766922
    2. 'x' → logprob: -1.3132643699645996
    3. '	x' → logprob: -13.563264846801758
    4. ' ' → logprob: -14.438264846801758
    5. '   ' → logprob: -14.813264846801758
    6. '(x' → logprob: -14.938264846801758
    7. '    ' → logprob: -17.188264846801758
    8. ')x' → logprob: -17.313264846801758
    9. ' ' → logprob: -17.688264846801758
    10. '  ' → logprob: -17.688264846801758

Token 211: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1775882989168167
    2. '==' → logprob: -2.0525882244110107
    3. ' !=' → logprob: -3.5525882244110107
    4. '!=' → logprob: -5.17758846282959
    5. '=' → logprob: -11.92758846282959
    6. ' ' → logprob: -12.17758846282959
    7. ' ' → logprob: -13.30258846282959
    8. '<|end|>' → logprob: -13.92758846282959
    9. ']==' → logprob: -14.30258846282959
    10. '==
' → logprob: -14.30258846282959

Token 212: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019286326132714748
    2. ' y' → logprob: -6.251928806304932
    3. '	y' → logprob: -17.751928329467773
    4. ' ' → logprob: -19.376928329467773
    5. ''y' → logprob: -20.001928329467773
    6. ')y' → logprob: -20.501928329467773
    7. '   ' → logprob: -20.626928329467773
    8. 'x' → logprob: -20.751928329467773
    9. '‘y' → logprob: -21.626928329467773
    10. '<|end|>' → logprob: -21.626928329467773

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028869023080915213
    2. ':return' → logprob: -5.877886772155762
    3. ' :' → logprob: -9.627886772155762
    4. ':
' → logprob: -11.127886772155762
    5. '):' → logprob: -14.252886772155762
    6. ')' → logprob: -14.752886772155762
    7. 'return' → logprob: -15.127886772155762
    8. ')return' → logprob: -16.877887725830078
    9. '=' → logprob: -17.502887725830078
    10. ' return' → logprob: -17.502887725830078

Token 214: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27610766887664795
    2. ':return' → logprob: -1.651107668876648
    3. ':
' → logprob: -3.6511077880859375
    4. '       ' → logprob: -4.6511077880859375
    5. '
' → logprob: -4.7761077880859375
    6. '           ' → logprob: -6.2761077880859375
    7. '   ' → logprob: -6.4011077880859375
    8. 'return' → logprob: -7.1511077880859375
    9. ' return' → logprob: -7.2761077880859375
    10. ' ' → logprob: -9.026107788085938

Token 215: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2872130572795868
    2. '
' → logprob: -1.7872130870819092
    3. ' return' → logprob: -2.787213087081909
    4. '       ' → logprob: -4.03721284866333
    5. '           ' → logprob: -6.16221284866333
    6. '   ' → logprob: -7.66221284866333
    7. ' 
' → logprob: -8.287213325500488
    8. '
' → logprob: -10.537213325500488
    9. ':return' → logprob: -10.662213325500488
    10. '    
' → logprob: -10.912213325500488

Token 216: '
' (ID: 198)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0010960459476336837
    2. ' False' → logprob: -7.001096248626709
    3. 'None' → logprob: -9.25109577178955
    4. '
' → logprob: -9.37609577178955
    5. '(False' → logprob: -13.12609577178955
    6. 'True' → logprob: -14.75109577178955
    7. '       ' → logprob: -14.75109577178955
    8. '0' → logprob: -15.00109577178955
    9. '        
' → logprob: -15.00109577178955
    10. ' None' → logprob: -15.37609577178955

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0062093776650726795
    2. ' if' → logprob: -6.506209373474121
    3. 'if' → logprob: -6.631209373474121
    4. '        
' → logprob: -6.631209373474121
    5. '   ' → logprob: -6.756209373474121
    6. '        ' → logprob: -9.256209373474121
    7. '    ' → logprob: -9.381209373474121
    8. 's' → logprob: -9.506209373474121
    9. 'x' → logprob: -9.506209373474121
    10. '<|end|>' → logprob: -9.506209373474121

Token 218: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006234972272068262
    2. '       ' → logprob: -5.756235122680664
    3. ' if' → logprob: -5.881235122680664
    4. 'rx' → logprob: -8.381235122680664
    5. 'rank' → logprob: -11.006235122680664
    6. '#' → logprob: -12.506235122680664
    7. '   ' → logprob: -12.881235122680664
    8. '        
' → logprob: -13.256235122680664
    9. 'tx' → logprob: -13.631235122680664
    10. 'px' → logprob: -14.131235122680664

Token 219: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11285436153411865
    2. ' self' → logprob: -2.237854480743408
    3. '(self' → logprob: -10.73785400390625
    4. ' ' → logprob: -13.11285400390625
    5. '   ' → logprob: -13.11285400390625
    6. 's' → logprob: -13.48785400390625
    7. '	self' → logprob: -13.86285400390625
    8. 'x' → logprob: -13.98785400390625
    9. '
' → logprob: -14.11285400390625
    10. '[self' → logprob: -14.73785400390625

Token 220: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.183501293184236e-05
    2. '_r' → logprob: -10.25007152557373
    3. '.' → logprob: -11.12507152557373
    4. '_rank' → logprob: -11.12507152557373
    5. '_' → logprob: -12.87507152557373
    6. ' .' → logprob: -14.12507152557373
    7. '.rank' → logprob: -14.12507152557373
    8. '.r' → logprob: -14.25007152557373
    9. ']._' → logprob: -15.25007152557373
    10. '_root' → logprob: -15.37507152557373

Token 221: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: 0.0
    2. '_r' → logprob: -17.0
    3. '	r' → logprob: -19.25
    4. 'Ranks' → logprob: -19.625
    5. ' ranks' → logprob: -19.75
    6. '­r' → logprob: -20.5
    7. '[r' → logprob: -20.625
    8. 'rans' → logprob: -20.75
    9. 'anks' → logprob: -20.75
    10. 'parents' → logprob: -21.75

Token 222: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -3.173704271830502e-06
    2. 'a' → logprob: -13.25000286102295
    3. 'ank' → logprob: -13.87500286102295
    4. 'an' → logprob: -16.000003814697266
    5. '[' → logprob: -16.125003814697266
    6. 'r' → logprob: -16.750003814697266
    7. 'ands' → logprob: -17.000003814697266
    8. 'Ranks' → logprob: -17.500003814697266
    9. 's' → logprob: -18.000003814697266
    10. 'inks' → logprob: -18.625003814697266

Token 223: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.000007629394531
    3. ' [' → logprob: -14.375007629394531
    4. 'x' → logprob: -14.500007629394531
    5. '[y' → logprob: -15.875007629394531
    6. '[
' → logprob: -16.50000762939453
    7. ' x' → logprob: -17.50000762939453
    8. '
' → logprob: -18.37500762939453
    9. '

' → logprob: -18.75000762939453
    10. '[self' → logprob: -18.87500762939453

Token 224: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04702090099453926
    2. ']<' → logprob: -3.54702091217041
    3. '[' → logprob: -4.92202091217041
    4. '[x' → logprob: -5.17202091217041
    5. '<' → logprob: -6.42202091217041
    6. ' ]' → logprob: -6.79702091217041
    7. ' <' → logprob: -6.92202091217041
    8. '<x' → logprob: -8.42202091217041
    9. ' ' → logprob: -9.67202091217041
    10. '[y' → logprob: -9.92202091217041

Token 225: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.18010689318180084
    2. ' <' → logprob: -1.8051068782806396
    3. '[' → logprob: -8.180107116699219
    4. '<x' → logprob: -10.055107116699219
    5. ' ' → logprob: -10.930107116699219
    6. '<class' → logprob: -12.930107116699219
    7. '>' → logprob: -13.805107116699219
    8. '<size' → logprob: -13.930107116699219
    9. '<int' → logprob: -13.930107116699219
    10. ']' → logprob: -14.055107116699219

Token 226: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22557370364665985
    2. ' self' → logprob: -1.6005736589431763
    3. '=' → logprob: -9.600573539733887
    4. '=self' → logprob: -10.600573539733887
    5. 'y' → logprob: -10.850573539733887
    6. '	self' → logprob: -11.100573539733887
    7. '(self' → logprob: -11.850573539733887
    8. ' ' → logprob: -12.100573539733887
    9. '[self' → logprob: -12.225573539733887
    10. '<|end|>' → logprob: -12.975573539733887

Token 227: '._' (ID: 2697)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.009752308018505573
    2. '[y' → logprob: -5.75975227355957
    3. ' _' → logprob: -6.38475227355957
    4. '._' → logprob: -6.63475227355957
    5. '_y' → logprob: -7.13475227355957
    6. ' y' → logprob: -7.63475227355957
    7. 'y' → logprob: -7.75975227355957
    8. '_[' → logprob: -8.00975227355957
    9. '[' → logprob: -8.00975227355957
    10. '_' → logprob: -8.25975227355957

Token 228: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00011522514978423715
    2. '_r' → logprob: -9.625115394592285
    3. 'anks' → logprob: -10.000115394592285
    4. 'Ranks' → logprob: -13.250115394592285
    5. ' ranks' → logprob: -14.375115394592285
    6. 'rans' → logprob: -15.250115394592285
    7. '	r' → logprob: -15.375115394592285
    8. '   ' → logprob: -15.750115394592285
    9. '-r' → logprob: -16.25011444091797
    10. ' ' → logprob: -16.37511444091797

Token 229: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -5.157039049663581e-05
    2. 'n' → logprob: -11.000051498413086
    3. 'a' → logprob: -11.750051498413086
    4. 'r' → logprob: -11.875051498413086
    5. '[' → logprob: -12.250051498413086
    6. 'an' → logprob: -12.750051498413086
    7. 'Ranks' → logprob: -12.750051498413086
    8. 's' → logprob: -13.375051498413086
    9. 'ank' → logprob: -13.375051498413086
    10. '_' → logprob: -14.000051498413086

Token 230: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.018235279247164726
    2. 'y' → logprob: -4.018235206604004
    3. '[x' → logprob: -9.893235206604004
    4. '[' → logprob: -10.518235206604004
    5. ' y' → logprob: -12.893235206604004
    6. '[
' → logprob: -13.768235206604004
    7. 'x' → logprob: -14.018235206604004
    8. '(y' → logprob: -14.393235206604004
    9. ' [' → logprob: -14.643235206604004
    10. ',y' → logprob: -14.893235206604004

Token 231: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.14482052624225616
    2. ':' → logprob: -2.01982045173645
    3. '):' → logprob: -6.894820690155029
    4. ']:
' → logprob: -7.894820690155029
    5. ']' → logprob: -8.144820213317871
    6. '}:' → logprob: -8.894820213317871
    7. '>:' → logprob: -8.894820213317871
    8. ' :' → logprob: -9.269820213317871
    9. ' ):' → logprob: -10.394820213317871
    10. ':
' → logprob: -10.894820213317871

Token 232: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6389672756195068
    2. 'x' → logprob: -0.7639672756195068
    3. '           ' → logprob: -5.638967514038086
    4. ' self' → logprob: -7.013967514038086
    5. 'y' → logprob: -7.138967514038086
    6. '       ' → logprob: -7.388967514038086
    7. ' x' → logprob: -8.013967514038086
    8. '(x' → logprob: -9.638967514038086
    9. '   ' → logprob: -11.013967514038086
    10. '(self' → logprob: -11.263967514038086

Token 234: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.04902889207005501
    2. '_par' → logprob: -3.1740288734436035
    3. '.' → logprob: -5.4240288734436035
    4. '_' → logprob: -7.1740288734436035
    5. '   ' → logprob: -9.049029350280762
    6. ' _' → logprob: -9.049029350280762
    7. '.parents' → logprob: -9.424029350280762
    8. ' .' → logprob: -9.549029350280762
    9. '
' → logprob: -9.549029350280762
    10. '_ro' → logprob: -9.799029350280762

Token 235: 'parents' (ID: 40404)
  Prédit: 'parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.0009616006282158196
    2. 'sizes' → logprob: -7.750961780548096
    3. 'r' → logprob: -8.375961303710938
    4. '_par' → logprob: -8.750961303710938
    5. '.parents' → logprob: -9.625961303710938
    6. ' parents' → logprob: -10.375961303710938
    7. 'parent' → logprob: -12.000961303710938
    8. '_r' → logprob: -12.125961303710938
    9. 'par' → logprob: -12.125961303710938
    10. '```' → logprob: -12.625961303710938

Token 236: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.47427451610565186
    2. '[x' → logprob: -0.9742745161056519
    3. '[' → logprob: -8.599274635314941
    4. 'x' → logprob: -11.849274635314941
    5. 'y' → logprob: -12.974274635314941
    6. ' [' → logprob: -12.974274635314941
    7. '[
' → logprob: -14.474274635314941
    8. ']' → logprob: -15.724274635314941
    9. '```' → logprob: -15.724274635314941
    10. '[s' → logprob: -15.849274635314941

Token 237: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025088578462600708
    2. ']=' → logprob: -4.525088787078857
    3. '=' → logprob: -4.650088787078857
    4. ' =' → logprob: -5.900088787078857
    5. ' ]' → logprob: -6.525088787078857
    6. '[' → logprob: -8.9000883102417
    7. '[y' → logprob: -10.9000883102417
    8. '[x' → logprob: -11.2750883102417
    9. ')' → logprob: -13.2750883102417
    10. ' ' → logprob: -13.7750883102417

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38820841908454895
    2. '=' → logprob: -1.1382083892822266
    3. '[' → logprob: -6.638208389282227
    4. ']' → logprob: -11.638208389282227
    5. '[x' → logprob: -11.888208389282227
    6. ' ' → logprob: -12.638208389282227
    7. '[y' → logprob: -12.763208389282227
    8. ']=' → logprob: -13.763208389282227
    9. ')' → logprob: -14.138208389282227
    10. '=x' → logprob: -14.263208389282227

Token 239: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. '	x' → logprob: -18.250709533691406
    4. '[x' → logprob: -20.500709533691406
    5. ' ' → logprob: -20.750709533691406
    6. '   ' → logprob: -21.625709533691406
    7. '"x' → logprob: -22.125709533691406
    8. ')x' → logprob: -22.250709533691406
    9. '(x' → logprob: -22.750709533691406
    10. ''x' → logprob: -23.250709533691406

Token 240: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0711519718170166
    2. 'else' → logprob: -3.0711519718170166
    3. '
' → logprob: -4.9461517333984375
    4. '<|end|>' → logprob: -4.9461517333984375
    5. '           ' → logprob: -5.5711517333984375
    6. ' else' → logprob: -6.0711517333984375
    7. 'elif' → logprob: -7.0711517333984375
    8. '\n' → logprob: -8.196151733398438
    9. '<|end|>' → logprob: -8.571151733398438
    10. '        
' → logprob: -9.321151733398438

Token 241: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2206040620803833
    2. '           ' → logprob: -2.2206039428710938
    3. 'else' → logprob: -2.4706039428710938
    4. 'elif' → logprob: -6.220603942871094
    5. ' else' → logprob: -6.470603942871094
    6. '<|end|>' → logprob: -7.595603942871094
    7. '
' → logprob: -7.845603942871094
    8. '   ' → logprob: -8.720603942871094
    9. '            
' → logprob: -10.095603942871094
    10. 's' → logprob: -10.595603942871094

Token 242: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0024030047934502363
    2. ' self' → logprob: -6.1274027824401855
    3. '           ' → logprob: -8.877403259277344
    4. '_sizes' → logprob: -10.252403259277344
    5. '   ' → logprob: -10.502403259277344
    6. '       ' → logprob: -12.002403259277344
    7. '_self' → logprob: -12.377403259277344
    8. '	self' → logprob: -12.377403259277344
    9. '_s' → logprob: -15.502403259277344
    10. 'sizes' → logprob: -15.627403259277344

Token 243: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.4289950430393219
    2. '_sizes' → logprob: -1.0539950132369995
    3. ' _' → logprob: -9.678995132446289
    4. '_' → logprob: -9.803995132446289
    5. '   ' → logprob: -10.428995132446289
    6. '.' → logprob: -10.428995132446289
    7. ']._' → logprob: -10.553995132446289
    8. ')._' → logprob: -11.053995132446289
    9. '_s' → logprob: -11.428995132446289
    10. '_size' → logprob: -11.678995132446289

Token 244: 'sizes' (ID: 131812)
  Prédit: 'sizes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -1.2352385965641588e-05
    2. '_sizes' → logprob: -12.375012397766113
    3. ' sizes' → logprob: -12.625012397766113
    4. 'size' → logprob: -12.750012397766113
    5. 'siz' → logprob: -13.625012397766113
    6. '   ' → logprob: -15.000012397766113
    7. 'scores' → logprob: -16.500011444091797
    8. ' ' → logprob: -17.000011444091797
    9. 's' → logprob: -17.625011444091797
    10. 'sz' → logprob: -17.625011444091797

Token 245: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.3856492842023727e-06
    2. 'x' → logprob: -13.750000953674316
    3. '[' → logprob: -15.375000953674316
    4. '(x' → logprob: -17.875001907348633
    5. '```' → logprob: -18.125001907348633
    6. ' x' → logprob: -18.250001907348633
    7. '	x' → logprob: -18.875001907348633
    8. '[
' → logprob: -19.250001907348633
    9. ' [' → logprob: -19.375001907348633
    10. '   ' → logprob: -20.250001907348633

Token 246: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008621785789728165
    2. ']+=' → logprob: -4.758621692657471
    3. ' ]' → logprob: -12.258622169494629
    4. ']+' → logprob: -13.008622169494629
    5. ')' → logprob: -15.883622169494629
    6. '+=' → logprob: -17.258621215820312
    7. '[' → logprob: -17.383621215820312
    8. ']
' → logprob: -17.883621215820312
    9. '   ' → logprob: -18.133621215820312
    10. '```' → logprob: -18.133621215820312

Token 247: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005257952958345413
    2. ' +=' → logprob: -5.255258083343506
    3. ']+=' → logprob: -11.380257606506348
    4. '+' → logprob: -11.505257606506348
    5. '=' → logprob: -13.505257606506348
    6. '[' → logprob: -13.880257606506348
    7. '+=(' → logprob: -14.755257606506348
    8. ']' → logprob: -18.755258560180664
    9. '	' → logprob: -18.880258560180664
    10. ' ' → logprob: -18.880258560180664

Token 248: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024758970830589533
    2. ' self' → logprob: -6.002475738525391
    3. '	self' → logprob: -15.87747573852539
    4. '(self' → logprob: -16.50247573852539
    5. ' ' → logprob: -17.75247573852539
    6. '   ' → logprob: -17.75247573852539
    7. '
' → logprob: -18.00247573852539
    8. '[self' → logprob: -18.50247573852539
    9. '       ' → logprob: -19.00247573852539
    10. '           ' → logprob: -20.12747573852539

Token 249: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.17986811697483063
    2. '_sizes' → logprob: -1.8048681020736694
    3. ' _' → logprob: -9.3048677444458
    4. '_' → logprob: -11.3048677444458
    5. '_s' → logprob: -12.6798677444458
    6. '.' → logprob: -12.8048677444458
    7. ' .' → logprob: -12.9298677444458
    8. ' ' → logprob: -13.6798677444458
    9. '_scores' → logprob: -13.8048677444458
    10. ']._' → logprob: -14.1798677444458

Token 250: 'sizes' (ID: 131812)
  Prédit: 'sizes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.0019343505846336484
    2. '_sizes' → logprob: -6.25193452835083
    3. ' sizes' → logprob: -12.376934051513672
    4. 'size' → logprob: -14.001934051513672
    5. 'siz' → logprob: -14.751934051513672
    6. 's' → logprob: -15.626934051513672
    7. 'izes' → logprob: -16.626934051513672
    8. 'Sizes' → logprob: -17.001934051513672
    9. '_s' → logprob: -17.876934051513672
    10. '_size' → logprob: -18.751934051513672

Token 251: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.500006675720215
    3. 'y' → logprob: -12.750006675720215
    4. ' [' → logprob: -17.12500762939453
    5. '```' → logprob: -18.87500762939453
    6. '[
' → logprob: -19.37500762939453
    7. ' y' → logprob: -19.37500762939453
    8. '	y' → logprob: -19.75000762939453
    9. '(y' → logprob: -20.12500762939453
    10. '   ' → logprob: -20.75000762939453

Token 252: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004193675238639116
    2. 'else' → logprob: -5.7541937828063965
    3. 'elif' → logprob: -7.1291937828063965
    4. ' else' → logprob: -8.879193305969238
    5. '           ' → logprob: -10.129193305969238
    6. ' elif' → logprob: -10.629193305969238
    7. '<|end|>' → logprob: -12.504193305969238
    8. 's' → logprob: -13.129193305969238
    9. 'y' → logprob: -13.754193305969238
    10. '```' → logprob: -14.129193305969238

Token 254: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6827624440193176
    2. 'else' (adapté à ' else') → logprob: -1.1827623844146729
    3. 'elif' → logprob: -2.182762384414673
    4. ' else' → logprob: -2.807762384414673
    5. ' elif' → logprob: -4.182762622833252
    6. '   ' → logprob: -12.057762145996094
    7. '	elif' → logprob: -12.182762145996094
    8. ',' → logprob: -13.307762145996094
    9. '           ' → logprob: -13.307762145996094
    10. '        ' → logprob: -13.557762145996094

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3486824333667755
    2. ':
' → logprob: -1.2236824035644531
    3. ' :
' → logprob: -9.598682403564453
    4. '       ' → logprob: -9.848682403564453
    5. ' if' → logprob: -10.098682403564453
    6. ' :' → logprob: -10.473682403564453
    7. '           ' → logprob: -11.223682403564453
    8. ':

' → logprob: -11.723682403564453
    9. ':
' → logprob: -11.848682403564453
    10. '   ' → logprob: -12.473682403564453

Token 256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011430763406679034
    2. '       ' → logprob: -8.251143455505371
    3. ':
' → logprob: -8.251143455505371
    4. ':' → logprob: -8.751143455505371
    5. '{
' → logprob: -8.751143455505371
    6. ' self' → logprob: -9.251143455505371
    7. 'self' → logprob: -9.501143455505371
    8. '   ' → logprob: -9.876143455505371
    9. '{' → logprob: -10.876143455505371
    10. '          ' → logprob: -11.501143455505371

Token 257: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11736240983009338
    2. ' self' → logprob: -2.3673624992370605
    3. '           ' → logprob: -4.1173624992370605
    4. '   ' → logprob: -7.9923624992370605
    5. '       ' → logprob: -8.867362022399902
    6. '	self' → logprob: -8.992362022399902
    7. ' ' → logprob: -9.867362022399902
    8. '               ' → logprob: -10.242362022399902
    9. '{
' → logprob: -11.492362022399902
    10. '  ' → logprob: -12.367362022399902

Token 258: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00020449401927180588
    2. '_par' → logprob: -8.750204086303711
    3. '.' → logprob: -10.375204086303711
    4. ']._' → logprob: -12.750204086303711
    5. ' .' → logprob: -12.875204086303711
    6. '.parents' → logprob: -13.125204086303711
    7. '_' → logprob: -13.250204086303711
    8. '   ' → logprob: -13.250204086303711
    9. '```' → logprob: -14.625204086303711
    10. '  ' → logprob: -14.875204086303711

Token 259: 'parents' (ID: 40404)
  Prédit: 'parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -2.856408536899835e-05
    2. 'r' → logprob: -10.875028610229492
    3. '.parents' → logprob: -12.250028610229492
    4. ' parents' → logprob: -12.500028610229492
    5. 'Parents' → logprob: -15.375028610229492
    6. '_par' → logprob: -16.000028610229492
    7. 'sizes' → logprob: -16.250028610229492
    8. '```' → logprob: -16.250028610229492
    9. 'parent' → logprob: -16.500028610229492
    10. '   ' → logprob: -16.625028610229492

Token 260: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.567575034452602e-05
    2. '[y' → logprob: -9.37509536743164
    3. '[' → logprob: -11.62509536743164
    4. 'x' → logprob: -13.62509536743164
    5. '[
' → logprob: -15.50009536743164
    6. ' [' → logprob: -15.62509536743164
    7. '   ' → logprob: -16.12509536743164
    8. '```' → logprob: -17.12509536743164
    9. '       ' → logprob: -17.25009536743164
    10. ')[' → logprob: -18.62509536743164

Token 261: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39541342854499817
    2. ' =' → logprob: -1.6454133987426758
    3. ']' → logprob: -2.020413398742676
    4. ']=' → logprob: -7.145413398742676
    5. ')' → logprob: -8.520413398742676
    6. ' ]' → logprob: -9.770413398742676
    7. '[' → logprob: -11.895413398742676
    8. '=y' → logprob: -12.020413398742676
    9. ' ' → logprob: -12.520413398742676
    10. ')=' → logprob: -13.270413398742676

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869045674800873
    2. ' =' → logprob: -1.1369045972824097
    3. '=y' → logprob: -10.3869047164917
    4. ')' → logprob: -13.3869047164917
    5. ']' → logprob: -14.3869047164917
    6. ' ' → logprob: -15.3869047164917
    7. ']=' → logprob: -16.261903762817383
    8. '[' → logprob: -16.761903762817383
    9. ')=' → logprob: -17.011903762817383
    10. 'y' → logprob: -17.386903762817383

Token 263: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005530327325686812
    2. ' y' → logprob: -7.500553131103516
    3. '	y' → logprob: -17.375553131103516
    4. ''y' → logprob: -19.750553131103516
    5. ')y' → logprob: -20.000553131103516
    6. ' ' → logprob: -20.375553131103516
    7. '‘y' → logprob: -20.375553131103516
    8. '(y' → logprob: -20.500553131103516
    9. '   ' → logprob: -20.625553131103516
    10. '[y' → logprob: -20.875553131103516

Token 264: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008610807126387954
    2. 'if' → logprob: -7.500861167907715
    3. ' if' → logprob: -8.500861167907715
    4. '       ' → logprob: -9.250861167907715
    5. '
' → logprob: -12.750861167907715
    6. '		' → logprob: -13.625861167907715
    7. '   ' → logprob: -13.625861167907715
    8. '               ' → logprob: -14.375861167907715
    9. '          ' → logprob: -14.500861167907715
    10. ',' → logprob: -14.625861167907715

Token 265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023727134976070374
    2. ' if' → logprob: -9.375237464904785
    3. 'if' → logprob: -9.500237464904785
    4. '       ' → logprob: -10.125237464904785
    5. '
' → logprob: -11.250237464904785
    6. '   ' → logprob: -11.875237464904785
    7. '		' → logprob: -12.625237464904785
    8. '               ' → logprob: -12.750237464904785
    9. '<|end|>' → logprob: -13.125237464904785
    10. ' ' → logprob: -13.250237464904785

Token 266: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013927832245826721
    2. '           ' → logprob: -5.013927936553955
    3. 'self' (adapté à ' self') → logprob: -5.513927936553955
    4. ' if' → logprob: -5.763927936553955
    5. ' self' → logprob: -11.388927459716797
    6. '       ' → logprob: -12.888927459716797
    7. '               ' → logprob: -13.638927459716797
    8. ' ' → logprob: -14.638927459716797
    9. '   ' → logprob: -14.638927459716797
    10. '            ' → logprob: -15.138927459716797

Token 267: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00070397206582129
    2. '_' → logprob: -7.625703811645508
    3. '_r' → logprob: -9.375703811645508
    4. '.' → logprob: -10.250703811645508
    5. '[_' → logprob: -11.000703811645508
    6. ']._' → logprob: -11.375703811645508
    7. 'if' → logprob: -11.500703811645508
    8. '   ' → logprob: -11.750703811645508
    9. '_rank' → logprob: -11.875703811645508
    10. '[' → logprob: -11.875703811645508

Token 268: 'sizes' (ID: 131812)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004233323968946934
    2. 'sizes' → logprob: -5.629233360290527
    3. '_r' → logprob: -7.504233360290527
    4. '_sizes' → logprob: -9.879233360290527
    5. 'anks' → logprob: -11.129233360290527
    6. 'Ranks' → logprob: -11.754233360290527
    7. '	r' → logprob: -13.754233360290527
    8. ' ranks' → logprob: -13.879233360290527
    9. 'ranges' → logprob: -14.004233360290527
    10. '[r' → logprob: -14.254233360290527

Token 269: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -7.822646693966817e-06
    2. '[' → logprob: -12.000007629394531
    3. 'y' → logprob: -13.500007629394531
    4. ' [' → logprob: -17.12500762939453
    5. '```' → logprob: -17.25000762939453
    6. '][' → logprob: -17.37500762939453
    7. '[
' → logprob: -18.25000762939453
    8. '[x' → logprob: -18.87500762939453
    9. ')[' → logprob: -18.87500762939453
    10. '[s' → logprob: -19.00000762939453

Token 270: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.7132291197776794
    2. ']' → logprob: -1.2132291793823242
    3. '+=' → logprob: -1.7132291793823242
    4. ' +=' → logprob: -3.588229179382324
    5. '[' → logprob: -5.963229179382324
    6. '+' → logprob: -6.588229179382324
    7. ']+' → logprob: -7.463229179382324
    8. ' ]' → logprob: -8.588229179382324
    9. ')' → logprob: -10.463229179382324
    10. '+]' → logprob: -10.963229179382324

Token 271: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0006251106387935579
    2. ' +=' → logprob: -7.500625133514404
    3. '+' → logprob: -10.000624656677246
    4. ']+=' → logprob: -10.750624656677246
    5. '[' → logprob: -12.250624656677246
    6. '+=(' → logprob: -15.500624656677246
    7. '=' → logprob: -15.750624656677246
    8. '           ' → logprob: -17.250625610351562
    9. '+='' → logprob: -17.250625610351562
    10. '       ' → logprob: -17.625625610351562

Token 272: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02054375410079956
    2. ' self' → logprob: -3.8955438137054443
    3. '	self' → logprob: -14.270544052124023
    4. '(self' → logprob: -14.645544052124023
    5. '[self' → logprob: -15.270544052124023
    6. ' ' → logprob: -15.645544052124023
    7. '_self' → logprob: -15.645544052124023
    8. '   ' → logprob: -16.645544052124023
    9. '           ' → logprob: -16.895544052124023
    10. '       ' → logprob: -17.020544052124023

Token 273: '._' (ID: 2697)
  Prédit: '_sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sizes' → logprob: -0.20153817534446716
    2. '._' → logprob: -1.7015382051467896
    3. ' _' → logprob: -9.2015380859375
    4. '_' → logprob: -12.4515380859375
    5. '   ' → logprob: -12.5765380859375
    6. ' ' → logprob: -12.9515380859375
    7. '.' → logprob: -13.2015380859375
    8. '```' → logprob: -13.3265380859375
    9. '_scores' → logprob: -13.4515380859375
    10. '_size' → logprob: -13.4515380859375

Token 274: 'sizes' (ID: 131812)
  Prédit: 'sizes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.10021983087062836
    2. '_sizes' → logprob: -2.3502197265625
    3. 'siz' → logprob: -12.1002197265625
    4. ' sizes' → logprob: -12.3502197265625
    5. 'size' → logprob: -12.9752197265625
    6. 's' → logprob: -14.9752197265625
    7. 'Sizes' → logprob: -15.4752197265625
    8. '_size' → logprob: -15.7252197265625
    9. 'sz' → logprob: -16.6002197265625
    10. '_s' → logprob: -16.9752197265625

Token 275: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.4418171455617994e-05
    2. 'x' → logprob: -10.250044822692871
    3. '[' → logprob: -11.750044822692871
    4. '[
' → logprob: -14.625044822692871
    5. ' [' → logprob: -15.125044822692871
    6. '(x' → logprob: -16.250043869018555
    7. '```' → logprob: -16.875043869018555
    8. ' x' → logprob: -17.000043869018555
    9. '{x' → logprob: -17.750043869018555
    10. '   ' → logprob: -18.250043869018555

Token 276: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31560736894607544
    2. '           ' → logprob: -1.3156073093414307
    3. 'if' → logprob: -6.44060754776001
    4. '   ' → logprob: -8.565607070922852
    5. ' if' → logprob: -8.565607070922852
    6. '
' → logprob: -9.190607070922852
    7. '[' → logprob: -9.315607070922852
    8. '<|end|>' → logprob: -9.940607070922852
    9. ')' → logprob: -10.065607070922852
    10. ',' → logprob: -10.815607070922852

Token 277: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7032050490379333
    2. '       ' → logprob: -1.2032051086425781
    3. '           ' → logprob: -1.8282051086425781
    4. '   ' → logprob: -3.703205108642578
    5. ' if' → logprob: -3.953205108642578
    6. ' ' → logprob: -9.203205108642578
    7. '```' → logprob: -10.203205108642578
    8. '	if' → logprob: -11.078205108642578
    9. '     ' → logprob: -11.078205108642578
    10. '    ' → logprob: -11.328205108642578

Token 278: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.1994775377388578e-05
    2. '           ' → logprob: -12.125012397766113
    3. ' if' → logprob: -12.250012397766113
    4. '       ' → logprob: -13.250012397766113
    5. '   ' → logprob: -17.750011444091797
    6. '
' → logprob: -18.000011444091797
    7. '```' → logprob: -18.500011444091797
    8. '	if' → logprob: -19.875011444091797
    9. '            
' → logprob: -20.375011444091797
    10. '               ' → logprob: -20.625011444091797

Token 279: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693022191524506
    2. ' self' → logprob: -2.1269302368164062
    3. '(self' → logprob: -13.501930236816406
    4. '	self' → logprob: -15.251930236816406
    5. '   ' → logprob: -15.501930236816406
    6. '
' → logprob: -16.376930236816406
    7. '_self' → logprob: -16.376930236816406
    8. '[self' → logprob: -16.751930236816406
    9. ' ' → logprob: -17.376930236816406
    10. '    ' → logprob: -18.376930236816406

Token 280: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.259079363080673e-05
    2. '_r' → logprob: -11.500012397766113
    3. '.' → logprob: -14.000012397766113
    4. '_self' → logprob: -15.000012397766113
    5. ' .' → logprob: -15.250012397766113
    6. ' _' → logprob: -15.250012397766113
    7. ']._' → logprob: -15.750012397766113
    8. '_' → logprob: -16.12501335144043
    9. '_rank' → logprob: -16.50001335144043
    10. '[' → logprob: -16.62501335144043

Token 281: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07892636209726334
    2. '_r' → logprob: -2.5789263248443604
    3. 'anks' → logprob: -11.203926086425781
    4. 'Ranks' → logprob: -11.203926086425781
    5. ' ranks' → logprob: -11.703926086425781
    6. '­r' → logprob: -15.453926086425781
    7. '	r' → logprob: -15.703926086425781
    8. '[r' → logprob: -16.07892608642578
    9. '_' → logprob: -16.07892608642578
    10. '-r' → logprob: -16.32892608642578

Token 282: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -8.482821431243792e-05
    2. 'ks' → logprob: -10.37508487701416
    3. 's' → logprob: -10.62508487701416
    4. '[' → logprob: -10.87508487701416
    5. 'a' → logprob: -12.87508487701416
    6. 'n' → logprob: -13.37508487701416
    7. 'r' → logprob: -13.75008487701416
    8. 'ank' → logprob: -14.12508487701416
    9. '
' → logprob: -14.37508487701416
    10. 'aks' → logprob: -14.50008487701416

Token 283: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.5014188799541444e-05
    2. '[y' → logprob: -10.375044822692871
    3. 'x' → logprob: -11.250044822692871
    4. '[' → logprob: -14.125044822692871
    5. '[self' → logprob: -17.375045776367188
    6. '[s' → logprob: -18.500045776367188
    7. ' x' → logprob: -18.500045776367188
    8. '(x' → logprob: -18.875045776367188
    9. '[
' → logprob: -18.875045776367188
    10. '[u' → logprob: -20.250045776367188

Token 284: ']' (ID: 60)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5881600379943848
    2. '[y' → logprob: -1.3381600379943848
    3. ']' → logprob: -2.4631600379943848
    4. '[' → logprob: -2.8381600379943848
    5. '==' → logprob: -3.5881600379943848
    6. ']==' → logprob: -4.588160037994385
    7. '[
' → logprob: -7.963160037994385
    8. ' ==' → logprob: -8.588159561157227
    9. '][' → logprob: -8.713159561157227
    10. '[i' → logprob: -10.963159561157227

Token 285: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0014073748607188463
    2. ' ==' → logprob: -6.626407146453857
    3. ']==' → logprob: -10.626407623291016
    4. '[' → logprob: -10.876407623291016
    5. '==
' → logprob: -10.876407623291016
    6. '=' → logprob: -11.001407623291016
    7. '===' → logprob: -13.501407623291016
    8. ']' → logprob: -14.376407623291016
    9. ')==' → logprob: -14.876407623291016
    10. '()==' → logprob: -15.501407623291016

Token 286: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008817598223686218
    2. ' self' → logprob: -4.758817672729492
    3. 'y' → logprob: -8.633817672729492
    4. '[self' → logprob: -10.758817672729492
    5. ' ' → logprob: -13.633817672729492
    6. ' y' → logprob: -14.133817672729492
    7. '(self' → logprob: -14.758817672729492
    8. '	self' → logprob: -14.758817672729492
    9. '   ' → logprob: -14.883817672729492
    10. '=self' → logprob: -15.508817672729492

Token 287: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.7313284873962402
    2. '_r' → logprob: -0.7313284873962402
    3. ' _' → logprob: -3.3563284873962402
    4. '_' → logprob: -7.23132848739624
    5. '_y' → logprob: -7.48132848739624
    6. '[_' → logprob: -8.356328964233398
    7. '_rank' → logprob: -8.356328964233398
    8. 'Ranks' → logprob: -9.106328964233398
    9. '_scores' → logprob: -9.481328964233398
    10. '_[' → logprob: -9.606328964233398

Token 288: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.000763510703109e-05
    2. 'anks' → logprob: -10.375040054321289
    3. '_r' → logprob: -12.125040054321289
    4. 'Ranks' → logprob: -13.000040054321289
    5. ' ranks' → logprob: -15.000040054321289
    6. '	r' → logprob: -16.00004005432129
    7. '   ' → logprob: -16.37504005432129
    8. '[r' → logprob: -16.50004005432129
    9. 'sizes' → logprob: -16.75004005432129
    10. '
' → logprob: -16.75004005432129

Token 289: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -0.00011903966515092179
    2. 's' → logprob: -9.62511920928955
    3. '[' → logprob: -11.25011920928955
    4. '   ' → logprob: -12.00011920928955
    5. 'r' → logprob: -12.25011920928955
    6. 'n' → logprob: -12.50011920928955
    7. 'ks' → logprob: -12.50011920928955
    8. 'a' → logprob: -12.75011920928955
    9. 'ank' → logprob: -12.75011920928955
    10. 'an' → logprob: -13.25011920928955

Token 290: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0007117166533134878
    2. 'y' → logprob: -7.250711917877197
    3. '[' → logprob: -13.875711441040039
    4. '[x' → logprob: -14.625711441040039
    5. ''y' → logprob: -16.25071144104004
    6. '[
' → logprob: -16.50071144104004
    7. '   ' → logprob: -16.87571144104004
    8. '	y' → logprob: -17.00071144104004
    9. ' y' → logprob: -17.12571144104004
    10. '[root' → logprob: -17.50071144104004

Token 291: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23328951001167297
    2. ':
' → logprob: -1.6082894802093506
    3. ']:' → logprob: -5.48328971862793
    4. ']:
' → logprob: -5.85828971862793
    5. '):
' → logprob: -7.73328971862793
    6. ']' → logprob: -9.35828971862793
    7. '):' → logprob: -9.48328971862793
    8. '+:' → logprob: -9.60828971862793
    9. '+' → logprob: -10.10828971862793
    10. '[' → logprob: -10.23328971862793

Token 292: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010010129772126675
    2. '           ' → logprob: -7.626000881195068
    3. 'self' → logprob: -8.501001358032227
    4. '   ' → logprob: -8.751001358032227
    5. ' self' → logprob: -9.126001358032227
    6. '                   ' → logprob: -11.126001358032227
    7. '	           ' → logprob: -12.251001358032227
    8. '       ' → logprob: -12.376001358032227
    9. '              ' → logprob: -12.876001358032227
    10. '			' → logprob: -13.001001358032227

Token 293: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06308907270431519
    2. '                   ' → logprob: -3.56308913230896
    3. ' self' → logprob: -3.68808913230896
    4. '               ' → logprob: -4.938088893890381
    5. '   ' → logprob: -7.813088893890381
    6. '           ' → logprob: -9.438089370727539
    7. '[self' → logprob: -9.813089370727539
    8. '	self' → logprob: -11.188089370727539
    9. '                       ' → logprob: -11.313089370727539
    10. ' ' → logprob: -11.438089370727539

Token 294: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0004038593906443566
    2. '_r' → logprob: -7.875403881072998
    3. '_' → logprob: -11.50040340423584
    4. ' _' → logprob: -12.25040340423584
    5. '[_' → logprob: -12.75040340423584
    6. '.' → logprob: -13.25040340423584
    7. '   ' → logprob: -13.50040340423584
    8. '[' → logprob: -14.50040340423584
    9. '       ' → logprob: -15.00040340423584
    10. ' .' → logprob: -15.25040340423584

Token 295: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.339278580620885e-06
    2. '_r' → logprob: -13.500001907348633
    3. '
' → logprob: -15.375001907348633
    4. ' ranks' → logprob: -15.375001907348633
    5. 'Ranks' → logprob: -15.500001907348633
    6. 'rank' → logprob: -15.875001907348633
    7. '	r' → logprob: -16.625001907348633
    8. 'anks' → logprob: -17.250001907348633
    9. 'rans' → logprob: -17.625001907348633
    10. '   ' → logprob: -17.750001907348633

Token 296: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -5.300083648762666e-05
    2. '[' → logprob: -10.750053405761719
    3. 's' → logprob: -11.375053405761719
    4. 'ank' → logprob: -12.125053405761719
    5. 'a' → logprob: -12.875053405761719
    6. 'r' → logprob: -13.625053405761719
    7. '
' → logprob: -13.875053405761719
    8. 'an' → logprob: -14.000053405761719
    9. '[[' → logprob: -14.000053405761719
    10. 'Ranks' → logprob: -14.000053405761719

Token 297: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -11.50001049041748
    3. 'y' → logprob: -15.75001049041748
    4. '[
' → logprob: -16.875009536743164
    5. ' [' → logprob: -18.125009536743164
    6. '<|end|>' → logprob: -18.125009536743164
    7. '

' → logprob: -19.125009536743164
    8. '
' → logprob: -19.375009536743164
    9. '[user' → logprob: -19.375009536743164
    10. '[x' → logprob: -20.125009536743164

Token 298: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.021274341270327568
    2. ' +=' → logprob: -4.021274566650391
    3. ']+=' → logprob: -5.771274566650391
    4. ']' → logprob: -13.14627456665039
    5. '+' → logprob: -13.52127456665039
    6. '=' → logprob: -15.89627456665039
    7. '+="' → logprob: -16.64627456665039
    8. '+='' → logprob: -16.64627456665039
    9. ')' → logprob: -16.89627456665039
    10. '[' → logprob: -17.14627456665039

Token 299: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0052650682628154755
    2. ' +=' → logprob: -5.255265235900879
    3. ']+=' → logprob: -10.380265235900879
    4. '+' → logprob: -16.005264282226562
    5. '[' → logprob: -17.005264282226562
    6. '=' → logprob: -17.630264282226562
    7. '+="' → logprob: -18.505264282226562
    8. '+=(' → logprob: -18.755264282226562
    9. '+='' → logprob: -18.755264282226562
    10. '   ' → logprob: -19.505264282226562

Token 300: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.87500762939453
    4. '
' → logprob: -18.25000762939453
    5. '  ' → logprob: -21.12500762939453
    6. '[' → logprob: -21.87500762939453
    7. '           ' → logprob: -21.87500762939453
    8. '```' → logprob: -22.00000762939453
    9. '       ' → logprob: -22.12500762939453
    10. '                   ' → logprob: -22.75000762939453

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.0
    4. '
' → logprob: -19.875
    5. '  ' → logprob: -22.25
    6. '```' → logprob: -22.625
    7. '１' → logprob: -23.375
    8. '           ' → logprob: -23.875
    9. '-' → logprob: -24.0
    10. '﻿' → logprob: -24.125

Token 302: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2838706970214844
    2. 'def' → logprob: -1.4088706970214844
    3. ' def' → logprob: -6.408870697021484
    4. '    
' → logprob: -7.658870697021484
    5. '
' → logprob: -8.533870697021484
    6. ' ' → logprob: -9.033870697021484
    7. '  ' → logprob: -9.533870697021484
    8. '	def' → logprob: -9.658870697021484
    9. '       ' → logprob: -10.158870697021484
    10. '```' → logprob: -10.533870697021484

Token 304: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10216356813907623
    2. ' def' → logprob: -2.727163553237915
    3. '   ' → logprob: -3.477163553237915
    4. ' ' → logprob: -8.352163314819336
    5. '
' → logprob: -8.477163314819336
    6. '    
' → logprob: -8.977163314819336
    7. ' 
' → logprob: -9.352163314819336
    8. '	def' → logprob: -9.977163314819336
    9. '       ' → logprob: -10.477163314819336
    10. ')' → logprob: -10.727163314819336

Token 305: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.030286796391010284
    2. ' root' → logprob: -3.5302867889404297
    3. 'find' → logprob: -7.90528678894043
    4. ' find' → logprob: -10.03028678894043
    5. 'size' → logprob: -10.15528678894043
    6. 'roots' → logprob: -10.65528678894043
    7. 'def' → logprob: -11.40528678894043
    8. ' ' → logprob: -11.53028678894043
    9. 'r' → logprob: -11.78028678894043
    10. 'is' → logprob: -12.15528678894043

Token 306: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033760786755010486
    2. '(' → logprob: -8.000337600708008
    3. '(s' → logprob: -13.625337600708008
    4. ' (' → logprob: -14.375337600708008
    5. '(
' → logprob: -15.375337600708008
    6. '(sel' → logprob: -16.625337600708008
    7. 'self' → logprob: -16.875337600708008
    8. '(Self' → logprob: -17.625337600708008
    9. '(this' → logprob: -18.625337600708008
    10. '(se' → logprob: -18.875337600708008

Token 307: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001130571006797254
    2. '(' → logprob: -7.1261305809021
    3. ')' → logprob: -9.126130104064941
    4. ',' → logprob: -9.251130104064941
    5. ')(' → logprob: -10.126130104064941
    6. '(x' → logprob: -10.126130104064941
    7. 'self' → logprob: -10.876130104064941
    8. ' (' → logprob: -11.126130104064941
    9. '(s' → logprob: -12.751130104064941
    10. ',self' → logprob: -13.251130104064941

Token 308: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010153028415516019
    2. ' x' → logprob: -7.1260151863098145
    3. 'self' → logprob: -8.501015663146973
    4. 'a' → logprob: -13.126015663146973
    5. 'node' → logprob: -13.251015663146973
    6. 'v' → logprob: -14.126015663146973
    7. 'k' → logprob: -14.126015663146973
    8. ' self' → logprob: -14.126015663146973
    9. ' ' → logprob: -14.626015663146973
    10. 'i' → logprob: -14.876015663146973

Token 309: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008735361509025097
    2. '):
' → logprob: -4.758735179901123
    3. ')' → logprob: -9.383735656738281
    4. ':' → logprob: -11.133735656738281
    5. 'self' → logprob: -11.633735656738281
    6. '(self' → logprob: -12.133735656738281
    7. '   ' → logprob: -12.633735656738281
    8. ' ):' → logprob: -13.008735656738281
    9. '       ' → logprob: -14.258735656738281
    10. '):
' → logprob: -14.383735656738281

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013116578571498394
    2. 'while' → logprob: -5.013116359710693
    3. ' while' → logprob: -5.388116359710693
    4. '   ' → logprob: -7.263116359710693
    5. 'if' → logprob: -8.013116836547852
    6. 'p' → logprob: -8.013116836547852
    7. ' if' → logprob: -8.513116836547852
    8. '    ' → logprob: -9.513116836547852
    9. 't' → logprob: -10.013116836547852
    10. ' p' → logprob: -10.388116836547852

Token 311: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03376683592796326
    2. 'p' → logprob: -3.533766746520996
    3. 'while' → logprob: -6.283766746520996
    4. ' if' → logprob: -6.783766746520996
    5. 'px' → logprob: -7.408766746520996
    6. '   ' → logprob: -8.408766746520996
    7. '       ' → logprob: -9.283766746520996
    8. 'parent' → logprob: -10.158766746520996
    9. ' p' → logprob: -10.908766746520996
    10. ' while' → logprob: -11.033766746520996

Token 312: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004218128509819508
    2. 'x' → logprob: -5.504218101501465
    3. ' self' → logprob: -8.879218101501465
    4. '(self' → logprob: -15.129218101501465
    5. ' x' → logprob: -16.37921905517578
    6. '	self' → logprob: -17.50421905517578
    7. '   ' → logprob: -18.12921905517578
    8. 'is' → logprob: -18.87921905517578
    9. ' ' → logprob: -19.00421905517578
    10. 'type' → logprob: -19.37921905517578

Token 313: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.392202976712724e-06
    2. '.' → logprob: -12.875006675720215
    3. '_' → logprob: -13.125006675720215
    4. ' _' → logprob: -14.875006675720215
    5. ' .' → logprob: -15.000006675720215
    6. '.__' → logprob: -15.375006675720215
    7. '_parent' → logprob: -15.625006675720215
    8. ']._' → logprob: -16.0000057220459
    9. '   ' → logprob: -16.7500057220459
    10. 'self' → logprob: -16.8750057220459

Token 314: 'parents' (ID: 40404)
  Prédit: 'parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -5.514650183613412e-05
    2. '.parents' → logprob: -10.125055313110352
    3. ' parents' → logprob: -11.625055313110352
    4. '_par' → logprob: -12.500055313110352
    5. 'Parents' → logprob: -13.875055313110352
    6. 'roots' → logprob: -14.500055313110352
    7. 'parent' → logprob: -14.500055313110352
    8. '   ' → logprob: -17.00005531311035
    9. 'par' → logprob: -17.12505531311035
    10. ' ' → logprob: -17.50005531311035

Token 315: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.750005722045898
    3. 'x' → logprob: -12.750005722045898
    4. '[
' → logprob: -17.5000057220459
    5. ' [' → logprob: -17.6250057220459
    6. '[self' → logprob: -18.2500057220459
    7. '{x' → logprob: -18.6250057220459
    8. '(x' → logprob: -18.7500057220459
    9. ' x' → logprob: -19.0000057220459
    10. '[type' → logprob: -19.2500057220459

Token 316: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3540870249271393
    2. ']!=' → logprob: -1.604086995124817
    3. ']' → logprob: -2.3540871143341064
    4. ' !=' → logprob: -6.229086875915527
    5. ')!=' → logprob: -8.979086875915527
    6. '()!=' → logprob: -11.479086875915527
    7. ']==' → logprob: -11.729086875915527
    8. '!==' → logprob: -11.979086875915527
    9. 'x' → logprob: -12.229086875915527
    10. '==' → logprob: -13.729086875915527

Token 317: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.00019746100588236004
    2. ' !=' → logprob: -8.625197410583496
    3. '==' → logprob: -11.000197410583496
    4. '!==' → logprob: -14.375197410583496
    5. ']!=' → logprob: -15.000197410583496
    6. '()!=' → logprob: -15.875197410583496
    7. ')!=' → logprob: -16.000198364257812
    8. 'x' → logprob: -17.500198364257812
    9. 'is' → logprob: -17.625198364257812
    10. '!=(' → logprob: -18.125198364257812

Token 318: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.615255839889869e-05
    2. ' x' → logprob: -9.250096321105957
    3. '	x' → logprob: -18.50009536743164
    4. ')x' → logprob: -19.62509536743164
    5. '<|end|>' → logprob: -21.50009536743164
    6. '{x' → logprob: -22.00009536743164
    7. ' ' → logprob: -22.12509536743164
    8. '(x' → logprob: -22.25009536743164
    9. '$x' → logprob: -22.37509536743164
    10. 'self' → logprob: -22.62509536743164

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4743356704711914
    2. ':
' → logprob: -0.9743356704711914
    3. '       ' → logprob: -8.724335670471191
    4. '):
' → logprob: -10.099335670471191
    5. '):' → logprob: -11.349335670471191
    6. ':return' → logprob: -11.474335670471191
    7. '   ' → logprob: -12.224335670471191
    8. ',' → logprob: -12.349335670471191
    9. '           ' → logprob: -12.599335670471191
    10. ':

' → logprob: -12.599335670471191

Token 320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6361350417137146
    2. '       ' → logprob: -0.7611350417137146
    3. 'self' → logprob: -6.261135101318359
    4. ' self' → logprob: -6.886135101318359
    5. ':' → logprob: -7.886135101318359
    6. '   ' → logprob: -9.13613510131836
    7. 'return' → logprob: -10.26113510131836
    8. ':
' → logprob: -11.38613510131836
    9. ' return' → logprob: -11.76113510131836
    10. ':return' → logprob: -11.76113510131836

Token 321: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011783243156969547
    2. ' return' → logprob: -4.511783123016357
    3. '       ' → logprob: -7.511783123016357
    4. '           ' → logprob: -8.636783599853516
    5. ':return' → logprob: -11.761783599853516
    6. '	return' → logprob: -13.136783599853516
    7. '   ' → logprob: -13.761783599853516
    8. '{return' → logprob: -15.136783599853516
    9. 'eturn' → logprob: -17.636783599853516
    10. '_return' → logprob: -17.636783599853516

Token 322: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002786167024169117
    2. 'self' → logprob: -8.50027847290039
    3. ' x' → logprob: -9.50027847290039
    4. ' self' → logprob: -15.25027847290039
    5. '   ' → logprob: -18.62527847290039
    6. '	x' → logprob: -19.37527847290039
    7. '_x' → logprob: -20.75027847290039
    8. '(x' → logprob: -21.12527847290039
    9. '(self' → logprob: -21.62527847290039
    10. '       ' → logprob: -21.87527847290039

Token 323: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011331788846291602
    2. 'self' → logprob: -10.000113487243652
    3. '
' → logprob: -10.750113487243652
    4. '   ' → logprob: -10.875113487243652
    5. 'else' → logprob: -11.125113487243652
    6. '	' → logprob: -11.750113487243652
    7. '        
' → logprob: -13.750113487243652
    8. 's' → logprob: -14.375113487243652
    9. ' else' → logprob: -14.375113487243652
    10. '​' → logprob: -15.250113487243652

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017970333283301443
    2. '   ' → logprob: -9.500179290771484
    3. '
' → logprob: -10.250179290771484
    4. 'self' → logprob: -10.375179290771484
    5. 'else' → logprob: -10.875179290771484
    6. '	' → logprob: -11.625179290771484
    7. 'x' → logprob: -12.750179290771484
    8. 's' → logprob: -13.500179290771484
    9. ' else' → logprob: -13.500179290771484
    10. '        
' → logprob: -13.750179290771484

Token 325: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.14430367946624756
    2. '       ' → logprob: -2.394303798675537
    3. ' self' → logprob: -3.144303798675537
    4. '   ' → logprob: -10.769303321838379
    5. 'else' → logprob: -12.019303321838379
    6. '
' → logprob: -12.144303321838379
    7. '	self' → logprob: -12.144303321838379
    8. '[self' → logprob: -13.894303321838379
    9. '        
' → logprob: -14.019303321838379
    10. 's' → logprob: -14.644303321838379

Token 326: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -9.088346359931165e-07
    2. '_par' → logprob: -14.875000953674316
    3. '.' → logprob: -15.625000953674316
    4. '.parents' → logprob: -16.0
    5. ']._' → logprob: -16.5
    6. '_' → logprob: -17.375
    7. '_parent' → logprob: -17.625
    8. ')._' → logprob: -17.625
    9. ' .' → logprob: -18.5
    10. '.__' → logprob: -19.25

Token 327: 'parents' (ID: 40404)
  Prédit: 'parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.00015133652777876705
    2. '.parents' → logprob: -8.875151634216309
    3. '_par' → logprob: -11.875151634216309
    4. ' parents' → logprob: -12.500151634216309
    5. '.' → logprob: -16.125150680541992
    6. 'parent' → logprob: -16.250150680541992
    7. 'roots' → logprob: -16.250150680541992
    8. '_parent' → logprob: -16.625150680541992
    9. 'Parents' → logprob: -16.625150680541992
    10. '```' → logprob: -17.125150680541992

Token 328: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.625006675720215
    3. 'x' → logprob: -12.750006675720215
    4. '[self' → logprob: -17.0000057220459
    5. '[
' → logprob: -17.3750057220459
    6. ' [' → logprob: -18.0000057220459
    7. '(x' → logprob: -18.0000057220459
    8. ' x' → logprob: -18.6250057220459
    9. '{x' → logprob: -18.7500057220459
    10. '```' → logprob: -19.5000057220459

Token 329: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08328733593225479
    2. '=' → logprob: -2.583287239074707
    3. ']=' → logprob: -5.458287239074707
    4. '[' → logprob: -9.458287239074707
    5. ')' → logprob: -10.333287239074707
    6. ' =' → logprob: -11.208287239074707
    7. ' ]' → logprob: -13.583287239074707
    8. ')=' → logprob: -14.083287239074707
    9. 'x' → logprob: -15.208287239074707
    10. '[x' → logprob: -15.333287239074707

Token 330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '[' → logprob: -15.514163970947266
    4. '＝' → logprob: -17.889163970947266
    5. '.=' → logprob: -19.389163970947266
    6. ']=' → logprob: -19.514163970947266
    7. ' ' → logprob: -19.764163970947266
    8. ')=' → logprob: -19.764163970947266
    9. '=self' → logprob: -20.264163970947266
    10. ')' → logprob: -20.264163970947266

Token 331: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005233763717114925
    2. ' self' → logprob: -5.2552337646484375
    3. '(self' → logprob: -17.880233764648438
    4. '[self' → logprob: -18.630233764648438
    5. '	self' → logprob: -19.255233764648438
    6. '
' → logprob: -19.630233764648438
    7. 'elf' → logprob: -20.380233764648438
    8. ' ' → logprob: -20.380233764648438
    9. '   ' → logprob: -20.630233764648438
    10. '=self' → logprob: -21.255233764648438

Token 332: '.root' (ID: 25375)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0014889120357111096
    2. '.root' → logprob: -6.62648868560791
    3. '_root' → logprob: -9.12648868560791
    4. '.' → logprob: -10.75148868560791
    5. '_.' → logprob: -11.25148868560791
    6. 'root' → logprob: -11.87648868560791
    7. '.parents' → logprob: -12.75148868560791
    8. '.ro' → logprob: -13.00148868560791
    9. '_ro' → logprob: -13.12648868560791
    10. ' .' → logprob: -13.25148868560791

Token 333: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009118211455643177
    2. '(' → logprob: -7.000911712646484
    3. ' (' → logprob: -15.125911712646484
    4. '(
' → logprob: -16.250911712646484
    5. '(x' → logprob: -17.500911712646484
    6. '((' → logprob: -17.625911712646484
    7. 'self' → logprob: -18.500911712646484
    8. '(this' → logprob: -18.625911712646484
    9. '(s' → logprob: -19.125911712646484
    10. '(

' → logprob: -19.500911712646484

Token 334: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00767122209072113
    2. '_par' → logprob: -4.882671356201172
    3. '.parents' → logprob: -10.257671356201172
    4. '.' → logprob: -10.632671356201172
    5. ' .' → logprob: -13.132671356201172
    6. ' _' → logprob: -13.257671356201172
    7. ' ' → logprob: -14.507671356201172
    8. '_parent' → logprob: -15.507671356201172
    9. '_.' → logprob: -15.507671356201172
    10. '   ' → logprob: -15.507671356201172

Token 335: 'parents' (ID: 40404)
  Prédit: '_par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.0008721556514501572
    2. 'parents' → logprob: -7.8758721351623535
    3. '._' → logprob: -8.125872611999512
    4. '.parents' → logprob: -8.625872611999512
    5. ' _' → logprob: -12.375872611999512
    6. '_parent' → logprob: -12.750872611999512
    7. 'Parents' → logprob: -13.625872611999512
    8. 'par' → logprob: -13.750872611999512
    9. '```' → logprob: -13.750872611999512
    10. '.' → logprob: -14.000872611999512

Token 336: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -13.125004768371582
    3. 'x' → logprob: -13.250004768371582
    4. '[self' → logprob: -14.375004768371582
    5. '[
' → logprob: -16.250003814697266
    6. '(x' → logprob: -16.875003814697266
    7. ' [' → logprob: -17.000003814697266
    8. ' x' → logprob: -18.625003814697266
    9. '{x' → logprob: -19.875003814697266
    10. '```' → logprob: -20.625003814697266

Token 337: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4874109625816345
    2. '[x' → logprob: -0.9874109625816345
    3. 'x' → logprob: -4.362411022186279
    4. '(x' → logprob: -8.487410545349121
    5. ')x' → logprob: -9.362410545349121
    6. ' x' → logprob: -9.987410545349121
    7. ')
' → logprob: -9.987410545349121
    8. ' )' → logprob: -9.987410545349121
    9. '])' → logprob: -10.237410545349121
    10. ']' → logprob: -10.862410545349121

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006695830728858709
    2. 'return' → logprob: -5.381695747375488
    3. ' return' → logprob: -6.756695747375488
    4. '	' → logprob: -7.881695747375488
    5. '   ' → logprob: -8.131695747375488
    6. '	return' → logprob: -8.381695747375488
    7. '	   ' → logprob: -12.756695747375488
    8. ':return' → logprob: -13.256695747375488
    9. ')return' → logprob: -14.256695747375488
    10. '<|end|>' → logprob: -14.256695747375488

Token 339: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008435497060418129
    2. ' return' → logprob: -5.2584357261657715
    3. '       ' → logprob: -5.7584357261657715
    4. '	return' → logprob: -10.383435249328613
    5. '   ' → logprob: -12.383435249328613
    6. ':return' → logprob: -12.383435249328613
    7. '	' → logprob: -15.133435249328613
    8. ')return' → logprob: -15.383435249328613
    9. '_return' → logprob: -15.633435249328613
    10. ' ' → logprob: -16.00843620300293

Token 340: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031777136027812958
    2. ' self' → logprob: -5.753177642822266
    3. '(self' → logprob: -17.628177642822266
    4. '	self' → logprob: -18.128177642822266
    5. '_self' → logprob: -18.253177642822266
    6. ' ' → logprob: -19.003177642822266
    7. '   ' → logprob: -19.128177642822266
    8. ' ' → logprob: -19.878177642822266
    9. '[self' → logprob: -19.878177642822266
    10. '       ' → logprob: -20.003177642822266

Token 341: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.5332478142227046e-05
    2. '.parents' → logprob: -11.250015258789062
    3. '_par' → logprob: -13.875015258789062
    4. '_root' → logprob: -14.875015258789062
    5. '.' → logprob: -14.875015258789062
    6. '.root' → logprob: -15.625015258789062
    7. '_parent' → logprob: -15.875015258789062
    8. ' .' → logprob: -16.750015258789062
    9. 'Parents' → logprob: -17.000015258789062
    10. '.parent' → logprob: -17.375015258789062

Token 342: 'parents' (ID: 40404)
  Prédit: 'parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -4.320199877838604e-07
    2. '.parents' → logprob: -15.25
    3. ' parents' → logprob: -15.875
    4. 'parent' → logprob: -17.125
    5. 'Parents' → logprob: -19.625
    6. '_par' → logprob: -20.0
    7. 'roots' → logprob: -20.625
    8. 'players' → logprob: -20.625
    9. '_parent' → logprob: -21.625
    10. '```' → logprob: -21.75

Token 343: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.014415462501347065
    2. 'x' → logprob: -4.889415264129639
    3. '[' → logprob: -5.014415264129639
    4. '[
' → logprob: -9.514415740966797
    5. '(x' → logprob: -9.889415740966797
    6. '<|end|>' → logprob: -12.139415740966797
    7. '```' → logprob: -12.264415740966797
    8. ']' → logprob: -12.514415740966797
    9. ' x' → logprob: -13.889415740966797
    10. ')' → logprob: -14.264415740966797

Token 344: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0047218031249940395
    2. '<|end|>' → logprob: -5.379721641540527
    3. '}' → logprob: -9.629721641540527
    4. '<|end|>' → logprob: -11.254721641540527
    5. ')
' → logprob: -11.629721641540527
    6. '
' → logprob: -12.504721641540527
    7. '```' → logprob: -12.754721641540527
    8. ' )' → logprob: -13.004721641540527
    9. ']' → logprob: -13.254721641540527
    10. ')return' → logprob: -14.254721641540527

Token 345: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01014736294746399
    2. '   ' → logprob: -4.635147571563721
    3. ' def' → logprob: -7.885147571563721
    4. '	def' → logprob: -12.010147094726562
    5. '```' → logprob: -12.885147094726562
    6. ' ' → logprob: -13.010147094726562
    7. '<|end|>' → logprob: -13.010147094726562
    8. '  ' → logprob: -14.510147094726562
    9. '    
' → logprob: -14.635147094726562
    10. 'size' → logprob: -15.010147094726562

Token 346: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.967624019831419e-05
    2. ' def' → logprob: -9.875060081481934
    3. '   ' → logprob: -11.750060081481934
    4. '    
' → logprob: -16.125059127807617
    5. 'size' → logprob: -16.250059127807617
    6. '	def' → logprob: -17.000059127807617
    7. '```' → logprob: -18.125059127807617
    8. '
' → logprob: -19.125059127807617
    9. ' ' → logprob: -20.000059127807617
    10. 'is' → logprob: -20.375059127807617

Token 347: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.027248164638876915
    2. 'same' → logprob: -3.7772481441497803
    3. 'iss' → logprob: -6.277248382568359
    4. ' size' → logprob: -6.652248382568359
    5. 'is' → logprob: -7.652248382568359
    6. 'connected' → logprob: -8.65224838256836
    7. 'find' → logprob: -9.40224838256836
    8. 'get' → logprob: -9.77724838256836
    9. ' same' → logprob: -11.40224838256836
    10. ' iss' → logprob: -11.52724838256836

Token 348: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10024570673704147
    2. '(' → logprob: -2.350245714187622
    3. '(s' → logprob: -10.975245475769043
    4. '(
' → logprob: -11.475245475769043
    5. ' (' → logprob: -11.725245475769043
    6. '(x' → logprob: -13.475245475769043
    7. 'self' → logprob: -14.100245475769043
    8. '(

' → logprob: -14.850245475769043
    9. '(sel' → logprob: -15.725245475769043
    10. '(this' → logprob: -16.35024642944336

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000754001026507467
    2. 'self' → logprob: -7.875753879547119
    3. '(self' → logprob: -8.375754356384277
    4. '(' → logprob: -9.750754356384277
    5. ')' → logprob: -9.875754356384277
    6. ',
' → logprob: -11.875754356384277
    7. ',x' → logprob: -11.875754356384277
    8. ',self' → logprob: -12.250754356384277
    9. '(x' → logprob: -12.375754356384277
    10. '[' → logprob: -12.500754356384277

Token 350: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004081724211573601
    2. ' x' → logprob: -5.504081726074219
    3. 'self' → logprob: -12.754081726074219
    4. '   ' → logprob: -15.254081726074219
    5. ' ' → logprob: -16.12908172607422
    6. ' self' → logprob: -16.75408172607422
    7. ')' → logprob: -18.87908172607422
    8. '	x' → logprob: -19.50408172607422
    9. '  ' → logprob: -20.25408172607422
    10. 'a' → logprob: -20.25408172607422

Token 351: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004673980642110109
    2. ')' → logprob: -5.379673957824707
    3. '):
' → logprob: -10.629673957824707
    4. ' ):' → logprob: -11.004673957824707
    5. ',' → logprob: -11.379673957824707
    6. '):

' → logprob: -15.004673957824707
    7. 'self' → logprob: -15.254673957824707
    8. '(x' → logprob: -16.129674911499023
    9. '),' → logprob: -16.254674911499023
    10. ')：' → logprob: -16.254674911499023

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4749700129032135
    2. '(' → logprob: -1.9749699831008911
    3. 'return' → logprob: -2.3499701023101807
    4. ' return' → logprob: -2.5999701023101807
    5. '   ' → logprob: -2.9749701023101807
    6. '(self' → logprob: -4.724969863891602
    7. '[' → logprob: -5.724969863891602
    8. '(
' → logprob: -6.349969863891602
    9. ')' → logprob: -7.599969863891602
    10. '	return' → logprob: -7.599969863891602

Token 353: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0010894970037043095
    2. ' return' → logprob: -7.001089572906494
    3. '       ' → logprob: -8.751089096069336
    4. 'x' → logprob: -11.001089096069336
    5. 'root' → logprob: -13.126089096069336
    6. '   ' → logprob: -13.876089096069336
    7. 'r' → logprob: -16.626089096069336
    8. '	return' → logprob: -16.876089096069336
    9. 'res' → logprob: -19.001089096069336
    10. '        
' → logprob: -19.376089096069336

Token 354: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31327059864997864
    2. ' self' → logprob: -1.3132705688476562
    3. '   ' → logprob: -11.688270568847656
    4. ' ' → logprob: -15.438270568847656
    5. '       ' → logprob: -16.313270568847656
    6. '(self' → logprob: -16.313270568847656
    7. '	self' → logprob: -16.813270568847656
    8. '0' → logprob: -16.813270568847656
    9. '  ' → logprob: -17.438270568847656
    10. '    ' → logprob: -18.063270568847656

Token 355: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.9361264946837764e-07
    2. '.size' → logprob: -16.125
    3. '.' → logprob: -17.25
    4. ')._' → logprob: -18.125
    5. ']._' → logprob: -18.625
    6. ' .' → logprob: -19.5
    7. '_size' → logprob: -20.0
    8. '._
' → logprob: -20.125
    9. '.get' → logprob: -20.625
    10. '_' → logprob: -21.375

Token 356: 'sizes' (ID: 131812)
  Prédit: 'sizes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.0028784610331058502
    2. '_sizes' → logprob: -5.877878665924072
    3. 'size' → logprob: -9.627878189086914
    4. ' sizes' → logprob: -12.377878189086914
    5. 'parents' → logprob: -13.252878189086914
    6. 'siz' → logprob: -14.002878189086914
    7. '_size' → logprob: -15.252878189086914
    8. 'Sizes' → logprob: -15.502878189086914
    9. 's' → logprob: -16.002878189086914
    10. 'sz' → logprob: -16.627878189086914

Token 357: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00011689399980241433
    2. '[' → logprob: -9.500117301940918
    3. 'self' → logprob: -10.375117301940918
    4. '(self' → logprob: -12.000117301940918
    5. '[x' → logprob: -12.625117301940918
    6. '[
' → logprob: -13.875117301940918
    7. '[root' → logprob: -16.1251163482666
    8. '```' → logprob: -16.7501163482666
    9. ' self' → logprob: -17.0001163482666
    10. '[(' → logprob: -17.1251163482666

Token 358: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0015340241370722651
    2. 'root' → logprob: -6.5015339851379395
    3. '.' → logprob: -10.501534461975098
    4. '._' → logprob: -13.501534461975098
    5. '.
' → logprob: -13.751534461975098
    6. ' .' → logprob: -14.626534461975098
    7. '[root' → logprob: -14.626534461975098
    8. '.ro' → logprob: -14.876534461975098
    9. '/root' → logprob: -15.876534461975098
    10. '_root' → logprob: -16.62653350830078

Token 359: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003361774142831564
    2. '(' → logprob: -8.000336647033691
    3. '(
' → logprob: -14.500336647033691
    4. 'x' → logprob: -15.375336647033691
    5. ' (' → logprob: -18.625335693359375
    6. '(

' → logprob: -19.375335693359375
    7. ']' → logprob: -19.875335693359375
    8. '](' → logprob: -20.125335693359375
    9. '((' → logprob: -21.500335693359375
    10. '(
' → logprob: -21.875335693359375

Token 360: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.0391463193809614e-05
    2. '(x' → logprob: -10.000060081481934
    3. ' )' → logprob: -12.125060081481934
    4. ')' → logprob: -12.375060081481934
    5. ']' → logprob: -13.000060081481934
    6. ')]
' → logprob: -13.625060081481934
    7. 'x' → logprob: -14.625060081481934
    8. '(' → logprob: -14.625060081481934
    9. '())' → logprob: -15.375060081481934
    10. '))' → logprob: -15.375060081481934

Token 361: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31909674406051636
    2. '<|end|>' → logprob: -1.8190968036651611
    3. '   ' → logprob: -2.319096803665161
    4. ' def' → logprob: -4.819096565246582
    5. ')' → logprob: -6.944096565246582
    6. '	def' → logprob: -7.194096565246582
    7. '<|end|>' → logprob: -7.444096565246582
    8. '#' → logprob: -7.819096565246582
    9. '  ' → logprob: -7.944096565246582
    10. '```' → logprob: -8.069096565246582

Token 362: ' args' (ID: 4966)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07364092767238617
    2. 'main' → logprob: -2.698640823364258
    3. ' solve' → logprob: -5.823640823364258
    4. 'solve' → logprob: -7.573640823364258
    5. ' dfs' → logprob: -9.198640823364258
    6. 'dfs' → logprob: -10.073640823364258
    7. '	main' → logprob: -11.198640823364258
    8. ' read' → logprob: -11.823640823364258
    9. '_main' → logprob: -11.823640823364258
    10. ' input' → logprob: -11.948640823364258

Token 363: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.3680662512779236
    2. '_parser' → logprob: -1.7430663108825684
    3. '_parse' → logprob: -4.118066310882568
    4. 'parse' → logprob: -4.118066310882568
    5. '_' → logprob: -4.243066310882568
    6. '_to' → logprob: -4.368066310882568
    7. '_split' → logprob: -4.368066310882568
    8. 'orted' → logprob: -5.118066310882568
    9. 'plit' → logprob: -5.243066310882568
    10. '():' → logprob: -5.368066310882568

Token 364: '(li' (ID: 111234)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.8463683128356934
    2. '(lst' → logprob: -1.2213683128356934
    3. '(a' → logprob: -2.0963683128356934
    4. '(' → logprob: -2.4713683128356934
    5. '(array' → logprob: -3.4713683128356934
    6. '(seq' → logprob: -3.5963683128356934
    7. '(ls' → logprob: -5.596368312835693
    8. '(iter' → logprob: -5.846368312835693
    9. '(l' → logprob: -6.471368312835693
    10. '(sequence' → logprob: -7.346368312835693

Token 365: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00990754272788763
    2. '):
' → logprob: -4.8849077224731445
    3. 'st' → logprob: -7.1349077224731445
    4. ')' → logprob: -7.2599077224731445
    5. 't' → logprob: -7.6349077224731445
    6. ',' → logprob: -8.759907722473145
    7. ':' → logprob: -9.509907722473145
    8. '   ' → logprob: -11.384907722473145
    9. ' ):' → logprob: -11.509907722473145
    10. '):
' → logprob: -11.759907722473145

Token 366: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.257467657327652
    2. 'reverse' → logprob: -1.7574676275253296
    3. ' key' → logprob: -3.507467746734619
    4. 'rev' → logprob: -3.882467746734619
    5. ' reverse' → logprob: -5.882467746734619
    6. 'cmp' → logprob: -8.007467269897461
    7. ')' → logprob: -8.757467269897461
    8. ' rev' → logprob: -9.132467269897461
    9. ',' → logprob: -9.132467269897461
    10. 'descending' → logprob: -9.757467269897461

Token 367: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.30043429136276245
    2. '=lambda' → logprob: -1.5504343509674072
    3. '=' → logprob: -3.0504343509674072
    4. '=len' → logprob: -11.925434112548828
    5. ' =' → logprob: -14.425434112548828
    6. '=list' → logprob: -14.800434112548828
    7. '=`' → logprob: -15.050434112548828
    8. '=str' → logprob: -15.175434112548828
    9. '=l' → logprob: -15.550434112548828
    10. '=}' → logprob: -15.800434112548828

Token 368: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027743245009332895
    2. ',' → logprob: -6.627774238586426
    3. '=None' → logprob: -7.127774238586426
    4. ')' → logprob: -7.877774238586426
    5. '=' → logprob: -8.752774238586426
    6. ' ):' → logprob: -9.502774238586426
    7. '):
' → logprob: -10.752774238586426
    8. ')=' → logprob: -11.877774238586426
    9. '=[]' → logprob: -14.002774238586426
    10. '=lambda' → logprob: -14.002774238586426

Token 369: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.03818436339497566
    2. ' reverse' → logprob: -3.288184404373169
    3. 'rev' → logprob: -9.03818416595459
    4. ')' → logprob: -11.41318416595459
    5. 're' → logprob: -11.91318416595459
    6. '_reverse' → logprob: -13.28818416595459
    7. 'r' → logprob: -13.78818416595459
    8. '.reverse' → logprob: -14.53818416595459
    9. 'reserve' → logprob: -14.53818416595459
    10. '(reverse' → logprob: -14.53818416595459

Token 370: '=False' (ID: 12148)
  Prédit: '=False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=False' → logprob: -0.02979295887053013
    2. '=' → logprob: -3.5297930240631104
    3. '=True' → logprob: -10.154792785644531
    4. '=None' → logprob: -13.279792785644531
    5. '):' → logprob: -13.654792785644531
    6. ')=' → logprob: -14.779792785644531
    7. ')' → logprob: -15.529792785644531
    8. ' =' → logprob: -16.02979278564453
    9. 'False' → logprob: -17.40479278564453
    10. '=`' → logprob: -17.65479278564453

Token 371: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00035798799945041537
    2. ')' → logprob: -8.000357627868652
    3. '):
' → logprob: -11.375357627868652
    4. ' ):' → logprob: -11.500357627868652
    5. ',' → logprob: -14.500357627868652
    6. ':' → logprob: -16.37535858154297
    7. ')：' → logprob: -16.62535858154297
    8. '):
' → logprob: -16.87535858154297
    9. ')=' → logprob: -17.37535858154297
    10. '   ' → logprob: -17.50035858154297

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4130370318889618
    2. 'return' → logprob: -1.2880370616912842
    3. ' return' → logprob: -2.788037061691284
    4. 'n' → logprob: -7.913036823272705
    5. '	return' → logprob: -8.163037300109863
    6. 'if' → logprob: -9.538037300109863
    7. '    ' → logprob: -9.913037300109863
    8. ')' → logprob: -10.163037300109863
    9. ' ' → logprob: -10.913037300109863
    10. 'idx' → logprob: -11.163037300109863

Token 373: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01643936149775982
    2. ' return' → logprob: -4.766439437866211
    3. '   ' → logprob: -5.766439437866211
    4. 'idx' → logprob: -6.391439437866211
    5. 'indices' → logprob: -6.516439437866211
    6. 'res' → logprob: -7.766439437866211
    7. 'inds' → logprob: -8.016439437866211
    8. 'if' → logprob: -9.016439437866211
    9. 'n' → logprob: -9.141439437866211
    10. 'ret' → logprob: -9.516439437866211

Token 374: ' [' (ID: 723)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00039135036058723927
    2. ' sorted' → logprob: -7.875391483306885
    3. '[' → logprob: -12.375391006469727
    4. '(sorted' → logprob: -12.375391006469727
    5. 'list' → logprob: -13.000391006469727
    6. '   ' → logprob: -15.375391006469727
    7. 'tuple' → logprob: -16.125391006469727
    8. '.sorted' → logprob: -16.250391006469727
    9. ' ' → logprob: -16.375391006469727
    10. '```' → logprob: -18.375391006469727

Token 375: 'i' (ID: 72)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3914611339569092
    2. 'i' → logprob: -1.2664611339569092
    3. 'v' → logprob: -4.266461372375488
    4. 'sorted' → logprob: -4.516461372375488
    5. 'k' → logprob: -4.641461372375488
    6. 'e' → logprob: -5.891461372375488
    7. 'li' → logprob: -6.141461372375488
    8. 't' → logprob: -7.266461372375488
    9. 'a' → logprob: -7.391461372375488
    10. '*' → logprob: -7.641461372375488

Token 376: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0548880398273468
    2. 'for' → logprob: -2.9298880100250244
    3. ' ' → logprob: -13.054887771606445
    4. '	for' → logprob: -13.429887771606445
    5. '
' → logprob: -14.054887771606445
    6. '   ' → logprob: -14.554887771606445
    7. '  ' → logprob: -15.554887771606445
    8. ' in' → logprob: -15.804887771606445
    9. 'x' → logprob: -16.179887771606445
    10. 'in' → logprob: -16.804887771606445

Token 377: ' _,' (ID: 18042)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07047194987535477
    2. ',' → logprob: -3.195472002029419
    3. ' i' → logprob: -4.19547176361084
    4. '_,' → logprob: -4.57047176361084
    5. '_' → logprob: -7.82047176361084
    6. '(i' → logprob: -8.57047176361084
    7. ',i' → logprob: -8.57047176361084
    8. '_i' → logprob: -8.82047176361084
    9. ',_' → logprob: -9.07047176361084
    10. ' _,' → logprob: -9.07047176361084

Token 378: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07003313302993774
    2. ' i' → logprob: -2.695033073425293
    3. ' (' → logprob: -10.445033073425293
    4. '(i' → logprob: -10.570033073425293
    5. '_i' → logprob: -11.195033073425293
    6. '(' → logprob: -11.195033073425293
    7. '<|end|>' → logprob: -12.195033073425293
    8. '_' → logprob: -12.820033073425293
    9. ' ' → logprob: -13.195033073425293
    10. '	i' → logprob: -13.820033073425293

Token 379: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01815146580338478
    2. 'in' → logprob: -4.01815128326416
    3. 'n' → logprob: -15.14315128326416
    4. 'ind' → logprob: -15.76815128326416
    5. 'sorted' → logprob: -15.76815128326416
    6. 'import' → logprob: -15.89315128326416
    7. '<|end|>' → logprob: -15.89315128326416
    8. ' ' → logprob: -16.018152236938477
    9. ']' → logprob: -16.143152236938477
    10. 'In' → logprob: -16.143152236938477

Token 380: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.07890355587005615
    2. ' sorted' → logprob: -2.5789036750793457
    3. '(sorted' → logprob: -11.453903198242188
    4. 'enumer' → logprob: -14.203903198242188
    5. '_sorted' → logprob: -14.328903198242188
    6. '
' → logprob: -14.578903198242188
    7. 'sort' → logprob: -14.578903198242188
    8. 'li' → logprob: -15.703903198242188
    9. ' enumerate' → logprob: -15.953903198242188
    10. '   ' → logprob: -16.078903198242188

Token 381: '(
' (ID: 1607)
  Prédit: '(zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.001911265542730689
    2. '((' → logprob: -7.126911163330078
    3. '(' → logprob: -7.626911163330078
    4. '(en' → logprob: -7.751911163330078
    5. 'zip' → logprob: -9.376911163330078
    6. '([(' → logprob: -10.126911163330078
    7. '(((' → logprob: -10.251911163330078
    8. '(
' → logprob: -10.876911163330078
    9. ' zip' → logprob: -12.876911163330078
    10. '(li' → logprob: -13.001911163330078

Token 382: '       ' (ID: 309)
  Prédit: '(zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.11360173672437668
    2. '((' → logprob: -2.3636016845703125
    3. 'zip' → logprob: -4.9886016845703125
    4. '[(' → logprob: -5.6136016845703125
    5. '([(' → logprob: -6.4886016845703125
    6. '(((' → logprob: -7.4886016845703125
    7. ' zip' → logprob: -8.363601684570312
    8. 'enumer' → logprob: -8.863601684570312
    9. '[((' → logprob: -8.863601684570312
    10. '(
' → logprob: -9.488601684570312

Token 383: ' [(' (ID: 43900)
  Prédit: '(zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.12279012054204941
    2. '((' → logprob: -2.6227900981903076
    3. '[(' (adapté à ' [(') → logprob: -3.8727900981903076
    4. 'zip' → logprob: -3.8727900981903076
    5. ' zip' → logprob: -7.622790336608887
    6. '([(' → logprob: -7.997790336608887
    7. '(
' → logprob: -8.372790336608887
    8. '[((' → logprob: -9.372790336608887
    9. '(' → logprob: -9.872790336608887
    10. '(((' → logprob: -10.247790336608887

Token 384: 'a' (ID: 64)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.5084853172302246
    2. 'key' → logprob: -1.0084853172302246
    3. 'li' → logprob: -4.133485317230225
    4. '(li' → logprob: -4.133485317230225
    5. ' key' → logprob: -6.633485317230225
    6. '((' → logprob: -8.758485794067383
    7. ' (' → logprob: -8.883485794067383
    8. '(' → logprob: -10.258485794067383
    9. '(k' → logprob: -10.633485794067383
    10. ' li' → logprob: -10.883485794067383

Token 385: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2987734377384186
    2. ',' → logprob: -1.5487734079360962
    3. ',key' → logprob: -3.2987735271453857
    4. 'if' → logprob: -5.173773288726807
    5. '(key' → logprob: -6.548773288726807
    6. '[key' → logprob: -6.673773288726807
    7. 'key' → logprob: -8.048773765563965
    8. ' key' → logprob: -10.298773765563965
    9. '
' → logprob: -10.673773765563965
    10. '[' → logprob: -11.173773765563965

Token 386: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004694156814366579
    2. ' i' → logprob: -6.129693984985352
    3. 'a' → logprob: -6.379693984985352
    4. 'b' → logprob: -7.754693984985352
    5. 'li' → logprob: -8.754693984985352
    6. '0' → logprob: -9.504693984985352
    7. '(i' → logprob: -9.879693984985352
    8. 'idx' → logprob: -10.879693984985352
    9. ')' → logprob: -11.004693984985352
    10. ' (' → logprob: -11.629693984985352

Token 387: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.027225754223764e-05
    2. ' )' → logprob: -10.375060081481934
    3. ')
' → logprob: -11.375060081481934
    4. '[::-' → logprob: -12.250060081481934
    5. 'for' → logprob: -13.375060081481934
    6. ']' → logprob: -13.375060081481934
    7. 'in' → logprob: -13.500060081481934
    8. 'index' → logprob: -13.500060081481934
    9. 'if' → logprob: -13.875060081481934
    10. '   ' → logprob: -14.000060081481934

Token 388: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0708085298538208
    2. 'for' → logprob: -2.8208084106445312
    3. ' in' → logprob: -5.195808410644531
    4. ')' → logprob: -5.820808410644531
    5. 'in' → logprob: -8.570808410644531
    6. '   ' → logprob: -10.445808410644531
    7. ' ' → logprob: -10.820808410644531
    8. ']' → logprob: -11.070808410644531
    9. '       ' → logprob: -11.445808410644531
    10. ' )' → logprob: -11.445808410644531

Token 389: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005885064136236906
    2. ' i' → logprob: -5.255885124206543
    3. ' (' → logprob: -8.505885124206543
    4. 'a' → logprob: -8.505885124206543
    5. '(i' → logprob: -8.880885124206543
    6. ',' → logprob: -9.755885124206543
    7. ',i' → logprob: -11.130885124206543
    8. '(' → logprob: -11.380885124206543
    9. '   ' → logprob: -12.255885124206543
    10. '(a' → logprob: -12.380885124206543

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005079957190901041
    2. 'in' → logprob: -7.750507831573486
    3. ',a' → logprob: -10.750508308410645
    4. 'enumer' → logprob: -10.750508308410645
    5. ' in' → logprob: -11.125508308410645
    6. 'range' → logprob: -11.750508308410645
    7. '<|end|>' → logprob: -12.000508308410645
    8. ',
' → logprob: -13.375508308410645
    9. ' ,' → logprob: -13.875508308410645
    10. 'li' → logprob: -14.875508308410645

Token 391: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48752444982528687
    2. 'enumer' → logprob: -0.9875244498252869
    3. ' enumerate' → logprob: -4.987524509429932
    4. ' a' → logprob: -5.862524509429932
    5. ' in' → logprob: -6.112524509429932
    6. 'in' → logprob: -6.862524509429932
    7. '(a' → logprob: -8.487524032592773
    8. '<|end|>' → logprob: -9.862524032592773
    9. ',' → logprob: -10.362524032592773
    10. '
' → logprob: -10.612524032592773

Token 392: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4288122057914734
    2. 'in' → logprob: -1.0538122653961182
    3. 'enumer' → logprob: -9.553812026977539
    4. 'ine' → logprob: -11.928812026977539
    5. ',' → logprob: -12.178812026977539
    6. 'ind' → logprob: -12.428812026977539
    7. ')' → logprob: -12.678812026977539
    8. '
' → logprob: -13.053812026977539
    9. 'inthe' → logprob: -13.178812026977539
    10. ' ' → logprob: -13.553812026977539

Token 393: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.03804505243897438
    2. ' enumerate' → logprob: -3.2880451679229736
    3. '
' → logprob: -13.413044929504395
    4. '```' → logprob: -14.288044929504395
    5. 'enum' → logprob: -14.788044929504395
    6. 'in' → logprob: -14.913044929504395
    7. ' in' → logprob: -15.163044929504395
    8. 'en' → logprob: -16.41304588317871
    9. ',' → logprob: -16.66304588317871
    10. 'index' → logprob: -16.78804588317871

Token 394: '(li' (ID: 111234)
  Prédit: '(li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(li' → logprob: -2.141186450899113e-05
    2. '(en' → logprob: -11.125020980834961
    3. '(' → logprob: -13.375020980834961
    4. 'li' → logprob: -13.375020980834961
    5. '((' → logprob: -13.500020980834961
    6. '(zip' → logprob: -14.625020980834961
    7. '(mi' → logprob: -15.000020980834961
    8. '(lo' → logprob: -15.125020980834961
    9. ' (' → logprob: -15.375020980834961
    10. '(le' → logprob: -15.375020980834961

Token 395: ')],' (ID: 60559)
  Prédit: ')],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')],' → logprob: -0.03220974653959274
    2. ')],
' → logprob: -3.532209634780884
    3. ')])' → logprob: -6.657209873199463
    4. ')]' → logprob: -7.157209873199463
    5. ')' → logprob: -8.532209396362305
    6. '])' → logprob: -9.532209396362305
    7. '],' → logprob: -10.157209396362305
    8. ']' → logprob: -10.907209396362305
    9. ')]
' → logprob: -11.032209396362305
    10. ',' → logprob: -11.157209396362305

Token 396: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6720022559165955
    2. ' key' → logprob: -0.9220022559165955
    3. 'reverse' → logprob: -2.6720023155212402
    4. ' reverse' → logprob: -3.7970023155212402
    5. '   ' → logprob: -11.672001838684082
    6. '       ' → logprob: -11.797001838684082
    7. ',key' → logprob: -11.797001838684082
    8. ')' → logprob: -12.672001838684082
    9. '	key' → logprob: -12.672001838684082
    10. '(key' → logprob: -12.797001838684082

Token 397: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5235425233840942
    2. '=lambda' → logprob: -0.8985425233840942
    3. 'key' → logprob: -8.398542404174805
    4. 'lambda' → logprob: -9.773542404174805
    5. '=value' → logprob: -10.523542404174805
    6. '=
' → logprob: -10.648542404174805
    7. ',key' → logprob: -10.648542404174805
    8. ')' → logprob: -11.648542404174805
    9. ' key' → logprob: -11.648542404174805
    10. '(key' → logprob: -11.648542404174805

Token 398: 'lambda' (ID: 35280)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.013377388939261436
    2. 'lambda' → logprob: -4.3883771896362305
    3. ' key' → logprob: -7.6383771896362305
    4. 'None' → logprob: -8.13837718963623
    5. '(lambda' → logprob: -10.01337718963623
    6. ' lambda' → logprob: -11.13837718963623
    7. '(key' → logprob: -11.13837718963623
    8. '
' → logprob: -11.88837718963623
    9. ')' → logprob: -12.63837718963623
    10. '(' → logprob: -13.38837718963623

Token 399: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007391759660094976
    2. 'a' → logprob: -5.007391929626465
    3. ' x' → logprob: -7.382391929626465
    4. 'e' → logprob: -10.132391929626465
    5. ' a' → logprob: -12.382391929626465
    6. 'v' → logprob: -12.757391929626465
    7. 'i' → logprob: -13.132391929626465
    8. 'k' → logprob: -13.382391929626465
    9. 'b' → logprob: -13.882391929626465
    10. 'z' → logprob: -14.007391929626465

Token 400: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0695996806025505
    2. 't' → logprob: -2.8195996284484863
    3. ':t' → logprob: -4.944599628448486
    4. ' :' → logprob: -8.319600105285645
    5. ':key' → logprob: -9.194600105285645
    6. 'key' → logprob: -9.694600105285645
    7. 'k' → logprob: -10.694600105285645
    8. 'a' → logprob: -10.944600105285645
    9. ' t' → logprob: -11.694600105285645
    10. ':k' → logprob: -11.694600105285645

Token 401: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.188092902302742
    2. 't' → logprob: -2.0630929470062256
    3. ' key' → logprob: -3.1880929470062256
    4. '(key' → logprob: -6.3130927085876465
    5. ' t' → logprob: -6.8130927085876465
    6. '(t' → logprob: -8.813093185424805
    7. '(' → logprob: -10.313093185424805
    8. ' (' → logprob: -10.938093185424805
    9. '	key' → logprob: -11.938093185424805
    10. '   ' → logprob: -12.188093185424805

Token 402: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0001673061487963423
    2. 't' → logprob: -8.750166893005371
    3. '(' → logprob: -12.000166893005371
    4. '((' → logprob: -13.375166893005371
    5. '(
' → logprob: -14.625166893005371
    6. '(None' → logprob: -14.625166893005371
    7. '(key' → logprob: -16.625167846679688
    8. ' (' → logprob: -17.125167846679688
    9. 'and' → logprob: -17.125167846679688
    10. ' t' → logprob: -17.625167846679688

Token 403: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007906720042228699
    2. ')),' → logprob: -5.382906913757324
    3. ')' → logprob: -6.257906913757324
    4. '(' → logprob: -7.257906913757324
    5. '))' → logprob: -7.757906913757324
    6. '0' → logprob: -8.882906913757324
    7. '1' → logprob: -10.882906913757324
    8. ')),
' → logprob: -11.007906913757324
    9. '
' → logprob: -11.507906913757324
    10. ' if' → logprob: -11.632906913757324

Token 404: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1002098023891449
    2. '0' → logprob: -2.3502097129821777
    3. '-' → logprob: -13.600210189819336
    4. ' ' → logprob: -13.975210189819336
    5. '   ' → logprob: -14.225210189819336
    6. '
' → logprob: -16.350210189819336
    7. ')' → logprob: -16.600210189819336
    8. '```' → logprob: -17.225210189819336
    9. '::-' → logprob: -17.662710189819336
    10. ']' → logprob: -17.662710189819336

Token 405: ']))' (ID: 20259)
  Prédit: ')),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.2475544661283493
    2. '))' → logprob: -1.6225544214248657
    3. ')' → logprob: -3.8725545406341553
    4. ' ' → logprob: -7.747554302215576
    5. '))),' → logprob: -7.872554302215576
    6. ')))' → logprob: -9.372554779052734
    7. ')),
' → logprob: -9.747554779052734
    8. '),' → logprob: -10.497554779052734
    9. ' if' → logprob: -10.622554779052734
    10. '[' → logprob: -10.747554779052734

Token 406: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5469539165496826
    2. ',' → logprob: -0.9219539165496826
    3. 'if' → logprob: -3.7969539165496826
    4. ')' → logprob: -7.296954154968262
    5. ' ,' → logprob: -8.671954154968262
    6. '   ' → logprob: -8.796954154968262
    7. '),' → logprob: -9.671954154968262
    8. ' ' → logprob: -11.796954154968262
    9. ')]' → logprob: -11.796954154968262
    10. '       ' → logprob: -12.046954154968262

Token 407: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.126969575881958
    2. ' key' → logprob: -2.126969575881958
    3. ' callable' → logprob: -10.126969337463379
    4. '(key' → logprob: -14.751969337463379
    5. ' ' → logprob: -14.876969337463379
    6. '   ' → logprob: -15.126969337463379
    7. 'not' → logprob: -15.626969337463379
    8. 'call' → logprob: -15.876969337463379
    9. '	key' → logprob: -16.626970291137695
    10. ' not' → logprob: -16.626970291137695

Token 408: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06536988168954849
    2. ' else' → logprob: -2.8153698444366455
    3. ' is' → logprob: -5.940370082855225
    4. 'is' → logprob: -7.190370082855225
    5. '!=' → logprob: -12.315369606018066
    6. ' ' → logprob: -12.940369606018066
    7. '	else' → logprob: -13.565369606018066
    8. 'not' → logprob: -14.315369606018066
    9. '!==' → logprob: -14.440369606018066
    10. '
' → logprob: -14.815369606018066

Token 409: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4483279585838318
    2. 'lambda' → logprob: -1.5733280181884766
    3. '(lambda' → logprob: -2.0733280181884766
    4. ' None' → logprob: -4.448328018188477
    5. ' lambda' → logprob: -4.573328018188477
    6. '(None' → logprob: -5.573328018188477
    7. ' (' → logprob: -6.573328018188477
    8. '(' → logprob: -7.073328018188477
    9. 't' → logprob: -9.823328018188477
    10. '   ' → logprob: -10.073328018188477

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010249509941786528
    2. '   ' → logprob: -8.001025199890137
    3. ' ,' → logprob: -8.626025199890137
    4. ')]' → logprob: -8.626025199890137
    5. '       ' → logprob: -9.001025199890137
    6. '),' → logprob: -9.126025199890137
    7. ')' → logprob: -9.751025199890137
    8. ')],' → logprob: -10.876025199890137
    9. ')])' → logprob: -12.626025199890137
    10. ',
' → logprob: -12.876025199890137

Token 411: ' reverse' (ID: 18199)
  Prédit: ' reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.14286458492279053
    2. 'reverse' → logprob: -2.01786470413208
    3. '   ' → logprob: -9.142864227294922
    4. '       ' → logprob: -10.017864227294922
    5. ')' → logprob: -11.392864227294922
    6. '.reverse' → logprob: -11.517864227294922
    7. '_reverse' → logprob: -12.517864227294922
    8. '    ' → logprob: -12.767864227294922
    9. '(reverse' → logprob: -13.142864227294922
    10. 'Reverse' → logprob: -13.392864227294922

Token 412: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04884498938918114
    2. 'reverse' → logprob: -3.298845052719116
    3. '=True' → logprob: -4.923844814300537
    4. ')' → logprob: -5.798844814300537
    5. ' reverse' → logprob: -8.048845291137695
    6. '(reverse' → logprob: -9.673845291137695
    7. ',' → logprob: -10.673845291137695
    8. '_reverse' → logprob: -11.673845291137695
    9. '=re' → logprob: -11.673845291137695
    10. '),' → logprob: -11.923845291137695

Token 413: 'reverse' (ID: 53832)
  Prédit: 'reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.012520955875515938
    2. ' reverse' → logprob: -4.387520790100098
    3. '   ' → logprob: -12.512520790100098
    4. '(reverse' → logprob: -12.762520790100098
    5. 'True' → logprob: -13.387520790100098
    6. ' ' → logprob: -14.012520790100098
    7. '.reverse' → logprob: -14.887520790100098
    8. '
' → logprob: -15.262520790100098
    9. '    ' → logprob: -15.387520790100098
    10. '       ' → logprob: -15.512520790100098

Token 414: '
' (ID: 198)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003185198176652193
    2. ')' → logprob: -5.753185272216797
    3. '))' → logprob: -13.003185272216797
    4. ']' → logprob: -13.128185272216797
    5. ' )' → logprob: -13.253185272216797
    6. '   ' → logprob: -14.378185272216797
    7. ')])' → logprob: -15.003185272216797
    8. ')]
' → logprob: -15.878185272216797
    9. ')}' → logprob: -15.878185272216797
    10. ')],' → logprob: -16.003185272216797

Token 415: '   ' (ID: 271)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008272562408819795
    2. ')' → logprob: -7.125827312469482
    3. '   ' → logprob: -11.500826835632324
    4. ' )' → logprob: -11.875826835632324
    5. ')])' → logprob: -13.375826835632324
    6. '))' → logprob: -13.625826835632324
    7. ']' → logprob: -13.875826835632324
    8. ')]
' → logprob: -14.250826835632324
    9. ')][' → logprob: -15.000826835632324
    10. ')],' → logprob: -15.500826835632324

Token 416: ' )' (ID: 1546)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004521222144830972
    2. ')' (adapté à ' )') → logprob: -7.750452041625977
    3. '   ' → logprob: -11.500452041625977
    4. ' )' → logprob: -12.000452041625977
    5. ']' → logprob: -13.250452041625977
    6. '))' → logprob: -13.625452041625977
    7. ')]
' → logprob: -14.000452041625977
    8. ')])' → logprob: -14.750452041625977
    9. ')],' → logprob: -15.375452041625977
    10. ')][' → logprob: -15.875452041625977

Token 417: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4120592176914215
    2. ')]' → logprob: -1.6620591878890991
    3. ')' → logprob: -1.9120591878890991
    4. '])' → logprob: -8.78705883026123
    5. ' ]' → logprob: -11.41205883026123
    6. '))' → logprob: -12.28705883026123
    7. '   ' → logprob: -12.41205883026123
    8. ' )' → logprob: -12.41205883026123
    9. '])]' → logprob: -12.41205883026123
    10. ')])' → logprob: -12.78705883026123

Token 418: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4801693558692932
    2. '<|end|>' → logprob: -1.4801692962646484
    3. '#' → logprob: -2.3551692962646484
    4. ')' → logprob: -3.1051692962646484
    5. '
' → logprob: -5.480169296264648
    6. '<|end|>' → logprob: -6.230169296264648
    7. '[' → logprob: -6.730169296264648
    8. ']' → logprob: -7.230169296264648
    9. 'for' → logprob: -7.355169296264648
    10. 'n' → logprob: -7.480169296264648

Token 419: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06576120108366013
    2. '=' → logprob: -2.815761089324951
    3. ',' → logprob: -5.690761089324951
    4. ' ' → logprob: -8.06576156616211
    5. ' ,' → logprob: -9.94076156616211
    6. ' =
' → logprob: -10.56576156616211
    7. '=int' → logprob: -12.31576156616211
    8. ')' → logprob: -12.56576156616211
    9. '<|end|>' → logprob: -12.94076156616211
    10. '.' → logprob: -13.31576156616211

Token 420: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.2688043713569641
    2. 'K' → logprob: -1.5188043117523193
    3. 'Q' → logprob: -4.518804550170898
    4. ' M' → logprob: -5.643804550170898
    5. ' K' → logprob: -7.018804550170898
    6. 'A' → logprob: -7.893804550170898
    7. '=' → logprob: -8.268804550170898
    8. 'a' → logprob: -8.893804550170898
    9. 'k' → logprob: -9.018804550170898
    10. ' =' → logprob: -9.393804550170898

Token 421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.042492400854825974
    2. ' =' → logprob: -3.292492389678955
    3. ',' → logprob: -5.417492389678955
    4. '=N' → logprob: -14.292492866516113
    5. '=int' → logprob: -14.667492866516113
    6. ',N' → logprob: -14.917492866516113
    7. '=input' → logprob: -15.042492866516113
    8. '=M' → logprob: -15.292492866516113
    9. '=

' → logprob: -15.417492866516113
    10. '=
' → logprob: -15.667492866516113

Token 422: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6931666731834412
    2. ' map' → logprob: -0.6931666731834412
    3. ' ' → logprob: -11.943166732788086
    4. 'list' → logprob: -12.068166732788086
    5. '[' → logprob: -12.443166732788086
    6. ' list' → logprob: -13.943166732788086
    7. ' [' → logprob: -14.318166732788086
    8. 'm' → logprob: -14.568166732788086
    9. '	map' → logprob: -14.568166732788086
    10. '0' → logprob: -15.318166732788086

Token 423: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007606726721860468
    2. 'map' → logprob: -7.250760555267334
    3. '(' → logprob: -10.000761032104492
    4. '()' → logprob: -12.750761032104492
    5. ' map' → logprob: -13.625761032104492
    6. '=' → logprob: -14.625761032104492
    7. '(
' → logprob: -15.000761032104492
    8. '(int' → logprob: -15.625761032104492
    9. '_map' → logprob: -16.625761032104492
    10. '(m' → logprob: -16.875761032104492

Token 424: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.745069499127567e-05
    2. 'int' → logprob: -9.50008773803711
    3. '(' → logprob: -11.50008773803711
    4. ',int' → logprob: -13.37508773803711
    5. '(str' → logprob: -15.50008773803711
    6. '=int' → logprob: -15.75008773803711
    7. ' int' → logprob: -15.75008773803711
    8. '(
' → logprob: -16.00008773803711
    9. '[int' → logprob: -16.25008773803711
    10. '<int' → logprob: -16.37508773803711

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12697933614253998
    2. ',input' → logprob: -2.126979351043701
    3. 'input' → logprob: -10.501978874206543
    4. '(input' → logprob: -10.876978874206543
    5. ' ,' → logprob: -12.626978874206543
    6. ' input' → logprob: -14.501978874206543
    7. '(' → logprob: -15.501978874206543
    8. '(),' → logprob: -15.626978874206543
    9. 'sys' → logprob: -15.751978874206543
    10. ',int' → logprob: -15.751978874206543

Token 426: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004107015673071146
    2. ' input' → logprob: -5.5041069984436035
    3. 'sys' → logprob: -10.504107475280762
    4. ' sys' → logprob: -14.379107475280762
    5. 'str' → logprob: -14.754107475280762
    6. ' ' → logprob: -15.629107475280762
    7. '   ' → logprob: -16.754106521606445
    8. 'int' → logprob: -17.629106521606445
    9. 'open' → logprob: -18.629106521606445
    10. 'lambda' → logprob: -19.004106521606445

Token 427: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.024945585057139397
    2. '.argv' → logprob: -3.7749454975128174
    3. '.readline' → logprob: -6.3999457359313965
    4. '.' → logprob: -10.274945259094238
    5. 'stdin' → logprob: -14.024945259094238
    6. ' .' → logprob: -14.899945259094238
    7. '(stdin' → logprob: -15.024945259094238
    8. '.stdout' → logprob: -15.149945259094238
    9. '.read' → logprob: -16.024946212768555
    10. '.input' → logprob: -16.024946212768555

Token 428: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -14.125001907348633
    3. '.read' → logprob: -14.125001907348633
    4. '().' → logprob: -16.750001907348633
    5. '.readlines' → logprob: -18.125001907348633
    6. '.buffer' → logprob: -18.375001907348633
    7. ' .' → logprob: -18.500001907348633
    8. ' readline' → logprob: -20.375001907348633
    9. ').' → logprob: -21.125001907348633
    10. ')' → logprob: -21.750001907348633

Token 429: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0015048631466925144
    2. '.read' → logprob: -6.501504898071289
    3. '.readlines' → logprob: -13.001504898071289
    4. '.' → logprob: -15.251504898071289
    5. '.buffer' → logprob: -17.00150489807129
    6. ' readline' → logprob: -17.62650489807129
    7. 'read' → logprob: -18.25150489807129
    8. '.decode' → logprob: -19.50150489807129
    9. '.re' → logprob: -19.87650489807129
    10. '.recv' → logprob: -20.12650489807129

Token 430: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.978233846486546e-05
    2. '()' → logprob: -10.250049591064453
    3. '()))' → logprob: -11.250049591064453
    4. '(' → logprob: -14.375049591064453
    5. '()[' → logprob: -14.375049591064453
    6. ' ().' → logprob: -16.250049591064453
    7. '())))' → logprob: -16.500049591064453
    8. '.readline' → logprob: -17.250049591064453
    9. '())' → logprob: -17.250049591064453
    10. '()
' → logprob: -17.375049591064453

Token 431: 'split' (ID: 13627)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.0807354673743248
    2. 'split' → logprob: -3.580735445022583
    3. 'strip' → logprob: -3.580735445022583
    4. 'rstrip' → logprob: -3.830735445022583
    5. 'read' → logprob: -8.955735206604004
    6. ' decode' → logprob: -10.580735206604004
    7. '.decode' → logprob: -13.455735206604004
    8. ')' → logprob: -13.830735206604004
    9. ' split' → logprob: -14.455735206604004
    10. ' strip' → logprob: -14.830735206604004

Token 432: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04223678633570671
    2. '()' → logprob: -3.292236804962158
    3. '))' → logprob: -5.542236804962158
    4. '(),' → logprob: -8.917236328125
    5. '()))
' → logprob: -9.542236328125
    6. '())' → logprob: -10.667236328125
    7. '(' → logprob: -10.792236328125
    8. '()));' → logprob: -11.542236328125
    9. '()
' → logprob: -13.417236328125
    10. '()[' → logprob: -13.792236328125

Token 433: 'A' (ID: 32)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.19745491445064545
    2. 'uf' → logprob: -3.0724549293518066
    3. 'G' → logprob: -3.3224549293518066
    4. 'E' → logprob: -3.9474549293518066
    5. 'UF' → logprob: -4.197454929351807
    6. 'AB' → logprob: -4.197454929351807
    7. 'graph' → logprob: -4.822454929351807
    8. 'U' → logprob: -4.947454929351807
    9. 'UV' → logprob: -5.447454929351807
    10. 'edge' → logprob: -5.572454929351807

Token 434: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4860677421092987
    2. ' =' → logprob: -1.236067771911621
    3. ',' → logprob: -2.361067771911621
    4. ' ,' → logprob: -9.361067771911621
    5. '_' → logprob: -11.736067771911621
    6. ' ' → logprob: -12.361067771911621
    7. 's' → logprob: -12.861067771911621
    8. '.' → logprob: -12.861067771911621
    9. '[' → logprob: -13.111067771911621
    10. ')' → logprob: -13.611067771911621

Token 435: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.08914786577224731
    2. ' B' → logprob: -2.4641478061676025
    3. ' =' → logprob: -9.464147567749023
    4. 'Q' → logprob: -9.589147567749023
    5. '<|end|>' → logprob: -10.589147567749023
    6. 'b' → logprob: -11.214147567749023
    7. ' ' → logprob: -12.089147567749023
    8. '=' → logprob: -12.339147567749023
    9. 'K' → logprob: -12.839147567749023
    10. ' Q' → logprob: -13.089147567749023

Token 436: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10051105171442032
    2. ' =' → logprob: -2.350511074066162
    3. ',' → logprob: -8.100510597229004
    4. ' ' → logprob: -15.475510597229004
    5. '_' → logprob: -15.850510597229004
    6. '_=' → logprob: -16.10051155090332
    7. ')' → logprob: -16.22551155090332
    8. '=list' → logprob: -16.47551155090332
    9. ' ,' → logprob: -16.85051155090332
    10. '＝' → logprob: -16.85051155090332

Token 437: ' list' (ID: 1562)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.1785198152065277
    2. 'zip' → logprob: -2.9285197257995605
    3. '[list' → logprob: -3.4285197257995605
    4. ' zip' → logprob: -3.6785197257995605
    5. ' [],' → logprob: -3.8035197257995605
    6. '[' → logprob: -3.8035197257995605
    7. 'list' → logprob: -5.5535197257995605
    8. '[]' → logprob: -6.4285197257995605
    9. ' [' → logprob: -6.5535197257995605
    10. 'map' → logprob: -8.053520202636719

Token 438: '(zip' (ID: 87520)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006023610476404428
    2. '(' → logprob: -8.500602722167969
    3. '=' → logprob: -8.750602722167969
    4. '(zip' → logprob: -8.875602722167969
    5. 'map' → logprob: -10.500602722167969
    6. '(sys' → logprob: -10.750602722167969
    7. '(
' → logprob: -11.250602722167969
    8. '(tuple' → logprob: -11.250602722167969
    9. ' =' → logprob: -11.375602722167969
    10. '(int' → logprob: -12.250602722167969

Token 439: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.030028391629457474
    2. '(*(' → logprob: -3.5300283432006836
    3. '*(' → logprob: -9.030028343200684
    4. '*' → logprob: -9.155028343200684
    5. '(' → logprob: -10.030028343200684
    6. '(map' → logprob: -13.030028343200684
    7. '(*)' → logprob: -13.030028343200684
    8. '*[' → logprob: -13.155028343200684
    9. '(
' → logprob: -14.530028343200684
    10. '(sys' → logprob: -14.780028343200684

Token 440: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026573369279503822
    2. '(sorted' → logprob: -4.776573181152344
    3. '[list' → logprob: -5.526573181152344
    4. '[i' → logprob: -5.651573181152344
    5. '[int' → logprob: -6.276573181152344
    6. '(sys' → logprob: -6.401573181152344
    7. '[A' → logprob: -6.526573181152344
    8. '[
' → logprob: -7.026573181152344
    9. '[I' → logprob: -7.151573181152344
    10. '[array' → logprob: -7.276573181152344

Token 441: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.02705000527203083
    2. 'list' → logprob: -4.027050018310547
    3. '(map' → logprob: -5.027050018310547
    4. 'tuple' → logprob: -6.902050018310547
    5. '[' → logprob: -7.402050018310547
    6. '[list' → logprob: -8.152050018310547
    7. '(list' → logprob: -8.527050018310547
    8. '(tuple' → logprob: -9.777050018310547
    9. '[int' → logprob: -9.902050018310547
    10. ' map' → logprob: -10.152050018310547

Token 442: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001717166742309928
    2. 'int' → logprob: -8.750171661376953
    3. '(lambda' → logprob: -11.875171661376953
    4. '(' → logprob: -12.250171661376953
    5. ',int' → logprob: -14.750171661376953
    6. ' (' → logprob: -15.250171661376953
    7. '(
' → logprob: -15.375171661376953
    8. '[int' → logprob: -15.750171661376953
    9. ' int' → logprob: -16.375171661376953
    10. '(in' → logprob: -16.375171661376953

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10209973901510239
    2. '(sys' → logprob: -2.352099657058716
    3. 'sys' → logprob: -6.352099895477295
    4. ' ,' → logprob: -9.477099418640137
    5. '=sys' → logprob: -10.227099418640137
    6. ' sys' → logprob: -11.477099418640137
    7. ',
' → logprob: -11.602099418640137
    8. ',s' → logprob: -12.852099418640137
    9. ',(' → logprob: -12.852099418640137
    10. '	sys' → logprob: -13.227099418640137

Token 444: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006718690041452646
    2. ' sys' → logprob: -5.006718635559082
    3. '(sys' → logprob: -12.756718635559082
    4. '=sys' → logprob: -16.2567195892334
    5. '	sys' → logprob: -16.3817195892334
    6. '
' → logprob: -16.3817195892334
    7. ' ' → logprob: -16.5067195892334
    8. '   ' → logprob: -17.1317195892334
    9. '.sys' → logprob: -17.2567195892334
    10. '_sys' → logprob: -18.1317195892334

Token 445: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.012454084120690823
    2. '.readline' → logprob: -4.637454032897949
    3. '.buffer' → logprob: -6.262454032897949
    4. 'stdin' → logprob: -7.512454032897949
    5. '.sys' → logprob: -9.26245403289795
    6. '.' → logprob: -9.88745403289795
    7. '.stdout' → logprob: -10.51245403289795
    8. 'sys' → logprob: -10.76245403289795
    9. '(stdin' → logprob: -11.01245403289795
    10. '._' → logprob: -11.26245403289795

Token 446: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.5774340033531189
    2. '.readline' → logprob: -0.8274340033531189
    3. '.stdin' → logprob: -7.202434062957764
    4. '=sys' → logprob: -7.952434062957764
    5. '.sys' → logprob: -8.202433586120605
    6. 'buffer' → logprob: -10.077433586120605
    7. 'sys' → logprob: -10.827433586120605
    8. '.' → logprob: -11.077433586120605
    9. '(sys' → logprob: -11.577433586120605
    10. ' .' → logprob: -11.827433586120605

Token 447: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.512236498361744e-07
    2. '.readlines' → logprob: -14.625000953674316
    3. '.read' → logprob: -16.875
    4. ' readline' → logprob: -17.5
    5. '().' → logprob: -19.5
    6. '))' → logprob: -19.75
    7. '.rstrip' → logprob: -20.25
    8. '.' → logprob: -20.375
    9. ')' → logprob: -21.0
    10. ')))' → logprob: -21.25

Token 448: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.171581091824919e-05
    2. '()' → logprob: -9.87507152557373
    3. '.readline' → logprob: -11.75007152557373
    4. '())' → logprob: -12.62507152557373
    5. '()).' → logprob: -12.87507152557373
    6. '().__' → logprob: -13.25007152557373
    7. '()
' → logprob: -13.50007152557373
    8. ')' → logprob: -13.87507152557373
    9. ' ().' → logprob: -14.12507152557373
    10. ').' → logprob: -14.87507152557373

Token 449: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.664371848164592e-05
    2. 'strip' → logprob: -11.500016212463379
    3. 'read' → logprob: -12.625016212463379
    4. 'rstrip' → logprob: -13.000016212463379
    5. ' split' → logprob: -14.875016212463379
    6. '.split' → logprob: -15.625016212463379
    7. 'decode' → logprob: -16.125017166137695
    8. '_split' → logprob: -16.500017166137695
    9. '__' → logprob: -17.250017166137695
    10. '(split' → logprob: -17.500017166137695

Token 450: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.19192536175251007
    2. ')]' → logprob: -1.8169254064559937
    3. ')' → logprob: -4.691925525665283
    4. '()' → logprob: -6.691925525665283
    5. ')])' → logprob: -6.691925525665283
    6. '()]' → logprob: -8.566925048828125
    7. '()))' → logprob: -8.691925048828125
    8. '))' → logprob: -10.191925048828125
    9. '())
' → logprob: -11.941925048828125
    10. ')],' → logprob: -11.941925048828125

Token 451: ' for' (ID: 395)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.02176075614988804
    2. ')]' → logprob: -5.146760940551758
    3. ')])' → logprob: -5.646760940551758
    4. ' for' → logprob: -5.771760940551758
    5. ']' → logprob: -5.896760940551758
    6. '))' → logprob: -6.146760940551758
    7. '])' → logprob: -6.396760940551758
    8. ')' → logprob: -6.521760940551758
    9. 'for' → logprob: -7.521760940551758
    10. ']))
' → logprob: -9.146760940551758

Token 452: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002353287534788251
    2. ' _' → logprob: -6.127353191375732
    3. '_range' → logprob: -9.25235366821289
    4. '_i' → logprob: -10.00235366821289
    5. ' range' → logprob: -11.62735366821289
    6. '_
' → logprob: -11.62735366821289
    7. '
' → logprob: -13.12735366821289
    8. ' i' → logprob: -13.25235366821289
    9. 'i' → logprob: -13.87735366821289
    10. ' _
' → logprob: -14.00235366821289

Token 453: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7449487447738647
    2. ' in' → logprob: -0.8699487447738647
    3. 'range' → logprob: -2.2449488639831543
    4. ' range' → logprob: -8.619948387145996
    5. ' ' → logprob: -9.494948387145996
    6. 'i' → logprob: -10.869948387145996
    7. '  ' → logprob: -11.119948387145996
    8. '   ' → logprob: -11.869948387145996
    9. 'ange' → logprob: -12.244948387145996
    10. ')' → logprob: -12.369948387145996

Token 454: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043102685594931245
    2. ' range' → logprob: -7.750431060791016
    3. '(range' → logprob: -15.625431060791016
    4. '   ' → logprob: -16.750431060791016
    5. '	range' → logprob: -17.000431060791016
    6. '
' → logprob: -17.375431060791016
    7. ' ' → logprob: -17.750431060791016
    8. '  ' → logprob: -18.375431060791016
    9. '[' → logprob: -18.625431060791016
    10. 'r' → logprob: -18.875431060791016

Token 455: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.16025063395500183
    2. 'M' → logprob: -1.9102506637573242
    3. ' M' → logprob: -10.785250663757324
    4. '(' → logprob: -12.285250663757324
    5. ' (' → logprob: -14.910250663757324
    6. '   ' → logprob: -15.285250663757324
    7. '	M' → logprob: -15.410250663757324
    8. '(
' → logprob: -16.410249710083008
    9. '
' → logprob: -16.660249710083008
    10. '[M' → logprob: -17.285249710083008

Token 456: ')]' (ID: 15710)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0032791912090033293
    2. ')]' → logprob: -5.878279209136963
    3. ']))
' → logprob: -8.503278732299805
    4. ']' → logprob: -8.878278732299805
    5. ')])' → logprob: -9.503278732299805
    6. '))' → logprob: -11.003278732299805
    7. '])))' → logprob: -11.503278732299805
    8. '])' → logprob: -11.628278732299805
    9. ' ]' → logprob: -12.003278732299805
    10. ']))

' → logprob: -12.253278732299805

Token 457: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.034592388459714e-06
    2. ')' → logprob: -12.375005722045898
    3. '))
' → logprob: -13.750005722045898
    4. ')))' → logprob: -14.500005722045898
    5. ' ))' → logprob: -16.1250057220459
    6. '));' → logprob: -17.5000057220459
    7. '))[' → logprob: -18.1250057220459
    8. '()))' → logprob: -18.3750057220459
    9. ']))' → logprob: -18.5000057220459
    10. ')),' → logprob: -18.5000057220459

Token 458: 'VU' (ID: 156465)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.9884609580039978
    2. 'C' → logprob: -1.7384610176086426
    3. ')' → logprob: -2.1134610176086426
    4. 'U' → logprob: -2.9884610176086426
    5. 'Q' → logprob: -3.1134610176086426
    6. 'E' → logprob: -3.6134610176086426
    7. 'G' → logprob: -3.7384610176086426
    8. 'graph' → logprob: -3.7384610176086426
    9. ' edges' → logprob: -4.238461017608643
    10. 'uf' → logprob: -4.238461017608643

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.264602392911911
    2. '=' → logprob: -1.6396024227142334
    3. ',' → logprob: -3.5146024227142334
    4. 'C' → logprob: -5.139602184295654
    5. 'V' → logprob: -7.639602184295654
    6. 'L' → logprob: -7.889602184295654
    7. '=[]' → logprob: -8.139602661132812
    8. 'A' → logprob: -8.389602661132812
    9. 'E' → logprob: -8.639602661132812
    10. ' ' → logprob: -9.014602661132812

Token 460: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.13484568893909454
    2. 'list' → logprob: -2.759845733642578
    3. '[' → logprob: -3.259845733642578
    4. '[B' → logprob: -4.759845733642578
    5. '[(' → logprob: -5.259845733642578
    6. '[A' → logprob: -5.634845733642578
    7. '[]' → logprob: -6.009845733642578
    8. '[[' → logprob: -6.884845733642578
    9. '[V' → logprob: -7.134845733642578
    10. '[List' → logprob: -7.759845733642578

Token 461: 'list' (ID: 2641)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.6456407308578491
    2. 'list' → logprob: -1.1456407308578491
    3. ']' → logprob: -2.8956408500671387
    4. '(tuple' → logprob: -3.2706408500671387
    5. '(*' → logprob: -3.8956408500671387
    6. '[]' → logprob: -3.8956408500671387
    7. '(list' → logprob: -4.520640850067139
    8. '()]' → logprob: -5.395640850067139
    9. '*' → logprob: -6.270640850067139
    10. '[' → logprob: -6.645640850067139

Token 462: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.02567748911678791
    2. '(sys' → logprob: -4.150677680969238
    3. 'map' → logprob: -5.525677680969238
    4. '()]' → logprob: -6.025677680969238
    5. '()' → logprob: -6.900677680969238
    6. ']' → logprob: -7.025677680969238
    7. '(zip' → logprob: -7.525677680969238
    8. '(range' → logprob: -8.525677680969238
    9. '(' → logprob: -9.025677680969238
    10. 'sys' → logprob: -9.150677680969238

Token 463: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04406514763832092
    2. 'int' → logprob: -3.169065237045288
    3. ',int' → logprob: -7.169064998626709
    4. 'sys' → logprob: -9.169065475463867
    5. '(sys' → logprob: -9.794065475463867
    6. '(lambda' → logprob: -10.419065475463867
    7. ')' → logprob: -10.669065475463867
    8. ']int' → logprob: -10.669065475463867
    9. ',' → logprob: -11.544065475463867
    10. '[int' → logprob: -11.544065475463867

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006545356009155512
    2. '(sys' → logprob: -7.375654697418213
    3. 'sys' → logprob: -10.875654220581055
    4. '=sys' → logprob: -12.500654220581055
    5. '(),' → logprob: -13.000654220581055
    6. ' sys' → logprob: -13.875654220581055
    7. ' ,' → logprob: -14.125654220581055
    8. '(' → logprob: -14.500654220581055
    9. ',s' → logprob: -14.625654220581055
    10. ',
' → logprob: -15.875654220581055

Token 465: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00018006093159783632
    2. ' sys' → logprob: -8.6251802444458
    3. '(sys' → logprob: -15.5001802444458
    4. '   ' → logprob: -16.625179290771484
    5. '=sys' → logprob: -16.625179290771484
    6. ' ' → logprob: -16.875179290771484
    7. '	sys' → logprob: -17.125179290771484
    8. '...' → logprob: -17.375179290771484
    9. '
' → logprob: -17.500179290771484
    10. ',' → logprob: -17.500179290771484

Token 466: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.0564331205387134e-05
    2. 'stdin' → logprob: -12.25001049041748
    3. '.buffer' → logprob: -12.37501049041748
    4. '.readline' → logprob: -14.62501049041748
    5. '=sys' → logprob: -14.62501049041748
    6. '.stdout' → logprob: -15.25001049041748
    7. '(stdin' → logprob: -15.37501049041748
    8. '.sys' → logprob: -16.750011444091797
    9. 'sys' → logprob: -18.125011444091797
    10. '.' → logprob: -18.250011444091797

Token 467: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.011485015042126179
    2. '.readline' → logprob: -4.6364850997924805
    3. 'buffer' → logprob: -6.3864850997924805
    4. '.stdin' → logprob: -10.76148509979248
    5. 'sys' → logprob: -11.38648509979248
    6. '=sys' → logprob: -12.63648509979248
    7. '	buffer' → logprob: -13.26148509979248
    8. '.sys' → logprob: -13.38648509979248
    9. ' buffer' → logprob: -13.63648509979248
    10. 'stdin' → logprob: -14.01148509979248

Token 468: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.069664333248511e-05
    2. 'read' → logprob: -11.375020980834961
    3. 'buffer' → logprob: -12.375020980834961
    4. '.readlines' → logprob: -12.500020980834961
    5. 'sys' → logprob: -14.625020980834961
    6. '.read' → logprob: -15.500020980834961
    7. 'stdin' → logprob: -16.25002098083496
    8. '=sys' → logprob: -16.37502098083496
    9. ')' → logprob: -16.50002098083496
    10. ' readline' → logprob: -16.62502098083496

Token 469: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0013479728950187564
    2. '.readline' → logprob: -6.62634801864624
    3. '()' → logprob: -11.001347541809082
    4. '()[' → logprob: -12.751347541809082
    5. '()
' → logprob: -14.376347541809082
    6. '()))' → logprob: -14.626347541809082
    7. '().__' → logprob: -14.626347541809082
    8. '.split' → logprob: -15.376347541809082
    9. '.' → logprob: -15.501347541809082
    10. '())' → logprob: -16.3763484954834

Token 470: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.41866585687967e-06
    2. 'decode' → logprob: -12.375008583068848
    3. 'strip' → logprob: -13.125008583068848
    4. 'read' → logprob: -13.500008583068848
    5. ' split' → logprob: -14.625008583068848
    6. 'rstrip' → logprob: -15.750008583068848
    7. '.split' → logprob: -16.87500762939453
    8. ')' → logprob: -18.87500762939453
    9. '(split' → logprob: -18.87500762939453
    10. 'spl' → logprob: -19.12500762939453

Token 471: '()))' (ID: 16829)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06982148438692093
    2. '()))' → logprob: -2.94482159614563
    3. '()' → logprob: -4.694821357727051
    4. ')' → logprob: -5.444821357727051
    5. '))' → logprob: -6.819821357727051
    6. '()[' → logprob: -9.56982135772705
    7. ')]' → logprob: -9.94482135772705
    8. '())
' → logprob: -10.06982135772705
    9. '(' → logprob: -10.69482135772705
    10. '()]' → logprob: -10.81982135772705

Token 472: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16247834265232086
    2. ' for' → logprob: -1.9124783277511597
    3. '()' → logprob: -6.287478446960449
    4. ')' → logprob: -8.03747844696045
    5. '   ' → logprob: -10.03747844696045
    6. ' ' → logprob: -11.03747844696045
    7. '	for' → logprob: -12.16247844696045
    8. ']' → logprob: -13.03747844696045
    9. '  ' → logprob: -14.16247844696045
    10. '    ' → logprob: -15.53747844696045

Token 473: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14558067917823792
    2. 'range' → logprob: -2.145580768585205
    3. '_' → logprob: -4.020580768585205
    4. ' _' → logprob: -8.145580291748047
    5. '_range' → logprob: -9.020580291748047
    6. '(range' → logprob: -9.145580291748047
    7. '_M' → logprob: -12.020580291748047
    8. ' in' → logprob: -12.395580291748047
    9. ' ' → logprob: -13.270580291748047
    10. 'M' → logprob: -13.270580291748047

Token 474: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31335851550102234
    2. ' range' → logprob: -1.3133585453033447
    3. '(range' → logprob: -10.063358306884766
    4. 'M' → logprob: -10.563358306884766
    5. 'in' → logprob: -11.188358306884766
    6. ' in' → logprob: -11.563358306884766
    7. '[M' → logprob: -13.313358306884766
    8. '(M' → logprob: -13.438358306884766
    9. ' ' → logprob: -14.313358306884766
    10. '	range' → logprob: -15.063358306884766

Token 475: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023267842829227448
    2. ' range' → logprob: -3.7732677459716797
    3. 'M' → logprob: -11.52326774597168
    4. '(range' → logprob: -11.52326774597168
    5. '[M' → logprob: -13.14826774597168
    6. '(M' → logprob: -14.77326774597168
    7. '
' → logprob: -16.02326774597168
    8. ' ' → logprob: -17.02326774597168
    9. '	range' → logprob: -17.52326774597168
    10. 'm' → logprob: -17.64826774597168

Token 476: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -4.024604277219623e-05
    2. 'M' → logprob: -10.750040054321289
    3. ' range' → logprob: -12.250040054321289
    4. ' (' → logprob: -12.375040054321289
    5. '(N' → logprob: -12.875040054321289
    6. 'range' → logprob: -13.000040054321289
    7. ' M' → logprob: -13.125040054321289
    8. '(' → logprob: -14.000040054321289
    9. '(range' → logprob: -14.625040054321289
    10. '(V' → logprob: -14.875040054321289

Token 477: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008123667794279754
    2. ']' → logprob: -7.125812530517578
    3. ')' → logprob: -12.000812530517578
    4. '])]' → logprob: -14.625812530517578
    5. '])' → logprob: -14.750812530517578
    6. ')]
' → logprob: -15.125812530517578
    7. ')])' → logprob: -15.625812530517578
    8. ' ]' → logprob: -15.625812530517578
    9. ')],' → logprob: -15.750812530517578
    10. ' )' → logprob: -16.625812530517578

Token 478: 'graph' (ID: 7978)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.4429274797439575
    2. 'Q' → logprob: -1.6929274797439575
    3. 'for' → logprob: -1.8179274797439575
    4. '#' → logprob: -2.067927360534668
    5. ')' → logprob: -3.067927360534668
    6. 'U' → logprob: -3.317927360534668
    7. 'graph' → logprob: -3.817927360534668
    8. 'V' → logprob: -4.067927360534668
    9. 'A' → logprob: -4.192927360534668
    10. 'G' → logprob: -4.442927360534668

Token 479: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995277106761932
    2. '=' → logprob: -2.6949527263641357
    3. '[' → logprob: -12.069952964782715
    4. ',' → logprob: -13.319952964782715
    5. '=[]' → logprob: -13.444952964782715
    6. ' =
' → logprob: -13.694952964782715
    7. ' =[' → logprob: -13.694952964782715
    8. '_' → logprob: -13.819952964782715
    9. ':' → logprob: -14.069952964782715
    10. ' ' → logprob: -14.319952964782715

Token 480: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7136438488960266
    2. '{' → logprob: -0.7136438488960266
    3. '{}' → logprob: -3.963643789291382
    4. ' [[]' → logprob: -6.838644027709961
    5. '[{' → logprob: -9.088644027709961
    6. '[[' → logprob: -9.838644027709961
    7. '[]' → logprob: -10.713644027709961
    8. 'default' → logprob: -11.338644027709961
    9. 'dict' → logprob: -12.088644027709961
    10. 'collections' → logprob: -13.338644027709961

Token 481: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931615471839905
    2. 'for' → logprob: -0.6931615471839905
    3. ']' → logprob: -11.943161964416504
    4. ',' → logprob: -12.193161964416504
    5. ' ' → logprob: -13.818161964416504
    6. ')' → logprob: -14.193161964416504
    7. '   ' → logprob: -14.943161964416504
    8. '	for' → logprob: -15.068161964416504
    9. '
' → logprob: -16.068161010742188
    10. '()' → logprob: -16.443161010742188

Token 482: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.700132997939363e-05
    2. ' _' → logprob: -11.875017166137695
    3. '_range' → logprob: -12.250017166137695
    4. ' range' → logprob: -12.625017166137695
    5. 'range' → logprob: -14.375017166137695
    6. '_i' → logprob: -14.500017166137695
    7. '_
' → logprob: -15.375017166137695
    8. ' in' → logprob: -15.750017166137695
    9. 'in' → logprob: -16.000017166137695
    10. 'i' → logprob: -16.000017166137695

Token 483: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06216474995017052
    2. ' in' → logprob: -3.062164783477783
    3. 'range' → logprob: -4.312164783477783
    4. ' range' → logprob: -9.812164306640625
    5. 'N' → logprob: -10.812164306640625
    6. 'A' → logprob: -13.437164306640625
    7. ' ' → logprob: -13.812164306640625
    8. 'i' → logprob: -13.937164306640625
    9. '(N' → logprob: -14.312164306640625
    10. '(range' → logprob: -14.437164306640625

Token 484: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615161292254925
    2. ' range' → logprob: -4.758615016937256
    3. '(range' → logprob: -14.383615493774414
    4. 'A' → logprob: -17.258615493774414
    5. '   ' → logprob: -18.508615493774414
    6. ' ' → logprob: -18.883615493774414
    7. '
' → logprob: -19.383615493774414
    8. '	range' → logprob: -19.633615493774414
    9. 'r' → logprob: -20.258615493774414
    10. 'N' → logprob: -20.258615493774414

Token 485: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.432518421206623e-05
    2. 'N' → logprob: -10.0000638961792
    3. '(V' → logprob: -11.7500638961792
    4. '(M' → logprob: -12.1250638961792
    5. '(' → logprob: -12.7500638961792
    6. '(n' → logprob: -13.7500638961792
    7. '(A' → logprob: -15.0000638961792
    8. '(range' → logprob: -15.0000638961792
    9. '((' → logprob: -15.2500638961792
    10. '(len' → logprob: -16.250064849853516

Token 486: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0032870364375412464
    2. ']' → logprob: -5.753286838531494
    3. ')' → logprob: -9.503287315368652
    4. ')]
' → logprob: -10.378287315368652
    5. ']
' → logprob: -13.503287315368652
    6. ')]

' → logprob: -14.378287315368652
    7. '+' → logprob: -14.378287315368652
    8. '>]' → logprob: -15.253287315368652
    9. ' ]' → logprob: -15.378287315368652
    10. ')]
' → logprob: -15.503287315368652

Token 487: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.2994620242971e-06
    2. ' for' → logprob: -11.750008583068848
    3. 'from' → logprob: -16.87500762939453
    4. '#' → logprob: -17.12500762939453
    5. 'edges' → logprob: -17.12500762939453
    6. 'print' → logprob: -17.37500762939453
    7. '<|end|>' → logprob: -17.75000762939453
    8. 'u' → logprob: -17.87500762939453
    9. '```' → logprob: -18.50000762939453
    10. 'For' → logprob: -18.62500762939453

Token 488: ' v' (ID: 323)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07463756203651428
    2. 'u' → logprob: -2.6996376514434814
    3. 'v' → logprob: -6.074637413024902
    4. 'i' → logprob: -6.574637413024902
    5. ' a' → logprob: -8.449637413024902
    6. '(a' → logprob: -8.574637413024902
    7. 'b' → logprob: -9.074637413024902
    8. '(u' → logprob: -9.074637413024902
    9. '_a' → logprob: -9.074637413024902
    10. 'A' → logprob: -9.574637413024902

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029018104076385498
    2. ' in' → logprob: -4.279017925262451
    3. ',u' → logprob: -4.779017925262451
    4. 'u' → logprob: -5.654017925262451
    5. ',v' → logprob: -6.904017925262451
    6. 'in' → logprob: -7.279017925262451
    7. ' ,' → logprob: -7.904017925262451
    8. '_,' → logprob: -8.27901840209961
    9. ',_' → logprob: -9.40401840209961
    10. ',a' → logprob: -9.77901840209961

Token 490: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002565906848758459
    2. ' u' → logprob: -6.002565860748291
    3. ' ' → logprob: -10.12756633758545
    4. '   ' → logprob: -10.50256633758545
    5. ' ' → logprob: -12.37756633758545
    6. '	u' → logprob: -12.50256633758545
    7. '  ' → logprob: -12.62756633758545
    8. 'e' → logprob: -13.37756633758545
    9. '```' → logprob: -13.62756633758545
    10. '    
' → logprob: -13.75256633758545

Token 491: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15100431442260742
    2. 'in' → logprob: -2.1510043144226074
    3. ' in' → logprob: -3.9010043144226074
    4. ',v' → logprob: -5.901004314422607
    5. ' ,' → logprob: -7.651004314422607
    6. ',in' → logprob: -8.651004791259766
    7. ',u' → logprob: -9.651004791259766
    8. ',_' → logprob: -10.401004791259766
    9. 'v' → logprob: -11.401004791259766
    10. ',
' → logprob: -11.526004791259766

Token 492: ' V' (ID: 631)
  Prédit: 'VU'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VU' → logprob: -0.054996587336063385
    2. ' V' → logprob: -2.9299964904785156
    3. '[V' → logprob: -10.054996490478516
    4. 'V' → logprob: -10.429996490478516
    5. '(V' → logprob: -10.554996490478516
    6. ' range' → logprob: -12.054996490478516
    7. 'range' → logprob: -12.929996490478516
    8. '	V' → logprob: -13.429996490478516
    9. '   ' → logprob: -13.679996490478516
    10. ' ' → logprob: -13.929996490478516

Token 493: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.04571079835295677
    2. ',' → logprob: -3.295710802078247
    3. ',U' → logprob: -5.295710563659668
    4. ' in' → logprob: -6.545710563659668
    5. ',u' → logprob: -7.795710563659668
    6. 'u' → logprob: -7.920710563659668
    7. ',v' → logprob: -8.795710563659668
    8. ',_' → logprob: -9.920710563659668
    9. ',in' → logprob: -10.420710563659668
    10. ' U' → logprob: -10.420710563659668

Token 494: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004973658826202154
    2. ':
' → logprob: -5.379973888397217
    3. ']:' → logprob: -8.879973411560059
    4. 'in' → logprob: -9.754973411560059
    5. ' in' → logprob: -10.004973411560059
    6. '):' → logprob: -10.129973411560059
    7. ',' → logprob: -10.754973411560059
    8. ']' → logprob: -11.254973411560059
    9. '=' → logprob: -12.004973411560059
    10. 's' → logprob: -12.379973411560059

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000273136975010857
    2. ' graph' → logprob: -8.625272750854492
    3. ' v' → logprob: -9.750272750854492
    4. 'v' → logprob: -10.750272750854492
    5. '	graph' → logprob: -11.750272750854492
    6. 'graph' → logprob: -12.500272750854492
    7. '	v' → logprob: -13.250272750854492
    8. '```' → logprob: -15.875272750854492
    9. '       ' → logprob: -16.250272750854492
    10. ',v' → logprob: -16.500272750854492

Token 496: ' v' (ID: 323)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.08982060849666595
    2. 'v' (adapté à ' v') → logprob: -2.464820623397827
    3. ' graph' → logprob: -7.464820384979248
    4. '   ' → logprob: -8.339820861816406
    5. ' v' → logprob: -9.714820861816406
    6. '	graph' → logprob: -12.214820861816406
    7. 'u' → logprob: -14.339820861816406
    8. 'Graph' → logprob: -14.589820861816406
    9. '_graph' → logprob: -14.839820861816406
    10. '(graph' → logprob: -14.839820861816406

Token 497: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.16901841759681702
    2. ' -=' → logprob: -2.044018507003784
    3. '-' → logprob: -3.669018507003784
    4. ',' → logprob: -8.169018745422363
    5. ',v' → logprob: -8.669018745422363
    6. ' -' → logprob: -11.044018745422363
    7. '=' → logprob: -11.544018745422363
    8. '   ' → logprob: -12.294018745422363
    9. ' v' → logprob: -12.919018745422363
    10. '-,' → logprob: -13.419018745422363

Token 498: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.500296592712402
    4. '<|end|>' → logprob: -16.625295639038086
    5. '```' → logprob: -18.437795639038086
    6. '  ' → logprob: -18.562795639038086
    7. '１' → logprob: -19.500295639038086
    8. '.' → logprob: -19.500295639038086
    9. '2' → logprob: -19.750295639038086
    10. 'v' → logprob: -19.750295639038086

Token 499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.125001907348633
    4. '<|end|>' → logprob: -19.250001907348633
    5. '```' → logprob: -19.375001907348633
    6. '１' → logprob: -20.062501907348633
    7. 'v' → logprob: -20.250001907348633
    8. '১' → logprob: -21.062501907348633
    9. '۱' → logprob: -21.250001907348633
    10. '
' → logprob: -21.500001907348633

Token 500: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4834926426410675
    2. '   ' → logprob: -1.3584926128387451
    3. 'u' → logprob: -2.608492612838745
    4. ' u' → logprob: -2.983492612838745
    5. ' 
' → logprob: -7.608492851257324
    6. '[u' → logprob: -7.733492851257324
    7. '<|end|>' → logprob: -8.233492851257324
    8. ',u' → logprob: -8.733492851257324
    9. '	u' → logprob: -8.858492851257324
    10. '
' → logprob: -9.108492851257324

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001860174525063485
    2. 'u' → logprob: -8.6251859664917
    3. ' u' → logprob: -12.1251859664917
    4. '
' → logprob: -14.3751859664917
    5. ',' → logprob: -15.8751859664917
    6. '	u' → logprob: -16.625186920166016
    7. '[u' → logprob: -16.750186920166016
    8. 'graph' → logprob: -17.250186920166016
    9. ',u' → logprob: -17.500186920166016
    10. 'v' → logprob: -17.875186920166016

Token 502: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.00026181264547631145
    2. ' u' → logprob: -8.375262260437012
    3. '   ' → logprob: -10.375262260437012
    4. '	u' → logprob: -17.625261306762695
    5. 'graph' → logprob: -18.625261306762695
    6. '  ' → logprob: -19.750261306762695
    7. '_u' → logprob: -19.875261306762695
    8. '    ' → logprob: -20.250261306762695
    9. '[u' → logprob: -20.500261306762695
    10. ' ' → logprob: -20.625261306762695

Token 503: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.44057753682136536
    2. ' -=' → logprob: -1.065577507019043
    3. '-' → logprob: -4.440577507019043
    4. '=' → logprob: -11.815577507019043
    5. ' -' → logprob: -12.690577507019043
    6. ' ' → logprob: -13.065577507019043
    7. '   ' → logprob: -13.440577507019043
    8. '.' → logprob: -14.565577507019043
    9. '```' → logprob: -14.815577507019043
    10. '[' → logprob: -14.815577507019043

Token 504: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048882268369198
    2. ' ' → logprob: -4.511048793792725
    3. '<|end|>' → logprob: -14.511049270629883
    4. '   ' → logprob: -15.511049270629883
    5. '0' → logprob: -16.136049270629883
    6. '```' → logprob: -16.636049270629883
    7. '-' → logprob: -17.136049270629883
    8. '2' → logprob: -17.448549270629883
    9. '  ' → logprob: -17.573549270629883
    10. 'v' → logprob: -17.823549270629883

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -16.875024795532227
    4. '```' → logprob: -19.625024795532227
    5. '0' → logprob: -20.375024795532227
    6. '۱' → logprob: -20.687524795532227
    7. '１' → logprob: -20.875024795532227
    8. '2' → logprob: -21.062524795532227
    9. '   ' → logprob: -21.312524795532227
    10. '১' → logprob: -21.687524795532227

Token 506: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009592238930054009
    2. 'graph' → logprob: -7.000959396362305
    3. ' graph' → logprob: -10.375959396362305
    4. '
' → logprob: -11.500959396362305
    5. '	graph' → logprob: -12.250959396362305
    6. '(graph' → logprob: -14.000959396362305
    7. '    
' → logprob: -15.125959396362305
    8. ',' → logprob: -16.000959396362305
    9. '_graph' → logprob: -16.125959396362305
    10. '```' → logprob: -16.875959396362305

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18417231738567352
    2. 'graph' → logprob: -1.80917227268219
    3. ' graph' → logprob: -5.4341721534729
    4. '	graph' → logprob: -10.184172630310059
    5. '
' → logprob: -11.809172630310059
    6. '(graph' → logprob: -12.434172630310059
    7. '```' → logprob: -13.809172630310059
    8. '  ' → logprob: -14.434172630310059
    9. ' ' → logprob: -14.559172630310059
    10. '_graph' → logprob: -14.934172630310059

Token 508: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -1.9361264946837764e-07
    2. ' graph' → logprob: -15.875
    3. '	graph' → logprob: -20.5
    4. '   ' → logprob: -20.875
    5. '(graph' → logprob: -22.625
    6. 'graphql' → logprob: -23.75
    7. 'graf' → logprob: -23.875
    8. '
' → logprob: -23.875
    9. '    
' → logprob: -24.0
    10. '#' → logprob: -24.25

Token 509: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. '[u' → logprob: -16.625
    3. '[' → logprob: -17.125
    4. 'v' → logprob: -18.75
    5. ' [' → logprob: -20.875
    6. '[V' → logprob: -20.875
    7. '[val' → logprob: -21.625
    8. '```' → logprob: -22.125
    9. '	v' → logprob: -23.0
    10. '   ' → logprob: -23.625

Token 510: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03831654414534569
    2. '.append' → logprob: -3.288316488265991
    3. '.' → logprob: -8.41331672668457
    4. ').' → logprob: -10.03831672668457
    5. ' .' → logprob: -12.91331672668457
    6. '.app' → logprob: -13.03831672668457
    7. ' ].' → logprob: -13.53831672668457
    8. 'append' → logprob: -14.16331672668457
    9. '}.' → logprob: -14.41331672668457
    10. '   ' → logprob: -14.66331672668457

Token 511: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. '.append' → logprob: -17.75
    3. ' append' → logprob: -18.0
    4. 'app' → logprob: -19.0
    5. 'appen' → logprob: -20.125
    6. 'add' → logprob: -21.0
    7. '_append' → logprob: -22.0
    8. 'Append' → logprob: -23.25
    9. '	append' → logprob: -23.25
    10. 'ap' → logprob: -25.25

Token 512: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0009118211455643177
    2. 'u' → logprob: -7.000911712646484
    3. '(' → logprob: -15.375911712646484
    4. ' u' → logprob: -15.875911712646484
    5. '(
' → logprob: -17.500911712646484
    6. '	u' → logprob: -17.875911712646484
    7. '(v' → logprob: -18.500911712646484
    8. '((' → logprob: -19.500911712646484
    9. '[u' → logprob: -19.750911712646484
    10. '   ' → logprob: -20.000911712646484

Token 513: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026398878544569016
    2. ')
' → logprob: -3.6513988971710205
    3. '   ' → logprob: -9.276398658752441
    4. ' )' → logprob: -12.776398658752441
    5. ')
' → logprob: -14.151398658752441
    6. ' )
' → logprob: -14.526398658752441
    7. '<|end|>' → logprob: -15.026398658752441
    8. ' ' → logprob: -16.026399612426758
    9. ')

' → logprob: -16.151399612426758
    10. ')#' → logprob: -16.276399612426758

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03163694590330124
    2. 'graph' → logprob: -3.531636953353882
    3. ' graph' → logprob: -6.406636714935303
    4. '	graph' → logprob: -8.531637191772461
    5. '(graph' → logprob: -10.531637191772461
    6. '<|end|>' → logprob: -12.281637191772461
    7. '.graph' → logprob: -13.531637191772461
    8. '_graph' → logprob: -14.156637191772461
    9. '```' → logprob: -14.281637191772461
    10. 'Graph' → logprob: -14.906637191772461

Token 515: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -5.676981345459353e-06
    2. ' graph' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.375005722045898
    4. '	graph' → logprob: -15.250005722045898
    5. '(graph' → logprob: -17.2500057220459
    6. '.graph' → logprob: -19.1250057220459
    7. 'graphql' → logprob: -19.5000057220459
    8. 'u' → logprob: -20.0000057220459
    9. 'graphic' → logprob: -20.3750057220459
    10. 'graf' → logprob: -20.6250057220459

Token 516: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.75
    3. '[v' → logprob: -16.125
    4. 'u' → logprob: -17.125
    5. '[user' → logprob: -17.75
    6. '[a' → logprob: -20.625
    7. '	u' → logprob: -20.625
    8. '[s' → logprob: -21.0
    9. '<u' → logprob: -21.125
    10. '(u' → logprob: -21.125

Token 517: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0027314056642353535
    2. '.' → logprob: -6.7527313232421875
    3. '.append' → logprob: -6.8777313232421875
    4. ').' → logprob: -7.6277313232421875
    5. ']' → logprob: -10.627731323242188
    6. ' .' → logprob: -11.627731323242188
    7. ' ].' → logprob: -11.877731323242188
    8. '.app' → logprob: -14.377731323242188
    9. '}.' → logprob: -14.627731323242188
    10. '>.' → logprob: -14.752731323242188

Token 518: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. ' append' → logprob: -17.75
    3. 'appen' → logprob: -18.375
    4. '.append' → logprob: -19.75
    5. 'app' → logprob: -20.5
    6. 'add' → logprob: -21.625
    7. '	append' → logprob: -21.625
    8. '_append' → logprob: -24.125
    9. 'appe' → logprob: -25.0
    10. 'Append' → logprob: -25.25

Token 519: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. '(
' → logprob: -15.37501049041748
    4. 'v' → logprob: -17.375009536743164
    5. ' (' → logprob: -19.625009536743164
    6. '(V' → logprob: -20.625009536743164
    7. '(

' → logprob: -22.125009536743164
    8. '(s' → logprob: -22.375009536743164
    9. '	v' → logprob: -23.000009536743164
    10. '[v' → logprob: -23.125009536743164

Token 520: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -11.750007629394531
    3. ' )' → logprob: -16.75000762939453
    4. ')

' → logprob: -16.87500762939453
    5. '),' → logprob: -18.50000762939453
    6. '))' → logprob: -18.87500762939453
    7. ')`' → logprob: -19.12500762939453
    8. '<|end|>' → logprob: -19.12500762939453
    9. ')return' → logprob: -19.25000762939453
    10. ')#' → logprob: -19.62500762939453

Token 521: 'req' (ID: 5331)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7156794667243958
    2. 'dist' → logprob: -1.840679407119751
    3. 'visited' → logprob: -2.215679407119751
    4. 'dp' → logprob: -3.465679407119751
    5. 'import' → logprob: -3.465679407119751
    6. '#' → logprob: -3.590679407119751
    7. 'uf' → logprob: -3.965679407119751
    8. 'color' → logprob: -4.09067964553833
    9. 'used' → logprob: -4.21567964553833
    10. 'q' → logprob: -4.46567964553833

Token 522: 's' (ID: 82)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.13969466090202332
    2. 'uire' → logprob: -2.2646946907043457
    3. ' =' → logprob: -4.514694690704346
    4. 'ired' → logprob: -5.764694690704346
    5. 's' → logprob: -5.889694690704346
    6. 'd' → logprob: -6.014694690704346
    7. 'uest' → logprob: -6.514694690704346
    8. 'ui' → logprob: -6.889694690704346
    9. 'uir' → logprob: -6.889694690704346
    10. 'uis' → logprob: -7.639694690704346

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5847818851470947
    2. 'uire' → logprob: -1.4597818851470947
    3. '=' → logprob: -1.5847818851470947
    4. 'u' → logprob: -6.084781646728516
    5. 'ired' → logprob: -7.084781646728516
    6. '=set' → logprob: -7.584781646728516
    7. 'ires' → logprob: -7.834781646728516
    8. '=[]' → logprob: -8.834781646728516
    9. 'd' → logprob: -8.834781646728516
    10. 'uir' → logprob: -8.959781646728516

Token 524: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5230432152748108
    2. '[A' → logprob: -1.398043155670166
    3. '{' → logprob: -3.148043155670166
    4. '[(' → logprob: -3.648043155670166
    5. '[]' → logprob: -3.773043155670166
    6. '[B' → logprob: -3.773043155670166
    7. 'set' → logprob: -4.398043155670166
    8. '{}' → logprob: -4.648043155670166
    9. '[[' → logprob: -5.648043155670166
    10. '[i' → logprob: -5.648043155670166

Token 525: 'max' (ID: 3228)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.9744732975959778
    2. '0' → logprob: -1.099473237991333
    3. '[]' → logprob: -1.474473237991333
    4. ']' → logprob: -4.349473476409912
    5. 'False' → logprob: -4.599473476409912
    6. '{}' → logprob: -4.599473476409912
    7. 'B' → logprob: -5.224473476409912
    8. '()]' → logprob: -5.349473476409912
    9. 'INF' → logprob: -5.974473476409912
    10. 'float' → logprob: -5.974473476409912

Token 526: '(a' (ID: 6271)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.15261343121528625
    2. '(' → logprob: -2.652613401412964
    3. '(B' → logprob: -3.652613401412964
    4. '(a' → logprob: -3.652613401412964
    5. '([' → logprob: -5.152613639831543
    6. '((' → logprob: -5.402613639831543
    7. '()' → logprob: -6.527613639831543
    8. '(graph' → logprob: -6.777613639831543
    9. '()]' → logprob: -7.027613639831543
    10. '(b' → logprob: -7.027613639831543

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6217136383056641
    2. ')' → logprob: -1.996713638305664
    3. ',b' → logprob: -2.371713638305664
    4. 'b' → logprob: -2.621713638305664
    5. ' for' → logprob: -3.121713638305664
    6. '-' → logprob: -3.246713638305664
    7. 'for' → logprob: -4.121713638305664
    8. '[i' → logprob: -4.246713638305664
    9. ' -' → logprob: -4.371713638305664
    10. '[b' → logprob: -4.496713638305664

Token 528: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005533903022296727
    2. '0' → logprob: -8.250553131103516
    3. ' b' → logprob: -8.250553131103516
    4. '1' → logprob: -10.750553131103516
    5. ' ' → logprob: -12.000553131103516
    6. '   ' → logprob: -14.250553131103516
    7. 'a' → logprob: -14.875553131103516
    8. '[b' → logprob: -14.875553131103516
    9. ')' → logprob: -15.000553131103516
    10. '
' → logprob: -15.125553131103516

Token 529: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029744720086455345
    2. ')+' → logprob: -9.125297546386719
    3. ' )' → logprob: -9.875297546386719
    4. ')-' → logprob: -10.500297546386719
    5. 'for' → logprob: -10.500297546386719
    6. ')
' → logprob: -11.000297546386719
    7. ' for' → logprob: -11.125297546386719
    8. '   ' → logprob: -11.500297546386719
    9. '[i' → logprob: -11.625297546386719
    10. ',' → logprob: -12.125297546386719

Token 530: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28243476152420044
    2. 'for' → logprob: -1.4074347019195557
    3. '   ' → logprob: -8.032434463500977
    4. ' -' → logprob: -8.282434463500977
    5. '-' → logprob: -8.407434463500977
    6. ' ' → logprob: -9.032434463500977
    7. '+' → logprob: -9.282434463500977
    8. ')' → logprob: -9.657434463500977
    9. ']' → logprob: -9.907434463500977
    10. '  ' → logprob: -10.407434463500977

Token 531: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015988911036401987
    2. ' a' → logprob: -6.876598834991455
    3. '(a' → logprob: -7.501598834991455
    4. ' (' → logprob: -11.376599311828613
    5. '[a' → logprob: -14.251599311828613
    6. ' ' → logprob: -14.376599311828613
    7. ',' → logprob: -14.876599311828613
    8. ',a' → logprob: -15.876599311828613
    9. '  ' → logprob: -16.001598358154297
    10. '   ' → logprob: -16.001598358154297

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01692553423345089
    2. 'in' → logprob: -4.76692533493042
    3. ' in' → logprob: -5.14192533493042
    4. ',a' → logprob: -6.64192533493042
    5. 'a' → logprob: -7.64192533493042
    6. ',b' → logprob: -7.76692533493042
    7. ' ,' → logprob: -9.391925811767578
    8. ',(' → logprob: -10.141925811767578
    9. '(a' → logprob: -10.766925811767578
    10. ',
' → logprob: -11.391925811767578

Token 533: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06066622585058212
    2. 'b' → logprob: -3.06066632270813
    3. 'zip' → logprob: -5.685666084289551
    4. ' zip' → logprob: -5.810666084289551
    5. '(a' → logprob: -6.060666084289551
    6. ' a' → logprob: -6.435666084289551
    7. ' (' → logprob: -7.435666084289551
    8. ' b' → logprob: -7.935666084289551
    9. '(zip' → logprob: -8.18566608428955
    10. '(b' → logprob: -8.56066608428955

Token 534: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3484874963760376
    2. 'in' → logprob: -1.2234874963760376
    3. ')' → logprob: -10.973487854003906
    4. ']' → logprob: -11.598487854003906
    5. ',' → logprob: -11.848487854003906
    6. ' ' → logprob: -12.473487854003906
    7. 'a' → logprob: -12.848487854003906
    8. '
' → logprob: -13.723487854003906
    9. 's' → logprob: -16.285987854003906
    10. 'In' → logprob: -16.410987854003906

Token 535: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.16128647327423096
    2. ' zip' → logprob: -1.911286473274231
    3. 'A' → logprob: -7.036286354064941
    4. '(zip' → logprob: -8.661286354064941
    5. ' A' → logprob: -11.911286354064941
    6. '(A' → logprob: -13.161286354064941
    7. '.zip' → logprob: -15.786286354064941
    8. '[A' → logprob: -16.036287307739258
    9. ' ' → logprob: -16.411287307739258
    10. '
' → logprob: -16.911287307739258

Token 536: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -9.639096970204264e-05
    2. 'A' → logprob: -9.250096321105957
    3. '(' → logprob: -16.250097274780273
    4. '((' → logprob: -17.125097274780273
    5. ',A' → logprob: -17.375097274780273
    6. '
' → logprob: -17.750097274780273
    7. '(
' → logprob: -17.875097274780273
    8. ' A' → logprob: -18.000097274780273
    9. '(*' → logprob: -19.125097274780273
    10. ' (' → logprob: -19.125097274780273

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014729723334312439
    2. ',B' → logprob: -4.2647294998168945
    3. 'B' → logprob: -8.014729499816895
    4. ' ,' → logprob: -8.389729499816895
    5. ',
' → logprob: -12.889729499816895
    6. ' B' → logprob: -13.389729499816895
    7. ',b' → logprob: -13.514729499816895
    8. '   ' → logprob: -14.139729499816895
    9. '，' → logprob: -14.889729499816895
    10. ')' → logprob: -15.264729499816895

Token 538: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0004218554822728038
    2. ' B' → logprob: -7.87542200088501
    3. 'A' → logprob: -10.125421524047852
    4. '   ' → logprob: -14.500421524047852
    5. ' ' → logprob: -14.875421524047852
    6. '
' → logprob: -15.500421524047852
    7. '  ' → logprob: -15.625421524047852
    8. '    ' → logprob: -16.25042152404785
    9. '       ' → logprob: -16.37542152404785
    10. '     ' → logprob: -17.25042152404785

Token 539: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.5861724831629544e-05
    2. ')]
' → logprob: -10.250056266784668
    3. ']' → logprob: -11.625056266784668
    4. ')' → logprob: -11.625056266784668
    5. ')]

' → logprob: -14.125056266784668
    6. '])]' → logprob: -15.250056266784668
    7. ' )' → logprob: -15.500056266784668
    8. ')][' → logprob: -15.750056266784668
    9. ')])' → logprob: -15.875056266784668
    10. ')]
' → logprob: -16.00005531311035

Token 540: 'uses' (ID: 5977)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6157382130622864
    2. 'ans' → logprob: -2.6157381534576416
    3. 'dist' → logprob: -2.6157381534576416
    4. 'from' → logprob: -2.8657381534576416
    5. 'visited' → logprob: -2.9907381534576416
    6. 'uf' → logprob: -3.3657381534576416
    7. 'used' → logprob: -3.7407381534576416
    8. 'stack' → logprob: -4.490738391876221
    9. 'q' → logprob: -4.615738391876221
    10. 'import' → logprob: -4.615738391876221

Token 541: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.632614254951477
    2. ' =' → logprob: -0.757614254951477
    3. ',' → logprob: -12.257614135742188
    4. ' ' → logprob: -12.882614135742188
    5. 'd' → logprob: -13.132614135742188
    6. '=[]' → logprob: -13.632614135742188
    7. '[' → logprob: -13.757614135742188
    8. ']' → logprob: -14.007614135742188
    9. ' =[' → logprob: -14.007614135742188
    10. '_' → logprob: -15.007614135742188

Token 542: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011610525660216808
    2. '[]' → logprob: -5.011610507965088
    3. '[I' → logprob: -6.386610507965088
    4. 'set' → logprob: -6.511610507965088
    5. '[A' → logprob: -7.386610507965088
    6. '[N' → logprob: -8.386610984802246
    7. ' [' → logprob: -9.136610984802246
    8. '[min' → logprob: -9.136610984802246
    9. '[len' → logprob: -9.386610984802246
    10. '[max' → logprob: -9.386610984802246

Token 543: '(B' (ID: 8409)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7040994763374329
    2. '(range' → logprob: -1.454099416732788
    3. '(map' → logprob: -2.329099416732788
    4. '(set' → logprob: -2.704099416732788
    5. '(' → logprob: -2.829099416732788
    6. '(req' → logprob: -3.579099416732788
    7. '([' → logprob: -4.704099655151367
    8. '[' → logprob: -5.079099655151367
    9. '(graph' → logprob: -6.579099655151367
    10. '(re' → logprob: -7.204099655151367

Token 544: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.456358823925257e-05
    2. '())' → logprob: -10.750064849853516
    3. '])' → logprob: -11.125064849853516
    4. '))' → logprob: -11.750064849853516
    5. '[' → logprob: -12.000064849853516
    6. ' )' → logprob: -12.250064849853516
    7. '[])' → logprob: -12.750064849853516
    8. ')]' → logprob: -13.500064849853516
    9. '[:' → logprob: -13.500064849853516
    10. '[::-' → logprob: -14.375064849853516

Token 545: 'idx' (ID: 13196)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1788671016693115
    2. 'dp' → logprob: -1.6788671016693115
    3. 'stack' → logprob: -2.8038671016693115
    4. 'uf' → logprob: -3.1788671016693115
    5. 'q' → logprob: -3.3038671016693115
    6. 'ans' → logprob: -3.4288671016693115
    7. 'used' → logprob: -3.5538671016693115
    8. 'visited' → logprob: -3.5538671016693115
    9. 'parent' → logprob: -3.6788671016693115
    10. 'dist' → logprob: -3.9288671016693115

Token 546: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6959577202796936
    2. ' =' → logprob: -0.6959577202796936
    3. 's' → logprob: -6.445957660675049
    4. ',' → logprob: -7.320957660675049
    5. '_' → logprob: -7.570957660675049
    6. ' ' → logprob: -11.445958137512207
    7. 'es' → logprob: -11.445958137512207
    8. '_=' → logprob: -12.070958137512207
    9. ' ,' → logprob: -12.695958137512207
    10. ')' → logprob: -13.070958137512207

Token 547: ' args' (ID: 4966)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02441825345158577
    2. 'args' → logprob: -4.024418354034424
    3. '[' → logprob: -6.149418354034424
    4. '[N' → logprob: -7.149418354034424
    5. 'req' → logprob: -7.149418354034424
    6. '[]' → logprob: -7.274418354034424
    7. '-' → logprob: -7.649418354034424
    8. 'list' → logprob: -7.899418354034424
    9. 'N' → logprob: -8.399417877197266
    10. 'sorted' → logprob: -8.524417877197266

Token 548: 'ort' (ID: 390)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.014166564680635929
    2. 'ort' → logprob: -4.264166355133057
    3. '(sort' → logprob: -13.014166831970215
    4. 'orts' → logprob: -14.139166831970215
    5. ' sort' → logprob: -17.0141658782959
    6. '(' → logprob: -17.3891658782959
    7. '	sort' → logprob: -17.3891658782959
    8. 'sorted' → logprob: -17.8891658782959
    9. 's' → logprob: -18.0141658782959
    10. 'req' → logprob: -18.0141658782959

Token 549: '([' (ID: 5194)
  Prédit: '(req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(req' → logprob: -0.5767170786857605
    2. '(' → logprob: -0.8267170786857605
    3. '(us' → logprob: -7.826716899871826
    4. '(re' → logprob: -8.576717376708984
    5. '((' → logprob: -9.576717376708984
    6. '(use' → logprob: -9.951717376708984
    7. '([' → logprob: -10.201717376708984
    8. '(range' → logprob: -11.451717376708984
    9. ' (' → logprob: -12.576717376708984
    10. '(users' → logprob: -12.951717376708984

Token 550: 'a' (ID: 64)
  Prédit: 'req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.11338762193918228
    2. '-' → logprob: -2.7383875846862793
    3. '-r' → logprob: -4.113387584686279
    4. 'uses' → logprob: -5.113387584686279
    5. 'a' → logprob: -5.613387584686279
    6. '(req' → logprob: -6.113387584686279
    7. '-v' → logprob: -6.238387584686279
    8. 'r' → logprob: -6.488387584686279
    9. 'x' → logprob: -6.738387584686279
    10. '-(' → logprob: -6.738387584686279

Token 551: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18738971650600433
    2. 'for' → logprob: -1.8123897314071655
    3. '+' → logprob: -5.937389850616455
    4. '-' → logprob: -6.437389850616455
    5. 'req' → logprob: -6.437389850616455
    6. ' +' → logprob: -7.687389850616455
    7. ',' → logprob: -8.062389373779297
    8. ' -' → logprob: -8.187389373779297
    9. ' ' → logprob: -9.187389373779297
    10. '+b' → logprob: -9.687389373779297

Token 552: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002930366899818182
    2. ' b' → logprob: -8.375292778015137
    3. 'req' → logprob: -10.625292778015137
    4. '   ' → logprob: -11.500292778015137
    5. 'use' → logprob: -11.875292778015137
    6. 'u' → logprob: -12.375292778015137
    7. '(b' → logprob: -13.000292778015137
    8. 'uses' → logprob: -13.375292778015137
    9. '```' → logprob: -13.375292778015137
    10. 'a' → logprob: -13.625292778015137

Token 553: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06331110000610352
    2. 'for' → logprob: -2.8133111000061035
    3. ',' → logprob: -6.6883111000061035
    4. ')' → logprob: -9.938310623168945
    5. ' ' → logprob: -11.313310623168945
    6. ' ,' → logprob: -11.813310623168945
    7. '),' → logprob: -12.063310623168945
    8. '   ' → logprob: -12.438310623168945
    9. '],' → logprob: -12.688310623168945
    10. '])' → logprob: -12.813310623168945

Token 554: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026697807013988495
    2. ' a' → logprob: -3.651697874069214
    3. '(a' → logprob: -8.901698112487793
    4. ',' → logprob: -9.401698112487793
    5. 'req' → logprob: -10.026698112487793
    6. ',a' → logprob: -10.401698112487793
    7. 'zip' → logprob: -10.776698112487793
    8. 'i' → logprob: -11.151698112487793
    9. '_,' → logprob: -11.276698112487793
    10. ' zip' → logprob: -11.526698112487793

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002970334142446518
    2. ',b' → logprob: -6.002970218658447
    3. ' in' → logprob: -8.377970695495605
    4. ' ,' → logprob: -9.627970695495605
    5. 'in' → logprob: -9.752970695495605
    6. ',a' → logprob: -10.002970695495605
    7. ',(' → logprob: -10.502970695495605
    8. ',v' → logprob: -10.877970695495605
    9. 's' → logprob: -11.627970695495605
    10. '_,' → logprob: -12.127970695495605

Token 556: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00375970546156168
    2. ' b' → logprob: -5.628759860992432
    3. ',' → logprob: -9.128759384155273
    4. ',b' → logprob: -10.128759384155273
    5. '
' → logprob: -13.191259384155273
    6. ' ' → logprob: -13.441259384155273
    7. '  ' → logprob: -13.503759384155273
    8. '   ' → logprob: -13.503759384155273
    9. '_,' → logprob: -13.628759384155273
    10. 'a' → logprob: -14.253759384155273

Token 557: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1830817013978958
    2. 'in' → logprob: -1.9330817461013794
    3. ' in' → logprob: -3.80808162689209
    4. ',in' → logprob: -9.43308162689209
    5. ',v' → logprob: -9.55808162689209
    6. ',b' → logprob: -9.80808162689209
    7. 'enumer' → logprob: -9.93308162689209
    8. ' ,' → logprob: -10.18308162689209
    9. ',i' → logprob: -10.55808162689209
    10. ',a' → logprob: -10.93308162689209

Token 558: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.03823564574122429
    2. ' zip' → logprob: -3.288235664367676
    3. 'req' → logprob: -8.663235664367676
    4. '
' → logprob: -11.788235664367676
    5. 'range' → logprob: -12.913235664367676
    6. 'enumer' → logprob: -12.913235664367676
    7. '(zip' → logprob: -13.038235664367676
    8. ',' → logprob: -13.663235664367676
    9. ' req' → logprob: -13.663235664367676
    10. ' ' → logprob: -14.038235664367676

Token 559: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0001382241171086207
    2. '(req' → logprob: -9.375138282775879
    3. 'A' → logprob: -10.625138282775879
    4. '(' → logprob: -10.750138282775879
    5. 'req' → logprob: -12.375138282775879
    6. ' (' → logprob: -13.500138282775879
    7. '((' → logprob: -15.375138282775879
    8. '
' → logprob: -15.500138282775879
    9. '(B' → logprob: -15.500138282775879
    10. '(a' → logprob: -15.625138282775879

Token 560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003054301778320223
    2. ',B' → logprob: -9.12530517578125
    3. 'uses' → logprob: -9.50030517578125
    4. ' ,' → logprob: -10.25030517578125
    5. ',A' → logprob: -10.87530517578125
    6. ',
' → logprob: -11.50030517578125
    7. '),' → logprob: -11.87530517578125
    8. ',use' → logprob: -12.25030517578125
    9. ',b' → logprob: -12.37530517578125
    10. ',(' → logprob: -12.50030517578125

Token 561: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0004825081559829414
    2. ' B' → logprob: -7.875482559204102
    3. 'uses' → logprob: -9.500482559204102
    4. 'req' → logprob: -11.375482559204102
    5. ' uses' → logprob: -11.875482559204102
    6. '   ' → logprob: -13.375482559204102
    7. '
' → logprob: -13.625482559204102
    8. '[' → logprob: -13.625482559204102
    9. 'b' → logprob: -14.000482559204102
    10. 'A' → logprob: -14.000482559204102

Token 562: ')])
' (ID: 66560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3133877217769623
    2. '],' → logprob: -1.3133877515792847
    3. ')])' → logprob: -10.313387870788574
    4. ']' → logprob: -10.938387870788574
    5. '])[' → logprob: -10.938387870788574
    6. '])
' → logprob: -10.938387870788574
    7. ' ])' → logprob: -11.438387870788574
    8. ']])' → logprob: -12.313387870788574
    9. '),' → logprob: -12.563387870788574
    10. '])]' → logprob: -12.688387870788574

Token 563: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.10442890226840973
    2. 'for' → logprob: -2.604429006576538
    3. 'ans' → logprob: -4.854428768157959
    4. 'used' → logprob: -4.854428768157959
    5. 'visited' → logprob: -6.104428768157959
    6. 'from' → logprob: -6.729428768157959
    7. 'res' → logprob: -6.729428768157959
    8. 'answer' → logprob: -7.229428768157959
    9. 'dp' → logprob: -7.229428768157959
    10. 'UF' → logprob: -7.854428768157959

Token 564: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141392946243286
    2. '=' → logprob: -1.701413869857788
    3. '.' → logprob: -14.951414108276367
    4. ' ' → logprob: -16.076414108276367
    5. '  ' → logprob: -16.701414108276367
    6. '＝' → logprob: -17.201414108276367
    7. ':' → logprob: -18.076414108276367
    8. 'u' → logprob: -18.451414108276367
    9. ' =
' → logprob: -18.701414108276367
    10. ',' → logprob: -18.701414108276367

Token 565: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.08894176781177521
    2. ' Union' → logprob: -2.463941812515259
    3. ' ' → logprob: -14.83894157409668
    4. '   ' → logprob: -15.08894157409668
    5. 'Uni' → logprob: -15.21394157409668
    6. '_union' → logprob: -15.46394157409668
    7. ' union' → logprob: -15.46394157409668
    8. ''Union' → logprob: -15.71394157409668
    9. 'Unit' → logprob: -15.83894157409668
    10. 'union' → logprob: -15.96394157409668

Token 566: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -1.2664456789934775e-06
    2. 'F' → logprob: -14.750000953674316
    3. 'Union' → logprob: -15.250000953674316
    4. 'Fold' → logprob: -16.000001907348633
    5. '[' → logprob: -16.125001907348633
    6. 'Fill' → logprob: -16.500001907348633
    7. '(' → logprob: -17.000001907348633
    8. '-F' → logprob: -17.750001907348633
    9. '(F' → logprob: -17.750001907348633
    10. '_find' → logprob: -17.750001907348633

Token 567: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.018345307558774948
    2. '(N' → logprob: -4.018345355987549
    3. 'size' → logprob: -8.76834487915039
    4. '(' → logprob: -11.01834487915039
    5. '(n' → logprob: -11.51834487915039
    6. '(len' → logprob: -11.76834487915039
    7. '(
' → logprob: -12.89334487915039
    8. '```' → logprob: -14.39334487915039
    9. '(s' → logprob: -14.76834487915039
    10. ' (' → logprob: -14.89334487915039

Token 568: '=N' (ID: 143132)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5780966281890869
    2. 'N' → logprob: -0.8280966281890869
    3. ' N' → logprob: -6.828096389770508
    4. '=N' → logprob: -6.953096389770508
    5. '
' → logprob: -10.703096389770508
    6. ')' → logprob: -10.703096389770508
    7. '(' → logprob: -10.953096389770508
    8. '=' → logprob: -10.953096389770508
    9. '   ' → logprob: -11.078096389770508
    10. '	N' → logprob: -11.953096389770508

Token 569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032399820629507303
    2. ')
' → logprob: -5.75324010848999
    3. ')

' → logprob: -9.753239631652832
    4. ')
' → logprob: -12.628239631652832
    5. ' )' → logprob: -14.503239631652832
    6. ')`' → logprob: -15.628239631652832
    7. ')

' → logprob: -16.12824058532715
    8. '),' → logprob: -18.25324058532715
    9. ')`
' → logprob: -18.37824058532715
    10. '))' → logprob: -18.37824058532715

Token 570: 'seen' (ID: 34177)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3520088791847229
    2. 'ans' → logprob: -1.8520088195800781
    3. 'res' → logprob: -2.727008819580078
    4. 'answer' → logprob: -2.852008819580078
    5. 'result' → logprob: -5.727008819580078
    6. 'answers' → logprob: -6.227008819580078
    7. 'used' → logprob: -6.352008819580078
    8. 'dp' → logprob: -6.352008819580078
    9. 'cost' → logprob: -6.727008819580078
    10. 'total' → logprob: -6.727008819580078

Token 571: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10057228803634644
    2. '=' → logprob: -2.350572347640991
    3. ' ' → logprob: -8.85057258605957
    4. '_' → logprob: -9.22557258605957
    5. '[' → logprob: -9.85057258605957
    6. '=set' → logprob: -10.85057258605957
    7. '=[]' → logprob: -11.47557258605957
    8. '   ' → logprob: -12.47557258605957
    9. ' =[' → logprob: -12.60057258605957
    10. ',' → logprob: -12.60057258605957

Token 572: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.4753497838973999
    2. '[' → logprob: -0.9753497838973999
    3. ' set' → logprob: -7.6003499031066895
    4. '{' → logprob: -7.8503499031066895
    5. ' [' → logprob: -7.9753499031066895
    6. '[]' → logprob: -11.475349426269531
    7. '{}' → logprob: -11.475349426269531
    8. '[N' → logprob: -12.225349426269531
    9. '=set' → logprob: -12.725349426269531
    10. '(set' → logprob: -12.975349426269531

Token 573: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002695608709473163
    2. '0' → logprob: -8.250269889831543
    3. ' False' → logprob: -12.000269889831543
    4. 'True' → logprob: -13.125269889831543
    5. '(False' → logprob: -17.375268936157227
    6. 'F' → logprob: -17.500268936157227
    7. '-' → logprob: -18.125268936157227
    8. '[' → logprob: -18.250268936157227
    9. '   ' → logprob: -18.625268936157227
    10. '
' → logprob: -18.875268936157227

Token 574: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03977092355489731
    2. ' for' → logprob: -3.4147708415985107
    3. ']*' → logprob: -5.28977108001709
    4. 'for' → logprob: -6.91477108001709
    5. ' ]' → logprob: -9.91477108001709
    6. ']*(' → logprob: -11.41477108001709
    7. ')' → logprob: -12.28977108001709
    8. ']+' → logprob: -12.66477108001709
    9. '	for' → logprob: -14.41477108001709
    10. '   ' → logprob: -14.78977108001709

Token 575: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07804688811302185
    2. 'for' → logprob: -2.7030467987060547
    3. ']' → logprob: -5.578046798706055
    4. '[N' → logprob: -6.203046798706055
    5. '*' → logprob: -7.078046798706055
    6. '[' → logprob: -8.078046798706055
    7. ' *' → logprob: -8.203046798706055
    8. ']*' → logprob: -8.328046798706055
    9. ' [' → logprob: -9.203046798706055
    10. '(N' → logprob: -9.328046798706055

Token 576: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.742448022123426e-05
    2. '(N' → logprob: -9.750067710876465
    3. ' N' → logprob: -11.875067710876465
    4. '(' → logprob: -13.500067710876465
    5. 'M' → logprob: -15.375067710876465
    6. ' (' → logprob: -15.875067710876465
    7. '   ' → logprob: -16.37506675720215
    8. ' ' → logprob: -16.87506675720215
    9. 'len' → logprob: -16.87506675720215
    10. '
' → logprob: -17.50006675720215

Token 577: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028975259512662888
    2. 'ans' → logprob: -5.028975486755371
    3. 'stack' → logprob: -5.153975486755371
    4. 'answer' → logprob: -5.403975486755371
    5. 'res' → logprob: -5.778975486755371
    6. 'from' → logprob: -6.528975486755371
    7. 'q' → logprob: -6.653975486755371
    8. 'result' → logprob: -6.903975486755371
    9. 'queue' → logprob: -7.028975486755371
    10. 'order' → logprob: -7.653975486755371

Token 578: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16413769125938416
    2. 'ans' → logprob: -2.789137601852417
    3. 'res' → logprob: -3.039137601852417
    4. 'answer' → logprob: -4.289137840270996
    5. 'from' → logprob: -4.789137840270996
    6. 'import' → logprob: -5.414137840270996
    7. 'stack' → logprob: -5.789137840270996
    8. 'order' → logprob: -6.164137840270996
    9. 'result' → logprob: -6.289137840270996
    10. 'dp' → logprob: -6.539137840270996

Token 579: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759457349777222
    2. ' =' → logprob: -0.8259457349777222
    3. ' ' → logprob: -13.450945854187012
    4. ',' → logprob: -13.450945854187012
    5. '=[]' → logprob: -14.075945854187012
    6. '[' → logprob: -14.075945854187012
    7. '_' → logprob: -14.825945854187012
    8. ':' → logprob: -15.075945854187012
    9. '=[' → logprob: -15.450945854187012
    10. ' =[' → logprob: -15.450945854187012

Token 580: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21469159424304962
    2. '[]' → logprob: -1.7146916389465332
    3. '[' → logprob: -4.839691638946533
    4. 'I' → logprob: -5.964691638946533
    5. '[I' → logprob: -7.339691638946533
    6. 'INF' → logprob: -7.464691638946533
    7. '[]
' → logprob: -8.089691162109375
    8. '-' → logprob: -8.464691162109375
    9. '[N' → logprob: -8.589691162109375
    10. '""' → logprob: -9.339691162109375

Token 581: 'INF' (ID: 64358)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.724136471748352
    2. '-' → logprob: -1.099136471748352
    3. 'INF' → logprob: -2.4741363525390625
    4. 'False' → logprob: -3.0991363525390625
    5. 'I' → logprob: -3.7241363525390625
    6. 'None' → logprob: -4.4741363525390625
    7. ']' → logprob: -4.8491363525390625
    8. '"' → logprob: -6.0991363525390625
    9. 'float' → logprob: -6.5991363525390625
    10. '-I' → logprob: -6.9741363525390625

Token 582: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017624642350710928
    2. ' ]' → logprob: -9.125176429748535
    3. ']*' → logprob: -10.000176429748535
    4. ' for' → logprob: -11.125176429748535
    5. 'for' → logprob: -12.500176429748535
    6. ')' → logprob: -13.000176429748535
    7. ')]' → logprob: -14.125176429748535
    8. ',' → logprob: -16.87517547607422
    9. ' ' → logprob: -17.12517547607422
    10. ']*(' → logprob: -17.12517547607422

Token 583: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01403315644711256
    2. 'for' → logprob: -4.639033317565918
    3. '
' → logprob: -6.514033317565918
    4. ' for' → logprob: -6.889033317565918
    5. ' 
' → logprob: -7.639033317565918
    6. '\n' → logprob: -8.014033317565918
    7. '

' → logprob: -8.514033317565918
    8. '  
' → logprob: -8.514033317565918
    9. '0' → logprob: -8.639033317565918
    10. '' → logprob: -9.389033317565918

Token 584: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04278985410928726
    2. '(N' → logprob: -3.292789936065674
    3. 'M' → logprob: -5.792789936065674
    4. '(M' → logprob: -6.792789936065674
    5. '(' → logprob: -8.042789459228516
    6. 'len' → logprob: -9.417789459228516
    7. 'Q' → logprob: -10.292789459228516
    8. ' (' → logprob: -10.917789459228516
    9. ' N' → logprob: -10.917789459228516
    10. '(len' → logprob: -11.042789459228516

Token 585: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004117581062018871
    2. 'stack' → logprob: -5.879117488861084
    3. 'q' → logprob: -8.629117965698242
    4. 'i' → logprob: -8.629117965698242
    5. 'from' → logprob: -8.754117965698242
    6. ' for' → logprob: -9.004117965698242
    7. 'def' → logprob: -9.004117965698242
    8. 'while' → logprob: -9.379117965698242
    9. 'import' → logprob: -9.504117965698242
    10. 'queue' → logprob: -9.879117965698242

Token 586: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002440574113279581
    2. 'from' → logprob: -6.627440452575684
    3. 'stack' → logprob: -7.377440452575684
    4. 'import' → logprob: -7.752440452575684
    5. 'def' → logprob: -11.377440452575684
    6. 'queue' → logprob: -11.502440452575684
    7. 'q' → logprob: -11.502440452575684
    8. 'while' → logprob: -12.127440452575684
    9. 'que' → logprob: -12.627440452575684
    10. ' for' → logprob: -12.877440452575684

Token 587: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07400963455438614
    2. 'v' → logprob: -3.574009656906128
    3. 'x' → logprob: -4.074009418487549
    4. 'idx' → logprob: -4.449009418487549
    5. 'u' → logprob: -5.949009418487549
    6. 'k' → logprob: -6.074009418487549
    7. ' i' → logprob: -6.699009418487549
    8. 'j' → logprob: -6.949009418487549
    9. 'node' → logprob: -7.074009418487549
    10. 'id' → logprob: -7.074009418487549

Token 588: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6326637864112854
    2. 'in' → logprob: -0.7576637864112854
    3. ' ' → logprob: -11.00766372680664
    4. ',' → logprob: -11.50766372680664
    5. '_in' → logprob: -11.75766372680664
    6. 'i' → logprob: -12.00766372680664
    7. 'v' → logprob: -12.38266372680664
    8. 'idx' → logprob: -12.38266372680664
    9. 'n' → logprob: -12.75766372680664
    10. '_' → logprob: -13.25766372680664

Token 589: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0013509492855519056
    2. 'range' → logprob: -6.6263508796691895
    3. ' idx' → logprob: -11.001351356506348
    4. 'index' → logprob: -12.751351356506348
    5. 're' → logprob: -13.001351356506348
    6. '[' → logprob: -13.751351356506348
    7. '[idx' → logprob: -14.126351356506348
    8. 'ans' → logprob: -15.501351356506348
    9. 'req' → logprob: -15.501351356506348
    10. 'id' → logprob: -15.751351356506348

Token 590: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026345467194914818
    2. ':
' → logprob: -3.6513454914093018
    3. 'v' → logprob: -10.776345252990723
    4. '   ' → logprob: -11.776345252990723
    5. ':
' → logprob: -12.276345252990723
    6. ',' → logprob: -12.526345252990723
    7. ' :' → logprob: -13.026345252990723
    8. '):' → logprob: -13.776345252990723
    9. '[' → logprob: -14.026345252990723
    10. '):
' → logprob: -14.026345252990723

Token 591: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019314531236886978
    2. 'seen' → logprob: -4.519314765930176
    3. 'stack' → logprob: -5.894314765930176
    4. 'if' → logprob: -6.269314765930176
    5. ' if' → logprob: -6.894314765930176
    6. ' seen' → logprob: -7.394314765930176
    7. 'for' → logprob: -8.019314765930176
    8. 'ans' → logprob: -8.269314765930176
    9. 'q' → logprob: -8.394314765930176
    10. 'queue' → logprob: -8.519314765930176

Token 592: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.04998109117150307
    2. 'uf' → logprob: -3.549981117248535
    3. 'for' → logprob: -4.799981117248535
    4. 'ans' → logprob: -5.299981117248535
    5. 'uses' → logprob: -5.549981117248535
    6. 'used' → logprob: -6.924981117248535
    7. 'stack' → logprob: -7.299981117248535
    8. '   ' → logprob: -8.424981117248535
    9. 'if' → logprob: -9.049981117248535
    10. 'q' → logprob: -9.049981117248535

Token 593: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. '[
' → logprob: -17.75
    4. ' [' → logprob: -18.125
    5. 'v' → logprob: -18.875
    6. '[V' → logprob: -19.0
    7. '
' → logprob: -19.375
    8. '[t' → logprob: -20.375
    9. '[val' → logprob: -20.375
    10. '[u' → logprob: -20.5

Token 594: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011856284982059151
    2. ']=' → logprob: -9.250118255615234
    3. '=' → logprob: -10.750118255615234
    4. ' ]' → logprob: -14.250118255615234
    5. ' =' → logprob: -15.625118255615234
    6. '   ' → logprob: -16.125118255615234
    7. ' ' → logprob: -18.250118255615234
    8. ']
' → logprob: -18.250118255615234
    9. ')' → logprob: -18.250118255615234
    10. ',' → logprob: -18.625118255615234

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033558503491804004
    2. ' =' → logprob: -8.000335693359375
    3. '=True' → logprob: -15.875335693359375
    4. ' ' → logprob: -20.250335693359375
    5. ',' → logprob: -20.625335693359375
    6. ']' → logprob: -21.500335693359375
    7. ']=' → logprob: -21.750335693359375
    8. ')' → logprob: -21.875335693359375
    9. '   ' → logprob: -22.000335693359375
    10. '=

' → logprob: -22.000335693359375

Token 596: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.512236498361744e-07
    2. ' True' → logprob: -14.500000953674316
    3. '1' → logprob: -20.125
    4. 'true' → logprob: -20.5
    5. '(True' → logprob: -21.0
    6. 'False' → logprob: -21.375
    7. '=True' → logprob: -21.5
    8. '   ' → logprob: -21.5
    9. 'Tr' → logprob: -22.375
    10. '
' → logprob: -22.75

Token 597: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1931811422109604
    2. 'for' → logprob: -1.8181811571121216
    3. 'uf' → logprob: -5.318181037902832
    4. ' for' → logprob: -5.818181037902832
    5. 'ans' → logprob: -5.818181037902832
    6. 'stack' → logprob: -7.068181037902832
    7. 'queue' → logprob: -7.443181037902832
    8. ' uf' → logprob: -8.193181037902832
    9. '    
' → logprob: -8.693181037902832
    10. 'q' → logprob: -9.193181037902832

Token 598: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1780916303396225
    2. 'for' → logprob: -1.9280916452407837
    3. 'ans' → logprob: -4.928091526031494
    4. 'uf' → logprob: -4.928091526031494
    5. 'stack' → logprob: -6.803091526031494
    6. 'queue' → logprob: -7.428091526031494
    7. ' for' → logprob: -7.428091526031494
    8. ' uf' → logprob: -8.803092002868652
    9. '```' → logprob: -8.928092002868652
    10. 'q' → logprob: -9.303092002868652

Token 599: ' roots' (ID: 29895)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05650072917342186
    2. 'uf' → logprob: -3.3065006732940674
    3. 'ans' → logprob: -5.1815009117126465
    4. 'stack' → logprob: -5.3065009117126465
    5. 'q' → logprob: -6.3065009117126465
    6. 'queue' → logprob: -7.0565009117126465
    7. 'cur' → logprob: -7.1815009117126465
    8. 'use' → logprob: -7.5565009117126465
    9. 'uses' → logprob: -7.6815009117126465
    10. 'que' → logprob: -7.8065009117126465

Token 600: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11466748267412186
    2. '=' → logprob: -2.2396674156188965
    3. '=set' → logprob: -6.3646674156188965
    4. 'set' → logprob: -10.364667892456055
    5. '_set' → logprob: -10.364667892456055
    6. 'roots' → logprob: -11.364667892456055
    7. '   ' → logprob: -11.989667892456055
    8. '_ro' → logprob: -11.989667892456055
    9. 'v' → logprob: -11.989667892456055
    10. 's' → logprob: -12.239667892456055

Token 601: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.44956985116004944
    2. '{' → logprob: -1.199569821357727
    3. '{}' → logprob: -2.8245699405670166
    4. '[]' → logprob: -7.3245697021484375
    5. '[' → logprob: -7.8245697021484375
    6. '{}
' → logprob: -8.699569702148438
    7. ' set' → logprob: -9.074569702148438
    8. '[]
' → logprob: -10.824569702148438
    9. '{s' → logprob: -11.449569702148438
    10. 'dict' → logprob: -11.574569702148438

Token 602: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4903566539287567
    2. '(' → logprob: -1.115356683731079
    3. '([' → logprob: -3.115356683731079
    4. '()
' → logprob: -4.3653564453125
    5. '(
' → logprob: -6.7403564453125
    6. '(graph' → logprob: -6.9903564453125
    7. '(self' → logprob: -8.6153564453125
    8. 'uf' → logprob: -8.9903564453125
    9. '((' → logprob: -9.4903564453125
    10. '(root' → logprob: -9.8653564453125

Token 603: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0062972805462777615
    2. 'for' → logprob: -5.3812971115112305
    3. ' for' → logprob: -6.6312971115112305
    4. 'roots' → logprob: -8.25629711151123
    5. ' roots' → logprob: -9.75629711151123
    6. ')' → logprob: -11.75629711151123
    7. '	for' → logprob: -11.88129711151123
    8. '    
' → logprob: -12.00629711151123
    9. '       ' → logprob: -12.75629711151123
    10. '{' → logprob: -12.75629711151123

Token 604: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05059642344713211
    2. 'roots' → logprob: -3.1755964756011963
    3. '   ' → logprob: -4.925596237182617
    4. ' for' → logprob: -8.300596237182617
    5. 'root' → logprob: -10.675596237182617
    6. ' roots' → logprob: -11.050596237182617
    7. '```' → logprob: -11.925596237182617
    8. 'graph' → logprob: -12.425596237182617
    9. 'ans' → logprob: -12.800596237182617
    10. '	for' → logprob: -13.550596237182617

Token 605: ' u' (ID: 337)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0197153091430664
    2. 'u' → logprob: -1.3947153091430664
    3. 'nv' → logprob: -1.6447153091430664
    4. 'nx' → logprob: -2.5197153091430664
    5. 'n' → logprob: -2.6447153091430664
    6. 'to' → logprob: -3.5197153091430664
    7. 'e' → logprob: -5.144715309143066
    8. 'x' → logprob: -6.019715309143066
    9. 'ne' → logprob: -6.144715309143066
    10. ' nxt' → logprob: -7.019715309143066

Token 606: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14273706078529358
    2. 'in' → logprob: -2.0177371501922607
    3. '   ' → logprob: -10.14273738861084
    4. '	in' → logprob: -11.39273738861084
    5. ' ' → logprob: -11.89273738861084
    6. '    ' → logprob: -13.01773738861084
    7. 'n' → logprob: -14.64273738861084
    8. 'In' → logprob: -15.01773738861084
    9. '  ' → logprob: -15.01773738861084
    10. '_in' → logprob: -15.39273738861084

Token 607: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.008616935461759567
    2. ' graph' → logprob: -4.758616924285889
    3. '	graph' → logprob: -13.883617401123047
    4. '   ' → logprob: -14.008617401123047
    5. '(graph' → logprob: -14.508617401123047
    6. ' ' → logprob: -16.258617401123047
    7. 'raph' → logprob: -17.508617401123047
    8. '  ' → logprob: -18.133617401123047
    9. 'graphql' → logprob: -18.133617401123047
    10. 'graphic' → logprob: -18.508617401123047

Token 608: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -8.180258191714529e-06
    2. 'v' → logprob: -11.875008583068848
    3. '[u' → logprob: -14.500008583068848
    4. '[' → logprob: -14.750008583068848
    5. '[
' → logprob: -16.62500762939453
    6. ' [' → logprob: -17.00000762939453
    7. '(v' → logprob: -17.37500762939453
    8. '<v' → logprob: -18.25000762939453
    9. '
' → logprob: -18.87500762939453
    10. '   ' → logprob: -19.00000762939453

Token 609: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.19333592057228088
    2. ']:
' → logprob: -2.193336009979248
    3. '   ' → logprob: -3.818336009979248
    4. '[v' → logprob: -3.818336009979248
    5. ':' → logprob: -4.443336009979248
    6. ']' → logprob: -5.318336009979248
    7. '       ' → logprob: -6.443336009979248
    8. 'v' → logprob: -7.068336009979248
    9. ':
' → logprob: -7.318336009979248
    10. '):' → logprob: -9.06833553314209

Token 610: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021221882198005915
    2. 'if' → logprob: -6.377122402191162
    3. ' if' → logprob: -7.877122402191162
    4. '   ' → logprob: -10.252121925354004
    5. '	' → logprob: -13.502121925354004
    6. '	if' → logprob: -13.502121925354004
    7. '	   ' → logprob: -13.752121925354004
    8. '           ' → logprob: -14.502121925354004
    9. '     ' → logprob: -15.127121925354004
    10. '```' → logprob: -15.127121925354004

Token 611: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.38781100511550903
    2. '       ' → logprob: -1.1378109455108643
    3. ' if' → logprob: -7.137811183929443
    4. '   ' → logprob: -8.887810707092285
    5. '	if' → logprob: -12.387810707092285
    6. '           ' → logprob: -13.137810707092285
    7. 'If' → logprob: -15.137810707092285
    8. '	   ' → logprob: -16.0128116607666
    9. ' ' → logprob: -16.2628116607666
    10. ';if' → logprob: -16.3878116607666

Token 612: ' not' (ID: 625)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.006775169633328915
    2. ' seen' → logprob: -5.006775379180908
    3. '   ' → logprob: -10.13177490234375
    4. 'not' → logprob: -11.88177490234375
    5. 'see' → logprob: -12.25677490234375
    6. 'se' → logprob: -12.63177490234375
    7. ' ' → logprob: -13.13177490234375
    8. ' not' → logprob: -14.38177490234375
    9. '  ' → logprob: -14.63177490234375
    10. '       ' → logprob: -14.88177490234375

Token 613: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.0011417650384828448
    2. ' seen' → logprob: -6.876141548156738
    3. 'se' → logprob: -10.001141548156738
    4. 'not' → logprob: -10.126141548156738
    5. '   ' → logprob: -11.251141548156738
    6. '
' → logprob: -13.251141548156738
    7. 'shown' → logprob: -13.376141548156738
    8. 'see' → logprob: -13.626141548156738
    9. ' ' → logprob: -13.626141548156738
    10. 'visited' → logprob: -14.001141548156738

Token 614: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.306760805164231e-05
    2. '[v' → logprob: -12.25001335144043
    3. '[' → logprob: -12.62501335144043
    4. '   ' → logprob: -13.12501335144043
    5. '       ' → logprob: -13.62501335144043
    6. '           ' → logprob: -14.75001335144043
    7. 'u' → logprob: -15.12501335144043
    8. ' [' → logprob: -15.25001335144043
    9. '[
' → logprob: -15.50001335144043
    10. ' u' → logprob: -16.12501335144043

Token 615: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15965858101844788
    2. ':' → logprob: -2.159658670425415
    3. '           ' → logprob: -3.659658670425415
    4. '       ' → logprob: -5.659658432006836
    5. 'continue' → logprob: -6.284658432006836
    6. '):
' → logprob: -7.909658432006836
    7. ' continue' → logprob: -8.159658432006836
    8. ' or' → logprob: -9.034658432006836
    9. '   ' → logprob: -9.409658432006836
    10. ':return' → logprob: -9.909658432006836

Token 616: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0074724555015563965
    2. 'continue' → logprob: -5.382472515106201
    3. ' continue' → logprob: -5.882472515106201
    4. ':' → logprob: -10.632472038269043
    5. ':
' → logprob: -11.757472038269043
    6. '	continue' → logprob: -11.882472038269043
    7. '       ' → logprob: -12.007472038269043
    8. ',' → logprob: -12.132472038269043
    9. '_continue' → logprob: -13.007472038269043
    10. '		' → logprob: -13.257472038269043

Token 617: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19689936935901642
    2. ' continue' → logprob: -2.1968994140625
    3. 'continue' (adapté à ' continue') → logprob: -2.6968994140625
    4. '	continue' → logprob: -9.5718994140625
    5. '           ' → logprob: -9.9468994140625
    6. '   ' → logprob: -10.6968994140625
    7. '                   ' → logprob: -11.9468994140625
    8. '_continue' → logprob: -12.0718994140625
    9. '       ' → logprob: -12.6968994140625
    10. 'contin' → logprob: -13.1968994140625

Token 618: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003282644087448716
    2. ' roots' → logprob: -6.37828254699707
    3. 'roots' → logprob: -6.87828254699707
    4. '   ' → logprob: -8.12828254699707
    5. '           ' → logprob: -9.25328254699707
    6. 'root' → logprob: -9.87828254699707
    7. ',' → logprob: -10.12828254699707
    8. '        
' → logprob: -11.37828254699707
    9. 'continue' → logprob: -11.75328254699707
    10. '
' → logprob: -11.75328254699707

Token 619: '       ' (ID: 309)
  Prédit: 'roots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -0.36933812499046326
    2. '       ' → logprob: -1.6193381547927856
    3. ' roots' → logprob: -2.244338035583496
    4. '   ' → logprob: -5.494338035583496
    5. 'root' → logprob: -7.369338035583496
    6. 'Roots' → logprob: -11.369338035583496
    7. '           ' → logprob: -12.119338035583496
    8. ' root' → logprob: -12.994338035583496
    9. 'u' → logprob: -12.994338035583496
    10. ',' → logprob: -13.244338035583496

Token 620: ' roots' (ID: 29895)
  Prédit: 'roots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' (adapté à ' roots') → logprob: -0.08724222332239151
    2. ' roots' → logprob: -2.7122421264648438
    3. '   ' → logprob: -4.337242126464844
    4. '       ' → logprob: -5.712242126464844
    5. '           ' → logprob: -7.962242126464844
    6. 'root' → logprob: -8.212242126464844
    7. 'uf' → logprob: -9.337242126464844
    8. 'Roots' → logprob: -11.337242126464844
    9. 'ufs' → logprob: -11.962242126464844
    10. 'for' → logprob: -12.337242126464844

Token 621: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00012451570364646614
    2. '.' → logprob: -9.00012493133545
    3. ' .' → logprob: -13.75012493133545
    4. 'add' → logprob: -17.250123977661133
    5. '   ' → logprob: -18.625123977661133
    6. '.append' → logprob: -18.750123977661133
    7. '.
' → logprob: -19.125123977661133
    8. '.update' → logprob: -19.625123977661133
    9. '.Add' → logprob: -19.750123977661133
    10. '
' → logprob: -19.750123977661133

Token 622: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.392202976712724e-06
    2. 'uf' → logprob: -12.000006675720215
    3. '(
' → logprob: -16.8750057220459
    4. '(u' → logprob: -17.2500057220459
    5. ' (' → logprob: -18.0000057220459
    6. '((' → logprob: -18.3750057220459
    7. '(un' → logprob: -18.6250057220459
    8. ' uf' → logprob: -18.8750057220459
    9. '   ' → logprob: -19.5000057220459
    10. '.uf' → logprob: -20.2500057220459

Token 623: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -8.590104698669165e-05
    2. ' uf' → logprob: -9.375085830688477
    3. 'u' → logprob: -15.125085830688477
    4. '   ' → logprob: -15.750085830688477
    5. 'ufs' → logprob: -16.125085830688477
    6. 'ug' → logprob: -16.750085830688477
    7. '
' → logprob: -16.875085830688477
    8. 'uff' → logprob: -16.875085830688477
    9. 'ufi' → logprob: -17.375085830688477
    10. '.uf' → logprob: -17.500085830688477

Token 624: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -4.8232690460281447e-05
    2. '.' → logprob: -10.500048637390137
    3. 'root' → logprob: -11.125048637390137
    4. '.un' → logprob: -12.875048637390137
    5. ' .' → logprob: -13.500048637390137
    6. '.parent' → logprob: -14.750048637390137
    7. '.ro' → logprob: -14.875048637390137
    8. '._' → logprob: -15.000048637390137
    9. ').' → logprob: -15.500048637390137
    10. '..' → logprob: -16.12504768371582

Token 625: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.125000953674316
    3. 'u' → logprob: -16.125
    4. ')' → logprob: -16.75
    5. ')(' → logprob: -17.375
    6. '(v' → logprob: -17.625
    7. ' (' → logprob: -17.75
    8. '((' → logprob: -18.5
    9. '[u' → logprob: -18.625
    10. '(
' → logprob: -18.875

Token 626: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5740278363227844
    2. '))' → logprob: -1.0740277767181396
    3. '))
' → logprob: -2.5740277767181396
    4. ')
' → logprob: -4.074028015136719
    5. '())' → logprob: -6.699028015136719
    6. '())
' → logprob: -8.324028015136719
    7. '   ' → logprob: -8.449028015136719
    8. '))

' → logprob: -9.574028015136719
    9. '()))' → logprob: -9.824028015136719
    10. '()))
' → logprob: -10.324028015136719

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013585673877969384
    2. 'for' → logprob: -6.751358509063721
    3. ' for' → logprob: -9.251358985900879
    4. 'uf' → logprob: -9.626358985900879
    5. '    
' → logprob: -11.251358985900879
    6. ')' → logprob: -12.376358985900879
    7. '```' → logprob: -12.376358985900879
    8. '
' → logprob: -13.626358985900879
    9. '       ' → logprob: -14.126358985900879
    10. '  ' → logprob: -14.251358985900879

Token 628: ' use' (ID: 1199)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.054627228528261185
    2. '   ' → logprob: -3.8046271800994873
    3. 'uf' → logprob: -4.054627418518066
    4. 'if' → logprob: -4.679627418518066
    5. ' for' → logprob: -6.054627418518066
    6. 'roots' → logprob: -6.554627418518066
    7. 'root' → logprob: -8.679627418518066
    8. 'ans' → logprob: -8.929627418518066
    9. ' uf' → logprob: -10.054627418518066
    10. 'parents' → logprob: -10.429627418518066

Token 629: '_all' (ID: 13305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025054531171917915
    2. 'd' → logprob: -4.775054454803467
    3. 'sum' → logprob: -5.775054454803467
    4. ' =' → logprob: -6.025054454803467
    5. 'rs' → logprob: -6.525054454803467
    6. '=' → logprob: -6.775054454803467
    7. 'size' → logprob: -6.900054454803467
    8. 'ful' → logprob: -7.025054454803467
    9. '_sum' → logprob: -7.025054454803467
    10. '_count' → logprob: -7.275054454803467

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44301122426986694
    2. 'd' → logprob: -1.1930112838745117
    3. 's' → logprob: -3.8180112838745117
    4. '=' → logprob: -3.9430112838745117
    5. 'r' → logprob: -4.818011283874512
    6. 'rs' → logprob: -5.443011283874512
    7. '[' → logprob: -8.943011283874512
    8. '()' → logprob: -8.943011283874512
    9. '_' → logprob: -9.318011283874512
    10. ',' → logprob: -9.818011283874512

Token 631: ' uses' (ID: 8844)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.17713433504104614
    2. 'all' → logprob: -2.9271342754364014
    3. 'False' → logprob: -3.0521342754364014
    4. 'uses' → logprob: -3.0521342754364014
    5. 'sum' → logprob: -5.3021345138549805
    6. 'req' → logprob: -5.9271345138549805
    7. 'B' → logprob: -7.1771345138549805
    8. 'A' → logprob: -7.1771345138549805
    9. '(True' → logprob: -7.3021345138549805
    10. '0' → logprob: -7.3021345138549805

Token 632: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.008800460025668144
    2. '[' → logprob: -5.383800506591797
    3. 'v' → logprob: -5.758800506591797
    4. '[:]' → logprob: -7.133800506591797
    5. '[root' → logprob: -10.258800506591797
    6. '[u' → logprob: -10.258800506591797
    7. '[:' → logprob: -10.383800506591797
    8. ' =' → logprob: -10.758800506591797
    9. '.copy' → logprob: -11.258800506591797
    10. '=v' → logprob: -11.383800506591797

Token 633: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.049489621073007584
    2. ']==' → logprob: -3.424489736557007
    3. ']
' → logprob: -5.049489498138428
    4. '])' → logprob: -5.424489498138428
    5. ']+' → logprob: -6.299489498138428
    6. ']>' → logprob: -7.049489498138428
    7. ' ]' → logprob: -7.674489498138428
    8. ']>=' → logprob: -7.799489498138428
    9. '[v' → logprob: -7.924489498138428
    10. ']!=' → logprob: -8.549489974975586

Token 634: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12885244190692902
    2. 'if' → logprob: -2.878852367401123
    3. 'for' → logprob: -3.378852367401123
    4. ' for' → logprob: -4.003852367401123
    5. ' if' → logprob: -4.878852367401123
    6. 'while' → logprob: -6.503852367401123
    7. 'uf' → logprob: -6.878852367401123
    8. ',' → logprob: -8.253852844238281
    9. 'sum' → logprob: -8.253852844238281
    10. ' while' → logprob: -8.503852844238281

Token 635: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23821938037872314
    2. 'if' → logprob: -2.2382192611694336
    3. 'while' → logprob: -2.7382192611694336
    4. 'ans' → logprob: -3.4882192611694336
    5. ' for' → logprob: -5.613219261169434
    6. 'use' → logprob: -5.738219261169434
    7. 'uf' → logprob: -6.988219261169434
    8. 'all' → logprob: -7.738219261169434
    9. '   ' → logprob: -7.863219261169434
    10. '+' → logprob: -7.988219261169434

Token 636: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.053109969943761826
    2. 'root' → logprob: -3.053109884262085
    3. 'x' → logprob: -6.553110122680664
    4. 'rt' → logprob: -6.678110122680664
    5. 'u' → logprob: -7.303110122680664
    6. 'rv' → logprob: -7.803110122680664
    7. 'w' → logprob: -8.803110122680664
    8. 'p' → logprob: -9.178110122680664
    9. ' r' → logprob: -9.303110122680664
    10. 'y' → logprob: -9.928110122680664

Token 637: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11303504556417465
    2. 'in' → logprob: -2.238034963607788
    3. 'n' → logprob: -9.988035202026367
    4. 'r' → logprob: -9.988035202026367
    5. 's' → logprob: -10.113035202026367
    6. '_in' → logprob: -11.113035202026367
    7. ' ' → logprob: -11.238035202026367
    8. 'd' → logprob: -11.738035202026367
    9. 'root' → logprob: -11.863035202026367
    10. '
' → logprob: -11.988035202026367

Token 638: ' roots' (ID: 29895)
  Prédit: 'roots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -0.16024677455425262
    2. ' roots' → logprob: -1.910246729850769
    3. 'root' → logprob: -12.035246849060059
    4. 'sorted' → logprob: -12.035246849060059
    5. 'list' → logprob: -12.660246849060059
    6. 'ro' → logprob: -13.535246849060059
    7. 'oot' → logprob: -13.535246849060059
    8. 'r' → logprob: -13.660246849060059
    9. ' ' → logprob: -14.285246849060059
    10. ' list' → logprob: -14.535246849060059

Token 639: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37700748443603516
    2. ':' → logprob: -1.5020074844360352
    3. '   ' → logprob: -2.502007484436035
    4. '       ' → logprob: -4.752007484436035
    5. 'use' → logprob: -8.377007484436035
    6. '):
' → logprob: -8.877007484436035
    7. ':
' → logprob: -9.127007484436035
    8. '    ' → logprob: -9.627007484436035
    9. '=' → logprob: -9.752007484436035
    10. ',' → logprob: -10.252007484436035

Token 640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20152638852596283
    2. 'use' → logprob: -1.826526403427124
    3. '   ' → logprob: -4.076526165008545
    4. 'if' → logprob: -5.826526165008545
    5. ' use' → logprob: -6.701526165008545
    6. 'uses' → logprob: -9.201526641845703
    7. ' if' → logprob: -9.451526641845703
    8. '	use' → logprob: -9.576526641845703
    9. '```' → logprob: -10.451526641845703
    10. 'uf' → logprob: -10.701526641845703

Token 641: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' (adapté à ' use') → logprob: -0.5921267867088318
    2. 'uf' → logprob: -1.0921268463134766
    3. 'if' → logprob: -2.7171268463134766
    4. '   ' → logprob: -3.3421268463134766
    5. 'uses' → logprob: -5.467126846313477
    6. '       ' → logprob: -5.967126846313477
    7. ' uf' → logprob: -7.342126846313477
    8. 'ufs' → logprob: -7.467126846313477
    9. ' use' → logprob: -8.092126846313477
    10. 'ans' → logprob: -8.342126846313477

Token 642: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.6166903151315637e-05
    2. '_' → logprob: -12.125016212463379
    3. '=' → logprob: -12.750016212463379
    4. 'r' → logprob: -13.125016212463379
    5. 'd' → logprob: -13.250016212463379
    6. '_al' → logprob: -13.625016212463379
    7. ' =' → logprob: -13.875016212463379
    8. 's' → logprob: -14.500016212463379
    9. 'All' → logprob: -15.250016212463379
    10. '_a' → logprob: -15.625016212463379

Token 643: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5259701609611511
    2. '+=' → logprob: -1.025970220565796
    3. ' =' → logprob: -3.775970220565796
    4. '=' → logprob: -4.400969982147217
    5. ' -=' → logprob: -4.775969982147217
    6. '-=' → logprob: -5.025969982147217
    7. '+' → logprob: -9.275970458984375
    8. '*=' → logprob: -10.025970458984375
    9. '-' → logprob: -10.150970458984375
    10. '   ' → logprob: -10.400970458984375

Token 644: ' uses' (ID: 8844)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0005272957496345043
    2. ' uf' → logprob: -7.625527381896973
    3. 'uses' → logprob: -10.625527381896973
    4. 'ufs' → logprob: -11.375527381896973
    5. 'ans' → logprob: -13.875527381896973
    6. 'use' → logprob: -14.625527381896973
    7. '   ' → logprob: -14.875527381896973
    8. 'uff' → logprob: -15.000527381896973
    9. ' ' → logprob: -15.125527381896973
    10. ' uses' → logprob: -15.500527381896973

Token 645: '[r' (ID: 33265)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002724217774812132
    2. '[r' → logprob: -8.375272750854492
    3. 'uf' → logprob: -10.750272750854492
    4. 'r' → logprob: -11.125272750854492
    5. '[
' → logprob: -13.375272750854492
    6. '[u' → logprob: -14.000272750854492
    7. '[root' → logprob: -14.000272750854492
    8. '[[' → logprob: -14.750272750854492
    9. '[df' → logprob: -14.750272750854492
    10. ' uf' → logprob: -14.875272750854492

Token 646: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20159576833248138
    2. ']
' → logprob: -1.7015957832336426
    3. '   ' → logprob: -9.326595306396484
    4. '
' → logprob: -9.826595306396484
    5. ']

' → logprob: -10.826595306396484
    6. '       ' → logprob: -12.451595306396484
    7. ' ]' → logprob: -12.701595306396484
    8. ']
' → logprob: -12.701595306396484
    9. ')' → logprob: -13.201595306396484
    10. ' ]
' → logprob: -13.451595306396484

Token 647: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017089712200686336
    2. 'uf' → logprob: -7.126708984375
    3. '       ' → logprob: -7.376708984375
    4. 'if' → logprob: -9.376708984375
    5. ' if' → logprob: -10.251708984375
    6. ' uf' → logprob: -10.376708984375
    7. 'for' → logprob: -10.501708984375
    8. '    
' → logprob: -11.001708984375
    9. ' for' → logprob: -11.126708984375
    10. ',' → logprob: -11.376708984375

Token 648: ' req' (ID: 7257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7470798492431641
    2. 'uf' → logprob: -0.8720798492431641
    3. 'if' → logprob: -2.747079849243164
    4. ' uf' → logprob: -4.122079849243164
    5. ' if' → logprob: -4.247079849243164
    6. 'for' → logprob: -5.372079849243164
    7. 'ans' → logprob: -5.747079849243164
    8. ' for' → logprob: -5.747079849243164
    9. 'while' → logprob: -7.747079849243164
    10. 'use' → logprob: -7.997079849243164

Token 649: '_v' (ID: 5390)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05423276498913765
    2. ' =' → logprob: -3.3042328357696533
    3. '=' → logprob: -4.179232597351074
    4. 'if' → logprob: -8.179232597351074
    5. 'v' → logprob: -9.179232597351074
    6. 'q' → logprob: -9.179232597351074
    7. '_' → logprob: -9.929232597351074
    8. 'uire' → logprob: -9.929232597351074
    9. '_all' → logprob: -10.179232597351074
    10. 'all' → logprob: -11.054232597351074

Token 650: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5786201357841492
    2. '=' → logprob: -0.8286201357841492
    3. '=v' → logprob: -6.203619956970215
    4. '[v' → logprob: -7.453619956970215
    5. '   ' → logprob: -10.828619956970215
    6. ' ' → logprob: -11.328619956970215
    7. 'v' → logprob: -11.703619956970215
    8. ',' → logprob: -12.328619956970215
    9. '＝' → logprob: -12.828619956970215
    10. 'al' → logprob: -13.078619956970215

Token 651: ' req' (ID: 7257)
  Prédit: 'req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.04646869748830795
    2. 'max' → logprob: -3.171468734741211
    3. 'uses' → logprob: -6.296468734741211
    4. ' req' → logprob: -7.171468734741211
    5. 'A' → logprob: -8.421468734741211
    6. 'min' → logprob: -8.671468734741211
    7. ' max' → logprob: -8.921468734741211
    8. 'ans' → logprob: -9.421468734741211
    9. 'I' → logprob: -10.421468734741211
    10. '   ' → logprob: -10.671468734741211

Token 652: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00010819212911883369
    2. '[v' → logprob: -9.250107765197754
    3. '[s' → logprob: -12.000107765197754
    4. 'req' → logprob: -12.625107765197754
    5. 'v' → logprob: -14.125107765197754
    6. '[' → logprob: -14.625107765197754
    7. 'q' → logprob: -15.000107765197754
    8. '_v' → logprob: -15.125107765197754
    9. 'sv' → logprob: -15.250107765197754
    10. '```' → logprob: -15.875107765197754

Token 653: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.2020991056924686e-05
    2. 'v' → logprob: -10.375032424926758
    3. '[' → logprob: -14.625032424926758
    4. '[val' → logprob: -16.375032424926758
    5. '[idx' → logprob: -17.000032424926758
    6. '<v' → logprob: -17.375032424926758
    7. '(v' → logprob: -17.750032424926758
    8. '=v' → logprob: -17.875032424926758
    9. '	v' → logprob: -18.125032424926758
    10. '[V' → logprob: -18.500032424926758

Token 654: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10056086629629135
    2. ']
' → logprob: -2.8505609035491943
    3. '   ' → logprob: -3.8505609035491943
    4. ')' → logprob: -4.350560665130615
    5. ' -' → logprob: -6.225560665130615
    6. ')
' → logprob: -7.225560665130615
    7. '-' → logprob: -7.600560665130615
    8. '+' → logprob: -9.475561141967773
    9. ']+' → logprob: -9.475561141967773
    10. '])' → logprob: -9.600561141967773

Token 655: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.228515163064003
    2. ' if' → logprob: -2.478515148162842
    3. '
' → logprob: -2.728515148162842
    4. 'if' → logprob: -3.853515148162842
    5. '<|end|>' → logprob: -4.978515148162842
    6. ' -' → logprob: -5.103515148162842
    7. '+' → logprob: -5.353515148162842
    8. '    
' → logprob: -5.353515148162842
    9. '-' → logprob: -5.728515148162842
    10. ')' → logprob: -6.103515148162842

Token 656: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.7278531193733215
    2. 'uses' → logprob: -1.1028530597686768
    3. '1' → logprob: -2.7278530597686768
    4. 'uf' → logprob: -3.1028530597686768
    5. 'sum' → logprob: -3.4778530597686768
    6. ' use' → logprob: -4.727853298187256
    7. ' uses' → logprob: -4.852853298187256
    8. '(' → logprob: -5.477853298187256
    9. 'ans' → logprob: -5.602853298187256
    10. 'max' → logprob: -5.727853298187256

Token 657: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.00014942926645744592
    2. '[v' → logprob: -9.250149726867676
    3. 's' → logprob: -10.000149726867676
    4. 'all' → logprob: -12.250149726867676
    5. 'v' → logprob: -13.000149726867676
    6. '_v' → logprob: -15.000149726867676
    7. 'All' → logprob: -15.500149726867676
    8. '[r' → logprob: -16.12514877319336
    9. '[_' → logprob: -16.62514877319336
    10. 'r' → logprob: -17.00014877319336

Token 658: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14436136186122894
    2. '
' → logprob: -2.8943612575531006
    3. ' if' → logprob: -3.1443612575531006
    4. '<|end|>' → logprob: -3.7693612575531006
    5. ')' → logprob: -5.26936149597168
    6. '    
' → logprob: -5.64436149597168
    7. 'if' → logprob: -6.64436149597168
    8. '<|end|>' → logprob: -7.14436149597168
    9. '  
' → logprob: -7.89436149597168
    10. ' 
' → logprob: -8.14436149597168

Token 659: ' uses' (ID: 8844)
  Prédit: 'uses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.1938306987285614
    2. 'req' → logprob: -2.193830728530884
    3. '1' → logprob: -3.568830728530884
    4. 'B' → logprob: -4.693830490112305
    5. 'max' → logprob: -5.443830490112305
    6. '   ' → logprob: -5.693830490112305
    7. 'INF' → logprob: -5.693830490112305
    8. 'sum' → logprob: -5.818830490112305
    9. 'ans' → logprob: -6.068830490112305
    10. 'A' → logprob: -6.318830490112305

Token 660: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9027791495318525e-05
    2. 'v' → logprob: -10.875019073486328
    3. '[' → logprob: -17.125019073486328
    4. '[r' → logprob: -17.750019073486328
    5. '	v' → logprob: -18.500019073486328
    6. '(v' → logprob: -19.500019073486328
    7. '
' → logprob: -20.625019073486328
    8. '[root' → logprob: -21.000019073486328
    9. '[u' → logprob: -21.125019073486328
    10. '_v' → logprob: -21.125019073486328

Token 661: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2356063574552536
    2. ')' → logprob: -1.61060631275177
    3. '   ' → logprob: -5.2356061935424805
    4. '<|end|>' → logprob: -5.8606061935424805
    5. ']
' → logprob: -6.8606061935424805
    6. ')
' → logprob: -8.36060619354248
    7. ')]' → logprob: -8.61060619354248
    8. '<|end|>' → logprob: -8.61060619354248
    9. '
' → logprob: -9.11060619354248
    10. ' ]' → logprob: -9.98560619354248

Token 662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07459186017513275
    2. 'if' → logprob: -2.949591875076294
    3. ' if' → logprob: -4.449591636657715
    4. 'ans' → logprob: -6.324591636657715
    5. 'for' → logprob: -6.449591636657715
    6. 'uf' → logprob: -6.574591636657715
    7. ')' → logprob: -6.824591636657715
    8. ' for' → logprob: -7.199591636657715
    9. '    
' → logprob: -8.324591636657715
    10. 'use' → logprob: -8.324591636657715

Token 663: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08849430084228516
    2. 'ans' → logprob: -2.713494300842285
    3. 'uses' → logprob: -5.338494300842285
    4. 'for' (adapté à ' for') → logprob: -5.588494300842285
    5. 'uf' → logprob: -5.713494300842285
    6. '   ' → logprob: -5.963494300842285
    7. 'while' → logprob: -6.588494300842285
    8. 'use' → logprob: -6.838494300842285
    9. ' if' → logprob: -7.088494300842285
    10. 'print' → logprob: -9.463494300842285

Token 664: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000573763158172369
    2. 'u' → logprob: -8.000574111938477
    3. ' r' → logprob: -9.250574111938477
    4. 'root' → logprob: -9.500574111938477
    5. 'x' → logprob: -11.250574111938477
    6. 'v' → logprob: -11.375574111938477
    7. '_r' → logprob: -11.500574111938477
    8. '   ' → logprob: -12.250574111938477
    9. 'w' → logprob: -12.500574111938477
    10. '_' → logprob: -12.875574111938477

Token 665: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0263361819088459
    2. 'in' → logprob: -3.651336193084717
    3. '   ' → logprob: -11.026335716247559
    4. 's' → logprob: -12.026335716247559
    5. ' ' → logprob: -12.776335716247559
    6. '  ' → logprob: -12.776335716247559
    7. 'n' → logprob: -13.151335716247559
    8. '    ' → logprob: -13.401335716247559
    9. '       ' → logprob: -13.776335716247559
    10. '	in' → logprob: -14.526335716247559

Token 666: ' roots' (ID: 29895)
  Prédit: 'roots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -0.005944086704403162
    2. ' roots' → logprob: -5.13094425201416
    3. 'sorted' → logprob: -11.63094425201416
    4. 'root' → logprob: -12.63094425201416
    5. '   ' → logprob: -14.13094425201416
    6. 'list' → logprob: -14.25594425201416
    7. 'ro' → logprob: -14.75594425201416
    8. 'r' → logprob: -14.75594425201416
    9. ' ' → logprob: -15.25594425201416
    10. ' sorted' → logprob: -15.88094425201416

Token 667: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7068286538124084
    2. ':
' → logprob: -1.4568285942077637
    3. '       ' → logprob: -1.4568285942077637
    4. '   ' → logprob: -3.2068285942077637
    5. '=' → logprob: -9.331829071044922
    6. '):
' → logprob: -9.456829071044922
    7. '     ' → logprob: -10.331829071044922
    8. '):' → logprob: -10.456829071044922
    9. ':
' → logprob: -10.581829071044922
    10. ',' → logprob: -10.831829071044922

Token 668: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6466345191001892
    2. '       ' → logprob: -0.8966345191001892
    3. 'uf' → logprob: -2.771634578704834
    4. ' uf' → logprob: -5.521634578704834
    5. '     ' → logprob: -8.646634101867676
    6. ':' → logprob: -8.771634101867676
    7. '    ' → logprob: -8.771634101867676
    8. ':
' → logprob: -8.771634101867676
    9. 'ufs' → logprob: -9.146634101867676
    10. '  ' → logprob: -9.396634101867676

Token 669: ' req' (ID: 7257)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.10620082169771194
    2. '   ' → logprob: -2.981200933456421
    3. 'uses' → logprob: -3.731200933456421
    4. 'use' → logprob: -4.106200695037842
    5. 'ans' → logprob: -5.356200695037842
    6. 'if' → logprob: -6.356200695037842
    7. 'ufs' → logprob: -6.606200695037842
    8. ' uf' → logprob: -7.356200695037842
    9. '       ' → logprob: -8.231201171875
    10. 'us' → logprob: -8.981201171875

Token 670: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.05565958842635155
    2. ' =' → logprob: -3.055659532546997
    3. 's' → logprob: -5.805659770965576
    4. '=' → logprob: -5.930659770965576
    5. 'v' → logprob: -7.680659770965576
    6. '_' → logprob: -7.930659770965576
    7. 'r' → logprob: -8.930659294128418
    8. ' -=' → logprob: -9.055659294128418
    9. '_r' → logprob: -9.305659294128418
    10. '-=' → logprob: -10.430659294128418

Token 671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4888125956058502
    2. ' =' → logprob: -0.9888125658035278
    3. '-=' → logprob: -4.363812446594238
    4. ' -=' → logprob: -6.988812446594238
    5. '=max' → logprob: -7.363812446594238
    6. '+=' → logprob: -8.238812446594238
    7. '-' → logprob: -10.238812446594238
    8. '   ' → logprob: -11.488812446594238
    9. ' +=' → logprob: -11.488812446594238
    10. ' ' → logprob: -12.113812446594238

Token 672: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12698522210121155
    2. 'min' → logprob: -2.1269853115081787
    3. ' max' → logprob: -10.126985549926758
    4. 'req' → logprob: -11.501985549926758
    5. ' min' → logprob: -12.501985549926758
    6. '   ' → logprob: -13.001985549926758
    7. '	max' → logprob: -15.501985549926758
    8. '
' → logprob: -15.626985549926758
    9. '(max' → logprob: -16.001985549926758
    10. 'ma' → logprob: -16.126985549926758

Token 673: '(req' (ID: 12192)
  Prédit: '(req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(req' → logprob: -1.0087516784551553e-05
    2. '(ans' → logprob: -12.12501049041748
    3. '(' → logprob: -12.50001049041748
    4. '(
' → logprob: -14.50001049041748
    5. 'req' → logprob: -15.25001049041748
    6. '(re' → logprob: -17.000009536743164
    7. '(r' → logprob: -17.500009536743164
    8. '=req' → logprob: -18.000009536743164
    9. '(min' → logprob: -18.500009536743164
    10. '(require' → logprob: -18.875009536743164

Token 674: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.22953473031520844
    2. '(req' → logprob: -1.6045347452163696
    3. 'v' → logprob: -5.60453462600708
    4. '(' → logprob: -8.604535102844238
    5. '(r' → logprob: -8.729535102844238
    6. 'req' → logprob: -10.979535102844238
    7. '(
' → logprob: -11.229535102844238
    8. 'r' → logprob: -11.729535102844238
    9. '_r' → logprob: -11.854535102844238
    10. '=req' → logprob: -11.979535102844238

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029470553272403777
    2. '(ans' → logprob: -9.50029468536377
    3. '   ' → logprob: -9.87529468536377
    4. 'ans' → logprob: -10.25029468536377
    5. 'req' → logprob: -10.37529468536377
    6. ' ,' → logprob: -10.37529468536377
    7. '(req' → logprob: -10.37529468536377
    8. ' ans' → logprob: -10.50029468536377
    9. '       ' → logprob: -13.25029468536377
    10. ',
' → logprob: -13.37529468536377

Token 676: ' max' (ID: 2999)
  Prédit: 'req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.1331200748682022
    2. 'ans' → logprob: -2.133120059967041
    3. ' req' → logprob: -5.508120059967041
    4. '   ' → logprob: -7.133120059967041
    5. ' ans' → logprob: -7.508120059967041
    6. '           ' → logprob: -8.6331205368042
    7. '       ' → logprob: -8.7581205368042
    8. '               ' → logprob: -9.7581205368042
    9. ' ' → logprob: -9.8831205368042
    10. 'uses' → logprob: -10.1331205368042

Token 677: '(req' (ID: 12192)
  Prédit: '(req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(req' → logprob: -0.008172920905053616
    2. '(ans' → logprob: -4.883172988891602
    3. '(' → logprob: -7.633172988891602
    4. 'req' → logprob: -10.508172988891602
    5. '(A' → logprob: -11.508172988891602
    6. 'ans' → logprob: -11.633172988891602
    7. '(re' → logprob: -12.008172988891602
    8. '(B' → logprob: -12.883172988891602
    9. '(
' → logprob: -13.008172988891602
    10. '((' → logprob: -13.133172988891602

Token 678: 's' (ID: 82)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.6622335910797119
    2. '(req' → logprob: -1.412233591079712
    3. 'req' → logprob: -2.287233591079712
    4. 's' → logprob: -2.537233591079712
    5. 'v' → logprob: -3.912233591079712
    6. '(v' → logprob: -4.412233352661133
    7. '_r' → logprob: -4.787233352661133
    8. '(r' → logprob: -5.037233352661133
    9. 'r' → logprob: -5.537233352661133
    10. '(re' → logprob: -6.287233352661133

Token 679: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.008114629425108433
    2. '[v' → logprob: -5.008114814758301
    3. 'r' → logprob: -6.883114814758301
    4. 'v' → logprob: -8.2581148147583
    5. '[' → logprob: -9.8831148147583
    6. '[
' → logprob: -10.5081148147583
    7. '[u' → logprob: -11.6331148147583
    8. '(r' → logprob: -12.2581148147583
    9. '   ' → logprob: -12.6331148147583
    10. ')' → logprob: -12.6331148147583

Token 680: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09208346903324127
    2. '],' → logprob: -2.46708345413208
    3. ' ,' → logprob: -6.84208345413208
    4. '   ' → logprob: -7.34208345413208
    5. ']' → logprob: -7.71708345413208
    6. ',r' → logprob: -8.842083930969238
    7. ',
' → logprob: -8.967083930969238
    8. '),' → logprob: -9.092083930969238
    9. ' -' → logprob: -9.092083930969238
    10. '+' → logprob: -9.217083930969238

Token 681: ' req' (ID: 7257)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0913444310426712
    2. 'uses' → logprob: -3.2163443565368652
    3. 'req' → logprob: -3.4663443565368652
    4. ' use' → logprob: -4.716344356536865
    5. '   ' → logprob: -5.716344356536865
    6. ' uses' → logprob: -7.466344356536865
    7. ' req' → logprob: -7.716344356536865
    8. '           ' → logprob: -8.091344833374023
    9. '               ' → logprob: -8.216344833374023
    10. '       ' → logprob: -8.216344833374023

Token 682: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.055733777582645416
    2. 'uses' → logprob: -4.430733680725098
    3. '_v' → logprob: -4.430733680725098
    4. '_all' → logprob: -4.805733680725098
    5. '[r' → logprob: -5.180733680725098
    6. 'v' → logprob: -5.680733680725098
    7. '[v' → logprob: -5.680733680725098
    8. 'r' → logprob: -5.805733680725098
    9. 'all' → logprob: -6.180733680725098
    10. ')' → logprob: -6.930733680725098

Token 683: '[v' (ID: 36561)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.05709223821759224
    2. '[v' → logprob: -2.9320921897888184
    3. 'r' → logprob: -6.682092189788818
    4. 'v' → logprob: -7.307092189788818
    5. '[' → logprob: -9.307092666625977
    6. '[u' → logprob: -9.557092666625977
    7. ')' → logprob: -10.682092666625977
    8. '[
' → logprob: -10.807092666625977
    9. '   ' → logprob: -11.057092666625977
    10. '
' → logprob: -11.182092666625977

Token 684: ']' (ID: 60)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.27931445837020874
    2. ' -' → logprob: -2.2793145179748535
    3. '))
' → logprob: -2.9043145179748535
    4. ' +' → logprob: -3.6543145179748535
    5. '+' → logprob: -3.9043145179748535
    6. ')' → logprob: -4.0293145179748535
    7. '-' → logprob: -4.6543145179748535
    8. '   ' → logprob: -5.1543145179748535
    9. ']))' → logprob: -6.1543145179748535
    10. ' ))' → logprob: -6.2793145179748535

Token 685: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6324450373649597
    2. '))' → logprob: -1.5074450969696045
    3. '-' → logprob: -2.2574450969696045
    4. '))
' → logprob: -2.2574450969696045
    5. '+' → logprob: -4.007444858551025
    6. ' +' → logprob: -4.882444858551025
    7. ')' → logprob: -5.257444858551025
    8. '-use' → logprob: -6.132444858551025
    9. '   ' → logprob: -6.257444858551025
    10. ' ))
' → logprob: -6.507444858551025

Token 686: ' uses' (ID: 8844)
  Prédit: 'uses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.045044731348752975
    2. 'use' → logprob: -3.7950446605682373
    3. '(' → logprob: -4.045044898986816
    4. ' uses' → logprob: -6.170044898986816
    5. '(use' → logprob: -6.795044898986816
    6. '   ' → logprob: -8.295044898986816
    7. ' (' → logprob: -8.295044898986816
    8. ' use' → logprob: -9.295044898986816
    9. 'us' → logprob: -10.795044898986816
    10. ' ' → logprob: -10.795044898986816

Token 687: '[v' (ID: 36561)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0030446199234575033
    2. 'r' → logprob: -6.003044605255127
    3. '[v' → logprob: -8.128045082092285
    4. '[u' → logprob: -8.503045082092285
    5. 'v' → logprob: -10.128045082092285
    6. '[' → logprob: -10.878045082092285
    7. 'u' → logprob: -11.878045082092285
    8. '	r' → logprob: -14.128045082092285
    9. '   ' → logprob: -14.253045082092285
    10. '[root' → logprob: -14.940545082092285

Token 688: '])' (ID: 4636)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.40249496698379517
    2. '))
' → logprob: -1.9024949073791504
    3. '+' → logprob: -2.7774949073791504
    4. '[r' → logprob: -3.1524949073791504
    5. ' +' → logprob: -3.4024949073791504
    6. ']))' → logprob: -3.5274949073791504
    7. '+r' → logprob: -5.65249490737915
    8. ']))
' → logprob: -5.65249490737915
    9. '   ' → logprob: -6.02749490737915
    10. ')))' → logprob: -7.02749490737915

Token 689: ' +' (ID: 659)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.42281574010849
    2. ')' → logprob: -1.1728157997131348
    3. ' -' → logprob: -3.4228157997131348
    4. '-' → logprob: -6.922815799713135
    5. ' )
' → logprob: -7.297815799713135
    6. '   ' → logprob: -8.047815322875977
    7. ' )' → logprob: -8.672815322875977
    8. '+' → logprob: -8.672815322875977
    9. '-use' → logprob: -8.672815322875977
    10. ' +' → logprob: -9.422815322875977

Token 690: ' use' (ID: 1199)
  Prédit: 'uses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.045728445053100586
    2. ' uses' → logprob: -3.6707284450531006
    3. 'use' → logprob: -4.04572868347168
    4. ' use' → logprob: -6.92072868347168
    5. '(' → logprob: -8.54572868347168
    6. '   ' → logprob: -8.92072868347168
    7. ' (' → logprob: -9.29572868347168
    8. ' ' → logprob: -9.60822868347168
    9. 'uf' → logprob: -10.04572868347168
    10. '(use' → logprob: -10.29572868347168

Token 691: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.0008752549765631557
    2. 's' → logprob: -7.375875473022461
    3. '[r' → logprob: -8.500875473022461
    4. 'all' → logprob: -10.500875473022461
    5. 'All' → logprob: -12.000875473022461
    6. 'es' → logprob: -12.500875473022461
    7. ')' → logprob: -13.750875473022461
    8. '
' → logprob: -13.750875473022461
    9. ' ' → logprob: -14.125875473022461
    10. 'r' → logprob: -14.125875473022461

Token 692: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004452312830835581
    2. '-' → logprob: -5.504452228546143
    3. ')' → logprob: -8.5044527053833
    4. '[r' → logprob: -8.8794527053833
    5. '   ' → logprob: -11.5044527053833
    6. '-r' → logprob: -11.7544527053833
    7. ' ' → logprob: -12.3794527053833
    8. ' +' → logprob: -13.2544527053833
    9. '[' → logprob: -13.6294527053833
    10. ',' → logprob: -13.7544527053833

Token 693: ' uses' (ID: 8844)
  Prédit: 'uses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.0036729946732521057
    2. ' uses' → logprob: -5.628673076629639
    3. '   ' → logprob: -10.25367259979248
    4. ' ' → logprob: -11.62867259979248
    5. 'us' → logprob: -12.25367259979248
    6. 'Uses' → logprob: -12.50367259979248
    7. 'ues' → logprob: -13.00367259979248
    8. 'ures' → logprob: -13.25367259979248
    9. 'use' → logprob: -13.37867259979248
    10. 'users' → logprob: -14.00367259979248

Token 694: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0037554248701781034
    2. '[v' → logprob: -5.628755569458008
    3. 'r' → logprob: -8.878755569458008
    4. 'v' → logprob: -11.378755569458008
    5. '[' → logprob: -12.878755569458008
    6. '[u' → logprob: -14.878755569458008
    7. '	r' → logprob: -15.378755569458008
    8. ' [' → logprob: -15.503755569458008
    9. '(r' → logprob: -15.628755569458008
    10. '   ' → logprob: -15.628755569458008

Token 695: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007245603017508984
    2. ')
' → logprob: -5.1322455406188965
    3. '))' → logprob: -7.3822455406188965
    4. '   ' → logprob: -7.5072455406188965
    5. '       ' → logprob: -9.882246017456055
    6. ' )' → logprob: -10.257246017456055
    7. '))
' → logprob: -10.757246017456055
    8. ')')
' → logprob: -11.882246017456055
    9. ')`' → logprob: -11.882246017456055
    10. ')`
' → logprob: -12.507246017456055

Token 696: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10266134142875671
    2. 'for' → logprob: -2.977661371231079
    3. ' for' → logprob: -3.352661371231079
    4. 'uf' → logprob: -4.6026611328125
    5. ' uf' → logprob: -6.8526611328125
    6. ')' → logprob: -8.6026611328125
    7. '    
' → logprob: -9.2276611328125
    8. '    ' → logprob: -10.2276611328125
    9. '  ' → logprob: -10.2276611328125
    10. '
' → logprob: -10.6026611328125

Token 697: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21462802588939667
    2. '   ' → logprob: -2.589627981185913
    3. 'uf' → logprob: -2.714627981185913
    4. ' for' → logprob: -3.089627981185913
    5. 'uses' → logprob: -5.589628219604492
    6. ' uf' → logprob: -6.589628219604492
    7. 'ans' → logprob: -7.214628219604492
    8. 'if' → logprob: -8.714628219604492
    9. ' uses' → logprob: -9.464628219604492
    10. 'ufs' → logprob: -9.964628219604492

Token 698: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02361532486975193
    2. 'u' → logprob: -3.8986153602600098
    3. ' r' → logprob: -6.14861536026001
    4. 'v' → logprob: -8.648614883422852
    5. 'root' → logprob: -8.648614883422852
    6. '_r' → logprob: -8.898614883422852
    7. 'x' → logprob: -9.273614883422852
    8. ' u' → logprob: -9.398614883422852
    9. 'i' → logprob: -9.523614883422852
    10. 'w' → logprob: -10.523614883422852

Token 699: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014168446883559227
    2. 'in' → logprob: -4.2641682624816895
    3. ' ' → logprob: -13.389168739318848
    4. '	in' → logprob: -13.764168739318848
    5. 's' → logprob: -14.139168739318848
    6. '   ' → logprob: -14.264168739318848
    7. '  ' → logprob: -15.639168739318848
    8. '_in' → logprob: -15.639168739318848
    9. '    ' → logprob: -16.13916778564453
    10. 'In' → logprob: -16.38916778564453

Token 700: ' roots' (ID: 29895)
  Prédit: 'roots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -0.00018196819291915745
    2. ' roots' → logprob: -8.625182151794434
    3. 'root' → logprob: -13.500182151794434
    4. 'sorted' → logprob: -15.250182151794434
    5. '[' → logprob: -15.375182151794434
    6. 'ro' → logprob: -15.750182151794434
    7. 'r' → logprob: -16.375181198120117
    8. '{' → logprob: -16.375181198120117
    9. '(' → logprob: -16.875181198120117
    10. '   ' → logprob: -17.000181198120117

Token 701: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5859890580177307
    2. ':
' → logprob: -0.8359890580177307
    3. '       ' → logprob: -4.835988998413086
    4. '   ' → logprob: -6.210988998413086
    5. '):
' → logprob: -10.335988998413086
    6. '):' → logprob: -12.210988998413086
    7. ':
' → logprob: -12.460988998413086
    8. ',' → logprob: -12.710988998413086
    9. '=' → logprob: -12.835988998413086
    10. ':

' → logprob: -13.710988998413086

Token 702: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31483960151672363
    2. '   ' → logprob: -1.5648396015167236
    3. 'uf' → logprob: -2.8148396015167236
    4. ' uf' → logprob: -7.4398393630981445
    5. 'ufs' → logprob: -9.189839363098145
    6. '     ' → logprob: -10.064839363098145
    7. 'ut' → logprob: -10.189839363098145
    8. '           ' → logprob: -10.564839363098145
    9. 'ufi' → logprob: -10.689839363098145
    10. 'uft' → logprob: -10.814839363098145

Token 703: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.006497704423964024
    2. '   ' → logprob: -5.881497859954834
    3. 'uses' → logprob: -6.381497859954834
    4. 'ans' → logprob: -6.631497859954834
    5. ' uf' → logprob: -8.506497383117676
    6. 'ufs' → logprob: -8.506497383117676
    7. 'req' → logprob: -8.881497383117676
    8. 'if' → logprob: -10.381497383117676
    9. 'use' → logprob: -11.131497383117676
    10. '       ' → logprob: -11.256497383117676

Token 704: '.un' (ID: 11508)
  Prédit: '.un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.un' → logprob: -6.873571692267433e-05
    2. 'un' → logprob: -9.750068664550781
    3. '.u' → logprob: -12.250068664550781
    4. '.' → logprob: -12.750068664550781
    5. ' .' → logprob: -14.000068664550781
    6. '   ' → logprob: -14.500068664550781
    7. '.union' → logprob: -15.125068664550781
    8. 'u' → logprob: -15.750068664550781
    9. '```' → logprob: -15.750068664550781
    10. ').' → logprob: -16.00006866455078

Token 705: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -1.2471589798224159e-05
    2. 'it' → logprob: -11.375012397766113
    3. '```' → logprob: -15.125012397766113
    4. 'ion' → logprob: -15.375012397766113
    5. 'ate' → logprob: -15.750012397766113
    6. ' ite' → logprob: -15.875012397766113
    7. '
' → logprob: -17.00001335144043
    8. '(' → logprob: -17.50001335144043
    9. 'ites' → logprob: -17.62501335144043
    10. '   ' → logprob: -17.75001335144043

Token 706: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5763128995895386
    2. '(r' → logprob: -0.8263128995895386
    3. '(' → logprob: -8.701313018798828
    4. 'r' → logprob: -9.076313018798828
    5. 'v' → logprob: -9.326313018798828
    6. '(u' → logprob: -13.576313018798828
    7. '(
' → logprob: -13.826313018798828
    8. '(rv' → logprob: -15.076313018798828
    9. ' (' → logprob: -15.201313018798828
    10. '((' → logprob: -16.076313018798828

Token 707: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006709783338010311
    2. 'r' → logprob: -7.750670909881592
    3. ',r' → logprob: -8.37567138671875
    4. ' ,' → logprob: -12.00067138671875
    5. ' r' → logprob: -12.87567138671875
    6. ',
' → logprob: -13.75067138671875
    7. '[r' → logprob: -17.12567138671875
    8. '   ' → logprob: -17.12567138671875
    9. '
' → logprob: -17.50067138671875
    10. '(r' → logprob: -17.62567138671875

Token 708: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.7610454708337784e-05
    2. ' r' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.87502670288086
    4. '	r' → logprob: -19.00002670288086
    5. '_r' → logprob: -21.12502670288086
    6. '       ' → logprob: -21.37502670288086
    7. '[r' → logprob: -21.50002670288086
    8. ' ' → logprob: -21.62502670288086
    9. '
' → logprob: -21.75002670288086
    10. ')' → logprob: -21.75002670288086

Token 709: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007104054093360901
    2. ')
' → logprob: -7.250710487365723
    3. ')

' → logprob: -15.875710487365723
    4. '   ' → logprob: -16.750709533691406
    5. ')
' → logprob: -17.000709533691406
    6. '       ' → logprob: -17.125709533691406
    7. ' )' → logprob: -17.250709533691406
    8. '<|end|>' → logprob: -17.375709533691406
    9. ')return' → logprob: -17.625709533691406
    10. '),' → logprob: -18.000709533691406

Token 710: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04299531131982803
    2. 'ans' → logprob: -3.6679952144622803
    3. 'uses' → logprob: -4.167995452880859
    4. '
' → logprob: -7.792995452880859
    5. ' uses' → logprob: -7.917995452880859
    6. '    
' → logprob: -9.54299545288086
    7. 'answers' → logprob: -9.91799545288086
    8. 'use' → logprob: -10.29299545288086
    9. '```' → logprob: -10.54299545288086
    10. 'for' → logprob: -11.04299545288086

Token 711: ' req' (ID: 7257)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05081433430314064
    2. 'root' → logprob: -3.175814390182495
    3. 'print' → logprob: -5.550814151763916
    4. 'if' → logprob: -6.925814151763916
    5. 'uses' → logprob: -7.050814151763916
    6. 'parent' → logprob: -7.675814151763916
    7. 'rep' → logprob: -7.800814151763916
    8. 'r' → logprob: -8.800814628601074
    9. 'roots' → logprob: -8.925814628601074
    10. 'use' → logprob: -9.050814628601074

Token 712: 's' (ID: 82)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.2357897162437439
    2. 's' → logprob: -2.1107897758483887
    3. '[v' → logprob: -2.4857897758483887
    4. 'v' → logprob: -5.610789775848389
    5. '[' → logprob: -6.985789775848389
    6. '[s' → logprob: -7.360789775848389
    7. ' =' → logprob: -8.36078929901123
    8. '_' → logprob: -9.73578929901123
    9. '_[' → logprob: -10.98578929901123
    10. '_s' → logprob: -10.98578929901123

Token 713: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021730316802859306
    2. '=' → logprob: -4.146730422973633
    3. ' =' → logprob: -5.771730422973633
    4. '[v' → logprob: -6.021730422973633
    5. '=[' → logprob: -10.021730422973633
    6. ',' → logprob: -10.396730422973633
    7. '[u' → logprob: -10.646730422973633
    8. '[root' → logprob: -11.021730422973633
    9. 'v' → logprob: -11.896730422973633
    10. '[val' → logprob: -12.271730422973633

Token 714: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.030161181464791298
    2. '[' → logprob: -3.530161142349243
    3. 'v' → logprob: -8.155160903930664
    4. '[v' → logprob: -9.405160903930664
    5. 'ufs' → logprob: -11.030160903930664
    6. '   ' → logprob: -11.280160903930664
    7. 'vf' → logprob: -13.155160903930664
    8. ' uf' → logprob: -13.280160903930664
    9. '[u' → logprob: -13.530160903930664
    10. 'uv' → logprob: -13.780160903930664

Token 715: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -7.707997428951785e-05
    2. 'root' → logprob: -9.625077247619629
    3. '[root' → logprob: -11.625077247619629
    4. '[v' → logprob: -13.875077247619629
    5. '.v' → logprob: -15.250077247619629
    6. ' root' → logprob: -15.375077247619629
    7. '_root' → logprob: -15.625077247619629
    8. '(root' → logprob: -16.125076293945312
    9. '/root' → logprob: -16.250076293945312
    10. '.size' → logprob: -16.500076293945312

Token 716: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.975612187583465e-05
    2. '(' → logprob: -11.125029563903809
    3. 'v' → logprob: -11.250029563903809
    4. ']' → logprob: -14.375029563903809
    5. '[v' → logprob: -14.375029563903809
    6. ' (' → logprob: -14.750029563903809
    7. '](' → logprob: -15.375029563903809
    8. '(
' → logprob: -16.750030517578125
    9. '	v' → logprob: -18.000030517578125
    10. ',v' → logprob: -18.250030517578125

Token 717: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.47640278935432434
    2. ']' → logprob: -0.976402759552002
    3. ')' → logprob: -6.226402759552002
    4. '])' → logprob: -8.10140323638916
    5. ']=' → logprob: -11.10140323638916
    6. '()]' → logprob: -11.97640323638916
    7. ' ]' → logprob: -11.97640323638916
    8. ']
' → logprob: -12.10140323638916
    9. '])]' → logprob: -12.97640323638916
    10. ' )' → logprob: -13.22640323638916

Token 718: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614808320999146
    2. ' =' → logprob: -4.758615016937256
    3. '=min' → logprob: -15.258614540100098
    4. '.=' → logprob: -18.758615493774414
    5. '=max' → logprob: -19.008615493774414
    6. '=
' → logprob: -19.133615493774414
    7. '=

' → logprob: -19.133615493774414
    8. '＝' → logprob: -19.383615493774414
    9. '<=' → logprob: -19.758615493774414
    10. ',' → logprob: -20.258615493774414

Token 719: ' req' (ID: 7257)
  Prédit: 'req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.0001907855912577361
    2. ' req' → logprob: -8.625190734863281
    3. 'min' → logprob: -11.500190734863281
    4. '   ' → logprob: -15.000190734863281
    5. 'max' → logprob: -15.125190734863281
    6. '	req' → logprob: -16.37519073486328
    7. '=req' → logprob: -16.75019073486328
    8. ' min' → logprob: -17.25019073486328
    9. 'r' → logprob: -17.37519073486328
    10. 'require' → logprob: -17.37519073486328

Token 720: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.004524350166320801
    2. 'v' → logprob: -5.754524230957031
    3. 's' → logprob: -6.629524230957031
    4. '[v' → logprob: -11.879524230957031
    5. 'q' → logprob: -12.129524230957031
    6. 'r' → logprob: -12.254524230957031
    7. 'vq' → logprob: -13.504524230957031
    8. 'sv' → logprob: -13.754524230957031
    9. 'vs' → logprob: -13.879524230957031
    10. '[' → logprob: -14.004524230957031

Token 721: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009777575731277466
    2. 'print' → logprob: -5.009777545928955
    3. 'uses' → logprob: -5.884777545928955
    4. ' uses' → logprob: -8.884778022766113
    5. '<|end|>' → logprob: -10.884778022766113
    6. ')' → logprob: -11.009778022766113
    7. '```' → logprob: -11.134778022766113
    8. 'ans' → logprob: -11.134778022766113
    9. '
' → logprob: -11.509778022766113
    10. '    
' → logprob: -11.759778022766113

Token 722: '   ' (ID: 271)
  Prédit: 'uses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.06863704323768616
    2. 'print' → logprob: -2.8186371326446533
    3. '   ' → logprob: -5.443636894226074
    4. ' uses' → logprob: -6.193636894226074
    5. 'answers' → logprob: -9.818636894226074
    6. 'puts' → logprob: -10.068636894226074
    7. 'for' → logprob: -10.318636894226074
    8. ' print' → logprob: -10.318636894226074
    9. 'use' → logprob: -11.193636894226074
    10. 'prints' → logprob: -11.193636894226074

Token 723: ' uses' (ID: 8844)
  Prédit: 'uses'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' (adapté à ' uses') → logprob: -0.000433291686931625
    2. '   ' → logprob: -7.875433444976807
    3. 'print' → logprob: -10.125432968139648
    4. 'ans' → logprob: -12.000432968139648
    5. ' uses' → logprob: -12.625432968139648
    6. 'puts' → logprob: -13.625432968139648
    7. 'answers' → logprob: -14.125432968139648
    8. 'for' → logprob: -15.250432968139648
    9. 'prints' → logprob: -15.375432968139648
    10. 'if' → logprob: -15.500432968139648

Token 724: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[u' → logprob: -16.125
    3. '[v' → logprob: -16.25
    4. ' [' → logprob: -16.5
    5. '
' → logprob: -16.625
    6. '[
' → logprob: -17.25
    7. '   ' → logprob: -17.875
    8. '[root' → logprob: -19.375
    9. '```' → logprob: -19.5
    10. '	' → logprob: -19.5

Token 725: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.018200045451521873
    2. '[' → logprob: -4.018199920654297
    3. ' uf' → logprob: -10.018199920654297
    4. '   ' → logprob: -12.393199920654297
    5. '  ' → logprob: -14.643199920654297
    6. 'ufs' → logprob: -15.518199920654297
    7. ' ' → logprob: -15.643199920654297
    8. '[u' → logprob: -15.768199920654297
    9. '.uf' → logprob: -16.143199920654297
    10. ' [' → logprob: -16.393199920654297

Token 726: '.root' (ID: 25375)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008091802708804607
    2. '[root' → logprob: -5.008091926574707
    3. '[v' → logprob: -7.133091926574707
    4. 'root' → logprob: -7.508091926574707
    5. '[u' → logprob: -10.883091926574707
    6. 'uf' → logprob: -13.008091926574707
    7. '[r' → logprob: -13.258091926574707
    8. 'v' → logprob: -13.508091926574707
    9. '[
' → logprob: -14.008091926574707
    10. '[self' → logprob: -14.633091926574707

Token 727: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -11.875007629394531
    3. 'v' → logprob: -15.125007629394531
    4. '[v' → logprob: -15.625007629394531
    5. ' (' → logprob: -16.50000762939453
    6. '   ' → logprob: -17.75000762939453
    7. ']' → logprob: -19.25000762939453
    8. ')' → logprob: -19.37500762939453
    9. '(
' → logprob: -19.37500762939453
    10. '[' → logprob: -19.87500762939453

Token 728: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015276329941116273
    2. ')]' → logprob: -9.375152587890625
    3. ')' → logprob: -9.875152587890625
    4. ']=' → logprob: -11.250152587890625
    5. ' ]' → logprob: -13.500152587890625
    6. ']
' → logprob: -14.250152587890625
    7. '   ' → logprob: -14.500152587890625
    8. '])' → logprob: -14.625152587890625
    9. ']+=' → logprob: -15.375152587890625
    10. '`]' → logprob: -16.000152587890625

Token 729: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0016241183038800955
    2. ' =' → logprob: -7.00162410736084
    3. '+=' → logprob: -7.25162410736084
    4. ' +=' → logprob: -12.75162410736084
    5. '-=' → logprob: -14.75162410736084
    6. '   ' → logprob: -17.376625061035156
    7. '.=' → logprob: -18.376625061035156
    8. ' ' → logprob: -18.501625061035156
    9. ')' → logprob: -18.751625061035156
    10. '*=' → logprob: -19.126625061035156

Token 730: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -3.8889261304575484e-06
    2. ' use' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.375003814697266
    4. 'us' → logprob: -19.375003814697266
    5. '	use' → logprob: -19.500003814697266
    6. ' ' → logprob: -20.125003814697266
    7. '(use' → logprob: -20.875003814697266
    8. 'user' → logprob: -21.000003814697266
    9. '  ' → logprob: -21.250003814697266
    10. 'u' → logprob: -21.375003814697266

Token 731: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.1994775377388578e-05
    2. 'all' → logprob: -11.375012397766113
    3. 'All' → logprob: -15.125012397766113
    4. '_' → logprob: -16.375011444091797
    5. ' all' → logprob: -18.625011444091797
    6. '__' → logprob: -18.750011444091797
    7. '_ALL' → logprob: -18.875011444091797
    8. 's' → logprob: -18.875011444091797
    9. '_al' → logprob: -19.250011444091797
    10. '_All' → logprob: -19.375011444091797

Token 732: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4294058382511139
    2. '<|end|>' → logprob: -1.5544058084487915
    3. 'for' → logprob: -3.304405927658081
    4. '   ' → logprob: -3.304405927658081
    5. ')' → logprob: -3.429405927658081
    6. 'if' → logprob: -4.304405689239502
    7. 'ans' → logprob: -4.804405689239502
    8. '```' → logprob: -6.179405689239502
    9. '[' → logprob: -6.304405689239502
    10. '
' → logprob: -7.054405689239502

Token 733: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03944987431168556
    2. 'for' → logprob: -3.28944993019104
    3. 'ans' → logprob: -7.664449691772461
    4. '#' → logprob: -8.539449691772461
    5. 'if' → logprob: -8.914449691772461
    6. '```' → logprob: -8.914449691772461
    7. ')' → logprob: -9.039449691772461
    8. '<|end|>' → logprob: -9.164449691772461
    9. 'pr' → logprob: -10.289449691772461
    10. 'answer' → logprob: -10.289449691772461

Token 734: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42447879910469055
    2. '[v' → logprob: -1.4244787693023682
    3. '<|end|>' → logprob: -2.299478769302368
    4. ')' → logprob: -6.424479007720947
    5. ']' → logprob: -7.174479007720947
    6. '[
' → logprob: -7.299479007720947
    7. '[:]' → logprob: -7.799479007720947
    8. '\[' → logprob: -8.424478530883789
    9. '[-' → logprob: -8.549478530883789
    10. ',' → logprob: -8.924478530883789

Token 735: ' req' (ID: 7257)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5423098206520081
    2. 'req' → logprob: -0.9173098206520081
    3. 'list' → logprob: -5.167309761047363
    4. '[min' → logprob: -5.292309761047363
    5. 'ans' → logprob: -6.292309761047363
    6. '[list' → logprob: -6.792309761047363
    7. 'sorted' → logprob: -7.042309761047363
    8. ' [' → logprob: -7.667309761047363
    9. '["' → logprob: -7.667309761047363
    10. '[]
' → logprob: -8.167309761047363

Token 736: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07469961047172546
    2. '[' → logprob: -2.699699640274048
    3. '[:' → logprob: -6.199699401855469
    4. '[:]' → logprob: -6.824699401855469
    5. 'q' → logprob: -7.324699401855469
    6. '[:-' → logprob: -8.449699401855469
    7. 'qs' → logprob: -8.824699401855469
    8. '[-' → logprob: -9.074699401855469
    9. '[::-' → logprob: -9.449699401855469
    10. 'req' → logprob: -9.574699401855469

Token 737: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 738: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.054048363119363785
    2. ':]' → logprob: -3.8040482997894287
    3. ']' → logprob: -4.429048538208008
    4. ':' → logprob: -4.804048538208008
    5. '0' → logprob: -5.554048538208008
    6. '::-' → logprob: -6.554048538208008
    7. '::' → logprob: -6.804048538208008
    8. ')' → logprob: -7.429048538208008
    9. '.uf' → logprob: -7.429048538208008
    10. '[:]' → logprob: -8.179048538208008

Token 739: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -7.052377623040229e-05
    2. 'root' → logprob: -9.625070571899414
    3. '.' → logprob: -12.750070571899414
    4. '[root' → logprob: -15.000070571899414
    5. '_root' → logprob: -15.125070571899414
    6. '.ro' → logprob: -15.500070571899414
    7. ' .' → logprob: -15.625070571899414
    8. '.
' → logprob: -15.875070571899414
    9. '._' → logprob: -16.125070571899414
    10. '/root' → logprob: -16.375070571899414

Token 740: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08384284377098083
    2. '(' → logprob: -2.5838427543640137
    3. '(v' → logprob: -5.333842754364014
    4. '(N' → logprob: -10.208843231201172
    5. '(x' → logprob: -11.208843231201172
    6. '(a' → logprob: -11.333843231201172
    7. '0' → logprob: -11.458843231201172
    8. '(_)' → logprob: -11.958843231201172
    9. '(ans' → logprob: -12.083843231201172
    10. '(k' → logprob: -12.333843231201172

Token 741: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.641128659248352
    2. '(' → logprob: -0.891128659248352
    3. '(i' → logprob: -2.8911285400390625
    4. '(v' → logprob: -5.7661285400390625
    5. 'i' → logprob: -6.0161285400390625
    6. '(N' → logprob: -6.8911285400390625
    7. 'v' → logprob: -7.6411285400390625
    8. ')' → logprob: -8.516128540039062
    9. '(idx' → logprob: -8.891128540039062
    10. '(x' → logprob: -10.516128540039062

Token 742: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021615397185087204
    2. ')]' → logprob: -3.896615505218506
    3. ']
' → logprob: -7.396615505218506
    4. '])' → logprob: -8.146615028381348
    5. '()]' → logprob: -9.396615028381348
    6. '])]' → logprob: -10.146615028381348
    7. ' ]' → logprob: -10.646615028381348
    8. ']]' → logprob: -11.271615028381348
    9. ')' → logprob: -12.771615028381348
    10. '}]' → logprob: -13.271615028381348

Token 743: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.033809252083301544
    2. '
' → logprob: -3.408809185028076
    3. ' print' → logprob: -9.533809661865234
    4. '\n' → logprob: -10.158809661865234
    5. '<|end|>' → logprob: -10.908809661865234
    6. '
' → logprob: -11.283809661865234
    7. '' → logprob: -12.408809661865234
    8. ')' → logprob: -12.783809661865234
    9. ' 
' → logprob: -12.783809661865234
    10. 'if' → logprob: -12.783809661865234

Token 744: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0002627662615850568
    2. '(' → logprob: -8.250263214111328
    3. 'ans' → logprob: -14.250263214111328
    4. '(
' → logprob: -14.500263214111328
    5. ' (' → logprob: -16.000263214111328
    6. '(answer' → logprob: -16.750263214111328
    7. '((' → logprob: -16.875263214111328
    8. '(abs' → logprob: -17.000263214111328
    9. '(an' → logprob: -17.125263214111328
    10. '()' → logprob: -17.125263214111328

Token 745: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.500001907348633
    3. '+' → logprob: -16.125001907348633
    4. ')
' → logprob: -16.875001907348633
    5. '))' → logprob: -17.750001907348633
    6. '[' → logprob: -18.125001907348633
    7. '())' → logprob: -18.500001907348633
    8. '()' → logprob: -19.000001907348633
    9. ')`' → logprob: -19.000001907348633
    10. '*' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 743
Tokens correctement prédits (1ère position, stricte): 322
Tokens correctement prédits (1ère position, avec adaptation): 360
Tokens correctement prédits (top 10): 652
Précision stricte (1ère position): 43.34%
Précision adaptée (1ère position): 48.45%
Précision (top 10): 87.75%
================================================================================
