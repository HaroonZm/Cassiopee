================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
li = list(map(int, input().split()))
cnt = n - 2
ans = 0
i = 0
while i < cnt:
    a1 = li[i]
    a2 = li[i + 1]
    a3 = li[i + 2]
    if (a1 < a2) & (a2 < a3):
        ans += 1
    if (a3 < a2) & (a2 < a1):
        ans += 1
    i += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005386164411902428
    2. '```' → logprob: -8.50053882598877
    3. ''' → logprob: -8.62553882598877
    4. '(n' → logprob: -10.25053882598877
    5. '`' → logprob: -10.62553882598877
    6. ')' → logprob: -10.87553882598877
    7. '('' → logprob: -11.25053882598877
    8. '(
' → logprob: -11.25053882598877
    9. '[' → logprob: -11.37553882598877
    10. '()' → logprob: -11.75053882598877

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7217922210693359
    2. ')' → logprob: -0.7217922210693359
    3. '()' → logprob: -3.846792221069336
    4. '())' → logprob: -5.221792221069336
    5. '(
' → logprob: -8.096792221069336
    6. '```' → logprob: -8.596792221069336
    7. '(()' → logprob: -9.346792221069336
    8. '[' → logprob: -9.346792221069336
    9. '))' → logprob: -9.346792221069336
    10. '")' → logprob: -9.471792221069336

Token 5: 'li' (ID: 1307)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2314801216125488
    2. 'if' → logprob: -1.2314801216125488
    3. 'for' → logprob: -1.6064801216125488
    4. 's' → logprob: -2.606480121612549
    5. 'x' → logprob: -3.606480121612549
    6. '`' → logprob: -3.731480121612549
    7. ' ' → logprob: -4.356480121612549
    8. '\n' → logprob: -4.481480121612549
    9. ''' → logprob: -4.606480121612549
    10. 'f' → logprob: -5.106480121612549

Token 6: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.31735289096832275
    2. 's' → logprob: -1.3173528909683228
    3. '[' → logprob: -5.942352771759033
    4. '.append' → logprob: -7.192352771759033
    5. '.' → logprob: -8.067353248596191
    6. '[s' → logprob: -8.692353248596191
    7. 'sts' → logprob: -9.817353248596191
    8. '\[' → logprob: -10.692353248596191
    9. 'n' → logprob: -10.942353248596191
    10. 't' → logprob: -11.192353248596191

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.28119128942489624
    2. ' []' → logprob: -2.281191349029541
    3. 'list' → logprob: -2.281191349029541
    4. '[' → logprob: -4.406191349029541
    5. '[list' → logprob: -4.531191349029541
    6. ' list' → logprob: -4.656191349029541
    7. ' [' → logprob: -5.406191349029541
    8. '[input' → logprob: -5.656191349029541
    9. '[int' → logprob: -8.531190872192383
    10. 'input' → logprob: -10.281190872192383

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009651767322793603
    2. '()' → logprob: -8.000965118408203
    3. '(range' → logprob: -8.125965118408203
    4. '(input' → logprob: -9.625965118408203
    5. '(li' → logprob: -10.000965118408203
    6. '(`' → logprob: -10.250965118408203
    7. '(n' → logprob: -10.500965118408203
    8. '(
' → logprob: -10.625965118408203
    9. '((' → logprob: -10.625965118408203
    10. '```' → logprob: -11.375965118408203

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004908885341137648
    2. '(' → logprob: -5.379909038543701
    3. 'int' → logprob: -9.254908561706543
    4. '<int' → logprob: -9.629908561706543
    5. '=int' → logprob: -10.504908561706543
    6. '(str' → logprob: -10.504908561706543
    7. '(input' → logprob: -10.629908561706543
    8. ')' → logprob: -10.754908561706543
    9. '(
' → logprob: -11.629908561706543
    10. '```' → logprob: -11.754908561706543

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0018185744993388653
    2. ',input' → logprob: -7.001818656921387
    3. '(' → logprob: -7.126818656921387
    4. ',' → logprob: -10.626818656921387
    5. '=input' → logprob: -10.751818656921387
    6. 'input' → logprob: -10.876818656921387
    7. ')' → logprob: -11.251818656921387
    8. ' (' → logprob: -12.001818656921387
    9. '))' → logprob: -12.501818656921387
    10. '<input' → logprob: -13.126818656921387

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602603793144226
    2. ' input' → logprob: -1.9102604389190674
    3. '(input' → logprob: -10.660260200500488
    4. ',input' → logprob: -11.535260200500488
    5. ')' → logprob: -14.035260200500488
    6. '=input' → logprob: -14.660260200500488
    7. ' ' → logprob: -14.910260200500488
    8. '	input' → logprob: -15.285260200500488
    9. '<input' → logprob: -15.410260200500488
    10. '[input' → logprob: -15.410260200500488

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6559507846832275
    2. '()' → logprob: -1.0309507846832275
    3. '())' → logprob: -2.6559507846832275
    4. '().' → logprob: -3.1559507846832275
    5. '(' → logprob: -5.280950546264648
    6. '))' → logprob: -5.780950546264648
    7. '()));' → logprob: -6.530950546264648
    8. ')' → logprob: -6.655950546264648
    9. '())))' → logprob: -8.780950546264648
    10. '());' → logprob: -9.155950546264648

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009320637909695506
    2. 'strip' → logprob: -7.000932216644287
    3. 'rstrip' → logprob: -11.375931739807129
    4. ' split' → logprob: -11.875931739807129
    5. ')' → logprob: -14.250931739807129
    6. 's' → logprob: -14.375931739807129
    7. '(split' → logprob: -14.500931739807129
    8. 'spl' → logprob: -14.875931739807129
    9. 'sp' → logprob: -17.250932693481445
    10. 'replace' → logprob: -17.250932693481445

Token 14: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4388401508331299
    2. '))' → logprob: -1.0638401508331299
    3. '(' → logprob: -5.188839912414551
    4. '()))' → logprob: -5.813839912414551
    5. '())' → logprob: -7.063839912414551
    6. ')))' → logprob: -8.18883991241455
    7. '()' → logprob: -8.43883991241455
    8. '`' → logprob: -10.43883991241455
    9. ''))' → logprob: -10.56383991241455
    10. '>' → logprob: -10.81383991241455

Token 15: 'cnt' (ID: 33160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35993245244026184
    2. 'c' → logprob: -1.9849324226379395
    3. 'for' → logprob: -3.2349324226379395
    4. 'li' → logprob: -3.4849324226379395
    5. 'm' → logprob: -4.1099324226379395
    6. 'a' → logprob: -4.3599324226379395
    7. 'r' → logprob: -4.3599324226379395
    8. 'sum' → logprob: -4.4849324226379395
    9. 'pr' → logprob: -5.3599324226379395
    10. 'i' → logprob: -5.3599324226379395

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1590326428413391
    2. '(' → logprob: -2.0340325832366943
    3. '_' → logprob: -4.159032821655273
    4. '=' → logprob: -9.034032821655273
    5. 's' → logprob: -9.034032821655273
    6. '\[' → logprob: -9.534032821655273
    7. '[(' → logprob: -9.659032821655273
    8. ''' → logprob: -10.159032821655273
    9. '[
' → logprob: -10.409032821655273
    10. ')' → logprob: -10.659032821655273

Token 17: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47864702343940735
    2. ' ' → logprob: -0.978646993637085
    3. ' {}' → logprob: -5.978647232055664
    4. '{}' → logprob: -6.853647232055664
    5. '{' → logprob: -7.603647232055664
    6. ' {' → logprob: -7.853647232055664
    7. '[' → logprob: -9.853647232055664
    8. '  ' → logprob: -11.728647232055664
    9. ' defaultdict' → logprob: -12.228647232055664
    10. ' )' → logprob: -12.853647232055664

Token 18: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.750896155834198
    2. ' ' → logprob: -2.3758962154388428
    3. ')' → logprob: -2.6258962154388428
    4. '\' → logprob: -2.7508962154388428
    5. '' → logprob: -3.1258962154388428
    6. '```' → logprob: -3.1258962154388428
    7. '\n' → logprob: -3.1258962154388428
    8. '=' → logprob: -3.2508962154388428
    9. '(' → logprob: -3.6258962154388428
    10. 'for' → logprob: -4.000895977020264

Token 19: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34888890385627747
    2. ' ' → logprob: -1.223888874053955
    3. '2' → logprob: -7.848888874053955
    4. ' len' → logprob: -10.973889350891113
    5. 'sum' → logprob: -11.598889350891113
    6. ' sum' → logprob: -11.973889350891113
    7. '32' → logprob: -12.348889350891113
    8. 'len' → logprob: -12.848889350891113
    9. 'space' → logprob: -13.223889350891113
    10. ' ' → logprob: -13.848889350891113

Token 20: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004222405143082142
    2. '2' → logprob: -6.004222393035889
    3. 'sum' → logprob: -6.879222393035889
    4. 'len' → logprob: -7.879222393035889
    5. ' ' → logprob: -8.254222869873047
    6. 'li' → logprob: -10.129222869873047
    7. 'max' → logprob: -10.754222869873047
    8. '3' → logprob: -12.129222869873047
    9. ' sum' → logprob: -12.629222869873047
    10. '4' → logprob: -13.129222869873047

Token 21: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09038085490465164
    2. ' 
' → logprob: -3.215380907058716
    3. '>' → logprob: -4.465380668640137
    4. ')' → logprob: -4.965380668640137
    5. ':' → logprob: -4.965380668640137
    6. '*' → logprob: -5.215380668640137
    7. '
' → logprob: -5.590380668640137
    8. '```' → logprob: -5.840380668640137
    9. '  
' → logprob: -7.090380668640137
    10. '' → logprob: -7.090380668640137

Token 22: 'ans' (ID: 616)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6350544095039368
    2. '*' → logprob: -1.760054349899292
    3. ')' → logprob: -2.635054349899292
    4. '\' → logprob: -3.510054349899292
    5. '\n' → logprob: -3.510054349899292
    6. 'for' → logprob: -3.635054349899292
    7. ' 
' → logprob: -4.010054588317871
    8. '
' → logprob: -4.135054588317871
    9. '<|end|>' → logprob: -4.260054588317871
    10. ':' → logprob: -4.385054588317871

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2656753361225128
    2. '=' → logprob: -2.1406753063201904
    3. '[' → logprob: -3.0156753063201904
    4. ' ' → logprob: -3.6406753063201904
    5. ' +=' → logprob: -3.7656753063201904
    6. '_' → logprob: -4.7656755447387695
    7. '+' → logprob: -5.1406755447387695
    8. ')' → logprob: -7.5156755447387695
    9. '+=' → logprob: -7.6406755447387695
    10. ',' → logprob: -7.8906755447387695

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07551205903291702
    2. '0' → logprob: -2.950512170791626
    3. ' max' → logprob: -4.575511932373047
    4. ' cnt' → logprob: -5.825511932373047
    5. ' li' → logprob: -6.075511932373047
    6. ' "' → logprob: -7.200511932373047
    7. ' []' → logprob: -7.325511932373047
    8. ' min' → logprob: -7.325511932373047
    9. '"' → logprob: -7.450511932373047
    10. 'max' → logprob: -7.950511932373047

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07387124747037888
    2. 'max' → logprob: -3.94887113571167
    3. ' ' → logprob: -4.32387113571167
    4. 'cnt' → logprob: -4.44887113571167
    5. 'sum' → logprob: -4.82387113571167
    6. 'n' → logprob: -5.57387113571167
    7. '1' → logprob: -5.82387113571167
    8. 'min' → logprob: -5.94887113571167
    9. 'li' → logprob: -6.19887113571167
    10. '[' → logprob: -6.69887113571167

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20408201217651367
    2. ' 
' → logprob: -2.5790820121765137
    3. '\n' → logprob: -2.8290820121765137
    4. '' → logprob: -4.329082012176514
    5. ' for' → logprob: -4.329082012176514
    6. ' ' → logprob: -4.954082012176514
    7. 'for' → logprob: -5.204082012176514
    8. '  
' → logprob: -5.829082012176514
    9. '<|end|>' → logprob: -5.829082012176514
    10. '\' → logprob: -6.579082012176514

Token 27: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8273772597312927
    2. ' for' → logprob: -1.3273773193359375
    3. '
' → logprob: -1.9523773193359375
    4. '\n' → logprob: -2.4523773193359375
    5. '<|end|>' → logprob: -4.3273773193359375
    6. '' → logprob: -4.4523773193359375
    7. ')' → logprob: -4.5773773193359375
    8. ' ' → logprob: -4.5773773193359375
    9. ' 
' → logprob: -4.8273773193359375
    10. '```' → logprob: -5.7023773193359375

Token 28: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8232176303863525
    2. ' ' → logprob: -0.8232176303863525
    3. 'f' → logprob: -3.0732176303863525
    4. '=' → logprob: -3.9482176303863525
    5. ' =' → logprob: -4.073217391967773
    6. 'n' → logprob: -4.198217391967773
    7. ' +=' → logprob: -4.448217391967773
    8. ' +' → logprob: -4.823217391967773
    9. 's' → logprob: -6.698217391967773
    10. '[' → logprob: -6.698217391967773

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.055750470608472824
    2. '0' → logprob: -2.9307503700256348
    3. '1' → logprob: -7.180750370025635
    4. '2' → logprob: -9.305750846862793
    5. ' n' → logprob: -11.805750846862793
    6. ' -' → logprob: -13.555750846862793
    7. '3' → logprob: -13.555750846862793
    8. ' cnt' → logprob: -13.555750846862793
    9. 'n' → logprob: -13.680750846862793
    10. ' ' → logprob: -14.493250846862793

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9608868360519409
    2. '1' → logprob: -1.085886836051941
    3. '2' → logprob: -1.460886836051941
    4. ' ' → logprob: -3.0858869552612305
    5. '3' → logprob: -6.2108869552612305
    6. 'n' → logprob: -10.08588695526123
    7. '4' → logprob: -10.71088695526123
    8. 'cnt' → logprob: -11.77338695526123
    9. '5' → logprob: -12.08588695526123
    10. 'len' → logprob: -12.39838695526123

Token 31: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03309193626046181
    2. '<|end|>' → logprob: -4.283092021942139
    3. ' 
' → logprob: -4.783092021942139
    4. ' while' → logprob: -5.908092021942139
    5. '
' → logprob: -6.408092021942139
    6. ':' → logprob: -6.658092021942139
    7. 'while' → logprob: -6.783092021942139
    8. '  ' → logprob: -7.908092021942139
    9. ' ,' → logprob: -7.908092021942139
    10. ')' → logprob: -8.03309154510498

Token 32: 'while' (ID: 7032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11056340485811234
    2. ' 
' → logprob: -2.8605635166168213
    3. '
' → logprob: -4.610563278198242
    4. '<|end|>' → logprob: -4.610563278198242
    5. '  
' → logprob: -4.860563278198242
    6. ':' → logprob: -5.110563278198242
    7. '```' → logprob: -5.860563278198242
    8. '\' → logprob: -6.610563278198242
    9. '   
' → logprob: -6.735563278198242
    10. '' → logprob: -6.735563278198242

Token 33: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3511713147163391
    2. ' i' → logprob: -1.2261712551116943
    3. 'i' → logprob: -6.101171493530273
    4. '  ' → logprob: -8.476171493530273
    5. ' n' → logprob: -8.976171493530273
    6. ' ' → logprob: -10.226171493530273
    7. ' cnt' → logprob: -10.726171493530273
    8. ' (' → logprob: -10.851171493530273
    9. ' )' → logprob: -10.976171493530273
    10. 'n' → logprob: -12.351171493530273

Token 34: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12106741964817047
    2. ' <=' → logprob: -2.621067523956299
    3. '<' → logprob: -3.371067523956299
    4. ' ' → logprob: -5.246067523956299
    5. '+' → logprob: -6.871067523956299
    6. '<=' → logprob: -8.12106704711914
    7. ' <
' → logprob: -8.87106704711914
    8. ' !=' → logprob: -10.12106704711914
    9. ' +' → logprob: -10.12106704711914
    10. ' ==' → logprob: -10.87106704711914

Token 35: ' cnt' (ID: 27340)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.24707767367362976
    2. ' cnt' → logprob: -2.372077703475952
    3. 'n' → logprob: -2.497077703475952
    4. 'cnt' → logprob: -3.497077703475952
    5. ' ' → logprob: -4.372077465057373
    6. ' len' → logprob: -8.622077941894531
    7. 'len' → logprob: -9.872077941894531
    8. '(cnt' → logprob: -10.247077941894531
    9. '	cnt' → logprob: -10.497077941894531
    10. '  ' → logprob: -10.872077941894531

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016229785978794098
    2. ' :' → logprob: -4.141229629516602
    3. ':
' → logprob: -9.391229629516602
    4. '+:' → logprob: -9.766229629516602
    5. ' :
' → logprob: -11.141229629516602
    6. ':**' → logprob: -11.266229629516602
    7. '+' → logprob: -11.641229629516602
    8. ' and' → logprob: -11.766229629516602
    9. ' ' → logprob: -13.016229629516602
    10. '):' → logprob: -13.641229629516602

Token 37: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20705077052116394
    2. '   ' → logprob: -2.2070508003234863
    3. '    ' → logprob: -2.8320508003234863
    4. '     
' → logprob: -4.707050800323486
    5. ' 
' → logprob: -5.707050800323486
    6. '  ' → logprob: -6.832050800323486
    7. '    
' → logprob: -6.957050800323486
    8. '   
' → logprob: -7.207050800323486
    9. '  
' → logprob: -7.707050800323486
    10. ' i' → logprob: -7.957050800323486

Token 38: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08827342092990875
    2. '    ' → logprob: -3.463273525238037
    3. '   ' → logprob: -3.713273525238037
    4. ' if' → logprob: -3.838273525238037
    5. ' 
' → logprob: -6.588273525238037
    6. ' i' → logprob: -6.838273525238037
    7. 'if' → logprob: -6.963273525238037
    8. '     
' → logprob: -7.088273525238037
    9. '  ' → logprob: -7.213273525238037
    10. 'i' → logprob: -7.963273525238037

Token 39: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2992808520793915
    2. '[i' → logprob: -1.4242808818817139
    3. ' ' → logprob: -4.799280643463135
    4. ' =' → logprob: -5.299280643463135
    5. '=' → logprob: -6.299280643463135
    6. '+' → logprob: -7.549280643463135
    7. ' +=' → logprob: -7.674280643463135
    8. ' [' → logprob: -7.924280643463135
    9. 'i' → logprob: -8.049281120300293
    10. ',' → logprob: -8.674281120300293

Token 40: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8641979098320007
    2. ' +' → logprob: -1.4891979694366455
    3. '+' → logprob: -1.7391979694366455
    4. ' ' → logprob: -2.3641979694366455
    5. ' =' → logprob: -2.9891979694366455
    6. '=' → logprob: -4.864197731018066
    7. ',' → logprob: -5.239197731018066
    8. '[i' → logprob: -5.614197731018066
    9. ' >' → logprob: -5.739197731018066
    10. ' ==' → logprob: -5.989197731018066

Token 41: ' li' (ID: 3476)
  Prédit: ' li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' li' → logprob: -0.632638156414032
    2. 'li' → logprob: -0.757638156414032
    3. '(li' → logprob: -11.757637977600098
    4. ' ' → logprob: -11.882637977600098
    5. ' l' → logprob: -12.007637977600098
    6. 'l' → logprob: -12.132637977600098
    7. '<li' → logprob: -13.445137977600098
    8. 'i' → logprob: -13.820137977600098
    9. 'int' → logprob: -14.257637977600098
    10. 'a' → logprob: -14.257637977600098

Token 42: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005570820067077875
    2. '[' → logprob: -7.500556945800781
    3. ' [' → logprob: -13.000556945800781
    4. '[a' → logprob: -13.750556945800781
    5. '[
' → logprob: -14.625556945800781
    6. '   ' → logprob: -16.75055694580078
    7. ' ' → logprob: -16.87555694580078
    8. '[I' → logprob: -16.87555694580078
    9. 'i' → logprob: -17.25055694580078
    10. '[]' → logprob: -17.50055694580078

Token 43: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31918200850486755
    2. '+' → logprob: -1.31918203830719
    3. ']
' → logprob: -5.5691819190979
    4. ' +' → logprob: -6.3191819190979
    5. ' ]' → logprob: -9.194182395935059
    6. ']+' → logprob: -9.444182395935059
    7. '-' → logprob: -10.319182395935059
    8. '   ' → logprob: -10.444182395935059
    9. ']
' → logprob: -11.819182395935059
    10. '+i' → logprob: -11.944182395935059

Token 44: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4962819218635559
    2. ' +' → logprob: -0.9962819218635559
    3. ' ' → logprob: -4.24628210067749
    4. '   ' → logprob: -5.74628210067749
    5. ' -' → logprob: -6.87128210067749
    6. '+a' → logprob: -7.12128210067749
    7. '-' → logprob: -7.37128210067749
    8. '<|end|>' → logprob: -7.99628210067749
    9. ' +
' → logprob: -8.121281623840332
    10. 'a' → logprob: -8.496281623840332

Token 45: ' a' (ID: 261)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16782675683498383
    2. ' +' → logprob: -2.1678266525268555
    3. ' ' → logprob: -3.6678266525268555
    4. 'a' (adapté à ' a') → logprob: -5.4178266525268555
    5. '+a' → logprob: -5.6678266525268555
    6. '<|end|>' → logprob: -6.6678266525268555
    7. '   ' → logprob: -6.9178266525268555
    8. ',' → logprob: -7.4178266525268555
    9. '-' → logprob: -7.6678266525268555
    10. '+
' → logprob: -7.9178266525268555

Token 46: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012961865402758121
    2. '1' → logprob: -5.1379618644714355
    3. '+' → logprob: -5.7629618644714355
    4. '[' → logprob: -6.3879618644714355
    5. ' ' → logprob: -6.6379618644714355
    6. '0' → logprob: -7.5129618644714355
    7. '[i' → logprob: -8.762962341308594
    8. ' +' → logprob: -10.137962341308594
    9. '3' → logprob: -10.262962341308594
    10. '   ' → logprob: -11.012962341308594

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06997478753328323
    2. '=' → logprob: -2.694974899291992
    3. ' ' → logprob: -10.569974899291992
    4. ',' → logprob: -11.694974899291992
    5. '+' → logprob: -13.194974899291992
    6. 'a' → logprob: -14.069974899291992
    7. ' ,' → logprob: -15.069974899291992
    8. 's' → logprob: -15.319974899291992
    9. '>' → logprob: -15.569974899291992
    10. ' +' → logprob: -15.944974899291992

Token 48: ' li' (ID: 3476)
  Prédit: ' li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' li' → logprob: -0.011075058951973915
    2. 'li' → logprob: -4.511075019836426
    3. ' ' → logprob: -12.136075019836426
    4. ' ' → logprob: -12.136075019836426
    5. ' l' → logprob: -12.511075019836426
    6. ' a' → logprob: -12.636075019836426
    7. '(li' → logprob: -12.761075019836426
    8. 'a' → logprob: -14.136075019836426
    9. ' lo' → logprob: -14.261075019836426
    10. ' le' → logprob: -14.511075019836426

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00071695790393278
    2. '[' → logprob: -7.2507171630859375
    3. '[
' → logprob: -12.500717163085938
    4. '   ' → logprob: -13.500717163085938
    5. ' [' → logprob: -14.000717163085938
    6. '```' → logprob: -14.625717163085938
    7. '[++' → logprob: -16.125717163085938
    8. ' ' → logprob: -16.375717163085938
    9. '[a' → logprob: -16.500717163085938
    10. 'i' → logprob: -16.750717163085938

Token 50: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04309282451868057
    2. ' +' → logprob: -3.168092727661133
    3. ']' → logprob: -9.543092727661133
    4. '+
' → logprob: -11.668092727661133
    5. '+]' → logprob: -12.293092727661133
    6. ' +
' → logprob: -12.418092727661133
    7. ']+' → logprob: -13.043092727661133
    8. ' ' → logprob: -14.418092727661133
    9. '1' → logprob: -14.668092727661133
    10. '-' → logprob: -15.043092727661133

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.039331138134002686
    2. '2' → logprob: -3.2893311977386475
    3. ' ' → logprob: -6.664330959320068
    4. '   ' → logprob: -11.914331436157227
    5. '0' → logprob: -12.414331436157227
    6. '  ' → logprob: -14.476831436157227
    7. '3' → logprob: -15.039331436157227
    8. '```' → logprob: -15.601831436157227
    9. '１' → logprob: -15.726831436157227
    10. '    ' → logprob: -15.914331436157227

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026302389800548553
    2. '2' → logprob: -3.6513023376464844
    3. ' ' → logprob: -13.963802337646484
    4. '0' → logprob: -15.463802337646484
    5. '１' → logprob: -15.463802337646484
    6. '```' → logprob: -15.713802337646484
    7. '۱' → logprob: -15.901302337646484
    8. '१' → logprob: -15.963802337646484
    9. '   ' → logprob: -16.276302337646484
    10. '3' → logprob: -17.026302337646484

Token 53: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000990295666269958
    2. ')' → logprob: -7.625990390777588
    3. ' ]' → logprob: -8.50098991394043
    4. ']
' → logprob: -9.00098991394043
    5. '+' → logprob: -9.37598991394043
    6. '   ' → logprob: -10.12598991394043
    7. 'a' → logprob: -10.87598991394043
    8. '<|end|>' → logprob: -12.12598991394043
    9. ' +' → logprob: -12.50098991394043
    10. ' ' → logprob: -12.62598991394043

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0549590177834034
    2. ' ' → logprob: -3.1799590587615967
    3. ' 
' → logprob: -5.554958820343018
    4. '<|end|>' → logprob: -6.054958820343018
    5. 'a' → logprob: -6.304958820343018
    6. '    
' → logprob: -7.054958820343018
    7. '    ' → logprob: -7.179958820343018
    8. '   
' → logprob: -7.429958820343018
    9. '  ' → logprob: -7.554958820343018
    10. ' a' → logprob: -8.054959297180176

Token 55: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.6197896003723145
    2. ' ' → logprob: -0.9947896003723145
    3. ' a' → logprob: -2.6197896003723145
    4. '   ' → logprob: -4.1197896003723145
    5. ' 
' → logprob: -6.9947896003723145
    6. '  ' → logprob: -7.2447896003723145
    7. '    ' → logprob: -8.244789123535156
    8. 's' → logprob: -9.119789123535156
    9. '```' → logprob: -9.119789123535156
    10. '   
' → logprob: -9.244789123535156

Token 56: '3' (ID: 18)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.579220712184906
    2. '2' → logprob: -1.2042207717895508
    3. '[' → logprob: -2.329220771789551
    4. '[i' → logprob: -3.954220771789551
    5. ' +' → logprob: -5.454220771789551
    6. '<|end|>' → logprob: -5.454220771789551
    7. '   ' → logprob: -6.204220771789551
    8. '  ' → logprob: -6.204220771789551
    9. ' ' → logprob: -6.454220771789551
    10. '0' → logprob: -6.454220771789551

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009762344881892204
    2. '=' → logprob: -4.634762287139893
    3. ' ' → logprob: -12.25976276397705
    4. '<|end|>' → logprob: -14.00976276397705
    5. ')' → logprob: -14.50976276397705
    6. '   ' → logprob: -15.75976276397705
    7. ']' → logprob: -17.009761810302734
    8. ',' → logprob: -17.009761810302734
    9. '  ' → logprob: -17.259761810302734
    10. ' =)' → logprob: -17.259761810302734

Token 58: ' li' (ID: 3476)
  Prédit: ' li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' li' → logprob: -0.029784047976136208
    2. 'li' → logprob: -3.5297839641571045
    3. ' ' → logprob: -11.279784202575684
    4. '(li' → logprob: -11.779784202575684
    5. ' ' → logprob: -13.154784202575684
    6. '<li' → logprob: -13.404784202575684
    7. ' le' → logprob: -13.592284202575684
    8. ' lo' → logprob: -13.717284202575684
    9. ' la' → logprob: -13.904784202575684
    10. 's' → logprob: -14.404784202575684

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002964935847558081
    2. '[' → logprob: -8.125296592712402
    3. 'i' → logprob: -16.000295639038086
    4. '[
' → logprob: -16.875295639038086
    5. '```' → logprob: -17.000295639038086
    6. '[++' → logprob: -17.750295639038086
    7. '[I' → logprob: -17.750295639038086
    8. '[j' → logprob: -17.750295639038086
    9. '   ' → logprob: -17.875295639038086
    10. '\[' → logprob: -18.250295639038086

Token 60: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3485066294670105
    2. '+' → logprob: -1.2235066890716553
    3. '2' → logprob: -10.348506927490234
    4. ']' → logprob: -11.223506927490234
    5. ' +
' → logprob: -11.723506927490234
    6. ' ' → logprob: -12.848506927490234
    7. ')' → logprob: -13.598506927490234
    8. '3' → logprob: -14.473506927490234
    9. '+
' → logprob: -14.473506927490234
    10. ' ]' → logprob: -14.598506927490234

Token 61: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005545823951251805
    2. ' ' → logprob: -7.50055456161499
    3. '3' → logprob: -13.875555038452148
    4. '1' → logprob: -14.750555038452148
    5. '0' → logprob: -16.00055503845215
    6. '  ' → logprob: -16.56305503845215
    7. '```' → logprob: -17.37555503845215
    8. '   ' → logprob: -17.87555503845215
    9. '۲' → logprob: -18.00055503845215
    10. '２' → logprob: -18.06305503845215

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -12.000008583068848
    3. '3' → logprob: -13.875008583068848
    4. '1' → logprob: -14.000008583068848
    5. '0' → logprob: -16.31250762939453
    6. '```' → logprob: -16.37500762939453
    7. '۲' → logprob: -17.31250762939453
    8. '   ' → logprob: -17.31250762939453
    9. '২' → logprob: -17.68750762939453
    10. '  ' → logprob: -17.75000762939453

Token 63: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0060782297514379025
    2. ']' → logprob: -5.131078243255615
    3. ')
' → logprob: -9.881077766418457
    4. '   ' → logprob: -10.506077766418457
    5. '}' → logprob: -10.631077766418457
    6. ' )' → logprob: -11.131077766418457
    7. '）' → logprob: -11.256077766418457
    8. '])' → logprob: -11.881077766418457
    9. ' ' → logprob: -13.131077766418457
    10. '']' → logprob: -13.131077766418457

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07364469766616821
    2. '
' → logprob: -3.6986446380615234
    3. '<|end|>' → logprob: -4.323644638061523
    4. '\n' → logprob: -4.573644638061523
    5. '    
' → logprob: -5.573644638061523
    6. ' ' → logprob: -5.573644638061523
    7. '   
' → logprob: -5.573644638061523
    8. '  
' → logprob: -6.323644638061523
    9. '  ' → logprob: -6.323644638061523
    10. ' 
' → logprob: -6.323644638061523

Token 65: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2681604623794556
    2. '   ' → logprob: -1.2681604623794556
    3. ' if' → logprob: -2.268160343170166
    4. 'if' (adapté à ' if') → logprob: -2.393160343170166
    5. ' 
' → logprob: -2.518160343170166
    6. ' ' → logprob: -3.143160343170166
    7. '\n' → logprob: -3.143160343170166
    8. '<|end|>' → logprob: -3.268160343170166
    9. '  
' → logprob: -4.768160343170166
    10. '    
' → logprob: -5.393160343170166

Token 66: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2723015546798706
    2. ' (' → logprob: -1.6473015546798706
    3. 'a' → logprob: -3.39730167388916
    4. '(' → logprob: -4.52230167388916
    5. '(a' → logprob: -6.77230167388916
    6. ' ' → logprob: -8.14730167388916
    7. ' ' → logprob: -11.39730167388916
    8. ' not' → logprob: -11.64730167388916
    9. ' ((' → logprob: -12.27230167388916
    10. ' abs' → logprob: -12.27230167388916

Token 67: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1313287317752838
    2. ' a' → logprob: -2.131328821182251
    3. ' (' → logprob: -5.881328582763672
    4. '(a' → logprob: -6.756328582763672
    5. '(' → logprob: -7.881328582763672
    6. ' ' → logprob: -11.006328582763672
    7. ')' → logprob: -11.256328582763672
    8. '   ' → logprob: -12.131328582763672
    9. ' abs' → logprob: -12.131328582763672
    10. 'abs' → logprob: -12.756328582763672

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3553490936756134
    2. '2' → logprob: -1.230349063873291
    3. '3' → logprob: -4.980349063873291
    4. '[' → logprob: -12.91784954071045
    5. '[i' → logprob: -13.85534954071045
    6. ' ' → logprob: -14.16784954071045
    7. '```' → logprob: -14.60534954071045
    8. ')' → logprob: -14.73034954071045
    9. '１' → logprob: -14.79284954071045
    10. '+' → logprob: -15.10534954071045

Token 69: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1786590963602066
    2. ' >' → logprob: -2.428659200668335
    3. ' +' → logprob: -3.553659200668335
    4. '<' → logprob: -3.553659200668335
    5. ' <=' → logprob: -4.928658962249756
    6. ' ==' → logprob: -5.803658962249756
    7. '>' → logprob: -5.803658962249756
    8. '+' → logprob: -5.928658962249756
    9. ' >=' → logprob: -7.303658962249756
    10. ' ' → logprob: -7.553658962249756

Token 70: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08911077678203583
    2. ' a' → logprob: -2.464110851287842
    3. '=' → logprob: -9.089110374450684
    4. ' ' → logprob: -10.214110374450684
    5. '>' → logprob: -11.714110374450684
    6. ')' → logprob: -12.339110374450684
    7. '=a' → logprob: -13.089110374450684
    8. '>a' → logprob: -13.089110374450684
    9. '	a' → logprob: -14.026610374450684
    10. ' =' → logprob: -14.214110374450684

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01960119418799877
    2. '3' → logprob: -4.644601345062256
    3. 'a' → logprob: -4.894601345062256
    4. ' a' → logprob: -6.394601345062256
    5. ' ' → logprob: -7.644601345062256
    6. '_' → logprob: -9.019600868225098
    7. '1' → logprob: -10.644600868225098
    8. ')' → logprob: -12.144600868225098
    9. '>' → logprob: -13.644600868225098
    10. '  ' → logprob: -13.644600868225098

Token 72: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.013938886113464832
    2. 'and' → logprob: -4.638938903808594
    3. ' <' → logprob: -6.263938903808594
    4. ' ' → logprob: -7.013938903808594
    5. ' >' → logprob: -7.013938903808594
    6. '>' → logprob: -8.388938903808594
    7. ')' → logprob: -8.638938903808594
    8. '<' → logprob: -9.888938903808594
    9. ' )' → logprob: -11.763938903808594
    10. '    ' → logprob: -13.763938903808594

Token 73: ' &' (ID: 827)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.030048640444874763
    2. 'and' → logprob: -3.5300486087799072
    3. ' ' → logprob: -8.405048370361328
    4. '>' → logprob: -10.405048370361328
    5. ' >' → logprob: -10.530048370361328
    6. ' <' → logprob: -11.530048370361328
    7. ' a' → logprob: -12.905048370361328
    8. '<' → logprob: -13.280048370361328
    9. ' an' → logprob: -14.405048370361328
    10. 'a' → logprob: -14.780048370361328

Token 74: ' (' (ID: 350)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.0402267761528492
    2. ' (' → logprob: -3.290226697921753
    3. '(a' → logprob: -6.540226936340332
    4. '(' → logprob: -9.040226936340332
    5. '&(' → logprob: -9.040226936340332
    6. ' ' → logprob: -9.165226936340332
    7. '>' → logprob: -9.540226936340332
    8. '&a' → logprob: -10.040226936340332
    9. '&amp' → logprob: -10.165226936340332
    10. '&
' → logprob: -10.290226936340332

Token 75: 'a' (ID: 64)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.11670326441526413
    2. 'a' → logprob: -2.4917032718658447
    3. ' (' → logprob: -3.9917032718658447
    4. '(a' → logprob: -4.741703033447266
    5. ' ' → logprob: -9.741703033447266
    6. '(' → logprob: -10.491703033447266
    7. ')' → logprob: -10.491703033447266
    8. '&' → logprob: -11.616703033447266
    9. ' ' → logprob: -11.616703033447266
    10. '&a' → logprob: -12.116703033447266

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003069925820454955
    2. '3' → logprob: -5.878069877624512
    3. '1' → logprob: -8.378069877624512
    4. ' ' → logprob: -11.128069877624512
    5. '_' → logprob: -12.128069877624512
    6. ' <' → logprob: -12.378069877624512
    7. '<' → logprob: -12.878069877624512
    8. '₂' → logprob: -13.003069877624512
    9. '[' → logprob: -13.503069877624512
    10. ' >' → logprob: -13.628069877624512

Token 77: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.13789336383342743
    2. '>' → logprob: -2.5128934383392334
    3. ' <' → logprob: -3.1378934383392334
    4. '<' → logprob: -5.762893199920654
    5. ' ' → logprob: -6.887893199920654
    6. ')' → logprob: -8.762893676757812
    7. '<|end|>' → logprob: -10.387893676757812
    8. ' ' → logprob: -11.387893676757812
    9. ' )' → logprob: -11.887893676757812
    10. '  ' → logprob: -12.262893676757812

Token 78: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1615879386663437
    2. 'a' → logprob: -1.9115879535675049
    3. ' ' → logprob: -6.661587715148926
    4. ')' → logprob: -10.661587715148926
    5. '<|end|>' → logprob: -11.786587715148926
    6. '3' → logprob: -12.036587715148926
    7. '	a' → logprob: -12.161587715148926
    8. '(a' → logprob: -12.286587715148926
    9. ' (' → logprob: -12.286587715148926
    10. '  ' → logprob: -12.411587715148926

Token 79: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.106736039626412e-05
    2. 'a' → logprob: -10.500031471252441
    3. ' ' → logprob: -12.875031471252441
    4. ' a' → logprob: -14.125031471252441
    5. ')' → logprob: -17.500030517578125
    6. '<|end|>' → logprob: -17.500030517578125
    7. '۳' → logprob: -17.750030517578125
    8. 's' → logprob: -17.875030517578125
    9. '   ' → logprob: -18.000030517578125
    10. ' three' → logprob: -18.250030517578125

Token 80: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3900856673717499
    2. '):' → logprob: -1.1400856971740723
    3. ' ):' → logprob: -6.390085697174072
    4. ' )' → logprob: -6.515085697174072
    5. ':' → logprob: -10.265085220336914
    6. '):
' → logprob: -12.515085220336914
    7. '   ' → logprob: -12.765085220336914
    8. ' and' → logprob: -13.015085220336914
    9. ' ' → logprob: -13.515085220336914
    10. ')：' → logprob: -13.890085220336914

Token 81: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6015875935554504
    2. '   ' → logprob: -1.9765875339508057
    3. '       ' → logprob: -2.2265875339508057
    4. '    ' → logprob: -2.6015875339508057
    5. ' ' → logprob: -3.2265875339508057
    6. ' :' → logprob: -3.3515875339508057
    7. ')' → logprob: -3.9765875339508057
    8. '<|end|>' → logprob: -4.726587772369385
    9. ' and' → logprob: -4.976587772369385
    10. ' or' → logprob: -5.726587772369385

Token 82: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7655666470527649
    2. ' ' → logprob: -1.0155665874481201
    3. ' 
' → logprob: -2.76556658744812
    4. '   ' → logprob: -3.51556658744812
    5. 'i' → logprob: -3.89056658744812
    6. '    ' → logprob: -4.015566825866699
    7. ' i' → logprob: -4.265566825866699
    8. '     
' → logprob: -5.390566825866699
    9. '        
' → logprob: -5.640566825866699
    10. '\n' → logprob: -5.890566825866699

Token 83: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.012281588278710842
    2. '+=' → logprob: -4.63728141784668
    3. '+' → logprob: -6.01228141784668
    4. ' +' → logprob: -10.13728141784668
    5. ' =' → logprob: -10.76228141784668
    6. ' ' → logprob: -12.51228141784668
    7. '<|end|>' → logprob: -13.01228141784668
    8. '=' → logprob: -13.38728141784668
    9. '+='' → logprob: -13.38728141784668
    10. ')' → logprob: -13.88728141784668

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07365810126066208
    2. ' ' → logprob: -2.698657989501953
    3. ' a' → logprob: -6.323657989501953
    4. 'a' → logprob: -6.573657989501953
    5. '2' → logprob: -7.948657989501953
    6. '3' → logprob: -9.448657989501953
    7. 'li' → logprob: -10.948657989501953
    8. ' (' → logprob: -11.073657989501953
    9. ' i' → logprob: -11.698657989501953
    10. 'i' → logprob: -11.948657989501953

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003753051860257983
    2. 'a' → logprob: -5.878753185272217
    3. '2' → logprob: -7.753753185272217
    4. ' ' → logprob: -8.503752708435059
    5. '(a' → logprob: -9.378752708435059
    6. '3' → logprob: -9.503752708435059
    7. 'i' → logprob: -9.753752708435059
    8. '(' → logprob: -10.378752708435059
    9. 'li' → logprob: -10.503752708435059
    10. ' a' → logprob: -11.628752708435059

Token 86: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4904985725879669
    2. '
' → logprob: -1.7404985427856445
    3. '   ' → logprob: -1.9904985427856445
    4. '    
' → logprob: -3.3654985427856445
    5. '\' → logprob: -4.2404985427856445
    6. ' 
' → logprob: -4.7404985427856445
    7. '  
' → logprob: -4.8654985427856445
    8. '   
' → logprob: -5.7404985427856445
    9. 'i' → logprob: -6.3654985427856445
    10. '       ' → logprob: -6.7404985427856445

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6416946649551392
    2. '
' → logprob: -1.2666946649551392
    3. '\n' → logprob: -2.7666945457458496
    4. '    
' → logprob: -3.0166945457458496
    5. '  
' → logprob: -4.14169454574585
    6. ' ' → logprob: -4.14169454574585
    7. ' 
' → logprob: -4.26669454574585
    8. '       ' → logprob: -4.76669454574585
    9. 'i' → logprob: -5.01669454574585
    10. '   
' → logprob: -5.26669454574585

Token 88: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.82462078332901
    2. 'i' → logprob: -1.3246207237243652
    3. '\n' → logprob: -1.4496207237243652
    4. ' i' → logprob: -3.5746207237243652
    5. '    
' → logprob: -4.574620723724365
    6. ' 
' → logprob: -4.949620723724365
    7. '	i' → logprob: -5.074620723724365
    8. '  
' → logprob: -5.949620723724365
    9. '\' → logprob: -6.574620723724365
    10. ' ' → logprob: -7.074620723724365

Token 89: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0016220991965383291
    2. '(' → logprob: -7.501622200012207
    3. ' ' → logprob: -8.126622200012207
    4. '(a' → logprob: -8.251622200012207
    5. ' not' → logprob: -8.501622200012207
    6. ' a' → logprob: -9.126622200012207
    7. 'a' → logprob: -9.501622200012207
    8. ' ((' → logprob: -10.501622200012207
    9. '<|end|>' → logprob: -10.501622200012207
    10. ' ' → logprob: -11.251622200012207

Token 90: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14265571534633636
    2. '(a' → logprob: -2.392655611038208
    3. ' (' → logprob: -3.267655611038208
    4. ' a' → logprob: -5.767655849456787
    5. '(' → logprob: -9.017655372619629
    6. 'li' → logprob: -9.517655372619629
    7. 'i' → logprob: -9.642655372619629
    8. ')' → logprob: -10.517655372619629
    9. '(li' → logprob: -11.392655372619629
    10. '(i' → logprob: -11.517655372619629

Token 91: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07155212014913559
    2. '2' → logprob: -2.821552038192749
    3. '3' → logprob: -4.696552276611328
    4. '[i' → logprob: -8.571552276611328
    5. '[' → logprob: -9.696552276611328
    6. ' ' → logprob: -9.946552276611328
    7. '[a' → logprob: -11.259052276611328
    8. ' <' → logprob: -11.446552276611328
    9. '   ' → logprob: -11.509052276611328
    10. ')' → logprob: -12.134052276611328

Token 92: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.23800572752952576
    2. ' >' → logprob: -1.9880057573318481
    3. '<' → logprob: -2.9880056381225586
    4. '>' → logprob: -3.8630056381225586
    5. ')' → logprob: -6.238005638122559
    6. ' ' → logprob: -6.863005638122559
    7. ' )' → logprob: -8.363005638122559
    8. ' <=' → logprob: -8.988005638122559
    9. '<=' → logprob: -10.863005638122559
    10. ' ' → logprob: -11.550505638122559

Token 93: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.11655443161725998
    2. 'a' → logprob: -2.2415544986724854
    3. ' ' → logprob: -5.741554260253906
    4. ')' → logprob: -7.866554260253906
    5. ' li' → logprob: -10.616554260253906
    6. 'li' → logprob: -10.616554260253906
    7. ' (' → logprob: -10.991554260253906
    8. '  ' → logprob: -11.991554260253906
    9. ')a' → logprob: -11.991554260253906
    10. '(a' → logprob: -12.116554260253906

Token 94: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13516585528850555
    2. 'a' → logprob: -2.1351659297943115
    3. ' a' → logprob: -5.385165691375732
    4. ' ' → logprob: -5.635165691375732
    5. '1' → logprob: -10.63516616821289
    6. '_' → logprob: -11.51016616821289
    7. 'i' → logprob: -11.88516616821289
    8. 'b' → logprob: -13.51016616821289
    9. ')' → logprob: -13.76016616821289
    10. '_a' → logprob: -13.76016616821289

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003181994194164872
    2. ' )' → logprob: -5.7531819343566895
    3. '>' → logprob: -13.128182411193848
    4. 'and' → logprob: -14.628182411193848
    5. ' and' → logprob: -14.753182411193848
    6. ')&' → logprob: -15.378182411193848
    7. '):' → logprob: -15.503182411193848
    8. '`)' → logprob: -15.878182411193848
    9. ' ' → logprob: -16.00318145751953
    10. '>)' → logprob: -16.00318145751953

Token 96: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.008711130358278751
    2. '&' → logprob: -4.883711338043213
    3. ' and' → logprob: -7.383711338043213
    4. ')' → logprob: -7.883711338043213
    5. ' ' → logprob: -10.133710861206055
    6. 'and' → logprob: -10.133710861206055
    7. ' &)' → logprob: -11.508710861206055
    8. ' &
' → logprob: -12.258710861206055
    9. ' )' → logprob: -12.383710861206055
    10. '>' → logprob: -12.633710861206055

Token 97: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.000936951139010489
    2. '(a' → logprob: -7.000936985015869
    3. '(' → logprob: -11.125936508178711
    4. '(n' → logprob: -12.625936508178711
    5. ' ' → logprob: -12.750936508178711
    6. '<|end|>' → logprob: -14.375936508178711
    7. ' ' → logprob: -14.500936508178711
    8. '(s' → logprob: -14.500936508178711
    9. '&' → logprob: -15.000936508178711
    10. ' a' → logprob: -15.250936508178711

Token 98: 'a' (ID: 64)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4592150151729584
    2. ' (' → logprob: -1.4592150449752808
    3. 'a' → logprob: -2.459214925765991
    4. '(a' → logprob: -3.084214925765991
    5. ' ' → logprob: -6.45921516418457
    6. ')' → logprob: -6.70921516418457
    7. '(' → logprob: -7.20921516418457
    8. '2' → logprob: -8.45921516418457
    9. '3' → logprob: -8.95921516418457
    10. ' ' → logprob: -9.45921516418457

Token 99: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006840880028903484
    2. '3' → logprob: -5.006840705871582
    3. '2' → logprob: -9.256840705871582
    4. 's' → logprob: -11.381840705871582
    5. ')' → logprob: -12.006840705871582
    6. ' ' → logprob: -12.381840705871582
    7. '```' → logprob: -13.131840705871582
    8. 'i' → logprob: -14.444340705871582
    9. '+' → logprob: -14.506840705871582
    10. '#' → logprob: -14.881840705871582

Token 100: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12116987258195877
    2. ' >' → logprob: -2.3711698055267334
    3. '<' → logprob: -4.3711700439453125
    4. '>' → logprob: -4.8711700439453125
    5. ')' → logprob: -7.8711700439453125
    6. ' ' → logprob: -10.371170043945312
    7. ' ' → logprob: -11.871170043945312
    8. '<|end|>' → logprob: -12.246170043945312
    9. ')<' → logprob: -12.496170043945312
    10. ' )' → logprob: -12.496170043945312

Token 101: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11283306032419205
    2. ' a' → logprob: -2.237833023071289
    3. 'li' → logprob: -12.487833023071289
    4. ' ' → logprob: -12.987833023071289
    5. '	a' → logprob: -13.112833023071289
    6. ')a' → logprob: -14.487833023071289
    7. '>a' → logprob: -14.862833023071289
    8. ')' → logprob: -14.862833023071289
    9. 'ai' → logprob: -14.987833023071289
    10. '   ' → logprob: -15.737833023071289

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -12.00001335144043
    3. 'a' → logprob: -12.25001335144043
    4. '3' → logprob: -13.87501335144043
    5. '<|end|>' → logprob: -14.37501335144043
    6. '   ' → logprob: -15.50001335144043
    7. 'li' → logprob: -15.62501335144043
    8. 'n' → logprob: -16.75001335144043
    9. 'i' → logprob: -16.87501335144043
    10. ' a' → logprob: -17.12501335144043

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016983913956210017
    2. '):
' → logprob: -6.5016984939575195
    3. ')' → logprob: -8.87669849395752
    4. ':' → logprob: -10.00169849395752
    5. ' ):' → logprob: -11.62669849395752
    6. '   ' → logprob: -14.12669849395752
    7. '):
' → logprob: -14.25169849395752
    8. '):

' → logprob: -14.62669849395752
    9. ':
' → logprob: -16.751697540283203
    10. ''):' → logprob: -16.751697540283203

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021343545988202095
    2. '   ' → logprob: -4.02134370803833
    3. '    ' → logprob: -6.52134370803833
    4. ' i' → logprob: -7.52134370803833
    5. ' ' → logprob: -7.89634370803833
    6. 'i' → logprob: -8.271343231201172
    7. ':' → logprob: -8.771343231201172
    8. '+' → logprob: -9.646343231201172
    9. ' :' → logprob: -9.646343231201172
    10. '```' → logprob: -9.771343231201172

Token 105: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.12771978974342346
    2. 'ans' (adapté à ' ans') → logprob: -2.1277198791503906
    3. '   ' → logprob: -7.627719879150391
    4. 'i' → logprob: -9.00271987915039
    5. ' i' → logprob: -9.37771987915039
    6. '	ans' → logprob: -9.62771987915039
    7. '       ' → logprob: -11.00271987915039
    8. '(ans' → logprob: -12.25271987915039
    9. '    ' → logprob: -12.75271987915039
    10. ' ' → logprob: -13.37771987915039

Token 106: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01375935971736908
    2. '+=' → logprob: -4.388759136199951
    3. '+' → logprob: -6.763759136199951
    4. ' +' → logprob: -9.38875961303711
    5. '<|end|>' → logprob: -12.13875961303711
    6. ' ' → logprob: -13.88875961303711
    7. '+='' → logprob: -14.26375961303711
    8. '=' → logprob: -14.38875961303711
    9. '+="' → logprob: -14.76375961303711
    10. '    ' → logprob: -14.88875961303711

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20141392946243286
    2. ' ' → logprob: -1.701413869857788
    3. '   ' → logprob: -15.076414108276367
    4. ' ' → logprob: -15.826414108276367
    5. '0' → logprob: -16.451414108276367
    6. '１' → logprob: -17.701414108276367
    7. '2' → logprob: -17.701414108276367
    8. '	' → logprob: -17.951414108276367
    9. '<|end|>' → logprob: -17.951414108276367
    10. '    ' → logprob: -18.076414108276367

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '１' → logprob: -19.750003814697266
    4. '0' → logprob: -20.250003814697266
    5. '   ' → logprob: -20.250003814697266
    6. '2' → logprob: -20.500003814697266
    7. '+' → logprob: -20.625003814697266
    8. '<|end|>' → logprob: -21.062503814697266
    9. '  ' → logprob: -21.125003814697266
    10. '۱' → logprob: -21.187503814697266

Token 109: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12253420799970627
    2. '\n' → logprob: -2.7475342750549316
    3. '   ' → logprob: -3.1225342750549316
    4. '  
' → logprob: -5.997534275054932
    5. '    
' → logprob: -6.122534275054932
    6. '```' → logprob: -6.997534275054932
    7. ' 
' → logprob: -7.997534275054932
    8. 'n' → logprob: -8.122533798217773
    9. '   
' → logprob: -8.622533798217773
    10. '
' → logprob: -8.622533798217773

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024212200194597244
    2. 'i' → logprob: -3.774212121963501
    3. ' i' → logprob: -7.14921236038208
    4. '    
' → logprob: -9.524211883544922
    5. '
' → logprob: -10.274211883544922
    6. '```' → logprob: -10.399211883544922
    7. '	i' → logprob: -10.524211883544922
    8. ' ' → logprob: -12.524211883544922
    9. ' 
' → logprob: -12.774211883544922
    10. '       ' → logprob: -13.524211883544922

Token 111: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.44307827949523926
    2. '   ' → logprob: -1.1930782794952393
    3. ' i' → logprob: -2.9430782794952393
    4. ' ' → logprob: -7.31807804107666
    5. ' 
' → logprob: -7.94307804107666
    6. '    
' → logprob: -8.19307804107666
    7. '	i' → logprob: -9.06807804107666
    8. '```' → logprob: -9.06807804107666
    9. '\n' → logprob: -9.56807804107666
    10. '
' → logprob: -9.69307804107666

Token 112: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16253426671028137
    2. '+=' → logprob: -2.287534236907959
    3. ' +=' → logprob: -3.037534236907959
    4. '=' → logprob: -8.162534713745117
    5. '<|end|>' → logprob: -9.037534713745117
    6. ' +' → logprob: -9.537534713745117
    7. '+='' → logprob: -10.787534713745117
    8. '+="' → logprob: -10.912534713745117
    9. ')' → logprob: -11.662534713745117
    10. ' ' → logprob: -12.037534713745117

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002986392646562308
    2. ' ' → logprob: -8.125298500061035
    3. '3' → logprob: -13.125298500061035
    4. '2' → logprob: -14.625298500061035
    5. '   ' → logprob: -15.875298500061035
    6. '4' → logprob: -17.62529945373535
    7. '```' → logprob: -18.12529945373535
    8. '  ' → logprob: -18.31279945373535
    9. '１' → logprob: -18.43779945373535
    10. ' ' → logprob: -19.31279945373535

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. '3' → logprob: -12.250011444091797
    3. '2' → logprob: -12.500011444091797
    4. ' ' → logprob: -12.875011444091797
    5. '１' → logprob: -16.875011444091797
    6. '```' → logprob: -17.125011444091797
    7. '   ' → logprob: -17.437511444091797
    8. '4' → logprob: -18.687511444091797
    9. '
' → logprob: -18.750011444091797
    10. '11' → logprob: -18.937511444091797

Token 115: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21202413737773895
    2. '
' → logprob: -1.9620240926742554
    3. '\n' → logprob: -3.087024211883545
    4. '<|end|>' → logprob: -6.212024211883545
    5. '```' → logprob: -7.337024211883545
    6. ' print' → logprob: -7.712024211883545
    7. ' 
' → logprob: -7.837024211883545
    8. '  
' → logprob: -8.087023735046387
    9. 'newline' → logprob: -8.587023735046387
    10. '#' → logprob: -8.837023735046387

Token 116: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009983435273170471
    2. '
' → logprob: -4.634983539581299
    3. '\n' → logprob: -9.25998306274414
    4. ' print' → logprob: -9.50998306274414
    5. ' 
' → logprob: -11.13498306274414
    6. '
' → logprob: -11.50998306274414
    7. '  
' → logprob: -11.88498306274414
    8. '\' → logprob: -12.00998306274414
    9. ')' → logprob: -12.38498306274414
    10. ')
' → logprob: -12.75998306274414

Token 117: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20160961151123047
    2. '(ans' → logprob: -1.7016096115112305
    3. '('' → logprob: -8.82660961151123
    4. '()' → logprob: -10.95160961151123
    5. '("("' → logprob: -11.07660961151123
    6. '("' → logprob: -11.95160961151123
    7. ' (' → logprob: -12.32660961151123
    8. '(len' → logprob: -13.32660961151123
    9. '((' → logprob: -13.57660961151123
    10. '(`' → logprob: -14.82660961151123

Token 118: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.375000953674316
    3. ')`' → logprob: -16.125
    4. '))' → logprob: -17.0
    5. ')
' → logprob: -17.625
    6. '()' → logprob: -18.625
    7. '')' → logprob: -19.125
    8. '）' → logprob: -19.125
    9. ')}' → logprob: -19.25
    10. '`)' → logprob: -19.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 116
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 96
Précision stricte (1ère position): 44.83%
Précision adaptée (1ère position): 46.55%
Précision (top 10): 82.76%
================================================================================
