================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    """
    Lit les entrées standard pour obtenir la taille de la séquence et la séquence elle-même.

    Returns:
        tuple: Un entier N représentant la taille de la séquence,
               et une liste C de N entiers représentant la séquence.
    """
    N = int(input())
    C = [int(input()) for _ in range(N)]
    return N, C

def initialize_dp_arrays(N, max_C):
    """
    Initialise les tableaux nécessaires pour le calcul dynamique.

    Args:
        N (int): Taille de la séquence.
        max_C (int): Valeur maximale parmi les éléments de la séquence C.

    Returns:
        tuple: 
            dp (list): Tableau pour stocker le nombre de façons d'atteindre chaque position.
            r (list): Tableau pour stocker le prochain indice valide pour chaque position.
            prev (list): Tableau pour stocker le dernier indice où chaque valeur C[i] est apparue.
    """
    dp = [0 for _ in range(N)]   # Nombre de façons d'arriver à chaque index
    dp[0] = 1                   # Il y a une seule façon d'être au début
    r = [-1 for _ in range(N)]   # Pour chaque position, stocke le prochain indice valide (initialisé à -1)
    prev = [-1 for _ in range(max_C + 1)] # Dernière occurrence de chaque valeur de C
    return dp, r, prev

def build_next_indices(N, C, r, prev):
    """
    Remplit le tableau r où, pour chaque position, on stocke l'indice du prochain
    même nombre (C[i]) qui n'est pas consécutif.

    Args:
        N (int): Taille de la séquence.
        C (list): Séquence des valeurs.
        r (list): Tableau à remplir avec les indices suivants valides.
        prev (list): Tableau maintenant la dernière position connue pour chaque valeur.
    """
    for i in range(N):
        # Si la valeur C[i] est déjà apparue et pas à la position précédente,
        # alors on met à jour r à la dernière position où elle est apparue.
        if prev[C[i]] != -1 and prev[C[i]] + 1 != i:
            r[prev[C[i]]] = i
        # On met à jour la dernière occurrence de C[i]
        prev[C[i]] = i

def compute_dp(N, r, dp, MOD):
    """
    Calcule dynamiquement, pour chaque position, le nombre de façons d'y arriver, 
    avec la contrainte que deux mêmes couleurs non consécutives autorisent une transition directe.

    Args:
        N (int): Taille de la séquence.
        r (list): Tableau des indices suivants valides.
        dp (list): Tableau des nombres de façons (modifié sur place).
        MOD (int): Modulo pour éviter les débordements.

    Returns:
        list: Tableau dp mis à jour.
    """
    for i in range(N - 1):
        # Si un saut non consécutif est possible vers r[i], on additionne le nombre de façons
        if r[i] != -1:
            dp[r[i]] += dp[i]
            dp[r[i]] %= MOD
        # Ajoute le nombre de façons d'arriver à i pour arriver à i + 1 (prochain élément consécutif)
        dp[i + 1] += dp[i]
        dp[i + 1] %= MOD
    return dp

def main():
    """
    Fonction principale pour résoudre le problème :
    Compte le nombre de façons d'atteindre la fin de la séquence en autorisant à chaque étape :
    - de continuer à l'élément suivant;
    - de "sauter" à un élément de même valeur non consécutif.
    Toutes les réponses sont calculées modulo 10**9 + 7.
    """
    MOD = 10**9 + 7

    # Lecture de l'entrée utilisateur
    N, C = read_input()

    # Initialisation des tableaux
    dp, r, prev = initialize_dp_arrays(N, max(C))

    # Construction du tableau d'indices de saut possible
    build_next_indices(N, C, r, prev)

    # Calcul dynamique des manières d'atteindre chaque position
    dp = compute_dp(N, r, dp, MOD)

    # Affichage du résultat final modulo MOD
    print(dp[N-1] % MOD)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9125446677207947
    2. '\' → logprob: -1.2875447273254395
    3. '\n' → logprob: -1.4125447273254395
    4. '   ' → logprob: -3.1625447273254395
    5. '    
' → logprob: -4.9125447273254395
    6. '
' → logprob: -5.1625447273254395
    7. ' 
' → logprob: -5.6625447273254395
    8. '``' → logprob: -5.7875447273254395
    9. ':' → logprob: -6.1625447273254395
    10. ''\' → logprob: -6.6625447273254395

Token 5: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44253385066986084
    2. '```' → logprob: -2.0675339698791504
    3. 'return' → logprob: -2.6925339698791504
    4. '    ' → logprob: -3.3175339698791504
    5. 'input' → logprob: -3.5675339698791504
    6. 'r' → logprob: -3.5675339698791504
    7. '\' → logprob: -4.19253396987915
    8. 'x' → logprob: -4.31753396987915
    9. '       ' → logprob: -4.69253396987915
    10. '`' → logprob: -5.19253396987915

Token 6: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.028692428022623062
    2. '   ' → logprob: -4.653692245483398
    3. 'Reads' → logprob: -5.028692245483398
    4. '""' → logprob: -5.278692245483398
    5. 'Read' → logprob: -6.028692245483398
    6. ' reads' → logprob: -6.903692245483398
    7. '```' → logprob: -6.903692245483398
    8. ''''' → logprob: -7.028692245483398
    9. ' """' → logprob: -7.903692245483398
    10. 'Returns' → logprob: -8.278692245483398

Token 7: ' Lit' (ID: 45595)
  Prédit: 'Read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Read' → logprob: -0.5504397749900818
    2. 'Reads' → logprob: -1.1754398345947266
    3. '"""' → logprob: -2.8004398345947266
    4. '   ' → logprob: -3.6754398345947266
    5. '       ' → logprob: -5.425439834594727
    6. 'Get' → logprob: -5.425439834594727
    7. 'Accept' → logprob: -6.175439834594727
    8. 'Receive' → logprob: -6.425439834594727
    9. 'reads' → logprob: -6.425439834594727
    10. ' reads' → logprob: -6.550439834594727

Token 8: ' les' (ID: 1341)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9673304557800293
    2. 'er' → logprob: -1.7173304557800293
    3. ' les' → logprob: -1.9673304557800293
    4. ' e' → logprob: -2.7173304557800293
    5. '   ' → logprob: -2.9673304557800293
    6. ' ' → logprob: -3.3423304557800293
    7. ' input' → logprob: -3.5923304557800293
    8. ' le' → logprob: -3.7173304557800293
    9. ' inputs' → logprob: -3.7173304557800293
    10. ' une' → logprob: -4.717330455780029

Token 9: ' entr' (ID: 7072)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2903877794742584
    2. ' données' → logprob: -1.540387749671936
    3. '   ' → logprob: -4.6653876304626465
    4. ' ' → logprob: -4.6653876304626465
    5. ' lignes' → logprob: -5.0403876304626465
    6. 'l' → logprob: -5.6653876304626465
    7. ' entr' → logprob: -5.9153876304626465
    8. 'don' → logprob: -6.6653876304626465
    9. ' caractères' → logprob: -6.7903876304626465
    10. 'entrée' → logprob: -7.0403876304626465

Token 10: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.010055077262222767
    2. 'ée' → logprob: -4.635055065155029
    3. 'é' → logprob: -8.260055541992188
    4. 'és' → logprob: -10.760055541992188
    5. 'ees' → logprob: -11.260055541992188
    6. 'ê' → logprob: -13.385055541992188
    7. '   ' → logprob: -14.010055541992188
    8. '�' → logprob: -14.010055541992188
    9. 'es' → logprob: -14.135055541992188
    10. 'e' → logprob: -14.760055541992188

Token 11: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20084409415721893
    2. ' du' → logprob: -2.5758440494537354
    3. ' de' → logprob: -3.0758440494537354
    4. '    ' → logprob: -4.2008442878723145
    5. ' et' → logprob: -4.8258442878723145
    6. '```' → logprob: -4.9508442878723145
    7. ' ' → logprob: -5.2008442878723145
    8. ' en' → logprob: -5.3258442878723145
    9. 'def' → logprob: -5.7008442878723145
    10. ' d' → logprob: -6.2008442878723145

Token 12: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02744721621274948
    2. '\n' → logprob: -4.02744722366333
    3. '.' → logprob: -6.40244722366333
    4. '    ' → logprob: -6.52744722366333
    5. ' en' → logprob: -6.90244722366333
    6. ',' → logprob: -7.40244722366333
    7. '"""' → logprob: -7.52744722366333
    8. ' ' → logprob: -7.77744722366333
    9. '```' → logprob: -7.77744722366333
    10. ' et' → logprob: -7.77744722366333

Token 13: ' obtenir' (ID: 54423)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.864875853061676
    2. '   ' → logprob: -0.989875853061676
    3. ' la' → logprob: -2.7398757934570312
    4. ' recevoir' → logprob: -2.9898757934570312
    5. ' des' → logprob: -3.9898757934570312
    6. ' récupérer' → logprob: -4.114875793457031
    7. 'l' → logprob: -4.614875793457031
    8. ' les' → logprob: -4.989875793457031
    9. ' continuer' → logprob: -5.364875793457031
    10. '```' → logprob: -5.489875793457031

Token 14: ' la' (ID: 557)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.2545074224472046
    2. ' les' → logprob: -1.3795074224472046
    3. ' la' → logprob: -1.3795074224472046
    4. 'les' → logprob: -3.004507541656494
    5. 'le' → logprob: -3.379507541656494
    6. ' le' → logprob: -3.504507541656494
    7. ' une' → logprob: -3.629507541656494
    8. 'la' → logprob: -4.004507541656494
    9. 'des' → logprob: -4.004507541656494
    10. '   ' → logprob: -4.629507541656494

Token 15: ' taille' (ID: 41644)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.7276604175567627
    2. ' valeur' → logprob: -1.7276604175567627
    3. 's' → logprob: -2.8526604175567627
    4. ' prochaine' → logprob: -2.9776604175567627
    5. 'chaine' → logprob: -3.1026604175567627
    6. ' chaine' → logprob: -3.3526604175567627
    7. ' phrase' → logprob: -3.6026604175567627
    8. ' suite' → logprob: -3.9776604175567627
    9. ' ligne' → logprob: -4.227660179138184
    10. ' donnée' → logprob: -4.727660179138184

Token 16: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1523423194885254
    2. ' de' → logprob: -1.1523423194885254
    3. ' des' → logprob: -1.9023423194885254
    4. ' du' → logprob: -1.9023423194885254
    5. ' d' → logprob: -3.9023423194885254
    6. ' ' → logprob: -4.402342319488525
    7. 's' → logprob: -4.777342319488525
    8. ' et' → logprob: -4.902342319488525
    9. ' ,' → logprob: -5.402342319488525
    10. '    ' → logprob: -5.777342319488525

Token 17: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6677653193473816
    2. 'l' → logprob: -1.0427653789520264
    3. ' l' → logprob: -2.6677653789520264
    4. 'la' → logprob: -2.9177653789520264
    5. ' ' → logprob: -4.792765140533447
    6. 's' → logprob: -7.167765140533447
    7. ' chaque' → logprob: -7.917765140533447
    8. ' tableau' → logprob: -8.292765617370605
    9. ' the' → logprob: -8.667765617370605
    10. '   ' → logprob: -9.042765617370605

Token 18: ' sé' (ID: 7462)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.8901828527450562
    2. '   ' → logprob: -2.1401829719543457
    3. 'mat' → logprob: -2.1401829719543457
    4. ' grille' → logprob: -2.5151829719543457
    5. 'chaine' → logprob: -2.8901829719543457
    6. 'liste' → logprob: -3.0151829719543457
    7. 'fen' → logprob: -3.0151829719543457
    8. 'zone' → logprob: -3.7651829719543457
    9. ' matr' → logprob: -3.7651829719543457
    10. ' chaîne' → logprob: -4.140182971954346

Token 19: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.13798391819000244
    2. 'q' → logprob: -2.137983798980713
    3. 'qu' → logprob: -4.762983798980713
    4. 'rie' → logprob: -6.637983798980713
    5. 'r' → logprob: -7.387983798980713
    6. 'que' → logprob: -9.137984275817871
    7. '   ' → logprob: -9.137984275817871
    8. '#' → logprob: -9.887984275817871
    9. '\' → logprob: -10.387984275817871
    10. '_' → logprob: -10.887984275817871

Token 20: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029778262600302696
    2. '\n' → logprob: -5.279778480529785
    3. ' ' → logprob: -5.654778480529785
    4. ',' → logprob: -5.779778480529785
    5. '`' → logprob: -6.029778480529785
    6. 's' → logprob: -6.154778480529785
    7. '.' → logprob: -6.279778480529785
    8. '       ' → logprob: -6.404778480529785
    9. '\' → logprob: -6.654778480529785
    10. ''' → logprob: -6.654778480529785

Token 21: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2920576333999634
    2. '   ' → logprob: -2.167057514190674
    3. ' les' → logprob: -2.667057514190674
    4. ' le' → logprob: -3.167057514190674
    5. ' retourner' → logprob: -5.042057514190674
    6. ' retourne' → logprob: -5.542057514190674
    7. ' return' → logprob: -5.917057514190674
    8. '\n' → logprob: -6.167057514190674
    9. 'return' → logprob: -6.417057514190674
    10. ' un' → logprob: -6.667057514190674

Token 22: ' sé' (ID: 7462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1615687608718872
    2. ' ' → logprob: -1.1615687608718872
    3. 'n' → logprob: -1.9115687608718872
    4. '   ' → logprob: -2.5365686416625977
    5. 'l' → logprob: -3.0365686416625977
    6. ''' → logprob: -4.161568641662598
    7. 'd' → logprob: -5.036568641662598
    8. '`' → logprob: -5.411568641662598
    9. 'val' → logprob: -5.536568641662598
    10. 'e' → logprob: -5.661568641662598

Token 23: 'quence' (ID: 6975)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.11741318553686142
    2. 'quence' → logprob: -2.242413282394409
    3. 'quences' → logprob: -5.86741304397583
    4. 'qu' → logprob: -7.49241304397583
    5. 'u' → logprob: -7.99241304397583
    6. '#' → logprob: -8.242413520812988
    7. 'n' → logprob: -9.242413520812988
    8. 'v' → logprob: -9.617413520812988
    9. 'c' → logprob: -9.617413520812988
    10. '   ' → logprob: -9.992413520812988

Token 24: ' elle' (ID: 11451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6566505432128906
    2. '\n' → logprob: -1.1566505432128906
    3. ' ' → logprob: -3.6566505432128906
    4. '```' → logprob: -3.7816505432128906
    5. '    
' → logprob: -4.281650543212891
    6. ',' → logprob: -4.531650543212891
    7. 'n' → logprob: -4.531650543212891
    8. '\' → logprob: -4.656650543212891
    9. ' 
' → logprob: -4.656650543212891
    10. '.' → logprob: -4.906650543212891

Token 25: '-même' (ID: 41085)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40922462940216064
    2. '-' → logprob: -2.659224510192871
    3. '```' → logprob: -3.034224510192871
    4. 'm' → logprob: -3.284224510192871
    5. '.' → logprob: -3.284224510192871
    6. '\' → logprob: -3.409224510192871
    7. '\n' → logprob: -3.659224510192871
    8. '_' → logprob: -4.034224510192871
    9. '`' → logprob: -4.284224510192871
    10. '-même' → logprob: -4.284224510192871

Token 26: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057149212807416916
    2. '\n' → logprob: -3.5571491718292236
    3. '
' → logprob: -4.432149410247803
    4. '    
' → logprob: -4.432149410247803
    5. '```' → logprob: -6.932149410247803
    6. '   
' → logprob: -7.932149410247803
    7. '  
' → logprob: -7.932149410247803
    8. '.' → logprob: -8.182148933410645
    9. '"""
' → logprob: -8.432148933410645
    10. '\' → logprob: -8.807148933410645

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004997743526473641
    2. '"""' → logprob: -8.500499725341797
    3. '```' → logprob: -9.000499725341797
    4. '    ' → logprob: -9.375499725341797
    5. '"""
' → logprob: -11.000499725341797
    6. '       ' → logprob: -11.125499725341797
    7. '    
' → logprob: -11.500499725341797
    8. 'r' → logprob: -12.000499725341797
    9. ' ' → logprob: -12.000499725341797
    10. '  ' → logprob: -12.375499725341797

Token 28: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045462507754564285
    2. '```' → logprob: -3.6704626083374023
    3. '"""' → logprob: -5.170462608337402
    4. '"""
' → logprob: -5.420462608337402
    5. 'return' → logprob: -5.920462608337402
    6. 'n' → logprob: -6.170462608337402
    7. '       ' → logprob: -7.420462608337402
    8. 'r' → logprob: -7.545462608337402
    9. '""' → logprob: -7.670462608337402
    10. '``' → logprob: -8.045462608337402

Token 29: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16395913064479828
    2. ' :' → logprob: -3.03895902633667
    3. '    ' → logprob: -3.66395902633667
    4. ')' → logprob: -4.28895902633667
    5. ' )' → logprob: -4.41395902633667
    6. ' ,' → logprob: -4.78895902633667
    7. ':' → logprob: -5.03895902633667
    8. ',' → logprob: -5.16395902633667
    9. ' ):' → logprob: -5.16395902633667
    10. '):' → logprob: -5.28895902633667

Token 30: '       ' (ID: 309)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.2841506600379944
    2. '   ' → logprob: -2.0341506004333496
    3. ' int' → logprob: -2.9091506004333496
    4. ' Tuple' → logprob: -3.4091506004333496
    5. 'int' → logprob: -4.78415060043335
    6. '    ' → logprob: -5.03415060043335
    7. 'tuple' → logprob: -5.03415060043335
    8. '       ' → logprob: -5.40915060043335
    9. 'Tuple' → logprob: -6.40915060043335
    10. '```' → logprob: -7.78415060043335

Token 31: ' tuple' (ID: 31311)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5929417610168457
    2. 'tuple' (adapté à ' tuple') → logprob: -1.2179417610168457
    3. ' tuple' → logprob: -2.2179417610168457
    4. '   ' → logprob: -3.9679417610168457
    5. 'Tuple' → logprob: -4.467941761016846
    6. ' int' → logprob: -4.717941761016846
    7. 'size' → logprob: -7.092941761016846
    8. ' Tuple' → logprob: -7.467941761016846
    9. '```' → logprob: -7.717941761016846
    10. 'sequence' → logprob: -7.967941761016846

Token 32: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0012569427490234
    2. '[int' → logprob: -1.6262569427490234
    3. ' (' → logprob: -1.7512569427490234
    4. '(' → logprob: -2.2512569427490234
    5. '(int' → logprob: -2.3762569427490234
    6. '[' → logprob: -3.7512569427490234
    7. '(tuple' → logprob: -4.751256942749023
    8. '   ' → logprob: -4.751256942749023
    9. '):' → logprob: -5.501256942749023
    10. ' of' → logprob: -5.626256942749023

Token 33: ' Un' (ID: 1367)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0641232430934906
    2. '(int' → logprob: -2.8141231536865234
    3. '(n' → logprob: -6.564123153686523
    4. '(' → logprob: -8.189123153686523
    5. '(size' → logprob: -9.064123153686523
    6. '   ' → logprob: -9.189123153686523
    7. '(tuple' → logprob: -9.439123153686523
    8. ' int' → logprob: -9.689123153686523
    9. 'int' → logprob: -10.939123153686523
    10. '(str' → logprob: -10.939123153686523

Token 34: ' entier' (ID: 80473)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.16098542511463165
    2. ' int' → logprob: -2.2859854698181152
    3. ' espace' → logprob: -3.6609854698181152
    4. ' space' → logprob: -5.660985469818115
    5. ' (' → logprob: -5.660985469818115
    6. 'tuple' → logprob: -5.785985469818115
    7. ' des' → logprob: -6.035985469818115
    8. 'int' → logprob: -6.410985469818115
    9. ' size' → logprob: -7.160985469818115
    10. ' ' → logprob: -7.160985469818115

Token 35: ' N' (ID: 478)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12234413623809814
    2. ' (' → logprob: -2.6223440170288086
    3. ' ,' → logprob: -3.8723440170288086
    4. '(int' → logprob: -4.622344017028809
    5. '(' → logprob: -4.872344017028809
    6. ')' → logprob: -6.997344017028809
    7. '   ' → logprob: -7.122344017028809
    8. '(n' → logprob: -8.247344017028809
    9. ' representing' → logprob: -8.372344017028809
    10. ' (,' → logprob: -8.372344017028809

Token 36: ' représentant' (ID: 136122)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007604343118146062
    2. ' ,' → logprob: -7.625760555267334
    3. ')' → logprob: -9.125760078430176
    4. '(' → logprob: -9.625760078430176
    5. ',
' → logprob: -10.625760078430176
    6. '   ' → logprob: -10.625760078430176
    7. ' (' → logprob: -11.125760078430176
    8. ',int' → logprob: -11.500760078430176
    9. '<|end|>' → logprob: -12.000760078430176
    10. ',)' → logprob: -13.250760078430176

Token 37: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.005791919771581888
    2. 'la' → logprob: -5.255792140960693
    3. ' le' → logprob: -8.255791664123535
    4. ' l' → logprob: -9.005791664123535
    5. 'le' → logprob: -9.380791664123535
    6. '   ' → logprob: -10.255791664123535
    7. 'l' → logprob: -10.380791664123535
    8. ' ' → logprob: -11.380791664123535
    9. ' the' → logprob: -12.130791664123535
    10. 'the' → logprob: -13.130791664123535

Token 38: ' taille' (ID: 41644)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5499346852302551
    2. 'nombre' → logprob: -1.4249346256256104
    3. 'tail' → logprob: -2.1749346256256104
    4. ' taille' → logprob: -3.1749346256256104
    5. ' ' → logprob: -4.2999348640441895
    6. '   ' → logprob: -4.6749348640441895
    7. ' longueur' → logprob: -6.9249348640441895
    8. 't' → logprob: -7.4249348640441895
    9. 'long' → logprob: -7.4249348640441895
    10. '  ' → logprob: -7.6749348640441895

Token 39: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024177057668566704
    2. ' ,' → logprob: -4.899177074432373
    3. ' de' → logprob: -5.149177074432373
    4. ')' → logprob: -5.774177074432373
    5. '   ' → logprob: -6.149177074432373
    6. '(' → logprob: -6.524177074432373
    7. '_' → logprob: -6.524177074432373
    8. ' ' → logprob: -7.024177074432373
    9. '```' → logprob: -8.274176597595215
    10. ',
' → logprob: -8.274176597595215

Token 40: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.01500796340405941
    2. 'la' → logprob: -4.515007972717285
    3. 'l' → logprob: -6.015007972717285
    4. ' ' → logprob: -6.890007972717285
    5. ' l' → logprob: -8.015007972717285
    6. ' the' → logprob: -10.765007972717285
    7. ''' → logprob: -10.765007972717285
    8. '_la' → logprob: -10.765007972717285
    9. 'the' → logprob: -11.015007972717285
    10. 's' → logprob: -11.140007972717285

Token 41: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.4375220239162445
    2. ' sé' → logprob: -1.062522053718567
    3. 's' → logprob: -5.187521934509277
    4. ' sequence' → logprob: -6.687521934509277
    5. 'sequence' → logprob: -6.687521934509277
    6. '_' → logprob: -7.812521934509277
    7. '_s' → logprob: -8.812521934509277
    8. ' ' → logprob: -10.312521934509277
    9. 'sequ' → logprob: -10.562521934509277
    10. '   ' → logprob: -10.937521934509277

Token 42: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -1.1517960956552997e-05
    2. 'q' → logprob: -12.375011444091797
    3. 'QUENCE' → logprob: -12.875011444091797
    4. 'qu' → logprob: -13.125011444091797
    5. 'quences' → logprob: -13.875011444091797
    6. 'rie' → logprob: -14.375011444091797
    7. 'que' → logprob: -14.875011444091797
    8. 'ance' → logprob: -14.875011444091797
    9. '`' → logprob: -16.375011444091797
    10. '#' → logprob: -16.750011444091797

Token 43: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000460935989394784
    2. '   ' → logprob: -8.625460624694824
    3. ',
' → logprob: -8.625460624694824
    4. ')' → logprob: -10.000460624694824
    5. ' ,' → logprob: -11.000460624694824
    6. '(' → logprob: -11.625460624694824
    7. '),' → logprob: -11.750460624694824
    8. '```' → logprob: -12.125460624694824
    9. ',

' → logprob: -12.875460624694824
    10. '       ' → logprob: -12.875460624694824

Token 44: '              ' (ID: 4442)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032771386206150055
    2. ' ,' → logprob: -3.532771348953247
    3. '   ' → logprob: -6.157771587371826
    4. ' ' → logprob: -7.657771587371826
    5. ')' → logprob: -9.282771110534668
    6. ' (' → logprob: -9.782771110534668
    7. ' a' → logprob: -9.907771110534668
    8. '  ' → logprob: -10.407771110534668
    9. '    ' → logprob: -10.657771110534668
    10. '```' → logprob: -10.657771110534668

Token 45: ' et' (ID: 859)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0684179738163948
    2. '   ' → logprob: -3.193418025970459
    3. 'la' → logprob: -4.818418025970459
    4. '    ' → logprob: -5.068418025970459
    5. ' une' → logprob: -5.318418025970459
    6. ',' → logprob: -6.943418025970459
    7. ' et' → logprob: -7.193418025970459
    8. ' ' → logprob: -7.818418025970459
    9. '```' → logprob: -7.943418025970459
    10. 'et' (adapté à ' et') → logprob: -8.0684175491333

Token 46: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.49644309282302856
    2. ' une' → logprob: -0.9964430928230286
    3. ' list' → logprob: -4.621443271636963
    4. '   ' → logprob: -5.996443271636963
    5. ' un' → logprob: -6.246443271636963
    6. ' ' → logprob: -6.496443271636963
    7. '    ' → logprob: -6.996443271636963
    8. 'list' → logprob: -7.121443271636963
    9. ' a' → logprob: -7.246443271636963
    10. ' l' → logprob: -7.496443271636963

Token 47: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.17104528844356537
    2. ' list' → logprob: -2.0460453033447266
    3. 'list' → logprob: -4.296045303344727
    4. 'liste' → logprob: -4.796045303344727
    5. ' ' → logprob: -5.796045303344727
    6. ' ' → logprob: -6.546045303344727
    7. ' sequence' → logprob: -8.296045303344727
    8. ' listes' → logprob: -8.421045303344727
    9. ' space' → logprob: -8.546045303344727
    10. 'space' → logprob: -8.921045303344727

Token 48: ' C' (ID: 363)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41326242685317993
    2. ' des' → logprob: -1.2882623672485352
    3. '[int' → logprob: -4.038262367248535
    4. '<|end|>' → logprob: -4.538262367248535
    5. ' de' → logprob: -4.663262367248535
    6. '[str' → logprob: -4.788262367248535
    7. ' of' → logprob: -5.288262367248535
    8. ' d' → logprob: -5.413262367248535
    9. ' [' → logprob: -6.913262367248535
    10. 'des' → logprob: -7.038262367248535

Token 49: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2306082248687744
    2. '_' → logprob: -1.6056082248687744
    3. ' de' → logprob: -2.2306082248687744
    4. ' des' → logprob: -2.7306082248687744
    5. 'on' → logprob: -2.7306082248687744
    6. ',' → logprob: -2.8556082248687744
    7. 'ont' → logprob: -3.1056082248687744
    8. '   ' → logprob: -3.1056082248687744
    9. '```' → logprob: -3.9806082248687744
    10. ' of' → logprob: -4.355607986450195

Token 50: ' N' (ID: 478)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.806615948677063
    2. ' int' → logprob: -2.0566158294677734
    3. ' caractères' → logprob: -2.1816158294677734
    4. ' la' → logprob: -3.3066158294677734
    5. ' chaînes' → logprob: -3.3066158294677734
    6. 'ints' → logprob: -3.3066158294677734
    7. 'str' → logprob: -3.5566158294677734
    8. ' strings' → logprob: -3.6816158294677734
    9. 'car' → logprob: -3.8066158294677734
    10. ' integers' → logprob: -3.9316158294677734

Token 51: ' ent' (ID: 1121)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.4135022759437561
    2. ' ent' → logprob: -1.5385022163391113
    3. 'élé' → logprob: -3.2885022163391113
    4. ' integers' → logprob: -3.7885022163391113
    5. ' elements' → logprob: -4.038502216339111
    6. 'ent' → logprob: -4.038502216339111
    7. ' int' → logprob: -4.788502216339111
    8. ' ' → logprob: -5.163502216339111
    9. '_ent' → logprob: -6.038502216339111
    10. 'int' → logprob: -6.163502216339111

Token 52: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.012677397578954697
    2. 'i' → logprob: -4.387677192687988
    3. '   ' → logprob: -9.762677192687988
    4. '```' → logprob: -10.012677192687988
    5. 'ières' → logprob: -10.637677192687988
    6. 'ier' → logprob: -10.637677192687988
    7. '       ' → logprob: -12.637677192687988
    8. '_i' → logprob: -13.012677192687988
    9. 'ié' → logprob: -13.137677192687988
    10. ' i' → logprob: -13.512677192687988

Token 53: ' représentant' (ID: 136122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20469102263450623
    2. ')' → logprob: -2.079690933227539
    3. '```' → logprob: -3.454690933227539
    4. '"""' → logprob: -4.954690933227539
    5. '"""
' → logprob: -5.329690933227539
    6. '.' → logprob: -5.829690933227539
    7. ')
' → logprob: -5.829690933227539
    8. '
' → logprob: -5.954690933227539
    9. ',' → logprob: -6.454690933227539
    10. ']' → logprob: -6.829690933227539

Token 54: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.001562596415169537
    2. ' les' → logprob: -7.626562595367432
    3. ' the' → logprob: -8.00156307220459
    4. ' l' → logprob: -9.00156307220459
    5. 's' → logprob: -9.12656307220459
    6. 'la' → logprob: -9.12656307220459
    7. ' ' → logprob: -9.25156307220459
    8. 'the' → logprob: -9.62656307220459
    9. ' ' → logprob: -9.75156307220459
    10. ' le' → logprob: -9.87656307220459

Token 55: ' sé' (ID: 7462)
  Prédit: ' sé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.1899724304676056
    2. 'sé' → logprob: -1.8149724006652832
    3. ' sequence' → logprob: -5.064972400665283
    4. 's' → logprob: -6.564972400665283
    5. 'sequence' → logprob: -7.064972400665283
    6. ' ' → logprob: -7.689972400665283
    7. 'élé' → logprob: -8.439972877502441
    8. '   ' → logprob: -8.939972877502441
    9. 'Sé' → logprob: -10.064972877502441
    10. 'val' → logprob: -10.064972877502441

Token 56: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0002278542669955641
    2. 'quences' → logprob: -8.500227928161621
    3. 'q' → logprob: -11.625227928161621
    4. '   ' → logprob: -12.250227928161621
    5. 'QUENCE' → logprob: -12.375227928161621
    6. 'qu' → logprob: -13.125227928161621
    7. 'que' → logprob: -14.125227928161621
    8. '```' → logprob: -14.125227928161621
    9. '`' → logprob: -14.375227928161621
    10. '
' → logprob: -14.625227928161621

Token 57: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7197621464729309
    2. '   ' → logprob: -0.8447621464729309
    3. ')
' → logprob: -3.344762086868286
    4. '```' → logprob: -4.094762325286865
    5. '"""' → logprob: -4.219762325286865
    6. '"""
' → logprob: -4.344762325286865
    7. '
' → logprob: -7.469762325286865
    8. 'def' → logprob: -7.969762325286865
    9. '       ' → logprob: -8.219761848449707
    10. '.' → logprob: -8.219761848449707

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07662210613489151
    2. '"""' → logprob: -2.8266220092773438
    3. '"""
' → logprob: -4.326622009277344
    4. '```' → logprob: -6.826622009277344
    5. '""' → logprob: -8.826622009277344
    6. '"' → logprob: -10.076622009277344
    7. ')' → logprob: -10.451622009277344
    8. '
' → logprob: -12.201622009277344
    9. '``' → logprob: -12.326622009277344
    10. '    
' → logprob: -12.451622009277344

Token 59: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.48507460951805115
    2. '   ' → logprob: -0.9850746393203735
    3. '"""
' (adapté à ' """
') → logprob: -4.735074520111084
    4. '""' → logprob: -6.985074520111084
    5. '```' → logprob: -7.485074520111084
    6. '\n' → logprob: -8.110074996948242
    7. '"' → logprob: -8.360074996948242
    8. ')' → logprob: -9.610074996948242
    9. ' """' → logprob: -10.985074996948242
    10. ''''' → logprob: -11.860074996948242

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002210596576333046
    2. '```' → logprob: -10.000221252441406
    3. '    
' → logprob: -10.125221252441406
    4. 'n' → logprob: -10.250221252441406
    5. '
' → logprob: -10.500221252441406
    6. '    ' → logprob: -11.125221252441406
    7. '\n' → logprob: -11.250221252441406
    8. 'input' → logprob: -11.375221252441406
    9. 'return' → logprob: -11.875221252441406
    10. '       ' → logprob: -11.875221252441406

Token 61: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9828090071678162
    2. 'N' (adapté à ' N') → logprob: -1.107809066772461
    3. 'n' → logprob: -1.232809066772461
    4. 'input' → logprob: -6.357809066772461
    5. 'import' → logprob: -6.982809066772461
    6. ' N' → logprob: -7.607809066772461
    7. ' n' → logprob: -8.982809066772461
    8. 'try' → logprob: -8.982809066772461
    9. 'data' → logprob: -9.107809066772461
    10. '\n' → logprob: -9.107809066772461

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07236690819263458
    2. '=' → logprob: -2.822366952896118
    3. ',' → logprob: -4.572366714477539
    4. '=int' → logprob: -11.822366714477539
    5. '=input' → logprob: -13.697366714477539
    6. ')' → logprob: -13.822366714477539
    7. ' ,' → logprob: -14.447366714477539
    8. '   ' → logprob: -14.447366714477539
    9. ' ' → logprob: -14.572366714477539
    10. '.' → logprob: -14.822366714477539

Token 63: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0005541055579669774
    2. 'int' → logprob: -7.500554084777832
    3. ' ' → logprob: -13.750554084777832
    4. ' ' → logprob: -17.00055503845215
    5. '=int' → logprob: -17.25055503845215
    6. ' input' → logprob: -17.37555503845215
    7. '	int' → logprob: -17.62555503845215
    8. '   ' → logprob: -17.87555503845215
    9. ' len' → logprob: -18.12555503845215
    10. ' in' → logprob: -19.37555503845215

Token 64: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5759530663490295
    2. '(' → logprob: -0.8259530663490295
    3. 'input' → logprob: -11.575953483581543
    4. '(
' → logprob: -12.700953483581543
    5. ' (' → logprob: -14.700953483581543
    6. '(

' → logprob: -14.950953483581543
    7. ' input' → logprob: -15.700953483581543
    8. '()' → logprob: -16.450952529907227
    9. '(stdin' → logprob: -16.575952529907227
    10. '('' → logprob: -16.950952529907227

Token 65: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3144806921482086
    2. '()' → logprob: -1.3144806623458862
    3. '()))' → logprob: -6.939480781555176
    4. '(' → logprob: -9.314480781555176
    5. ' ())' → logprob: -9.564480781555176
    6. ')' → logprob: -9.814480781555176
    7. '('' → logprob: -12.064480781555176
    8. ' ()' → logprob: -12.064480781555176
    9. '()`' → logprob: -12.689480781555176
    10. '().' → logprob: -12.689480781555176

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0537700653076172
    2. '
' → logprob: -1.5537700653076172
    3. ' C' → logprob: -1.8037700653076172
    4. 'C' → logprob: -2.053770065307617
    5. '    
' → logprob: -2.553770065307617
    6. ' ' → logprob: -4.178770065307617
    7. '\n' → logprob: -4.303770065307617
    8. '   
' → logprob: -4.803770065307617
    9. '```' → logprob: -4.928770065307617
    10. '  
' → logprob: -4.928770065307617

Token 67: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.16092585027217865
    2. ' C' → logprob: -2.28592586517334
    3. '   ' → logprob: -4.03592586517334
    4. '\n' → logprob: -4.28592586517334
    5. '    
' → logprob: -4.78592586517334
    6. '\' → logprob: -6.16092586517334
    7. '
' → logprob: -6.16092586517334
    8. ' 
' → logprob: -7.41092586517334
    9. '```' → logprob: -8.03592586517334
    10. '  
' → logprob: -8.16092586517334

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007642009295523167
    2. '=' → logprob: -4.882641792297363
    3. '.' → logprob: -10.882641792297363
    4. '_' → logprob: -12.382641792297363
    5. '[:]' → logprob: -12.632641792297363
    6. 's' → logprob: -13.132641792297363
    7. '[' → logprob: -13.257641792297363
    8. '[]' → logprob: -13.382641792297363
    9. ' ' → logprob: -14.132641792297363
    10. ')' → logprob: -14.132641792297363

Token 69: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.06877461075782776
    2. 'list' → logprob: -3.068774700164795
    3. ' [' → logprob: -4.068774700164795
    4. '[list' → logprob: -6.068774700164795
    5. '[' → logprob: -7.693774700164795
    6. ' []' → logprob: -10.068774223327637
    7. '[input' → logprob: -10.068774223327637
    8. '[]' → logprob: -10.818774223327637
    9. ' ' → logprob: -12.818774223327637
    10. ' input' → logprob: -13.193774223327637

Token 70: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00026169343618676066
    2. ' int' → logprob: -8.250261306762695
    3. '  ' → logprob: -16.000261306762695
    4. ']int' → logprob: -16.375261306762695
    5. '   ' → logprob: -16.500261306762695
    6. ' ' → logprob: -17.250261306762695
    7. '<int' → logprob: -17.375261306762695
    8. '(int' → logprob: -17.625261306762695
    9. '```' → logprob: -18.250261306762695
    10. '[int' → logprob: -18.500261306762695

Token 71: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4816054403781891
    2. '(input' → logprob: -0.9816054105758667
    3. '()' → logprob: -5.231605529785156
    4. '(x' → logprob: -6.231605529785156
    5. '()]' → logprob: -9.356605529785156
    6. '(i' → logprob: -10.481605529785156
    7. '(
' → logprob: -10.481605529785156
    8. ' (' → logprob: -11.356605529785156
    9. '(

' → logprob: -11.856605529785156
    10. '(s' → logprob: -12.481605529785156

Token 72: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00032962486147880554
    2. '()' → logprob: -8.125329971313477
    3. '()]' → logprob: -10.875329971313477
    4. '())
' → logprob: -12.125329971313477
    5. '()))' → logprob: -12.625329971313477
    6. '()),' → logprob: -13.125329971313477
    7. ' ())' → logprob: -13.500329971313477
    8. ')' → logprob: -13.750329971313477
    9. '()
' → logprob: -14.375329971313477
    10. '().' → logprob: -15.500329971313477

Token 73: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48225533962249756
    2. '())' → logprob: -1.1072553396224976
    3. ')' → logprob: -2.982255458831787
    4. '()]' → logprob: -6.732255458831787
    5. 'for' → logprob: -9.107254981994629
    6. ')]' → logprob: -10.107254981994629
    7. '(' → logprob: -10.357254981994629
    8. ' )' → logprob: -10.857254981994629
    9. ' ()' → logprob: -10.982254981994629
    10. ' ())' → logprob: -11.607254981994629

Token 74: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5777037739753723
    2. ' range' → logprob: -1.3277037143707275
    3. '_' → logprob: -1.8277037143707275
    4. ' ' → logprob: -4.452703952789307
    5. ' i' → logprob: -7.077703952789307
    6. ' in' → logprob: -8.327703475952148
    7. 'range' → logprob: -9.202703475952148
    8. '_range' → logprob: -9.327703475952148
    9. '	range' → logprob: -11.577703475952148
    10. ' xrange' → logprob: -12.702703475952148

Token 75: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023490509018301964
    2. ' range' → logprob: -3.7734904289245605
    3. '_' → logprob: -9.523490905761719
    4. ' ' → logprob: -9.773490905761719
    5. 'rang' → logprob: -10.523490905761719
    6. '  ' → logprob: -10.648490905761719
    7. '	range' → logprob: -11.273490905761719
    8. 'in' → logprob: -11.523490905761719
    9. '   ' → logprob: -11.773490905761719
    10. ' in' → logprob: -11.773490905761719

Token 76: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859066382050514
    2. ' range' → logprob: -3.048590660095215
    3. '	range' → logprob: -13.923590660095215
    4. '(range' → logprob: -14.048590660095215
    5. 'rang' → logprob: -14.548590660095215
    6. ' ' → logprob: -15.173590660095215
    7. '   ' → logprob: -15.173590660095215
    8. ')' → logprob: -15.798590660095215
    9. '  ' → logprob: -16.42359161376953
    10. '_range' → logprob: -16.54859161376953

Token 77: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.009952753782272339
    2. '(' → logprob: -4.634952545166016
    3. ' (' → logprob: -9.259952545166016
    4. 'N' → logprob: -9.884952545166016
    5. ' N' → logprob: -10.259952545166016
    6. '(n' → logprob: -11.509952545166016
    7. ')' → logprob: -13.009952545166016
    8. '()' → logprob: -13.384952545166016
    9. '(
' → logprob: -14.384952545166016
    10. 's' → logprob: -15.259952545166016

Token 78: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00044175516813993454
    2. ')' → logprob: -7.875441551208496
    3. ']' → logprob: -9.750441551208496
    4. ')]
' → logprob: -13.875441551208496
    5. ' )' → logprob: -14.000441551208496
    6. '   ' → logprob: -14.500441551208496
    7. ')])' → logprob: -15.250441551208496
    8. '))' → logprob: -15.500441551208496
    9. '')]' → logprob: -16.625442504882812
    10. '])]' → logprob: -16.875442504882812

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012357308529317379
    2. 'return' → logprob: -4.512357234954834
    3. ' return' → logprob: -7.137357234954834
    4. '	return' → logprob: -8.512357711791992
    5. '    
' → logprob: -9.012357711791992
    6. '
' → logprob: -9.262357711791992
    7. ')' → logprob: -10.887357711791992
    8. '<|end|>' → logprob: -10.887357711791992
    9. ':return' → logprob: -11.137357711791992
    10. ' ' → logprob: -11.887357711791992

Token 80: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16085349023342133
    2. 'return' (adapté à ' return') → logprob: -1.9108535051345825
    3. ' return' → logprob: -7.535853385925293
    4. '	return' → logprob: -10.285853385925293
    5. '    
' → logprob: -10.660853385925293
    6. '
' → logprob: -10.660853385925293
    7. ':return' → logprob: -12.035853385925293
    8. '```' → logprob: -13.285853385925293
    9. '<|end|>' → logprob: -13.285853385925293
    10. '       ' → logprob: -14.035853385925293

Token 81: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5774893760681152
    2. 'N' → logprob: -0.8274893760681152
    3. ' (' → logprob: -6.577489376068115
    4. '(N' → logprob: -9.202489852905273
    5. ' ' → logprob: -10.327489852905273
    6. '(' → logprob: -10.702489852905273
    7. ' ' → logprob: -14.327489852905273
    8. '  ' → logprob: -14.827489852905273
    9. '   ' → logprob: -15.327489852905273
    10. '	N' → logprob: -15.952489852905273

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020973898062948138
    2. ' ,' → logprob: -8.87520980834961
    3. ',C' → logprob: -9.75020980834961
    4. ',N' → logprob: -11.87520980834961
    5. 'C' → logprob: -13.62520980834961
    6. '‌,' → logprob: -13.75020980834961
    7. ',
' → logprob: -13.87520980834961
    8. '<|end|>' → logprob: -15.12520980834961
    9. ' C' → logprob: -15.37520980834961
    10. ' ' → logprob: -16.00020980834961

Token 83: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3133105933666229
    2. ' C' → logprob: -1.3133106231689453
    3. ' ' → logprob: -10.188310623168945
    4. ' ' → logprob: -11.563310623168945
    5. '	C' → logprob: -15.188310623168945
    6. '`' → logprob: -15.313310623168945
    7. '  ' → logprob: -15.313310623168945
    8. '[' → logprob: -15.688310623168945
    9. 'space' → logprob: -16.063310623168945
    10. ' ' → logprob: -16.313310623168945

Token 84: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0160090923309326
    2. '#' → logprob: -1.5160090923309326
    3. '<|end|>' → logprob: -1.5160090923309326
    4. 'def' → logprob: -2.0160090923309326
    5. '```' → logprob: -3.1410090923309326
    6. '' → logprob: -5.141009330749512
    7. 'd' → logprob: -5.266009330749512
    8. '\n' → logprob: -6.266009330749512
    9. ' ' → logprob: -6.516009330749512
    10. '[' → logprob: -6.766009330749512

Token 86: ' initialize' (ID: 18400)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.6556288599967957
    2. ' main' → logprob: -1.9056289196014404
    3. ' calculate' → logprob: -2.0306289196014404
    4. ' compute' → logprob: -3.0306289196014404
    5. ' analyze' → logprob: -3.5306289196014404
    6. ' find' → logprob: -4.030628681182861
    7. ' solve' → logprob: -4.155628681182861
    8. ' max' → logprob: -4.155628681182861
    9. ' longest' → logprob: -4.280628681182861
    10. ' count' → logprob: -4.655628681182861

Token 87: '_dp' (ID: 133252)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1105684041976929
    2. '_stack' → logprob: -1.3605684041976929
    3. '_array' → logprob: -1.7355684041976929
    4. '()' → logprob: -3.4855685234069824
    5. '_queue' → logprob: -3.4855685234069824
    6. '_arrays' → logprob: -3.6105685234069824
    7. '_state' → logprob: -3.8605685234069824
    8. '_data' → logprob: -3.9855685234069824
    9. '_counts' → logprob: -3.9855685234069824
    10. '_cache' → logprob: -4.360568523406982

Token 88: '_arrays' (ID: 182581)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19721683859825134
    2. '():' → logprob: -2.197216749191284
    3. '(N' → logprob: -3.447216749191284
    4. '()' → logprob: -4.197216987609863
    5. '_' → logprob: -4.322216987609863
    6. '(n' → logprob: -5.697216987609863
    7. '_array' → logprob: -6.697216987609863
    8. '_table' → logprob: -7.822216987609863
    9. '_arrays' → logprob: -7.822216987609863
    10. '(size' → logprob: -8.197216987609863

Token 89: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43588224053382874
    2. '():' → logprob: -1.0608822107315063
    3. '()' → logprob: -5.185882091522217
    4. '(N' → logprob: -7.185882091522217
    5. '(n' → logprob: -8.810882568359375
    6. ' ():' → logprob: -9.185882568359375
    7. ' (' → logprob: -9.435882568359375
    8. '_' → logprob: -9.435882568359375
    9. '("("' → logprob: -9.560882568359375
    10. '()(' → logprob: -9.935882568359375

Token 90: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02132265456020832
    2. ',' → logprob: -3.896322727203369
    3. ')' → logprob: -7.521322727203369
    4. ' ):' → logprob: -8.646322250366211
    5. '):
' → logprob: -10.271322250366211
    6. ':' → logprob: -10.646322250366211
    7. '():' → logprob: -13.896322250366211
    8. '   ' → logprob: -14.021322250366211
    9. ' ' → logprob: -14.771322250366211
    10. '):
' → logprob: -15.021322250366211

Token 91: ' max' (ID: 2999)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.3149928152561188
    2. 'C' → logprob: -1.4399927854537964
    3. ' K' → logprob: -4.064992904663086
    4. ' max' → logprob: -5.814992904663086
    5. 'K' → logprob: -5.939992904663086
    6. ' M' → logprob: -6.064992904663086
    7. ')' → logprob: -6.439992904663086
    8. ' )' → logprob: -6.689992904663086
    9. 'max' → logprob: -6.939992904663086
    10. ' ' → logprob: -7.064992904663086

Token 92: '_C' (ID: 1720)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.19136358797550201
    2. '_val' → logprob: -1.9413635730743408
    3. '_C' → logprob: -4.44136381149292
    4. '_c' → logprob: -4.94136381149292
    5. '_' → logprob: -5.44136381149292
    6. '_length' → logprob: -5.56636381149292
    7. '_size' → logprob: -7.44136381149292
    8. '_cost' → logprob: -7.44136381149292
    9. '_element' → logprob: -7.56636381149292
    10. ')' → logprob: -8.066363334655762

Token 93: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5770441889762878
    2. '):' → logprob: -0.8270441889762878
    3. '_value' → logprob: -7.3270440101623535
    4. '):

' → logprob: -9.077044486999512
    5. ' ):' → logprob: -9.327044486999512
    6. ')' → logprob: -9.702044486999512
    7. '):
' → logprob: -9.827044486999512
    8. 'value' → logprob: -10.327044486999512
    9. ' ):
' → logprob: -10.577044486999512
    10. ',' → logprob: -11.577044486999512

Token 94: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03781481832265854
    2. ' :' → logprob: -3.4128148555755615
    3. '():' → logprob: -6.287814617156982
    4. ' :
' → logprob: -7.162814617156982
    5. ':
' → logprob: -7.162814617156982
    6. '   ' → logprob: -8.16281509399414
    7. '):' → logprob: -8.66281509399414
    8. '():
' → logprob: -9.16281509399414
    9. '(n' → logprob: -10.16281509399414
    10. ',' → logprob: -10.16281509399414

Token 95: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3474844694137573
    2. ' dp' → logprob: -2.097484588623047
    3. 'dp' → logprob: -2.722484588623047
    4. '    
' → logprob: -3.722484588623047
    5. ' 
' → logprob: -3.972484588623047
    6. ' max' → logprob: -4.222484588623047
    7. '
' → logprob: -4.722484588623047
    8. '    ' → logprob: -5.097484588623047
    9. ' :
' → logprob: -5.722484588623047
    10. 'max' → logprob: -5.847484588623047

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5171507000923157
    2. ' dp' → logprob: -1.642150640487671
    3. 'dp' → logprob: -2.017150640487671
    4. ' """
' → logprob: -3.517150640487671
    5. '    ' → logprob: -4.51715087890625
    6. '"""
' → logprob: -5.01715087890625
    7. ' max' → logprob: -5.14215087890625
    8. ' length' → logprob: -6.39215087890625
    9. ' #' → logprob: -6.51715087890625
    10. 'max' → logprob: -6.70465087890625

Token 97: ' Initialise' (ID: 179601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9997093677520752
    2. 'dp' → logprob: -0.9997093677520752
    3. ' dp' → logprob: -1.4997093677520752
    4. ' max' → logprob: -5.124709129333496
    5. '
' → logprob: -5.499709129333496
    6. '    
' → logprob: -5.874709129333496
    7. ' size' → logprob: -6.124709129333496
    8. ' """
' → logprob: -6.124709129333496
    9. 'def' → logprob: -6.249709129333496
    10. 'max' → logprob: -6.374709129333496

Token 98: ' les' (ID: 1341)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.5726451873779297
    2. ' two' → logprob: -1.6976451873779297
    3. ' les' → logprob: -2.1976451873779297
    4. 'dp' → logprob: -3.3226451873779297
    5. '(N' → logprob: -3.3226451873779297
    6. ' dp' → logprob: -3.5726451873779297
    7. ':' → logprob: -5.19764518737793
    8. ' ' → logprob: -5.19764518737793
    9. 'two' → logprob: -5.57264518737793
    10. '   ' → logprob: -6.07264518737793

Token 99: ' tableaux' (ID: 176599)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.08729018270969391
    2. 'dp' → logprob: -2.5872902870178223
    3. ' arrays' → logprob: -5.837290287017822
    4. '_dp' → logprob: -6.712290287017822
    5. ' deux' → logprob: -6.837290287017822
    6. ' d' → logprob: -7.587290287017822
    7. ' tableaux' → logprob: -7.837290287017822
    8. ' DP' → logprob: -8.087289810180664
    9. ' tables' → logprob: -8.462289810180664
    10. ' two' → logprob: -8.837289810180664

Token 100: ' nécessaires' (ID: 74402)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.09707150608301163
    2. 'dp' → logprob: -3.222071409225464
    3. '_dp' → logprob: -3.597071409225464
    4. ' de' → logprob: -4.222071647644043
    5. ' d' → logprob: -5.472071647644043
    6. ' DP' → logprob: -5.847071647644043
    7. '_' → logprob: -7.097071647644043
    8. 's' → logprob: -7.347071647644043
    9. '   ' → logprob: -8.097071647644043
    10. ' des' → logprob: -8.722071647644043

Token 101: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0966875553131104
    2. ' dp' → logprob: -1.2216875553131104
    3. ' pour' → logprob: -1.9716875553131104
    4. '   ' → logprob: -2.4716875553131104
    5. ' de' → logprob: -2.4716875553131104
    6. '_dp' → logprob: -4.096687316894531
    7. ' for' → logprob: -4.721687316894531
    8. 's' → logprob: -5.096687316894531
    9. ' d' → logprob: -5.346687316894531
    10. 'def' → logprob: -5.596687316894531

Token 102: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11297627538442612
    2. ' l' → logprob: -2.862976312637329
    3. ' le' → logprob: -3.237976312637329
    4. ' résoudre' → logprob: -5.61297607421875
    5. ' les' → logprob: -5.86297607421875
    6. 'l' → logprob: -7.48797607421875
    7. ' coder' → logprob: -7.48797607421875
    8. ' gérer' → logprob: -7.73797607421875
    9. ' calcul' → logprob: -7.98797607421875
    10. ' ' → logprob: -8.11297607421875

Token 103: ' calcul' (ID: 7559)
  Prédit: ' problème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -1.17240309715271
    2. ' programme' → logprob: -1.42240309715271
    3. ' calcul' → logprob: -1.54740309715271
    4. '   ' → logprob: -2.42240309715271
    5. ' programmation' → logprob: -3.29740309715271
    6. ' traitement' → logprob: -4.047403335571289
    7. '```' → logprob: -4.547403335571289
    8. ' dynamic' → logprob: -4.922403335571289
    9. 'pro' → logprob: -5.172403335571289
    10. ' code' → logprob: -5.297403335571289

Token 104: ' dynamique' (ID: 98708)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5286352634429932
    2. ' de' → logprob: -1.1536352634429932
    3. ' du' → logprob: -3.528635263442993
    4. 's' → logprob: -3.653635263442993
    5. '   ' → logprob: -3.653635263442993
    6. '<|end|>' → logprob: -5.903635025024414
    7. 'de' → logprob: -6.153635025024414
    8. ' dynamic' → logprob: -6.278635025024414
    9. 'des' → logprob: -6.653635025024414
    10. ' dp' → logprob: -7.153635025024414

Token 105: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.990113377571106
    2. 'dp' → logprob: -1.740113377571106
    3. ' de' → logprob: -2.4901132583618164
    4. ',' → logprob: -2.6151132583618164
    5. '.' → logprob: -2.7401132583618164
    6. ' des' → logprob: -2.8651132583618164
    7. ':' → logprob: -3.4901132583618164
    8. ' dp' → logprob: -3.6151132583618164
    9. 'def' → logprob: -3.8651132583618164
    10. ' pour' → logprob: -4.240113258361816

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45180079340934753
    2. '
' → logprob: -1.57680082321167
    3. 'dp' → logprob: -2.57680082321167
    4. '    
' → logprob: -3.32680082321167
    5. ' dp' → logprob: -3.57680082321167
    6. '  
' → logprob: -5.45180082321167
    7. 'def' → logprob: -5.95180082321167
    8. ' length' → logprob: -6.57680082321167
    9. ' 
' → logprob: -6.57680082321167
    10. '   
' → logprob: -6.95180082321167

Token 107: ' Args' (ID: 39185)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4668605625629425
    2. '   ' → logprob: -2.09186053276062
    3. 'L' → logprob: -2.59186053276062
    4. 'length' → logprob: -3.09186053276062
    5. 'max' → logprob: -3.46686053276062
    6. 'long' → logprob: -3.84186053276062
    7. 'l' → logprob: -4.591860771179199
    8. 'len' → logprob: -4.716860771179199
    9. 'lis' → logprob: -4.966860771179199
    10. ' length' → logprob: -4.966860771179199

Token 108: ':
' (ID: 734)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.6599598526954651
    2. ' (' → logprob: -1.6599597930908203
    3. '):' → logprob: -2.2849597930908203
    4. ':' → logprob: -2.4099597930908203
    5. '   ' → logprob: -2.7849597930908203
    6. '):
' → logprob: -3.7849597930908203
    7. ')' → logprob: -4.53495979309082
    8. ',' → logprob: -5.65995979309082
    9. '(' → logprob: -6.90995979309082
    10. ' :' → logprob: -7.40995979309082

Token 109: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000540762091986835
    2. ' N' → logprob: -8.125540733337402
    3. 'N' → logprob: -9.000540733337402
    4. 'n' → logprob: -10.750540733337402
    5. '(N' → logprob: -10.750540733337402
    6. '	N' → logprob: -11.500540733337402
    7. ' ' → logprob: -11.625540733337402
    8. '    ' → logprob: -11.625540733337402
    9. '
' → logprob: -11.625540733337402
    10. '    
' → logprob: -11.750540733337402

Token 110: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0023731542751193047
    2. '   ' → logprob: -6.127373218536377
    3. 'self' → logprob: -9.127372741699219
    4. ' N' → logprob: -9.627372741699219
    5. '       ' → logprob: -11.627372741699219
    6. '	N' → logprob: -13.502372741699219
    7. 'n' → logprob: -14.127372741699219
    8. ' ' → logprob: -14.502372741699219
    9. '  ' → logprob: -14.877372741699219
    10. '
' → logprob: -15.002372741699219

Token 111: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021484773606061935
    2. ':' → logprob: -6.502148628234863
    3. '):' → logprob: -7.502148628234863
    4. ' ,' → logprob: -10.377148628234863
    5. ':int' → logprob: -11.127148628234863
    6. ',
' → logprob: -11.502148628234863
    7. '<|end|>' → logprob: -11.752148628234863
    8. ')' → logprob: -12.002148628234863
    9. '):
' → logprob: -12.252148628234863
    10. '   ' → logprob: -12.627148628234863

Token 112: 'int' (ID: 491)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003422593232244253
    2. 'int' → logprob: -6.128422737121582
    3. ',int' → logprob: -7.128422737121582
    4. ' ,' → logprob: -8.628422737121582
    5. ' int' → logprob: -9.003422737121582
    6. '   ' → logprob: -9.378422737121582
    7. ':int' → logprob: -11.253422737121582
    8. ')' → logprob: -11.628422737121582
    9. ',
' → logprob: -11.628422737121582
    10. ',N' → logprob: -12.378422737121582

Token 113: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3226136767771095e-05
    2. ' ,' → logprob: -10.500042915344238
    3. '):' → logprob: -11.875042915344238
    4. '   ' → logprob: -12.500042915344238
    5. ',
' → logprob: -13.125042915344238
    6. ')' → logprob: -13.625042915344238
    7. ',int' → logprob: -14.000042915344238
    8. '),' → logprob: -15.000042915344238
    9. ',N' → logprob: -15.250042915344238
    10. ' ' → logprob: -16.875043869018555

Token 114: ' Taille' (ID: 174124)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23028507828712463
    2. ' de' → logprob: -1.9802850484848022
    3. ',' → logprob: -3.355285167694092
    4. ')' → logprob: -4.730285167694092
    5. ' des' → logprob: -5.355285167694092
    6. 'de' → logprob: -5.355285167694092
    7. ' ' → logprob: -5.355285167694092
    8. ' du' → logprob: -5.980285167694092
    9. '=' → logprob: -6.480285167694092
    10. '<|end|>' → logprob: -6.730285167694092

Token 116: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.14281953871250153
    2. 'la' → logprob: -2.01781964302063
    3. 'l' → logprob: -9.64281940460205
    4. ' the' → logprob: -10.64281940460205
    5. 'the' → logprob: -11.26781940460205
    6. '_la' → logprob: -11.51781940460205
    7. ' ' → logprob: -11.76781940460205
    8. 'sequence' → logprob: -12.26781940460205
    9. ' l' → logprob: -12.39281940460205
    10. 's' → logprob: -12.39281940460205

Token 117: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.5176406502723694
    2. ' sé' → logprob: -1.3926405906677246
    3. 'sequence' → logprob: -2.1426405906677246
    4. ' sequence' → logprob: -3.3926405906677246
    5. 's' → logprob: -5.767640590667725
    6. 'sequ' → logprob: -7.892640590667725
    7. ' ' → logprob: -7.892640590667725
    8. '   ' → logprob: -8.017641067504883
    9. 'seq' → logprob: -8.392641067504883
    10. ' sequ' → logprob: -9.267641067504883

Token 118: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -6.392202976712724e-06
    2. '   ' → logprob: -13.000006675720215
    3. 'QUENCE' → logprob: -13.000006675720215
    4. 'rie' → logprob: -14.625006675720215
    5. 'quences' → logprob: -14.750006675720215
    6. 'q' → logprob: -15.125006675720215
    7. '`' → logprob: -15.750006675720215
    8. '#' → logprob: -15.750006675720215
    9. '_' → logprob: -16.1250057220459
    10. '
' → logprob: -16.8750057220459

Token 119: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6963557600975037
    2. ',' → logprob: -0.9463557600975037
    3. ',
' → logprob: -2.4463558197021484
    4. '   ' → logprob: -4.696355819702148
    5. '):
' → logprob: -4.821355819702148
    6. '):' → logprob: -4.946355819702148
    7. '),' → logprob: -6.571355819702148
    8. '
' → logprob: -8.196355819702148
    9. ')
' → logprob: -8.446355819702148
    10. '    
' → logprob: -8.696355819702148

Token 120: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24367772042751312
    2. '       ' → logprob: -1.6186777353286743
    3. 'max' → logprob: -4.118677616119385
    4. '
' → logprob: -7.243677616119385
    5. ' max' → logprob: -7.618677616119385
    6. '    
' → logprob: -8.118678092956543
    7. '  ' → logprob: -9.493678092956543
    8. ' ' → logprob: -9.743678092956543
    9. ',' → logprob: -9.868678092956543
    10. '        
' → logprob: -10.243678092956543

Token 121: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.20898225903511047
    2. '   ' → logprob: -2.458982229232788
    3. ' max' → logprob: -2.458982229232788
    4. '       ' → logprob: -4.083982467651367
    5. '
' → logprob: -7.958982467651367
    6. ' ' → logprob: -9.208982467651367
    7. 'Max' → logprob: -9.833982467651367
    8. '  ' → logprob: -9.958982467651367
    9. '    
' → logprob: -10.208982467651367
    10. '	max' → logprob: -10.208982467651367

Token 122: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.0007656719535589218
    2. '_' → logprob: -7.250765800476074
    3. 'C' → logprob: -10.500765800476074
    4. ')' → logprob: -11.625765800476074
    5. '   ' → logprob: -12.125765800476074
    6. ' _' → logprob: -12.250765800476074
    7. ')_' → logprob: -13.125765800476074
    8. '(C' → logprob: -13.750765800476074
    9. '```' → logprob: -13.750765800476074
    10. ' ' → logprob: -14.500765800476074

Token 123: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03349849581718445
    2. '):
' → logprob: -3.658498525619507
    3. ' ):' → logprob: -5.658498287200928
    4. ':' → logprob: -5.783498287200928
    5. '):

' → logprob: -8.783498764038086
    6. ')' → logprob: -9.033498764038086
    7. '   ' → logprob: -9.158498764038086
    8. ':int' → logprob: -9.408498764038086
    9. ' ' → logprob: -9.783498764038086
    10. ' ):
' → logprob: -10.533498764038086

Token 124: 'int' (ID: 491)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11007870733737946
    2. ')' → logprob: -3.110078811645508
    3. '+' → logprob: -3.735078811645508
    4. '):
' → logprob: -3.985078811645508
    5. 'int' → logprob: -4.235078811645508
    6. ' int' → logprob: -7.485078811645508
    7. '   ' → logprob: -7.485078811645508
    8. ' ):' → logprob: -7.485078811645508
    9. ' ' → logprob: -8.360078811645508
    10. ' +' → logprob: -8.485078811645508

Token 125: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026937208604067564
    2. '):
' → logprob: -6.0026936531066895
    3. ':' → logprob: -9.252694129943848
    4. ' ):' → logprob: -9.752694129943848
    5. ')' → logprob: -10.127694129943848
    6. '):

' → logprob: -11.252694129943848
    7. '   ' → logprob: -11.877694129943848
    8. ' ' → logprob: -14.127694129943848
    9. '"):' → logprob: -14.127694129943848
    10. '):
' → logprob: -14.502694129943848

Token 126: ' Vale' (ID: 55242)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7428597807884216
    2. 'max' → logprob: -0.7428597807884216
    3. 'int' → logprob: -3.9928598403930664
    4. '(max' → logprob: -4.242859840393066
    5. ' int' → logprob: -5.367859840393066
    6. 'C' → logprob: -5.492859840393066
    7. '<|end|>' → logprob: -6.492859840393066
    8. ' maximum' → logprob: -6.617859840393066
    9. ' (' → logprob: -7.617859840393066
    10. '(int' → logprob: -7.742859840393066

Token 127: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.00011164903844473884
    2. 'r' → logprob: -9.25011157989502
    3. 'eur' → logprob: -11.87511157989502
    4. 'u' → logprob: -13.12511157989502
    5. ')' → logprob: -13.75011157989502
    6. ' ur' → logprob: -13.87511157989502
    7. '   ' → logprob: -14.00011157989502
    8. 'urs' → logprob: -14.12511157989502
    9. '#' → logprob: -14.75011157989502
    10. 'or' → logprob: -14.87511157989502

Token 128: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.19723668694496155
    2. ')' → logprob: -3.0722367763519287
    3. 'max' → logprob: -3.0722367763519287
    4. ' max' → logprob: -3.6972367763519287
    5. ' de' → logprob: -4.19723653793335
    6. ' +' → logprob: -4.57223653793335
    7. '_max' → logprob: -5.07223653793335
    8. ' maximum' → logprob: -5.44723653793335
    9. ' des' → logprob: -5.57223653793335
    10. '+' → logprob: -5.69723653793335

Token 129: ' parmi' (ID: 51713)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36752453446388245
    2. ' des' → logprob: -1.86752450466156
    3. '+' → logprob: -3.1175246238708496
    4. ' de' → logprob: -3.4925246238708496
    5. '):
' → logprob: -4.11752462387085
    6. 'des' → logprob: -4.74252462387085
    7. 'de' → logprob: -4.74252462387085
    8. '   ' → logprob: -4.86752462387085
    9. ')' → logprob: -4.86752462387085
    10. '=' → logprob: -4.99252462387085

Token 130: ' les' (ID: 1341)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.17571283876895905
    2. ' C' → logprob: -1.9257128238677979
    3. '(C' → logprob: -4.300713062286377
    4. ')' → logprob: -6.675713062286377
    5. ' les' → logprob: -9.050712585449219
    6. ' la' → logprob: -9.175712585449219
    7. ' ' → logprob: -9.425712585449219
    8. ' the' → logprob: -10.300712585449219
    9. '   ' → logprob: -10.425712585449219
    10. 's' → logprob: -10.550712585449219

Token 131: ' éléments' (ID: 57375)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.062043197453022
    2. ' C' → logprob: -2.8120431900024414
    3. '_C' → logprob: -11.062043190002441
    4. ')' → logprob: -11.062043190002441
    5. ' ' → logprob: -11.437043190002441
    6. ' ' → logprob: -11.562043190002441
    7. '   ' → logprob: -11.562043190002441
    8. 'c' → logprob: -13.124543190002441
    9. '_' → logprob: -13.437043190002441
    10. '`' → logprob: -13.937043190002441

Token 132: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.008872182108461857
    2. 'de' → logprob: -4.758872032165527
    3. '   ' → logprob: -9.133872032165527
    4. ')' → logprob: -9.883872032165527
    5. ' C' → logprob: -11.008872032165527
    6. ' des' → logprob: -11.258872032165527
    7. ' of' → logprob: -11.383872032165527
    8. ' )' → logprob: -11.383872032165527
    9. 'C' → logprob: -11.633872032165527
    10. ' ' → logprob: -11.883872032165527

Token 133: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.14275720715522766
    2. ' C' → logprob: -2.0177571773529053
    3. ' la' → logprob: -9.892757415771484
    4. ')' → logprob: -11.517757415771484
    5. ' ' → logprob: -12.017757415771484
    6. ' ' → logprob: -12.767757415771484
    7. ' the' → logprob: -13.017757415771484
    8. 'la' → logprob: -13.642757415771484
    9. 'the' → logprob: -13.642757415771484
    10. 'l' → logprob: -13.892757415771484

Token 134: ' sé' (ID: 7462)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.46596428751945496
    2. ' C' → logprob: -1.2159643173217773
    3. ' sequence' → logprob: -2.9659643173217773
    4. ' sé' → logprob: -4.340964317321777
    5. 'sequence' → logprob: -4.715964317321777
    6. 'sé' → logprob: -6.840964317321777
    7. 's' → logprob: -8.090964317321777
    8. ' liste' → logprob: -8.340964317321777
    9. '_C' → logprob: -8.590964317321777
    10. ' ' → logprob: -8.965964317321777

Token 135: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -1.27099974633893e-05
    2. 'QUENCE' → logprob: -12.125012397766113
    3. 'quences' → logprob: -12.500012397766113
    4. 'sequence' → logprob: -13.375012397766113
    5. 'q' → logprob: -14.625012397766113
    6. '`' → logprob: -14.625012397766113
    7. '   ' → logprob: -14.875012397766113
    8. '_sequence' → logprob: -16.25001335144043
    9. '```' → logprob: -16.25001335144043
    10. 'qu' → logprob: -16.37501335144043

Token 136: ' C' (ID: 363)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.727573812007904
    2. ')' → logprob: -1.3525738716125488
    3. '   ' → logprob: -1.7275738716125488
    4. '):' → logprob: -2.602573871612549
    5. ')
' → logprob: -6.102573871612549
    6. '):

' → logprob: -6.227573871612549
    7. '
' → logprob: -6.477573871612549
    8. ' )' → logprob: -8.60257339477539
    9. '):
' → logprob: -8.85257339477539
    10. ' ):
' → logprob: -9.10257339477539

Token 137: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4784080684185028
    2. ')' → logprob: -1.3534080982208252
    3. '):' → logprob: -2.478408098220825
    4. '   ' → logprob: -3.353408098220825
    5. '):

' → logprob: -6.353407859802246
    6. '):
' → logprob: -6.978407859802246
    7. '
' → logprob: -8.603407859802246
    8. ')
' → logprob: -9.728407859802246
    9. ' ):
' → logprob: -10.853407859802246
    10. ' )' → logprob: -10.978407859802246

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08033061027526855
    2. ')' → logprob: -3.5803306102752686
    3. '
' → logprob: -4.080330848693848
    4. '    
' → logprob: -4.080330848693848
    5. '):
' → logprob: -4.580330848693848
    6. ')
' → logprob: -6.580330848693848
    7. '):' → logprob: -6.830330848693848
    8. '```' → logprob: -6.955330848693848
    9. '):

' → logprob: -7.330330848693848
    10. '  
' → logprob: -7.455330848693848

Token 139: ' Returns' (ID: 9609)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7867289185523987
    2. '   ' → logprob: -1.536728858947754
    3. '):
' → logprob: -2.536728858947754
    4. '"""
' → logprob: -2.661728858947754
    5. 'length' → logprob: -3.286728858947754
    6. '
' → logprob: -3.786728858947754
    7. 'long' → logprob: -3.786728858947754
    8. 'max' → logprob: -4.286728858947754
    9. ')' → logprob: -4.536728858947754
    10. ' length' → logprob: -5.411728858947754

Token 140: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5990082621574402
    2. ' N' → logprob: -1.474008321762085
    3. ' [' → logprob: -2.849008321762085
    4. ' None' → logprob: -3.474008321762085
    5. ' [
' → logprob: -3.724008321762085
    6. ' (
' → logprob: -3.974008321762085
    7. '  ' → logprob: -4.224008083343506
    8. '[' → logprob: -4.349008083343506
    9. ' :' → logprob: -4.724008083343506
    10. ':' → logprob: -4.974008083343506

Token 141: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28797218203544617
    2. 'dp' → logprob: -2.0379722118377686
    3. ' dp' → logprob: -2.4129722118377686
    4. ' (' → logprob: -5.7879719734191895
    5. '{
' → logprob: -6.3504719734191895
    6. ' {
' → logprob: -6.4129719734191895
    7. ' [' → logprob: -6.5379719734191895
    8. ' (
' → logprob: -6.5379719734191895
    9. ' max' → logprob: -6.6629719734191895
    10. '[' → logprob: -6.6629719734191895

Token 142: ' tuple' (ID: 31311)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8248768448829651
    2. 'tuple' (adapté à ' tuple') → logprob: -1.3248767852783203
    3. 'dp' → logprob: -1.4498767852783203
    4. 'dict' → logprob: -3.5748767852783203
    5. 'List' → logprob: -5.19987678527832
    6. 'Tuple' → logprob: -5.32487678527832
    7. 'int' → logprob: -5.82487678527832
    8. '   ' → logprob: -6.19987678527832
    9. 'A' → logprob: -6.57487678527832
    10. ' tuple' → logprob: -6.69987678527832

Token 143: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032340367324650288
    2. ' :' → logprob: -5.878233909606934
    3. ' (' → logprob: -8.378233909606934
    4. ' =' → logprob: -9.503233909606934
    5. ' (
' → logprob: -10.628233909606934
    6. ':
' → logprob: -11.003233909606934
    7. '):' → logprob: -11.128233909606934
    8. '[' → logprob: -11.753233909606934
    9. ' of' → logprob: -11.753233909606934
    10. '  ' → logprob: -12.003233909606934

Token 144: ' 
' (ID: 793)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0875117778778076
    2. '(
' → logprob: -1.5875117778778076
    3. '([' → logprob: -1.9625117778778076
    4. 'dp' → logprob: -2.0875117778778076
    5. '(' → logprob: -2.9625117778778076
    6. ' (
' → logprob: -3.2125117778778076
    7. ' ([' → logprob: -3.8375117778778076
    8. '(dp' → logprob: -3.9625117778778076
    9. ' dp' → logprob: -4.462512016296387
    10. '([],' → logprob: -5.212512016296387

Token 145: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6226189732551575
    2. ' (' → logprob: -1.2476189136505127
    3. '(
' → logprob: -2.9976189136505127
    4. 'dp' → logprob: -3.1226189136505127
    5. '       ' → logprob: -3.3726189136505127
    6. ':' → logprob: -4.372619152069092
    7. ' (
' → logprob: -4.497619152069092
    8. '(dp' → logprob: -4.997619152069092
    9. ' dp' → logprob: -5.497619152069092
    10. '(' → logprob: -5.747619152069092

Token 146: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.08664456754922867
    2. 'count' → logprob: -4.461644649505615
    3. 'list' → logprob: -4.711644649505615
    4. '(
' → logprob: -5.086644649505615
    5. ' dp' → logprob: -5.086644649505615
    6. '   ' → logprob: -5.211644649505615
    7. 'max' → logprob: -5.336644649505615
    8. 'lis' → logprob: -5.649144649505615
    9. ' (' → logprob: -5.711644649505615
    10. '(dp' → logprob: -5.961644649505615

Token 147: ' (' (ID: 350)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.7439584136009216
    2. '_max' → logprob: -1.6189584732055664
    3. '_inc' → logprob: -2.3689584732055664
    4. '_' → logprob: -2.8689584732055664
    5. '_in' → logprob: -3.6189584732055664
    6. ',' → logprob: -3.8689584732055664
    7. '_less' → logprob: -4.118958473205566
    8. '0' → logprob: -4.618958473205566
    9. '_l' → logprob: -4.743958473205566
    10. '_up' → logprob: -5.493958473205566

Token 148: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01623295247554779
    2. 'int' → logprob: -4.766232967376709
    3. ')' → logprob: -6.141232967376709
    4. '[int' → logprob: -6.391232967376709
    5. '[list' → logprob: -6.641232967376709
    6. '[[' → logprob: -7.016232967376709
    7. '[N' → logprob: -7.391232967376709
    8. ' list' → logprob: -7.766232967376709
    9. 'List' → logprob: -8.89123249053955
    10. '[' → logprob: -9.51623249053955

Token 149: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4428594410419464
    2. ',' → logprob: -1.692859411239624
    3. ')' → logprob: -2.192859411239624
    4. '[int' → logprob: -3.567859411239624
    5. '),' → logprob: -4.817859649658203
    6. '   ' → logprob: -4.817859649658203
    7. '[list' → logprob: -5.442859649658203
    8. ' of' → logprob: -5.942859649658203
    9. '(int' → logprob: -6.317859649658203
    10. '[' → logprob: -6.442859649658203

Token 150: ' Tableau' (ID: 180833)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5713874697685242
    2. '[[' → logprob: -1.821387529373169
    3. '[' → logprob: -1.946387529373169
    4. ' [[' → logprob: -2.071387529373169
    5. '[int' → logprob: -6.57138729095459
    6. '[list' → logprob: -7.19638729095459
    7. '[List' → logprob: -7.44638729095459
    8. 'list' → logprob: -7.82138729095459
    9. ' list' → logprob: -7.82138729095459
    10. ' [[[' → logprob: -7.94638729095459

Token 151: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.574732780456543
    2. '[' → logprob: -2.074732780456543
    3. '[int' → logprob: -2.199732780456543
    4. ' des' → logprob: -2.449732780456543
    5. ' of' → logprob: -2.824732780456543
    6. ' d' → logprob: -4.449732780456543
    7. ' à' → logprob: -4.824732780456543
    8. ' =' → logprob: -5.324732780456543
    9. ' [' → logprob: -5.449732780456543
    10. '   ' → logprob: -5.574732780456543

Token 152: ' stock' (ID: 6546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8681654930114746
    2. '[int' → logprob: -1.2431654930114746
    3. ' [' → logprob: -1.6181654930114746
    4. ' int' → logprob: -3.4931654930114746
    5. '[N' → logprob: -4.118165493011475
    6. 'int' → logprob: -4.243165493011475
    7. '[-' → logprob: -4.743165493011475
    8. ' les' → logprob: -5.868165493011475
    9. ' des' → logprob: -6.118165493011475
    10. '[]' → logprob: -6.493165493011475

Token 153: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5070567727088928
    2. '   ' → logprob: -1.632056713104248
    3. ' des' → logprob: -2.507056713104248
    4. '[' → logprob: -3.132056713104248
    5. ' de' → logprob: -3.632056713104248
    6. ' ' → logprob: -4.632056713104248
    7. '  ' → logprob: -4.757056713104248
    8. '    ' → logprob: -4.882056713104248
    9. 'e' → logprob: -4.882056713104248
    10. ' of' → logprob: -5.507056713104248

Token 154: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2623158097267151
    2. ' des' → logprob: -2.0123157501220703
    3. '[' → logprob: -3.5123157501220703
    4. ' la' → logprob: -4.38731575012207
    5. 'les' → logprob: -4.63731575012207
    6. 'dp' → logprob: -4.76231575012207
    7. ' [' → logprob: -5.13731575012207
    8. ' le' → logprob: -5.26231575012207
    9. 'des' → logprob: -5.26231575012207
    10. ' N' → logprob: -5.76231575012207

Token 155: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3950754404067993
    2. ' nombre' → logprob: -1.5200754404067993
    3. 'nombre' → logprob: -2.2700753211975098
    4. 'max' → logprob: -2.3950753211975098
    5. ' maximum' → logprob: -2.6450753211975098
    6. ' max' → logprob: -3.0200753211975098
    7. '   ' → logprob: -3.2700753211975098
    8. 'maximum' → logprob: -3.8950753211975098
    9. ' None' → logprob: -4.02007532119751
    10. 'int' → logprob: -4.39507532119751

Token 156: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.740688681602478
    2. '[' → logprob: -0.990688681602478
    3. ' de' → logprob: -2.8656888008117676
    4. 's' → logprob: -4.115688800811768
    5. '   ' → logprob: -4.240688800811768
    6. ' of' → logprob: -4.240688800811768
    7. ' d' → logprob: -4.490688800811768
    8. 'des' → logprob: -4.990688800811768
    9. '_des' → logprob: -5.365688800811768
    10. '    ' → logprob: -5.490688800811768

Token 157: ' façons' (ID: 165958)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.5662702918052673
    2. 'ways' → logprob: -1.066270351409912
    3. ' façons' → logprob: -3.691270351409912
    4. '_' → logprob: -4.441270351409912
    5. ' man' → logprob: -4.441270351409912
    6. ' sequences' → logprob: -4.691270351409912
    7. 's' → logprob: -5.066270351409912
    8. '   ' → logprob: -5.441270351409912
    9. 'man' → logprob: -5.816270351409912
    10. ' ' → logprob: -6.066270351409912

Token 158: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5349098443984985
    2. ' d' → logprob: -1.2849098443984985
    3. '   ' → logprob: -3.034909725189209
    4. 'de' → logprob: -3.409909725189209
    5. 'd' → logprob: -3.909909725189209
    6. ')' → logprob: -4.909909725189209
    7. '<|end|>' → logprob: -5.159909725189209
    8. '    ' → logprob: -5.534909725189209
    9. ' ' → logprob: -5.909909725189209
    10. '[]' → logprob: -6.159909725189209

Token 159: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9696927666664124
    2. ' de' → logprob: -1.3446927070617676
    3. ' ' → logprob: -1.9696927070617676
    4. '<|end|>' → logprob: -2.5946927070617676
    5. ' d' → logprob: -3.0946927070617676
    6. '    ' → logprob: -3.9696927070617676
    7. '   ' → logprob: -4.094692707061768
    8. ''' → logprob: -4.219692707061768
    9. '  ' → logprob: -4.594692707061768
    10. 'e' → logprob: -4.844692707061768

Token 160: 'atte' (ID: 23975)
  Prédit: ''obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''obtenir' → logprob: -0.9380350708961487
    2. 'avoir' → logprob: -1.563035011291504
    3. 'arr' → logprob: -1.938035011291504
    4. ''avoir' → logprob: -2.438035011291504
    5. 'atte' → logprob: -2.938035011291504
    6. ''arr' → logprob: -3.938035011291504
    7. ' atteindre' → logprob: -4.313035011291504
    8. 'a' → logprob: -4.438035011291504
    9. ' obtenir' → logprob: -4.813035011291504
    10. 'ob' → logprob: -4.813035011291504

Token 161: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.015954602509737015
    2. 'ind' → logprob: -4.640954494476318
    3. 'nd' → logprob: -5.640954494476318
    4. 'n' → logprob: -6.515954494476318
    5. 're' → logprob: -8.515954971313477
    6. 'in' → logprob: -8.890954971313477
    7. 'inder' → logprob: -9.015954971313477
    8. 'r' → logprob: -9.140954971313477
    9. 'u' → logprob: -9.265954971313477
    10. 'i' → logprob: -9.640954971313477

Token 162: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5848578214645386
    2. 'i' → logprob: -1.3348578214645386
    3. ')' → logprob: -3.209857940673828
    4. ' chaque' → logprob: -3.709857940673828
    5. ' each' → logprob: -4.459857940673828
    6. ' j' → logprob: -4.459857940673828
    7. 's' → logprob: -4.709857940673828
    8. 'indices' → logprob: -5.084857940673828
    9. ' )' → logprob: -5.209857940673828
    10. 'each' → logprob: -5.334857940673828

Token 163: ' position' (ID: 4010)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -1.384570598602295
    2. ' somme' → logprob: -1.634570598602295
    3. 'val' → logprob: -2.009570598602295
    4. 'indice' → logprob: -2.134570598602295
    5. 'index' → logprob: -2.884570598602295
    6. ' état' → logprob: -3.259570598602295
    7. 'position' → logprob: -3.884570598602295
    8. 'élé' → logprob: -4.009570598602295
    9. 's' → logprob: -4.134570598602295
    10. ' index' → logprob: -4.134570598602295

Token 164: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18334095180034637
    2. ')' → logprob: -2.5583410263061523
    3. '   ' → logprob: -3.8083410263061523
    4. ' de' → logprob: -3.8083410263061523
    5. '),' → logprob: -4.058341026306152
    6. ' ,' → logprob: -5.308341026306152
    7. ' avec' → logprob: -5.683341026306152
    8. ' d' → logprob: -6.058341026306152
    9. ' ),' → logprob: -6.183341026306152
    10. ' )' → logprob: -6.183341026306152

Token 165: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014671103097498417
    2. 'dp' → logprob: -4.639671325683594
    3. ' ,' → logprob: -6.139671325683594
    4. '   ' → logprob: -6.389671325683594
    5. ')' → logprob: -7.264671325683594
    6. ' dp' → logprob: -8.889671325683594
    7. ',
' → logprob: -9.389671325683594
    8. '),' → logprob: -9.389671325683594
    9. '[' → logprob: -11.014671325683594
    10. '_dp' → logprob: -11.139671325683594

Token 166: ' r' (ID: 428)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8494864702224731
    2. 'ways' → logprob: -2.0994863510131836
    3. 'count' → logprob: -2.3494863510131836
    4. 'max' → logprob: -2.4744863510131836
    5. 'min' → logprob: -2.8494863510131836
    6. 'sum' → logprob: -3.4744863510131836
    7. 'prefix' → logprob: -3.5994863510131836
    8. 'cnt' → logprob: -4.099486351013184
    9. 'prev' → logprob: -4.099486351013184
    10. 'best' → logprob: -4.724486351013184

Token 167: ' (' (ID: 350)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -2.3491744995117188
    2. 'ev' → logprob: -2.3491744995117188
    3. 'ange' → logprob: -2.4741744995117188
    4. 'max' → logprob: -2.7241744995117188
    5. 'ank' → logprob: -2.7241744995117188
    6. 'min' → logprob: -2.8491744995117188
    7. 'un' → logprob: -2.8491744995117188
    8. 'ec' → logprob: -3.0991744995117188
    9. 'em' → logprob: -3.2241744995117188
    10. 'dp' → logprob: -3.3491744995117188

Token 168: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.103508859872818
    2. 'ange' → logprob: -2.478508949279785
    3. ' list' → logprob: -4.603508949279785
    4. 'int' → logprob: -6.478508949279785
    5. 'anges' → logprob: -7.103508949279785
    6. 'ist' → logprob: -7.853508949279785
    7. '[list' → logprob: -7.853508949279785
    8. '[' → logprob: -8.228508949279785
    9. '[int' → logprob: -8.603508949279785
    10. ')' → logprob: -8.603508949279785

Token 169: '):' (ID: 3127)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4234809875488281
    2. '):' → logprob: -1.2984809875488281
    3. ',' → logprob: -3.798480987548828
    4. ')' → logprob: -4.048480987548828
    5. ':list' → logprob: -4.048480987548828
    6. ' :' → logprob: -4.673480987548828
    7. ' (' → logprob: -5.923480987548828
    8. ' ):' → logprob: -6.673480987548828
    9. '(list' → logprob: -7.798480987548828
    10. '1' → logprob: -8.548480987548828

Token 170: ' Tableau' (ID: 180833)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.613425076007843
    2. ' list' → logprob: -0.863425076007843
    3. ' [' → logprob: -3.7384250164031982
    4. '[' → logprob: -4.738425254821777
    5. '[list' → logprob: -5.863425254821777
    6. '[[' → logprob: -8.363425254821777
    7. 'List' → logprob: -8.363425254821777
    8. '[-' → logprob: -8.863425254821777
    9. '[int' → logprob: -8.863425254821777
    10. ' [[' → logprob: -9.613425254821777

Token 171: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.780454695224762
    2. ' de' → logprob: -0.905454695224762
    3. ' des' → logprob: -2.405454635620117
    4. ':' → logprob: -4.280454635620117
    5. ' for' → logprob: -4.530454635620117
    6. ' of' → logprob: -5.155454635620117
    7. '[' → logprob: -5.405454635620117
    8. 'pour' → logprob: -5.780454635620117
    9. ' ' → logprob: -6.030454635620117
    10. '   ' → logprob: -6.405454635620117

Token 172: ' stock' (ID: 6546)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.1592570543289185
    2. '[' → logprob: -1.4092570543289185
    3. '[int' → logprob: -2.159256935119629
    4. 'ange' → logprob: -2.909256935119629
    5. 'int' → logprob: -2.909256935119629
    6. 'anges' → logprob: -3.034256935119629
    7. 'range' → logprob: -3.409256935119629
    8. ' les' → logprob: -3.409256935119629
    9. ' int' → logprob: -4.159256935119629
    10. 'list' → logprob: -4.534256935119629

Token 173: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0015408077742904425
    2. 'r' → logprob: -6.626540660858154
    3. 'rer' → logprob: -9.501541137695312
    4. 'e' → logprob: -10.001541137695312
    5. 'uer' → logprob: -11.251541137695312
    6. 'é' → logprob: -11.501541137695312
    7. '   ' → logprob: -11.876541137695312
    8. 'érer' → logprob: -12.126541137695312
    9. 'ant' → logprob: -12.251541137695312
    10. '[' → logprob: -12.626541137695312

Token 174: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5440168380737305
    2. '[' → logprob: -1.6690168380737305
    3. ' la' → logprob: -2.5440168380737305
    4. ' des' → logprob: -3.1690168380737305
    5. ' le' → logprob: -3.7940168380737305
    6. 'les' → logprob: -3.9190168380737305
    7. '0' → logprob: -4.6690168380737305
    8. 'le' → logprob: -5.2940168380737305
    9. ' max' → logprob: -5.4190168380737305
    10. ' [' → logprob: -5.4190168380737305

Token 175: ' prochain' (ID: 52413)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5899994373321533
    2. ' nombre' → logprob: -1.0899994373321533
    3. 'maximum' → logprob: -3.7149994373321533
    4. 'plus' → logprob: -4.214999198913574
    5. 'max' → logprob: -4.339999198913574
    6. ' maximum' → logprob: -4.464999198913574
    7. 'minimum' → logprob: -4.589999198913574
    8. ' minimum' → logprob: -5.714999198913574
    9. ' plus' → logprob: -5.964999198913574
    10. 'reste' → logprob: -6.214999198913574

Token 176: ' indice' (ID: 90848)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5418460369110107
    2. '[' → logprob: -1.7918460369110107
    3. ']' → logprob: -2.1668460369110107
    4. 'indice' → logprob: -2.4168460369110107
    5. 'indices' → logprob: -2.9168460369110107
    6. 's' → logprob: -2.9168460369110107
    7. '_' → logprob: -3.7918460369110107
    8. '<|end|>' → logprob: -3.9168460369110107
    9. 'index' → logprob: -4.10434627532959
    10. '_indices' → logprob: -4.16684627532959

Token 177: ' valide' (ID: 137323)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.3643147945404053
    2. ')' → logprob: -1.7393147945404053
    3. ' de' → logprob: -1.8643147945404053
    4. 'de' → logprob: -2.4893147945404053
    5. 'possible' → logprob: -2.6143147945404053
    6. ' des' → logprob: -2.8643147945404053
    7. ']' → logprob: -3.4893147945404053
    8. '   ' → logprob: -3.7393147945404053
    9. '<|end|>' → logprob: -4.239315032958984
    10. 'des' → logprob: -4.364315032958984

Token 178: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -1.1598842144012451
    2. ' à' → logprob: -1.2848842144012451
    3. ' de' → logprob: -1.6598842144012451
    4. 'pour' → logprob: -2.909884214401245
    5. 'de' → logprob: -3.159884214401245
    6. ')' → logprob: -3.659884214401245
    7. '   ' → logprob: -4.284884452819824
    8. ' for' → logprob: -4.409884452819824
    9. 's' → logprob: -4.534884452819824
    10. ' d' → logprob: -5.159884452819824

Token 179: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.8468194603919983
    2. ' i' → logprob: -1.2218194007873535
    3. ' each' → logprob: -2.2218194007873535
    4. 'each' → logprob: -2.4718194007873535
    5. ')' → logprob: -3.4718194007873535
    6. 'i' → logprob: -3.7218194007873535
    7. '<|end|>' → logprob: -5.8468194007873535
    8. ' chacune' → logprob: -5.8468194007873535
    9. 'r' → logprob: -5.9718194007873535
    10. 'l' → logprob: -6.0968194007873535

Token 180: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7983217239379883
    2. ' i' → logprob: -1.9233217239379883
    3. 'index' → logprob: -2.2983217239379883
    4. ')' → logprob: -2.2983217239379883
    5. 'indice' → logprob: -2.2983217239379883
    6. ' index' → logprob: -3.5483217239379883
    7. 'position' → logprob: -3.9233217239379883
    8. ']' → logprob: -4.048321723937988
    9. ' position' → logprob: -4.923321723937988
    10. 'idx' → logprob: -5.548321723937988

Token 181: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007668729405850172
    2. ',' → logprob: -6.132668495178223
    3. '   ' → logprob: -6.132668495178223
    4. ' )' → logprob: -6.632668495178223
    5. ')
' → logprob: -7.507668495178223
    6. ').' → logprob: -7.757668495178223
    7. '.' → logprob: -8.132668495178223
    8. ' après' → logprob: -8.132668495178223
    9. ' à' → logprob: -9.882668495178223
    10. 'def' → logprob: -10.257668495178223

Token 182: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.315234899520874
    2. '   ' → logprob: -1.315234899520874
    3. 'def' → logprob: -7.065235137939453
    4. '
' → logprob: -8.065235137939453
    5. '```' → logprob: -8.440235137939453
    6. ')
' → logprob: -8.690235137939453
    7. ',' → logprob: -8.690235137939453
    8. '"""' → logprob: -9.190235137939453
    9. '    
' → logprob: -10.190235137939453
    10. ' )' → logprob: -10.190235137939453

Token 183: ' prev' (ID: 10258)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.2583060264587402
    2. 'l' → logprob: -2.3833060264587402
    3. 'dp' → logprob: -2.5083060264587402
    4. 's' → logprob: -3.3208060264587402
    5. 'd' → logprob: -3.4458060264587402
    6. 'next' → logprob: -3.5083060264587402
    7. 'last' → logprob: -3.5708060264587402
    8. 'q' → logprob: -3.5708060264587402
    9. 'g' → logprob: -3.6958060264587402
    10. '   ' → logprob: -4.00830602645874

Token 184: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.005852235481142998
    2. ' =' → logprob: -6.005852222442627
    3. 's' → logprob: -6.255852222442627
    4. '(' → logprob: -7.505852222442627
    5. '_indices' → logprob: -8.005852699279785
    6. '_r' → logprob: -9.255852699279785
    7. '_' → logprob: -9.755852699279785
    8. '_index' → logprob: -9.755852699279785
    9. '_positions' → logprob: -9.880852699279785
    10. '_idx' → logprob: -10.005852699279785

Token 185: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03688770905137062
    2. ' list' → logprob: -3.4118876457214355
    3. ')' → logprob: -6.4118876457214355
    4. '(list' → logprob: -6.6618876457214355
    5. '[list' → logprob: -9.161888122558594
    6. '=list' → logprob: -9.661888122558594
    7. ':list' → logprob: -9.786888122558594
    8. '):' → logprob: -10.161888122558594
    9. '_list' → logprob: -11.411888122558594
    10. '):
' → logprob: -11.786888122558594

Token 186: '):' (ID: 3127)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7840648293495178
    2. ')' → logprob: -0.9090648293495178
    3. '):' → logprob: -2.034064769744873
    4. ' (' → logprob: -5.159064769744873
    5. '(N' → logprob: -7.284064769744873
    6. '```' → logprob: -7.659064769744873
    7. '(' → logprob: -7.784064769744873
    8. 'def' → logprob: -8.159065246582031
    9. ':list' → logprob: -8.284065246582031
    10. '):

' → logprob: -8.409065246582031

Token 187: ' Tableau' (ID: 180833)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.14359936118125916
    2. 'list' → logprob: -2.018599271774292
    3. ' [' → logprob: -7.518599510192871
    4. '[list' → logprob: -8.518599510192871
    5. '[' → logprob: -9.268599510192871
    6. 'List' → logprob: -10.393599510192871
    7. '(list' → logprob: -10.893599510192871
    8. '   ' → logprob: -11.518599510192871
    9. ' (' → logprob: -12.143599510192871
    10. '```' → logprob: -12.518599510192871

Token 188: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4426227807998657
    2. ' des' → logprob: -1.4426227807998657
    3. ' pour' → logprob: -2.067622661590576
    4. ':' → logprob: -2.067622661590576
    5. ' for' → logprob: -2.317622661590576
    6. '<|end|>' → logprob: -2.567622661590576
    7. ' de' → logprob: -3.692622661590576
    8. ' of' → logprob: -4.067622661590576
    9. ' (' → logprob: -4.067622661590576
    10. 'def' → logprob: -4.692622661590576

Token 189: ' stock' (ID: 6546)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9298778772354126
    2. 'int' → logprob: -1.3048778772354126
    3. '[int' → logprob: -1.8048778772354126
    4. ' list' → logprob: -2.429877758026123
    5. 'None' → logprob: -3.304877758026123
    6. ' int' → logprob: -4.679877758026123
    7. '(int' → logprob: -4.679877758026123
    8. 'range' → logprob: -4.804877758026123
    9. '[' → logprob: -4.804877758026123
    10. ' range' → logprob: -5.679877758026123

Token 190: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0004744023026432842
    2. 'r' → logprob: -8.625473976135254
    3. 'rer' → logprob: -9.750473976135254
    4. 'ager' → logprob: -10.000473976135254
    5. 'age' → logprob: -10.500473976135254
    6. 'uer' → logprob: -10.750473976135254
    7. 'ler' → logprob: -11.000473976135254
    8. 'orer' → logprob: -11.500473976135254
    9. 'ocker' → logprob: -11.750473976135254
    10. 'e' → logprob: -11.875473976135254

Token 191: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1266779750585556
    2. 'None' → logprob: -2.626677989959717
    3. '[N' → logprob: -4.626677989959717
    4. ' la' → logprob: -4.876677989959717
    5. ' None' → logprob: -5.001677989959717
    6. '[]' → logprob: -5.001677989959717
    7. ' [' → logprob: -5.001677989959717
    8. '[-' → logprob: -5.876677989959717
    9. 'l' → logprob: -6.751677989959717
    10. ' des' → logprob: -6.876677989959717

Token 192: ' dernier' (ID: 27982)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.9331281185150146
    2. '-' → logprob: -1.0581281185150146
    3. 'previous' → logprob: -2.9331281185150146
    4. 'dern' → logprob: -3.1831281185150146
    5. ' None' → logprob: -3.4331281185150146
    6. 'index' → logprob: -3.5581281185150146
    7. 'indice' → logprob: -4.183128356933594
    8. 'pr' → logprob: -4.433128356933594
    9. ' précédent' → logprob: -4.683128356933594
    10. 'der' → logprob: -4.683128356933594

Token 193: ' indice' (ID: 90848)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.5314178466796875
    2. 'valid' → logprob: -1.7814178466796875
    3. 'index' → logprob: -2.1564178466796875
    4. '_' → logprob: -3.4064178466796875
    5. ' valid' → logprob: -4.6564178466796875
    6. '_valid' → logprob: -4.6564178466796875
    7. ')' → logprob: -4.6564178466796875
    8. 'position' → logprob: -5.0314178466796875
    9. 'élé' → logprob: -5.2814178466796875
    10. 'é' → logprob: -5.2814178466796875

Token 194: ' où' (ID: 15113)
  Prédit: ' valide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valide' → logprob: -0.15144763886928558
    2. 'val' → logprob: -2.7764475345611572
    3. 'valid' → logprob: -3.4014475345611572
    4. ' valid' → logprob: -3.6514475345611572
    5. '_valid' → logprob: -5.276447772979736
    6. ' valable' → logprob: -5.651447772979736
    7. '_val' → logprob: -6.151447772979736
    8. ' val' → logprob: -6.276447772979736
    9. ')' → logprob: -6.776447772979736
    10. ' ' → logprob: -6.901447772979736

Token 195: ' chaque' (ID: 21194)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.2255017757415771
    2. 'on' → logprob: -1.7255017757415771
    3. ' on' → logprob: -1.9755017757415771
    4. ' une' → logprob: -2.475501775741577
    5. ' C' → logprob: -2.725501775741577
    6. 'l' → logprob: -3.100501775741577
    7. ' la' → logprob: -3.475501775741577
    8. 'une' → logprob: -3.725501775741577
    9. 'un' → logprob: -3.850501775741577
    10. ' un' → logprob: -3.975501775741577

Token 196: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3210888206958771
    2. ' valeur' → logprob: -2.1960887908935547
    3. 'élé' → logprob: -2.6960887908935547
    4. 'value' → logprob: -4.446088790893555
    5. 'position' → logprob: -4.446088790893555
    6. ')' → logprob: -4.571088790893555
    7. 'token' → logprob: -5.321088790893555
    8. 'C' → logprob: -5.571088790893555
    9. ' val' → logprob: -5.696088790893555
    10. 'nombre' → logprob: -5.696088790893555

Token 197: ' C' (ID: 363)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3716261088848114
    2. 'a' → logprob: -1.4966261386871338
    3. ' was' → logprob: -4.246625900268555
    4. ' appar' → logprob: -4.621625900268555
    5. ' est' → logprob: -4.746625900268555
    6. ')' → logprob: -4.996625900268555
    7. ' unique' → logprob: -5.746625900268555
    8. ']' → logprob: -5.871625900268555
    9. ' appara' → logprob: -5.996625900268555
    10. 'ap' → logprob: -5.996625900268555

Token 198: '[i' (ID: 1768)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3607318699359894
    2. ' a' → logprob: -1.485731840133667
    3. ')' → logprob: -4.360732078552246
    4. ' appar' → logprob: -4.735732078552246
    5. ' appara' → logprob: -4.985732078552246
    6. 'max' → logprob: -5.360732078552246
    7. ' was' → logprob: -5.360732078552246
    8. 'ap' → logprob: -5.610732078552246
    9. ' est' → logprob: -5.860732078552246
    10. 'val' → logprob: -5.985732078552246

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014767316170036793
    2. '])' → logprob: -5.139767169952393
    3. ' ]' → logprob: -5.264767169952393
    4. 'a' → logprob: -6.639767169952393
    5. ' a' → logprob: -7.139767169952393
    6. ']==' → logprob: -7.889767169952393
    7. ')' → logprob: -8.01476764678955
    8. '']' → logprob: -8.38976764678955
    9. '[i' → logprob: -9.01476764678955
    10. ')]' → logprob: -9.13976764678955

Token 200: ' est' (ID: 893)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2797754108905792
    2. 'a' → logprob: -1.5297753810882568
    3. ')' → logprob: -4.279775619506836
    4. ' was' → logprob: -5.779775619506836
    5. ' appara' → logprob: -6.279775619506836
    6. ' est' → logprob: -6.404775619506836
    7. '   ' → logprob: -6.779775619506836
    8. ' était' → logprob: -6.779775619506836
    9. ']' → logprob: -7.404775619506836
    10. ' apparaît' → logprob: -7.529775619506836

Token 201: ' appar' (ID: 13643)
  Prédit: 'vu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vu' → logprob: -0.3697774112224579
    2. 'vue' → logprob: -1.7447774410247803
    3. ' appar' → logprob: -3.9947774410247803
    4. 'tr' → logprob: -4.369777202606201
    5. 'ren' → logprob: -4.369777202606201
    6. 'stock' → logprob: -4.494777202606201
    7. 'appar' → logprob: -4.494777202606201
    8. 'observ' → logprob: -4.494777202606201
    9. ' stock' → logprob: -4.619777202606201
    10. 'seen' → logprob: -4.869777202606201

Token 202: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.5292752981185913
    2. 'u' → logprob: -0.9042752981185913
    3. '
' → logprob: -7.029275417327881
    4. '```' → logprob: -7.529275417327881
    5. '</' → logprob: -8.091774940490723
    6. '

' → logprob: -8.404274940490723
    7. ']' → logprob: -8.466774940490723
    8. '}' → logprob: -8.716774940490723
    9. '``' → logprob: -8.841774940490723
    10. '   ' → logprob: -8.904274940490723

Token 203: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07155900448560715
    2. '   ' → logprob: -3.196558952331543
    3. ')
' → logprob: -4.196558952331543
    4. '.' → logprob: -4.946558952331543
    5. ').' → logprob: -6.196558952331543
    6. ' )' → logprob: -6.696558952331543
    7. ']' → logprob: -7.071558952331543
    8. ',' → logprob: -7.196558952331543
    9. '.
' → logprob: -8.321558952331543
    10. ' pour' → logprob: -9.321558952331543

Token 204: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48947104811668396
    2. '   ' → logprob: -0.9894710779190063
    3. ')
' → logprob: -4.489470958709717
    4. '):
' → logprob: -6.489470958709717
    5. '
' → logprob: -6.614470958709717
    6. '"""
' → logprob: -7.614470958709717
    7. 'def' → logprob: -8.239471435546875
    8. '):' → logprob: -9.364471435546875
    9. '"""' → logprob: -9.364471435546875
    10. '```' → logprob: -9.364471435546875

Token 205: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08842969685792923
    2. ')' → logprob: -2.9634296894073486
    3. '):
' → logprob: -3.8384296894073486
    4. '
' → logprob: -5.088429927825928
    5. '):' → logprob: -6.088429927825928
    6. '"""
' (adapté à ' """
') → logprob: -6.963429927825928
    7. ')
' → logprob: -7.088429927825928
    8. '    
' → logprob: -8.08842945098877
    9. 'def' → logprob: -8.21342945098877
    10. '```' → logprob: -8.33842945098877

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001290454383706674
    2. '    
' → logprob: -9.875128746032715
    3. '
' → logprob: -10.000128746032715
    4. '```' → logprob: -11.375128746032715
    5. 'def' → logprob: -11.750128746032715
    6. 'dp' → logprob: -12.500128746032715
    7. ')' → logprob: -13.000128746032715
    8. '  
' → logprob: -13.125128746032715
    9. '   ' → logprob: -13.250128746032715
    10. '  ' → logprob: -14.625128746032715

Token 207: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.016083991155028343
    2. '   ' → logprob: -4.39108419418335
    3. ' dp' → logprob: -5.64108419418335
    4. 'import' → logprob: -11.141083717346191
    5. '	dp' → logprob: -13.391083717346191
    6. '
' → logprob: -14.016083717346191
    7. 'def' → logprob: -14.141083717346191
    8. ' ' → logprob: -14.766083717346191
    9. '       ' → logprob: -15.891083717346191
    10. '  ' → logprob: -16.141084671020508

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. '   ' → logprob: -14.953890800476074
    4. ',' → logprob: -15.703890800476074
    5. ' ' → logprob: -16.953889846801758
    6. ')' → logprob: -17.828889846801758
    7. '[' → logprob: -18.453889846801758
    8. '  ' → logprob: -18.703889846801758
    9. '```' → logprob: -18.703889846801758
    10. ' =
' → logprob: -19.078889846801758

Token 209: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.349075556499884e-05
    2. ' [' → logprob: -10.2500638961792
    3. '[N' → logprob: -10.6250638961792
    4. '[-' → logprob: -12.7500638961792
    5. '[n' → logprob: -15.2500638961792
    6. '[len' → logprob: -15.7500638961792
    7. '[int' → logprob: -16.250062942504883
    8. '[num' → logprob: -16.375062942504883
    9. '[max' → logprob: -17.125062942504883
    10. '[node' → logprob: -17.625062942504883

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012320445966906846
    2. '[' → logprob: -9.250123023986816
    3. '1' → logprob: -10.875123023986816
    4. '-' → logprob: -12.000123023986816
    5. ' ' → logprob: -13.750123023986816
    6. ' [' → logprob: -15.500123023986816
    7. 'False' → logprob: -15.875123023986816
    8. '[N' → logprob: -16.000123977661133
    9. 'float' → logprob: -16.250123977661133
    10. ']' → logprob: -16.250123977661133

Token 211: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010955691104754806
    2. ' for' → logprob: -7.001095771789551
    3. 'for' → logprob: -9.50109577178955
    4. ']*' → logprob: -9.87609577178955
    5. ']*(' → logprob: -10.00109577178955
    6. ' ]' → logprob: -11.62609577178955
    7. '   ' → logprob: -13.75109577178955
    8. ']+' → logprob: -14.00109577178955
    9. ')' → logprob: -14.37609577178955
    10. ',' → logprob: -14.50109577178955

Token 212: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029794683679938316
    2. ' _' → logprob: -3.529794692993164
    3. '_range' → logprob: -10.279794692993164
    4. '_i' → logprob: -12.279794692993164
    5. ' i' → logprob: -13.029794692993164
    6. ' range' → logprob: -13.904794692993164
    7. '_in' → logprob: -14.029794692993164
    8. ' in' → logprob: -14.904794692993164
    9. 'i' → logprob: -15.904794692993164
    10. 'range' → logprob: -16.404794692993164

Token 213: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06423884630203247
    2. ' range' → logprob: -2.8142387866973877
    3. ' in' → logprob: -6.439239025115967
    4. 'in' → logprob: -7.314239025115967
    5. '(range' → logprob: -13.314238548278809
    6. ' ' → logprob: -13.564238548278809
    7. '_range' → logprob: -14.564238548278809
    8. 'ange' → logprob: -14.689238548278809
    9. '	range' → logprob: -15.064238548278809
    10. ' xrange' → logprob: -15.314238548278809

Token 214: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038044244050979614
    2. ' range' → logprob: -3.2880442142486572
    3. '(range' → logprob: -14.413043975830078
    4. ']' → logprob: -14.538043975830078
    5. ' ' → logprob: -14.663043975830078
    6. '	range' → logprob: -15.038043975830078
    7. ')' → logprob: -15.163043975830078
    8. '   ' → logprob: -15.413043975830078
    9. '_' → logprob: -15.663043975830078
    10. 'rang' → logprob: -16.288043975830078

Token 215: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22140659391880035
    2. '(N' → logprob: -1.7214065790176392
    3. ' N' → logprob: -3.9714066982269287
    4. ' (' → logprob: -7.97140645980835
    5. '(' → logprob: -8.471406936645508
    6. '   ' → logprob: -8.721406936645508
    7. ')' → logprob: -9.221406936645508
    8. ']' → logprob: -9.971406936645508
    9. '0' → logprob: -10.846406936645508
    10. 'range' → logprob: -10.971406936645508

Token 216: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0016453108983114362
    2. '+' → logprob: -6.501645088195801
    3. ')]
' → logprob: -9.2516450881958
    4. ']' → logprob: -10.7516450881958
    5. ' )' → logprob: -11.3766450881958
    6. ')' → logprob: -12.6266450881958
    7. ' +' → logprob: -12.6266450881958
    8. ' ]' → logprob: -12.7516450881958
    9. ')]

' → logprob: -13.2516450881958
    10. '   ' → logprob: -13.6266450881958

Token 217: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5948623418807983
    2. '
' → logprob: -0.9698623418807983
    3. 'r' → logprob: -3.594862461090088
    4. '<|end|>' → logprob: -3.844862461090088
    5. '    
' → logprob: -4.469862461090088
    6. ' r' → logprob: -6.344862461090088
    7. ',' → logprob: -6.469862461090088
    8. ' ' → logprob: -6.844862461090088
    9. ')' → logprob: -7.094862461090088
    10. '  
' → logprob: -7.219862461090088

Token 218: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.78139728307724
    2. '<|end|>' → logprob: -1.0313973426818848
    3. 'dp' → logprob: -2.0313973426818848
    4. '   ' → logprob: -3.9063973426818848
    5. '<|end|>' → logprob: -4.781397342681885
    6. '    
' → logprob: -5.031397342681885
    7. ']' → logprob: -5.406397342681885
    8. ' dp' → logprob: -5.781397342681885
    9. ' 
' → logprob: -6.156397342681885
    10. ',' → logprob: -6.156397342681885

Token 219: ' Nombre' (ID: 70208)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4399634897708893
    2. ' dp' → logprob: -1.064963459968567
    3. '0' → logprob: -5.939963340759277
    4. ' ' → logprob: -6.314963340759277
    5. ']' → logprob: -6.814963340759277
    6. '   ' → logprob: -6.814963340759277
    7. '
' → logprob: -7.064963340759277
    8. 'r' → logprob: -7.439963340759277
    9. '[' → logprob: -7.564963340759277
    10. ' ]' → logprob: -7.814963340759277

Token 220: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11244376003742218
    2. 'de' → logprob: -3.237443685531616
    3. ' d' → logprob: -3.487443685531616
    4. '<|end|>' → logprob: -4.612443923950195
    5. 'd' → logprob: -4.987443923950195
    6. ' des' → logprob: -5.487443923950195
    7. ' of' → logprob: -5.737443923950195
    8. '_de' → logprob: -5.862443923950195
    9. '_' → logprob: -5.987443923950195
    10. '  ' → logprob: -6.987443923950195

Token 221: ' façons' (ID: 165958)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.5645928382873535
    2. ' façons' → logprob: -1.0645928382873535
    3. 'man' → logprob: -2.6895928382873535
    4. 'ways' → logprob: -4.8145928382873535
    5. ' fa' → logprob: -5.6895928382873535
    6. ' man' → logprob: -6.0645928382873535
    7. ' ways' → logprob: -6.5645928382873535
    8. ' ' → logprob: -7.4395928382873535
    9. 'che' → logprob: -7.5645928382873535
    10. '   ' → logprob: -8.064592361450195

Token 222: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0045157670974731
    2. '<|end|>' → logprob: -1.2545157670974731
    3. ' d' → logprob: -1.6295157670974731
    4. '   ' → logprob: -2.7545156478881836
    5. 'd' → logprob: -3.3795156478881836
    6. 'de' → logprob: -4.254515647888184
    7. ' ' → logprob: -4.504515647888184
    8. 'dp' → logprob: -5.254515647888184
    9. '  ' → logprob: -5.504515647888184
    10. ')' → logprob: -5.754515647888184

Token 223: ''arr' (ID: 49695)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02281968481838703
    2. 'atte' → logprob: -5.147819519042969
    3. ''aller' → logprob: -5.397819519042969
    4. ''acc' → logprob: -5.897819519042969
    5. ''arr' → logprob: -5.897819519042969
    6. ''obtenir' → logprob: -6.272819519042969
    7. 'e' → logprob: -6.647819519042969
    8. '_' → logprob: -7.147819519042969
    9. ' atteindre' → logprob: -7.272819519042969
    10. ''accès' → logprob: -7.897819519042969

Token 224: 'iver' (ID: 1788)
  Prédit: 'iver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iver' → logprob: -0.002917691832408309
    2. 'ive' → logprob: -6.252917766571045
    3. 'iv' → logprob: -8.127917289733887
    4. 'ever' → logprob: -9.252917289733887
    5. 'ivée' → logprob: -9.377917289733887
    6. '"' → logprob: -9.377917289733887
    7. 'e' → logprob: -9.752917289733887
    8. '[' → logprob: -10.127917289733887
    9. '>' → logprob: -10.502917289733887
    10. '   ' → logprob: -10.627917289733887

Token 225: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.01882179081439972
    2. ' ' → logprob: -4.518821716308594
    3. 'à' → logprob: -5.393821716308594
    4. ' au' → logprob: -6.643821716308594
    5. ' a' → logprob: -7.393821716308594
    6. ' jusqu' → logprob: -8.018821716308594
    7. 'au' → logprob: -8.393821716308594
    8. ' en' → logprob: -8.643821716308594
    9. '  ' → logprob: -9.393821716308594
    10. '_' → logprob: -9.518821716308594

Token 226: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.09769368916749954
    2. ' i' → logprob: -2.597693681716919
    3. 'i' → logprob: -5.222693920135498
    4. ' la' → logprob: -5.347693920135498
    5. ' position' → logprob: -5.722693920135498
    6. ' each' → logprob: -6.097693920135498
    7. ' ' → logprob: -6.222693920135498
    8. ' chacune' → logprob: -8.72269344329834
    9. ' l' → logprob: -8.84769344329834
    10. 'each' → logprob: -8.97269344329834

Token 227: ' index' (ID: 3472)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.4974736273288727
    2. ' i' → logprob: -1.3724735975265503
    3. 'position' → logprob: -2.62247371673584
    4. 'indice' → logprob: -3.99747371673584
    5. ' index' → logprob: -4.12247371673584
    6. 'i' → logprob: -4.12247371673584
    7. 'index' → logprob: -5.12247371673584
    8. ' indice' → logprob: -5.74747371673584
    9. '_' → logprob: -5.87247371673584
    10. ' ' → logprob: -6.49747371673584

Token 228: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4351597726345062
    2. '
' → logprob: -1.3101598024368286
    3. '<|end|>' → logprob: -2.810159683227539
    4. '<|end|>' → logprob: -4.810159683227539
    5. ' dp' → logprob: -5.685159683227539
    6. ')' → logprob: -6.310159683227539
    7. ']' → logprob: -6.310159683227539
    8. '(dp' → logprob: -6.560159683227539
    9. '   ' → logprob: -6.935159683227539
    10. '  
' → logprob: -7.060159683227539

Token 229: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2744613587856293
    2. '   ' → logprob: -2.024461269378662
    3. ' r' → logprob: -2.399461269378662
    4. '
' → logprob: -4.899461269378662
    5. '    
' → logprob: -5.274461269378662
    6. 'dp' → logprob: -5.899461269378662
    7. ' dp' → logprob: -7.899461269378662
    8. ',' → logprob: -7.899461269378662
    9. ',
' → logprob: -8.02446174621582
    10. '  
' → logprob: -8.39946174621582

Token 230: ' dp' (ID: 21546)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01690654456615448
    2. ' r' → logprob: -4.14190673828125
    3. '   ' → logprob: -7.26690673828125
    4. 'dp' (adapté à ' dp') → logprob: -8.89190673828125
    5. ' dp' → logprob: -11.51690673828125
    6. 'prev' → logprob: -12.26690673828125
    7. 'return' → logprob: -12.51690673828125
    8. ' ' → logprob: -12.51690673828125
    9. '    
' → logprob: -13.01690673828125
    10. '	r' → logprob: -13.26690673828125

Token 231: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.246537173457909e-06
    2. ' [' → logprob: -12.625003814697266
    3. ' =' → logprob: -14.500003814697266
    4. ' ' → logprob: -15.625003814697266
    5. '   ' → logprob: -16.375003814697266
    6. '[N' → logprob: -17.375003814697266
    7. '[-' → logprob: -17.500003814697266
    8. '```' → logprob: -17.875003814697266
    9. ']' → logprob: -18.000003814697266
    10. '=' → logprob: -18.000003814697266

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.872261317563243e-05
    2. ' ' → logprob: -9.750059127807617
    3. ']' → logprob: -15.250059127807617
    4. ')' → logprob: -16.875059127807617
    5. '-' → logprob: -16.875059127807617
    6. '   ' → logprob: -17.500059127807617
    7. '=' → logprob: -17.625059127807617
    8. 'N' → logprob: -17.750059127807617
    9. '1' → logprob: -18.500059127807617
    10. '[' → logprob: -18.625059127807617

Token 233: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.2617008400848135e-05
    2. ']=' → logprob: -10.750032424926758
    3. ' ]' → logprob: -11.875032424926758
    4. ')' → logprob: -12.750032424926758
    5. '=' → logprob: -13.750032424926758
    6. ']+=' → logprob: -17.000032424926758
    7. '   ' → logprob: -17.500032424926758
    8. ']
' → logprob: -17.875032424926758
    9. ')]' → logprob: -18.000032424926758
    10. ']

' → logprob: -18.500032424926758

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474077433347702
    2. '=' → logprob: -0.9740774631500244
    3. ',' → logprob: -15.849077224731445
    4. ' =
' → logprob: -16.224077224731445
    5. ']' → logprob: -16.349077224731445
    6. ')' → logprob: -17.224077224731445
    7. '[' → logprob: -17.224077224731445
    8. '＝' → logprob: -17.849077224731445
    9. ']=' → logprob: -18.224077224731445
    10. ' ' → logprob: -18.224077224731445

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '0' → logprob: -16.37501335144043
    4. '   ' → logprob: -16.75001335144043
    5. '  ' → logprob: -19.00001335144043
    6. '' → logprob: -19.56251335144043
    7. '۱' → logprob: -19.56251335144043
    8. '[' → logprob: -19.93751335144043
    9. '```' → logprob: -20.06251335144043
    10. ' ' → logprob: -20.25001335144043

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.2500057220459
    4. '0' → logprob: -18.6250057220459
    5. '  ' → logprob: -18.8750057220459
    6. '
' → logprob: -19.8125057220459
    7. '

' → logprob: -20.1250057220459
    8. '۱' → logprob: -20.3750057220459
    9. '    ' → logprob: -20.7500057220459
    10. '１' → logprob: -21.1875057220459

Token 237: '                  ' (ID: 8854)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14737243950366974
    2. '   ' → logprob: -2.0223724842071533
    3. '    
' → logprob: -5.522372245788574
    4. '  
' → logprob: -8.522372245788574
    5. '<|end|>' → logprob: -8.897372245788574
    6. '	
' → logprob: -9.272372245788574
    7. 'r' → logprob: -9.772372245788574
    8. '   
' → logprob: -10.022372245788574
    9. ' 
' → logprob: -10.147372245788574
    10. '	r' → logprob: -11.022372245788574

Token 238: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004326145630329847
    2. '   ' → logprob: -5.629326343536377
    3. '    
' → logprob: -7.629326343536377
    4. '<|end|>' → logprob: -8.879325866699219
    5. '  
' → logprob: -10.254325866699219
    6. ' 
' → logprob: -11.129325866699219
    7. '\n' → logprob: -11.254325866699219
    8. '	
' → logprob: -11.629325866699219
    9. '
' → logprob: -12.004325866699219
    10. ' for' → logprob: -12.129325866699219

Token 239: ' Il' (ID: 5329)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4483950436115265
    2. '   ' → logprob: -2.573395013809204
    3. ' def' → logprob: -2.823395013809204
    4. '#' → logprob: -2.823395013809204
    5. 'dp' → logprob: -2.948395013809204
    6. ' ' → logprob: -3.698395013809204
    7. ' dp' → logprob: -3.823395013809204
    8. ' #' → logprob: -3.823395013809204
    9. '0' → logprob: -3.948395013809204
    10. '1' → logprob: -5.823395252227783

Token 240: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.5249583721160889
    2. 's' → logprob: -1.7749583721160889
    3. 'def' → logprob: -1.7749583721160889
    4. ' n' → logprob: -2.024958372116089
    5. ' s' → logprob: -2.899958372116089
    6. ' faut' → logprob: -3.024958372116089
    7. 'n' → logprob: -3.399958372116089
    8. ' est' → logprob: -3.649958372116089
    9. ' def' → logprob: -4.024958610534668
    10. 'y' → logprob: -4.149958610534668

Token 241: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10668673366308212
    2. 'a' → logprob: -2.35668683052063
    3. 's' → logprob: -5.356686592102051
    4. ''a' → logprob: -7.606686592102051
    5. 'space' → logprob: -8.10668659210205
    6. ''s' → logprob: -9.10668659210205
    7. 'is' → logprob: -9.10668659210205
    8. ' ' → logprob: -9.23168659210205
    9. '1' → logprob: -9.48168659210205
    10. 'est' → logprob: -9.73168659210205

Token 242: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4482022821903229
    2. ' ' → logprob: -1.3232022523880005
    3. '1' → logprob: -2.57320237159729
    4. 'une' → logprob: -5.073202133178711
    5. ' un' → logprob: -5.948202133178711
    6. ' au' → logprob: -5.948202133178711
    7. ' exactement' → logprob: -6.073202133178711
    8. ' seulement' → logprob: -6.448202133178711
    9. 'au' → logprob: -6.448202133178711
    10. ' toujours' → logprob: -7.573202133178711

Token 243: ' seule' (ID: 41983)
  Prédit: ' seule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -0.40136873722076416
    2. 'se' → logprob: -2.0263686180114746
    3. ' façon' → logprob: -2.2763686180114746
    4. ' manière' → logprob: -3.6513686180114746
    5. 'prem' → logprob: -4.151368618011475
    6. 'man' → logprob: -4.276368618011475
    7. ' seul' → logprob: -4.776368618011475
    8. 'unique' → logprob: -5.276368618011475
    9. ' ' → logprob: -5.401368618011475
    10. ' unique' → logprob: -5.901368618011475

Token 244: ' façon' (ID: 33381)
  Prédit: ' façon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façon' → logprob: -0.14979445934295654
    2. 'fa' → logprob: -2.649794578552246
    3. ' manière' → logprob: -3.149794578552246
    4. 'man' → logprob: -4.649794578552246
    5. ' ' → logprob: -5.024794578552246
    6. ' fa' → logprob: -6.399794578552246
    7. ' façons' → logprob: -6.524794578552246
    8. ' way' → logprob: -6.774794578552246
    9. ' man' → logprob: -6.899794578552246
    10. 'way' → logprob: -7.024794578552246

Token 245: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3575246036052704
    2. 'd' → logprob: -1.8575246334075928
    3. ' de' → logprob: -2.2325246334075928
    4. ' ' → logprob: -4.607524394989014
    5. ' to' → logprob: -4.607524394989014
    6. 'de' → logprob: -4.607524394989014
    7. '   ' → logprob: -6.232524394989014
    8. 'to' → logprob: -6.482524394989014
    9. '  ' → logprob: -6.732524394989014
    10. ' pour' → logprob: -7.732524394989014

Token 246: ''être' (ID: 47704)
  Prédit: ' arriver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arriver' → logprob: -0.6249797344207764
    2. 'arr' → logprob: -1.4999797344207764
    3. ' commencer' → logprob: -1.6249797344207764
    4. ' atteindre' → logprob: -4.1249799728393555
    5. ' rester' → logprob: -5.3749799728393555
    6. ' partir' → logprob: -5.7499799728393555
    7. ' être' → logprob: -5.8749799728393555
    8. ' ' → logprob: -5.8749799728393555
    9. 'start' → logprob: -6.1249799728393555
    10. 're' → logprob: -6.1249799728393555

Token 247: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.3615671694278717
    2. ' à' → logprob: -1.9865671396255493
    3. 'au' → logprob: -2.486567258834839
    4. 'à' → logprob: -3.236567258834839
    5. ' ' → logprob: -3.486567258834839
    6. '0' → logprob: -5.23656702041626
    7. ' at' → logprob: -6.36156702041626
    8. ' là' → logprob: -6.98656702041626
    9. 'arr' → logprob: -7.11156702041626
    10. 'position' → logprob: -7.11156702041626

Token 248: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.8008022904396057
    2. ' début' → logprob: -1.675802230834961
    3. 'prem' → logprob: -2.050802230834961
    4. ' départ' → logprob: -2.175802230834961
    5. '0' → logprob: -2.925802230834961
    6. ' premier' → logprob: -3.800802230834961
    7. 'd' → logprob: -4.675802230834961
    8. 'point' → logprob: -4.800802230834961
    9. 'index' → logprob: -4.800802230834961
    10. 'indice' → logprob: -5.550802230834961

Token 249: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17409123480319977
    2. '
' → logprob: -2.424091339111328
    3. 'r' → logprob: -3.049091339111328
    4. '	r' → logprob: -4.424091339111328
    5. '    
' → logprob: -4.674091339111328
    6. '	
' → logprob: -7.174091339111328
    7. ' r' → logprob: -7.549091339111328
    8. '\t' → logprob: -7.674091339111328
    9. '  
' → logprob: -9.049091339111328
    10. ' 
' → logprob: -9.299091339111328

Token 251: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.16167861223220825
    2. '   ' → logprob: -2.5366785526275635
    3. ' r' → logprob: -2.6616785526275635
    4. '	r' → logprob: -8.411678314208984
    5. '\t' → logprob: -10.661678314208984
    6. '
' → logprob: -10.911678314208984
    7. '  ' → logprob: -11.411678314208984
    8. '    
' → logprob: -11.536678314208984
    9. ' ' → logprob: -11.536678314208984
    10. '    ' → logprob: -11.661678314208984

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994488090276718
    2. '=' → logprob: -2.6949448585510254
    3. ' ' → logprob: -12.569945335388184
    4. '   ' → logprob: -13.444945335388184
    5. '=[' → logprob: -14.069945335388184
    6. ',' → logprob: -14.069945335388184
    7. ' =[' → logprob: -14.694945335388184
    8. '[' → logprob: -14.819945335388184
    9. '=[]' → logprob: -14.819945335388184
    10. '  ' → logprob: -15.069945335388184

Token 253: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07085417211055756
    2. '[N' → logprob: -3.0708541870117188
    3. ' [' → logprob: -4.320854187011719
    4. '[-' → logprob: -4.820854187011719
    5. '[r' → logprob: -8.445854187011719
    6. '[i' → logprob: -8.695854187011719
    7. '[n' → logprob: -8.820854187011719
    8. ' [-' → logprob: -9.445854187011719
    9. '[j' → logprob: -10.570854187011719
    10. '[list' → logprob: -12.445854187011719

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018422940047457814
    2. '2' → logprob: -8.750184059143066
    3. '-' → logprob: -12.125184059143066
    4. '10' → logprob: -12.500184059143066
    5. '100' → logprob: -12.875184059143066
    6. '3' → logprob: -13.125184059143066
    7. '4' → logprob: -13.812684059143066
    8. 'N' → logprob: -13.875184059143066
    9. '(' → logprob: -13.875184059143066
    10. '99' → logprob: -14.125184059143066

Token 255: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008663260377943516
    2. 'for' → logprob: -4.758663177490234
    3. ']' → logprob: -10.508663177490234
    4. ' ' → logprob: -11.508663177490234
    5. '	for' → logprob: -12.508663177490234
    6. '   ' → logprob: -12.633663177490234
    7. ' ]' → logprob: -13.633663177490234
    8. ']*' → logprob: -14.133663177490234
    9. ')' → logprob: -14.258663177490234
    10. '    ' → logprob: -15.383663177490234

Token 256: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.27864253520965576
    2. '_' → logprob: -1.5286425352096558
    3. ' _' → logprob: -4.028642654418945
    4. 'range' → logprob: -4.903642654418945
    5. '_range' → logprob: -6.778642654418945
    6. '(range' → logprob: -12.778642654418945
    7. ' ' → logprob: -14.778642654418945
    8. '	range' → logprob: -15.278642654418945
    9. ' xrange' → logprob: -15.903642654418945
    10. ' i' → logprob: -16.403642654418945

Token 257: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05494682863354683
    2. ' range' → logprob: -2.9299468994140625
    3. 'ange' → logprob: -10.929946899414062
    4. 'in' → logprob: -11.304946899414062
    5. '(range' → logprob: -11.304946899414062
    6. '_' → logprob: -11.804946899414062
    7. '_range' → logprob: -12.054946899414062
    8. ' in' → logprob: -12.054946899414062
    9. ' ' → logprob: -14.179946899414062
    10. '	range' → logprob: -14.679946899414062

Token 258: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931780576705933
    2. 'range' → logprob: -0.6931780576705933
    3. '_' → logprob: -10.693178176879883
    4. '_range' → logprob: -11.818178176879883
    5. '(range' → logprob: -15.193178176879883
    6. ' _' → logprob: -15.193178176879883
    7. '	range' → logprob: -15.818178176879883
    8. ' xrange' → logprob: -15.943178176879883
    9. ' ' → logprob: -17.943178176879883
    10. 'ange' → logprob: -18.443178176879883

Token 259: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0746121034026146
    2. 'N' → logprob: -2.6996121406555176
    3. ' N' → logprob: -6.199612140655518
    4. ' (' → logprob: -6.324612140655518
    5. '   ' → logprob: -7.824612140655518
    6. '(' → logprob: -8.69961166381836
    7. 'range' → logprob: -9.44961166381836
    8. ')' → logprob: -9.82461166381836
    9. ' range' → logprob: -9.94961166381836
    10. ']' → logprob: -10.57461166381836

Token 260: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013886855449527502
    2. ']' → logprob: -6.7513885498046875
    3. ')' → logprob: -8.501388549804688
    4. '   ' → logprob: -12.126388549804688
    5. ')]
' → logprob: -12.501388549804688
    6. ' ]' → logprob: -13.001388549804688
    7. ' )' → logprob: -13.501388549804688
    8. '])' → logprob: -14.376388549804688
    9. '])]' → logprob: -14.876388549804688
    10. '}]' → logprob: -15.251388549804688

Token 261: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3099447786808014
    2. '
' → logprob: -1.809944748878479
    3. '<|end|>' → logprob: -2.3099448680877686
    4. '    
' → logprob: -6.1849446296691895
    5. '<|end|>' → logprob: -7.8099446296691895
    6. '  ' → logprob: -8.059945106506348
    7. ' ' → logprob: -8.434945106506348
    8. ')' → logprob: -8.434945106506348
    9. '  
' → logprob: -8.809945106506348
    10. ' 
' → logprob: -10.184945106506348

Token 262: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18696708977222443
    2. '
' → logprob: -1.811967134475708
    3. '    
' → logprob: -5.436966896057129
    4. 'return' → logprob: -7.561966896057129
    5. ')' → logprob: -7.686966896057129
    6. 'prev' → logprob: -8.061966896057129
    7. '   
' → logprob: -8.061966896057129
    8. '  
' → logprob: -8.186966896057129
    9. ' return' → logprob: -8.561966896057129
    10. '
' → logprob: -8.686966896057129

Token 263: ' Pour' (ID: 13931)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016375208273530006
    2. ' -' → logprob: -4.6413750648498535
    3. '0' → logprob: -5.3913750648498535
    4. 'r' → logprob: -6.5163750648498535
    5. ' r' → logprob: -8.766375541687012
    6. ' ' → logprob: -8.891375541687012
    7. '-r' → logprob: -9.766375541687012
    8. 'for' → logprob: -10.266375541687012
    9. '   ' → logprob: -10.266375541687012
    10. 'N' → logprob: -10.516375541687012

Token 264: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.251516193151474
    2. 'i' → logprob: -1.7515162229537964
    3. ' chaque' → logprob: -4.626516342163086
    4. 'r' → logprob: -4.751516342163086
    5. ' _' → logprob: -4.876516342163086
    6. '_' → logprob: -5.251516342163086
    7. ' ' → logprob: -6.251516342163086
    8. ' r' → logprob: -6.626516342163086
    9. 'ind' → logprob: -6.626516342163086
    10. '   ' → logprob: -6.751516342163086

Token 265: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.706078290939331
    2. ' i' → logprob: -0.706078290939331
    3. 'index' → logprob: -5.45607852935791
    4. ' index' → logprob: -5.58107852935791
    5. 'indice' → logprob: -5.70607852935791
    6. '_' → logprob: -7.70607852935791
    7. ' position' → logprob: -8.08107852935791
    8. ' indice' → logprob: -8.45607852935791
    9. 'position' → logprob: -8.83107852935791
    10. '_i' → logprob: -9.58107852935791

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033477287739515305
    2. ')' → logprob: -4.408477306365967
    3. ' ,' → logprob: -4.658477306365967
    4. '   ' → logprob: -4.908477306365967
    5. ']' → logprob: -6.783477306365967
    6. 'def' → logprob: -7.783477306365967
    7. '<|end|>' → logprob: -7.783477306365967
    8. 'r' → logprob: -8.158476829528809
    9. '),' → logprob: -8.658476829528809
    10. ':' → logprob: -8.783476829528809

Token 267: ' stock' (ID: 6546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0953201055526733
    2. ' ' → logprob: -2.220320224761963
    3. '   ' → logprob: -2.220320224761963
    4. 'r' → logprob: -2.345320224761963
    5. ' on' → logprob: -2.345320224761963
    6. ' -' → logprob: -2.470320224761963
    7. '-' → logprob: -3.095320224761963
    8. '    ' → logprob: -3.720320224761963
    9. ' r' → logprob: -4.220320224761963
    10. ' trouver' → logprob: -4.345320224761963

Token 268: 'e' (ID: 68)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.8624639324116288e-06
    2. '   ' → logprob: -13.875001907348633
    3. 'e' → logprob: -14.125001907348633
    4. 'r' → logprob: -16.500001907348633
    5. '[' → logprob: -17.750001907348633
    6. 'ER' → logprob: -18.125001907348633
    7. '       ' → logprob: -18.500001907348633
    8. '0' → logprob: -18.750001907348633
    9. ' ' → logprob: -19.375001907348633
    10. '­er' → logprob: -19.750001907348633

Token 269: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9925161600112915
    2. ' la' → logprob: -1.4925161600112915
    3. 'l' → logprob: -1.9925161600112915
    4. ' le' → logprob: -2.742516040802002
    5. 'le' → logprob: -2.992516040802002
    6. ' ' → logprob: -2.992516040802002
    7. 'the' → logprob: -3.367516040802002
    8. '0' → logprob: -4.117516040802002
    9. ' the' → logprob: -4.242516040802002
    10. '    ' → logprob: -4.867516040802002

Token 270: ' prochain' (ID: 52413)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.3517362177371979
    2. 'plus' → logprob: -1.8517361879348755
    3. ' prochain' → logprob: -2.476736307144165
    4. 'next' → logprob: -4.226736068725586
    5. 'indice' → logprob: -4.351736068725586
    6. 'index' → logprob: -4.726736068725586
    7. ' plus' → logprob: -5.351736068725586
    8. ' index' → logprob: -6.101736068725586
    9. 'r' → logprob: -6.226736068725586
    10. 'su' → logprob: -6.601736068725586

Token 271: ' indice' (ID: 90848)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.34876376390457153
    2. 'index' → logprob: -1.5987637042999268
    3. 'valid' → logprob: -3.4737637042999268
    4. ' indice' → logprob: -3.8487637042999268
    5. ' index' → logprob: -4.348763942718506
    6. ' valid' → logprob: -4.473763942718506
    7. 'position' → logprob: -5.723763942718506
    8. ' ' → logprob: -5.848763942718506
    9. 's' → logprob: -5.973763942718506
    10. 'ind' → logprob: -6.598763942718506

Token 272: ' valide' (ID: 137323)
  Prédit: ' valide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valide' → logprob: -0.2912103533744812
    2. 'val' → logprob: -2.416210412979126
    3. ' valid' → logprob: -2.541210412979126
    4. 'valid' → logprob: -2.666210412979126
    5. ' valable' → logprob: -4.791210174560547
    6. ' val' → logprob: -5.916210174560547
    7. '   ' → logprob: -6.791210174560547
    8. 'possible' → logprob: -6.916210174560547
    9. ' possible' → logprob: -7.541210174560547
    10. 'où' → logprob: -9.166210174560547

Token 273: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24683520197868347
    2. '<|end|>' → logprob: -1.8718352317810059
    3. ' for' → logprob: -3.121835231781006
    4. '
' → logprob: -5.496835231781006
    5. '<|end|>' → logprob: -5.496835231781006
    6. 'for' → logprob: -6.246835231781006
    7. ' ' → logprob: -6.371835231781006
    8. '  ' → logprob: -6.496835231781006
    9. '    
' → logprob: -6.621835231781006
    10. 'def' → logprob: -6.621835231781006

Token 274: 'initial' (ID: 17493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05598258227109909
    2. ' )' → logprob: -3.3059825897216797
    3. '   ' → logprob: -5.05598258972168
    4. ' i' → logprob: -5.68098258972168
    5. 'i' → logprob: -7.05598258972168
    6. ']' → logprob: -7.05598258972168
    7. ')
' → logprob: -7.18098258972168
    8. '0' → logprob: -7.55598258972168
    9. '])' → logprob: -7.55598258972168
    10. '+' → logprob: -7.68098258972168

Token 275: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.032045137137174606
    2. ')' → logprob: -4.157045364379883
    3. 'ement' → logprob: -5.282045364379883
    4. 'isée' → logprob: -6.157045364379883
    5. '   ' → logprob: -6.532045364379883
    6. 'e' → logprob: -6.532045364379883
    7. 'ized' → logprob: -7.157045364379883
    8. '-' → logprob: -7.157045364379883
    9. '=' → logprob: -7.282045364379883
    10. ' -' → logprob: -8.157045364379883

Token 276: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.008342934772372246
    2. ')' → logprob: -5.758342742919922
    3. 'à' → logprob: -6.133342742919922
    4. ' avec' → logprob: -6.758342742919922
    5. '   ' → logprob: -7.133342742919922
    6. ',' → logprob: -8.008342742919922
    7. ' )' → logprob: -8.883342742919922
    8. ' ' → logprob: -8.883342742919922
    9. ' =' → logprob: -9.508342742919922
    10. ' en' → logprob: -9.758342742919922

Token 277: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4694977104663849
    2. 'N' → logprob: -1.5944976806640625
    3. ' -' → logprob: -2.2194976806640625
    4. ' N' → logprob: -2.9694976806640625
    5. '   ' → logprob: -4.5944976806640625
    6. '0' → logprob: -7.8444976806640625
    7. 'i' → logprob: -8.094497680664062
    8. ' ' → logprob: -8.219497680664062
    9. '-N' → logprob: -8.844497680664062
    10. ' i' → logprob: -8.969497680664062

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3464544432936236e-05
    2. ' ' → logprob: -10.500043869018555
    3. '   ' → logprob: -11.375043869018555
    4. '```' → logprob: -13.812543869018555
    5. '2' → logprob: -14.750043869018555
    6. '           ' → logprob: -15.000043869018555
    7. '  ' → logprob: -15.062543869018555
    8. ' -' → logprob: -15.312543869018555
    9. ',' → logprob: -15.375043869018555
    10. '`' → logprob: -15.437543869018555

Token 279: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003821716527454555
    2. '   ' → logprob: -8.125382423400879
    3. ' )' → logprob: -9.875382423400879
    4. ')
' → logprob: -10.375382423400879
    5. ']' → logprob: -14.125382423400879
    6. ')

' → logprob: -14.375382423400879
    7. ' ' → logprob: -14.500382423400879
    8. 'def' → logprob: -15.125382423400879
    9. ').' → logprob: -15.250382423400879
    10. ')]' → logprob: -16.125381469726562

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0176717359572649
    2. 'prev' → logprob: -4.267671585083008
    3. '	prev' → logprob: -5.892671585083008
    4. ' prev' → logprob: -7.642671585083008
    5. '    
' → logprob: -9.267671585083008
    6. '
' → logprob: -9.392671585083008
    7. '\t' → logprob: -9.892671585083008
    8. '```' → logprob: -12.142671585083008
    9. '       ' → logprob: -12.517671585083008
    10. '   ' → logprob: -12.642671585083008

Token 281: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.06072075292468071
    2. ' prev' → logprob: -3.310720682144165
    3. '   ' → logprob: -3.810720682144165
    4. '	prev' → logprob: -9.060720443725586
    5. ' ' → logprob: -9.810720443725586
    6. '```' → logprob: -10.935720443725586
    7. '  ' → logprob: -11.123220443725586
    8. 'for' → logprob: -11.498220443725586
    9. 'previous' → logprob: -11.810720443725586
    10. 'Prev' → logprob: -11.935720443725586

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196858361363411
    2. '=' → logprob: -2.8119685649871826
    3. ' =[' → logprob: -14.811968803405762
    4. '=[' → logprob: -15.436968803405762
    5. ' ' → logprob: -16.061967849731445
    6. '[' → logprob: -16.561967849731445
    7. 's' → logprob: -16.686967849731445
    8. '   ' → logprob: -17.124467849731445
    9. '＝' → logprob: -17.249467849731445
    10. '=[]' → logprob: -17.311967849731445

Token 283: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.25406286120414734
    2. ' [-' → logprob: -1.5040628910064697
    3. '[' → logprob: -6.629062652587891
    4. ' [' → logprob: -7.129062652587891
    5. '   ' → logprob: -12.00406265258789
    6. ' ' → logprob: -13.25406265258789
    7. '[max' → logprob: -16.25406265258789
    8. '([-' → logprob: -16.37906265258789
    9. '  ' → logprob: -16.62906265258789
    10. '-' → logprob: -16.75406265258789

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8312570318812504e-05
    2. '-' → logprob: -12.125018119812012
    3. '2' → logprob: -12.125018119812012
    4. '(' → logprob: -12.625018119812012
    5. 'float' → logprob: -14.125018119812012
    6. ' ' → logprob: -14.375018119812012
    7. '100' → logprob: -14.375018119812012
    8. '10' → logprob: -14.375018119812012
    9. '11' → logprob: -15.000018119812012
    10. '999' → logprob: -15.375018119812012

Token 285: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.003209799760952592
    2. 'for' → logprob: -5.753209590911865
    3. ' ' → logprob: -10.878210067749023
    4. ')' → logprob: -12.128210067749023
    5. '[' → logprob: -12.503210067749023
    6. ']' → logprob: -13.628210067749023
    7. ' ]' → logprob: -14.128210067749023
    8. ' [' → logprob: -14.253210067749023
    9. '	for' → logprob: -14.503210067749023
    10. '[max' → logprob: -15.503210067749023

Token 286: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011598263867199421
    2. 'range' → logprob: -4.511598110198975
    3. '_range' → logprob: -8.511598587036133
    4. ' _' → logprob: -8.636598587036133
    5. '_' → logprob: -8.761598587036133
    6. '(range' → logprob: -11.386598587036133
    7. ' xrange' → logprob: -13.386598587036133
    8. '	range' → logprob: -14.011598587036133
    9. ' space' → logprob: -14.886598587036133
    10. ' ' → logprob: -14.886598587036133

Token 287: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3875666558742523
    2. ' range' → logprob: -1.1375666856765747
    3. 'in' → logprob: -7.887566566467285
    4. ' in' → logprob: -8.637566566467285
    5. '_' → logprob: -9.512566566467285
    6. '_range' → logprob: -10.262566566467285
    7. '(range' → logprob: -10.512566566467285
    8. ' _' → logprob: -12.887566566467285
    9. '	range' → logprob: -13.637566566467285
    10. 'for' → logprob: -14.387566566467285

Token 288: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14275534451007843
    2. ' range' → logprob: -2.0177552700042725
    3. '(range' → logprob: -9.517755508422852
    4. 'rang' → logprob: -13.392755508422852
    5. '	range' → logprob: -13.892755508422852
    6. ' ' → logprob: -14.142755508422852
    7. '   ' → logprob: -14.267755508422852
    8. '_range' → logprob: -14.767755508422852
    9. ' xrange' → logprob: -14.892755508422852
    10. '(' → logprob: -15.142755508422852

Token 289: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.027739332988858223
    2. ' (' → logprob: -4.402739524841309
    3. '(range' → logprob: -4.402739524841309
    4. 'range' → logprob: -6.527739524841309
    5. ' range' → logprob: -6.777739524841309
    6. '(' → logprob: -8.527739524841309
    7. 'max' → logprob: -10.527739524841309
    8. ' max' → logprob: -10.652739524841309
    9. '((' → logprob: -12.152739524841309
    10. '   ' → logprob: -12.777739524841309

Token 290: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.0004884536610916257
    2. ' _' → logprob: -8.12548828125
    3. '_' → logprob: -9.62548828125
    4. '(C' → logprob: -10.25048828125
    5. '(_' → logprob: -10.37548828125
    6. 'C' → logprob: -11.37548828125
    7. ')_' → logprob: -11.50048828125
    8. ' ' → logprob: -11.87548828125
    9. ')' → logprob: -12.12548828125
    10. '+' → logprob: -12.50048828125

Token 291: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42985692620277405
    2. ' +' → logprob: -1.0548568964004517
    3. ')]' → logprob: -6.804856777191162
    4. ')]
' → logprob: -10.92985725402832
    5. ')' → logprob: -11.55485725402832
    6. '   ' → logprob: -12.30485725402832
    7. ' ' → logprob: -13.17985725402832
    8. ' plus' → logprob: -13.30485725402832
    9. '_plus' → logprob: -13.42985725402832
    10. 'plus' → logprob: -13.67985725402832

Token 292: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014846279518678784
    2. ' ' → logprob: -6.626484394073486
    3. '2' → logprob: -9.001484870910645
    4. '0' → logprob: -10.376484870910645
    5. '   ' → logprob: -12.876484870910645
    6. '10' → logprob: -15.063984870910645
    7. '5' → logprob: -15.376484870910645
    8. ')' → logprob: -15.438984870910645
    9. '  ' → logprob: -15.688984870910645
    10. '3' → logprob: -16.001483917236328

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006789539474993944
    2. ' ' → logprob: -7.750679016113281
    3. '2' → logprob: -8.500679016113281
    4. '0' → logprob: -10.375679016113281
    5. '   ' → logprob: -11.875679016113281
    6. '10' → logprob: -12.875679016113281
    7. '5' → logprob: -13.625679016113281
    8. '  ' → logprob: -14.375679016113281
    9. '
' → logprob: -14.563179016113281
    10. '3' → logprob: -14.688179016113281

Token 294: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00035512709291651845
    2. ']' → logprob: -8.000354766845703
    3. ' ]' → logprob: -11.250354766845703
    4. ')' → logprob: -13.000354766845703
    5. ' )' → logprob: -13.500354766845703
    6. '}]' → logprob: -14.000354766845703
    7. ')]
' → logprob: -14.500354766845703
    8. ' }]' → logprob: -14.500354766845703
    9. '   ' → logprob: -14.625354766845703
    10. '')]' → logprob: -15.625354766845703

Token 295: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: ' Dern' (ID: 159363)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.26608186960220337
    2. ' -' → logprob: -2.1410818099975586
    3. '<|end|>' → logprob: -2.5160818099975586
    4. 'prev' → logprob: -4.141081809997559
    5. '   ' → logprob: -5.141081809997559
    6. ' ' → logprob: -5.766081809997559
    7. '<|end|>' → logprob: -6.391081809997559
    8. '[-' → logprob: -6.766081809997559
    9. 'def' → logprob: -7.391081809997559
    10. 'Initialize' → logprob: -7.766081809997559

Token 297: 'ière' (ID: 12452)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.375573754310608
    2. 'indice' → logprob: -1.875573754310608
    3. '_indices' → logprob: -2.0005736351013184
    4. '_index' → logprob: -2.1255736351013184
    5. ' indices' → logprob: -2.2505736351013184
    6. ' -' → logprob: -3.3755736351013184
    7. 'indices' → logprob: -3.8755736351013184
    8. '   ' → logprob: -3.8755736351013184
    9. '_occ' → logprob: -4.125573635101318
    10. '-index' → logprob: -4.250573635101318

Token 298: ' occurrence' (ID: 55807)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.6306853294372559
    2. 'position' → logprob: -1.3806853294372559
    3. ' occurrence' → logprob: -3.005685329437256
    4. 'occur' → logprob: -3.130685329437256
    5. 'indice' → logprob: -3.130685329437256
    6. ' position' → logprob: -3.630685329437256
    7. ' apparition' → logprob: -3.880685329437256
    8. 'index' → logprob: -4.380685329437256
    9. ' appar' → logprob: -5.880685329437256
    10. '_occ' → logprob: -6.005685329437256

Token 299: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.021484971046447754
    2. 'cha' → logprob: -4.896484851837158
    3. 'each' → logprob: -5.396484851837158
    4. 'ch' → logprob: -6.146484851837158
    5. 'Chaque' → logprob: -6.146484851837158
    6. ' each' → logprob: -6.271484851837158
    7. 'C' → logprob: -6.771484851837158
    8. ' C' → logprob: -7.146484851837158
    9. ' chacune' → logprob: -8.271485328674316
    10. ' Chaque' → logprob: -8.521485328674316

Token 301: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.08355987071990967
    2. ' valeur' → logprob: -2.583559989929199
    3. 'value' → logprob: -6.458559989929199
    4. ' val' → logprob: -6.708559989929199
    5. ' C' → logprob: -7.333559989929199
    6. 'C' → logprob: -7.458559989929199
    7. ' ' → logprob: -8.8335599899292
    8. 'c' → logprob: -8.9585599899292
    9. 'élé' → logprob: -9.0835599899292
    10. ' value' → logprob: -9.0835599899292

Token 302: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.3491358160972595
    2. 'C' → logprob: -1.2241358757019043
    3. ' ' → logprob: -8.099135398864746
    4. ' la' → logprob: -8.724135398864746
    5. '_C' → logprob: -8.849135398864746
    6. 'prev' → logprob: -10.474135398864746
    7. ' l' → logprob: -11.349135398864746
    8. 'la' → logprob: -12.474135398864746
    9. ' prev' → logprob: -12.599135398864746
    10. 'max' → logprob: -12.599135398864746

Token 304: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.577592670917511
    2. ')' → logprob: -0.827592670917511
    3. 'return' → logprob: -7.202592849731445
    4. ')
' → logprob: -7.702592849731445
    5. ' return' → logprob: -8.702592849731445
    6. ' )' → logprob: -9.452592849731445
    7. '<|end|>' → logprob: -9.452592849731445
    8. ')return' → logprob: -10.077592849731445
    9. '    
' → logprob: -11.077592849731445
    10. '
' → logprob: -11.327592849731445

Token 305: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015590202528983355
    2. 'return' (adapté à ' return') → logprob: -7.251559257507324
    3. ' return' → logprob: -7.251559257507324
    4. ')' → logprob: -9.626559257507324
    5. '	return' → logprob: -10.501559257507324
    6. '<|end|>' → logprob: -10.501559257507324
    7. '    
' → logprob: -11.251559257507324
    8. ' ' → logprob: -14.251559257507324
    9. '<|end|>' → logprob: -14.251559257507324
    10. ')return' → logprob: -14.251559257507324

Token 307: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011064093559980392
    2. ' dp' → logprob: -4.511064052581787
    3. 'N' → logprob: -11.261064529418945
    4. ' N' → logprob: -13.511064529418945
    5. '(dp' → logprob: -13.636064529418945
    6. '   ' → logprob: -14.011064529418945
    7. '	dp' → logprob: -17.761064529418945
    8. ' ' → logprob: -18.886064529418945
    9. '  ' → logprob: -20.261064529418945
    10. '(N' → logprob: -20.511064529418945

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4881879400927573e-05
    2. ',r' → logprob: -10.625035285949707
    3. ' ,' → logprob: -11.500035285949707
    4. 'r' → logprob: -15.125035285949707
    5. '‌,' → logprob: -17.12503433227539
    6. ',
' → logprob: -18.37503433227539
    7. ' r' → logprob: -18.50003433227539
    8. ',n' → logprob: -19.00003433227539
    9. '   ' → logprob: -19.12503433227539
    10. ',p' → logprob: -19.37503433227539

Token 309: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5759395360946655
    2. ' r' → logprob: -0.8259395360946655
    3. ' ' → logprob: -16.825939178466797
    4. '	r' → logprob: -17.450939178466797
    5. '   ' → logprob: -17.575939178466797
    6. ' ' → logprob: -18.200939178466797
    7. '    ' → logprob: -18.825939178466797
    8. 'space' → logprob: -18.825939178466797
    9. '_r' → logprob: -19.200939178466797
    10. 's' → logprob: -19.700939178466797

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027945113833993673
    2. ' ,' → logprob: -8.875279426574707
    3. 'prev' → logprob: -9.125279426574707
    4. '   ' → logprob: -10.625279426574707
    5. ' prev' → logprob: -12.125279426574707
    6. '```' → logprob: -15.375279426574707
    7. '	prev' → logprob: -16.250280380249023
    8. ',
' → logprob: -16.625280380249023
    9. ' ' → logprob: -16.750280380249023
    10. '  ' → logprob: -16.875280380249023

Token 311: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0001584850688232109
    2. ' prev' → logprob: -8.750158309936523
    3. '	prev' → logprob: -18.500158309936523
    4. 'pre' → logprob: -18.750158309936523
    5. 'previous' → logprob: -19.375158309936523
    6. '.prev' → logprob: -19.500158309936523
    7. '   ' → logprob: -20.000158309936523
    8. 'pr' → logprob: -20.375158309936523
    9. '_prev' → logprob: -20.500158309936523
    10. '(prev' → logprob: -20.500158309936523

Token 312: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011558275582501665
    2. '<|end|>' → logprob: -9.500115394592285
    3. '
' → logprob: -10.250115394592285
    4. ' def' → logprob: -13.000115394592285
    5. '```' → logprob: -13.625115394592285
    6. '

' → logprob: -14.500115394592285
    7. '<|end|>' → logprob: -15.125115394592285
    8. '#' → logprob: -15.625115394592285
    9. 'import' → logprob: -15.875115394592285
    10. ':def' → logprob: -16.0001163482666

Token 314: ' build' (ID: 3024)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.9246873259544373
    2. ' compute' → logprob: -1.674687385559082
    3. ' calculate' → logprob: -1.924687385559082
    4. ' process' → logprob: -2.549687385559082
    5. ' dynamic' → logprob: -3.174687385559082
    6. ' find' → logprob: -3.424687385559082
    7. 'solve' → logprob: -4.049687385559082
    8. ' main' → logprob: -4.174687385559082
    9. 'compute' → logprob: -4.174687385559082
    10. 'calculate' → logprob: -4.549687385559082

Token 315: '_next' (ID: 25436)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0810793861746788
    2. '_r' → logprob: -2.8310794830322266
    3. '_' → logprob: -4.331079483032227
    4. '_next' → logprob: -6.331079483032227
    5. '_transition' → logprob: -7.831079483032227
    6. '_path' → logprob: -8.081079483032227
    7. '_step' → logprob: -8.206079483032227
    8. '_jump' → logprob: -8.456079483032227
    9. '_graph' → logprob: -8.581079483032227
    10. 'dp' → logprob: -8.831079483032227

Token 316: '_indices' (ID: 43508)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.3163169026374817
    2. '_' → logprob: -1.816316843032837
    3. '_position' → logprob: -3.441316843032837
    4. '_pos' → logprob: -3.566316843032837
    5. '_indices' → logprob: -3.941316843032837
    6. '_positions' → logprob: -4.441317081451416
    7. '_index' → logprob: -4.691317081451416
    8. '_tokens' → logprob: -5.941317081451416
    9. '_array' → logprob: -6.816317081451416
    10. '_step' → logprob: -6.941317081451416

Token 317: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0059779733419418335
    2. '(' → logprob: -5.130978107452393
    3. ' (' → logprob: -11.130977630615234
    4. 'def' → logprob: -11.505977630615234
    5. '(C' → logprob: -11.755977630615234
    6. '():' → logprob: -12.255977630615234
    7. '(n' → logprob: -12.380977630615234
    8. '(
' → logprob: -12.880977630615234
    9. '((' → logprob: -14.880977630615234
    10. '(`' → logprob: -15.005977630615234

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ',C' → logprob: -12.875003814697266
    3. ' ,' → logprob: -15.000003814697266
    4. ',
' → logprob: -15.000003814697266
    5. '   ' → logprob: -15.875003814697266
    6. 'C' → logprob: -17.000003814697266
    7. 'def' → logprob: -17.125003814697266
    8. ',r' → logprob: -17.125003814697266
    9. ')' → logprob: -17.625003814697266
    10. '):' → logprob: -18.000003814697266

Token 319: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.019092224538326263
    2. ' C' → logprob: -4.019092082977295
    3. 'max' → logprob: -7.144092082977295
    4. ' max' → logprob: -9.894092559814453
    5. '   ' → logprob: -10.269092559814453
    6. 'r' → logprob: -10.644092559814453
    7. ',' → logprob: -11.519092559814453
    8. ')' → logprob: -11.894092559814453
    9. 'def' → logprob: -11.894092559814453
    10. 'prev' → logprob: -12.269092559814453

Token 320: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47824275493621826
    2. ',' → logprob: -0.9782427549362183
    3. '):
' → logprob: -5.603242874145508
    4. '   ' → logprob: -7.853242874145508
    5. ')' → logprob: -9.978242874145508
    6. ' ):' → logprob: -11.353242874145508
    7. ',
' → logprob: -11.728242874145508
    8. ' ,' → logprob: -12.228242874145508
    9. 'def' → logprob: -12.853242874145508
    10. ',r' → logprob: -12.978242874145508

Token 321: ' r' (ID: 428)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4324674606323242
    2. 'r' → logprob: -1.9324674606323242
    3. 'prev' → logprob: -1.9324674606323242
    4. ' dp' → logprob: -3.057467460632324
    5. ' r' → logprob: -4.682467460632324
    6. ' prev' → logprob: -5.307467460632324
    7. 'max' → logprob: -8.557467460632324
    8. '   ' → logprob: -10.682467460632324
    9. ' max' → logprob: -11.119967460632324
    10. ' ' → logprob: -11.869967460632324

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044476959854364395
    2. '):' → logprob: -3.1694769859313965
    3. '):
' → logprob: -6.5444769859313965
    4. '   ' → logprob: -10.419476509094238
    5. ')' → logprob: -12.669476509094238
    6. ' ,' → logprob: -13.544476509094238
    7. ',
' → logprob: -13.794476509094238
    8. ',r' → logprob: -14.044476509094238
    9. ' ):' → logprob: -14.294476509094238
    10. '):
' → logprob: -14.294476509094238

Token 323: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0003013809327967465
    2. ' prev' → logprob: -8.125301361083984
    3. 'dp' → logprob: -13.000301361083984
    4. '   ' → logprob: -13.250301361083984
    5. 'max' → logprob: -14.250301361083984
    6. '	prev' → logprob: -15.500301361083984
    7. ')' → logprob: -16.375301361083984
    8. '_prev' → logprob: -16.500301361083984
    9. 'p' → logprob: -16.625301361083984
    10. ' ' → logprob: -17.125301361083984

Token 324: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04868104308843613
    2. '):
' → logprob: -3.0486810207366943
    3. ',' → logprob: -9.923681259155273
    4. '   ' → logprob: -10.923681259155273
    5. '):
' → logprob: -11.048681259155273
    6. ')' → logprob: -12.048681259155273
    7. '):

' → logprob: -12.923681259155273
    8. ' ):' → logprob: -13.798681259155273
    9. 'def' → logprob: -14.048681259155273
    10. '[]):' → logprob: -15.923681259155273

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09613692760467529
    2. '):' → logprob: -2.846137046813965
    3. '):
' → logprob: -3.846137046813965
    4. ':' → logprob: -4.471137046813965
    5. ':
' → logprob: -7.971137046813965
    6. 'for' → logprob: -8.596137046813965
    7. ')' → logprob: -9.471137046813965
    8. ' for' → logprob: -9.846137046813965
    9. '```' → logprob: -10.471137046813965
    10. ' :' → logprob: -10.721137046813965

Token 326: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06716521084308624
    2. ' for' → logprob: -3.3171651363372803
    3. 'for' → logprob: -3.5671651363372803
    4. '
' → logprob: -8.56716537475586
    5. '    
' → logprob: -9.06716537475586
    6. '```' → logprob: -9.19216537475586
    7. ')' → logprob: -10.94216537475586
    8. ' i' → logprob: -11.56716537475586
    9. '	for' → logprob: -11.69216537475586
    10. '):
' → logprob: -12.44216537475586

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011411691084504128
    2. 'def' → logprob: -8.001141548156738
    3. ' """
' → logprob: -8.126141548156738
    4. ' for' → logprob: -8.376141548156738
    5. 'for' → logprob: -8.751141548156738
    6. '
' → logprob: -10.126141548156738
    7. '"""
' → logprob: -10.376141548156738
    8. ' def' → logprob: -11.376141548156738
    9. ' """' → logprob: -11.501141548156738
    10. '    ' → logprob: -11.501141548156738

Token 328: ' Rem' (ID: 6890)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5413916110992432
    2. '   ' → logprob: -1.4163916110992432
    3. 'for' → logprob: -1.7913916110992432
    4. 'def' → logprob: -5.041391372680664
    5. ' def' → logprob: -6.291391372680664
    6. '
' → logprob: -7.916391372680664
    7. 'For' → logprob: -10.791391372680664
    8. '```' → logprob: -11.166391372680664
    9. '    
' → logprob: -11.791391372680664
    10. ' ' → logprob: -12.541391372680664

Token 329: 'plit' (ID: 4059)
  Prédit: 'plit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plit' → logprob: -0.0184777919203043
    2. 'pl' → logprob: -4.018477916717529
    3. 'place' → logprob: -8.643477439880371
    4. 'p' → logprob: -8.893477439880371
    5. 'pli' → logprob: -11.893477439880371
    6. 'pile' → logprob: -12.768477439880371
    7. 'et' → logprob: -13.393477439880371
    8. 'plet' → logprob: -14.643477439880371
    9. 'ple' → logprob: -14.893477439880371
    10. 'plt' → logprob: -14.893477439880371

Token 330: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.47491878271102905
    2. '   ' → logprob: -1.5999188423156738
    3. ' le' → logprob: -3.099918842315674
    4. '(N' → logprob: -3.349918842315674
    5. ' la' → logprob: -4.224918842315674
    6. ' ' → logprob: -4.474918842315674
    7. ' N' → logprob: -4.474918842315674
    8. ')' → logprob: -4.599918842315674
    9. 'r' → logprob: -5.099918842315674
    10. '_' → logprob: -5.224918842315674

Token 331: ' tableau' (ID: 67053)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4995180070400238
    2. 'for' → logprob: -1.6245180368423462
    3. 'r' → logprob: -2.2495179176330566
    4. ' r' → logprob: -3.1245179176330566
    5. '   ' → logprob: -4.124517917633057
    6. ' indices' → logprob: -4.874517917633057
    7. ' next' → logprob: -4.999517917633057
    8. 'indices' → logprob: -5.124517917633057
    9. '```' → logprob: -5.874517917633057
    10. ')' → logprob: -6.749517917633057

Token 332: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.20591360330581665
    2. 'r' → logprob: -1.7059135437011719
    3. ' des' → logprob: -5.705913543701172
    4. '   ' → logprob: -7.205913543701172
    5. 'des' → logprob: -8.705913543701172
    6. 'def' → logprob: -9.705913543701172
    7. ' ' → logprob: -9.955913543701172
    8. ' `' → logprob: -10.205913543701172
    9. '_r' → logprob: -10.955913543701172
    10. ' for' → logprob: -10.955913543701172

Token 333: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37259000539779663
    2. ' en' → logprob: -2.2475900650024414
    3. ',' → logprob: -2.8725900650024414
    4. ' pour' → logprob: -3.1225900650024414
    5. 'def' → logprob: -3.2475900650024414
    6. '(N' → logprob: -4.122590065002441
    7. ':' → logprob: -4.247590065002441
    8. ' (' → logprob: -5.497590065002441
    9. ' for' → logprob: -5.622590065002441
    10. ' avec' → logprob: -5.747590065002441

Token 334: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8625755906105042
    2. ' chaque' → logprob: -0.9875755906105042
    3. 'for' → logprob: -2.6125755310058594
    4. ' each' → logprob: -2.9875755310058594
    5. ' i' → logprob: -3.2375755310058594
    6. 'i' → logprob: -4.112575531005859
    7. ' on' → logprob: -5.237575531005859
    8. '   ' → logprob: -5.362575531005859
    9. 'r' → logprob: -5.737575531005859
    10. 'each' → logprob: -6.112575531005859

Token 335: ' pour' (ID: 1930)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3973578214645386
    2. 'i' → logprob: -1.1473578214645386
    3. ' for' → logprob: -5.522357940673828
    4. ')' → logprob: -6.147357940673828
    5. ' index' → logprob: -6.897357940673828
    6. 'for' → logprob: -7.022357940673828
    7. '   ' → logprob: -7.272357940673828
    8. ' j' → logprob: -8.272357940673828
    9. 'index' → logprob: -8.397357940673828
    10. ' idx' → logprob: -8.397357940673828

Token 336: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5971726179122925
    2. ' i' → logprob: -1.2221726179122925
    3. ' chaque' → logprob: -1.9721726179122925
    4. ' each' → logprob: -4.722172737121582
    5. 'each' → logprob: -5.097172737121582
    6. '   ' → logprob: -7.972172737121582
    7. 'j' → logprob: -8.972172737121582
    8. ' ' → logprob: -9.222172737121582
    9. 'Chaque' → logprob: -9.722172737121582
    10. ')' → logprob: -9.972172737121582

Token 337: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22620804607868195
    2. ' i' → logprob: -1.6012080907821655
    3. 'index' → logprob: -8.351207733154297
    4. 'position' → logprob: -8.476207733154297
    5. 'indice' → logprob: -8.851207733154297
    6. ' position' → logprob: -9.101207733154297
    7. ' index' → logprob: -9.726207733154297
    8. 'j' → logprob: -11.101207733154297
    9. '   ' → logprob: -12.476207733154297
    10. '```' → logprob: -12.851207733154297

Token 338: ',' (ID: 11)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16692495346069336
    2. 'i' → logprob: -1.9169249534606934
    3. ',' → logprob: -5.166924953460693
    4. '   ' → logprob: -7.791924953460693
    5. ' ,' → logprob: -8.666925430297852
    6. '),' → logprob: -9.416925430297852
    7. '[i' → logprob: -9.416925430297852
    8. ')' → logprob: -9.666925430297852
    9. ' in' → logprob: -10.166925430297852
    10. '```' → logprob: -10.416925430297852

Token 339: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.14174602925777435
    2. ' i' → logprob: -2.5167460441589355
    3. 'i' → logprob: -3.5167460441589355
    4. 'on' → logprob: -4.8917460441589355
    5. '   ' → logprob: -5.2667460441589355
    6. ' j' → logprob: -6.1417460441589355
    7. 'j' → logprob: -6.6417460441589355
    8. ')' → logprob: -6.7667460441589355
    9. ' il' → logprob: -7.5167460441589355
    10. ' la' → logprob: -7.6417460441589355

Token 340: ' stock' (ID: 6546)
  Prédit: ' trouve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouve' → logprob: -0.1595017910003662
    2. 'cherche' → logprob: -2.909501791000366
    3. 'tr' → logprob: -3.659501791000366
    4. ' cherche' → logprob: -3.784501791000366
    5. '   ' → logprob: -4.284502029418945
    6. ' i' → logprob: -4.659502029418945
    7. ' recherche' → logprob: -5.284502029418945
    8. ' for' → logprob: -6.034502029418945
    9. ' peut' → logprob: -6.284502029418945
    10. 'for' → logprob: -6.534502029418945

Token 341: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.9361264946837764e-07
    2. ' e' → logprob: -17.375
    3. 'er' → logprob: -17.5
    4. '   ' → logprob: -17.625
    5. 'r' → logprob: -18.0
    6. 'е' → logprob: -18.125
    7. '[e' → logprob: -18.75
    8. '	e' → logprob: -19.125
    9. '[' → logprob: -19.25
    10. 're' → logprob: -19.625

Token 342: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8407294154167175
    2. ' le' → logprob: -1.0907294750213623
    3. ' la' → logprob: -1.9657294750213623
    4. ' ' → logprob: -3.0907294750213623
    5. 'l' → logprob: -4.590729236602783
    6. 'le' → logprob: -4.715729236602783
    7. '   ' → logprob: -4.840729236602783
    8. '    ' → logprob: -4.965729236602783
    9. ' the' → logprob: -5.465729236602783
    10. 'the' → logprob: -5.965729236602783

Token 343: ''ind' (ID: 82245)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.29755160212516785
    2. 'a' → logprob: -1.4225516319274902
    3. ''' → logprob: -4.67255163192749
    4. '   ' → logprob: -6.29755163192749
    5. ' e' → logprob: -6.54755163192749
    6. ' a' → logprob: -7.67255163192749
    7. ''ind' → logprob: -7.92255163192749
    8. ' prochain' → logprob: -8.047551155090332
    9. ''e' → logprob: -8.172551155090332
    10. ' ' → logprob: -8.297551155090332

Token 344: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.2019708752632141
    2. 'ex' → logprob: -1.7019708156585693
    3. 'i' → logprob: -7.951971054077148
    4. 'ic' → logprob: -10.076971054077148
    5. 'exe' → logprob: -10.326971054077148
    6. '   ' → logprob: -10.451971054077148
    7. 'e' → logprob: -10.826971054077148
    8. 'ices' → logprob: -10.826971054077148
    9. '#' → logprob: -11.326971054077148
    10. '```' → logprob: -12.201971054077148

Token 345: ' du' (ID: 1462)
  Prédit: ' suivant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivant' → logprob: -0.4158404767513275
    2. ' valid' → logprob: -1.66584050655365
    3. ' valide' → logprob: -2.5408403873443604
    4. 'valid' → logprob: -3.2908403873443604
    5. 'su' → logprob: -4.5408406257629395
    6. ' i' → logprob: -5.2908406257629395
    7. ' suivante' → logprob: -5.2908406257629395
    8. 'val' → logprob: -5.4158406257629395
    9. 'next' → logprob: -6.6658406257629395
    10. 'i' → logprob: -6.6658406257629395

Token 346: ' prochain' (ID: 52413)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.2961614429950714
    2. ' prochain' → logprob: -2.046161413192749
    3. 'next' → logprob: -2.296161413192749
    4. 'plus' → logprob: -5.546161651611328
    5. 's' → logprob: -5.671161651611328
    6. 'i' → logprob: -5.796161651611328
    7. '```' → logprob: -5.796161651611328
    8. ' next' → logprob: -5.921161651611328
    9. 'dern' → logprob: -6.421161651611328
    10. 'su' → logprob: -6.546161651611328

Token 347: '
' (ID: 198)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.337446004152298
    2. ' valid' → logprob: -2.5874459743499756
    3. 'valid' → logprob: -3.0874459743499756
    4. 'index' → logprob: -3.0874459743499756
    5. ' indice' → logprob: -3.4624459743499756
    6. ' espace' → logprob: -4.587446212768555
    7. 'token' → logprob: -4.587446212768555
    8. ' ' → logprob: -4.712446212768555
    9. ' index' → logprob: -4.712446212768555
    10. 'position' → logprob: -5.337446212768555

Token 348: '   ' (ID: 271)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.0953530073165894
    2. ' valid' → logprob: -1.5953530073165894
    3. 'indice' → logprob: -1.5953530073165894
    4. ' valide' → logprob: -2.470353126525879
    5. 'val' → logprob: -2.720353126525879
    6. '_' → logprob: -3.595353126525879
    7. 'index' → logprob: -4.220353126525879
    8. ')' → logprob: -4.470353126525879
    9. 's' → logprob: -4.595353126525879
    10. ' ' → logprob: -5.095353126525879

Token 349: ' même' (ID: 9679)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -1.0757380723953247
    2. 'indice' → logprob: -1.2007380723953247
    3. 'valid' → logprob: -1.3257380723953247
    4. 'index' → logprob: -3.825737953186035
    5. ' indice' → logprob: -4.700737953186035
    6. ' valide' → logprob: -4.700737953186035
    7. ')' → logprob: -4.825737953186035
    8. ']' → logprob: -5.200737953186035
    9. ' index' → logprob: -5.325737953186035
    10. ' ' → logprob: -5.575737953186035

Token 350: ' nombre' (ID: 9733)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.855535626411438
    2. ' élément' → logprob: -1.480535626411438
    3. 'e' → logprob: -1.980535626411438
    4. 'indice' → logprob: -3.1055355072021484
    5. 'index' → logprob: -3.7305355072021484
    6. ']' → logprob: -3.9805355072021484
    7. 'val' → logprob: -3.9805355072021484
    8. 'occ' → logprob: -4.230535507202148
    9. ' index' → logprob: -4.355535507202148
    10. 'é' → logprob: -4.355535507202148

Token 351: ' (' (ID: 350)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.5819253325462341
    2. ' ou' → logprob: -1.956925392150879
    3. ' présent' → logprob: -3.081925392150879
    4. 'dans' → logprob: -3.081925392150879
    5. ' où' → logprob: -3.331925392150879
    6. ' qui' → logprob: -3.456925392150879
    7. ' de' → logprob: -4.081925392150879
    8. ' valid' → logprob: -4.206925392150879
    9. ',' → logprob: -4.331925392150879
    10. 'où' → logprob: -4.456925392150879

Token 352: 'C' (ID: 34)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22769829630851746
    2. ' dans' → logprob: -2.60269832611084
    3. ' )' → logprob: -3.22769832611084
    4. ' ou' → logprob: -3.35269832611084
    5. 'C' → logprob: -4.22769832611084
    6. ' présent' → logprob: -4.72769832611084
    7. ' C' → logprob: -5.35269832611084
    8. 'dans' → logprob: -5.60269832611084
    9. ' plus' → logprob: -5.97769832611084
    10. '   ' → logprob: -6.22769832611084

Token 353: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0054221730679273605
    2. '[' → logprob: -5.380422115325928
    3. ')' → logprob: -8.255422592163086
    4. '   ' → logprob: -8.505422592163086
    5. '[j' → logprob: -9.380422592163086
    6. ']' → logprob: -9.755422592163086
    7. '[I' → logprob: -9.880422592163086
    8. ' [' → logprob: -10.130422592163086
    9. '[
' → logprob: -10.880422592163086
    10. ')[' → logprob: -11.505422592163086

Token 354: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.23168399930000305
    2. ']' → logprob: -1.6066839694976807
    3. ']+' → logprob: -6.10668420791626
    4. '[i' → logprob: -6.35668420791626
    5. '])]' → logprob: -7.60668420791626
    6. ')' → logprob: -8.106683731079102
    7. ' ])' → logprob: -8.106683731079102
    8. '])+' → logprob: -8.106683731079102
    9. '],' → logprob: -8.231683731079102
    10. ']))' → logprob: -9.481683731079102

Token 355: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0586016178131104
    2. ' ou' → logprob: -1.6836016178131104
    3. ',' → logprob: -2.3086016178131104
    4. ' dans' → logprob: -2.8086016178131104
    5. ' valid' → logprob: -2.9336016178131104
    6. 'val' → logprob: -3.3086016178131104
    7. ' plus' → logprob: -3.4336016178131104
    8. ' valide' → logprob: -3.4336016178131104
    9. ' qui' → logprob: -3.5586016178131104
    10. ']' → logprob: -3.6836016178131104

Token 356: ' n' (ID: 297)
  Prédit: ' apparaît'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' apparaît' → logprob: -0.6761704683303833
    2. 'a' → logprob: -2.4261703491210938
    3. 'n' → logprob: -2.9261703491210938
    4. ' a' → logprob: -3.3011703491210938
    5. ' se' → logprob: -3.5511703491210938
    6. ' est' → logprob: -3.8011703491210938
    7. 'i' → logprob: -3.9261703491210938
    8. ' appar' → logprob: -3.9261703491210938
    9. '```' → logprob: -3.9261703491210938
    10. ']' → logprob: -3.9261703491210938

Token 357: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.014413585886359215
    2. 'est' → logprob: -4.764413356781006
    3. ''a' → logprob: -5.764413356781006
    4. 'a' → logprob: -6.139413356781006
    5. '’est' → logprob: -8.264413833618164
    6. ''' → logprob: -9.264413833618164
    7. '`' → logprob: -10.139413833618164
    8. '```' → logprob: -10.639413833618164
    9. ''était' → logprob: -10.889413833618164
    10. ' est' → logprob: -11.889413833618164

Token 358: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.3874392509460449
    2. 'pas' → logprob: -1.137439250946045
    3. ' jamais' → logprob: -8.512439727783203
    4. '_pas' → logprob: -8.637439727783203
    5. 'not' → logprob: -10.262439727783203
    6. 'plus' → logprob: -10.512439727783203
    7. ' not' → logprob: -10.637439727783203
    8. '

' → logprob: -10.637439727783203
    9. '```' → logprob: -11.512439727783203
    10. '-' → logprob: -11.637439727783203

Token 359: ' cons' (ID: 1473)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7697232961654663
    2. ' interdit' → logprob: -1.3947232961654663
    3. ' blo' → logprob: -2.269723415374756
    4. 'inter' → logprob: -3.519723415374756
    5. ' encore' → logprob: -3.644723415374756
    6. ' -' → logprob: -4.019723415374756
    7. 'b' → logprob: -4.894723415374756
    8. ' pas' → logprob: -4.894723415374756
    9. 'blo' → logprob: -4.894723415374756
    10. ' dépass' → logprob: -5.144723415374756

Token 360: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0038862961810082197
    2. 'ecut' → logprob: -5.8788862228393555
    3. 'é' → logprob: -6.8788862228393555
    4. 'cut' → logprob: -11.503886222839355
    5. 'éc' → logprob: -11.628886222839355
    6. 'e' → logprob: -11.753886222839355
    7. '```' → logprob: -11.878886222839355
    8. '{' → logprob: -12.628886222839355
    9. 'icut' → logprob: -13.128886222839355
    10. 'ec' → logprob: -13.378886222839355

Token 361: 'if' (ID: 366)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.03006749041378498
    2. 'utive' → logprob: -4.155067443847656
    3. 'if' → logprob: -4.655067443847656
    4. 'ive' → logprob: -6.155067443847656
    5. 'u' → logprob: -6.280067443847656
    6. 'iv' → logprob: -9.530067443847656
    7. ' ut' → logprob: -9.655067443847656
    8. '   ' → logprob: -9.905067443847656
    9. '```' → logprob: -10.530067443847656
    10. 'i' → logprob: -10.530067443847656

Token 362: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5392831563949585
    2. ',' → logprob: -1.1642831563949585
    3. 'e' → logprob: -4.039283275604248
    4. ' ou' → logprob: -4.039283275604248
    5. ' dans' → logprob: -4.414283275604248
    6. ' à' → logprob: -4.414283275604248
    7. ' (' → logprob: -4.914283275604248
    8. ' et' → logprob: -5.164283275604248
    9. ' i' → logprob: -5.539283275604248
    10. '(i' → logprob: -5.789283275604248

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05004991590976715
    2. '
' → logprob: -3.9250500202178955
    3. ' def' → logprob: -4.300049781799316
    4. 'def' → logprob: -5.300049781799316
    5. ',' → logprob: -5.675049781799316
    6. '```' → logprob: -6.800049781799316
    7. ' en' → logprob: -6.925049781799316
    8. '.' → logprob: -7.050049781799316
    9. ' ' → logprob: -7.300049781799316
    10. ')' → logprob: -7.925049781799316

Token 364: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09398408234119415
    2. '
' → logprob: -2.4689841270446777
    3. '    
' → logprob: -6.718984127044678
    4. '\n' → logprob: -6.843984127044678
    5. '```' → logprob: -6.968984127044678
    6. 'def' → logprob: -7.093984127044678
    7. '  
' → logprob: -8.34398365020752
    8. ' for' → logprob: -8.84398365020752
    9. '"""
' → logprob: -8.84398365020752
    10. ')' → logprob: -9.21898365020752

Token 365: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2093508094549179
    2. '   ' → logprob: -2.084350824356079
    3. '):
' → logprob: -3.709350824356079
    4. '):' → logprob: -3.709350824356079
    5. ':' → logprob: -4.3343505859375
    6. ',
' → logprob: -6.7093505859375
    7. '       ' → logprob: -8.2093505859375
    8. 'def' → logprob: -8.5843505859375
    9. ' :' → logprob: -8.8343505859375
    10. ':
' → logprob: -8.8343505859375

Token 366: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019380348967388272
    2. '       ' → logprob: -6.2519378662109375
    3. 'N' → logprob: -12.876937866210938
    4. '  ' → logprob: -13.126937866210938
    5. '    ' → logprob: -13.626937866210938
    6. 'def' → logprob: -14.251937866210938
    7. ' ' → logprob: -14.501937866210938
    8. '```' → logprob: -14.501937866210938
    9. ' N' → logprob: -14.751937866210938
    10. '     ' → logprob: -15.001937866210938

Token 367: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.3315628170967102
    2. ' N' → logprob: -1.3315627574920654
    3. 'C' → logprob: -4.8315629959106445
    4. '   ' → logprob: -5.2065629959106445
    5. ' C' → logprob: -5.5815629959106445
    6. 'r' → logprob: -7.9565629959106445
    7. ' ' → logprob: -8.206562995910645
    8. ' r' → logprob: -8.956562995910645
    9. 'def' → logprob: -10.956562995910645
    10. ')' → logprob: -11.019062995910645

Token 368: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001125094946473837
    2. ' ,' → logprob: -7.126124858856201
    3. '   ' → logprob: -9.00112533569336
    4. ' (' → logprob: -9.50112533569336
    5. '):' → logprob: -10.50112533569336
    6. ',int' → logprob: -10.75112533569336
    7. '(int' → logprob: -11.12612533569336
    8. 'int' → logprob: -11.12612533569336
    9. '):
' → logprob: -11.75112533569336
    10. ',
' → logprob: -11.87612533569336

Token 369: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033581978641450405
    2. ' int' → logprob: -8.000335693359375
    3. ')' → logprob: -15.000335693359375
    4. '[int' → logprob: -17.000335693359375
    5. 'def' → logprob: -17.625335693359375
    6. '   ' → logprob: -17.750335693359375
    7. ',' → logprob: -18.375335693359375
    8. 'list' → logprob: -18.375335693359375
    9. ',int' → logprob: -19.000335693359375
    10. ':int' → logprob: -19.250335693359375

Token 370: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006319085601717234
    2. '):
' → logprob: -5.506319046020508
    3. ')' → logprob: -6.256319046020508
    4. '   ' → logprob: -8.256319046020508
    5. ',' → logprob: -10.756319046020508
    6. ' ):' → logprob: -11.131319046020508
    7. ':' → logprob: -11.756319046020508
    8. '):

' → logprob: -12.381319046020508
    9. '):
' → logprob: -12.631319046020508
    10. ']:' → logprob: -13.006319046020508

Token 371: ' Taille' (ID: 174124)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.11158579587936401
    2. 'C' → logprob: -2.736585855484009
    3. ' int' → logprob: -4.36158561706543
    4. ' ' → logprob: -4.61158561706543
    5. '   ' → logprob: -4.98658561706543
    6. ')' → logprob: -5.36158561706543
    7. 'int' → logprob: -6.73658561706543
    8. '    ' → logprob: -6.98658561706543
    9. ' def' → logprob: -6.98658561706543
    10. ' ' → logprob: -6.98658561706543

Token 372: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8575336337089539
    2. ')' → logprob: -1.3575336933135986
    3. '   ' → logprob: -1.3575336933135986
    4. 'de' → logprob: -2.9825336933135986
    5. '_' → logprob: -6.1075334548950195
    6. '_de' → logprob: -6.1075334548950195
    7. ',' → logprob: -6.3575334548950195
    8. ' of' → logprob: -6.8575334548950195
    9. 'def' → logprob: -7.6075334548950195
    10. 'C' → logprob: -7.7325334548950195

Token 373: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.16112464666366577
    2. 'la' → logprob: -1.9111247062683105
    3. 'C' → logprob: -7.4111247062683105
    4. ' C' → logprob: -8.786124229431152
    5. ' ' → logprob: -10.161124229431152
    6. 'l' → logprob: -10.411124229431152
    7. '   ' → logprob: -10.536124229431152
    8. 'the' → logprob: -11.286124229431152
    9. '_la' → logprob: -12.161124229431152
    10. ' the' → logprob: -12.286124229431152

Token 374: ' sé' (ID: 7462)
  Prédit: ' sé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.49571511149406433
    2. 'sé' → logprob: -1.1207151412963867
    3. ' sequence' → logprob: -3.2457151412963867
    4. 'sequence' → logprob: -3.7457151412963867
    5. 's' → logprob: -6.995715141296387
    6. ' C' → logprob: -7.870715141296387
    7. '   ' → logprob: -8.120715141296387
    8. '_sequence' → logprob: -8.620715141296387
    9. 'seq' → logprob: -9.245715141296387
    10. '_s' → logprob: -9.370715141296387

Token 375: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -2.816093228830141e-06
    2. 'quences' → logprob: -13.75000286102295
    3. 'QUENCE' → logprob: -14.00000286102295
    4. 'qu' → logprob: -15.00000286102295
    5. 'sequence' → logprob: -15.12500286102295
    6. 'que' → logprob: -16.250001907348633
    7. 'q' → logprob: -16.375001907348633
    8. '   ' → logprob: -16.875001907348633
    9. '```' → logprob: -17.375001907348633
    10. '_sequence' → logprob: -17.500001907348633

Token 376: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6761236190795898
    2. '):
' → logprob: -1.1761236190795898
    3. ')' → logprob: -2.55112361907959
    4. ',' → logprob: -2.92612361907959
    5. '):' → logprob: -3.55112361907959
    6. ')
' → logprob: -4.55112361907959
    7. '),
' → logprob: -5.17612361907959
    8. '),' → logprob: -5.55112361907959
    9. ',
' → logprob: -6.55112361907959
    10. '       ' → logprob: -7.80112361907959

Token 377: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07015972584486008
    2. '       ' → logprob: -2.695159673690796
    3. 'C' → logprob: -9.195159912109375
    4. ' C' → logprob: -10.070159912109375
    5. '    ' → logprob: -10.195159912109375
    6. '           ' → logprob: -11.320159912109375
    7. '     ' → logprob: -11.820159912109375
    8. '      ' → logprob: -11.945159912109375
    9. '        ' → logprob: -12.070159912109375
    10. ' ' → logprob: -12.320159912109375

Token 378: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.005231036338955164
    2. ' C' → logprob: -5.380230903625488
    3. '   ' → logprob: -7.505230903625488
    4. 'max' → logprob: -10.380230903625488
    5. ' ' → logprob: -11.630230903625488
    6. 'prev' → logprob: -12.255230903625488
    7. 'r' → logprob: -12.380230903625488
    8. '       ' → logprob: -12.630230903625488
    9. ' max' → logprob: -13.630230903625488
    10. '    ' → logprob: -14.130230903625488

Token 379: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11437810212373734
    2. '):
' → logprob: -3.6143782138824463
    3. ')' → logprob: -3.7393782138824463
    4. '   ' → logprob: -3.7393782138824463
    5. ':' → logprob: -3.9893782138824463
    6. ',' → logprob: -4.364377975463867
    7. ' ):' → logprob: -6.614377975463867
    8. ' :' → logprob: -8.364377975463867
    9. '),' → logprob: -8.364377975463867
    10. '[' → logprob: -8.739377975463867

Token 380: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.035180315375328064
    2. 'list' → logprob: -3.4101803302764893
    3. ' int' → logprob: -7.41018009185791
    4. ' list' → logprob: -7.41018009185791
    5. '[int' → logprob: -9.03518009185791
    6. ')' → logprob: -9.41018009185791
    7. '   ' → logprob: -9.78518009185791
    8. 'List' → logprob: -10.16018009185791
    9. 'i' → logprob: -11.91018009185791
    10. '```' → logprob: -12.53518009185791

Token 381: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010653611272573471
    2. '   ' → logprob: -5.510653495788574
    3. '):
' → logprob: -5.760653495788574
    4. ')' → logprob: -5.760653495788574
    5. ' ):' → logprob: -9.010653495788574
    6. ':' → logprob: -9.385653495788574
    7. '[' → logprob: -11.635653495788574
    8. ''):' → logprob: -12.260653495788574
    9. '[int' → logprob: -12.260653495788574
    10. '):

' → logprob: -12.510653495788574

Token 382: ' Sé' (ID: 53058)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.15169832110404968
    2. 'list' → logprob: -2.026698350906372
    3. 'int' → logprob: -5.651698112487793
    4. '[int' → logprob: -5.776698112487793
    5. ' int' → logprob: -6.651698112487793
    6. '   ' → logprob: -7.276698112487793
    7. 'List' → logprob: -8.901698112487793
    8. ' [' → logprob: -9.401698112487793
    9. ')' → logprob: -9.651698112487793
    10. '    ' → logprob: -10.526698112487793

Token 383: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.05794476345181465
    2. 'quences' → logprob: -3.6829447746276855
    3. '[' → logprob: -3.8079447746276855
    4. '   ' → logprob: -5.1829447746276855
    5. ']' → logprob: -6.6829447746276855
    6. '[i' → logprob: -6.9329447746276855
    7. '[int' → logprob: -8.307944297790527
    8. ')' → logprob: -8.682944297790527
    9. '[
' → logprob: -8.932944297790527
    10. 'qu' → logprob: -9.307944297790527

Token 384: ' des' (ID: 731)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.10488292574882507
    2. '   ' → logprob: -3.2298829555511475
    3. '):' → logprob: -3.3548829555511475
    4. '):
' → logprob: -4.354882717132568
    5. ':' → logprob: -5.604882717132568
    6. '<int' → logprob: -6.229882717132568
    7. ')' → logprob: -6.979882717132568
    8. ' of' → logprob: -6.979882717132568
    9. ' des' → logprob: -7.104882717132568
    10. 'int' → logprob: -7.229882717132568

Token 385: ' valeurs' (ID: 73668)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.738064706325531
    2. 'int' → logprob: -1.8630647659301758
    3. ' ent' → logprob: -2.238064765930176
    4. 'val' → logprob: -2.613064765930176
    5. ' C' → logprob: -2.988064765930176
    6. 'C' → logprob: -3.238064765930176
    7. ' integers' → logprob: -3.488064765930176
    8. ' valeurs' → logprob: -3.988064765930176
    9. ' int' → logprob: -4.113064765930176
    10. 'ints' → logprob: -4.488064765930176

Token 386: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.491580069065094
    2. '):' → logprob: -1.3665800094604492
    3. '   ' → logprob: -2.366580009460449
    4. '[int' → logprob: -3.616580009460449
    5. ')' → logprob: -4.491580009460449
    6. 'int' → logprob: -8.36658000946045
    7. '<int' → logprob: -8.74158000946045
    8. ' ):
' → logprob: -9.11658000946045
    9. '       ' → logprob: -9.49158000946045
    10. ' of' → logprob: -9.61658000946045

Token 387: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029251758009195328
    2. '
' → logprob: -4.154251575469971
    3. ')' → logprob: -5.404251575469971
    4. '):
' → logprob: -5.529251575469971
    5. '    
' → logprob: -6.654251575469971
    6. ')
' → logprob: -7.404251575469971
    7. 'r' → logprob: -7.404251575469971
    8. '):' → logprob: -7.779251575469971
    9. '```' → logprob: -7.779251575469971
    10. ' 
' → logprob: -8.029252052307129

Token 388: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47024044394493103
    2. 'prev' → logprob: -1.0952404737472534
    3. ' prev' → logprob: -4.095240592956543
    4. 'max' → logprob: -4.720240592956543
    5. '```' → logprob: -5.595240592956543
    6. 'r' (adapté à ' r') → logprob: -5.845240592956543
    7. '
' → logprob: -6.470240592956543
    8. '       ' → logprob: -6.970240592956543
    9. ' max' → logprob: -6.970240592956543
    10. ')' → logprob: -6.970240592956543

Token 389: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9590718746185303
    2. '):
' → logprob: -1.0840718746185303
    3. '   ' → logprob: -2.0840718746185303
    4. ',' → logprob: -2.5840718746185303
    5. ')' → logprob: -3.0840718746185303
    6. 'def' → logprob: -4.584072113037109
    7. ' =' → logprob: -4.584072113037109
    8. ':' → logprob: -5.709072113037109
    9. '=' → logprob: -5.709072113037109
    10. ' (' → logprob: -6.959072113037109

Token 390: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002342912630410865
    2. ')' → logprob: -9.625234603881836
    3. ' int' → logprob: -9.750234603881836
    4. '   ' → logprob: -9.750234603881836
    5. 'range' → logprob: -10.500234603881836
    6. 'i' → logprob: -11.875234603881836
    7. 'N' → logprob: -12.125234603881836
    8. 'list' → logprob: -12.375234603881836
    9. ' range' → logprob: -13.125234603881836
    10. '[int' → logprob: -13.750234603881836

Token 391: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005553066730499268
    2. ')' → logprob: -5.630553245544434
    3. '):
' → logprob: -6.505553245544434
    4. '   ' → logprob: -8.005553245544434
    5. ':' → logprob: -10.005553245544434
    6. 'def' → logprob: -11.005553245544434
    7. '):

' → logprob: -11.130553245544434
    8. ' ):' → logprob: -11.505553245544434
    9. '):
' → logprob: -11.755553245544434
    10. '[int' → logprob: -12.255553245544434

Token 392: ' Tableau' (ID: 180833)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.8075574040412903
    2. 'prev' → logprob: -1.1825573444366455
    3. '    ' → logprob: -2.4325573444366455
    4. ')' → logprob: -2.8075573444366455
    5. '   ' → logprob: -2.8075573444366455
    6. ' ' → logprob: -4.307557582855225
    7. ' None' → logprob: -5.432557582855225
    8. '_prev' → logprob: -5.682557582855225
    9. ' )' → logprob: -5.932557582855225
    10. '
' → logprob: -6.432557582855225

Token 393: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0803693532943726
    2. ')' → logprob: -1.5803693532943726
    3. '   ' → logprob: -1.9553693532943726
    4. ' for' → logprob: -1.9553693532943726
    5. 'for' → logprob: -2.955369472503662
    6. 'def' → logprob: -3.330369472503662
    7. ' =' → logprob: -3.830369472503662
    8. ' des' → logprob: -4.705369472503662
    9. '):
' → logprob: -4.830369472503662
    10. '):' → logprob: -4.830369472503662

Token 394: ' remplir' (ID: 113625)
  Prédit: ' remplir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remplir' → logprob: -0.28115421533584595
    2. 'rem' → logprob: -1.5311541557312012
    3. 'fill' → logprob: -3.906154155731201
    4. ' rempl' → logprob: -6.031154155731201
    5. ' rem' → logprob: -7.031154155731201
    6. '```' → logprob: -7.156154155731201
    7. 'initial' → logprob: -7.406154155731201
    8. ' rempli' → logprob: -7.531154155731201
    9. 'initialize' → logprob: -7.656154155731201
    10. 'modifier' → logprob: -7.656154155731201

Token 395: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19778206944465637
    2. ',' → logprob: -2.322782039642334
    3. '   ' → logprob: -2.947782039642334
    4. 'def' → logprob: -4.197782039642334
    5. '):
' → logprob: -4.572782039642334
    6. ')
' → logprob: -6.072782039642334
    7. '):' → logprob: -7.447782039642334
    8. ' for' → logprob: -9.072782516479492
    9. 'for' → logprob: -9.197782516479492
    10. '),' → logprob: -9.197782516479492

Token 396: ' les' (ID: 1341)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3308737576007843
    2. 'l' → logprob: -2.080873727798462
    3. '[next' → logprob: -2.955873727798462
    4. 'int' → logprob: -3.455873727798462
    5. ')' → logprob: -4.080873966217041
    6. 'the' → logprob: -4.455873966217041
    7. '<|end|>' → logprob: -4.580873966217041
    8. ' next' → logprob: -5.080873966217041
    9. 'indices' → logprob: -5.330873966217041
    10. 'r' → logprob: -5.330873966217041

Token 397: ' indices' (ID: 30378)
  Prédit: ' indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.31966036558151245
    2. 'indices' → logprob: -1.4446604251861572
    3. ' prochains' → logprob: -3.9446604251861572
    4. 'next' → logprob: -5.069660186767578
    5. ' next' → logprob: -6.194660186767578
    6. 'pro' → logprob: -6.444660186767578
    7. ' valeurs' → logprob: -6.694660186767578
    8. ' prochaines' → logprob: -6.694660186767578
    9. ' prochain' → logprob: -6.694660186767578
    10. 'positions' → logprob: -7.069660186767578

Token 398: ' suivants' (ID: 112219)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.9850165843963623
    2. ' valid' → logprob: -1.8600165843963623
    3. 'valid' → logprob: -2.1100165843963623
    4. ')' → logprob: -2.2350165843963623
    5. '   ' → logprob: -2.4850165843963623
    6. 'val' → logprob: -2.4850165843963623
    7. ' des' → logprob: -3.6100165843963623
    8. ' suivants' → logprob: -3.8600165843963623
    9. ',' → logprob: -4.735016822814941
    10. ' valide' → logprob: -5.735016822814941

Token 399: ' val' (ID: 1459)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09141960740089417
    2. '   ' → logprob: -3.4664196968078613
    3. ',' → logprob: -3.7164196968078613
    4. ' valid' → logprob: -4.341419696807861
    5. ' )' → logprob: -5.466419696807861
    6. 'valid' → logprob: -5.591419696807861
    7. ' pour' → logprob: -6.091419696807861
    8. ' ,' → logprob: -6.216419696807861
    9. ' for' → logprob: -6.966419696807861
    10. '.' → logprob: -7.341419696807861

Token 400: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.10025002062320709
    2. 'ide' → logprob: -2.350250005722046
    3. 'id' → logprob: -10.350250244140625
    4. '```' → logprob: -13.475250244140625
    5. 'i' → logprob: -13.600250244140625
    6. '   ' → logprob: -13.850250244140625
    7. 'ables' → logprob: -13.975250244140625
    8. '</' → logprob: -14.350250244140625
    9. ')' → logprob: -14.850250244140625
    10. '**' → logprob: -14.975250244140625

Token 401: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11738117039203644
    2. ')
' → logprob: -2.8673810958862305
    3. '   ' → logprob: -3.1173810958862305
    4. ' )' → logprob: -5.8673810958862305
    5. ' pour' → logprob: -6.1173810958862305
    6. ' for' → logprob: -6.4923810958862305
    7. 'for' → logprob: -6.9923810958862305
    8. ',' → logprob: -7.7423810958862305
    9. ' )
' → logprob: -7.7423810958862305
    10. 'def' → logprob: -8.49238109588623

Token 402: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15550847351551056
    2. ')' → logprob: -2.655508518218994
    3. '):
' → logprob: -3.030508518218994
    4. '):' → logprob: -4.030508518218994
    5. ')
' → logprob: -5.405508518218994
    6. '
' → logprob: -6.530508518218994
    7. '```' → logprob: -7.155508518218994
    8. '    
' → logprob: -7.905508518218994
    9. 'def' → logprob: -8.280508041381836
    10. ',' → logprob: -9.780508041381836

Token 403: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.10816244781017303
    2. ' prev' → logprob: -2.4831624031066895
    3. '   ' → logprob: -3.9831624031066895
    4. 'max' → logprob: -9.358162879943848
    5. 'for' → logprob: -9.858162879943848
    6. ' ' → logprob: -9.983162879943848
    7. '
' → logprob: -10.358162879943848
    8. ' max' → logprob: -10.483162879943848
    9. '```' → logprob: -10.608162879943848
    10. ' for' → logprob: -10.733162879943848

Token 404: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44386518001556396
    2. '):' → logprob: -1.568865180015564
    3. '):
' → logprob: -2.1938652992248535
    4. 'def' → logprob: -4.1938652992248535
    5. '   ' → logprob: -4.5688652992248535
    6. ' (' → logprob: -5.8188652992248535
    7. ':' → logprob: -6.1938652992248535
    8. ')' → logprob: -6.4438652992248535
    9. ' ,' → logprob: -6.4438652992248535
    10. ' def' → logprob: -7.4438652992248535

Token 405: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1904670149087906
    2. 'int' → logprob: -1.8154670000076294
    3. ')' → logprob: -4.94046688079834
    4. '[int' → logprob: -6.81546688079834
    5. 'range' → logprob: -6.94046688079834
    6. 'C' → logprob: -8.19046688079834
    7. '-' → logprob: -8.19046688079834
    8. ' list' → logprob: -8.31546688079834
    9. ']' → logprob: -9.06546688079834
    10. 'def' → logprob: -9.81546688079834

Token 406: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09985040128231049
    2. '):
' → logprob: -3.0998504161834717
    3. ')' → logprob: -3.4748504161834717
    4. '   ' → logprob: -4.599850177764893
    5. ']):' → logprob: -5.599850177764893
    6. ',' → logprob: -6.224850177764893
    7. 'for' → logprob: -6.849850177764893
    8. ')]' → logprob: -8.09985065460205
    9. ']):
' → logprob: -8.34985065460205
    10. ' for' → logprob: -8.72485065460205

Token 407: ' Tableau' (ID: 180833)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2517335414886475
    2. '[-' → logprob: -1.2517335414886475
    3. 'for' → logprob: -1.6267335414886475
    4. '[int' → logprob: -2.6267335414886475
    5. 'Indices' → logprob: -3.2517335414886475
    6. '   ' → logprob: -3.6267335414886475
    7. '[' → logprob: -3.7517335414886475
    8. ' for' → logprob: -4.251733779907227
    9. 'list' → logprob: -5.126733779907227
    10. 'int' → logprob: -5.126733779907227

Token 408: ' maintenant' (ID: 35735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9300299882888794
    2. '   ' → logprob: -1.0550299882888794
    3. ' =' → logprob: -2.30502986907959
    4. ' for' → logprob: -3.30502986907959
    5. 'for' → logprob: -3.43002986907959
    6. ' des' → logprob: -3.55502986907959
    7. '):
' → logprob: -4.55502986907959
    8. '=' → logprob: -4.55502986907959
    9. 'des' → logprob: -5.18002986907959
    10. '):' → logprob: -5.43002986907959

Token 409: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.465516448020935
    2. 'la' → logprob: -1.840516448020935
    3. ' the' → logprob: -2.5905165672302246
    4. 'l' → logprob: -2.8405165672302246
    5. ' les' → logprob: -2.8405165672302246
    6. 'the' → logprob: -2.8405165672302246
    7. 'le' → logprob: -3.2155165672302246
    8. ' à' → logprob: -3.2155165672302246
    9. '[int' → logprob: -3.2155165672302246
    10. ')' → logprob: -3.5905165672302246

Token 410: ' dernière' (ID: 39497)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.3849943280220032
    2. ' dernier' → logprob: -2.2599942684173584
    3. 'last' → logprob: -2.5099942684173584
    4. ' last' → logprob: -2.7599942684173584
    5. 'der' → logprob: -2.8849942684173584
    6. ' dernière' → logprob: -4.5099945068359375
    7. 'indice' → logprob: -6.7599945068359375
    8. ' derni' → logprob: -6.8849945068359375
    9. 'index' → logprob: -7.7599945068359375
    10. 'indices' → logprob: -8.509994506835938

Token 411: ' position' (ID: 4010)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.20364928245544434
    2. ' occurrence' → logprob: -2.7036492824554443
    3. 'occur' → logprob: -2.8286492824554443
    4. '_' → logprob: -3.9536492824554443
    5. '_occ' → logprob: -3.9536492824554443
    6. 'indice' → logprob: -5.328649520874023
    7. '_oc' → logprob: -5.453649520874023
    8. 'position' → logprob: -6.203649520874023
    9. ' occur' → logprob: -6.203649520874023
    10. ' position' → logprob: -6.578649520874023

Token 412: ' connue' (ID: 135819)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.068710446357727
    2. '   ' → logprob: -1.818710446357727
    3. 'où' → logprob: -1.818710446357727
    4. ' de' → logprob: -2.1937103271484375
    5. 'de' → logprob: -2.1937103271484375
    6. ' où' → logprob: -3.4437103271484375
    7. 'des' → logprob: -3.8187103271484375
    8. ' vue' → logprob: -4.5687103271484375
    9. 'vue' → logprob: -4.6937103271484375
    10. ' where' → logprob: -4.9437103271484375

Token 413: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.37909311056137085
    2. '   ' → logprob: -2.5040931701660156
    3. ')' → logprob: -2.6290931701660156
    4. 'de' → logprob: -3.0040931701660156
    5. 'où' → logprob: -3.3790931701660156
    6. ' où' → logprob: -3.5040931701660156
    7. ' where' → logprob: -4.379093170166016
    8. ' des' → logprob: -5.129093170166016
    9. ' of' → logprob: -5.129093170166016
    10. ' pour' → logprob: -5.379093170166016

Token 414: ' chaque' (ID: 21194)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.1287619024515152
    2. ' C' → logprob: -2.5037620067596436
    3. ' chaque' → logprob: -3.5037620067596436
    4. 'each' → logprob: -5.6287617683410645
    5. 'la' → logprob: -6.0037617683410645
    6. ' la' → logprob: -7.0037617683410645
    7. ' each' → logprob: -7.5037617683410645
    8. 'Chaque' → logprob: -8.378762245178223
    9. 'c' → logprob: -8.628762245178223
    10. 'ch' → logprob: -8.878762245178223

Token 415: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0868551954627037
    2. ' valeur' → logprob: -3.086855173110962
    3. 'value' → logprob: -4.336855411529541
    4. 'C' → logprob: -4.586855411529541
    5. ' C' → logprob: -5.211855411529541
    6. ' val' → logprob: -5.961855411529541
    7. ' value' → logprob: -6.711855411529541
    8. '   ' → logprob: -6.836855411529541
    9. 'élé' → logprob: -6.836855411529541
    10. ')' → logprob: -7.086855411529541

Token 416: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1171109676361084
    2. '):
' → logprob: -1.3671109676361084
    3. ')' → logprob: -1.4921109676361084
    4. '   ' → logprob: -1.8671109676361084
    5. 'de' → logprob: -4.3671112060546875
    6. ')
' → logprob: -5.6171112060546875
    7. 'def' → logprob: -5.7421112060546875
    8. ' de' → logprob: -5.8671112060546875
    9. 'C' → logprob: -6.2421112060546875
    10. '[' → logprob: -6.4921112060546875

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2891159951686859
    2. '):
' → logprob: -1.5391160249710083
    3. '):' → logprob: -3.9141159057617188
    4. ')' → logprob: -4.289115905761719
    5. ')
' → logprob: -6.289115905761719
    6. '
' → logprob: -8.039115905761719
    7. '"""
' → logprob: -8.539115905761719
    8. '```' → logprob: -8.914115905761719
    9. '    
' → logprob: -9.664115905761719
    10. 'def' → logprob: -10.289115905761719

Token 418: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02423035353422165
    2. '):
' → logprob: -4.649230480194092
    3. ')' → logprob: -4.899230480194092
    4. '
' → logprob: -6.024230480194092
    5. '    
' → logprob: -6.149230480194092
    6. '):' → logprob: -6.774230480194092
    7. ')
' → logprob: -7.024230480194092
    8. '```' → logprob: -9.399230003356934
    9. '  
' → logprob: -9.774230003356934
    10. 'for' → logprob: -10.649230003356934

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00354067818261683
    2. 'for' → logprob: -5.878540515899658
    3. ' for' → logprob: -7.253540515899658
    4. '
' → logprob: -10.753540992736816
    5. '```' → logprob: -12.378540992736816
    6. '    
' → logprob: -13.253540992736816
    7. 'def' → logprob: -15.253540992736816
    8. '	for' → logprob: -15.253540992736816
    9. '``' → logprob: -16.8785400390625
    10. '   ' → logprob: -17.0035400390625

Token 420: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014308886602520943
    2. '   ' → logprob: -4.889308929443359
    3. ' for' → logprob: -5.014308929443359
    4. '	for' → logprob: -10.51430892944336
    5. '
' → logprob: -12.38930892944336
    6. '    
' → logprob: -12.76430892944336
    7. '```' → logprob: -12.76430892944336
    8. 'range' → logprob: -14.13930892944336
    9. 'i' → logprob: -16.38930892944336
    10. '``' → logprob: -16.63930892944336

Token 421: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014215569011867046
    2. 'i' → logprob: -4.264215469360352
    3. '	i' → logprob: -11.389215469360352
    4. '   ' → logprob: -11.514215469360352
    5. ' ' → logprob: -11.514215469360352
    6. '_i' → logprob: -12.514215469360352
    7. ' _' → logprob: -12.889215469360352
    8. ' ' → logprob: -13.139215469360352
    9. '[i' → logprob: -13.389215469360352
    10. '(i' → logprob: -13.451715469360352

Token 422: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06999880075454712
    2. 'in' → logprob: -2.6949987411499023
    3. ' ' → logprob: -10.069998741149902
    4. ',' → logprob: -11.944998741149902
    5. '_' → logprob: -12.069998741149902
    6. '   ' → logprob: -13.444998741149902
    7. '	in' → logprob: -13.569998741149902
    8. '_in' → logprob: -14.194998741149902
    9. '  ' → logprob: -14.194998741149902
    10. '```' → logprob: -14.819998741149902

Token 423: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47676777839660645
    2. ' range' → logprob: -0.9767677783966064
    3. 're' → logprob: -6.601767539978027
    4. ' reversed' → logprob: -6.976767539978027
    5. '0' → logprob: -8.726767539978027
    6. '   ' → logprob: -9.351767539978027
    7. 'N' → logprob: -9.726767539978027
    8. 'in' → logprob: -11.101767539978027
    9. ' N' → logprob: -11.226767539978027
    10. ' ' → logprob: -11.226767539978027

Token 424: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.10471642762422562
    2. '(' → logprob: -2.3547165393829346
    3. 'N' → logprob: -5.9797163009643555
    4. '1' → logprob: -6.3547163009643555
    5. '   ' → logprob: -8.604716300964355
    6. '0' → logprob: -11.604716300964355
    7. ',' → logprob: -11.854716300964355
    8. ')' → logprob: -12.104716300964355
    9. ' N' → logprob: -12.229716300964355
    10. '(n' → logprob: -12.229716300964355

Token 425: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5268075466156006
    2. '):
' → logprob: -1.1518075466156006
    3. '-' → logprob: -2.6518075466156006
    4. ' -' → logprob: -3.9018075466156006
    5. '   ' → logprob: -6.65180778503418
    6. ')' → logprob: -7.27680778503418
    7. ' ):' → logprob: -8.02680778503418
    8. '+' → logprob: -8.40180778503418
    9. ' ):
' → logprob: -9.52680778503418
    10. ',' → logprob: -10.90180778503418

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1964716613292694
    2. '   ' → logprob: -1.8214716911315918
    3. ' if' → logprob: -4.446471691131592
    4. 'if' → logprob: -6.571471691131592
    5. 'value' → logprob: -6.571471691131592
    6. ' value' → logprob: -7.446471691131592
    7. 'prev' → logprob: -8.446471214294434
    8. '    
' → logprob: -8.946471214294434
    9. '        
' → logprob: -9.071471214294434
    10. 'v' → logprob: -9.196471214294434

Token 427: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6966695189476013
    2. 'val' → logprob: -0.8216695189476013
    3. 'value' → logprob: -2.946669578552246
    4. '   ' → logprob: -5.196669578552246
    5. 'v' → logprob: -6.571669578552246
    6. 'current' → logprob: -6.696669578552246
    7. 'last' → logprob: -8.321669578552246
    8. 'curr' → logprob: -8.571669578552246
    9. 'x' → logprob: -8.696669578552246
    10. 'prev' → logprob: -8.696669578552246

Token 428: ' Si' (ID: 7832)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5746777653694153
    2. 'if' → logprob: -0.9496777653694153
    3. 'value' → logprob: -3.3246777057647705
    4. 'v' → logprob: -5.19967794418335
    5. '   ' → logprob: -5.32467794418335
    6. ' if' → logprob: -5.94967794418335
    7. ' val' → logprob: -7.44967794418335
    8. '       ' → logprob: -8.074677467346191
    9. 'x' → logprob: -8.949677467346191
    10. ' value' → logprob: -9.949677467346191

Token 429: ' la' (ID: 557)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.25387921929359436
    2. ' prev' → logprob: -1.628879189491272
    3. 'C' → logprob: -4.503879070281982
    4. 'r' → logprob: -4.503879070281982
    5. ' C' → logprob: -5.878879070281982
    6. ' r' → logprob: -5.878879070281982
    7. 'i' → logprob: -9.00387954711914
    8. ' i' → logprob: -9.25387954711914
    9. ' ' → logprob: -10.50387954711914
    10. '0' → logprob: -10.75387954711914

Token 430: ' valeur' (ID: 41664)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.008431954309344292
    2. 'C' → logprob: -5.258431911468506
    3. ' prev' → logprob: -6.133431911468506
    4. 'r' → logprob: -7.008431911468506
    5. ' C' → logprob: -9.508432388305664
    6. 'i' → logprob: -11.383432388305664
    7. ' r' → logprob: -12.258432388305664
    8. 'previous' → logprob: -12.508432388305664
    9. '   ' → logprob: -12.633432388305664
    10. 'c' → logprob: -12.633432388305664

Token 431: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.1584900617599487
    2. 'prev' → logprob: -1.6584900617599487
    3. ' C' → logprob: -2.0334901809692383
    4. '[i' → logprob: -2.4084901809692383
    5. ' prev' → logprob: -2.7834901809692383
    6. '=' → logprob: -3.2834901809692383
    7. ' =' → logprob: -3.5334901809692383
    8. '   ' → logprob: -4.033490180969238
    9. ']' → logprob: -4.158490180969238
    10. '[' → logprob: -4.158490180969238

Token 432: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0802738870552275e-05
    2. '[' → logprob: -12.12501049041748
    3. 'i' → logprob: -13.75001049041748
    4. ' [' → logprob: -14.12501049041748
    5. '[I' → logprob: -14.25001049041748
    6. 'prev' → logprob: -14.62501049041748
    7. ']' → logprob: -14.87501049041748
    8. '   ' → logprob: -15.25001049041748
    9. '(i' → logprob: -15.37501049041748
    10. ')' → logprob: -15.37501049041748

Token 433: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002341281156986952
    2. ']!=' → logprob: -7.127341270446777
    3. ']>' → logprob: -7.877341270446777
    4. ' ]' → logprob: -8.252341270446777
    5. ']==' → logprob: -8.377341270446777
    6. 'prev' → logprob: -8.377341270446777
    7. 'in' → logprob: -9.127341270446777
    8. ' in' → logprob: -9.877341270446777
    9. '>' → logprob: -9.877341270446777
    10. '-' → logprob: -10.377341270446777

Token 434: ' est' (ID: 893)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30155909061431885
    2. 'in' → logprob: -2.6765589714050293
    3. 'prev' → logprob: -2.9265589714050293
    4. '!=' → logprob: -3.1765589714050293
    5. ']!=' → logprob: -3.1765589714050293
    6. ' in' → logprob: -3.3015589714050293
    7. ' !=' → logprob: -4.801558971405029
    8. ']==' → logprob: -5.801558971405029
    9. '_prev' → logprob: -6.926558971405029
    10. '>' → logprob: -6.926558971405029

Token 435: ' déjà' (ID: 21229)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.9162627458572388
    2. '-' → logprob: -1.2912627458572388
    3. 'dans' → logprob: -1.6662627458572388
    4. 'prev' → logprob: -2.416262626647949
    5. ' déjà' → logprob: -4.291262626647949
    6. 'not' → logprob: -5.416262626647949
    7. 'pr' → logprob: -5.791262626647949
    8. 'vue' → logprob: -6.041262626647949
    9. 'prés' → logprob: -6.166262626647949
    10. 'in' → logprob: -6.166262626647949

Token 436: ' appar' (ID: 13643)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.9885576963424683
    2. 'vue' → logprob: -1.2385576963424683
    3. 'appar' → logprob: -1.3635576963424683
    4. ' appar' → logprob: -2.863557815551758
    5. 'prés' → logprob: -4.988557815551758
    6. 'prev' → logprob: -5.738557815551758
    7. 'venue' → logprob: -5.863557815551758
    8. 'ap' → logprob: -5.863557815551758
    9. 'app' → logprob: -6.738557815551758
    10. '-' → logprob: -6.738557815551758

Token 437: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.002160729607567191
    2. 'u' → logprob: -6.377160549163818
    3. '
' → logprob: -8.877161026000977
    4. '   ' → logprob: -10.002161026000977
    5. 'e' → logprob: -11.002161026000977
    6. '[' → logprob: -11.064661026000977
    7. 'enue' → logprob: -11.127161026000977
    8. '\' → logprob: -11.689661026000977
    9. '#' → logprob: -11.752161026000977
    10. '

' → logprob: -11.752161026000977

Token 438: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.34338587522506714
    2. 'and' → logprob: -1.468385934829712
    3. '       ' → logprob: -3.468385934829712
    4. ',' → logprob: -4.593385696411133
    5. ':' → logprob: -4.968385696411133
    6. '   ' → logprob: -5.843385696411133
    7. 'et' → logprob: -6.218385696411133
    8. ' in' → logprob: -6.468385696411133
    9. 'in' → logprob: -6.468385696411133
    10. ' et' → logprob: -7.218385696411133

Token 439: ' pas' (ID: 2173)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.6750455498695374
    2. 'prev' → logprob: -0.8000455498695374
    3. ' i' → logprob: -4.175045490264893
    4. 'r' → logprob: -5.175045490264893
    5. ' r' → logprob: -5.175045490264893
    6. '   ' → logprob: -5.300045490264893
    7. 'i' → logprob: -5.300045490264893
    8. ' abs' → logprob: -6.925045490264893
    9. ' (' → logprob: -7.050045490264893
    10. '(prev' → logprob: -7.175045490264893

Token 440: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.1687836647033691
    2. 'adj' → logprob: -1.7937836647033691
    3. 'con' → logprob: -2.043783664703369
    4. 'cons' → logprob: -2.418783664703369
    5. 'im' → logprob: -2.793783664703369
    6. 'i' → logprob: -2.918783664703369
    7. 'just' → logprob: -3.543783664703369
    8. 'imm' → logprob: -3.793783664703369
    9. ' immédiatement' → logprob: -3.918783664703369
    10. '   ' → logprob: -3.918783664703369

Token 441: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05197513848543167
    2. 'l' → logprob: -3.0519752502441406
    3. 'la' → logprob: -5.801975250244141
    4. 'im' → logprob: -9.05197525024414
    5. ' i' → logprob: -9.17697525024414
    6. 'une' → logprob: -10.42697525024414
    7. 'adj' → logprob: -10.42697525024414
    8. 'con' → logprob: -10.92697525024414
    9. 'c' → logprob: -10.92697525024414
    10. '(i' → logprob: -11.30197525024414

Token 442: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09377051144838333
    2. 'im' → logprob: -2.8437705039978027
    3. 'imm' → logprob: -3.7187705039978027
    4. 'adj' → logprob: -5.593770503997803
    5. ' i' → logprob: -7.218770503997803
    6. 'con' → logprob: -7.468770503997803
    7. 'imme' → logprob: -7.843770503997803
    8. '[i' → logprob: -7.968770503997803
    9. '   ' → logprob: -7.968770503997803
    10. 'vo' → logprob: -8.093770980834961

Token 443: ' précédente' (ID: 177319)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.025256095454096794
    2. '   ' → logprob: -4.400256156921387
    3. ' i' → logprob: -4.775256156921387
    4. 'im' → logprob: -6.150256156921387
    5. 'imm' → logprob: -7.025256156921387
    6. 'adj' → logprob: -8.150256156921387
    7. '       ' → logprob: -8.275256156921387
    8. '[i' → logprob: -9.025256156921387
    9. '(i' → logprob: -9.275256156921387
    10. 'j' → logprob: -9.525256156921387

Token 444: ',
' (ID: 412)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07115718722343445
    2. ',' → logprob: -4.446156978607178
    3. '   ' → logprob: -4.446156978607178
    4. '       ' → logprob: -4.696156978607178
    5. ' if' → logprob: -4.821156978607178
    6. ':' → logprob: -4.946156978607178
    7. 'and' → logprob: -4.946156978607178
    8. ' et' → logprob: -5.071156978607178
    9. ' or' → logprob: -6.446156978607178
    10. ' +' → logprob: -6.821156978607178

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05839195102453232
    2. ' if' → logprob: -3.43339204788208
    3. 'if' → logprob: -3.93339204788208
    4. '           ' → logprob: -5.80839204788208
    5. '   ' → logprob: -6.43339204788208
    6. '	   ' → logprob: -9.558391571044922
    7. '	' → logprob: -9.808391571044922
    8. '	if' → logprob: -10.183391571044922
    9. ' ' → logprob: -10.808391571044922
    10. ' ' → logprob: -11.308391571044922

Token 446: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3713668882846832
    2. 'if' → logprob: -1.2463668584823608
    3. ' if' → logprob: -3.8713669776916504
    4. '   ' → logprob: -6.99636697769165
    5. '           ' → logprob: -7.74636697769165
    6. '	' → logprob: -8.621366500854492
    7. '	if' → logprob: -8.871366500854492
    8. '	   ' → logprob: -9.246366500854492
    9. ' ' → logprob: -10.996366500854492
    10. '	       ' → logprob: -11.621366500854492

Token 447: ' alors' (ID: 17971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6638604998588562
    2. ' if' → logprob: -0.7888604998588562
    3. '       ' → logprob: -4.413860321044922
    4. 'prev' → logprob: -4.538860321044922
    5. '           ' → logprob: -5.663860321044922
    6. 'r' → logprob: -6.663860321044922
    7. ' prev' → logprob: -7.413860321044922
    8. ' r' → logprob: -7.413860321044922
    9. '   ' → logprob: -7.788860321044922
    10. 'j' → logprob: -8.413860321044922

Token 448: ' on' (ID: 402)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0375795364379883
    2. ' if' → logprob: -1.1625795364379883
    3. 'if' → logprob: -1.2875795364379883
    4. ' r' → logprob: -3.1625795364379883
    5. 'prev' → logprob: -5.412579536437988
    6. '       ' → logprob: -5.662579536437988
    7. '   ' → logprob: -5.912579536437988
    8. '           ' → logprob: -6.287579536437988
    9. ' prev' → logprob: -7.662579536437988
    10. 'next' → logprob: -7.787579536437988

Token 449: ' met' (ID: 1421)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7774999141693115
    2. '       ' → logprob: -1.6524999141693115
    3. 'if' → logprob: -1.7774999141693115
    4. '   ' → logprob: -1.9024999141693115
    5. '           ' → logprob: -4.027500152587891
    6. 'prev' → logprob: -6.152500152587891
    7. ' continue' → logprob: -6.777500152587891
    8. 's' → logprob: -7.027500152587891
    9. ' for' → logprob: -7.277500152587891
    10. 'for' → logprob: -7.277500152587891

Token 450: ' à' (ID: 1221)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2723173499107361
    2. ' r' → logprob: -1.7723174095153809
    3. ' à' → logprob: -3.272317409515381
    4. '   ' → logprob: -3.647317409515381
    5. ' a' → logprob: -7.397317409515381
    6. 'à' → logprob: -7.522317409515381
    7. ' ' → logprob: -7.522317409515381
    8. 'l' → logprob: -7.772317409515381
    9. ' ' → logprob: -7.897317409515381
    10. ' l' → logprob: -8.022316932678223

Token 451: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.14102758467197418
    2. ' jour' → logprob: -2.1410276889801025
    3. 'r' → logprob: -5.016027450561523
    4. 'j' → logprob: -5.266027450561523
    5. 'i' → logprob: -6.391027450561523
    6. 'prev' → logprob: -8.016027450561523
    7. 'day' → logprob: -9.891027450561523
    8. '   ' → logprob: -10.391027450561523
    9. '```' → logprob: -10.516027450561523
    10. 'Jour' → logprob: -10.766027450561523

Token 452: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.37324151396751404
    2. ' r' → logprob: -1.6232415437698364
    3. 'prev' → logprob: -2.373241424560547
    4. ' prev' → logprob: -4.373241424560547
    5. '   ' → logprob: -5.248241424560547
    6. '       ' → logprob: -6.623241424560547
    7. '```' → logprob: -7.873241424560547
    8. '           ' → logprob: -8.373241424560547
    9. ')' → logprob: -8.748241424560547
    10. ' if' → logprob: -8.748241424560547

Token 453: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06427305191755295
    2. '[C' → logprob: -2.8142731189727783
    3. 'prev' → logprob: -7.189272880554199
    4. 'C' → logprob: -7.564272880554199
    5. '[r' → logprob: -7.939272880554199
    6. '   ' → logprob: -8.1892728805542
    7. '[c' → logprob: -9.4392728805542
    8. '[i' → logprob: -9.5642728805542
    9. ' [' → logprob: -9.9392728805542
    10. ' C' → logprob: -10.3142728805542

Token 454: ' la' (ID: 557)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.00404753303155303
    2. ' prev' → logprob: -5.754047393798828
    3. '[' → logprob: -7.254047393798828
    4. 'l' → logprob: -9.254047393798828
    5. '   ' → logprob: -11.379047393798828
    6. '	prev' → logprob: -11.379047393798828
    7. 'index' → logprob: -11.754047393798828
    8. '(prev' → logprob: -12.379047393798828
    9. 'la' → logprob: -12.504047393798828
    10. ' l' → logprob: -12.504047393798828

Token 455: ' dernière' (ID: 39497)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.006962115410715342
    2. '[' → logprob: -5.381962299346924
    3. 'index' → logprob: -7.006962299346924
    4. ' prev' → logprob: -7.631962299346924
    5. 'indice' → logprob: -8.256961822509766
    6. 'position' → logprob: -8.631961822509766
    7. 'i' → logprob: -8.881961822509766
    8. '`' → logprob: -9.506961822509766
    9. '```' → logprob: -9.881961822509766
    10. ' ' → logprob: -10.256961822509766

Token 456: ' position' (ID: 4010)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.6284346580505371
    2. 'occur' → logprob: -2.378434658050537
    3. ' occurrence' → logprob: -2.753434658050537
    4. '   ' → logprob: -3.128434658050537
    5. 'position' → logprob: -3.128434658050537
    6. ' position' → logprob: -3.253434658050537
    7. '[' → logprob: -3.503434658050537
    8. '[i' → logprob: -3.878434658050537
    9. '_' → logprob: -4.003434658050537
    10. ' apparition' → logprob: -4.128434658050537

Token 457: ' où' (ID: 15113)
  Prédit: '[C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.8344211578369141
    2. '[' → logprob: -1.334421157836914
    3. '       ' → logprob: -1.709421157836914
    4. '   ' → logprob: -2.834421157836914
    5. '           ' → logprob: -3.709421157836914
    6. ']' → logprob: -4.959421157836914
    7. 'prev' → logprob: -5.334421157836914
    8. ' [' → logprob: -5.459421157836914
    9. ' de' → logprob: -5.959421157836914
    10. '               ' → logprob: -6.084421157836914

Token 458: ' elle' (ID: 11451)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.3298985958099365
    2. 'C' → logprob: -1.3298985958099365
    3. ' prev' → logprob: -5.204898834228516
    4. ' C' → logprob: -5.454898834228516
    5. '   ' → logprob: -5.454898834228516
    6. '       ' → logprob: -6.579898834228516
    7. '           ' → logprob: -7.829898834228516
    8. '```' → logprob: -8.204898834228516
    9. 'i' → logprob: -10.079898834228516
    10. '    ' → logprob: -10.204898834228516

Token 459: ' est' (ID: 893)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.793539822101593
    2. 'avait' → logprob: -2.2935397624969482
    3. ' a' → logprob: -2.4185397624969482
    4. 'est' → logprob: -2.6685397624969482
    5. 'appe' → logprob: -2.9185397624969482
    6. ' appeared' → logprob: -3.1685397624969482
    7. '   ' → logprob: -3.4185397624969482
    8. '[i' → logprob: -4.043540000915527
    9. 'val' → logprob: -4.293540000915527
    10. 'prev' → logprob: -4.293540000915527

Token 460: ' appar' (ID: 13643)
  Prédit: ' appar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appar' → logprob: -0.7469286322593689
    2. 'diff' → logprob: -1.8719286918640137
    3. 'vue' → logprob: -1.9969286918640137
    4. '   ' → logprob: -2.7469286918640137
    5. '       ' → logprob: -3.6219286918640137
    6. 'sur' → logprob: -3.7469286918640137
    7. 'C' → logprob: -3.7469286918640137
    8. 'different' → logprob: -3.9969286918640137
    9. 'appar' → logprob: -4.121928691864014
    10. 'not' → logprob: -4.371928691864014

Token 461: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0036256047897040844
    2. 'u' → logprob: -5.878625392913818
    3. '   ' → logprob: -8.878625869750977
    4. '
' → logprob: -9.128625869750977
    5. 'cue' → logprob: -10.253625869750977
    6. 'ut' → logprob: -10.753625869750977
    7. '{' → logprob: -10.816125869750977
    8. 'ie' → logprob: -10.816125869750977
    9. '[i' → logprob: -10.816125869750977
    10. 'enue' → logprob: -10.878625869750977

Token 462: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033169541507959366
    2. '   ' → logprob: -4.033169746398926
    3. ',' → logprob: -5.033169746398926
    4. ' if' → logprob: -6.408169746398926
    5. '[' → logprob: -6.533169746398926
    6. '[i' → logprob: -6.783169746398926
    7. ' and' → logprob: -7.158169746398926
    8. '           ' → logprob: -7.408169746398926
    9. ' for' → logprob: -7.658169746398926
    10. ' =' → logprob: -7.783169746398926

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03400341793894768
    2. '   ' → logprob: -3.534003496170044
    3. ' if' → logprob: -5.659003257751465
    4. '           ' → logprob: -8.659003257751465
    5. 'if' → logprob: -8.784003257751465
    6. '        
' → logprob: -9.284003257751465
    7. '    ' → logprob: -10.159003257751465
    8. ',' → logprob: -10.284003257751465
    9. '	   ' → logprob: -10.534003257751465
    10. ':' → logprob: -10.659003257751465

Token 464: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.402505487203598
    2. '       ' → logprob: -1.4025055170059204
    3. ' if' → logprob: -2.652505397796631
    4. '   ' → logprob: -4.277505397796631
    5. 'value' → logprob: -7.402505397796631
    6. 'val' → logprob: -8.652505874633789
    7. 'prev' → logprob: -9.527505874633789
    8. ' ' → logprob: -10.027505874633789
    9. '	if' → logprob: -10.902505874633789
    10. ' value' → logprob: -11.027505874633789

Token 465: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0025829162914305925
    2. 'C' → logprob: -6.252583026885986
    3. ' prev' → logprob: -7.377583026885986
    4. '0' → logprob: -11.502582550048828
    5. ' C' → logprob: -11.752582550048828
    6. '   ' → logprob: -12.002582550048828
    7. 'r' → logprob: -13.752582550048828
    8. ' ' → logprob: -13.752582550048828
    9. '(prev' → logprob: -13.877582550048828
    10. '	prev' → logprob: -14.502582550048828

Token 466: '[C' (ID: 107876)
  Prédit: '[C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -7.386147626675665e-05
    2. '[' → logprob: -10.625073432922363
    3. '[c' → logprob: -11.250073432922363
    4. ' [' → logprob: -11.625073432922363
    5. 'C' → logprob: -11.625073432922363
    6. '][' → logprob: -12.000073432922363
    7. ' C' → logprob: -13.125073432922363
    8. ']' → logprob: -13.250073432922363
    9. '[
' → logprob: -13.250073432922363
    10. '[i' → logprob: -13.250073432922363

Token 467: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02080298773944378
    2. '[C' → logprob: -3.8958029747009277
    3. '[c' → logprob: -9.770803451538086
    4. '[' → logprob: -9.895803451538086
    5. ' [' → logprob: -10.145803451538086
    6. '][' → logprob: -10.395803451538086
    7. '[I' → logprob: -10.395803451538086
    8. ']' → logprob: -10.395803451538086
    9. '[
' → logprob: -11.895803451538086
    10. 'i' → logprob: -12.520803451538086

Token 468: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.17627838253974915
    2. '[i' → logprob: -2.1762783527374268
    3. ']' → logprob: -3.0512783527374268
    4. ' ]]' → logprob: -8.301278114318848
    5. '[' → logprob: -8.801278114318848
    6. '']]' → logprob: -9.301278114318848
    7. '])' → logprob: -9.926278114318848
    8. ')]' → logprob: -10.301278114318848
    9. ' ]' → logprob: -10.551278114318848
    10. ']!=' → logprob: -10.551278114318848

Token 469: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.004192606080323458
    2. '!=-' → logprob: -6.12919282913208
    3. ' !=' → logprob: -6.25419282913208
    4. ']!=' → logprob: -10.254192352294922
    5. '>=' → logprob: -11.004192352294922
    6. '()!=' → logprob: -11.504192352294922
    7. ')!=' → logprob: -11.629192352294922
    8. '[i' → logprob: -12.254192352294922
    9. '   ' → logprob: -13.379192352294922
    10. '>' → logprob: -13.629192352294922

Token 470: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012692819582298398
    2. 'i' → logprob: -7.376269340515137
    3. ' -' → logprob: -7.376269340515137
    4. '-i' → logprob: -11.751269340515137
    5. ' i' → logprob: -12.751269340515137
    6. '   ' → logprob: -12.751269340515137
    7. '(i' → logprob: -13.251269340515137
    8. ' ' → logprob: -14.376269340515137
    9. '  ' → logprob: -15.751269340515137
    10. '    ' → logprob: -16.50126838684082

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. 'i' → logprob: -12.125009536743164
    3. ' ' → logprob: -12.750009536743164
    4. '2' → logprob: -14.625009536743164
    5. '(i' → logprob: -15.875009536743164
    6. '-' → logprob: -16.000009536743164
    7. '   ' → logprob: -16.250009536743164
    8. '0' → logprob: -16.375009536743164
    9. ' i' → logprob: -16.437509536743164
    10. ',' → logprob: -16.562509536743164

Token 472: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07890168577432632
    2. 'and' → logprob: -2.578901767730713
    3. ' ' → logprob: -11.828901290893555
    4. '   ' → logprob: -13.953901290893555
    5. '	and' → logprob: -14.203901290893555
    6. ' и' → logprob: -14.703901290893555
    7. '    ' → logprob: -14.828901290893555
    8. '       ' → logprob: -14.828901290893555
    9. ')' → logprob: -14.828901290893555
    10. '        ' → logprob: -14.953901290893555

Token 473: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.42142802476882935
    2. 'i' → logprob: -1.5464279651641846
    3. ' prev' → logprob: -2.7964279651641846
    4. 'C' → logprob: -3.5464279651641846
    5. ' i' → logprob: -3.5464279651641846
    6. '(i' → logprob: -5.796428203582764
    7. ' C' → logprob: -5.796428203582764
    8. ' (' → logprob: -6.046428203582764
    9. '   ' → logprob: -6.796428203582764
    10. '(prev' → logprob: -6.796428203582764

Token 474: '[C' (ID: 107876)
  Prédit: '[C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.00010342398309148848
    2. '[' → logprob: -10.250102996826172
    3. ' [' → logprob: -10.375102996826172
    4. '][' → logprob: -11.875102996826172
    5. '(C' → logprob: -11.875102996826172
    6. '[c' → logprob: -12.000102996826172
    7. '```' → logprob: -12.125102996826172
    8. ']' → logprob: -12.875102996826172
    9. '   ' → logprob: -13.375102996826172
    10. '	C' → logprob: -13.750102996826172

Token 475: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010385256027802825
    2. '[' → logprob: -8.001038551330566
    3. '[C' → logprob: -8.126038551330566
    4. 'i' → logprob: -8.626038551330566
    5. '[I' → logprob: -9.001038551330566
    6. ']' → logprob: -10.376038551330566
    7. ' [' → logprob: -10.626038551330566
    8. '[
' → logprob: -10.876038551330566
    9. '][' → logprob: -11.251038551330566
    10. '   ' → logprob: -12.626038551330566

Token 476: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001291904947720468
    2. ']!=' → logprob: -6.876291751861572
    3. ']]' → logprob: -9.12629222869873
    4. ']+' → logprob: -9.37629222869873
    5. ' ]' → logprob: -10.50129222869873
    6. '[i' → logprob: -10.87629222869873
    7. '']' → logprob: -12.00129222869873
    8. '"]' → logprob: -12.87629222869873
    9. '()]' → logprob: -13.12629222869873
    10. '`]' → logprob: -13.37629222869873

Token 477: ' +' (ID: 659)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.14014729857444763
    2. ' !=' → logprob: -2.1401472091674805
    3. '<' → logprob: -4.3901472091674805
    4. '+' → logprob: -8.39014720916748
    5. ' <' → logprob: -8.64014720916748
    6. ')!=' → logprob: -9.14014720916748
    7. ']!=' → logprob: -9.51514720916748
    8. '()!=' → logprob: -10.39014720916748
    9. '<i' → logprob: -10.51514720916748
    10. ')' → logprob: -10.76514720916748

Token 478: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.794061770662665e-05
    2. ' ' → logprob: -9.25009822845459
    3. '!=' → logprob: -13.62509822845459
    4. ' !=' → logprob: -15.50009822845459
    5. '>' → logprob: -16.625097274780273
    6. '+' → logprob: -16.750097274780273
    7. '```' → logprob: -16.875097274780273
    8. '۱' → logprob: -17.625097274780273
    9. 'import' → logprob: -17.750097274780273
    10. '0' → logprob: -17.750097274780273

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '!=' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '<|end|>' → logprob: -16.000001907348633
    5. '```' → logprob: -16.125001907348633
    6. '0' → logprob: -17.062501907348633
    7. '!' → logprob: -17.125001907348633
    8. '>' → logprob: -17.187501907348633
    9. '
' → logprob: -17.250001907348633
    10. 'import' → logprob: -17.375001907348633

Token 480: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7804080843925476
    2. '!=' → logprob: -1.2804081439971924
    3. ' !=' → logprob: -1.4054081439971924
    4. ' <' → logprob: -4.030407905578613
    5. '	' → logprob: -9.030407905578613
    6. ' ' → logprob: -9.030407905578613
    7. ')' → logprob: -9.405407905578613
    8. '==' → logprob: -9.655407905578613
    9. '<int' → logprob: -9.655407905578613
    10. ')!=' → logprob: -9.905407905578613

Token 481: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0040799472481012344
    2. ' i' → logprob: -5.504079818725586
    3. '   ' → logprob: -14.004079818725586
    4. '	i' → logprob: -14.379079818725586
    5. '[i' → logprob: -16.254079818725586
    6. ')i' → logprob: -17.129079818725586
    7. ' ' → logprob: -17.379079818725586
    8. '(i' → logprob: -17.754079818725586
    9. '{i' → logprob: -17.754079818725586
    10. ')' → logprob: -17.879079818725586

Token 482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03838111832737923
    2. ':
' → logprob: -3.2883810997009277
    3. '       ' → logprob: -8.413381576538086
    4. '):' → logprob: -10.288381576538086
    5. '):
' → logprob: -10.538381576538086
    6. '           ' → logprob: -10.913381576538086
    7. ' :' → logprob: -11.163381576538086
    8. '   ' → logprob: -11.663381576538086
    9. ' and' → logprob: -12.038381576538086
    10. ':
' → logprob: -13.038381576538086

Token 483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16776999831199646
    2. '       ' → logprob: -1.9177700281143188
    3. ':' → logprob: -5.292769908905029
    4. ':
' → logprob: -7.042769908905029
    5. 'r' → logprob: -7.542769908905029
    6. ' r' → logprob: -8.542770385742188
    7. '   ' → logprob: -8.542770385742188
    8. ',' → logprob: -8.667770385742188
    9. '):
' → logprob: -9.167770385742188
    10. ' :' → logprob: -9.167770385742188

Token 484: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.004824907053261995
    2. ' r' → logprob: -5.754825115203857
    3. '               ' → logprob: -6.754825115203857
    4. '           ' → logprob: -7.754825115203857
    5. '   ' → logprob: -10.1298246383667
    6. ' ' → logprob: -12.6298246383667
    7. '                   ' → logprob: -13.6298246383667
    8. '              ' → logprob: -13.6298246383667
    9. '       ' → logprob: -13.7548246383667
    10. '             ' → logprob: -13.8798246383667

Token 485: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018792471382766962
    2. '[r' → logprob: -9.000187873840332
    3. '[i' → logprob: -10.750187873840332
    4. ' [' → logprob: -11.250187873840332
    5. '[C' → logprob: -11.375187873840332
    6. 'prev' → logprob: -12.000187873840332
    7. '           ' → logprob: -12.875187873840332
    8. '[pos' → logprob: -13.125187873840332
    9. '   ' → logprob: -13.375187873840332
    10. '       ' → logprob: -13.875187873840332

Token 486: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.00014180023572407663
    2. ' prev' → logprob: -9.000142097473145
    3. 'i' → logprob: -11.625142097473145
    4. '   ' → logprob: -12.875142097473145
    5. 'r' → logprob: -13.000142097473145
    6. '	prev' → logprob: -13.750142097473145
    7. 'pre' → logprob: -14.000142097473145
    8. 'pos' → logprob: -14.625142097473145
    9. '           ' → logprob: -14.750142097473145
    10. '    ' → logprob: -15.375142097473145

Token 487: '[C' (ID: 107876)
  Prédit: '[C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.00021712594025302678
    2. '[' → logprob: -8.87521743774414
    3. 'C' → logprob: -9.87521743774414
    4. '[c' → logprob: -11.12521743774414
    5. '][' → logprob: -12.00021743774414
    6. '[
' → logprob: -13.37521743774414
    7. ']' → logprob: -13.75021743774414
    8. '(C' → logprob: -14.37521743774414
    9. '```' → logprob: -15.00021743774414
    10. ' [' → logprob: -15.00021743774414

Token 488: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.111979357432574e-05
    2. '[C' → logprob: -10.12507152557373
    3. '[' → logprob: -11.12507152557373
    4. 'i' → logprob: -11.25007152557373
    5. '[I' → logprob: -13.12507152557373
    6. ']' → logprob: -15.00007152557373
    7. '(i' → logprob: -15.75007152557373
    8. ' [' → logprob: -16.000070571899414
    9. '[int' → logprob: -16.125070571899414
    10. '[c' → logprob: -16.250070571899414

Token 489: ']]]' (ID: 198030)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0008430993184447289
    2. '[i' → logprob: -7.875843048095703
    3. ']' → logprob: -8.250843048095703
    4. ']]=' → logprob: -9.375843048095703
    5. ']]]' → logprob: -10.125843048095703
    6. ']+' → logprob: -10.375843048095703
    7. '[' → logprob: -11.625843048095703
    8. '[C' → logprob: -11.625843048095703
    9. ' ]]' → logprob: -12.000843048095703
    10. ']][' → logprob: -12.750843048095703

Token 490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048592593520879745
    2. '=' → logprob: -3.0485925674438477
    3. ']' → logprob: -12.798592567443848
    4. ']=' → logprob: -13.548592567443848
    5. ')' → logprob: -14.923592567443848
    6. ' ' → logprob: -15.548592567443848
    7. '=i' → logprob: -15.798592567443848
    8. ')=' → logprob: -15.923592567443848
    9. '[' → logprob: -16.048593521118164
    10. ',' → logprob: -16.423593521118164

Token 491: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004309076175559312
    2. ' i' → logprob: -7.750431060791016
    3. '	i' → logprob: -15.625431060791016
    4. '   ' → logprob: -16.625431060791016
    5. '[i' → logprob: -18.250431060791016
    6. ')i' → logprob: -19.125431060791016
    7. '*i' → logprob: -19.875431060791016
    8. '
' → logprob: -19.875431060791016
    9. '_i' → logprob: -19.875431060791016
    10. '$i' → logprob: -20.500431060791016

Token 492: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026439065113663673
    2. '
' → logprob: -6.127644062042236
    3. '        
' → logprob: -8.252643585205078
    4. '   ' → logprob: -9.127643585205078
    5. 'prev' → logprob: -9.877643585205078
    6. '<|end|>' → logprob: -11.627643585205078
    7. '  
' → logprob: -12.127643585205078
    8. '            
' → logprob: -12.502643585205078
    9. '    
' → logprob: -12.627643585205078
    10. '           ' → logprob: -13.377643585205078

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006725206621922553
    2. '   ' → logprob: -7.625672340393066
    3. 'prev' → logprob: -8.875672340393066
    4. ' prev' → logprob: -10.375672340393066
    5. '```' → logprob: -12.125672340393066
    6. '           ' → logprob: -12.375672340393066
    7. ' ' → logprob: -13.625672340393066
    8. '        
' → logprob: -13.750672340393066
    9. '	prev' → logprob: -14.875672340393066
    10. '
' → logprob: -15.125672340393066

Token 494: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12511038780212402
    2. 'prev' → logprob: -2.500110387802124
    3. '   ' → logprob: -3.375110387802124
    4. ' prev' → logprob: -6.750110626220703
    5. '           ' → logprob: -10.375110626220703
    6. '	prev' → logprob: -10.500110626220703
    7. ' ' → logprob: -10.625110626220703
    8. '  ' → logprob: -11.125110626220703
    9. '      ' → logprob: -11.500110626220703
    10. '     ' → logprob: -11.625110626220703

Token 495: ' On' (ID: 2160)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.004372917115688324
    2. ' prev' → logprob: -5.754373073577881
    3. '   ' → logprob: -7.379373073577881
    4. '       ' → logprob: -7.504373073577881
    5. '	prev' → logprob: -11.504372596740723
    6. '  ' → logprob: -12.754372596740723
    7. ' ' → logprob: -13.504372596740723
    8. '.prev' → logprob: -13.629372596740723
    9. '(prev' → logprob: -14.254372596740723
    10. '    ' → logprob: -14.254372596740723

Token 496: ' met' (ID: 1421)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.018511254340410233
    2. ' prev' → logprob: -4.0185112953186035
    3. '   ' → logprob: -8.268510818481445
    4. '       ' → logprob: -9.768510818481445
    5. '	prev' → logprob: -11.393510818481445
    6. '_prev' → logprob: -11.893510818481445
    7. '.prev' → logprob: -12.143510818481445
    8. '    ' → logprob: -12.268510818481445
    9. '[' → logprob: -12.393510818481445
    10. '           ' → logprob: -12.643510818481445

Token 497: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.35892724990844727
    2. 'à' → logprob: -1.3589272499084473
    3. 'prev' → logprob: -3.3589272499084473
    4. 'À' → logprob: -5.483927249908447
    5. '   ' → logprob: -5.608927249908447
    6. 'a' → logprob: -7.108927249908447
    7. '```' → logprob: -8.358926773071289
    8. ' prev' → logprob: -8.483926773071289
    9. '    ' → logprob: -8.608926773071289
    10. 'aj' → logprob: -8.733926773071289

Token 498: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.01718803495168686
    2. ' jour' → logprob: -4.39218807220459
    3. 'prev' → logprob: -5.39218807220459
    4. 'day' → logprob: -9.89218807220459
    5. 'j' → logprob: -10.76718807220459
    6. 'jours' → logprob: -11.26718807220459
    7. '```' → logprob: -11.26718807220459
    8. 'Jour' → logprob: -11.76718807220459
    9. 'jou' → logprob: -12.39218807220459
    10. 'journ' → logprob: -13.39218807220459

Token 499: ' la' (ID: 557)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.20154578983783722
    2. ' prev' → logprob: -1.7015458345413208
    3. '(prev' → logprob: -10.201545715332031
    4. '_prev' → logprob: -10.451545715332031
    5. '	prev' → logprob: -10.826545715332031
    6. '   ' → logprob: -11.201545715332031
    7. '.prev' → logprob: -11.326545715332031
    8. ' la' → logprob: -11.826545715332031
    9. ' ' → logprob: -12.076545715332031
    10. '    ' → logprob: -13.701545715332031

Token 500: ' dernière' (ID: 39497)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.00318163656629622
    2. ' prev' → logprob: -5.753181457519531
    3. '	prev' → logprob: -13.128181457519531
    4. '   ' → logprob: -14.753181457519531
    5. ' ' → logprob: -15.003181457519531
    6. '.prev' → logprob: -15.253181457519531
    7. 'pre' → logprob: -15.503181457519531
    8. '_prev' → logprob: -15.628181457519531
    9. '(prev' → logprob: -15.753181457519531
    10. '  ' → logprob: -16.12818145751953

Token 501: ' occurrence' (ID: 55807)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.2495950162410736
    2. 'position' → logprob: -1.999595046043396
    3. 'occur' → logprob: -3.2495949268341064
    4. ' occurrence' → logprob: -3.6245949268341064
    5. 'pos' → logprob: -4.6245951652526855
    6. 'prev' → logprob: -4.9995951652526855
    7. ' position' → logprob: -5.9995951652526855
    8. ' occur' → logprob: -8.499594688415527
    9. 'val' → logprob: -8.499594688415527
    10. '_occ' → logprob: -9.374594688415527

Token 502: ' de' (ID: 334)
  Prédit: '[C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.0004035017918795347
    2. ' de' → logprob: -8.12540340423584
    3. 'C' → logprob: -10.12540340423584
    4. '[' → logprob: -10.62540340423584
    5. 'de' → logprob: -11.00040340423584
    6. '   ' → logprob: -11.75040340423584
    7. ' C' → logprob: -12.00040340423584
    8. ' [' → logprob: -12.37540340423584
    9. 'prev' → logprob: -12.75040340423584
    10. '       ' → logprob: -13.50040340423584

Token 503: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.002496706321835518
    2. ' C' → logprob: -6.002496719360352
    3. '[C' → logprob: -10.877496719360352
    4. ' ' → logprob: -14.877496719360352
    5. '<|end|>' → logprob: -14.877496719360352
    6. '`' → logprob: -15.627496719360352
    7. '```' → logprob: -15.627496719360352
    8. '>C' → logprob: -15.752496719360352
    9. '[' → logprob: -15.877496719360352
    10. '	C' → logprob: -15.877496719360352

Token 504: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012684577144682407
    2. '[C' → logprob: -4.387684345245361
    3. '[' → logprob: -9.51268482208252
    4. '[I' → logprob: -9.76268482208252
    5. ' [' → logprob: -10.63768482208252
    6. 'C' → logprob: -11.63768482208252
    7. 'i' → logprob: -12.88768482208252
    8. '```' → logprob: -13.26268482208252
    9. '   ' → logprob: -14.01268482208252
    10. ']' → logprob: -14.63768482208252

Token 505: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011651990003883839
    2. '[C' → logprob: -4.761651992797852
    3. '[i' → logprob: -6.136651992797852
    4. ']=' → logprob: -7.386651992797852
    5. ' ]' → logprob: -9.011651992797852
    6. '   ' → logprob: -9.761651992797852
    7. ')' → logprob: -10.761651992797852
    8. 'C' → logprob: -11.636651992797852
    9. '       ' → logprob: -11.761651992797852
    10. '][' → logprob: -12.011651992797852

Token 506: '       ' (ID: 309)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.7396435141563416
    2. 'prev' → logprob: -0.7396435141563416
    3. '   ' → logprob: -3.1146435737609863
    4. '       ' → logprob: -7.614643573760986
    5. '	prev' → logprob: -8.489643096923828
    6. ' =' → logprob: -8.989643096923828
    7. '(prev' → logprob: -9.989643096923828
    8. '.prev' → logprob: -10.114643096923828
    9. '```' → logprob: -10.114643096923828
    10. '[' → logprob: -10.614643096923828

Token 507: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.007882476784288883
    2. ' prev' → logprob: -4.882882595062256
    3. '   ' → logprob: -8.257882118225098
    4. '       ' → logprob: -11.382882118225098
    5. '	prev' → logprob: -12.507882118225098
    6. '```' → logprob: -14.507882118225098
    7. '.prev' → logprob: -15.007882118225098
    8. '(prev' → logprob: -15.007882118225098
    9. '  ' → logprob: -15.007882118225098
    10. ' ' → logprob: -15.132882118225098

Token 508: '[C' (ID: 107876)
  Prédit: '[C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.250001907348633
    3. '```' → logprob: -14.875001907348633
    4. ' [' → logprob: -15.375001907348633
    5. 'C' → logprob: -15.500001907348633
    6. '[c' → logprob: -15.750001907348633
    7. '=C' → logprob: -16.875001907348633
    8. '[
' → logprob: -16.875001907348633
    9. '\[' → logprob: -16.875001907348633
    10. '[i' → logprob: -18.000001907348633

Token 509: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.703443770878948e-06
    2. '[I' → logprob: -12.500007629394531
    3. '[' → logprob: -13.250007629394531
    4. '[C' → logprob: -14.875007629394531
    5. ']' → logprob: -15.000007629394531
    6. '][' → logprob: -15.000007629394531
    7. 'i' → logprob: -15.125007629394531
    8. '```' → logprob: -15.500007629394531
    9. ' [' → logprob: -15.625007629394531
    10. '[int' → logprob: -16.00000762939453

Token 510: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.453737710718997e-05
    2. ']=' → logprob: -10.625044822692871
    3. '[i' → logprob: -11.500044822692871
    4. ' ]' → logprob: -12.000044822692871
    5. ']]' → logprob: -12.625044822692871
    6. '   ' → logprob: -15.000044822692871
    7. '`]' → logprob: -16.125043869018555
    8. 'i' → logprob: -16.375043869018555
    9. '']' → logprob: -16.875043869018555
    10. '"]' → logprob: -17.500043869018555

Token 511: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026964036747813225
    2. ' =' → logprob: -3.651963949203491
    3. ']' → logprob: -7.65196418762207
    4. '[i' → logprob: -9.15196418762207
    5. ']=' → logprob: -9.90196418762207
    6. '=i' → logprob: -11.02696418762207
    7. '[' → logprob: -11.15196418762207
    8. ')' → logprob: -14.27696418762207
    9. '   ' → logprob: -14.90196418762207
    10. '=C' → logprob: -15.65196418762207

Token 512: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00861456897109747
    2. ' i' → logprob: -4.758614540100098
    3. '   ' → logprob: -18.508615493774414
    4. '	i' → logprob: -18.633615493774414
    5. '[i' → logprob: -19.258615493774414
    6. ' ' → logprob: -20.008615493774414
    7. '```' → logprob: -20.133615493774414
    8. '_i' → logprob: -21.008615493774414
    9. ')i' → logprob: -22.383615493774414
    10. '$i' → logprob: -22.883615493774414

Token 513: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 514: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06518170982599258
    2. '<|end|>' → logprob: -2.9401817321777344
    3. 'for' → logprob: -5.065181732177734
    4. '
' → logprob: -6.565181732177734
    5. ')' → logprob: -6.940181732177734
    6. '<|end|>' → logprob: -7.940181732177734
    7. '```' → logprob: -8.065181732177734
    8. ' for' → logprob: -8.565181732177734
    9. ' 
' → logprob: -8.690181732177734
    10. ' def' → logprob: -9.190181732177734

Token 515: ' compute' (ID: 23864)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6907896995544434
    2. 'count' → logprob: -1.3157896995544434
    3. ' calculate' → logprob: -2.1907896995544434
    4. 'calculate' → logprob: -3.0657896995544434
    5. ' compute' → logprob: -3.3157896995544434
    6. 'compute' → logprob: -4.440789699554443
    7. ' solve' → logprob: -5.065789699554443
    8. ' dynamic' → logprob: -5.440789699554443
    9. 'solve' → logprob: -5.815789699554443
    10. 'def' → logprob: -6.440789699554443

Token 516: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.03898850455880165
    2. '_' → logprob: -3.7889885902404785
    3. 'dp' → logprob: -4.4139885902404785
    4. '_paths' → logprob: -6.0389885902404785
    5. '_next' → logprob: -7.9139885902404785
    6. '_path' → logprob: -8.28898811340332
    7. '_max' → logprob: -9.03898811340332
    8. '(dp' → logprob: -9.78898811340332
    9. ' dp' → logprob: -10.03898811340332
    10. '_result' → logprob: -10.16398811340332

Token 517: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.005358144640922546
    2. '(' → logprob: -5.2553582191467285
    3. '_(' → logprob: -9.63035774230957
    4. ' (' → logprob: -11.13035774230957
    5. '_' → logprob: -11.50535774230957
    6. 'def' → logprob: -11.63035774230957
    7. '```' → logprob: -12.88035774230957
    8. '(n' → logprob: -13.13035774230957
    9. '_next' → logprob: -13.13035774230957
    10. '_indices' → logprob: -13.50535774230957

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ',C' → logprob: -12.500006675720215
    3. ' ,' → logprob: -13.625006675720215
    4. '   ' → logprob: -14.250006675720215
    5. ',
' → logprob: -14.625006675720215
    6. ')' → logprob: -15.625006675720215
    7. '‌,' → logprob: -16.1250057220459
    8. ',

' → logprob: -17.1250057220459
    9. '،' → logprob: -17.1250057220459
    10. 'C' → logprob: -17.2500057220459

Token 519: ' r' (ID: 428)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.038057100027799606
    2. ' C' → logprob: -3.2880570888519287
    3. '   ' → logprob: -12.038057327270508
    4. 'r' → logprob: -12.538057327270508
    5. ')' → logprob: -13.413057327270508
    6. ',' → logprob: -13.538057327270508
    7. ' ' → logprob: -13.663057327270508
    8. 'N' → logprob: -14.163057327270508
    9. 'max' → logprob: -15.288057327270508
    10. 'def' → logprob: -15.288057327270508

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ',C' → logprob: -13.50000286102295
    3. ' ,' → logprob: -14.12500286102295
    4. '   ' → logprob: -14.87500286102295
    5. ',
' → logprob: -16.125001907348633
    6. 'C' → logprob: -16.625001907348633
    7. '):' → logprob: -17.625001907348633
    8. ')' → logprob: -18.250001907348633
    9. 'def' → logprob: -18.250001907348633
    10. '):
' → logprob: -18.375001907348633

Token 521: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006314247148111463
    2. 'C' → logprob: -7.750631332397461
    3. ' dp' → logprob: -9.000631332397461
    4. ')' → logprob: -9.625631332397461
    5. '   ' → logprob: -12.875631332397461
    6. 'r' → logprob: -12.875631332397461
    7. ' C' → logprob: -13.125631332397461
    8. 'prev' → logprob: -13.875631332397461
    9. '):' → logprob: -13.875631332397461
    10. '	dp' → logprob: -14.625631332397461

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030527204275131226
    2. '):' → logprob: -4.030527114868164
    3. '):
' → logprob: -4.405527114868164
    4. '   ' → logprob: -9.780527114868164
    5. ')' → logprob: -11.405527114868164
    6. ',C' → logprob: -11.530527114868164
    7. '):
' → logprob: -12.405527114868164
    8. ',
' → logprob: -12.530527114868164
    9. '):

' → logprob: -13.030527114868164
    10. ' ,' → logprob: -13.530527114868164

Token 523: ' MOD' (ID: 32868)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.40334105491638184
    2. ')' → logprob: -1.1533410549163818
    3. ' C' → logprob: -4.778341293334961
    4. 'r' → logprob: -5.528341293334961
    5. '   ' → logprob: -6.028341293334961
    6. 'max' → logprob: -7.903341293334961
    7. '):
' → logprob: -8.278341293334961
    8. 'N' → logprob: -8.528341293334961
    9. ' )' → logprob: -8.903341293334961
    10. '<|end|>' → logprob: -9.028341293334961

Token 524: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006766056176275015
    2. '):
' → logprob: -5.256765842437744
    3. ',' → logprob: -6.506765842437744
    4. '):
' → logprob: -10.631766319274902
    5. ')' → logprob: -12.256766319274902
    6. ' ):' → logprob: -13.006766319274902
    7. ':' → logprob: -13.131766319274902
    8. '   ' → logprob: -13.131766319274902
    9. '=' → logprob: -13.381766319274902
    10. '):

' → logprob: -14.506766319274902

Token 525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025188231375068426
    2. 'for' → logprob: -6.377518653869629
    3. ' for' → logprob: -7.502518653869629
    4. '```' → logprob: -9.002518653869629
    5. ':' → logprob: -9.752518653869629
    6. '    
' → logprob: -10.752518653869629
    7. '
' → logprob: -10.877518653869629
    8. '	for' → logprob: -11.252518653869629
    9. '   ' → logprob: -12.002518653869629
    10. ':
' → logprob: -12.002518653869629

Token 526: ' """
' (ID: 7037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25647056102752686
    2. ' for' → logprob: -1.5064705610275269
    3. '   ' → logprob: -5.506470680236816
    4. '```' → logprob: -7.756470680236816
    5. '	for' → logprob: -10.506470680236816
    6. '
' → logprob: -11.506470680236816
    7. 'def' → logprob: -12.756470680236816
    8. '``' → logprob: -13.756470680236816
    9. 'i' → logprob: -14.506470680236816
    10. '    
' → logprob: -15.381470680236816

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28908589482307434
    2. ' for' → logprob: -1.414085865020752
    3. 'for' → logprob: -4.914085865020752
    4. '
' → logprob: -8.66408634185791
    5. '    ' → logprob: -8.78908634185791
    6. '	for' → logprob: -9.66408634185791
    7. '    
' → logprob: -10.41408634185791
    8. ' 
' → logprob: -10.78908634185791
    9. '```' → logprob: -10.78908634185791
    10. 'def' → logprob: -10.91408634185791

Token 528: ' Cal' (ID: 4453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00655988696962595
    2. 'def' → logprob: -5.5065598487854
    3. '   ' → logprob: -6.2565598487854
    4. ' for' → logprob: -7.5065598487854
    5. '
' → logprob: -11.506560325622559
    6. '```' → logprob: -14.381560325622559
    7. '	for' → logprob: -15.256560325622559
    8. ' def' → logprob: -16.131559371948242
    9. '    
' → logprob: -17.006559371948242
    10. '``' → logprob: -17.881559371948242

Token 529: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.39289161562919617
    2. 'cul' → logprob: -1.1428916454315186
    3. 'culate' → logprob: -5.7678914070129395
    4. 'c' → logprob: -5.8928914070129395
    5. 'cula' → logprob: -9.767891883850098
    6. 'cu' → logprob: -10.767891883850098
    7. 'cules' → logprob: -11.142891883850098
    8. 'cular' → logprob: -11.392891883850098
    9. 'cut' → logprob: -13.267891883850098
    10. 'culo' → logprob: -13.517891883850098

Token 530: ' dyn' (ID: 44535)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4652164578437805
    2. '(N' → logprob: -2.0902163982391357
    3. 'for' → logprob: -2.4652163982391357
    4. 'def' → logprob: -2.5902163982391357
    5. '   ' → logprob: -3.3402163982391357
    6. ')' → logprob: -4.340216636657715
    7. '<|end|>' → logprob: -4.840216636657715
    8. ' the' → logprob: -5.090216636657715
    9. 'the' → logprob: -5.340216636657715
    10. '(' → logprob: -5.715216636657715

Token 531: 'ami' (ID: 4938)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.639091968536377
    2. 'c' → logprob: -1.514091968536377
    3. 'culate' → logprob: -1.764091968536377
    4. 'cule' → logprob: -2.889091968536377
    5. '   ' → logprob: -5.139091968536377
    6. 'culaire' → logprob: -5.764091968536377
    7. '_' → logprob: -5.889091968536377
    8. 'q' → logprob: -5.889091968536377
    9. 'u' → logprob: -6.264091968536377
    10. 'ique' → logprob: -6.389091968536377

Token 532: 'quement' (ID: 42437)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4705919325351715
    2. 'quement' → logprob: -1.4705919027328491
    3. 'mi' → logprob: -3.3455920219421387
    4. '_' → logprob: -4.095592021942139
    5. 'que' → logprob: -4.095592021942139
    6. 'mic' → logprob: -4.095592021942139
    7. 'miques' → logprob: -4.220592021942139
    8. 'mik' → logprob: -4.845592021942139
    9. '```' → logprob: -5.470592021942139
    10. '-' → logprob: -6.095592021942139

Token 533: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8230811953544617
    2. '_' → logprob: -1.4480812549591064
    3. ' le' → logprob: -2.4480812549591064
    4. ' ' → logprob: -3.3230812549591064
    5. ' la' → logprob: -3.3230812549591064
    6. ' les' → logprob: -3.4480812549591064
    7. '   ' → logprob: -3.5730812549591064
    8. ',' → logprob: -4.073081016540527
    9. ')' → logprob: -4.198081016540527
    10. ' des' → logprob: -4.448081016540527

Token 534: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5778370499610901
    2. '   ' → logprob: -1.8278369903564453
    3. 'for' → logprob: -1.8278369903564453
    4. ' i' → logprob: -2.7028369903564453
    5. ')' → logprob: -3.8278369903564453
    6. 'i' → logprob: -3.9528369903564453
    7. '```' → logprob: -5.952836990356445
    8. ' N' → logprob: -6.452836990356445
    9. ' range' → logprob: -7.202836990356445
    10. 'N' → logprob: -7.202836990356445

Token 535: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12197942286729813
    2. ' i' → logprob: -2.2469794750213623
    3. ' chaque' → logprob: -4.871979236602783
    4. 'each' → logprob: -7.246979236602783
    5. ' each' → logprob: -8.371979713439941
    6. '   ' → logprob: -8.496979713439941
    7. ' ' → logprob: -9.246979713439941
    8. ')' → logprob: -9.246979713439941
    9. '```' → logprob: -10.746979713439941
    10. 'l' → logprob: -11.621979713439941

Token 536: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16029895842075348
    2. 'i' → logprob: -1.9102989435195923
    3. ' position' → logprob: -10.160299301147461
    4. 'position' → logprob: -11.160299301147461
    5. ')' → logprob: -12.285299301147461
    6. ' index' → logprob: -12.410299301147461
    7. 'indice' → logprob: -13.160299301147461
    8. '_i' → logprob: -13.535299301147461
    9. '	i' → logprob: -13.535299301147461
    10. '_' → logprob: -13.535299301147461

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6346197128295898
    2. ' i' → logprob: -1.5096197128295898
    3. ' de' → logprob: -2.38461971282959
    4. '_' → logprob: -3.00961971282959
    5. ' ,' → logprob: -3.38461971282959
    6. ' _' → logprob: -4.13461971282959
    7. '   ' → logprob: -4.38461971282959
    8. '[i' → logprob: -4.38461971282959
    9. ' suivante' → logprob: -4.88461971282959
    10. ')' → logprob: -5.38461971282959

Token 538: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.119459629058838
    2. '   ' → logprob: -1.494459629058838
    3. ' for' → logprob: -1.619459629058838
    4. 'i' → logprob: -2.119459629058838
    5. 'for' → logprob: -2.744459629058838
    6. ' la' → logprob: -3.494459629058838
    7. ')' → logprob: -3.744459629058838
    8. ' le' → logprob: -6.119459629058838
    9. 'r' → logprob: -6.744459629058838
    10. ' pour' → logprob: -7.494459629058838

Token 539: ' nombre' (ID: 9733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8508763909339905
    2. 'i' → logprob: -1.3508763313293457
    3. 'next' → logprob: -1.7258763313293457
    4. ' next' → logprob: -3.1008763313293457
    5. '=' → logprob: -3.2258763313293457
    6. ' for' → logprob: -4.350876331329346
    7. 's' → logprob: -4.475876331329346
    8. ' i' → logprob: -4.725876331329346
    9. 'indice' → logprob: -5.350876331329346
    10. 'token' → logprob: -5.475876331329346

Token 540: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5941108465194702
    2. '   ' → logprob: -1.8441108465194702
    3. ' des' → logprob: -3.0941109657287598
    4. '_' → logprob: -3.2191109657287598
    5. ' d' → logprob: -3.3441109657287598
    6. ' ' → logprob: -3.4691109657287598
    7. '  ' → logprob: -3.8441109657287598
    8. ')' → logprob: -4.21911096572876
    9. '    ' → logprob: -4.34411096572876
    10. '_de' → logprob: -4.46911096572876

Token 541: ' façons' (ID: 165958)
  Prédit: ' façons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.08923377096652985
    2. '_' → logprob: -3.089233875274658
    3. ' ways' → logprob: -4.089233875274658
    4. ' fa' → logprob: -5.214233875274658
    5. ' man' → logprob: -5.214233875274658
    6. ' ' → logprob: -5.714233875274658
    7. 'fa' → logprob: -5.839233875274658
    8. '   ' → logprob: -6.464233875274658
    9. '  ' → logprob: -6.714233875274658
    10. '    ' → logprob: -7.214233875274658

Token 542: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2875428795814514
    2. '<|end|>' → logprob: -2.1625428199768066
    3. ' de' → logprob: -2.4125428199768066
    4. 'd' → logprob: -3.5375428199768066
    5. 'de' → logprob: -5.912542819976807
    6. ')' → logprob: -5.912542819976807
    7. '   ' → logprob: -6.037542819976807
    8. ' ' → logprob: -6.162542819976807
    9. 'def' → logprob: -6.162542819976807
    10. '_d' → logprob: -6.787542819976807

Token 543: ''y' (ID: 27913)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11885488033294678
    2. ''' → logprob: -2.4938549995422363
    3. '_arr' → logprob: -4.618854999542236
    4. ''arr' → logprob: -4.618854999542236
    5. 'arr' → logprob: -6.118854999542236
    6. ''acc' → logprob: -6.243854999542236
    7. ' _' → logprob: -6.868854999542236
    8. ' ' → logprob: -7.618854999542236
    9. ''arrive' → logprob: -7.743854999542236
    10. ''arrivée' → logprob: -7.993854999542236

Token 544: ' arriver' (ID: 78302)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.14014874398708344
    2. '_' → logprob: -2.890148639678955
    3. ' arriver' → logprob: -3.765148639678955
    4. 'être' → logprob: -4.515148639678955
    5. '   ' → logprob: -4.515148639678955
    6. 'atte' → logprob: -5.015148639678955
    7. ' ' → logprob: -5.265148639678955
    8. ' atteindre' → logprob: -5.265148639678955
    9. 'aller' → logprob: -5.515148639678955
    10. '_arr' → logprob: -6.390148639678955

Token 545: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09374282509088516
    2. ' de' → logprob: -3.593742847442627
    3. ',' → logprob: -4.093742847442627
    4. '.' → logprob: -4.593742847442627
    5. ' à' → logprob: -4.718742847442627
    6. ' en' → logprob: -4.843742847442627
    7. '```' → logprob: -5.718742847442627
    8. 'def' → logprob: -6.093742847442627
    9. ' via' → logprob: -6.093742847442627
    10. ' et' → logprob: -6.343742847442627

Token 546: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013928189873695374
    2. ' en' → logprob: -5.013928413391113
    3. ' et' → logprob: -6.513928413391113
    4. ' ' → logprob: -7.013928413391113
    5. '    ' → logprob: -7.513928413391113
    6. '.' → logprob: -7.513928413391113
    7. ' à' → logprob: -7.638928413391113
    8. '    
' → logprob: -7.763928413391113
    9. '       ' → logprob: -7.763928413391113
    10. ' 
' → logprob: -8.388928413391113

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016362780705094337
    2. ' en' → logprob: -4.76636266708374
    3. ' de' → logprob: -5.76636266708374
    4. ' à' → logprob: -6.51636266708374
    5. ' et' → logprob: -6.76636266708374
    6. '    ' → logprob: -8.391363143920898
    7. ' avec' → logprob: -8.391363143920898
    8. '.' → logprob: -8.516363143920898
    9. ' ' → logprob: -8.641363143920898
    10. '       ' → logprob: -8.766363143920898

Token 548: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02435554750263691
    2. ' en' → logprob: -4.524355411529541
    3. ' de' → logprob: -5.774355411529541
    4. ' et' → logprob: -5.899355411529541
    5. ' à' → logprob: -6.649355411529541
    6. '    ' → logprob: -6.899355411529541
    7. ' ' → logprob: -7.274355411529541
    8. '       ' → logprob: -7.274355411529541
    9. '.' → logprob: -7.399355411529541
    10. '  ' → logprob: -7.899355411529541

Token 549: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5468506217002869
    2. '   ' → logprob: -1.6718506813049316
    3. '```' → logprob: -2.7968506813049316
    4. ' r' → logprob: -3.4218506813049316
    5. 'for' → logprob: -3.4218506813049316
    6. ' la' → logprob: -3.5468506813049316
    7. ' for' → logprob: -4.421850681304932
    8. '    ' → logprob: -4.546850681304932
    9. ' ' → logprob: -5.171850681304932
    10. ' un' → logprob: -5.296850681304932

Token 550: ' contr' (ID: 6030)
  Prédit: ' possibilité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibilité' → logprob: -0.5695109963417053
    2. 'poss' → logprob: -1.3195109367370605
    3. 'r' → logprob: -2.6945109367370605
    4. 'for' → logprob: -4.3195109367370605
    5. ' suivante' → logprob: -4.6945109367370605
    6. 's' → logprob: -4.6945109367370605
    7. 'option' → logprob: -4.8195109367370605
    8. ' somme' → logprob: -5.1945109367370605
    9. ' option' → logprob: -5.3195109367370605
    10. ' poss' → logprob: -5.3195109367370605

Token 551: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.0003811025235336274
    2. 'a' → logprob: -8.000381469726562
    3. 'aint' → logprob: -10.625381469726562
    4. 'ain' → logprob: -12.000381469726562
    5. 'aine' → logprob: -12.750381469726562
    6. '#' → logprob: -13.250381469726562
    7. '```' → logprob: -13.375381469726562
    8. '
' → logprob: -13.625381469726562
    9. '1' → logprob: -13.625381469726562
    10. 'ôle' → logprob: -13.750381469726562

Token 552: ' que' (ID: 661)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0823131799697876
    2. ' de' → logprob: -1.0823131799697876
    3. ' que' → logprob: -1.2073131799697876
    4. 'd' → logprob: -4.332313060760498
    5. 'de' → logprob: -5.457313060760498
    6. ' that' → logprob: -6.207313060760498
    7. ' ' → logprob: -6.832313060760498
    8. 's' → logprob: -7.332313060760498
    9. ' suivante' → logprob: -7.957313060760498
    10. ' qu' → logprob: -8.082313537597656

Token 553: ' deux' (ID: 10301)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39099863171577454
    2. ' r' → logprob: -2.015998601913452
    3. ' for' → logprob: -3.015998601913452
    4. ' if' → logprob: -3.640998601913452
    5. ' on' → logprob: -3.765998601913452
    6. '   ' → logprob: -4.140998840332031
    7. ' l' → logprob: -4.765998840332031
    8. ' chaque' → logprob: -4.765998840332031
    9. ' le' → logprob: -5.140998840332031
    10. 'if' → logprob: -5.140998840332031

Token 554: ' mêmes' (ID: 71634)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47819751501083374
    2. ' positions' → logprob: -1.8531975746154785
    3. ' _' → logprob: -2.4781975746154785
    4. 'positions' → logprob: -2.9781975746154785
    5. ' indices' → logprob: -3.4781975746154785
    6. ' ' → logprob: -4.3531975746154785
    7. ' espaces' → logprob: -4.8531975746154785
    8. 'indices' → logprob: -4.9781975746154785
    9. '_positions' → logprob: -4.9781975746154785
    10. ' i' → logprob: -5.7281975746154785

Token 555: ' couleurs' (ID: 54001)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.2356454133987427
    2. 'positions' → logprob: -1.3606454133987427
    3. '_' → logprob: -1.9856454133987427
    4. ' tokens' → logprob: -2.360645294189453
    5. 'tokens' → logprob: -3.110645294189453
    6. ' indices' → logprob: -3.110645294189453
    7. 'indices' → logprob: -3.235645294189453
    8. ' valeurs' → logprob: -3.610645294189453
    9. 'val' → logprob: -4.485645294189453
    10. ' éléments' → logprob: -4.735645294189453

Token 556: ' non' (ID: 2893)
  Prédit: ' cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.6478164196014404
    2. ' distinct' → logprob: -2.3978164196014404
    3. '_' → logprob: -2.7728164196014404
    4. ' adj' → logprob: -3.0228164196014404
    5. ' ne' → logprob: -3.1478164196014404
    6. '[i' → logprob: -3.2728164196014404
    7. ' ' → logprob: -3.6478164196014404
    8. 'distinct' → logprob: -3.7728164196014404
    9. ')' → logprob: -4.1478166580200195
    10. '[' → logprob: -4.1478166580200195

Token 557: ' cons' (ID: 1473)
  Prédit: ' cons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.5033552050590515
    2. 'cons' → logprob: -1.1283552646636963
    3. 'adj' → logprob: -3.0033552646636963
    4. 'con' → logprob: -3.8783552646636963
    5. 'cont' → logprob: -7.253355026245117
    6. '   ' → logprob: -8.003355026245117
    7. ' adj' → logprob: -9.003355026245117
    8. 'success' → logprob: -9.253355026245117
    9. '```' → logprob: -9.253355026245117
    10. 'c' → logprob: -10.253355026245117

Token 558: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0010104191023856401
    2. 'éc' → logprob: -7.501010417938232
    3. 'é' → logprob: -7.751010417938232
    4. 'ecut' → logprob: -10.87601089477539
    5. '```' → logprob: -12.62601089477539
    6. 'ec' → logprob: -14.37601089477539
    7. 'e' → logprob: -14.37601089477539
    8. 'è' → logprob: -14.62601089477539
    9. '"' → logprob: -15.00101089477539
    10. '{' → logprob: -15.00101089477539

Token 559: 'ives' (ID: 2264)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03385131433606148
    2. 'utive' → logprob: -4.158851146697998
    3. 'ut' → logprob: -5.408851146697998
    4. 'écut' → logprob: -6.533851146697998
    5. 'e' → logprob: -6.783851146697998
    6. ' u' → logprob: -6.783851146697998
    7. 'ues' → logprob: -6.908851146697998
    8. 'uelles' → logprob: -7.033851146697998
    9. 's' → logprob: -7.158851146697998
    10. '```' → logprob: -7.158851146697998

Token 560: ' autor' (ID: 13432)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.914662778377533
    2. ' peuvent' → logprob: -1.5396628379821777
    3. ')' → logprob: -1.9146628379821777
    4. 's' → logprob: -3.0396628379821777
    5. '```' → logprob: -3.0396628379821777
    6. ' ' → logprob: -4.039662837982178
    7. ',' → logprob: -4.039662837982178
    8. ' n' → logprob: -4.289662837982178
    9. '_' → logprob: -4.414662837982178
    10. 'ne' → logprob: -4.914662837982178

Token 561: 'isent' (ID: 68781)
  Prédit: 'isées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isées' → logprob: -0.9802902936935425
    2. 'ites' → logprob: -1.7302902936935425
    3. 'è' → logprob: -2.605290412902832
    4. 'isent' → logprob: -2.855290412902832
    5. 'cent' → logprob: -2.980290412902832
    6. 'itent' → logprob: -3.230290412902832
    7. 'ées' → logprob: -3.855290412902832
    8. 'ent' → logprob: -3.980290412902832
    9. '```' → logprob: -4.105290412902832
    10. 'ité' → logprob: -4.105290412902832

Token 562: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0072624683380127
    2. ' un' → logprob: -1.3822624683380127
    3. ' d' → logprob: -2.3822624683380127
    4. ' de' → logprob: -2.3822624683380127
    5. ' une' → logprob: -2.8822624683380127
    6. ' a' → logprob: -3.6322624683380127
    7. ' à' → logprob: -3.7572624683380127
    8. 'd' → logprob: -4.382262229919434
    9. 's' → logprob: -4.382262229919434
    10. 'un' → logprob: -4.757262229919434

Token 563: ' transition' (ID: 14463)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14768452942371368
    2. ' sa' → logprob: -3.6476845741271973
    3. ' saut' → logprob: -3.6476845741271973
    4. '   ' → logprob: -4.272684574127197
    5. '+' → logprob: -4.397684574127197
    6. '_s' → logprob: -4.897684574127197
    7. ' ' → logprob: -5.272684574127197
    8. '
' → logprob: -5.897684574127197
    9. ')' → logprob: -5.897684574127197
    10. 'jump' → logprob: -6.022684574127197

Token 564: ' directe' (ID: 80071)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.833753228187561
    2. '.' → logprob: -1.333753228187561
    3. ' entre' → logprob: -2.2087531089782715
    4. 'from' → logprob: -2.9587531089782715
    5. ',' → logprob: -3.5837531089782715
    6. ')' → logprob: -3.5837531089782715
    7. ' between' → logprob: -4.4587531089782715
    8. '<|end|>' → logprob: -4.7087531089782715
    9. 'entre' → logprob: -4.9587531089782715
    10. ' from' → logprob: -5.2087531089782715

Token 565: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8296101093292236
    2. '   ' → logprob: -1.7046101093292236
    3. ':' → logprob: -2.0796101093292236
    4. ',' → logprob: -2.4546101093292236
    5. ')' → logprob: -3.0796101093292236
    6. ' entre' → logprob: -4.0796098709106445
    7. 'def' → logprob: -4.2046098709106445
    8. ' à' → logprob: -4.4546098709106445
    9. '()' → logprob: -4.7046098709106445
    10. 'from' → logprob: -4.8296098709106445

Token 566: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04880945384502411
    2. '
' → logprob: -4.17380952835083
    3. 'def' → logprob: -4.42380952835083
    4. ')' → logprob: -4.67380952835083
    5. ' def' → logprob: -5.92380952835083
    6. '_' → logprob: -6.42380952835083
    7. ':' → logprob: -6.92380952835083
    8. ' ' → logprob: -7.29880952835083
    9. '```' → logprob: -7.42380952835083
    10. ',' → logprob: -7.79880952835083

Token 567: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09030212461948395
    2. '
' → logprob: -2.7153022289276123
    3. '```' → logprob: -4.590301990509033
    4. 'def' → logprob: -4.715301990509033
    5. ' for' → logprob: -7.590301990509033
    6. 'for' → logprob: -8.465302467346191
    7. '    
' → logprob: -9.340302467346191
    8. ' def' → logprob: -9.465302467346191
    9. '``' → logprob: -9.590302467346191
    10. '\n' → logprob: -10.090302467346191

Token 568: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37561213970184326
    2. '   ' → logprob: -1.3756121397018433
    3. ',' → logprob: -3.250612258911133
    4. '       ' → logprob: -5.250612258911133
    5. '):' → logprob: -5.250612258911133
    6. '[' → logprob: -5.625612258911133
    7. ')' → logprob: -5.750612258911133
    8. ':
' → logprob: -6.500612258911133
    9. 'def' → logprob: -7.375612258911133
    10. '[
' → logprob: -7.625612258911133

Token 569: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14495036005973816
    2. '       ' → logprob: -2.0199503898620605
    3. '    ' → logprob: -6.2699503898620605
    4. '```' → logprob: -8.769949913024902
    5. '   ' → logprob: -10.144949913024902
    6. '      ' → logprob: -10.269949913024902
    7. '     ' → logprob: -10.394949913024902
    8. '        ' → logprob: -10.769949913024902
    9. '   ' → logprob: -10.769949913024902
    10. '           ' → logprob: -10.894949913024902

Token 570: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.2072439193725586
    2. ' N' → logprob: -1.7072439193725586
    3. '   ' → logprob: -5.207243919372559
    4. 'self' → logprob: -9.832243919372559
    5. '       ' → logprob: -9.832243919372559
    6. '```' → logprob: -9.957243919372559
    7. 'n' → logprob: -10.207243919372559
    8. 'r' → logprob: -10.582243919372559
    9. 'def' → logprob: -10.957243919372559
    10. 'dp' → logprob: -10.957243919372559

Token 571: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04199540987610817
    2. '   ' → logprob: -3.7919955253601074
    3. ' (' → logprob: -4.291995525360107
    4. ' ,' → logprob: -6.166995525360107
    5. '(int' → logprob: -6.416995525360107
    6. ':' → logprob: -8.04199504852295
    7. ':int' → logprob: -8.16699504852295
    8. 'int' → logprob: -8.54199504852295
    9. ',int' → logprob: -8.66699504852295
    10. '```' → logprob: -9.91699504852295

Token 572: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9266199160483666e-05
    2. ' int' → logprob: -10.875019073486328
    3. ')' → logprob: -15.500019073486328
    4. '[int' → logprob: -16.500019073486328
    5. '   ' → logprob: -18.000019073486328
    6. ':int' → logprob: -18.750019073486328
    7. ',' → logprob: -19.125019073486328
    8. '=int' → logprob: -19.250019073486328
    9. '```' → logprob: -19.250019073486328
    10. ',int' → logprob: -19.750019073486328

Token 573: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00959695316851139
    2. '   ' → logprob: -5.634596824645996
    3. '):
' → logprob: -5.759596824645996
    4. ',' → logprob: -6.509596824645996
    5. ')' → logprob: -6.759596824645996
    6. ':' → logprob: -9.259596824645996
    7. ' ):' → logprob: -10.134596824645996
    8. '):

' → logprob: -11.634596824645996
    9. '       ' → logprob: -12.134596824645996
    10. '```' → logprob: -12.259596824645996

Token 574: ' Taille' (ID: 174124)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.044836170971393585
    2. 'dp' → logprob: -3.6698362827301025
    3. ' int' → logprob: -4.294836044311523
    4. 'int' → logprob: -5.919836044311523
    5. '   ' → logprob: -6.919836044311523
    6. ' compute' → logprob: -8.044836044311523
    7. ')' → logprob: -8.169836044311523
    8. ' def' → logprob: -8.794836044311523
    9. ' r' → logprob: -9.669836044311523
    10. '```' → logprob: -10.169836044311523

Token 575: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28758010268211365
    2. '   ' → logprob: -1.912580132484436
    3. '_' → logprob: -2.7875800132751465
    4. '=' → logprob: -4.9125800132751465
    5. ' de' → logprob: -5.2875800132751465
    6. '[' → logprob: -5.2875800132751465
    7. '):' → logprob: -5.4125800132751465
    8. ')_' → logprob: -6.0375800132751465
    9. ' )' → logprob: -6.1625800132751465
    10. ',' → logprob: -6.2875800132751465

Token 576: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.012370610609650612
    2. ' the' → logprob: -4.762370586395264
    3. 'the' → logprob: -7.137370586395264
    4. ')' → logprob: -7.387370586395264
    5. ' l' → logprob: -7.387370586395264
    6. 'la' → logprob: -8.137371063232422
    7. '```' → logprob: -8.262371063232422
    8. 'l' → logprob: -8.387371063232422
    9. '   ' → logprob: -8.512371063232422
    10. 'r' → logprob: -8.637371063232422

Token 577: ' sé' (ID: 7462)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.01921900361776352
    2. 'sequence' → logprob: -4.769218921661377
    3. ' sé' → logprob: -4.769218921661377
    4. 'sé' → logprob: -7.394218921661377
    5. '_sequence' → logprob: -7.644218921661377
    6. ' s' → logprob: -7.644218921661377
    7. '_s' → logprob: -8.644219398498535
    8. 's' → logprob: -9.019219398498535
    9. ' sequ' → logprob: -9.894219398498535
    10. '_' → logprob: -9.894219398498535

Token 578: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -4.246537173457909e-06
    2. 'QUENCE' → logprob: -13.250003814697266
    3. '   ' → logprob: -13.625003814697266
    4. 'q' → logprob: -14.875003814697266
    5. 'qu' → logprob: -15.000003814697266
    6. 'quences' → logprob: -15.375003814697266
    7. '
' → logprob: -16.125003814697266
    8. 'sequence' → logprob: -16.625003814697266
    9. 'que' → logprob: -17.000003814697266
    10. '`' → logprob: -17.250003814697266

Token 579: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2684324979782104
    2. '):' → logprob: -1.3934324979782104
    3. '):
' → logprob: -1.3934324979782104
    4. '   ' → logprob: -1.6434324979782104
    5. ')' → logprob: -3.8934326171875
    6. ',
' → logprob: -5.1434326171875
    7. '```' → logprob: -7.2684326171875
    8. '       ' → logprob: -7.5184326171875
    9. '),' → logprob: -7.6434326171875
    10. 'def' → logprob: -7.7684326171875

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6009198427200317
    2. '   ' → logprob: -0.8509198427200317
    3. '    ' → logprob: -4.350919723510742
    4. 'r' → logprob: -4.975919723510742
    5. ' r' → logprob: -6.100919723510742
    6. '        ' → logprob: -7.225919723510742
    7. ',' → logprob: -7.475919723510742
    8. '           ' → logprob: -8.100919723510742
    9. 'dp' → logprob: -8.600919723510742
    10. ' dp' → logprob: -8.600919723510742

Token 581: ' r' (ID: 428)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14583033323287964
    2. 'r' (adapté à ' r') → logprob: -2.0208303928375244
    3. 'MOD' → logprob: -6.020830154418945
    4. ' dp' → logprob: -7.895830154418945
    5. ' r' → logprob: -8.770830154418945
    6. '   ' → logprob: -9.520830154418945
    7. '```' → logprob: -10.770830154418945
    8. 'rp' → logprob: -11.458330154418945
    9. ')' → logprob: -11.895830154418945
    10. 'd' → logprob: -12.020830154418945

Token 582: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06976569443941116
    2. ',' → logprob: -3.31976580619812
    3. '   ' → logprob: -3.94476580619812
    4. '):' → logprob: -5.444765567779541
    5. '[' → logprob: -6.069765567779541
    6. '[i' → logprob: -6.319765567779541
    7. '):
' → logprob: -6.819765567779541
    8. '<|end|>' → logprob: -7.444765567779541
    9. '[r' → logprob: -8.1947660446167
    10. ' =' → logprob: -8.1947660446167

Token 583: 'list' (ID: 2641)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5710266828536987
    2. 'list' → logprob: -0.9460266828536987
    3. 'int' → logprob: -4.321026802062988
    4. 'i' → logprob: -5.071026802062988
    5. 'N' → logprob: -5.071026802062988
    6. '[i' → logprob: -5.321026802062988
    7. ' list' → logprob: -5.696026802062988
    8. 'def' → logprob: -5.696026802062988
    9. '   ' → logprob: -6.321026802062988
    10. '[' → logprob: -6.446026802062988

Token 584: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03988892212510109
    2. ':' → logprob: -4.164888858795166
    3. ')' → logprob: -4.414888858795166
    4. '):
' → logprob: -4.789888858795166
    5. '   ' → logprob: -6.789888858795166
    6. ',' → logprob: -7.164888858795166
    7. '<|end|>' → logprob: -8.039889335632324
    8. ' for' → logprob: -9.039889335632324
    9. '```' → logprob: -9.039889335632324
    10. '=None' → logprob: -9.414889335632324

Token 585: ' Tableau' (ID: 180833)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.43241092562675476
    2. 'list' → logprob: -1.4324109554290771
    3. '[' → logprob: -2.807410955429077
    4. '[int' → logprob: -4.182410717010498
    5. '[list' → logprob: -4.807410717010498
    6. ' [' → logprob: -5.057410717010498
    7. ')' → logprob: -5.307410717010498
    8. 'r' → logprob: -5.557410717010498
    9. '[]' → logprob: -6.307410717010498
    10. '```' → logprob: -6.307410717010498

Token 586: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7668473124504089
    2. '   ' → logprob: -2.2668473720550537
    3. '):' → logprob: -2.2668473720550537
    4. ' for' → logprob: -2.7668473720550537
    5. 'for' → logprob: -2.8918473720550537
    6. ' des' → logprob: -3.1418473720550537
    7. ')' → logprob: -3.5168473720550537
    8. '[' → logprob: -4.016847133636475
    9. 'des' → logprob: -4.141847133636475
    10. '=' → logprob: -4.141847133636475

Token 587: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.6097660660743713
    2. ' indices' → logprob: -0.9847660660743713
    3. 'next' → logprob: -3.4847660064697266
    4. ' next' → logprob: -3.6097660064697266
    5. 'positions' → logprob: -4.609766006469727
    6. ' positions' → logprob: -4.984766006469727
    7. 'int' → logprob: -6.359766006469727
    8. '   ' → logprob: -6.734766006469727
    9. 's' → logprob: -7.109766006469727
    10. ' prochains' → logprob: -7.484766006469727

Token 588: ' suivants' (ID: 112219)
  Prédit: ' suivants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -0.5363550186157227
    2. ' valid' → logprob: -1.6613550186157227
    3. 'valid' → logprob: -2.5363550186157227
    4. ' val' → logprob: -2.9113550186157227
    5. 'su' → logprob: -4.161355018615723
    6. ']' → logprob: -4.161355018615723
    7. ' des' → logprob: -4.411355018615723
    8. '_valid' → logprob: -4.786355018615723
    9. 'val' → logprob: -5.036355018615723
    10. ')' → logprob: -5.161355018615723

Token 589: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.6199427247047424
    2. 'val' → logprob: -1.6199426651000977
    3. 'valid' → logprob: -2.2449426651000977
    4. ' valid' → logprob: -2.2449426651000977
    5. ']' → logprob: -3.2449426651000977
    6. '_valid' → logprob: -5.494942665100098
    7. '   ' → logprob: -5.744942665100098
    8. '_val' → logprob: -6.369942665100098
    9. ' ]' → logprob: -6.869942665100098
    10. ' valide' → logprob: -7.619942665100098

Token 590: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.41001787781715393
    2. 'id' → logprob: -1.1600178480148315
    3. 'ide' → logprob: -4.035017967224121
    4. 'ids' → logprob: -6.035017967224121
    5. ']' → logprob: -7.910017967224121
    6. '[' → logprob: -8.035017967224121
    7. '   ' → logprob: -8.160017967224121
    8. 'idé' → logprob: -8.160017967224121
    9. '```' → logprob: -8.660017967224121
    10. '[i' → logprob: -8.910017967224121

Token 591: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1595350056886673
    2. '):
' → logprob: -2.7845349311828613
    3. '   ' → logprob: -3.1595349311828613
    4. '):' → logprob: -3.2845349311828613
    5. '```' → logprob: -6.159534931182861
    6. ']' → logprob: -7.159534931182861
    7. ' pour' → logprob: -7.659534931182861
    8. '`)' → logprob: -7.784534931182861
    9. 'for' → logprob: -8.03453540802002
    10. ')
' → logprob: -8.40953540802002

Token 592: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014440609142184258
    2. ')' → logprob: -4.889440536499023
    3. '       ' → logprob: -5.264440536499023
    4. '```' → logprob: -6.889440536499023
    5. ',' → logprob: -8.264440536499023
    6. 'dp' → logprob: -9.264440536499023
    7. 'def' → logprob: -9.639440536499023
    8. '):' → logprob: -9.639440536499023
    9. '):
' → logprob: -10.514440536499023
    10. '[' → logprob: -10.764440536499023

Token 593: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.022328542545437813
    2. '   ' → logprob: -3.8973286151885986
    3. ' dp' → logprob: -6.8973283767700195
    4. '```' → logprob: -8.02232837677002
    5. 'for' → logprob: -8.39732837677002
    6. '       ' → logprob: -9.52232837677002
    7. 'MOD' → logprob: -10.14732837677002
    8. '
' → logprob: -10.89732837677002
    9. '``' → logprob: -11.14732837677002
    10. ')' → logprob: -11.39732837677002

Token 594: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5615400075912476
    2. ')' → logprob: -1.1865400075912476
    3. '[' → logprob: -3.061540126800537
    4. '[i' → logprob: -3.436540126800537
    5. '   ' → logprob: -3.811540126800537
    6. '):' → logprob: -4.436540126800537
    7. ' =' → logprob: -5.811540126800537
    8. '):
' → logprob: -5.811540126800537
    9. '=' → logprob: -6.311540126800537
    10. '),' → logprob: -7.311540126800537

Token 595: 'list' (ID: 2641)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0508629083633423
    2. 'range' → logprob: -1.1758629083633423
    3. 'N' → logprob: -1.4258629083633423
    4. 'list' → logprob: -2.9258627891540527
    5. '   ' → logprob: -4.550862789154053
    6. ' range' → logprob: -4.675862789154053
    7. 'i' → logprob: -4.800862789154053
    8. 'for' → logprob: -5.050862789154053
    9. 'r' → logprob: -5.800862789154053
    10. ',' → logprob: -5.800862789154053

Token 596: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6413485407829285
    2. ')' → logprob: -0.8913485407829285
    3. '   ' → logprob: -3.1413486003875732
    4. '):
' → logprob: -4.516348361968994
    5. '[i' → logprob: -6.016348361968994
    6. '[r' → logprob: -6.141348361968994
    7. ':' → logprob: -6.891348361968994
    8. '[' → logprob: -7.016348361968994
    9. 'def' → logprob: -7.766348361968994
    10. '       ' → logprob: -8.266348838806152

Token 597: ' Tableau' (ID: 180833)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5935433506965637
    2. 'list' → logprob: -1.468543291091919
    3. '   ' → logprob: -1.718543291091919
    4. '[int' → logprob: -4.593543529510498
    5. ' for' → logprob: -4.718543529510498
    6. 'List' → logprob: -5.093543529510498
    7. 'int' → logprob: -5.468543529510498
    8. 'for' → logprob: -5.843543529510498
    9. ')' → logprob: -6.093543529510498
    10. '```' → logprob: -7.093543529510498

Token 598: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6672270894050598
    2. '[' → logprob: -1.292227029800415
    3. ' =' → logprob: -2.167227029800415
    4. ')' → logprob: -3.042227029800415
    5. '    ' → logprob: -4.792227268218994
    6. '=' → logprob: -4.792227268218994
    7. ',' → logprob: -4.917227268218994
    8. '[i' → logprob: -5.167227268218994
    9. '```' → logprob: -5.917227268218994
    10. ' for' → logprob: -6.292227268218994

Token 599: ' nombres' (ID: 76205)
  Prédit: ' façons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.3728722035884857
    2. 'dp' → logprob: -1.872872233390808
    3. 'fa' → logprob: -3.1228721141815186
    4. ' ways' → logprob: -3.4978721141815186
    5. ' nombres' → logprob: -4.372872352600098
    6. 'nombre' → logprob: -4.372872352600098
    7. 'ways' → logprob: -4.622872352600098
    8. 'int' → logprob: -5.122872352600098
    9. ' dp' → logprob: -5.247872352600098
    10. ' man' → logprob: -5.247872352600098

Token 600: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7197985053062439
    2. ' d' → logprob: -1.9697985649108887
    3. '   ' → logprob: -2.0947985649108887
    4. '_d' → logprob: -2.5947985649108887
    5. ' de' → logprob: -2.7197985649108887
    6. '_de' → logprob: -3.4697985649108887
    7. '[' → logprob: -3.7197985649108887
    8. ' ' → logprob: -4.844798564910889
    9. 'd' → logprob: -4.969798564910889
    10. '  ' → logprob: -4.969798564910889

Token 601: ' façons' (ID: 165958)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.0580696277320385
    2. 'man' → logprob: -3.4330697059631348
    3. ' façons' → logprob: -3.8080697059631348
    4. 'ways' → logprob: -6.808069705963135
    5. '```' → logprob: -8.558069229125977
    6. ' fa' → logprob: -8.808069229125977
    7. '   ' → logprob: -9.183069229125977
    8. '0' → logprob: -9.808069229125977
    9. ' man' → logprob: -10.058069229125977
    10. 'fois' → logprob: -10.058069229125977

Token 602: ' (' (ID: 350)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6169989705085754
    2. '   ' → logprob: -1.3669989109039307
    3. 'd' → logprob: -2.3669989109039307
    4. ')' → logprob: -3.3669989109039307
    5. '_d' → logprob: -3.4919989109039307
    6. '  ' → logprob: -4.36699914932251
    7. '[' → logprob: -4.74199914932251
    8. ' ' → logprob: -4.86699914932251
    9. '    ' → logprob: -4.99199914932251
    10. '```' → logprob: -6.74199914932251

Token 603: 'mod' (ID: 4847)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018311945721507072
    2. ' )' → logprob: -4.893311977386475
    3. '   ' → logprob: -5.018311977386475
    4. '):' → logprob: -6.643311977386475
    5. '):
' → logprob: -7.018311977386475
    6. ' de' → logprob: -8.643311500549316
    7. ' for' → logprob: -8.643311500549316
    8. 'def' → logprob: -8.893311500549316
    9. ']' → logprob: -8.893311500549316
    10. '    ' → logprob: -9.143311500549316

Token 604: 'ifié' (ID: 49927)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1130809411406517
    2. '_' → logprob: -3.1130809783935547
    3. ' )' → logprob: -3.8630809783935547
    4. 'ULO' → logprob: -4.488080978393555
    5. ' _' → logprob: -4.613080978393555
    6. '_)' → logprob: -4.988080978393555
    7. ')_' → logprob: -5.738080978393555
    8. 'ulo' → logprob: -5.988080978393555
    9. '   ' → logprob: -6.238080978393555
    10. 'ule' → logprob: -7.113080978393555

Token 605: ' sur' (ID: 1512)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047039326280355453
    2. '   ' → logprob: -3.547039270401001
    3. '):
' → logprob: -5.17203950881958
    4. ' )' → logprob: -5.54703950881958
    5. ')
' → logprob: -6.54703950881958
    6. '[' → logprob: -6.54703950881958
    7. ' for' → logprob: -6.92203950881958
    8. '       ' → logprob: -7.79703950881958
    9. '    ' → logprob: -7.92203950881958
    10. 'for' → logprob: -8.047039031982422

Token 606: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.9841604232788086
    2. '=' → logprob: -1.3591604232788086
    3. ')' → logprob: -1.8591604232788086
    4. ' place' → logprob: -2.4841604232788086
    5. '   ' → logprob: -3.2341604232788086
    6. 'r' → logprob: -3.3591604232788086
    7. ' =' → logprob: -4.109160423278809
    8. '=N' → logprob: -5.234160423278809
    9. '-place' → logprob: -5.609160423278809
    10. '_' → logprob: -5.609160423278809

Token 607: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025824693962931633
    2. ')
' → logprob: -4.025824546813965
    3. '   ' → logprob: -5.525824546813965
    4. '):
' → logprob: -5.775824546813965
    5. '):' → logprob: -8.275824546813965
    6. '[' → logprob: -9.400824546813965
    7. ',' → logprob: -10.275824546813965
    8. ')`' → logprob: -10.650824546813965
    9. '),' → logprob: -10.775824546813965
    10. ' )' → logprob: -11.150824546813965

Token 608: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004190586972981691
    2. ')' → logprob: -6.254190444946289
    3. '
' → logprob: -6.379190444946289
    4. '):
' → logprob: -8.254190444946289
    5. '    
' → logprob: -9.254190444946289
    6. ')
' → logprob: -9.379190444946289
    7. 'def' → logprob: -10.379190444946289
    8. ' for' → logprob: -10.754190444946289
    9. 'for' → logprob: -10.879190444946289
    10. ',' → logprob: -11.629190444946289

Token 609: ' MOD' (ID: 32868)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2953121066093445
    2. 'for' → logprob: -1.9203121662139893
    3. ')' → logprob: -3.0453121662139893
    4. '
' → logprob: -3.5453121662139893
    5. '):
' → logprob: -4.79531192779541
    6. ')
' → logprob: -5.29531192779541
    7. ' for' → logprob: -5.29531192779541
    8. '```' → logprob: -5.67031192779541
    9. 'i' → logprob: -5.92031192779541
    10. 'r' → logprob: -6.04531192779541

Token 610: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04043882340192795
    2. ')' → logprob: -3.5404388904571533
    3. '=' → logprob: -4.915438652038574
    4. ':' → logprob: -6.415438652038574
    5. '):
' → logprob: -7.540438652038574
    6. ' ):' → logprob: -7.790438652038574
    7. ' =' → logprob: -8.040438652038574
    8. ')=' → logprob: -8.165438652038574
    9. ',' → logprob: -10.290438652038574
    10. '   ' → logprob: -10.665438652038574

Token 611: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005003670696169138
    2. '):' → logprob: -5.380003452301025
    3. ' )' → logprob: -8.255003929138184
    4. '=' → logprob: -10.630003929138184
    5. '):
' → logprob: -10.755003929138184
    6. ' ):' → logprob: -10.755003929138184
    7. 'int' → logprob: -11.255003929138184
    8. ')=' → logprob: -11.380003929138184
    9. ' ' → logprob: -11.630003929138184
    10. ':' → logprob: -12.255003929138184

Token 612: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02369193360209465
    2. ')' → logprob: -4.3986921310424805
    3. '):
' → logprob: -4.5236921310424805
    4. ' ):' → logprob: -9.39869213104248
    5. '=' → logprob: -9.52369213104248
    6. ':' → logprob: -10.14869213104248
    7. '):

' → logprob: -10.14869213104248
    8. '):
' → logprob: -11.14869213104248
    9. '   ' → logprob: -11.39869213104248
    10. ')=' → logprob: -12.64869213104248

Token 613: ' Mod' (ID: 7191)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05588484928011894
    2. '10' → logprob: -3.680884838104248
    3. '100' → logprob: -4.555884838104248
    4. ' )' → logprob: -4.680884838104248
    5. ' ' → logprob: -4.930884838104248
    6. 'int' → logprob: -7.805884838104248
    7. '2' → logprob: -8.430885314941406
    8. '   ' → logprob: -8.680885314941406
    9. '...' → logprob: -8.930885314941406
    10. '```' → logprob: -8.930885314941406

Token 614: 'ulo' (ID: 5953)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.3048519790172577
    2. ')' → logprob: -2.67985200881958
    3. 'ULO' → logprob: -2.80485200881958
    4. 'ulo' → logprob: -3.55485200881958
    5. 'ULE' → logprob: -3.80485200881958
    6. '=' → logprob: -4.17985200881958
    7. '```' → logprob: -4.17985200881958
    8. ' =' → logprob: -4.55485200881958
    9. '}' → logprob: -5.30485200881958
    10. 'ulus' → logprob: -5.30485200881958

Token 615: ' pour' (ID: 1930)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027966788038611412
    2. '):
' → logprob: -3.6529667377471924
    3. ')' → logprob: -6.9029669761657715
    4. '   ' → logprob: -7.7779669761657715
    5. ' ):' → logprob: -9.527966499328613
    6. '=' → logprob: -9.902966499328613
    7. '):
' → logprob: -10.027966499328613
    8. ':' → logprob: -10.277966499328613
    9. '<|end|>' → logprob: -11.152966499328613
    10. '):

' → logprob: -12.152966499328613

Token 616: ' éviter' (ID: 64013)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7776455283164978
    2. ' les' → logprob: -1.6526455879211426
    3. ' la' → logprob: -1.6526455879211426
    4. ' l' → logprob: -2.6526455879211426
    5. '100' → logprob: -2.9026455879211426
    6. '1' → logprob: -5.152645587921143
    7. ' int' → logprob: -5.152645587921143
    8. ')' → logprob: -5.777645587921143
    9. ' calcul' → logprob: -6.027645587921143
    10. '10' → logprob: -6.402645587921143

Token 617: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.08216968923807144
    2. ' la' → logprob: -3.457169771194458
    3. ' l' → logprob: -4.082169532775879
    4. ' des' → logprob: -4.582169532775879
    5. ' ' → logprob: -5.082169532775879
    6. ' ' → logprob: -5.457169532775879
    7. ' le' → logprob: -5.957169532775879
    8. ' overflow' → logprob: -6.207169532775879
    9. '_' → logprob: -6.332169532775879
    10. '   ' → logprob: -6.707169532775879

Token 618: ' déb' (ID: 37874)
  Prédit: ' déb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déb' → logprob: -0.3123230040073395
    2. ' overflow' → logprob: -1.687322974205017
    3. 'overflow' → logprob: -3.4373230934143066
    4. ' dépasse' → logprob: -3.5623230934143066
    5. 'd' → logprob: -4.312323093414307
    6. 'dé' → logprob: -4.937323093414307
    7. ' ' → logprob: -7.187323093414307
    8. ' integer' → logprob: -8.062322616577148
    9. 'ent' → logprob: -8.437322616577148
    10. ' over' → logprob: -8.937322616577148

Token 619: 'ord' (ID: 604)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5016096234321594
    2. 'ord' → logprob: -1.6266095638275146
    3. 'ép' → logprob: -1.8766095638275146
    4. 'pas' → logprob: -3.8766095638275146
    5. 'bord' → logprob: -5.626609802246094
    6. '_p' → logprob: -5.751609802246094
    7. 'êt' → logprob: -6.126609802246094
    8. '   ' → logprob: -6.251609802246094
    9. 'éf' → logprob: -6.251609802246094
    10. '```' → logprob: -6.876609802246094

Token 620: 'ements' (ID: 4507)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9937472343444824
    2. 'it' → logprob: -1.9937472343444824
    3. 'ord' → logprob: -1.9937472343444824
    4. 'r' → logprob: -2.6187472343444824
    5. ')' → logprob: -2.6187472343444824
    6. 'f' → logprob: -2.7437472343444824
    7. 'ît' → logprob: -2.8687472343444824
    8. '```' → logprob: -2.9937472343444824
    9. 'êt' → logprob: -3.7437472343444824
    10. 'u' → logprob: -3.8687472343444824

Token 621: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28235092759132385
    2. '):' → logprob: -1.5323508977890015
    3. ')' → logprob: -3.532351016998291
    4. '   ' → logprob: -7.782351016998291
    5. ')
' → logprob: -8.907350540161133
    6. '):
' → logprob: -8.907350540161133
    7. '):

' → logprob: -11.032350540161133
    8. ' ):
' → logprob: -11.782350540161133
    9. ' ):' → logprob: -12.282350540161133
    10. ',' → logprob: -13.282350540161133

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08319772779941559
    2. '):
' → logprob: -2.708197832107544
    3. '):' → logprob: -4.833197593688965
    4. ')' → logprob: -5.333197593688965
    5. '```' → logprob: -9.083197593688965
    6. 'def' → logprob: -9.333197593688965
    7. ')
' → logprob: -9.583197593688965
    8. '
' → logprob: -9.708197593688965
    9. '    
' → logprob: -11.583197593688965
    10. ' ' → logprob: -11.708197593688965

Token 623: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008993052877485752
    2. 'for' → logprob: -5.133993148803711
    3. 'def' → logprob: -6.258993148803711
    4. ' for' → logprob: -7.508993148803711
    5. ')' → logprob: -8.258993148803711
    6. ')
' → logprob: -8.508993148803711
    7. '```' → logprob: -9.508993148803711
    8. '"""
' → logprob: -10.383993148803711
    9. '):
' → logprob: -11.258993148803711
    10. '
' → logprob: -11.633993148803711

Token 624: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21706447005271912
    2. '   ' → logprob: -1.8420644998550415
    3. '[' → logprob: -4.217064380645752
    4. ':
' → logprob: -4.217064380645752
    5. ' ' → logprob: -7.092064380645752
    6. ' :' → logprob: -7.217064380645752
    7. '```' → logprob: -7.217064380645752
    8. '    ' → logprob: -7.467064380645752
    9. '[
' → logprob: -7.592064380645752
    10. '  
' → logprob: -7.592064380645752

Token 625: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.433137983083725
    2. ' dp' → logprob: -1.1831380128860474
    3. 'dp' → logprob: -3.683137893676758
    4. ' None' → logprob: -5.058137893676758
    5. ' N' → logprob: -5.058137893676758
    6. '    ' → logprob: -5.933137893676758
    7. '[' → logprob: -6.558137893676758
    8. 'None' → logprob: -6.558137893676758
    9. ' [' → logprob: -7.558137893676758
    10. '[
' → logprob: -8.683137893676758

Token 626: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.04735260829329491
    2. 'int' → logprob: -3.7973525524139404
    3. ' list' → logprob: -4.4223527908325195
    4. 'None' → logprob: -4.7973527908325195
    5. '   ' → logprob: -6.2973527908325195
    6. 'dp' → logprob: -7.2973527908325195
    7. ' None' → logprob: -7.4223527908325195
    8. ' int' → logprob: -8.42235279083252
    9. 'List' → logprob: -8.54735279083252
    10. ' dp' → logprob: -11.79735279083252

Token 627: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38068699836730957
    2. '   ' → logprob: -1.6306869983673096
    3. '[' → logprob: -3.0056869983673096
    4. ':
' → logprob: -4.0056867599487305
    5. '[int' → logprob: -4.5056867599487305
    6. '<|end|>' → logprob: -4.5056867599487305
    7. '):' → logprob: -5.1306867599487305
    8. ')' → logprob: -5.3806867599487305
    9. '):
' → logprob: -5.5056867599487305
    10. '[N' → logprob: -5.6306867599487305

Token 628: ' Tableau' (ID: 180833)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.043052513152360916
    2. 'dp' → logprob: -3.1680524349212646
    3. '   ' → logprob: -11.043052673339844
    4. ' int' → logprob: -11.293052673339844
    5. '[int' → logprob: -12.043052673339844
    6. '(dp' → logprob: -12.043052673339844
    7. ' list' → logprob: -12.793052673339844
    8. 'int' → logprob: -13.043052673339844
    9. ' List' → logprob: -13.043052673339844
    10. 'List' → logprob: -13.668052673339844

Token 629: ' dp' (ID: 21546)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: ' mis' (ID: 4694)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9074505567550659
    2. '   ' → logprob: -1.532450556755066
    3. ':
' → logprob: -2.0324506759643555
    4. 'def' → logprob: -2.1574506759643555
    5. ':' → logprob: -2.7824506759643555
    6. '):' → logprob: -3.1574506759643555
    7. '
' → logprob: -4.0324506759643555
    8. ')' → logprob: -5.4074506759643555
    9. '```' → logprob: -6.7824506759643555
    10. '(N' → logprob: -7.0324506759643555

Token 631: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6439430713653564
    2. 'à' → logprob: -0.7689430713653564
    3. '   ' → logprob: -5.643942832946777
    4. '```' → logprob: -5.643942832946777
    5. '-à' → logprob: -6.268942832946777
    6. ''à' → logprob: -6.768942832946777
    7. '[' → logprob: -7.893942832946777
    8. '  ' → logprob: -8.643942832946777
    9. ' ' → logprob: -8.893942832946777
    10. '[]' → logprob: -8.893942832946777

Token 632: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0007998613873496652
    2. ' jour' → logprob: -8.125800132751465
    3. '```' → logprob: -8.750800132751465
    4. 'jou' → logprob: -8.875800132751465
    5. 'jours' → logprob: -9.000800132751465
    6. 'day' → logprob: -10.000800132751465
    7. 'j' → logprob: -10.875800132751465
    8. '[j' → logprob: -12.500800132751465
    9. '[' → logprob: -12.875800132751465
    10. '   ' → logprob: -13.000800132751465

Token 633: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24317456781864166
    2. '
' → logprob: -2.6181745529174805
    3. ':
' → logprob: -2.6181745529174805
    4. 'def' → logprob: -3.6181745529174805
    5. '):
' → logprob: -3.8681745529174805
    6. ':' → logprob: -4.3681745529174805
    7. '```' → logprob: -5.9931745529174805
    8. ')' → logprob: -6.2431745529174805
    9. '    
' → logprob: -6.4931745529174805
    10. '):' → logprob: -6.9931745529174805

Token 634: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014455756172537804
    2. '
' → logprob: -4.264455795288086
    3. '    
' → logprob: -8.889455795288086
    4. 'def' → logprob: -9.264455795288086
    5. ')' → logprob: -10.764455795288086
    6. '```' → logprob: -10.764455795288086
    7. '"""
' → logprob: -12.514455795288086
    8. ')
' → logprob: -12.889455795288086
    9. '):
' → logprob: -13.139455795288086
    10. 'for' → logprob: -13.264455795288086

Token 635: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025945615489035845
    2. '):
' → logprob: -6.877594470977783
    3. ')
' → logprob: -7.752594470977783
    4. 'def' → logprob: -7.877594470977783
    5. ')' → logprob: -8.127594947814941
    6. '
' → logprob: -8.377594947814941
    7. '    
' → logprob: -9.752594947814941
    8. '```' → logprob: -10.002594947814941
    9. 'for' → logprob: -10.377594947814941
    10. '):' → logprob: -10.502594947814941

Token 636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.56560218334198
    2. 'for' → logprob: -0.94060218334198
    3. ' for' → logprob: -3.1906023025512695
    4. 'def' → logprob: -8.44060230255127
    5. '```' → logprob: -8.94060230255127
    6. '
' → logprob: -10.31560230255127
    7. '	for' → logprob: -10.44060230255127
    8. 'i' → logprob: -11.06560230255127
    9. '    
' → logprob: -11.94060230255127
    10. ' i' → logprob: -12.06560230255127

Token 637: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02466520108282566
    2. ' for' → logprob: -4.149665355682373
    3. '   ' → logprob: -4.774665355682373
    4. 'i' → logprob: -9.524664878845215
    5. 'def' → logprob: -10.149664878845215
    6. '
' → logprob: -11.024664878845215
    7. '```' → logprob: -11.149664878845215
    8. ' i' → logprob: -12.274664878845215
    9. '	for' → logprob: -12.899664878845215
    10. '    
' → logprob: -14.649664878845215

Token 638: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008739493787288666
    2. 'i' → logprob: -4.758739471435547
    3. ' _' → logprob: -10.008739471435547
    4. ' ' → logprob: -10.133739471435547
    5. '   ' → logprob: -11.133739471435547
    6. '_' → logprob: -11.883739471435547
    7. '	i' → logprob: -12.258739471435547
    8. ' ' → logprob: -12.758739471435547
    9. '_i' → logprob: -13.258739471435547
    10. '    ' → logprob: -13.508739471435547

Token 639: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010524559766054153
    2. 'in' → logprob: -5.010524749755859
    3. '+' → logprob: -5.760524749755859
    4. ' +' → logprob: -8.38552474975586
    5. '   ' → logprob: -9.63552474975586
    6. ')' → logprob: -9.63552474975586
    7. '[' → logprob: -9.88552474975586
    8. ' i' → logprob: -10.01052474975586
    9. '1' → logprob: -10.26052474975586
    10. '_' → logprob: -10.26052474975586

Token 640: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009762225672602654
    2. ' range' → logprob: -4.634762287139893
    3. '   ' → logprob: -12.759761810302734
    4. ' ' → logprob: -13.259761810302734
    5. '(range' → logprob: -14.509761810302734
    6. '  ' → logprob: -14.884761810302734
    7. 'in' → logprob: -15.509761810302734
    8. '    ' → logprob: -15.634761810302734
    9. '	range' → logprob: -16.509761810302734
    10. 're' → logprob: -16.634761810302734

Token 641: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24695242941379547
    2. '(N' → logprob: -1.6219524145126343
    3. '1' → logprob: -3.871952533721924
    4. 'N' → logprob: -8.496952056884766
    5. '   ' → logprob: -8.621952056884766
    6. ' (' → logprob: -10.371952056884766
    7. ',' → logprob: -10.996952056884766
    8. '(i' → logprob: -11.371952056884766
    9. '0' → logprob: -11.496952056884766
    10. '(
' → logprob: -11.621952056884766

Token 642: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36769938468933105
    2. '):
' → logprob: -1.742699384689331
    3. ' +' → logprob: -2.742699384689331
    4. '):' → logprob: -3.117699384689331
    5. '   ' → logprob: -3.992699384689331
    6. ')' → logprob: -5.49269962310791
    7. '-' → logprob: -6.99269962310791
    8. ' -' → logprob: -9.11769962310791
    9. '
' → logprob: -9.74269962310791
    10. ')+' → logprob: -9.99269962310791

Token 643: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1186566047836095e-05
    2. ' ' → logprob: -10.625031471252441
    3. '2' → logprob: -12.375031471252441
    4. '   ' → logprob: -13.000031471252441
    5. '```' → logprob: -15.875031471252441
    6. ')' → logprob: -16.125030517578125
    7. '0' → logprob: -16.250030517578125
    8. '-' → logprob: -17.125030517578125
    9. '...' → logprob: -18.750030517578125
    10. '3' → logprob: -18.875030517578125

Token 644: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '   ' → logprob: -17.750001907348633
    5. '0' → logprob: -17.875001907348633
    6. '-' → logprob: -18.250001907348633
    7. '3' → logprob: -18.687501907348633
    8. '```' → logprob: -19.250001907348633
    9. '１' → logprob: -19.562501907348633
    10. '4' → logprob: -20.250001907348633

Token 645: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2117939442396164
    2. '):' → logprob: -1.7117938995361328
    3. ')' → logprob: -5.586793899536133
    4. '   ' → logprob: -5.711793899536133
    5. '+' → logprob: -6.586793899536133
    6. ',' → logprob: -6.961793899536133
    7. ':' → logprob: -8.086793899536133
    8. ' +' → logprob: -8.461793899536133
    9. '):
' → logprob: -8.586793899536133
    10. '       ' → logprob: -9.961793899536133

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00533574353903532
    2. '   ' → logprob: -5.380335807800293
    3. ',' → logprob: -8.880335807800293
    4. ' dp' → logprob: -8.880335807800293
    5. 'dp' → logprob: -9.380335807800293
    6. ':' → logprob: -9.380335807800293
    7. '	' → logprob: -10.005335807800293
    8. '        
' → logprob: -10.255335807800293
    9. ' if' → logprob: -10.380335807800293
    10. '
' → logprob: -10.630335807800293

Token 647: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0064827799797058105
    2. ' dp' → logprob: -5.3814826011657715
    3. '   ' → logprob: -6.3814826011657715
    4. '       ' → logprob: -9.25648307800293
    5. 'if' → logprob: -10.38148307800293
    6. '	dp' → logprob: -10.38148307800293
    7. '(dp' → logprob: -12.63148307800293
    8. '```' → logprob: -13.13148307800293
    9. '_dp' → logprob: -13.63148307800293
    10. '#' (adapté à ' #') → logprob: -13.75648307800293

Token 648: ' Si' (ID: 7832)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003601974807679653
    2. ' dp' → logprob: -6.003602027893066
    3. '   ' → logprob: -7.128602027893066
    4. 'if' → logprob: -8.253602027893066
    5. 'for' → logprob: -10.628602027893066
    6. '       ' → logprob: -11.253602027893066
    7. '	dp' → logprob: -12.003602027893066
    8. '(dp' → logprob: -12.378602027893066
    9. '```' → logprob: -12.628602027893066
    10. '#' → logprob: -12.878602027893066

Token 649: ' un' (ID: 537)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.8615185022354126
    2. 'r' → logprob: -1.2365185022354126
    3. ' dp' → logprob: -1.8615185022354126
    4. 'dp' → logprob: -2.111518383026123
    5. ' i' → logprob: -4.986518383026123
    6. 'i' → logprob: -5.736518383026123
    7. '   ' → logprob: -8.486518859863281
    8. ' ' → logprob: -8.986518859863281
    9. ' ' → logprob: -10.736518859863281
    10. '    ' → logprob: -10.799018859863281

Token 650: ' saut' (ID: 111480)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5796195864677429
    2. ' ' → logprob: -1.9546196460723877
    3. ' i' → logprob: -2.5796196460723877
    4. 'i' → logprob: -2.7046196460723877
    5. 'dp' → logprob: -3.2046196460723877
    6. ' r' → logprob: -3.3296196460723877
    7. ' dp' → logprob: -4.079619407653809
    8. '+' → logprob: -4.204619407653809
    9. '   ' → logprob: -4.954619407653809
    10. ' +' → logprob: -5.454619407653809

Token 651: ' non' (ID: 2893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0555799007415771
    2. ' =' → logprob: -1.5555799007415771
    3. ' à' → logprob: -2.305579900741577
    4. '   ' → logprob: -2.555579900741577
    5. '[i' → logprob: -2.680579900741577
    6. '[' → logprob: -2.805579900741577
    7. ' possible' → logprob: -3.055579900741577
    8. 'possible' → logprob: -4.305580139160156
    9. 's' → logprob: -4.430580139160156
    10. ' i' → logprob: -4.805580139160156

Token 652: ' cons' (ID: 1473)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.33885371685028076
    2. 'cons' → logprob: -1.5888537168502808
    3. ' cons' → logprob: -2.9638538360595703
    4. 'adj' → logprob: -4.58885383605957
    5. '-' → logprob: -4.96385383605957
    6. ' immédi' → logprob: -5.58885383605957
    7. '_' → logprob: -5.96385383605957
    8. 'im' → logprob: -6.21385383605957
    9. '   ' → logprob: -6.71385383605957
    10. 'direct' → logprob: -6.96385383605957

Token 653: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0017643129685893655
    2. 'é' → logprob: -6.626764297485352
    3. 'éc' → logprob: -7.876764297485352
    4. 'ecut' → logprob: -9.876764297485352
    5. 'ec' → logprob: -13.001764297485352
    6. 'éci' → logprob: -13.751764297485352
    7. 'è' → logprob: -14.376764297485352
    8. 'e' → logprob: -14.751764297485352
    9. '{' → logprob: -14.876764297485352
    10. 'équ' → logprob: -15.126764297485352

Token 654: 'if' (ID: 366)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.24131087958812714
    2. 'if' → logprob: -1.6163108348846436
    3. '   ' → logprob: -5.366311073303223
    4. 'ive' → logprob: -5.366311073303223
    5. '_' → logprob: -6.741311073303223
    6. 'i' → logprob: -6.991311073303223
    7. 'ent' → logprob: -7.491311073303223
    8. '[i' → logprob: -7.741311073303223
    9. 'ueux' → logprob: -7.741311073303223
    10. 'e' → logprob: -7.866311073303223

Token 655: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.21099700033664703
    2. 'est' → logprob: -2.3359971046447754
    3. ' à' → logprob: -3.8359971046447754
    4. ' possible' → logprob: -4.085997104644775
    5. '   ' → logprob: -4.335997104644775
    6. '=' → logprob: -4.835997104644775
    7. 'possible' → logprob: -4.960997104644775
    8. ' ' → logprob: -5.210997104644775
    9. 'r' → logprob: -5.460997104644775
    10. ' =' → logprob: -5.835997104644775

Token 656: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.01440101396292448
    2. ' possible' → logprob: -4.264400959014893
    3. 'poss' → logprob: -8.63940143585205
    4. '_possible' → logprob: -10.51440143585205
    5. '   ' → logprob: -11.01440143585205
    6. '-' → logprob: -12.76440143585205
    7. 'Possible' → logprob: -13.26440143585205
    8. 'pos' → logprob: -13.38940143585205
    9. ' ' → logprob: -13.88940143585205
    10. '```' → logprob: -14.01440143585205

Token 657: ' vers' (ID: 3640)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5908966064453125
    2. '       ' → logprob: -1.3408966064453125
    3. ':
' → logprob: -2.3408966064453125
    4. '           ' → logprob: -3.3408966064453125
    5. ' and' → logprob: -3.9658966064453125
    6. ',' → logprob: -4.3408966064453125
    7. ' :' → logprob: -4.8408966064453125
    8. '   ' → logprob: -5.3408966064453125
    9. ' :
' → logprob: -5.7158966064453125
    10. ' if' → logprob: -5.9658966064453125

Token 658: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001339050941169262
    2. ' r' → logprob: -6.626338958740234
    3. 'i' → logprob: -11.501338958740234
    4. '   ' → logprob: -13.251338958740234
    5. ' i' → logprob: -14.376338958740234
    6. '
' → logprob: -15.126338958740234
    7. ')' → logprob: -16.751338958740234
    8. '	r' → logprob: -16.876338958740234
    9. '[r' → logprob: -17.001338958740234
    10. '       ' → logprob: -17.001338958740234

Token 659: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.047134305234067e-05
    2. '[' → logprob: -10.500030517578125
    3. '   ' → logprob: -13.625030517578125
    4. ' [' → logprob: -14.125030517578125
    5. 'i' → logprob: -15.125030517578125
    6. '[j' → logprob: -15.375030517578125
    7. '[r' → logprob: -15.750030517578125
    8. '[I' → logprob: -17.000030517578125
    9. '(i' → logprob: -17.125030517578125
    10. '       ' → logprob: -17.250030517578125

Token 660: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009942366741597652
    2. '[i' → logprob: -4.759942531585693
    3. ']:
' → logprob: -7.259942531585693
    4. ']:' → logprob: -8.509942054748535
    5. ' ]' → logprob: -8.884942054748535
    6. ']!=' → logprob: -9.134942054748535
    7. '   ' → logprob: -9.759942054748535
    8. '],' → logprob: -10.884942054748535
    9. '])' → logprob: -11.134942054748535
    10. '[' → logprob: -11.134942054748535

Token 661: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6823564171791077
    2. '           ' → logprob: -2.057356357574463
    3. 'if' → logprob: -2.057356357574463
    4. '       ' → logprob: -2.557356357574463
    5. 'dp' → logprob: -2.682356357574463
    6. ':' → logprob: -3.307356357574463
    7. ' dp' → logprob: -3.557356357574463
    8. '<|end|>' → logprob: -5.682356357574463
    9. '               ' → logprob: -5.932356357574463
    10. ' ' → logprob: -6.182356357574463

Token 662: ' addition' (ID: 5856)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10628646612167358
    2. ' if' → logprob: -2.8562865257263184
    3. 'dp' → logprob: -3.8562865257263184
    4. '   ' → logprob: -4.981286525726318
    5. '       ' → logprob: -4.981286525726318
    6. '           ' → logprob: -5.731286525726318
    7. 'continue' → logprob: -6.731286525726318
    8. 'for' → logprob: -6.856286525726318
    9. ' dp' → logprob: -6.981286525726318
    10. '+=' → logprob: -7.606286525726318

Token 663: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.05104091763496399
    2. 'e' → logprob: -3.8010408878326416
    3. '+=' → logprob: -3.8010408878326416
    4. ' +=' → logprob: -5.926041126251221
    5. 'n' → logprob: -7.676041126251221
    6. '=' → logprob: -7.676041126251221
    7. '   ' → logprob: -7.676041126251221
    8. 'ner' → logprob: -7.801041126251221
    9. '       ' → logprob: -8.551040649414062
    10. 'r' → logprob: -8.926040649414062

Token 664: ' le' (ID: 505)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.19562749564647675
    2. 'dp' → logprob: -2.070627450942993
    3. '       ' → logprob: -3.820627450942993
    4. ' =' → logprob: -4.570627689361572
    5. '   ' → logprob: -4.695627689361572
    6. '=' → logprob: -5.570627689361572
    7. '(dp' → logprob: -6.320627689361572
    8. ' +=' → logprob: -6.570627689361572
    9. '           ' → logprob: -6.945627689361572
    10. ',' → logprob: -7.820627689361572

Token 665: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07024384289979935
    2. ' dp' → logprob: -2.6952438354492188
    3. 'd' → logprob: -9.820243835449219
    4. '```' → logprob: -9.945243835449219
    5. 's' → logprob: -10.445243835449219
    6. 'val' → logprob: -10.570243835449219
    7. ' ' → logprob: -10.945243835449219
    8. 'es' → logprob: -11.070243835449219
    9. 'value' → logprob: -11.195243835449219
    10. '   ' → logprob: -11.445243835449219

Token 666: ' de' (ID: 334)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.040873408317566
    2. '   ' → logprob: -1.665873408317566
    3. 'dp' → logprob: -2.1658735275268555
    4. '[i' → logprob: -2.2908735275268555
    5. ' de' → logprob: -2.5408735275268555
    6. '       ' → logprob: -2.7908735275268555
    7. '[' → logprob: -3.2908735275268555
    8. ' d' → logprob: -3.6658735275268555
    9. '_dp' → logprob: -5.1658735275268555
    10. 'd' → logprob: -5.4158735275268555

Token 667: ' façons' (ID: 165958)
  Prédit: ' façons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.7153348922729492
    2. ' dp' → logprob: -1.2153348922729492
    3. ' ways' → logprob: -2.215334892272949
    4. 'dp' → logprob: -2.340334892272949
    5. 'ways' → logprob: -5.465334892272949
    6. ' man' → logprob: -5.715334892272949
    7. ' ' → logprob: -7.840334892272949
    8. 'fa' → logprob: -7.840334892272949
    9. ' fa' → logprob: -8.21533489227295
    10. 'man' → logprob: -8.96533489227295

Token 668: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2357254028320312
    2. '       ' → logprob: -1.2357254028320312
    3. ' de' → logprob: -1.3607254028320312
    4. 'dp' → logprob: -3.1107254028320312
    5. ' dp' → logprob: -3.3607254028320312
    6. ' d' → logprob: -3.7357254028320312
    7. ' à' → logprob: -4.110725402832031
    8. '[i' → logprob: -4.110725402832031
    9. 'r' → logprob: -4.985725402832031
    10. 'd' → logprob: -5.360725402832031

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6054840087890625
    2. '[i' → logprob: -0.8554840087890625
    3. ' à' → logprob: -4.9804840087890625
    4. '[' → logprob: -5.1054840087890625
    5. '   ' → logprob: -5.2304840087890625
    6. ' to' → logprob: -5.6054840087890625
    7. '           ' → logprob: -5.9804840087890625
    8. ' if' → logprob: -7.4804840087890625
    9. '[next' → logprob: -7.6054840087890625
    10. '[r' → logprob: -7.7304840087890625

Token 670: ' if' (ID: 538)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.338064432144165
    2. '   ' → logprob: -1.463064432144165
    3. '       ' → logprob: -1.963064432144165
    4. 'if' (adapté à ' if') → logprob: -2.213064432144165
    5. ' if' → logprob: -2.713064432144165
    6. ':' → logprob: -3.338064432144165
    7. 'dp' → logprob: -3.338064432144165
    8. '[' → logprob: -3.963064432144165
    9. ' =' → logprob: -4.088064193725586
    10. ' dp' → logprob: -4.213064193725586

Token 671: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3132757246494293
    2. 'r' → logprob: -1.313275694847107
    3. ' i' → logprob: -12.063275337219238
    4. 'i' → logprob: -12.313275337219238
    5. ' ' → logprob: -13.688275337219238
    6. ' ' → logprob: -14.188275337219238
    7. '   ' → logprob: -14.313275337219238
    8. '(r' → logprob: -15.375775337219238
    9. 's' → logprob: -15.563275337219238
    10. '_r' → logprob: -15.750775337219238

Token 672: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1398757123970427e-05
    2. '[r' → logprob: -11.500011444091797
    3. '[' → logprob: -14.125011444091797
    4. ' [' → logprob: -14.875011444091797
    5. 'i' → logprob: -17.000011444091797
    6. 'r' → logprob: -17.125011444091797
    7. '[I' → logprob: -17.125011444091797
    8. '[
' → logprob: -17.875011444091797
    9. '   ' → logprob: -18.125011444091797
    10. '```' → logprob: -19.125011444091797

Token 673: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.053124893456697464
    2. '[i' → logprob: -3.0531249046325684
    3. ']!=' → logprob: -5.678124904632568
    4. '!=' → logprob: -7.053124904632568
    5. '!=-' → logprob: -9.55312442779541
    6. ' !=' → logprob: -9.55312442779541
    7. '   ' → logprob: -10.17812442779541
    8. ' ]' → logprob: -10.92812442779541
    9. '[' → logprob: -10.92812442779541
    10. ')' → logprob: -12.17812442779541

Token 674: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.016330884769558907
    2. ' !=' → logprob: -4.266330718994141
    3. '!=-' → logprob: -6.141330718994141
    4. ']!=' → logprob: -12.39133071899414
    5. '>' → logprob: -12.64133071899414
    6. '>=' → logprob: -13.64133071899414
    7. ')!=' → logprob: -14.26633071899414
    8. '=' → logprob: -14.39133071899414
    9. '[i' → logprob: -14.51633071899414
    10. '==' → logprob: -14.51633071899414

Token 675: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.941850526549388e-06
    2. ' -' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.37500762939453
    4. ' ' → logprob: -22.62500762939453
    5. '−' → logprob: -23.25000762939453
    6. '```' → logprob: -23.75000762939453
    7. '  ' → logprob: -24.25000762939453
    8. '	' → logprob: -24.50000762939453
    9. '-i' → logprob: -25.00000762939453
    10. '-
' → logprob: -25.12500762939453

Token 676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.875000953674316
    3. '```' → logprob: -15.125000953674316
    4. '   ' → logprob: -15.250000953674316
    5. '-' → logprob: -15.500000953674316
    6. '<|end|>' → logprob: -17.000001907348633
    7. '2' → logprob: -17.437501907348633
    8. '  ' → logprob: -17.937501907348633
    9. '`' → logprob: -18.187501907348633
    10. '           ' → logprob: -18.375001907348633

Token 677: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5765852928161621
    2. ':
' → logprob: -0.8265852928161621
    3. '           ' → logprob: -7.576585292816162
    4. ' and' → logprob: -9.32658576965332
    5. '):
' → logprob: -11.45158576965332
    6. ':
' → logprob: -11.70158576965332
    7. ' :
' → logprob: -11.82658576965332
    8. 'and' → logprob: -12.32658576965332
    9. '       ' → logprob: -12.45158576965332
    10. ' :' → logprob: -12.95158576965332

Token 678: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10147030651569366
    2. ':' → logprob: -2.8514702320098877
    3. ' dp' → logprob: -4.226470470428467
    4. '       ' → logprob: -4.601470470428467
    5. 'dp' → logprob: -4.976470470428467
    6. ':
' → logprob: -5.226470470428467
    7. '               ' → logprob: -7.476470470428467
    8. '(dp' → logprob: -7.476470470428467
    9. '	dp' → logprob: -8.851469993591309
    10. '```' → logprob: -8.976469993591309

Token 679: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0017422933597117662
    2. ' dp' → logprob: -6.501742362976074
    3. '           ' → logprob: -8.876742362976074
    4. '(dp' → logprob: -9.251742362976074
    5. '               ' → logprob: -12.501742362976074
    6. '	dp' → logprob: -14.501742362976074
    7. '_dp' → logprob: -17.001741409301758
    8. '(' → logprob: -17.001741409301758
    9. '   ' → logprob: -17.626741409301758
    10. 'd' → logprob: -18.376741409301758

Token 680: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.03255043551325798
    2. '[i' → logprob: -3.53255033493042
    3. '[' → logprob: -5.90755033493042
    4. 'r' → logprob: -9.782550811767578
    5. ' [' → logprob: -11.782550811767578
    6. '[j' → logprob: -12.282550811767578
    7. 'i' → logprob: -13.282550811767578
    8. ' r' → logprob: -13.782550811767578
    9. '   ' → logprob: -13.782550811767578
    10. ']' → logprob: -13.782550811767578

Token 681: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003618024929892272
    2. '[' → logprob: -8.125361442565918
    3. ']' → logprob: -10.625361442565918
    4. '][' → logprob: -11.125361442565918
    5. ' [' → logprob: -11.250361442565918
    6. '[r' → logprob: -12.250361442565918
    7. 'i' → logprob: -12.500361442565918
    8. '   ' → logprob: -13.750361442565918
    9. '```' → logprob: -14.125361442565918
    10. '[I' → logprob: -14.500361442565918

Token 682: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01866442710161209
    2. '[i' → logprob: -4.018664360046387
    3. ']]' → logprob: -8.268664360046387
    4. ']+' → logprob: -8.518664360046387
    5. '   ' → logprob: -11.143664360046387
    6. ']+=' → logprob: -11.268664360046387
    7. 'i' → logprob: -11.393664360046387
    8. ' ]' → logprob: -12.143664360046387
    9. '[' → logprob: -12.393664360046387
    10. '       ' → logprob: -12.768664360046387

Token 683: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.056397635489702225
    2. '+=' → logprob: -3.0563976764678955
    3. ' =' → logprob: -4.931397438049316
    4. ' +=' → logprob: -7.556397438049316
    5. ']+=' → logprob: -10.556397438049316
    6. ']' → logprob: -11.931397438049316
    7. '=(' → logprob: -12.431397438049316
    8. '   ' → logprob: -13.306397438049316
    9. '+' → logprob: -14.181397438049316
    10. '(' → logprob: -14.306397438049316

Token 684: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003180094063282013
    2. ' dp' → logprob: -5.753180027008057
    3. '(dp' → logprob: -13.253180503845215
    4. '	dp' → logprob: -14.503180503845215
    5. '   ' → logprob: -16.1281795501709
    6. 'd' → logprob: -17.2531795501709
    7. '_dp' → logprob: -17.6281795501709
    8. 'df' → logprob: -19.0031795501709
    9. '           ' → logprob: -19.1281795501709
    10. '       ' → logprob: -19.5031795501709

Token 685: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.034479640424251556
    2. 'i' → logprob: -3.4094796180725098
    3. '[' → logprob: -7.15947961807251
    4. ' i' → logprob: -9.909480094909668
    5. ' [' → logprob: -13.284480094909668
    6. '   ' → logprob: -13.534480094909668
    7. '[
' → logprob: -13.909480094909668
    8. '[r' → logprob: -14.159480094909668
    9. '	i' → logprob: -14.784480094909668
    10. 'r' → logprob: -14.784480094909668

Token 686: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004630816401913762
    2. ' ]' → logprob: -7.750463008880615
    3. ']
' → logprob: -10.625463485717773
    4. ']%' → logprob: -12.125463485717773
    5. ')' → logprob: -14.000463485717773
    6. '[i' → logprob: -14.875463485717773
    7. '   ' → logprob: -15.000463485717773
    8. '[' → logprob: -15.125463485717773
    9. '           ' → logprob: -16.000463485717773
    10. ' ]
' → logprob: -16.125463485717773

Token 687: '           ' (ID: 352)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03818390145897865
    2. '%' → logprob: -3.2881839275360107
    3. '           ' → logprob: -9.28818416595459
    4. '
' → logprob: -10.41318416595459
    5. '%d' → logprob: -12.28818416595459
    6. ' %=' → logprob: -12.41318416595459
    7. '%i' → logprob: -12.41318416595459
    8. '%n' → logprob: -13.16318416595459
    9. '%c' → logprob: -14.28818416595459
    10. '       ' → logprob: -14.53818416595459

Token 688: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.2708163261413574
    2. ' %' → logprob: -1.7708163261413574
    3. 'dp' (adapté à ' dp') → logprob: -3.0208163261413574
    4. '%' → logprob: -4.520816326141357
    5. ' %=' → logprob: -5.020816326141357
    6. '(dp' → logprob: -7.895816326141357
    7. ')' → logprob: -9.145816802978516
    8. '1' → logprob: -9.770816802978516
    9. '```' → logprob: -10.145816802978516
    10. '%d' → logprob: -10.520816802978516

Token 689: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0012222514487802982
    2. '[i' → logprob: -6.751222133636475
    3. '[' → logprob: -9.876222610473633
    4. 'r' → logprob: -14.251222610473633
    5. '	r' → logprob: -17.876222610473633
    6. '[j' → logprob: -18.751222610473633
    7. '```' → logprob: -18.876222610473633
    8. '[
' → logprob: -19.376222610473633
    9. '[v' → logprob: -19.501222610473633
    10. '[u' → logprob: -19.751222610473633

Token 690: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2007883671903983e-05
    2. '[' → logprob: -11.500021934509277
    3. 'i' → logprob: -11.750021934509277
    4. '[r' → logprob: -12.625021934509277
    5. ']' → logprob: -15.000021934509277
    6. ' i' → logprob: -16.000022888183594
    7. '[I' → logprob: -16.875022888183594
    8. '[
' → logprob: -17.125022888183594
    9. '```' → logprob: -17.375022888183594
    10. '{i' → logprob: -17.375022888183594

Token 691: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00048107770271599293
    2. '[i' → logprob: -7.750481128692627
    3. ']%' → logprob: -10.500480651855469
    4. ']]' → logprob: -10.875480651855469
    5. ' ]' → logprob: -13.000480651855469
    6. '   ' → logprob: -13.750480651855469
    7. 'i' → logprob: -16.00048065185547
    8. '%' → logprob: -16.37548065185547
    9. ']
' → logprob: -16.87548065185547
    10. '"]' → logprob: -17.12548065185547

Token 692: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.6950317025184631
    2. '%' → logprob: -0.9450317025184631
    3. ' %=' → logprob: -2.1950316429138184
    4. ' %' → logprob: -7.195031642913818
    5. '=' → logprob: -9.945032119750977
    6. '```' → logprob: -10.445032119750977
    7. '   ' → logprob: -10.695032119750977
    8. ')' → logprob: -10.945032119750977
    9. ' ' → logprob: -11.320032119750977
    10. '%i' → logprob: -11.695032119750977

Token 693: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.5491004129871726e-05
    2. ' MOD' → logprob: -10.000045776367188
    3. '_MOD' → logprob: -19.000045776367188
    4. 'MO' → logprob: -20.000045776367188
    5. 'MD' → logprob: -20.375045776367188
    6. '   ' → logprob: -20.500045776367188
    7. '.MOD' → logprob: -22.000045776367188
    8. 'mod' → logprob: -22.750045776367188
    9. 'M' → logprob: -22.750045776367188
    10. 'MODE' → logprob: -22.875045776367188

Token 694: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1522972583770752
    2. '<|end|>' → logprob: -2.152297258377075
    3. '\n' → logprob: -4.527297019958496
    4. '
' → logprob: -5.027297019958496
    5. '   ' → logprob: -6.152297019958496
    6. '        
' → logprob: -7.027297019958496
    7. '<|end|>' → logprob: -7.152297019958496
    8. '    
' → logprob: -7.277297019958496
    9. '\' → logprob: -7.402297019958496
    10. '[' → logprob: -7.652297019958496

Token 695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007027342449873686
    2. '
' → logprob: -5.1320271492004395
    3. '        
' → logprob: -7.7570271492004395
    4. '   ' → logprob: -9.007027626037598
    5. '<|end|>' → logprob: -9.132027626037598
    6. '    
' → logprob: -9.257027626037598
    7. '  
' → logprob: -9.882027626037598
    8. '           ' → logprob: -9.882027626037598
    9. 'dp' → logprob: -10.007027626037598
    10. ' 
' → logprob: -10.507027626037598

Token 696: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15649697184562683
    2. '       ' → logprob: -2.406497001647949
    3. ' dp' → logprob: -3.031497001647949
    4. '   ' → logprob: -5.156497001647949
    5. '	dp' → logprob: -7.531497001647949
    6. '(dp' → logprob: -9.53149700164795
    7. '_dp' → logprob: -10.65649700164795
    8. '```' → logprob: -11.28149700164795
    9. 'if' → logprob: -11.40649700164795
    10. '           ' → logprob: -11.40649700164795

Token 697: ' Aj' (ID: 28294)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0021788119338452816
    2. 'if' → logprob: -6.25217866897583
    3. '       ' → logprob: -9.252179145812988
    4. '   ' → logprob: -9.377179145812988
    5. ' dp' → logprob: -10.377179145812988
    6. '#' → logprob: -11.002179145812988
    7. 'for' → logprob: -12.002179145812988
    8. '           ' → logprob: -12.252179145812988
    9. '```' → logprob: -13.127179145812988
    10. '(dp' → logprob: -13.377179145812988

Token 698: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.03848963975906372
    2. 'outer' → logprob: -4.038489818572998
    3. 'out' → logprob: -4.038489818572998
    4. 'outez' → logprob: -6.038489818572998
    5. 'dp' → logprob: -9.53848934173584
    6. 'outes' → logprob: -10.03848934173584
    7. '   ' → logprob: -12.78848934173584
    8. 'd' → logprob: -13.03848934173584
    9. 'outi' → logprob: -14.91348934173584
    10. '       ' → logprob: -14.91348934173584

Token 699: ' le' (ID: 505)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.09858080744743347
    2. 'dp' → logprob: -2.598580837249756
    3. '   ' → logprob: -4.223580837249756
    4. '(dp' → logprob: -5.598580837249756
    5. '1' → logprob: -8.598580360412598
    6. '    ' → logprob: -8.973580360412598
    7. ' +=' → logprob: -8.973580360412598
    8. ' ' → logprob: -9.098580360412598
    9. 'i' → logprob: -9.473580360412598
    10. ' =' → logprob: -9.848580360412598

Token 700: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02497662790119648
    2. ' dp' → logprob: -3.7749767303466797
    3. 'i' → logprob: -7.89997673034668
    4. ' code' → logprob: -7.89997673034668
    5. 'next' → logprob: -8.52497673034668
    6. ' next' → logprob: -8.64997673034668
    7. '   ' → logprob: -9.27497673034668
    8. '(dp' → logprob: -9.27497673034668
    9. '1' → logprob: -9.77497673034668
    10. 'code' → logprob: -10.02497673034668

Token 701: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3173992931842804
    2. ' dp' → logprob: -2.067399263381958
    3. '       ' → logprob: -2.692399263381958
    4. 'dp' → logprob: -3.192399263381958
    5. '   ' → logprob: -3.692399263381958
    6. 'de' → logprob: -5.442399501800537
    7. '[i' → logprob: -6.442399501800537
    8. '[' → logprob: -6.442399501800537
    9. '    ' → logprob: -6.692399501800537
    10. '(dp' → logprob: -7.567399501800537

Token 702: ' façons' (ID: 165958)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06827525049448013
    2. ' dp' → logprob: -2.943275213241577
    3. '(dp' → logprob: -5.693275451660156
    4. '(i' → logprob: -5.693275451660156
    5. ' ways' → logprob: -6.068275451660156
    6. '1' → logprob: -6.818275451660156
    7. ' (' → logprob: -7.068275451660156
    8. '[i' → logprob: -7.568275451660156
    9. '(' → logprob: -7.568275451660156
    10. 'i' → logprob: -7.693275451660156

Token 703: ' d' (ID: 272)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.24933770298957825
    2. 'dp' → logprob: -1.7493376731872559
    3. ' à' → logprob: -3.374337673187256
    4. '   ' → logprob: -5.624337673187256
    5. '       ' → logprob: -5.624337673187256
    6. ' to' → logprob: -6.374337673187256
    7. '[i' → logprob: -6.999337673187256
    8. ' au' → logprob: -7.124337673187256
    9. ' de' → logprob: -7.249337673187256
    10. '[' → logprob: -7.624337673187256

Token 704: ''arr' (ID: 49695)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008484556339681149
    2. ' i' → logprob: -5.258484363555908
    3. 'i' → logprob: -6.258484363555908
    4. '[' → logprob: -7.508484363555908
    5. '   ' → logprob: -7.508484363555908
    6. '(i' → logprob: -9.258484840393066
    7. ' [' → logprob: -10.258484840393066
    8. 'dp' → logprob: -10.383484840393066
    9. '       ' → logprob: -11.258484840393066
    10. ' dp' → logprob: -11.883484840393066

Token 705: 'iver' (ID: 1788)
  Prédit: 'iver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iver' → logprob: -0.01790594682097435
    2. 'iv' → logprob: -5.0179057121276855
    3. '[i' → logprob: -5.2679057121276855
    4. 'ive' → logprob: -6.3929057121276855
    5. 'i' → logprob: -6.7679057121276855
    6. '[' → logprob: -6.8929057121276855
    7. 'ivée' → logprob: -7.7679057121276855
    8. '   ' → logprob: -8.517906188964844
    9. '#' → logprob: -8.642906188964844
    10. '_' → logprob: -8.767906188964844

Token 706: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.15464594960212708
    2. '[i' → logprob: -2.1546459197998047
    3. ' au' → logprob: -4.154645919799805
    4. ' i' → logprob: -5.529645919799805
    5. 'à' → logprob: -6.154645919799805
    6. '   ' → logprob: -6.404645919799805
    7. '[' → logprob: -6.654645919799805
    8. '       ' → logprob: -7.154645919799805
    9. 'i' → logprob: -7.154645919799805
    10. ' dp' → logprob: -8.154645919799805

Token 707: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07418874651193619
    2. ' i' → logprob: -3.074188709259033
    3. '[i' → logprob: -3.949188709259033
    4. 'dp' → logprob: -5.449188709259033
    5. 'l' → logprob: -7.324188709259033
    6. '   ' → logprob: -7.824188709259033
    7. ' dp' → logprob: -8.074189186096191
    8. ' la' → logprob: -9.324189186096191
    9. 'la' → logprob: -9.824189186096191
    10. ' ' → logprob: -10.324189186096191

Token 708: ' pour' (ID: 1930)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7282225489616394
    2. 'dp' → logprob: -0.7282225489616394
    3. '       ' → logprob: -4.228222370147705
    4. '   ' → logprob: -4.853222370147705
    5. ' dp' → logprob: -5.228222370147705
    6. 'i' → logprob: -6.103222370147705
    7. 'to' → logprob: -6.228222370147705
    8. '[' → logprob: -6.853222370147705
    9. ' to' → logprob: -7.478222370147705
    10. '
' → logprob: -8.478222846984863

Token 709: ' arriver' (ID: 78302)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.26037222146987915
    2. 'i' → logprob: -1.7603721618652344
    3. ' dp' → logprob: -3.1353721618652344
    4. ' i' → logprob: -4.510372161865234
    5. '[i' → logprob: -6.760372161865234
    6. 'le' → logprob: -7.260372161865234
    7. 'la' → logprob: -8.260372161865234
    8. '   ' → logprob: -8.760372161865234
    9. 'l' → logprob: -9.010372161865234
    10. ' la' → logprob: -9.885372161865234

Token 710: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1525842696428299
    2. ' i' → logprob: -3.0275843143463135
    3. '[i' → logprob: -3.1525843143463135
    4. 'i' → logprob: -3.9025843143463135
    5. 'à' → logprob: -4.027584075927734
    6. ' au' → logprob: -4.652584075927734
    7. '   ' → logprob: -7.027584075927734
    8. 'au' → logprob: -7.527584075927734
    9. '[' → logprob: -7.652584075927734
    10. ' a' → logprob: -9.277584075927734

Token 711: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009863656014204025
    2. ' i' → logprob: -7.000986576080322
    3. '   ' → logprob: -10.250986099243164
    4. '[i' → logprob: -10.625986099243164
    5. '(i' → logprob: -11.250986099243164
    6. 'the' → logprob: -14.500986099243164
    7. '```' → logprob: -14.500986099243164
    8. ' (' → logprob: -15.250986099243164
    9. '    ' → logprob: -15.500986099243164
    10. '`' → logprob: -15.625986099243164

Token 712: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07890179008245468
    2. ' +' → logprob: -2.578901767730713
    3. '   ' → logprob: -11.703902244567871
    4. ' plus' → logprob: -13.453902244567871
    5. '+i' → logprob: -13.953902244567871
    6. '[' → logprob: -14.328902244567871
    7. ' +=' → logprob: -15.078902244567871
    8. '+
' → logprob: -16.078901290893555
    9. 'plus' → logprob: -16.078901290893555
    10. '[i' → logprob: -16.203901290893555

Token 713: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -17.000295639038086
    4. '```' → logprob: -17.875295639038086
    5. ' ' → logprob: -19.000295639038086
    6. '+' → logprob: -19.250295639038086
    7. '  ' → logprob: -19.875295639038086
    8. '
' → logprob: -20.500295639038086
    9. '[' → logprob: -20.750295639038086
    10. '`' → logprob: -20.875295639038086

Token 714: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.625027656555176
    3. '   ' → logprob: -13.250027656555176
    4. '+' → logprob: -14.000027656555176
    5. '```' → logprob: -14.000027656555176
    6. '
' → logprob: -16.375028610229492
    7. '`' → logprob: -17.250028610229492
    8. 'i' → logprob: -17.750028610229492
    9. '  ' → logprob: -18.187528610229492
    10. '[' → logprob: -18.500028610229492

Token 715: ' (' (ID: 350)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6107599139213562
    2. 'dp' → logprob: -1.110759973526001
    3. '       ' → logprob: -2.360759973526001
    4. '   ' → logprob: -3.985759973526001
    5. '(dp' → logprob: -5.485759735107422
    6. '    
' → logprob: -6.110759735107422
    7. '
' → logprob: -6.235759735107422
    8. '	dp' → logprob: -6.360759735107422
    9. '[' → logprob: -6.735759735107422
    10. '        
' → logprob: -7.485759735107422

Token 716: 'pro' (ID: 823)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18059900403022766
    2. ' )' → logprob: -2.5555989742279053
    3. ' dp' → logprob: -3.0555989742279053
    4. 'dp' → logprob: -4.180599212646484
    5. ' i' → logprob: -4.430599212646484
    6. ')
' → logprob: -5.430599212646484
    7. ' )
' → logprob: -5.930599212646484
    8. 'i' → logprob: -6.180599212646484
    9. '       ' → logprob: -6.805599212646484
    10. '+' → logprob: -7.180599212646484

Token 717: 'chain' (ID: 13289)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03403407335281372
    2. ' +' → logprob: -3.784034013748169
    3. ')' → logprob: -5.534034252166748
    4. 'u' → logprob: -5.909034252166748
    5. ' )' → logprob: -6.409034252166748
    6. '   ' → logprob: -7.284034252166748
    7. '+)' → logprob: -7.909034252166748
    8. '```' → logprob: -8.40903377532959
    9. ' +=' → logprob: -9.15903377532959
    10. ' ' → logprob: -9.15903377532959

Token 718: ' élément' (ID: 99627)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30662602186203003
    2. ' )' → logprob: -1.5566260814666748
    3. ' token' → logprob: -4.181625843048096
    4. ' +' → logprob: -4.306625843048096
    5. '+' → logprob: -4.931625843048096
    6. '[i' → logprob: -5.556625843048096
    7. 'token' → logprob: -6.181625843048096
    8. ']' → logprob: -6.181625843048096
    9. '```' → logprob: -6.181625843048096
    10. ' ]' → logprob: -6.431625843048096

Token 719: ' cons' (ID: 1473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7589932084083557
    2. ' +' → logprob: -0.7589932084083557
    3. '+' → logprob: -2.883993148803711
    4. ' )' → logprob: -5.133993148803711
    5. '   ' → logprob: -7.633993148803711
    6. '[i' → logprob: -7.758993148803711
    7. ')+' → logprob: -8.383993148803711
    8. ')
' → logprob: -8.758993148803711
    9. ' ' → logprob: -9.383993148803711
    10. ' +=' → logprob: -9.508993148803711

Token 720: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.021421726793050766
    2. 'éc' → logprob: -4.771421909332275
    3. 'ecut' → logprob: -5.396421909332275
    4. '+' → logprob: -6.021421909332275
    5. '   ' → logprob: -6.646421909332275
    6. 'é' → logprob: -7.146421909332275
    7. ')' → logprob: -7.896421909332275
    8. 'ect' → logprob: -7.896421909332275
    9. 'è' → logprob: -8.021421432495117
    10. 'u' → logprob: -8.021421432495117

Token 721: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6134185791015625
    2. ')' → logprob: -1.7384185791015625
    3. 'u' → logprob: -1.9884185791015625
    4. 'ive' → logprob: -3.2384185791015625
    5. '+' → logprob: -3.6134185791015625
    6. 'i' → logprob: -4.2384185791015625
    7. ' )' → logprob: -4.6134185791015625
    8. '```' → logprob: -4.7384185791015625
    9. 'e' → logprob: -4.9884185791015625
    10. 'ut' → logprob: -5.1134185791015625

Token 722: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028562448918819427
    2. ')
' → logprob: -3.653562545776367
    3. ' )' → logprob: -6.778562545776367
    4. '       ' → logprob: -7.278562545776367
    5. ' )
' → logprob: -8.903562545776367
    6. '):
' → logprob: -9.278562545776367
    7. '```' → logprob: -10.028562545776367
    8. '   ' → logprob: -10.028562545776367
    9. ')

' → logprob: -11.028562545776367
    10. '[' → logprob: -11.153562545776367

Token 723: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7500002980232239
    2. ' dp' → logprob: -1.375000238418579
    3. '[i' → logprob: -2.125000238418579
    4. '   ' → logprob: -2.875000238418579
    5. '[' → logprob: -3.125000238418579
    6. '       ' → logprob: -3.500000238418579
    7. '(dp' → logprob: -4.500000476837158
    8. '    
' → logprob: -5.875000476837158
    9. '```' → logprob: -6.250000476837158
    10. '  
' → logprob: -6.500000476837158

Token 724: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.25229114294052124
    2. 'dp' (adapté à ' dp') → logprob: -1.502291202545166
    3. '   ' → logprob: -8.127290725708008
    4. '       ' → logprob: -10.127290725708008
    5. '	dp' → logprob: -11.877290725708008
    6. '(dp' → logprob: -12.127290725708008
    7. '[' → logprob: -12.377290725708008
    8. '```' → logprob: -12.752290725708008
    9. 'i' → logprob: -13.252290725708008
    10. ' i' → logprob: -13.377290725708008

Token 725: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -12.500006675720215
    3. 'i' → logprob: -12.750006675720215
    4. ' [' → logprob: -15.875006675720215
    5. '   ' → logprob: -16.62500762939453
    6. '\[' → logprob: -17.75000762939453
    7. '[I' → logprob: -17.87500762939453
    8. '[
' → logprob: -18.25000762939453
    9. '[++' → logprob: -18.37500762939453
    10. ' i' → logprob: -18.37500762939453

Token 726: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04872804880142212
    2. ' +' → logprob: -3.0487279891967773
    3. ']' → logprob: -8.923727989196777
    4. ']+' → logprob: -12.798727989196777
    5. '   ' → logprob: -12.798727989196777
    6. '+i' → logprob: -13.923727989196777
    7. '+]' → logprob: -14.673727989196777
    8. '1' → logprob: -16.298728942871094
    9. '+
' → logprob: -16.423728942871094
    10. ' ' → logprob: -16.423728942871094

Token 727: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006020034197717905
    2. ' ' → logprob: -8.125601768493652
    3. ']' → logprob: -8.125601768493652
    4. ' ]' → logprob: -12.375601768493652
    5. '+' → logprob: -12.875601768493652
    6. ')' → logprob: -13.500601768493652
    7. ']+=' → logprob: -14.250601768493652
    8. ']+' → logprob: -14.375601768493652
    9. '```' → logprob: -15.750601768493652
    10. '   ' → logprob: -16.12560272216797

Token 728: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. ']' → logprob: -15.750001907348633
    4. '```' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.250001907348633
    6. ')' → logprob: -17.875001907348633
    7. '
' → logprob: -18.125001907348633
    8. '`' → logprob: -19.000001907348633
    9. ']+=' → logprob: -19.062501907348633
    10. '  ' → logprob: -19.437501907348633

Token 729: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16177767515182495
    2. ']+=' → logprob: -1.9117777347564697
    3. ' +=' → logprob: -7.036777496337891
    4. ' ]' → logprob: -7.661777496337891
    5. '+=' → logprob: -8.53677749633789
    6. ')' → logprob: -13.16177749633789
    7. '    ' → logprob: -13.28677749633789
    8. '   ' → logprob: -13.28677749633789
    9. ']+' → logprob: -14.78677749633789
    10. '']' → logprob: -15.28677749633789

Token 730: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0015051016816869378
    2. ' +=' → logprob: -6.501504898071289
    3. '=' → logprob: -13.626504898071289
    4. ']+=' → logprob: -13.626504898071289
    5. '+=(' → logprob: -15.376504898071289
    6. '   ' → logprob: -16.37650489807129
    7. '       ' → logprob: -18.87650489807129
    8. ' =' → logprob: -19.00150489807129
    9. '%=' → logprob: -19.00150489807129
    10. '    ' → logprob: -19.50150489807129

Token 731: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007099286303855479
    2. ' dp' → logprob: -7.2507100105285645
    3. '	dp' → logprob: -17.875709533691406
    4. '   ' → logprob: -19.000709533691406
    5. '(dp' → logprob: -19.000709533691406
    6. '_dp' → logprob: -20.750709533691406
    7. 'd' → logprob: -21.500709533691406
    8. ' ' → logprob: -21.750709533691406
    9. 'df' → logprob: -22.375709533691406
    10. 'dc' → logprob: -22.750709533691406

Token 732: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00022320532298181206
    2. 'i' → logprob: -8.500223159790039
    3. '[' → logprob: -10.875223159790039
    4. ' i' → logprob: -14.500223159790039
    5. '```' → logprob: -16.00022315979004
    6. '(i' → logprob: -16.75022315979004
    7. '[
' → logprob: -17.12522315979004
    8. ' [' → logprob: -17.37522315979004
    9. '`' → logprob: -18.37522315979004
    10. '
' → logprob: -20.12522315979004

Token 733: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.9110831022262573
    2. ')' → logprob: -1.1610831022262573
    3. ']' → logprob: -1.6610831022262573
    4. ')
' → logprob: -2.411083221435547
    5. ']%' → logprob: -6.286083221435547
    6. ')%' → logprob: -6.536083221435547
    7. '<|end|>' → logprob: -7.286083221435547
    8. '%' → logprob: -8.286083221435547
    9. '   ' → logprob: -8.661083221435547
    10. ' ]' → logprob: -8.911083221435547

Token 734: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0626184493303299
    2. '%' → logprob: -3.1876184940338135
    3. '```' → logprob: -4.312618255615234
    4. '       ' → logprob: -6.562618255615234
    5. '%=' → logprob: -6.812618255615234
    6. ' %=' → logprob: -6.937618255615234
    7. '<|end|>' → logprob: -7.187618255615234
    8. ' %' → logprob: -7.437618255615234
    9. '   ' → logprob: -7.687618255615234
    10. '[' → logprob: -8.937618255615234

Token 735: ' dp' (ID: 21546)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.6667401194572449
    2. '%=' → logprob: -0.9167401194572449
    3. '=' → logprob: -2.5417401790618896
    4. '%' → logprob: -5.0417399406433105
    5. ' %' → logprob: -8.041740417480469
    6. '```' → logprob: -8.041740417480469
    7. ' =' → logprob: -8.666740417480469
    8. ' dp' → logprob: -8.791740417480469
    9. '   ' → logprob: -9.041740417480469
    10. '       ' → logprob: -9.166740417480469

Token 736: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008067715098150074
    2. '[' → logprob: -7.12580680847168
    3. '[(' → logprob: -13.50080680847168
    4. 'i' → logprob: -14.50080680847168
    5. '[I' → logprob: -16.12580680847168
    6. '(i' → logprob: -16.25080680847168
    7. '[
' → logprob: -16.50080680847168
    8. '```' → logprob: -17.00080680847168
    9. '[next' → logprob: -17.62580680847168
    10. '{i' → logprob: -17.62580680847168

Token 737: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3136315643787384
    2. ' +' → logprob: -1.313631534576416
    3. '[' → logprob: -8.563632011413574
    4. '[i' → logprob: -8.688632011413574
    5. ']' → logprob: -12.313632011413574
    6. '+i' → logprob: -12.688632011413574
    7. '   ' → logprob: -14.563632011413574
    8. '[next' → logprob: -14.688632011413574
    9. '＋' → logprob: -15.188632011413574
    10. ']+' → logprob: -15.188632011413574

Token 738: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.750109672546387
    4. '```' → logprob: -17.00010871887207
    5. '
' → logprob: -18.56260871887207
    6. '+' → logprob: -18.56260871887207
    7. '  ' → logprob: -18.68760871887207
    8. '     ' → logprob: -18.87510871887207
    9. ')' → logprob: -18.93760871887207
    10. '    ' → logprob: -19.00010871887207

Token 739: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.87500286102295
    4. '```' → logprob: -16.625003814697266
    5. '2' → logprob: -17.750003814697266
    6. '
' → logprob: -17.812503814697266
    7. '+' → logprob: -17.937503814697266
    8. '１' → logprob: -19.125003814697266
    9. '' → logprob: -19.187503814697266
    10. '       ' → logprob: -19.375003814697266

Token 740: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0564331205387134e-05
    2. ' ]' → logprob: -11.62501049041748
    3. ']%' → logprob: -13.50001049041748
    4. ')' → logprob: -16.625011444091797
    5. '   ' → logprob: -17.500011444091797
    6. '']' → logprob: -17.625011444091797
    7. ']+=' → logprob: -17.875011444091797
    8. '```' → logprob: -18.750011444091797
    9. ' %=' → logprob: -18.875011444091797
    10. '"]' → logprob: -19.000011444091797

Token 741: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.023280886933207512
    2. ' %=' → logprob: -3.7732808589935303
    3. '%' → logprob: -10.27328109741211
    4. '=' → logprob: -14.52328109741211
    5. ')%' → logprob: -15.89828109741211
    6. '	' → logprob: -16.89828109741211
    7. '   ' → logprob: -17.02328109741211
    8. ' %' → logprob: -17.64828109741211
    9. ')' → logprob: -17.77328109741211
    10. ' ' → logprob: -17.89828109741211

Token 742: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.006715370807796717
    2. ' MOD' → logprob: -5.006715297698975
    3. '_MOD' → logprob: -17.006715774536133
    4. '   ' → logprob: -19.256715774536133
    5. '.MOD' → logprob: -20.256715774536133
    6. 'MO' → logprob: -20.756715774536133
    7. ' ' → logprob: -20.756715774536133
    8. 'MD' → logprob: -21.506715774536133
    9. '```' → logprob: -21.756715774536133
    10. ' ' → logprob: -22.131715774536133

Token 743: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08511628955602646
    2. '<|end|>' → logprob: -3.210116386413574
    3. '
' → logprob: -3.835116386413574
    4. '\n' → logprob: -4.335116386413574
    5. '    
' → logprob: -6.210116386413574
    6. ' return' → logprob: -7.085116386413574
    7. 'return' → logprob: -7.085116386413574
    8. '```' → logprob: -7.085116386413574
    9. '       ' → logprob: -7.460116386413574
    10. '	return' → logprob: -7.835116386413574

Token 744: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016724377870559692
    2. 'return' → logprob: -4.266724586486816
    3. ' return' → logprob: -6.016724586486816
    4. '```' → logprob: -9.641724586486816
    5. '<|end|>' → logprob: -10.641724586486816
    6. '	return' → logprob: -11.141724586486816
    7. 'def' → logprob: -12.391724586486816
    8. '    
' → logprob: -12.891724586486816
    9. ':return' → logprob: -13.016724586486816
    10. ' ' → logprob: -13.141724586486816

Token 745: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10127189010381699
    2. '   ' → logprob: -2.351271867752075
    3. ' return' → logprob: -6.851272106170654
    4. '	return' → logprob: -12.601271629333496
    5. '```' → logprob: -13.101271629333496
    6. ' ' → logprob: -14.601271629333496
    7. ':return' → logprob: -15.851271629333496
    8. '    
' → logprob: -15.851271629333496
    9. '       ' → logprob: -16.101272583007812
    10. '
' → logprob: -16.476272583007812

Token 746: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029751643538475037
    2. ' dp' → logprob: -3.5297515392303467
    3. '(dp' → logprob: -14.029751777648926
    4. '	dp' → logprob: -14.904751777648926
    5. '_dp' → logprob: -18.27975082397461
    6. 'DP' → logprob: -18.90475082397461
    7. 'd' → logprob: -19.77975082397461
    8. '   ' → logprob: -20.15475082397461
    9. '.dp' → logprob: -20.52975082397461
    10. '```' → logprob: -21.27975082397461

Token 747: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04369882121682167
    2. '```' → logprob: -3.293698787689209
    3. '<|end|>' → logprob: -5.418698787689209
    4. '#' → logprob: -7.918698787689209
    5. 'MOD' → logprob: -8.543699264526367
    6. '
' → logprob: -9.043699264526367
    7. 'if' → logprob: -9.168699264526367
    8. ')' → logprob: -9.418699264526367
    9. '``' → logprob: -9.418699264526367
    10. '[' → logprob: -9.793699264526367

Token 748: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06846217066049576
    2. '```' → logprob: -3.4434621334075928
    3. 'MOD' → logprob: -3.6934621334075928
    4. '#' → logprob: -4.693462371826172
    5. '<|end|>' → logprob: -8.943462371826172
    6. '``' → logprob: -11.318462371826172
    7. '[' → logprob: -12.068462371826172
    8. '#define' → logprob: -12.943462371826172
    9. 'mod' → logprob: -13.068462371826172
    10. 'import' → logprob: -13.193462371826172

Token 749: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.009829523041844368
    2. ' solve' → logprob: -4.884829521179199
    3. 'main' → logprob: -6.259829521179199
    4. 'solve' → logprob: -8.7598295211792
    5. ' count' → logprob: -9.8848295211792
    6. ' solution' → logprob: -10.1348295211792
    7. ' calculate' → logprob: -10.2598295211792
    8. ' def' → logprob: -12.2598295211792
    9. ' compute' → logprob: -12.2598295211792
    10. ' process' → logprob: -12.7598295211792

Token 750: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00226040231063962
    2. '(' → logprob: -6.627260208129883
    3. '_' → logprob: -7.252260208129883
    4. '()' → logprob: -10.002260208129883
    5. '():
' → logprob: -10.002260208129883
    6. '(:' → logprob: -11.002260208129883
    7. '_:' → logprob: -11.002260208129883
    8. '(_:' → logprob: -11.002260208129883
    9. ' ():' → logprob: -11.377260208129883
    10. '(_' → logprob: -11.377260208129883

Token 751: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011164903844473884
    2. '```' → logprob: -9.62511157989502
    3. 'MOD' → logprob: -10.62511157989502
    4. 'import' → logprob: -11.37511157989502
    5. 'N' → logprob: -12.87511157989502
    6. ' MOD' → logprob: -13.50011157989502
    7. 'def' → logprob: -13.62511157989502
    8. '
' → logprob: -13.75011157989502
    9. '   ' → logprob: -14.00011157989502
    10. '    
' → logprob: -14.37511157989502

Token 752: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1285989135503769
    2. 'N' → logprob: -2.128598928451538
    3. 'MOD' → logprob: -6.753598690032959
    4. '```' → logprob: -7.878598690032959
    5. ' N' → logprob: -9.128599166870117
    6. '	N' → logprob: -12.378599166870117
    7. '(N' → logprob: -12.753599166870117
    8. '``' → logprob: -13.253599166870117
    9. '    
' → logprob: -13.253599166870117
    10. '
' → logprob: -13.503599166870117

Token 753: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3133709728717804
    2. '   ' → logprob: -1.313370943069458
    3. ' N' → logprob: -9.813370704650879
    4. '
' → logprob: -10.438370704650879
    5. '```' → logprob: -11.188370704650879
    6. '    
' → logprob: -12.438370704650879
    7. ' ' → logprob: -12.813370704650879
    8. 'n' → logprob: -13.313370704650879
    9. '  ' → logprob: -13.938370704650879
    10. '       ' → logprob: -14.563370704650879

Token 754: ' Fonction' (ID: 189149)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.48429831862449646
    2. '   ' → logprob: -0.9842983484268188
    3. 'def' → logprob: -4.859298229217529
    4. ' N' → logprob: -6.109298229217529
    5. '```' → logprob: -8.984298706054688
    6. 'n' → logprob: -10.109298706054688
    7. ' ' → logprob: -12.109298706054688
    8. '    
' → logprob: -12.234298706054688
    9. '  ' → logprob: -12.484298706054688
    10. '
' → logprob: -12.484298706054688

Token 755: ' principale' (ID: 68926)
  Prédit: ' principale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principale' → logprob: -0.8630018830299377
    2. ' main' → logprob: -1.238001823425293
    3. 'def' → logprob: -1.488001823425293
    4. 'main' → logprob: -3.488001823425293
    5. '   ' → logprob: -4.113001823425293
    6. ' de' → logprob: -5.863001823425293
    7. ' principales' → logprob: -6.363001823425293
    8. ' principal' → logprob: -6.488001823425293
    9. '()' → logprob: -6.613001823425293
    10. 'de' → logprob: -6.613001823425293

Token 756: ' pour' (ID: 1930)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.31468236446380615
    2. '():
' → logprob: -1.3146823644638062
    3. ':' → logprob: -7.564682483673096
    4. '()' → logprob: -8.064682006835938
    5. 'def' → logprob: -8.064682006835938
    6. '   ' → logprob: -8.314682006835938
    7. ':
' → logprob: -11.189682006835938
    8. '():
' → logprob: -12.314682006835938
    9. '();' → logprob: -12.814682006835938
    10. '```' → logprob: -13.439682006835938

Token 757: ' résoudre' (ID: 134006)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.499014675617218
    2. ' ex' → logprob: -1.2490146160125732
    3. ' gérer' → logprob: -3.2490146160125732
    4. ' lancer' → logprob: -4.249014854431152
    5. ' execut' → logprob: -4.749014854431152
    6. ' run' → logprob: -4.874014854431152
    7. 'ex' → logprob: -5.124014854431152
    8. ' compléter' → logprob: -5.374014854431152
    9. ' l' → logprob: -5.624014854431152
    10. 'l' → logprob: -5.624014854431152

Token 758: ' le' (ID: 505)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.6623486876487732
    2. '   ' → logprob: -1.787348747253418
    3. '():' → logprob: -2.412348747253418
    4. ' le' → logprob: -2.662348747253418
    5. '()' → logprob: -2.787348747253418
    6. ' la' → logprob: -2.912348747253418
    7. '```' → logprob: -4.037348747253418
    8. 'le' → logprob: -4.662348747253418
    9. 'the' → logprob: -5.787348747253418
    10. 'def' → logprob: -5.912348747253418

Token 759: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.04282812029123306
    2. 'proble' → logprob: -3.91782808303833
    3. ' problème' → logprob: -4.16782808303833
    4. 'problem' → logprob: -5.16782808303833
    5. '```' → logprob: -7.54282808303833
    6. ' probl' → logprob: -9.292828559875488
    7. '_' → logprob: -9.542828559875488
    8. '   ' → logprob: -10.167828559875488
    9. '
' → logprob: -10.417828559875488
    10. ' probleme' → logprob: -10.667828559875488

Token 760: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1770946979522705
    2. '():' → logprob: -2.5520946979522705
    3. '():
' → logprob: -3.0520946979522705
    4. '()' → logprob: -3.6770946979522705
    5. ':' → logprob: -5.177094459533691
    6. 'def' → logprob: -5.427094459533691
    7. '.' → logprob: -7.677094459533691
    8. '```' → logprob: -7.927094459533691
    9. '
' → logprob: -8.677094459533691
    10. ':
' → logprob: -8.677094459533691

Token 761: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022129806166049093
    2. 'def' → logprob: -8.625221252441406
    3. '    
' → logprob: -10.875221252441406
    4. '```' → logprob: -11.125221252441406
    5. '
' → logprob: -13.000221252441406
    6. ' def' → logprob: -13.750221252441406
    7. '    ' → logprob: -13.875221252441406
    8. '"""
' → logprob: -14.000221252441406
    9. '       ' → logprob: -14.500221252441406
    10. '  ' → logprob: -15.125221252441406

Token 762: ' Comp' (ID: 5211)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.481510692741722e-05
    2. '```' → logprob: -10.12507438659668
    3. ' N' → logprob: -11.37507438659668
    4. 'N' → logprob: -11.62507438659668
    5. '    
' → logprob: -12.00007438659668
    6. 'def' → logprob: -12.12507438659668
    7. '    ' → logprob: -13.87507438659668
    8. '
' → logprob: -15.00007438659668
    9. '``' → logprob: -15.25007438659668
    10. '"""
' → logprob: -15.25007438659668

Token 763: 'te' (ID: 411)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.22822096943855286
    2. 'ute' → logprob: -2.3532209396362305
    3. 'uter' → logprob: -2.8532209396362305
    4. 'te' → logprob: -3.2282209396362305
    5. 't' → logprob: -5.6032209396362305
    6. 'le' → logprob: -5.7282209396362305
    7. '
' → logprob: -7.2282209396362305
    8. 'ut' → logprob: -7.3532209396362305
    9. '\' → logprob: -8.22822093963623
    10. 'l' → logprob: -8.22822093963623

Token 764: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2780211865901947
    2. ' les' → logprob: -2.2780210971832275
    3. '_le' → logprob: -2.4030210971832275
    4. '_' → logprob: -3.7780210971832275
    5. 'le' → logprob: -4.028021335601807
    6. '()' → logprob: -5.903021335601807
    7. '   ' → logprob: -6.528021335601807
    8. 'les' → logprob: -6.778021335601807
    9. 's' → logprob: -7.778021335601807
    10. 'er' → logprob: -7.778021335601807

Token 765: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.0020354646258056164
    2. ' nombre' → logprob: -6.377035617828369
    3. 'mod' → logprob: -8.377035140991211
    4. '   ' → logprob: -10.002035140991211
    5. '```' → logprob: -10.877035140991211
    6. '_nombre' → logprob: -11.502035140991211
    7. 'Nombre' → logprob: -11.752035140991211
    8. 'number' → logprob: -12.252035140991211
    9. 'n' → logprob: -12.502035140991211
    10. 's' → logprob: -13.127035140991211

Token 766: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3744325339794159
    2. '   ' → logprob: -1.3744325637817383
    3. 'de' → logprob: -3.6244325637817383
    4. '_de' → logprob: -4.874432563781738
    5. 'def' → logprob: -4.874432563781738
    6. '  ' → logprob: -5.374432563781738
    7. ' des' → logprob: -5.999432563781738
    8. '_' → logprob: -6.374432563781738
    9. ' ' → logprob: -6.374432563781738
    10. ' d' → logprob: -6.624432563781738

Token 767: ' façons' (ID: 165958)
  Prédit: ' façons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.12266792356967926
    2. 'fa' → logprob: -2.2476680278778076
    3. 'man' → logprob: -4.9976677894592285
    4. ' ' → logprob: -7.1226677894592285
    5. ' man' → logprob: -7.4976677894592285
    6. '   ' → logprob: -7.8726677894592285
    7. 'ways' → logprob: -8.122668266296387
    8. ' fa' → logprob: -8.122668266296387
    9. '  ' → logprob: -8.372668266296387
    10. '_' → logprob: -8.997668266296387

Token 768: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.23391172289848328
    2. ' d' → logprob: -1.9839117527008057
    3. 'de' → logprob: -3.1089117527008057
    4. '   ' → logprob: -4.233911514282227
    5. 'def' → logprob: -5.358911514282227
    6. 'd' → logprob: -5.358911514282227
    7. ' ' → logprob: -6.608911514282227
    8. '    ' → logprob: -8.483911514282227
    9. '  ' → logprob: -8.733911514282227
    10. ' possible' → logprob: -8.733911514282227

Token 769: ''' (ID: 6)
  Prédit: ''arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arr' → logprob: -0.06016194447875023
    2. 'arr' → logprob: -3.185161828994751
    3. ''aller' → logprob: -4.56016206741333
    4. '_arr' → logprob: -5.56016206741333
    5. '’arr' → logprob: -6.68516206741333
    6. 'e' → logprob: -8.060161590576172
    7. ''' → logprob: -8.435161590576172
    8. '_' → logprob: -8.685161590576172
    9. ' arriver' → logprob: -8.935161590576172
    10. ''av' → logprob: -9.185161590576172

Token 770: 'atte' (ID: 23975)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0016941038193181157
    2. 'atte' → logprob: -6.501694202423096
    3. ''arr' → logprob: -9.001693725585938
    4. 're' → logprob: -10.751693725585938
    5. 'aller' → logprob: -10.876693725585938
    6. ' arriver' → logprob: -11.876693725585938
    7. 'par' → logprob: -12.751693725585938
    8. 'avoir' → logprob: -12.751693725585938
    9. ' atteindre' → logprob: -13.376693725585938
    10. '```' → logprob: -13.751693725585938

Token 771: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.00033534664544276893
    2. 'nd' → logprob: -9.000335693359375
    3. 'ind' → logprob: -9.375335693359375
    4. 'int' → logprob: -9.500335693359375
    5. '_' → logprob: -12.250335693359375
    6. 'inder' → logprob: -12.375335693359375
    7. '   ' → logprob: -12.500335693359375
    8. 'i' → logprob: -12.500335693359375
    9. '#' → logprob: -12.750335693359375
    10. '"' → logprob: -12.750335693359375

Token 772: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6632574796676636
    2. ' la' → logprob: -0.9132574796676636
    3. 'N' → logprob: -3.038257598876953
    4. ' N' → logprob: -4.038257598876953
    5. 'le' → logprob: -4.288257598876953
    6. ' le' → logprob: -6.413257598876953
    7. '   ' → logprob: -6.538257598876953
    8. 'l' → logprob: -7.788257598876953
    9. ' ' → logprob: -8.413257598876953
    10. '```' → logprob: -8.913257598876953

Token 773: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.7080684900283813
    2. 'position' → logprob: -2.208068370819092
    3. ' fin' → logprob: -2.208068370819092
    4. ' ' → logprob: -2.958068370819092
    5. ' N' → logprob: -3.208068370819092
    6. ' dernière' → logprob: -3.208068370819092
    7. 'dern' → logprob: -3.333068370819092
    8. ' position' → logprob: -3.583068370819092
    9. 'N' → logprob: -3.708068370819092
    10. 'der' → logprob: -4.333068370819092

Token 774: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14067800343036652
    2. ' de' → logprob: -2.1406779289245605
    3. 'de' → logprob: -4.3906779289245605
    4. ' du' → logprob: -7.6406779289245605
    5. '```' → logprob: -7.7656779289245605
    6. 'du' → logprob: -9.265678405761719
    7. '()' → logprob: -9.390678405761719
    8. '(N' → logprob: -9.640678405761719
    9. ' ' → logprob: -10.140678405761719
    10. '(' → logprob: -11.265678405761719

Token 775: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0030479393899440765
    2. ' la' → logprob: -5.878047943115234
    3. '   ' → logprob: -9.128047943115234
    4. 'une' → logprob: -9.128047943115234
    5. '```' → logprob: -12.003047943115234
    6. 'l' → logprob: -12.128047943115234
    7. 'le' → logprob: -13.003047943115234
    8. 'N' → logprob: -13.003047943115234
    9. ' ' → logprob: -13.378047943115234
    10. '#' → logprob: -13.503047943115234

Token 776: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.02692597359418869
    2. 'liste' → logprob: -4.526926040649414
    3. ' sé' → logprob: -4.776926040649414
    4. 'sequence' → logprob: -5.526926040649414
    5. 's' → logprob: -5.901926040649414
    6. 'fonction' → logprob: -8.401926040649414
    7. '   ' → logprob: -9.401926040649414
    8. ' liste' → logprob: -9.526926040649414
    9. 'suite' → logprob: -10.151926040649414
    10. 'chaine' → logprob: -10.151926040649414

Token 777: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -9.014684110297821e-06
    2. 'rie' → logprob: -12.125008583068848
    3. 'QUENCE' → logprob: -13.625008583068848
    4. '#' → logprob: -14.375008583068848
    5. 'q' → logprob: -14.625008583068848
    6. '
' → logprob: -14.875008583068848
    7. '   ' → logprob: -14.875008583068848
    8. '`' → logprob: -15.500008583068848
    9. 'qu' → logprob: -15.875008583068848
    10. 'que' → logprob: -16.125009536743164

Token 778: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020957801025360823
    2. '()' → logprob: -7.002095699310303
    3. '(N' → logprob: -7.877095699310303
    4. '
' → logprob: -8.252096176147461
    5. ' en' → logprob: -8.377096176147461
    6. '```' → logprob: -9.627096176147461
    7. '.' → logprob: -9.752096176147461
    8. 'def' → logprob: -10.127096176147461
    9. ',' → logprob: -10.502096176147461
    10. '()
' → logprob: -11.002096176147461

Token 779: ' autor' (ID: 13432)
  Prédit: ' respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' respect' → logprob: -0.640975296497345
    2. ' utilisant' → logprob: -1.6409752368927002
    3. ' suivant' → logprob: -1.6409752368927002
    4. ' saut' → logprob: -3.5159752368927
    5. ' passant' → logprob: -3.7659752368927
    6. 'respect' → logprob: -4.890975475311279
    7. ' prenant' → logprob: -5.640975475311279
    8. ' faisant' → logprob: -6.140975475311279
    9. ' év' → logprob: -6.265975475311279
    10. ' se' → logprob: -6.515975475311279

Token 780: 'isant' (ID: 56111)
  Prédit: 'isant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isant' → logprob: -0.0012109491508454084
    2. 'itant' → logprob: -6.751211166381836
    3. '   ' → logprob: -11.001211166381836
    4. 'iser' → logprob: -12.126211166381836
    5. 'isé' → logprob: -12.376211166381836
    6. 'itis' → logprob: -12.376211166381836
    7. 'isées' → logprob: -12.501211166381836
    8. 'ité' → logprob: -13.501211166381836
    9. 'it' → logprob: -13.501211166381836
    10. '```' → logprob: -14.001211166381836

Token 781: ' à' (ID: 1221)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.02743283286690712
    2. 'des' → logprob: -4.527432918548584
    3. '   ' → logprob: -4.777432918548584
    4. ' les' → logprob: -5.027432918548584
    5. '    ' → logprob: -7.777432918548584
    6. ' de' → logprob: -8.277432441711426
    7. '```' → logprob: -8.902432441711426
    8. 'les' → logprob: -9.027432441711426
    9. ' un' → logprob: -9.152432441711426
    10. ' chaque' → logprob: -9.902432441711426

Token 782: ' chaque' (ID: 21194)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.35411155223846436
    2. 's' → logprob: -2.354111671447754
    3. 'sa' → logprob: -3.229111671447754
    4. ' faire' → logprob: -3.479111671447754
    5. 'aller' → logprob: -3.604111671447754
    6. '   ' → logprob: -3.729111671447754
    7. 'util' → logprob: -3.979111671447754
    8. 'pass' → logprob: -3.979111671447754
    9. ' sa' → logprob: -4.229111671447754
    10. '```' → logprob: -5.229111671447754

Token 783: ' étape' (ID: 83661)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.6447658538818359
    2. '   ' → logprob: -1.269765853881836
    3. 'pas' → logprob: -2.769765853881836
    4. ' ' → logprob: -3.769765853881836
    5. ' fois' → logprob: -3.894765853881836
    6. 'indice' → logprob: -4.144765853881836
    7. 'fois' → logprob: -4.269765853881836
    8. ' position' → logprob: -4.519765853881836
    9. ' étape' → logprob: -4.894765853881836
    10. '```' → logprob: -5.269765853881836

Token 784: ' :
' (ID: 10039)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.40860286355018616
    2. ' de' → logprob: -1.1586028337478638
    3. '   ' → logprob: -5.033602714538574
    4. ' des' → logprob: -5.158602714538574
    5. ' soit' → logprob: -5.658602714538574
    6. 'de' → logprob: -6.283602714538574
    7. 'un' → logprob: -6.408602714538574
    8. ' d' → logprob: -6.658602714538574
    9. '    ' → logprob: -7.783602714538574
    10. ' le' → logprob: -8.783602714538574

Token 785: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13576488196849823
    2. ' un' → logprob: -2.1357648372650146
    3. '    ' → logprob: -5.510765075683594
    4. ' de' → logprob: -6.010765075683594
    5. ' d' → logprob: -6.885765075683594
    6. ' une' → logprob: -7.260765075683594
    7. 'un' → logprob: -8.760765075683594
    8. ' des' → logprob: -9.385765075683594
    9. ' ' → logprob: -9.885765075683594
    10. '       ' → logprob: -10.385765075683594

Token 786: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3798768222332001
    2. ' un' → logprob: -1.2548768520355225
    3. '    ' → logprob: -4.629876613616943
    4. ' de' → logprob: -4.879876613616943
    5. ' une' → logprob: -5.129876613616943
    6. ' des' → logprob: -5.754876613616943
    7. ' d' → logprob: -6.379876613616943
    8. 'un' → logprob: -7.254876613616943
    9. ' effectuer' → logprob: -8.254877090454102
    10. ' a' → logprob: -8.754877090454102

Token 787: ' de' (ID: 334)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9290380477905273
    2. ' avancer' → logprob: -1.6790380477905273
    3. '   ' → logprob: -2.0540380477905273
    4. 'faire' → logprob: -3.1790380477905273
    5. 'un' → logprob: -3.3040380477905273
    6. ' faire' → logprob: -3.5540380477905273
    7. 's' → logprob: -3.8040380477905273
    8. ' se' → logprob: -3.9290380477905273
    9. ' sa' → logprob: -4.054038047790527
    10. ' continuer' → logprob: -4.304038047790527

Token 788: ' continuer' (ID: 75597)
  Prédit: ' avancer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avancer' → logprob: -1.2604515552520752
    2. 'faire' → logprob: -1.5104515552520752
    3. ' rester' → logprob: -1.8854515552520752
    4. ' faire' → logprob: -2.510451555252075
    5. 'pass' → logprob: -3.135451555252075
    6. ' sa' → logprob: -3.385451555252075
    7. ' continuer' → logprob: -3.635451555252075
    8. '   ' → logprob: -3.635451555252075
    9. 'contin' → logprob: -3.760451555252075
    10. 're' → logprob: -3.885451555252075

Token 789: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.35276588797569275
    2. 'à' → logprob: -1.8527659177780151
    3. 'sur' → logprob: -3.1027657985687256
    4. ' sur' → logprob: -3.7277657985687256
    5. 'la' → logprob: -3.9777657985687256
    6. ' la' → logprob: -4.227766036987305
    7. 'le' → logprob: -4.602766036987305
    8. '   ' → logprob: -4.602766036987305
    9. ' de' → logprob: -5.852766036987305
    10. ' ' → logprob: -6.227766036987305

Token 790: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15169617533683777
    2. ' i' → logprob: -2.02669620513916
    3. 'l' → logprob: -5.40169620513916
    4. '   ' → logprob: -6.40169620513916
    5. 'la' → logprob: -6.90169620513916
    6. ' ' → logprob: -7.52669620513916
    7. ' l' → logprob: -8.52669620513916
    8. ' la' → logprob: -8.77669620513916
    9. '+' → logprob: -9.02669620513916
    10. 'indice' → logprob: -9.02669620513916

Token 791: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11037734150886536
    2. ' i' → logprob: -2.360377311706543
    3. '+' → logprob: -5.110377311706543
    4. '[i' → logprob: -6.360377311706543
    5. ''i' → logprob: -7.235377311706543
    6. 'a' → logprob: -8.110377311706543
    7. 'u' → logprob: -8.235377311706543
    8. 'e' → logprob: -8.235377311706543
    9. '+i' → logprob: -8.735377311706543
    10. '   ' → logprob: -8.735377311706543

Token 792: 'élé' (ID: 15228)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.3820676803588867
    2. 'index' → logprob: -1.3820676803588867
    3. 'i' → logprob: -2.7570676803588867
    4. 'élé' → logprob: -6.257067680358887
    5. 'indices' → logprob: -7.507067680358887
    6. '```' → logprob: -9.382067680358887
    7. '+' → logprob: -9.507067680358887
    8. 'position' → logprob: -10.007067680358887
    9. 'a' → logprob: -10.382067680358887
    10. ''i' → logprob: -10.507067680358887

Token 793: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -2.1888679839321412e-05
    2. '   ' → logprob: -12.375021934509277
    3. 'mentar' → logprob: -12.375021934509277
    4. 'ments' → logprob: -12.875021934509277
    5. 'v' → logprob: -13.000021934509277
    6. 'mentation' → logprob: -13.250021934509277
    7. 'ement' → logprob: -13.750021934509277
    8. '```' → logprob: -13.875021934509277
    9. 'm' → logprob: -14.375021934509277
    10. '`' → logprob: -14.500021934509277

Token 794: ' suivant' (ID: 68705)
  Prédit: ' suivant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivant' → logprob: -0.3527373969554901
    2. 'su' → logprob: -1.2277374267578125
    3. '```' → logprob: -6.4777374267578125
    4. ' voisin' → logprob: -7.2277374267578125
    5. '   ' → logprob: -7.8527374267578125
    6. ' suivante' → logprob: -8.102737426757812
    7. 'i' → logprob: -8.102737426757812
    8. 'con' → logprob: -8.227737426757812
    9. ' i' → logprob: -8.727737426757812
    10. '+' → logprob: -8.852737426757812

Token 795: ';
' (ID: 307)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15698544681072235
    2. '   ' → logprob: -2.5319855213165283
    3. ' (' → logprob: -4.156985282897949
    4. ',
' → logprob: -4.406985282897949
    5. '
' → logprob: -4.781985282897949
    6. ' de' → logprob: -4.906985282897949
    7. '```' → logprob: -4.906985282897949
    8. ' i' → logprob: -5.156985282897949
    9. '<|end|>' → logprob: -6.031985282897949
    10. '.' → logprob: -6.781985282897949

Token 796: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.941161776310764e-05
    2. '-' → logprob: -10.625039100646973
    3. '#' → logprob: -12.125039100646973
    4. '       ' → logprob: -12.500039100646973
    5. ' ' → logprob: -13.625039100646973
    6. 'def' → logprob: -13.625039100646973
    7. '```' → logprob: -13.625039100646973
    8. '    ' → logprob: -13.750039100646973
    9. '  ' → logprob: -14.000039100646973
    10. '     ' → logprob: -16.00004005432129

Token 797: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015365236904472113
    2. '-' (adapté à ' -') → logprob: -6.6265363693237305
    3. '#' → logprob: -8.62653636932373
    4. 'def' → logprob: -10.62653636932373
    5. ' -' → logprob: -13.25153636932373
    6. '       ' → logprob: -13.50153636932373
    7. ' ' → logprob: -13.50153636932373
    8. '```' → logprob: -14.00153636932373
    9. '  ' → logprob: -14.37653636932373
    10. '    ' → logprob: -15.25153636932373

Token 798: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3189217150211334
    2. '   ' → logprob: -1.568921685218811
    3. 'de' → logprob: -3.4439218044281006
    4. ' ' → logprob: -4.0689215660095215
    5. '-' → logprob: -4.5689215660095215
    6. 's' → logprob: -5.8189215660095215
    7. '#' → logprob: -7.1939215660095215
    8. '
' → logprob: -7.9439215660095215
    9. '  ' → logprob: -8.06892204284668
    10. ' ' → logprob: -8.81892204284668

Token 799: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2959611415863037
    2. 'faire' → logprob: -1.5459611415863037
    3. 're' → logprob: -3.9209611415863037
    4. 'sa' → logprob: -4.420961380004883
    5. ' faire' → logprob: -5.420961380004883
    6. ' sa' → logprob: -6.170961380004883
    7. '```' → logprob: -6.670961380004883
    8. 'jump' → logprob: -7.170961380004883
    9. 'repr' → logprob: -7.670961380004883
    10. 'effect' → logprob: -7.920961380004883

Token 800: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08422458916902542
    2. 'faire' → logprob: -3.2092247009277344
    3. 're' → logprob: -3.5842247009277344
    4. 'sa' → logprob: -4.709224700927734
    5. 'jump' → logprob: -7.584224700927734
    6. '```' → logprob: -7.584224700927734
    7. ' ' → logprob: -7.959224700927734
    8. 'repr' → logprob: -8.084224700927734
    9. 'effect' → logprob: -8.334224700927734
    10. '   ' → logprob: -8.334224700927734

Token 801: 'aut' (ID: 1828)
  Prédit: 'aut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.0023898023646324873
    2. '_aut' → logprob: -6.252389907836914
    3. 'a' → logprob: -8.127389907836914
    4. 'auto' → logprob: -9.752389907836914
    5. '```' → logprob: -9.877389907836914
    6. 'autor' → logprob: -11.377389907836914
    7. '
' → logprob: -11.877389907836914
    8. 'auté' → logprob: -12.252389907836914
    9. ''aut' → logprob: -12.377389907836914
    10. 'e' → logprob: -12.502389907836914

Token 802: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -6.704273118884885e-07
    2. ' er' → logprob: -14.750000953674316
    3. '­er' → logprob: -16.75
    4. '_er' → logprob: -16.875
    5. ' ' → logprob: -17.375
    6. '   ' → logprob: -17.625
    7. 'e' → logprob: -18.0
    8. 'erv' → logprob: -18.75
    9. '_' → logprob: -19.125
    10. '     ' → logprob: -19.25

Token 803: '"' (ID: 1)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5157784223556519
    2. ' au' → logprob: -1.8907784223556519
    3. ' ' → logprob: -2.1407785415649414
    4. '"' → logprob: -2.3907785415649414
    5. '   ' → logprob: -4.640778541564941
    6. ' un' → logprob: -4.765778541564941
    7. ' to' → logprob: -5.265778541564941
    8. '_' → logprob: -5.765778541564941
    9. ' vers' → logprob: -5.890778541564941
    10. ' aux' → logprob: -6.390778541564941

Token 804: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7950522899627686
    2. '   ' → logprob: -1.2950522899627686
    3. 'à' → logprob: -2.2950522899627686
    4. ' ' → logprob: -2.5450522899627686
    5. ' au' → logprob: -3.6700522899627686
    6. ' une' → logprob: -3.6700522899627686
    7. ' un' → logprob: -4.170052528381348
    8. ' non' → logprob: -5.045052528381348
    9. 'au' → logprob: -5.545052528381348
    10. ' vers' → logprob: -5.795052528381348

Token 805: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3007284700870514
    2. 'une' → logprob: -1.800728440284729
    3. ' un' → logprob: -3.0507285594940186
    4. ' une' → logprob: -3.6757285594940186
    5. 'l' → logprob: -4.1757283210754395
    6. 'la' → logprob: -5.5507283210754395
    7. 'n' → logprob: -6.5507283210754395
    8. 'r' → logprob: -8.175728797912598
    9. ' l' → logprob: -8.175728797912598
    10. ''un' → logprob: -8.675728797912598

Token 806: ' élément' (ID: 99627)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.21765735745429993
    2. ' indice' → logprob: -2.3426573276519775
    3. ' autre' → logprob: -3.8426573276519775
    4. 'e' → logprob: -3.8426573276519775
    5. 'élé' → logprob: -3.9676573276519775
    6. 'aut' → logprob: -4.467657566070557
    7. 'i' → logprob: -5.717657566070557
    8. ' même' → logprob: -5.842657566070557
    9. ' élément' → logprob: -5.842657566070557
    10. ' prochain' → logprob: -5.967657566070557

Token 807: ' de' (ID: 334)
  Prédit: ' suivant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivant' → logprob: -0.06913577765226364
    2. 'su' → logprob: -3.6941356658935547
    3. ' distant' → logprob: -4.069135665893555
    4. ' plus' → logprob: -4.694135665893555
    5. ' non' → logprob: -4.819135665893555
    6. 'd' → logprob: -6.069135665893555
    7. 'plus' → logprob: -7.194135665893555
    8. 'non' → logprob: -7.194135665893555
    9. ' d' → logprob: -7.444135665893555
    10. ' qui' → logprob: -7.569135665893555

Token 808: ' même' (ID: 9679)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.507591724395752
    2. 'm' → logprob: -1.507591724395752
    3. ' même' → logprob: -2.007591724395752
    4. ' la' → logprob: -3.382591724395752
    5. '```' → logprob: -5.507591724395752
    6. 'l' → logprob: -7.132591724395752
    7. 'val' → logprob: -7.132591724395752
    8. 'indice' → logprob: -7.257591724395752
    9. 'C' → logprob: -7.382591724395752
    10. 'same' → logprob: -8.382591247558594

Token 809: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.05872764810919762
    2. '_c' → logprob: -3.558727741241455
    3. 'cou' → logprob: -4.683727741241455
    4. '```' → logprob: -4.933727741241455
    5. ' couleur' → logprob: -5.308727741241455
    6. ' valeur' → logprob: -5.808727741241455
    7. '_val' → logprob: -6.183727741241455
    8. 'c' → logprob: -7.558727741241455
    9. 'ligne' → logprob: -7.558727741241455
    10. '   ' → logprob: -7.808727741241455

Token 810: ' non' (ID: 2893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038615237921476364
    2. '.' → logprob: -4.6636152267456055
    3. ';' → logprob: -5.2886152267456055
    4. ',' → logprob: -5.4136152267456055
    5. '.
' → logprob: -5.7886152267456055
    6. '
' → logprob: -6.1636152267456055
    7. ';
' → logprob: -6.1636152267456055
    8. '[i' → logprob: -6.2886152267456055
    9. '```' → logprob: -6.4136152267456055
    10. 'def' → logprob: -6.5386152267456055

Token 811: ' cons' (ID: 1473)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cons' → logprob: -0.8827442526817322
    2. ' cons' → logprob: -1.007744312286377
    3. 'con' → logprob: -1.632744312286377
    4. 'adj' → logprob: -4.382744312286377
    5. 'cont' → logprob: -4.882744312286377
    6. ' adjacent' → logprob: -6.257744312286377
    7. '```' → logprob: -7.382744312286377
    8. '
' → logprob: -7.632744312286377
    9. '   ' → logprob: -7.757744312286377
    10. '_con' → logprob: -7.882744312286377

Token 812: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0005539863486774266
    2. 'é' → logprob: -8.250554084777832
    3. 'éc' → logprob: -8.875554084777832
    4. 'ecut' → logprob: -8.875554084777832
    5. 'cut' → logprob: -11.875554084777832
    6. 'è' → logprob: -13.750554084777832
    7. '```' → logprob: -14.250554084777832
    8. '_cut' → logprob: -14.500554084777832
    9. 'équ' → logprob: -14.625554084777832
    10. 'écution' → logprob: -15.125554084777832

Token 813: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7096919417381287
    2. 'ive' → logprob: -0.7096919417381287
    3. 'ut' → logprob: -4.584692001342773
    4. 'u' → logprob: -5.834692001342773
    5. 'utive' → logprob: -6.459692001342773
    6. '   ' → logprob: -7.459692001342773
    7. '```' → logprob: -7.959692001342773
    8. '#' → logprob: -8.084692001342773
    9. 'ute' → logprob: -9.459692001342773
    10. ' if' → logprob: -9.834692001342773

Token 814: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6097865104675293
    2. '   ' → logprob: -0.8597865104675293
    3. '.
' → logprob: -3.9847865104675293
    4. ',' → logprob: -5.359786510467529
    5. ')' → logprob: -5.859786510467529
    6. ';' → logprob: -5.984786510467529
    7. '
' → logprob: -6.609786510467529
    8. ').' → logprob: -6.859786510467529
    9. 'def' → logprob: -7.609786510467529
    10. ',
' → logprob: -8.484786987304688

Token 815: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018589148530736566
    2. '
' → logprob: -6.501858711242676
    3. '```' → logprob: -8.501858711242676
    4. '    
' → logprob: -8.876858711242676
    5. 'def' → logprob: -12.001858711242676
    6. 'import' → logprob: -13.376858711242676
    7. 'N' → logprob: -13.751858711242676
    8. '  
' → logprob: -14.001858711242676
    9. '``' → logprob: -14.126858711242676
    10. ')' → logprob: -14.751858711242676

Token 816: ' Toutes' (ID: 117422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.2603901015827432e-05
    2. '    
' → logprob: -11.750022888183594
    3. '```' → logprob: -11.875022888183594
    4. '
' → logprob: -12.000022888183594
    5. 'N' → logprob: -13.500022888183594
    6. 'MOD' → logprob: -16.625022888183594
    7. '``' → logprob: -17.000022888183594
    8. 'import' → logprob: -17.000022888183594
    9. '  
' → logprob: -17.375022888183594
    10. 'def' → logprob: -17.375022888183594

Token 817: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5855583548545837
    2. ' les' → logprob: -1.0855584144592285
    3. '()' → logprob: -3.8355584144592285
    4. '   ' → logprob: -3.9605584144592285
    5. ' ' → logprob: -3.9605584144592285
    6. ' droits' → logprob: -3.9605584144592285
    7. 'les' → logprob: -4.4605584144592285
    8. ' rights' → logprob: -5.7105584144592285
    9. ':' → logprob: -5.8355584144592285
    10. '(' → logprob: -6.3355584144592285

Token 818: ' réponses' (ID: 88884)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.6815964579582214
    2. 'l' → logprob: -1.9315965175628662
    3. 'ét' → logprob: -2.431596517562866
    4. 'part' → logprob: -2.931596517562866
    5. 'man' → logprob: -3.181596517562866
    6. 'val' → logprob: -4.056596279144287
    7. 'import' → logprob: -4.556596279144287
    8. '```' → logprob: -4.806596279144287
    9. 'instructions' → logprob: -4.931596279144287
    10. 'positions' → logprob: -4.931596279144287

Token 819: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.712237536907196
    2. ' possible' → logprob: -1.7122375965118408
    3. ' possibles' → logprob: -1.9622375965118408
    4. 's' → logprob: -3.087237596511841
    5. '_possible' → logprob: -3.587237596511841
    6. ' se' → logprob: -3.587237596511841
    7. '   ' → logprob: -3.837237596511841
    8. ' doivent' → logprob: -4.462237358093262
    9. 'possible' → logprob: -4.712237358093262
    10. ' s' → logprob: -4.712237358093262

Token 820: ' calcul' (ID: 7559)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.4904794692993164
    2. 'mod' → logprob: -1.8654794692993164
    3. ' mod' → logprob: -2.1154794692993164
    4. ' calcul' → logprob: -2.7404794692993164
    5. 'calcul' → logprob: -4.365479469299316
    6. '%' → logprob: -4.615479469299316
    7. ' données' → logprob: -4.990479469299316
    8. '   ' → logprob: -5.115479469299316
    9. ' modul' → logprob: -5.615479469299316
    10. '```' → logprob: -6.740479469299316

Token 821: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0005427849246188998
    2. 'és' → logprob: -8.125542640686035
    3. 'é' → logprob: -8.750542640686035
    4. 'ée' → logprob: -10.000542640686035
    5. 'es' → logprob: -10.125542640686035
    6. 'ees' → logprob: -13.875542640686035
    7. 'nées' → logprob: -15.000542640686035
    8. '```' → logprob: -15.125542640686035
    9. 'É' → logprob: -15.250542640686035
    10. 'ès' → logprob: -15.875542640686035

Token 822: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.014125545509159565
    2. 'mod' → logprob: -4.889125347137451
    3. '_mod' → logprob: -5.889125347137451
    4. ' mod' → logprob: -6.264125347137451
    5. ' au' → logprob: -7.764125347137451
    6. ' en' → logprob: -8.13912582397461
    7. ' sous' → logprob: -8.51412582397461
    8. ' modulus' → logprob: -8.63912582397461
    9. '%' → logprob: -8.76412582397461
    10. ' %' → logprob: -8.88912582397461

Token 823: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07937946915626526
    2. '10' → logprob: -2.5793795585632324
    3. '100' → logprob: -8.079379081726074
    4. ' (' → logprob: -9.579379081726074
    5. ' MOD' → logprob: -9.954379081726074
    6. ' ' → logprob: -10.954379081726074
    7. '```' → logprob: -11.079379081726074
    8. '1' → logprob: -11.204379081726074
    9. '(' → logprob: -12.079379081726074
    10. ' \(' → logprob: -12.579379081726074

Token 824: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01844700798392296
    2. '100' → logprob: -4.018446922302246
    3. '(' → logprob: -8.268446922302246
    4. '1' → logprob: -10.768446922302246
    5. '998' → logprob: -10.893446922302246
    6. ' ' → logprob: -15.018446922302246
    7. 'MOD' → logprob: -15.643446922302246
    8. '(int' → logprob: -15.893446922302246
    9. '109' → logprob: -16.268447875976562
    10. '```' → logprob: -16.393447875976562

Token 825: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0984044000506401
    2. '**' → logprob: -2.4734044075012207
    3. '6' → logprob: -5.473404407501221
    4. '7' → logprob: -5.973404407501221
    5. '09' → logprob: -6.598404407501221
    6. '0' → logprob: -7.223404407501221
    7. '```' → logprob: -8.598403930664062
    8. ' ' → logprob: -8.848403930664062
    9. '000' → logprob: -9.723403930664062
    10. '^' → logprob: -10.098403930664062

Token 826: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2664456789934775e-06
    2. '09' → logprob: -14.000000953674316
    3. '```' → logprob: -15.375000953674316
    4. '+' → logprob: -15.875000953674316
    5. '``' → logprob: -18.875001907348633
    6. '
' → logprob: -19.375001907348633
    7. '   ' → logprob: -20.750001907348633
    8. '**' → logprob: -21.375001907348633
    9. ' ' → logprob: -21.625001907348633
    10. '９' → logprob: -22.000001907348633

Token 827: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04858816787600517
    2. ' +' → logprob: -3.048588275909424
    3. '+
' → logprob: -15.048587799072266
    4. '7' → logprob: -15.673587799072266
    5. ' ' → logprob: -16.423587799072266
    6. ' +
' → logprob: -16.548587799072266
    7. '＋' → logprob: -16.798587799072266
    8. '```' → logprob: -16.798587799072266
    9. ' plus' → logprob: -17.548587799072266
    10. '
' → logprob: -17.798587799072266

Token 828: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '+' → logprob: -17.125
    4. '9' → logprob: -18.375
    5. '```' → logprob: -18.375
    6. '07' → logprob: -20.0
    7. '   ' → logprob: -22.25
    8. ' ' → logprob: -22.5
    9. '
' → logprob: -22.625
    10. ' +' → logprob: -23.0

Token 829: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.584239938296378e-06
    2. '+' → logprob: -11.875007629394531
    3. '9' → logprob: -14.500007629394531
    4. '```' → logprob: -16.62500762939453
    5. ' ' → logprob: -17.50000762939453
    6. '
' → logprob: -19.50000762939453
    7. ' +' → logprob: -19.62500762939453
    8. '07' → logprob: -20.12500762939453
    9. '``' → logprob: -20.50000762939453
    10. '

' → logprob: -20.62500762939453

Token 830: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011735646054148674
    2. '
' → logprob: -4.886735439300537
    3. ')' → logprob: -6.511735439300537
    4. '```' → logprob: -6.886735439300537
    5. '.' → logprob: -7.511735439300537
    6. ':' → logprob: -8.136735916137695
    7. '):' → logprob: -8.636735916137695
    8. '.
' → logprob: -8.886735916137695
    9. ')
' → logprob: -9.011735916137695
    10. ':
' → logprob: -9.136735916137695

Token 831: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004658233083318919
    2. '
' → logprob: -8.250465393066406
    3. '```' → logprob: -8.625465393066406
    4. '    
' → logprob: -10.750465393066406
    5. '``' → logprob: -14.000465393066406
    6. 'MOD' → logprob: -14.500465393066406
    7. '  
' → logprob: -15.000465393066406
    8. 'def' → logprob: -15.250465393066406
    9. '       ' → logprob: -15.625465393066406
    10. '"""' → logprob: -15.875465393066406

Token 832: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05277553200721741
    2. '
' → logprob: -3.0527756214141846
    3. '```' → logprob: -5.6777753829956055
    4. '    
' → logprob: -7.4277753829956055
    5. 'MOD' → logprob: -9.302775382995605
    6. '``' → logprob: -11.177775382995605
    7. '
' → logprob: -11.677775382995605
    8. ')' → logprob: -11.802775382995605
    9. 'import' → logprob: -11.927775382995605
    10. 'def' → logprob: -12.052775382995605

Token 833: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017815368482843041
    2. '```' → logprob: -9.000178337097168
    3. 'N' → logprob: -9.875178337097168
    4. '    
' → logprob: -13.000178337097168
    5. '``' → logprob: -14.500178337097168
    6. '
' → logprob: -16.25017738342285
    7. '       ' → logprob: -16.25017738342285
    8. '`' → logprob: -16.25017738342285
    9. '   ' → logprob: -16.75017738342285
    10. 'def' → logprob: -16.87517738342285

Token 834: ' MOD' (ID: 32868)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009143244242295623
    2. '   ' → logprob: -7.000914096832275
    3. ' N' → logprob: -12.875914573669434
    4. '```' → logprob: -15.375914573669434
    5. '	N' → logprob: -17.625913619995117
    6. '  ' → logprob: -18.875913619995117
    7. ' ' → logprob: -19.625913619995117
    8. 'n' → logprob: -19.875913619995117
    9. '`' → logprob: -20.250913619995117
    10. '       ' → logprob: -21.000913619995117

Token 835: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048170737922192
    2. '=' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.261048316955566
    4. ',' → logprob: -17.01104736328125
    5. ' =
' → logprob: -18.51104736328125
    6. ' ' → logprob: -19.01104736328125
    7. '=int' → logprob: -19.51104736328125
    8. ':' → logprob: -19.51104736328125
    9. ')' → logprob: -19.76104736328125
    10. '	' → logprob: -20.26104736328125

Token 836: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0012055885745212436
    2. ' ' → logprob: -6.7512054443359375
    3. '100' → logprob: -10.251205444335938
    4. '1' → logprob: -17.126205444335938
    5. '```' → logprob: -19.876205444335938
    6. '   ' → logprob: -20.001205444335938
    7. '(' → logprob: -20.126205444335938
    8. 'int' → logprob: -20.501205444335938
    9. ' ' → logprob: -20.626205444335938
    10. '109' → logprob: -22.126205444335938

Token 837: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.615255839889869e-05
    2. '100' → logprob: -9.250096321105957
    3. ' ' → logprob: -18.37509536743164
    4. '1' → logprob: -20.25009536743164
    5. '(' → logprob: -20.50009536743164
    6. 'int' → logprob: -21.00009536743164
    7. '１０' → logprob: -22.50009536743164
    8. '109' → logprob: -23.12509536743164
    9. '```' → logprob: -23.62509536743164
    10. '۱۰' → logprob: -24.75009536743164

Token 838: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.005962691269814968
    2. '9' → logprob: -5.13096284866333
    3. ' **' → logprob: -11.380962371826172
    4. '+' → logprob: -11.380962371826172
    5. '09' → logprob: -11.880962371826172
    6. '000' → logprob: -13.380962371826172
    7. '*' → logprob: -14.005962371826172
    8. '```' → logprob: -14.130962371826172
    9. '^' → logprob: -14.505962371826172
    10. ' ' → logprob: -15.255962371826172

Token 839: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -20.375
    3. '+' → logprob: -23.0
    4. '```' → logprob: -23.375
    5. ' ' → logprob: -24.5
    6. '９' → logprob: -25.5
    7. '۹' → logprob: -26.5
    8. '=' → logprob: -27.125
    9. '_' → logprob: -27.75
    10. '९' → logprob: -27.875

Token 840: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804183006286621
    2. ' +' → logprob: -3.288041830062866
    3. ' ' → logprob: -16.413042068481445
    4. ' ' → logprob: -16.663042068481445
    5. '7' → logprob: -17.038042068481445
    6. ' plus' → logprob: -17.538042068481445
    7. '＋' → logprob: -18.038042068481445
    8. '   ' → logprob: -18.538042068481445
    9. '+
' → logprob: -18.538042068481445
    10. ' +
' → logprob: -19.288042068481445

Token 841: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.125
    3. '07' → logprob: -20.75
    4. '```' → logprob: -21.625
    5. ' ' → logprob: -23.875
    6. '

' → logprob: -24.375
    7. '
' → logprob: -24.5
    8. '9' → logprob: -25.0
    9. '   ' → logprob: -25.0
    10. '' → logprob: -25.375

Token 842: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -16.75
    3. '```' → logprob: -20.625
    4. '07' → logprob: -21.375
    5. '

' → logprob: -23.5
    6. '9' → logprob: -23.75
    7. '
' → logprob: -24.0
    8. '   ' → logprob: -24.625
    9. ' ' → logprob: -24.875
    10. '``' → logprob: -25.625

Token 843: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24266910552978516
    2. '   ' → logprob: -1.6176691055297852
    3. '    
' → logprob: -4.617669105529785
    4. 'N' → logprob: -5.117669105529785
    5. '  
' → logprob: -7.242669105529785
    6. ',
' → logprob: -9.117669105529785
    7. 'n' → logprob: -9.617669105529785
    8. ' 
' → logprob: -9.742669105529785
    9. '```' → logprob: -9.742669105529785
    10. ',' → logprob: -9.867669105529785

Token 844: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07889220863580704
    2. 'N' → logprob: -2.578892230987549
    3. ' N' → logprob: -12.95389175415039
    4. '```' → logprob: -15.95389175415039
    5. ' ' → logprob: -17.70389175415039
    6. '	N' → logprob: -17.82889175415039
    7. '  ' → logprob: -18.95389175415039
    8. '`' → logprob: -19.07889175415039
    9. 'n' → logprob: -19.07889175415039
    10. '   ' → logprob: -19.07889175415039

Token 845: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.56102097814437e-05
    2. '   ' → logprob: -10.000045776367188
    3. ' N' → logprob: -16.000045776367188
    4. '```' → logprob: -19.750045776367188
    5. '	N' → logprob: -21.750045776367188
    6. '`' → logprob: -22.000045776367188
    7. ' ' → logprob: -22.375045776367188
    8. '    
' → logprob: -22.375045776367188
    9. '  ' → logprob: -22.625045776367188
    10. '#' (adapté à ' #') → logprob: -22.750045776367188

Token 846: ' Lecture' (ID: 106534)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0921942703134846e-05
    2. '   ' → logprob: -11.75001049041748
    3. ' N' → logprob: -12.75001049041748
    4. '```' → logprob: -16.375011444091797
    5. 'n' → logprob: -19.000011444091797
    6. '#' → logprob: -19.375011444091797
    7. '`' → logprob: -19.500011444091797
    8. '
' → logprob: -20.250011444091797
    9. '    
' → logprob: -20.375011444091797
    10. 'def' → logprob: -20.500011444091797

Token 847: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6446102857589722
    2. '   ' → logprob: -1.1446102857589722
    3. '(N' → logprob: -2.3946104049682617
    4. '(' → logprob: -3.5196104049682617
    5. 'N' → logprob: -3.7696104049682617
    6. '(
' → logprob: -6.394610404968262
    7. 'de' → logprob: -6.644610404968262
    8. ' N' → logprob: -6.769610404968262
    9. 'des' → logprob: -6.769610404968262
    10. '```' → logprob: -6.894610404968262

Token 848: ' l' (ID: 305)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.022387532517313957
    2. ' N' → logprob: -4.022387504577637
    3. '   ' → logprob: -6.147387504577637
    4. 'la' → logprob: -7.022387504577637
    5. ' la' → logprob: -7.772387504577637
    6. 'input' → logprob: -8.522387504577637
    7. ')' → logprob: -8.647387504577637
    8. ' ' → logprob: -9.272387504577637
    9. 'l' → logprob: -9.522387504577637
    10. ' input' → logprob: -10.147387504577637

Token 849: ''entrée' (ID: 115820)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.1345946043729782
    2. 'input' → logprob: -2.634594678878784
    3. 'N' → logprob: -4.134594440460205
    4. '_input' → logprob: -4.384594440460205
    5. ' input' → logprob: -5.259594440460205
    6. ' N' → logprob: -5.259594440460205
    7. 'entrée' → logprob: -5.384594440460205
    8. ''entrée' → logprob: -5.759594440460205
    9. 'puts' → logprob: -6.134594440460205
    10. ' put' → logprob: -6.759594440460205

Token 850: ' utilisateur' (ID: 115595)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3522306978702545
    2. '   ' → logprob: -1.2272306680679321
    3. '
' → logprob: -7.102230548858643
    4. '    
' → logprob: -7.352230548858643
    5. ' N' → logprob: -7.352230548858643
    6. '```' → logprob: -7.352230548858643
    7. 'n' → logprob: -7.602230548858643
    8. '(N' → logprob: -8.3522310256958
    9. ',' → logprob: -8.8522310256958
    10. ')' → logprob: -10.3522310256958

Token 851: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5303584337234497
    2. 'N' → logprob: -0.9053584337234497
    3. '(N' → logprob: -5.65535831451416
    4. ' N' → logprob: -6.40535831451416
    5. '    
' → logprob: -7.78035831451416
    6. ')' → logprob: -8.15535831451416
    7. '()' → logprob: -8.28035831451416
    8. ',' → logprob: -8.28035831451416
    9. '```' → logprob: -8.78035831451416
    10. '
' → logprob: -8.90535831451416

Token 852: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20305180549621582
    2. 'N' → logprob: -1.7030518054962158
    3. ' N' → logprob: -6.953051567077637
    4. ',' → logprob: -8.203051567077637
    5. '```' → logprob: -8.453051567077637
    6. '    
' → logprob: -9.328051567077637
    7. 'n' → logprob: -10.078051567077637
    8. '
' → logprob: -11.203051567077637
    9. ')' → logprob: -11.703051567077637
    10. '(N' → logprob: -11.828051567077637

Token 853: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.000217006730963476
    2. ' N' → logprob: -8.75021743774414
    3. '   ' → logprob: -9.75021743774414
    4. '```' → logprob: -15.50021743774414
    5. ' ' → logprob: -17.25021743774414
    6. '  ' → logprob: -17.50021743774414
    7. 'n' → logprob: -18.25021743774414
    8. '
' → logprob: -18.25021743774414
    9. '	N' → logprob: -18.25021743774414
    10. '    
' → logprob: -18.75021743774414

Token 854: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008463177946396172
    2. '=' → logprob: -7.6258463859558105
    3. ' =' → logprob: -8.625845909118652
    4. '   ' → logprob: -8.750845909118652
    5. ' ,' → logprob: -11.625845909118652
    6. ')' → logprob: -12.250845909118652
    7. ',N' → logprob: -12.625845909118652
    8. '<|end|>' → logprob: -13.875845909118652
    9. ',C' → logprob: -14.625845909118652
    10. '```' → logprob: -14.750845909118652

Token 855: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.061968132853507996
    2. 'C' → logprob: -2.8119680881500244
    3. ' ' → logprob: -14.811967849731445
    4. ' ' → logprob: -16.561967849731445
    5. '   ' → logprob: -17.311967849731445
    6. '	C' → logprob: -17.936967849731445
    7. '    ' → logprob: -18.811967849731445
    8. ')' → logprob: -18.811967849731445
    9. '  ' → logprob: -19.311967849731445
    10. '_C' → logprob: -19.436967849731445

Token 856: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17418888211250305
    2. '=' → logprob: -1.9241888523101807
    3. ',' → logprob: -4.29918909072876
    4. '   ' → logprob: -8.549188613891602
    5. ')' → logprob: -10.049188613891602
    6. '<|end|>' → logprob: -10.299188613891602
    7. ' ' → logprob: -12.924188613891602
    8. '  ' → logprob: -12.924188613891602
    9. ' ,' → logprob: -13.174188613891602
    10. '    ' → logprob: -13.174188613891602

Token 857: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.01416350994259119
    2. 'read' → logprob: -4.264163494110107
    3. '	read' → logprob: -17.389163970947266
    4. '(read' → logprob: -19.639163970947266
    5. '_read' → logprob: -20.639163970947266
    6. '   ' → logprob: -21.014163970947266
    7. ' ' → logprob: -21.389163970947266
    8. '.read' → logprob: -21.889163970947266
    9. 'Read' → logprob: -22.014163970947266
    10. '  ' → logprob: -23.014163970947266

Token 858: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.002831864869222045
    2. '_' → logprob: -5.877831935882568
    3. '_inputs' → logprob: -11.87783145904541
    4. '(' → logprob: -12.00283145904541
    5. ' _' → logprob: -12.87783145904541
    6. '_output' → logprob: -13.25283145904541
    7. 'input' → logprob: -13.50283145904541
    8. '_line' → logprob: -13.75283145904541
    9. '```' → logprob: -13.75283145904541
    10. '_Input' → logprob: -13.87783145904541

Token 859: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2678351104259491
    2. '   ' → logprob: -1.6428351402282715
    3. '    
' → logprob: -3.3928351402282715
    4. 'max' → logprob: -5.5178351402282715
    5. '<|end|>' → logprob: -5.8928351402282715
    6. '  
' → logprob: -8.017834663391113
    7. '(max' → logprob: -8.767834663391113
    8. '

' → logprob: -9.017834663391113
    9. '   
' → logprob: -9.392834663391113
    10. ',' → logprob: -9.517834663391113

Token 860: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05698538199067116
    2. 'max' → logprob: -2.931985378265381
    3. ' max' → logprob: -6.431985378265381
    4. '
' → logprob: -8.181985855102539
    5. '    
' → logprob: -9.306985855102539
    6. 'dp' → logprob: -9.431985855102539
    7. ',' → logprob: -10.806985855102539
    8. '```' → logprob: -12.056985855102539
    9. ' dp' → logprob: -12.681985855102539
    10. '(max' → logprob: -12.806985855102539

Token 861: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.46562543511390686
    2. '   ' → logprob: -1.4656254053115845
    3. ' max' → logprob: -1.9656254053115845
    4. 'dp' → logprob: -7.090625286102295
    5. ' dp' → logprob: -7.840625286102295
    6. '```' → logprob: -12.090625762939453
    7. '	max' → logprob: -12.340625762939453
    8. ' ' → logprob: -12.590625762939453
    9. '  ' → logprob: -12.590625762939453
    10. ' maximum' → logprob: -12.840625762939453

Token 862: ' Initial' (ID: 9209)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.018186818808317184
    2. ' max' → logprob: -4.018187046051025
    3. 'dp' → logprob: -10.268186569213867
    4. ' dp' → logprob: -13.893186569213867
    5. '   ' → logprob: -14.268186569213867
    6. 'maximum' → logprob: -16.018186569213867
    7. '```' → logprob: -16.143186569213867
    8. '(max' → logprob: -16.143186569213867
    9. '	max' → logprob: -16.643186569213867
    10. 'if' → logprob: -16.768186569213867

Token 863: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.0009795783553272486
    2. 'ialize' → logprob: -7.875979423522949
    3. '   ' → logprob: -8.25097942352295
    4. 'er' → logprob: -9.12597942352295
    5. 'izer' → logprob: -9.25097942352295
    6. 'e' → logprob: -9.50097942352295
    7. 'ise' → logprob: -10.62597942352295
    8. 'iser' → logprob: -11.00097942352295
    9. 'max' → logprob: -12.62597942352295
    10. 'ization' → logprob: -12.87597942352295

Token 864: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.597445547580719
    2. 'dp' → logprob: -0.972445547580719
    3. ',' → logprob: -2.722445487976074
    4. ' dp' → logprob: -5.347445487976074
    5. '(dp' → logprob: -7.597445487976074
    6. '_dp' → logprob: -7.847445487976074
    7. '_,' → logprob: -9.347445487976074
    8. ' ,' → logprob: -9.597445487976074
    9. ' ' → logprob: -10.722445487976074
    10. '  ' → logprob: -10.847445487976074

Token 865: ' tableaux' (ID: 176599)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0036771558225154877
    2. ' dp' → logprob: -5.6286773681640625
    3. 'max' → logprob: -9.753677368164062
    4. '   ' → logprob: -12.003677368164062
    5. '_dp' → logprob: -12.503677368164062
    6. '(dp' → logprob: -12.753677368164062
    7. ',' → logprob: -13.253677368164062
    8. '```' → logprob: -14.128677368164062
    9. '	dp' → logprob: -14.253677368164062
    10. ' max' → logprob: -14.503677368164062

Token 866: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1267472803592682
    2. 'dp' → logprob: -2.2517473697662354
    3. ',' → logprob: -4.876747131347656
    4. ' dp' → logprob: -5.126747131347656
    5. '(dp' → logprob: -8.501747131347656
    6. ' ,' → logprob: -11.001747131347656
    7. '
' → logprob: -11.501747131347656
    8. '    
' → logprob: -11.501747131347656
    9. '_dp' → logprob: -11.751747131347656
    10. '  ' → logprob: -12.001747131347656

Token 867: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03393508866429329
    2. 'dp' → logprob: -3.408935070037842
    3. ' dp' → logprob: -8.658935546875
    4. ',' → logprob: -9.158935546875
    5. 'max' → logprob: -12.783935546875
    6. '(dp' → logprob: -13.033935546875
    7. '   ' → logprob: -13.908935546875
    8. '	dp' → logprob: -13.908935546875
    9. '    
' → logprob: -14.033935546875
    10. '  ' → logprob: -14.408935546875

Token 868: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3382529616355896
    2. 'dp' (adapté à ' dp') → logprob: -1.4632530212402344
    3. '   ' → logprob: -3.0882530212402344
    4. ' max' → logprob: -4.963253021240234
    5. 'max' → logprob: -5.838253021240234
    6. '	dp' → logprob: -12.338253021240234
    7. '(dp' → logprob: -13.213253021240234
    8. '  ' → logprob: -13.213253021240234
    9. '    ' → logprob: -13.338253021240234
    10. ' ' → logprob: -13.338253021240234

Token 869: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.128163257315464e-07
    2. ' ,' → logprob: -15.75
    3. ' =' → logprob: -17.5
    4. '   ' → logprob: -17.625
    5. ',N' → logprob: -17.75
    6. '=' → logprob: -18.0
    7. '_,' → logprob: -18.25
    8. ',max' → logprob: -18.375
    9. 'max' → logprob: -18.5
    10. ',r' → logprob: -18.625

Token 870: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07011859863996506
    2. ' r' → logprob: -2.6951186656951904
    3. '   ' → logprob: -9.07011890411377
    4. 'max' → logprob: -9.94511890411377
    5. '    ' → logprob: -11.32011890411377
    6. ' max' → logprob: -12.69511890411377
    7. '  ' → logprob: -13.44511890411377
    8. ' ' → logprob: -14.44511890411377
    9. '    
' → logprob: -15.19511890411377
    10. '     ' → logprob: -15.19511890411377

Token 871: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006299942615441978
    2. '=' → logprob: -7.500629901885986
    3. ',r' → logprob: -10.000630378723145
    4. ' ,' → logprob: -10.875630378723145
    5. ' =' → logprob: -11.375630378723145
    6. ',
' → logprob: -15.000630378723145
    7. '   ' → logprob: -16.000629425048828
    8. 'r' → logprob: -16.125629425048828
    9. '```' → logprob: -16.625629425048828
    10. ',_' → logprob: -16.750629425048828

Token 872: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.10020806640386581
    2. ' prev' → logprob: -2.350208044052124
    3. '	prev' → logprob: -14.225208282470703
    4. '   ' → logprob: -15.100208282470703
    5. '(prev' → logprob: -15.475208282470703
    6. '_prev' → logprob: -15.975208282470703
    7. '.prev' → logprob: -16.600208282470703
    8. ' ' → logprob: -17.725208282470703
    9. '    ' → logprob: -18.100208282470703
    10. 'Prev' → logprob: -18.225208282470703

Token 873: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575950026512146
    2. ' =' → logprob: -0.825950026512146
    3. ',' → logprob: -11.575949668884277
    4. '   ' → logprob: -14.950949668884277
    5. '<|end|>' → logprob: -15.450949668884277
    6. ')' → logprob: -15.575949668884277
    7. ' ' → logprob: -15.825949668884277
    8. '[' → logprob: -17.075950622558594
    9. '=

' → logprob: -17.200950622558594
    10. '=
' → logprob: -17.700950622558594

Token 874: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.07889033854007721
    2. ' initialize' → logprob: -2.578890323638916
    3. '	initialize' → logprob: -15.203890800476074
    4. '_initialize' → logprob: -15.453890800476074
    5. '.initialize' → logprob: -16.203889846801758
    6. '   ' → logprob: -17.078889846801758
    7. 'initial' → logprob: -18.828889846801758
    8. 'itialize' → logprob: -19.203889846801758
    9. 'Initialize' → logprob: -19.578889846801758
    10. 'initialized' → logprob: -19.578889846801758

Token 875: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.026467734947800636
    2. 'dp' → logprob: -3.651467800140381
    3. '(N' → logprob: -9.026467323303223
    4. ' dp' → logprob: -10.901467323303223
    5. '(dp' → logprob: -11.276467323303223
    6. '   ' → logprob: -12.401467323303223
    7. '_' → logprob: -13.026467323303223
    8. '_d' → logprob: -13.526467323303223
    9. ' (' → logprob: -13.901467323303223
    10. 'DP' → logprob: -13.901467323303223

Token 876: '_arrays' (ID: 182581)
  Prédit: '_arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arrays' → logprob: -0.00024168188974726945
    2. 'arrays' → logprob: -8.62524127960205
    3. 'Arrays' → logprob: -10.50024127960205
    4. '(N' → logprob: -10.75024127960205
    5. '_' → logprob: -12.12524127960205
    6. '_array' → logprob: -12.87524127960205
    7. ' arrays' → logprob: -13.62524127960205
    8. 'array' → logprob: -14.25024127960205
    9. '```' → logprob: -14.62524127960205
    10. '_lists' → logprob: -14.87524127960205

Token 877: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.750006675720215
    3. 'N' → logprob: -13.125006675720215
    4. '(
' → logprob: -13.625006675720215
    5. ' (' → logprob: -15.625006675720215
    6. '   ' → logprob: -16.6250057220459
    7. '(C' → logprob: -16.7500057220459
    8. '```' → logprob: -17.3750057220459
    9. '[N' → logprob: -17.5000057220459
    10. 'C' → logprob: -18.3750057220459

Token 878: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.23917081207037e-05
    2. '   ' → logprob: -11.000041961669922
    3. ' ,' → logprob: -11.375041961669922
    4. ',max' → logprob: -11.625041961669922
    5. ',
' → logprob: -13.375041961669922
    6. 'max' → logprob: -13.625041961669922
    7. ',C' → logprob: -13.625041961669922
    8. ',N' → logprob: -14.500041961669922
    9. ')' → logprob: -16.125041961669922
    10. '),' → logprob: -16.375041961669922

Token 879: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002615742268972099
    2. ' max' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.750261306762695
    4. '(max' → logprob: -16.000261306762695
    5. '
' → logprob: -17.125261306762695
    6. '[max' → logprob: -17.750261306762695
    7. 'maximum' → logprob: -18.750261306762695
    8. '	max' → logprob: -18.875261306762695
    9. 'len' → logprob: -19.125261306762695
    10. '=max' → logprob: -19.625261306762695

Token 880: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.11473700404167175
    2. '_C' → logprob: -2.239737033843994
    3. '(' → logprob: -6.989737033843994
    4. 'C' → logprob: -7.739737033843994
    5. '(
' → logprob: -7.739737033843994
    6. '_' → logprob: -9.864736557006836
    7. ')' → logprob: -10.614736557006836
    8. '(_' → logprob: -10.864736557006836
    9. '(

' → logprob: -12.239736557006836
    10. '```' → logprob: -12.364736557006836

Token 881: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25271353125572205
    2. ')+' → logprob: -1.6277135610580444
    3. '))' → logprob: -3.627713441848755
    4. '))+' → logprob: -8.252713203430176
    5. ' )' → logprob: -10.377713203430176
    6. ')))' → logprob: -11.002713203430176
    7. '))
' → logprob: -11.627713203430176
    8. '   ' → logprob: -11.877713203430176
    9. '[' → logprob: -12.002713203430176
    10. '+' → logprob: -12.002713203430176

Token 882: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005337166599929333
    2. 'build' → logprob: -6.005337238311768
    3. '    
' → logprob: -6.505337238311768
    4. '
' → logprob: -7.255337238311768
    5. ')' → logprob: -7.630337238311768
    6. ' build' → logprob: -9.50533676147461
    7. '  
' → logprob: -10.63033676147461
    8. '```' → logprob: -10.63033676147461
    9. '(build' → logprob: -11.13033676147461
    10. ')
' → logprob: -11.63033676147461

Token 883: ' #' (ID: 1069)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.2816408574581146
    2. '   ' → logprob: -1.406640887260437
    3. ' build' → logprob: -7.656641006469727
    4. '	build' → logprob: -12.531641006469727
    5. '```' → logprob: -12.906641006469727
    6. '
' → logprob: -13.031641006469727
    7. '    
' → logprob: -13.031641006469727
    8. '(build' → logprob: -13.156641006469727
    9. '   ' → logprob: -13.531641006469727
    10. '.build' → logprob: -13.906641006469727

Token 884: ' Construction' (ID: 31452)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -9.088346359931165e-07
    2. ' build' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.75
    4. '
' → logprob: -19.25
    5. '(build' → logprob: -19.625
    6. '#' → logprob: -20.25
    7. 'Build' → logprob: -20.5
    8. '.build' → logprob: -20.5
    9. '	build' → logprob: -20.625
    10. '```' → logprob: -21.375

Token 885: ' du' (ID: 1462)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.008718223311007023
    2. 'next' → logprob: -4.758718013763428
    3. 'des' → logprob: -10.008718490600586
    4. '   ' → logprob: -10.508718490600586
    5. 'du' → logprob: -11.508718490600586
    6. 'def' → logprob: -12.008718490600586
    7. 'Next' → logprob: -12.508718490600586
    8. 'r' → logprob: -12.633718490600586
    9. '(next' → logprob: -13.133718490600586
    10. '_des' → logprob: -13.758718490600586

Token 886: ' tableau' (ID: 67053)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.04248863086104393
    2. 'r' → logprob: -3.2924885749816895
    3. '_next' → logprob: -5.6674885749816895
    4. ' next' → logprob: -7.1674885749816895
    5. 'build' → logprob: -9.542489051818848
    6. '```' → logprob: -10.542489051818848
    7. 'Next' → logprob: -10.667489051818848
    8. '
' → logprob: -11.542489051818848
    9. '(next' → logprob: -11.667489051818848
    10. '[next' → logprob: -11.792489051818848

Token 887: ' d' (ID: 272)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7043511867523193
    2. '_next' → logprob: -1.0793511867523193
    3. 'next' → logprob: -1.8293511867523193
    4. ' next' → logprob: -5.704351425170898
    5. ' r' → logprob: -6.954351425170898
    6. 'des' → logprob: -8.454351425170898
    7. 'Next' → logprob: -8.829351425170898
    8. '_r' → logprob: -9.204351425170898
    9. '(r' → logprob: -9.704351425170898
    10. '(next' → logprob: -9.829351425170898

Token 888: ''' (ID: 6)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6771401166915894
    2. 'indices' → logprob: -0.9271401166915894
    3. 'next' → logprob: -2.802140235900879
    4. 'e' → logprob: -3.927140235900879
    5. '"indices' → logprob: -5.927140235900879
    6. 'es' → logprob: -6.177140235900879
    7. '_next' → logprob: -6.177140235900879
    8. '_indices' → logprob: -6.302140235900879
    9. 'su' → logprob: -6.552140235900879
    10. ''' → logprob: -6.677140235900879

Token 889: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.02068786881864071
    2. 'next' → logprob: -4.645688056945801
    3. 'r' → logprob: -4.770688056945801
    4. 'pro' → logprob: -6.645688056945801
    5. 'indice' → logprob: -7.520688056945801
    6. 'su' → logprob: -8.6456880569458
    7. '"indices' → logprob: -9.2706880569458
    8. ' indices' → logprob: -10.0206880569458
    9. '_indices' → logprob: -10.1456880569458
    10. 'ind' → logprob: -10.2706880569458

Token 890: ' de' (ID: 334)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5336657166481018
    2. 'next' → logprob: -1.408665657043457
    3. '   ' → logprob: -2.158665657043457
    4. 'build' → logprob: -3.283665657043457
    5. '_next' → logprob: -4.658665657043457
    6. ' next' → logprob: -6.783665657043457
    7. '```' → logprob: -6.783665657043457
    8. ' r' → logprob: -7.283665657043457
    9. '(N' → logprob: -7.408665657043457
    10. 'b' → logprob: -8.033665657043457

Token 891: ' saut' (ID: 111480)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.749737560749054
    2. 'su' → logprob: -0.999737560749054
    3. 'pro' → logprob: -1.9997375011444092
    4. 'r' → logprob: -3.999737501144409
    5. 's' → logprob: -5.374737739562988
    6. 'prox' → logprob: -8.624737739562988
    7. 'sa' → logprob: -8.749737739562988
    8. 'succ' → logprob: -8.874737739562988
    9. '```' → logprob: -9.374737739562988
    10. 'suite' → logprob: -9.374737739562988

Token 892: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035692907869815826
    2. 'build' → logprob: -3.4106929302215576
    3. ' build' → logprob: -7.0356926918029785
    4. '(N' → logprob: -7.4106926918029785
    5. 'r' → logprob: -8.035693168640137
    6. '```' → logprob: -10.160693168640137
    7. '(build' → logprob: -10.410693168640137
    8. ' ' → logprob: -10.660693168640137
    9. '    
' → logprob: -10.785693168640137
    10. '  ' → logprob: -10.910693168640137

Token 893: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6963818073272705
    2. 'build' → logprob: -0.6963818073272705
    3. ' build' → logprob: -5.821381568908691
    4. '(build' → logprob: -8.571381568908691
    5. '```' → logprob: -9.946381568908691
    6. '
' → logprob: -12.071381568908691
    7. '    
' → logprob: -12.071381568908691
    8. '.build' → logprob: -12.321381568908691
    9. '	build' → logprob: -12.946381568908691
    10. ',' → logprob: -13.071381568908691

Token 894: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22145558893680573
    2. 'build' → logprob: -1.8464555740356445
    3. ' build' → logprob: -3.2214555740356445
    4. '(build' → logprob: -7.0964555740356445
    5. '```' → logprob: -10.346455574035645
    6. '(' → logprob: -10.596455574035645
    7. '.build' → logprob: -11.346455574035645
    8. '_build' → logprob: -11.971455574035645
    9. '	build' → logprob: -11.971455574035645
    10. ' (' → logprob: -12.096455574035645

Token 895: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' (adapté à ' build') → logprob: -2.248469718324486e-05
    2. ' build' → logprob: -10.750022888183594
    3. '   ' → logprob: -13.875022888183594
    4. '(build' → logprob: -19.625022888183594
    5. '```' → logprob: -19.625022888183594
    6. '.build' → logprob: -20.000022888183594
    7. '	build' → logprob: -20.125022888183594
    8. ' ' → logprob: -20.375022888183594
    9. '
' → logprob: -20.875022888183594
    10. '_build' → logprob: -21.625022888183594

Token 896: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -2.935296834039036e-06
    2. 'next' → logprob: -12.87500286102295
    3. '_' → logprob: -16.250003814697266
    4. '```' → logprob: -16.625003814697266
    5. ')_' → logprob: -17.375003814697266
    6. '_NEXT' → logprob: -17.625003814697266
    7. '_new' → logprob: -17.625003814697266
    8. '\' → logprob: -17.875003814697266
    9. 'Next' → logprob: -18.125003814697266
    10. ' _' → logprob: -19.000003814697266

Token 897: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0003196154139004648
    2. '_next' → logprob: -8.125319480895996
    3. 'indices' → logprob: -11.000319480895996
    4. '_' → logprob: -12.750319480895996
    5. '```' → logprob: -13.500319480895996
    6. '(indices' → logprob: -14.125319480895996
    7. 'next' → logprob: -14.125319480895996
    8. '"indices' → logprob: -15.875319480895996
    9. '_codes' → logprob: -16.000320434570312
    10. '_positions' → logprob: -16.125320434570312

Token 898: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.500000953674316
    3. '(' → logprob: -15.000000953674316
    4. ' (' → logprob: -15.125000953674316
    5. 'N' → logprob: -16.875001907348633
    6. '(
' → logprob: -17.375001907348633
    7. 'def' → logprob: -17.750001907348633
    8. '
' → logprob: -18.000001907348633
    9. '(n' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.875001907348633

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017803447553887963
    2. ',C' → logprob: -8.750178337097168
    3. ' ,' → logprob: -11.125178337097168
    4. '   ' → logprob: -12.625178337097168
    5. '(C' → logprob: -14.375178337097168
    6. ',
' → logprob: -14.500178337097168
    7. 'C' → logprob: -15.000178337097168
    8. ')' → logprob: -16.87517738342285
    9. '```' → logprob: -17.37517738342285
    10. '(' → logprob: -18.12517738342285

Token 900: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.004621187690645456
    2. ' C' → logprob: -5.3796210289001465
    3. '   ' → logprob: -14.004621505737305
    4. ')' → logprob: -16.129621505737305
    5. ' ' → logprob: -18.004621505737305
    6. 'c' → logprob: -18.629621505737305
    7. '[' → logprob: -19.129621505737305
    8. '>C' → logprob: -19.129621505737305
    9. '	C' → logprob: -19.254621505737305
    10. '<|end|>' → logprob: -19.379621505737305

Token 901: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.438573680294212e-06
    2. ' ,' → logprob: -12.875005722045898
    3. ',r' → logprob: -13.125005722045898
    4. '   ' → logprob: -14.250005722045898
    5. 'r' → logprob: -16.1250057220459
    6. ',
' → logprob: -18.1250057220459
    7. ' r' → logprob: -20.1250057220459
    8. '‌,' → logprob: -20.2500057220459
    9. '```' → logprob: -20.5000057220459
    10. ')' → logprob: -20.6250057220459

Token 902: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00317783304490149
    2. ' r' → logprob: -5.753177642822266
    3. 'prev' → logprob: -16.003177642822266
    4. '   ' → logprob: -17.628177642822266
    5. ')' → logprob: -20.128177642822266
    6. ' prev' → logprob: -21.378177642822266
    7. '
' → logprob: -21.503177642822266
    8. '    ' → logprob: -21.503177642822266
    9. '```' → logprob: -21.753177642822266
    10. '	r' → logprob: -21.878177642822266

Token 903: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.570319702499546e-05
    2. ' ,' → logprob: -10.625025749206543
    3. '   ' → logprob: -13.750025749206543
    4. ',
' → logprob: -16.375024795532227
    5. 'prev' → logprob: -16.500024795532227
    6. ' prev' → logprob: -19.625024795532227
    7. ',r' → logprob: -19.875024795532227
    8. '```' → logprob: -20.000024795532227
    9. ',p' → logprob: -20.125024795532227
    10. '(prev' → logprob: -20.250024795532227

Token 904: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -2.339278580620885e-06
    2. ' prev' → logprob: -13.000001907348633
    3. '   ' → logprob: -21.625001907348633
    4. '	prev' → logprob: -22.125001907348633
    5. '.prev' → logprob: -22.500001907348633
    6. '(prev' → logprob: -23.000001907348633
    7. 'previous' → logprob: -23.500001907348633
    8. '_prev' → logprob: -23.625001907348633
    9. 'Prev' → logprob: -23.875001907348633
    10. 'pre' → logprob: -23.875001907348633

Token 905: ')

' (ID: 1029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.537775993347168
    2. ')' → logprob: -1.162775993347168
    3. '
' → logprob: -2.287775993347168
    4. ')
' → logprob: -6.787775993347168
    5. '```' → logprob: -8.412775993347168
    6. '    
' → logprob: -8.662775993347168
    7. '<|end|>' → logprob: -9.287775993347168
    8. '

' → logprob: -9.412775993347168
    9. '  
' → logprob: -10.162775993347168
    10. 'compute' → logprob: -10.537775993347168

Token 906: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02763311378657818
    2. 'dp' → logprob: -3.6526331901550293
    3. ' dp' → logprob: -6.652633190155029
    4. '```' → logprob: -11.277632713317871
    5. '	dp' → logprob: -11.527632713317871
    6. '(dp' → logprob: -11.777632713317871
    7. 'DP' → logprob: -12.652632713317871
    8. '_dp' → logprob: -12.902632713317871
    9. '
' → logprob: -13.152632713317871
    10. '    
' → logprob: -13.402632713317871

Token 907: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.504040356958285e-05
    2. '   ' → logprob: -9.750064849853516
    3. 'compute' → logprob: -12.375064849853516
    4. ' dp' → logprob: -13.625064849853516
    5. '#' (adapté à ' #') → logprob: -13.750064849853516
    6. '```' → logprob: -16.625064849853516
    7. 'computed' → logprob: -17.750064849853516
    8. '	dp' → logprob: -18.125064849853516
    9. 'DP' → logprob: -18.375064849853516
    10. 'updated' → logprob: -18.500064849853516

Token 908: ' Calcul' (ID: 57243)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007110013975761831
    2. 'compute' → logprob: -7.250710964202881
    3. 'updated' → logprob: -14.500711441040039
    4. ' dp' → logprob: -15.500711441040039
    5. 'result' → logprob: -16.00071144104004
    6. '   ' → logprob: -16.50071144104004
    7. 'new' → logprob: -17.00071144104004
    8. 'computed' → logprob: -17.12571144104004
    9. '#' → logprob: -17.62571144104004
    10. 'final' → logprob: -18.00071144104004

Token 909: ' dynamique' (ID: 98708)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14763617515563965
    2. '   ' → logprob: -2.2726361751556396
    3. '_dp' → logprob: -3.3976361751556396
    4. 'result' → logprob: -8.022636413574219
    5. '(dp' → logprob: -8.897636413574219
    6. ' dp' → logprob: -9.272636413574219
    7. '_result' → logprob: -10.272636413574219
    8. '_' → logprob: -10.397636413574219
    9. '	dp' → logprob: -10.897636413574219
    10. '```' → logprob: -11.397636413574219

Token 910: ' des' (ID: 731)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12917600572109222
    2. '   ' → logprob: -2.129175901412964
    3. ' dp' → logprob: -6.379176139831543
    4. 'result' → logprob: -8.379176139831543
    5. '(dp' → logprob: -9.254176139831543
    6. ',' → logprob: -9.504176139831543
    7. '```' → logprob: -9.629176139831543
    8. ' =' → logprob: -10.629176139831543
    9. '	dp' → logprob: -11.754176139831543
    10. '_dp' → logprob: -11.879176139831543

Token 911: ' man' (ID: 873)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1472419600977446e-06
    2. ' dp' → logprob: -13.750000953674316
    3. '_dp' → logprob: -17.750001907348633
    4. 'result' → logprob: -19.375001907348633
    5. '	dp' → logprob: -19.750001907348633
    6. 'DP' → logprob: -20.750001907348633
    7. '   ' → logprob: -22.000001907348633
    8. '(dp' → logprob: -22.125001907348633
    9. 'd' → logprob: -22.375001907348633
    10. 'df' → logprob: -23.375001907348633

Token 912: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.01425071619451046
    2. 'dp' → logprob: -4.264250755310059
    3. 's' → logprob: -11.014250755310059
    4. 'ière' → logprob: -11.014250755310059
    5. ' dp' → logprob: -11.514250755310059
    6. '_dp' → logprob: -11.889250755310059
    7. 'p' → logprob: -12.014250755310059
    8. 'ners' → logprob: -12.264250755310059
    9. '   ' → logprob: -12.514250755310059
    10. 'iers' → logprob: -12.764250755310059

Token 913: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09114879369735718
    2. 'dp' → logprob: -2.466148853302002
    3. '=' → logprob: -6.966148853302002
    4. ' =' → logprob: -7.466148853302002
    5. 'de' → logprob: -8.341148376464844
    6. '(dp' → logprob: -8.466148376464844
    7. ' dp' → logprob: -8.716148376464844
    8. '  ' → logprob: -10.841148376464844
    9. ',' → logprob: -11.341148376464844
    10. 'result' → logprob: -11.466148376464844

Token 914: ''' (ID: 6)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.006080956198275089
    2. ''arr' → logprob: -5.2560811042785645
    3. 'atte' → logprob: -8.256080627441406
    4. 'ar' → logprob: -8.256080627441406
    5. 'y' → logprob: -8.381080627441406
    6. '_arr' → logprob: -10.506080627441406
    7. '_' → logprob: -11.881080627441406
    8. '-arr' → logprob: -12.256080627441406
    9. 'dp' → logprob: -12.381080627441406
    10. '__' → logprob: -12.381080627441406

Token 915: 'atte' (ID: 23975)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0016448341775685549
    2. 'atte' → logprob: -6.501644611358643
    3. 'y' → logprob: -10.0016450881958
    4. 'ar' → logprob: -10.2516450881958
    5. ''arr' → logprob: -10.3766450881958
    6. 'atter' → logprob: -11.2516450881958
    7. '```' → logprob: -12.3766450881958
    8. 'aller' → logprob: -12.5016450881958
    9. '`' → logprob: -13.2516450881958
    10. 'at' → logprob: -13.3766450881958

Token 916: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.31276169419288635
    2. 'nir' → logprob: -2.4377617835998535
    3. 'rir' → logprob: -2.5627617835998535
    4. 'r' → logprob: -2.5627617835998535
    5. 'nd' → logprob: -4.4377617835998535
    6. 'rr' → logprob: -4.6877617835998535
    7. 'venir' → logprob: -6.3127617835998535
    8. 'rier' → logprob: -7.1877617835998535
    9. 'rer' → logprob: -7.4377617835998535
    10. 'inir' → logprob: -7.8127617835998535

Token 917: ' chaque' (ID: 21194)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0010742536978796124
    2. 'N' → logprob: -7.501074314117432
    3. 'l' → logprob: -8.876073837280273
    4. '   ' → logprob: -9.001073837280273
    5. 'le' → logprob: -9.251073837280273
    6. 'de' → logprob: -10.126073837280273
    7. ' la' → logprob: -10.251073837280273
    8. '(N' → logprob: -11.251073837280273
    9. '```' → logprob: -11.251073837280273
    10. 'final' → logprob: -11.501073837280273

Token 918: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0010993726318702102
    2. 'index' → logprob: -7.626099586486816
    3. 'pos' → logprob: -7.751099586486816
    4. 'indice' → logprob: -9.001099586486816
    5. ' position' → logprob: -10.376099586486816
    6. 'i' → logprob: -11.501099586486816
    7. 'point' → logprob: -12.126099586486816
    8. '   ' → logprob: -12.251099586486816
    9. '```' → logprob: -13.126099586486816
    10. 'idx' → logprob: -13.751099586486816

Token 919: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3882320821285248
    2. '   ' → logprob: -1.1382321119308472
    3. ' dp' → logprob: -6.638232231140137
    4. 'result' → logprob: -10.388232231140137
    5. '
' → logprob: -12.263232231140137
    6. '(dp' → logprob: -12.388232231140137
    7. 'compute' → logprob: -12.888232231140137
    8. '	dp' → logprob: -13.263232231140137
    9. 'final' → logprob: -13.513232231140137
    10. '    
' → logprob: -13.888232231140137

Token 920: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6958594918251038
    2. 'dp' → logprob: -0.6958594918251038
    3. ' dp' → logprob: -5.945859432220459
    4. 'result' → logprob: -9.445859909057617
    5. '```' → logprob: -12.820859909057617
    6. '(dp' → logprob: -13.195859909057617
    7. '	dp' → logprob: -13.320859909057617
    8. 'compute' → logprob: -13.695859909057617
    9. 'final' → logprob: -13.695859909057617
    10. ' result' → logprob: -13.820859909057617

Token 921: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -9.729906196298543e-06
    2. 'compute' → logprob: -11.750009536743164
    3. ' dp' → logprob: -13.500009536743164
    4. '   ' → logprob: -15.000009536743164
    5. 'result' → logprob: -16.625009536743164
    6. 'updated' → logprob: -18.000009536743164
    7. 'new' → logprob: -18.625009536743164
    8. 'computed' → logprob: -20.125009536743164
    9. 'final' → logprob: -20.500009536743164
    10. '	dp' → logprob: -20.750009536743164

Token 922: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3873572051525116
    2. ' =' → logprob: -1.137357234954834
    3. ',' → logprob: -7.637357234954834
    4. '<|end|>' → logprob: -13.262356758117676
    5. '<|end|>' → logprob: -14.512356758117676
    6. '＝' → logprob: -15.137356758117676
    7. ')' → logprob: -15.262356758117676
    8. '=
' → logprob: -16.012357711791992
    9. ')=' → logprob: -16.262357711791992
    10. '=com' → logprob: -16.262357711791992

Token 923: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0001234428636962548
    2. ' compute' → logprob: -9.000123023986816
    3. 'computer' → logprob: -20.375123977661133
    4. 'calculate' → logprob: -20.875123977661133
    5. '.compute' → logprob: -21.000123977661133
    6. '   ' → logprob: -21.875123977661133
    7. 'comput' → logprob: -23.125123977661133
    8. 'computed' → logprob: -23.125123977661133
    9. '_compute' → logprob: -24.000123977661133
    10. 'com' → logprob: -24.250123977661133

Token 924: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -7.3458322731312364e-06
    2. 'dp' → logprob: -11.875007629394531
    3. '(dp' → logprob: -15.750007629394531
    4. '_dc' → logprob: -16.12500762939453
    5. '_dt' → logprob: -17.75000762939453
    6. ' dp' → logprob: -17.87500762939453
    7. '_DP' → logprob: -17.87500762939453
    8. '_lp' → logprob: -18.37500762939453
    9. '	dp' → logprob: -18.50000762939453
    10. 'DP' → logprob: -18.62500762939453

Token 925: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -3.4285862057004124e-05
    2. '(' → logprob: -10.37503433227539
    3. 'N' → logprob: -13.50003433227539
    4. '```' → logprob: -13.75003433227539
    5. '(n' → logprob: -15.37503433227539
    6. 'dp' → logprob: -16.00003433227539
    7. '(len' → logprob: -16.50003433227539
    8. '[N' → logprob: -16.75003433227539
    9. '(
' → logprob: -16.87503433227539
    10. ' (' → logprob: -17.25003433227539

Token 926: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -11.625019073486328
    3. ',r' → logprob: -11.750019073486328
    4. '   ' → logprob: -13.250019073486328
    5. ',
' → logprob: -14.875019073486328
    6. 'r' → logprob: -15.375019073486328
    7. '‌,' → logprob: -17.000019073486328
    8. ')' → logprob: -17.250019073486328
    9. ' r' → logprob: -18.125019073486328
    10. '(r' → logprob: -18.625019073486328

Token 927: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25193196535110474
    2. ' r' → logprob: -1.50193190574646
    3. '   ' → logprob: -13.501932144165039
    4. ')' → logprob: -14.126932144165039
    5. '<|end|>' → logprob: -15.001932144165039
    6. '
' → logprob: -16.25193214416504
    7. ',' → logprob: -16.37693214416504
    8. '    ' → logprob: -16.87693214416504
    9. '```' → logprob: -16.87693214416504
    10. ' ' → logprob: -17.12693214416504

Token 928: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.869017852295656e-06
    2. ' ,' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.500006675720215
    4. ',
' → logprob: -16.25000762939453
    5. '‌,' → logprob: -18.37500762939453
    6. ')' → logprob: -18.50000762939453
    7. '```' → logprob: -18.75000762939453
    8. ',d' → logprob: -19.75000762939453
    9. 'dp' → logprob: -19.87500762939453
    10. '[' → logprob: -20.37500762939453

Token 929: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -7.505351095460355e-05
    2. ' dp' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.25007438659668
    4. 'MOD' → logprob: -18.12507438659668
    5. '	dp' → logprob: -18.12507438659668
    6. '```' → logprob: -19.87507438659668
    7. '(dp' → logprob: -20.12507438659668
    8. ' ' → logprob: -20.50007438659668
    9. ')' → logprob: -20.87507438659668
    10. '    
' → logprob: -21.50007438659668

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. ' ,' → logprob: -11.250015258789062
    3. '   ' → logprob: -13.375015258789062
    4. ',
' → logprob: -15.000015258789062
    5. '```' → logprob: -15.375015258789062
    6. ')' → logprob: -15.875015258789062
    7. '[' → logprob: -17.625015258789062
    8. '),' → logprob: -18.250015258789062
    9. '‌,' → logprob: -18.375015258789062
    10. '`,' → logprob: -18.500015258789062

Token 931: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.008614808320999146
    2. ' MOD' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.133614540100098
    4. '_MOD' → logprob: -17.008615493774414
    5. ' ' → logprob: -18.383615493774414
    6. '```' → logprob: -19.008615493774414
    7. '.MOD' → logprob: -19.008615493774414
    8. ')' → logprob: -19.133615493774414
    9. '10' → logprob: -20.133615493774414
    10. 'MO' → logprob: -20.258615493774414

Token 932: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2080702930688858
    2. '   ' → logprob: -1.7080702781677246
    3. ')
' → logprob: -5.083070278167725
    4. '
' → logprob: -7.958070278167725
    5. '    
' → logprob: -10.583070755004883
    6. '<|end|>' → logprob: -11.083070755004883
    7. '```' → logprob: -11.208070755004883
    8. ')

' → logprob: -11.333070755004883
    9. ',' → logprob: -12.333070755004883
    10. ' )' → logprob: -12.583070755004883

Token 933: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008571469807066023
    2. 'print' → logprob: -7.500857353210449
    3. '```' → logprob: -8.25085735321045
    4. 'return' → logprob: -10.62585735321045
    5. 'result' → logprob: -11.62585735321045
    6. '
' → logprob: -12.12585735321045
    7. '    
' → logprob: -12.75085735321045
    8. ' print' → logprob: -14.12585735321045
    9. ' return' → logprob: -14.62585735321045
    10. '``' → logprob: -15.37585735321045

Token 934: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38830193877220154
    2. '   ' → logprob: -1.138301968574524
    3. 'result' → logprob: -7.138301849365234
    4. '```' → logprob: -7.888301849365234
    5. 'return' → logprob: -8.388301849365234
    6. ' print' → logprob: -10.388301849365234
    7. '``' → logprob: -14.138301849365234
    8. '
' → logprob: -14.388301849365234
    9. '    
' → logprob: -14.763301849365234
    10. '	print' → logprob: -15.888301849365234

Token 935: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -14.500000953674316
    3. ' print' → logprob: -15.000000953674316
    4. '```' → logprob: -16.500001907348633
    5. 'return' → logprob: -17.000001907348633
    6. 'result' → logprob: -19.625001907348633
    7. '
' → logprob: -22.250001907348633
    8. '``' → logprob: -22.375001907348633
    9. '    
' → logprob: -23.250001907348633
    10. 'for' → logprob: -23.375001907348633

Token 936: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.005209682509303093
    2. '   ' → logprob: -5.755209445953369
    3. 'ichage' → logprob: -6.505209445953369
    4. 'iche' → logprob: -7.755209445953369
    5. 'ich' → logprob: -9.880209922790527
    6. '#' → logprob: -10.505209922790527
    7. 'ic' → logprob: -11.755209922790527
    8. 'cher' → logprob: -11.755209922790527
    9. '```' → logprob: -12.630209922790527
    10. '       ' → logprob: -13.505209922790527

Token 937: ' du' (ID: 1462)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.22298504412174225
    2. '   ' → logprob: -2.097985029220581
    3. 'print' → logprob: -3.347985029220581
    4. '(' → logprob: -3.722985029220581
    5. '(print' → logprob: -4.22298526763916
    6. 'dp' → logprob: -5.97298526763916
    7. '()
' → logprob: -8.84798526763916
    8. '()' → logprob: -9.47298526763916
    9. ' print' → logprob: -9.47298526763916
    10. '(
' → logprob: -9.72298526763916

Token 938: ' résultat' (ID: 62556)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.35732781887054443
    2. '(dp' → logprob: -1.2323278188705444
    3. 'print' → logprob: -5.482327938079834
    4. 'result' → logprob: -6.107327938079834
    5. ' dp' → logprob: -6.232327938079834
    6. '(' → logprob: -7.732327938079834
    7. '   ' → logprob: -11.482327461242676
    8. ' print' → logprob: -11.982327461242676
    9. ' result' → logprob: -12.107327461242676
    10. 'final' → logprob: -12.107327461242676

Token 939: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005617076996713877
    2. 'print' → logprob: -5.255617141723633
    3. '```' → logprob: -7.880617141723633
    4. ' print' → logprob: -12.380617141723633
    5. '    
' → logprob: -14.755617141723633
    6. '``' → logprob: -15.005617141723633
    7. '
' → logprob: -16.005617141723633
    8. '(print' → logprob: -16.630617141723633
    9. '`' → logprob: -17.005617141723633
    10. '	print' → logprob: -17.380617141723633

Token 940: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07971196621656418
    2. 'print' → logprob: -2.5797119140625
    3. ' print' → logprob: -7.5797119140625
    4. '```' → logprob: -8.0797119140625
    5. '`' → logprob: -14.7047119140625
    6. '(print' → logprob: -15.3297119140625
    7. '
' → logprob: -15.5797119140625
    8. '``' → logprob: -15.7047119140625
    9. '	print' → logprob: -15.7047119140625
    10. '    
' → logprob: -16.0797119140625

Token 941: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.3148411810398102
    2. ' MOD' → logprob: -1.3148411512374878
    3. '(M' → logprob: -7.939841270446777
    4. '   ' → logprob: -8.189841270446777
    5. ' (' → logprob: -8.689841270446777
    6. '```' → logprob: -8.939841270446777
    7. '10' → logprob: -9.064841270446777
    8. ' ' → logprob: -9.314841270446777
    9. 'dp' → logprob: -9.689841270446777
    10. ' ' → logprob: -9.939841270446777

Token 942: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.48463448882102966
    2. '   ' → logprob: -0.984634518623352
    3. '```' → logprob: -4.9846343994140625
    4. ' print' → logprob: -5.8596343994140625
    5. '
' → logprob: -7.4846343994140625
    6. '    
' → logprob: -9.109634399414062
    7. '(print' → logprob: -9.734634399414062
    8. '``' → logprob: -10.234634399414062
    9. '	print' → logprob: -10.734634399414062
    10. '  
' → logprob: -11.484634399414062

Token 943: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08423850685358047
    2. 'print' → logprob: -2.5842385292053223
    3. '```' → logprob: -5.334238529205322
    4. ' print' → logprob: -7.584238529205322
    5. '
' → logprob: -13.584238052368164
    6. '``' → logprob: -14.084238052368164
    7. '`' → logprob: -14.834238052368164
    8. '    
' → logprob: -16.709238052368164
    9. '	print' → logprob: -17.584238052368164
    10. '(print' → logprob: -18.584238052368164

Token 944: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00019865304057020694
    2. '   ' → logprob: -9.250198364257812
    3. '```' → logprob: -9.500198364257812
    4. ' print' → logprob: -10.500198364257812
    5. '``' → logprob: -16.500198364257812
    6. '`' → logprob: -16.750198364257812
    7. '	print' → logprob: -20.000198364257812
    8. '(print' → logprob: -20.375198364257812
    9. 'for' → logprob: -21.750198364257812
    10. '    
' → logprob: -22.000198364257812

Token 945: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0006333283381536603
    2. '(' → logprob: -7.375633239746094
    3. 'dp' → logprob: -12.125633239746094
    4. ' (' → logprob: -14.250633239746094
    5. ' dp' → logprob: -15.125633239746094
    6. '((' → logprob: -15.750633239746094
    7. '	dp' → logprob: -16.875633239746094
    8. '(df' → logprob: -16.875633239746094
    9. '(
' → logprob: -17.250633239746094
    10. '()' → logprob: -17.500633239746094

Token 946: '[N' (ID: 49776)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.088346359931165e-07
    2. '[N' → logprob: -14.125000953674316
    3. '[' → logprob: -16.125
    4. '   ' → logprob: -20.125
    5. ' [-' → logprob: -20.5
    6. '[len' → logprob: -20.5
    7. '-' → logprob: -20.75
    8. '[n' → logprob: -21.25
    9. '[
' → logprob: -21.625
    10. '```' → logprob: -22.25

Token 947: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.014684110297821e-06
    2. ' -' → logprob: -11.625008583068848
    3. '1' → logprob: -16.750009536743164
    4. '[' → logprob: -17.250009536743164
    5. '[-' → logprob: -18.375009536743164
    6. '   ' → logprob: -18.625009536743164
    7. ']' → logprob: -19.875009536743164
    8. '−' → logprob: -20.500009536743164
    9. '```' → logprob: -20.625009536743164
    10. ']-' → logprob: -21.875009536743164

Token 948: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.625
    3. ' ' → logprob: -17.125
    4. '   ' → logprob: -18.375
    5. ']' → logprob: -19.375
    6. ')' → logprob: -19.75
    7. '
' → logprob: -20.5
    8. '}' → logprob: -20.875
    9. '``' → logprob: -21.0
    10. '`' → logprob: -21.0

Token 949: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0009529097587801516
    2. ')' → logprob: -7.00095272064209
    3. ']' → logprob: -10.25095272064209
    4. ' ])' → logprob: -12.62595272064209
    5. '])
' → logprob: -14.50095272064209
    6. '))' → logprob: -14.62595272064209
    7. ')])' → logprob: -14.62595272064209
    8. ')]' → logprob: -15.00095272064209
    9. ']%' → logprob: -15.00095272064209
    10. '})' → logprob: -15.25095272064209

Token 950: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ' )' → logprob: -13.875001907348633
    3. '`)' → logprob: -15.000001907348633
    4. '))' → logprob: -15.875001907348633
    5. ')`' → logprob: -16.250001907348633
    6. ')
' → logprob: -16.750001907348633
    7. '")' → logprob: -17.000001907348633
    8. '}' → logprob: -17.000001907348633
    9. '})' → logprob: -17.000001907348633
    10. '```' → logprob: -17.000001907348633

Token 951: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00020532844064291567
    2. ' MOD' → logprob: -8.500205039978027
    3. '(M' → logprob: -13.500205039978027
    4. '(' → logprob: -15.000205039978027
    5. '(Mod' → logprob: -16.750205993652344
    6. '_MOD' → logprob: -16.875205993652344
    7. '100' → logprob: -17.375205993652344
    8. '.MOD' → logprob: -18.125205993652344
    9. ' (' → logprob: -18.250205993652344
    10. '(mod' → logprob: -19.375205993652344

Token 952: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.750000953674316
    4. '())' → logprob: -16.5
    5. '()' → logprob: -17.375
    6. '))' → logprob: -17.5
    7. '`)' → logprob: -17.625
    8. ')`' → logprob: -17.75
    9. '')' → logprob: -18.125
    10. '   ' → logprob: -18.75

Token 953: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23133160173892975
    2. '<|end|>' → logprob: -2.1063315868377686
    3. '```' → logprob: -2.6063315868377686
    4. '
' → logprob: -4.981331825256348
    5. '#' → logprob: -6.606331825256348
    6. ' if' → logprob: -7.106331825256348
    7. 'main' → logprob: -7.481331825256348
    8. '\n' → logprob: -8.356331825256348
    9. '``' → logprob: -8.606331825256348
    10. 'read' → logprob: -8.856331825256348

Token 954: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.014701995067298412
    2. '__' → logprob: -4.264701843261719
    3. '_' → logprob: -8.389701843261719
    4. ' ' → logprob: -9.014701843261719
    5. ' _' → logprob: -9.264701843261719
    6. ' main' → logprob: -10.014701843261719
    7. '_name' → logprob: -12.014701843261719
    8. '​' → logprob: -12.139701843261719
    9. ' ' → logprob: -12.139701843261719
    10. '_main' → logprob: -12.139701843261719

Token 955: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11559128016233444
    2. ' ==' → logprob: -2.615591287612915
    3. '==' → logprob: -3.365591287612915
    4. '=="' → logprob: -6.865591049194336
    5. ' __' → logprob: -8.365591049194336
    6. '__["' → logprob: -10.365591049194336
    7. '[' → logprob: -10.490591049194336
    8. '=='' → logprob: -10.490591049194336
    9. '__.__' → logprob: -10.990591049194336
    10. '_' → logprob: -11.240591049194336

Token 956: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.868328920158092e-05
    2. '==' → logprob: -11.000028610229492
    3. '__.__' → logprob: -11.625028610229492
    4. '=="' → logprob: -13.375028610229492
    5. ' ==' → logprob: -14.750028610229492
    6. '___' → logprob: -15.000028610229492
    7. '__["' → logprob: -15.125028610229492
    8. '____' → logprob: -15.500028610229492
    9. '__.' → logprob: -16.875028610229492
    10. '__('' → logprob: -17.125028610229492

Token 957: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07680824398994446
    2. '==' → logprob: -2.701808214187622
    3. '=="' → logprob: -5.326808452606201
    4. ' ==' → logprob: -6.451808452606201
    5. '=='' → logprob: -7.826808452606201
    6. '__.__' → logprob: -12.451807975769043
    7. '___' → logprob: -13.076807975769043
    8. '__["' → logprob: -13.826807975769043
    9. '===' → logprob: -13.951807975769043
    10. '_' → logprob: -14.201807975769043

Token 958: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014177384786307812
    2. ''' → logprob: -4.264177322387695
    3. '__' → logprob: -11.889177322387695
    4. ' "__' → logprob: -11.889177322387695
    5. ' '__' → logprob: -16.139177322387695
    6. '"name' → logprob: -17.764177322387695
    7. '("__' → logprob: -18.014177322387695
    8. '"user' → logprob: -18.139177322387695
    9. '"_' → logprob: -19.139177322387695
    10. '   ' → logprob: -19.139177322387695

Token 959: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011552656069397926
    2. '__' → logprob: -4.511552810668945
    3. 'name' → logprob: -8.261552810668945
    4. '__':
' → logprob: -8.886552810668945
    5. 'm' → logprob: -9.511552810668945
    6. 'python' → logprob: -11.136552810668945
    7. 'mp' → logprob: -12.261552810668945
    8. '__.' → logprob: -12.761552810668945
    9. 'if' → logprob: -13.511552810668945
    10. 'py' → logprob: -13.511552810668945

Token 960: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.16034527122974396
    2. '__' → logprob: -1.9103453159332275
    3. '__":
' → logprob: -9.160345077514648
    4. '__:' → logprob: -11.785345077514648
    5. '_' → logprob: -12.785345077514648
    6. '__('' → logprob: -13.535345077514648
    7. '==' → logprob: -14.035345077514648
    8. ''' → logprob: -14.285345077514648
    9. '__
' → logprob: -14.910345077514648
    10. ':' → logprob: -15.035345077514648

Token 961: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.007621533703058958
    2. ' main' → logprob: -4.882621765136719
    3. '	main' → logprob: -12.007621765136719
    4. '__' → logprob: -12.132621765136719
    5. '   ' → logprob: -13.132621765136719
    6. '_main' → logprob: -14.132621765136719
    7. '```' → logprob: -14.632621765136719
    8. '(main' → logprob: -14.882621765136719
    9. 'run' → logprob: -15.382621765136719
    10. 'python' → logprob: -16.13262176513672

Token 962: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.25
    3. '	main' → logprob: -24.25
    4. '   ' → logprob: -27.375
    5. '(main' → logprob: -27.5
    6. '.main' → logprob: -27.875
    7. '_main' → logprob: -28.5
    8. '__' → logprob: -28.875
    9. '```' → logprob: -29.75
    10. 'import' → logprob: -29.875

Token 963: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 961
Tokens correctement prédits (1ère position, stricte): 324
Tokens correctement prédits (1ère position, avec adaptation): 349
Tokens correctement prédits (top 10): 667
Précision stricte (1ère position): 33.71%
Précision adaptée (1ère position): 36.32%
Précision (top 10): 69.41%
================================================================================
