================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

# Lecture du nombre de balles N
N = int(input())
# Lecture de la chaîne de couleurs
S = input()

# Constante pour le calcul modulo
MOD = 998244353

class ModInt:
    """
    Classe pour effectuer des opérations arithmétiques sous un modulo donné.

    Attributs :
        x (int) : La valeur entière conservée modulo MOD.

    Méthodes :
        __add__, __sub__, __mul__, __truediv__, __pow__ : Surcharge des opérateurs pour permettre
            les opérations arithmétiques entre instances ModInt et entiers.
        __radd__, __rsub__, __rmul__, __rtruediv__, __rpow__ : Version réfléchie pour la commutativité.
        __str__, __repr__ : Pour l'affichage.
    """

    def __init__(self, x):
        """
        Initialise la valeur à x modulo MOD.
        """
        self.x = x % MOD

    def __str__(self):
        """
        Affiche la valeur entière.
        """
        return str(self.x)

    __repr__ = __str__

    def __add__(self, other):
        """
        Surcharge de l'opérateur +.
        """
        return (
            ModInt(self.x + other.x) if isinstance(other, ModInt) else
            ModInt(self.x + other)
        )

    def __sub__(self, other):
        """
        Surcharge de l'opérateur -.
        """
        return (
            ModInt(self.x - other.x) if isinstance(other, ModInt) else
            ModInt(self.x - other)
        )

    def __mul__(self, other):
        """
        Surcharge de l'opérateur *.
        """
        return (
            ModInt(self.x * other.x) if isinstance(other, ModInt) else
            ModInt(self.x * other)
        )

    def __truediv__(self, other):
        """
        Surcharge de l'opérateur / pour la division entière modulaire (avec inverse).
        """
        return (
            ModInt(self.x * pow(other.x, MOD - 2, MOD)) if isinstance(other, ModInt) else
            ModInt(self.x * pow(other, MOD - 2, MOD))
        )

    def __pow__(self, other):
        """
        Surcharge de l'opérateur ** pour la puissance modulaire.
        """
        return (
            ModInt(pow(self.x, other.x, MOD)) if isinstance(other, ModInt) else
            ModInt(pow(self.x, other, MOD))
        )

    def __radd__(self, other):
        """
        Surcharge réfléchie pour +.
        """
        return ModInt(other + self.x)

    def __rsub__(self, other):
        """
        Surcharge réfléchie pour -.
        """
        return ModInt(other - self.x)

    def __rmul__(self, other):
        """
        Surcharge réfléchie pour *.
        """
        return ModInt(other * self.x)

    def __rtruediv__(self, other):
        """
        Surcharge réfléchie pour /.
        """
        return ModInt(other * pow(self.x, MOD - 2, MOD))

    def __rpow__(self, other):
        """
        Surcharge réfléchie pour **.
        """
        return ModInt(pow(other, self.x, MOD))


def f(s, res, z, r, g, b, rg, gb, br):
    """
    Attribue la balle courante de couleur `s` à la personne éligible qui possède actuellement
    le plus de balles, en tenant compte des paires formées.

    Paramètres :
        s (str) : la couleur de la balle ('R', 'G' ou 'B')
        res (ModInt) : le nombre total de façons jusqu'à présent
        z (int) : nombre de personnes sans balle
        r (int) : nombre de personnes ayant 1 balle rouge
        g (int) : nombre de personnes ayant 1 balle verte
        b (int) : nombre de personnes ayant 1 balle bleue
        rg (int) : nombre de personnes ayant une rouge et une verte
        gb (int) : nombre de personnes ayant une verte et une bleue
        br (int) : nombre de personnes ayant une bleue et une rouge

    Retourne :
        Tuple : état actualisé après distribution de la balle courante.
    """
    # Pour chaque couleur, on priorise l'attribution à ceux qui ont déjà des paires spécifiques,
    # puis à ceux qui ont une balle de la couleur correspondante, ensuite ceux qui peuvent compléter une paire,
    # et enfin à une personne sans balle.
    if s == 'R':
        if gb:
            # Priorité : donner au groupe GB (deviendra RGB)
            return (res * gb, z, r, g, b, rg, gb - 1, br)
        elif g:
            # Ensuite : à une personne avec une verte (devient RG)
            return (res * g, z, r, g - 1, b, rg + 1, gb, br)
        elif b:
            # Ensuite : à une personne avec une bleue (devient BR)
            return (res * b, z, r, g, b - 1, rg, gb, br + 1)
        else:
            # Sinon : à une personne sans balle (devient R)
            return (res * z, z - 1, r + 1, g, b, rg, gb, br)
    elif s == 'G':
        if br:
            # Priorité : donner au groupe BR (devient RGB)
            return (res * br, z, r, g, b, rg, gb, br - 1)
        elif r:
            # Ensuite : à une personne avec une rouge (devient RG)
            return (res * r, z, r - 1, g, b, rg + 1, gb, br)
        elif b:
            # Ensuite : à une personne avec une bleue (devient GB)
            return (res * b, z, r, g, b - 1, rg, gb + 1, br)
        else:
            # Sinon : à une personne sans balle (devient G)
            return (res * z, z - 1, r, g + 1, b, rg, gb, br)
    else:  # s == 'B'
        if rg:
            # Priorité : donner au groupe RG (devient RGB)
            return (res * rg, z, r, g, b, rg - 1, gb, br)
        elif r:
            # Ensuite : à une personne avec une rouge (devient BR)
            return (res * r, z, r - 1, g, b, rg, gb, br + 1)
        elif g:
            # Ensuite : à une personne avec une verte (devient GB)
            return (res * g, z, r, g - 1, b, rg, gb + 1, br)
        else:
            # Sinon : à une personne sans balle (devient B)
            return (res * z, z - 1, r, g, b + 1, rg, gb, br)


# La variable `ans` capture le nombre total de façons possibles d'attribuer les balles,
# le reste de la tuile étant jeté (_).
# On utilise `reduce` pour appliquer la fonction `f` sur chaque balle dans l'ordre,
# en commençant par l'état initial :
# - res=ModInt(1) : 1 façon initiale
# - z=N : tous n'ont pas de balles au départ
# - r, g, b, rg, gb, br = 0 : aucun n'a une balle ou une paire au départ.
ans, *_ = reduce(
    lambda acc, s: f(s, *acc),  # Accumulateur mis à jour pour chaque balle
    S,                          # Itère sur la séquence de couleurs
    (ModInt(1), N, 0, 0, 0, 0, 0, 0)  # État initial
)

# Affiche le nombre de façons (modulo MOD)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025988943874835968
    2. 'def' → logprob: -4.025989055633545
    3. ',' → logprob: -6.150989055633545
    4. '\' → logprob: -6.525989055633545
    5. '```' → logprob: -6.525989055633545
    6. '(lambda' → logprob: -7.025989055633545
    7. '\(' → logprob: -8.025988578796387
    8. '(
' → logprob: -8.150988578796387
    9. '.' → logprob: -8.400988578796387
    10. ' ' → logprob: -8.525988578796387

Token 6: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.059408605098724365
    2. ' def' → logprob: -3.809408664703369
    3. 'def' → logprob: -4.559408664703369
    4. ' sum' → logprob: -5.059408664703369
    5. ' The' → logprob: -5.684408664703369
    6. ' reduce' → logprob: -5.934408664703369
    7. 'sum' → logprob: -6.309408664703369
    8. ' ```' → logprob: -6.309408664703369
    9. 'reduce' → logprob: -6.809408664703369
    10. ' #' → logprob: -6.934408664703369

Token 7: ' du' (ID: 1462)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5066536068916321
    2. ' ' → logprob: -1.3816535472869873
    3. '#' → logprob: -3.3816535472869873
    4. ',' → logprob: -3.6316535472869873
    5. 's' → logprob: -3.6316535472869873
    6. 'def' → logprob: -4.131653785705566
    7. ':' → logprob: -4.506653785705566
    8. '\' → logprob: -5.756653785705566
    9. '(' → logprob: -6.006653785705566
    10. ')' → logprob: -6.006653785705566

Token 8: ' nombre' (ID: 9733)
  Prédit: ' fichier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fichier' → logprob: -0.15338467061519623
    2. 'f' → logprob: -2.0283846855163574
    3. ' f' → logprob: -5.403384685516357
    4. 'texte' → logprob: -6.028384685516357
    5. ' file' → logprob: -6.903384685516357
    6. ' ' → logprob: -7.278384685516357
    7. ' fichiers' → logprob: -7.278384685516357
    8. ' fich' → logprob: -8.1533842086792
    9. ' code' → logprob: -8.9033842086792
    10. 'conten' → logprob: -9.1533842086792

Token 9: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.925740122795105
    2. 's' → logprob: -1.175740122795105
    3. 'd' → logprob: -2.4257402420043945
    4. ' ' → logprob: -2.8007402420043945
    5. '_de' → logprob: -3.5507402420043945
    6. 'de' → logprob: -3.9257402420043945
    7. ' d' → logprob: -4.0507402420043945
    8. ' de' → logprob: -4.3007402420043945
    9. '_d' → logprob: -4.3007402420043945
    10. ' =' → logprob: -4.6757402420043945

Token 10: ' ball' (ID: 7880)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.8510780334472656
    2. 'l' → logprob: -1.8510780334472656
    3. 'd' → logprob: -2.9760780334472656
    4. 's' → logprob: -3.4760780334472656
    5. 'élé' → logprob: -3.7260780334472656
    6. 'clients' → logprob: -4.101078033447266
    7. 'votes' → logprob: -4.101078033447266
    8. ' caractères' → logprob: -4.101078033447266
    9. ' fichiers' → logprob: -4.226078033447266
    10. ' bits' → logprob: -4.226078033447266

Token 11: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.001160696498118341
    2. 'ons' → logprob: -7.376160621643066
    3. 's' → logprob: -8.376160621643066
    4. 'e' → logprob: -8.876160621643066
    5. '```' → logprob: -9.251160621643066
    6. 'on' → logprob: -10.626160621643066
    7. '#' → logprob: -11.251160621643066
    8. '##' → logprob: -12.376160621643066
    9. '[' → logprob: -13.001160621643066
    10. '(es' → logprob: -13.126160621643066

Token 12: ' N' (ID: 478)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7090378999710083
    2. 'n' → logprob: -1.5840378999710083
    3. ' ' → logprob: -2.0840377807617188
    4. 'd' → logprob: -3.9590377807617188
    5. ' =' → logprob: -3.9590377807617188
    6. 'input' → logprob: -3.9590377807617188
    7. 'num' → logprob: -3.9590377807617188
    8. 'total' → logprob: -4.334037780761719
    9. '_' → logprob: -4.584037780761719
    10. ':' → logprob: -4.959037780761719

Token 13: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00938475038856268
    2. 'N' → logprob: -5.259384632110596
    3. '\n' → logprob: -6.384384632110596
    4. '`' → logprob: -7.259384632110596
    5. 'b' → logprob: -8.384385108947754
    6. '_' → logprob: -8.384385108947754
    7. '\' → logprob: -8.384385108947754
    8. '```' → logprob: -8.384385108947754
    9. 's' → logprob: -8.759385108947754
    10. 'num' → logprob: -9.134385108947754

Token 14: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31524890661239624
    2. 'N' → logprob: -1.315248966217041
    3. '_' → logprob: -7.440248966217041
    4. ' N' → logprob: -7.815248966217041
    5. '```' → logprob: -8.565248489379883
    6. 'b' → logprob: -9.315248489379883
    7. '#' → logprob: -9.440248489379883
    8. '`' → logprob: -9.440248489379883
    9. '\n' → logprob: -9.440248489379883
    10. 'num' → logprob: -9.565248489379883

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014209349639713764
    2. '=' → logprob: -4.264209270477295
    3. ',' → logprob: -10.264209747314453
    4. ' ' → logprob: -12.639209747314453
    5. '_' → logprob: -13.264209747314453
    6. 'space' → logprob: -13.514209747314453
    7. ' ,' → logprob: -13.764209747314453
    8. ')' → logprob: -13.889209747314453
    9. ' ' → logprob: -13.889209747314453
    10. '=int' → logprob: -14.764209747314453

Token 16: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2528839707374573
    2. ' ' → logprob: -1.6278839111328125
    3. 'int' → logprob: -3.6278839111328125
    4. ' input' → logprob: -8.377883911132812
    5. '10' → logprob: -9.377883911132812
    6. '0' → logprob: -9.752883911132812
    7. 'input' → logprob: -9.752883911132812
    8. '=int' → logprob: -10.377883911132812
    9. '20' → logprob: -11.252883911132812
    10. '32' → logprob: -12.377883911132812

Token 17: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.160296231508255
    2. '(input' → logprob: -1.9102962017059326
    3. '('' → logprob: -10.410296440124512
    4. ' (' → logprob: -10.785296440124512
    5. 'input' → logprob: -11.660296440124512
    6. '()' → logprob: -12.160296440124512
    7. '(
' → logprob: -12.910296440124512
    8. '("' → logprob: -13.785296440124512
    9. '(`' → logprob: -14.535296440124512
    10. ''' → logprob: -14.785296440124512

Token 18: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02516717091202736
    2. '()' → logprob: -4.275166988372803
    3. ')' → logprob: -5.150166988372803
    4. '('' → logprob: -5.525166988372803
    5. '(
' → logprob: -7.650166988372803
    6. '("("' → logprob: -8.275167465209961
    7. '())' → logprob: -9.025167465209961
    8. '(

' → logprob: -9.275167465209961
    9. '(`' → logprob: -9.525167465209961
    10. '("")' → logprob: -9.900167465209961

Token 19: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.020185947418213
    2. ' 
' → logprob: -1.395185947418213
    3. ' ' → logprob: -2.020185947418213
    4. '\n' → logprob: -2.270185947418213
    5. '\' → logprob: -2.770185947418213
    6. '' → logprob: -3.770185947418213
    7. '#' → logprob: -4.020185947418213
    8. '  
' → logprob: -4.645185947418213
    9. '<|end|>' → logprob: -5.145185947418213
    10. '```' → logprob: -5.270185947418213

Token 20: ' Lecture' (ID: 106534)
  Prédit: ' balls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' balls' → logprob: -1.0498483180999756
    2. 'b' → logprob: -2.0498483180999756
    3. 's' → logprob: -2.2998483180999756
    4. ' ' → logprob: -2.5498483180999756
    5. 'balls' → logprob: -2.5498483180999756
    6. ' total' → logprob: -3.6748483180999756
    7. ' data' → logprob: -3.9248483180999756
    8. 'result' → logprob: -4.174848556518555
    9. ' ball' → logprob: -4.174848556518555
    10. ' result' → logprob: -4.299848556518555

Token 21: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5763328075408936
    2. '(' → logprob: -1.2013328075408936
    3. 'des' → logprob: -2.8263328075408936
    4. '()' → logprob: -3.5763328075408936
    5. ' ' → logprob: -3.8263328075408936
    6. ' (' → logprob: -4.701333045959473
    7. '('' → logprob: -5.201333045959473
    8. ' de' → logprob: -5.451333045959473
    9. ' d' → logprob: -6.326333045959473
    10. ')' → logprob: -6.451333045959473

Token 22: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.24359510838985443
    2. ' ' → logprob: -1.8685951232910156
    3. ' l' → logprob: -3.6185951232910156
    4. '_' → logprob: -4.243595123291016
    5. 'l' → logprob: -4.993595123291016
    6. '(' → logprob: -5.493595123291016
    7. '()' → logprob: -6.243595123291016
    8. 'la' → logprob: -6.868595123291016
    9. 'les' → logprob: -7.118595123291016
    10. ' les' → logprob: -7.118595123291016

Token 23: ' chaîne' (ID: 89288)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.09187068045139313
    2. 'liste' → logprob: -2.9668707847595215
    3. 's' → logprob: -4.4668707847595215
    4. ' suite' → logprob: -5.0918707847595215
    5. ' sequence' → logprob: -5.9668707847595215
    6. ' prochaine' → logprob: -6.3418707847595215
    7. ' list' → logprob: -6.4668707847595215
    8. 'list' → logprob: -6.5918707847595215
    9. ' ligne' → logprob: -6.5918707847595215
    10. 'suite' → logprob: -6.5918707847595215

Token 24: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6189446449279785
    2. 'de' → logprob: -1.7439446449279785
    3. '<|end|>' → logprob: -2.1189446449279785
    4. '<|end|>' → logprob: -3.6189446449279785
    5. ' de' → logprob: -3.7439446449279785
    6. ' =' → logprob: -3.8689446449279785
    7. '()' → logprob: -4.1189446449279785
    8. 'ball' → logprob: -4.1189446449279785
    9. 'input' → logprob: -4.2439446449279785
    10. ' s' → logprob: -4.7439446449279785

Token 25: ' couleurs' (ID: 54001)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.162924885749817
    2. ' caractères' → logprob: -1.287924885749817
    3. 'ball' → logprob: -1.412924885749817
    4. 's' → logprob: -2.1629247665405273
    5. 'chars' → logprob: -4.412924766540527
    6. 'b' → logprob: -5.037924766540527
    7. 'tir' → logprob: -5.537924766540527
    8. 't' → logprob: -5.662924766540527
    9. 'input' → logprob: -6.037924766540527
    10. 'p' → logprob: -6.537924766540527

Token 26: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6473480463027954
    2. 'colors' → logprob: -1.3973480463027954
    3. ' colors' → logprob: -2.147347927093506
    4. ' s' → logprob: -2.522347927093506
    5. 'color' → logprob: -4.522347927093506
    6. ' couleurs' → logprob: -5.022347927093506
    7. ' color' → logprob: -5.397347927093506
    8. ' )' → logprob: -6.897347927093506
    9. ' couleur' → logprob: -7.022347927093506
    10. '_colors' → logprob: -7.272347927093506

Token 27: 'S' (ID: 50)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.4898846447467804
    2. ' colors' → logprob: -0.989884614944458
    3. 's' → logprob: -5.364884853363037
    4. 'color' → logprob: -5.614884853363037
    5. ' couleurs' → logprob: -5.864884853363037
    6. ' s' → logprob: -6.739884853363037
    7. ' color' → logprob: -6.864884853363037
    8. 'ball' → logprob: -7.489884853363037
    9. 'cou' → logprob: -7.864884853363037
    10. ' ball' → logprob: -7.989884853363037

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007626506965607405
    2. '=' → logprob: -4.882626533508301
    3. '=input' → logprob: -10.8826265335083
    4. ' ' → logprob: -14.3826265335083
    5. '.' → logprob: -15.1326265335083
    6. ' ' → logprob: -15.2576265335083
    7. '_' → logprob: -16.257625579833984
    8. ',' → logprob: -16.382625579833984
    9. 's' → logprob: -16.382625579833984
    10. ')' → logprob: -17.132625579833984

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931551694869995
    2. ' input' → logprob: -0.6931551694869995
    3. '=input' → logprob: -12.193155288696289
    4. '(input' → logprob: -13.568155288696289
    5. '	input' → logprob: -14.943155288696289
    6. '<input' → logprob: -15.193155288696289
    7. ' ' → logprob: -15.318155288696289
    8. ' ' → logprob: -15.443155288696289
    9. 'str' → logprob: -15.943155288696289
    10. ',input' → logprob: -16.19315528869629

Token 30: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002751738065853715
    2. '()' → logprob: -6.00275182723999
    3. '('' → logprob: -9.127751350402832
    4. ')' → logprob: -9.877751350402832
    5. '(
' → logprob: -10.252751350402832
    6. ' (' → logprob: -10.377751350402832
    7. '("("' → logprob: -10.877751350402832
    8. '(

' → logprob: -11.877751350402832
    9. '```' → logprob: -12.377751350402832
    10. ' ' → logprob: -12.502751350402832

Token 31: '#' (ID: 2)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.8135846853256226
    2. '#' → logprob: -1.4385846853256226
    3. ' 
' → logprob: -2.938584804534912
    4. 'result' → logprob: -3.063584804534912
    5. 'r' → logprob: -3.563584804534912
    6. 'def' → logprob: -3.563584804534912
    7. '.' → logprob: -3.813584804534912
    8. 'color' → logprob: -3.813584804534912
    9. '_' → logprob: -3.938584804534912
    10. 'c' → logprob: -4.063584804534912

Token 32: ' Const' (ID: 19594)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.7455542683601379
    2. 'count' → logprob: -1.6205542087554932
    3. 'counts' → logprob: -2.495554208755493
    4. ' colors' → logprob: -3.245554208755493
    5. ' count' → logprob: -3.620554208755493
    6. 'ball' → logprob: -3.870554208755493
    7. ' counts' → logprob: -3.870554208755493
    8. 'balls' → logprob: -3.870554208755493
    9. 'freq' → logprob: -4.120554447174072
    10. 'result' → logprob: -4.245554447174072

Token 33: 'ante' (ID: 2116)
  Prédit: 'ants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ants' → logprob: -1.3776931762695312
    2. 'ANTS' → logprob: -1.5026931762695312
    3. 'ANT' → logprob: -2.0026931762695312
    4. 'A' → logprob: -2.1276931762695312
    5. 'a' → logprob: -2.8776931762695312
    6. 'ant' → logprob: -3.0026931762695312
    7. 's' → logprob: -3.5026931762695312
    8. 'antes' → logprob: -3.6276931762695312
    9. '=' → logprob: -3.8776931762695312
    10. ' =' → logprob: -4.127693176269531

Token 34: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5414764285087585
    2. ' =' → logprob: -2.0414764881134033
    3. 'MAX' → logprob: -2.5414764881134033
    4. 's' → logprob: -2.7914764881134033
    5. ' ' → logprob: -3.6664764881134033
    6. 'COLOR' → logprob: -3.7914764881134033
    7. 'B' → logprob: -4.166476249694824
    8. 'S' → logprob: -4.416476249694824
    9. 'RED' → logprob: -4.916476249694824
    10. ' COLORS' → logprob: -4.916476249694824

Token 35: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6050796508789062
    2. ' ' → logprob: -1.9800796508789062
    3. ' l' → logprob: -1.9800796508789062
    4. ' le' → logprob: -3.1050796508789062
    5. ' max' → logprob: -3.3550796508789062
    6. 'max' → logprob: -4.105079650878906
    7. ' '' → logprob: -4.855079650878906
    8. ' len' → logprob: -4.980079650878906
    9. '_' → logprob: -5.105079650878906
    10. ' color' → logprob: -5.355079650878906

Token 36: ' calcul' (ID: 7559)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.3452302813529968
    2. 'mod' → logprob: -1.7202303409576416
    3. ' nombre' → logprob: -2.4702303409576416
    4. 'multip' → logprob: -5.9702301025390625
    5. 'calcul' → logprob: -6.0952301025390625
    6. 'nb' → logprob: -6.2202301025390625
    7. ' modulo' → logprob: -6.4702301025390625
    8. 'mult' → logprob: -6.7202301025390625
    9. 'b' → logprob: -6.7202301025390625
    10. 'max' → logprob: -6.8452301025390625

Token 37: ' modulo' (ID: 112372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3770653009414673
    2. 'MOD' → logprob: -1.5020653009414673
    3. ' ' → logprob: -1.6270653009414673
    4. 's' → logprob: -2.8770651817321777
    5. 'MAX' → logprob: -3.5020651817321777
    6. ' =' → logprob: -3.6270651817321777
    7. '26' → logprob: -3.6270651817321777
    8. '32' → logprob: -3.8770651817321777
    9. '_MAX' → logprob: -4.002065181732178
    10. '256' → logprob: -4.127065181732178

Token 38: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03295295313000679
    2. 'MOD' → logprob: -4.032952785491943
    3. ' MOD' → logprob: -5.157952785491943
    4. '_' → logprob: -5.532952785491943
    5. ' ,' → logprob: -7.282952785491943
    6. '  ' → logprob: -7.532952785491943
    7. 'mod' → logprob: -7.657952785491943
    8. '<|end|>' → logprob: -7.907952785491943
    9. ' =' → logprob: -8.282953262329102
    10. '32' → logprob: -8.282953262329102

Token 39: 'MOD' (ID: 52135)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08194214850664139
    2. '_' → logprob: -2.706942081451416
    3. ' _' → logprob: -5.706942081451416
    4. 'MOD' → logprob: -5.706942081451416
    5. ' MOD' → logprob: -6.331942081451416
    6. '_MOD' → logprob: -6.956942081451416
    7. '_SPACE' → logprob: -7.206942081451416
    8. '  ' → logprob: -8.206942558288574
    9. ' =' → logprob: -8.206942558288574
    10. '32' → logprob: -8.831942558288574

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020542588084936142
    2. '=' → logprob: -3.895542621612549
    3. ' ' → logprob: -15.02054214477539
    4. ' ' → logprob: -16.39554214477539
    5. ' =
' → logprob: -16.52054214477539
    6. '=int' → logprob: -16.77054214477539
    7. ',' → logprob: -16.77054214477539
    8. '_' → logprob: -17.39554214477539
    9. ' =
' → logprob: -17.77054214477539
    10. ')' → logprob: -17.77054214477539

Token 41: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22581548988819122
    2. '10' → logprob: -1.7258155345916748
    3. '100' → logprob: -3.725815534591675
    4. '1' → logprob: -11.600815773010254
    5. '998' → logprob: -13.350815773010254
    6. ' (' → logprob: -13.475815773010254
    7. ' ' → logprob: -14.225815773010254
    8. '109' → logprob: -15.100815773010254
    9. '​' → logprob: -16.100814819335938
    10. '(' → logprob: -16.225814819335938

Token 42: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3138194680213928
    2. '100' → logprob: -1.313819408416748
    3. '998' → logprob: -7.938819408416748
    4. '(' → logprob: -8.813819885253906
    5. '1' → logprob: -10.063819885253906
    6. ' ' → logprob: -11.938819885253906
    7. '123' → logprob: -13.938819885253906
    8. ' (' → logprob: -14.438819885253906
    9. '999' → logprob: -14.938819885253906
    10. '101' → logprob: -15.063819885253906

Token 43: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -2.2007883671903983e-05
    2. '247' → logprob: -11.500021934509277
    3. '```' → logprob: -12.500021934509277
    4. '243' → logprob: -13.125021934509277
    5. '2' → logprob: -14.000021934509277
    6. '457' → logprob: -14.500021934509277
    7. '_' → logprob: -14.875021934509277
    8. '24' → logprob: -14.875021934509277
    9. '254' → logprob: -15.000021934509277
    10. '447' → logprob: -15.000021934509277

Token 44: '353' (ID: 32996)
  Prédit: '853'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '853' → logprob: -0.5480416417121887
    2. '353' → logprob: -1.298041582107544
    3. '857' → logprob: -1.923041582107544
    4. '257' → logprob: -6.548041820526123
    5. '357' → logprob: -7.548041820526123
    6. '457' → logprob: -8.548041343688965
    7. '```' → logprob: -8.673041343688965
    8. '85' → logprob: -9.173041343688965
    9. '553' → logprob: -10.173041343688965
    10. '587' → logprob: -10.298041343688965

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5094733238220215
    2. ' 

' → logprob: -2.1344733238220215
    3. ' 
' → logprob: -2.5094733238220215
    4. ' ' → logprob: -3.1344733238220215
    5. '<|end|>' → logprob: -3.1344733238220215
    6. '

' → logprob: -3.3844733238220215
    7. '#' → logprob: -3.5094733238220215
    8. '' → logprob: -4.3844733238220215
    9. '\n' → logprob: -4.8844733238220215
    10. ')' → logprob: -5.5094733238220215

Token 46: 'class' (ID: 1444)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1720012426376343
    2. '#' → logprob: -1.2970012426376343
    3. 'count' → logprob: -2.047001361846924
    4. 'dp' → logprob: -2.547001361846924
    5. 'c' → logprob: -2.797001361846924
    6. 'def' → logprob: -3.422001361846924
    7. 'res' → logprob: -3.922001361846924
    8. 'd' → logprob: -4.172001361846924
    9. '\' → logprob: -4.422001361846924
    10. 'a' → logprob: -4.672001361846924

Token 47: ' Mod' (ID: 7191)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016694139689207077
    2. ' Factor' → logprob: -5.141694068908691
    3. ' Solution' → logprob: -5.516694068908691
    4. ' Counter' → logprob: -6.391694068908691
    5. ' ' → logprob: -7.516694068908691
    6. ' `' → logprob: -7.641694068908691
    7. '  ' → logprob: -7.766694068908691
    8. ' Solver' → logprob: -7.891694068908691
    9. '_' → logprob: -8.016694068908691
    10. ' Trie' → logprob: -8.266694068908691

Token 48: 'Int' (ID: 2471)
  Prédit: 'ular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ular' → logprob: -0.15764272212982178
    2. 'ulo' → logprob: -2.4076428413391113
    3. 'Int' → logprob: -3.4076428413391113
    4. 'int' → logprob: -4.907642841339111
    5. ':' → logprob: -5.157642841339111
    6. 'uler' → logprob: -5.657642841339111
    7. 'ule' → logprob: -5.782642841339111
    8. 'u' → logprob: -7.282642841339111
    9. 'ul' → logprob: -7.657642841339111
    10. '```' → logprob: -7.782642841339111

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008894991129636765
    2. '(' → logprob: -4.758894920349121
    3. ' :' → logprob: -8.383894920349121
    4. '():' → logprob: -10.633894920349121
    5. '(:' → logprob: -11.008894920349121
    6. '(object' → logprob: -12.883894920349121
    7. '):' → logprob: -13.258894920349121
    8. ':**' → logprob: -13.383894920349121
    9. '(int' → logprob: -13.883894920349121
    10. ':
' → logprob: -13.883894920349121

Token 50: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0073943608440458775
    2. ' :' → logprob: -5.007394313812256
    3. ':
' → logprob: -8.132394790649414
    4. '(' → logprob: -8.757394790649414
    5. '   ' → logprob: -9.132394790649414
    6. '():' → logprob: -10.257394790649414
    7. '(object' → logprob: -10.632394790649414
    8. ' ' → logprob: -11.632394790649414
    9. ' :
' → logprob: -11.632394790649414
    10. '<|end|>' → logprob: -11.757394790649414

Token 51: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.191641166806221
    2. '   ' → logprob: -2.316641092300415
    3. 'def' → logprob: -2.691641092300415
    4. '    ' → logprob: -4.941641330718994
    5. '    
' → logprob: -7.941641330718994
    6. ' ' → logprob: -8.566640853881836
    7. 'class' → logprob: -9.191640853881836
    8. ' 
' → logprob: -9.191640853881836
    9. ' __' → logprob: -10.816640853881836
    10. '	def' → logprob: -11.066640853881836

Token 52: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4647827744483948
    2. 'def' → logprob: -1.21478271484375
    3. '   ' → logprob: -2.83978271484375
    4. ' """' → logprob: -4.96478271484375
    5. '"""' → logprob: -5.46478271484375
    6. 'class' → logprob: -5.71478271484375
    7. ' """
' → logprob: -7.33978271484375
    8. '__' → logprob: -7.96478271484375
    9. '    ' → logprob: -8.58978271484375
    10. ' class' → logprob: -8.71478271484375

Token 53: ' Classe' (ID: 125455)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.28235000371932983
    2. ' class' → logprob: -2.0323500633239746
    3. '   ' → logprob: -3.0323500633239746
    4. ' """' → logprob: -3.2823500633239746
    5. '"""' → logprob: -4.032350063323975
    6. 'def' → logprob: -5.907350063323975
    7. 'A' → logprob: -6.032350063323975
    8. ' def' → logprob: -6.282350063323975
    9. ' """
' → logprob: -7.157350063323975
    10. '```' → logprob: -7.157350063323975

Token 54: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.757758617401123
    2. '<|end|>' → logprob: -1.882758617401123
    3. ' ' → logprob: -2.257758617401123
    4. ' pour' → logprob: -2.882758617401123
    5. ' de' → logprob: -3.007758617401123
    6. ' des' → logprob: -3.257758617401123
    7. ':' → logprob: -3.382758617401123
    8. ' permettant' → logprob: -3.632758617401123
    9. ' d' → logprob: -4.007758617401123
    10. ' representing' → logprob: -4.632758617401123

Token 55: ' effectuer' (ID: 98625)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.011464396491646767
    2. ' représ' → logprob: -4.886464595794678
    3. ' effectuer' → logprob: -6.886464595794678
    4. ' manip' → logprob: -7.386464595794678
    5. ' faciliter' → logprob: -7.761464595794678
    6. 'impl' → logprob: -8.13646411895752
    7. ' impl' → logprob: -8.38646411895752
    8. ' g' → logprob: -8.38646411895752
    9. ' coder' → logprob: -8.76146411895752
    10. ' réaliser' → logprob: -9.01146411895752

Token 56: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.008304158225655556
    2. ' les' → logprob: -5.758304119110107
    3. ' l' → logprob: -6.383304119110107
    4. ' ' → logprob: -6.633304119110107
    5. ' une' → logprob: -7.133304119110107
    6. 'des' → logprob: -7.758304119110107
    7. '<|end|>' → logprob: -7.758304119110107
    8. ' operations' → logprob: -9.133304595947266
    9. '  ' → logprob: -9.508304595947266
    10. ' opérations' → logprob: -10.008304595947266

Token 57: ' opérations' (ID: 102793)
  Prédit: ' opérations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opérations' → logprob: -0.002202951582148671
    2. ' calcul' → logprob: -7.627202987670898
    3. ' opér' → logprob: -7.752202987670898
    4. ' ' → logprob: -7.877202987670898
    5. ' operations' → logprob: -8.127202987670898
    6. ' op' → logprob: -8.627202987670898
    7. 'op' → logprob: -9.002202987670898
    8. 'calcul' → logprob: -9.252202987670898
    9. 'operations' → logprob: -9.877202987670898
    10. '```' → logprob: -10.127202987670898

Token 58: ' ar' (ID: 646)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -1.332689881324768
    2. ' modular' → logprob: -1.332689881324768
    3. ' modulo' → logprob: -1.332689881324768
    4. 'mod' → logprob: -2.4576897621154785
    5. ' modul' → logprob: -2.4576897621154785
    6. ' ar' → logprob: -3.9576897621154785
    7. 'arith' → logprob: -5.0826897621154785
    8. ' sur' → logprob: -5.4576897621154785
    9. ' en' → logprob: -6.2076897621154785
    10. ' de' → logprob: -6.5826897621154785

Token 59: 'ith' (ID: 437)
  Prédit: 'ith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ith' → logprob: -0.00013154871703591198
    2. 'i' → logprob: -9.375131607055664
    3. '```' → logprob: -11.875131607055664
    4. 'im' → logprob: -12.000131607055664
    5. 'math' → logprob: -12.125131607055664
    6. 'th' → logprob: -12.875131607055664
    7. 'é' → logprob: -13.125131607055664
    8. 'ithmetic' → logprob: -13.125131607055664
    9. 'm' → logprob: -13.250131607055664
    10. '+' → logprob: -13.375131607055664

Token 60: 'mé' (ID: 35328)
  Prédit: 'mé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mé' → logprob: -0.6718922853469849
    2. 'm' → logprob: -0.7968922853469849
    3. 'th' → logprob: -3.5468921661376953
    4. 'h' → logprob: -4.796892166137695
    5. 'im' → logprob: -7.921892166137695
    6. 'ith' → logprob: -8.046892166137695
    7. 'hm' → logprob: -8.796892166137695
    8. 'hé' → logprob: -8.796892166137695
    9. 't' → logprob: -9.046892166137695
    10. 'meth' → logprob: -9.546892166137695

Token 61: 'tiques' (ID: 60539)
  Prédit: 'tiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tiques' → logprob: -0.01660679467022419
    2. 't' → logprob: -4.14160680770874
    3. 'th' → logprob: -8.641606330871582
    4. 'étiques' → logprob: -8.891606330871582
    5. 'ti' → logprob: -9.641606330871582
    6. '#' → logprob: -10.016606330871582
    7. '```' → logprob: -10.141606330871582
    8. 'd' → logprob: -10.266606330871582
    9. '{' → logprob: -11.641606330871582
    10. 'miques' → logprob: -11.641606330871582

Token 62: ' sous' (ID: 14487)
  Prédit: ' modular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modular' → logprob: -0.9412896037101746
    2. ' modulo' → logprob: -1.5662896633148193
    3. ' modul' → logprob: -1.8162896633148193
    4. ' mod' → logprob: -2.3162896633148193
    5. 'mod' → logprob: -2.3162896633148193
    6. ' sur' → logprob: -4.19128942489624
    7. ' en' → logprob: -4.19128942489624
    8. 's' → logprob: -5.44128942489624
    9. '_mod' → logprob: -6.06628942489624
    10. ' personnalis' → logprob: -6.44128942489624

Token 63: ' un' (ID: 537)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.39118120074272156
    2. ' modulo' → logprob: -1.141181230545044
    3. '```' → logprob: -6.391180992126465
    4. 'module' → logprob: -7.016180992126465
    5. ' modular' → logprob: -7.266180992126465
    6. 'Modulo' → logprob: -7.891180992126465
    7. ' modulus' → logprob: -8.141180992126465
    8. '_mod' → logprob: -9.141180992126465
    9. ' mod' → logprob: -9.641180992126465
    10. 'm' → logprob: -10.391180992126465

Token 64: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3499370217323303
    2. ' modulo' → logprob: -1.3499369621276855
    3. ' modulus' → logprob: -3.8499369621276855
    4. ' mod' → logprob: -4.7249369621276855
    5. 'ent' → logprob: -6.2249369621276855
    6. '```' → logprob: -6.4749369621276855
    7. '_mod' → logprob: -7.0999369621276855
    8. 'module' → logprob: -7.2249369621276855
    9. ' modular' → logprob: -8.724937438964844
    10. ' module' → logprob: -8.974937438964844

Token 65: ' donné' (ID: 52079)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5141112208366394
    2. '   ' → logprob: -1.3891112804412842
    3. ' :' → logprob: -2.639111280441284
    4. '.' → logprob: -3.264111280441284
    5. ' ' → logprob: -4.139111042022705
    6. '```' → logprob: -4.639111042022705
    7. '<|end|>' → logprob: -5.389111042022705
    8. ')' → logprob: -5.889111042022705
    9. ',' → logprob: -6.139111042022705
    10. '  ' → logprob: -6.639111042022705

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015819085761904716
    2. '```' → logprob: -5.390819072723389
    3. '"""' → logprob: -5.640819072723389
    4. ' """' → logprob: -6.515819072723389
    5. ' ' → logprob: -6.640819072723389
    6. '
' → logprob: -6.640819072723389
    7. ' 
' → logprob: -6.890819072723389
    8. '    
' → logprob: -7.640819072723389
    9. ' def' → logprob: -7.765819072723389
    10. ')' → logprob: -8.015819549560547

Token 68: ' At' (ID: 3604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3108297884464264
    2. '```' → logprob: -2.5608298778533936
    3. ' def' → logprob: -2.8108298778533936
    4. '
' → logprob: -3.0608298778533936
    5. 'def' → logprob: -3.3108298778533936
    6. '"""' → logprob: -4.1858296394348145
    7. '    
' → logprob: -4.5608296394348145
    8. ' 
' → logprob: -4.9358296394348145
    9. 'class' → logprob: -5.5608296394348145
    10. ' """' → logprob: -5.9358296394348145

Token 69: 'tribut' (ID: 2741)
  Prédit: 'tribut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tribut' → logprob: -0.12046565860509872
    2. 'tr' → logprob: -2.8704657554626465
    3. 'trib' → logprob: -3.2454657554626465
    4. 't' → logprob: -5.3704657554626465
    5. 'rib' → logprob: -5.4954657554626465
    6. 'tri' → logprob: -6.6204657554626465
    7. 'tribute' → logprob: -6.7454657554626465
    8. 'tributes' → logprob: -6.7454657554626465
    9. '   ' → logprob: -6.8704657554626465
    10. '```' → logprob: -6.8704657554626465

Token 70: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019369013607501984
    2. '   ' → logprob: -4.769369125366211
    3. ' def' → logprob: -5.394369125366211
    4. 'def' → logprob: -6.394369125366211
    5. ':' → logprob: -6.519369125366211
    6. ' =' → logprob: -7.644369125366211
    7. ' ' → logprob: -7.769369125366211
    8. 'e' → logprob: -8.019369125366211
    9. ' de' → logprob: -8.019369125366211
    10. ' s' → logprob: -8.144369125366211

Token 71: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034869298338890076
    2. ' :' → logprob: -3.7848691940307617
    3. ':
' → logprob: -4.784869194030762
    4. '   ' → logprob: -5.909869194030762
    5. ' :
' → logprob: -8.034869194030762
    6. 's' → logprob: -9.159869194030762
    7. '```' → logprob: -11.534869194030762
    8. ',' → logprob: -11.784869194030762
    9. '<|end|>' → logprob: -11.784869194030762
    10. '  ' → logprob: -12.159869194030762

Token 72: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4363274574279785
    2. '    ' → logprob: -1.5613274574279785
    3. '       ' → logprob: -3.0613274574279785
    4. '
' → logprob: -3.9363274574279785
    5. '```' → logprob: -3.9363274574279785
    6. '    
' → logprob: -4.4363274574279785
    7. 'mod' → logprob: -4.4363274574279785
    8. ' self' → logprob: -4.6863274574279785
    9. 'self' → logprob: -5.0613274574279785
    10. ' 
' → logprob: -5.4363274574279785

Token 73: ' x' (ID: 1215)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.9817355275154114
    2. ' value' → logprob: -2.2317354679107666
    3. '   ' → logprob: -2.3567354679107666
    4. 'value' → logprob: -2.3567354679107666
    5. ' mod' → logprob: -2.3567354679107666
    6. ' modulus' → logprob: -2.6067354679107666
    7. ' def' → logprob: -2.7317354679107666
    8. 'def' → logprob: -2.9817354679107666
    9. 'self' → logprob: -4.481735706329346
    10. ' self' → logprob: -4.606735706329346

Token 74: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.2603901015827432e-05
    2. ')' → logprob: -11.375022888183594
    3. ' int' → logprob: -11.750022888183594
    4. ':int' → logprob: -13.875022888183594
    5. 'object' → logprob: -14.625022888183594
    6. '(int' → logprob: -14.750022888183594
    7. '   ' → logprob: -14.875022888183594
    8. '```' → logprob: -15.500022888183594
    9. '[int' → logprob: -15.875022888183594
    10. ']int' → logprob: -16.000022888183594

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022964440286159515
    2. '):' → logprob: -6.252296447753906
    3. ' )' → logprob: -8.002296447753906
    4. '):
' → logprob: -11.502296447753906
    5. ':' → logprob: -11.877296447753906
    6. '   ' → logprob: -12.127296447753906
    7. ' ):' → logprob: -12.752296447753906
    8. 'int' → logprob: -13.377296447753906
    9. ':int' → logprob: -13.877296447753906
    10. '=' → logprob: -13.877296447753906

Token 77: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' La' (ID: 3038)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07121580839157104
    2. ' int' → logprob: -2.821215867996216
    3. '    ' → logprob: -5.946215629577637
    4. '   ' → logprob: -5.946215629577637
    5. ' ' → logprob: -6.821215629577637
    6. '<|end|>' → logprob: -7.321215629577637
    7. 'l' → logprob: -7.946215629577637
    8. '<int' → logprob: -8.071215629577637
    9. ' l' → logprob: -8.196215629577637
    10. '(int' → logprob: -8.446215629577637

Token 79: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.0006833644583821297
    2. 'val' → logprob: -8.125683784484863
    3. ' value' → logprob: -8.250683784484863
    4. ' val' → logprob: -9.375683784484863
    5. 'value' → logprob: -11.625683784484863
    6. ' ' → logprob: -11.625683784484863
    7. '   ' → logprob: -12.625683784484863
    8. ' ' → logprob: -12.750683784484863
    9. ' vale' → logprob: -12.875683784484863
    10. '_' → logprob: -13.125683784484863

Token 80: ' entière' (ID: 61583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' conserv' (ID: 13953)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.45547208189964294
    2. ' mod' → logprob: -2.080471992492676
    3. '<|end|>' → logprob: -3.080471992492676
    4. ' modulo' → logprob: -3.580471992492676
    5. ' encaps' → logprob: -3.705471992492676
    6. 'mod' → logprob: -3.705471992492676
    7. ' initial' → logprob: -3.830471992492676
    8. 'stock' → logprob: -3.830471992492676
    9. '   ' → logprob: -4.080471992492676
    10. ' cour' → logprob: -4.330471992492676

Token 82: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00037955286097712815
    2. 'é' → logprob: -8.00037956237793
    3. 'ee' → logprob: -10.37537956237793
    4. 'e' → logprob: -12.37537956237793
    5. 'ue' → logprob: -12.50037956237793
    6. 'ées' → logprob: -12.87537956237793
    7. '   ' → logprob: -14.12537956237793
    8. 'rée' → logprob: -15.00037956237793
    9. 'lée' → logprob: -15.75037956237793
    10. 'u' → logprob: -16.12537956237793

Token 83: ' modulo' (ID: 112372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.25677022337913513
    2. ' MOD' → logprob: -1.5067702531814575
    3. ' ' → logprob: -6.631770133972168
    4. '_MOD' → logprob: -6.756770133972168
    5. 'self' → logprob: -6.881770133972168
    6. ' self' → logprob: -7.381770133972168
    7. '   ' → logprob: -8.631770133972168
    8. '    ' → logprob: -9.131770133972168
    9. '.MOD' → logprob: -9.256770133972168
    10. ' ' → logprob: -9.631770133972168

Token 85: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5938601493835449
    2. ')' → logprob: -0.8438601493835449
    3. '
' → logprob: -5.093860149383545
    4. '```' → logprob: -5.468860149383545
    5. '"""' → logprob: -5.593860149383545
    6. '\n' → logprob: -6.968860149383545
    7. '<|end|>' → logprob: -7.968860149383545
    8. ')
' → logprob: -8.093860626220703
    9. '    ' → logprob: -8.093860626220703
    10. ' ' → logprob: -8.218860626220703

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008371546864509583
    2. '
' → logprob: -5.883371353149414
    3. '    
' → logprob: -6.008371353149414
    4. '"""' → logprob: -7.258371353149414
    5. ' 
' → logprob: -7.508371353149414
    6. ')' → logprob: -7.633371353149414
    7. '    ' → logprob: -7.883371353149414
    8. '```' → logprob: -8.633371353149414
    9. ' ' → logprob: -9.008371353149414
    10. '  ' → logprob: -9.133371353149414

Token 87: ' Mé' (ID: 23435)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22475099563598633
    2. '"""' → logprob: -1.8497509956359863
    3. ' """' → logprob: -4.474750995635986
    4. '"""
' → logprob: -4.974750995635986
    5. '```' → logprob: -5.349750995635986
    6. 'def' → logprob: -5.349750995635986
    7. ' def' → logprob: -5.599750995635986
    8. '
' → logprob: -5.849750995635986
    9. '    ' → logprob: -5.849750995635986
    10. ' """
' → logprob: -6.224750995635986

Token 88: 'th' (ID: 404)
  Prédit: 'th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.22919590771198273
    2. 't' → logprob: -1.7291959524154663
    3. 'def' → logprob: -4.354196071624756
    4. 'doc' → logprob: -5.479196071624756
    5. 'to' → logprob: -6.104196071624756
    6. 'ta' → logprob: -6.354196071624756
    7. 'tab' → logprob: -6.479196071624756
    8. 'ton' → logprob: -7.479196071624756
    9. 'j' → logprob: -7.729196071624756
    10. 'a' → logprob: -7.854196071624756

Token 89: 'odes' (ID: 3821)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.30472609400749207
    2. 'т' → logprob: -2.0547261238098145
    3. '```' → logprob: -3.8047261238098145
    4. 'm' → logprob: -3.9297261238098145
    5. 'o' → logprob: -4.1797261238098145
    6. 'th' → logprob: -4.4297261238098145
    7. '"""
' → logprob: -4.6797261238098145
    8. 'te' → logprob: -4.8047261238098145
    9. '``' → logprob: -4.8047261238098145
    10. 'a' → logprob: -4.9297261238098145

Token 90: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022492432966828346
    2. ' :' → logprob: -4.522492408752441
    3. '   ' → logprob: -5.647492408752441
    4. ' ' → logprob: -6.022492408752441
    5. ':
' → logprob: -6.397492408752441
    6. ',' → logprob: -6.647492408752441
    7. 'def' → logprob: -8.397492408752441
    8. '[' → logprob: -8.647492408752441
    9. '  ' → logprob: -8.647492408752441
    10. ')' → logprob: -8.647492408752441

Token 91: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23781178891658783
    2. '    ' → logprob: -2.987811803817749
    3. ' )' → logprob: -3.112811803817749
    4. ')' → logprob: -3.362811803817749
    5. '   ' → logprob: -3.362811803817749
    6. ' 
' → logprob: -3.987811803817749
    7. '     
' → logprob: -4.86281156539917
    8. ''' → logprob: -5.61281156539917
    9. 'd' → logprob: -5.86281156539917
    10. ' def' → logprob: -6.36281156539917

Token 92: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5873262286186218
    2. 'def' → logprob: -1.2123262882232666
    3. ' __' → logprob: -2.3373262882232666
    4. '__' (adapté à ' __') → logprob: -3.0873262882232666
    5. '   ' → logprob: -5.5873260498046875
    6. ' ' → logprob: -8.337326049804688
    7. ' add' → logprob: -8.837326049804688
    8. '```' → logprob: -9.587326049804688
    9. ' `' → logprob: -10.087326049804688
    10. 'd' → logprob: -10.587326049804688

Token 93: 'add' (ID: 964)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0061968229711055756
    2. 'a' → logprob: -5.756196975708008
    3. 'init' → logprob: -6.256196975708008
    4. ' ' → logprob: -7.006196975708008
    5. 'add' → logprob: -9.506196975708008
    6. ' i' → logprob: -10.006196975708008
    7. 'I' → logprob: -10.881196975708008
    8. '_' → logprob: -11.381196975708008
    9. 'e' → logprob: -12.131196975708008
    10. 'in' → logprob: -12.506196975708008

Token 94: '__,' (ID: 23783)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5578500628471375
    2. '(' → logprob: -0.9328500628471375
    3. '__' → logprob: -4.057849884033203
    4. '=' → logprob: -5.182849884033203
    5. ')' → logprob: -6.307849884033203
    6. ',' → logprob: -6.557849884033203
    7. '(self' → logprob: -6.557849884033203
    8. ' ' → logprob: -6.682849884033203
    9. '+' → logprob: -7.557849884033203
    10. 'a' → logprob: -7.557849884033203

Token 95: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5534066557884216
    2. ' ' → logprob: -1.5534067153930664
    3. '__' → logprob: -1.9284067153930664
    4. '<|end|>' → logprob: -2.9284067153930664
    5. ' ' → logprob: -5.553406715393066
    6. ''' → logprob: -5.928406715393066
    7. '_' → logprob: -6.303406715393066
    8. '___' → logprob: -6.803406715393066
    9. '    ' → logprob: -7.178406715393066
    10. ')' → logprob: -7.553406715393066

Token 96: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.021537819877266884
    2. 'mul' → logprob: -3.8965377807617188
    3. 'mod' → logprob: -7.396537780761719
    4. 'init' → logprob: -8.271537780761719
    5. 'pow' → logprob: -10.146537780761719
    6. 'add' → logprob: -10.271537780761719
    7. 'r' → logprob: -10.521537780761719
    8. ' sub' → logprob: -11.646537780761719
    9. ' ' → logprob: -12.521537780761719
    10. 'eq' → logprob: -13.146537780761719

Token 97: '__,' (ID: 23783)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03211405500769615
    2. '__,' → logprob: -3.782114028930664
    3. ',' → logprob: -5.032114028930664
    4. '_' → logprob: -6.657114028930664
    5. '<|end|>' → logprob: -7.532114028930664
    6. '__),' → logprob: -9.032114028930664
    7. '<|end|>' → logprob: -9.532114028930664
    8. '__,
' → logprob: -10.407114028930664
    9. ' ,' → logprob: -10.407114028930664
    10. ' ' → logprob: -10.532114028930664

Token 98: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.45479339361190796
    2. '__' → logprob: -1.4547934532165527
    3. ' ' → logprob: -2.0797934532165527
    4. ''' → logprob: -6.579793453216553
    5. '<|end|>' → logprob: -6.829793453216553
    6. '    ' → logprob: -6.954793453216553
    7. '_' → logprob: -6.954793453216553
    8. ',' → logprob: -7.704793453216553
    9. '`' → logprob: -8.079792976379395
    10. ' ' → logprob: -8.204792976379395

Token 99: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.03895089402794838
    2. 'add' → logprob: -3.2889509201049805
    3. 'pow' → logprob: -7.6639509201049805
    4. 'mod' → logprob: -7.7889509201049805
    5. 'init' → logprob: -11.03895092010498
    6. 'mult' → logprob: -13.41395092010498
    7. 'pos' → logprob: -13.41395092010498
    8. 'xor' → logprob: -13.41395092010498
    9. 'neg' → logprob: -13.53895092010498
    10. 'r' → logprob: -13.91395092010498

Token 100: '__,' (ID: 23783)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03727768734097481
    2. '_' → logprob: -3.5372776985168457
    3. ',' → logprob: -5.162277698516846
    4. '__,' → logprob: -6.912277698516846
    5. '<|end|>' → logprob: -8.287277221679688
    6. '__(
' → logprob: -9.037277221679688
    7. '__(' → logprob: -9.162277221679688
    8. '___' → logprob: -10.412277221679688
    9. '__
' → logprob: -10.537277221679688
    10. ')' → logprob: -10.662277221679688

Token 101: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.43023914098739624
    2. '__' → logprob: -1.055239200592041
    3. ' ' → logprob: -6.930239200592041
    4. '   ' → logprob: -9.055238723754883
    5. '`' → logprob: -9.430238723754883
    6. ''' → logprob: -9.430238723754883
    7. 'def' → logprob: -10.305238723754883
    8. '    ' → logprob: -10.305238723754883
    9. '_' → logprob: -10.430238723754883
    10. ' ' → logprob: -10.555238723754883

Token 102: 'tr' (ID: 371)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.002142885699868202
    2. 'tr' → logprob: -6.377142906188965
    3. 'xor' → logprob: -8.377142906188965
    4. 'add' → logprob: -9.627142906188965
    5. 'flo' → logprob: -9.877142906188965
    6. 'rm' → logprob: -10.502142906188965
    7. 'r' → logprob: -10.877142906188965
    8. 'mod' → logprob: -11.002142906188965
    9. 'mul' → logprob: -12.127142906188965
    10. 'eq' → logprob: -12.627142906188965

Token 103: 'ued' (ID: 5829)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.5363220572471619
    2. 'u' → logprob: -0.9113220572471619
    3. '__' → logprob: -4.661322116851807
    4. 'ued' → logprob: -5.786322116851807
    5. '```' → logprob: -8.036321640014648
    6. 'e' → logprob: -9.661321640014648
    7. 'a' → logprob: -10.411321640014648
    8. '__
' → logprob: -10.536321640014648
    9. 'uer' → logprob: -10.661321640014648
    10. 'd' → logprob: -10.911321640014648

Token 104: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.006564741022884846
    2. 'v' → logprob: -5.506564617156982
    3. '__' → logprob: -6.256564617156982
    4. 'div' → logprob: -8.38156509399414
    5. '/' → logprob: -9.00656509399414
    6. 'i' → logprob: -9.88156509399414
    7. '__/' → logprob: -10.13156509399414
    8. '_' → logprob: -10.25656509399414
    9. '_div' → logprob: -10.38156509399414
    10. '_/' → logprob: -11.25656509399414

Token 105: '__,' (ID: 23783)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005483944900333881
    2. '__,' → logprob: -5.380484104156494
    3. '__(' → logprob: -8.255483627319336
    4. '}' → logprob: -8.880483627319336
    5. '_' → logprob: -9.130483627319336
    6. ',' → logprob: -9.505483627319336
    7. 'self' → logprob: -9.505483627319336
    8. '__
' → logprob: -10.380483627319336
    9. '___' → logprob: -10.630483627319336
    10. '<|end|>' → logprob: -10.630483627319336

Token 106: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.026365328580141068
    2. ' __' → logprob: -3.651365280151367
    3. '...' → logprob: -10.901365280151367
    4. ')' → logprob: -11.026365280151367
    5. 'def' → logprob: -11.776365280151367
    6. '___' → logprob: -12.276365280151367
    7. '**' → logprob: -12.401365280151367
    8. '<|end|>' → logprob: -12.776365280151367
    9. '   ' → logprob: -12.901365280151367
    10. '^' → logprob: -13.901365280151367

Token 107: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.008714557625353336
    2. 'add' → logprob: -4.75871467590332
    3. 'r' → logprob: -9.75871467590332
    4. 'mod' → logprob: -10.75871467590332
    5. 'xor' → logprob: -12.50871467590332
    6. 'mul' → logprob: -12.50871467590332
    7. 'init' → logprob: -12.63371467590332
    8. 'Pow' → logprob: -13.38371467590332
    9. 'pos' → logprob: -13.50871467590332
    10. 'repr' → logprob: -13.50871467590332

Token 108: '__' (ID: 771)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6382690072059631
    2. '   ' → logprob: -1.7632689476013184
    3. '(' → logprob: -2.0132689476013184
    4. ')' → logprob: -2.8882689476013184
    5. '}' → logprob: -3.2632689476013184
    6. '(self' → logprob: -3.6382689476013184
    7. '_' → logprob: -4.888268947601318
    8. '<|end|>' → logprob: -5.013268947601318
    9. '(
' → logprob: -5.263268947601318
    10. 'self' → logprob: -5.513268947601318

Token 109: ' :' (ID: 712)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6081673502922058
    2. ',' → logprob: -1.4831674098968506
    3. ' ' → logprob: -2.1081674098968506
    4. '   ' → logprob: -2.9831674098968506
    5. '_' → logprob: -3.9831674098968506
    6. '<|end|>' → logprob: -4.4831671714782715
    7. '    ' → logprob: -4.8581671714782715
    8. ')' → logprob: -5.1081671714782715
    9. '(
' → logprob: -5.7331671714782715
    10. '  ' → logprob: -6.1081671714782715

Token 110: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9984350800514221
    2. '   ' → logprob: -1.4984350204467773
    3. '    ' → logprob: -1.7484350204467773
    4. '_' → logprob: -2.2484350204467773
    5. ' 
' → logprob: -2.6234350204467773
    6. '(' → logprob: -4.248435020446777
    7. 'def' → logprob: -4.373435020446777
    8. ' def' → logprob: -5.248435020446777
    9. '    
' → logprob: -5.373435020446777
    10. ')' → logprob: -5.623435020446777

Token 111: 'urcharge' (ID: 162326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2580209970474243
    2. 'u' → logprob: -1.2580209970474243
    3. '   ' → logprob: -1.7580209970474243
    4. '=' → logprob: -3.1330208778381348
    5. 'def' → logprob: -3.3830208778381348
    6. 'a' → logprob: -3.5080208778381348
    7. 'e' → logprob: -3.7580208778381348
    8. ' def' → logprob: -3.8830208778381348
    9. ' ' → logprob: -4.008020877838135
    10. '    ' → logprob: -4.258020877838135

Token 112: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5639563798904419
    2. '<|end|>' → logprob: -1.938956379890442
    3. '(' → logprob: -2.0639562606811523
    4. ' ' → logprob: -2.5639562606811523
    5. '_' → logprob: -3.9389562606811523
    6. '    ' → logprob: -4.063956260681152
    7. '  ' → logprob: -4.313956260681152
    8. ' (' → logprob: -4.813956260681152
    9. 'def' → logprob: -5.063956260681152
    10. ' des' → logprob: -5.188956260681152

Token 113: ' opér' (ID: 65915)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5933411121368408
    2. '_' → logprob: -1.8433411121368408
    3. '+' → logprob: -2.343341112136841
    4. ' opér' → logprob: -2.718341112136841
    5. '(' → logprob: -3.468341112136841
    6. 'def' → logprob: -3.593341112136841
    7. ')' → logprob: -4.343340873718262
    8. ',' → logprob: -5.218340873718262
    9. '  ' → logprob: -5.343340873718262
    10. ' operations' → logprob: -5.468340873718262

Token 114: 'ateurs' (ID: 19727)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0233744066208601
    2. 'á' → logprob: -5.023374557495117
    3. 'ateurs' → logprob: -5.273374557495117
    4. 'ations' → logprob: -5.523374557495117
    5. 'é' → logprob: -5.523374557495117
    6. '```' → logprob: -7.023374557495117
    7. 'à' → logprob: -7.273374557495117
    8. 'ateur' → logprob: -7.898374557495117
    9. 'at' → logprob: -8.523374557495117
    10. '`' → logprob: -8.773374557495117

Token 115: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3709610104560852
    2. '   ' → logprob: -1.9959609508514404
    3. ')' → logprob: -2.4959609508514404
    4. ',' → logprob: -3.6209609508514404
    5. '(' → logprob: -3.9959609508514404
    6. ' ' → logprob: -4.4959611892700195
    7. '=' → logprob: -4.8709611892700195
    8. '    ' → logprob: -5.1209611892700195
    9. '<|end|>' → logprob: -5.9959611892700195
    10. ''' → logprob: -6.2459611892700195

Token 116: ' permettre' (ID: 55483)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.023606300354004
    2. ')' → logprob: -1.273606300354004
    3. 'self' → logprob: -2.398606300354004
    4. '   ' → logprob: -2.773606300354004
    5. ' continuer' → logprob: -3.523606300354004
    6. 'def' → logprob: -3.648606300354004
    7. ' la' → logprob: -4.023606300354004
    8. 's' → logprob: -4.148606300354004
    9. ' ' → logprob: -4.148606300354004
    10. ' def' → logprob: -4.273606300354004

Token 117: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47325631976127625
    2. '=' → logprob: -1.9732563495635986
    3. '_' → logprob: -2.3482563495635986
    4. '(' → logprob: -3.3482563495635986
    5. 's' → logprob: -3.9732563495635986
    6. '<|end|>' → logprob: -4.0982561111450195
    7. ')' → logprob: -4.3482561111450195
    8. '   ' → logprob: -4.7232561111450195
    9. ' (' → logprob: -5.0982561111450195
    10. '+' → logprob: -5.0982561111450195

Token 118: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8847318291664124
    2. ')' → logprob: -1.3847317695617676
    3. ' ' → logprob: -2.0097317695617676
    4. '_' → logprob: -2.7597317695617676
    5. '=' → logprob: -3.2597317695617676
    6. ' )' → logprob: -3.7597317695617676
    7. '    ' → logprob: -3.8847317695617676
    8. 's' → logprob: -4.634731769561768
    9. ',' → logprob: -5.009731769561768
    10. ' =' → logprob: -5.134731769561768

Token 119: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5842966437339783
    2. ' les' → logprob: -1.709296703338623
    3. ' la' → logprob: -2.709296703338623
    4. '   ' → logprob: -2.834296703338623
    5. ' des' → logprob: -3.334296703338623
    6. '    ' → logprob: -3.584296703338623
    7. ' d' → logprob: -4.334296703338623
    8. ' un' → logprob: -4.834296703338623
    9. ' le' → logprob: -5.084296703338623
    10. ' de' → logprob: -5.334296703338623

Token 120: ' opérations' (ID: 102793)
  Prédit: ' opérations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opérations' → logprob: -0.012739544734358788
    2. ' operations' → logprob: -4.762739658355713
    3. ' calcul' → logprob: -6.137739658355713
    4. ' op' → logprob: -7.512739658355713
    5. ' opér' → logprob: -7.512739658355713
    6. 'op' → logprob: -8.137739181518555
    7. ' ' → logprob: -9.387739181518555
    8. 'operations' → logprob: -9.512739181518555
    9. '+' → logprob: -10.262739181518555
    10. ' calculations' → logprob: -10.512739181518555

Token 121: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.34349700808525085
    2. 'ar' → logprob: -3.0934970378875732
    3. ' de' → logprob: -3.0934970378875732
    4. ' arithmetic' → logprob: -3.2184970378875732
    5. ' sur' → logprob: -3.7184970378875732
    6. 'arith' → logprob: -3.9684970378875732
    7. ' d' → logprob: -4.218496799468994
    8. '_' → logprob: -4.593496799468994
    9. ' ' → logprob: -4.593496799468994
    10. ' modulo' → logprob: -4.843496799468994

Token 122: 'ith' (ID: 437)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21605272591114044
    2. 'g' → logprob: -1.966052770614624
    3. '_' → logprob: -3.716052770614624
    4. 'ith' → logprob: -3.966052770614624
    5. 'it' → logprob: -5.841052532196045
    6. '+' → logprob: -6.591052532196045
    7. 'r' → logprob: -6.716052532196045
    8. '```' → logprob: -7.341052532196045
    9. 'ithmetic' → logprob: -7.341052532196045
    10. '*' → logprob: -7.466052532196045

Token 123: 'mé' (ID: 35328)
  Prédit: 'mé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mé' → logprob: -0.003438865300267935
    2. 'm' → logprob: -5.753438949584961
    3. 'étiques' → logprob: -9.003438949584961
    4. 'é' → logprob: -10.378438949584961
    5. 'Mé' → logprob: -10.753438949584961
    6. 'th' → logprob: -10.878438949584961
    7. '+' → logprob: -11.503438949584961
    8. 'meth' → logprob: -11.628438949584961
    9. 'im' → logprob: -12.003438949584961
    10. 'miques' → logprob: -12.003438949584961

Token 124: 'tiques' (ID: 60539)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4404186010360718
    2. 'tiques' → logprob: -1.0654186010360718
    3. 'th' → logprob: -4.940418720245361
    4. 'ti' → logprob: -5.940418720245361
    5. '+' → logprob: -7.065418720245361
    6. '*' → logprob: -7.565418720245361
    7. 's' → logprob: -9.565418243408203
    8. '#' → logprob: -9.815418243408203
    9. '-' → logprob: -10.190418243408203
    10. '```' → logprob: -10.440418243408203

Token 125: ' entre' (ID: 3853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6418670415878296
    2. '_' → logprob: -1.8918670415878296
    3. 's' → logprob: -1.8918670415878296
    4. '<|end|>' → logprob: -2.016867160797119
    5. '   ' → logprob: -2.266867160797119
    6. ')' → logprob: -2.516867160797119
    7. ' ' → logprob: -2.766867160797119
    8. '`' → logprob: -3.516867160797119
    9. '.' → logprob: -4.391867160797119
    10. '(' → logprob: -4.641867160797119

Token 126: ' instances' (ID: 23490)
  Prédit: ' instances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instances' → logprob: -0.9412568211555481
    2. '<|end|>' → logprob: -2.0662567615509033
    3. 'instances' → logprob: -2.3162567615509033
    4. ' des' → logprob: -2.3162567615509033
    5. ' les' → logprob: -2.4412567615509033
    6. ' Mod' → logprob: -3.0662567615509033
    7. ' objets' → logprob: -3.5662567615509033
    8. ' deux' → logprob: -3.6912567615509033
    9. 'Mod' → logprob: -3.6912567615509033
    10. ' espaces' → logprob: -3.8162567615509033

Token 127: ' Mod' (ID: 7191)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.008410435169935226
    2. 'de' → logprob: -5.008410453796387
    3. ' of' → logprob: -7.758410453796387
    4. ',' → logprob: -8.258410453796387
    5. '   ' → logprob: -8.258410453796387
    6. ')' → logprob: -8.758410453796387
    7. ' ou' → logprob: -8.883410453796387
    8. ' et' → logprob: -10.008410453796387
    9. ' ' → logprob: -10.008410453796387
    10. ' d' → logprob: -10.133410453796387

Token 128: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.01607624813914299
    2. 'I' → logprob: -4.14107608795166
    3. 'In' → logprob: -10.64107608795166
    4. '   ' → logprob: -12.76607608795166
    5. '_' → logprob: -13.01607608795166
    6. '.' → logprob: -13.01607608795166
    7. ')' → logprob: -13.26607608795166
    8. '-' → logprob: -13.64107608795166
    9. ' Int' → logprob: -13.64107608795166
    10. 'E' → logprob: -13.89107608795166

Token 129: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.826073944568634
    2. ')' → logprob: -1.2010738849639893
    3. '   ' → logprob: -1.7010738849639893
    4. '):' → logprob: -2.9510738849639893
    5. 's' → logprob: -4.826074123382568
    6. '}' → logprob: -5.076074123382568
    7. '.' → logprob: -5.701074123382568
    8. ':' → logprob: -6.326074123382568
    9. '(' → logprob: -6.326074123382568
    10. ']' → logprob: -7.326074123382568

Token 130: ' ent' (ID: 1121)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05500065162777901
    2. 'int' → logprob: -2.9300005435943604
    3. '(int' → logprob: -10.180000305175781
    4. ' integers' → logprob: -10.180000305175781
    5. ' ' → logprob: -10.930000305175781
    6. '<int' → logprob: -11.555000305175781
    7. ' autres' → logprob: -13.055000305175781
    8. '=int' → logprob: -13.055000305175781
    9. 'inte' → logprob: -13.430000305175781
    10. 'ints' → logprob: -13.430000305175781

Token 131: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7667611241340637
    2. 'ière' → logprob: -1.766761064529419
    3. 'ières' → logprob: -2.141761064529419
    4. 'ier' → logprob: -2.516761064529419
    5. 'ié' → logprob: -2.891761064529419
    6. '   ' → logprob: -3.391761064529419
    7. 'e' → logprob: -4.266761302947998
    8. '  ' → logprob: -4.266761302947998
    9. 'a' → logprob: -4.891761302947998
    10. '_' → logprob: -5.016761302947998

Token 132: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08065342903137207
    2. ')' → logprob: -3.205653429031372
    3. ',' → logprob: -3.830653429031372
    4. '):' → logprob: -5.205653190612793
    5. '.' → logprob: -6.080653190612793
    6. '<|end|>' → logprob: -6.205653190612793
    7. '_' → logprob: -6.580653190612793
    8. ':' → logprob: -7.205653190612793
    9. '    ' → logprob: -7.705653190612793
    10. 's' → logprob: -7.705653190612793

Token 133: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6953816413879395
    2. ')' → logprob: -0.9453816413879395
    3. ' ' → logprob: -2.9453816413879395
    4. '_' → logprob: -3.0703816413879395
    5. ',' → logprob: -5.4453816413879395
    6. ' 
' → logprob: -5.8203816413879395
    7. ' )' → logprob: -7.0703816413879395
    8. '    ' → logprob: -7.1953816413879395
    9. ':' → logprob: -7.3203816413879395
    10. '
' → logprob: -7.8203816413879395

Token 134: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26607394218444824
    2. ' def' → logprob: -2.1410739421844482
    3. 'def' → logprob: -2.3910739421844482
    4. ')' → logprob: -4.516074180603027
    5. '_' → logprob: -5.516074180603027
    6. ' _' → logprob: -6.391074180603027
    7. ' ' → logprob: -6.391074180603027
    8. '__' (adapté à ' __') → logprob: -6.391074180603027
    9. '    ' → logprob: -6.641074180603027
    10. ' __' → logprob: -6.641074180603027

Token 135: 'r' (ID: 81)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.3372822105884552
    2. 'repr' → logprob: -1.3372821807861328
    3. 'eq' → logprob: -4.087282180786133
    4. 'str' → logprob: -5.837282180786133
    5. 'int' → logprob: -6.337282180786133
    6. 'pow' → logprob: -6.587282180786133
    7. 'add' → logprob: -7.712282180786133
    8. 'r' → logprob: -8.837282180786133
    9. 'neg' → logprob: -8.837282180786133
    10. 'i' → logprob: -9.462282180786133

Token 136: 'add' (ID: 964)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7607225775718689
    2. 'add' → logprob: -0.8857225775718689
    3. 'a' → logprob: -2.7607226371765137
    4. 'e' → logprob: -3.2607226371765137
    5. '_' → logprob: -4.385722637176514
    6. '_add' → logprob: -5.760722637176514
    7. 'u' → logprob: -6.510722637176514
    8. 'pow' → logprob: -8.135722160339355
    9. '___' → logprob: -8.510722160339355
    10. 'o' → logprob: -8.635722160339355

Token 137: '__,' (ID: 23783)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006757052149623632
    2. '__(' → logprob: -5.0067572593688965
    3. '__,' → logprob: -11.006756782531738
    4. '__(*' → logprob: -11.756756782531738
    5. '__(
' → logprob: -12.256756782531738
    6. '__('' → logprob: -12.256756782531738
    7. '___' → logprob: -13.006756782531738
    8. '__((' → logprob: -13.506756782531738
    9. '__.__' → logprob: -13.631756782531738
    10. '__*/' → logprob: -14.006756782531738

Token 138: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.020605655387043953
    2. '__' → logprob: -3.8956055641174316
    3. ' ' → logprob: -10.02060604095459
    4. ' ' → logprob: -11.77060604095459
    5. '"' → logprob: -13.39560604095459
    6. ''' → logprob: -13.39560604095459
    7. '_' → logprob: -13.52060604095459
    8. '`' → logprob: -13.64560604095459
    9. ' _' → logprob: -14.39560604095459
    10. ' ​' → logprob: -14.39560604095459

Token 139: 'r' (ID: 81)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.008688441477715969
    2. 'r' → logprob: -5.258688449859619
    3. 'mul' → logprob: -5.758688449859619
    4. 'add' → logprob: -8.633687973022461
    5. 'pow' → logprob: -9.508687973022461
    6. 'rm' → logprob: -10.758687973022461
    7. 'mod' → logprob: -11.008687973022461
    8. 'i' → logprob: -13.758687973022461
    9. 'repr' → logprob: -14.258687973022461
    10. 'ref' → logprob: -14.883687973022461

Token 140: 'sub' (ID: 3834)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.16150853037834167
    2. 'sub' → logprob: -1.911508560180664
    3. 'mul' → logprob: -6.911508560180664
    4. 'pow' → logprob: -8.286508560180664
    5. 'mod' → logprob: -11.411508560180664
    6. 'div' → logprob: -11.786508560180664
    7. '_add' → logprob: -12.161508560180664
    8. 'r' → logprob: -12.411508560180664
    9. '```' → logprob: -13.411508560180664
    10. 'sup' → logprob: -13.661508560180664

Token 141: '__,' (ID: 23783)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010513884481042624
    2. '__,' → logprob: -7.001051425933838
    3. '__(' → logprob: -9.12605094909668
    4. '__((' → logprob: -11.87605094909668
    5. '__(*' → logprob: -11.87605094909668
    6. '__('' → logprob: -12.37605094909668
    7. '__.__' → logprob: -12.50105094909668
    8. '__(
' → logprob: -12.62605094909668
    9. '__*/' → logprob: -13.50105094909668
    10. '__),' → logprob: -14.00105094909668

Token 142: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2819024920463562
    2. '__' → logprob: -1.406902551651001
    3. ' ' → logprob: -7.781902313232422
    4. ''' → logprob: -9.156902313232422
    5. '`' → logprob: -9.906902313232422
    6. ' ' → logprob: -10.156902313232422
    7. '**' → logprob: -10.656902313232422
    8. ' **' → logprob: -10.906902313232422
    9. '"' → logprob: -11.156902313232422
    10. '_' → logprob: -11.656902313232422

Token 143: 'rm' (ID: 21373)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.0034545487724244595
    2. 'pow' → logprob: -5.753454685211182
    3. 'add' → logprob: -9.253454208374023
    4. 'sub' → logprob: -9.378454208374023
    5. 'mod' → logprob: -10.003454208374023
    6. 'tr' → logprob: -10.253454208374023
    7. 'r' → logprob: -11.253454208374023
    8. 'Mul' → logprob: -13.878454208374023
    9. 'rm' → logprob: -14.128454208374023
    10. 'div' → logprob: -15.003454208374023

Token 144: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.0054929605685174465
    2. 'add' → logprob: -5.2554931640625
    3. 'ult' → logprob: -8.3804931640625
    4. 'mul' → logprob: -10.6304931640625
    5. 'sub' → logprob: -13.8804931640625
    6. 'od' → logprob: -14.0054931640625
    7. 'at' → logprob: -14.2554931640625
    8. 'uld' → logprob: -14.3804931640625
    9. 'div' → logprob: -14.5054931640625
    10. '*' → logprob: -14.7554931640625

Token 145: '__,' (ID: 23783)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06311772763729095
    2. '__,' → logprob: -2.813117742538452
    3. '__(' → logprob: -6.938117504119873
    4. '__(*' → logprob: -10.063117980957031
    5. '__('' → logprob: -10.563117980957031
    6. '__,
' → logprob: -10.813117980957031
    7. '__(
' → logprob: -10.813117980957031
    8. '__.__' → logprob: -11.188117980957031
    9. '__((' → logprob: -11.188117980957031
    10. '__*/' → logprob: -11.688117980957031

Token 146: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.254813551902771
    2. ' __' → logprob: -1.504813551902771
    3. '**' → logprob: -6.0048136711120605
    4. ' ' → logprob: -8.754813194274902
    5. ' **' → logprob: -9.129813194274902
    6. '`' → logprob: -10.004813194274902
    7. ''' → logprob: -11.254813194274902
    8. '```' → logprob: -11.379813194274902
    9. '.py' → logprob: -11.504813194274902
    10. 'def' → logprob: -11.629813194274902

Token 147: 'r' (ID: 81)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.06270891427993774
    2. 'pow' → logprob: -2.812708854675293
    3. 'add' → logprob: -8.437708854675293
    4. 'r' → logprob: -8.562708854675293
    5. 'sub' → logprob: -8.687708854675293
    6. 'mul' → logprob: -9.312708854675293
    7. 'div' → logprob: -9.687708854675293
    8. 'true' → logprob: -11.812708854675293
    9. '```' → logprob: -13.187708854675293
    10. '
' → logprob: -14.312708854675293

Token 148: 'tr' (ID: 371)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0021025598980486393
    2. 'sub' → logprob: -6.877102375030518
    3. 'pow' → logprob: -7.002102375030518
    4. 'div' → logprob: -9.252102851867676
    5. 'tr' → logprob: -10.002102851867676
    6. 'mul' → logprob: -11.377102851867676
    7. '```' → logprob: -13.002102851867676
    8. '**' → logprob: -13.627102851867676
    9. '_add' → logprob: -14.252102851867676
    10. '(add' → logprob: -14.252102851867676

Token 149: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.011216288432478905
    2. 'ud' → logprob: -5.386216163635254
    3. 'ue' → logprob: -6.011216163635254
    4. 'u' → logprob: -6.386216163635254
    5. '__' → logprob: -6.386216163635254
    6. 'div' → logprob: -7.761216163635254
    7. 'id' → logprob: -8.886216163635254
    8. '```' → logprob: -9.636216163635254
    9. 'ed' → logprob: -10.136216163635254
    10. 'd' → logprob: -10.261216163635254

Token 150: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -8.0536883615423e-05
    2. 'v' → logprob: -10.125080108642578
    3. '__' → logprob: -10.375080108642578
    4. 'div' → logprob: -12.125080108642578
    5. 'i' → logprob: -13.625080108642578
    6. 'e' → logprob: -14.750080108642578
    7. 'ivi' → logprob: -14.875080108642578
    8. 'vi' → logprob: -15.250080108642578
    9. '/' → logprob: -15.500080108642578
    10. '_div' → logprob: -15.500080108642578

Token 151: '__,' (ID: 23783)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014194650575518608
    2. '__,' → logprob: -4.264194488525391
    3. '__:' → logprob: -11.63919448852539
    4. '__,
' → logprob: -12.38919448852539
    5. '__),' → logprob: -12.76419448852539
    6. '__(' → logprob: -12.88919448852539
    7. '__

' → logprob: -12.88919448852539
    8. '__*/' → logprob: -13.13919448852539
    9. '__(*' → logprob: -13.38919448852539
    10. '__.' → logprob: -13.51419448852539

Token 152: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1292123794555664
    2. ' __' → logprob: -2.3792123794555664
    3. '**' → logprob: -3.8792123794555664
    4. '`' → logprob: -5.754212379455566
    5. ' ' → logprob: -6.379212379455566
    6. ''' → logprob: -7.129212379455566
    7. '```' → logprob: -7.504212379455566
    8. ' **' → logprob: -7.754212379455566
    9. 'def' → logprob: -8.254212379455566
    10. '"' → logprob: -8.379212379455566

Token 153: 'r' (ID: 81)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -5.5577775128767826e-06
    2. 'add' → logprob: -12.250005722045898
    3. 'p' → logprob: -15.125005722045898
    4. 'Pow' → logprob: -15.125005722045898
    5. '_pow' → logprob: -16.3750057220459
    6. 'div' → logprob: -17.0000057220459
    7. 'pos' → logprob: -17.1250057220459
    8. ' pow' → logprob: -17.8750057220459
    9. 'r' → logprob: -18.0000057220459
    10. 'power' → logprob: -18.1250057220459

Token 154: 'pow' (ID: 30304)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.1602502167224884
    2. 'pow' → logprob: -1.910250186920166
    3. 'mul' → logprob: -11.535250663757324
    4. 'div' → logprob: -11.535250663757324
    5. 'sub' → logprob: -12.285250663757324
    6. 'mod' → logprob: -14.660250663757324
    7. 'Pow' → logprob: -15.035250663757324
    8. '**' → logprob: -15.410250663757324
    9. '_add' → logprob: -15.660250663757324
    10. '```' → logprob: -15.910250663757324

Token 155: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009744709241203964
    2. '__(' → logprob: -7.625974655151367
    3. '__,' → logprob: -9.000974655151367
    4. '__(*' → logprob: -9.500974655151367
    5. '__:' → logprob: -9.750974655151367
    6. '__(
' → logprob: -10.625974655151367
    7. '<|end|>' → logprob: -10.750974655151367
    8. 'self' → logprob: -10.875974655151367
    9. '(self' → logprob: -11.000974655151367
    10. '__
' → logprob: -11.000974655151367

Token 156: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0007346868515015
    2. ',' → logprob: -1.2507346868515015
    3. '   ' → logprob: -1.8757346868515015
    4. '<|end|>' → logprob: -2.375734806060791
    5. ' :' → logprob: -3.625734806060791
    6. ' ' → logprob: -3.625734806060791
    7. ')' → logprob: -4.375734806060791
    8. '):' → logprob: -4.500734806060791
    9. '    ' → logprob: -4.625734806060791
    10. '}' → logprob: -6.125734806060791

Token 157: ' Version' (ID: 10004)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6534321308135986
    2. ' ' → logprob: -1.0284321308135986
    3. '   ' → logprob: -2.9034321308135986
    4. '<|end|>' → logprob: -3.1534321308135986
    5. '_' → logprob: -5.2784318923950195
    6. '  ' → logprob: -5.6534318923950195
    7. '       ' → logprob: -6.1534318923950195
    8. ' def' → logprob: -6.2784318923950195
    9. ' 
' → logprob: -6.4034318923950195
    10. ')' → logprob: -6.5284318923950195

Token 158: ' réfléch' (ID: 107126)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34968385100364685
    2. ' des' → logprob: -1.4746838808059692
    3. ' de' → logprob: -4.59968376159668
    4. '<|end|>' → logprob: -4.97468376159668
    5. 'def' → logprob: -5.09968376159668
    6. '   ' → logprob: -5.34968376159668
    7. ')' → logprob: -5.47468376159668
    8. '=' → logprob: -5.59968376159668
    9. 'de' → logprob: -5.59968376159668
    10. '(s' → logprob: -5.72468376159668

Token 159: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -1.0382695198059082
    2. 'ée' → logprob: -1.2882695198059082
    3. 'i' → logprob: -1.7882695198059082
    4. '__' → logprob: -2.163269519805908
    5. 'ies' → logprob: -3.038269519805908
    6. 'é' → logprob: -4.038269519805908
    7. 'e' → logprob: -4.538269519805908
    8. 'is' → logprob: -5.663269519805908
    9. 'ées' → logprob: -5.913269519805908
    10. 'es' → logprob: -6.038269519805908

Token 160: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1166131496429443
    2. '<|end|>' → logprob: -1.2416131496429443
    3. ',' → logprob: -1.9916131496429443
    4. '   ' → logprob: -2.2416131496429443
    5. ':' → logprob: -2.9916131496429443
    6. 's' → logprob: -3.6166131496429443
    7. '):' → logprob: -4.741613388061523
    8. 'def' → logprob: -4.741613388061523
    9. ' des' → logprob: -4.866613388061523
    10. '(' → logprob: -5.366613388061523

Token 161: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4626621603965759
    2. ' permettre' → logprob: -2.5876622200012207
    3. ')' → logprob: -2.7126622200012207
    4. ' l' → logprob: -2.8376622200012207
    5. ' gérer' → logprob: -3.3376622200012207
    6. ' la' → logprob: -4.337662220001221
    7. 'int' → logprob: -4.587662220001221
    8. ' int' → logprob: -4.587662220001221
    9. ' Mod' → logprob: -4.587662220001221
    10. '   ' → logprob: -4.962662220001221

Token 162: ' comm' (ID: 1394)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45375460386276245
    2. ' def' → logprob: -2.8287546634674072
    3. 'def' → logprob: -3.0787546634674072
    4. 's' → logprob: -3.0787546634674072
    5. ')' → logprob: -3.3287546634674072
    6. ' ]' → logprob: -3.8287546634674072
    7. ' )' → logprob: -3.8287546634674072
    8. 'd' → logprob: -4.078754425048828
    9. '_' → logprob: -4.078754425048828
    10. ' """' → logprob: -4.203754425048828

Token 163: 'ut' (ID: 339)
  Prédit: 'ut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.6083837747573853
    2. 'e' → logprob: -1.7333837747573853
    3. ')' → logprob: -2.6083836555480957
    4. 'é' → logprob: -2.9833836555480957
    5. 'u' → logprob: -3.2333836555480957
    6. 'utat' → logprob: -3.3583836555480957
    7. 'a' → logprob: -3.9833836555480957
    8. 'utation' → logprob: -4.858383655548096
    9. 'utable' → logprob: -5.108383655548096
    10. 'ute' → logprob: -5.483383655548096

Token 164: 'ativité' (ID: 153323)
  Prédit: 'ativité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ativité' → logprob: -0.01332834456115961
    2. 'ation' → logprob: -4.638328552246094
    3. 'ativ' → logprob: -6.138328552246094
    4. 'ative' → logprob: -7.388328552246094
    5. 'atif' → logprob: -8.138328552246094
    6. 'at' → logprob: -8.763328552246094
    7. 'abilité' → logprob: -9.388328552246094
    8. 'ivité' → logprob: -10.388328552246094
    9. 'e' → logprob: -10.388328552246094
    10. 'ativity' → logprob: -10.513328552246094

Token 165: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.741142749786377
    2. '   ' → logprob: -0.991142749786377
    3. ',' → logprob: -2.741142749786377
    4. '<|end|>' → logprob: -3.116142749786377
    5. '_' → logprob: -3.991142749786377
    6. ':' → logprob: -5.241142749786377
    7. '):' → logprob: -6.241142749786377
    8. '  
' → logprob: -6.366142749786377
    9. ' ' → logprob: -6.491142749786377
    10. '    ' → logprob: -6.616142749786377

Token 166: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010613854974508286
    2. ')' → logprob: -6.010613918304443
    3. '    ' → logprob: -6.510613918304443
    4. ' ' → logprob: -6.635613918304443
    5. '    
' → logprob: -7.010613918304443
    6. ' 
' → logprob: -7.010613918304443
    7. '```' → logprob: -7.010613918304443
    8. ',' → logprob: -7.510613918304443
    9. '"""' → logprob: -7.885613918304443
    10. '
' → logprob: -8.385613441467285

Token 167: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5794190764427185
    2. ' def' → logprob: -1.3294191360473633
    3. 'def' → logprob: -1.8294191360473633
    4. ')' → logprob: -5.579419136047363
    5. '__' (adapté à ' __') → logprob: -5.704419136047363
    6. '```' → logprob: -6.454419136047363
    7. '    ' → logprob: -7.454419136047363
    8. '       ' → logprob: -7.704419136047363
    9. 'class' → logprob: -7.704419136047363
    10. ' ' → logprob: -7.704419136047363

Token 168: 'str' (ID: 689)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00146867660805583
    2. 'eq' → logprob: -6.876468658447266
    3. 'neg' → logprob: -8.251468658447266
    4. 'int' → logprob: -9.501468658447266
    5. 'repr' → logprob: -9.626468658447266
    6. 'i' → logprob: -11.126468658447266
    7. 'add' → logprob: -11.751468658447266
    8. 'pow' → logprob: -12.001468658447266
    9. 'mod' → logprob: -13.001468658447266
    10. ' init' → logprob: -13.876468658447266

Token 169: '__,' (ID: 23783)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033937279134988785
    2. '(self' → logprob: -3.6589372158050537
    3. '<|end|>' → logprob: -5.533937454223633
    4. ')' → logprob: -6.283937454223633
    5. '__(' → logprob: -8.033937454223633
    6. '```' → logprob: -8.283937454223633
    7. '   ' → logprob: -8.533937454223633
    8. '__' → logprob: -8.533937454223633
    9. ')(' → logprob: -9.158937454223633
    10. '<|end|>' → logprob: -9.408937454223633

Token 170: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02975083328783512
    2. ' __' → logprob: -3.5297508239746094
    3. 'def' → logprob: -15.90475082397461
    4. '.__' → logprob: -16.02975082397461
    5. '___' → logprob: -16.90475082397461
    6. ' ' → logprob: -17.65475082397461
    7. '```' → logprob: -17.65475082397461
    8. 'to' → logprob: -17.77975082397461
    9. ' ' → logprob: -18.15475082397461
    10. '/__' → logprob: -19.15475082397461

Token 171: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.014184900559484959
    2. 'int' → logprob: -4.264184951782227
    3. 'eq' → logprob: -10.764184951782227
    4. 'format' → logprob: -15.639184951782227
    5. 'rep' → logprob: -16.014184951782227
    6. '_repr' → logprob: -18.139184951782227
    7. ' repr' → logprob: -18.264184951782227
    8. 'init' → logprob: -18.889184951782227
    9. 'index' → logprob: -19.139184951782227
    10. 'str' → logprob: -19.139184951782227

Token 172: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03692745417356491
    2. '__(' → logprob: -4.036927223205566
    3. '(' → logprob: -4.411927223205566
    4. '__(
' → logprob: -5.911927223205566
    5. '_' → logprob: -6.661927223205566
    6. ')' → logprob: -7.036927223205566
    7. '__('' → logprob: -8.036927223205566
    8. '}' → logprob: -8.911927223205566
    9. '__((' → logprob: -9.036927223205566
    10. ']' → logprob: -9.161927223205566

Token 173: ' :' (ID: 712)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03436700254678726
    2. '(
' → logprob: -3.909367084503174
    3. ')' → logprob: -4.909367084503174
    4. '(self' → logprob: -5.534367084503174
    5. ',' → logprob: -6.409367084503174
    6. ':' → logprob: -8.534366607666016
    7. '}' → logprob: -8.784366607666016
    8. '=' → logprob: -9.159366607666016
    9. ''' → logprob: -9.784366607666016
    10. '   ' → logprob: -10.409366607666016

Token 174: ' Pour' (ID: 13931)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5088089108467102
    2. '   ' → logprob: -1.1338088512420654
    3. ' ' → logprob: -3.3838088512420654
    4. ')' → logprob: -3.7588088512420654
    5. 'def' → logprob: -5.0088090896606445
    6. ' (' → logprob: -5.5088090896606445
    7. ' def' → logprob: -5.7588090896606445
    8. '    ' → logprob: -5.8838090896606445
    9. '(
' → logprob: -6.6338090896606445
    10. '       ' → logprob: -7.7588090896606445

Token 175: ' l' (ID: 305)
  Prédit: ' afficher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.7177850008010864
    2. ' la' → logprob: -1.3427850008010864
    3. 'repr' → logprob: -2.842784881591797
    4. '()' → logprob: -3.342784881591797
    5. ' aff' → logprob: -3.717784881591797
    6. '   ' → logprob: -3.967784881591797
    7. ' représ' → logprob: -4.092784881591797
    8. ' convertir' → logprob: -4.467784881591797
    9. ' l' → logprob: -4.717784881591797
    10. '<|end|>' → logprob: -5.217784881591797

Token 176: ''aff' (ID: 53397)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8891847133636475
    2. ''utilisateur' → logprob: -2.2641847133636475
    3. 'e' → logprob: -2.5141847133636475
    4. ''aff' → logprob: -2.8891847133636475
    5. ''' → logprob: -3.1391847133636475
    6. 'repr' → logprob: -3.1391847133636475
    7. '_repr' → logprob: -3.7641847133636475
    8. ')' → logprob: -3.8891847133636475
    9. 'representation' → logprob: -3.8891847133636475
    10. '__' → logprob: -4.264184951782227

Token 177: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.031522486358881
    2. 'ich' → logprob: -3.781522512435913
    3. 'ic' → logprob: -6.031522274017334
    4. 'iche' → logprob: -6.406522274017334
    5. 'icher' → logprob: -6.406522274017334
    6. 'i' → logprob: -6.531522274017334
    7. 'ect' → logprob: -7.781522274017334
    8. 'a' → logprob: -8.156522750854492
    9. 'iché' → logprob: -9.406522750854492
    10. 'ichel' → logprob: -9.781522750854492

Token 178: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17502470314502716
    2. '}' → logprob: -2.0500247478485107
    3. '   ' → logprob: -3.9250247478485107
    4. ',' → logprob: -5.050024509429932
    5. '<|end|>' → logprob: -6.050024509429932
    6. ']' → logprob: -7.050024509429932
    7. ' ' → logprob: -7.925024509429932
    8. '_' → logprob: -8.30002498626709
    9. ':' → logprob: -8.55002498626709
    10. '(' → logprob: -8.55002498626709

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01973678544163704
    2. '"""' → logprob: -4.2697367668151855
    3. ')' → logprob: -5.5197367668151855
    4. '"' → logprob: -7.0197367668151855
    5. '}' → logprob: -8.394737243652344
    6. '```' → logprob: -8.894737243652344
    7. '
' → logprob: -9.769737243652344
    8. '    
' → logprob: -10.144737243652344
    9. ',' → logprob: -10.394737243652344
    10. '"""
' → logprob: -10.394737243652344

Token 180: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048628129065036774
    2. '"""' → logprob: -3.798628091812134
    3. ')' → logprob: -4.923628330230713
    4. ' """' → logprob: -5.923628330230713
    5. ' 
' → logprob: -5.923628330230713
    6. '```' → logprob: -6.298628330230713
    7. '    
' → logprob: -6.423628330230713
    8. ':' → logprob: -6.798628330230713
    9. '
' → logprob: -6.923628330230713
    10. '"""
' → logprob: -6.923628330230713

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017636016011238098
    2. 'def' → logprob: -4.142635822296143
    3. ' def' → logprob: -6.767635822296143
    4. '    
' → logprob: -8.6426362991333
    5. '    ' → logprob: -9.2676362991333
    6. '   ' → logprob: -10.1426362991333
    7. 'class' → logprob: -10.6426362991333
    8. '	def' → logprob: -10.6426362991333
    9. ' indentation' → logprob: -11.1426362991333
    10. ' ' → logprob: -11.6426362991333

Token 182: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07115285843610764
    2. ' def' → logprob: -2.821152925491333
    3. '   ' → logprob: -4.696152687072754
    4. '__' → logprob: -12.321152687072754
    5. '	def' → logprob: -12.321152687072754
    6. 'de' → logprob: -13.821152687072754
    7. ' __' → logprob: -13.946152687072754
    8. ' ' → logprob: -14.071152687072754
    9. 'x' → logprob: -15.196152687072754
    10. 'class' → logprob: -15.321152687072754

Token 183: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07894090563058853
    2. ' __' → logprob: -2.5789408683776855
    3. '_init' → logprob: -10.203941345214844
    4. 'init' → logprob: -11.203941345214844
    5. '___' → logprob: -15.328941345214844
    6. ' init' → logprob: -15.703941345214844
    7. ' ' → logprob: -17.453941345214844
    8. ' ' → logprob: -17.953941345214844
    9. '   ' → logprob: -18.453941345214844
    10. '__(' → logprob: -18.703941345214844

Token 184: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'int' → logprob: -19.25
    3. ' init' → logprob: -19.375
    4. '_init' → logprob: -19.75
    5. 'ini' → logprob: -21.875
    6. 'inite' → logprob: -23.0
    7. '.init' → logprob: -23.125
    8. 'add' → logprob: -23.125
    9. '(init' → logprob: -23.625
    10. '	init' → logprob: -24.25

Token 185: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0047610728070139885
    2. '(self' → logprob: -5.504761219024658
    3. '__' → logprob: -7.629761219024658
    4. '(' → logprob: -9.1297607421875
    5. '__(
' → logprob: -9.3797607421875
    6. '_(' → logprob: -13.5047607421875
    7. ' (' → logprob: -14.3797607421875
    8. '__('' → logprob: -14.6297607421875
    9. 'self' → logprob: -14.8797607421875
    10. '__((' → logprob: -15.7547607421875

Token 186: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2200749754119897e-06
    2. ' self' → logprob: -13.125001907348633
    3. '0' → logprob: -16.875001907348633
    4. '
' → logprob: -18.000001907348633
    5. '(self' → logprob: -18.125001907348633
    6. ',' → logprob: -18.250001907348633
    7. '   ' → logprob: -19.250001907348633
    8. ' ' → logprob: -19.500001907348633
    9. ')' → logprob: -19.625001907348633
    10. '1' → logprob: -20.500001907348633

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01448313519358635
    2. 'self' → logprob: -4.2644829750061035
    3. ' ,' → logprob: -8.264483451843262
    4. ',self' → logprob: -10.639483451843262
    5. '(self' → logprob: -11.014483451843262
    6. ' self' → logprob: -11.014483451843262
    7. '   ' → logprob: -13.514483451843262
    8. ',x' → logprob: -14.014483451843262
    9. ')' → logprob: -14.139483451843262
    10. '```' → logprob: -14.764483451843262

Token 188: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012658682651817799
    2. ' x' → logprob: -4.387658596038818
    3. 'self' → logprob: -8.887659072875977
    4. 'value' → logprob: -12.262659072875977
    5. ' self' → logprob: -12.887659072875977
    6. ' ' → logprob: -12.887659072875977
    7. '   ' → logprob: -14.762659072875977
    8. '	x' → logprob: -15.637659072875977
    9. '```' → logprob: -16.012659072875977
    10. ' value' → logprob: -16.137659072875977

Token 189: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12972208857536316
    2. ':' → logprob: -2.3797221183776855
    3. '=' → logprob: -3.8797221183776855
    4. ' ):' → logprob: -5.3797221183776855
    5. '%' → logprob: -6.3797221183776855
    6. ')' → logprob: -6.3797221183776855
    7. '):
' → logprob: -8.254721641540527
    8. ',' → logprob: -10.129721641540527
    9. ' %=' → logprob: -10.379721641540527
    10. ' :' → logprob: -10.504721641540527

Token 190: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3880087435245514
    2. 'x' → logprob: -1.138008713722229
    3. '   ' → logprob: -7.3880085945129395
    4. '       ' → logprob: -8.388009071350098
    5. ' (' → logprob: -9.013009071350098
    6. '(x' → logprob: -9.763009071350098
    7. '(' → logprob: -10.013009071350098
    8. '    ' → logprob: -11.013009071350098
    9. 'self' → logprob: -11.013009071350098
    10. ' self' → logprob: -11.138009071350098

Token 191: ' """
' (ID: 7037)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.24064131081104279
    2. 'self' → logprob: -1.6156413555145264
    3. '       ' → logprob: -4.240641117095947
    4. ' x' → logprob: -7.990641117095947
    5. 'x' → logprob: -8.240641593933105
    6. '   ' → logprob: -10.115641593933105
    7. ' ' → logprob: -10.615641593933105
    8. '    ' → logprob: -11.365641593933105
    9. '	self' → logprob: -11.490641593933105
    10. '        ' → logprob: -11.615641593933105

Token 192: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014210288412868977
    2. ' self' → logprob: -4.264210224151611
    3. 'x' → logprob: -10.13921070098877
    4. '       ' → logprob: -12.38921070098877
    5. '   ' → logprob: -13.01421070098877
    6. '0' → logprob: -15.13921070098877
    7. '(self' → logprob: -15.13921070098877
    8. ' x' → logprob: -16.014209747314453
    9. '	self' → logprob: -16.014209747314453
    10. ' ' → logprob: -16.389209747314453

Token 193: ' Initialise' (ID: 179601)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2789350748062134
    2. ' self' → logprob: -1.2789350748062134
    3. 'self' → logprob: -1.4039350748062134
    4. '       ' → logprob: -2.278934955596924
    5. ' x' → logprob: -2.653934955596924
    6. '   ' → logprob: -4.778934955596924
    7. '    ' → logprob: -5.028934955596924
    8. '=' → logprob: -5.278934955596924
    9. ')' → logprob: -6.278934955596924
    10. ' =' → logprob: -7.653934955596924

Token 194: ' la' (ID: 557)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35015156865119934
    2. ' self' → logprob: -1.225151538848877
    3. '<|end|>' → logprob: -7.475151538848877
    4. '       ' → logprob: -7.600151538848877
    5. ' ' → logprob: -8.225152015686035
    6. '	self' → logprob: -8.975152015686035
    7. '(self' → logprob: -9.725152015686035
    8. '   ' → logprob: -9.725152015686035
    9. '    ' → logprob: -10.850152015686035
    10. '        
' → logprob: -10.975152015686035

Token 195: ' valeur' (ID: 41664)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03433072194457054
    2. ' x' → logprob: -3.4093306064605713
    3. 'self' → logprob: -7.53433084487915
    4. ' self' → logprob: -9.534330368041992
    5. 'value' → logprob: -10.909330368041992
    6. '(x' → logprob: -11.409330368041992
    7. 'mod' → logprob: -11.659330368041992
    8. ' ' → logprob: -11.784330368041992
    9. '.x' → logprob: -11.909330368041992
    10. '   ' → logprob: -12.159330368041992

Token 196: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1345137357711792
    2. '=' → logprob: -1.7595137357711792
    3. ' (' → logprob: -1.7595137357711792
    4. ' =' → logprob: -2.5095138549804688
    5. '   ' → logprob: -2.6345138549804688
    6. '(self' → logprob: -3.0095138549804688
    7. ',' → logprob: -3.3845138549804688
    8. '       ' → logprob: -3.3845138549804688
    9. 'self' → logprob: -4.009513854980469
    10. ' self' → logprob: -4.384513854980469

Token 197: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22542642056941986
    2. ' x' → logprob: -1.600426435470581
    3. '(x' → logprob: -11.35042667388916
    4. ' (' → logprob: -14.35042667388916
    5. '	x' → logprob: -14.35042667388916
    6. ' ' → logprob: -15.60042667388916
    7. '0' → logprob: -15.60042667388916
    8. ' ' → logprob: -15.97542667388916
    9. '```' → logprob: -16.100425720214844
    10. '
' → logprob: -16.850425720214844

Token 198: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.43207699060440063
    2. ' %' → logprob: -1.0570769309997559
    3. ')' → logprob: -6.307076930999756
    4. ' %=' → logprob: -6.932076930999756
    5. '=' → logprob: -8.557077407836914
    6. ' ' → logprob: -9.432077407836914
    7. ':' → logprob: -9.807077407836914
    8. '%x' → logprob: -10.057077407836914
    9. '%=' → logprob: -10.057077407836914
    10. ')%' → logprob: -10.307077407836914

Token 199: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.5759437084197998
    2. 'MOD' → logprob: -0.8259437084197998
    3. '_MOD' → logprob: -12.825943946838379
    4. ' ' → logprob: -14.200943946838379
    5. '.MOD' → logprob: -14.825943946838379
    6. '(M' → logprob: -15.825943946838379
    7. ' ' → logprob: -16.200942993164062
    8. 'MO' → logprob: -16.575942993164062
    9. 'M' → logprob: -16.825942993164062
    10. ' (' → logprob: -17.075942993164062

Token 200: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019921327009797096
    2. ',' → logprob: -5.14492130279541
    3. '=' → logprob: -5.14492130279541
    4. ' ' → logprob: -6.01992130279541
    5. ' )' → logprob: -6.14492130279541
    6. '       ' → logprob: -6.76992130279541
    7. '   ' → logprob: -7.14492130279541
    8. '.' → logprob: -8.26992130279541
    9. '<|end|>' → logprob: -8.26992130279541
    10. ' =' → logprob: -8.89492130279541

Token 201: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01662508398294449
    2. '   ' → logprob: -5.016624927520752
    3. '=' → logprob: -6.016624927520752
    4. '<|end|>' → logprob: -6.016624927520752
    5. ' )' → logprob: -6.766624927520752
    6. ' ' → logprob: -7.016624927520752
    7. '       ' → logprob: -7.016624927520752
    8. ',' → logprob: -7.641624927520752
    9. '):' → logprob: -7.641624927520752
    10. 'x' → logprob: -8.51662540435791

Token 202: ' """
' (ID: 7037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03462658450007439
    2. ' )' → logprob: -4.284626483917236
    3. '   ' → logprob: -4.909626483917236
    4. 'x' → logprob: -5.534626483917236
    5. '=' → logprob: -5.784626483917236
    6. ' ' → logprob: -6.409626483917236
    7. ' x' → logprob: -6.909626483917236
    8. '       ' → logprob: -7.534626483917236
    9. 'self' → logprob: -7.659626483917236
    10. ' 
' → logprob: -8.284626960754395

Token 203: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.48854947090148926
    2. 'self' → logprob: -1.4885494709014893
    3. '       ' → logprob: -1.8635494709014893
    4. 'x' → logprob: -6.36354923248291
    5. ' x' → logprob: -6.48854923248291
    6. ')' → logprob: -7.23854923248291
    7. ' ' → logprob: -7.48854923248291
    8. '   ' → logprob: -7.86354923248291
    9. '=' → logprob: -8.98854923248291
    10. '        ' → logprob: -9.11354923248291

Token 204: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012797608505934477
    2. ' self' → logprob: -6.751279830932617
    3. '       ' → logprob: -9.126279830932617
    4. '   ' → logprob: -14.751279830932617
    5. 'x' → logprob: -15.251279830932617
    6. '	self' → logprob: -15.876279830932617
    7. '(self' → logprob: -17.626279830932617
    8. ' ' → logprob: -18.001279830932617
    9. ' ' → logprob: -19.001279830932617
    10. '  ' → logprob: -19.626279830932617

Token 205: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.12712758779525757
    2. '.' → logprob: -2.1271276473999023
    3. '=' → logprob: -9.377127647399902
    4. ' =' → logprob: -10.502127647399902
    5. '.value' → logprob: -10.502127647399902
    6. '.=' → logprob: -10.752127647399902
    7. ' .' → logprob: -11.252127647399902
    8. '.val' → logprob: -11.252127647399902
    9. 'x' → logprob: -11.752127647399902
    10. '._' → logprob: -13.752127647399902

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0022671823389828205
    2. ' =' → logprob: -6.127267360687256
    3. '%=' → logprob: -9.502266883850098
    4. '%' → logprob: -12.502266883850098
    5. ' %=' → logprob: -12.627266883850098
    6. '＝' → logprob: -15.752266883850098
    7. '=}' → logprob: -16.627267837524414
    8. '=x' → logprob: -16.752267837524414
    9. '=
' → logprob: -16.877267837524414
    10. ')' → logprob: -17.127267837524414

Token 207: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1269323080778122
    2. ' x' → logprob: -2.126932382583618
    3. '(x' → logprob: -12.501932144165039
    4. '	x' → logprob: -14.876932144165039
    5. ' (' → logprob: -16.37693214416504
    6. 'int' → logprob: -17.00193214416504
    7. ' ' → logprob: -18.12693214416504
    8. '
' → logprob: -18.37693214416504
    9. '(' → logprob: -18.62693214416504
    10. '{x' → logprob: -18.75193214416504

Token 208: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3132685720920563
    2. ' %' → logprob: -1.3132685422897339
    3. ' ' → logprob: -12.313268661499023
    4. ' %=' → logprob: -13.188268661499023
    5. ')' → logprob: -16.063268661499023
    6. ' ' → logprob: -16.563268661499023
    7. '%=' → logprob: -17.313268661499023
    8. '٪' → logprob: -17.438268661499023
    9. '%D' → logprob: -17.438268661499023
    10. '%x' → logprob: -17.688268661499023

Token 209: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.15310683415737e-05
    2. ' MOD' → logprob: -10.750021934509277
    3. 'MO' → logprob: -18.00002098083496
    4. '_MOD' → logprob: -19.25002098083496
    5. '.MOD' → logprob: -19.62502098083496
    6. ' ' → logprob: -20.75002098083496
    7. '   ' → logprob: -22.00002098083496
    8. 'MODE' → logprob: -22.62502098083496
    9. '  ' → logprob: -23.25002098083496
    10. 'MODULE' → logprob: -23.62502098083496

Token 210: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2070823758840561
    2. '   ' → logprob: -2.2070822715759277
    3. 'def' (adapté à ' def') → logprob: -3.3320822715759277
    4. ' ' → logprob: -3.7070822715759277
    5. '_' → logprob: -5.082082271575928
    6. ' def' → logprob: -5.457082271575928
    7. ' )' → logprob: -6.332082271575928
    8. '<|end|>' → logprob: -7.082082271575928
    9. ',' → logprob: -7.332082271575928
    10. ':' → logprob: -7.582082271575928

Token 213: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.31327536702156067
    2. '__' → logprob: -1.3132753372192383
    3. 'def' → logprob: -12.438275337219238
    4. ' ' → logprob: -12.438275337219238
    5. '.__' → logprob: -12.563275337219238
    6. '```' → logprob: -14.438275337219238
    7. '_add' → logprob: -15.063275337219238
    8. 'add' → logprob: -15.313275337219238
    9. ' ' → logprob: -15.438275337219238
    10. ' def' → logprob: -15.438275337219238

Token 214: 'str' (ID: 689)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.747814349073451e-05
    2. 'init' → logprob: -11.000017166137695
    3. 'pow' → logprob: -14.500017166137695
    4. '_add' → logprob: -16.125017166137695
    5. 'mul' → logprob: -16.750017166137695
    6. ' add' → logprob: -16.875017166137695
    7. 'str' → logprob: -18.125017166137695
    8. 'Add' → logprob: -18.250017166137695
    9. 'int' → logprob: -18.625017166137695
    10. 'mod' → logprob: -19.500017166137695

Token 215: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07579587399959564
    2. '__' → logprob: -2.700795888900757
    3. '(self' → logprob: -5.325795650482178
    4. '__(
' → logprob: -7.700795650482178
    5. '(' → logprob: -7.950795650482178
    6. '__('' → logprob: -9.200796127319336
    7. '___' → logprob: -11.200796127319336
    8. '__("' → logprob: -11.200796127319336
    9. '__(*' → logprob: -11.200796127319336
    10. '__((' → logprob: -11.575796127319336

Token 216: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9623810658231378e-05
    2. ')' → logprob: -10.875020027160645
    3. ' self' → logprob: -15.000020027160645
    4. '(self' → logprob: -15.125020027160645
    5. 's' → logprob: -17.500019073486328
    6. '	self' → logprob: -18.250019073486328
    7. 'sel' → logprob: -18.875019073486328
    8. 'se' → logprob: -19.750019073486328
    9. '   ' → logprob: -20.125019073486328
    10. ' )' → logprob: -20.750019073486328

Token 217: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048945799469947815
    2. '):
' → logprob: -3.173945903778076
    3. ')' → logprob: -5.423945903778076
    4. 'self' → logprob: -6.548945903778076
    5. '):

' → logprob: -10.798945426940918
    6. '):
' → logprob: -10.923945426940918
    7. '__' → logprob: -11.048945426940918
    8. ')__' → logprob: -11.923945426940918
    9. ').__' → logprob: -12.173945426940918
    10. ',' → logprob: -12.173945426940918

Token 218: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4800805151462555
    2. '(self' → logprob: -1.105080485343933
    3. '       ' → logprob: -3.2300806045532227
    4. 'return' → logprob: -5.605080604553223
    5. '   ' → logprob: -5.855080604553223
    6. '(
' → logprob: -6.230080604553223
    7. 'self' → logprob: -6.480080604553223
    8. ')' → logprob: -8.605080604553223
    9. 'def' → logprob: -9.105080604553223
    10. '()' → logprob: -9.980080604553223

Token 219: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.9862216504407115e-05
    2. '       ' → logprob: -11.125020027160645
    3. ' return' → logprob: -12.375020027160645
    4. '{return' → logprob: -14.625020027160645
    5. '   ' → logprob: -14.750020027160645
    6. '	return' → logprob: -17.375019073486328
    7. 'def' → logprob: -17.625019073486328
    8. ':return' → logprob: -18.000019073486328
    9. '```' → logprob: -19.250019073486328
    10. 'Return' → logprob: -19.625019073486328

Token 220: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0013520221691578627
    2. '       ' → logprob: -6.751351833343506
    3. ' return' → logprob: -8.626352310180664
    4. '   ' → logprob: -13.876352310180664
    5. 'def' → logprob: -14.251352310180664
    6. '{return' → logprob: -14.501352310180664
    7. '	return' → logprob: -16.376352310180664
    8. '{' → logprob: -17.126352310180664
    9. '```' → logprob: -17.126352310180664
    10. 'eturn' → logprob: -17.501352310180664

Token 221: ' Aff' (ID: 13741)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -8.304016228066757e-05
    2. ' return' → logprob: -9.875082969665527
    3. 'def' → logprob: -11.375082969665527
    4. 'Return' → logprob: -11.625082969665527
    5. '       ' → logprob: -11.750082969665527
    6. '{return' → logprob: -13.500082969665527
    7. '   ' → logprob: -13.750082969665527
    8. '	return' → logprob: -15.500082969665527
    9. '@return' → logprob: -15.750082969665527
    10. '__' → logprob: -16.125083923339844

Token 222: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0790790393948555
    2. 'ich' → logprob: -3.5790791511535645
    3. 'def' → logprob: -4.2040791511535645
    4. '   ' → logprob: -4.5790791511535645
    5. 'ichage' → logprob: -4.5790791511535645
    6. 'icher' → logprob: -6.0790791511535645
    7. '```' → logprob: -6.3290791511535645
    8. 'ic' → logprob: -6.8290791511535645
    9. 'ect' → logprob: -6.8290791511535645
    10. 'f' → logprob: -6.8290791511535645

Token 223: ' la' (ID: 557)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06839204579591751
    2. '(' → logprob: -3.068392038345337
    3. 'self' → logprob: -4.818392276763916
    4. '(str' → logprob: -5.068392276763916
    5. 'return' → logprob: -5.693392276763916
    6. 'str' → logprob: -7.068392276763916
    7. 's' → logprob: -7.693392276763916
    8. 'f' → logprob: -8.693391799926758
    9. '   ' → logprob: -9.568391799926758
    10. '{' → logprob: -9.693391799926758

Token 224: ' valeur' (ID: 41664)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02855885773897171
    2. 'str' → logprob: -3.9035589694976807
    3. '.x' → logprob: -4.903558731079102
    4. ' x' → logprob: -8.403558731079102
    5. ' str' → logprob: -9.153558731079102
    6. 'mod' → logprob: -9.653558731079102
    7. '{x' → logprob: -9.903558731079102
    8. '__' → logprob: -10.403558731079102
    9. 'string' → logprob: -10.528558731079102
    10. '{' → logprob: -11.153558731079102

Token 225: ' entière' (ID: 61583)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.37803053855896
    2. '()' → logprob: -1.37803053855896
    3. 'self' → logprob: -1.37803053855896
    4. '(self' → logprob: -1.75303053855896
    5. '       ' → logprob: -3.25303053855896
    6. ')' → logprob: -4.003030776977539
    7. ' self' → logprob: -6.003030776977539
    8. '(' → logprob: -6.128030776977539
    9. '```' → logprob: -6.878030776977539
    10. '           ' → logprob: -7.003030776977539

Token 226: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6252884268760681
    2. '(self' → logprob: -1.500288486480713
    3. '   ' → logprob: -2.125288486480713
    4. 'self' → logprob: -2.625288486480713
    5. ')' → logprob: -3.875288486480713
    6. '(' → logprob: -4.875288486480713
    7. '<|end|>' → logprob: -5.000288486480713
    8. '       ' → logprob: -5.875288486480713
    9. ' self' → logprob: -5.875288486480713
    10. 'de' → logprob: -6.500288486480713

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3625030815601349
    2. 'return' → logprob: -1.4875030517578125
    3. '   ' → logprob: -2.7375030517578125
    4. ' return' → logprob: -4.7375030517578125
    5. ')' → logprob: -6.1125030517578125
    6. ':return' → logprob: -7.1125030517578125
    7. '{return' → logprob: -7.9875030517578125
    8. '()' → logprob: -7.9875030517578125
    9. '           ' → logprob: -8.862503051757812
    10. '\n' → logprob: -8.862503051757812

Token 228: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24387595057487488
    2. '       ' → logprob: -2.1188759803771973
    3. 'return' → logprob: -2.6188759803771973
    4. ' return' → logprob: -3.8688759803771973
    5. 'def' → logprob: -6.993875980377197
    6. ')' → logprob: -7.618875980377197
    7. '
' → logprob: -8.368875503540039
    8. '```' → logprob: -8.368875503540039
    9. '	return' → logprob: -8.618875503540039
    10. '    ' → logprob: -9.493875503540039

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25454556941986084
    2. 'return' → logprob: -1.5045455694198608
    3. ' return' → logprob: -6.00454568862915
    4. '{return' → logprob: -9.629545211791992
    5. '   ' → logprob: -9.754545211791992
    6. '	return' → logprob: -11.504545211791992
    7. '{' → logprob: -12.254545211791992
    8. '	' → logprob: -12.629545211791992
    9. '```' → logprob: -13.629545211791992
    10. 'def' → logprob: -14.879545211791992

Token 230: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.3856492842023727e-06
    2. ' return' → logprob: -14.000000953674316
    3. '       ' → logprob: -15.000000953674316
    4. 'def' → logprob: -15.500000953674316
    5. '   ' → logprob: -17.375001907348633
    6. '	return' → logprob: -18.500001907348633
    7. '{return' → logprob: -21.125001907348633
    8. 'Return' → logprob: -22.250001907348633
    9. ':return' → logprob: -22.250001907348633
    10. '```' → logprob: -23.500001907348633

Token 231: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0005548207554966211
    2. ' str' → logprob: -7.500555038452148
    3. 'f' → logprob: -13.250555038452148
    4. ' f' → logprob: -17.50055503845215
    5. '	str' → logprob: -18.37555503845215
    6. '(str' → logprob: -18.62555503845215
    7. ' ' → logprob: -21.37555503845215
    8. '   ' → logprob: -22.25055503845215
    9. '=str' → logprob: -22.25055503845215
    10. 'string' → logprob: -23.25055503845215

Token 232: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.250004768371582
    3. '(int' → logprob: -17.6250057220459
    4. 'self' → logprob: -19.1250057220459
    5. '(
' → logprob: -19.6250057220459
    6. ' (' → logprob: -19.8750057220459
    7. '((' → logprob: -20.2500057220459
    8. '```' → logprob: -20.6250057220459
    9. ')(' → logprob: -21.2500057220459
    10. '[self' → logprob: -21.2500057220459

Token 233: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -4.0484450437361374e-05
    2. '.' → logprob: -10.125040054321289
    3. ' .' → logprob: -15.250040054321289
    4. ').' → logprob: -16.00004005432129
    5. 'x' → logprob: -17.62504005432129
    6. '`.' → logprob: -20.50004005432129
    7. '.value' → logprob: -20.62504005432129
    8. '].' → logprob: -20.75004005432129
    9. '.y' → logprob: -20.87504005432129
    10. '._' → logprob: -21.00004005432129

Token 234: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.125000953674316
    3. '<|end|>' → logprob: -16.5
    4. ')return' → logprob: -16.625
    5. ')}' → logprob: -17.25
    6. ' )' → logprob: -17.875
    7. '   ' → logprob: -18.0
    8. '}' → logprob: -18.375
    9. ')`' → logprob: -18.5
    10. ')

' → logprob: -18.5

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021177012473344803
    2. '
' → logprob: -4.146176815032959
    3. '    
' → logprob: -5.771176815032959
    4. '<|end|>' → logprob: -7.521176815032959
    5. 'def' → logprob: -7.771176815032959
    6. '```' → logprob: -8.271177291870117
    7. ' 
' → logprob: -8.646177291870117
    8. '  
' → logprob: -8.896177291870117
    9. '   
' → logprob: -9.271177291870117
    10. ' ' → logprob: -9.771177291870117

Token 236: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16363073885440826
    2. '   ' → logprob: -1.913630723953247
    3. ' def' → logprob: -5.788630962371826
    4. '    
' → logprob: -9.163630485534668
    5. ' ' → logprob: -9.663630485534668
    6. '@' → logprob: -9.788630485534668
    7. '
' → logprob: -9.788630485534668
    8. '	def' → logprob: -11.163630485534668
    9. '```' → logprob: -11.538630485534668
    10. ' 
' → logprob: -11.538630485534668

Token 237: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.40929538011550903
    2. 'add' → logprob: -1.1592953205108643
    3. 'eq' → logprob: -3.9092953205108643
    4. 'int' → logprob: -6.409295558929443
    5. 'mul' → logprob: -8.659295082092285
    6. 'init' → logprob: -8.784295082092285
    7. 'pow' → logprob: -9.159295082092285
    8. 'mod' → logprob: -10.159295082092285
    9. 'def' → logprob: -14.159295082092285
    10. 'flo' → logprob: -14.409295082092285

Token 238: '__' (ID: 771)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4743485450744629
    2. '__' → logprob: -0.9743485450744629
    3. '(self' → logprob: -8.849348068237305
    4. '__(
' → logprob: -9.724348068237305
    5. '__.__' → logprob: -11.099348068237305
    6. '__('' → logprob: -11.474348068237305
    7. '(' → logprob: -11.724348068237305
    8. '__
' → logprob: -11.849348068237305
    9. '   ' → logprob: -11.849348068237305
    10. '__((' → logprob: -12.224348068237305

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019876365549862385
    2. ' =' → logprob: -6.251987457275391
    3. '=self' → logprob: -10.00198745727539
    4. '__' → logprob: -11.62698745727539
    5. '   ' → logprob: -13.00198745727539
    6. '(self' → logprob: -13.87698745727539
    7. '=lambda' → logprob: -15.12698745727539
    8. 'def' → logprob: -15.25198745727539
    9. '_=' → logprob: -15.25198745727539
    10. '=
' → logprob: -15.37698745727539

Token 240: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.45848218582978e-06
    2. ' __' → logprob: -13.00000286102295
    3. 'str' → logprob: -16.250001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '___' → logprob: -19.500001907348633
    6. '```' → logprob: -21.000001907348633
    7. '__
' → logprob: -21.125001907348633
    8. '_str' → logprob: -21.125001907348633
    9. 'Str' → logprob: -21.500001907348633
    10. '____' → logprob: -21.625001907348633

Token 241: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: 0.0
    2. '_str' → logprob: -24.25
    3. 's' → logprob: -25.625
    4. ' str' → logprob: -26.0
    5. 'Str' → logprob: -26.5
    6. 'repr' → logprob: -27.375
    7. 'string' → logprob: -27.5
    8. '(str' → logprob: -27.5
    9. '	str' → logprob: -27.75
    10. 'init' → logprob: -28.125

Token 242: '__

' (ID: 58939)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005535162054002285
    2. 'def' → logprob: -5.880535125732422
    3. '    
' → logprob: -6.630535125732422
    4. '
' → logprob: -7.005535125732422
    5. ' 
' → logprob: -8.505535125732422
    6. ' def' → logprob: -8.505535125732422
    7. '	def' → logprob: -11.130535125732422
    8. '        
' → logprob: -11.255535125732422
    9. '```' → logprob: -11.255535125732422
    10. '<|end|>' → logprob: -11.380535125732422

Token 244: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.018381712958216667
    2. '   ' → logprob: -4.018381595611572
    3. ' def' → logprob: -8.39338207244873
    4. '	def' → logprob: -13.14338207244873
    5. '__' → logprob: -13.51838207244873
    6. '    
' → logprob: -14.14338207244873
    7. ' ' → logprob: -15.14338207244873
    8. '
' → logprob: -15.51838207244873
    9. '+' → logprob: -15.64338207244873
    10. '+
' → logprob: -16.143381118774414

Token 245: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20144422352313995
    2. '__' → logprob: -1.7014442682266235
    3. 'add' → logprob: -11.076444625854492
    4. ' add' → logprob: -11.326444625854492
    5. '_add' → logprob: -13.076444625854492
    6. ' ' → logprob: -14.451444625854492
    7. 'def' → logprob: -14.826444625854492
    8. '.__' → logprob: -15.576444625854492
    9. ' def' → logprob: -16.826444625854492
    10. '```' → logprob: -16.951444625854492

Token 246: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.320199877838604e-07
    2. 'init' → logprob: -15.0
    3. 'mul' → logprob: -18.5
    4. ' add' → logprob: -19.25
    5. '_add' → logprob: -20.125
    6. 'pow' → logprob: -20.125
    7. 'Add' → logprob: -20.625
    8. 'mod' → logprob: -21.125
    9. 'eq' → logprob: -22.25
    10. 'ADD' → logprob: -23.25

Token 247: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002479104558005929
    2. '__' → logprob: -6.002479076385498
    3. '(self' → logprob: -13.127479553222656
    4. '__(
' → logprob: -14.127479553222656
    5. '__('' → logprob: -15.127479553222656
    6. '_(' → logprob: -15.502479553222656
    7. '_' → logprob: -15.627479553222656
    8. '__((' → logprob: -16.127479553222656
    9. '__(*' → logprob: -17.377479553222656
    10. '__("' → logprob: -18.627479553222656

Token 248: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9361264946837764e-07
    2. '(self' → logprob: -16.5
    3. ' self' → logprob: -17.375
    4. 'def' → logprob: -17.625
    5. '   ' → logprob: -18.25
    6. ',' → logprob: -19.625
    7. '       ' → logprob: -19.75
    8. 'other' → logprob: -20.0
    9. '	self' → logprob: -20.75
    10. 's' → logprob: -21.75

Token 249: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.094170942902565
    2. ',' → logprob: -2.4691710472106934
    3. 'self' → logprob: -6.094171047210693
    4. '(' → logprob: -6.469171047210693
    5. ')(' → logprob: -7.469171047210693
    6. ' (' → logprob: -7.969171047210693
    7. ',self' → logprob: -8.844170570373535
    8. '__(' → logprob: -8.844170570373535
    9. ' ' → logprob: -9.719170570373535
    10. ')' → logprob: -10.469170570373535

Token 250: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -3.702754474943504e-05
    2. 'self' → logprob: -10.50003719329834
    3. ' other' → logprob: -11.62503719329834
    4. 'o' → logprob: -15.25003719329834
    5. '_other' → logprob: -16.125036239624023
    6. 'Other' → logprob: -16.625036239624023
    7. 'rhs' → logprob: -17.250036239624023
    8. '(other' → logprob: -17.250036239624023
    9. 'oth' → logprob: -18.375036239624023
    10. 'b' → logprob: -18.500036239624023

Token 251: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008101018611341715
    2. ':' → logprob: -7.500810146331787
    3. '):
' → logprob: -8.750809669494629
    4. ')' → logprob: -9.375809669494629
    5. ' ):' → logprob: -11.750809669494629
    6. '):
' → logprob: -13.250809669494629
    7. ' :' → logprob: -13.625809669494629
    8. ',' → logprob: -13.750809669494629
    9. '   ' → logprob: -14.250809669494629
    10. '}:' → logprob: -15.000809669494629

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09581169486045837
    2. '    ' → logprob: -3.720811605453491
    3. '<|end|>' → logprob: -3.720811605453491
    4. ' if' → logprob: -4.84581184387207
    5. ':' → logprob: -4.97081184387207
    6. ')' → logprob: -5.22081184387207
    7. '        ' → logprob: -5.59581184387207
    8. 'Mod' → logprob: -5.84581184387207
    9. '   ' → logprob: -5.97081184387207
    10. '(' → logprob: -6.59581184387207

Token 253: ' """
' (ID: 7037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4194248616695404
    2. 'return' → logprob: -1.1694248914718628
    3. 'other' → logprob: -3.6694247722625732
    4. '       ' → logprob: -5.294425010681152
    5. 'Mod' → logprob: -6.919425010681152
    6. 'self' → logprob: -8.419425010681152
    7. ' if' → logprob: -8.794425010681152
    8. 'result' → logprob: -9.419425010681152
    9. ' return' → logprob: -9.794425010681152
    10. 'new' → logprob: -12.044425010681152

Token 254: '       ' (ID: 309)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.49907079339027405
    2. 'self' → logprob: -1.7490707635879517
    3. 'if' → logprob: -2.499070882797241
    4. ' if' → logprob: -3.624070882797241
    5. 'def' → logprob: -3.624070882797241
    6. ' Mod' → logprob: -3.624070882797241
    7. '   ' → logprob: -3.999070882797241
    8. '       ' → logprob: -4.124070644378662
    9. ' self' → logprob: -4.374070644378662
    10. '+' → logprob: -6.124070644378662

Token 255: ' S' (ID: 336)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012342707253992558
    2. 'other' → logprob: -4.762342929840088
    3. 'return' → logprob: -5.762342929840088
    4. 'result' → logprob: -8.13734245300293
    5. ' if' → logprob: -8.63734245300293
    6. 'res' → logprob: -9.76234245300293
    7. '       ' → logprob: -10.38734245300293
    8. '   ' → logprob: -11.88734245300293
    9. 'self' → logprob: -11.88734245300293
    10. ' return' → logprob: -13.51234245300293

Token 256: 'urcharge' (ID: 162326)
  Prédit: 'elf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elf' → logprob: -0.06524726003408432
    2. 'def' → logprob: -4.190247058868408
    3. '       ' → logprob: -4.315247058868408
    4. '   ' → logprob: -4.440247058868408
    5. 'return' → logprob: -5.190247058868408
    6. '.' → logprob: -5.315247058868408
    7. ' return' → logprob: -5.690247058868408
    8. 'uper' → logprob: -6.065247058868408
    9. '=' → logprob: -6.190247058868408
    10. 'self' → logprob: -7.190247058868408

Token 257: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031547846738249063
    2. ' self' → logprob: -5.878154754638672
    3. 'def' → logprob: -8.128154754638672
    4. '(self' → logprob: -10.128154754638672
    5. ' ' → logprob: -12.378154754638672
    6. '+' → logprob: -12.628154754638672
    7. '   ' → logprob: -12.628154754638672
    8. 'other' → logprob: -14.253154754638672
    9. 'the' → logprob: -14.378154754638672
    10. '	self' → logprob: -14.628154754638672

Token 259: ''op' (ID: 70747)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8940377831459045
    2. ''' → logprob: -1.5190377235412598
    3. 'e' → logprob: -1.8940377235412598
    4. '__' → logprob: -2.2690377235412598
    5. 'a' → logprob: -3.1440377235412598
    6. '_add' → logprob: -3.8940377235412598
    7. 'def' → logprob: -4.01903772354126
    8. '_' → logprob: -4.76903772354126
    9. 'add' → logprob: -4.76903772354126
    10. '   ' → logprob: -5.76903772354126

Token 260: 'érateur' (ID: 108528)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4756280779838562
    2. 'def' → logprob: -1.850628137588501
    3. 'er' → logprob: -2.350628137588501
    4. '_add' → logprob: -3.725628137588501
    5. '(self' → logprob: -3.975628137588501
    6. '__' → logprob: -3.975628137588501
    7. '```' → logprob: -4.225627899169922
    8. 'add' → logprob: -4.475627899169922
    9. '   ' → logprob: -4.600627899169922
    10. '+(' → logprob: -5.225627899169922

Token 261: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017437237547710538
    2. ' +' → logprob: -6.376743793487549
    3. '+=' → logprob: -11.25174331665039
    4. ')' → logprob: -12.12674331665039
    5. ' +=' → logprob: -12.25174331665039
    6. '<|end|>' → logprob: -12.62674331665039
    7. '+)' → logprob: -12.62674331665039
    8. '+
' → logprob: -13.00174331665039
    9. ' ' → logprob: -13.50174331665039
    10. '=' → logprob: -13.50174331665039

Token 262: '.
' (ID: 558)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008576635271310806
    2. '       ' → logprob: -5.0085768699646
    3. 'self' → logprob: -6.7585768699646
    4. '(' → logprob: -7.7585768699646
    5. '   ' → logprob: -8.883576393127441
    6. ',' → logprob: -9.633576393127441
    7. 'def' → logprob: -11.008576393127441
    8. 'return' → logprob: -11.008576393127441
    9. ')' → logprob: -11.758576393127441
    10. ' self' → logprob: -12.133576393127441

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006455535534769297
    2. ' if' → logprob: -6.131455421447754
    3. ' return' → logprob: -6.756455421447754
    4. ' 
' → logprob: -7.506455421447754
    5. '   ' → logprob: -7.631455421447754
    6. ')' → logprob: -8.256455421447754
    7. '+' → logprob: -8.256455421447754
    8. '    ' → logprob: -8.381455421447754
    9. '<|end|>' → logprob: -8.381455421447754
    10. 'return' → logprob: -8.506455421447754

Token 264: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9761311411857605
    2. 'if' → logprob: -0.9761311411857605
    3. ' if' → logprob: -1.9761312007904053
    4. 'return' → logprob: -2.4761312007904053
    5. 'result' → logprob: -4.226130962371826
    6. ' return' → logprob: -5.101130962371826
    7. 'self' → logprob: -6.351130962371826
    8. '+' → logprob: -8.226131439208984
    9. ' result' → logprob: -8.601131439208984
    10. 'other' → logprob: -8.726131439208984

Token 265: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2537776231765747
    2. '       ' → logprob: -1.8787776231765747
    3. 'if' → logprob: -2.753777503967285
    4. 'self' → logprob: -5.878777503967285
    5. 'other' → logprob: -6.378777503967285
    6. ' return' → logprob: -6.878777503967285
    7. 'Mod' → logprob: -7.753777503967285
    8. 'result' → logprob: -7.878777503967285
    9. '(other' → logprob: -7.878777503967285
    10. ' if' → logprob: -8.378777503967285

Token 266: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004189517814666033
    2. 'return' (adapté à ' return') → logprob: -5.504189491271973
    3. '       ' → logprob: -9.879189491271973
    4. ' if' → logprob: -10.379189491271973
    5. 'other' → logprob: -10.504189491271973
    6. ' return' → logprob: -14.129189491271973
    7. '   ' → logprob: -16.00419044494629
    8. 'result' → logprob: -16.37919044494629
    9. 'self' → logprob: -16.50419044494629
    10. 'res' → logprob: -16.62919044494629

Token 267: ' (
' (ID: 4112)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -2.696889623621246e-06
    2. ' Mod' → logprob: -13.62500286102295
    3. 'self' → logprob: -14.00000286102295
    4. '(Mod' → logprob: -14.37500286102295
    5. '_mod' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '_Mod' → logprob: -19.375001907348633
    8. 'MOD' → logprob: -19.625001907348633
    9. 'Modulo' → logprob: -20.250001907348633
    10. 'type' → logprob: -20.250001907348633

Token 268: '           ' (ID: 352)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00011391390580683947
    2. 'self' → logprob: -9.125113487243652
    3. '(Mod' → logprob: -12.875113487243652
    4. ' Mod' → logprob: -13.500113487243652
    5. '       ' → logprob: -14.500113487243652
    6. '   ' → logprob: -16.00011444091797
    7. 'MOD' → logprob: -16.75011444091797
    8. 'Modulo' → logprob: -16.87511444091797
    9. '           ' → logprob: -17.12511444091797
    10. 'Not' → logprob: -17.37511444091797

Token 269: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.0005211008246988058
    2. 'self' → logprob: -7.625521183013916
    3. '(Mod' → logprob: -10.500520706176758
    4. ' Mod' → logprob: -12.625520706176758
    5. 'Modulo' → logprob: -14.750520706176758
    6. '(self' → logprob: -14.750520706176758
    7. 'MOD' → logprob: -15.625520706176758
    8. 'mod' → logprob: -15.625520706176758
    9. '__' → logprob: -15.750520706176758
    10. '_Mod' → logprob: -15.875520706176758

Token 270: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: 0.0
    2. 'int' → logprob: -17.875
    3. 'In' → logprob: -18.375
    4. 'I' → logprob: -19.875
    5. 'It' → logprob: -21.25
    6. '_int' → logprob: -21.375
    7. 'Integer' → logprob: -21.625
    8. 'Inte' → logprob: -21.75
    9. 'Ints' → logprob: -22.0
    10. '_Int' → logprob: -22.375

Token 271: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0040874239057302475
    2. '((' → logprob: -5.504087448120117
    3. ')(' → logprob: -12.629087448120117
    4. '(' → logprob: -13.004087448120117
    5. 'self' → logprob: -13.379087448120117
    6. '(
' → logprob: -14.004087448120117
    7. ' (' → logprob: -15.254087448120117
    8. ')((' → logprob: -15.254087448120117
    9. ')' → logprob: -15.629087448120117
    10. '(this' → logprob: -16.379087448120117

Token 272: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0001601539261173457
    2. '.' → logprob: -8.750160217285156
    3. ').' → logprob: -13.875160217285156
    4. ' .' → logprob: -14.500160217285156
    5. 'x' → logprob: -16.750160217285156
    6. ')' → logprob: -17.500160217285156
    7. '(x' → logprob: -17.875160217285156
    8. '(' → logprob: -18.250160217285156
    9. ' ' → logprob: -19.250160217285156
    10. '].' → logprob: -19.500160217285156

Token 273: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06197709962725639
    2. ' +' → logprob: -2.8119771480560303
    3. '+self' → logprob: -12.43697738647461
    4. '+(' → logprob: -12.93697738647461
    5. 'if' → logprob: -13.81197738647461
    6. '+
' → logprob: -14.18697738647461
    7. '+x' → logprob: -15.06197738647461
    8. ')' → logprob: -15.18697738647461
    9. ' if' → logprob: -15.43697738647461
    10. '+y' → logprob: -15.93697738647461

Token 274: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.2522764205932617
    2. '(other' → logprob: -1.5022764205932617
    3. 'int' → logprob: -8.877276420593262
    4. ' other' → logprob: -9.252276420593262
    5. ' (' → logprob: -9.627276420593262
    6. '(int' → logprob: -10.377276420593262
    7. '(
' → logprob: -11.752276420593262
    8. '
' → logprob: -13.002276420593262
    9. '(' → logprob: -13.127276420593262
    10. 'get' → logprob: -14.502276420593262

Token 275: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0022689702454954386
    2. ')' → logprob: -6.2522687911987305
    3. '.' → logprob: -8.12726879119873
    4. '<|end|>' → logprob: -10.62726879119873
    5. ' if' → logprob: -11.00226879119873
    6. '<|end|>' → logprob: -13.00226879119873
    7. 'x' → logprob: -14.25226879119873
    8. ').' → logprob: -15.50226879119873
    9. ' .' → logprob: -15.87726879119873
    10. 'if' → logprob: -16.002269744873047

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3213801681995392
    2. ' if' → logprob: -1.3213801383972168
    3. 'if' → logprob: -4.821380138397217
    4. '       ' → logprob: -11.446380615234375
    5. ')
' → logprob: -11.696380615234375
    6. ' )' → logprob: -12.571380615234375
    7. '<|end|>' → logprob: -13.196380615234375
    8. '   ' → logprob: -13.321380615234375
    9. '           ' → logprob: -13.696380615234375
    10. '	if' → logprob: -14.071380615234375

Token 277: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42954182624816895
    2. 'if' → logprob: -1.054541826248169
    3. ')' → logprob: -7.92954158782959
    4. '           ' → logprob: -8.42954158782959
    5. '       ' → logprob: -8.67954158782959
    6. '<|end|>' → logprob: -9.55454158782959
    7. '<|end|>' → logprob: -11.67954158782959
    8. '            ' → logprob: -12.80454158782959
    9. 'If' → logprob: -13.17954158782959
    10. '               ' → logprob: -13.17954158782959

Token 278: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.018158020451664925
    2. ' isinstance' → logprob: -4.018157958984375
    3. '(is' → logprob: -12.518157958984375
    4. 'type' → logprob: -13.268157958984375
    5. '   ' → logprob: -13.643157958984375
    6. '  ' → logprob: -14.518157958984375
    7. ' ' → logprob: -14.643157958984375
    8. 'has' → logprob: -14.643157958984375
    9. '    ' → logprob: -16.268157958984375
    10. '           ' → logprob: -17.268157958984375

Token 279: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.3896534740924835
    2. 'other' → logprob: -1.1396534442901611
    3. ' other' → logprob: -5.88965368270874
    4. 'Other' → logprob: -11.514653205871582
    5. '.other' → logprob: -14.889653205871582
    6. '_other' → logprob: -15.389653205871582
    7. 'OTHER' → logprob: -16.5146541595459
    8. ' Other' → logprob: -18.3896541595459
    9. '其他' → logprob: -19.0146541595459
    10. '-other' → logprob: -19.1396541595459

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41855764389038086
    2. '(other' → logprob: -1.6685576438903809
    3. '(Mod' → logprob: -2.043557643890381
    4. '(self' → logprob: -4.418557643890381
    5. '(' → logprob: -4.918557643890381
    6. 'other' → logprob: -6.043557643890381
    7. 'self' → logprob: -6.668557643890381
    8. ')' → logprob: -8.293558120727539
    9. 'Mod' → logprob: -8.918558120727539
    10. 'Other' → logprob: -9.043558120727539

Token 281: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -9.088346359931165e-07
    2. ' Mod' → logprob: -14.375000953674316
    3. '(Mod' → logprob: -15.375000953674316
    4. 'self' → logprob: -17.625
    5. 'mod' → logprob: -19.25
    6. ' ' → logprob: -19.375
    7. '   ' → logprob: -20.125
    8. 'MOD' → logprob: -20.625
    9. 'Modulo' → logprob: -20.875
    10. '_mod' → logprob: -21.75

Token 282: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.318681188422488e-05
    2. 'int' → logprob: -11.25001335144043
    3. 'In' → logprob: -16.62501335144043
    4. ' Int' → logprob: -19.37501335144043
    5. 'nt' → logprob: -19.50001335144043
    6. 'Ints' → logprob: -19.75001335144043
    7. '	Int' → logprob: -20.00001335144043
    8. '_int' → logprob: -20.00001335144043
    9. '<Int' → logprob: -20.87501335144043
    10. 'INT' → logprob: -21.00001335144043

Token 283: ')' (ID: 8)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16352030634880066
    2. ' else' → logprob: -1.913520336151123
    3. ')' → logprob: -5.788520336151123
    4. '        ' → logprob: -8.538519859313965
    5. '       ' → logprob: -11.413519859313965
    6. '           ' → logprob: -11.788519859313965
    7. '         ' → logprob: -11.913519859313965
    8. '          ' → logprob: -12.913519859313965
    9. '            ' → logprob: -13.163519859313965
    10. ' )' → logprob: -13.913519859313965

Token 284: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.12707771360874176
    2. ' else' → logprob: -2.12707781791687
    3. '        ' → logprob: -9.37707805633545
    4. '           ' → logprob: -10.37707805633545
    5. '       ' → logprob: -11.12707805633545
    6. '	else' → logprob: -11.37707805633545
    7. '         ' → logprob: -13.00207805633545
    8. '            ' → logprob: -13.50207805633545
    9. '          ' → logprob: -14.25207805633545
    10. '               ' → logprob: -14.37707805633545

Token 285: '
' (ID: 198)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0001848254178185016
    2. ' Mod' → logprob: -8.625185012817383
    3. '           ' → logprob: -12.375185012817383
    4. '(Mod' → logprob: -14.000185012817383
    5. '       ' → logprob: -17.125185012817383
    6. '_Mod' → logprob: -17.375185012817383
    7. '_mod' → logprob: -17.625185012817383
    8. 'MOD' → logprob: -17.625185012817383
    9. 'Modulo' → logprob: -17.750185012817383
    10. ' ' → logprob: -17.875185012817383

Token 286: '           ' (ID: 352)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0005276533775031567
    2. ' Mod' → logprob: -8.125527381896973
    3. '           ' → logprob: -8.375527381896973
    4. '(Mod' → logprob: -14.500527381896973
    5. 'Modulo' → logprob: -15.875527381896973
    6. '       ' → logprob: -15.875527381896973
    7. 'MOD' → logprob: -16.50052833557129
    8. '_mod' → logprob: -16.75052833557129
    9. '   ' → logprob: -16.75052833557129
    10. 'mod' → logprob: -16.75052833557129

Token 287: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -7.896309739408025e-07
    2. ' Mod' → logprob: -14.375000953674316
    3. '   ' → logprob: -16.375
    4. '(Mod' → logprob: -16.75
    5. '           ' → logprob: -17.625
    6. 'Modulo' → logprob: -17.875
    7. '       ' → logprob: -18.0
    8. 'MOD' → logprob: -18.625
    9. ' ' → logprob: -19.5
    10. '_Mod' → logprob: -19.625

Token 288: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.512236498361744e-07
    2. 'int' → logprob: -14.625000953674316
    3. 'Ints' → logprob: -18.75
    4. 'In' → logprob: -19.125
    5. ' Int' → logprob: -19.375
    6. '_Int' → logprob: -20.25
    7. '	Int' → logprob: -20.375
    8. '<Int' → logprob: -20.5
    9. 'Integer' → logprob: -20.875
    10. '_int' → logprob: -21.0

Token 289: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.896309739408025e-07
    2. '(other' → logprob: -14.750000953674316
    3. '(' → logprob: -14.875000953674316
    4. '((' → logprob: -17.75
    5. ' (' → logprob: -18.25
    6. '(
' → logprob: -18.5
    7. 'self' → logprob: -18.625
    8. '   ' → logprob: -19.0
    9. '(this' → logprob: -19.0
    10. '[self' → logprob: -20.25

Token 290: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00030161935137584805
    2. '.' → logprob: -8.125301361083984
    3. 'x' → logprob: -12.500301361083984
    4. ' .' → logprob: -13.375301361083984
    5. ')' → logprob: -16.375301361083984
    6. 'self' → logprob: -16.875301361083984
    7. '(x' → logprob: -17.375301361083984
    8. ').' → logprob: -18.000301361083984
    9. ' ' → logprob: -18.000301361083984
    10. ',' → logprob: -18.000301361083984

Token 291: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931473612785339
    2. ' +' → logprob: -0.6931473612785339
    3. '+
' → logprob: -16.318147659301758
    4. '+x' → logprob: -16.693147659301758
    5. ' ' → logprob: -17.443147659301758
    6. '+self' → logprob: -17.443147659301758
    7. ' ' → logprob: -17.818147659301758
    8. ' +
' → logprob: -17.943147659301758
    9. '+b' → logprob: -18.568147659301758
    10. ' plus' → logprob: -18.693147659301758

Token 292: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00020354038861114532
    2. ' other' → logprob: -8.500203132629395
    3. '(other' → logprob: -18.75020408630371
    4. '   ' → logprob: -21.00020408630371
    5. 'Other' → logprob: -21.00020408630371
    6. 'othe' → logprob: -22.25020408630371
    7. 'int' → logprob: -22.37520408630371
    8. '.other' → logprob: -22.37520408630371
    9. '           ' → logprob: -22.62520408630371
    10. '       ' → logprob: -22.62520408630371

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.228561349213123e-05
    2. ' )' → logprob: -10.625052452087402
    3. '))' → logprob: -11.125052452087402
    4. ')
' → logprob: -11.500052452087402
    5. ')))' → logprob: -14.125052452087402
    6. '<|end|>' → logprob: -14.125052452087402
    7. '       ' → logprob: -14.875052452087402
    8. '   ' → logprob: -15.250052452087402
    9. '}' → logprob: -15.500052452087402
    10. ')}' → logprob: -15.875052452087402

Token 294: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004595055361278355
    2. '       ' → logprob: -8.125459671020508
    3. ' )' → logprob: -9.125459671020508
    4. ')
' → logprob: -10.500459671020508
    5. '   ' → logprob: -11.375459671020508
    6. ')return' → logprob: -11.625459671020508
    7. '<|end|>' → logprob: -12.500459671020508
    8. '           ' → logprob: -14.625459671020508
    9. ' ' → logprob: -15.625459671020508
    10. '),' → logprob: -15.875459671020508

Token 295: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.93710636976175e-05
    2. '   ' → logprob: -10.125099182128906
    3. '       ' → logprob: -10.125099182128906
    4. ' )' → logprob: -11.000099182128906
    5. ')

' (adapté à ' )

') → logprob: -14.125099182128906
    6. ')
' → logprob: -14.250099182128906
    7. ')return' → logprob: -14.750099182128906
    8. ' ' → logprob: -14.875099182128906
    9. '  ' → logprob: -16.500099182128906
    10. '	' → logprob: -17.250099182128906

Token 296: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 298: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003710411721840501
    2. ' __' → logprob: -6.0037102699279785
    3. '_add' → logprob: -6.7537102699279785
    4. 'r' → logprob: -10.378710746765137
    5. 'add' → logprob: -10.753710746765137
    6. '_sub' → logprob: -12.003710746765137
    7. '_r' → logprob: -12.253710746765137
    8. 'sub' → logprob: -12.628710746765137
    9. 'def' → logprob: -14.878710746765137
    10. '.__' → logprob: -15.128710746765137

Token 299: 'sub' (ID: 3834)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02979700267314911
    2. 'sub' → logprob: -3.529797077178955
    3. 'add' → logprob: -10.154796600341797
    4. 'mul' → logprob: -12.029796600341797
    5. 'i' → logprob: -13.904796600341797
    6. 'pow' → logprob: -15.529796600341797
    7. 'rm' → logprob: -15.654796600341797
    8. 'neg' → logprob: -16.279796600341797
    9. 'eq' → logprob: -16.404796600341797
    10. 'pos' → logprob: -17.154796600341797

Token 300: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00011415231710998341
    2. '__' → logprob: -9.125114440917969
    3. '__(
' → logprob: -13.125114440917969
    4. '__((' → logprob: -13.500114440917969
    5. '(self' → logprob: -13.750114440917969
    6. '__('' → logprob: -15.375114440917969
    7. '(' → logprob: -15.375114440917969
    8. '_(' → logprob: -15.750114440917969
    9. '__[' → logprob: -17.12511444091797
    10. '__(*' → logprob: -17.12511444091797

Token 301: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0445127372804563e-05
    2. '(self' → logprob: -11.87501049041748
    3. ' self' → logprob: -12.87501049041748
    4. 'other' → logprob: -14.62501049041748
    5. '   ' → logprob: -14.87501049041748
    6. '       ' → logprob: -18.375009536743164
    7. 'def' → logprob: -18.750009536743164
    8. '	self' → logprob: -19.250009536743164
    9. '[self' → logprob: -19.500009536743164
    10. '[' → logprob: -20.000009536743164

Token 302: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010466042906045914
    2. ',' → logprob: -5.0104660987854
    3. '(' → logprob: -5.6354660987854
    4. '__(' → logprob: -9.260465621948242
    5. ' (' → logprob: -10.385465621948242
    6. 'self' → logprob: -10.385465621948242
    7. '       ' → logprob: -12.635465621948242
    8. ')(' → logprob: -12.885465621948242
    9. ',self' → logprob: -12.885465621948242
    10. '(
' → logprob: -13.010465621948242

Token 303: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.01471574418246746
    2. ' other' → logprob: -4.264715671539307
    3. 'self' → logprob: -7.514715671539307
    4. 'Other' → logprob: -12.139716148376465
    5. '(other' → logprob: -13.639716148376465
    6. ' self' → logprob: -15.014716148376465
    7. '_other' → logprob: -15.014716148376465
    8. '.other' → logprob: -17.26471519470215
    9. 'def' → logprob: -18.63971519470215
    10. 'OTHER' → logprob: -19.13971519470215

Token 304: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26067787408828735
    2. ':' → logprob: -2.6356778144836426
    3. ',' → logprob: -3.0106778144836426
    4. '       ' → logprob: -3.1356778144836426
    5. '):
' → logprob: -3.6356778144836426
    6. '(self' → logprob: -3.8856778144836426
    7. '   ' → logprob: -5.385677814483643
    8. ')' → logprob: -5.510677814483643
    9. 'self' → logprob: -5.510677814483643
    10. '(' → logprob: -5.885677814483643

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3413762152194977
    2. '(
' → logprob: -2.091376304626465
    3. '(' → logprob: -2.216376304626465
    4. '<|end|>' → logprob: -3.216376304626465
    5. ' (' → logprob: -5.341376304626465
    6. '   ' → logprob: -5.591376304626465
    7. ' (
' → logprob: -5.716376304626465
    8. ' ' → logprob: -6.466376304626465
    9. ':' → logprob: -7.466376304626465
    10. '<|end|>' → logprob: -8.216376304626465

Token 306: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03609761968255043
    2. '(
' → logprob: -3.661097526550293
    3. '(' → logprob: -5.036097526550293
    4. '   ' → logprob: -6.036097526550293
    5. 'def' → logprob: -8.661097526550293
    6. '{
' → logprob: -8.786097526550293
    7. '[
' → logprob: -9.286097526550293
    8. 'return' → logprob: -9.661097526550293
    9. '<|end|>' → logprob: -9.786097526550293
    10. '```' → logprob: -10.036097526550293

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.6100132496794686e-05
    2. 'return' → logprob: -10.875056266784668
    3. '   ' → logprob: -11.000056266784668
    4. 'def' → logprob: -11.750056266784668
    5. ' return' → logprob: -12.125056266784668
    6. 'self' → logprob: -13.000056266784668
    7. '           ' → logprob: -13.375056266784668
    8. '```' → logprob: -14.500056266784668
    9. '(' → logprob: -15.000056266784668
    10. '        ' → logprob: -15.125056266784668

Token 308: ' S' (ID: 336)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3983440101146698
    2. 'return' → logprob: -1.1483440399169922
    3. '   ' → logprob: -5.148344039916992
    4. ' return' → logprob: -5.398344039916992
    5. 'def' → logprob: -6.898344039916992
    6. '
' → logprob: -10.398344039916992
    7. 'Return' → logprob: -11.398344039916992
    8. '	return' → logprob: -11.773344039916992
    9. '```' → logprob: -12.023344039916992
    10. '           ' → logprob: -13.273344039916992

Token 309: 'urcharge' (ID: 162326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17840613424777985
    2. '       ' → logprob: -2.553406238555908
    3. 'return' → logprob: -3.678406238555908
    4. '=' → logprob: -4.428406238555908
    5. 'ub' → logprob: -4.803406238555908
    6. 'def' → logprob: -5.303406238555908
    7. ',' → logprob: -5.428406238555908
    8. ')' → logprob: -5.428406238555908
    9. '(
' → logprob: -5.678406238555908
    10. '_' → logprob: -5.678406238555908

Token 310: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1147914007306099
    2. '(
' → logprob: -2.7397913932800293
    3. '   ' → logprob: -3.8647913932800293
    4. ' de' → logprob: -4.864791393280029
    5. '       ' → logprob: -5.114791393280029
    6. '(self' → logprob: -5.739791393280029
    7. ' (' → logprob: -6.239791393280029
    8. ' of' → logprob: -6.739791393280029
    9. ')' → logprob: -7.989791393280029
    10. 'de' → logprob: -7.989791393280029

Token 311: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08006414026021957
    2. '(self' → logprob: -2.580064058303833
    3. 'def' → logprob: -7.080064296722412
    4. '(' → logprob: -8.330063819885254
    5. ' self' → logprob: -9.580063819885254
    6. '(
' → logprob: -11.455063819885254
    7. '   ' → logprob: -12.455063819885254
    8. '__' → logprob: -13.330063819885254
    9. 's' → logprob: -13.580063819885254
    10. 'the' → logprob: -13.830063819885254

Token 312: ''op' (ID: 70747)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.7873111367225647
    2. '(' → logprob: -1.53731107711792
    3. 'def' → logprob: -1.78731107711792
    4. '+' → logprob: -3.16231107711792
    5. 'operator' → logprob: -3.91231107711792
    6. '.operator' → logprob: -4.03731107711792
    7. '__' → logprob: -4.16231107711792
    8. '   ' → logprob: -4.53731107711792
    9. '(operator' → logprob: -4.91231107711792
    10. ',' → logprob: -5.03731107711792

Token 313: 'érateur' (ID: 108528)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -1.8969621658325195
    2. '_other' → logprob: -1.8969621658325195
    3. '__' → logprob: -2.0219621658325195
    4. ')' → logprob: -2.2719621658325195
    5. 'def' → logprob: -2.3969621658325195
    6. '(other' → logprob: -2.6469621658325195
    7. '```' → logprob: -3.2719621658325195
    8. '_sub' → logprob: -3.2719621658325195
    9. 'er' → logprob: -3.3969621658325195
    10. 'sub' → logprob: -3.5219621658325195

Token 314: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1485321968793869
    2. '-' → logprob: -2.0235321521759033
    3. ' +' → logprob: -6.148532390594482
    4. '+' → logprob: -6.398532390594482
    5. ' -
' → logprob: -6.648532390594482
    6. ' (' → logprob: -8.648531913757324
    7. '(' → logprob: -8.773531913757324
    8. ' ' → logprob: -9.273531913757324
    9. '-
' → logprob: -9.523531913757324
    10. '_' → logprob: -9.648531913757324

Token 315: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2297135442495346
    2. '(' → logprob: -2.2297134399414062
    3. ')' → logprob: -3.7297134399414062
    4. ',' → logprob: -3.9797134399414062
    5. '<|end|>' → logprob: -4.229713439941406
    6. '   ' → logprob: -4.604713439941406
    7. ':' → logprob: -4.729713439941406
    8. '.' → logprob: -5.229713439941406
    9. '(
' → logprob: -5.729713439941406
    10. ' (' → logprob: -5.729713439941406

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25610247254371643
    2. '   ' → logprob: -2.3811025619506836
    3. '<|end|>' → logprob: -2.7561025619506836
    4. ' ' → logprob: -3.7561025619506836
    5. ')' → logprob: -4.006102561950684
    6. ' 
' → logprob: -4.881102561950684
    7. '(' → logprob: -5.381102561950684
    8. '    ' → logprob: -6.006102561950684
    9. ':' → logprob: -6.006102561950684
    10. ',' → logprob: -6.256102561950684

Token 317: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007311395602300763
    2. '   ' → logprob: -8.500731468200684
    3. '<|end|>' → logprob: -8.750731468200684
    4. ')' → logprob: -9.000731468200684
    5. 'return' → logprob: -9.125731468200684
    6. ' return' → logprob: -9.250731468200684
    7. '<|end|>' → logprob: -12.250731468200684
    8. '           ' → logprob: -12.375731468200684
    9. ':return' → logprob: -12.375731468200684
    10. '      ' → logprob: -12.750731468200684

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012538257986307144
    2. '   ' → logprob: -4.512538433074951
    3. 'return' → logprob: -7.512538433074951
    4. ' return' → logprob: -8.387537956237793
    5. ')' → logprob: -8.887537956237793
    6. '(' → logprob: -9.012537956237793
    7. '        ' → logprob: -9.137537956237793
    8. '           ' → logprob: -9.762537956237793
    9. '    ' → logprob: -9.887537956237793
    10. '<|end|>' → logprob: -9.887537956237793

Token 319: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0043509602546691895
    2. '       ' → logprob: -5.7543511390686035
    3. ' return' → logprob: -6.7543511390686035
    4. '   ' → logprob: -12.004350662231445
    5. '	return' → logprob: -14.379350662231445
    6. '```' → logprob: -17.379350662231445
    7. '           ' → logprob: -17.629350662231445
    8. 'def' → logprob: -18.129350662231445
    9. 'Return' → logprob: -18.254350662231445
    10. 'eturn' → logprob: -18.879350662231445

Token 320: ' (
' (ID: 4112)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.13369613885879517
    2. 'Mod' → logprob: -2.1336960792541504
    3. '(' → logprob: -5.00869607925415
    4. '(Mod' → logprob: -10.383696556091309
    5. '(
' → logprob: -11.133696556091309
    6. ' Mod' → logprob: -11.258696556091309
    7. ' (
' → logprob: -12.883696556091309
    8. 'self' → logprob: -13.633696556091309
    9. 'mod' → logprob: -13.883696556091309
    10. '(

' → logprob: -13.883696556091309

Token 321: '           ' (ID: 352)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.004086708649992943
    2. '           ' → logprob: -5.504086494445801
    3. ' Mod' → logprob: -12.0040864944458
    4. '       ' → logprob: -14.1290864944458
    5. 'mod' → logprob: -14.8790864944458
    6. '(Mod' → logprob: -14.8790864944458
    7. '   ' → logprob: -15.1290864944458
    8. '_mod' → logprob: -15.5040864944458
    9. 'Modulo' → logprob: -16.629087448120117
    10. 'MOD' → logprob: -16.879087448120117

Token 322: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -3.128163257315464e-07
    2. ' Mod' → logprob: -15.875
    3. '(Mod' → logprob: -16.75
    4. '           ' → logprob: -18.25
    5. 'MOD' → logprob: -19.75
    6. 'Modulo' → logprob: -20.0
    7. '_mod' → logprob: -20.25
    8. '       ' → logprob: -21.0
    9. 'mod' → logprob: -21.125
    10. '   ' → logprob: -21.625

Token 323: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -9.639096970204264e-05
    2. 'int' → logprob: -9.250096321105957
    3. ' Int' → logprob: -16.500097274780273
    4. 'Ints' → logprob: -17.125097274780273
    5. 'INT' → logprob: -17.375097274780273
    6. '	Int' → logprob: -17.750097274780273
    7. '_int' → logprob: -18.375097274780273
    8. 'In' → logprob: -19.000097274780273
    9. 'Integer' → logprob: -19.125097274780273
    10. '(Int' → logprob: -19.125097274780273

Token 324: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. 'self' → logprob: -16.875
    4. '(
' → logprob: -18.5
    5. '[self' → logprob: -19.125
    6. ' (' → logprob: -20.5
    7. ' self' → logprob: -21.125
    8. '((' → logprob: -21.125
    9. ',self' → logprob: -21.375
    10. '=self' → logprob: -22.25

Token 325: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.0445127372804563e-05
    2. 'x' → logprob: -12.12501049041748
    3. '.' → logprob: -12.25001049041748
    4. ' .' → logprob: -17.125009536743164
    5. '(x' → logprob: -17.500009536743164
    6. ').' → logprob: -18.000009536743164
    7. 'self' → logprob: -18.000009536743164
    8. '(' → logprob: -18.375009536743164
    9. '```' → logprob: -19.000009536743164
    10. ')' → logprob: -19.250009536743164

Token 326: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048594869673252106
    2. '-' → logprob: -3.0485949516296387
    3. '-self' → logprob: -12.42359447479248
    4. '-sub' → logprob: -12.67359447479248
    5. ' ' → logprob: -16.173595428466797
    6. ' ' → logprob: -16.923595428466797
    7. '[' → logprob: -17.048595428466797
    8. '-x' → logprob: -18.048595428466797
    9. '-s' → logprob: -18.298595428466797
    10. '-ex' → logprob: -18.298595428466797

Token 327: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.011379653587937355
    2. ' other' → logprob: -4.511379718780518
    3. '(other' → logprob: -8.01137924194336
    4. '.other' → logprob: -17.38637924194336
    5. 'Other' → logprob: -17.51137924194336
    6. ' (' → logprob: -17.63637924194336
    7. '_other' → logprob: -18.38637924194336
    8. '(' → logprob: -19.63637924194336
    9. '       ' → logprob: -19.63637924194336
    10. 'othe' → logprob: -20.38637924194336

Token 328: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.03130253776907921
    2. ' if' → logprob: -3.6563024520874023
    3. ')' → logprob: -5.906302452087402
    4. 'if' → logprob: -6.531302452087402
    5. 'x' → logprob: -7.406302452087402
    6. '<|end|>' → logprob: -8.656302452087402
    7. '<|end|>' → logprob: -11.906302452087402
    8. ')x' → logprob: -12.281302452087402
    9. ' ' → logprob: -12.531302452087402
    10. ' x' → logprob: -12.781302452087402

Token 329: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007142199319787323
    2. ' if' → logprob: -7.500714302062988
    3. '       ' → logprob: -8.875714302062988
    4. 'if' → logprob: -10.875714302062988
    5. '   ' → logprob: -13.750714302062988
    6. ' )' → logprob: -14.000714302062988
    7. '           ' → logprob: -15.250714302062988
    8. ')
' → logprob: -15.750714302062988
    9. '        ' → logprob: -16.875713348388672
    10. '}' → logprob: -17.375713348388672

Token 330: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06369538605213165
    2. 'if' → logprob: -2.8136954307556152
    3. ')' → logprob: -6.563695430755615
    4. '<|end|>' → logprob: -8.438694953918457
    5. '       ' → logprob: -9.313694953918457
    6. '        ' → logprob: -12.438694953918457
    7. '           ' → logprob: -13.688694953918457
    8. ' ' → logprob: -13.938694953918457
    9. '<|end|>' → logprob: -14.188694953918457
    10. 'If' → logprob: -14.563694953918457

Token 331: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.04859338700771332
    2. 'is' → logprob: -3.048593282699585
    3. '(is' → logprob: -12.048593521118164
    4. ' is' → logprob: -17.423593521118164
    5. ' hasattr' → logprob: -18.298593521118164
    6. '   ' → logprob: -18.423593521118164
    7. ' ' → logprob: -18.923593521118164
    8. 'instance' → logprob: -19.298593521118164
    9. 'Is' → logprob: -19.548593521118164
    10. '  ' → logprob: -19.673593521118164

Token 332: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.00020544764993246645
    2. 'other' → logprob: -8.500205039978027
    3. ' other' → logprob: -13.250205039978027
    4. 'Other' → logprob: -15.375205039978027
    5. '_other' → logprob: -20.000205993652344
    6. '.other' → logprob: -20.125205993652344
    7. 'OTHER' → logprob: -20.250205993652344
    8. '-other' → logprob: -23.625205993652344
    9. ' andere' → logprob: -23.875205993652344
    10. '<|end|>' → logprob: -23.875205993652344

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013969031861051917
    2. 'other' → logprob: -6.876397132873535
    3. ' other' → logprob: -8.626397132873535
    4. '(other' → logprob: -9.376397132873535
    5. ' ,' → logprob: -10.376397132873535
    6. ',
' → logprob: -10.876397132873535
    7. '.other' → logprob: -11.376397132873535
    8. ')' → logprob: -11.501397132873535
    9. 'else' → logprob: -12.001397132873535
    10. '<|end|>' → logprob: -12.126397132873535

Token 334: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -5.860340752406046e-05
    2. ' Mod' → logprob: -9.7500581741333
    3. '(Mod' → logprob: -15.5000581741333
    4. '_mod' → logprob: -18.625059127807617
    5. '   ' → logprob: -18.875059127807617
    6. 'mod' → logprob: -19.250059127807617
    7. 'Modulo' → logprob: -19.750059127807617
    8. 'Other' → logprob: -20.125059127807617
    9. '.Mod' → logprob: -20.125059127807617
    10. '_Mod' → logprob: -20.250059127807617

Token 335: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.572941179503687e-05
    2. 'int' → logprob: -10.000045776367188
    3. 'nt' → logprob: -15.875045776367188
    4. ' Int' → logprob: -17.125045776367188
    5. '	Int' → logprob: -17.250045776367188
    6. 'In' → logprob: -17.500045776367188
    7. '
' → logprob: -18.125045776367188
    8. '<Int' → logprob: -18.875045776367188
    9. 'Mod' → logprob: -18.875045776367188
    10. '(Int' → logprob: -19.000045776367188

Token 336: ')' (ID: 8)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.39095863699913025
    2. 'else' → logprob: -1.1409586668014526
    3. ')' → logprob: -5.515958786010742
    4. '       ' → logprob: -10.390958786010742
    5. '        ' → logprob: -10.890958786010742
    6. '           ' → logprob: -12.515958786010742
    7. '         ' → logprob: -13.515958786010742
    8. ' )' → logprob: -14.390958786010742
    9. '),' → logprob: -14.515958786010742
    10. '            ' → logprob: -14.515958786010742

Token 337: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04861552268266678
    2. ' else' → logprob: -3.0486154556274414
    3. '       ' → logprob: -11.048615455627441
    4. '        ' → logprob: -11.423615455627441
    5. '	else' → logprob: -14.673615455627441
    6. '           ' → logprob: -15.298615455627441
    7. '         ' → logprob: -15.423615455627441
    8. '            ' → logprob: -16.548616409301758
    9. '    ' → logprob: -16.548616409301758
    10. '          ' → logprob: -16.673616409301758

Token 338: '
' (ID: 198)
  Prédit: ' Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Mod' → logprob: -0.9247450828552246
    2. '           ' → logprob: -1.0497450828552246
    3. 'Mod' → logprob: -1.5497450828552246
    4. '       ' → logprob: -3.2997450828552246
    5. '(Mod' → logprob: -5.549745082855225
    6. '   ' → logprob: -9.299745559692383
    7. '               ' → logprob: -10.674745559692383
    8. '(' → logprob: -10.799745559692383
    9. '        ' → logprob: -11.049745559692383
    10. '
' → logprob: -11.049745559692383

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34654346108436584
    2. 'Mod' → logprob: -1.3465434312820435
    3. ' Mod' → logprob: -3.471543550491333
    4. '(Mod' → logprob: -6.596543312072754
    5. '       ' → logprob: -8.221543312072754
    6. '(' → logprob: -11.346543312072754
    7. '   ' → logprob: -12.346543312072754
    8. '               ' → logprob: -12.721543312072754
    9. '_mod' → logprob: -13.221543312072754
    10. '_Mod' → logprob: -13.471543312072754

Token 340: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.00011093381908722222
    2. '(Mod' → logprob: -9.500110626220703
    3. ' Mod' → logprob: -10.250110626220703
    4. '       ' → logprob: -15.250110626220703
    5. 'Modulo' → logprob: -15.375110626220703
    6. '           ' → logprob: -16.500110626220703
    7. 'MOD' → logprob: -16.625110626220703
    8. '_mod' → logprob: -17.375110626220703
    9. '_Mod' → logprob: -17.875110626220703
    10. 'self' → logprob: -18.500110626220703

Token 341: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.771655115589965e-05
    2. 'int' → logprob: -11.000018119812012
    3. '(Int' → logprob: -14.875018119812012
    4. ' Int' → logprob: -15.875018119812012
    5. '(int' → logprob: -16.375017166137695
    6. 'In' → logprob: -16.500017166137695
    7. '(self' → logprob: -16.875017166137695
    8. 'Ints' → logprob: -17.000017166137695
    9. 'It' → logprob: -17.125017166137695
    10. 'nt' → logprob: -17.125017166137695

Token 342: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.50001049041748
    3. ' (' → logprob: -14.50001049041748
    4. '(this' → logprob: -17.125011444091797
    5. 'self' → logprob: -17.750011444091797
    6. '(
' → logprob: -18.125011444091797
    7. '(s' → logprob: -18.500011444091797
    8. '[self' → logprob: -20.375011444091797
    9. ' self' → logprob: -21.125011444091797
    10. '("' → logprob: -21.375011444091797

Token 343: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.013484661467373371
    2. '.' → logprob: -4.388484477996826
    3. '-' → logprob: -7.888484477996826
    4. ' .' → logprob: -8.263484954833984
    5. ' -' → logprob: -9.138484954833984
    6. 'self' → logprob: -9.763484954833984
    7. 'x' → logprob: -9.763484954833984
    8. '(x' → logprob: -10.888484954833984
    9. '.self' → logprob: -11.263484954833984
    10. '       ' → logprob: -11.388484954833984

Token 344: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31327536702156067
    2. ' -' → logprob: -1.3132753372192383
    3. '-sub' → logprob: -11.313275337219238
    4. '-self' → logprob: -13.813275337219238
    5. '-other' → logprob: -15.188275337219238
    6. ' ' → logprob: -16.563276290893555
    7. '-code' → logprob: -18.063276290893555
    8. '-ex' → logprob: -18.313276290893555
    9. '-x' → logprob: -18.313276290893555
    10. '-s' → logprob: -18.438276290893555

Token 345: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0024756586644798517
    2. ' other' → logprob: -6.002475738525391
    3. '(other' → logprob: -18.50247573852539
    4. 'Other' → logprob: -20.87747573852539
    5. '           ' → logprob: -21.00247573852539
    6. '       ' → logprob: -21.00247573852539
    7. '.other' → logprob: -21.12747573852539
    8. '_other' → logprob: -22.00247573852539
    9. 'others' → logprob: -22.50247573852539
    10. ' ' → logprob: -23.12747573852539

Token 346: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1528107225894928
    2. 'other' → logprob: -2.27781081199646
    3. ' other' → logprob: -3.27781081199646
    4. '.other' → logprob: -6.652810573577881
    5. '_other' → logprob: -9.902811050415039
    6. '(other' → logprob: -10.027811050415039
    7. 'Other' → logprob: -10.527811050415039
    8. '))' → logprob: -11.277811050415039
    9. 'else' → logprob: -11.527811050415039
    10. ' )' → logprob: -12.152811050415039

Token 347: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.420598219847307e-05
    2. '<|end|>' → logprob: -10.5000638961792
    3. '       ' → logprob: -10.6250638961792
    4. '   ' → logprob: -11.8750638961792
    5. ')
' → logprob: -12.6250638961792
    6. ')return' → logprob: -14.1250638961792
    7. ' )' → logprob: -14.3750638961792
    8. '<|end|>' → logprob: -15.8750638961792
    9. '}' → logprob: -16.125064849853516
    10. ' ' → logprob: -16.500064849853516

Token 348: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.641841820150148e-05
    2. '   ' → logprob: -11.00002670288086
    3. '<|end|>' → logprob: -12.12502670288086
    4. '       ' → logprob: -13.25002670288086
    5. ')
' → logprob: -13.75002670288086
    6. ')return' → logprob: -14.12502670288086
    7. ' )' → logprob: -15.62502670288086
    8. ')

' (adapté à ' )

') → logprob: -15.87502670288086
    9. ')}' → logprob: -16.25002670288086
    10. '),' → logprob: -17.37502670288086

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05351706221699715
    2. ')' → logprob: -3.1785171031951904
    3. '_' → logprob: -5.428516864776611
    4. '<|end|>' → logprob: -5.678516864776611
    5. 'def' → logprob: -7.053516864776611
    6. '```' → logprob: -7.803516864776611
    7. '    ' → logprob: -8.55351734161377
    8. ' ' → logprob: -8.55351734161377
    9. ':' → logprob: -8.67851734161377
    10. '  ' → logprob: -9.05351734161377

Token 350: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2609453797340393
    2. '   ' → logprob: -1.5109453201293945
    3. ' def' → logprob: -5.0109453201293945
    4. ')' → logprob: -6.5109453201293945
    5. ' ' → logprob: -8.010945320129395
    6. '  ' → logprob: -9.135945320129395
    7. '```' → logprob: -9.510945320129395
    8. '[' → logprob: -9.885945320129395
    9. '	def' → logprob: -9.885945320129395
    10. ':' → logprob: -10.385945320129395

Token 351: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3133266270160675
    2. ' __' → logprob: -1.3133265972137451
    3. '_mul' → logprob: -9.813326835632324
    4. 'mul' → logprob: -12.438326835632324
    5. 'def' → logprob: -12.813326835632324
    6. ' def' → logprob: -13.188326835632324
    7. ' ' → logprob: -14.188326835632324
    8. ' mul' → logprob: -14.813326835632324
    9. '.__' → logprob: -15.688326835632324
    10. ' _' → logprob: -16.063325881958008

Token 352: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: 0.0
    2. '_mul' → logprob: -18.75
    3. ' mul' → logprob: -21.0
    4. 'pow' → logprob: -21.25
    5. 'mult' → logprob: -22.75
    6. '.mul' → logprob: -24.0
    7. 'mu' → logprob: -24.375
    8. 'multip' → logprob: -24.625
    9. 'mod' → logprob: -24.75
    10. 'Mul' → logprob: -25.0

Token 353: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0025342830922454596
    2. '__' → logprob: -6.00253438949585
    3. '(self' → logprob: -10.502533912658691
    4. '__(
' → logprob: -10.627533912658691
    5. '(' → logprob: -12.502533912658691
    6. '__((' → logprob: -13.252533912658691
    7. '__('' → logprob: -14.377533912658691
    8. '__(*' → logprob: -14.752533912658691
    9. '__[' → logprob: -15.752533912658691
    10. '__("' → logprob: -16.377534866333008

Token 354: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.310693111619912e-05
    2. ' self' → logprob: -10.500042915344238
    3. '(self' → logprob: -11.125042915344238
    4. '   ' → logprob: -14.625042915344238
    5. '       ' → logprob: -16.000043869018555
    6. '	self' → logprob: -16.625043869018555
    7. '
' → logprob: -16.750043869018555
    8. 'other' → logprob: -17.375043869018555
    9. 'def' → logprob: -17.625043869018555
    10. ' ' → logprob: -18.125043869018555

Token 355: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12736260890960693
    2. '__(' → logprob: -2.1273627281188965
    3. '(' → logprob: -8.377362251281738
    4. '__' → logprob: -9.252362251281738
    5. 'self' → logprob: -10.252362251281738
    6. ' (' → logprob: -10.377362251281738
    7. '_(' → logprob: -10.752362251281738
    8. ',' → logprob: -12.127362251281738
    9. '   ' → logprob: -12.127362251281738
    10. '__(
' → logprob: -12.252362251281738

Token 356: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.014185481704771519
    2. ' other' → logprob: -4.264185428619385
    3. 'self' → logprob: -10.889185905456543
    4. 'Other' → logprob: -13.139185905456543
    5. '(other' → logprob: -14.014185905456543
    6. '_other' → logprob: -14.639185905456543
    7. '.other' → logprob: -16.639184951782227
    8. ' self' → logprob: -16.889184951782227
    9. '<|end|>' → logprob: -17.764184951782227
    10. 'OTHER' → logprob: -19.139184951782227

Token 357: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.497000128030777
    2. '<|end|>' → logprob: -1.9970000982284546
    3. '):
' → logprob: -2.872000217437744
    4. ':' → logprob: -2.997000217437744
    5. '       ' → logprob: -3.122000217437744
    6. '(' → logprob: -3.497000217437744
    7. ',' → logprob: -3.497000217437744
    8. '   ' → logprob: -4.247000217437744
    9. '(self' → logprob: -4.872000217437744
    10. '<|end|>' → logprob: -4.997000217437744

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01806776225566864
    2. '(' → logprob: -4.768067836761475
    3. '(
' → logprob: -5.143067836761475
    4. ' (' → logprob: -6.518067836761475
    5. '   ' → logprob: -6.893067836761475
    6. '<|end|>' → logprob: -7.268067836761475
    7. ' (
' → logprob: -8.268067359924316
    8. '           ' → logprob: -10.768067359924316
    9. '        
' → logprob: -11.643067359924316
    10. '      ' → logprob: -11.768067359924316

Token 359: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47025439143180847
    2. '<|end|>' → logprob: -1.5952544212341309
    3. '(
' → logprob: -1.9702544212341309
    4. '(' → logprob: -3.970254421234131
    5. '   ' → logprob: -5.595254421234131
    6. ' (' → logprob: -5.970254421234131
    7. 'return' → logprob: -6.720254421234131
    8. ' ' → logprob: -7.220254421234131
    9. ' return' → logprob: -7.220254421234131
    10. '(self' → logprob: -7.345254421234131

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003550079127307981
    2. 'def' → logprob: -8.500354766845703
    3. 'return' → logprob: -9.875354766845703
    4. '(
' → logprob: -10.375354766845703
    5. '   ' → logprob: -10.625354766845703
    6. '<|end|>' → logprob: -10.625354766845703
    7. '(' → logprob: -12.375354766845703
    8. '[
' → logprob: -12.625354766845703
    9. '
' → logprob: -12.875354766845703
    10. '{
' → logprob: -13.250354766845703

Token 361: ' S' (ID: 336)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5811073780059814
    2. '       ' → logprob: -0.8311073780059814
    3. '   ' → logprob: -6.206107139587402
    4. ' return' → logprob: -6.581107139587402
    5. 'def' → logprob: -6.706107139587402
    6. 'Return' → logprob: -9.081107139587402
    7. '(
' → logprob: -9.206107139587402
    8. '"""
' → logprob: -9.456107139587402
    9. '	return' → logprob: -10.706107139587402
    10. '<|end|>' → logprob: -10.706107139587402

Token 362: 'urcharge' (ID: 162326)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09062761068344116
    2. '_mul' → logprob: -3.840627670288086
    3. '_' → logprob: -4.215627670288086
    4. 'def' → logprob: -4.340627670288086
    5. '(
' → logprob: -4.590627670288086
    6. '_return' → logprob: -5.215627670288086
    7. 'eturn' → logprob: -5.340627670288086
    8. ' return' → logprob: -5.465627670288086
    9. '(return' → logprob: -6.090627670288086
    10. ')' → logprob: -6.715627670288086

Token 363: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: ' l' (ID: 305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25883087515830994
    2. 'self' → logprob: -1.5088309049606323
    3. 'the' → logprob: -5.383831024169922
    4. ' self' → logprob: -6.633831024169922
    5. 'def' → logprob: -7.633831024169922
    6. '(' → logprob: -8.883831024169922
    7. ' the' → logprob: -9.383831024169922
    8. '<|end|>' → logprob: -9.508831024169922
    9. 'operator' → logprob: -10.008831024169922
    10. 'l' → logprob: -10.383831024169922

Token 365: ''op' (ID: 70747)
  Prédit: ''op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''op' → logprob: -0.6268344521522522
    2. '_operator' → logprob: -1.8768343925476074
    3. '*' → logprob: -2.5018343925476074
    4. '_op' → logprob: -2.6268343925476074
    5. '(operator' → logprob: -3.2518343925476074
    6. 'operator' → logprob: -3.7518343925476074
    7. ''*' → logprob: -3.7518343925476074
    8. '_mul' → logprob: -3.8768343925476074
    9. '(op' → logprob: -4.501834392547607
    10. 'op' → logprob: -5.001834392547607

Token 366: 'érateur' (ID: 108528)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6287485361099243
    2. 'er' → logprob: -1.1287485361099243
    3. '*' → logprob: -2.3787484169006348
    4. '```' → logprob: -3.8787484169006348
    5. '_mul' → logprob: -5.253748416900635
    6. '(' → logprob: -6.128748416900635
    7. '*)' → logprob: -6.128748416900635
    8. '().__' → logprob: -6.378748416900635
    9. '**' → logprob: -6.503748416900635
    10. '(op' → logprob: -6.628748416900635

Token 367: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8932658433914185
    2. ' +' → logprob: -1.3932658433914185
    3. '*' → logprob: -1.5182658433914185
    4. '+' → logprob: -2.268265724182129
    5. '<|end|>' → logprob: -4.518265724182129
    6. '(' → logprob: -5.518265724182129
    7. ' (' → logprob: -6.143265724182129
    8. ' ' → logprob: -7.768265724182129
    9. ' ' → logprob: -7.768265724182129
    10. '_' → logprob: -8.268265724182129

Token 368: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.60032719373703
    2. '(' → logprob: -1.4753272533416748
    3. '(
' → logprob: -1.9753272533416748
    4. '<|end|>' → logprob: -3.225327253341675
    5. ',' → logprob: -4.600327014923096
    6. '(self' → logprob: -4.850327014923096
    7. ')' → logprob: -4.975327014923096
    8. '   ' → logprob: -5.350327014923096
    9. '=' → logprob: -5.975327014923096
    10. '.' → logprob: -6.100327014923096

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05906954035162926
    2. '<|end|>' → logprob: -2.9340696334838867
    3. '   ' → logprob: -6.684069633483887
    4. ' ' → logprob: -6.809069633483887
    5. ')' → logprob: -7.559069633483887
    6. '        ' → logprob: -8.184069633483887
    7. ' 
' → logprob: -8.559069633483887
    8. '(' → logprob: -8.684069633483887
    9. '    ' → logprob: -8.809069633483887
    10. '        
' → logprob: -9.309069633483887

Token 370: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04480824992060661
    2. '<|end|>' → logprob: -3.4198081493377686
    3. 'return' → logprob: -5.294808387756348
    4. '   ' → logprob: -5.919808387756348
    5. ' return' → logprob: -6.294808387756348
    6. ' 
' → logprob: -8.044808387756348
    7. '<|end|>' → logprob: -8.169808387756348
    8. ')' → logprob: -8.669808387756348
    9. '        
' → logprob: -8.919808387756348
    10. '```' → logprob: -9.294808387756348

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0062160128727555275
    2. '(' → logprob: -5.256216049194336
    3. '(
' → logprob: -7.881216049194336
    4. 'return' → logprob: -8.131216049194336
    5. '   ' → logprob: -8.631216049194336
    6. ' return' → logprob: -10.131216049194336
    7. '           ' → logprob: -10.881216049194336
    8. ' (' → logprob: -11.131216049194336
    9. '<|end|>' → logprob: -11.256216049194336
    10. ' ' → logprob: -11.881216049194336

Token 372: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00525510311126709
    2. '       ' → logprob: -5.255255222320557
    3. ' return' → logprob: -10.880254745483398
    4. '   ' → logprob: -13.380254745483398
    5. 'if' → logprob: -14.505254745483398
    6. '	return' → logprob: -15.130254745483398
    7. '```' → logprob: -17.0052547454834
    8. '{return' → logprob: -17.1302547454834
    9. 'eturn' → logprob: -17.3802547454834
    10. '{
' → logprob: -17.7552547454834

Token 373: ' (
' (ID: 4112)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.0813327357172966
    2. 'Mod' → logprob: -2.9563326835632324
    3. ' (
' → logprob: -3.8313326835632324
    4. ' Mod' → logprob: -5.831332683563232
    5. '(Mod' → logprob: -7.456332683563232
    6. '(' → logprob: -7.706332683563232
    7. ' (' → logprob: -8.08133316040039
    8. '       ' → logprob: -9.45633316040039
    9. '           ' → logprob: -10.45633316040039
    10. '(
' → logprob: -10.95633316040039

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12799453735351562
    2. 'Mod' → logprob: -2.1279945373535156
    3. ' Mod' → logprob: -6.877994537353516
    4. 'mod' → logprob: -11.002994537353516
    5. '       ' → logprob: -11.627994537353516
    6. '   ' → logprob: -12.502994537353516
    7. '          ' → logprob: -12.877994537353516
    8. '(Mod' → logprob: -14.002994537353516
    9. '_mod' → logprob: -14.127994537353516
    10. ' ' → logprob: -14.502994537353516

Token 375: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -1.9361264946837764e-07
    2. ' Mod' → logprob: -16.25
    3. '(Mod' → logprob: -17.75
    4. '_mod' → logprob: -21.625
    5. 'MOD' → logprob: -21.625
    6. 'Modulo' → logprob: -22.375
    7. 'mod' → logprob: -23.25
    8. '.Mod' → logprob: -23.25
    9. '_Mod' → logprob: -23.25
    10. 'Mo' → logprob: -24.5

Token 376: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.0019306590547785163
    2. 'int' → logprob: -6.2519307136535645
    3. '_int' → logprob: -13.626930236816406
    4. 'Ints' → logprob: -15.376930236816406
    5. '_INT' → logprob: -16.376930236816406
    6. 'INT' → logprob: -16.501930236816406
    7. '	Int' → logprob: -16.501930236816406
    8. '<Int' → logprob: -16.626930236816406
    9. ' Int' → logprob: -16.751930236816406
    10. '-int' → logprob: -17.126930236816406

Token 377: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. 'self' → logprob: -17.0
    4. '(
' → logprob: -19.375
    5. ' (' → logprob: -20.5
    6. '[self' → logprob: -20.75
    7. ' self' → logprob: -22.375
    8. '   ' → logprob: -23.125
    9. '=self' → logprob: -23.25
    10. '*self' → logprob: -23.625

Token 378: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -4.096126576769166e-05
    2. '.' → logprob: -10.125041007995605
    3. 'x' → logprob: -14.375041007995605
    4. ' .' → logprob: -15.625041007995605
    5. ').' → logprob: -17.75004005432129
    6. 'self' → logprob: -18.00004005432129
    7. 'Multip' → logprob: -18.87504005432129
    8. '```' → logprob: -19.00004005432129
    9. 'Mul' → logprob: -19.25004005432129
    10. ' ' → logprob: -19.25004005432129

Token 379: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5759437680244446
    2. '*' → logprob: -0.8259437680244446
    3. ' ' → logprob: -12.950943946838379
    4. '*object' → logprob: -13.575943946838379
    5. ' ' → logprob: -14.825943946838379
    6. '*out' → logprob: -16.200942993164062
    7. '*self' → logprob: -16.450942993164062
    8. '**' → logprob: -16.700942993164062
    9. ')' → logprob: -17.200942993164062
    10. 'if' → logprob: -17.825942993164062

Token 380: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0055780792608857155
    2. ' other' → logprob: -5.50557804107666
    3. '(other' → logprob: -6.50557804107666
    4. ' (' → logprob: -13.13057804107666
    5. '.other' → logprob: -13.88057804107666
    6. 'Other' → logprob: -16.005578994750977
    7. '_other' → logprob: -16.380578994750977
    8. '(' → logprob: -16.505578994750977
    9. '<|end|>' → logprob: -17.255578994750977
    10. '   ' → logprob: -17.880578994750977

Token 381: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.259079363080673e-05
    2. 'x' → logprob: -11.750012397766113
    3. '<|end|>' → logprob: -12.500012397766113
    4. '.' → logprob: -14.750012397766113
    5. ')' → logprob: -15.250012397766113
    6. ' .' → logprob: -16.12501335144043
    7. '<|end|>' → logprob: -16.62501335144043
    8. ').' → logprob: -17.62501335144043
    9. ' ' → logprob: -17.87501335144043
    10. '[' → logprob: -18.25001335144043

Token 382: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6895233531831764e-05
    2. ' if' → logprob: -10.62502670288086
    3. ' )' → logprob: -13.37502670288086
    4. 'if' → logprob: -14.00002670288086
    5. '       ' → logprob: -16.75002670288086
    6. '   ' → logprob: -17.12502670288086
    7. ')
' → logprob: -17.37502670288086
    8. '}' → logprob: -18.50002670288086
    9. ']' → logprob: -18.87502670288086
    10. '<|end|>' → logprob: -19.00002670288086

Token 383: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.018828459084033966
    2. 'if' → logprob: -4.018828392028809
    3. ')' → logprob: -7.393828392028809
    4. '<|end|>' → logprob: -9.768828392028809
    5. '       ' → logprob: -12.393828392028809
    6. '<|end|>' → logprob: -14.768828392028809
    7. '           ' → logprob: -15.018828392028809
    8. 'If' → logprob: -15.018828392028809
    9. ' )' → logprob: -15.143828392028809
    10. '	if' → logprob: -15.643828392028809

Token 384: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.06197989732027054
    2. 'is' → logprob: -2.8119800090789795
    3. '(is' → logprob: -11.311980247497559
    4. ' is' → logprob: -16.936979293823242
    5. 'instance' → logprob: -17.811979293823242
    6. ' instanceof' → logprob: -18.811979293823242
    7. ' hasattr' → logprob: -18.936979293823242
    8. ' ' → logprob: -19.811979293823242
    9. '.is' → logprob: -19.936979293823242
    10. 'Is' → logprob: -20.186979293823242

Token 385: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.04864504933357239
    2. 'other' → logprob: -3.04864501953125
    3. ' other' → logprob: -9.79864501953125
    4. 'Other' → logprob: -13.04864501953125
    5. '.other' → logprob: -16.92364501953125
    6. '_other' → logprob: -17.29864501953125
    7. 'OTHER' → logprob: -17.92364501953125
    8. '<|end|>' → logprob: -18.79864501953125
    9. '其他' → logprob: -19.54864501953125
    10. '(' → logprob: -19.54864501953125

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ' ,' → logprob: -14.250000953674316
    3. ',
' → logprob: -16.25
    4. '<|end|>' → logprob: -16.625
    5. 'other' → logprob: -17.875
    6. '   ' → logprob: -17.875
    7. '(Mod' → logprob: -18.25
    8. 'Mod' → logprob: -18.5
    9. '(' → logprob: -18.5
    10. ',int' → logprob: -18.75

Token 387: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.011058199219405651
    2. ' Mod' → logprob: -4.511058330535889
    3. '(Mod' → logprob: -11.76105785369873
    4. 'Other' → logprob: -13.76105785369873
    5. 'other' → logprob: -14.63605785369873
    6. ' other' → logprob: -15.13605785369873
    7. ' ' → logprob: -15.51105785369873
    8. '.Mod' → logprob: -15.63605785369873
    9. '_Mod' → logprob: -16.011058807373047
    10. '_mod' → logprob: -16.136058807373047

Token 388: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.688212614681106e-05
    2. 'int' → logprob: -11.000017166137695
    3. 'In' → logprob: -17.625017166137695
    4. 'Mod' → logprob: -17.750017166137695
    5. ' Int' → logprob: -17.875017166137695
    6. '	Int' → logprob: -18.250017166137695
    7. '
' → logprob: -18.500017166137695
    8. 'Ints' → logprob: -18.625017166137695
    9. 'It' → logprob: -19.000017166137695
    10. '(Int' → logprob: -19.000017166137695

Token 389: ')' (ID: 8)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.46515539288520813
    2. 'else' → logprob: -1.0901553630828857
    3. ')' → logprob: -3.3401553630828857
    4. '       ' → logprob: -8.590155601501465
    5. '        ' → logprob: -8.840155601501465
    6. '<|end|>' → logprob: -11.465155601501465
    7. '           ' → logprob: -11.715155601501465
    8. '),' → logprob: -12.590155601501465
    9. '	else' → logprob: -12.965155601501465
    10. ' )' → logprob: -13.090155601501465

Token 390: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.11289140582084656
    2. 'else' → logprob: -2.237891435623169
    3. '        ' → logprob: -10.23789119720459
    4. '<|end|>' → logprob: -10.98789119720459
    5. '       ' → logprob: -11.61289119720459
    6. '	else' → logprob: -12.98789119720459
    7. ')' → logprob: -13.73789119720459
    8. '           ' → logprob: -13.86289119720459
    9. '         ' → logprob: -14.11289119720459
    10. '          ' → logprob: -14.86289119720459

Token 391: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2525601089000702
    2. ' Mod' → logprob: -1.7525601387023926
    3. 'Mod' → logprob: -3.0025601387023926
    4. '
' → logprob: -9.627559661865234
    5. '(Mod' → logprob: -9.627559661865234
    6. '            ' → logprob: -10.252559661865234
    7. '               ' → logprob: -11.752559661865234
    8. ' ' → logprob: -11.752559661865234
    9. '          ' → logprob: -12.252559661865234
    10. '       ' → logprob: -12.502559661865234

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7259254455566406
    2. 'Mod' → logprob: -0.9759254455566406
    3. ' Mod' → logprob: -1.9759254455566406
    4. '(Mod' → logprob: -7.350925445556641
    5. ' ' → logprob: -13.85092544555664
    6. '          ' → logprob: -13.97592544555664
    7. '_Mod' → logprob: -14.60092544555664
    8. '            ' → logprob: -14.72592544555664
    9. '               ' → logprob: -15.10092544555664
    10. '       ' → logprob: -15.22592544555664

Token 393: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.00033581978641450405
    2. ' Mod' → logprob: -8.000335693359375
    3. '(Mod' → logprob: -14.875335693359375
    4. 'Mo' → logprob: -17.625335693359375
    5. '           ' → logprob: -18.250335693359375
    6. '_Mod' → logprob: -19.250335693359375
    7. 'MOD' → logprob: -19.875335693359375
    8. '_mod' → logprob: -20.125335693359375
    9. '.Mod' → logprob: -20.750335693359375
    10. 'Modulo' → logprob: -20.750335693359375

Token 394: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.3856492842023727e-06
    2. 'int' → logprob: -13.625000953674316
    3. ' Int' → logprob: -17.000001907348633
    4. 'nt' → logprob: -17.250001907348633
    5. '(Int' → logprob: -17.250001907348633
    6. '_int' → logprob: -18.125001907348633
    7. 'Ints' → logprob: -18.125001907348633
    8. '	Int' → logprob: -18.250001907348633
    9. 'I' → logprob: -19.375001907348633
    10. 'Mod' → logprob: -19.500001907348633

Token 395: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002622894535306841
    2. '(' → logprob: -8.250262260437012
    3. ' (' → logprob: -13.875262260437012
    4. 'self' → logprob: -16.375263214111328
    5. '(
' → logprob: -17.500263214111328
    6. '(s' → logprob: -18.625263214111328
    7. ' self' → logprob: -20.375263214111328
    8. '(sel' → logprob: -20.625263214111328
    9. '(int' → logprob: -21.500263214111328
    10. '(this' → logprob: -21.750263214111328

Token 396: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0005587508203461766
    2. '.' → logprob: -7.500558853149414
    3. ' .' → logprob: -12.500558853149414
    4. 'x' → logprob: -13.625558853149414
    5. ')' → logprob: -15.750558853149414
    6. '*' → logprob: -15.875558853149414
    7. '```' → logprob: -16.000558853149414
    8. ').' → logprob: -16.125558853149414
    9. ' ' → logprob: -16.250558853149414
    10. 'self' → logprob: -17.625558853149414

Token 397: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47407835721969604
    2. '*' → logprob: -0.974078357219696
    3. ' ' → logprob: -13.849078178405762
    4. ' ' → logprob: -15.099078178405762
    5. '*object' → logprob: -16.599079132080078
    6. '**' → logprob: -18.224079132080078
    7. ')' → logprob: -18.974079132080078
    8. '*
' → logprob: -19.224079132080078
    9. '*self' → logprob: -19.224079132080078
    10. '*out' → logprob: -19.224079132080078

Token 398: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.20141343772411346
    2. ' other' → logprob: -1.7014133930206299
    3. '(other' → logprob: -16.701414108276367
    4. 'Other' → logprob: -17.701414108276367
    5. '其他' → logprob: -19.201414108276367
    6. '.other' → logprob: -19.201414108276367
    7. '_other' → logprob: -19.701414108276367
    8. ' ' → logprob: -19.701414108276367
    9. '   ' → logprob: -19.951414108276367
    10. 'OTHER' → logprob: -21.326414108276367

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022535098833031952
    2. 'other' → logprob: -9.125225067138672
    3. ')
' → logprob: -9.875225067138672
    4. ' other' → logprob: -10.250225067138672
    5. '<|end|>' → logprob: -11.000225067138672
    6. '(other' → logprob: -12.625225067138672
    7. '.other' → logprob: -12.750225067138672
    8. '_other' → logprob: -12.750225067138672
    9. 'Other' → logprob: -13.375225067138672
    10. '))' → logprob: -14.750225067138672

Token 400: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006662101950496435
    2. '       ' → logprob: -7.37566614151001
    3. '<|end|>' → logprob: -10.500666618347168
    4. '   ' → logprob: -12.250666618347168
    5. ')return' → logprob: -12.750666618347168
    6. ' )' → logprob: -12.875666618347168
    7. ')
' → logprob: -14.250666618347168
    8. '<|end|>' → logprob: -15.375666618347168
    9. '),' → logprob: -16.00066566467285
    10. ' ' → logprob: -16.00066566467285

Token 401: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012673391960561275
    2. '<|end|>' → logprob: -4.387673377990723
    3. '   ' → logprob: -9.262673377990723
    4. '<|end|>' → logprob: -11.012673377990723
    5. ' )' → logprob: -11.137673377990723
    6. ')return' → logprob: -11.262673377990723
    7. '       ' → logprob: -11.637673377990723
    8. '```' → logprob: -11.887673377990723
    9. '}' → logprob: -12.512673377990723
    10. ')
' → logprob: -14.387673377990723

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10840164870023727
    2. ')' → logprob: -3.3584015369415283
    3. '<|end|>' → logprob: -3.7334015369415283
    4. 'def' → logprob: -4.233401775360107
    5. ' ' → logprob: -4.733401775360107
    6. ' def' → logprob: -5.108401775360107
    7. '\' → logprob: -5.608401775360107
    8. '_' → logprob: -5.858401775360107
    9. ':' → logprob: -6.108401775360107
    10. '```' → logprob: -6.858401775360107

Token 403: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03835587948560715
    2. 'def' (adapté à ' def') → logprob: -3.788355827331543
    3. ' def' → logprob: -4.663355827331543
    4. ' ' → logprob: -5.288355827331543
    5. '  ' → logprob: -8.413355827331543
    6. '```' → logprob: -8.663355827331543
    7. '_' → logprob: -10.413355827331543
    8. '	def' → logprob: -11.038355827331543
    9. '    ' → logprob: -11.038355827331543
    10. ')' → logprob: -11.288355827331543

Token 404: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0182020366191864
    2. 'def' → logprob: -4.01820182800293
    3. ' def' → logprob: -10.89320182800293
    4. 'pow' → logprob: -10.89320182800293
    5. ' __' → logprob: -11.14320182800293
    6. '```' → logprob: -15.26820182800293
    7. '_pow' → logprob: -15.76820182800293
    8. 'tr' → logprob: -16.39320182800293
    9. '.__' → logprob: -17.01820182800293
    10. '**' → logprob: -17.51820182800293

Token 405: 'tr' (ID: 371)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.25199276208877563
    2. 'tr' → logprob: -1.5019927024841309
    3. 'flo' → logprob: -9.751993179321289
    4. 'r' → logprob: -12.251993179321289
    5. 'rm' → logprob: -14.626993179321289
    6. 'Pow' → logprob: -16.75199317932129
    7. ' tr' → logprob: -17.25199317932129
    8. 'mod' → logprob: -17.37699317932129
    9. 'power' → logprob: -17.62699317932129
    10. '```' → logprob: -17.87699317932129

Token 406: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.0002790935104712844
    2. '__' → logprob: -9.125279426574707
    3. 'ed' → logprob: -9.750279426574707
    4. 'u' → logprob: -10.000279426574707
    5. 'ue' → logprob: -10.000279426574707
    6. '```' → logprob: -11.625279426574707
    7. 'ud' → logprob: -12.375279426574707
    8. '   ' → logprob: -12.625279426574707
    9. '
' → logprob: -13.500279426574707
    10. 'e' → logprob: -14.750279426574707

Token 407: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.011513781733810902
    2. '__' → logprob: -4.636513710021973
    3. '/' → logprob: -6.886513710021973
    4. 'v' → logprob: -7.386513710021973
    5. 'div' → logprob: -9.636513710021973
    6. '/__' → logprob: -10.761513710021973
    7. '__/' → logprob: -11.511513710021973
    8. '_div' → logprob: -12.136513710021973
    9. '```' → logprob: -12.636513710021973
    10. 'IV' → logprob: -13.511513710021973

Token 408: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.018160121515393257
    2. '__' → logprob: -4.018160343170166
    3. '__((' → logprob: -12.518159866333008
    4. '__(
' → logprob: -12.893159866333008
    5. '__('' → logprob: -13.143159866333008
    6. '__(*' → logprob: -13.518159866333008
    7. '__[' → logprob: -14.768159866333008
    8. '__("' → logprob: -15.768159866333008
    9. '(self' → logprob: -16.018159866333008
    10. '(' → logprob: -17.018159866333008

Token 409: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.4849443838757e-06
    2. ' self' → logprob: -13.000004768371582
    3. '(self' → logprob: -13.750004768371582
    4. '   ' → logprob: -14.125004768371582
    5. '       ' → logprob: -16.125003814697266
    6. 'def' → logprob: -16.750003814697266
    7. 'other' → logprob: -16.875003814697266
    8. '
' → logprob: -17.750003814697266
    9. ' ' → logprob: -18.625003814697266
    10. '	self' → logprob: -19.125003814697266

Token 410: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2847604751586914
    2. '__(' → logprob: -1.7847604751586914
    3. 'self' → logprob: -3.0347604751586914
    4. '__' → logprob: -3.7847604751586914
    5. '(' → logprob: -5.159760475158691
    6. ',' → logprob: -6.159760475158691
    7. 'def' → logprob: -8.284760475158691
    8. '__(
' → logprob: -8.534760475158691
    9. ')' → logprob: -8.659760475158691
    10. '   ' → logprob: -9.034760475158691

Token 411: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.1270175725221634
    2. ' other' → logprob: -2.1270174980163574
    3. 'self' → logprob: -9.502017974853516
    4. 'Other' → logprob: -11.627017974853516
    5. '(other' → logprob: -12.502017974853516
    6. '_other' → logprob: -13.377017974853516
    7. ' self' → logprob: -14.752017974853516
    8. '.other' → logprob: -16.127017974853516
    9. '<|end|>' → logprob: -17.002017974853516
    10. 'def' → logprob: -17.502017974853516

Token 412: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03678625449538231
    2. '):
' → logprob: -3.4117863178253174
    3. '       ' → logprob: -7.161786079406738
    4. ',' → logprob: -7.286786079406738
    5. '   ' → logprob: -7.286786079406738
    6. ':' → logprob: -7.911786079406738
    7. '(self' → logprob: -8.911786079406738
    8. ')' → logprob: -9.161786079406738
    9. '<|end|>' → logprob: -9.661786079406738
    10. 'self' → logprob: -9.911786079406738

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012327632866799831
    2. '(' → logprob: -5.137327671051025
    3. '(
' → logprob: -6.262327671051025
    4. '   ' → logprob: -6.637327671051025
    5. ':' → logprob: -7.012327671051025
    6. '<|end|>' → logprob: -7.137327671051025
    7. ')' → logprob: -8.137327194213867
    8. '(self' → logprob: -8.762327194213867
    9. 'def' → logprob: -9.012327194213867
    10. ':
' → logprob: -9.387327194213867

Token 414: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05805467069149017
    2. 'def' → logprob: -3.5580546855926514
    3. 'if' → logprob: -4.558054447174072
    4. 'return' → logprob: -5.058054447174072
    5. '(' → logprob: -5.433054447174072
    6. '   ' → logprob: -5.933054447174072
    7. '(
' → logprob: -6.308054447174072
    8. ' if' → logprob: -7.808054447174072
    9. '<|end|>' → logprob: -8.18305492401123
    10. '#' → logprob: -8.30805492401123

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4777176082134247
    2. 'def' → logprob: -0.9777176380157471
    3. '   ' → logprob: -5.727717399597168
    4. 'if' → logprob: -8.852717399597168
    5. '"""
' → logprob: -9.352717399597168
    6. ' def' → logprob: -9.477717399597168
    7. 'self' → logprob: -9.977717399597168
    8. '```' → logprob: -11.727717399597168
    9. '"""' → logprob: -12.602717399597168
    10. 'Def' → logprob: -12.977717399597168

Token 416: ' S' (ID: 336)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6911298632621765
    2. 'return' → logprob: -1.1911299228668213
    3. 'if' → logprob: -1.6911299228668213
    4. 'inv' → logprob: -4.941129684448242
    5. 'inverse' → logprob: -6.566129684448242
    6. '   ' → logprob: -7.191129684448242
    7. '       ' → logprob: -7.441129684448242
    8. 'other' → logprob: -9.066129684448242
    9. '```' → logprob: -9.191129684448242
    10. 'pow' → logprob: -9.191129684448242

Token 417: 'urcharge' (ID: 162326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11782784014940262
    2. 'elf' → logprob: -3.492827892303467
    3. 'eturn' → logprob: -3.492827892303467
    4. ' def' → logprob: -3.492827892303467
    5. '   ' → logprob: -5.242827892303467
    6. '"""
' → logprob: -5.742827892303467
    7. 'return' → logprob: -5.867827892303467
    8. 'ef' → logprob: -6.117827892303467
    9. 'x' → logprob: -7.367827892303467
    10. '       ' → logprob: -7.742827892303467

Token 418: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008363034576177597
    2. '(' → logprob: -5.633363246917725
    3. '   ' → logprob: -6.133363246917725
    4. '<|end|>' → logprob: -7.008363246917725
    5. '(self' → logprob: -7.508363246917725
    6. ' def' → logprob: -8.133362770080566
    7. 'de' → logprob: -8.258362770080566
    8. '(
' → logprob: -8.258362770080566
    9. ')' → logprob: -9.008362770080566
    10. 'self' → logprob: -9.758362770080566

Token 419: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2565597593784332
    2. '(self' → logprob: -1.5065597295761108
    3. 'def' → logprob: -5.5065598487854
    4. ' self' → logprob: -7.8815598487854
    5. 'other' → logprob: -9.756559371948242
    6. 'the' → logprob: -10.381559371948242
    7. '(
' → logprob: -10.631559371948242
    8. '```' → logprob: -11.131559371948242
    9. 'operator' → logprob: -11.256559371948242
    10. '(' → logprob: -11.256559371948242

Token 420: ''op' (ID: 70747)
  Prédit: '_op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.7329772710800171
    2. 'operator' → logprob: -1.232977271080017
    3. '_operator' → logprob: -2.9829773902893066
    4. 'op' → logprob: -2.9829773902893066
    5. '__' → logprob: -3.7329773902893066
    6. '_mod' → logprob: -3.8579773902893066
    7. '_other' → logprob: -4.357977390289307
    8. '_mul' → logprob: -4.607977390289307
    9. ' opér' → logprob: -4.732977390289307
    10. '_div' → logprob: -5.482977390289307

Token 421: 'érateur' (ID: 108528)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.07307266443967819
    2. 'tr' → logprob: -2.948072671890259
    3. 'er' → logprob: -5.07307243347168
    4. 'div' → logprob: -5.32307243347168
    5. '__' → logprob: -6.32307243347168
    6. '_pow' → logprob: -6.44807243347168
    7. 'mod' → logprob: -7.44807243347168
    8. 'def' → logprob: -7.69807243347168
    9. '```' → logprob: -7.69807243347168
    10. 'or' → logprob: -7.69807243347168

Token 422: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.019447119906544685
    2. '*' → logprob: -4.519447326660156
    3. '(self' → logprob: -5.644447326660156
    4. '(' → logprob: -5.894447326660156
    5. ' /' → logprob: -6.644447326660156
    6. ' (' → logprob: -9.144447326660156
    7. '__' → logprob: -9.144447326660156
    8. 'self' → logprob: -9.269447326660156
    9. '**' → logprob: -9.644447326660156
    10. ')' → logprob: -9.644447326660156

Token 423: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8450519442558289
    2. '(' → logprob: -1.5950520038604736
    3. '   ' → logprob: -1.5950520038604736
    4. '       ' → logprob: -2.7200520038604736
    5. ',' → logprob: -3.4700520038604736
    6. '(
' → logprob: -3.5950520038604736
    7. '<|end|>' → logprob: -3.9700520038604736
    8. 'def' → logprob: -5.4700517654418945
    9. ' (' → logprob: -6.0950517654418945
    10. ')(
' → logprob: -6.3450517654418945

Token 424: ' la' (ID: 557)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3495939075946808
    2. 'div' → logprob: -1.3495938777923584
    3. 'division' → logprob: -3.8495938777923584
    4. 'Div' → logprob: -5.7245941162109375
    5. ' division' → logprob: -5.7245941162109375
    6. ' self' → logprob: -5.9745941162109375
    7. ' div' → logprob: -6.2245941162109375
    8. 'def' → logprob: -7.2245941162109375
    9. 'other' → logprob: -7.7245941162109375
    10. 'le' → logprob: -8.224594116210938

Token 425: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.8151124715805054
    2. 'div' → logprob: -1.3151124715805054
    3. 'pow' → logprob: -1.5651124715805054
    4. 'def' → logprob: -3.940112590789795
    5. 'mod' → logprob: -3.940112590789795
    6. 'Mod' → logprob: -4.065112590789795
    7. ' division' → logprob: -4.690112590789795
    8. 'Div' → logprob: -5.940112590789795
    9. 'other' → logprob: -6.190112590789795
    10. 'inverse' → logprob: -6.690112590789795

Token 426: ' entière' (ID: 61583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: ' mod' (ID: 1812)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13879276812076569
    2. '(' → logprob: -3.1387927532196045
    3. '   ' → logprob: -3.7637927532196045
    4. ',' → logprob: -4.388792991638184
    5. '<|end|>' → logprob: -4.513792991638184
    6. ')' → logprob: -4.638792991638184
    7. ':' → logprob: -4.763792991638184
    8. '       ' → logprob: -5.388792991638184
    9. ' (' → logprob: -6.138792991638184
    10. 'def' → logprob: -6.263792991638184

Token 428: 'ulaire' (ID: 48584)
  Prédit: 'ulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.02326865680515766
    2. 'ulaire' → logprob: -4.273268699645996
    3. 'ule' → logprob: -5.148268699645996
    4. 'ULO' → logprob: -6.773268699645996
    5. 'é' → logprob: -7.023268699645996
    6. '```' → logprob: -8.023268699645996
    7. '%' → logprob: -8.523268699645996
    8. 'ulé' → logprob: -8.898268699645996
    9. 'ulos' → logprob: -9.398268699645996
    10. 'u' → logprob: -9.773268699645996

Token 429: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: 'avec' (ID: 64065)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.7756098508834839
    2. 'other' → logprob: -1.0256098508834839
    3. 'inverse' → logprob: -3.1506099700927734
    4. 'self' → logprob: -3.4006099700927734
    5. ')' → logprob: -3.6506099700927734
    6. '       ' → logprob: -4.025609970092773
    7. '(Mod' → logprob: -4.275609970092773
    8. 'int' → logprob: -4.900609970092773
    9. 'Modulo' → logprob: -5.025609970092773
    10. 'def' → logprob: -5.275609970092773

Token 431: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.791205108165741
    2. 'pow' → logprob: -1.4162051677703857
    3. 'ex' → logprob: -1.5412051677703857
    4. 'inv' → logprob: -3.5412051677703857
    5. 'other' → logprob: -3.6662051677703857
    6. 'l' → logprob: -4.041204929351807
    7. 'aut' → logprob: -5.916204929351807
    8. 'Mod' → logprob: -6.291204929351807
    9. ' inverse' → logprob: -6.666204929351807
    10. 'pu' → logprob: -6.791204929351807

Token 432: ').
' (ID: 6294)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.11814587563276291
    2. ')' → logprob: -2.4931459426879883
    3. 'pow' → logprob: -5.118145942687988
    4. 'de' → logprob: -5.243145942687988
    5. '_mod' → logprob: -5.368145942687988
    6. ' modulo' → logprob: -6.368145942687988
    7. 'Mod' → logprob: -6.493145942687988
    8. 'element' → logprob: -6.993145942687988
    9. 'élé' → logprob: -6.993145942687988
    10. '(Mod' → logprob: -6.993145942687988

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33787497878074646
    2. '<|end|>' → logprob: -1.4628750085830688
    3. '   ' → logprob: -3.7128748893737793
    4. ')' → logprob: -4.087874889373779
    5. '#' → logprob: -6.212874889373779
    6. '(' → logprob: -6.587874889373779
    7. ':' → logprob: -6.587874889373779
    8. '        
' → logprob: -6.837874889373779
    9. ' ' → logprob: -7.087874889373779
    10. '(
' → logprob: -7.087874889373779

Token 434: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17603880167007446
    2. '<|end|>' → logprob: -2.1760387420654297
    3. '   ' → logprob: -3.4260387420654297
    4. '        
' → logprob: -6.17603874206543
    5. ')' → logprob: -6.55103874206543
    6. '
' → logprob: -6.92603874206543
    7. '  
' → logprob: -6.92603874206543
    8. ' 
' → logprob: -6.92603874206543
    9. '(' → logprob: -6.92603874206543
    10. ' ' → logprob: -7.05103874206543

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012037098407745361
    2. 'other' → logprob: -5.01203727722168
    3. 'return' → logprob: -6.38703727722168
    4. 'if' → logprob: -6.51203727722168
    5. 'def' → logprob: -6.76203727722168
    6. ' other' → logprob: -8.76203727722168
    7. 'mod' → logprob: -8.88703727722168
    8. 'self' → logprob: -9.76203727722168
    9. '#' → logprob: -9.88703727722168
    10. ' if' → logprob: -9.88703727722168

Token 436: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00816038716584444
    2. 'other' → logprob: -6.008160591125488
    3. 'inv' → logprob: -6.383160591125488
    4. 'pow' → logprob: -6.383160591125488
    5. 'if' → logprob: -6.758160591125488
    6. 'def' → logprob: -7.633160591125488
    7. ' return' → logprob: -8.258160591125488
    8. '       ' → logprob: -9.008160591125488
    9. '   ' → logprob: -9.383160591125488
    10. 'inverse' → logprob: -9.633160591125488

Token 437: ' (
' (ID: 4112)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14811666309833527
    2. 'Mod' → logprob: -2.6481165885925293
    3. ' self' → logprob: -2.7731165885925293
    4. '(self' → logprob: -6.398116588592529
    5. '(
' → logprob: -6.523116588592529
    6. ' Mod' → logprob: -7.023116588592529
    7. '       ' → logprob: -8.273117065429688
    8. '(Mod' → logprob: -10.148117065429688
    9. '   ' → logprob: -10.273117065429688
    10. ' (
' → logprob: -10.648117065429688

Token 438: '           ' (ID: 352)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.03835254907608032
    2. 'self' → logprob: -3.2883524894714355
    3. ' Mod' → logprob: -8.538352966308594
    4. '           ' → logprob: -9.538352966308594
    5. ' self' → logprob: -10.913352966308594
    6. '(Mod' → logprob: -11.413352966308594
    7. '       ' → logprob: -11.538352966308594
    8. '(self' → logprob: -12.913352966308594
    9. 'mod' → logprob: -14.788352966308594
    10. 'Modulo' → logprob: -14.913352966308594

Token 439: ' Mod' (ID: 7191)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5760575532913208
    2. 'Mod' (adapté à ' Mod') → logprob: -0.8260575532913208
    3. 'other' → logprob: -9.826057434082031
    4. ' self' → logprob: -10.576057434082031
    5. ' Mod' → logprob: -10.826057434082031
    6. '(self' → logprob: -11.826057434082031
    7. '(Mod' → logprob: -12.201057434082031
    8. 'Modulo' → logprob: -13.451057434082031
    9. '       ' → logprob: -13.826057434082031
    10. '           ' → logprob: -13.826057434082031

Token 440: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.5213274309644476e-05
    2. 'int' → logprob: -11.125015258789062
    3. '_int' → logprob: -15.875015258789062
    4. ' Int' → logprob: -16.125015258789062
    5. '	Int' → logprob: -16.250015258789062
    6. 'Mod' → logprob: -17.125015258789062
    7. 'Ints' → logprob: -17.500015258789062
    8. '(Int' → logprob: -17.500015258789062
    9. '<Int' → logprob: -17.875015258789062
    10. '_Int' → logprob: -18.250015258789062

Token 441: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.153795766294934e-06
    2. 'self' → logprob: -12.375005722045898
    3. '(
' → logprob: -13.625005722045898
    4. '(' → logprob: -14.875005722045898
    5. '(int' → logprob: -15.375005722045898
    6. '(pow' → logprob: -16.8750057220459
    7. '((' → logprob: -17.7500057220459
    8. 'pow' → logprob: -18.3750057220459
    9. 'def' → logprob: -18.6250057220459
    10. '   ' → logprob: -18.8750057220459

Token 442: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.1472419600977446e-06
    2. 'x' → logprob: -14.250000953674316
    3. '.' → logprob: -15.750000953674316
    4. ' .' → logprob: -16.125001907348633
    5. '(x' → logprob: -16.875001907348633
    6. ').' → logprob: -18.125001907348633
    7. '(' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.625001907348633
    9. 'self' → logprob: -18.875001907348633
    10. ' x' → logprob: -18.875001907348633

Token 443: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04861586540937424
    2. ' *' → logprob: -3.0486159324645996
    3. ')' → logprob: -11.048615455627441
    4. '   ' → logprob: -13.173615455627441
    5. ')*' → logprob: -13.173615455627441
    6. '**' → logprob: -13.298615455627441
    7. '*self' → logprob: -13.298615455627441
    8. '```' → logprob: -13.548615455627441
    9. '*
' → logprob: -13.923615455627441
    10. '*object' → logprob: -14.423615455627441

Token 444: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0036862941924482584
    2. 'other' → logprob: -5.628686428070068
    3. ' pow' → logprob: -9.50368595123291
    4. '(pow' → logprob: -11.62868595123291
    5. 'power' → logprob: -14.12868595123291
    6. 'mod' → logprob: -14.37868595123291
    7. 'int' → logprob: -15.00368595123291
    8. '(other' → logprob: -15.50368595123291
    9. '   ' → logprob: -15.50368595123291
    10. '
' → logprob: -15.87868595123291

Token 445: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.00020449401927180588
    2. 'other' → logprob: -8.500204086303711
    3. '(' → logprob: -14.000204086303711
    4. '(
' → logprob: -16.50020408630371
    5. 'Other' → logprob: -16.87520408630371
    6. '_other' → logprob: -17.00020408630371
    7. ' other' → logprob: -17.12520408630371
    8. 'OTHER' → logprob: -19.12520408630371
    9. ')' → logprob: -19.25020408630371
    10. '.other' → logprob: -19.62520408630371

Token 446: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0009728021104820073
    2. 'x' → logprob: -7.125972747802734
    3. '(x' → logprob: -8.875972747802734
    4. '(' → logprob: -11.125972747802734
    5. ',x' → logprob: -12.625972747802734
    6. '(other' → logprob: -13.000972747802734
    7. ',' → logprob: -13.000972747802734
    8. '.' → logprob: -13.125972747802734
    9. ')' → logprob: -13.875972747802734
    10. ' x' → logprob: -14.000972747802734

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037466554204002023
    2. ',-' → logprob: -9.125374794006348
    3. '(' → logprob: -9.375374794006348
    4. '(M' → logprob: -10.125374794006348
    5. ' ,' → logprob: -10.500374794006348
    6. '(-' → logprob: -10.625374794006348
    7. '(Mod' → logprob: -10.625374794006348
    8. ',
' → logprob: -11.125374794006348
    9. '           ' → logprob: -11.625374794006348
    10. '       ' → logprob: -11.750374794006348

Token 448: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00014799882774241269
    2. ' MOD' → logprob: -8.875147819519043
    3. '-' → logprob: -12.125147819519043
    4. '_MOD' → logprob: -14.250147819519043
    5. '   ' → logprob: -14.500147819519043
    6. '           ' → logprob: -14.875147819519043
    7. '.MOD' → logprob: -15.000147819519043
    8. '(M' → logprob: -15.375147819519043
    9. '-M' → logprob: -15.625147819519043
    10. 'MO' → logprob: -16.00014877319336

Token 449: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004879915213678032
    2. ' -' → logprob: -7.625487804412842
    3. '```' → logprob: -18.12548828125
    4. '−' → logprob: -18.75048828125
    5. ' ' → logprob: -19.00048828125
    6. '  ' → logprob: -19.12548828125
    7. '2' → logprob: -19.50048828125
    8. '–' → logprob: -19.75048828125
    9. '   ' → logprob: -20.06298828125
    10. '{-' → logprob: -20.25048828125

Token 450: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.875000953674316
    3. '```' → logprob: -15.000000953674316
    4. '۲' → logprob: -16.437501907348633
    5. '٢' → logprob: -17.187501907348633
    6. '3' → logprob: -17.312501907348633
    7. '-' → logprob: -17.375001907348633
    8. ')' → logprob: -17.562501907348633
    9. '22' → logprob: -17.562501907348633
    10. '
' → logprob: -17.625001907348633

Token 451: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '-' → logprob: -15.625000953674316
    5. '
' → logprob: -15.937500953674316
    6. '3' → logprob: -16.750001907348633
    7. '

' → logprob: -17.687501907348633
    8. '...' → logprob: -17.812501907348633
    9. '۲' → logprob: -17.812501907348633
    10. '٢' → logprob: -18.250001907348633

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00596636114642024
    2. ')' → logprob: -5.2559661865234375
    3. '))' → logprob: -7.5059661865234375
    4. ' ,' → logprob: -8.880966186523438
    5. ')))' → logprob: -11.755966186523438
    6. '%' → logprob: -11.755966186523438
    7. '<|end|>' → logprob: -12.755966186523438
    8. '}' → logprob: -12.880966186523438
    9. '```' → logprob: -12.880966186523438
    10. 'mod' → logprob: -12.880966186523438

Token 453: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.7697225252486533e-06
    2. ' MOD' → logprob: -12.500003814697266
    3. '           ' → logprob: -18.375003814697266
    4. '       ' → logprob: -18.875003814697266
    5. ')' → logprob: -18.875003814697266
    6. '998' → logprob: -19.375003814697266
    7. '   ' → logprob: -19.625003814697266
    8. '_MOD' → logprob: -20.500003814697266
    9. '```' → logprob: -20.750003814697266
    10. 'MO' → logprob: -21.125003814697266

Token 454: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01631200686097145
    2. ')' → logprob: -4.141312122344971
    3. '))
' → logprob: -8.891311645507812
    4. '       ' → logprob: -9.391311645507812
    5. ' ))' → logprob: -10.641311645507812
    6. ')))' → logprob: -10.766311645507812
    7. ')
' → logprob: -12.391311645507812
    8. '           ' → logprob: -12.766311645507812
    9. ' )' → logprob: -13.141311645507812
    10. '   ' → logprob: -14.891311645507812

Token 455: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19529682397842407
    2. 'if' → logprob: -1.9452967643737793
    3. ')' → logprob: -3.5702967643737793
    4. '       ' → logprob: -5.070296764373779
    5. ' )' → logprob: -11.195297241210938
    6. '	if' → logprob: -11.820297241210938
    7. '           ' → logprob: -12.445297241210938
    8. '        ' → logprob: -12.570297241210938
    9. '<|end|>' → logprob: -12.570297241210938
    10. 'If' → logprob: -14.070297241210938

Token 456: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6931585073471069
    2. ' isinstance' → logprob: -0.6931585073471069
    3. '(is' → logprob: -11.443158149719238
    4. '<|end|>' → logprob: -14.693158149719238
    5. ' is' → logprob: -15.818158149719238
    6. 'instance' → logprob: -16.568159103393555
    7. 'Is' → logprob: -17.068159103393555
    8. 'typeof' → logprob: -17.693159103393555
    9. 'type' → logprob: -17.818159103393555
    10. '=is' → logprob: -18.068159103393555

Token 457: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0001242772996192798
    2. 'other' → logprob: -9.000123977661133
    3. ' other' → logprob: -14.375123977661133
    4. 'Other' → logprob: -15.250123977661133
    5. 'OTHER' → logprob: -19.375123977661133
    6. '_other' → logprob: -20.000123977661133
    7. '(user' → logprob: -20.125123977661133
    8. '.other' → logprob: -20.250123977661133
    9. '(operator' → logprob: -20.500123977661133
    10. '<|end|>' → logprob: -20.625123977661133

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006526283104903996
    2. '(other' → logprob: -7.87565279006958
    3. 'other' → logprob: -8.250652313232422
    4. ' other' → logprob: -12.250652313232422
    5. '(' → logprob: -13.250652313232422
    6. 'Other' → logprob: -13.250652313232422
    7. '(Mod' → logprob: -13.875652313232422
    8. ' ,' → logprob: -14.375652313232422
    9. ',
' → logprob: -14.625652313232422
    10. 'Mod' → logprob: -14.875652313232422

Token 459: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -2.7729658540920354e-05
    2. ' Mod' → logprob: -10.500027656555176
    3. '(Mod' → logprob: -15.750027656555176
    4. '_mod' → logprob: -18.125028610229492
    5. 'mod' → logprob: -18.750028610229492
    6. '.Mod' → logprob: -19.250028610229492
    7. '_Mod' → logprob: -19.625028610229492
    8. 'MOD' → logprob: -20.000028610229492
    9. 'Modulo' → logprob: -20.000028610229492
    10. '-Mod' → logprob: -21.500028610229492

Token 460: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.0006285638664849102
    2. 'int' → logprob: -7.375628471374512
    3. 'Mod' → logprob: -13.750628471374512
    4. 'nt' → logprob: -15.125628471374512
    5. ' Int' → logprob: -15.750628471374512
    6. '(Int' → logprob: -16.375629425048828
    7. ' int' → logprob: -16.375629425048828
    8. '	Int' → logprob: -16.375629425048828
    9. 'Ints' → logprob: -16.500629425048828
    10. '<Int' → logprob: -16.750629425048828

Token 461: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021712234243750572
    2. 'else' → logprob: -4.271712303161621
    3. ' else' → logprob: -4.896712303161621
    4. '       ' → logprob: -10.521712303161621
    5. '        ' → logprob: -11.021712303161621
    6. ' )' → logprob: -12.646712303161621
    7. ')
' → logprob: -14.646712303161621
    8. '),' → logprob: -14.646712303161621
    9. '           ' → logprob: -14.896712303161621
    10. '         ' → logprob: -15.021712303161621

Token 462: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5990132093429565
    2. ' else' → logprob: -0.8490132093429565
    3. ')' → logprob: -3.849013328552246
    4. '        ' → logprob: -7.474013328552246
    5. '<|end|>' → logprob: -7.474013328552246
    6. '       ' → logprob: -8.474013328552246
    7. ' )' → logprob: -9.349013328552246
    8. '	else' → logprob: -9.974013328552246
    9. '<|end|>' → logprob: -12.349013328552246
    10. 'elif' → logprob: -12.349013328552246

Token 463: '
' (ID: 198)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.5550398230552673
    2. ' Mod' → logprob: -0.9300398230552673
    3. '(Mod' → logprob: -3.555039882659912
    4. '           ' → logprob: -6.055039882659912
    5. '       ' → logprob: -8.305039405822754
    6. 'pow' → logprob: -9.180039405822754
    7. '(
' → logprob: -10.680039405822754
    8. 'self' → logprob: -11.055039405822754
    9. 'Pow' → logprob: -11.305039405822754
    10. ' pow' → logprob: -11.305039405822754

Token 464: '           ' (ID: 352)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.20542098581790924
    2. ' Mod' → logprob: -1.705420970916748
    3. '           ' → logprob: -5.580420970916748
    4. '(Mod' → logprob: -8.455421447753906
    5. '       ' → logprob: -11.330421447753906
    6. 'pow' → logprob: -13.955421447753906
    7. 'Pow' → logprob: -14.330421447753906
    8. '
' → logprob: -14.705421447753906
    9. '   ' → logprob: -14.955421447753906
    10. 'Mo' → logprob: -15.205421447753906

Token 465: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.0042036441154778
    2. ' Mod' → logprob: -5.504203796386719
    3. '(Mod' → logprob: -9.004203796386719
    4. 'pow' → logprob: -13.504203796386719
    5. 'Pow' → logprob: -14.879203796386719
    6. '
' → logprob: -15.879203796386719
    7. ' ' → logprob: -16.50420379638672
    8. 'self' → logprob: -16.87920379638672
    9. '.Mod' → logprob: -17.25420379638672
    10. '_Mod' → logprob: -17.25420379638672

Token 466: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: 0.0
    2. 'int' → logprob: -16.75
    3. '(Int' → logprob: -19.625
    4. ' Int' → logprob: -20.0
    5. 'Ints' → logprob: -21.125
    6. 'I' → logprob: -21.5
    7. 'In' → logprob: -21.625
    8. 'It' → logprob: -21.75
    9. 'Mod' → logprob: -21.875
    10. 'INT' → logprob: -22.375

Token 467: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. 'self' → logprob: -16.25
    4. '(
' → logprob: -18.5
    5. '(int' → logprob: -19.625
    6. '(s' → logprob: -20.125
    7. '(sel' → logprob: -20.125
    8. '((' → logprob: -21.125
    9. '(pow' → logprob: -21.625
    10. '(this' → logprob: -21.625

Token 468: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00029387109680101275
    2. 'x' → logprob: -8.250293731689453
    3. '.' → logprob: -10.375293731689453
    4. ').' → logprob: -14.875293731689453
    5. ' .' → logprob: -15.375293731689453
    6. '(' → logprob: -15.750293731689453
    7. 'self' → logprob: -16.125293731689453
    8. '```' → logprob: -16.500293731689453
    9. '(x' → logprob: -16.500293731689453
    10. ')' → logprob: -16.625293731689453

Token 469: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20141421258449554
    2. '*' → logprob: -1.7014142274856567
    3. ' ' → logprob: -15.201414108276367
    4. ')' → logprob: -15.826414108276367
    5. '**' → logprob: -15.826414108276367
    6. 'pow' → logprob: -16.076414108276367
    7. ' ' → logprob: -16.326414108276367
    8. ' pow' → logprob: -16.576414108276367
    9. '*(' → logprob: -17.201414108276367
    10. '*object' → logprob: -17.576414108276367

Token 470: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0001584850688232109
    2. ' pow' → logprob: -8.750158309936523
    3. '(pow' → logprob: -19.125158309936523
    4. '   ' → logprob: -19.375158309936523
    5. 'power' → logprob: -20.625158309936523
    6. 'po' → logprob: -21.125158309936523
    7. 'p' → logprob: -21.250158309936523
    8. 'pw' → logprob: -21.750158309936523
    9. ' ' → logprob: -22.375158309936523
    10. '
' → logprob: -22.625158309936523

Token 471: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -4.008129963040119e-06
    2. 'other' → logprob: -12.500003814697266
    3. '(' → logprob: -15.625003814697266
    4. ' other' → logprob: -18.000003814697266
    5. '(
' → logprob: -18.500003814697266
    6. 'Other' → logprob: -19.875003814697266
    7. '((' → logprob: -21.375003814697266
    8. ' (' → logprob: -21.375003814697266
    9. '.other' → logprob: -21.500003814697266
    10. '_other' → logprob: -21.500003814697266

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ' ,' → logprob: -11.875008583068848
    3. 'x' → logprob: -14.625008583068848
    4. 's' → logprob: -15.625008583068848
    5. ' ' → logprob: -15.625008583068848
    6. 'self' → logprob: -15.875008583068848
    7. 'mod' → logprob: -16.25000762939453
    8. ',
' → logprob: -16.87500762939453
    9. ',x' → logprob: -16.87500762939453
    10. '2' → logprob: -17.12500762939453

Token 473: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0019289902411401272
    2. ' MOD' → logprob: -6.251928806304932
    3. '_MOD' → logprob: -15.25192928314209
    4. '   ' → logprob: -16.376928329467773
    5. '.MOD' → logprob: -16.751928329467773
    6. '998' → logprob: -17.126928329467773
    7. '           ' → logprob: -17.876928329467773
    8. ' ' → logprob: -18.376928329467773
    9. '       ' → logprob: -19.126928329467773
    10. 'mod' → logprob: -19.126928329467773

Token 474: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013259568950161338
    2. ' -' → logprob: -6.626326084136963
    3. '-
' → logprob: -18.376325607299805
    4. ' ' → logprob: -18.376325607299805
    5. '−' → logprob: -18.751325607299805
    6. '```' → logprob: -19.751325607299805
    7. '–' → logprob: -19.876325607299805
    8. '   ' → logprob: -20.001325607299805
    9. '2' → logprob: -20.001325607299805
    10. ')' → logprob: -20.876325607299805

Token 475: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.500011444091797
    3. '
' → logprob: -15.125011444091797
    4. '۲' → logprob: -15.125011444091797
    5. '-' → logprob: -16.187511444091797
    6. '２' → logprob: -16.812511444091797
    7. '```' → logprob: -16.812511444091797
    8. '٢' → logprob: -16.875011444091797
    9. '3' → logprob: -17.000011444091797
    10. '२' → logprob: -17.062511444091797

Token 476: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.812501907348633
    3. '
' → logprob: -15.062501907348633
    4. '```' → logprob: -15.687501907348633
    5. '۲' → logprob: -15.875001907348633
    6. '-' → logprob: -16.125001907348633
    7. '２' → logprob: -16.750001907348633
    8. '3' → logprob: -17.312501907348633
    9. '' → logprob: -17.375001907348633
    10. '٢' → logprob: -17.437501907348633

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.943783253314905e-05
    2. ' ,' → logprob: -9.750059127807617
    3. ')' → logprob: -14.375059127807617
    4. '),' → logprob: -15.125059127807617
    5. ',
' → logprob: -16.000059127807617
    6. '```' → logprob: -16.875059127807617
    7. 's' → logprob: -17.500059127807617
    8. 'MOD' → logprob: -17.875059127807617
    9. '<|end|>' → logprob: -17.875059127807617
    10. '`,' → logprob: -18.000059127807617

Token 478: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.04858816787600517
    2. ' MOD' → logprob: -3.048588275909424
    3. ')' → logprob: -14.798587799072266
    4. '_MOD' → logprob: -15.673587799072266
    5. '.MOD' → logprob: -16.298587799072266
    6. '```' → logprob: -17.298587799072266
    7. 'Mod' → logprob: -17.548587799072266
    8. 'mod' → logprob: -17.798587799072266
    9. '998' → logprob: -17.923587799072266
    10. ' ' → logprob: -18.048587799072266

Token 479: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005723327049054205
    2. ')' → logprob: -7.750572204589844
    3. '))
' → logprob: -9.125572204589844
    4. '       ' → logprob: -10.625572204589844
    5. ')))' → logprob: -11.875572204589844
    6. ')
' → logprob: -14.500572204589844
    7. ' ))' → logprob: -14.875572204589844
    8. '   ' → logprob: -15.250572204589844
    9. '           ' → logprob: -15.375572204589844
    10. '));' → logprob: -16.625572204589844

Token 480: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005561320576816797
    2. '       ' → logprob: -7.500555992126465
    3. ')
' → logprob: -13.750555992126465
    4. '   ' → logprob: -14.125555992126465
    5. '<|end|>' → logprob: -14.625555992126465
    6. ' )' → logprob: -15.000555992126465
    7. ')return' → logprob: -15.625555992126465
    8. ')}' → logprob: -16.50055694580078
    9. ')`' → logprob: -16.62555694580078
    10. '           ' → logprob: -16.87555694580078

Token 481: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2842308680992573e-05
    2. '   ' → logprob: -11.625022888183594
    3. ')
' → logprob: -12.000022888183594
    4. '       ' → logprob: -12.500022888183594
    5. ')

' (adapté à ' )

') → logprob: -12.500022888183594
    6. ' )' → logprob: -15.875022888183594
    7. ')return' → logprob: -16.375022888183594
    8. ')`' → logprob: -17.125022888183594
    9. ' ' → logprob: -17.375022888183594
    10. '),' → logprob: -17.750022888183594

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14522579312324524
    2. ')' → logprob: -3.020225763320923
    3. '```' → logprob: -3.020225763320923
    4. '<|end|>' → logprob: -3.895225763320923
    5. 'def' → logprob: -5.395226001739502
    6. ' ' → logprob: -5.895226001739502
    7. '#' → logprob: -6.520226001739502
    8. '\' → logprob: -6.645226001739502
    9. '\n' → logprob: -6.770226001739502
    10. '
' → logprob: -7.020226001739502

Token 483: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4850890636444092
    2. '   ' → logprob: -0.9850890636444092
    3. ' def' → logprob: -4.860089302062988
    4. ' ' → logprob: -6.985089302062988
    5. '<|end|>' → logprob: -6.985089302062988
    6. ')' → logprob: -7.235089302062988
    7. '```' → logprob: -9.235089302062988
    8. '  ' → logprob: -9.360089302062988
    9. '	def' → logprob: -9.485089302062988
    10. '_' → logprob: -9.610089302062988

Token 484: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0019517067121341825
    2. 'pow' → logprob: -6.251951694488525
    3. ' __' → logprob: -10.751952171325684
    4. 'def' → logprob: -14.126952171325684
    5. '_pow' → logprob: -14.751952171325684
    6. 'inv' → logprob: -15.001952171325684
    7. '.__' → logprob: -16.501951217651367
    8. 'power' → logprob: -16.626951217651367
    9. 'inverse' → logprob: -17.126951217651367
    10. 'mod' → logprob: -17.251951217651367

Token 485: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0031860284507274628
    2. 'r' → logprob: -5.753186225891113
    3. 'eq' → logprob: -11.753186225891113
    4. 'power' → logprob: -15.503186225891113
    5. 'neg' → logprob: -16.003185272216797
    6. 'pos' → logprob: -16.128185272216797
    7. ' pow' → logprob: -17.878185272216797
    8. '_pow' → logprob: -18.503185272216797
    9. 'Pow' → logprob: -18.628185272216797
    10. 'add' → logprob: -19.003185272216797

Token 486: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0002366753324167803
    2. '(self' → logprob: -8.750236511230469
    3. '__' → logprob: -9.500236511230469
    4. '__(
' → logprob: -13.375236511230469
    5. '(' → logprob: -13.750236511230469
    6. '_(' → logprob: -15.125236511230469
    7. '__(*' → logprob: -16.12523651123047
    8. '__('' → logprob: -16.12523651123047
    9. '__((' → logprob: -16.75023651123047
    10. '```' → logprob: -17.25023651123047

Token 487: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.088346359931165e-07
    2. '(self' → logprob: -14.625000953674316
    3. ' self' → logprob: -14.750000953674316
    4. '   ' → logprob: -18.25
    5. 'def' → logprob: -18.25
    6. '	self' → logprob: -19.25
    7. '       ' → logprob: -19.75
    8. '
' → logprob: -21.875
    9. '0' → logprob: -22.375
    10. '1' → logprob: -22.75

Token 488: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.27802154421806335
    2. '(' → logprob: -1.9030215740203857
    3. ',' → logprob: -2.4030215740203857
    4. 'self' → logprob: -6.403021335601807
    5. '__(' → logprob: -7.278021335601807
    6. ')(' → logprob: -7.903021335601807
    7. ' (' → logprob: -8.778021812438965
    8. ')' → logprob: -9.153021812438965
    9. ',self' → logprob: -10.153021812438965
    10. '_(' → logprob: -10.778021812438965

Token 489: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.024210108444094658
    2. 'self' → logprob: -3.774210214614868
    3. ' other' → logprob: -7.024209976196289
    4. ' self' → logprob: -9.774209976196289
    5. 'int' → logprob: -11.024209976196289
    6. 'Other' → logprob: -15.399209976196289
    7. ' ' → logprob: -15.649209976196289
    8. '(other' → logprob: -16.14920997619629
    9. 'power' → logprob: -16.27420997619629
    10. '_other' → logprob: -17.02420997619629

Token 490: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010914575977949426
    2. '(self' → logprob: -9.50010871887207
    3. '):' → logprob: -11.12510871887207
    4. ' ,' → logprob: -11.37510871887207
    5. 'self' → logprob: -12.62510871887207
    6. '       ' → logprob: -13.37510871887207
    7. ',self' → logprob: -13.75010871887207
    8. '):
' → logprob: -14.12510871887207
    9. '   ' → logprob: -14.62510871887207
    10. '(' → logprob: -14.87510871887207

Token 491: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29684486985206604
    2. '(self' → logprob: -1.6718448400497437
    3. '       ' → logprob: -3.171844959259033
    4. '(
' → logprob: -4.921844959259033
    5. '   ' → logprob: -4.921844959259033
    6. ' (' → logprob: -5.171844959259033
    7. ',' → logprob: -6.296844959259033
    8. '<|end|>' → logprob: -6.421844959259033
    9. 'self' → logprob: -7.046844959259033
    10. ' self' → logprob: -8.046844482421875

Token 492: ' """
' (ID: 7037)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5497738122940063
    2. '(' → logprob: -1.0497738122940063
    3. 'self' → logprob: -3.299773693084717
    4. '(
' → logprob: -4.049773693084717
    5. '       ' → logprob: -4.799773693084717
    6. ' (' → logprob: -5.174773693084717
    7. '   ' → logprob: -6.549773693084717
    8. ' self' → logprob: -6.674773693084717
    9. 'return' → logprob: -7.049773693084717
    10. 'def' → logprob: -7.049773693084717

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2968349754810333
    2. 'def' → logprob: -1.546834945678711
    3. 'int' → logprob: -3.671834945678711
    4. 'return' → logprob: -4.921834945678711
    5. 'pow' → logprob: -5.671834945678711
    6. 'Mod' → logprob: -5.921834945678711
    7. 'self' → logprob: -6.421834945678711
    8. '   ' → logprob: -6.796834945678711
    9. 'lambda' → logprob: -7.296834945678711
    10. 'other' → logprob: -7.796834945678711

Token 494: ' S' (ID: 336)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005966834723949432
    2. 'def' → logprob: -5.380966663360596
    3. '       ' → logprob: -6.755966663360596
    4. ' return' → logprob: -9.505967140197754
    5. 'pow' → logprob: -9.880967140197754
    6. '   ' → logprob: -10.880967140197754
    7. '
' → logprob: -10.880967140197754
    8. 'result' → logprob: -12.130967140197754
    9. '"""
' → logprob: -12.630967140197754
    10. 'if' → logprob: -12.880967140197754

Token 495: 'urcharge' (ID: 162326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3127151131629944
    2. 'elf' → logprob: -1.5627150535583496
    3. ':' → logprob: -3.9377150535583496
    4. '__' → logprob: -4.68771505355835
    5. '_pow' → logprob: -4.93771505355835
    6. '_' → logprob: -5.18771505355835
    7. '(' → logprob: -5.43771505355835
    8. ')' → logprob: -5.81271505355835
    9. '):' → logprob: -6.43771505355835
    10. 'pow' → logprob: -6.56271505355835

Token 496: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3872917890548706
    2. '(self' → logprob: -1.1372917890548706
    3. 'self' → logprob: -8.63729190826416
    4. 'def' → logprob: -9.01229190826416
    5. '(
' → logprob: -9.13729190826416
    6. '_' → logprob: -12.51229190826416
    7. '__(' → logprob: -12.76229190826416
    8. ' (' → logprob: -13.38729190826416
    9. '   ' → logprob: -13.76229190826416
    10. '_(' → logprob: -14.38729190826416

Token 497: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011951648048125207
    2. 'def' → logprob: -9.62511920928955
    3. '(self' → logprob: -9.87511920928955
    4. ' self' → logprob: -13.37511920928955
    5. 'pow' → logprob: -16.125120162963867
    6. 'the' → logprob: -16.625120162963867
    7. '(' → logprob: -17.375120162963867
    8. '__' → logprob: -18.250120162963867
    9. '
' → logprob: -18.250120162963867
    10. 's' → logprob: -18.375120162963867

Token 498: ''op' (ID: 70747)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03348178416490555
    2. '__' → logprob: -4.658481597900391
    3. '(int' → logprob: -4.783481597900391
    4. 'pow' → logprob: -5.783481597900391
    5. '_int' → logprob: -5.908481597900391
    6. ''int' → logprob: -5.908481597900391
    7. ',' → logprob: -6.283481597900391
    8. '_pow' → logprob: -6.533481597900391
    9. '(' → logprob: -7.033481597900391
    10. '**' → logprob: -7.658481597900391

Token 499: 'érateur' (ID: 108528)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.1747632771730423
    2. '__' → logprob: -2.2997632026672363
    3. '**' → logprob: -2.9247632026672363
    4. '_' → logprob: -6.424763202667236
    5. '```' → logprob: -6.549763202667236
    6. 'def' → logprob: -7.299763202667236
    7. '^' → logprob: -8.174763679504395
    8. 'owed' → logprob: -8.174763679504395
    9. 'owered' → logprob: -8.299763679504395
    10. '(self' → logprob: -8.424763679504395

Token 500: ' **' (ID: 6240)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02143724262714386
    2. '**' → logprob: -4.396437168121338
    3. '(self' → logprob: -5.021437168121338
    4. '*' → logprob: -7.271437168121338
    5. 'pow' → logprob: -7.646437168121338
    6. '(
' → logprob: -8.146437644958496
    7. '__' → logprob: -8.271437644958496
    8. '_' → logprob: -8.771437644958496
    9. 'def' → logprob: -8.771437644958496
    10. '(pow' → logprob: -9.021437644958496

Token 501: ' pour' (ID: 1930)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012861351482570171
    2. '(' → logprob: -4.387861251831055
    3. 'self' → logprob: -8.387861251831055
    4. 'def' → logprob: -9.637861251831055
    5. '(
' → logprob: -10.512861251831055
    6. ',' → logprob: -11.637861251831055
    7. ')' → logprob: -12.137861251831055
    8. '       ' → logprob: -12.262861251831055
    9. ' (' → logprob: -12.762861251831055
    10. '   ' → logprob: -13.012861251831055

Token 502: ' la' (ID: 557)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.11123068630695343
    2. ' pow' → logprob: -2.8612306118011475
    3. ' exponent' → logprob: -3.9862306118011475
    4. 'ex' → logprob: -4.486230850219727
    5. 'int' → logprob: -5.361230850219727
    6. 'pu' → logprob: -5.736230850219727
    7. 'power' → logprob: -6.361230850219727
    8. ' puissance' → logprob: -6.486230850219727
    9. ' pouvoir' → logprob: -7.111230850219727
    10. ' la' → logprob: -7.111230850219727

Token 503: ' puissance' (ID: 63494)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.4068678319454193
    2. 'int' → logprob: -1.4068678617477417
    3. 'pu' → logprob: -2.656867742538452
    4. 'power' → logprob: -4.406867980957031
    5. ' puissance' → logprob: -5.906867980957031
    6. 'ex' → logprob: -6.031867980957031
    7. 'mod' → logprob: -7.781867980957031
    8. ' pow' → logprob: -8.531867980957031
    9. ' exponent' → logprob: -8.531867980957031
    10. 'exp' → logprob: -8.656867980957031

Token 504: ' mod' (ID: 1812)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12731000781059265
    2. '(' → logprob: -2.127310037612915
    3. '(
' → logprob: -8.252309799194336
    4. ' (' → logprob: -9.752309799194336
    5. 'def' → logprob: -10.877309799194336
    6. ',' → logprob: -11.127309799194336
    7. 'self' → logprob: -11.627309799194336
    8. ')' → logprob: -12.752309799194336
    9. '   ' → logprob: -12.877309799194336
    10. '```' → logprob: -13.377309799194336

Token 505: 'ulaire' (ID: 48584)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.7652998566627502
    2. 'ulaire' → logprob: -1.5152997970581055
    3. 'ulo' → logprob: -1.8902997970581055
    4. ')' → logprob: -3.0152997970581055
    5. '```' → logprob: -3.6402997970581055
    6. 'ulé' → logprob: -4.3902997970581055
    7. 'u' → logprob: -4.6402997970581055
    8. '(
' → logprob: -4.7652997970581055
    9. '(self' → logprob: -4.8902997970581055
    10. ',' → logprob: -5.1402997970581055

Token 506: '.
' (ID: 558)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09186447411775589
    2. '       ' → logprob: -2.591864585876465
    3. ',' → logprob: -5.091864585876465
    4. '(' → logprob: -5.841864585876465
    5. '.' → logprob: -6.841864585876465
    6. '(
' → logprob: -7.216864585876465
    7. '<|end|>' → logprob: -7.716864585876465
    8. ' (' → logprob: -7.841864585876465
    9. '   ' → logprob: -8.091864585876465
    10. ')' → logprob: -8.716864585876465

Token 507: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6842520833015442
    2. '   ' → logprob: -1.6842520236968994
    3. '       ' → logprob: -2.1842520236968994
    4. ',' → logprob: -2.5592520236968994
    5. '(
' → logprob: -2.8092520236968994
    6. ')' → logprob: -3.5592520236968994
    7. '(self' → logprob: -3.8092520236968994
    8. ' (' → logprob: -5.9342522621154785
    9. 'self' → logprob: -6.0592522621154785
    10. '_' → logprob: -6.5592522621154785

Token 508: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11110801249742508
    2. '   ' → logprob: -2.4861080646514893
    3. 'def' → logprob: -5.11110782623291
    4. '(' → logprob: -5.86110782623291
    5. ')' → logprob: -5.98610782623291
    6. ':' → logprob: -6.23610782623291
    7. 'return' → logprob: -6.23610782623291
    8. '    ' → logprob: -6.36110782623291
    9. '(
' → logprob: -6.86110782623291
    10. 'if' → logprob: -7.48610782623291

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5763390064239502
    2. 'return' → logprob: -0.8263390064239502
    3. 'pow' → logprob: -8.951338768005371
    4. 'result' → logprob: -9.076338768005371
    5. ' return' → logprob: -9.826338768005371
    6. 'if' → logprob: -10.076338768005371
    7. '   ' → logprob: -10.826338768005371
    8. '```' → logprob: -10.951338768005371
    9. 'def' → logprob: -11.451338768005371
    10. 'self' → logprob: -12.826338768005371

Token 510: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.190178904333152e-05
    2. '       ' → logprob: -10.500031471252441
    3. 'def' → logprob: -13.000031471252441
    4. 'if' → logprob: -14.125031471252441
    5. '
' → logprob: -14.875031471252441
    6. ' return' → logprob: -15.125031471252441
    7. 'pow' → logprob: -15.125031471252441
    8. '```' → logprob: -15.625031471252441
    9. 'result' → logprob: -16.125032424926758
    10. 'power' → logprob: -17.625032424926758

Token 511: ' (
' (ID: 4112)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0014701071195304394
    2. ' Mod' → logprob: -6.62647008895874
    3. '(Mod' → logprob: -8.876470565795898
    4. '(
' → logprob: -12.876470565795898
    5. '   ' → logprob: -14.126470565795898
    6. '       ' → logprob: -15.126470565795898
    7. '_Mod' → logprob: -15.376470565795898
    8. 'Modulo' → logprob: -15.751470565795898
    9. '
' → logprob: -16.1264705657959
    10. '_mod' → logprob: -16.2514705657959

Token 512: '           ' (ID: 352)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -3.500108141452074e-05
    2. '           ' → logprob: -10.500035285949707
    3. ' Mod' → logprob: -11.875035285949707
    4. '       ' → logprob: -15.500035285949707
    5. '(Mod' → logprob: -15.500035285949707
    6. '   ' → logprob: -17.37503433227539
    7. '_Mod' → logprob: -18.25003433227539
    8. '_mod' → logprob: -18.25003433227539
    9. 'Modulo' → logprob: -18.37503433227539
    10. 'MOD' → logprob: -18.62503433227539

Token 513: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -5.512236498361744e-07
    2. ' Mod' → logprob: -14.625000953674316
    3. '(Mod' → logprob: -18.25
    4. 'MOD' → logprob: -19.625
    5. 'mod' → logprob: -19.75
    6. 'Modulo' → logprob: -20.5
    7. '_mod' → logprob: -20.75
    8. '   ' → logprob: -21.125
    9. '_Mod' → logprob: -21.875
    10. 'Mods' → logprob: -22.75

Token 514: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.2664456789934775e-06
    2. 'int' → logprob: -13.625000953674316
    3. ' Int' → logprob: -18.875001907348633
    4. '_int' → logprob: -19.375001907348633
    5. 'Mod' → logprob: -19.375001907348633
    6. '(Int' → logprob: -20.500001907348633
    7. 'In' → logprob: -20.750001907348633
    8. '_Int' → logprob: -21.000001907348633
    9. 'Ints' → logprob: -21.250001907348633
    10. '	Int' → logprob: -21.250001907348633

Token 515: '(pow' (ID: 189160)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009394779801368713
    2. '(pow' → logprob: -4.759394645690918
    3. 'self' → logprob: -7.634394645690918
    4. 'pow' → logprob: -8.134394645690918
    5. '(' → logprob: -12.884394645690918
    6. '(power' → logprob: -14.884394645690918
    7. '(
' → logprob: -16.259395599365234
    8. ' pow' → logprob: -17.009395599365234
    9. '(p' → logprob: -17.634395599365234
    10. '((' → logprob: -17.759395599365234

Token 516: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001172129064798355
    2. 'self' → logprob: -6.751172065734863
    3. '(' → logprob: -13.376172065734863
    4. '(
' → logprob: -15.626172065734863
    5. '[self' → logprob: -16.87617301940918
    6. ' self' → logprob: -16.87617301940918
    7. ',self' → logprob: -17.50117301940918
    8. '   ' → logprob: -17.87617301940918
    9. 's' → logprob: -17.87617301940918
    10. ')' → logprob: -18.00117301940918

Token 517: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0015284325927495956
    2. 'x' → logprob: -6.501528263092041
    3. 'self' → logprob: -11.2515287399292
    4. '.' → logprob: -11.3765287399292
    5. ').' → logprob: -14.2515287399292
    6. ' .' → logprob: -15.2515287399292
    7. '```' → logprob: -15.3765287399292
    8. ' ' → logprob: -15.7515287399292
    9. '(x' → logprob: -16.876527786254883
    10. ')' → logprob: -16.876527786254883

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014316866174340248
    2. '(other' → logprob: -4.264317035675049
    3. 'other' → logprob: -8.88931655883789
    4. ' ,' → logprob: -11.26431655883789
    5. '(' → logprob: -13.51431655883789
    6. ' other' → logprob: -14.38931655883789
    7. '.other' → logprob: -15.26431655883789
    8. 'Other' → logprob: -15.63931655883789
    9. 'if' → logprob: -16.26431655883789
    10. ',(' → logprob: -16.88931655883789

Token 519: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -1.1517960956552997e-05
    2. '(other' → logprob: -12.000011444091797
    3. ' other' → logprob: -12.250011444091797
    4. '
' → logprob: -15.500011444091797
    5. '   ' → logprob: -16.375011444091797
    6. 'othe' → logprob: -17.125011444091797
    7. 'int' → logprob: -17.375011444091797
    8. '0' → logprob: -17.500011444091797
    9. '(' → logprob: -18.125011444091797
    10. '(
' → logprob: -18.375011444091797

Token 520: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.06546568870544434
    2. ',' → logprob: -2.8154656887054443
    3. '))' → logprob: -6.440465927124023
    4. ' if' → logprob: -6.815465927124023
    5. 'x' → logprob: -7.565465927124023
    6. ',x' → logprob: -9.065465927124023
    7. ')' → logprob: -9.315465927124023
    8. 'if' → logprob: -10.190465927124023
    9. ' ,' → logprob: -11.315465927124023
    10. ')))' → logprob: -11.815465927124023

Token 521: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3501177728176117
    2. ',' → logprob: -1.975117802619934
    3. 'if' → logprob: -1.975117802619934
    4. '))' → logprob: -4.6001176834106445
    5. ')' → logprob: -4.8501176834106445
    6. ' ,' → logprob: -11.725117683410645
    7. '   ' → logprob: -12.100117683410645
    8. '),' → logprob: -12.225117683410645
    9. 'If' → logprob: -12.850117683410645
    10. '	if' → logprob: -13.850117683410645

Token 522: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.47407740354537964
    2. ' MOD' → logprob: -0.9740774035453796
    3. '_MOD' → logprob: -15.724077224731445
    4. '.MOD' → logprob: -15.849077224731445
    5. ')' → logprob: -17.349077224731445
    6. ' ' → logprob: -17.724077224731445
    7. ' ' → logprob: -18.099077224731445
    8. 'mod' → logprob: -18.849077224731445
    9. '    ' → logprob: -18.974077224731445
    10. 'MO' → logprob: -19.224077224731445

Token 523: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006614599376916885
    2. ')' → logprob: -5.131614685058594
    3. '       ' → logprob: -7.881614685058594
    4. ' if' → logprob: -8.381614685058594
    5. '))
' → logprob: -10.006614685058594
    6. 'if' → logprob: -10.631614685058594
    7. ')
' → logprob: -12.631614685058594
    8. ' ))' → logprob: -12.756614685058594
    9. '           ' → logprob: -13.131614685058594
    10. '   ' → logprob: -14.881614685058594

Token 524: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13937096297740936
    2. 'if' → logprob: -2.389370918273926
    3. '       ' → logprob: -3.389370918273926
    4. ')' → logprob: -5.389370918273926
    5. '<|end|>' → logprob: -9.514370918273926
    6. '<|end|>' → logprob: -11.264370918273926
    7. '           ' → logprob: -11.889370918273926
    8. '	if' → logprob: -12.139370918273926
    9. ' )' → logprob: -12.764370918273926
    10. 'If' → logprob: -12.889370918273926

Token 525: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00015872348740231246
    2. ' isinstance' → logprob: -8.750158309936523
    3. '(is' → logprob: -15.875158309936523
    4. '           ' → logprob: -16.500158309936523
    5. '   ' → logprob: -17.375158309936523
    6. '               ' → logprob: -18.375158309936523
    7. '  ' → logprob: -19.125158309936523
    8. 'has' → logprob: -19.250158309936523
    9. '                   ' → logprob: -19.750158309936523
    10. '       ' → logprob: -19.875158309936523

Token 526: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.014169389382004738
    2. 'other' → logprob: -4.264169216156006
    3. 'Other' → logprob: -12.514169692993164
    4. ' other' → logprob: -13.014169692993164
    5. 'OTHER' → logprob: -18.264169692993164
    6. '其他' → logprob: -20.139169692993164
    7. '_other' → logprob: -20.264169692993164
    8. '.other' → logprob: -20.764169692993164
    9. '-other' → logprob: -21.639169692993164
    10. ' andere' → logprob: -24.014169692993164

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7491250875755213e-05
    2. '(other' → logprob: -10.875027656555176
    3. 'other' → logprob: -11.875027656555176
    4. '(' → logprob: -14.500027656555176
    5. ' other' → logprob: -14.625027656555176
    6. ',
' → logprob: -15.375027656555176
    7. ' ,' → logprob: -15.500027656555176
    8. '(Mod' → logprob: -16.50002670288086
    9. 'Mod' → logprob: -16.75002670288086
    10. 'Other' → logprob: -18.87502670288086

Token 528: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -6.034592388459714e-06
    2. ' Mod' → logprob: -12.375005722045898
    3. '(Mod' → logprob: -13.625005722045898
    4. 'other' → logprob: -14.875005722045898
    5. '_mod' → logprob: -16.3750057220459
    6. 'mod' → logprob: -17.0000057220459
    7. 'self' → logprob: -17.3750057220459
    8. '.Mod' → logprob: -17.6250057220459
    9. '_Mod' → logprob: -17.7500057220459
    10. 'Other' → logprob: -18.0000057220459

Token 529: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.010917894542217255
    2. 'Mod' → logprob: -4.635917663574219
    3. 'int' → logprob: -6.760917663574219
    4. 'nt' → logprob: -13.635917663574219
    5. '(Int' → logprob: -15.260917663574219
    6. '(int' → logprob: -15.510917663574219
    7. '(Mod' → logprob: -15.635917663574219
    8. 'mod' → logprob: -15.760917663574219
    9. '
' → logprob: -15.885917663574219
    10. 'INT' → logprob: -16.01091766357422

Token 530: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5648091435432434
    2. ' else' → logprob: -1.3148090839385986
    3. 'else' → logprob: -1.8148090839385986
    4. '       ' → logprob: -9.56480884552002
    5. '        ' → logprob: -9.81480884552002
    6. ' )' → logprob: -11.68980884552002
    7. '),' → logprob: -14.18980884552002
    8. ' ' → logprob: -14.31480884552002
    9. '         ' → logprob: -14.93980884552002
    10. '           ' → logprob: -15.06480884552002

Token 531: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25193196535110474
    2. ' else' → logprob: -1.50193190574646
    3. '        ' → logprob: -13.626932144165039
    4. '       ' → logprob: -13.751932144165039
    5. '	else' → logprob: -14.751932144165039
    6. '_else' → logprob: -16.37693214416504
    7. '```' → logprob: -17.75193214416504
    8. 'elses' → logprob: -17.87693214416504
    9. ' ' → logprob: -18.12693214416504
    10. 'Else' → logprob: -18.25193214416504

Token 532: '
' (ID: 198)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.5850099921226501
    2. ' Mod' → logprob: -0.8350099921226501
    3. '           ' → logprob: -4.835010051727295
    4. 'pow' → logprob: -7.460010051727295
    5. ' pow' → logprob: -8.085009574890137
    6. '(Mod' → logprob: -9.085009574890137
    7. 'Pow' → logprob: -9.710009574890137
    8. ' Pow' → logprob: -11.210009574890137
    9. '       ' → logprob: -12.335009574890137
    10. '            ' → logprob: -12.835009574890137

Token 533: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7387284636497498
    2. 'Mod' → logprob: -0.7387284636497498
    3. ' Mod' → logprob: -3.1137285232543945
    4. '(Mod' → logprob: -9.613728523254395
    5. 'pow' → logprob: -10.238728523254395
    6. 'Pow' → logprob: -11.613728523254395
    7. '       ' → logprob: -12.863728523254395
    8. ' pow' → logprob: -13.113728523254395
    9. 'Modulo' → logprob: -14.113728523254395
    10. '          ' → logprob: -14.238728523254395

Token 534: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.0005535095697268844
    2. ' Mod' → logprob: -7.500553607940674
    3. '(Mod' → logprob: -14.500553131103516
    4. 'Mo' → logprob: -18.000553131103516
    5. 'pow' → logprob: -18.000553131103516
    6. 'Pow' → logprob: -18.125553131103516
    7. '           ' → logprob: -18.375553131103516
    8. 'MOD' → logprob: -18.375553131103516
    9. '_Mod' → logprob: -18.875553131103516
    10. 'Modulo' → logprob: -19.250553131103516

Token 535: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: 0.0
    2. 'int' → logprob: -18.25
    3. '(Int' → logprob: -18.5
    4. 'In' → logprob: -19.125
    5. ' Int' → logprob: -19.25
    6. 'I' → logprob: -20.625
    7. 'Ints' → logprob: -21.375
    8. '(x' → logprob: -21.75
    9. 'Mod' → logprob: -21.875
    10. '(int' → logprob: -21.875

Token 536: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.0003413031517993659
    2. 'pow' → logprob: -8.000341415405273
    3. ' pow' → logprob: -12.125341415405273
    4. '(' → logprob: -15.250341415405273
    5. '(po' → logprob: -16.750341415405273
    6. '(power' → logprob: -17.375341415405273
    7. '.pow' → logprob: -18.250341415405273
    8. '(
' → logprob: -19.250341415405273
    9. 'Pow' → logprob: -19.500341415405273
    10. '_pow' → logprob: -19.875341415405273

Token 537: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.6100132496794686e-05
    2. '(' → logprob: -10.000056266784668
    3. 'self' → logprob: -11.500056266784668
    4. '(
' → logprob: -15.125056266784668
    5. ' self' → logprob: -15.625056266784668
    6. ' (' → logprob: -18.25005531311035
    7. '[self' → logprob: -18.37505531311035
    8. ',self' → logprob: -18.37505531311035
    9. '(s' → logprob: -18.87505531311035
    10. 's' → logprob: -19.25005531311035

Token 538: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.000665375788230449
    2. '.' → logprob: -7.375665187835693
    3. 'x' → logprob: -10.750665664672852
    4. ' .' → logprob: -11.125665664672852
    5. ',' → logprob: -14.000665664672852
    6. ')' → logprob: -14.500665664672852
    7. ').' → logprob: -15.000665664672852
    8. ' ' → logprob: -15.875665664672852
    9. '```' → logprob: -16.25066566467285
    10. 'self' → logprob: -16.62566566467285

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024932216852903366
    2. 'other' → logprob: -4.024932384490967
    3. ' other' → logprob: -5.524932384490967
    4. ' ,' → logprob: -6.274932384490967
    5. '(other' → logprob: -7.024932384490967
    6. '(' → logprob: -14.774931907653809
    7. 'Other' → logprob: -15.899931907653809
    8. ')' → logprob: -16.774932861328125
    9. 'OTHER' → logprob: -17.274932861328125
    10. '_other' → logprob: -17.274932861328125

Token 540: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.005233763717114925
    2. ' other' → logprob: -5.2552337646484375
    3. '(other' → logprob: -17.005233764648438
    4. 'Other' → logprob: -19.380233764648438
    5. 'othe' → logprob: -20.255233764648438
    6. '.other' → logprob: -21.130233764648438
    7. '   ' → logprob: -22.005233764648438
    8. '_other' → logprob: -22.130233764648438
    9. ' ' → logprob: -22.380233764648438
    10. 'OTHER' → logprob: -22.880233764648438

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5767422318458557
    2. '))' → logprob: -0.8267422318458557
    3. ' ,' → logprob: -7.576742172241211
    4. ')' → logprob: -8.826742172241211
    5. ' ))' → logprob: -9.951742172241211
    6. '<|end|>' → logprob: -10.576742172241211
    7. ')))' → logprob: -10.826742172241211
    8. '))
' → logprob: -11.451742172241211
    9. '       ' → logprob: -11.951742172241211
    10. ',x' → logprob: -12.076742172241211

Token 542: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0015023599844425917
    2. ' MOD' → logprob: -6.501502513885498
    3. '_MOD' → logprob: -17.876502990722656
    4. '           ' → logprob: -19.126502990722656
    5. '.MOD' → logprob: -19.251502990722656
    6. 'MO' → logprob: -19.251502990722656
    7. '       ' → logprob: -19.376502990722656
    8. '   ' → logprob: -19.626502990722656
    9. ' ' → logprob: -20.001502990722656
    10. 'Mod' → logprob: -20.251502990722656

Token 543: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20270350575447083
    2. ')' → logprob: -1.7027034759521484
    3. ')
' → logprob: -7.202703475952148
    4. '       ' → logprob: -7.702703475952148
    5. '))
' → logprob: -9.452703475952148
    6. ')))' → logprob: -11.577703475952148
    7. '   ' → logprob: -12.952703475952148
    8. ' )' → logprob: -13.702703475952148
    9. ' ))' → logprob: -14.077703475952148
    10. '           ' → logprob: -14.827703475952148

Token 544: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034940900513902307
    2. '       ' → logprob: -8.250349044799805
    3. ')
' → logprob: -10.375349044799805
    4. '   ' → logprob: -10.375349044799805
    5. ' )' → logprob: -10.750349044799805
    6. ')return' → logprob: -13.875349044799805
    7. ')

' → logprob: -14.125349044799805
    8. ')`' → logprob: -14.375349044799805
    9. ')}' → logprob: -15.375349044799805
    10. ' ' → logprob: -15.500349044799805

Token 545: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026217024424113333
    2. ')

' (adapté à ' )

') → logprob: -9.000262260437012
    3. '   ' → logprob: -9.125262260437012
    4. '<|end|>' → logprob: -11.000262260437012
    5. ')
' → logprob: -11.500262260437012
    6. ' )' → logprob: -14.000262260437012
    7. ')return' → logprob: -14.625262260437012
    8. '```' → logprob: -14.875262260437012
    9. ' ' → logprob: -15.000262260437012
    10. '       ' → logprob: -15.500262260437012

Token 546: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01069688331335783
    2. 'def' → logprob: -5.010696887969971
    3. '_' → logprob: -6.010696887969971
    4. '  ' → logprob: -7.260696887969971
    5. '<|end|>' → logprob: -8.635696411132812
    6. ' def' → logprob: -8.760696411132812
    7. ' ' → logprob: -9.010696411132812
    8. '    
' → logprob: -9.510696411132812
    9. '__' → logprob: -9.635696411132812
    10. '
' → logprob: -9.885696411132812

Token 547: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10113701969385147
    2. '   ' → logprob: -2.3511369228363037
    3. ' def' → logprob: -7.101137161254883
    4. '_' → logprob: -9.726137161254883
    5. '	def' → logprob: -11.226137161254883
    6. '_def' → logprob: -11.351137161254883
    7. '
' → logprob: -11.726137161254883
    8. '    
' → logprob: -12.351137161254883
    9. '__' → logprob: -12.851137161254883
    10. '  ' → logprob: -13.851137161254883

Token 548: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.4849443838757e-06
    2. ' __' → logprob: -12.625004768371582
    3. 'def' → logprob: -14.000004768371582
    4. '.__' → logprob: -16.500003814697266
    5. '___' → logprob: -16.875003814697266
    6. '_x' → logprob: -17.875003814697266
    7. 'x' → logprob: -18.125003814697266
    8. '   ' → logprob: -18.250003814697266
    9. '@' → logprob: -18.875003814697266
    10. '#' → logprob: -19.125003814697266

Token 549: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008817598223686218
    2. 'eq' → logprob: -4.758817672729492
    3. 'neg' → logprob: -8.508817672729492
    4. 'rm' → logprob: -14.383817672729492
    5. 'flo' → logprob: -15.133817672729492
    6. 'rf' → logprob: -15.508817672729492
    7. 'pow' → logprob: -15.633817672729492
    8. 'i' → logprob: -16.758817672729492
    9. 'rand' → logprob: -17.383817672729492
    10. 'hash' → logprob: -17.633817672729492

Token 550: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -7.107425062713446e-06
    2. 'pow' → logprob: -12.500006675720215
    3. '_add' → logprob: -12.750006675720215
    4. '+' → logprob: -15.875006675720215
    5. '__' → logprob: -16.25000762939453
    6. '(add' → logprob: -16.25000762939453
    7. 'a' → logprob: -16.50000762939453
    8. 'def' → logprob: -18.00000762939453
    9. 'mul' → logprob: -18.37500762939453
    10. 'e' → logprob: -18.50000762939453

Token 551: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.048600319772958755
    2. '__' → logprob: -3.048600435256958
    3. '__(
' → logprob: -11.798600196838379
    4. '__((' → logprob: -12.673600196838379
    5. '__('' → logprob: -13.673600196838379
    6. '_' → logprob: -14.923600196838379
    7. '__(*' → logprob: -15.173600196838379
    8. '__("' → logprob: -15.673600196838379
    9. '(' → logprob: -16.173601150512695
    10. '__[' → logprob: -16.673601150512695

Token 552: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12797828018665314
    2. '(self' → logprob: -2.1279783248901367
    3. ' self' → logprob: -7.627978324890137
    4. '(' → logprob: -8.127978324890137
    5. '__(' → logprob: -9.252978324890137
    6. ' (' → logprob: -9.252978324890137
    7. ' ' → logprob: -10.877978324890137
    8. '   ' → logprob: -11.252978324890137
    9. 's' → logprob: -11.377978324890137
    10. 'def' → logprob: -11.752978324890137

Token 553: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5805355906486511
    2. '(self' → logprob: -0.8305355906486511
    3. '__(' → logprob: -5.830535411834717
    4. ',' → logprob: -7.330535411834717
    5. ' (' → logprob: -7.955535411834717
    6. 'self' → logprob: -8.455535888671875
    7. ')' → logprob: -9.330535888671875
    8. '__' → logprob: -9.580535888671875
    9. ')(' → logprob: -9.705535888671875
    10. '(
' → logprob: -9.955535888671875

Token 554: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.4055221974849701
    2. 'self' → logprob: -1.1555222272872925
    3. ' other' → logprob: -4.030522346496582
    4. ' self' → logprob: -7.280522346496582
    5. 'Other' → logprob: -10.780522346496582
    6. '(other' → logprob: -13.405522346496582
    7. ' ' → logprob: -13.780522346496582
    8. '_other' → logprob: -14.405522346496582
    9. '<|end|>' → logprob: -16.030521392822266
    10. ' Other' → logprob: -16.530521392822266

Token 555: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6930803060531616
    2. ')' → logprob: -1.5680803060531616
    3. ')(' → logprob: -1.5680803060531616
    4. 'self' → logprob: -3.318080425262451
    5. ',' → logprob: -4.568080425262451
    6. '(' → logprob: -5.068080425262451
    7. '       ' → logprob: -5.068080425262451
    8. '):
' → logprob: -5.068080425262451
    9. '):' → logprob: -5.193080425262451
    10. '   ' → logprob: -5.443080425262451

Token 556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5069593191146851
    2. '(' → logprob: -1.506959319114685
    3. '   ' → logprob: -2.1319594383239746
    4. '=' → logprob: -3.8819594383239746
    5. '    ' → logprob: -4.756959438323975
    6. '        ' → logprob: -5.131959438323975
    7. ' (' → logprob: -5.256959438323975
    8. '(self' → logprob: -5.381959438323975
    9. '(
' → logprob: -5.756959438323975
    10. '+' → logprob: -6.381959438323975

Token 557: ' """
' (ID: 7037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.628612220287323
    2. ' return' → logprob: -2.3786122798919678
    3. '   ' → logprob: -2.5036122798919678
    4. ' ' → logprob: -3.0036122798919678
    5. ':' → logprob: -3.1286122798919678
    6. ' (' → logprob: -3.2536122798919678
    7. 'def' → logprob: -3.5036122798919678
    8. '    ' → logprob: -3.6286122798919678
    9. 'return' → logprob: -3.7536122798919678
    10. '       ' → logprob: -4.378612041473389

Token 558: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0699346512556076
    2. 'self' → logprob: -3.194934606552124
    3. ' return' → logprob: -4.194934844970703
    4. ')' → logprob: -5.319934844970703
    5. '   ' → logprob: -5.694934844970703
    6. '(' → logprob: -7.069934844970703
    7. '<|end|>' → logprob: -7.319934844970703
    8. ':return' → logprob: -7.944934844970703
    9. ' self' → logprob: -8.319934844970703
    10. ' ' → logprob: -8.569934844970703

Token 559: ' S' (ID: 336)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03126729279756546
    2. 'def' → logprob: -4.406267166137695
    3. ' return' → logprob: -4.656267166137695
    4. '<|end|>' → logprob: -5.281267166137695
    5. '+' → logprob: -6.406267166137695
    6. '#' → logprob: -6.781267166137695
    7. '__' → logprob: -8.281267166137695
    8. '   ' → logprob: -8.781267166137695
    9. 'self' → logprob: -9.031267166137695
    10. '```' → logprob: -9.781267166137695

Token 560: 'urcharge' (ID: 162326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8646581172943115
    2. '=' → logprob: -0.8646581172943115
    3. ')' → logprob: -2.7396581172943115
    4. '<|end|>' → logprob: -3.8646581172943115
    5. '.' → logprob: -4.114658355712891
    6. 'def' → logprob: -4.489658355712891
    7. ' ' → logprob: -4.614658355712891
    8. 'return' → logprob: -4.614658355712891
    9. '_' → logprob: -5.364658355712891
    10. '>' → logprob: -5.989658355712891

Token 561: ' réfléch' (ID: 107126)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1868084818124771
    2. '(' → logprob: -2.1868085861206055
    3. '(self' → logprob: -3.8118085861206055
    4. '=self' → logprob: -4.6868085861206055
    5. 'self' → logprob: -4.9368085861206055
    6. '<|end|>' → logprob: -5.4368085861206055
    7. '=(' → logprob: -6.1868085861206055
    8. ' (' → logprob: -6.8118085861206055
    9. '+=' → logprob: -6.8118085861206055
    10. '__(' → logprob: -6.8118085861206055

Token 562: 'ie' (ID: 396)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23190711438655853
    2. '__' → logprob: -1.6069071292877197
    3. ')' → logprob: -7.356906890869141
    4. '   ' → logprob: -7.356906890869141
    5. ' def' → logprob: -7.606906890869141
    6. 'efined' → logprob: -7.606906890869141
    7. '__((' → logprob: -7.856906890869141
    8. '_def' → logprob: -8.48190689086914
    9. 'es' → logprob: -8.60690689086914
    10. '=' → logprob: -8.60690689086914

Token 563: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028449829667806625
    2. '<|end|>' → logprob: -4.653450012207031
    3. '(
' → logprob: -5.278450012207031
    4. '(self' → logprob: -5.528450012207031
    5. ' (' → logprob: -5.528450012207031
    6. '=' → logprob: -6.403450012207031
    7. ')' → logprob: -6.653450012207031
    8. 'def' → logprob: -8.028450012207031
    9. '   ' → logprob: -8.028450012207031
    10. 'self' → logprob: -8.153450012207031

Token 564: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4088004529476166
    2. 'addition' → logprob: -2.5338003635406494
    3. ' addition' → logprob: -2.6588003635406494
    4. '__' → logprob: -2.6588003635406494
    5. 'self' → logprob: -3.0338003635406494
    6. 'add' → logprob: -3.7838003635406494
    7. '<|end|>' → logprob: -4.2838006019592285
    8. ' self' → logprob: -4.4088006019592285
    9. ' +' → logprob: -5.5338006019592285
    10. '_add' → logprob: -5.6588006019592285

Token 565: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23115111887454987
    2. '(self' → logprob: -2.1061511039733887
    3. ' (' → logprob: -2.8561511039733887
    4. 'self' → logprob: -4.731151103973389
    5. '   ' → logprob: -5.106151103973389
    6. ' self' → logprob: -5.481151103973389
    7. ',' → logprob: -5.981151103973389
    8. '(
' → logprob: -6.731151103973389
    9. '<|end|>' → logprob: -7.356151103973389
    10. '    ' → logprob: -7.481151103973389

Token 566: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2871636152267456
    2. ' return' → logprob: -1.2871636152267456
    3. '       ' → logprob: -1.4121636152267456
    4. '    ' → logprob: -2.662163734436035
    5. 'return' → logprob: -3.162163734436035
    6. ')' → logprob: -4.537163734436035
    7. '=' → logprob: -4.537163734436035
    8. 'def' → logprob: -4.537163734436035
    9. '        ' → logprob: -4.912163734436035
    10. '(' → logprob: -4.912163734436035

Token 567: ' """
' (ID: 7037)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31358516216278076
    2. 'return' → logprob: -1.8135851621627808
    3. '       ' → logprob: -2.8135852813720703
    4. '   ' → logprob: -3.4385852813720703
    5. ':return' → logprob: -5.68858528137207
    6. 'def' → logprob: -5.93858528137207
    7. '<|end|>' → logprob: -6.06358528137207
    8. ')' → logprob: -6.81358528137207
    9. '```' → logprob: -7.31358528137207
    10. '    ' → logprob: -7.43858528137207

Token 568: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.27722662687301636
    2. '+' → logprob: -1.5272266864776611
    3. ' return' → logprob: -4.277226448059082
    4. '(' → logprob: -5.527226448059082
    5. '   ' → logprob: -6.277226448059082
    6. ')' → logprob: -6.527226448059082
    7. 'def' → logprob: -7.527226448059082
    8. '=' → logprob: -7.527226448059082
    9. ':return' → logprob: -7.527226448059082
    10. 'self' → logprob: -8.277226448059082

Token 569: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0022196033969521523
    2. ' return' → logprob: -6.1272196769714355
    3. 'ret' → logprob: -11.627219200134277
    4. ':return' → logprob: -12.377219200134277
    5. '{return' → logprob: -12.627219200134277
    6. '#' → logprob: -12.877219200134277
    7. '   ' → logprob: -13.002219200134277
    8. 'self' → logprob: -13.127219200134277
    9. 'def' → logprob: -13.252219200134277
    10. '+' → logprob: -13.627219200134277

Token 570: ' Mod' (ID: 7191)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003360582049936056
    2. ' self' → logprob: -8.000335693359375
    3. 'Mod' → logprob: -15.000335693359375
    4. '(self' → logprob: -15.750335693359375
    5. '   ' → logprob: -17.875335693359375
    6. '	self' → logprob: -18.250335693359375
    7. '__' → logprob: -19.000335693359375
    8. '       ' → logprob: -19.250335693359375
    9. 'Self' → logprob: -21.125335693359375
    10. '[self' → logprob: -21.250335693359375

Token 571: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.512236498361744e-07
    2. 'int' → logprob: -14.750000953674316
    3. '_int' → logprob: -16.625
    4. 'In' → logprob: -17.75
    5. '_Int' → logprob: -18.125
    6. 'self' → logprob: -18.375
    7. 'It' → logprob: -19.125
    8. 'Ints' → logprob: -19.75
    9. '	Int' → logprob: -19.75
    10. 'Integer' → logprob: -20.25

Token 572: '(other' (ID: 32550)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07890862971544266
    2. '(other' → logprob: -2.578908681869507
    3. '(' → logprob: -11.328908920288086
    4. 'other' → logprob: -12.453908920288086
    5. 'self' → logprob: -13.078908920288086
    6. ' other' → logprob: -14.703908920288086
    7. '(__' → logprob: -16.078908920288086
    8. 'Other' → logprob: -16.203908920288086
    9. '((' → logprob: -16.953908920288086
    10. '(op' → logprob: -17.078908920288086

Token 573: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1830771416425705
    2. ')' → logprob: -1.933077096939087
    3. ' +' → logprob: -3.933077096939087
    4. '+self' → logprob: -6.308077335357666
    5. ')+' → logprob: -6.808077335357666
    6. '+)' → logprob: -9.558076858520508
    7. '   ' → logprob: -12.933076858520508
    8. '+x' → logprob: -12.933076858520508
    9. '+
' → logprob: -13.308076858520508
    10. '+y' → logprob: -13.308076858520508

Token 574: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.165027217415627e-05
    2. ' self' → logprob: -10.750021934509277
    3. '(self' → logprob: -16.75002098083496
    4. '[self' → logprob: -18.50002098083496
    5. '	self' → logprob: -19.00002098083496
    6. '       ' → logprob: -19.75002098083496
    7. '   ' → logprob: -20.37502098083496
    8. '
' → logprob: -21.12502098083496
    9. '=self' → logprob: -21.12502098083496
    10. 'Self' → logprob: -21.50002098083496

Token 575: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.048595886677503586
    2. '.' → logprob: -3.048595905303955
    3. ' .' → logprob: -12.048595428466797
    4. ').' → logprob: -13.548595428466797
    5. '._' → logprob: -14.173595428466797
    6. '.__' → logprob: -15.548595428466797
    7. ')' → logprob: -15.673595428466797
    8. 'self' → logprob: -16.548595428466797
    9. '`.' → logprob: -16.923595428466797
    10. 'x' → logprob: -17.298595428466797

Token 576: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. '<|end|>' → logprob: -13.25000286102295
    3. ')
' → logprob: -14.50000286102295
    4. ' )' → logprob: -15.37500286102295
    5. ')return' → logprob: -17.125001907348633
    6. '<|end|>' → logprob: -17.375001907348633
    7. ')

' → logprob: -18.000001907348633
    8. ')}' → logprob: -18.250001907348633
    9. '),' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.750001907348633

Token 577: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 578: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11066137999296188
    2. 'def' (adapté à ' def') → logprob: -2.735661268234253
    3. ')' → logprob: -4.610661506652832
    4. '<|end|>' → logprob: -4.860661506652832
    5. ' def' → logprob: -5.360661506652832
    6. ' ' → logprob: -5.485661506652832
    7. '```' → logprob: -5.610661506652832
    8. '
' → logprob: -5.610661506652832
    9. '_' → logprob: -5.985661506652832
    10. '  ' → logprob: -6.860661506652832

Token 579: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005639957962557673
    2. ' __' → logprob: -7.500564098358154
    3. 'def' → logprob: -11.875563621520996
    4. 'r' → logprob: -12.750563621520996
    5. '.__' → logprob: -14.125563621520996
    6. ' def' → logprob: -15.875563621520996
    7. '   ' → logprob: -16.000564575195312
    8. ' ' → logprob: -16.500564575195312
    9. '___' → logprob: -16.750564575195312
    10. '_r' → logprob: -17.125564575195312

Token 580: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003386806638445705
    2. 'rm' → logprob: -8.000338554382324
    3. 'sub' → logprob: -12.750338554382324
    4. 'repr' → logprob: -16.25033950805664
    5. 'mul' → logprob: -16.87533950805664
    6. 'rand' → logprob: -17.50033950805664
    7. 'str' → logprob: -17.50033950805664
    8. 'rs' → logprob: -17.75033950805664
    9. 'rf' → logprob: -18.75033950805664
    10. 'rr' → logprob: -20.12533950805664

Token 581: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.000933017407078296
    2. 'add' → logprob: -7.0009331703186035
    3. 'mul' → logprob: -10.750932693481445
    4. '_sub' → logprob: -16.000932693481445
    5. 'pow' → logprob: -17.375932693481445
    6. 'r' → logprob: -17.500932693481445
    7. 'Sub' → logprob: -18.125932693481445
    8. ' sub' → logprob: -18.500932693481445
    9. '(sub' → logprob: -18.625932693481445
    10. '__' → logprob: -18.750932693481445

Token 582: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.016303911805152893
    2. '__' → logprob: -4.141304016113281
    3. '__((' → logprob: -9.016304016113281
    4. '(' → logprob: -9.641304016113281
    5. '__(
' → logprob: -9.891304016113281
    6. '__('' → logprob: -10.766304016113281
    7. '__(*' → logprob: -11.891304016113281
    8. '__("' → logprob: -13.266304016113281
    9. '(self' → logprob: -13.391304016113281
    10. '__[' → logprob: -14.891304016113281

Token 583: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.149051427608356e-05
    2. '(self' → logprob: -10.125081062316895
    3. 'other' → logprob: -10.750081062316895
    4. ' self' → logprob: -11.000081062316895
    5. '(' → logprob: -13.750081062316895
    6. 'def' → logprob: -13.750081062316895
    7. '   ' → logprob: -15.250081062316895
    8. '       ' → logprob: -15.875081062316895
    9. ')' → logprob: -15.875081062316895
    10. '[' → logprob: -16.25008201599121

Token 584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7650400400161743
    2. '__(' → logprob: -0.8900400400161743
    3. '(' → logprob: -2.2650399208068848
    4. '(self' → logprob: -4.390039920806885
    5. '__' → logprob: -5.390039920806885
    6. '__(
' → logprob: -6.890039920806885
    7. '__,' → logprob: -7.140039920806885
    8. 'self' → logprob: -7.265039920806885
    9. ' (' → logprob: -8.765040397644043
    10. '__((' → logprob: -8.890040397644043

Token 585: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.001639354508370161
    2. ' other' → logprob: -6.501639366149902
    3. 'self' → logprob: -9.001639366149902
    4. 'Other' → logprob: -11.251639366149902
    5. '(other' → logprob: -14.251639366149902
    6. '<|end|>' → logprob: -16.751638412475586
    7. '_other' → logprob: -17.001638412475586
    8. '.other' → logprob: -17.626638412475586
    9. ' ' → logprob: -18.001638412475586
    10. 'def' → logprob: -18.251638412475586

Token 586: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.381058931350708
    2. '):
' → logprob: -2.131058931350708
    3. ')(
' → logprob: -2.131058931350708
    4. ')(' → logprob: -3.256058931350708
    5. '<|end|>' → logprob: -4.381058692932129
    6. '(' → logprob: -5.006058692932129
    7. '):' → logprob: -5.881058692932129
    8. ')>
' → logprob: -6.006058692932129
    9. ',' → logprob: -6.006058692932129
    10. '(self' → logprob: -6.381058692932129

Token 587: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5259158611297607
    2. '       ' → logprob: -1.2759158611297607
    3. '   ' → logprob: -2.6509158611297607
    4. '(
' → logprob: -2.9009158611297607
    5. ' (' → logprob: -7.15091609954834
    6. ')' → logprob: -7.65091609954834
    7. ',' → logprob: -7.90091609954834
    8. '<|end|>' → logprob: -8.27591609954834
    9. ' return' → logprob: -8.40091609954834
    10. '    ' → logprob: -8.52591609954834

Token 588: ' """
' (ID: 7037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24472105503082275
    2. '(
' → logprob: -2.619720935821533
    3. '   ' → logprob: -2.869720935821533
    4. 'return' → logprob: -2.994720935821533
    5. '       ' → logprob: -3.994720935821533
    6. ' return' → logprob: -4.994720935821533
    7. '(Mod' → logprob: -4.994720935821533
    8. ' (' → logprob: -6.994720935821533
    9. '<|end|>' → logprob: -7.619720935821533
    10. '(self' → logprob: -7.744720935821533

Token 589: '       ' (ID: 309)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.2099689543247223
    2. 'return' → logprob: -1.9599689245224
    3. '       ' → logprob: -3.5849690437316895
    4. '   ' → logprob: -4.8349690437316895
    5. ' return' → logprob: -4.9599690437316895
    6. '(Mod' → logprob: -5.3349690437316895
    7. 'Return' → logprob: -7.8349690437316895
    8. ' Mod' → logprob: -8.209968566894531
    9. '(' → logprob: -9.459968566894531
    10. ':return' → logprob: -9.959968566894531

Token 590: ' S' (ID: 336)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0035014767199754715
    2. 'return' → logprob: -5.7535014152526855
    3. ' Mod' → logprob: -8.753501892089844
    4. ' return' → logprob: -9.128501892089844
    5. '(Mod' → logprob: -10.003501892089844
    6. 'Return' → logprob: -12.253501892089844
    7. 'mod' → logprob: -12.628501892089844
    8. '_mod' → logprob: -13.503501892089844
    9. 'Modulo' → logprob: -14.003501892089844
    10. 'Mo' → logprob: -14.628501892089844

Token 591: 'urcharge' (ID: 162326)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22779476642608643
    2. 'eturn' → logprob: -1.7277947664260864
    3. ' return' → logprob: -4.727794647216797
    4. '.return' → logprob: -4.977794647216797
    5. 'ub' → logprob: -5.977794647216797
    6. 'def' → logprob: -5.977794647216797
    7. 'Return' → logprob: -7.227794647216797
    8. ':return' → logprob: -7.352794647216797
    9. '=' → logprob: -7.602794647216797
    10. '"""
' → logprob: -7.977794647216797

Token 592: ' réfléch' (ID: 107126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7614727020263672
    2. '(' → logprob: -1.2614727020263672
    3. '(Mod' → logprob: -2.261472702026367
    4. '(
' → logprob: -3.136472702026367
    5. ' réfléch' → logprob: -3.636472702026367
    6. '   ' → logprob: -4.011472702026367
    7. ' (' → logprob: -4.761472702026367
    8. ' réfl' → logprob: -5.011472702026367
    9. 'for' → logprob: -5.011472702026367
    10. 'Reflect' → logprob: -5.136472702026367

Token 593: 'ie' (ID: 396)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.02796133980154991
    2. 'ected' → logprob: -4.777961254119873
    3. 'ied' → logprob: -4.902961254119873
    4. 'ieved' → logprob: -6.152961254119873
    5. 'érée' → logprob: -6.152961254119873
    6. 'é' → logprob: -6.152961254119873
    7. 'ed' → logprob: -6.277961254119873
    8. 'éd' → logprob: -7.652961254119873
    9. 'ivée' → logprob: -7.652961254119873
    10. 'ited' → logprob: -7.777961254119873

Token 594: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7880181670188904
    2. 'for' → logprob: -0.7880181670188904
    3. '(Mod' → logprob: -2.788018226623535
    4. ' for' → logprob: -3.663018226623535
    5. 'def' → logprob: -6.538018226623535
    6. '(self' → logprob: -7.163018226623535
    7. 'For' → logprob: -8.663018226623535
    8. ' (' → logprob: -8.788018226623535
    9. 'Mod' → logprob: -9.163018226623535
    10. '(
' → logprob: -9.163018226623535

Token 595: ' -' (ID: 533)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.026806436479091644
    2. '(Mod' → logprob: -3.776806354522705
    3. ' Mod' → logprob: -5.651806354522705
    4. '(' → logprob: -10.276806831359863
    5. '_mod' → logprob: -12.401806831359863
    6. '(
' → logprob: -13.401806831359863
    7. 'Modulo' → logprob: -14.401806831359863
    8. '(-' → logprob: -14.776806831359863
    9. ' (' → logprob: -14.776806831359863
    10. '_Mod' → logprob: -15.026806831359863

Token 596: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3574389219284058
    2. ')' → logprob: -1.3574389219284058
    3. '       ' → logprob: -2.1074390411376953
    4. '(
' → logprob: -2.1074390411376953
    5. '   ' → logprob: -2.6074390411376953
    6. ' (' → logprob: -3.1074390411376953
    7. ':
' → logprob: -3.3574390411376953
    8. ',' → logprob: -3.6074390411376953
    9. '<|end|>' → logprob: -4.232439041137695
    10. '):
' → logprob: -4.482439041137695

Token 597: '       ' (ID: 309)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.4226760268211365
    2. '(Mod' → logprob: -1.2976760864257812
    3. '(' → logprob: -3.1726760864257812
    4. '(
' → logprob: -3.9226760864257812
    5. 'return' → logprob: -4.672676086425781
    6. ' return' → logprob: -8.422676086425781
    7. ' Mod' → logprob: -8.672676086425781
    8. 'Return' → logprob: -10.047676086425781
    9. '   ' → logprob: -11.047676086425781
    10. '(return' → logprob: -11.422676086425781

Token 598: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008675076998770237
    2. ' return' → logprob: -4.7586750984191895
    3. 'Mod' → logprob: -9.883674621582031
    4. 'Return' → logprob: -11.758674621582031
    5. '       ' → logprob: -14.633674621582031
    6. '   ' → logprob: -15.508674621582031
    7. '```' → logprob: -15.633674621582031
    8. ':return' → logprob: -15.633674621582031
    9. ')return' → logprob: -15.883674621582031
    10. '(Mod' → logprob: -15.883674621582031

Token 599: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6235236525535583
    2. '(Mod' → logprob: -1.3735237121582031
    3. 'Mod' → logprob: -1.6235237121582031
    4. 'return' → logprob: -4.748523712158203
    5. '(
' → logprob: -5.373523712158203
    6. ' Mod' → logprob: -10.123523712158203
    7. ' return' → logprob: -10.123523712158203
    8. 'Return' → logprob: -10.123523712158203
    9. '(return' → logprob: -10.248523712158203
    10. '=' → logprob: -10.873523712158203

Token 600: ' return' (ID: 622)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0800226554274559
    2. 'return' (adapté à ' return') → logprob: -2.5800225734710693
    3. '(Mod' → logprob: -6.830022811889648
    4. ' return' → logprob: -10.455022811889648
    5. ' Mod' → logprob: -11.455022811889648
    6. 'Return' → logprob: -11.830022811889648
    7. '(' → logprob: -12.830022811889648
    8. ':return' → logprob: -14.830022811889648
    9. '_mod' → logprob: -14.955022811889648
    10. '(return' → logprob: -15.455022811889648

Token 601: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00015872348740231246
    2. ' Mod' → logprob: -8.750158309936523
    3. '(Mod' → logprob: -15.375158309936523
    4. '   ' → logprob: -18.375158309936523
    5. 'Mo' → logprob: -18.625158309936523
    6. 'mod' → logprob: -19.000158309936523
    7. '_mod' → logprob: -19.500158309936523
    8. '_Mod' → logprob: -20.125158309936523
    9. 'Modulo' → logprob: -20.375158309936523
    10. 'MOD' → logprob: -21.125158309936523

Token 602: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.9361264946837764e-07
    2. 'int' → logprob: -16.625
    3. '(Int' → logprob: -19.25
    4. ' Int' → logprob: -19.375
    5. 'In' → logprob: -20.375
    6. '_Int' → logprob: -21.625
    7. 'Ints' → logprob: -21.875
    8. '	Int' → logprob: -22.0
    9. '_int' → logprob: -22.125
    10. 'Mod' → logprob: -22.375

Token 603: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -3.054500666621607e-06
    2. 'other' → logprob: -12.75000286102295
    3. ' other' → logprob: -17.000003814697266
    4. '(' → logprob: -17.000003814697266
    5. ' (' → logprob: -18.750003814697266
    6. 'Other' → logprob: -19.625003814697266
    7. '((' → logprob: -20.375003814697266
    8. '(self' → logprob: -20.500003814697266
    9. '(object' → logprob: -21.125003814697266
    10. '.other' → logprob: -21.250003814697266

Token 604: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25192990899086
    2. '-' → logprob: -1.5019298791885376
    3. ' ' → logprob: -15.001930236816406
    4. ')' → logprob: -15.376930236816406
    5. ' ' → logprob: -15.751930236816406
    6. '-self' → logprob: -16.376930236816406
    7. '[' → logprob: -18.376930236816406
    8. ' -
' → logprob: -18.751930236816406
    9. '−' → logprob: -19.376930236816406
    10. 'self' → logprob: -19.501930236816406

Token 605: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015024791937321424
    2. ' self' → logprob: -6.501502513885498
    3. '(self' → logprob: -16.126502990722656
    4. '       ' → logprob: -18.251502990722656
    5. '
' → logprob: -18.376502990722656
    6. '[self' → logprob: -18.751502990722656
    7. '	self' → logprob: -19.876502990722656
    8. ' ' → logprob: -20.376502990722656
    9. '=self' → logprob: -20.626502990722656
    10. '   ' → logprob: -20.876502990722656

Token 606: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0042549311183393
    2. '.' → logprob: -5.5042548179626465
    3. 'self' → logprob: -8.754255294799805
    4. ' .' → logprob: -11.254255294799805
    5. ' self' → logprob: -12.379255294799805
    6. 'x' → logprob: -13.879255294799805
    7. '<|end|>' → logprob: -15.629255294799805
    8. '.self' → logprob: -16.129255294799805
    9. ').' → logprob: -16.254255294799805
    10. ' x' → logprob: -16.629255294799805

Token 607: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')return' → logprob: -17.5
    3. ')
' → logprob: -17.75
    4. '<|end|>' → logprob: -18.0
    5. ' )' → logprob: -18.25
    6. ')#' → logprob: -19.25
    7. ')}' → logprob: -20.375
    8. '   ' → logprob: -20.75
    9. ')`' → logprob: -21.0
    10. '}' → logprob: -21.125

Token 608: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04408419877290726
    2. 'def' → logprob: -3.294084310531616
    3. '<|end|>' → logprob: -5.794084072113037
    4. ' def' → logprob: -6.044084072113037
    5. ')' → logprob: -7.669084072113037
    6. '```' → logprob: -9.919084548950195
    7. '    
' → logprob: -10.919084548950195
    8. '<|end|>' → logprob: -11.169084548950195
    9. '	def' → logprob: -11.419084548950195
    10. ' ' → logprob: -11.419084548950195

Token 609: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02736555226147175
    2. '<|end|>' → logprob: -3.7773654460906982
    3. '   ' → logprob: -6.027365684509277
    4. '}' → logprob: -8.152365684509277
    5. '*' → logprob: -8.152365684509277
    6. 'def' (adapté à ' def') → logprob: -8.527365684509277
    7. '```' → logprob: -8.777365684509277
    8. ' ' → logprob: -8.777365684509277
    9. '(' → logprob: -9.152365684509277
    10. '#' → logprob: -9.277365684509277

Token 610: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.968312951968983e-06
    2. ' __' → logprob: -11.625009536743164
    3. '.__' → logprob: -14.375009536743164
    4. 'r' → logprob: -14.875009536743164
    5. 'def' → logprob: -18.250009536743164
    6. '___' → logprob: -18.875009536743164
    7. '**' → logprob: -19.250009536743164
    8. 'rm' → logprob: -19.500009536743164
    9. '_r' → logprob: -19.875009536743164
    10. '@' → logprob: -20.625009536743164

Token 611: 'rm' (ID: 21373)
  Prédit: 'rm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -7.505351095460355e-05
    2. 'r' → logprob: -9.750075340270996
    3. 'mul' → logprob: -11.000075340270996
    4. 'neg' → logprob: -17.12507438659668
    5. 'repr' → logprob: -18.00007438659668
    6. 'pow' → logprob: -19.00007438659668
    7. 'rf' → logprob: -19.00007438659668
    8. 'rx' → logprob: -19.25007438659668
    9. ' rm' → logprob: -20.37507438659668
    10. 'rum' → logprob: -20.50007438659668

Token 612: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.5048530030981055e-06
    2. 'ult' → logprob: -13.500001907348633
    3. 'mul' → logprob: -18.125001907348633
    4. 'at' → logprob: -20.375001907348633
    5. 'ulit' → logprob: -20.375001907348633
    6. 'u' → logprob: -20.500001907348633
    7. 'ull' → logprob: -20.875001907348633
    8. 'ulp' → logprob: -21.500001907348633
    9. 'uls' → logprob: -21.750001907348633
    10. 'od' → logprob: -22.125001907348633

Token 613: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007135047344490886
    2. '__' → logprob: -7.250713348388672
    3. '__(
' → logprob: -12.875713348388672
    4. '(' → logprob: -15.125713348388672
    5. '__('' → logprob: -15.125713348388672
    6. '__((' → logprob: -15.375713348388672
    7. '(self' → logprob: -15.875713348388672
    8. '__[' → logprob: -15.875713348388672
    9. '__(*' → logprob: -17.000713348388672
    10. '__("' → logprob: -18.125713348388672

Token 614: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00034702493576332927
    2. '(self' → logprob: -8.000347137451172
    3. 'def' → logprob: -11.750347137451172
    4. 'other' → logprob: -12.875347137451172
    5. ' self' → logprob: -13.875347137451172
    6. '(' → logprob: -16.875347137451172
    7. '   ' → logprob: -16.875347137451172
    8. 's' → logprob: -17.750347137451172
    9. '	self' → logprob: -18.125347137451172
    10. 'return' → logprob: -18.875347137451172

Token 615: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02507893368601799
    2. '(self' → logprob: -3.7750790119171143
    3. '__' → logprob: -6.525078773498535
    4. '(' → logprob: -8.025078773498535
    5. 'self' → logprob: -10.275078773498535
    6. '__(
' → logprob: -13.900078773498535
    7. '__,' → logprob: -13.900078773498535
    8. '_(' → logprob: -14.150078773498535
    9. ' (' → logprob: -15.275078773498535
    10. '__((' → logprob: -15.525078773498535

Token 616: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00016086915275081992
    2. ' other' → logprob: -8.750161170959473
    3. 'self' → logprob: -13.000161170959473
    4. 'Other' → logprob: -15.875161170959473
    5. '(other' → logprob: -17.250160217285156
    6. '_other' → logprob: -18.875160217285156
    7. '.other' → logprob: -19.750160217285156
    8. ' self' → logprob: -22.375160217285156
    9. 'OTHER' → logprob: -22.500160217285156
    10. '其他' → logprob: -22.875160217285156

Token 617: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.39680027961730957
    2. ',' → logprob: -1.7718002796173096
    3. 'self' → logprob: -1.8968002796173096
    4. '       ' → logprob: -5.3968000411987305
    5. '   ' → logprob: -6.5218000411987305
    6. '):
' → logprob: -8.52180004119873
    7. ')' → logprob: -8.52180004119873
    8. ')(' → logprob: -8.52180004119873
    9. ' self' → logprob: -8.77180004119873
    10. ' (' → logprob: -8.89680004119873

Token 618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7738685011863708
    2. '   ' → logprob: -1.7738685607910156
    3. '(self' → logprob: -1.7738685607910156
    4. '(' → logprob: -2.0238685607910156
    5. '(
' → logprob: -3.2738685607910156
    6. 'return' → logprob: -4.148868560791016
    7. 'self' → logprob: -4.773868560791016
    8. ' return' → logprob: -5.898868560791016
    9. ' (' → logprob: -6.773868560791016
    10. 'def' → logprob: -7.898868560791016

Token 619: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.34506988525390625
    2. '       ' → logprob: -1.7200698852539062
    3. ' return' → logprob: -2.7200698852539062
    4. 'def' → logprob: -3.8450698852539062
    5. '   ' → logprob: -4.220069885253906
    6. '(' → logprob: -4.720069885253906
    7. '(self' → logprob: -7.345069885253906
    8. 'self' → logprob: -8.095069885253906
    9. '(
' → logprob: -8.095069885253906
    10. ' def' → logprob: -9.220069885253906

Token 620: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4547021687030792
    2. 'return' → logprob: -1.0797021389007568
    3. 'Mod' → logprob: -4.204702377319336
    4. 'def' → logprob: -4.704702377319336
    5. ' return' → logprob: -6.579702377319336
    6. 'self' → logprob: -8.954702377319336
    7. '   ' → logprob: -9.704702377319336
    8. 'Return' → logprob: -10.204702377319336
    9. ')' → logprob: -11.454702377319336
    10. ' Mod' → logprob: -11.454702377319336

Token 621: ' S' (ID: 336)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010331686353310943
    2. '       ' → logprob: -7.001033306121826
    3. ' return' → logprob: -9.251032829284668
    4. '```' → logprob: -11.751032829284668
    5. '   ' → logprob: -11.876032829284668
    6. 'Return' → logprob: -12.376032829284668
    7. '
' → logprob: -13.001032829284668
    8. 'def' → logprob: -13.251032829284668
    9. '	return' → logprob: -14.501032829284668
    10. ':return' → logprob: -14.751032829284668

Token 622: 'urcharge' (ID: 162326)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.6698811054229736
    2. 'return' → logprob: -0.7948811054229736
    3. 'def' → logprob: -4.1698808670043945
    4. 'Mod' → logprob: -4.5448808670043945
    5. 'elf' → logprob: -5.5448808670043945
    6. ' return' → logprob: -6.4198808670043945
    7. '   ' → logprob: -6.9198808670043945
    8. 'e' → logprob: -7.6698808670043945
    9. 'ef' → logprob: -7.7948808670043945
    10. '       ' → logprob: -7.9198808670043945

Token 623: ' réfléch' (ID: 107126)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.4034349322319031
    2. ' réfléch' → logprob: -1.1534349918365479
    3. ' réflex' → logprob: -5.153434753417969
    4. ' réfl' → logprob: -5.278434753417969
    5. 'reflect' → logprob: -5.903434753417969
    6. 'ref' → logprob: -6.653434753417969
    7. '_ref' → logprob: -8.403434753417969
    8. 'r' → logprob: -8.528434753417969
    9. '   ' → logprob: -8.528434753417969
    10. 'for' → logprob: -8.653434753417969

Token 624: 'ie' (ID: 396)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.003385883988812566
    2. 'ie' → logprob: -5.7533860206604
    3. 'ied' → logprob: -9.253385543823242
    4. 'e' → logprob: -10.253385543823242
    5. 'é' → logprob: -11.003385543823242
    6. 'ierte' → logprob: -11.378385543823242
    7. 'ed' → logprob: -11.378385543823242
    8. 'i' → logprob: -11.503385543823242
    9. 'ivée' → logprob: -12.003385543823242
    10. 'ifiée' → logprob: -12.878385543823242

Token 625: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5778084993362427
    2. 'for' → logprob: -1.2028084993362427
    3. ' pour' → logprob: -2.577808380126953
    4. '       ' → logprob: -3.702808380126953
    5. 'pour' → logprob: -3.702808380126953
    6. '   ' → logprob: -5.077808380126953
    7. 'def' → logprob: -5.202808380126953
    8. '(self' → logprob: -7.452808380126953
    9. '(' → logprob: -8.327808380126953
    10. '```' → logprob: -8.827808380126953

Token 626: ' *' (ID: 425)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023476185277104378
    2. ' self' → logprob: -4.6484761238098145
    3. 'Mod' → logprob: -4.8984761238098145
    4. 'other' → logprob: -5.2734761238098145
    5. ' Mod' → logprob: -7.3984761238098145
    6. ' other' → logprob: -8.273476600646973
    7. '*self' → logprob: -9.398476600646973
    8. 'Mul' → logprob: -10.148476600646973
    9. '(self' → logprob: -11.148476600646973
    10. '*' → logprob: -11.148476600646973

Token 627: '.
' (ID: 558)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.024013204500079155
    2. '       ' → logprob: -4.399013042449951
    3. '(other' → logprob: -5.149013042449951
    4. 'return' → logprob: -5.774013042449951
    5. '(' → logprob: -6.524013042449951
    6. '   ' → logprob: -8.14901351928711
    7. 'self' → logprob: -8.14901351928711
    8. '(return' → logprob: -8.52401351928711
    9. ' return' → logprob: -9.27401351928711
    10. ' (' → logprob: -9.64901351928711

Token 628: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12811483442783356
    2. '       ' → logprob: -2.128114938735962
    3. ' return' → logprob: -6.753114700317383
    4. '   ' → logprob: -12.378114700317383
    5. 'Return' → logprob: -12.753114700317383
    6. '	return' → logprob: -13.003114700317383
    7. '{return' → logprob: -13.128114700317383
    8. '(return' → logprob: -13.753114700317383
    9. 'eturn' → logprob: -13.753114700317383
    10. 'def' → logprob: -13.753114700317383

Token 629: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3885631263256073
    2. '       ' → logprob: -1.1385631561279297
    3. ' return' → logprob: -6.38856315612793
    4. '   ' → logprob: -12.26356315612793
    5. '
' → logprob: -13.38856315612793
    6. '```' → logprob: -13.63856315612793
    7. '	return' → logprob: -14.01356315612793
    8. '      ' → logprob: -14.76356315612793
    9. '{return' → logprob: -15.01356315612793
    10. 'def' → logprob: -15.26356315612793

Token 630: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0017901362152770162
    2. ' return' → logprob: -6.5017900466918945
    3. '       ' → logprob: -8.376790046691895
    4. 'Mod' → logprob: -9.876790046691895
    5. 'Return' → logprob: -13.251790046691895
    6. '   ' → logprob: -13.626790046691895
    7. '	return' → logprob: -13.626790046691895
    8. '```' → logprob: -13.876790046691895
    9. '(Mod' → logprob: -15.126790046691895
    10. '{return' → logprob: -15.376790046691895

Token 631: ' return' (ID: 622)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0015429535415023565
    2. 'return' (adapté à ' return') → logprob: -6.501543045043945
    3. ' Mod' → logprob: -10.501543045043945
    4. ' return' → logprob: -11.251543045043945
    5. '(Mod' → logprob: -16.126543045043945
    6. 'mod' → logprob: -17.751543045043945
    7. '_mod' → logprob: -18.501543045043945
    8. 'MOD' → logprob: -18.876543045043945
    9. 'Return' → logprob: -19.376543045043945
    10. '   ' → logprob: -19.626543045043945

Token 632: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -3.5597102396423e-05
    2. ' Mod' → logprob: -10.250035285949707
    3. 'self' → logprob: -15.875035285949707
    4. '(Mod' → logprob: -17.500036239624023
    5. 'mod' → logprob: -17.875036239624023
    6. '   ' → logprob: -20.500036239624023
    7. '_Mod' → logprob: -20.875036239624023
    8. '_mod' → logprob: -20.875036239624023
    9. 'Modulo' → logprob: -21.125036239624023
    10. 'MOD' → logprob: -21.375036239624023

Token 633: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -7.822646693966817e-06
    2. 'int' → logprob: -11.875007629394531
    3. 'Mod' → logprob: -14.625007629394531
    4. 'In' → logprob: -16.25000762939453
    5. '(Int' → logprob: -16.37500762939453
    6. 'Ints' → logprob: -17.87500762939453
    7. '	Int' → logprob: -17.87500762939453
    8. ' Int' → logprob: -18.12500762939453
    9. '_int' → logprob: -18.37500762939453
    10. 'Ant' → logprob: -18.50000762939453

Token 634: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0004360334132798016
    2. '(self' → logprob: -7.750435829162598
    3. 'other' → logprob: -12.250435829162598
    4. '(' → logprob: -15.000435829162598
    5. 'self' → logprob: -15.500435829162598
    6. ' other' → logprob: -16.500436782836914
    7. 'Other' → logprob: -18.250436782836914
    8. '_other' → logprob: -19.625436782836914
    9. ' (' → logprob: -20.000436782836914
    10. '.other' → logprob: -20.750436782836914

Token 635: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47407880425453186
    2. ' *' → logprob: -0.9740787744522095
    3. '*self' → logprob: -13.349079132080078
    4. ' ' → logprob: -15.849079132080078
    5. '*object' → logprob: -19.599079132080078
    6. ')' → logprob: -19.724079132080078
    7. ' ' → logprob: -19.974079132080078
    8. '*
' → logprob: -20.099079132080078
    9. ' self' → logprob: -21.099079132080078
    10. '*

' → logprob: -21.099079132080078

Token 636: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002614550176076591
    2. ' self' → logprob: -8.250261306762695
    3. '(self' → logprob: -16.500261306762695
    4. '	self' → logprob: -20.125261306762695
    5. '[self' → logprob: -20.625261306762695
    6. '=self' → logprob: -21.250261306762695
    7. '
' → logprob: -21.625261306762695
    8. 's' → logprob: -22.125261306762695
    9. '*self' → logprob: -22.750261306762695
    10. '.self' → logprob: -23.000261306762695

Token 637: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -8.113290095934644e-05
    2. '.' → logprob: -10.125081062316895
    3. 'x' → logprob: -10.125081062316895
    4. 'self' → logprob: -14.500081062316895
    5. ' .' → logprob: -14.875081062316895
    6. '<|end|>' → logprob: -17.25008201599121
    7. ' x' → logprob: -18.00008201599121
    8. ' ' → logprob: -18.75008201599121
    9. '._' → logprob: -18.87508201599121
    10. '.py' → logprob: -19.25008201599121

Token 638: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -13.62500286102295
    3. ')

' → logprob: -14.25000286102295
    4. '   ' → logprob: -14.62500286102295
    5. '       ' → logprob: -16.000001907348633
    6. '<|end|>' → logprob: -16.125001907348633
    7. ')return' → logprob: -17.000001907348633
    8. ' )' → logprob: -18.500001907348633
    9. '),' → logprob: -18.750001907348633
    10. ' ' → logprob: -19.125001907348633

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09121495485305786
    2. 'def' → logprob: -2.466214895248413
    3. '```' → logprob: -6.716215133666992
    4. ' def' → logprob: -6.966215133666992
    5. '	def' → logprob: -10.091215133666992
    6. ' ' → logprob: -10.966215133666992
    7. '``' → logprob: -11.091215133666992
    8. '<|end|>' → logprob: -11.466215133666992
    9. '  ' → logprob: -11.716215133666992
    10. '>' → logprob: -11.716215133666992

Token 640: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007159211207181215
    2. '   ' → logprob: -5.257159233093262
    3. ' def' → logprob: -6.257159233093262
    4. '```' → logprob: -12.382159233093262
    5. '	def' → logprob: -12.882159233093262
    6. ' ' → logprob: -16.382158279418945
    7. '``' → logprob: -17.382158279418945
    8. '_def' → logprob: -17.632158279418945
    9. '  ' → logprob: -18.132158279418945
    10. 'Def' → logprob: -18.507158279418945

Token 641: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.572941179503687e-05
    2. ' __' → logprob: -10.000045776367188
    3. 'def' → logprob: -15.625045776367188
    4. '.__' → logprob: -16.375045776367188
    5. 'r' → logprob: -18.750045776367188
    6. 'pow' → logprob: -19.375045776367188
    7. '```' → logprob: -20.750045776367188
    8. '**' → logprob: -20.875045776367188
    9. '___' → logprob: -21.250045776367188
    10. '@' → logprob: -21.500045776367188

Token 642: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.688212614681106e-05
    2. 'rt' → logprob: -11.250017166137695
    3. 'tr' → logprob: -12.500017166137695
    4. 'rf' → logprob: -16.125017166137695
    5. '
' → logprob: -18.500017166137695
    6. 'rm' → logprob: -18.750017166137695
    7. '```' → logprob: -19.500017166137695
    8. 'rx' → logprob: -20.000017166137695
    9. 'rp' → logprob: -20.125017166137695
    10. 'rr' → logprob: -20.125017166137695

Token 643: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.0019398193107917905
    2. 'pow' → logprob: -6.25193977355957
    3. 'div' → logprob: -11.62693977355957
    4. 'r' → logprob: -13.75193977355957
    5. 'add' → logprob: -14.62693977355957
    6. 'sub' → logprob: -14.75193977355957
    7. ' tr' → logprob: -15.62693977355957
    8. '```' → logprob: -16.25193977355957
    9. 'mul' → logprob: -16.75193977355957
    10. 'true' → logprob: -16.87693977355957

Token 644: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -2.0100624169572257e-05
    2. 'u' → logprob: -11.125020027160645
    3. 'ue' → logprob: -12.625020027160645
    4. '```' → logprob: -14.500020027160645
    5. 'uedes' → logprob: -15.250020027160645
    6. 'ud' → logprob: -15.250020027160645
    7. ' ued' → logprob: -15.375020027160645
    8. 'uedo' → logprob: -16.12502098083496
    9. '
' → logprob: -16.37502098083496
    10. 'e' → logprob: -16.50002098083496

Token 645: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.000873943732585758
    2. 'div' → logprob: -7.125874042510986
    3. '__' → logprob: -10.125873565673828
    4. '/' → logprob: -11.750873565673828
    5. 'v' → logprob: -11.875873565673828
    6. '/div' → logprob: -12.000873565673828
    7. 'u' → logprob: -13.000873565673828
    8. 'def' → logprob: -13.625873565673828
    9. 'e' → logprob: -14.250873565673828
    10. 'ef' → logprob: -14.625873565673828

Token 646: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03808017447590828
    2. '__' → logprob: -3.2880802154541016
    3. '__(
' → logprob: -10.538080215454102
    4. '__((' → logprob: -12.413080215454102
    5. '__(*' → logprob: -13.038080215454102
    6. '(' → logprob: -13.163080215454102
    7. '__('' → logprob: -13.413080215454102
    8. '(self' → logprob: -13.788080215454102
    9. '__[' → logprob: -14.413080215454102
    10. '```' → logprob: -14.538080215454102

Token 647: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.749814019713085e-06
    2. ' self' → logprob: -12.625006675720215
    3. '(self' → logprob: -12.625006675720215
    4. 'def' → logprob: -17.12500762939453
    5. '   ' → logprob: -18.12500762939453
    6. '       ' → logprob: -19.12500762939453
    7. '[self' → logprob: -19.75000762939453
    8. '	self' → logprob: -19.75000762939453
    9. ')' → logprob: -20.25000762939453
    10. '
' → logprob: -20.37500762939453

Token 648: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7635865807533264
    2. '__(' → logprob: -1.2635865211486816
    3. '(self' → logprob: -1.3885865211486816
    4. '__' → logprob: -6.888586521148682
    5. '(' → logprob: -7.263586521148682
    6. ' self' → logprob: -9.51358699798584
    7. ',' → logprob: -10.26358699798584
    8. '__,' → logprob: -10.26358699798584
    9. '__(
' → logprob: -11.01358699798584
    10. 'def' → logprob: -11.63858699798584

Token 649: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019501789938658476
    2. 'other' → logprob: -6.251950263977051
    3. ' self' → logprob: -10.87695026397705
    4. ' other' → logprob: -13.50195026397705
    5. '(self' → logprob: -13.87695026397705
    6. 'Other' → logprob: -15.75195026397705
    7. 'def' → logprob: -17.376949310302734
    8. '       ' → logprob: -17.626949310302734
    9. '   ' → logprob: -17.751949310302734
    10. '	self' → logprob: -18.376949310302734

Token 650: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10990507155656815
    2. ',' → logprob: -2.3599050045013428
    3. 'self' → logprob: -4.984905242919922
    4. ')(' → logprob: -6.109905242919922
    5. ',self' → logprob: -8.484905242919922
    6. '(' → logprob: -8.734905242919922
    7. ')' → logprob: -9.109905242919922
    8. ' (' → logprob: -10.234905242919922
    9. '       ' → logprob: -10.984905242919922
    10. ' self' → logprob: -11.109905242919922

Token 651: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9413623809814453
    2. '(' → logprob: -1.0663623809814453
    3. '(
' → logprob: -1.5663623809814453
    4. '   ' → logprob: -3.6913623809814453
    5. '<|end|>' → logprob: -5.191362380981445
    6. '():
' → logprob: -5.316362380981445
    7. '```' → logprob: -6.066362380981445
    8. '``' → logprob: -6.566362380981445
    9. '():' → logprob: -6.691362380981445
    10. ')(
' → logprob: -6.816362380981445

Token 652: ' """
' (ID: 7037)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.08944167196750641
    2. '(Mod' → logprob: -2.9644417762756348
    3. 'return' → logprob: -3.4644417762756348
    4. ' return' → logprob: -6.339441776275635
    5. '       ' → logprob: -7.839441776275635
    6. ' Mod' → logprob: -8.214441299438477
    7. '(' → logprob: -9.964441299438477
    8. '   ' → logprob: -10.214441299438477
    9. 'Return' → logprob: -10.714441299438477
    10. 'mod' → logprob: -10.839441299438477

Token 653: '       ' (ID: 309)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00016265720478259027
    2. '(Mod' → logprob: -8.875163078308105
    3. ' Mod' → logprob: -10.875163078308105
    4. 'mod' → logprob: -13.000163078308105
    5. 'return' → logprob: -14.000163078308105
    6. '_mod' → logprob: -15.250163078308105
    7. '       ' → logprob: -15.500163078308105
    8. '   ' → logprob: -16.25016212463379
    9. 'Modulo' → logprob: -16.87516212463379
    10. '.Mod' → logprob: -16.87516212463379

Token 654: ' S' (ID: 336)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0001612267515156418
    2. ' return' → logprob: -9.000161170959473
    3. 'def' → logprob: -10.500161170959473
    4. '   ' → logprob: -13.000161170959473
    5. 'Mod' → logprob: -13.250161170959473
    6. '       ' → logprob: -13.375161170959473
    7. 'Return' → logprob: -13.375161170959473
    8. '```' → logprob: -13.875161170959473
    9. 'eturn' → logprob: -14.250161170959473
    10. '@return' → logprob: -14.500161170959473

Token 655: 'urcharge' (ID: 162326)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.1013658344745636
    2. 'x' → logprob: -2.476365804672241
    3. '(x' → logprob: -4.97636604309082
    4. 'def' → logprob: -5.60136604309082
    5. '_x' → logprob: -7.10136604309082
    6. 'elf' → logprob: -8.10136604309082
    7. '__' → logprob: -8.72636604309082
    8. '"""
' → logprob: -9.72636604309082
    9. '=x' → logprob: -9.85136604309082
    10. '*x' → logprob: -9.97636604309082

Token 656: ' réfléch' (ID: 107126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.669573187828064
    2. '(self' → logprob: -0.794573187828064
    3. '   ' → logprob: -3.5445733070373535
    4. '       ' → logprob: -6.1695733070373535
    5. ' réfléch' → logprob: -6.2945733070373535
    6. 'de' → logprob: -6.9195733070373535
    7. '```' → logprob: -7.0445733070373535
    8. 'ré' → logprob: -7.5445733070373535
    9. 'self' → logprob: -7.6695733070373535
    10. ' réfl' → logprob: -8.544572830200195

Token 657: 'ie' (ID: 396)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.31937482953071594
    2. 'u' → logprob: -1.9443747997283936
    3. '__' → logprob: -3.1943747997283936
    4. 'ued' → logprob: -3.3193747997283936
    5. 'def' → logprob: -4.444375038146973
    6. 'iv' → logprob: -4.444375038146973
    7. 'Div' → logprob: -5.069375038146973
    8. 'ue' → logprob: -5.194375038146973
    9. '_div' → logprob: -5.694375038146973
    10. 'ited' → logprob: -5.819375038146973

Token 658: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4347226917743683
    2. '(self' → logprob: -1.309722661972046
    3. 'for' → logprob: -3.059722661972046
    4. '(' → logprob: -3.434722661972046
    5. '   ' → logprob: -6.309722900390625
    6. '       ' → logprob: -7.684722900390625
    7. ' for' → logprob: -7.934722900390625
    8. 'self' → logprob: -7.934722900390625
    9. '(
' → logprob: -8.809722900390625
    10. ')' → logprob: -9.684722900390625

Token 659: ' /' (ID: 820)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.6671863198280334
    2. 'self' → logprob: -0.7921863198280334
    3. 'other' → logprob: -3.9171862602233887
    4. '(Mod' → logprob: -4.917186260223389
    5. '(self' → logprob: -5.667186260223389
    6. 'def' → logprob: -6.167186260223389
    7. '(other' → logprob: -8.417186737060547
    8. ' Mod' → logprob: -8.417186737060547
    9. '__' → logprob: -8.667186737060547
    10. ' self' → logprob: -8.917186737060547

Token 660: '.
' (ID: 558)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002052120165899396
    2. 'def' → logprob: -6.877052307128906
    3. 'self' → logprob: -7.502052307128906
    4. '(' → logprob: -8.002052307128906
    5. ' (' → logprob: -10.127052307128906
    6. 'return' → logprob: -10.377052307128906
    7. '       ' → logprob: -11.002052307128906
    8. '(
' → logprob: -11.252052307128906
    9. '   ' → logprob: -11.502052307128906
    10. '
' → logprob: -11.752052307128906

Token 661: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3511754274368286
    2. 'return' → logprob: -1.7261754274368286
    3. '(
' → logprob: -2.476175308227539
    4. '       ' → logprob: -4.101175308227539
    5. '   ' → logprob: -4.226175308227539
    6. ' return' → logprob: -7.226175308227539
    7. 'def' → logprob: -7.226175308227539
    8. '(return' → logprob: -7.601175308227539
    9. ')' → logprob: -7.976175308227539
    10. '```' → logprob: -9.101175308227539

Token 662: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.035547032952308655
    2. ' return' → logprob: -3.7855470180511475
    3. '       ' → logprob: -4.410547256469727
    4. '   ' → logprob: -10.160547256469727
    5. '```' → logprob: -11.410547256469727
    6. '	return' → logprob: -12.035547256469727
    7. '{return' → logprob: -12.035547256469727
    8. '``' → logprob: -12.660547256469727
    9. '(return' → logprob: -12.785547256469727
    10. '"""
' (adapté à ' """
') → logprob: -13.285547256469727

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7711582779884338
    2. 'return' → logprob: -0.7711582779884338
    3. ' return' → logprob: -2.646158218383789
    4. '   ' → logprob: -5.646158218383789
    5. '(return' → logprob: -8.396158218383789
    6. '(' → logprob: -9.396158218383789
    7. '	return' → logprob: -9.771158218383789
    8. '           ' → logprob: -9.896158218383789
    9. '(
' → logprob: -10.146158218383789
    10. '{return' → logprob: -10.521158218383789

Token 664: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00038134094211272895
    2. ' return' → logprob: -8.000381469726562
    3. 'Mod' → logprob: -10.000381469726562
    4. '       ' → logprob: -15.750381469726562
    5. 'mod' → logprob: -16.000381469726562
    6. '(Mod' → logprob: -16.875381469726562
    7. 'eturn' → logprob: -17.000381469726562
    8. 'Return' → logprob: -17.125381469726562
    9. '	return' → logprob: -18.500381469726562
    10. '   ' → logprob: -19.625381469726562

Token 665: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -6.098748053773306e-05
    2. ' Mod' → logprob: -9.75006103515625
    3. '(Mod' → logprob: -12.87506103515625
    4. 'self' → logprob: -17.37506103515625
    5. 'mod' → logprob: -19.25006103515625
    6. '_mod' → logprob: -20.25006103515625
    7. 'Mo' → logprob: -20.37506103515625
    8. '_Mod' → logprob: -20.87506103515625
    9. 'Modulo' → logprob: -21.00006103515625
    10. '.Mod' → logprob: -21.25006103515625

Token 666: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.7697225252486533e-06
    2. 'Mod' → logprob: -12.625003814697266
    3. '(Int' → logprob: -15.125003814697266
    4. 'int' → logprob: -17.750003814697266
    5. ' Int' → logprob: -18.000003814697266
    6. 'Mul' → logprob: -18.250003814697266
    7. 'Tr' → logprob: -18.250003814697266
    8. 'tr' → logprob: -18.625003814697266
    9. 'Inv' → logprob: -18.625003814697266
    10. '	Int' → logprob: -18.750003814697266

Token 667: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.026640232652425766
    2. '(pow' → logprob: -3.6516401767730713
    3. 'other' → logprob: -8.901639938354492
    4. 'pow' → logprob: -9.026639938354492
    5. '(self' → logprob: -10.151639938354492
    6. '(' → logprob: -10.401639938354492
    7. '((' → logprob: -12.276639938354492
    8. '(Mod' → logprob: -12.901639938354492
    9. '(power' → logprob: -13.026639938354492
    10. '(int' → logprob: -13.401639938354492

Token 668: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.026322131976485252
    2. ' *' → logprob: -3.65132212638855
    3. '*self' → logprob: -11.151322364807129
    4. ')' → logprob: -12.401322364807129
    5. ' ' → logprob: -13.776322364807129
    6. '   ' → logprob: -14.151322364807129
    7. '*x' → logprob: -14.401322364807129
    8. '/' → logprob: -15.276322364807129
    9. '//' → logprob: -15.901322364807129
    10. '*object' → logprob: -16.026321411132812

Token 669: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -3.5954712075181305e-05
    2. ' pow' → logprob: -10.250036239624023
    3. '(pow' → logprob: -14.625036239624023
    4. 'self' → logprob: -17.875036239624023
    5. 'Pow' → logprob: -18.125036239624023
    6. 'power' → logprob: -18.500036239624023
    7. 'p' → logprob: -19.000036239624023
    8. '.pow' → logprob: -19.250036239624023
    9. '
' → logprob: -20.250036239624023
    10. 'mod' → logprob: -21.125036239624023

Token 670: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. 'self' → logprob: -16.75
    4. '(
' → logprob: -17.125
    5. '(this' → logprob: -22.625
    6. '[self' → logprob: -23.125
    7. '=self' → logprob: -23.25
    8. '(s' → logprob: -23.5
    9. '((' → logprob: -23.5
    10. '	self' → logprob: -23.5

Token 671: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00524798734113574
    2. 'x' → logprob: -5.255248069763184
    3. '(x' → logprob: -11.630248069763184
    4. 'self' → logprob: -12.505248069763184
    5. '(' → logprob: -14.255248069763184
    6. '.' → logprob: -14.630248069763184
    7. '().' → logprob: -15.630248069763184
    8. ' x' → logprob: -16.255247116088867
    9. '(.' → logprob: -16.505247116088867
    10. '(self' → logprob: -17.005247116088867

Token 672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -13.750001907348633
    3. 'MOD' → logprob: -14.125001907348633
    4. ',
' → logprob: -15.750001907348633
    5. 'mod' → logprob: -17.750001907348633
    6. ' MOD' → logprob: -18.125001907348633
    7. '2' → logprob: -18.500001907348633
    8. 'Mod' → logprob: -19.000001907348633
    9. ',-' → logprob: -19.375001907348633
    10. '(Mod' → logprob: -19.625001907348633

Token 673: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007102862582542002
    2. ' MOD' → logprob: -7.250710487365723
    3. '998' → logprob: -15.125710487365723
    4. '_MOD' → logprob: -16.125709533691406
    5. '.MOD' → logprob: -17.750709533691406
    6. 'MO' → logprob: -18.750709533691406
    7. 'Mod' → logprob: -19.125709533691406
    8. '-' → logprob: -19.375709533691406
    9. ' ' → logprob: -19.500709533691406
    10. 'MODE' → logprob: -19.875709533691406

Token 674: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031777136027812958
    2. ' -' → logprob: -5.753177642822266
    3. '-
' → logprob: -17.003177642822266
    4. '−' → logprob: -17.003177642822266
    5. '-mod' → logprob: -18.003177642822266
    6. 'MOD' → logprob: -18.503177642822266
    7. ' ' → logprob: -19.128177642822266
    8. '{-' → logprob: -19.378177642822266
    9. '-M' → logprob: -19.878177642822266
    10. '–' → logprob: -19.878177642822266

Token 675: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '۲' → logprob: -18.125
    4. '-' → logprob: -18.75
    5. '２' → logprob: -19.5
    6. '
' → logprob: -19.5
    7. '२' → logprob: -19.875
    8. '```' → logprob: -19.875
    9. '২' → logprob: -19.9375
    10. '
' → logprob: -20.0625

Token 676: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.625000953674316
    3. '-' → logprob: -15.125000953674316
    4. '
' → logprob: -17.000001907348633
    5. '۲' → logprob: -17.250001907348633
    6. '3' → logprob: -17.437501907348633
    7. '
' → logprob: -18.250001907348633
    8. '```' → logprob: -18.312501907348633
    9. '' → logprob: -18.437501907348633
    10. '٢' → logprob: -18.437501907348633

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1517960956552997e-05
    2. ' ,' → logprob: -11.500011444091797
    3. ')' → logprob: -13.750011444091797
    4. ',
' → logprob: -16.000011444091797
    5. ',M' → logprob: -17.250011444091797
    6. '<|end|>' → logprob: -17.375011444091797
    7. '),' → logprob: -18.000011444091797
    8. 'MOD' → logprob: -18.750011444091797
    9. '```' → logprob: -19.000011444091797
    10. '   ' → logprob: -19.125011444091797

Token 678: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.002475777640938759
    2. ' MOD' → logprob: -6.002475738525391
    3. ')' → logprob: -16.00247573852539
    4. '_MOD' → logprob: -18.62747573852539
    5. '.MOD' → logprob: -19.12747573852539
    6. '   ' → logprob: -19.37747573852539
    7. '```' → logprob: -19.87747573852539
    8. ' ' → logprob: -20.37747573852539
    9. 'MO' → logprob: -20.50247573852539
    10. 'mod' → logprob: -21.12747573852539

Token 679: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033581978641450405
    2. '))' → logprob: -8.000335693359375
    3. '       ' → logprob: -15.625335693359375
    4. ')
' → logprob: -15.625335693359375
    5. '   ' → logprob: -16.625335693359375
    6. ' )' → logprob: -17.000335693359375
    7. ')))' → logprob: -18.125335693359375
    8. ')}' → logprob: -18.500335693359375
    9. ')`' → logprob: -18.875335693359375
    10. '})' → logprob: -20.750335693359375

Token 680: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5489025115966797
    2. '<|end|>' → logprob: -0.9239025115966797
    3. '
' → logprob: -4.67390251159668
    4. ')' → logprob: -5.42390251159668
    5. '<|end|>' → logprob: -5.42390251159668
    6. '```' → logprob: -5.67390251159668
    7. '\n' → logprob: -6.42390251159668
    8. '    
' → logprob: -7.54890251159668
    9. '\' → logprob: -8.04890251159668
    10. ' ' → logprob: -8.42390251159668

Token 681: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4274834096431732
    2. '   ' → logprob: -1.4274834394454956
    3. '<|end|>' → logprob: -2.677483320236206
    4. 'def' (adapté à ' def') → logprob: -3.552483320236206
    5. '```' → logprob: -5.302483558654785
    6. ' ' → logprob: -6.552483558654785
    7. '
' → logprob: -7.052483558654785
    8. ' def' → logprob: -7.427483558654785
    9. ':' → logprob: -7.427483558654785
    10. '#' → logprob: -7.927483558654785

Token 682: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.054500666621607e-06
    2. ' __' → logprob: -12.75000286102295
    3. 'inverse' → logprob: -17.375003814697266
    4. 'is' → logprob: -18.125003814697266
    5. 'invert' → logprob: -18.375003814697266
    6. '___' → logprob: -18.500003814697266
    7. 'copy' → logprob: -19.000003814697266
    8. '.__' → logprob: -19.125003814697266
    9. 'def' → logprob: -19.125003814697266
    10. '```' → logprob: -19.375003814697266

Token 683: 'r' (ID: 81)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0793975293636322
    2. 'neg' → logprob: -2.579397439956665
    3. 'int' → logprob: -8.579397201538086
    4. 'i' → logprob: -9.454397201538086
    5. 'invert' → logprob: -9.454397201538086
    6. 'pow' → logprob: -9.954397201538086
    7. 'it' → logprob: -10.329397201538086
    8. 'ip' → logprob: -10.704397201538086
    9. 'lt' → logprob: -11.329397201538086
    10. 'if' → logprob: -11.454397201538086

Token 684: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.6240566083070007e-06
    2. 'add' → logprob: -14.000001907348633
    3. 'eq' → logprob: -14.625001907348633
    4. 'pos' → logprob: -15.750001907348633
    5. 'xor' → logprob: -15.875001907348633
    6. 'p' → logprob: -17.875001907348633
    7. 'po' → logprob: -18.125001907348633
    8. '**' → logprob: -18.625001907348633
    9. '_pow' → logprob: -18.750001907348633
    10. ' pow' → logprob: -18.875001907348633

Token 685: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000559108448214829
    2. '__' → logprob: -7.500559329986572
    3. '__(
' → logprob: -12.500558853149414
    4. '__((' → logprob: -13.500558853149414
    5. '__('' → logprob: -14.625558853149414
    6. '__(*' → logprob: -15.250558853149414
    7. '(' → logprob: -15.875558853149414
    8. '__("' → logprob: -16.500558853149414
    9. '(self' → logprob: -17.250558853149414
    10. '__[' → logprob: -18.500558853149414

Token 686: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048623472452163696
    2. '(self' → logprob: -3.048623561859131
    3. ' self' → logprob: -10.423623085021973
    4. '(' → logprob: -12.298623085021973
    5. 'def' → logprob: -14.423623085021973
    6. ')' → logprob: -15.423623085021973
    7. '__(' → logprob: -15.548623085021973
    8. ')(' → logprob: -15.923623085021973
    9. '	self' → logprob: -16.17362403869629
    10. '   ' → logprob: -16.29862403869629

Token 687: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05591697618365288
    2. '__(' → logprob: -2.9309170246124268
    3. '(' → logprob: -7.305916786193848
    4. 'self' → logprob: -8.430916786193848
    5. '__' → logprob: -9.305916786193848
    6. '_(' → logprob: -10.930916786193848
    7. ')(' → logprob: -11.430916786193848
    8. ',' → logprob: -11.805916786193848
    9. ' (' → logprob: -12.055916786193848
    10. '```' → logprob: -12.555916786193848

Token 688: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0010472200810909271
    2. ' other' → logprob: -7.251047134399414
    3. 'self' → logprob: -8.001047134399414
    4. 'Other' → logprob: -13.126047134399414
    5. ' self' → logprob: -16.626047134399414
    6. '(other' → logprob: -18.001047134399414
    7. '_other' → logprob: -19.376047134399414
    8. '其他' → logprob: -20.126047134399414
    9. '.other' → logprob: -21.001047134399414
    10. 'mod' → logprob: -21.501047134399414

Token 689: '):
' (ID: 1883)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.844510018825531
    2. '):' → logprob: -0.844510018825531
    3. ',' → logprob: -2.344510078430176
    4. '(self' → logprob: -3.469510078430176
    5. '):
' → logprob: -5.469510078430176
    6. 'self' → logprob: -6.094510078430176
    7. ')' → logprob: -6.219510078430176
    8. ' (' → logprob: -6.844510078430176
    9. ':' → logprob: -6.844510078430176
    10. '(x' → logprob: -7.219510078430176

Token 690: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009364546276628971
    2. '(self' → logprob: -5.384364604949951
    3. '(
' → logprob: -5.759364604949951
    4. ' (' → logprob: -7.384364604949951
    5. '       ' → logprob: -8.134364128112793
    6. '(pow' → logprob: -8.134364128112793
    7. 'return' → logprob: -8.509364128112793
    8. '   ' → logprob: -10.134364128112793
    9. '(return' → logprob: -10.384364128112793
    10. 'self' → logprob: -10.634364128112793

Token 691: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18797773122787476
    2. 'return' → logprob: -2.5629777908325195
    3. '(' → logprob: -3.0629777908325195
    4. '(self' → logprob: -3.6879777908325195
    5. 'self' → logprob: -4.1879777908325195
    6. '(
' → logprob: -5.9379777908325195
    7. '       ' → logprob: -6.1879777908325195
    8. '   ' → logprob: -6.9379777908325195
    9. '(lambda' → logprob: -7.0629777908325195
    10. ' def' → logprob: -7.9379777908325195

Token 692: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4271210730075836
    2. 'other' → logprob: -1.6771210432052612
    3. 'def' → logprob: -1.9271210432052612
    4. 'return' → logprob: -5.052121162414551
    5. '   ' → logprob: -5.927121162414551
    6. '(self' → logprob: -6.427121162414551
    7. '       ' → logprob: -6.427121162414551
    8. '(other' → logprob: -6.552121162414551
    9. 'Other' → logprob: -7.802121162414551
    10. '(' → logprob: -7.802121162414551

Token 693: ' S' (ID: 336)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33573049306869507
    2. 'Mod' → logprob: -1.3357305526733398
    3. 'def' → logprob: -4.58573055267334
    4. '(Mod' → logprob: -5.58573055267334
    5. '       ' → logprob: -5.96073055267334
    6. '"""
' → logprob: -6.46073055267334
    7. ' return' → logprob: -6.96073055267334
    8. '   ' → logprob: -7.33573055267334
    9. ':return' → logprob: -7.46073055267334
    10. '```' → logprob: -7.96073055267334

Token 694: 'urcharge' (ID: 162326)
  Prédit: 'urcharge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urcharge' → logprob: -0.5408292412757874
    2. '"""
' → logprob: -2.1658291816711426
    3. 'return' → logprob: -2.7908291816711426
    4. 'ur' → logprob: -2.7908291816711426
    5. 'urr' → logprob: -3.1658291816711426
    6. '```' → logprob: -3.5408291816711426
    7. 'def' → logprob: -3.9158291816711426
    8. '
' → logprob: -4.540829181671143
    9. 'uper' → logprob: -5.415829181671143
    10. '**' → logprob: -5.415829181671143

Token 695: ' réfléch' (ID: 107126)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04596377909183502
    2. 'def' → logprob: -3.545963764190674
    3. '       ' → logprob: -5.420963764190674
    4. '(' → logprob: -5.795963764190674
    5. '   ' → logprob: -5.795963764190674
    6. 'self' → logprob: -6.045963764190674
    7. 'r' → logprob: -6.670963764190674
    8. '```' → logprob: -7.295963764190674
    9. '(
' → logprob: -8.545964241027832
    10. '_r' → logprob: -8.670964241027832

Token 696: 'ie' (ID: 396)
  Prédit: 'ited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.3403177261352539
    2. '__' → logprob: -1.965317726135254
    3. 'ented' → logprob: -2.715317726135254
    4. 'ieved' → logprob: -4.340317726135254
    5. 'ied' → logprob: -4.590317726135254
    6. 'ended' → logprob: -4.715317726135254
    7. 'ée' → logprob: -5.340317726135254
    8. 'é' → logprob: -5.715317726135254
    9. 'eted' → logprob: -5.840317726135254
    10. 'zed' → logprob: -5.840317726135254

Token 697: ' pour' (ID: 1930)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10284505784511566
    2. '(' → logprob: -2.3528449535369873
    3. 'for' → logprob: -6.727845191955566
    4. 'def' → logprob: -6.977845191955566
    5. ' (' → logprob: -8.852845191955566
    6. ' for' → logprob: -8.977845191955566
    7. 'self' → logprob: -9.977845191955566
    8. '(
' → logprob: -9.977845191955566
    9. '(for' → logprob: -10.477845191955566
    10. '(pow' → logprob: -10.477845191955566

Token 698: ' **' (ID: 6240)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.010058500804007053
    2. 'Mod' → logprob: -5.260058403015137
    3. 'self' → logprob: -5.635058403015137
    4. 'def' → logprob: -8.135058403015137
    5. 'power' → logprob: -8.135058403015137
    6. ' pow' → logprob: -8.135058403015137
    7. 'other' → logprob: -8.510058403015137
    8. '(pow' → logprob: -10.385058403015137
    9. 'Pow' → logprob: -10.635058403015137
    10. 'int' → logprob: -10.760058403015137

Token 699: '.
' (ID: 558)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08029376715421677
    2. '(' → logprob: -2.705293655395508
    3. '(other' → logprob: -4.705293655395508
    4. 'self' → logprob: -7.205293655395508
    5. ' (' → logprob: -8.580293655395508
    6. ')' → logprob: -9.205293655395508
    7. '(
' → logprob: -9.705293655395508
    8. 'other' → logprob: -10.330293655395508
    9. '```' → logprob: -10.330293655395508
    10. 'def' → logprob: -10.455293655395508

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16682305932044983
    2. 'return' → logprob: -2.666823148727417
    3. '(' → logprob: -3.291823148727417
    4. '(Mod' → logprob: -4.166822910308838
    5. '(
' → logprob: -4.291822910308838
    6. '   ' → logprob: -4.916822910308838
    7. ' return' → logprob: -5.291822910308838
    8. '(return' → logprob: -6.541822910308838
    9. 'Mod' → logprob: -7.041822910308838
    10. ':return' → logprob: -7.166822910308838

Token 701: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12214286625385284
    2. 'return' → logprob: -2.372142791748047
    3. '   ' → logprob: -3.997142791748047
    4. ' return' → logprob: -5.997142791748047
    5. '```' → logprob: -8.372142791748047
    6. 'def' → logprob: -8.872142791748047
    7. '"""
' (adapté à ' """
') → logprob: -9.247142791748047
    8. '(' → logprob: -9.372142791748047
    9. '``' → logprob: -10.247142791748047
    10. '           ' → logprob: -10.247142791748047

Token 702: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08888417482376099
    2. 'return' → logprob: -2.588884115219116
    3. '   ' → logprob: -5.088884353637695
    4. ' return' → logprob: -5.713884353637695
    5. '(
' → logprob: -9.338884353637695
    6. '(' → logprob: -9.463884353637695
    7. ':return' → logprob: -10.088884353637695
    8. ' 
' → logprob: -10.213884353637695
    9. '```' → logprob: -10.213884353637695
    10. ')' → logprob: -10.838884353637695

Token 703: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3868912160396576
    2. 'Mod' → logprob: -1.13689124584198
    3. ' return' → logprob: -11.13689136505127
    4. '(Mod' → logprob: -13.51189136505127
    5. '       ' → logprob: -14.01189136505127
    6. 'Return' → logprob: -14.01189136505127
    7. 'mod' → logprob: -14.13689136505127
    8. ' Mod' → logprob: -14.76189136505127
    9. '
' → logprob: -15.13689136505127
    10. '   ' → logprob: -15.63689136505127

Token 704: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -1.0921942703134846e-05
    2. ' Mod' → logprob: -11.50001049041748
    3. '(Mod' → logprob: -14.25001049041748
    4. 'pow' → logprob: -17.125011444091797
    5. 'self' → logprob: -17.250011444091797
    6. 'Pow' → logprob: -17.500011444091797
    7. 'mod' → logprob: -19.875011444091797
    8. 'Power' → logprob: -19.875011444091797
    9. '_mod' → logprob: -20.000011444091797
    10. 'MOD' → logprob: -20.125011444091797

Token 705: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.128163257315464e-07
    2. 'int' → logprob: -15.375
    3. 'Mod' → logprob: -17.75
    4. ' Int' → logprob: -18.375
    5. '(Int' → logprob: -19.25
    6. '	Int' → logprob: -19.25
    7. 'In' → logprob: -19.75
    8. 'Ant' → logprob: -20.375
    9. 'Token' → logprob: -21.0
    10. '_int' → logprob: -21.125

Token 706: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -6.988221684878226e-06
    2. 'pow' → logprob: -12.125006675720215
    3. '(power' → logprob: -13.750006675720215
    4. '(' → logprob: -15.500006675720215
    5. '(other' → logprob: -16.25000762939453
    6. ' pow' → logprob: -16.50000762939453
    7. '(int' → logprob: -18.12500762939453
    8. '(po' → logprob: -18.37500762939453
    9. '(py' → logprob: -19.25000762939453
    10. '((' → logprob: -19.37500762939453

Token 707: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.5048530030981055e-06
    2. 'other' → logprob: -13.500001907348633
    3. ' other' → logprob: -18.375001907348633
    4. 'Other' → logprob: -18.750001907348633
    5. '(' → logprob: -20.000001907348633
    6. '_other' → logprob: -22.375001907348633
    7. '.other' → logprob: -23.250001907348633
    8. 'OTHER' → logprob: -23.875001907348633
    9. '(self' → logprob: -25.250001907348633
    10. '(the' → logprob: -25.625001907348633

Token 708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9888433093437925e-05
    2. ' ,' → logprob: -10.375040054321289
    3. 'self' → logprob: -12.000040054321289
    4. ',self' → logprob: -13.750040054321289
    5. ',x' → logprob: -15.000040054321289
    6. ',
' → logprob: -15.125040054321289
    7. 'x' → logprob: -15.500040054321289
    8. '.' → logprob: -16.12504005432129
    9. '[' → logprob: -16.25004005432129
    10. '.x' → logprob: -16.50004005432129

Token 709: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7968066206085496e-05
    2. ' self' → logprob: -10.500027656555176
    3. '(self' → logprob: -15.000027656555176
    4. '[self' → logprob: -19.125028610229492
    5. '       ' → logprob: -19.500028610229492
    6. '   ' → logprob: -19.875028610229492
    7. '
' → logprob: -19.875028610229492
    8. 'Self' → logprob: -20.125028610229492
    9. '	self' → logprob: -20.750028610229492
    10. '```' → logprob: -21.625028610229492

Token 710: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.012516127899289131
    2. 'x' → logprob: -4.387516021728516
    3. ' x' → logprob: -12.762516021728516
    4. '.' → logprob: -12.887516021728516
    5. ' ' → logprob: -14.887516021728516
    6. '_x' → logprob: -15.387516021728516
    7. '<|end|>' → logprob: -15.637516021728516
    8. 'self' → logprob: -16.762516021728516
    9. '0' → logprob: -16.762516021728516
    10. ')' → logprob: -16.887516021728516

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2842308680992573e-05
    2. ' ,' → logprob: -10.875022888183594
    3. 'MOD' → logprob: -13.375022888183594
    4. ' MOD' → logprob: -13.500022888183594
    5. '))' → logprob: -14.625022888183594
    6. ')' → logprob: -15.375022888183594
    7. '.MOD' → logprob: -16.125022888183594
    8. 'mod' → logprob: -16.750022888183594
    9. 'x' → logprob: -16.875022888183594
    10. '),' → logprob: -17.375022888183594

Token 712: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.011047814972698689
    2. ' MOD' → logprob: -4.511047840118408
    3. '.MOD' → logprob: -18.13604736328125
    4. '_MOD' → logprob: -18.88604736328125
    5. 'MO' → logprob: -19.13604736328125
    6. ')' → logprob: -19.26104736328125
    7. 'mod' → logprob: -19.38604736328125
    8. '   ' → logprob: -20.63604736328125
    9. '```' → logprob: -20.76104736328125
    10. ' ' → logprob: -20.76104736328125

Token 713: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -6.146429223008454e-05
    2. '))
' → logprob: -9.75006103515625
    3. ')' → logprob: -13.62506103515625
    4. ' ))' → logprob: -14.00006103515625
    5. '       ' → logprob: -14.87506103515625
    6. '))

' → logprob: -15.25006103515625
    7. '   ' → logprob: -15.37506103515625
    8. ')))' → logprob: -15.62506103515625
    9. '))
' → logprob: -17.37506103515625
    10. '()))' → logprob: -18.12506103515625

Token 714: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5254932045936584
    2. 'dp' → logprob: -1.6504931449890137
    3. '#' → logprob: -2.0254931449890137
    4. 'count' → logprob: -3.2754931449890137
    5. 'result' → logprob: -3.9004931449890137
    6. 'counts' → logprob: -5.275493144989014
    7. 'colors' → logprob: -5.525493144989014
    8. 'color' → logprob: -6.275493144989014
    9. 'answer' → logprob: -6.275493144989014
    10. 'res' → logprob: -6.400493144989014

Token 715: ' f' (ID: 285)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.39224010705947876
    2. ' main' → logprob: -1.267240047454834
    3. 'count' → logprob: -4.517240047454834
    4. ' calculate' → logprob: -5.267240047454834
    5. ' solve' → logprob: -5.267240047454834
    6. ' color' → logprob: -5.517240047454834
    7. ' compute' → logprob: -5.892240047454834
    8. ' factorial' → logprob: -6.142240047454834
    9. ' combine' → logprob: -6.392240047454834
    10. ' possible' → logprob: -6.642240047454834

Token 716: '(s' (ID: 1858)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.27402830123901367
    2. '(S' → logprob: -2.8990283012390137
    3. '(N' → logprob: -3.0240283012390137
    4. 'inal' → logprob: -3.3990283012390137
    5. '(' → logprob: -3.3990283012390137
    6. 'actor' → logprob: -4.649028301239014
    7. 'def' → logprob: -4.899028301239014
    8. '()' → logprob: -5.149028301239014
    9. 'rom' → logprob: -5.649028301239014
    10. 'ind' → logprob: -5.899028301239014

Token 717: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0975414514541626
    2. '):
' → logprob: -2.472541332244873
    3. ')' → logprob: -5.847541332244873
    4. ',' → logprob: -5.847541332244873
    5. ':' → logprob: -6.597541332244873
    6. '):
' → logprob: -7.347541332244873
    7. '):

' → logprob: -8.722541809082031
    8. '[]):' → logprob: -9.222541809082031
    9. '[' → logprob: -9.722541809082031
    10. ']):' → logprob: -9.847541809082031

Token 718: ' res' (ID: 694)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1243187189102173
    2. 'k' → logprob: -1.2493187189102173
    3. 'm' → logprob: -2.6243185997009277
    4. 'n' → logprob: -2.6243185997009277
    5. 'c' → logprob: -2.7493185997009277
    6. 'e' → logprob: -3.7493185997009277
    7. 'count' → logprob: -4.249318599700928
    8. 'acc' → logprob: -4.374318599700928
    9. 'a' → logprob: -4.374318599700928
    10. 'prev' → logprob: -4.749318599700928

Token 719: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0531582273542881
    2. ',' → logprob: -3.3031582832336426
    3. '):
' → logprob: -4.553158283233643
    4. '=' → logprob: -6.303158283233643
    5. ')' → logprob: -6.428158283233643
    6. 'u' → logprob: -7.928158283233643
    7. 'ult' → logprob: -8.678157806396484
    8. '=None' → logprob: -8.678157806396484
    9. 'ault' → logprob: -9.928157806396484
    10. 't' → logprob: -10.053157806396484

Token 720: ' z' (ID: 579)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3619025945663452
    2. 'c' → logprob: -1.4869025945663452
    3. 'count' → logprob: -1.9869025945663452
    4. 'idx' → logprob: -2.3619027137756348
    5. 'last' → logprob: -2.7369027137756348
    6. 'prev' → logprob: -3.3619027137756348
    7. 'color' → logprob: -3.4869027137756348
    8. 'cnt' → logprob: -3.9869027137756348
    9. 'pos' → logprob: -4.361902713775635
    10. 'index' → logprob: -4.361902713775635

Token 721: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013027515262365341
    2. '):
' → logprob: -5.263027667999268
    3. '=' → logprob: -6.138027667999268
    4. ')' → logprob: -6.263027667999268
    5. 'ero' → logprob: -7.013027667999268
    6. ',' → logprob: -7.263027667999268
    7. 'e' → logprob: -7.763027667999268
    8. '):
' → logprob: -8.01302719116211
    9. 'o' → logprob: -8.13802719116211
    10. 'ip' → logprob: -8.63802719116211

Token 722: ' r' (ID: 428)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4782118797302246
    2. ' i' → logprob: -2.2282118797302246
    3. 'c' → logprob: -2.4782118797302246
    4. ' c' → logprob: -2.6032118797302246
    5. ' idx' → logprob: -2.7282118797302246
    6. 'k' → logprob: -3.3532118797302246
    7. 'idx' → logprob: -3.4782118797302246
    8. ' p' → logprob: -3.7282118797302246
    9. 'p' → logprob: -3.7907118797302246
    10. ' k' → logprob: -3.9782118797302246

Token 723: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12685848772525787
    2. '):
' → logprob: -2.2518584728240967
    3. ',' → logprob: -5.251858711242676
    4. ')' → logprob: -5.751858711242676
    5. 'e' → logprob: -6.626858711242676
    6. '):
' → logprob: -7.626858711242676
    7. '):

' → logprob: -7.751858711242676
    8. 'em' → logprob: -7.876858711242676
    9. '=' → logprob: -7.876858711242676
    10. 'a' → logprob: -8.001858711242676

Token 724: ' g' (ID: 329)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.714031994342804
    2. 'c' → logprob: -2.214031934738159
    3. 'k' → logprob: -3.214031934738159
    4. 'p' → logprob: -3.214031934738159
    5. 'idx' → logprob: -3.589031934738159
    6. 'n' → logprob: -3.839031934738159
    7. ' i' → logprob: -3.964031934738159
    8. 'a' → logprob: -4.089032173156738
    9. 'd' → logprob: -4.214032173156738
    10. 'pos' → logprob: -4.339032173156738

Token 725: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39214691519737244
    2. '):' → logprob: -1.2671469449996948
    3. '):
' → logprob: -3.2671468257904053
    4. ')' → logprob: -5.642147064208984
    5. '):
' → logprob: -8.142147064208984
    6. ' ,' → logprob: -9.142147064208984
    7. 's' → logprob: -9.392147064208984
    8. '):

' → logprob: -9.392147064208984
    9. 'g' → logprob: -9.767147064208984
    10. ' ):' → logprob: -9.892147064208984

Token 726: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0029710419476032257
    2. ' b' → logprob: -6.127971172332764
    3. 'y' → logprob: -7.627971172332764
    4. 'i' → logprob: -9.502970695495605
    5. 'o' → logprob: -10.502970695495605
    6. 'l' → logprob: -10.627970695495605
    7. 'w' → logprob: -10.752970695495605
    8. 'k' → logprob: -10.752970695495605
    9. 'd' → logprob: -11.002970695495605
    10. 'p' → logprob: -11.127970695495605

Token 727: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007876090705394745
    2. ',' → logprob: -5.132875919342041
    3. ')' → logprob: -6.882875919342041
    4. '):
' → logprob: -7.007875919342041
    5. ' ):' → logprob: -12.5078763961792
    6. '=' → logprob: -12.8828763961792
    7. 's' → logprob: -13.3828763961792
    8. ':' → logprob: -13.5078763961792
    9. '):
' → logprob: -13.6328763961792
    10. ''):' → logprob: -14.5078763961792

Token 728: ' rg' (ID: 34570)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34369608759880066
    2. 'w' → logprob: -2.968696117401123
    3. 'c' → logprob: -3.343696117401123
    4. 'idx' → logprob: -3.343696117401123
    5. 'y' → logprob: -3.718696117401123
    6. 'k' → logprob: -3.718696117401123
    7. 'n' → logprob: -3.968696117401123
    8. 'a' → logprob: -4.343696117401123
    9. 'index' → logprob: -4.468696117401123
    10. ')' → logprob: -4.718696117401123

Token 729: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9304497838020325
    2. '):' → logprob: -1.1804497241973877
    3. ',' → logprob: -1.3054497241973877
    4. '):
' → logprob: -4.055449962615967
    5. ')' → logprob: -5.680449962615967
    6. 'B' → logprob: -5.930449962615967
    7. ''):' → logprob: -7.430449962615967
    8. '_' → logprob: -7.555449962615967
    9. 'u' → logprob: -7.680449962615967
    10. '=' → logprob: -7.930449962615967

Token 730: ' gb' (ID: 21144)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.0010089923162013292
    2. 'rgb' → logprob: -7.501008987426758
    3. 'gb' → logprob: -8.376008987426758
    4. ' rb' → logprob: -8.501008987426758
    5. 'bg' → logprob: -11.876008987426758
    6. 'rg' → logprob: -12.126008987426758
    7. '```' → logprob: -13.126008987426758
    8. 'gr' → logprob: -13.251008987426758
    9. 'yb' → logprob: -14.001008987426758
    10. 'fb' → logprob: -14.251008987426758

Token 731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021366903092712164
    2. '):
' → logprob: -8.750213623046875
    3. '):' → logprob: -10.625213623046875
    4. ' ,' → logprob: -10.875213623046875
    5. 'b' → logprob: -12.625213623046875
    6. ')' → logprob: -13.000213623046875
    7. ',b' → logprob: -13.250213623046875
    8. ',
' → logprob: -13.375213623046875
    9. ',r' → logprob: -14.125213623046875
    10. '):
' → logprob: -14.875213623046875

Token 732: ' br' (ID: 1294)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.000912774819880724
    2. 'rgb' → logprob: -7.375912666320801
    3. 'br' → logprob: -8.8759126663208
    4. 'bg' → logprob: -10.3759126663208
    5. 'gb' → logprob: -10.5009126663208
    6. ' rb' → logprob: -10.5009126663208
    7. 'rg' → logprob: -10.6259126663208
    8. 'gr' → logprob: -11.3759126663208
    9. 'r' → logprob: -11.6259126663208
    10. '(rb' → logprob: -12.7509126663208

Token 733: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.463378369808197
    2. ',' → logprob: -1.2133784294128418
    3. '):
' → logprob: -3.088378429412842
    4. ')' → logprob: -3.588378429412842
    5. '):
' → logprob: -8.588377952575684
    6. 'u' → logprob: -10.213377952575684
    7. 'g' → logprob: -10.463377952575684
    8. '):

' → logprob: -10.463377952575684
    9. 'b' → logprob: -10.713377952575684
    10. '),' → logprob: -11.213377952575684

Token 734: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09459909051656723
    2. ':' → logprob: -2.4695990085601807
    3. ' :' → logprob: -6.84459924697876
    4. '<|end|>' → logprob: -7.09459924697876
    5. ',' → logprob: -7.21959924697876
    6. ' if' → logprob: -7.21959924697876
    7. '   ' → logprob: -8.094598770141602
    8. ':
' → logprob: -8.219598770141602
    9. '	if' → logprob: -8.719598770141602
    10. '    
' → logprob: -8.969598770141602

Token 735: ' """
' (ID: 7037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3283262252807617
    2. ' if' → logprob: -1.7033262252807617
    3. '   ' → logprob: -2.7033262252807617
    4. 'i' → logprob: -3.5783262252807617
    5. ' i' → logprob: -6.078326225280762
    6. 'n' → logprob: -8.578326225280762
    7. 'for' → logprob: -9.578326225280762
    8. 'c' → logprob: -9.953326225280762
    9. ' for' → logprob: -10.203326225280762
    10. 's' → logprob: -10.453326225280762

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4520305097103119
    2. 'if' → logprob: -1.4520305395126343
    3. ' if' → logprob: -2.0770304203033447
    4. 'i' → logprob: -6.202030658721924
    5. 'n' → logprob: -7.202030658721924
    6. ' i' → logprob: -8.077030181884766
    7. 's' → logprob: -8.577030181884766
    8. '"""' → logprob: -8.702030181884766
    9. '#' → logprob: -9.452030181884766
    10. '
' → logprob: -9.577030181884766

Token 737: ' At' (ID: 3604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1240004301071167
    2. ' if' → logprob: -2.7490005493164062
    3. 'if' → logprob: -3.6240005493164062
    4. 'i' → logprob: -4.874000549316406
    5. 'n' → logprob: -5.249000549316406
    6. ')' → logprob: -6.124000549316406
    7. '#' → logprob: -6.124000549316406
    8. '
' → logprob: -6.249000549316406
    9. ' ' → logprob: -6.999000549316406
    10. '    ' → logprob: -7.249000549316406

Token 738: 'trib' (ID: 1420)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10171400755643845
    2. ' if' → logprob: -2.6017138957977295
    3. 'if' → logprob: -4.476714134216309
    4. '    ' → logprob: -5.101714134216309
    5. '  ' → logprob: -6.851714134216309
    6. ' """
' → logprob: -6.976714134216309
    7. ' s' → logprob: -7.101714134216309
    8. ' ' → logprob: -7.601714134216309
    9. '       ' → logprob: -7.976714134216309
    10. ' """' → logprob: -8.351714134216309

Token 739: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.04945660009980202
    2. 'u' → logprob: -3.0494565963745117
    3. 'uer' → logprob: -7.924456596374512
    4. 'ué' → logprob: -8.174456596374512
    5. 'uée' → logprob: -9.174456596374512
    6. 'uez' → logprob: -10.299456596374512
    7. 'e' → logprob: -10.924456596374512
    8. 'ute' → logprob: -11.424456596374512
    9. 'ues' → logprob: -11.424456596374512
    10. 'uera' → logprob: -11.674456596374512

Token 740: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6523610353469849
    2. 'result' → logprob: -2.1523609161376953
    3. ' res' → logprob: -2.2773609161376953
    4. 'res' → logprob: -2.7773609161376953
    5. '(
' → logprob: -3.0273609161376953
    6. ' result' → logprob: -4.152360916137695
    7. 'None' → logprob: -4.152360916137695
    8. ' (
' → logprob: -4.527360916137695
    9. ' None' → logprob: -4.652360916137695
    10. 's' → logprob: -4.777360916137695

Token 741: ' balle' (ID: 147386)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5738263726234436
    2. 'if' → logprob: -0.9488263726234436
    3. 'result' → logprob: -3.698826313018799
    4. ' res' → logprob: -5.573826313018799
    5. 'return' → logprob: -5.573826313018799
    6. '1' → logprob: -5.698826313018799
    7. 'val' → logprob: -5.823826313018799
    8. '"""
' → logprob: -6.448826313018799
    9. '   ' → logprob: -6.698826313018799
    10. 'r' → logprob: -6.823826313018799

Token 742: ' cour' (ID: 2871)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46259206533432007
    2. ' suivante' → logprob: -2.337592124938965
    3. '   ' → logprob: -2.462592124938965
    4. ' ' → logprob: -3.712592124938965
    5. ' s' → logprob: -4.212592124938965
    6. ''' → logprob: -4.337592124938965
    7. ' =' → logprob: -4.462592124938965
    8. '<|end|>' → logprob: -4.587592124938965
    9. '(s' → logprob: -4.712592124938965
    10. ' suivant' → logprob: -4.712592124938965

Token 743: 'ante' (ID: 2116)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4992550015449524
    2. 'ante' → logprob: -0.9992550015449524
    3. 'ente' → logprob: -4.249255180358887
    4. 'ue' → logprob: -4.749255180358887
    5. 'e' → logprob: -6.624255180358887
    6. 'ent' → logprob: -9.374255180358887
    7. 'r' → logprob: -9.499255180358887
    8. 'ant' → logprob: -9.999255180358887
    9. '_' → logprob: -10.124255180358887
    10. '[' → logprob: -10.124255180358887

Token 744: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6316211819648743
    2. '   ' → logprob: -1.2566211223602295
    3. ':' → logprob: -2.5066211223602295
    4. ' ' → logprob: -3.6316211223602295
    5. ' à' → logprob: -3.6316211223602295
    6. '):' → logprob: -4.381621360778809
    7. ' =' → logprob: -5.381621360778809
    8. ')' → logprob: -5.506621360778809
    9. ' :' → logprob: -6.006621360778809
    10. '=' → logprob: -6.006621360778809

Token 745: ' couleur' (ID: 48005)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.28286176919937134
    2. 's' → logprob: -1.9078617095947266
    3. 'la' → logprob: -2.7828617095947266
    4. 'c' → logprob: -4.782861709594727
    5. 'code' → logprob: -5.032861709594727
    6. 'color' → logprob: -5.282861709594727
    7. 'S' → logprob: -6.407861709594727
    8. 'r' → logprob: -6.657861709594727
    9. 'cha' → logprob: -6.907861709594727
    10. 'f' → logprob: -7.032861709594727

Token 746: ' `' (ID: 2700)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.666620671749115
    2. ' s' → logprob: -1.7916207313537598
    3. ' aux' → logprob: -2.2916207313537598
    4. '(s' → logprob: -3.4166207313537598
    5. 'r' → logprob: -3.4166207313537598
    6. ' à' → logprob: -3.5416207313537598
    7. ''' → logprob: -4.04162073135376
    8. ',' → logprob: -4.54162073135376
    9. 'au' → logprob: -4.91662073135376
    10. ' au' → logprob: -4.91662073135376

Token 747: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00022678142704535276
    2. 'r' → logprob: -9.250226974487305
    3. ' s' → logprob: -10.375226974487305
    4. ')' → logprob: -10.625226974487305
    5. 'c' → logprob: -11.000226974487305
    6. '```' → logprob: -11.375226974487305
    7. '`s' → logprob: -12.250226974487305
    8. '`' → logprob: -12.250226974487305
    9. '
' → logprob: -12.500226974487305
    10. 'f' → logprob: -12.500226974487305

Token 748: '`' (ID: 63)
  Prédit: '`'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '`' → logprob: -1.1654670238494873
    2. '`:' → logprob: -1.2904670238494873
    3. '):' → logprob: -1.5404670238494873
    4. '):
' → logprob: -2.2904670238494873
    5. ')`' → logprob: -3.6654670238494873
    6. '[' → logprob: -3.9154670238494873
    7. '[i' → logprob: -4.415467262268066
    8. '[r' → logprob: -4.540467262268066
    9. ')' → logprob: -4.790467262268066
    10. '`)' → logprob: -5.290467262268066

Token 749: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0557101964950562
    2. '):' → logprob: -1.0557101964950562
    3. '   ' → logprob: -2.0557103157043457
    4. ',' → logprob: -2.4307103157043457
    5. '):
' → logprob: -2.9307103157043457
    6. ')' → logprob: -4.555710315704346
    7. ':
' → logprob: -5.430710315704346
    8. '```' → logprob: -5.805710315704346
    9. 'à' → logprob: -6.430710315704346
    10. ' à' → logprob: -6.430710315704346

Token 750: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.010159638710319996
    2. 'r' → logprob: -5.510159492492676
    3. ' res' → logprob: -6.135159492492676
    4. 'z' → logprob: -6.760159492492676
    5. '(
' → logprob: -7.385159492492676
    6. '(res' → logprob: -7.510159492492676
    7. 's' → logprob: -7.885159492492676
    8. 'Mod' → logprob: -8.760159492492676
    9. ')' → logprob: -8.760159492492676
    10. '...' → logprob: -9.135159492492676

Token 751: ' personne' (ID: 26304)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0019878149032593
    2. 'r' → logprob: -1.2519878149032593
    3. 'Mod' → logprob: -2.126987934112549
    4. '(
' → logprob: -2.251987934112549
    5. 'if' → logprob: -3.501987934112549
    6. 'def' → logprob: -4.251987934112549
    7. '(Mod' → logprob: -4.626987934112549
    8. 'return' → logprob: -4.751987934112549
    9. 'next' → logprob: -5.001987934112549
    10. 's' → logprob: -5.001987934112549

Token 752: ' é' (ID: 1212)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1160461902618408
    2. ',' → logprob: -1.2410461902618408
    3. ':' → logprob: -1.4910461902618408
    4. 'def' → logprob: -3.241046190261841
    5. '):' → logprob: -4.116045951843262
    6. ''' → logprob: -4.241045951843262
    7. ' suivante' → logprob: -4.241045951843262
    8. '`' → logprob: -4.491045951843262
    9. 's' → logprob: -4.991045951843262
    10. '(s' → logprob: -5.241045951843262

Token 753: 'lig' (ID: 5556)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.7215250134468079
    2. 't' → logprob: -1.596524953842163
    3. 'quipe' → logprob: -2.471524953842163
    4. 'None' → logprob: -3.346524953842163
    5. '#' → logprob: -3.846524953842163
    6. 'q' → logprob: -3.971524953842163
    7. 'x' → logprob: -4.471525192260742
    8. 'count' → logprob: -4.471525192260742
    9. 'n' → logprob: -4.471525192260742
    10. 'crire' → logprob: -4.721525192260742

Token 754: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.0007707939948886633
    2. 'u' → logprob: -7.750770568847656
    3. 'ib' → logprob: -8.875770568847656
    4. 'i' → logprob: -9.875770568847656
    5. 'ue' → logprob: -10.125770568847656
    6. 'ibl' → logprob: -10.875770568847656
    7. 'uée' → logprob: -10.875770568847656
    8. 'ble' → logprob: -11.125770568847656
    9. 'uable' → logprob: -11.625770568847656
    10. 'e' → logprob: -11.625770568847656

Token 755: ' qui' (ID: 2780)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5979246497154236
    2. ',' → logprob: -1.4729247093200684
    3. '   ' → logprob: -1.8479247093200684
    4. 'def' → logprob: -3.8479247093200684
    5. '(s' → logprob: -4.347924709320068
    6. '):' → logprob: -4.597924709320068
    7. '.' → logprob: -5.097924709320068
    8. ':
' → logprob: -6.097924709320068
    9. 's' → logprob: -6.222924709320068
    10. '():' → logprob: -7.097924709320068

Token 756: ' possède' (ID: 76927)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8858163356781006
    2. 'n' → logprob: -1.2608163356781006
    3. 's' → logprob: -2.5108163356781006
    4. 'r' → logprob: -3.0108163356781006
    5. 'next' → logprob: -3.2608163356781006
    6. 'b' → logprob: -4.13581657409668
    7. 'vient' → logprob: -4.26081657409668
    8. 'poss' → logprob: -4.38581657409668
    9. ' a' → logprob: -4.51081657409668
    10. '...' → logprob: -4.63581657409668

Token 757: ' actuellement' (ID: 67741)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8177440762519836
    2. 'r' → logprob: -1.4427440166473389
    3. 'le' → logprob: -2.442744016647339
    4. 'res' → logprob: -3.192744016647339
    5. 'l' → logprob: -3.567744016647339
    6. 'the' → logprob: -3.567744016647339
    7. ' la' → logprob: -3.692744016647339
    8. 's' → logprob: -3.692744016647339
    9. '```' → logprob: -3.692744016647339
    10. 'les' → logprob: -4.067744255065918

Token 758: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25110647082328796
    2. 'res' → logprob: -2.0011065006256104
    3. ''r' → logprob: -3.0011065006256104
    4. ''' → logprob: -4.001106262207031
    5. 'la' → logprob: -6.126106262207031
    6. 'le' → logprob: -6.126106262207031
    7. 'rg' → logprob: -6.251106262207031
    8. '"' → logprob: -6.376106262207031
    9. 'the' → logprob: -6.376106262207031
    10. 's' → logprob: -6.751106262207031

Token 759: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7804423570632935
    2. '   ' → logprob: -1.0304423570632935
    3. 's' → logprob: -2.905442237854004
    4. ',' → logprob: -3.780442237854004
    5. ' la' → logprob: -3.905442237854004
    6. ''' → logprob: -4.030442237854004
    7. ' ' → logprob: -4.780442237854004
    8. 'the' → logprob: -4.905442237854004
    9. '(s' → logprob: -5.530442237854004
    10. ' :' → logprob: -5.530442237854004

Token 760: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6659088134765625
    2. 'le' (adapté à ' le') → logprob: -1.4159088134765625
    3. 'r' → logprob: -2.1659088134765625
    4. 'res' → logprob: -3.5409088134765625
    5. 'l' → logprob: -3.6659088134765625
    6. ' la' → logprob: -4.1659088134765625
    7. 'les' → logprob: -4.5409088134765625
    8. 's' → logprob: -4.6659088134765625
    9. 'une' → logprob: -5.1659088134765625
    10. 'plus' → logprob: -5.2909088134765625

Token 761: ' plus' (ID: 2932)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1669938564300537
    2. 'r' → logprob: -2.0419938564300537
    3. 's' → logprob: -4.791994094848633
    4. '```' → logprob: -5.166994094848633
    5. 'same' → logprob: -5.791994094848633
    6. 'next' → logprob: -6.916994094848633
    7. ' res' → logprob: -7.166994094848633
    8. 'b' → logprob: -7.291994094848633
    9. '+' → logprob: -7.416994094848633
    10. 'best' → logprob: -8.041994094848633

Token 762: ' de' (ID: 334)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4016727209091187
    2. 'r' → logprob: -1.7766727209091187
    3. 's' → logprob: -2.526672840118408
    4. ')' → logprob: -3.026672840118408
    5. '+' → logprob: -3.026672840118408
    6. 'plus' → logprob: -3.151672840118408
    7. 'likely' → logprob: -3.651672840118408
    8. '`' → logprob: -4.026672840118408
    9. 'près' → logprob: -4.151672840118408
    10. 'à' → logprob: -4.151672840118408

Token 763: ' ball' (ID: 7880)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.917812705039978
    2. 'r' → logprob: -1.417812705039978
    3. 'ball' → logprob: -2.5428128242492676
    4. '```' → logprob: -3.1678128242492676
    5. 'ress' → logprob: -3.4178128242492676
    6. 'b' → logprob: -3.5428128242492676
    7. 'une' → logprob: -3.7928128242492676
    8. 'z' → logprob: -4.042812824249268
    9. 'tokens' → logprob: -4.167812824249268
    10. 'la' → logprob: -4.167812824249268

Token 764: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.007011832669377327
    2. 'e' → logprob: -5.007011890411377
    3. 's' → logprob: -8.257011413574219
    4. ' es' → logprob: -11.882011413574219
    5. '```' → logprob: -11.882011413574219
    6. 'les' → logprob: -12.382011413574219
    7. '<|end|>' → logprob: -13.569511413574219
    8. ')' → logprob: -13.569511413574219
    9. 'u' → logprob: -13.882011413574219
    10. 'a' → logprob: -13.944511413574219

Token 765: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4824039041996002
    2. ',' → logprob: -1.8574038743972778
    3. ':' → logprob: -2.1074039936065674
    4. '):' → logprob: -2.6074039936065674
    5. ' :' → logprob: -4.482403755187988
    6. '.' → logprob: -4.732403755187988
    7. ')' → logprob: -5.982403755187988
    8. '  ' → logprob: -6.232403755187988
    9. '):
' → logprob: -6.482403755187988
    10. 's' → logprob: -6.982403755187988

Token 766: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004867261275649071
    2. 'et' → logprob: -6.504867076873779
    3. ' et' → logprob: -7.004867076873779
    4. '       ' → logprob: -8.129867553710938
    5. 'def' → logprob: -8.254867553710938
    6. '```' → logprob: -8.504867553710938
    7. ' ou' → logprob: -8.629867553710938
    8. ',' → logprob: -8.754867553710938
    9. ' ' → logprob: -8.879867553710938
    10. '.' → logprob: -9.004867553710938

Token 767: ' tenant' (ID: 38634)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.37660127878189087
    2. 'fonction' → logprob: -1.626601219177246
    3. ' global' → logprob: -3.751601219177246
    4. ' s' → logprob: -4.251601219177246
    5. '```' → logprob: -4.501601219177246
    6. 'global' → logprob: -4.626601219177246
    7. 'return' → logprob: -5.001601219177246
    8. 'ret' → logprob: -5.126601219177246
    9. ' return' → logprob: -5.376601219177246
    10. ' suivant' → logprob: -5.501601219177246

Token 768: ' compte' (ID: 19657)
  Prédit: ' compte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compte' → logprob: -0.45872461795806885
    2. ')' → logprob: -2.3337244987487793
    3. 'comp' → logprob: -2.3337244987487793
    4. 'account' → logprob: -3.0837244987487793
    5. 'à' → logprob: -3.8337244987487793
    6. 's' → logprob: -4.083724498748779
    7. 'for' → logprob: -4.333724498748779
    8. '```' → logprob: -4.333724498748779
    9. 'def' → logprob: -4.583724498748779
    10. 'r' → logprob: -5.208724498748779

Token 769: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5825059413909912
    2. ' des' → logprob: -0.9575059413909912
    3. ' du' → logprob: -3.207505941390991
    4. 's' → logprob: -5.33250617980957
    5. 'des' → logprob: -5.95750617980957
    6. ' d' → logprob: -6.08250617980957
    7. ')' → logprob: -6.08250617980957
    8. '<|end|>' → logprob: -6.70750617980957
    9. 'de' → logprob: -6.83250617980957
    10. ' )' → logprob: -7.95750617980957

Token 770: ' p' (ID: 275)
  Prédit: ' couleurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couleurs' → logprob: -1.2586876153945923
    2. ' contraintes' → logprob: -1.8836876153945923
    3. ' espaces' → logprob: -2.0086874961853027
    4. 'cou' → logprob: -2.7586874961853027
    5. ' conditions' → logprob: -2.8836874961853027
    6. 'r' → logprob: -2.8836874961853027
    7. ' règles' → logprob: -3.3836874961853027
    8. ' s' → logprob: -3.7586874961853027
    9. 'diff' → logprob: -3.7586874961853027
    10. 's' → logprob: -4.258687496185303

Token 771: 'aires' (ID: 8507)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.050803303718567
    2. 'r' → logprob: -1.550803303718567
    3. 'lus' → logprob: -1.800803303718567
    4. 'ro' → logprob: -2.9258031845092773
    5. 'ré' → logprob: -3.1758031845092773
    6. 'oss' → logprob: -3.3008031845092773
    7. 'erson' → logprob: -3.8008031845092773
    8. 'arc' → logprob: -3.9258031845092773
    9. 'os' → logprob: -4.550803184509277
    10. 'l' → logprob: -4.675803184509277

Token 772: ' form' (ID: 1625)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8036248087882996
    2. '   ' → logprob: -1.1786248683929443
    3. ',' → logprob: -2.3036248683929443
    4. '):' → logprob: -3.3036248683929443
    5. 's' → logprob: -4.178624629974365
    6. '_' → logprob: -4.178624629974365
    7. '(s' → logprob: -4.178624629974365
    8. ':' → logprob: -4.303624629974365
    9. ' ' → logprob: -5.178624629974365
    10. '<|end|>' → logprob: -5.428624629974365

Token 773: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0642470121383667
    2. 'ed' → logprob: -2.9392471313476562
    3. 'ée' → logprob: -5.314247131347656
    4. 'es' → logprob: -5.689247131347656
    5. 'é' → logprob: -7.939247131347656
    6. 'e' → logprob: -8.689247131347656
    7. 'és' → logprob: -9.064247131347656
    8. 's' → logprob: -9.439247131347656
    9. 'ee' → logprob: -9.689247131347656
    10. 'd' → logprob: -10.064247131347656

Token 774: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16673417389392853
    2. ',' → logprob: -2.291734218597412
    3. '):' → logprob: -3.791734218597412
    4. ')' → logprob: -3.916734218597412
    5. '):
' → logprob: -5.416734218597412
    6. '.' → logprob: -6.541734218597412
    7. ':' → logprob: -7.166734218597412
    8. ' ,' → logprob: -7.416734218597412
    9. '  ' → logprob: -7.541734218597412
    10. ',
' → logprob: -7.916734218597412

Token 775: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08831478655338287
    2. '):
' → logprob: -2.9633147716522217
    3. '):' → logprob: -4.088315010070801
    4. '```' → logprob: -5.213315010070801
    5. ':' → logprob: -5.588315010070801
    6. ':
' → logprob: -5.713315010070801
    7. ')' → logprob: -5.838315010070801
    8. ',' → logprob: -9.2133150100708
    9. '"""
' → logprob: -9.2133150100708
    10. '
' → logprob: -9.4633150100708

Token 776: ' Param' (ID: 14796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09416671097278595
    2. ':' → logprob: -2.4691667556762695
    3. '
' → logprob: -6.8441667556762695
    4. '```' → logprob: -7.2191667556762695
    5. ' 
' → logprob: -7.4691667556762695
    6. ':
' → logprob: -7.5941667556762695
    7. ' if' → logprob: -7.5941667556762695
    8. ' :' → logprob: -8.09416675567627
    9. ' ' → logprob: -8.46916675567627
    10. '):' → logprob: -8.59416675567627

Token 777: 'ètres' (ID: 40427)
  Prédit: 'eter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eter' → logprob: -0.8010155558586121
    2. 's' → logprob: -1.3010156154632568
    3. 'ètre' → logprob: -2.051015615463257
    4. ',' → logprob: -2.676015615463257
    5. 'etre' → logprob: -4.176015377044678
    6. 'éter' → logprob: -4.426015377044678
    7. 'eters' → logprob: -4.801015377044678
    8. ':' → logprob: -4.926015377044678
    9. 'e' → logprob: -5.051015377044678
    10. '_' → logprob: -5.051015377044678

Token 778: ' :
' (ID: 10039)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1141541600227356
    2. ':' → logprob: -3.114154100418091
    3. '):' → logprob: -3.239154100418091
    4. '   ' → logprob: -4.48915433883667
    5. '(' → logprob: -5.48915433883667
    6. '(s' → logprob: -5.73915433883667
    7. ')' → logprob: -6.36415433883667
    8. '):
' → logprob: -6.98915433883667
    9. '.' → logprob: -7.36415433883667
    10. 's' → logprob: -7.86415433883667

Token 779: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03641113266348839
    2. ')' → logprob: -3.9114110469818115
    3. '       ' → logprob: -5.286411285400391
    4. ',' → logprob: -5.411411285400391
    5. '):' → logprob: -5.786411285400391
    6. 's' → logprob: -6.786411285400391
    7. '    
' → logprob: -8.03641128540039
    8. '):
' → logprob: -8.16141128540039
    9. ':' → logprob: -8.28641128540039
    10. '    ' → logprob: -8.41141128540039

Token 780: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.03712550923228264
    2. '   ' → logprob: -3.912125587463379
    3. ' s' → logprob: -4.412125587463379
    4. 'color' → logprob: -6.162125587463379
    5. 'self' → logprob: -6.912125587463379
    6. ' color' → logprob: -8.287125587463379
    7. '       ' → logprob: -8.287125587463379
    8. 'c' → logprob: -9.037125587463379
    9. ')' → logprob: -9.162125587463379
    10. 'i' → logprob: -9.912125587463379

Token 781: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04047362878918648
    2. '<|end|>' → logprob: -4.040473461151123
    3. ':' → logprob: -4.915473461151123
    4. ')' → logprob: -5.290473461151123
    5. '):
' → logprob: -5.790473461151123
    6. ',' → logprob: -5.915473461151123
    7. '   ' → logprob: -6.415473461151123
    8. '<|end|>' → logprob: -6.790473461151123
    9. '[' → logprob: -8.290473937988281
    10. '  ' → logprob: -9.165473937988281

Token 782: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0029236339032649994
    2. 'int' → logprob: -6.752923488616943
    3. ')' → logprob: -6.877923488616943
    4. ' str' → logprob: -7.877923488616943
    5. '):' → logprob: -8.877923965454102
    6. '[str' → logprob: -10.002923965454102
    7. '   ' → logprob: -10.127923965454102
    8. ':str' → logprob: -10.252923965454102
    9. 'char' → logprob: -10.502923965454102
    10. 's' → logprob: -10.627923965454102

Token 783: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02612924762070179
    2. '):
' → logprob: -3.7761292457580566
    3. ')' → logprob: -6.151129245758057
    4. '   ' → logprob: -8.151129722595215
    5. '):
' → logprob: -8.276129722595215
    6. ':' → logprob: -9.026129722595215
    7. ',' → logprob: -9.526129722595215
    8. '):

' → logprob: -13.026129722595215
    9. '```' → logprob: -13.401129722595215
    10. ' ):' → logprob: -13.651129722595215

Token 784: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03465583175420761
    2. '):
' → logprob: -4.034656047821045
    3. ',' → logprob: -4.534656047821045
    4. ')' → logprob: -5.909656047821045
    5. '   ' → logprob: -6.534656047821045
    6. ':' → logprob: -6.659656047821045
    7. '):
' → logprob: -9.659655570983887
    8. '[' → logprob: -10.284655570983887
    9. '<|end|>' → logprob: -10.284655570983887
    10. '  ' → logprob: -12.034655570983887

Token 785: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.41496503353118896
    2. 's' → logprob: -2.1649651527404785
    3. ')' → logprob: -3.1649651527404785
    4. ' '' → logprob: -3.1649651527404785
    5. '   ' → logprob: -3.1649651527404785
    6. ''s' → logprob: -3.2899651527404785
    7. '"' → logprob: -3.5399651527404785
    8. ' s' → logprob: -4.7899651527404785
    9. 'str' → logprob: -5.2899651527404785
    10. ' str' → logprob: -5.4149651527404785

Token 786: ' couleur' (ID: 48005)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2785208523273468
    2. ')' → logprob: -2.0285208225250244
    3. ''' → logprob: -2.6535208225250244
    4. ' )' → logprob: -4.5285210609436035
    5. 'c' → logprob: -5.0285210609436035
    6. '"' → logprob: -5.2785210609436035
    7. '   ' → logprob: -5.7785210609436035
    8. 's' → logprob: -6.0285210609436035
    9. '):' → logprob: -6.1535210609436035
    10. '_' → logprob: -6.4035210609436035

Token 787: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6196484565734863
    2. '):' → logprob: -1.2446484565734863
    3. '   ' → logprob: -2.6196484565734863
    4. ':' → logprob: -2.9946484565734863
    5. ',' → logprob: -3.8696484565734863
    6. '<|end|>' → logprob: -4.494648456573486
    7. ''' → logprob: -5.119648456573486
    8. '):
' → logprob: -5.244648456573486
    9. ' ' → logprob: -6.244648456573486
    10. '  ' → logprob: -6.369648456573486

Token 788: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25882619619369507
    2. ' la' → logprob: -2.13382625579834
    3. ')' → logprob: -2.88382625579834
    4. 'la' → logprob: -3.50882625579834
    5. 'l' → logprob: -4.75882625579834
    6. ' s' → logprob: -5.25882625579834
    7. 'the' → logprob: -5.50882625579834
    8. ' the' → logprob: -6.00882625579834
    9. 'le' → logprob: -6.50882625579834
    10. ''' → logprob: -8.00882625579834

Token 789: ' balle' (ID: 147386)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025821316987276077
    2. 'current' → logprob: -5.025821208953857
    3. 'b' → logprob: -5.525821208953857
    4. ' s' → logprob: -5.650821208953857
    5. ''' → logprob: -5.775821208953857
    6. 'c' → logprob: -6.275821208953857
    7. 'ball' → logprob: -6.650821208953857
    8. ' current' → logprob: -6.775821208953857
    9. ')' → logprob: -7.025821208953857
    10. ' ' → logprob: -7.400821208953857

Token 790: ' ('' (ID: 9906)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6705793142318726
    2. ')' → logprob: -1.0455793142318726
    3. '   ' → logprob: -2.295579433441162
    4. '):
' → logprob: -3.420579433441162
    5. '<|end|>' → logprob: -6.420579433441162
    6. ':' → logprob: -7.670579433441162
    7. ',' → logprob: -7.670579433441162
    8. '       ' → logprob: -8.295578956604004
    9. '  ' → logprob: -8.545578956604004
    10. ')
' → logprob: -9.420578956604004

Token 791: 'R' (ID: 49)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.22162063419818878
    2. ''' → logprob: -2.596620559692383
    3. ''r' → logprob: -2.596620559692383
    4. 'R' → logprob: -3.596620559692383
    5. 'b' → logprob: -5.096620559692383
    6. '')' → logprob: -5.471620559692383
    7. 'str' → logprob: -6.096620559692383
    8. 'rgb' → logprob: -6.221620559692383
    9. 's' → logprob: -6.596620559692383
    10. 'RGB' → logprob: -6.846620559692383

Token 792: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.732616126537323
    2. ''' → logprob: -0.982616126537323
    3. ''),' → logprob: -3.1076161861419678
    4. '',' → logprob: -3.2326161861419678
    5. '')
' → logprob: -4.232615947723389
    6. ',' → logprob: -4.357615947723389
    7. 'ed' → logprob: -4.607615947723389
    8. ' '' → logprob: -4.982615947723389
    9. ')' → logprob: -5.607615947723389
    10. ' ')' → logprob: -5.982615947723389

Token 793: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005122157279402018
    2. ' '' → logprob: -6.380122184753418
    3. 'G' → logprob: -6.755122184753418
    4. 'B' → logprob: -7.755122184753418
    5. '   ' → logprob: -7.755122184753418
    6. ')' → logprob: -8.380122184753418
    7. ' G' → logprob: -8.505122184753418
    8. '"' → logprob: -9.005122184753418
    9. '       ' → logprob: -9.005122184753418
    10. ' ' → logprob: -9.130122184753418

Token 794: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.000263481488218531
    2. ' G' → logprob: -8.500263214111328
    3. 'B' → logprob: -11.000263214111328
    4. ''' → logprob: -11.000263214111328
    5. ' ' → logprob: -11.625263214111328
    6. '   ' → logprob: -12.500263214111328
    7. 'V' → logprob: -13.125263214111328
    8. '')' → logprob: -13.437763214111328
    9. '"' → logprob: -13.937763214111328
    10. '  ' → logprob: -13.937763214111328

Token 795: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.12891291081905365
    2. ''' → logprob: -2.128912925720215
    3. '')' → logprob: -7.753912925720215
    4. 'b' → logprob: -8.003912925720215
    5. ')',' → logprob: -8.128912925720215
    6. ',' → logprob: -8.253912925720215
    7. ''):
' → logprob: -8.503912925720215
    8. ''),' → logprob: -8.878912925720215
    9. ''or' → logprob: -9.378912925720215
    10. '')
' → logprob: -9.878912925720215

Token 796: ' ou' (ID: 2031)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.7682044506072998
    2. ',' → logprob: -1.1432044506072998
    3. '')' → logprob: -2.5182044506073
    4. ''' → logprob: -3.0182044506073
    5. '   ' → logprob: -3.1432044506073
    6. ')' → logprob: -3.3932044506073
    7. ' ou' → logprob: -5.893204689025879
    8. ' or' → logprob: -6.018204689025879
    9. ''):
' → logprob: -6.643204689025879
    10. ''),' → logprob: -6.768204689025879

Token 797: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16416066884994507
    2. 'B' → logprob: -1.9141607284545898
    3. ' '' → logprob: -5.78916072845459
    4. ' B' → logprob: -8.16416072845459
    5. '   ' → logprob: -8.78916072845459
    6. '')' → logprob: -8.91416072845459
    7. ')' → logprob: -9.53916072845459
    8. 'b' → logprob: -9.91416072845459
    9. ' ' → logprob: -10.16416072845459
    10. ''b' → logprob: -10.41416072845459

Token 798: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.6895233531831764e-05
    2. ''' → logprob: -11.50002670288086
    3. ' B' → logprob: -11.50002670288086
    4. 'b' → logprob: -13.12502670288086
    5. '"B' → logprob: -14.00002670288086
    6. '`' → logprob: -14.31252670288086
    7. '')' → logprob: -14.62502670288086
    8. '```' → logprob: -14.93752670288086
    9. '
' → logprob: -15.31252670288086
    10. ' ' → logprob: -15.31252670288086

Token 799: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35694611072540283
    2. '')' → logprob: -1.9819461107254028
    3. ''):
' → logprob: -2.2319459915161133
    4. ''):' → logprob: -3.6069459915161133
    5. '   ' → logprob: -4.481945991516113
    6. '')
' → logprob: -4.731945991516113
    7. '):
' → logprob: -5.731945991516113
    8. ')')
' → logprob: -6.231945991516113
    9. '):' → logprob: -7.356945991516113
    10. ''' → logprob: -7.481945991516113

Token 800: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2313293218612671
    2. ')' → logprob: -2.4813294410705566
    3. '):' → logprob: -2.6063294410705566
    4. '):
' → logprob: -3.1063294410705566
    5. ':' → logprob: -5.981329441070557
    6. ',' → logprob: -7.106329441070557
    7. ':
' → logprob: -8.231328964233398
    8. '    
' → logprob: -8.981328964233398
    9. ')
' → logprob: -9.231328964233398
    10. '       ' → logprob: -9.481328964233398

Token 801: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04535144194960594
    2. '   ' → logprob: -4.295351505279541
    3. 'max' → logprob: -4.545351505279541
    4. 'res' (adapté à ' res') → logprob: -5.170351505279541
    5. ' if' → logprob: -5.545351505279541
    6. 'r' → logprob: -5.920351505279541
    7. 'count' → logprob: -5.920351505279541
    8. 'idx' → logprob: -6.920351505279541
    9. 'counts' → logprob: -6.920351505279541
    10. 'result' → logprob: -7.170351505279541

Token 802: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00426703505218029
    2. '):' → logprob: -5.62926721572876
    3. ':' → logprob: -8.254266738891602
    4. ' ,' → logprob: -9.129266738891602
    5. ')' → logprob: -9.254266738891602
    6. ',
' → logprob: -10.004266738891602
    7. '):
' → logprob: -10.379266738891602
    8. '=' → logprob: -10.504266738891602
    9. ' =' → logprob: -10.629266738891602
    10. '   ' → logprob: -10.754266738891602

Token 803: 'Mod' (ID: 4721)
  Prédit: 'Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.01638541743159294
    2. ')' → logprob: -4.391385555267334
    3. 'int' → logprob: -5.766385555267334
    4. '(Mod' → logprob: -8.141385078430176
    5. ' Mod' → logprob: -8.766385078430176
    6. '):' → logprob: -9.391385078430176
    7. 'res' → logprob: -9.516385078430176
    8. 'Res' → logprob: -9.891385078430176
    9. '):
' → logprob: -10.891385078430176
    10. '   ' → logprob: -11.766385078430176

Token 804: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -6.704273118884885e-07
    2. 'int' → logprob: -15.625000953674316
    3. 'In' → logprob: -15.750000953674316
    4. ' Int' → logprob: -15.875000953674316
    5. ')' → logprob: -16.375
    6. '_int' → logprob: -17.0
    7. 'Ints' → logprob: -17.0
    8. '	Int' → logprob: -17.25
    9. '_Int' → logprob: -17.625
    10. '<Int' → logprob: -17.75

Token 805: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5577611327171326
    2. ',' → logprob: -1.0577611923217773
    3. '):' → logprob: -2.5577611923217773
    4. '):
' → logprob: -6.307761192321777
    5. '),' → logprob: -7.682761192321777
    6. ',
' → logprob: -8.682761192321777
    7. ')
' → logprob: -9.182761192321777
    8. ' )' → logprob: -10.057761192321777
    9. ',)' → logprob: -10.182761192321777
    10. '):

' → logprob: -10.432761192321777

Token 806: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013799566775560379
    2. '):' → logprob: -4.638799667358398
    3. ':' → logprob: -6.388799667358398
    4. '   ' → logprob: -6.513799667358398
    5. ')' → logprob: -7.888799667358398
    6. ',
' → logprob: -8.888799667358398
    7. '=' → logprob: -9.263799667358398
    8. '):
' → logprob: -9.763799667358398
    9. 'def' → logprob: -9.888799667358398
    10. '),' → logprob: -10.388799667358398

Token 807: ' le' (ID: 505)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3246496021747589
    2. ' res' → logprob: -1.3246495723724365
    3. 'Mod' → logprob: -5.449649810791016
    4. ')' → logprob: -6.574649810791016
    5. '   ' → logprob: -6.824649810791016
    6. 'result' → logprob: -7.074649810791016
    7. ' Mod' → logprob: -7.199649810791016
    8. '(Mod' → logprob: -7.199649810791016
    9. '(res' → logprob: -7.574649810791016
    10. 'r' → logprob: -8.199649810791016

Token 808: ' nombre' (ID: 9733)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2639722526073456
    2. 'result' → logprob: -1.513972282409668
    3. ' res' → logprob: -5.138972282409668
    4. 'r' → logprob: -6.138972282409668
    5. 'return' → logprob: -6.263972282409668
    6. ' result' → logprob: -7.263972282409668
    7. 'rés' → logprob: -8.013972282409668
    8. 'rest' → logprob: -8.388972282409668
    9. 'nombre' → logprob: -8.888972282409668
    10. 'number' → logprob: -9.263972282409668

Token 809: ' total' (ID: 3609)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9004968404769897
    2. '<|end|>' → logprob: -1.0254968404769897
    3. '+' → logprob: -2.2754969596862793
    4. '<|end|>' → logprob: -3.2754969596862793
    5. ' +' → logprob: -3.7754969596862793
    6. ' des' → logprob: -4.150496959686279
    7. '_' → logprob: -4.775496959686279
    8. ' +=' → logprob: -5.025496959686279
    9. ' )' → logprob: -5.150496959686279
    10. ' de' → logprob: -5.275496959686279

Token 810: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4119413495063782
    2. ',' → logprob: -2.5369412899017334
    3. ' +=' → logprob: -2.7869412899017334
    4. ' )' → logprob: -3.2869412899017334
    5. '+' → logprob: -3.5369412899017334
    6. '=' → logprob: -3.9119412899017334
    7. ' +' → logprob: -3.9119412899017334
    8. ' ' → logprob: -3.9119412899017334
    9. '*' → logprob: -4.5369415283203125
    10. ' ,' → logprob: -4.7869415283203125

Token 811: ' façons' (ID: 165958)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.09885049611330032
    2. ')' → logprob: -2.9738504886627197
    3. ' res' → logprob: -3.7238504886627197
    4. '*' → logprob: -5.598850727081299
    5. '(res' → logprob: -5.723850727081299
    6. '+' → logprob: -6.098850727081299
    7. '=' → logprob: -6.223850727081299
    8. 'r' → logprob: -6.348850727081299
    9. '(' → logprob: -6.973850727081299
    10. ' ' → logprob: -7.223850727081299

Token 812: ' jusqu' (ID: 21961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 813: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.454122394323349
    2. ''' → logprob: -1.2041224241256714
    3. ')' → logprob: -3.704122304916382
    4. '’à' → logprob: -4.579122543334961
    5. ''ici' → logprob: -5.204122543334961
    6. '_' → logprob: -5.329122543334961
    7. 'à' → logprob: -5.329122543334961
    8. ' ' → logprob: -5.454122543334961
    9. ' à' → logprob: -6.204122543334961
    10. '   ' → logprob: -6.454122543334961

Token 814: ' présent' (ID: 24129)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.5326017737388611
    2. 'prés' → logprob: -1.9076018333435059
    3. 'present' → logprob: -1.9076018333435059
    4. 's' → logprob: -3.407601833343506
    5. 'maint' → logprob: -3.782601833343506
    6. ' maintenant' → logprob: -4.532601833343506
    7. 'res' → logprob: -4.907601833343506
    8. 'au' → logprob: -4.907601833343506
    9. ' présent' → logprob: -5.032601833343506
    10. ' now' → logprob: -5.407601833343506

Token 815: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056702375411987305
    2. ')' → logprob: -3.4317023754119873
    3. ',' → logprob: -4.556702613830566
    4. '<|end|>' → logprob: -4.806702613830566
    5. '       ' → logprob: -6.806702613830566
    6. '<|end|>' → logprob: -7.431702613830566
    7. ',
' → logprob: -8.181702613830566
    8. '    
' → logprob: -8.181702613830566
    9. '...' → logprob: -8.181702613830566
    10. ')
' → logprob: -8.306702613830566

Token 816: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35353636741638184
    2. ',' → logprob: -1.7285363674163818
    3. ')' → logprob: -2.728536367416382
    4. '):' → logprob: -3.228536367416382
    5. '):
' → logprob: -4.853536605834961
    6. ':' → logprob: -5.728536605834961
    7. ',
' → logprob: -5.728536605834961
    8. '    
' → logprob: -8.728536605834961
    9. ')
' → logprob: -9.103536605834961
    10. ' :' → logprob: -9.103536605834961

Token 817: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.5174071788787842
    2. 'if' → logprob: -1.0174071788787842
    3. 'return' → logprob: -3.392407178878784
    4. 'r' → logprob: -5.392407417297363
    5. '   ' → logprob: -7.142407417297363
    6. ' if' → logprob: -7.517407417297363
    7. 'max' → logprob: -7.517407417297363
    8. 'rg' → logprob: -7.517407417297363
    9. 'zr' → logprob: -8.017407417297363
    10. ' z' → logprob: -8.267407417297363

Token 818: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014335906133055687
    2. ')' → logprob: -4.514336109161377
    3. ' ,' → logprob: -6.514336109161377
    4. ',
' → logprob: -7.264336109161377
    5. '):' → logprob: -8.514335632324219
    6. '<|end|>' → logprob: -8.639335632324219
    7. '   ' → logprob: -9.139335632324219
    8. '):
' → logprob: -9.264335632324219
    9. '[' → logprob: -9.514335632324219
    10. '),' → logprob: -9.764335632324219

Token 819: 'int' (ID: 491)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3185330927371979
    2. ')' → logprob: -1.4435330629348755
    3. '):' → logprob: -3.943533182144165
    4. '   ' → logprob: -5.568532943725586
    5. ' ,' → logprob: -5.693532943725586
    6. '),' → logprob: -5.818532943725586
    7. ' )' → logprob: -6.568532943725586
    8. '  ' → logprob: -7.068532943725586
    9. '[' → logprob: -7.443532943725586
    10. 'int' → logprob: -7.568532943725586

Token 820: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9640696048736572
    2. '):' → logprob: -1.2140696048736572
    3. ',' → logprob: -1.4640696048736572
    4. '):
' → logprob: -2.7140696048736572
    5. '   ' → logprob: -4.464069366455078
    6. '+' → logprob: -4.589069366455078
    7. '),' → logprob: -7.339069366455078
    8. '-' → logprob: -7.964069366455078
    9. ' +' → logprob: -8.089069366455078
    10. ',
' → logprob: -8.339069366455078

Token 821: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002677918178960681
    2. '   ' → logprob: -6.752677917480469
    3. ',
' → logprob: -7.002677917480469
    4. ':' → logprob: -8.627677917480469
    5. '<|end|>' → logprob: -9.127677917480469
    6. '):' → logprob: -9.252677917480469
    7. ' ,' → logprob: -9.502677917480469
    8. ')' → logprob: -9.627677917480469
    9. '<|end|>' → logprob: -11.752677917480469
    10. '):
' → logprob: -12.252677917480469

Token 822: ' nombre' (ID: 9733)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06057625263929367
    2. ' z' → logprob: -3.5605762004852295
    3. 'int' → logprob: -4.185576438903809
    4. '0' → logprob: -5.935576438903809
    5. 's' → logprob: -6.185576438903809
    6. 'sum' → logprob: -6.185576438903809
    7. 'max' → logprob: -6.435576438903809
    8. '...' → logprob: -7.060576438903809
    9. 'None' → logprob: -7.310576438903809
    10. 'N' → logprob: -7.310576438903809

Token 823: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9474496245384216
    2. ',' → logprob: -1.4474496841430664
    3. '<|end|>' → logprob: -2.5724496841430664
    4. '+' → logprob: -2.9474496841430664
    5. 'de' → logprob: -3.5724496841430664
    6. ' +' → logprob: -3.6974496841430664
    7. 'des' → logprob: -3.8224496841430664
    8. '...' → logprob: -4.072449684143066
    9. '=' → logprob: -4.072449684143066
    10. '   ' → logprob: -4.197449684143066

Token 824: ' personnes' (ID: 20203)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24753187596797943
    2. 'r' → logprob: -1.7475318908691406
    3. 's' → logprob: -4.872531890869141
    4. 'z' → logprob: -4.872531890869141
    5. 'res' → logprob: -5.247531890869141
    6. 'None' → logprob: -5.247531890869141
    7. '(' → logprob: -6.372531890869141
    8. 'ball' → logprob: -6.622531890869141
    9. 'br' → logprob: -6.747531890869141
    10. '(r' → logprob: -6.747531890869141

Token 825: ' sans' (ID: 9828)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.377461314201355
    2. ',' → logprob: -2.0024614334106445
    3. '<|end|>' → logprob: -2.2524614334106445
    4. ' ,' → logprob: -2.6274614334106445
    5. '   ' → logprob: -2.7524614334106445
    6. ' )' → logprob: -2.8774614334106445
    7. ' =' → logprob: -3.0024614334106445
    8. 's' → logprob: -3.2524614334106445
    9. 'ayant' → logprob: -3.6274614334106445
    10. ' ' → logprob: -3.7524614334106445

Token 826: ' balle' (ID: 147386)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.012624189257621765
    2. 'b' → logprob: -4.637624263763428
    3. ' ball' → logprob: -6.012624263763428
    4. '```' → logprob: -8.88762378692627
    5. ' balle' → logprob: -9.13762378692627
    6. 'bal' → logprob: -9.26262378692627
    7. 'balls' → logprob: -10.63762378692627
    8. '(ball' → logprob: -11.51262378692627
    9. '   ' → logprob: -11.88762378692627
    10. '0' → logprob: -12.13762378692627

Token 827: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19737085700035095
    2. ',
' → logprob: -2.572370767593384
    3. '   ' → logprob: -3.197370767593384
    4. ')' → logprob: -3.447370767593384
    5. '):' → logprob: -4.197371006011963
    6. '):
' → logprob: -4.322371006011963
    7. '
' → logprob: -7.947371006011963
    8. ':' → logprob: -8.322370529174805
    9. ')
' → logprob: -8.322370529174805
    10. 's' → logprob: -8.572370529174805

Token 828: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3343360126018524
    2. ',' → logprob: -1.4593360424041748
    3. ')' → logprob: -3.334336042404175
    4. '):' → logprob: -5.084335803985596
    5. '):
' → logprob: -5.209335803985596
    6. ',
' → logprob: -5.959335803985596
    7. '```' → logprob: -7.834335803985596
    8. '...' → logprob: -8.209336280822754
    9. '\t' → logprob: -8.209336280822754
    10. ':' → logprob: -8.959336280822754

Token 829: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.003981635440140963
    2. ' r' → logprob: -6.753981590270996
    3. 'z' → logprob: -7.503981590270996
    4. 'rg' → logprob: -7.503981590270996
    5. 'R' → logprob: -8.253981590270996
    6. 'int' → logprob: -8.753981590270996
    7. '       ' → logprob: -9.128981590270996
    8. 'res' → logprob: -9.253981590270996
    9. 'def' → logprob: -9.253981590270996
    10. '           ' → logprob: -9.378981590270996

Token 830: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029610616620630026
    2. ' ,' → logprob: -6.752961158752441
    3. ',
' → logprob: -7.002961158752441
    4. ')' → logprob: -7.877961158752441
    5. ':' → logprob: -9.127961158752441
    6. ' =' → logprob: -9.377961158752441
    7. '=' → logprob: -9.877961158752441
    8. '<|end|>' → logprob: -10.127961158752441
    9. '),' → logprob: -10.627961158752441
    10. '):' → logprob: -10.877961158752441

Token 831: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001793457195162773
    2. ')' → logprob: -9.500179290771484
    3. 'Mod' → logprob: -10.000179290771484
    4. ' int' → logprob: -11.250179290771484
    5. 'Int' → logprob: -11.250179290771484
    6. '(int' → logprob: -11.875179290771484
    7. '[int' → logprob: -11.875179290771484
    8. 'r' → logprob: -12.000179290771484
    9. ']int' → logprob: -13.125179290771484
    10. '...)' → logprob: -13.750179290771484

Token 832: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016306845471262932
    2. '),' → logprob: -4.7663068771362305
    3. ')' → logprob: -5.2663068771362305
    4. '):' → logprob: -6.7663068771362305
    5. ',
' → logprob: -7.7663068771362305
    6. '   ' → logprob: -8.26630687713623
    7. '):
' → logprob: -8.39130687713623
    8. ' ,' → logprob: -8.76630687713623
    9. '),
' → logprob: -9.51630687713623
    10. ',r' → logprob: -9.64130687713623

Token 833: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002497302368283272
    2. ',
' → logprob: -6.12749719619751
    3. ' ,' → logprob: -8.752497673034668
    4. '   ' → logprob: -9.252497673034668
    5. ',r' → logprob: -11.252497673034668
    6. ',b' → logprob: -11.502497673034668
    7. ',
' → logprob: -12.002497673034668
    8. ',int' → logprob: -12.502497673034668
    9. ',g' → logprob: -12.502497673034668
    10. '<|end|>' → logprob: -12.627497673034668

Token 834: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23842592537403107
    2. 'r' → logprob: -1.7384259700775146
    3. ' int' → logprob: -3.6134259700775146
    4. ' r' → logprob: -4.9884257316589355
    5. '(int' → logprob: -6.2384257316589355
    6. '[int' → logprob: -8.488426208496094
    7. ' (' → logprob: -9.363426208496094
    8. '0' → logprob: -9.363426208496094
    9. 's' → logprob: -10.238426208496094
    10. '<int' → logprob: -10.363426208496094

Token 835: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7033964991569519
    2. ')' → logprob: -1.5783965587615967
    3. '=' → logprob: -1.5783965587615967
    4. '   ' → logprob: -3.9533965587615967
    5. '<|end|>' → logprob: -3.9533965587615967
    6. '+' → logprob: -5.078396320343018
    7. '==' → logprob: -5.453396320343018
    8. ',
' → logprob: -5.578396320343018
    9. ' =' → logprob: -5.703396320343018
    10. ',r' → logprob: -5.953396320343018

Token 836: ' personnes' (ID: 20203)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.33634358644485474
    2. 'R' → logprob: -1.83634352684021
    3. 's' → logprob: -3.71134352684021
    4. '(s' → logprob: -4.211343765258789
    5. 'red' → logprob: -4.211343765258789
    6. 'Mod' → logprob: -4.711343765258789
    7. 'Red' → logprob: -4.961343765258789
    8. '(r' → logprob: -5.211343765258789
    9. 'int' → logprob: -5.336343765258789
    10. '0' → logprob: -5.461343765258789

Token 837: ' ayant' (ID: 45436)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.6125375032424927
    2. 'rou' → logprob: -1.4875375032424927
    3. ' with' → logprob: -2.737537384033203
    4. ' rouges' → logprob: -3.112537384033203
    5. ' rouge' → logprob: -3.737537384033203
    6. ' avec' → logprob: -4.362537384033203
    7. 'ayant' → logprob: -4.487537384033203
    8. 'avec' → logprob: -4.612537384033203
    9. 'poss' → logprob: -4.612537384033203
    10. '<|end|>' → logprob: -4.612537384033203

Token 838: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47673824429512024
    2. '1' → logprob: -2.351738214492798
    3. 's' → logprob: -2.476738214492798
    4. '>' → logprob: -3.101738214492798
    5. '(s' → logprob: -3.601738214492798
    6. ' red' → logprob: -3.726738214492798
    7. ' ' → logprob: -4.101738452911377
    8. ' s' → logprob: -4.226738452911377
    9. ' r' → logprob: -4.351738452911377
    10. '0' → logprob: -4.351738452911377

Token 839: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.36567461490631104
    2. '0' → logprob: -1.990674614906311
    3. '1' → logprob: -2.8656744956970215
    4. 's' → logprob: -3.4906744956970215
    5. 'R' → logprob: -4.2406744956970215
    6. ''' → logprob: -4.3656744956970215
    7. 'z' → logprob: -4.8656744956970215
    8. '(s' → logprob: -5.2406744956970215
    9. '+' → logprob: -5.3656744956970215
    10. ''s' → logprob: -5.6156744956970215

Token 840: ' balle' (ID: 147386)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 841: ' rouge' (ID: 56930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4426373541355133
    2. '   ' → logprob: -1.692637324333191
    3. ')' → logprob: -1.817637324333191
    4. ' ,' → logprob: -5.6926374435424805
    5. '<|end|>' → logprob: -5.6926374435424805
    6. '),' → logprob: -6.8176374435424805
    7. ',
' → logprob: -7.1926374435424805
    8. 's' → logprob: -7.9426374435424805
    9. ' )' → logprob: -8.31763744354248
    10. ' ' → logprob: -8.31763744354248

Token 842: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0540601015090942
    2. '<|end|>' → logprob: -1.0540601015090942
    3. ')' → logprob: -1.5540601015090942
    4. ',' → logprob: -2.5540599822998047
    5. '<|end|>' → logprob: -5.054059982299805
    6. '       ' → logprob: -5.804059982299805
    7. ' ' → logprob: -7.054059982299805
    8. '...' → logprob: -7.679059982299805
    9. '),' → logprob: -7.929059982299805
    10. '  ' → logprob: -7.929059982299805

Token 843: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.148402601480484
    2. ',' → logprob: -2.523402690887451
    3. ')' → logprob: -3.023402690887451
    4. '       ' → logprob: -5.023402690887451
    5. '<|end|>' → logprob: -7.148402690887451
    6. '```' → logprob: -8.023402214050293
    7. ',
' → logprob: -8.148402214050293
    8. ' ,' → logprob: -9.023402214050293
    9. ' ' → logprob: -9.148402214050293
    10. ')
' → logprob: -9.273402214050293

Token 844: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.000363590574124828
    2. 'b' → logprob: -8.75036334991455
    3. ' g' → logprob: -9.00036334991455
    4. 'int' → logprob: -10.12536334991455
    5. '   ' → logprob: -10.87536334991455
    6. '```' → logprob: -11.50036334991455
    7. '
' → logprob: -12.62536334991455
    8. '(' → logprob: -12.75036334991455
    9. 'r' → logprob: -13.87536334991455
    10. 'def' → logprob: -14.12536334991455

Token 845: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9055023193359375
    2. '(int' → logprob: -1.7805023193359375
    3. ' (' → logprob: -2.0305023193359375
    4. '=int' → logprob: -2.5305023193359375
    5. '=' → logprob: -2.7805023193359375
    6. '[int' → logprob: -3.2805023193359375
    7. ',' → logprob: -3.6555023193359375
    8. ')' → logprob: -3.9055023193359375
    9. 'int' → logprob: -4.1555023193359375
    10. '<|end|>' → logprob: -4.2805023193359375

Token 846: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.676981345459353e-06
    2. ' int' → logprob: -13.125005722045898
    3. '[int' → logprob: -13.125005722045898
    4. '(int' → logprob: -13.750005722045898
    5. '<int' → logprob: -15.250005722045898
    6. '=int' → logprob: -15.750005722045898
    7. ':int' → logprob: -16.0000057220459
    8. ''int' → logprob: -17.1250057220459
    9. ']int' → logprob: -17.1250057220459
    10. ')' → logprob: -17.6250057220459

Token 847: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00955184642225504
    2. '=' → logprob: -5.384552001953125
    3. '   ' → logprob: -6.509552001953125
    4. '):
' → logprob: -6.509552001953125
    5. '):' → logprob: -7.134552001953125
    6. ',' → logprob: -7.384552001953125
    7. '),' → logprob: -9.134552001953125
    8. ')**' → logprob: -9.759552001953125
    9. ' =' → logprob: -10.009552001953125
    10. ')
' → logprob: -10.259552001953125

Token 848: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21292780339717865
    2. '   ' → logprob: -3.08792781829834
    3. ':int' → logprob: -3.21292781829834
    4. '=' → logprob: -3.58792781829834
    5. '(int' → logprob: -3.96292781829834
    6. ' =' → logprob: -4.21292781829834
    7. ',' → logprob: -4.46292781829834
    8. '=int' → logprob: -4.46292781829834
    9. ' :' → logprob: -5.21292781829834
    10. ')' → logprob: -5.46292781829834

Token 849: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008624859154224396
    2. ' int' → logprob: -4.758625030517578
    3. '(int' → logprob: -12.133625030517578
    4. '[int' → logprob: -12.883625030517578
    5. '<int' → logprob: -13.008625030517578
    6. '=int' → logprob: -17.008625030517578
    7. ':int' → logprob: -17.258625030517578
    8. '1' → logprob: -17.383625030517578
    9. ']int' → logprob: -18.883625030517578
    10. ',int' → logprob: -18.883625030517578

Token 850: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0562981367111206
    2. '   ' → logprob: -1.1812981367111206
    3. '=' → logprob: -1.4312981367111206
    4. 'de' → logprob: -2.93129825592041
    5. '[int' → logprob: -4.30629825592041
    6. ' =' → logprob: -4.80629825592041
    7. '=int' → logprob: -5.05629825592041
    8. 'def' → logprob: -5.55629825592041
    9. '```' → logprob: -5.55629825592041
    10. '[' → logprob: -5.93129825592041

Token 851: ' personnes' (ID: 20203)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003243666607886553
    2. '1' → logprob: -5.753243446350098
    3. '(int' → logprob: -10.253243446350098
    4. '[int' → logprob: -11.003243446350098
    5. 'person' → logprob: -11.378243446350098
    6. ' int' → logprob: -13.753243446350098
    7. '<int' → logprob: -14.628243446350098
    8. '(' → logprob: -15.253243446350098
    9. '0' → logprob: -15.503243446350098
    10. 'ints' → logprob: -15.753243446350098

Token 852: ' ayant' (ID: 45436)
  Prédit: 'ayant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayant' → logprob: -0.0856076180934906
    2. ' ayant' → logprob: -2.5856075286865234
    3. 'having' → logprob: -5.960607528686523
    4. '   ' → logprob: -6.335607528686523
    5. ' having' → logprob: -7.210607528686523
    6. '```' → logprob: -8.585607528686523
    7. ' =' → logprob: -8.585607528686523
    8. '=' → logprob: -8.835607528686523
    9. 'have' → logprob: -9.085607528686523
    10. 'avoir' → logprob: -9.085607528686523

Token 853: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026360448449850082
    2. ' ' → logprob: -3.651360511779785
    3. 'int' → logprob: -10.651360511779785
    4. ' int' → logprob: -10.901360511779785
    5. '0' → logprob: -11.276360511779785
    6. ' ' → logprob: -12.901360511779785
    7. ' b' → logprob: -14.401360511779785
    8. '```' → logprob: -14.401360511779785
    9. 'b' → logprob: -15.151360511779785
    10. '<int' → logprob: -15.526360511779785

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021760274830739945
    2. ' ' → logprob: -8.50021743774414
    3. 'int' → logprob: -12.00021743774414
    4. '0' → logprob: -12.25021743774414
    5. '(' → logprob: -14.37521743774414
    6. '   ' → logprob: -14.56271743774414
    7. '
' → logprob: -15.00021743774414
    8. '```' → logprob: -15.12521743774414
    9. '2' → logprob: -15.81271743774414
    10. '  ' → logprob: -15.93771743774414

Token 855: ' balle' (ID: 147386)
  Prédit: ' rouge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rouge' → logprob: -0.0599934421479702
    2. ' vert' → logprob: -3.8099935054779053
    3. 'rou' → logprob: -4.559993267059326
    4. 'vert' → logprob: -5.309993267059326
    5. ' ble' → logprob: -5.434993267059326
    6. ' bleu' → logprob: -5.809993267059326
    7. ' red' → logprob: -6.434993267059326
    8. 'ble' → logprob: -6.559993267059326
    9. 'verte' → logprob: -6.559993267059326
    10. '_' → logprob: -6.684993267059326

Token 856: ' verte' (ID: 37130)
  Prédit: 'verte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verte' → logprob: -0.7691813707351685
    2. 'vert' → logprob: -1.1441813707351685
    3. ' verte' → logprob: -2.269181251525879
    4. 'rou' → logprob: -3.019181251525879
    5. ' vert' → logprob: -4.019181251525879
    6. ' rouge' → logprob: -4.269181251525879
    7. 'green' → logprob: -4.394181251525879
    8. 'ble' → logprob: -5.144181251525879
    9. '```' → logprob: -5.394181251525879
    10. ' green' → logprob: -5.894181251525879

Token 857: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3419688045978546
    2. '       ' → logprob: -2.0919687747955322
    3. '   ' → logprob: -2.7169687747955322
    4. ')' → logprob: -3.3419687747955322
    5. ',' → logprob: -3.4669687747955322
    6. '``' → logprob: -4.591969013214111
    7. '<|end|>' → logprob: -5.216969013214111
    8. ')
' → logprob: -5.341969013214111
    9. '`' → logprob: -6.216969013214111
    10. ',
' → logprob: -6.216969013214111

Token 858: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06309042125940323
    2. ')' → logprob: -4.0630903244018555
    3. '<|end|>' → logprob: -4.0630903244018555
    4. '       ' → logprob: -4.6880903244018555
    5. ',' → logprob: -4.8130903244018555
    6. '```' → logprob: -5.4380903244018555
    7. 'b' → logprob: -6.1880903244018555
    8. '[' → logprob: -7.9380903244018555
    9. ' ' → logprob: -8.188090324401855
    10. '    ' → logprob: -8.313090324401855

Token 859: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.04858873412013054
    2. ' b' → logprob: -3.048588752746582
    3. '```' → logprob: -14.798588752746582
    4. '   ' → logprob: -14.923588752746582
    5. 'int' → logprob: -15.173588752746582
    6. '
' → logprob: -15.173588752746582
    7. '	b' → logprob: -16.173587799072266
    8. ' ' → logprob: -18.548587799072266
    9. '1' → logprob: -18.798587799072266
    10. ' 
' → logprob: -18.798587799072266

Token 860: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12072368711233139
    2. '(' → logprob: -2.9957237243652344
    3. '=' → logprob: -4.120723724365234
    4. ')' → logprob: -4.370723724365234
    5. '(int' → logprob: -4.495723724365234
    6. '<|end|>' → logprob: -4.870723724365234
    7. ' =' → logprob: -4.995723724365234
    8. ',' → logprob: -5.995723724365234
    9. '   ' → logprob: -6.370723724365234
    10. '<|end|>' → logprob: -6.995723724365234

Token 861: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.864272967912257e-05
    2. ' int' → logprob: -9.875088691711426
    3. '=int' → logprob: -11.000088691711426
    4. '[int' → logprob: -11.375088691711426
    5. '(int' → logprob: -12.250088691711426
    6. '<int' → logprob: -13.000088691711426
    7. ')' → logprob: -14.000088691711426
    8. ''int' → logprob: -14.375088691711426
    9. ':int' → logprob: -15.250088691711426
    10. '=' → logprob: -16.37508773803711

Token 862: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000969583576079458
    2. '):
' → logprob: -7.750969409942627
    3. '   ' → logprob: -9.000969886779785
    4. ',' → logprob: -9.250969886779785
    5. '=' → logprob: -9.500969886779785
    6. '):' → logprob: -9.750969886779785
    7. ')**' → logprob: -10.375969886779785
    8. ')`' → logprob: -10.625969886779785
    9. ')
' → logprob: -10.750969886779785
    10. '<|end|>' → logprob: -11.125969886779785

Token 863: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7629076838493347
    2. '=' → logprob: -1.2629077434539795
    3. ',' → logprob: -2.3879077434539795
    4. ')' → logprob: -3.3879077434539795
    5. '<|end|>' → logprob: -3.3879077434539795
    6. ':' → logprob: -3.7629077434539795
    7. '   ' → logprob: -3.8879077434539795
    8. ' +=' → logprob: -4.5129075050354
    9. '       ' → logprob: -4.7629075050354
    10. ' (' → logprob: -5.1379075050354

Token 864: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0025975380558520555
    2. ' int' → logprob: -6.002597332000732
    3. 'b' → logprob: -9.37759780883789
    4. '(int' → logprob: -10.37759780883789
    5. '[int' → logprob: -12.75259780883789
    6. '<int' → logprob: -13.00259780883789
    7. ' b' → logprob: -14.37759780883789
    8. '=int' → logprob: -16.12759780883789
    9. '0' → logprob: -16.25259780883789
    10. ']int' → logprob: -17.25259780883789

Token 865: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.021369336172938347
    2. ' de' → logprob: -4.396369457244873
    3. '(int' → logprob: -6.271369457244873
    4. '_de' → logprob: -6.896369457244873
    5. '(' → logprob: -7.021369457244873
    6. 'int' → logprob: -7.146369457244873
    7. 'def' → logprob: -7.146369457244873
    8. 'of' → logprob: -7.146369457244873
    9. '=' → logprob: -7.646369457244873
    10. ')' → logprob: -8.021368980407715

Token 866: ' personnes' (ID: 20203)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08779793232679367
    2. '1' → logprob: -2.5877978801727295
    3. 'ball' → logprob: -5.837798118591309
    4. '(int' → logprob: -5.962798118591309
    5. ' int' → logprob: -6.212798118591309
    6. '(' → logprob: -7.087798118591309
    7. 'ent' → logprob: -8.837798118591309
    8. ' ' → logprob: -8.962798118591309
    9. 'b' → logprob: -9.337798118591309
    10. '0' → logprob: -10.337798118591309

Token 867: ' ayant' (ID: 45436)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5383163690567017
    2. '+' → logprob: -1.1633163690567017
    3. '<|end|>' → logprob: -2.788316249847412
    4. ' +=' → logprob: -4.413316249847412
    5. '(' → logprob: -5.413316249847412
    6. ' (' → logprob: -5.538316249847412
    7. '+=' → logprob: -5.913316249847412
    8. ')' → logprob: -5.913316249847412
    9. '(space' → logprob: -6.038316249847412
    10. ' ' → logprob: -6.663316249847412

Token 868: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007375185377895832
    2. '0' → logprob: -5.632375240325928
    3. ' ' → logprob: -5.632375240325928
    4. 'int' → logprob: -9.00737476348877
    5. 'b' → logprob: -9.88237476348877
    6. ' b' → logprob: -12.38237476348877
    7. ' int' → logprob: -12.88237476348877
    8. '```' → logprob: -13.25737476348877
    9. '   ' → logprob: -13.88237476348877
    10. '(' → logprob: -14.13237476348877

Token 869: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011535339057445526
    2. 'int' → logprob: -4.886535167694092
    3. 'b' → logprob: -6.136535167694092
    4. '0' → logprob: -6.386535167694092
    5. 'one' → logprob: -11.13653564453125
    6. '(' → logprob: -11.13653564453125
    7. '(int' → logprob: -11.38653564453125
    8. '[int' → logprob: -12.38653564453125
    9. 'ble' → logprob: -12.51153564453125
    10. ' ' → logprob: -12.63653564453125

Token 870: ' balle' (ID: 147386)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.8631846308708191
    2. 'ble' → logprob: -1.3631846904754639
    3. ' rouge' → logprob: -2.488184690475464
    4. 'rou' → logprob: -2.863184690475464
    5. '_ble' → logprob: -3.238184690475464
    6. 'b' → logprob: -3.363184690475464
    7. '```' → logprob: -3.613184690475464
    8. '_' → logprob: -4.113184452056885
    9. 'blue' → logprob: -4.988184452056885
    10. ' balle' → logprob: -5.113184452056885

Token 871: ' ble' (ID: 10483)
  Prédit: ' rouge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rouge' → logprob: -0.9512151479721069
    2. 'blue' → logprob: -1.451215147972107
    3. 'ble' → logprob: -2.0762152671813965
    4. 'rou' → logprob: -2.3262152671813965
    5. 'red' → logprob: -3.0762152671813965
    6. ' blue' → logprob: -3.0762152671813965
    7. ' ble' → logprob: -3.8262152671813965
    8. ' bleu' → logprob: -3.9512152671813965
    9. ' red' → logprob: -4.7012152671813965
    10. 'b' → logprob: -6.0762152671813965

Token 872: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.12957465648651123
    2. 'u' → logprob: -2.129574775695801
    3. 'e' → logprob: -6.004574775695801
    4. '   ' → logprob: -9.7545747756958
    5. '```' → logprob: -10.0045747756958
    6. '  ' → logprob: -11.1295747756958
    7. '     ' → logprob: -11.3795747756958
    8. '       ' → logprob: -11.6295747756958
    9. ')' → logprob: -11.6295747756958
    10. ' ' → logprob: -12.2545747756958

Token 873: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9419285655021667
    2. '```' → logprob: -1.1919286251068115
    3. ',' → logprob: -2.3169286251068115
    4. '       ' → logprob: -2.4419286251068115
    5. '   ' → logprob: -2.5669286251068115
    6. ')
' → logprob: -5.066928386688232
    7. '``' → logprob: -5.066928386688232
    8. '\t' → logprob: -5.316928386688232
    9. '\n' → logprob: -5.566928386688232
    10. '`' → logprob: -5.566928386688232

Token 874: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5885555148124695
    2. ',' → logprob: -1.7135555744171143
    3. '```' → logprob: -2.0885555744171143
    4. '       ' → logprob: -3.0885555744171143
    5. ')' → logprob: -3.2135555744171143
    6. '\t' → logprob: -3.9635555744171143
    7. 'r' → logprob: -5.213555335998535
    8. '`' → logprob: -5.338555335998535
    9. '<|end|>' → logprob: -5.713555335998535
    10. '[' → logprob: -5.838555335998535

Token 875: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' (adapté à ' rg') → logprob: -0.004311191849410534
    2. 'rgb' → logprob: -5.8793110847473145
    3. 'rb' → logprob: -7.1293110847473145
    4. '   ' → logprob: -8.004311561584473
    5. ' rg' → logprob: -9.004311561584473
    6. 'br' → logprob: -9.379311561584473
    7. 'r' → logprob: -9.629311561584473
    8. '       ' → logprob: -10.254311561584473
    9. '           ' → logprob: -11.254311561584473
    10. 'int' → logprob: -11.629311561584473

Token 876: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016489775851368904
    2. ' ,' → logprob: -4.3914899826049805
    3. ',
' → logprob: -6.3914899826049805
    4. ')' → logprob: -7.2664899826049805
    5. '<|end|>' → logprob: -7.6414899826049805
    6. ' (' → logprob: -8.39148998260498
    7. ' =' → logprob: -8.51648998260498
    8. '<|end|>' → logprob: -8.89148998260498
    9. '=' → logprob: -9.01648998260498
    10. '+' → logprob: -9.64148998260498

Token 877: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00010485442908247933
    2. '(int' → logprob: -9.500104904174805
    3. ' int' → logprob: -10.750104904174805
    4. '[int' → logprob: -12.250104904174805
    5. ')' → logprob: -13.875104904174805
    6. ']int' → logprob: -14.000104904174805
    7. '<int' → logprob: -14.250104904174805
    8. ':int' → logprob: -15.000104904174805
    9. ',int' → logprob: -15.000104904174805
    10. '=int' → logprob: -15.250104904174805

Token 878: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19198007881641388
    2. '+' → logprob: -2.1919801235198975
    3. ',' → logprob: -3.1919801235198975
    4. '):
' → logprob: -4.941979885101318
    5. ' +' → logprob: -5.441979885101318
    6. ')+' → logprob: -5.691979885101318
    7. '   ' → logprob: -5.941979885101318
    8. '=' → logprob: -7.191979885101318
    9. '):' → logprob: -7.191979885101318
    10. '<|end|>' → logprob: -7.316979885101318

Token 879: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9848213195800781
    2. ' =' → logprob: -1.9848213195800781
    3. '(int' → logprob: -2.484821319580078
    4. '[int' → logprob: -2.859821319580078
    5. '=' → logprob: -2.984821319580078
    6. ')' → logprob: -3.359821319580078
    7. ':' → logprob: -3.484821319580078
    8. ':int' → logprob: -3.484821319580078
    9. '=int' → logprob: -3.609821319580078
    10. '   ' → logprob: -3.609821319580078

Token 880: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001713974168524146
    2. '(int' → logprob: -6.876713752746582
    3. ' int' → logprob: -7.626713752746582
    4. 'Mod' → logprob: -9.751713752746582
    5. '0' → logprob: -10.001713752746582
    6. 'nombre' → logprob: -10.001713752746582
    7. ' (' → logprob: -11.751713752746582
    8. 'number' → logprob: -12.001713752746582
    9. '[int' → logprob: -12.001713752746582
    10. '(Mod' → logprob: -12.501713752746582

Token 881: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9151394963264465
    2. '   ' → logprob: -1.1651394367218018
    3. ')' → logprob: -2.2901394367218018
    4. 'de' → logprob: -2.9151394367218018
    5. '(' → logprob: -3.2901394367218018
    6. '(
' → logprob: -3.7901394367218018
    7. ' (' → logprob: -4.040139675140381
    8. 'def' → logprob: -4.665139675140381
    9. '```' → logprob: -5.040139675140381
    10. '       ' → logprob: -5.290139675140381

Token 882: ' personnes' (ID: 20203)
  Prédit: 'person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'person' → logprob: -0.8855733871459961
    2. 'persons' → logprob: -1.385573387145996
    3. ' personnes' → logprob: -1.635573387145996
    4. 'people' → logprob: -2.010573387145996
    5. 'pers' → logprob: -5.760573387145996
    6. '(person' → logprob: -6.760573387145996
    7. '(r' → logprob: -6.885573387145996
    8. 'Mod' → logprob: -7.510573387145996
    9. '(Mod' → logprob: -7.760573387145996
    10. 'pairs' → logprob: -7.760573387145996

Token 883: ' ayant' (ID: 45436)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39182576537132263
    2. '(s' → logprob: -3.2668256759643555
    3. ')' → logprob: -3.3918256759643555
    4. '(' → logprob: -3.5168256759643555
    5. ' =' → logprob: -3.5168256759643555
    6. '   ' → logprob: -3.6418256759643555
    7. 'with' → logprob: -3.6418256759643555
    8. ' with' → logprob: -3.7668256759643555
    9. '+' → logprob: -4.0168256759643555
    10. 'r' → logprob: -4.3918256759643555

Token 884: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02810947597026825
    2. ' ' → logprob: -3.778109550476074
    3. 'r' → logprob: -6.153109550476074
    4. ' r' → logprob: -7.403109550476074
    5. '   ' → logprob: -7.403109550476074
    6. '(r' → logprob: -7.903109550476074
    7. '(' → logprob: -8.028109550476074
    8. ' (' → logprob: -8.153109550476074
    9. '2' → logprob: -8.778109550476074
    10. ' une' → logprob: -10.153109550476074

Token 885: ' rouge' (ID: 56930)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0556873083114624
    2. ' red' → logprob: -2.180687427520752
    3. '_r' → logprob: -2.555687427520752
    4. '(' → logprob: -2.680687427520752
    5. 'rou' → logprob: -2.680687427520752
    6. ' rouge' → logprob: -2.805687427520752
    7. ' paire' → logprob: -2.805687427520752
    8. ' balle' → logprob: -2.930687427520752
    9. ' r' → logprob: -3.180687427520752
    10. ' ' → logprob: -4.430687427520752

Token 886: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.7603298425674438
    2. ' et' → logprob: -0.7603298425674438
    3. '+' → logprob: -3.7603297233581543
    4. ' +' → logprob: -4.510329723358154
    5. ' and' → logprob: -5.135329723358154
    6. '_et' → logprob: -5.260329723358154
    7. '_r' → logprob: -5.385329723358154
    8. '_' → logprob: -5.760329723358154
    9. 'r' → logprob: -6.260329723358154
    10. ',' → logprob: -6.385329723358154

Token 887: ' une' (ID: 2463)
  Prédit: 'verte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verte' → logprob: -0.42310506105422974
    2. 'une' → logprob: -1.423105001449585
    3. ' une' → logprob: -2.923105001449585
    4. ' verte' → logprob: -3.048105001449585
    5. 'ble' → logprob: -6.798105239868164
    6. 'vert' → logprob: -7.173105239868164
    7. '```' → logprob: -8.173105239868164
    8. 'ja' → logprob: -9.048105239868164
    9. ' ' → logprob: -9.173105239868164
    10. 'rou' → logprob: -9.298105239868164

Token 888: ' verte' (ID: 37130)
  Prédit: 'verte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verte' → logprob: -0.0016970803262665868
    2. ' verte' → logprob: -6.876697063446045
    3. 'vert' → logprob: -7.501697063446045
    4. '```' → logprob: -9.501697540283203
    5. 'ble' → logprob: -10.876697540283203
    6. 'ver' → logprob: -11.376697540283203
    7. 'ja' → logprob: -12.876697540283203
    8. 'verts' → logprob: -13.126697540283203
    9. '   ' → logprob: -14.751697540283203
    10. 'verd' → logprob: -14.876697540283203

Token 889: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12400410324335098
    2. '   ' → logprob: -2.6240041255950928
    3. '<|end|>' → logprob: -3.2490041255950928
    4. '       ' → logprob: -6.874003887176514
    5. ',' → logprob: -6.999003887176514
    6. '<|end|>' → logprob: -7.249003887176514
    7. '):' → logprob: -7.624003887176514
    8. '):
' → logprob: -7.749003887176514
    9. '```' → logprob: -8.499004364013672
    10. '...' → logprob: -8.999004364013672

Token 890: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36022496223449707
    2. ',' → logprob: -1.860224962234497
    3. ')' → logprob: -2.735224962234497
    4. '```' → logprob: -3.360224962234497
    5. '\t' → logprob: -3.985224962234497
    6. '       ' → logprob: -4.735224723815918
    7. ',
' → logprob: -4.985224723815918
    8. '):
' → logprob: -5.735224723815918
    9. ')
' → logprob: -6.610224723815918
    10. '[' → logprob: -6.610224723815918

Token 891: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' (adapté à ' gb') → logprob: -0.0003362966235727072
    2. 'br' → logprob: -8.625336647033691
    3. 'rb' → logprob: -9.625336647033691
    4. 'gr' → logprob: -10.125336647033691
    5. ' gb' → logprob: -10.125336647033691
    6. 'rgb' → logprob: -12.250336647033691
    7. 'bg' → logprob: -12.500336647033691
    8. '   ' → logprob: -13.750336647033691
    9. '	gb' → logprob: -15.750336647033691
    10. '
' → logprob: -15.875336647033691

Token 892: ' (' (ID: 350)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.18970946967601776
    2. ' (' → logprob: -3.064709424972534
    3. '=int' → logprob: -3.064709424972534
    4. '=' → logprob: -3.689709424972534
    5. ' =' → logprob: -4.064709663391113
    6. '(' → logprob: -4.189709663391113
    7. ',' → logprob: -4.439709663391113
    8. 'int' → logprob: -5.439709663391113
    9. '[int' → logprob: -6.064709663391113
    10. ',int' → logprob: -6.564709663391113

Token 893: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.8497312895488e-05
    2. '(int' → logprob: -10.125068664550781
    3. ' int' → logprob: -10.625068664550781
    4. '=int' → logprob: -13.625068664550781
    5. '<int' → logprob: -13.750068664550781
    6. '[int' → logprob: -14.125068664550781
    7. ':int' → logprob: -14.625068664550781
    8. ')' → logprob: -14.875068664550781
    9. ']int' → logprob: -15.750068664550781
    10. 'Int' → logprob: -16.62506866455078

Token 894: ')' (ID: 8)
  Prédit: '=int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -1.2789262533187866
    2. ',' → logprob: -1.4039262533187866
    3. '(int' → logprob: -1.4039262533187866
    4. ')' → logprob: -2.403926372528076
    5. '=' → logprob: -2.653926372528076
    6. 'int' → logprob: -3.403926372528076
    7. '[int' → logprob: -4.528926372528076
    8. ',int' → logprob: -5.153926372528076
    9. ':int' → logprob: -5.653926372528076
    10. '<int' → logprob: -5.653926372528076

Token 895: ' :' (ID: 712)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06375467032194138
    2. ' (' → logprob: -4.063754558563232
    3. '=int' → logprob: -4.313754558563232
    4. '(' → logprob: -4.688754558563232
    5. '=' → logprob: -5.063754558563232
    6. 'int' → logprob: -5.188754558563232
    7. ' =' → logprob: -5.313754558563232
    8. ',' → logprob: -5.813754558563232
    9. '[int' → logprob: -7.313754558563232
    10. ' int' → logprob: -7.438754558563232

Token 896: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00899541936814785
    2. ' int' → logprob: -4.758995532989502
    3. '(int' → logprob: -7.883995532989502
    4. '[int' → logprob: -13.008995056152344
    5. '<int' → logprob: -13.633995056152344
    6. '=int' → logprob: -15.133995056152344
    7. ' (' → logprob: -15.758995056152344
    8. '(' → logprob: -16.258995056152344
    9. ':int' → logprob: -16.508995056152344
    10. ']int' → logprob: -16.758995056152344

Token 897: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6924805045127869
    2. '=' → logprob: -1.0674805641174316
    3. 'de' → logprob: -2.4424805641174316
    4. '   ' → logprob: -3.9424805641174316
    5. '(int' → logprob: -3.9424805641174316
    6. 'def' → logprob: -4.567480564117432
    7. ' =' → logprob: -5.317480564117432
    8. '=int' → logprob: -5.567480564117432
    9. ')' → logprob: -5.942480564117432
    10. 'int' → logprob: -6.192480564117432

Token 898: ' personnes' (ID: 20203)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001342903997283429
    2. '1' → logprob: -9.500134468078613
    3. '(int' → logprob: -10.375134468078613
    4. ' int' → logprob: -10.500134468078613
    5. '<int' → logprob: -15.750134468078613
    6. '[int' → logprob: -15.750134468078613
    7. '=int' → logprob: -16.375133514404297
    8. '_int' → logprob: -16.500133514404297
    9. '(' → logprob: -16.625133514404297
    10. ']int' → logprob: -17.625133514404297

Token 899: ' ayant' (ID: 45436)
  Prédit: 'ayant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayant' → logprob: -0.21573466062545776
    2. ' ayant' → logprob: -3.2157347202301025
    3. '+' → logprob: -3.5907347202301025
    4. 'having' → logprob: -3.8407347202301025
    5. 'have' → logprob: -4.215734481811523
    6. '   ' → logprob: -4.215734481811523
    7. ' =' → logprob: -4.465734481811523
    8. '=' → logprob: -4.715734481811523
    9. '_have' → logprob: -4.715734481811523
    10. '(' → logprob: -4.965734481811523

Token 900: ' une' (ID: 2463)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16320544481277466
    2. 'gb' → logprob: -2.16320538520813
    3. ' int' → logprob: -4.038205623626709
    4. '(int' → logprob: -5.038205623626709
    5. ' une' → logprob: -5.538205623626709
    6. 'une' → logprob: -5.538205623626709
    7. '1' → logprob: -6.788205623626709
    8. ' gb' → logprob: -7.288205623626709
    9. ' (' → logprob: -7.788205623626709
    10. '(' → logprob: -8.28820514678955

Token 901: ' verte' (ID: 37130)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.08172235637903214
    2. 'b' → logprob: -3.5817222595214844
    3. ' ble' → logprob: -3.5817222595214844
    4. 'verte' → logprob: -4.581722259521484
    5. 'vert' → logprob: -5.581722259521484
    6. 'blue' → logprob: -5.831722259521484
    7. 'br' → logprob: -6.206722259521484
    8. ' bleu' → logprob: -7.081722259521484
    9. ' verte' → logprob: -7.206722259521484
    10. 'gb' → logprob: -7.456722259521484

Token 902: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047193534672260284
    2. '+' → logprob: -3.5471935272216797
    3. ')' → logprob: -5.04719352722168
    4. '=' → logprob: -5.92219352722168
    5. ' +' → logprob: -6.17219352722168
    6. ' ,' → logprob: -6.67219352722168
    7. ' =' → logprob: -7.04719352722168
    8. '       ' → logprob: -7.17219352722168
    9. '```' → logprob: -7.29719352722168
    10. ' et' → logprob: -7.67219352722168

Token 903: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.30575019121170044
    2. 'b' → logprob: -1.9307501316070557
    3. ' une' → logprob: -2.8057501316070557
    4. 'gb' → logprob: -3.4307501316070557
    5. 'br' → logprob: -4.305750370025635
    6. 'ble' → logprob: -5.430750370025635
    7. ' b' → logprob: -5.680750370025635
    8. ' ble' → logprob: -7.055750370025635
    9. '```' → logprob: -7.055750370025635
    10. 'g' → logprob: -7.430750370025635

Token 904: ' ble' (ID: 10483)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.007569241803139448
    2. ' ble' → logprob: -5.632569313049316
    3. 'blue' → logprob: -6.007569313049316
    4. 'b' → logprob: -6.757569313049316
    5. ' bleu' → logprob: -8.507569313049316
    6. '```' → logprob: -9.382569313049316
    7. 'br' → logprob: -10.882569313049316
    8. 'blu' → logprob: -11.007569313049316
    9. 'bl' → logprob: -12.257569313049316
    10. 'rou' → logprob: -12.632569313049316

Token 905: 'ue' (ID: 466)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1311097890138626
    2. ')' → logprob: -2.5061097145080566
    3. 'b' → logprob: -3.8811097145080566
    4. 'p' → logprob: -5.506109714508057
    5. '```' → logprob: -5.881109714508057
    6. 't' → logprob: -6.006109714508057
    7. '(r' → logprob: -6.506109714508057
    8. '(' → logprob: -6.631109714508057
    9. 'u' → logprob: -6.756109714508057
    10. '_' → logprob: -6.881109714508057

Token 906: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06409227848052979
    2. '```' → logprob: -3.0640921592712402
    3. '   ' → logprob: -4.93909215927124
    4. ',
' → logprob: -5.18909215927124
    5. ' ,' → logprob: -7.31409215927124
    6. ')' → logprob: -7.81409215927124
    7. '
' → logprob: -8.064092636108398
    8. '``' → logprob: -8.189092636108398
    9. '<|end|>' → logprob: -8.939092636108398
    10. '       ' → logprob: -9.314092636108398

Token 907: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08968798071146011
    2. '   ' → logprob: -2.7146880626678467
    3. '```' → logprob: -4.464687824249268
    4. ',
' → logprob: -5.464687824249268
    5. ')' → logprob: -6.214687824249268
    6. 'br' → logprob: -7.839687824249268
    7. '(br' → logprob: -8.589688301086426
    8. ' ,' → logprob: -8.964688301086426
    9. '<|end|>' → logprob: -8.964688301086426
    10. '	br' → logprob: -9.089688301086426

Token 908: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' (adapté à ' br') → logprob: -0.0007199380779638886
    2. 'rb' → logprob: -7.625720024108887
    3. ' br' → logprob: -8.375720024108887
    4. '
' → logprob: -14.500720024108887
    5. '```' → logprob: -15.000720024108887
    6. ' rb' → logprob: -15.125720024108887
    7. '   ' → logprob: -15.125720024108887
    8. '	br' → logprob: -15.750720024108887
    9. '(br' → logprob: -17.25071907043457
    10. ' ' → logprob: -17.37571907043457

Token 909: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0339759960770607
    2. '(int' → logprob: -4.283976078033447
    3. '(' → logprob: -4.908976078033447
    4. '=' → logprob: -5.033976078033447
    5. ' =' → logprob: -5.408976078033447
    6. ',' → logprob: -7.658976078033447
    7. ')' → logprob: -7.658976078033447
    8. '=int' → logprob: -8.908975601196289
    9. '(
' → logprob: -9.908975601196289
    10. ' +=' → logprob: -10.908975601196289

Token 910: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2948405128554441e-05
    2. ' int' → logprob: -12.00001335144043
    3. '(int' → logprob: -12.87501335144043
    4. '=int' → logprob: -12.87501335144043
    5. ')' → logprob: -14.12501335144043
    6. '[int' → logprob: -14.37501335144043
    7. '<int' → logprob: -16.00001335144043
    8. ':int' → logprob: -16.25001335144043
    9. ']int' → logprob: -16.37501335144043
    10. ',int' → logprob: -17.37501335144043

Token 911: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14654244482517242
    2. '):
' → logprob: -2.521542549133301
    3. '):' → logprob: -4.021542549133301
    4. '(int' → logprob: -4.021542549133301
    5. ',' → logprob: -4.646542549133301
    6. ' (' → logprob: -6.146542549133301
    7. '   ' → logprob: -6.396542549133301
    8. '=' → logprob: -6.396542549133301
    9. '[int' → logprob: -6.646542549133301
    10. '(' → logprob: -7.771542549133301

Token 912: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4758613407611847
    2. '=' → logprob: -1.1008613109588623
    3. ' +=' → logprob: -3.6008613109588623
    4. '   ' → logprob: -4.725861549377441
    5. ',' → logprob: -6.225861549377441
    6. '+=' → logprob: -6.350861549377441
    7. ')' → logprob: -6.350861549377441
    8. '(int' → logprob: -6.725861549377441
    9. '=int' → logprob: -6.850861549377441
    10. ' (' → logprob: -7.100861549377441

Token 913: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.85235276655294e-05
    2. ' int' → logprob: -9.500088691711426
    3. '(int' → logprob: -11.250088691711426
    4. '[int' → logprob: -14.750088691711426
    5. '<int' → logprob: -16.75008773803711
    6. 'number' → logprob: -16.87508773803711
    7. '	int' → logprob: -18.62508773803711
    8. '0' → logprob: -18.87508773803711
    9. '   ' → logprob: -19.25008773803711
    10. '=int' → logprob: -19.50008773803711

Token 914: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.034233495593070984
    2. ' de' → logprob: -3.784233570098877
    3. '   ' → logprob: -5.534233570098877
    4. '=' → logprob: -5.784233570098877
    5. '_de' → logprob: -6.159233570098877
    6. '(' → logprob: -7.284233570098877
    7. 'def' → logprob: -8.034233093261719
    8. '       ' → logprob: -8.659233093261719
    9. ')' → logprob: -8.909233093261719
    10. ' ' → logprob: -9.784233093261719

Token 915: ' personnes' (ID: 20203)
  Prédit: 'person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'person' → logprob: -0.004054179415106773
    2. 'persons' → logprob: -5.754054069519043
    3. 'people' → logprob: -7.379054069519043
    4. ' personnes' → logprob: -8.879054069519043
    5. 'pers' → logprob: -9.254054069519043
    6. 'ball' → logprob: -12.004054069519043
    7. 'int' → logprob: -12.504054069519043
    8. 'personen' → logprob: -13.129054069519043
    9. '(person' → logprob: -13.254054069519043
    10. '_person' → logprob: -13.254054069519043

Token 916: ' ayant' (ID: 45436)
  Prédit: 'ayant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayant' → logprob: -0.7387269735336304
    2. '=' → logprob: -1.3637269735336304
    3. '   ' → logprob: -1.9887269735336304
    4. ' =' → logprob: -2.98872709274292
    5. '+' → logprob: -3.98872709274292
    6. 'having' → logprob: -4.48872709274292
    7. ' ayant' → logprob: -4.98872709274292
    8. ' +=' → logprob: -5.23872709274292
    9. '+=' → logprob: -5.36372709274292
    10. '```' → logprob: -5.48872709274292

Token 917: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.0027298596687614918
    2. ' une' → logprob: -6.002729892730713
    3. '1' → logprob: -9.502729415893555
    4. '(' → logprob: -9.627729415893555
    5. 'de' → logprob: -10.377729415893555
    6. '```' → logprob: -10.502729415893555
    7. '#' → logprob: -10.877729415893555
    8. 'one' → logprob: -11.752729415893555
    9. ''une' → logprob: -12.127729415893555
    10. 'una' → logprob: -12.377729415893555

Token 918: ' ble' (ID: 10483)
  Prédit: 'rou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rou' → logprob: -0.0014382082736119628
    2. 'ball' → logprob: -7.626438140869141
    3. ' rouge' → logprob: -7.751438140869141
    4. 'ble' → logprob: -8.37643814086914
    5. 'rose' → logprob: -9.50143814086914
    6. '```' → logprob: -9.75143814086914
    7. 'de' → logprob: -9.87643814086914
    8. 'double' → logprob: -10.37643814086914
    9. 'b' → logprob: -10.87643814086914
    10. 'ja' → logprob: -11.75143814086914

Token 919: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.023584820330142975
    2. 'u' → logprob: -4.148584842681885
    3. 'ues' → logprob: -4.898584842681885
    4. 'e' → logprob: -10.773584365844727
    5. '   ' → logprob: -10.773584365844727
    6. '       ' → logprob: -12.023584365844727
    7. 'ué' → logprob: -12.773584365844727
    8. 's' → logprob: -13.023584365844727
    9. '```' → logprob: -13.023584365844727
    10. '(' → logprob: -13.273584365844727

Token 920: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0071157217025757
    2. 'et' → logprob: -1.1321157217025757
    3. 'and' → logprob: -2.0071158409118652
    4. ' et' → logprob: -2.3821158409118652
    5. ' +' → logprob: -3.6321158409118652
    6. '   ' → logprob: -3.6321158409118652
    7. ' and' → logprob: -4.507115840911865
    8. '```' → logprob: -4.882115840911865
    9. '_et' → logprob: -5.757115840911865
    10. '_' → logprob: -6.257115840911865

Token 921: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.003308896441012621
    2. ' une' → logprob: -5.7533087730407715
    3. 'rou' → logprob: -9.62830924987793
    4. ' rouge' → logprob: -10.00330924987793
    5. ''une' → logprob: -11.87830924987793
    6. '```' → logprob: -12.25330924987793
    7. 'una' → logprob: -12.87830924987793
    8. 'r' → logprob: -13.25330924987793
    9. '
' → logprob: -13.62830924987793
    10. '(' → logprob: -14.62830924987793

Token 922: ' rouge' (ID: 56930)
  Prédit: 'rou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rou' → logprob: -9.662937372922897e-05
    2. 'verte' → logprob: -10.250096321105957
    3. 'rous' → logprob: -10.625096321105957
    4. 'rose' → logprob: -11.000096321105957
    5. '
' → logprob: -11.750096321105957
    6. '```' → logprob: -11.875096321105957
    7. ' rouge' → logprob: -12.875096321105957
    8. 'ro' → logprob: -13.625096321105957
    9. 'r' → logprob: -14.375096321105957
    10. 'ron' → logprob: -15.500096321105957

Token 923: '

' (ID: 279)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6997894644737244
    2. '   ' → logprob: -0.8247894644737244
    3. '):' → logprob: -2.949789524078369
    4. ')' → logprob: -4.574789524078369
    5. '
' → logprob: -7.574789524078369
    6. '```' → logprob: -7.699789524078369
    7. '):

' → logprob: -8.199789047241211
    8. ')
' → logprob: -8.574789047241211
    9. ':
' → logprob: -8.574789047241211
    10. '):
' → logprob: -8.574789047241211

Token 924: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06358598917722702
    2. ':' → logprob: -3.4385859966278076
    3. '):
' → logprob: -4.0635857582092285
    4. ':
' → logprob: -4.9385857582092285
    5. '):' → logprob: -5.4385857582092285
    6. '```' → logprob: -7.8135857582092285
    7. ')' → logprob: -8.938586235046387
    8. 'if' → logprob: -10.188586235046387
    9. '    
' → logprob: -10.188586235046387
    10. ',' → logprob: -10.188586235046387

Token 925: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05961291491985321
    2. ':' → logprob: -3.684612989425659
    3. 'if' → logprob: -4.30961275100708
    4. '):
' → logprob: -4.80961275100708
    5. ':
' → logprob: -4.80961275100708
    6. '):' → logprob: -6.68461275100708
    7. '```' → logprob: -6.93461275100708
    8. ' if' → logprob: -8.559613227844238
    9. '
' → logprob: -8.684613227844238
    10. ')' → logprob: -8.809613227844238

Token 926: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.0049588317051529884
    2. 'n' → logprob: -5.379958629608154
    3. '   ' → logprob: -8.754959106445312
    4. 'nne' → logprob: -9.754959106445312
    5. 'e' → logprob: -9.879959106445312
    6. 'neur' → logprob: -10.129959106445312
    7. '       ' → logprob: -12.254959106445312
    8. 'nes' → logprob: -12.254959106445312
    9. 'ner' → logprob: -12.254959106445312
    10. 'nez' → logprob: -12.754959106445312

Token 927: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1179523468017578
    2. ' (' → logprob: -1.2429523468017578
    3. ' None' → logprob: -1.7429523468017578
    4. '    ' → logprob: -1.9929523468017578
    5. ' res' → logprob: -3.742952346801758
    6. ' z' → logprob: -4.117952346801758
    7. 'res' → logprob: -4.867952346801758
    8. 'None' → logprob: -4.867952346801758
    9. ' updated' → logprob: -6.117952346801758
    10. ',' → logprob: -6.117952346801758

Token 928: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021377671509981155
    2. '    ' → logprob: -7.127137660980225
    3. '    
' → logprob: -7.752137660980225
    4. ' None' → logprob: -7.877137660980225
    5. 'None' → logprob: -8.377138137817383
    6. '  ' → logprob: -10.002138137817383
    7. ' (' → logprob: -10.127138137817383
    8. '       ' → logprob: -10.377138137817383
    9. '(
' → logprob: -10.752138137817383
    10. ' (
' → logprob: -11.002138137817383

Token 929: ' Tuple' (ID: 50841)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.45224103331565857
    2. ' tuple' → logprob: -1.077241063117981
    3. '(tuple' → logprob: -4.702240943908691
    4. 'res' → logprob: -4.827240943908691
    5. '   ' → logprob: -6.202240943908691
    6. 'Tuple' (adapté à ' Tuple') → logprob: -6.702240943908691
    7. ' (' → logprob: -6.827240943908691
    8. '(res' → logprob: -7.202240943908691
    9. 'return' → logprob: -8.202240943908691
    10. ' res' → logprob: -8.452240943908691

Token 930: ' :' (ID: 712)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9800319075584412
    2. '(' → logprob: -1.355031967163086
    3. '[' → logprob: -2.230031967163086
    4. ',' → logprob: -2.480031967163086
    5. '(
' → logprob: -2.480031967163086
    6. '(res' → logprob: -3.730031967163086
    7. '(int' → logprob: -4.105031967163086
    8. ':' → logprob: -4.480031967163086
    9. '(tuple' → logprob: -4.480031967163086
    10. '[int' → logprob: -4.855031967163086

Token 931: ' état' (ID: 59181)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.9309370517730713
    2. ' (' → logprob: -1.0559370517730713
    3. '(res' → logprob: -2.3059370517730713
    4. '   ' → logprob: -2.6809370517730713
    5. '(
' → logprob: -2.9309370517730713
    6. '(tuple' → logprob: -4.055936813354492
    7. '(' → logprob: -4.305936813354492
    8. '(None' → logprob: -5.930936813354492
    9. '(bool' → logprob: -7.305936813354492
    10. ' (
' → logprob: -7.555936813354492

Token 932: ' actual' (ID: 6290)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41598957777023315
    2. '(' → logprob: -2.040989637374878
    3. '   ' → logprob: -2.415989637374878
    4. ' (' → logprob: -3.040989637374878
    5. ' =' → logprob: -3.915989637374878
    6. '(s' → logprob: -3.915989637374878
    7. '(
' → logprob: -4.290989398956299
    8. 's' → logprob: -5.165989398956299
    9. ')' → logprob: -5.665989398956299
    10. ' ,' → logprob: -6.040989398956299

Token 933: 'isé' (ID: 30065)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016138415783643723
    2. 'er' → logprob: -5.516138553619385
    3. 'é' → logprob: -6.141138553619385
    4. '(
' → logprob: -6.516138553619385
    5. ',
' → logprob: -6.516138553619385
    6. '```' → logprob: -6.516138553619385
    7. '(' → logprob: -6.891138553619385
    8. '   ' → logprob: -6.891138553619385
    9. 'ée' → logprob: -7.641138553619385
    10. 'e' → logprob: -7.641138553619385

Token 934: ' après' (ID: 16460)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3232899010181427
    2. ',' → logprob: -2.1982898712158203
    3. ':' → logprob: -2.1982898712158203
    4. '(' → logprob: -3.4482898712158203
    5. '   ' → logprob: -4.57328987121582
    6. '(
' → logprob: -4.69828987121582
    7. '(f' → logprob: -7.57328987121582
    8. '(return' → logprob: -7.57328987121582
    9. '```' → logprob: -7.82328987121582
    10. 's' → logprob: -8.07328987121582

Token 935: ' distribution' (ID: 12545)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.49897539615631104
    2. ' (' → logprob: -1.873975396156311
    3. '   ' → logprob: -1.998975396156311
    4. 's' → logprob: -2.4989752769470215
    5. '(' → logprob: -4.8739752769470215
    6. 'res' → logprob: -5.6239752769470215
    7. ' s' → logprob: -6.1239752769470215
    8. '```' → logprob: -6.3739752769470215
    9. '(
' → logprob: -6.9989752769470215
    10. 'la' → logprob: -7.1239752769470215

Token 936: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23449623584747314
    2. '(s' → logprob: -2.4844961166381836
    3. ',' → logprob: -2.6094961166381836
    4. ':' → logprob: -4.234496116638184
    5. '(' → logprob: -4.859496116638184
    6. '):' → logprob: -5.234496116638184
    7. '):
' → logprob: -5.234496116638184
    8. 'def' → logprob: -5.734496116638184
    9. '(
' → logprob: -5.734496116638184
    10. 's' → logprob: -6.109496116638184

Token 937: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19083172082901
    2. '(s' → logprob: -2.0658316612243652
    3. 'res' → logprob: -3.3158316612243652
    4. ' s' → logprob: -5.565831661224365
    5. '(res' → logprob: -6.065831661224365
    6. ' (' → logprob: -6.315831661224365
    7. '```' → logprob: -6.690831661224365
    8. ' res' → logprob: -7.940831661224365
    9. '(' → logprob: -8.440832138061523
    10. ' la' → logprob: -8.565832138061523

Token 938: ' balle' (ID: 147386)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6496062874794006
    2. '(' → logprob: -1.2746062278747559
    3. '(
' → logprob: -3.024606227874756
    4. ',' → logprob: -3.524606227874756
    5. 'ball' → logprob: -3.649606227874756
    6. ' (' → logprob: -3.649606227874756
    7. '(s' → logprob: -4.024606227874756
    8. ' s' → logprob: -4.399606227874756
    9. '```' → logprob: -4.899606227874756
    10. 'b' → logprob: -5.774606227874756

Token 939: ' cour' (ID: 2871)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07800234109163284
    2. '   ' → logprob: -3.578002452850342
    3. ',
' → logprob: -3.828002452850342
    4. ':' → logprob: -3.953002452850342
    5. '(s' → logprob: -6.078002452850342
    6. '(
' → logprob: -6.828002452850342
    7. ':
' → logprob: -7.578002452850342
    8. '(' → logprob: -7.828002452850342
    9. 's' → logprob: -8.078001976013184
    10. '):
' → logprob: -8.203001976013184

Token 940: 'ante' (ID: 2116)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41181543469429016
    2. 'ante' → logprob: -1.5368154048919678
    3. ')' → logprob: -3.1618154048919678
    4. 'ant' → logprob: -3.6618154048919678
    5. ',
' → logprob: -4.786815643310547
    6. '(
' → logprob: -5.036815643310547
    7. 'ière' → logprob: -5.161815643310547
    8. 'ente' → logprob: -5.661815643310547
    9. 'nte' → logprob: -6.036815643310547
    10. 'nt' → logprob: -6.161815643310547

Token 941: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5153417587280273
    2. '(s' → logprob: -1.8903417587280273
    3. '   ' → logprob: -2.1403417587280273
    4. ',' → logprob: -2.1403417587280273
    5. '(' → logprob: -5.265341758728027
    6. '(
' → logprob: -5.640341758728027
    7. '```' → logprob: -6.265341758728027
    8. 'def' → logprob: -6.765341758728027
    9. ':
' → logprob: -7.140341758728027
    10. 's' → logprob: -7.265341758728027

Token 942: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09828943759202957
    2. ':' → logprob: -2.8482894897460938
    3. ',' → logprob: -4.348289489746094
    4. '```' → logprob: -4.723289489746094
    5. '):' → logprob: -5.348289489746094
    6. '):
' → logprob: -5.348289489746094
    7. ':
' → logprob: -6.223289489746094
    8. ')' → logprob: -6.848289489746094
    9. '(s' → logprob: -8.098289489746094
    10. ',
' → logprob: -8.848289489746094

Token 943: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10281795263290405
    2. '```' → logprob: -2.977818012237549
    3. ':' → logprob: -3.352818012237549
    4. '):
' → logprob: -5.602818012237549
    5. '):' → logprob: -5.977818012237549
    6. ',' → logprob: -6.352818012237549
    7. ':
' → logprob: -6.352818012237549
    8. ')' → logprob: -7.602818012237549
    9. '    
' → logprob: -8.22781753540039
    10. ' :' → logprob: -8.47781753540039

Token 944: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007870059460401535
    2. '```' → logprob: -4.882870197296143
    3. '    
' → logprob: -9.007869720458984
    4. ' if' → logprob: -10.507869720458984
    5. 'if' → logprob: -11.007869720458984
    6. '``' → logprob: -11.257869720458984
    7. '       ' → logprob: -11.382869720458984
    8. '    ' → logprob: -11.757869720458984
    9. '...' → logprob: -12.007869720458984
    10. ',' → logprob: -12.132869720458984

Token 945: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6996696591377258
    2. '   ' → logprob: -1.324669599533081
    3. 'if' → logprob: -1.449669599533081
    4. 'z' → logprob: -6.44966983795166
    5. '```' → logprob: -8.44966983795166
    6. 'r' → logprob: -8.82466983795166
    7. 'i' → logprob: -9.19966983795166
    8. ' z' → logprob: -9.32466983795166
    9. 's' → logprob: -9.44966983795166
    10. '	if' → logprob: -9.57466983795166

Token 946: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000683126098010689
    2. ' if' → logprob: -7.750683307647705
    3. '   ' → logprob: -8.500682830810547
    4. 'z' → logprob: -10.875682830810547
    5. 's' → logprob: -11.500682830810547
    6. 'res' → logprob: -12.000682830810547
    7. 'i' → logprob: -12.250682830810547
    8. 'r' → logprob: -12.250682830810547
    9. '```' → logprob: -13.000682830810547
    10. '#' → logprob: -13.875682830810547

Token 947: ' chaque' (ID: 21194)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06099690869450569
    2. 'z' → logprob: -3.0609970092773438
    3. 'res' → logprob: -5.185997009277344
    4. 'r' → logprob: -5.560997009277344
    5. ' s' → logprob: -6.560997009277344
    6. 'not' → logprob: -7.810997009277344
    7. 'None' → logprob: -8.810997009277344
    8. ' z' → logprob: -8.810997009277344
    9. 'if' → logprob: -9.060997009277344
    10. '#' → logprob: -9.435997009277344

Token 948: ' couleur' (ID: 48005)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05055415257811546
    2. 's' → logprob: -3.175554037094116
    3. 'elif' → logprob: -5.800554275512695
    4. ' if' → logprob: -6.175554275512695
    5. 'color' → logprob: -7.675554275512695
    6. 'i' → logprob: -7.675554275512695
    7. '   ' → logprob: -7.800554275512695
    8. ' s' → logprob: -8.050554275512695
    9. 'person' → logprob: -8.550554275512695
    10. 'res' → logprob: -9.050554275512695

Token 949: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7707135677337646
    2. 'if' → logprob: -1.0207135677337646
    3. '   ' → logprob: -1.8957135677337646
    4. ' if' → logprob: -4.020713806152344
    5. ':
' → logprob: -5.895713806152344
    6. '=' → logprob: -6.020713806152344
    7. ' =' → logprob: -6.645713806152344
    8. ' :' → logprob: -7.770713806152344
    9. ',' → logprob: -8.020713806152344
    10. '==' → logprob: -8.145713806152344

Token 950: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015317801386117935
    2. ' if' → logprob: -4.265317916870117
    3. '   ' → logprob: -6.765317916870117
    4. '	if' → logprob: -14.890317916870117
    5. '
' → logprob: -15.890317916870117
    6. 'i' → logprob: -17.015317916870117
    7. '  ' → logprob: -17.140317916870117
    8. ' ' → logprob: -17.515317916870117
    9. '```' → logprob: -17.765317916870117
    10. '    
' → logprob: -18.390317916870117

Token 951: ' prior' (ID: 6217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7658701539039612
    2. 'if' → logprob: -1.0158700942993164
    3. ' if' → logprob: -1.7658700942993164
    4. '=' → logprob: -7.890870094299316
    5. ' =' → logprob: -8.015870094299316
    6. 'elif' → logprob: -8.140870094299316
    7. '    
' → logprob: -8.890870094299316
    8. 's' → logprob: -9.015870094299316
    9. '```' → logprob: -9.390870094299316
    10. ')' → logprob: -9.515870094299316

Token 952: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.42294710874557495
    2. '   ' → logprob: -2.2979471683502197
    3. 'ité' → logprob: -2.2979471683502197
    4. 'if' → logprob: -2.9229471683502197
    5. 'is' → logprob: -3.6729471683502197
    6. 'isé' → logprob: -3.9229471683502197
    7. 'i' → logprob: -3.9229471683502197
    8. '       ' → logprob: -5.047946929931641
    9. 'it' → logprob: -5.297946929931641
    10. 'itize' → logprob: -5.297946929931641

Token 953: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017491120845079422
    2. ' if' → logprob: -4.392491340637207
    3. '   ' → logprob: -5.517491340637207
    4. 's' → logprob: -7.267491340637207
    5. '```' → logprob: -9.142491340637207
    6. ' s' → logprob: -9.892491340637207
    7. 'z' → logprob: -10.892491340637207
    8. '       ' → logprob: -11.517491340637207
    9. 'elif' → logprob: -11.517491340637207
    10. '#' → logprob: -12.142491340637207

Token 954: ''at' (ID: 85437)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3597511053085327
    2. 'e' → logprob: -1.7347511053085327
    3. 'if' → logprob: -2.3597512245178223
    4. 'es' → logprob: -4.609751224517822
    5. ' if' → logprob: -5.109751224517822
    6. ''espace' → logprob: -5.484751224517822
    7. '       ' → logprob: -5.609751224517822
    8. ''' → logprob: -6.109751224517822
    9. 'elif' → logprob: -7.234751224517822
    10. 'i' → logprob: -7.234751224517822

Token 955: 'tribution' (ID: 7090)
  Prédit: 'trib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.8150114417076111
    2. 'if' → logprob: -1.1900115013122559
    3. 'least' → logprob: -2.315011501312256
    4. 'tribution' → logprob: -2.815011501312256
    5. 'tribut' → logprob: -3.565011501312256
    6. 'ype' → logprob: -4.690011501312256
    7. 'tributions' → logprob: -5.315011501312256
    8. 'tribute' → logprob: -5.315011501312256
    9. 't' → logprob: -5.690011501312256
    10. 'rib' → logprob: -5.690011501312256

Token 956: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0076147946529090405
    2. 'if' → logprob: -5.882614612579346
    3. 'de' → logprob: -6.507614612579346
    4. ' if' → logprob: -6.632614612579346
    5. ' de' → logprob: -7.382614612579346
    6. ',' → logprob: -8.007615089416504
    7. ' s' → logprob: -8.257615089416504
    8. 's' → logprob: -8.882615089416504
    9. '```' → logprob: -9.507615089416504
    10. ':' → logprob: -9.632615089416504

Token 957: ' ceux' (ID: 26863)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23984210193157196
    2. 'res' → logprob: -2.489842176437378
    3. 'z' → logprob: -3.489842176437378
    4. 'b' → logprob: -3.614842176437378
    5. 'br' → logprob: -4.239841938018799
    6. 'les' → logprob: -5.114841938018799
    7. '```' → logprob: -5.114841938018799
    8. '   ' → logprob: -5.239841938018799
    9. 'la' → logprob: -5.239841938018799
    10. ' r' → logprob: -5.364841938018799

Token 958: ' qui' (ID: 2780)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4676026999950409
    2. '   ' → logprob: -2.0926027297973633
    3. 'if' → logprob: -2.8426027297973633
    4. ' qui' → logprob: -3.0926027297973633
    5. ' des' → logprob: -3.2176027297973633
    6. ' who' → logprob: -3.7176027297973633
    7. ' de' → logprob: -4.092602729797363
    8. 'r' → logprob: -4.592602729797363
    9. '[r' → logprob: -4.717602729797363
    10. ' s' → logprob: -4.842602729797363

Token 959: ' ont' (ID: 4930)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6251472234725952
    2. 'ont' → logprob: -1.1251472234725952
    3. 'have' → logprob: -3.2501473426818848
    4. ' n' → logprob: -3.2501473426818848
    5. 'r' → logprob: -3.7501473426818848
    6. 'z' → logprob: -4.250147342681885
    7. 's' → logprob: -5.125147342681885
    8. ' ont' → logprob: -5.375147342681885
    9. ' have' → logprob: -5.500147342681885
    10. 'a' → logprob: -6.000147342681885

Token 960: ' déjà' (ID: 21229)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.44525179266929626
    2. 'r' → logprob: -1.5702518224716187
    3. ' rg' → logprob: -2.820251703262329
    4. 'z' → logprob: -3.445251703262329
    5. '   ' → logprob: -3.945251703262329
    6. 'br' → logprob: -4.070251941680908
    7. 'b' → logprob: -4.570251941680908
    8. ' z' → logprob: -5.570251941680908
    9. ' r' → logprob: -6.195251941680908
    10. ' b' → logprob: -6.570251941680908

Token 961: ' des' (ID: 731)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08340589702129364
    2. 'rg' → logprob: -3.2084059715270996
    3. 'br' → logprob: -4.9584059715271
    4. 'z' → logprob: -4.9584059715271
    5. 'une' → logprob: -5.2084059715271
    6. ' ' → logprob: -5.4584059715271
    7. '   ' → logprob: -5.9584059715271
    8. 'b' → logprob: -6.0834059715271
    9. 'le' → logprob: -6.3334059715271
    10. 'plus' → logprob: -6.4584059715271

Token 962: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6583606004714966
    2. '2' → logprob: -1.9083606004714966
    3. 'ball' → logprob: -1.9083606004714966
    4. 'r' → logprob: -3.158360481262207
    5. 'br' → logprob: -3.283360481262207
    6. 'de' → logprob: -3.408360481262207
    7. 'b' → logprob: -3.783360481262207
    8. 'pairs' → logprob: -4.658360481262207
    9. 'pa' → logprob: -4.783360481262207
    10. 'rg' → logprob: -4.908360481262207

Token 963: 'aires' (ID: 8507)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11690988391637802
    2. 'b' → logprob: -3.116909980773926
    3. 'lus' → logprob: -3.241909980773926
    4. 'rb' → logprob: -5.741909980773926
    5. 'br' → logprob: -5.866909980773926
    6. 'p' → logprob: -6.241909980773926
    7. '+' → logprob: -6.241909980773926
    8. '+=' → logprob: -6.491909980773926
    9. 'erson' → logprob: -6.616909980773926
    10. 'l' → logprob: -6.866909980773926

Token 964: ' spécifiques' (ID: 110075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009541803039610386
    2. ' if' → logprob: -5.759541988372803
    3. ':' → logprob: -5.884541988372803
    4. ',' → logprob: -6.384541988372803
    5. 'if' → logprob: -6.884541988372803
    6. 's' → logprob: -9.384541511535645
    7. ':
' → logprob: -9.384541511535645
    8. ' s' → logprob: -9.509541511535645
    9. ' =' → logprob: -9.634541511535645
    10. '  ' → logprob: -9.634541511535645

Token 965: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015988145023584366
    2. ':' → logprob: -4.390988349914551
    3. ',' → logprob: -6.390988349914551
    4. ':
' → logprob: -7.765988349914551
    5. ' if' → logprob: -8.01598834991455
    6. 'if' → logprob: -8.14098834991455
    7. '.' → logprob: -8.39098834991455
    8. '):
' → logprob: -9.64098834991455
    9. '
' → logprob: -9.76598834991455
    10. 's' → logprob: -9.89098834991455

Token 966: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002966127940453589
    2. '#' → logprob: -9.625296592712402
    3. '       ' → logprob: -9.625296592712402
    4. ' puis' → logprob: -10.000296592712402
    5. '```' → logprob: -10.750296592712402
    6. '
' → logprob: -10.750296592712402
    7. '    
' → logprob: -11.000296592712402
    8. 'if' → logprob: -11.125296592712402
    9. '    ' → logprob: -11.250296592712402
    10. '  ' → logprob: -11.875296592712402

Token 967: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18173587322235107
    2. '#' (adapté à ' #') → logprob: -1.806735873222351
    3. 'if' → logprob: -6.431735992431641
    4. '       ' → logprob: -9.30673599243164
    5. 'elif' → logprob: -9.30673599243164
    6. '```' → logprob: -9.93173599243164
    7. '
' → logprob: -10.43173599243164
    8. ' #' → logprob: -10.80673599243164
    9. '    
' → logprob: -11.18173599243164
    10. ' puis' → logprob: -11.18173599243164

Token 968: ' puis' (ID: 18766)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17303477227687836
    2. '   ' → logprob: -1.9230347871780396
    3. ' if' → logprob: -4.54803466796875
    4. '```' → logprob: -6.17303466796875
    5. '#' → logprob: -10.92303466796875
    6. '``' → logprob: -11.42303466796875
    7. 'si' → logprob: -12.04803466796875
    8. '
' → logprob: -12.04803466796875
    9. '       ' → logprob: -12.54803466796875
    10. '	if' → logprob: -12.92303466796875

Token 969: ' à' (ID: 1221)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4769456088542938
    2. '   ' → logprob: -0.9769456386566162
    3. 'à' → logprob: -6.976945400238037
    4. 'si' → logprob: -7.476945400238037
    5. ' if' → logprob: -7.726945400238037
    6. '```' → logprob: -8.226945877075195
    7. 'elif' → logprob: -8.851945877075195
    8. 'aux' → logprob: -9.101945877075195
    9. '       ' → logprob: -9.226945877075195
    10. '
' → logprob: -9.851945877075195

Token 970: ' ceux' (ID: 26863)
  Prédit: ' ceux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceux' → logprob: -0.18291445076465607
    2. 'z' → logprob: -2.4329144954681396
    3. '(z' → logprob: -3.8079144954681396
    4. '(r' → logprob: -4.0579142570495605
    5. ' celles' → logprob: -5.3079142570495605
    6. 'cel' → logprob: -5.3079142570495605
    7. 'celle' → logprob: -5.3079142570495605
    8. ' z' → logprob: -5.5579142570495605
    9. 'r' → logprob: -5.5579142570495605
    10. '(
' → logprob: -5.6829142570495605

Token 971: ' qui' (ID: 2780)
  Prédit: 'qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qui' → logprob: -0.07357039302587509
    2. 'who' → logprob: -3.698570489883423
    3. '   ' → logprob: -3.948570489883423
    4. '#' → logprob: -4.073570251464844
    5. 'ayant' → logprob: -5.323570251464844
    6. ' qui' → logprob: -5.573570251464844
    7. '```' → logprob: -8.073570251464844
    8. ' who' → logprob: -8.323570251464844
    9. 'avec' → logprob: -9.323570251464844
    10. '       ' → logprob: -9.823570251464844

Token 972: ' ont' (ID: 4930)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.029784860089421272
    2. 'n' → logprob: -3.904784917831421
    3. ' ont' → logprob: -5.654784679412842
    4. 'have' → logprob: -5.904784679412842
    5. ' n' → logprob: -6.654784679412842
    6. ''ont' → logprob: -7.279784679412842
    7. ' have' → logprob: -8.27978515625
    8. 'avaient' → logprob: -8.27978515625
    9. '#' → logprob: -8.40478515625
    10. 'poss' → logprob: -9.52978515625

Token 973: ' une' (ID: 2463)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40082791447639465
    2. 'des' → logprob: -1.5258278846740723
    3. 'une' → logprob: -3.1508278846740723
    4. 'z' → logprob: -3.2758278846740723
    5. ' des' → logprob: -4.525827884674072
    6. '```' → logprob: -5.275827884674072
    7. 'b' → logprob: -5.400827884674072
    8. ' une' → logprob: -6.275827884674072
    9. 'br' → logprob: -6.400827884674072
    10. 'rg' → logprob: -6.900827884674072

Token 974: ' balle' (ID: 147386)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4961032271385193
    2. 'rou' → logprob: -1.246103286743164
    3. 'se' → logprob: -3.246103286743164
    4. '```' → logprob: -3.871103286743164
    5. 'cou' → logprob: -4.246103286743164
    6. 'ball' → logprob: -4.871103286743164
    7. ' seule' → logprob: -5.246103286743164
    8. 'r' → logprob: -5.496103286743164
    9. ' balle' → logprob: -5.621103286743164
    10. 'bou' → logprob: -6.496103286743164

Token 975: ' de' (ID: 334)
  Prédit: 'rou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rou' → logprob: -0.07265948504209518
    2. ' rouge' → logprob: -2.697659492492676
    3. 'red' → logprob: -7.447659492492676
    4. 'ro' → logprob: -8.197659492492676
    5. ' rouges' → logprob: -8.447659492492676
    6. 'r' → logprob: -8.447659492492676
    7. '```' → logprob: -8.572659492492676
    8. 'verte' → logprob: -8.697659492492676
    9. '   ' → logprob: -8.822659492492676
    10. ' ' → logprob: -8.947659492492676

Token 976: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3086981773376465
    2. 'c' → logprob: -1.5586981773376465
    3. 'cou' → logprob: -3.3086981773376465
    4. 'rou' → logprob: -4.8086981773376465
    5. 'celle' → logprob: -5.6836981773376465
    6. 'une' → logprob: -5.9336981773376465
    7. '```' → logprob: -6.1836981773376465
    8. ' la' → logprob: -7.8086981773376465
    9. 'l' → logprob: -8.183698654174805
    10. 'r' → logprob: -8.683698654174805

Token 977: ' couleur' (ID: 48005)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.18128331005573273
    2. 'cou' → logprob: -1.8062833547592163
    3. ' même' → logprob: -7.056283473968506
    4. '```' → logprob: -8.181282997131348
    5. ' couleur' → logprob: -9.806282997131348
    6. 'mé' → logprob: -9.931282997131348
    7. 'mm' → logprob: -10.431282997131348
    8. 'aut' → logprob: -10.431282997131348
    9. 'mem' → logprob: -10.681282997131348
    10. 's' → logprob: -11.056282997131348

Token 978: ' correspond' (ID: 11095)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7634574174880981
    2. 'rou' → logprob: -1.7634574174880981
    3. ' différente' → logprob: -2.2634572982788086
    4. 'op' → logprob: -2.6384572982788086
    5. ' oppos' → logprob: -3.2634572982788086
    6. 'd' → logprob: -3.2634572982788086
    7. '```' → logprob: -3.6384572982788086
    8. ' rouge' → logprob: -4.263457298278809
    9. 'different' → logprob: -4.763457298278809
    10. 'pr' → logprob: -5.013457298278809

Token 979: 'ante' (ID: 2116)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.12674559652805328
    2. 'ence' → logprob: -2.6267457008361816
    3. 'e' → logprob: -3.6267457008361816
    4. 'ante' → logprob: -4.376745700836182
    5. 'ente' → logprob: -5.376745700836182
    6. 's' → logprob: -6.376745700836182
    7. 'ent' → logprob: -8.501745223999023
    8. ')' → logprob: -8.626745223999023
    9. 'ace' → logprob: -8.876745223999023
    10. '```' → logprob: -9.376745223999023

Token 980: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005007109139114618
    2. ',' → logprob: -5.505007266998291
    3. '```' → logprob: -8.255006790161133
    4. ':' → logprob: -8.380006790161133
    5. '
' → logprob: -8.505006790161133
    6. '    
' → logprob: -9.505006790161133
    7. ' if' → logprob: -10.005006790161133
    8. ',
' → logprob: -10.380006790161133
    9. 'if' → logprob: -11.005006790161133
    10. '):
' → logprob: -11.255006790161133

Token 981: ' ensuite' (ID: 39713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12633731961250305
    2. '```' → logprob: -2.6263372898101807
    3. ' puis' → logprob: -3.2513372898101807
    4. 'et' → logprob: -5.50133752822876
    5. ',' → logprob: -6.62633752822876
    6. '``' → logprob: -8.001337051391602
    7. '#' → logprob: -8.251337051391602
    8. ' et' → logprob: -8.251337051391602
    9. 'ou' → logprob: -8.251337051391602
    10. 'p' → logprob: -8.501337051391602

Token 982: ' ceux' (ID: 26863)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11249680817127228
    2. 'à' → logprob: -2.362496852874756
    3. '#' → logprob: -4.987496852874756
    4. 'ce' → logprob: -6.487496852874756
    5. '       ' → logprob: -6.612496852874756
    6. '```' → logprob: -6.987496852874756
    7. 'aux' → logprob: -7.987496852874756
    8. ' à' → logprob: -8.112496376037598
    9. ' ceux' → logprob: -8.237496376037598
    10. ' ' → logprob: -9.112496376037598

Token 983: ' qui' (ID: 2780)
  Prédit: 'qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qui' → logprob: -0.48681458830833435
    2. 'ayant' → logprob: -1.4868146181106567
    3. 'who' → logprob: -2.736814498901367
    4. '   ' → logprob: -3.236814498901367
    5. ' qui' → logprob: -3.611814498901367
    6. '#' → logprob: -4.486814498901367
    7. 'avec' → logprob: -4.861814498901367
    8. 'sans' → logprob: -5.611814498901367
    9. ' who' → logprob: -6.611814498901367
    10. 'with' → logprob: -7.236814498901367

Token 984: ' peuvent' (ID: 21321)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.6469642519950867
    2. 'n' → logprob: -0.8969642519950867
    3. ' n' → logprob: -3.2719643115997314
    4. ' ont' → logprob: -4.146964073181152
    5. 'have' → logprob: -5.146964073181152
    6. ' have' → logprob: -5.146964073181152
    7. 'z' → logprob: -7.396964073181152
    8. ''ont' → logprob: -7.396964073181152
    9. '#' → logprob: -7.771964073181152
    10. 'a' → logprob: -7.896964073181152

Token 985: ' compléter' (ID: 152816)
  Prédit: ' recevoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recevoir' → logprob: -0.9291605949401855
    2. 'rece' → logprob: -1.8041605949401855
    3. 'avoir' → logprob: -1.9291605949401855
    4. 'être' → logprob: -2.4291605949401855
    5. 'prendre' → logprob: -2.6791605949401855
    6. 'former' → logprob: -3.4291605949401855
    7. 're' → logprob: -3.5541605949401855
    8. 'r' → logprob: -3.5541605949401855
    9. 'ac' → logprob: -5.0541605949401855
    10. '```' → logprob: -5.4291605949401855

Token 986: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.8541824817657471
    2. ' une' → logprob: -1.229182481765747
    3. 'la' → logprob: -2.354182481765747
    4. 'les' → logprob: -3.104182481765747
    5. 'un' → logprob: -3.479182481765747
    6. ' la' → logprob: -3.479182481765747
    7. ' un' → logprob: -3.979182481765747
    8. '   ' → logprob: -4.104182243347168
    9. 'le' → logprob: -4.354182243347168
    10. 'leur' → logprob: -4.604182243347168

Token 987: ' paire' (ID: 148856)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.8569156527519226
    2. ' paire' → logprob: -1.2319157123565674
    3. 'cou' → logprob: -2.1069157123565674
    4. 'pa' → logprob: -2.8569157123565674
    5. 'tr' → logprob: -3.1069157123565674
    6. 'trip' → logprob: -3.8569157123565674
    7. 'p' → logprob: -4.481915473937988
    8. '```' → logprob: -5.356915473937988
    9. ' triple' → logprob: -5.731915473937988
    10. ' couleur' → logprob: -5.981915473937988

Token 988: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21948404610157013
    2. ',' → logprob: -1.9694840908050537
    3. ',
' → logprob: -3.5944840908050537
    4. ' s' → logprob: -4.469483852386475
    5. '(s' → logprob: -5.344483852386475
    6. 's' → logprob: -5.594483852386475
    7. ':' → logprob: -6.219483852386475
    8. ' avec' → logprob: -6.594483852386475
    9. '.' → logprob: -6.719483852386475
    10. '(
' → logprob: -7.594483852386475

Token 989: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15594470500946045
    2. 'et' → logprob: -2.28094482421875
    3. ' et' → logprob: -4.15594482421875
    4. '```' → logprob: -4.53094482421875
    5. ' puis' → logprob: -4.78094482421875
    6. ',' → logprob: -6.15594482421875
    7. '       ' → logprob: -6.28094482421875
    8. 'ou' → logprob: -7.40594482421875
    9. 'and' → logprob: -7.53094482421875
    10. ' and' → logprob: -7.78094482421875

Token 990: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08715449273586273
    2. 'et' → logprob: -2.7121543884277344
    3. '#' (adapté à ' #') → logprob: -5.462154388427734
    4. '       ' → logprob: -5.837154388427734
    5. 'else' → logprob: -5.837154388427734
    6. ' et' → logprob: -6.337154388427734
    7. 'ou' → logprob: -6.587154388427734
    8. '```' → logprob: -6.837154388427734
    9. ' puis' → logprob: -7.087154388427734
    10. 'and' → logprob: -7.712154388427734

Token 991: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3394615054130554
    2. 'et' → logprob: -1.5894615650177002
    3. '#' → logprob: -3.3394615650177
    4. ' et' → logprob: -3.7144615650177
    5. '```' → logprob: -4.839461326599121
    6. ',' → logprob: -5.714461326599121
    7. ' puis' → logprob: -5.714461326599121
    8. 'and' → logprob: -6.464461326599121
    9. '
' → logprob: -7.089461326599121
    10. ' and' → logprob: -7.214461326599121

Token 992: ' enfin' (ID: 50642)
  Prédit: ' enfin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enfin' → logprob: -0.3896544575691223
    2. '   ' → logprob: -1.5146543979644775
    3. 'finally' → logprob: -3.0146543979644775
    4. '       ' → logprob: -4.764654636383057
    5. ' finally' → logprob: -4.889654636383057
    6. 'z' → logprob: -4.889654636383057
    7. ' ceux' → logprob: -5.264654636383057
    8. 'Enfin' → logprob: -5.514654636383057
    9. 'ens' → logprob: -5.639654636383057
    10. '    ' → logprob: -6.014654636383057

Token 993: ' à' (ID: 1221)
  Prédit: ' ceux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ceux' → logprob: -0.11845279484987259
    2. ' (' → logprob: -3.743452787399292
    3. ' Mod' → logprob: -4.118453025817871
    4. '(' → logprob: -4.118453025817871
    5. ' les' → logprob: -4.243453025817871
    6. 'z' → logprob: -4.743453025817871
    7. '(
' → logprob: -4.993453025817871
    8. ' z' → logprob: -5.118453025817871
    9. 'les' → logprob: -5.493453025817871
    10. '   ' → logprob: -5.743453025817871

Token 994: ' une' (ID: 2463)
  Prédit: ' ceux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ceux' → logprob: -0.6853424310684204
    2. 'z' → logprob: -0.8103424310684204
    3. ' z' → logprob: -3.060342311859131
    4. ' Mod' → logprob: -6.685342311859131
    5. ' celles' → logprob: -6.935342311859131
    6. '(z' → logprob: -7.310342311859131
    7. 'those' → logprob: -8.185342788696289
    8. ' those' → logprob: -8.935342788696289
    9. ' (' → logprob: -9.060342788696289
    10. 'Mod' → logprob: -9.185342788696289

Token 995: ' personne' (ID: 26304)
  Prédit: ' personne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' personne' → logprob: -0.08274886757135391
    2. 'person' → logprob: -2.5827488899230957
    3. ' person' → logprob: -6.707748889923096
    4. ' nouvelle' → logprob: -7.332748889923096
    5. 'sans' → logprob: -7.957748889923096
    6. ' sans' → logprob: -8.082748413085938
    7. 'nou' → logprob: -8.207748413085938
    8. 'z' → logprob: -8.332748413085938
    9. ' personnes' → logprob: -8.707748413085938
    10. '```' → logprob: -9.332748413085938

Token 996: ' sans' (ID: 9828)
  Prédit: 'sans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sans' → logprob: -0.42130956053733826
    2. ' sans' → logprob: -1.1713095903396606
    3. '   ' → logprob: -4.046309471130371
    4. ' qui' → logprob: -4.921309471130371
    5. 'qui' → logprob: -6.046309471130371
    6. 'without' → logprob: -6.296309471130371
    7. 'z' → logprob: -6.421309471130371
    8. ' without' → logprob: -7.171309471130371
    9. 'ne' → logprob: -7.671309471130371
    10. 'n' → logprob: -8.421309471130371

Token 997: ' balle' (ID: 147386)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1431618481874466
    2. 'ball' → logprob: -2.3931617736816406
    3. ' balle' → logprob: -3.2681617736816406
    4. '```' → logprob: -5.768161773681641
    5. 'bal' → logprob: -7.518161773681641
    6. '   ' → logprob: -9.76816177368164
    7. '
' → logprob: -10.01816177368164
    8. ' ' → logprob: -10.39316177368164
    9. ' ball' → logprob: -10.76816177368164
    10. '0' → logprob: -10.76816177368164

Token 998: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027826502919197083
    2. '    
' → logprob: -6.752782821655273
    3. '
' → logprob: -7.752782821655273
    4. ',' → logprob: -7.877782821655273
    5. ':' → logprob: -8.127782821655273
    6. ' if' → logprob: -8.502782821655273
    7. 'if' → logprob: -9.002782821655273
    8. 'def' → logprob: -10.627782821655273
    9. '):
' → logprob: -10.627782821655273
    10. ')' → logprob: -10.752782821655273

Token 999: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007430923171341419
    2. '```' → logprob: -5.6324310302734375
    3. ' if' → logprob: -6.2574310302734375
    4. 'if' → logprob: -6.3824310302734375
    5. '
' → logprob: -8.757431030273438
    6. '    
' → logprob: -10.632431030273438
    7. '``' → logprob: -11.132431030273438
    8. 'def' → logprob: -12.257431030273438
    9. '	if' → logprob: -13.007431030273438
    10. '{
' → logprob: -13.632431030273438

Token 1000: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27522894740104675
    2. ' if' → logprob: -1.7752289772033691
    3. 'if' (adapté à ' if') → logprob: -2.650228977203369
    4. '
' → logprob: -8.275228500366211
    5. '    
' → logprob: -9.650228500366211
    6. '```' → logprob: -9.775228500366211
    7. '	if' → logprob: -10.525228500366211
    8. 'i' → logprob: -10.650228500366211
    9. ' i' → logprob: -11.025228500366211
    10. ' ' → logprob: -11.150228500366211

Token 1001: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4291863739490509
    2. ' s' → logprob: -1.0541863441467285
    3. 'z' → logprob: -8.679186820983887
    4. ' z' → logprob: -8.804186820983887
    5. 'r' → logprob: -9.679186820983887
    6. ' ' → logprob: -10.179186820983887
    7. ' r' → logprob: -10.554186820983887
    8. '   ' → logprob: -10.554186820983887
    9. '  ' → logprob: -12.804186820983887
    10. '	s' → logprob: -13.054186820983887

Token 1002: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04315926879644394
    2. '==' → logprob: -3.168159246444702
    3. '=='' → logprob: -9.293159484863281
    4. '[' → logprob: -10.543159484863281
    5. ' =='' → logprob: -11.043159484863281
    6. ''' → logprob: -11.793159484863281
    7. '=' → logprob: -12.168159484863281
    8. '=="' → logprob: -12.543159484863281
    9. ' ' → logprob: -12.918159484863281
    10. '	' → logprob: -13.418159484863281

Token 1003: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.774276774493046e-05
    2. '"' → logprob: -10.500038146972656
    3. ' '' → logprob: -12.000038146972656
    4. ''A' → logprob: -13.375038146972656
    5. 'R' → logprob: -13.750038146972656
    6. ''C' → logprob: -14.375038146972656
    7. ''U' → logprob: -15.125038146972656
    8. ''S' → logprob: -15.625038146972656
    9. '   ' → logprob: -16.125038146972656
    10. ''O' → logprob: -16.750038146972656

Token 1004: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -6.630610641877865e-06
    2. 'B' → logprob: -12.125006675720215
    3. ' R' → logprob: -14.625006675720215
    4. 'G' → logprob: -15.250006675720215
    5. ''' → logprob: -15.375006675720215
    6. 'r' → logprob: -15.750006675720215
    7. '"' → logprob: -16.3750057220459
    8. '\'' → logprob: -18.1250057220459
    9. '	R' → logprob: -18.6250057220459
    10. '')' → logprob: -18.6250057220459

Token 1005: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5624759793281555
    2. ':' → logprob: -1.4374759197235107
    3. '':
' → logprob: -1.6874759197235107
    4. ''' → logprob: -5.68747615814209
    5. ':
' → logprob: -5.93747615814209
    6. '   ' → logprob: -6.56247615814209
    7. '':
' → logprob: -9.43747615814209
    8. ''):
' → logprob: -10.06247615814209
    9. '):
' → logprob: -10.43747615814209
    10. '       ' → logprob: -10.68747615814209

Token 1006: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04648565873503685
    2. '       ' → logprob: -3.171485662460327
    3. ' if' → logprob: -6.171485424041748
    4. '
' → logprob: -7.421485424041748
    5. 'if' → logprob: -7.421485424041748
    6. '```' → logprob: -8.796485900878906
    7. '    
' → logprob: -11.296485900878906
    8. ':' → logprob: -11.671485900878906
    9. '   ' → logprob: -12.171485900878906
    10. '	if' → logprob: -13.171485900878906

Token 1007: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002422779070911929
    2. '   ' → logprob: -8.375242233276367
    3. 'return' → logprob: -11.875242233276367
    4. '       ' → logprob: -13.500242233276367
    5. '#' → logprob: -13.750242233276367
    6. ' if' → logprob: -13.875242233276367
    7. 'res' → logprob: -13.875242233276367
    8. '
' → logprob: -15.875242233276367
    9. 'z' → logprob: -16.250242233276367
    10. 'r' → logprob: -17.250242233276367

Token 1008: ' gb' (ID: 21144)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.024146337062120438
    2. 'r' → logprob: -4.399146556854248
    3. 'br' → logprob: -4.774146556854248
    4. 'z' → logprob: -6.774146556854248
    5. ' rg' → logprob: -6.774146556854248
    6. 'rb' → logprob: -7.274146556854248
    7. 'b' → logprob: -9.77414608001709
    8. ' r' → logprob: -10.89914608001709
    9. ' br' → logprob: -11.14914608001709
    10. '(r' → logprob: -12.02414608001709

Token 1009: ':
' (ID: 734)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.31331905722618103
    2. '>' → logprob: -1.3133190870285034
    3. ')>' → logprob: -11.188319206237793
    4. ')' → logprob: -11.313319206237793
    5. ':' → logprob: -11.813319206237793
    6. ' ' → logprob: -12.063319206237793
    7. '&gt' → logprob: -12.563319206237793
    8. '()>' → logprob: -12.813319206237793
    9. '[' → logprob: -13.188319206237793
    10. ' ' → logprob: -13.313319206237793

Token 1010: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025916459038853645
    2. ':' → logprob: -4.025916576385498
    3. '       ' → logprob: -5.775916576385498
    4. ':
' → logprob: -6.650916576385498
    5. 'return' → logprob: -7.275916576385498
    6. ',' → logprob: -7.400916576385498
    7. '=' → logprob: -8.40091609954834
    8. 'gb' → logprob: -8.40091609954834
    9. ' and' → logprob: -8.52591609954834
    10. ':return' → logprob: -8.65091609954834

Token 1011: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13547591865062714
    2. 'res' → logprob: -2.3854758739471436
    3. 'gb' → logprob: -3.6354758739471436
    4. '           ' → logprob: -5.010476112365723
    5. '       ' → logprob: -6.635476112365723
    6. ' return' → logprob: -8.885476112365723
    7. ' res' → logprob: -10.385476112365723
    8. 'result' → logprob: -10.510476112365723
    9. '#' (adapté à ' #') → logprob: -10.760476112365723
    10. ' gb' → logprob: -10.760476112365723

Token 1012: ' Prior' (ID: 39936)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12587618827819824
    2. 'res' → logprob: -2.2508761882781982
    3. 'gb' → logprob: -4.625876426696777
    4. '           ' → logprob: -6.250876426696777
    5. '       ' → logprob: -6.875876426696777
    6. ' return' → logprob: -10.125876426696777
    7. 'rb' → logprob: -10.375876426696777
    8. 'r' → logprob: -10.625876426696777
    9. 'rg' → logprob: -10.625876426696777
    10. 'result' → logprob: -11.250876426696777

Token 1013: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.007572907488793135
    2. 'ités' → logprob: -5.632573127746582
    3. 'ity' → logprob: -6.507573127746582
    4. '           ' → logprob: -7.132573127746582
    5. '       ' → logprob: -7.632573127746582
    6. 'isé' → logprob: -7.882573127746582
    7. 'itaire' → logprob: -8.882573127746582
    8. 'def' → logprob: -9.382573127746582
    9. 'ite' → logprob: -9.382573127746582
    10. 'é' → logprob: -9.507573127746582

Token 1014: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5774083137512207
    2. '=' → logprob: -1.7024083137512207
    3. 'return' → logprob: -2.4524083137512207
    4. ',' → logprob: -2.5774083137512207
    5. ' =' → logprob: -2.9524083137512207
    6. ' -=' → logprob: -4.202408313751221
    7. '       ' → logprob: -4.452408313751221
    8. '-=' → logprob: -5.702408313751221
    9. ':' → logprob: -6.452408313751221
    10. ' +=' → logprob: -6.827408313751221

Token 1015: ' donner' (ID: 32394)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17799913883209229
    2. 'gb' → logprob: -2.4279990196228027
    3. 'res' → logprob: -2.6779990196228027
    4. '           ' → logprob: -5.927999019622803
    5. '       ' → logprob: -6.302999019622803
    6. 'rg' → logprob: -7.677999019622803
    7. 'rb' → logprob: -8.302999496459961
    8. 'r' → logprob: -8.677999496459961
    9. 'new' → logprob: -9.052999496459961
    10. 'z' → logprob: -9.302999496459961

Token 1016: ' au' (ID: 2791)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.020268812775611877
    2. ' gb' → logprob: -4.52026891708374
    3. '(g' → logprob: -5.77026891708374
    4. '(
' → logprob: -6.27026891708374
    5. '(' → logprob: -6.39526891708374
    6. '	gb' → logprob: -7.27026891708374
    7. ' ' → logprob: -8.520268440246582
    8. '   ' → logprob: -8.520268440246582
    9. '=' → logprob: -8.770268440246582
    10. '
' → logprob: -8.895268440246582

Token 1017: ' groupe' (ID: 29494)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.14583785831928253
    2. 'Mod' → logprob: -2.0208377838134766
    3. 'person' → logprob: -6.145837783813477
    4. '(Mod' → logprob: -8.145837783813477
    5. ' Mod' → logprob: -8.520837783813477
    6. '(g' → logprob: -9.770837783813477
    7. 'rgb' → logprob: -9.770837783813477
    8. 'g' → logprob: -9.895837783813477
    9. 'Person' → logprob: -9.895837783813477
    10. 'r' → logprob: -10.270837783813477

Token 1018: ' GB' (ID: 23280)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.019326699897646904
    2. ' gb' → logprob: -4.394326686859131
    3. '(g' → logprob: -6.144326686859131
    4. '           ' → logprob: -6.519326686859131
    5. 'with' → logprob: -7.019326686859131
    6. ' with' → logprob: -7.269326686859131
    7. '       ' → logprob: -8.144327163696289
    8. '   ' → logprob: -8.269327163696289
    9. '=' → logprob: -8.894327163696289
    10. '`' → logprob: -8.894327163696289

Token 1019: ' (' (ID: 350)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5688816905021667
    2. ' -' → logprob: -1.5688817501068115
    3. '           ' → logprob: -2.0688817501068115
    4. ',' → logprob: -3.1938817501068115
    5. ':' → logprob: -4.318881511688232
    6. ':
' → logprob: -4.318881511688232
    7. ' -=' → logprob: -4.568881511688232
    8. '[' → logprob: -5.193881511688232
    9. '=' → logprob: -5.318881511688232
    10. ' =' → logprob: -6.318881511688232

Token 1020: 'de' (ID: 613)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.03450256213545799
    2. ' gb' → logprob: -3.7845025062561035
    3. ')' → logprob: -5.2845025062561035
    4. '1' → logprob: -5.7845025062561035
    5. 'return' → logprob: -7.5345025062561035
    6. '=' → logprob: -7.7845025062561035
    7. '(g' → logprob: -8.159502983093262
    8. '           ' → logprob: -8.284502983093262
    9. '   ' → logprob: -8.659502983093262
    10. '-' → logprob: -8.909502983093262

Token 1021: 'vi' (ID: 4627)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.26838982105255127
    2. 'ux' → logprob: -2.5183897018432617
    3. 's' → logprob: -3.3933897018432617
    4. 'ja' → logprob: -4.268389701843262
    5. 'fa' → logprob: -4.518389701843262
    6. 'f' → logprob: -4.893389701843262
    7. 'size' → logprob: -5.018389701843262
    8. 'gr' → logprob: -5.143389701843262
    9. 'ball' → logprob: -5.143389701843262
    10. 't' → logprob: -5.518389701843262

Token 1022: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0014396385522559285
    2. 'en' → logprob: -7.751439571380615
    3. 'end' → logprob: -8.126440048217773
    4. 'nt' → logprob: -8.876440048217773
    5. 'nent' → logprob: -9.376440048217773
    6. 'enant' → logprob: -9.751440048217773
    7. 'ennent' → logprob: -9.876440048217773
    8. 'enn' → logprob: -10.251440048217773
    9. 'ents' → logprob: -10.376440048217773
    10. 'e' → logprob: -10.626440048217773

Token 1023: ' RGB' (ID: 46144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.15125182271003723
    2. 'br' → logprob: -2.276251792907715
    3. '   ' → logprob: -5.151251792907715
    4. 'b' → logprob: -5.151251792907715
    5. 'rgb' → logprob: -5.401251792907715
    6. ' gb' → logprob: -5.526251792907715
    7. 'rg' → logprob: -5.776251792907715
    8. '(g' → logprob: -6.026251792907715
    9. '(br' → logprob: -6.651251792907715
    10. 'Mod' → logprob: -6.651251792907715

Token 1024: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35211485624313354
    2. '=' → logprob: -1.6021149158477783
    3. ')
' → logprob: -2.9771149158477783
    4. ' =' → logprob: -3.6021149158477783
    5. '           ' → logprob: -4.477114677429199
    6. ',' → logprob: -7.102114677429199
    7. '):' → logprob: -7.352114677429199
    8. '=True' → logprob: -7.477114677429199
    9. '):
' → logprob: -7.602114677429199
    10. '+' → logprob: -7.602114677429199

Token 1025: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37117666006088257
    2. ':' → logprob: -1.9961767196655273
    3. '               ' → logprob: -2.3711767196655273
    4. ':
' → logprob: -2.8711767196655273
    5. '       ' → logprob: -4.746176719665527
    6. ' :' → logprob: -5.621176719665527
    7. ' :
' → logprob: -6.246176719665527
    8. ',' → logprob: -6.496176719665527
    9. ' =' → logprob: -6.621176719665527
    10. '.' → logprob: -7.121176719665527

Token 1026: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10988520085811615
    2. 'res' → logprob: -2.9848852157592773
    3. 'gb' → logprob: -3.3598852157592773
    4. '           ' → logprob: -4.234885215759277
    5. 'rg' → logprob: -5.859885215759277
    6. '       ' → logprob: -7.484885215759277
    7. 'r' → logprob: -8.734885215759277
    8. 'rb' → logprob: -8.734885215759277
    9. '#' → logprob: -9.109885215759277
    10. 'z' → logprob: -9.109885215759277

Token 1027: ' (' (ID: 350)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.10337601602077484
    2. '(res' → logprob: -2.3533759117126465
    3. '(Mod' → logprob: -6.8533759117126465
    4. 'f' → logprob: -7.6033759117126465
    5. 'Mod' → logprob: -7.8533759117126465
    6. 's' → logprob: -8.228376388549805
    7. ' res' → logprob: -8.353376388549805
    8. '(
' → logprob: -8.353376388549805
    9. '(s' → logprob: -8.978376388549805
    10. '   ' → logprob: -9.103376388549805

Token 1028: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00043686782009899616
    2. 's' → logprob: -7.875436782836914
    3. 'Mod' → logprob: -10.125436782836914
    4. ' res' → logprob: -12.375436782836914
    5. '(res' → logprob: -12.500436782836914
    6. '   ' → logprob: -12.875436782836914
    7. 'None' → logprob: -13.500436782836914
    8. 'r' → logprob: -13.625436782836914
    9. 'f' → logprob: -13.750436782836914
    10. 'Res' → logprob: -14.500436782836914

Token 1029: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0044777123257517815
    2. '*' → logprob: -6.129477500915527
    3. ' *' → logprob: -6.504477500915527
    4. ' ,' → logprob: -7.379477500915527
    5. ',
' → logprob: -10.379477500915527
    6. ',z' → logprob: -10.629477500915527
    7. '*,' → logprob: -10.629477500915527
    8. '*z' → logprob: -10.629477500915527
    9. '   ' → logprob: -11.379477500915527
    10. ',g' → logprob: -12.004477500915527

Token 1030: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.0048158844001591206
    2. 'Mod' → logprob: -5.379816055297852
    3. ' gb' → logprob: -9.004816055297852
    4. 'MOD' → logprob: -9.879816055297852
    5. '(Mod' → logprob: -11.254816055297852
    6. '(g' → logprob: -12.379816055297852
    7. 'GB' → logprob: -14.254816055297852
    8. 'z' → logprob: -14.379816055297852
    9. ' Mod' → logprob: -14.504816055297852
    10. '.gb' → logprob: -14.629816055297852

Token 1031: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.305326966568828e-05
    2. ' ,' → logprob: -9.750093460083008
    3. '),' → logprob: -11.500093460083008
    4. ',
' → logprob: -11.500093460083008
    5. '-' → logprob: -12.125093460083008
    6. '   ' → logprob: -13.500093460083008
    7. ',g' → logprob: -13.625093460083008
    8. ' -' → logprob: -13.750093460083008
    9. ')' → logprob: -13.750093460083008
    10. 'gb' → logprob: -14.625093460083008

Token 1032: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00011355629976605996
    2. '0' → logprob: -9.500113487243652
    3. 'Mod' → logprob: -10.625113487243652
    4. '   ' → logprob: -12.375113487243652
    5. '(z' → logprob: -12.875113487243652
    6. '       ' → logprob: -13.500113487243652
    7. '
' → logprob: -13.500113487243652
    8. 'gb' → logprob: -13.625113487243652
    9. ' z' → logprob: -13.750113487243652
    10. '     ' → logprob: -14.250113487243652

Token 1033: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10303808748722076
    2. '-' → logprob: -2.6030380725860596
    3. ' -' → logprob: -4.728038311004639
    4. ' ,' → logprob: -4.853038311004639
    5. '   ' → logprob: -5.228038311004639
    6. '  ' → logprob: -7.978038311004639
    7. '       ' → logprob: -8.22803783416748
    8. '+' → logprob: -8.35303783416748
    9. '    ' → logprob: -8.72803783416748
    10. '     ' → logprob: -8.97803783416748

Token 1034: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003978992172051221
    2. 'gb' → logprob: -8.875397682189941
    3. 'rg' → logprob: -9.375397682189941
    4. '0' → logprob: -9.625397682189941
    5. 'g' → logprob: -10.125397682189941
    6. '   ' → logprob: -10.750397682189941
    7. ' r' → logprob: -11.625397682189941
    8. '     ' → logprob: -11.750397682189941
    9. '       ' → logprob: -12.000397682189941
    10. 'rb' → logprob: -12.125397682189941

Token 1035: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027790816966444254
    2. ' ,' → logprob: -6.252779006958008
    3. '   ' → logprob: -7.752779006958008
    4. '  ' → logprob: -8.752779006958008
    5. '-' → logprob: -9.377779006958008
    6. '       ' → logprob: -9.752779006958008
    7. ',g' → logprob: -10.752779006958008
    8. '           ' → logprob: -10.877779006958008
    9. '+' → logprob: -11.127779006958008
    10. ' ' → logprob: -11.502779006958008

Token 1036: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00014096579980105162
    2. '   ' → logprob: -9.625141143798828
    3. '       ' → logprob: -10.750141143798828
    4. ' g' → logprob: -10.875141143798828
    5. '(g' → logprob: -11.000141143798828
    6. '           ' → logprob: -12.500141143798828
    7. 'gb' → logprob: -12.625141143798828
    8. '     ' → logprob: -13.000141143798828
    9. '0' → logprob: -13.375141143798828
    10. '    ' → logprob: -13.500141143798828

Token 1037: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024370201863348484
    2. ' ,' → logprob: -6.502437114715576
    3. '   ' → logprob: -7.752437114715576
    4. ',b' → logprob: -8.502436637878418
    5. '  ' → logprob: -9.002436637878418
    6. 'b' → logprob: -9.502436637878418
    7. '+' → logprob: -10.627436637878418
    8. '```' → logprob: -10.752436637878418
    9. '       ' → logprob: -11.252436637878418
    10. '    ' → logprob: -11.752436637878418

Token 1038: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00014096579980105162
    2. ' b' → logprob: -9.750141143798828
    3. '0' → logprob: -10.250141143798828
    4. '   ' → logprob: -10.625141143798828
    5. 'Mod' → logprob: -12.000141143798828
    6. '(b' → logprob: -12.000141143798828
    7. '
' → logprob: -12.750141143798828
    8. '       ' → logprob: -12.875141143798828
    9. ' ' → logprob: -13.875141143798828
    10. '     ' → logprob: -14.000141143798828

Token 1039: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019402962643653154
    2. ' ,' → logprob: -7.0019402503967285
    3. '-' → logprob: -7.8769402503967285
    4. '           ' → logprob: -8.876940727233887
    5. ' -' → logprob: -9.001940727233887
    6. '       ' → logprob: -9.251940727233887
    7. '+' → logprob: -9.251940727233887
    8. ',
' → logprob: -9.876940727233887
    9. ' +' → logprob: -10.126940727233887
    10. '   ' → logprob: -10.251940727233887

Token 1040: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.006867520976811647
    2. '0' → logprob: -5.381867408752441
    3. 'Mod' → logprob: -6.881867408752441
    4. '   ' → logprob: -7.381867408752441
    5. '       ' → logprob: -8.881867408752441
    6. '     ' → logprob: -9.131867408752441
    7. 'rgb' → logprob: -9.506867408752441
    8. ' rg' → logprob: -10.006867408752441
    9. '           ' → logprob: -10.131867408752441
    10. '      ' → logprob: -10.756867408752441

Token 1041: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008753741858527064
    2. ' ,' → logprob: -7.125875473022461
    3. '   ' → logprob: -11.375875473022461
    4. '+' → logprob: -11.375875473022461
    5. ',
' → logprob: -11.375875473022461
    6. '           ' → logprob: -11.875875473022461
    7. '       ' → logprob: -12.375875473022461
    8. '-' → logprob: -12.375875473022461
    9. '  ' → logprob: -12.500875473022461
    10. '```' → logprob: -12.500875473022461

Token 1042: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.0012808336177840829
    2. ' gb' → logprob: -7.376280784606934
    3. '0' → logprob: -7.501280784606934
    4. ' ' → logprob: -10.251280784606934
    5. '   ' → logprob: -10.251280784606934
    6. '     ' → logprob: -12.126280784606934
    7. '       ' → logprob: -12.251280784606934
    8. '  ' → logprob: -13.001280784606934
    9. '    ' → logprob: -13.001280784606934
    10. '(' → logprob: -13.001280784606934

Token 1043: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03819331154227257
    2. ' -' → logprob: -3.2881932258605957
    3. ',' → logprob: -8.913193702697754
    4. '0' → logprob: -12.663193702697754
    5. '   ' → logprob: -12.663193702697754
    6. ' ' → logprob: -12.663193702697754
    7. '
' → logprob: -13.413193702697754
    8. '-
' → logprob: -13.663193702697754
    9. '```' → logprob: -14.038193702697754
    10. ' ,' → logprob: -14.038193702697754

Token 1044: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'Mod' → logprob: -16.875
    3. ' ' → logprob: -17.625
    4. '
' → logprob: -20.25
    5. '```' → logprob: -20.5
    6. '   ' → logprob: -20.75
    7. '(Mod' → logprob: -20.75
    8. '۱' → logprob: -22.25
    9. '﻿' → logprob: -22.75
    10. '' → logprob: -22.875

Token 1045: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. 'Mod' → logprob: -18.75
    4. '
' → logprob: -19.625
    5. '```' → logprob: -20.125
    6. '   ' → logprob: -21.0
    7. '۱' → logprob: -22.25
    8. '(' → logprob: -22.375
    9. '﻿' → logprob: -22.375
    10. '' → logprob: -22.875

Token 1046: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019984507525805384
    2. ' ,' → logprob: -9.000200271606445
    3. '   ' → logprob: -10.500200271606445
    4. ')' → logprob: -11.375200271606445
    5. '```' → logprob: -11.375200271606445
    6. '       ' → logprob: -11.625200271606445
    7. '           ' → logprob: -11.875200271606445
    8. ',
' → logprob: -12.500200271606445
    9. 'br' → logprob: -14.250200271606445
    10. '  ' → logprob: -14.500200271606445

Token 1047: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.0001589618914294988
    2. ' br' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.25015926361084
    4. '  ' → logprob: -16.250158309936523
    5. '(br' → logprob: -16.625158309936523
    6. ' ' → logprob: -17.125158309936523
    7. '	br' → logprob: -17.875158309936523
    8. '    ' → logprob: -18.250158309936523
    9. 'b' → logprob: -19.125158309936523
    10. '       ' → logprob: -19.375158309936523

Token 1048: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006845565512776375
    2. '+' → logprob: -7.75068473815918
    3. ' ,' → logprob: -9.12568473815918
    4. ')' → logprob: -9.87568473815918
    5. ' +' → logprob: -9.87568473815918
    6. '   ' → logprob: -10.75068473815918
    7. '```' → logprob: -12.50068473815918
    8. ',
' → logprob: -12.62568473815918
    9. '+,' → logprob: -12.75068473815918
    10. '           ' → logprob: -12.75068473815918

Token 1049: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04299497231841087
    2. ')' → logprob: -3.917994976043701
    3. '   ' → logprob: -4.167994976043701
    4. ' ,' → logprob: -6.167994976043701
    5. '       ' → logprob: -6.167994976043701
    6. ',
' → logprob: -6.667994976043701
    7. '<|end|>' → logprob: -7.542994976043701
    8. '),' → logprob: -9.292994499206543
    9. ',r' → logprob: -9.292994499206543
    10. '[' → logprob: -9.667994499206543

Token 1050: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13979677855968475
    2. '   ' → logprob: -2.639796733856201
    3. 'if' → logprob: -3.014796733856201
    4. ' if' → logprob: -5.014796733856201
    5. 'elif' (adapté à ' elif') → logprob: -6.264796733856201
    6. ')' → logprob: -7.014796733856201
    7. '
' → logprob: -8.26479721069336
    8. 'return' → logprob: -9.38979721069336
    9. ' elif' → logprob: -9.88979721069336
    10. '<|end|>' → logprob: -10.76479721069336

Token 1051: ' g' (ID: 329)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.5238624811172485
    2. 'rg' → logprob: -0.8988624811172485
    3. ' rg' → logprob: -8.148862838745117
    4. 'rb' → logprob: -8.773862838745117
    5. ' br' → logprob: -9.273862838745117
    6. 'r' → logprob: -9.648862838745117
    7. 'b' → logprob: -10.023862838745117
    8. 'gb' → logprob: -10.648862838745117
    9. 'gr' → logprob: -10.648862838745117
    10. 'rgb' → logprob: -11.773862838745117

Token 1052: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050836652517318726
    2. ':
' → logprob: -3.9258365631103516
    3. '>' → logprob: -4.175836563110352
    4. '<|end|>' → logprob: -4.925836563110352
    5. ' >' → logprob: -6.675836563110352
    6. '       ' → logprob: -6.925836563110352
    7. '   ' → logprob: -7.050836563110352
    8. '==' → logprob: -7.175836563110352
    9. '+' → logprob: -7.300836563110352
    10. ',' → logprob: -7.550836563110352

Token 1053: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3260268270969391
    2. '           ' → logprob: -1.4510267972946167
    3. ':' → logprob: -3.3260269165039062
    4. ':
' → logprob: -5.326026916503906
    5. '(' → logprob: -7.076026916503906
    6. ' (' → logprob: -7.576026916503906
    7. ',' → logprob: -8.076026916503906
    8. ' :' → logprob: -8.451026916503906
    9. ' and' → logprob: -8.576026916503906
    10. '               ' → logprob: -8.576026916503906

Token 1054: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2905181348323822
    2. 'return' → logprob: -1.6655181646347046
    3. '(' → logprob: -3.040518045425415
    4. ' return' → logprob: -4.790518283843994
    5. ' (' → logprob: -5.790518283843994
    6. '(return' → logprob: -6.540518283843994
    7. '(
' → logprob: -7.040518283843994
    8. '#' (adapté à ' #') → logprob: -7.790518283843994
    9. '           ' → logprob: -7.915518283843994
    10. '   ' → logprob: -8.290517807006836

Token 1055: ' Ensuite' (ID: 113884)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02835482358932495
    2. '       ' → logprob: -4.028354644775391
    3. ' return' → logprob: -4.778354644775391
    4. 'res' → logprob: -7.278354644775391
    5. '           ' → logprob: -8.15335464477539
    6. '(return' → logprob: -8.77835464477539
    7. '(res' → logprob: -8.77835464477539
    8. '(
' → logprob: -9.15335464477539
    9. '```' → logprob: -9.27835464477539
    10. 'r' → logprob: -9.77835464477539

Token 1056: ' :' (ID: 712)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2428787499666214
    2. '(res' → logprob: -2.8678786754608154
    3. ' return' → logprob: -2.9928786754608154
    4. '       ' → logprob: -3.3678786754608154
    5. ' (' → logprob: -3.3678786754608154
    6. '(
' → logprob: -4.4928789138793945
    7. '(return' → logprob: -4.4928789138793945
    8. '           ' → logprob: -4.6178789138793945
    9. '(r' → logprob: -5.9928789138793945
    10. '(' → logprob: -5.9928789138793945

Token 1057: ' à' (ID: 1221)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002752926666289568
    2. '(return' → logprob: -6.627752780914307
    3. ' return' → logprob: -7.127752780914307
    4. '       ' → logprob: -7.627752780914307
    5. '(res' → logprob: -9.502753257751465
    6. '           ' → logprob: -11.002753257751465
    7. '   ' → logprob: -11.002753257751465
    8. '(' → logprob: -11.627753257751465
    9. ' (' → logprob: -11.877753257751465
    10. '(r' → logprob: -12.127753257751465

Token 1058: ' une' (ID: 2463)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.7128413915634155
    2. '(r' → logprob: -1.5878413915634155
    3. 'g' → logprob: -2.087841510772705
    4. '(Mod' → logprob: -2.212841510772705
    5. 'Mod' → logprob: -3.212841510772705
    6. '(' → logprob: -4.462841510772705
    7. '(res' → logprob: -4.587841510772705
    8. ' (' → logprob: -5.837841510772705
    9. '(s' → logprob: -6.462841510772705
    10. '(z' → logprob: -6.712841510772705

Token 1059: ' personne' (ID: 26304)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0260164774954319
    2. ' g' → logprob: -4.526016712188721
    3. '(g' → logprob: -5.276016712188721
    4. 'person' → logprob: -5.526016712188721
    5. 'Mod' → logprob: -6.026016712188721
    6. '(Mod' → logprob: -6.901016712188721
    7. '(' → logprob: -7.651016712188721
    8. ' Mod' → logprob: -7.776016712188721
    9. ' personne' → logprob: -7.901016712188721
    10. ' (' → logprob: -8.276016235351562

Token 1060: ' avec' (ID: 3937)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8468790054321289
    2. '(g' → logprob: -0.8468790054321289
    3. 'with' → logprob: -2.096879005432129
    4. '(' → logprob: -4.971879005432129
    5. ' with' → logprob: -5.221879005432129
    6. '   ' → logprob: -6.846879005432129
    7. ' (' → logprob: -6.971879005432129
    8. ' avec' → logprob: -6.971879005432129
    9. 'avec' → logprob: -7.096879005432129
    10. ' g' → logprob: -7.596879005432129

Token 1061: ' une' (ID: 2463)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.09506725519895554
    2. '1' → logprob: -2.720067262649536
    3. ' g' → logprob: -3.845067262649536
    4. ' ' → logprob: -6.095067024230957
    5. 'Mod' → logprob: -7.970067024230957
    6. '(' → logprob: -8.720067024230957
    7. '(g' → logprob: -8.845067024230957
    8. 'une' → logprob: -9.345067024230957
    9. ' Mod' → logprob: -9.345067024230957
    10. 'b' → logprob: -9.595067024230957

Token 1062: ' verte' (ID: 37130)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4240034222602844
    2. 'ball' → logprob: -2.0490033626556396
    3. 'g' → logprob: -2.6740033626556396
    4. 'green' → logprob: -3.0490033626556396
    5. '1' → logprob: -3.1740033626556396
    6. 'verte' → logprob: -3.5490033626556396
    7. '```' → logprob: -4.674003601074219
    8. 'ble' → logprob: -5.674003601074219
    9. ' ' → logprob: -5.674003601074219
    10. 'single' → logprob: -5.799003601074219

Token 1063: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4556148946285248
    2. '           ' → logprob: -1.5806149244308472
    3. ',' → logprob: -2.7056148052215576
    4. ' (' → logprob: -3.5806148052215576
    5. '```' → logprob: -3.9556148052215576
    6. ')' → logprob: -4.330615043640137
    7. '(' → logprob: -5.205615043640137
    8. '=' → logprob: -5.330615043640137
    9. ' *' → logprob: -6.205615043640137
    10. '   ' → logprob: -6.205615043640137

Token 1064: 'dev' (ID: 6751)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00507009495049715
    2. 'b' → logprob: -6.130070209503174
    3. ' g' → logprob: -6.505070209503174
    4. ')' → logprob: -7.380070209503174
    5. '```' → logprob: -8.505069732666016
    6. '(g' → logprob: -9.005069732666016
    7. 'Mod' → logprob: -9.130069732666016
    8. '       ' → logprob: -9.755069732666016
    9. '   ' → logprob: -10.005069732666016
    10. ' b' → logprob: -10.630069732666016

Token 1065: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.5645408034324646
    2. 'b' → logprob: -1.4395408630371094
    3. 'r' → logprob: -1.8145408630371094
    4. 'rait' → logprob: -4.689540863037109
    5. 'return' → logprob: -5.439540863037109
    6. '```' → logprob: -5.814540863037109
    7. '=' → logprob: -5.939540863037109
    8. 'g' → logprob: -6.189540863037109
    9. 'ra' → logprob: -6.814540863037109
    10. 'v' → logprob: -6.814540863037109

Token 1066: ' RG' (ID: 74468)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2650003135204315
    2. '(g' → logprob: -2.015000343322754
    3. '0' → logprob: -3.390000343322754
    4. 'rg' → logprob: -4.140000343322754
    5. '(r' → logprob: -4.265000343322754
    6. 'gb' → logprob: -4.640000343322754
    7. 'Mod' → logprob: -4.765000343322754
    8. '(' → logprob: -5.265000343322754
    9. ' g' → logprob: -5.640000343322754
    10. '(Mod' → logprob: -6.265000343322754

Token 1067: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8047071099281311
    2. ' -' → logprob: -1.4297070503234863
    3. ',' → logprob: -2.4297070503234863
    4. ')
' → logprob: -2.5547070503234863
    5. ')' → logprob: -2.6797070503234863
    6. '       ' → logprob: -3.6797070503234863
    7. '):
' → logprob: -3.9297070503234863
    8. '           ' → logprob: -4.554707050323486
    9. '=' → logprob: -5.054707050323486
    10. '+' → logprob: -5.054707050323486

Token 1068: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3895834982395172
    2. ':' → logprob: -2.5145835876464844
    3. '           ' → logprob: -2.8895835876464844
    4. '+' → logprob: -3.1395835876464844
    5. '=' → logprob: -3.2645835876464844
    6. '(' → logprob: -3.2645835876464844
    7. '```' → logprob: -4.014583587646484
    8. '*' → logprob: -4.264583587646484
    9. ' (' → logprob: -4.889583587646484
    10. ',' → logprob: -5.014583587646484

Token 1069: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02618742361664772
    2. ' return' → logprob: -4.026187419891357
    3. '       ' → logprob: -4.901187419891357
    4. '           ' → logprob: -7.901187419891357
    5. 'res' → logprob: -9.276187896728516
    6. '   ' → logprob: -10.401187896728516
    7. '(' → logprob: -11.026187896728516
    8. 'g' → logprob: -11.901187896728516
    9. 'r' → logprob: -12.026187896728516
    10. ' (' → logprob: -12.401187896728516

Token 1070: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -9.531813702778891e-05
    2. ' (' → logprob: -9.87509536743164
    3. 'res' → logprob: -10.37509536743164
    4. '   ' → logprob: -11.50009536743164
    5. '(' → logprob: -14.12509536743164
    6. '(
' → logprob: -14.37509536743164
    7. '(re' → logprob: -15.25009536743164
    8. '((' → logprob: -15.25009536743164
    9. ' res' → logprob: -15.75009536743164
    10. '       ' → logprob: -16.12509536743164

Token 1071: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00010080150241265073
    2. '(res' → logprob: -9.250101089477539
    3. 'Mod' → logprob: -12.625101089477539
    4. ' res' → logprob: -14.250101089477539
    5. 'Res' → logprob: -14.875101089477539
    6. '   ' → logprob: -16.50010108947754
    7. 'mod' → logprob: -16.62510108947754
    8. '(Mod' → logprob: -17.12510108947754
    9. '$res' → logprob: -17.62510108947754
    10. '(
' → logprob: -17.87510108947754

Token 1072: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10057584941387177
    2. '*' → logprob: -2.3505759239196777
    3. ',' → logprob: -7.975575923919678
    4. ')' → logprob: -12.35057544708252
    5. ' ,' → logprob: -12.47557544708252
    6. '   ' → logprob: -12.72557544708252
    7. '```' → logprob: -12.97557544708252
    8. '*g' → logprob: -13.10057544708252
    9. ' ' → logprob: -13.22557544708252
    10. '*,' → logprob: -13.35057544708252

Token 1073: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0004581942630466074
    2. ' g' → logprob: -8.000457763671875
    3. 'Mod' → logprob: -9.875457763671875
    4. '(Mod' → logprob: -9.875457763671875
    5. '(g' → logprob: -11.375457763671875
    6. 'r' → logprob: -13.125457763671875
    7. '(' → logprob: -13.375457763671875
    8. ' Mod' → logprob: -13.625457763671875
    9. '(M' → logprob: -14.125457763671875
    10. ' ' → logprob: -14.375457763671875

Token 1074: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012627330143004656
    2. ' ,' → logprob: -7.376262664794922
    3. '-' → logprob: -7.876262664794922
    4. ' -' → logprob: -8.501262664794922
    5. ',
' → logprob: -10.501262664794922
    6. '   ' → logprob: -11.126262664794922
    7. '```' → logprob: -13.501262664794922
    8. '+' → logprob: -13.751262664794922
    9. '  ' → logprob: -13.751262664794922
    10. ' ' → logprob: -13.876262664794922

Token 1075: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.12695781886577606
    2. ' z' → logprob: -2.126957893371582
    3. '0' → logprob: -10.751957893371582
    4. '   ' → logprob: -12.626957893371582
    5. '(z' → logprob: -12.876957893371582
    6. ' ' → logprob: -14.126957893371582
    7. '    ' → logprob: -14.376957893371582
    8. '       ' → logprob: -14.751957893371582
    9. '	z' → logprob: -15.001957893371582
    10. '     ' → logprob: -15.876957893371582

Token 1076: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026757346466183662
    2. '-' → logprob: -4.15175724029541
    3. ' -' → logprob: -4.65175724029541
    4. ' ,' → logprob: -6.90175724029541
    5. '   ' → logprob: -9.77675724029541
    6. '       ' → logprob: -11.02675724029541
    7. ',
' → logprob: -12.02675724029541
    8. '           ' → logprob: -12.15175724029541
    9. '+' → logprob: -12.27675724029541
    10. '  ' → logprob: -12.40175724029541

Token 1077: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0011899876408278942
    2. ' r' → logprob: -6.751190185546875
    3. '(r' → logprob: -11.626190185546875
    4. '   ' → logprob: -12.251190185546875
    5. '0' → logprob: -12.876190185546875
    6. '     ' → logprob: -14.126190185546875
    7. '       ' → logprob: -14.126190185546875
    8. ' ' → logprob: -14.501190185546875
    9. '    ' → logprob: -14.751190185546875
    10. 'Mod' → logprob: -14.876190185546875

Token 1078: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005420872941613197
    2. ' -' → logprob: -5.880420684814453
    3. '-' → logprob: -6.505420684814453
    4. ' ,' → logprob: -7.005420684814453
    5. '   ' → logprob: -8.880420684814453
    6. '       ' → logprob: -10.880420684814453
    7. ',g' → logprob: -11.380420684814453
    8. '           ' → logprob: -11.880420684814453
    9. '+' → logprob: -12.130420684814453
    10. '    ' → logprob: -12.130420684814453

Token 1079: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3485866189002991
    2. ' g' → logprob: -1.2235865592956543
    3. '   ' → logprob: -9.598587036132812
    4. '    ' → logprob: -10.723587036132812
    5. '       ' → logprob: -11.098587036132812
    6. '     ' → logprob: -11.598587036132812
    7. ' ' → logprob: -11.598587036132812
    8. '0' → logprob: -12.473587036132812
    9. '  ' → logprob: -12.848587036132812
    10. '      ' → logprob: -12.848587036132812

Token 1080: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04971932992339134
    2. '-' → logprob: -3.0497193336486816
    3. ',' → logprob: -6.799719333648682
    4. ' ,' → logprob: -12.174718856811523
    5. '   ' → logprob: -12.299718856811523
    6. ' ' → logprob: -12.549718856811523
    7. '```' → logprob: -13.674718856811523
    8. ')' → logprob: -14.424718856811523
    9. '    ' → logprob: -14.549718856811523
    10. ' ' → logprob: -15.549718856811523

Token 1081: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.750024795532227
    4. '
' → logprob: -18.125024795532227
    5. '           ' → logprob: -18.500024795532227
    6. '       ' → logprob: -18.750024795532227
    7. '```' → logprob: -20.125024795532227
    8. '  ' → logprob: -20.500024795532227
    9. ' ' → logprob: -21.125024795532227
    10. '               ' → logprob: -21.875024795532227

Token 1082: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -20.0
    4. '   ' → logprob: -21.0
    5. '۱' → logprob: -22.75
    6. '
' → logprob: -22.75
    7. '  ' → logprob: -23.0
    8. ',' → logprob: -23.125
    9. '-' → logprob: -23.125
    10. '<|end|>' → logprob: -23.125

Token 1083: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019710339256562293
    2. ' ,' → logprob: -8.625197410583496
    3. '```' → logprob: -11.500197410583496
    4. '       ' → logprob: -13.000197410583496
    5. '   ' → logprob: -13.125197410583496
    6. ',
' → logprob: -14.250197410583496
    7. ',b' → logprob: -14.375197410583496
    8. ',g' → logprob: -15.250197410583496
    9. '           ' → logprob: -15.750197410583496
    10. ',r' → logprob: -15.750197410583496

Token 1084: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.048587825149297714
    2. ' b' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.798587799072266
    4. '   ' → logprob: -16.173587799072266
    5. '	b' → logprob: -16.173587799072266
    6. '       ' → logprob: -17.798587799072266
    7. '    ' → logprob: -17.798587799072266
    8. '
' → logprob: -17.923587799072266
    9. '     ' → logprob: -18.548587799072266
    10. '  ' → logprob: -18.673587799072266

Token 1085: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015407454338856041
    2. ' ,' → logprob: -8.875154495239258
    3. '   ' → logprob: -12.625154495239258
    4. '       ' → logprob: -12.750154495239258
    5. ',
' → logprob: -13.250154495239258
    6. '+' → logprob: -13.500154495239258
    7. ' +' → logprob: -13.750154495239258
    8. '```' → logprob: -13.875154495239258
    9. ')' → logprob: -14.250154495239258
    10. '           ' → logprob: -14.500154495239258

Token 1086: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.009673569351434708
    2. '       ' → logprob: -5.509673595428467
    3. ' rg' → logprob: -6.009673595428467
    4. 'b' → logprob: -6.884673595428467
    5. '   ' → logprob: -6.884673595428467
    6. '     ' → logprob: -7.384673595428467
    7. '      ' → logprob: -8.759673118591309
    8. '    ' → logprob: -9.009673118591309
    9. '           ' → logprob: -9.634673118591309
    10. '        ' → logprob: -10.759673118591309

Token 1087: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.465300977230072
    2. '+' → logprob: -1.2153010368347168
    3. ' +' → logprob: -2.590301036834717
    4. ' ,' → logprob: -8.090300559997559
    5. '   ' → logprob: -9.715300559997559
    6. '       ' → logprob: -10.590300559997559
    7. '```' → logprob: -11.465300559997559
    8. '           ' → logprob: -11.965300559997559
    9. '+,' → logprob: -12.090300559997559
    10. ' ' → logprob: -12.340300559997559

Token 1088: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.375012397766113
    3. 'Mod' → logprob: -14.250012397766113
    4. '   ' → logprob: -15.625012397766113
    5. '0' → logprob: -16.50001335144043
    6. '           ' → logprob: -18.37501335144043
    7. '       ' → logprob: -18.87501335144043
    8. '```' → logprob: -18.87501335144043
    9. '(' → logprob: -19.12501335144043
    10. '(Mod' → logprob: -19.25001335144043

Token 1089: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.75000286102295
    3. 'Mod' → logprob: -14.12500286102295
    4. '0' → logprob: -14.50000286102295
    5. '   ' → logprob: -16.625001907348633
    6. '```' → logprob: -17.875001907348633
    7. '+' → logprob: -18.750001907348633
    8. '(' → logprob: -19.250001907348633
    9. '(Mod' → logprob: -19.250001907348633
    10. '
' → logprob: -19.625001907348633

Token 1090: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.066919301403686e-05
    2. ')' → logprob: -9.500090599060059
    3. ' ,' → logprob: -11.375090599060059
    4. '```' → logprob: -13.500090599060059
    5. '   ' → logprob: -13.750090599060059
    6. '       ' → logprob: -14.500090599060059
    7. '<|end|>' → logprob: -15.000090599060059
    8. ',)' → logprob: -15.250090599060059
    9. ',
' → logprob: -15.750090599060059
    10. '           ' → logprob: -16.000091552734375

Token 1091: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.4744460880756378
    2. 'b' → logprob: -0.9744460582733154
    3. ' gb' → logprob: -8.349446296691895
    4. ' b' → logprob: -9.224446296691895
    5. '   ' → logprob: -10.974446296691895
    6. '       ' → logprob: -12.599446296691895
    7. 'br' → logprob: -12.724446296691895
    8. ' ' → logprob: -12.849446296691895
    9. '    ' → logprob: -13.474446296691895
    10. '
' → logprob: -13.724446296691895

Token 1092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003534582501742989
    2. ' ,' → logprob: -8.000353813171387
    3. '-' → logprob: -12.125353813171387
    4. ')' → logprob: -12.625353813171387
    5. '```' → logprob: -12.875353813171387
    6. ' -' → logprob: -13.000353813171387
    7. '   ' → logprob: -13.500353813171387
    8. ',b' → logprob: -14.250353813171387
    9. ',
' → logprob: -14.375353813171387
    10. '1' → logprob: -15.375353813171387

Token 1093: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.03065471351146698
    2. ' br' → logprob: -3.5306546688079834
    3. 'b' → logprob: -7.0306549072265625
    4. ' b' → logprob: -11.655654907226562
    5. '   ' → logprob: -11.655654907226562
    6. '    ' → logprob: -14.280654907226562
    7. '       ' → logprob: -14.280654907226562
    8. '	br' → logprob: -14.905654907226562
    9. '  ' → logprob: -15.405654907226562
    10. ' ' → logprob: -15.530654907226562

Token 1094: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000645360560156405
    2. '       ' → logprob: -7.375645160675049
    3. '   ' → logprob: -11.250645637512207
    4. ')
' → logprob: -13.000645637512207
    5. ',' → logprob: -14.000645637512207
    6. ' )' → logprob: -14.125645637512207
    7. ')return' → logprob: -14.375645637512207
    8. ')`' → logprob: -15.375645637512207
    9. '.' → logprob: -15.625645637512207
    10. '),' → logprob: -15.875645637512207

Token 1095: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7475166320800781
    2. '       ' → logprob: -0.9975166320800781
    3. '   ' → logprob: -2.247516632080078
    4. '<|end|>' → logprob: -3.497516632080078
    5. ')' → logprob: -4.497516632080078
    6. ' elif' → logprob: -5.372516632080078
    7. '```' → logprob: -5.622516632080078
    8. '...' → logprob: -7.247516632080078
    9. '	elif' → logprob: -7.622516632080078
    10. '<|end|>' → logprob: -8.247516632080078

Token 1096: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.06930409371852875
    2. '       ' → logprob: -2.8193039894104004
    3. '   ' → logprob: -5.6943039894104
    4. ' elif' → logprob: -6.1943039894104
    5. 'else' → logprob: -6.3193039894104
    6. '```' → logprob: -9.444304466247559
    7. ' else' → logprob: -11.194304466247559
    8. '	elif' → logprob: -12.694304466247559
    9. 'elseif' → logprob: -13.944304466247559
    10. '
' → logprob: -13.944304466247559

Token 1097: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0016439995961263776
    2. 'r' → logprob: -6.501644134521484
    3. 'br' → logprob: -9.501644134521484
    4. 'rg' → logprob: -10.126644134521484
    5. ' b' → logprob: -11.376644134521484
    6. '   ' → logprob: -11.626644134521484
    7. ' ' → logprob: -12.501644134521484
    8. 'z' → logprob: -14.626644134521484
    9. '	b' → logprob: -14.876644134521484
    10. '
' → logprob: -14.876644134521484

Token 1098: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06653690338134766
    2. ':
' → logprob: -2.8165369033813477
    3. '==' → logprob: -6.566536903381348
    4. '           ' → logprob: -7.441536903381348
    5. '<|end|>' → logprob: -7.441536903381348
    6. '       ' → logprob: -7.816536903381348
    7. '<|end|>' → logprob: -8.191536903381348
    8. '   ' → logprob: -8.191536903381348
    9. ' ==' → logprob: -8.441536903381348
    10. ',' → logprob: -8.816536903381348

Token 1099: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22772923111915588
    2. ':' → logprob: -1.9777292013168335
    3. ':
' → logprob: -2.852729320526123
    4. '           ' → logprob: -5.602729320526123
    5. '   ' → logprob: -6.852729320526123
    6. '<|end|>' → logprob: -7.227729320526123
    7. '```' → logprob: -7.727729320526123
    8. ':return' → logprob: -7.852729320526123
    9. '(' → logprob: -8.602728843688965
    10. ',' → logprob: -8.852728843688965

Token 1100: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13427478075027466
    2. 'return' → logprob: -2.88427472114563
    3. '(
' → logprob: -3.75927472114563
    4. '(return' → logprob: -4.009274959564209
    5. ' (' → logprob: -4.134274959564209
    6. ' return' → logprob: -5.384274959564209
    7. ':return' → logprob: -5.759274959564209
    8. ':' → logprob: -6.759274959564209
    9. '   ' → logprob: -6.884274959564209
    10. '```' → logprob: -7.134274959564209

Token 1101: ' Ensuite' (ID: 113884)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0035168027970939875
    2. '       ' → logprob: -6.503516674041748
    3. '(res' → logprob: -7.003516674041748
    4. 'res' → logprob: -7.628516674041748
    5. '(return' → logprob: -8.128517150878906
    6. ' return' → logprob: -8.753517150878906
    7. '           ' → logprob: -9.378517150878906
    8. '```' → logprob: -9.878517150878906
    9. ' (' → logprob: -11.753517150878906
    10. '(
' → logprob: -11.878517150878906

Token 1102: ' :' (ID: 712)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.8230447173118591
    2. ' (' → logprob: -0.9480447173118591
    3. '(return' → logprob: -2.573044776916504
    4. '(' → logprob: -2.698044776916504
    5. '(z' → logprob: -3.698044776916504
    6. '(r' → logprob: -6.073044776916504
    7. 'return' → logprob: -7.073044776916504
    8. '```' → logprob: -8.198044776916504
    9. ':' → logprob: -8.323044776916504
    10. '(n' → logprob: -8.323044776916504

Token 1103: ' à' (ID: 1221)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.08517331629991531
    2. '(return' → logprob: -3.0851733684539795
    3. 'return' → logprob: -3.3351733684539795
    4. 'res' → logprob: -9.460173606872559
    5. ' (' → logprob: -9.710173606872559
    6. '(' → logprob: -9.835173606872559
    7. ' return' → logprob: -10.335173606872559
    8. '(
' → logprob: -10.460173606872559
    9. '   ' → logprob: -10.710173606872559
    10. '       ' → logprob: -10.710173606872559

Token 1104: ' une' (ID: 2463)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0012051118537783623
    2. 'b' → logprob: -7.376204967498779
    3. ' (' → logprob: -7.751204967498779
    4. '(return' → logprob: -9.251205444335938
    5. 'res' → logprob: -10.501205444335938
    6. 'return' → logprob: -11.251205444335938
    7. '(' → logprob: -12.376205444335938
    8. '(
' → logprob: -13.626205444335938
    9. '   ' → logprob: -14.001205444335938
    10. ' res' → logprob: -14.126205444335938

Token 1105: ' personne' (ID: 26304)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00976801197975874
    2. '(Mod' → logprob: -5.634768009185791
    3. 'Mod' → logprob: -5.884768009185791
    4. 'person' → logprob: -6.509768009185791
    5. '(b' → logprob: -6.509768009185791
    6. 'return' → logprob: -8.50976848602295
    7. '(' → logprob: -9.25976848602295
    8. ' b' → logprob: -10.13476848602295
    9. 'Person' → logprob: -11.13476848602295
    10. ' Mod' → logprob: -11.88476848602295

Token 1106: ' avec' (ID: 3937)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.7286341190338135
    2. ' with' → logprob: -0.8536341190338135
    3. '(b' → logprob: -2.7286341190338135
    4. ' (' → logprob: -4.353633880615234
    5. ' avec' → logprob: -5.478633880615234
    6. 'b' → logprob: -5.603633880615234
    7. '(' → logprob: -5.978633880615234
    8. '```' → logprob: -6.853633880615234
    9. '       ' → logprob: -7.228633880615234
    10. '           ' → logprob: -7.728633880615234

Token 1107: ' une' (ID: 2463)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06199346110224724
    2. ' b' → logprob: -2.811993360519409
    3. '(b' → logprob: -11.561993598937988
    4. '1' → logprob: -11.811993598937988
    5. 'br' → logprob: -12.186993598937988
    6. ' (' → logprob: -13.061993598937988
    7. ' ' → logprob: -14.436993598937988
    8. '```' → logprob: -14.811993598937988
    9. '(' → logprob: -15.061993598937988
    10. '   ' → logprob: -15.811993598937988

Token 1108: ' ble' (ID: 10483)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004809585225302726
    2. ' b' → logprob: -7.750481128692627
    3. 'ble' → logprob: -10.625480651855469
    4. '1' → logprob: -12.000480651855469
    5. 'Mod' → logprob: -12.250480651855469
    6. '```' → logprob: -12.500480651855469
    7. 'br' → logprob: -12.625480651855469
    8. 'blue' → logprob: -13.125480651855469
    9. '
' → logprob: -13.625480651855469
    10. ' ' → logprob: -14.000480651855469

Token 1109: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.5111605525016785
    2. 'ule' → logprob: -1.5111606121063232
    3. '       ' → logprob: -2.7611606121063232
    4. 'u' → logprob: -3.0111606121063232
    5. '   ' → logprob: -3.2611606121063232
    6. ')' → logprob: -5.136160373687744
    7. '```' → logprob: -5.261160373687744
    8. '     ' → logprob: -6.136160373687744
    9. 'e' → logprob: -6.386160373687744
    10. '    ' → logprob: -6.386160373687744

Token 1110: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6027306318283081
    2. '           ' → logprob: -1.602730631828308
    3. ' (' → logprob: -1.602730631828308
    4. '(b' → logprob: -3.1027307510375977
    5. '```' → logprob: -6.352730751037598
    6. '       ' → logprob: -6.852730751037598
    7. '(' → logprob: -7.602730751037598
    8. ' ,' → logprob: -8.727730751037598
    9. '               ' → logprob: -8.727730751037598
    10. '(return' → logprob: -8.852730751037598

Token 1111: 'dev' (ID: 6751)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008924534544348717
    2. ' b' → logprob: -5.00892448425293
    3. 'return' → logprob: -6.38392448425293
    4. 'res' → logprob: -8.38392448425293
    5. ' res' → logprob: -8.88392448425293
    6. ' return' → logprob: -10.50892448425293
    7. ' (' → logprob: -10.50892448425293
    8. '(b' → logprob: -10.50892448425293
    9. '(res' → logprob: -10.63392448425293
    10. '   ' → logprob: -11.00892448425293

Token 1112: 'ient' (ID: 773)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.46673843264579773
    2. ' b' → logprob: -1.9667384624481201
    3. 't' → logprob: -2.46673846244812
    4. '+' → logprob: -3.21673846244812
    5. ')' → logprob: -4.091738224029541
    6. 'ent' → logprob: -4.466738224029541
    7. 'el' → logprob: -4.841738224029541
    8. 'd' → logprob: -4.966738224029541
    9. 'v' → logprob: -4.966738224029541
    10. 'nt' → logprob: -4.966738224029541

Token 1113: ' BR' (ID: 21735)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03499684855341911
    2. 'br' → logprob: -3.409996747970581
    3. 'rb' → logprob: -6.78499698638916
    4. '(b' → logprob: -9.65999698638916
    5. ' b' → logprob: -9.78499698638916
    6. '   ' → logprob: -10.28499698638916
    7. '
' → logprob: -11.15999698638916
    8. 'Mod' → logprob: -11.90999698638916
    9. '    ' → logprob: -12.15999698638916
    10. ' ' → logprob: -12.15999698638916

Token 1114: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7768040299415588
    2. ' +' → logprob: -1.526803970336914
    3. ' -' → logprob: -1.526803970336914
    4. '+' → logprob: -2.651803970336914
    5. '-' → logprob: -3.526803970336914
    6. ')' → logprob: -6.651803970336914
    7. 'b' → logprob: -6.776803970336914
    8. '):
' → logprob: -7.026803970336914
    9. ' ,' → logprob: -7.276803970336914
    10. '```' → logprob: -7.401803970336914

Token 1115: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03879827260971069
    2. ':' → logprob: -4.2887983322143555
    3. '           ' → logprob: -5.0387983322143555
    4. '```' → logprob: -5.1637983322143555
    5. ':
' → logprob: -5.7887983322143555
    6. 'return' → logprob: -5.7887983322143555
    7. ',' → logprob: -6.5387983322143555
    8. ' return' → logprob: -6.7887983322143555
    9. '   ' → logprob: -6.9137983322143555
    10. ':return' → logprob: -7.9137983322143555

Token 1116: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0030479393899440765
    2. ' return' → logprob: -5.878047943115234
    3. '(return' → logprob: -8.378047943115234
    4. '(res' → logprob: -12.003047943115234
    5. ' (' → logprob: -13.378047943115234
    6. '   ' → logprob: -13.503047943115234
    7. 'res' → logprob: -13.753047943115234
    8. '(' → logprob: -13.878047943115234
    9. 'eturn' → logprob: -14.628047943115234
    10. '       ' → logprob: -15.128047943115234

Token 1117: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -8.590104698669165e-05
    2. ' (' → logprob: -9.375085830688477
    3. 'res' → logprob: -14.375085830688477
    4. '(return' → logprob: -16.250085830688477
    5. '   ' → logprob: -16.500085830688477
    6. '(' → logprob: -16.500085830688477
    7. '(r' → logprob: -17.250085830688477
    8. '(
' → logprob: -17.875085830688477
    9. '(result' → logprob: -18.000085830688477
    10. '(re' → logprob: -18.125085830688477

Token 1118: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00010437761375214905
    2. '(res' → logprob: -9.250103950500488
    3. 'Mod' → logprob: -12.375103950500488
    4. ' res' → logprob: -13.125103950500488
    5. '   ' → logprob: -14.125103950500488
    6. 'Res' → logprob: -15.125103950500488
    7. 'mod' → logprob: -16.125104904174805
    8. '$res' → logprob: -16.125104904174805
    9. 'rest' → logprob: -16.375104904174805
    10. '	res' → logprob: -16.625104904174805

Token 1119: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04324215650558472
    2. '*' → logprob: -3.1682422161102295
    3. ',' → logprob: -8.543242454528809
    4. ')' → logprob: -11.293242454528809
    5. '*b' → logprob: -11.293242454528809
    6. ' ' → logprob: -11.543242454528809
    7. ' ,' → logprob: -12.043242454528809
    8. '   ' → logprob: -13.418242454528809
    9. ' ' → logprob: -14.043242454528809
    10. '*(' → logprob: -14.168242454528809

Token 1120: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00027206414961256087
    2. ' b' → logprob: -8.250271797180176
    3. 'br' → logprob: -11.875271797180176
    4. '   ' → logprob: -13.125271797180176
    5. '
' → logprob: -14.500271797180176
    6. '    ' → logprob: -15.000271797180176
    7. ' ' → logprob: -15.500271797180176
    8. '       ' → logprob: -15.625271797180176
    9. '  ' → logprob: -16.125272750854492
    10. '     ' → logprob: -16.375272750854492

Token 1121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002066637622192502
    2. '-' → logprob: -6.377066612243652
    3. ' -' → logprob: -8.502066612243652
    4. ' ,' → logprob: -9.002066612243652
    5. '   ' → logprob: -11.002066612243652
    6. '```' → logprob: -12.252066612243652
    7. '       ' → logprob: -12.752066612243652
    8. '           ' → logprob: -12.877066612243652
    9. 'b' → logprob: -13.127066612243652
    10. ',b' → logprob: -13.377066612243652

Token 1122: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.10020720958709717
    2. ' z' → logprob: -2.3502073287963867
    3. '(z' → logprob: -15.350207328796387
    4. '   ' → logprob: -15.975207328796387
    5. '	z' → logprob: -16.22520637512207
    6. '```' → logprob: -16.47520637512207
    7. ''z' → logprob: -17.47520637512207
    8. '0' → logprob: -17.60020637512207
    9. ' ' → logprob: -17.97520637512207
    10. ' ' → logprob: -18.22520637512207

Token 1123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010349372401833534
    2. '-' → logprob: -4.635349273681641
    3. ' -' → logprob: -7.510349273681641
    4. ' ,' → logprob: -10.51034927368164
    5. '   ' → logprob: -11.76034927368164
    6. '```' → logprob: -13.01034927368164
    7. '+' → logprob: -13.13534927368164
    8. ',
' → logprob: -13.51034927368164
    9. ')' → logprob: -14.13534927368164
    10. ' ' → logprob: -14.51034927368164

Token 1124: ' r' (ID: 428)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.16030150651931763
    2. ' z' → logprob: -1.9103014469146729
    3. 'r' → logprob: -10.035301208496094
    4. '0' → logprob: -10.535301208496094
    5. ' r' → logprob: -12.535301208496094
    6. ' ' → logprob: -13.785301208496094
    7. '   ' → logprob: -14.410301208496094
    8. '	z' → logprob: -14.660301208496094
    9. '```' → logprob: -15.160301208496094
    10. 'g' → logprob: -15.160301208496094

Token 1125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006274910410866141
    2. '-' → logprob: -8.125627517700195
    3. ' ,' → logprob: -8.375627517700195
    4. '   ' → logprob: -10.000627517700195
    5. ' -' → logprob: -10.250627517700195
    6. ',
' → logprob: -13.125627517700195
    7. '       ' → logprob: -13.250627517700195
    8. 'b' → logprob: -13.375627517700195
    9. '+' → logprob: -13.500627517700195
    10. '    ' → logprob: -13.625627517700195

Token 1126: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.16026881337165833
    2. ' g' → logprob: -1.910268783569336
    3. 'b' → logprob: -10.785268783569336
    4. '   ' → logprob: -11.285268783569336
    5. ' ' → logprob: -12.535268783569336
    6. ' b' → logprob: -12.660268783569336
    7. '    ' → logprob: -13.285268783569336
    8. '     ' → logprob: -14.035268783569336
    9. '       ' → logprob: -14.035268783569336
    10. '  ' → logprob: -14.535268783569336

Token 1127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002460675546899438
    2. ' ,' → logprob: -6.252460479736328
    3. '   ' → logprob: -8.252460479736328
    4. '-' → logprob: -9.002460479736328
    5. ',b' → logprob: -9.752460479736328
    6. ' -' → logprob: -10.252460479736328
    7. 'b' → logprob: -10.627460479736328
    8. ' b' → logprob: -11.752460479736328
    9. '       ' → logprob: -12.002460479736328
    10. '    ' → logprob: -12.252460479736328

Token 1128: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008615161292254925
    2. ' b' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.633615493774414
    4. '    ' → logprob: -15.508615493774414
    5. ' ' → logprob: -16.883615493774414
    6. '  ' → logprob: -16.883615493774414
    7. '	b' → logprob: -17.508615493774414
    8. '     ' → logprob: -18.383615493774414
    9. '       ' → logprob: -18.758615493774414
    10. '(b' → logprob: -19.383615493774414

Token 1129: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18575696647167206
    2. '-' → logprob: -1.9357569217681885
    3. ',' → logprob: -3.6857569217681885
    4. '   ' → logprob: -10.06075668334961
    5. ' ,' → logprob: -10.06075668334961
    6. '+' → logprob: -11.68575668334961
    7. '```' → logprob: -12.18575668334961
    8. '           ' → logprob: -12.18575668334961
    9. ' +' → logprob: -12.31075668334961
    10. ' ' → logprob: -12.31075668334961

Token 1130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -17.6250057220459
    4. '   ' → logprob: -18.1250057220459
    5. '
' → logprob: -20.2500057220459
    6. '۱' → logprob: -21.1250057220459
    7. '<|end|>' → logprob: -21.2500057220459
    8. '  ' → logprob: -22.0000057220459
    9. '    ' → logprob: -22.2500057220459
    10. '       ' → logprob: -22.2500057220459

Token 1131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '
' → logprob: -17.875
    4. '```' → logprob: -18.125
    5. '   ' → logprob: -19.75
    6. '۱' → logprob: -19.875
    7. '' → logprob: -20.75
    8. '<|end|>' → logprob: -21.0
    9. '１' → logprob: -21.0625
    10. '0' → logprob: -21.0625

Token 1132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011403311509639025
    2. ' ,' → logprob: -9.125114440917969
    3. '   ' → logprob: -13.125114440917969
    4. '```' → logprob: -13.750114440917969
    5. '       ' → logprob: -14.000114440917969
    6. ')' → logprob: -15.375114440917969
    7. '`,' → logprob: -15.375114440917969
    8. ',
' → logprob: -15.750114440917969
    9. ',r' → logprob: -15.750114440917969
    10. '           ' → logprob: -16.25011444091797

Token 1133: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.00033581978641450405
    2. ' rg' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.625335693359375
    4. '       ' → logprob: -16.625335693359375
    5. '     ' → logprob: -16.750335693359375
    6. '_rg' → logprob: -17.500335693359375
    7. 'rgb' → logprob: -17.625335693359375
    8. 'RG' → logprob: -17.750335693359375
    9. '
' → logprob: -18.375335693359375
    10. ' ' → logprob: -18.375335693359375

Token 1134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08565467596054077
    2. '+' → logprob: -2.9606547355651855
    3. ' +' → logprob: -3.5856547355651855
    4. ' ,' → logprob: -6.0856547355651855
    5. '+,' → logprob: -8.210654258728027
    6. '   ' → logprob: -11.460654258728027
    7. '<|end|>' → logprob: -11.585654258728027
    8. ')' → logprob: -12.710654258728027
    9. '       ' → logprob: -12.710654258728027
    10. '<|end|>' → logprob: -12.710654258728027

Token 1135: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.009790086187422276
    2. ' gb' → logprob: -4.634789943695068
    3. 'rg' → logprob: -10.509790420532227
    4. '   ' → logprob: -13.634790420532227
    5. '       ' → logprob: -14.009790420532227
    6. '     ' → logprob: -14.134790420532227
    7. ' rg' → logprob: -14.134790420532227
    8. ' ' → logprob: -14.384790420532227
    9. '	gb' → logprob: -14.509790420532227
    10. '    ' → logprob: -14.759790420532227

Token 1136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041113607585430145
    2. ' +' → logprob: -3.7911136150360107
    3. '+' → logprob: -4.166113376617432
    4. ' ,' → logprob: -6.166113376617432
    5. '   ' → logprob: -10.04111385345459
    6. '```' → logprob: -10.41611385345459
    7. ' ' → logprob: -12.29111385345459
    8. '       ' → logprob: -12.54111385345459
    9. '+,' → logprob: -12.79111385345459
    10. ',
' → logprob: -13.16611385345459

Token 1137: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.00020461321400944144
    2. ' br' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.000205039978027
    4. '  ' → logprob: -15.875205039978027
    5. '(br' → logprob: -16.25020408630371
    6. '	br' → logprob: -16.75020408630371
    7. '    ' → logprob: -17.37520408630371
    8. '       ' → logprob: -17.50020408630371
    9. ' ' → logprob: -18.00020408630371
    10. '
' → logprob: -18.12520408630371

Token 1138: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3557533621788025
    2. ')' → logprob: -1.7307534217834473
    3. ' +' → logprob: -2.1057534217834473
    4. '-' → logprob: -8.105752944946289
    5. ' -' → logprob: -9.230752944946289
    6. '   ' → logprob: -10.730752944946289
    7. '+)' → logprob: -11.480752944946289
    8. ' )' → logprob: -12.355752944946289
    9. ')
' → logprob: -13.105752944946289
    10. '<|end|>' → logprob: -13.230752944946289

Token 1139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.875009536743164
    4. '+' → logprob: -17.625009536743164
    5. '```' → logprob: -18.250009536743164
    6. ')' → logprob: -19.125009536743164
    7. '۱' → logprob: -19.625009536743164
    8. '  ' → logprob: -19.625009536743164
    9. '１' → logprob: -19.812509536743164
    10. '0' → logprob: -19.875009536743164

Token 1140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '+' → logprob: -17.125
    4. '   ' → logprob: -17.75
    5. '```' → logprob: -18.0
    6. '
' → logprob: -19.0
    7. '(' → logprob: -20.1875
    8. ')' → logprob: -20.5
    9. '１' → logprob: -20.6875
    10. '-' → logprob: -20.6875

Token 1141: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015347852604463696
    2. '       ' → logprob: -9.250153541564941
    3. '   ' → logprob: -9.875153541564941
    4. ')
' → logprob: -12.750153541564941
    5. ' )' → logprob: -13.875153541564941
    6. ')`' → logprob: -15.000153541564941
    7. '<|end|>' → logprob: -15.125153541564941
    8. '```' → logprob: -15.250153541564941
    9. ')return' → logprob: -15.375153541564941
    10. '),' → logprob: -15.875153541564941

Token 1142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46461039781570435
    2. '   ' → logprob: -1.2146103382110596
    3. '```' → logprob: -2.7146103382110596
    4. 'else' → logprob: -5.589610576629639
    5. ')' → logprob: -6.464610576629639
    6. '<|end|>' → logprob: -6.714610576629639
    7. 'elif' → logprob: -6.839610576629639
    8. ' else' → logprob: -7.964610576629639
    9. ',' → logprob: -8.71461009979248
    10. '...' → logprob: -9.46461009979248

Token 1143: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10640297085046768
    2. ' else' → logprob: -3.10640287399292
    3. '   ' → logprob: -3.73140287399292
    4. '       ' → logprob: -3.73140287399292
    5. 'elif' → logprob: -4.98140287399292
    6. '```' → logprob: -6.98140287399292
    7. ' elif' → logprob: -9.606403350830078
    8. '
' → logprob: -9.731403350830078
    9. '	else' → logprob: -10.106403350830078
    10. '    
' → logprob: -10.106403350830078

Token 1144: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.894870400428772
    2. '       ' → logprob: -1.644870400428772
    3. ':
' → logprob: -2.1448702812194824
    4. ':' → logprob: -2.3948702812194824
    5. '(' → logprob: -2.5198702812194824
    6. '(
' → logprob: -2.7698702812194824
    7. '   ' → logprob: -4.019870281219482
    8. ' (
' → logprob: -4.019870281219482
    9. '           ' → logprob: -6.144870281219482
    10. ' :
' → logprob: -6.644870281219482

Token 1145: '           ' (ID: 352)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.9000180959701538
    2. ' (' → logprob: -1.6500180959701538
    3. '(res' → logprob: -1.9000180959701538
    4. '(' → logprob: -1.9000180959701538
    5. '       ' → logprob: -2.7750182151794434
    6. '(return' → logprob: -4.150018215179443
    7. 'return' → logprob: -4.275018215179443
    8. ' return' → logprob: -5.150018215179443
    9. '   ' → logprob: -6.400018215179443
    10. 'res' → logprob: -6.900018215179443

Token 1146: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5523680448532104
    2. '(res' → logprob: -1.3023680448532104
    3. '(return' → logprob: -2.0523681640625
    4. ' return' → logprob: -4.0523681640625
    5. ' (' → logprob: -5.1773681640625
    6. '   ' → logprob: -7.4273681640625
    7. 'res' → logprob: -8.5523681640625
    8. '(' → logprob: -8.9273681640625
    9. '       ' → logprob: -9.5523681640625
    10. '(z' → logprob: -9.8023681640625

Token 1147: ' Sinon' (ID: 154924)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.6631442308425903
    2. 'z' → logprob: -1.7881442308425903
    3. '(res' → logprob: -1.9131442308425903
    4. 'res' → logprob: -2.288144111633301
    5. 'return' → logprob: -2.788144111633301
    6. '(' → logprob: -6.038144111633301
    7. '(
' → logprob: -6.413144111633301
    8. ' (' → logprob: -6.788144111633301
    9. '(return' → logprob: -6.913144111633301
    10. ' return' → logprob: -8.2881441116333

Token 1148: ' :' (ID: 712)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.12039801478385925
    2. ' (' → logprob: -2.7453980445861816
    3. '(res' → logprob: -3.3703980445861816
    4. '(return' → logprob: -5.370398044586182
    5. 'return' → logprob: -5.620398044586182
    6. '(
' → logprob: -5.870398044586182
    7. '(' → logprob: -5.995398044586182
    8. ' return' → logprob: -6.870398044586182
    9. '   ' → logprob: -9.995397567749023
    10. ' (
' → logprob: -10.245397567749023

Token 1149: ' à' (ID: 1221)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.033772945404052734
    2. ' (' → logprob: -3.5337729454040527
    3. '(return' → logprob: -5.658772945404053
    4. 'return' → logprob: -7.783772945404053
    5. ' return' → logprob: -9.908773422241211
    6. '(' → logprob: -11.033773422241211
    7. 'res' → logprob: -11.033773422241211
    8. '   ' → logprob: -11.408773422241211
    9. '(z' → logprob: -11.908773422241211
    10. '(result' → logprob: -12.283773422241211

Token 1150: ' une' (ID: 2463)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.05421018227934837
    2. 'z' → logprob: -3.4292101860046387
    3. 'Mod' → logprob: -4.179210186004639
    4. '(Mod' → logprob: -5.429210186004639
    5. ' (' → logprob: -7.929210186004639
    6. ' z' → logprob: -9.17920970916748
    7. ' Mod' → logprob: -9.55420970916748
    8. '(res' → logprob: -10.05420970916748
    9. 'res' → logprob: -10.05420970916748
    10. '(' → logprob: -11.05420970916748

Token 1151: ' personne' (ID: 26304)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.043103668838739395
    2. 'Mod' → logprob: -3.9181036949157715
    3. '(Mod' → logprob: -4.2931036949157715
    4. ' (' → logprob: -5.5431036949157715
    5. 'z' → logprob: -6.2931036949157715
    6. 'person' → logprob: -6.7931036949157715
    7. ' Mod' → logprob: -8.043103218078613
    8. '(' → logprob: -8.293103218078613
    9. '(s' → logprob: -8.293103218078613
    10. '(person' → logprob: -8.668103218078613

Token 1152: ' sans' (ID: 9828)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.010406357236206532
    2. '(' → logprob: -5.010406494140625
    3. ' (' → logprob: -5.635406494140625
    4. ' z' → logprob: -10.010406494140625
    5. '(
' → logprob: -10.260406494140625
    6. 'z' → logprob: -10.635406494140625
    7. '(n' → logprob: -13.010406494140625
    8. '(Z' → logprob: -13.260406494140625
    9. 'with' → logprob: -14.010406494140625
    10. 'without' → logprob: -14.260406494140625

Token 1153: ' balle' (ID: 147386)
  Prédit: ' balle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' balle' → logprob: -0.6478226780891418
    2. 'ball' → logprob: -0.8978226780891418
    3. ' ball' → logprob: -3.647822618484497
    4. '```' → logprob: -4.022822856903076
    5. 'b' → logprob: -4.397822856903076
    6. 'z' → logprob: -5.147822856903076
    7. ' z' → logprob: -5.272822856903076
    8. ' ' → logprob: -7.772822856903076
    9. '``' → logprob: -8.022822380065918
    10. '`' → logprob: -8.272822380065918

Token 1154: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7227265238761902
    2. '(z' → logprob: -1.597726583480835
    3. '(res' → logprob: -1.722726583480835
    4. '(
' → logprob: -2.972726583480835
    5. '(' → logprob: -3.097726583480835
    6. '(return' → logprob: -3.847726583480835
    7. ',' → logprob: -4.472726345062256
    8. ' (
' → logprob: -6.722726345062256
    9. '(None' → logprob: -7.097726345062256
    10. 'return' → logprob: -7.472726345062256

Token 1155: 'dev' (ID: 6751)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.013431142084300518
    2. ' res' → logprob: -4.638431072235107
    3. 'return' → logprob: -5.888431072235107
    4. 'z' → logprob: -7.263431072235107
    5. ' return' → logprob: -9.013431549072266
    6. ' z' → logprob: -10.138431549072266
    7. '(res' → logprob: -10.513431549072266
    8. ')' → logprob: -12.763431549072266
    9. '(z' → logprob: -14.263431549072266
    10. '```' → logprob: -14.263431549072266

Token 1156: 'ient' (ID: 773)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.052699070423841476
    2. 'e' → logprob: -4.302699089050293
    3. 'f' → logprob: -5.052699089050293
    4. ' el' → logprob: -5.427699089050293
    5. 'z' → logprob: -5.552699089050293
    6. ' z' → logprob: -5.802699089050293
    7. ' e' → logprob: -6.052699089050293
    8. 'l' → logprob: -6.177699089050293
    9. 'u' → logprob: -6.177699089050293
    10. 'al' → logprob: -6.177699089050293

Token 1157: ' R' (ID: 460)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.14691835641860962
    2. '(z' → logprob: -2.771918296813965
    3. ' z' → logprob: -3.021918296813965
    4. 'r' → logprob: -4.271918296813965
    5. 'res' → logprob: -5.146918296813965
    6. ' (' → logprob: -6.396918296813965
    7. '(r' → logprob: -6.521918296813965
    8. ' r' → logprob: -6.896918296813965
    9. 'Mod' → logprob: -7.271918296813965
    10. ' res' → logprob: -8.646918296813965

Token 1158: ')
' (ID: 446)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5385292172431946
    2. ' +' → logprob: -1.4135291576385498
    3. '+' → logprob: -2.78852915763855
    4. ',' → logprob: -2.91352915763855
    5. '-' → logprob: -3.28852915763855
    6. ' ,' → logprob: -4.288529396057129
    7. ')' → logprob: -5.288529396057129
    8. ' )' → logprob: -7.538529396057129
    9. '=' → logprob: -9.288529396057129
    10. ' ' → logprob: -9.538529396057129

Token 1159: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34324508905410767
    2. ' (' → logprob: -2.093245029449463
    3. '(return' → logprob: -2.718245029449463
    4. ' return' → logprob: -2.968245029449463
    5. 'return' → logprob: -3.718245029449463
    6. '(res' → logprob: -4.468245029449463
    7. '(
' → logprob: -5.343245029449463
    8. ' =' → logprob: -5.718245029449463
    9. '<|end|>' → logprob: -6.468245029449463
    10. '   ' → logprob: -6.843245029449463

Token 1160: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011139190755784512
    2. '(res' → logprob: -5.136139392852783
    3. ' return' → logprob: -5.761139392852783
    4. '(return' → logprob: -6.386139392852783
    5. 'res' → logprob: -8.636138916015625
    6. ' (' → logprob: -9.136138916015625
    7. '   ' → logprob: -10.136138916015625
    8. '       ' → logprob: -10.636138916015625
    9. '(' → logprob: -12.636138916015625
    10. '           ' → logprob: -12.886138916015625

Token 1161: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.4855663721391466e-05
    2. ' (' → logprob: -11.500015258789062
    3. 'res' → logprob: -12.375015258789062
    4. '(Mod' → logprob: -15.375015258789062
    5. '(result' → logprob: -15.750015258789062
    6. '(' → logprob: -16.750015258789062
    7. '   ' → logprob: -17.500015258789062
    8. '(re' → logprob: -17.625015258789062
    9. '(r' → logprob: -18.125015258789062
    10. ' res' → logprob: -18.625015258789062

Token 1162: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1756367712223437e-05
    2. '(res' → logprob: -11.750011444091797
    3. 'Mod' → logprob: -12.625011444091797
    4. ' res' → logprob: -14.625011444091797
    5. 'mod' → logprob: -17.500011444091797
    6. 'Res' → logprob: -17.750011444091797
    7. '(Mod' → logprob: -18.750011444091797
    8. '   ' → logprob: -19.125011444091797
    9. '$res' → logprob: -19.125011444091797
    10. '
' → logprob: -19.250011444091797

Token 1163: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.18054057657718658
    2. '*' → logprob: -1.8055405616760254
    3. ',' → logprob: -7.180540561676025
    4. ' ,' → logprob: -10.680541038513184
    5. '*,' → logprob: -12.180541038513184
    6. ' ' → logprob: -13.930541038513184
    7. ' *
' → logprob: -14.180541038513184
    8. ')' → logprob: -14.305541038513184
    9. ' ' → logprob: -14.430541038513184
    10. '*(' → logprob: -14.680541038513184

Token 1164: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -9.253090865968261e-06
    2. 'r' → logprob: -12.250009536743164
    3. 'Mod' → logprob: -12.875009536743164
    4. ' z' → logprob: -13.750009536743164
    5. '
' → logprob: -15.625009536743164
    6. '(z' → logprob: -15.750009536743164
    7. '(Mod' → logprob: -15.875009536743164
    8. 'MOD' → logprob: -16.750009536743164
    9. '1' → logprob: -16.750009536743164
    10. 'mod' → logprob: -18.500009536743164

Token 1165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018946025520563126
    2. '-' → logprob: -4.268946170806885
    3. ' ,' → logprob: -5.893946170806885
    4. ' -' → logprob: -6.268946170806885
    5. ',
' → logprob: -9.893945693969727
    6. '   ' → logprob: -10.143945693969727
    7. ',z' → logprob: -11.643945693969727
    8. ' z' → logprob: -13.143945693969727
    9. '-,' → logprob: -13.143945693969727
    10. '       ' → logprob: -13.143945693969727

Token 1166: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.054927535355091095
    2. ' z' → logprob: -2.9299275875091553
    3. '   ' → logprob: -10.554927825927734
    4. '    ' → logprob: -12.179927825927734
    5. 'max' → logprob: -12.554927825927734
    6. '       ' → logprob: -12.804927825927734
    7. '     ' → logprob: -12.929927825927734
    8. '           ' → logprob: -13.804927825927734
    9. ' max' → logprob: -13.929927825927734
    10. ' ' → logprob: -14.304927825927734

Token 1167: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10021325200796127
    2. '-' → logprob: -2.3502132892608643
    3. ',' → logprob: -12.600213050842285
    4. '   ' → logprob: -14.100213050842285
    5. ' ' → logprob: -14.225213050842285
    6. ' ' → logprob: -14.350213050842285
    7. ' -
' → logprob: -15.100213050842285
    8. ' -=' → logprob: -15.850213050842285
    9. '+' → logprob: -16.2252140045166
    10. ' –' → logprob: -16.2252140045166

Token 1168: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '           ' → logprob: -15.875204086303711
    4. '   ' → logprob: -16.25020408630371
    5. '       ' → logprob: -17.87520408630371
    6. '               ' → logprob: -19.00020408630371
    7. '	' → logprob: -19.12520408630371
    8. '                   ' → logprob: -19.37520408630371
    9. '```' → logprob: -19.50020408630371
    10. '
' → logprob: -19.75020408630371

Token 1169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -19.375017166137695
    4. '   ' → logprob: -20.625017166137695
    5. '<|end|>' → logprob: -21.625017166137695
    6. '۱' → logprob: -21.625017166137695
    7. '
' → logprob: -22.125017166137695
    8. '１' → logprob: -22.750017166137695
    9. '  ' → logprob: -23.125017166137695
    10. '' → logprob: -23.125017166137695

Token 1170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012094692647224292
    2. ' ,' → logprob: -9.625121116638184
    3. ',
' → logprob: -10.250121116638184
    4. '   ' → logprob: -12.250121116638184
    5. ')' → logprob: -12.500121116638184
    6. ',r' → logprob: -12.500121116638184
    7. '```' → logprob: -13.000121116638184
    8. '       ' → logprob: -13.750121116638184
    9. '<|end|>' → logprob: -13.875121116638184
    10. '           ' → logprob: -14.000121116638184

Token 1171: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00020354038861114532
    2. ' r' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.62520408630371
    4. '1' → logprob: -17.37520408630371
    5. '(r' → logprob: -18.62520408630371
    6. '       ' → logprob: -19.75020408630371
    7. '_r' → logprob: -20.12520408630371
    8. '	r' → logprob: -20.37520408630371
    9. '    ' → logprob: -20.50020408630371
    10. ' ' → logprob: -20.50020408630371

Token 1172: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38688555359840393
    2. ' +' → logprob: -1.1368855237960815
    3. ',' → logprob: -11.386885643005371
    4. '   ' → logprob: -13.636885643005371
    5. '+,' → logprob: -14.511885643005371
    6. '+r' → logprob: -15.136885643005371
    7. '           ' → logprob: -15.386885643005371
    8. '       ' → logprob: -15.636885643005371
    9. ' ' → logprob: -15.636885643005371
    10. '+
' → logprob: -16.261884689331055

Token 1173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -23.000009536743164
    4. ')' → logprob: -23.250009536743164
    5. '   ' → logprob: -23.250009536743164
    6. '۱' → logprob: -24.125009536743164
    7. '
' → logprob: -24.500009536743164
    8. '<|end|>' → logprob: -24.875009536743164
    9. '１' → logprob: -25.000009536743164
    10. '0' → logprob: -25.250009536743164

Token 1174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.500003814697266
    4. '<|end|>' → logprob: -19.250003814697266
    5. '```' → logprob: -20.750003814697266
    6. '  ' → logprob: -21.125003814697266
    7. '       ' → logprob: -22.375003814697266
    8. '           ' → logprob: -22.500003814697266
    9. '    ' → logprob: -22.625003814697266
    10. '۱' → logprob: -22.625003814697266

Token 1175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011865380220115185
    2. ' ,' → logprob: -7.126186370849609
    3. ')' → logprob: -8.00118637084961
    4. '<|end|>' → logprob: -10.50118637084961
    5. '```' → logprob: -11.87618637084961
    6. ',
' → logprob: -12.25118637084961
    7. '   ' → logprob: -13.37618637084961
    8. ',b' → logprob: -13.75118637084961
    9. '<|end|>' → logprob: -14.00118637084961
    10. '),' → logprob: -14.62618637084961

Token 1176: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.023247109726071358
    2. ' g' → logprob: -3.773247003555298
    3. '   ' → logprob: -13.523246765136719
    4. ' ' → logprob: -16.52324676513672
    5. '    ' → logprob: -16.89824676513672
    6. '       ' → logprob: -17.39824676513672
    7. '  ' → logprob: -18.02324676513672
    8. '	g' → logprob: -18.27324676513672
    9. '```' → logprob: -18.39824676513672
    10. ' ' → logprob: -18.77324676513672

Token 1177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012085650814697146
    2. ' ,' → logprob: -6.751208782196045
    3. '<|end|>' → logprob: -10.376208305358887
    4. ',
' → logprob: -13.126208305358887
    5. '<|end|>' → logprob: -13.376208305358887
    6. '```' → logprob: -13.501208305358887
    7. ')' → logprob: -14.001208305358887
    8. '   ' → logprob: -14.751208305358887
    9. ' ' → logprob: -16.126209259033203
    10. '+' → logprob: -16.626209259033203

Token 1178: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25192907452583313
    2. ' b' → logprob: -1.5019290447235107
    3. '   ' → logprob: -20.751928329467773
    4. '	b' → logprob: -21.501928329467773
    5. ' ' → logprob: -22.126928329467773
    6. '    ' → logprob: -22.626928329467773
    7. ' б' → logprob: -24.001928329467773
    8. '       ' → logprob: -24.251928329467773
    9. '  ' → logprob: -24.251928329467773
    10. ')b' → logprob: -24.501928329467773

Token 1179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003906588070094585
    2. ' ,' → logprob: -5.878906726837158
    3. ')' → logprob: -7.378906726837158
    4. '<|end|>' → logprob: -8.25390625
    5. '+' → logprob: -9.25390625
    6. ' +' → logprob: -10.12890625
    7. '```' → logprob: -10.87890625
    8. '   ' → logprob: -11.00390625
    9. '-' → logprob: -11.25390625
    10. '<|end|>' → logprob: -11.37890625

Token 1180: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.0011717714369297028
    2. ' rg' → logprob: -6.751171588897705
    3. '       ' → logprob: -14.126172065734863
    4. '   ' → logprob: -14.876172065734863
    5. '     ' → logprob: -15.376172065734863
    6. '_rg' → logprob: -16.626171112060547
    7. '    ' → logprob: -16.751171112060547
    8. '      ' → logprob: -17.001171112060547
    9. '           ' → logprob: -17.376171112060547
    10. 'rgb' → logprob: -17.626171112060547

Token 1181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008873990154825151
    2. '+' → logprob: -7.500887393951416
    3. ' ,' → logprob: -8.125887870788574
    4. ',
' → logprob: -11.250887870788574
    5. ' +' → logprob: -11.875887870788574
    6. '+,' → logprob: -12.125887870788574
    7. '<|end|>' → logprob: -12.500887870788574
    8. '   ' → logprob: -12.875887870788574
    9. ',g' → logprob: -13.375887870788574
    10. ')' → logprob: -13.625887870788574

Token 1182: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.005233882926404476
    2. ' gb' → logprob: -5.2552337646484375
    3. '	gb' → logprob: -16.630233764648438
    4. '
' → logprob: -16.755233764648438
    5. '.gb' → logprob: -17.255233764648438
    6. 'gc' → logprob: -18.880233764648438
    7. 'GB' → logprob: -19.005233764648438
    8. 'g' → logprob: -19.630233764648438
    9. 'gs' → logprob: -20.630233764648438
    10. '```' → logprob: -20.755233764648438

Token 1183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003448792558629066
    2. ' ,' → logprob: -8.000345230102539
    3. '+' → logprob: -12.250345230102539
    4. '```' → logprob: -12.875345230102539
    5. '<|end|>' → logprob: -14.250345230102539
    6. ',
' → logprob: -14.750345230102539
    7. ' +' → logprob: -15.250345230102539
    8. '<|end|>' → logprob: -15.500345230102539
    9. ')' → logprob: -15.750345230102539
    10. '   ' → logprob: -15.875345230102539

Token 1184: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.06196925416588783
    2. ' br' → logprob: -2.81196928024292
    3. '	br' → logprob: -13.686968803405762
    4. '(br' → logprob: -15.311968803405762
    5. '   ' → logprob: -16.561969757080078
    6. ' ' → logprob: -17.186969757080078
    7. 'b' → logprob: -17.186969757080078
    8. 'brane' → logprob: -17.561969757080078
    9. '  ' → logprob: -17.686969757080078
    10. 'BR' → logprob: -17.936969757080078

Token 1185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.088138227118179e-05
    2. '   ' → logprob: -10.000070571899414
    3. ' )' → logprob: -11.500070571899414
    4. '+' → logprob: -11.625070571899414
    5. '       ' → logprob: -13.000070571899414
    6. '```' → logprob: -13.625070571899414
    7. ')`' → logprob: -14.375070571899414
    8. ')
' → logprob: -14.375070571899414
    9. '<|end|>' → logprob: -14.750070571899414
    10. ')return' → logprob: -15.500070571899414

Token 1186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6834752559661865
    2. 'elif' → logprob: -0.8084752559661865
    3. '```' → logprob: -3.8084752559661865
    4. ')' → logprob: -4.433475494384766
    5. '<|end|>' → logprob: -5.558475494384766
    6. '    
' → logprob: -5.933475494384766
    7. ':' → logprob: -6.308475494384766
    8. 'if' → logprob: -6.558475494384766
    9. '	elif' → logprob: -6.683475494384766
    10. ' elif' → logprob: -6.808475494384766

Token 1187: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36184999346733093
    2. 'elif' (adapté à ' elif') → logprob: -1.2368500232696533
    3. 'if' → logprob: -4.736849784851074
    4. '```' → logprob: -6.111849784851074
    5. ' elif' → logprob: -6.361849784851074
    6. '    
' → logprob: -8.486849784851074
    7. ' if' → logprob: -8.611849784851074
    8. '
' → logprob: -9.361849784851074
    9. '`' → logprob: -10.236849784851074
    10. ')' → logprob: -10.611849784851074

Token 1188: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12731841206550598
    2. 's' → logprob: -2.1273183822631836
    3. ''s' → logprob: -8.877318382263184
    4. ''' → logprob: -9.002318382263184
    5. ' '' → logprob: -9.377318382263184
    6. '   ' → logprob: -11.002318382263184
    7. 'S' → logprob: -11.627318382263184
    8. ' ' → logprob: -12.002318382263184
    9. ''S' → logprob: -12.627318382263184
    10. ' S' → logprob: -13.252318382263184

Token 1189: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06997278332710266
    2. '==' → logprob: -2.6949727535247803
    3. '=='' → logprob: -10.69497299194336
    4. ' =='' → logprob: -12.69497299194336
    5. '   ' → logprob: -12.94497299194336
    6. '==
' → logprob: -13.19497299194336
    7. ' ' → logprob: -13.56997299194336
    8. '===' → logprob: -14.31997299194336
    9. ')==' → logprob: -14.44497299194336
    10. ' =' → logprob: -14.44497299194336

Token 1190: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007731554098427296
    2. ' '' → logprob: -4.8827314376831055
    3. ' ' → logprob: -10.257731437683105
    4. 'G' → logprob: -10.507731437683105
    5. ''GC' → logprob: -11.507731437683105
    6. '   ' → logprob: -11.757731437683105
    7. ''S' → logprob: -11.757731437683105
    8. ' G' → logprob: -11.882731437683105
    9. ''A' → logprob: -12.007731437683105
    10. ''C' → logprob: -12.132731437683105

Token 1191: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00463078822940588
    2. ''' → logprob: -5.3796305656433105
    3. 'B' → logprob: -12.879631042480469
    4. '
' → logprob: -13.504631042480469
    5. 'R' → logprob: -13.879631042480469
    6. '`' → logprob: -14.004631042480469
    7. ' G' → logprob: -14.004631042480469
    8. '['' → logprob: -14.504631042480469
    9. '('' → logprob: -14.504631042480469
    10. '"G' → logprob: -15.004631042480469

Token 1192: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.3883903920650482
    2. '':' → logprob: -1.5133904218673706
    3. ''' → logprob: -3.013390302658081
    4. ':' → logprob: -3.013390302658081
    5. ':
' → logprob: -6.01339054107666
    6. '   ' → logprob: -8.13839054107666
    7. '==' → logprob: -8.63839054107666
    8. '```' → logprob: -9.26339054107666
    9. '':
' → logprob: -9.26339054107666
    10. '):
' → logprob: -9.51339054107666

Token 1193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20657403767108917
    2. '   ' → logprob: -1.7065740823745728
    3. ' if' → logprob: -5.956573963165283
    4. 'if' → logprob: -6.456573963165283
    5. ':' → logprob: -7.081573963165283
    6. '```' → logprob: -9.456574440002441
    7. ':
' → logprob: -10.331574440002441
    8. '    ' → logprob: -11.206574440002441
    9. '	if' → logprob: -11.831574440002441
    10. '     ' → logprob: -12.831574440002441

Token 1194: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04882490262389183
    2. ' if' → logprob: -3.0488247871398926
    3. '   ' → logprob: -8.54882526397705
    4. '       ' → logprob: -10.04882526397705
    5. '
' → logprob: -15.67382526397705
    6. '	if' → logprob: -16.048824310302734
    7. 'elif' → logprob: -16.173824310302734
    8. '    ' → logprob: -17.048824310302734
    9. '```' → logprob: -17.173824310302734
    10. ' ' → logprob: -18.923824310302734

Token 1195: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.13369937241077423
    2. 'rg' → logprob: -2.133699417114258
    3. 'rb' → logprob: -5.633699417114258
    4. 'b' → logprob: -6.508699417114258
    5. ' rg' → logprob: -7.008699417114258
    6. ' br' → logprob: -7.383699417114258
    7. 'r' → logprob: -9.758699417114258
    8. ' b' → logprob: -10.758699417114258
    9. ' rb' → logprob: -10.883699417114258
    10. 'rgb' → logprob: -11.008699417114258

Token 1196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16106660664081573
    2. ':
' → logprob: -1.9110666513442993
    3. '<|end|>' → logprob: -8.036067008972168
    4. '>' → logprob: -8.911067008972168
    5. '<|end|>' → logprob: -9.661067008972168
    6. '[' → logprob: -9.661067008972168
    7. '           ' → logprob: -9.786067008972168
    8. '       ' → logprob: -10.286067008972168
    9. ',' → logprob: -10.661067008972168
    10. '):
' → logprob: -10.911067008972168

Token 1197: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009092412889003754
    2. '           ' → logprob: -4.759092330932617
    3. ':' → logprob: -9.134092330932617
    4. ':
' → logprob: -9.634092330932617
    5. '```' → logprob: -9.634092330932617
    6. '<|end|>' → logprob: -9.759092330932617
    7. '        ' → logprob: -10.509092330932617
    8. '<|end|>' → logprob: -10.634092330932617
    9. '{
' → logprob: -10.884092330932617
    10. '[' → logprob: -11.009092330932617

Token 1198: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011884917505085468
    2. '           ' → logprob: -4.636884689331055
    3. ':
' → logprob: -7.136884689331055
    4. '#' (adapté à ' #') → logprob: -7.761884689331055
    5. '```' → logprob: -7.886884689331055
    6. 'return' → logprob: -8.761884689331055
    7. ':' → logprob: -8.886884689331055
    8. '{
' → logprob: -9.636884689331055
    9. ' return' → logprob: -9.761884689331055
    10. '   ' → logprob: -10.761884689331055

Token 1199: ' Prior' (ID: 39936)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05930278077721596
    2. '       ' → logprob: -3.809302806854248
    3. ' return' → logprob: -3.809302806854248
    4. '#' → logprob: -5.059302806854248
    5. '           ' → logprob: -5.434302806854248
    6. '(return' → logprob: -7.059302806854248
    7. '(res' → logprob: -7.184302806854248
    8. '```' → logprob: -7.809302806854248
    9. '(
' → logprob: -8.68430233001709
    10. '
' → logprob: -9.18430233001709

Token 1200: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.3178189992904663
    2. 'ity' → logprob: -1.3178189992904663
    3. '```' → logprob: -6.942819118499756
    4. 'ite' → logprob: -7.317819118499756
    5. 'itize' → logprob: -7.317819118499756
    6. 'ority' → logprob: -7.567819118499756
    7. 'it' → logprob: -8.067818641662598
    8. 'def' → logprob: -8.317818641662598
    9. '       ' → logprob: -8.567818641662598
    10. 'or' → logprob: -8.942818641662598

Token 1201: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46126559376716614
    2. '       ' → logprob: -1.7112655639648438
    3. ' :' → logprob: -2.4612655639648438
    4. ' (' → logprob: -3.2112655639648438
    5. ' =' → logprob: -3.5862655639648438
    6. '=' → logprob: -4.836265563964844
    7. '           ' → logprob: -4.836265563964844
    8. 'return' → logprob: -5.336265563964844
    9. ':
' → logprob: -5.461265563964844
    10. '```' → logprob: -5.836265563964844

Token 1202: ' donner' (ID: 32394)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.045342110097408295
    2. '       ' → logprob: -3.420342206954956
    3. ' return' → logprob: -4.795341968536377
    4. '(return' → logprob: -5.920341968536377
    5. '           ' → logprob: -8.170342445373535
    6. '#' → logprob: -8.295342445373535
    7. '(res' → logprob: -9.420342445373535
    8. '```' → logprob: -10.670342445373535
    9. '   ' → logprob: -10.795342445373535
    10. '{return' → logprob: -12.670342445373535

Token 1203: ' au' (ID: 2791)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0024107310455292463
    2. '(br' → logprob: -6.752410888671875
    3. ' (' → logprob: -7.127410888671875
    4. '(' → logprob: -7.877410888671875
    5. '(rest' → logprob: -10.502410888671875
    6. '(G' → logprob: -11.752410888671875
    7. '(return' → logprob: -12.127410888671875
    8. 'res' → logprob: -12.627410888671875
    9. 'to' → logprob: -13.002410888671875
    10. '(result' → logprob: -13.127410888671875

Token 1204: ' groupe' (ID: 29494)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.0007688904879614711
    2. 'res' → logprob: -7.875768661499023
    3. '(br' → logprob: -8.000768661499023
    4. ' br' → logprob: -11.125768661499023
    5. 'b' → logprob: -11.125768661499023
    6. '(res' → logprob: -11.500768661499023
    7. 'Br' → logprob: -12.125768661499023
    8. 'Mod' → logprob: -12.750768661499023
    9. 'return' → logprob: -13.750768661499023
    10. 'BR' → logprob: -14.500768661499023

Token 1205: ' BR' (ID: 21735)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.00038384052459150553
    2. '(br' → logprob: -8.500383377075195
    3. ' br' → logprob: -8.750383377075195
    4. '   ' → logprob: -11.750383377075195
    5. 'res' → logprob: -11.875383377075195
    6. 'gr' → logprob: -13.375383377075195
    7. 'b' → logprob: -13.375383377075195
    8. '	br' → logprob: -13.750383377075195
    9. '```' → logprob: -14.625383377075195
    10. ' ' → logprob: -14.875383377075195

Token 1206: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35369643568992615
    2. '       ' → logprob: -2.228696346282959
    3. ':' → logprob: -2.853696346282959
    4. ',' → logprob: -2.853696346282959
    5. ':
' → logprob: -3.103696346282959
    6. '```' → logprob: -4.978696346282959
    7. 'return' → logprob: -5.103696346282959
    8. '=' → logprob: -5.603696346282959
    9. '<|end|>' → logprob: -5.978696346282959
    10. ':return' → logprob: -6.353696346282959

Token 1207: 'dev' (ID: 6751)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0016541173681616783
    2. 'res' → logprob: -6.751654148101807
    3. '       ' → logprob: -8.376653671264648
    4. '           ' → logprob: -9.001653671264648
    5. ' return' → logprob: -9.251653671264648
    6. '(res' → logprob: -11.251653671264648
    7. '(return' → logprob: -12.001653671264648
    8. '```' → logprob: -12.376653671264648
    9. ')return' → logprob: -12.751653671264648
    10. '   ' → logprob: -13.126653671264648

Token 1208: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.001299522933550179
    2. 'rait' → logprob: -7.3762993812561035
    3. 'ra' → logprob: -8.501299858093262
    4. '```' → logprob: -9.376299858093262
    5. 'iennent' → logprob: -9.501299858093262
    6. '   ' → logprob: -9.626299858093262
    7. 'ent' → logprob: -9.626299858093262
    8. ')' → logprob: -10.501299858093262
    9. 'endra' → logprob: -10.751299858093262
    10. 'return' → logprob: -10.751299858093262

Token 1209: ' RGB' (ID: 46144)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.056534748524427414
    2. '(br' → logprob: -3.681534767150879
    3. ' br' → logprob: -4.306534767150879
    4. 'res' → logprob: -5.056534767150879
    5. '   ' → logprob: -5.931534767150879
    6. 'rgb' → logprob: -6.181534767150879
    7. ' (' → logprob: -6.431534767150879
    8. ' res' → logprob: -6.931534767150879
    9. 'r' → logprob: -7.181534767150879
    10. '(res' → logprob: -7.681534767150879

Token 1210: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2020682692527771
    2. ')' → logprob: -1.9520683288574219
    3. '):
' → logprob: -3.577068328857422
    4. '):' → logprob: -5.452068328857422
    5. ')
' → logprob: -5.702068328857422
    6. '       ' → logprob: -6.077068328857422
    7. '),' → logprob: -7.202068328857422
    8. '           ' → logprob: -7.202068328857422
    9. '   ' → logprob: -7.827068328857422
    10. '):

' → logprob: -8.577068328857422

Token 1211: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005479675717651844
    2. '           ' → logprob: -5.38047981262207
    3. '```' → logprob: -7.38047981262207
    4. ':
' → logprob: -10.00547981262207
    5. ' return' → logprob: -10.00547981262207
    6. ':' → logprob: -10.13047981262207
    7. 'return' → logprob: -10.38047981262207
    8. '               ' → logprob: -10.50547981262207
    9. '):
' → logprob: -11.00547981262207
    10. '``' → logprob: -11.88047981262207

Token 1212: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01728142611682415
    2. '       ' → logprob: -4.392281532287598
    3. ' return' → logprob: -5.517281532287598
    4. '           ' → logprob: -8.267281532287598
    5. '(return' → logprob: -8.517281532287598
    6. '   ' → logprob: -9.142281532287598
    7. ':return' → logprob: -9.767281532287598
    8. '```' → logprob: -9.892281532287598
    9. '(' → logprob: -10.142281532287598
    10. '(
' → logprob: -11.142281532287598

Token 1213: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -2.7252845029579476e-05
    2. 'res' → logprob: -10.750027656555176
    3. ' (' → logprob: -12.125027656555176
    4. '(' → logprob: -16.62502670288086
    5. ' res' → logprob: -16.75002670288086
    6. '   ' → logprob: -17.62502670288086
    7. '(result' → logprob: -18.87502670288086
    8. '(re' → logprob: -18.87502670288086
    9. '(
' → logprob: -19.25002670288086
    10. '(return' → logprob: -19.50002670288086

Token 1214: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -7.896309739408025e-07
    2. 'Mod' → logprob: -14.750000953674316
    3. '(res' → logprob: -15.125000953674316
    4. ' res' → logprob: -18.25
    5. 'Res' → logprob: -20.875
    6. '$res' → logprob: -21.125
    7. '   ' → logprob: -21.375
    8. 'mod' → logprob: -21.5
    9. 'rest' → logprob: -22.375
    10. 'r' → logprob: -22.375

Token 1215: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.016040703281760216
    2. '*' → logprob: -4.141040802001953
    3. ' ' → logprob: -12.891040802001953
    4. ',' → logprob: -12.891040802001953
    5. ' ' → logprob: -14.766040802001953
    6. ')' → logprob: -14.891040802001953
    7. ' **' → logprob: -16.266040802001953
    8. '*object' → logprob: -16.641040802001953
    9. '**' → logprob: -16.766040802001953
    10. '[' → logprob: -17.328540802001953

Token 1216: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.4378848391061183e-05
    2. ' br' → logprob: -11.250014305114746
    3. '(br' → logprob: -15.000014305114746
    4. '	br' → logprob: -15.375014305114746
    5. 'b' → logprob: -15.625014305114746
    6. '   ' → logprob: -16.125015258789062
    7. '```' → logprob: -16.375015258789062
    8. '
' → logprob: -16.625015258789062
    9. '`' → logprob: -17.250015258789062
    10. 'pr' → logprob: -17.500015258789062

Token 1217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.996708104154095e-05
    2. ' ,' → logprob: -9.375100135803223
    3. '   ' → logprob: -12.375100135803223
    4. ')' → logprob: -12.875100135803223
    5. '`,' → logprob: -13.625100135803223
    6. ',
' → logprob: -13.625100135803223
    7. 'br' → logprob: -13.750100135803223
    8. '),' → logprob: -14.375100135803223
    9. '       ' → logprob: -15.000100135803223
    10. ' -' → logprob: -15.125100135803223

Token 1218: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.061972957104444504
    2. ' z' → logprob: -2.8119728565216064
    3. '(z' → logprob: -13.061972618103027
    4. '0' → logprob: -13.061972618103027
    5. '   ' → logprob: -14.436972618103027
    6. '	z' → logprob: -15.436972618103027
    7. ' ' → logprob: -16.561973571777344
    8. '       ' → logprob: -17.061973571777344
    9. '    ' → logprob: -17.186973571777344
    10. '```' → logprob: -17.186973571777344

Token 1219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012809180771000683
    2. ' ,' → logprob: -9.500127792358398
    3. '-' → logprob: -10.375127792358398
    4. '   ' → logprob: -11.250127792358398
    5. ' -' → logprob: -12.250127792358398
    6. ')' → logprob: -13.375127792358398
    7. '<|end|>' → logprob: -14.375127792358398
    8. '<|end|>' → logprob: -15.250127792358398
    9. '       ' → logprob: -15.500127792358398
    10. '```' → logprob: -15.500127792358398

Token 1220: ' r' (ID: 428)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.001940653775818646
    2. 'r' → logprob: -6.251940727233887
    3. ' z' → logprob: -11.501940727233887
    4. '   ' → logprob: -13.876940727233887
    5. '0' → logprob: -15.126940727233887
    6. '       ' → logprob: -15.751940727233887
    7. 'g' → logprob: -15.876940727233887
    8. '     ' → logprob: -16.50193977355957
    9. 'b' → logprob: -16.62693977355957
    10. 'zr' → logprob: -16.62693977355957

Token 1221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005872295005246997
    2. ' ,' → logprob: -8.125587463378906
    3. '   ' → logprob: -8.250587463378906
    4. ',g' → logprob: -11.375587463378906
    5. '       ' → logprob: -12.250587463378906
    6. '    ' → logprob: -12.625587463378906
    7. ',r' → logprob: -12.875587463378906
    8. '  ' → logprob: -13.125587463378906
    9. ',G' → logprob: -13.750587463378906
    10. '	' → logprob: -14.000587463378906

Token 1222: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0006516746943816543
    2. 'r' → logprob: -7.375651836395264
    3. '   ' → logprob: -11.625651359558105
    4. 'b' → logprob: -11.750651359558105
    5. ' g' → logprob: -12.000651359558105
    6. 'br' → logprob: -13.750651359558105
    7. '     ' → logprob: -15.375651359558105
    8. 'z' → logprob: -15.500651359558105
    9. '       ' → logprob: -15.625651359558105
    10. '    ' → logprob: -15.875651359558105

Token 1223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028640811797231436
    2. ' ,' → logprob: -6.002863883972168
    3. '   ' → logprob: -8.877863883972168
    4. '       ' → logprob: -9.252863883972168
    5. '+' → logprob: -9.877863883972168
    6. '-' → logprob: -10.377863883972168
    7. '    ' → logprob: -10.752863883972168
    8. '           ' → logprob: -11.127863883972168
    9. ' +' → logprob: -12.127863883972168
    10. ' -' → logprob: -12.127863883972168

Token 1224: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007105246186256409
    2. ' b' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.750710487365723
    4. '       ' → logprob: -16.50071144104004
    5. '    ' → logprob: -17.62571144104004
    6. '           ' → logprob: -18.37571144104004
    7. '  ' → logprob: -18.75071144104004
    8. '     ' → logprob: -18.87571144104004
    9. '	b' → logprob: -18.87571144104004
    10. ' ' → logprob: -19.25071144104004

Token 1225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17466679215431213
    2. '-' → logprob: -2.4246668815612793
    3. ' -' → logprob: -2.6746668815612793
    4. ' ,' → logprob: -6.674666881561279
    5. '   ' → logprob: -6.799666881561279
    6. '       ' → logprob: -8.174666404724121
    7. '           ' → logprob: -10.049666404724121
    8. '    ' → logprob: -10.299666404724121
    9. '```' → logprob: -10.924666404724121
    10. '  ' → logprob: -11.049666404724121

Token 1226: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.0002326224057469517
    2. '       ' → logprob: -9.375232696533203
    3. '   ' → logprob: -9.875232696533203
    4. ' rg' → logprob: -10.250232696533203
    5. '           ' → logprob: -10.500232696533203
    6. '     ' → logprob: -11.500232696533203
    7. 'rgb' → logprob: -12.250232696533203
    8. '      ' → logprob: -12.750232696533203
    9. '        ' → logprob: -12.750232696533203
    10. '    ' → logprob: -13.250232696533203

Token 1227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009362359414808452
    2. ' ,' → logprob: -7.125936031341553
    3. '   ' → logprob: -9.875936508178711
    4. '-' → logprob: -10.375936508178711
    5. ' -' → logprob: -11.250936508178711
    6. '+' → logprob: -11.375936508178711
    7. '       ' → logprob: -11.375936508178711
    8. '           ' → logprob: -12.375936508178711
    9. '  ' → logprob: -13.375936508178711
    10. '    ' → logprob: -13.500936508178711

Token 1228: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.0010373335098847747
    2. ' gb' → logprob: -6.876037120819092
    3. '   ' → logprob: -13.75103759765625
    4. '       ' → logprob: -14.00103759765625
    5. '     ' → logprob: -14.12603759765625
    6. ' ' → logprob: -14.37603759765625
    7. '	gb' → logprob: -14.62603759765625
    8. '           ' → logprob: -15.75103759765625
    9. '         ' → logprob: -15.75103759765625
    10. 'g' → logprob: -16.25103759765625

Token 1229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0115154217928648
    2. '-' → logprob: -5.0115156173706055
    3. ' -' → logprob: -6.0115156173706055
    4. ' ,' → logprob: -6.1365156173706055
    5. '           ' → logprob: -9.386515617370605
    6. '   ' → logprob: -10.261515617370605
    7. '       ' → logprob: -11.011515617370605
    8. '          ' → logprob: -11.761515617370605
    9. '```' → logprob: -11.886515617370605
    10. '    ' → logprob: -12.386515617370605

Token 1230: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.00033665422233752906
    2. ' br' → logprob: -8.000336647033691
    3. '   ' → logprob: -13.875336647033691
    4. '  ' → logprob: -16.250337600708008
    5. ' ' → logprob: -16.375337600708008
    6. '0' → logprob: -16.750337600708008
    7. '    ' → logprob: -17.000337600708008
    8. '	br' → logprob: -17.125337600708008
    9. '(br' → logprob: -17.875337600708008
    10. '     ' → logprob: -18.125337600708008

Token 1231: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16023173928260803
    2. '-' → logprob: -1.9102317094802856
    3. ' ' → logprob: -12.285231590270996
    4. '           ' → logprob: -13.910231590270996
    5. '   ' → logprob: -14.035231590270996
    6. ')' → logprob: -14.785231590270996
    7. ' ' → logprob: -14.910231590270996
    8. '    ' → logprob: -15.785231590270996
    9. '1' → logprob: -16.285232543945312
    10. '       ' → logprob: -17.035232543945312

Token 1232: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -15.625001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '           ' → logprob: -17.250001907348633
    6. '       ' → logprob: -17.750001907348633
    7. '<|end|>' → logprob: -18.875001907348633
    8. ' ' → logprob: -19.750001907348633
    9. '۱' → logprob: -20.125001907348633
    10. '`' → logprob: -20.250001907348633

Token 1233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -18.75
    4. '
' → logprob: -19.25
    5. '   ' → logprob: -19.5
    6. '<|end|>' → logprob: -19.625
    7. '       ' → logprob: -21.125
    8. '{
' → logprob: -21.25
    9. '﻿' → logprob: -21.375
    10. '           ' → logprob: -21.375

Token 1234: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005009478889405727
    2. ')
' → logprob: -5.505009651184082
    3. '   ' → logprob: -7.505009651184082
    4. '       ' → logprob: -7.880009651184082
    5. '```' → logprob: -14.380009651184082
    6. ')
' → logprob: -14.880009651184082
    7. ')`' → logprob: -15.005009651184082
    8. ' )' → logprob: -15.505009651184082
    9. ')`
' → logprob: -15.880009651184082
    10. '           ' → logprob: -16.880008697509766

Token 1235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007344419602304697
    2. '   ' → logprob: -5.0073442459106445
    3. '```' → logprob: -8.007344245910645
    4. ')' → logprob: -9.007344245910645
    5. 'elif' → logprob: -9.257344245910645
    6. ',' → logprob: -10.507344245910645
    7. 'else' → logprob: -11.132344245910645
    8. ' elif' → logprob: -11.382344245910645
    9. ' else' → logprob: -12.382344245910645
    10. '<|end|>' → logprob: -12.632344245910645

Token 1236: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08149899542331696
    2. 'elif' (adapté à ' elif') → logprob: -2.5814990997314453
    3. '   ' → logprob: -6.706499099731445
    4. 'else' → logprob: -6.831499099731445
    5. ' elif' → logprob: -8.206499099731445
    6. '```' → logprob: -10.831499099731445
    7. ' else' → logprob: -12.581499099731445
    8. ' ' → logprob: -13.081499099731445
    9. '	elif' → logprob: -13.956499099731445
    10. '
' → logprob: -13.956499099731445

Token 1237: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.5027299822540954e-05
    2. 'b' → logprob: -10.000055313110352
    3. 'rg' → logprob: -11.625055313110352
    4. ' r' → logprob: -14.625055313110352
    5. '   ' → logprob: -15.875055313110352
    6. 'rgb' → logprob: -17.00005531311035
    7. '(r' → logprob: -18.12505531311035
    8. 'rb' → logprob: -18.37505531311035
    9. '	r' → logprob: -18.87505531311035
    10. 's' → logprob: -20.00005531311035

Token 1238: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6140002012252808
    2. ':' → logprob: -0.8640002012252808
    3. '           ' → logprob: -3.6140003204345703
    4. '       ' → logprob: -5.36400032043457
    5. '>' → logprob: -6.36400032043457
    6. '<|end|>' → logprob: -6.73900032043457
    7. '<|end|>' → logprob: -7.23900032043457
    8. '          ' → logprob: -7.61400032043457
    9. '==' → logprob: -7.98900032043457
    10. ' >' → logprob: -8.73900032043457

Token 1239: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6108291745185852
    2. '           ' → logprob: -1.7358291149139404
    3. ':
' → logprob: -1.8608291149139404
    4. ':' → logprob: -2.1108291149139404
    5. '```' → logprob: -6.8608293533325195
    6. '        ' → logprob: -7.3608293533325195
    7. '<|end|>' → logprob: -7.8608293533325195
    8. ' :' → logprob: -8.11082935333252
    9. '(' → logprob: -8.11082935333252
    10. '#' → logprob: -8.23582935333252

Token 1240: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.16100074350833893
    2. '       ' → logprob: -1.9110007286071777
    3. 'return' → logprob: -7.786000728607178
    4. '```' → logprob: -8.911001205444336
    5. '(' → logprob: -9.161001205444336
    6. '           ' → logprob: -9.411001205444336
    7. ' ' → logprob: -11.286001205444336
    8. '   ' → logprob: -11.911001205444336
    9. ' #' → logprob: -12.036001205444336
    10. '(return' → logprob: -12.661001205444336

Token 1241: ' Ensuite' (ID: 113884)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8841368556022644
    2. 'return' → logprob: -0.8841368556022644
    3. '#' → logprob: -1.7591369152069092
    4. '           ' → logprob: -6.75913667678833
    5. ' return' → logprob: -8.259137153625488
    6. '```' → logprob: -8.759137153625488
    7. '(return' → logprob: -10.509137153625488
    8. '   ' → logprob: -10.759137153625488
    9. '(' → logprob: -11.134137153625488
    10. ' #' → logprob: -11.509137153625488

Token 1242: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6876354813575745
    2. ':' → logprob: -1.3126354217529297
    3. '           ' → logprob: -1.9376354217529297
    4. ':
' → logprob: -2.5626354217529297
    5. ' (' → logprob: -6.06263542175293
    6. 'return' → logprob: -6.93763542175293
    7. ':return' → logprob: -7.06263542175293
    8. '(return' → logprob: -7.18763542175293
    9. '#' → logprob: -7.31263542175293
    10. '(' → logprob: -7.68763542175293

Token 1243: ' à' (ID: 1221)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2540668249130249
    2. '(res' → logprob: -2.2540669441223145
    3. '#' → logprob: -2.5040669441223145
    4. '(return' → logprob: -3.5040669441223145
    5. ' return' → logprob: -5.8790669441223145
    6. '       ' → logprob: -6.1290669441223145
    7. 'res' → logprob: -7.0040669441223145
    8. '           ' → logprob: -7.3790669441223145
    9. ' (' → logprob: -7.5040669441223145
    10. '   ' → logprob: -8.754066467285156

Token 1244: ' une' (ID: 2463)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.045557279139757156
    2. 'res' → logprob: -3.5455572605133057
    3. '(r' → logprob: -4.545557498931885
    4. ' r' → logprob: -5.795557498931885
    5. '(res' → logprob: -6.545557498931885
    6. ' res' → logprob: -7.795557498931885
    7. ' (' → logprob: -9.295557022094727
    8. '(' → logprob: -10.295557022094727
    9. '(
' → logprob: -10.420557022094727
    10. '   ' → logprob: -12.795557022094727

Token 1245: ' personne' (ID: 26304)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0707603245973587
    2. '(r' → logprob: -2.9457602500915527
    3. '(Mod' → logprob: -4.695760250091553
    4. 'res' → logprob: -5.820760250091553
    5. '(' → logprob: -6.570760250091553
    6. 'Mod' → logprob: -7.070760250091553
    7. '(res' → logprob: -7.445760250091553
    8. 'person' → logprob: -8.445760726928711
    9. 'return' → logprob: -8.570760726928711
    10. '(s' → logprob: -8.945760726928711

Token 1246: ' avec' (ID: 3937)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23163887858390808
    2. ' +' → logprob: -1.7316389083862305
    3. ',' → logprob: -3.7316389083862305
    4. 'with' → logprob: -5.4816389083862305
    5. '+=' → logprob: -7.7316389083862305
    6. ' with' → logprob: -7.8566389083862305
    7. '           ' → logprob: -8.23163890838623
    8. '+,' → logprob: -8.85663890838623
    9. ' +=' → logprob: -9.10663890838623
    10. '       ' → logprob: -9.23163890838623

Token 1247: ' une' (ID: 2463)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02058311738073826
    2. ' r' → logprob: -3.895583152770996
    3. '(r' → logprob: -10.395583152770996
    4. '1' → logprob: -11.645583152770996
    5. ' (' → logprob: -13.895583152770996
    6. ' ' → logprob: -14.770583152770996
    7. '(' → logprob: -15.395583152770996
    8. 'Mod' → logprob: -16.02058219909668
    9. '
' → logprob: -16.27058219909668
    10. '(Mod' → logprob: -16.77058219909668

Token 1248: ' rouge' (ID: 56930)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010537689086049795
    2. ' r' → logprob: -7.501053810119629
    3. 'rg' → logprob: -8.126053810119629
    4. '1' → logprob: -9.001053810119629
    5. 'red' → logprob: -10.251053810119629
    6. 'Mod' → logprob: -11.251053810119629
    7. '
' → logprob: -11.251053810119629
    8. ' red' → logprob: -12.501053810119629
    9. '(r' → logprob: -12.626053810119629
    10. ' ' → logprob: -12.876053810119629

Token 1249: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004289946053177118
    2. '           ' → logprob: -6.6292901039123535
    3. '(s' → logprob: -7.1292901039123535
    4. '(r' → logprob: -7.5042901039123535
    5. '```' → logprob: -7.6292901039123535
    6. ' (' → logprob: -7.6292901039123535
    7. ' ,' → logprob: -8.754289627075195
    8. '       ' → logprob: -9.254289627075195
    9. '(return' → logprob: -9.379289627075195
    10. 'return' → logprob: -9.629289627075195

Token 1250: 'dev' (ID: 6751)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.39181220531463623
    2. 'return' → logprob: -1.1418122053146362
    3. 'r' → logprob: -5.516812324523926
    4. '(res' → logprob: -7.641812324523926
    5. 'rg' → logprob: -9.016812324523926
    6. ' return' → logprob: -9.266812324523926
    7. '```' → logprob: -9.766812324523926
    8. '(r' → logprob: -10.016812324523926
    9. ' res' → logprob: -10.266812324523926
    10. '       ' → logprob: -11.016812324523926

Token 1251: 'ient' (ID: 773)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08807457238435745
    2. 'return' → logprob: -3.2130746841430664
    3. '```' → logprob: -4.213074684143066
    4. 'f' → logprob: -5.088074684143066
    5. '=' → logprob: -5.338074684143066
    6. ' r' → logprob: -5.838074684143066
    7. '+' → logprob: -5.963074684143066
    8. 'v' → logprob: -6.463074684143066
    9. '+=' → logprob: -6.463074684143066
    10. '=None' → logprob: -6.713074684143066

Token 1252: ' RG' (ID: 74468)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005866220686584711
    2. ' r' → logprob: -5.255866050720215
    3. 'rg' → logprob: -7.505866050720215
    4. '   ' → logprob: -10.755866050720215
    5. ' rg' → logprob: -10.755866050720215
    6. '(r' → logprob: -10.880866050720215
    7. '       ' → logprob: -12.505866050720215
    8. '           ' → logprob: -12.880866050720215
    9. '
' → logprob: -13.005866050720215
    10. ' ' → logprob: -13.380866050720215

Token 1253: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5088619589805603
    2. '):
' → logprob: -1.133862018585205
    3. '-' → logprob: -3.383862018585205
    4. '+' → logprob: -4.633862018585205
    5. '           ' → logprob: -4.633862018585205
    6. ' -' → logprob: -5.008862018585205
    7. '```' → logprob: -5.258862018585205
    8. ' +' → logprob: -5.383862018585205
    9. '):' → logprob: -6.008862018585205
    10. ')
' → logprob: -6.883862018585205

Token 1254: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3769516944885254
    2. '       ' → logprob: -1.2519516944885254
    3. ' return' → logprob: -3.6269516944885254
    4. '```' → logprob: -7.501951694488525
    5. ':return' → logprob: -7.876951694488525
    6. '           ' → logprob: -9.126951217651367
    7. ':' → logprob: -9.251951217651367
    8. '(return' → logprob: -9.501951217651367
    9. ',' → logprob: -9.626951217651367
    10. '=' → logprob: -9.626951217651367

Token 1255: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020060802344232798
    2. ' return' → logprob: -6.2520060539245605
    3. '       ' → logprob: -9.502006530761719
    4. '(return' → logprob: -13.752006530761719
    5. '```' → logprob: -13.877006530761719
    6. '(' → logprob: -15.627006530761719
    7. '
' → logprob: -16.00200653076172
    8. '           ' → logprob: -16.00200653076172
    9. ':return' → logprob: -16.12700653076172
    10. 'eturn' → logprob: -16.87700653076172

Token 1256: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -4.4849443838757e-06
    2. ' (' → logprob: -13.000004768371582
    3. 'res' → logprob: -13.125004768371582
    4. '   ' → logprob: -17.125003814697266
    5. '(return' → logprob: -17.500003814697266
    6. '(ret' → logprob: -18.250003814697266
    7. '(' → logprob: -18.625003814697266
    8. '=res' → logprob: -18.625003814697266
    9. '(r' → logprob: -18.750003814697266
    10. '(re' → logprob: -18.875003814697266

Token 1257: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00013727048644796014
    2. '(res' → logprob: -9.000137329101562
    3. 'Mod' → logprob: -11.375137329101562
    4. ' res' → logprob: -13.250137329101562
    5. 'rest' → logprob: -15.875137329101562
    6. '(Mod' → logprob: -15.875137329101562
    7. 'r' → logprob: -16.375137329101562
    8. '   ' → logprob: -16.750137329101562
    9. '$res' → logprob: -16.875137329101562
    10. '```' → logprob: -17.000137329101562

Token 1258: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5235036611557007
    2. '*' → logprob: -0.8985036611557007
    3. ',' → logprob: -8.148503303527832
    4. '   ' → logprob: -10.273503303527832
    5. '*r' → logprob: -10.773503303527832
    6. '```' → logprob: -11.398503303527832
    7. '       ' → logprob: -12.398503303527832
    8. '*(' → logprob: -12.523503303527832
    9. '*,' → logprob: -12.523503303527832
    10. '(res' → logprob: -13.273503303527832

Token 1259: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0005906827282160521
    2. ' r' → logprob: -7.625590801239014
    3. '(r' → logprob: -9.375590324401855
    4. 'res' → logprob: -11.500590324401855
    5. '   ' → logprob: -13.125590324401855
    6. '(' → logprob: -13.563090324401855
    7. ' (' → logprob: -14.188090324401855
    8. '```' → logprob: -14.625590324401855
    9. '
' → logprob: -14.938090324401855
    10. '       ' → logprob: -15.313090324401855

Token 1260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7120533811976202e-05
    2. ' ,' → logprob: -11.500017166137695
    3. ',s' → logprob: -13.500017166137695
    4. ')' → logprob: -13.875017166137695
    5. 's' → logprob: -14.375017166137695
    6. ' s' → logprob: -14.375017166137695
    7. '```' → logprob: -14.375017166137695
    8. '           ' → logprob: -14.500017166137695
    9. '`,' → logprob: -14.625017166137695
    10. '   ' → logprob: -14.625017166137695

Token 1261: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.575940728187561
    2. ' z' → logprob: -0.825940728187561
    3. '0' → logprob: -14.82594108581543
    4. '	z' → logprob: -14.95094108581543
    5. '```' → logprob: -15.32594108581543
    6. 's' → logprob: -15.45094108581543
    7. ''z' → logprob: -17.32594108581543
    8. '   ' → logprob: -17.82594108581543
    9. ' ' → logprob: -17.82594108581543
    10. ' ' → logprob: -17.95094108581543

Token 1262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.56102097814437e-05
    2. ' ,' → logprob: -10.375045776367188
    3. '   ' → logprob: -11.500045776367188
    4. '-' → logprob: -12.875045776367188
    5. ',
' → logprob: -15.000045776367188
    6. ',r' → logprob: -15.125045776367188
    7. '       ' → logprob: -15.250045776367188
    8. ' -' → logprob: -15.750045776367188
    9. '```' → logprob: -15.875045776367188
    10. '           ' → logprob: -16.250045776367188

Token 1263: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01834191009402275
    2. ' r' → logprob: -4.018342018127441
    3. 'z' → logprob: -8.643342018127441
    4. ' z' → logprob: -11.143342018127441
    5. '0' → logprob: -14.893342018127441
    6. '   ' → logprob: -14.893342018127441
    7. ' ' → logprob: -15.143342018127441
    8. 'N' → logprob: -16.643341064453125
    9. '```' → logprob: -16.893341064453125
    10. '     ' → logprob: -17.018341064453125

Token 1264: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6597661375999451
    2. ',' → logprob: -0.7847661375999451
    3. '-' → logprob: -3.65976619720459
    4. ' ,' → logprob: -7.03476619720459
    5. '   ' → logprob: -9.90976619720459
    6. '       ' → logprob: -10.53476619720459
    7. ' ' → logprob: -10.90976619720459
    8. '```' → logprob: -10.90976619720459
    9. '           ' → logprob: -11.03476619720459
    10. ' ' → logprob: -11.40976619720459

Token 1265: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015031944494694471
    2. ' ' → logprob: -6.501502990722656
    3. '```' → logprob: -14.251502990722656
    4. '   ' → logprob: -16.126502990722656
    5. '
' → logprob: -16.751502990722656
    6. '0' → logprob: -17.251502990722656
    7. ' ' → logprob: -18.501502990722656
    8. '１' → logprob: -18.876502990722656
    9. '-' → logprob: -19.001502990722656
    10. '  ' → logprob: -19.001502990722656

Token 1266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043162284418940544
    2. ' ' → logprob: -7.750431537628174
    3. '   ' → logprob: -15.500432014465332
    4. '```' → logprob: -15.500432014465332
    5. '
' → logprob: -15.750432014465332
    6. 'r' → logprob: -16.562931060791016
    7. '0' → logprob: -16.625431060791016
    8. '  ' → logprob: -17.250431060791016
    9. ' ' → logprob: -17.687931060791016
    10. ',' → logprob: -18.187931060791016

Token 1267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001149867384810932
    2. ' ,' → logprob: -9.625115394592285
    3. ',g' → logprob: -10.375115394592285
    4. 'g' → logprob: -11.250115394592285
    5. ' g' → logprob: -12.875115394592285
    6. ',G' → logprob: -14.500115394592285
    7. '   ' → logprob: -14.750115394592285
    8. ',
' → logprob: -14.875115394592285
    9. '```' → logprob: -15.375115394592285
    10. '           ' → logprob: -15.625115394592285

Token 1268: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.02975071594119072
    2. ' g' → logprob: -3.5297508239746094
    3. '   ' → logprob: -15.52975082397461
    4. '```' → logprob: -17.02975082397461
    5. '
' → logprob: -17.40475082397461
    6. ' ' → logprob: -17.52975082397461
    7. '    ' → logprob: -17.65475082397461
    8. 'r' → logprob: -17.90475082397461
    9. '	g' → logprob: -18.15475082397461
    10. ' ' → logprob: -18.65475082397461

Token 1269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008467909647151828
    2. ' ,' → logprob: -7.125846862792969
    3. '-' → logprob: -11.375846862792969
    4. '+' → logprob: -11.625846862792969
    5. '   ' → logprob: -11.750846862792969
    6. '       ' → logprob: -12.250846862792969
    7. ' +' → logprob: -12.625846862792969
    8. ' -' → logprob: -13.125846862792969
    9. ',g' → logprob: -14.500846862792969
    10. '           ' → logprob: -14.625846862792969

Token 1270: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07888989895582199
    2. ' b' → logprob: -2.578889846801758
    3. '   ' → logprob: -16.578889846801758
    4. '```' → logprob: -16.703889846801758
    5. '    ' → logprob: -17.203889846801758
    6. '       ' → logprob: -17.578889846801758
    7. ' ' → logprob: -18.453889846801758
    8. '	b' → logprob: -18.578889846801758
    9. '           ' → logprob: -19.078889846801758
    10. ' б' → logprob: -20.078889846801758

Token 1271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040954794734716415
    2. '+' → logprob: -3.915954828262329
    3. ' +' → logprob: -3.915954828262329
    4. ' ,' → logprob: -8.29095458984375
    5. '+,' → logprob: -11.29095458984375
    6. '```' → logprob: -12.04095458984375
    7. '       ' → logprob: -12.54095458984375
    8. ',
' → logprob: -13.04095458984375
    9. '           ' → logprob: -13.29095458984375
    10. '   ' → logprob: -13.54095458984375

Token 1272: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.0032004083041101694
    2. ' rg' → logprob: -5.753200531005859
    3. '   ' → logprob: -11.00320053100586
    4. '       ' → logprob: -12.87820053100586
    5. '     ' → logprob: -13.50320053100586
    6. '    ' → logprob: -14.00320053100586
    7. '  ' → logprob: -14.25320053100586
    8. '      ' → logprob: -15.37820053100586
    9. '           ' → logprob: -16.00320053100586
    10. 'rgb' → logprob: -16.37820053100586

Token 1273: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14764471352100372
    2. ',' → logprob: -2.1476447582244873
    3. ' +' → logprob: -3.8976447582244873
    4. ' ,' → logprob: -9.022644996643066
    5. '       ' → logprob: -10.272644996643066
    6. '+,' → logprob: -10.272644996643066
    7. '   ' → logprob: -12.022644996643066
    8. '           ' → logprob: -12.397644996643066
    9. '```' → logprob: -12.897644996643066
    10. ',
' → logprob: -13.272644996643066

Token 1274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.50000762939453
    4. '```' → logprob: -18.62500762939453
    5. '0' → logprob: -18.87500762939453
    6. '
' → logprob: -19.25000762939453
    7. '+' → logprob: -19.87500762939453
    8. '  ' → logprob: -20.37500762939453
    9. ')' → logprob: -20.75000762939453
    10. '(' → logprob: -20.75000762939453

Token 1275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '0' → logprob: -19.75
    4. '+' → logprob: -20.375
    5. '   ' → logprob: -20.375
    6. '
' → logprob: -20.75
    7. '```' → logprob: -21.125
    8. '(' → logprob: -22.875
    9. '۱' → logprob: -23.0
    10. '１' → logprob: -23.125

Token 1276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018661346985027194
    2. ' ,' → logprob: -8.625186920166016
    3. ',
' → logprob: -13.000186920166016
    4. '```' → logprob: -13.625186920166016
    5. '           ' → logprob: -13.750186920166016
    6. '       ' → logprob: -14.000186920166016
    7. ')' → logprob: -14.125186920166016
    8. '   ' → logprob: -15.250186920166016
    9. ',g' → logprob: -15.625186920166016
    10. '),' → logprob: -16.500186920166016

Token 1277: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.07889066636562347
    2. ' gb' → logprob: -2.578890562057495
    3. '	gb' → logprob: -14.828890800476074
    4. '.gb' → logprob: -14.953890800476074
    5. '
' → logprob: -17.328889846801758
    6. '0' → logprob: -17.578889846801758
    7. 'GB' → logprob: -17.703889846801758
    8. '```' → logprob: -17.828889846801758
    9. ' ' → logprob: -17.953889846801758
    10. 'gc' → logprob: -17.953889846801758

Token 1278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.637786231702194e-05
    2. ' ,' → logprob: -9.500086784362793
    3. '```' → logprob: -12.375086784362793
    4. '           ' → logprob: -12.500086784362793
    5. ',
' → logprob: -13.250086784362793
    6. '       ' → logprob: -14.000086784362793
    7. '   ' → logprob: -14.750086784362793
    8. ')' → logprob: -16.250085830688477
    9. '          ' → logprob: -16.875085830688477
    10. '               ' → logprob: -16.875085830688477

Token 1279: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.04858827963471413
    2. ' br' → logprob: -3.048588275909424
    3. '	br' → logprob: -14.423588752746582
    4. '(br' → logprob: -15.923588752746582
    5. 'brane' → logprob: -16.298587799072266
    6. '   ' → logprob: -16.548587799072266
    7. 'b' → logprob: -17.423587799072266
    8. '```' → logprob: -17.673587799072266
    9. 'Br' → logprob: -18.548587799072266
    10. '    ' → logprob: -18.673587799072266

Token 1280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018613664724398404
    2. '   ' → logprob: -9.6251859664917
    3. ',' → logprob: -9.8751859664917
    4. ')
' → logprob: -10.1251859664917
    5. ' )' → logprob: -10.6251859664917
    6. '       ' → logprob: -13.0001859664917
    7. ')}' → logprob: -14.7501859664917
    8. ',)' → logprob: -15.3751859664917
    9. '```' → logprob: -15.6251859664917
    10. ')`' → logprob: -15.7501859664917

Token 1281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14275389909744263
    2. 'else' → logprob: -2.517753839492798
    3. '```' → logprob: -3.017753839492798
    4. 'elif' → logprob: -6.267754077911377
    5. '   ' → logprob: -6.892754077911377
    6. ' else' → logprob: -7.767754077911377
    7. ')' → logprob: -9.392753601074219
    8. '``' → logprob: -10.767753601074219
    9. ',' → logprob: -10.892753601074219
    10. '<|end|>' → logprob: -12.267753601074219

Token 1282: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.7215745449066162
    2. ' elif' → logprob: -1.8465745449066162
    3. ' else' → logprob: -2.096574544906616
    4. '       ' → logprob: -2.096574544906616
    5. 'else' → logprob: -2.221574544906616
    6. '   ' → logprob: -7.346574783325195
    7. '```' → logprob: -7.346574783325195
    8. ')' → logprob: -8.221574783325195
    9. ' ' → logprob: -8.596574783325195
    10. '[' → logprob: -9.846574783325195

Token 1283: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002477677771821618
    2. ' b' → logprob: -6.002477645874023
    3. '   ' → logprob: -13.252477645874023
    4. ' ' → logprob: -16.377477645874023
    5. '	b' → logprob: -16.752477645874023
    6. '  ' → logprob: -17.877477645874023
    7. '    ' → logprob: -17.877477645874023
    8. '```' → logprob: -18.502477645874023
    9. '       ' → logprob: -18.752477645874023
    10. 's' → logprob: -19.752477645874023

Token 1284: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8102384209632874
    2. ':' → logprob: -1.3102383613586426
    3. '           ' → logprob: -1.3102383613586426
    4. '       ' → logprob: -4.560238361358643
    5. '```' → logprob: -6.560238361358643
    6. ',' → logprob: -6.810238361358643
    7. '          ' → logprob: -7.560238361358643
    8. '>' → logprob: -7.935238361358643
    9. '<|end|>' → logprob: -8.3102388381958
    10. '==' → logprob: -8.4352388381958

Token 1285: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04569462314248085
    2. ':' → logprob: -3.795694589614868
    3. '           ' → logprob: -4.045694828033447
    4. ':
' → logprob: -5.920694828033447
    5. '```' → logprob: -6.295694828033447
    6. '   ' → logprob: -10.420694351196289
    7. ' :' → logprob: -10.670694351196289
    8. '(' → logprob: -11.170694351196289
    9. '        ' → logprob: -11.670694351196289
    10. ' ' → logprob: -11.670694351196289

Token 1286: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3547196686267853
    2. '       ' → logprob: -1.729719638824463
    3. '           ' → logprob: -2.229719638824463
    4. 'return' → logprob: -4.729719638824463
    5. '(' → logprob: -5.979719638824463
    6. '```' → logprob: -6.354719638824463
    7. '(
' → logprob: -9.104720115661621
    8. '{
' → logprob: -9.229720115661621
    9. '(return' → logprob: -9.604720115661621
    10. '   ' → logprob: -9.604720115661621

Token 1287: ' Ensuite' (ID: 113884)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0955408588051796
    2. '       ' → logprob: -2.970540761947632
    3. ' return' → logprob: -3.345540761947632
    4. '           ' → logprob: -5.470541000366211
    5. '```' → logprob: -8.345541000366211
    6. '#' → logprob: -10.220541000366211
    7. '
' → logprob: -10.470541000366211
    8. '   ' → logprob: -10.595541000366211
    9. '(return' → logprob: -10.720541000366211
    10. 'else' → logprob: -11.470541000366211

Token 1288: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1759029626846313
    2. ':
' → logprob: -1.3009029626846313
    3. ':' → logprob: -1.6759029626846313
    4. '       ' → logprob: -2.300902843475342
    5. 'return' → logprob: -2.800902843475342
    6. ' (' → logprob: -3.675902843475342
    7. ' return' → logprob: -3.925902843475342
    8. ':return' → logprob: -4.300902843475342
    9. '```' → logprob: -5.050902843475342
    10. '(return' → logprob: -5.550902843475342

Token 1289: ' à' (ID: 1221)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03719821572303772
    2. '(res' → logprob: -3.662198305130005
    3. ' return' → logprob: -5.037198066711426
    4. '(return' → logprob: -5.912198066711426
    5. ' (' → logprob: -7.287198066711426
    6. 'res' → logprob: -7.537198066711426
    7. ' res' → logprob: -9.162198066711426
    8. '           ' → logprob: -9.412198066711426
    9. '       ' → logprob: -9.412198066711426
    10. '   ' → logprob: -9.412198066711426

Token 1290: ' une' (ID: 2463)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.02630564197897911
    2. 'res' → logprob: -3.901305675506592
    3. 'return' → logprob: -5.526305675506592
    4. ' (' → logprob: -7.276305675506592
    5. '(return' → logprob: -7.526305675506592
    6. ' res' → logprob: -8.526305198669434
    7. '   ' → logprob: -9.276305198669434
    8. 'b' → logprob: -9.776305198669434
    9. '(
' → logprob: -10.401305198669434
    10. ' return' → logprob: -10.776305198669434

Token 1291: ' personne' (ID: 26304)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.622801661491394
    2. '(res' → logprob: -1.872801661491394
    3. '(b' → logprob: -2.7478017807006836
    4. 'return' → logprob: -2.8728017807006836
    5. ' b' → logprob: -2.8728017807006836
    6. '(s' → logprob: -3.1228017807006836
    7. 'res' → logprob: -3.4978017807006836
    8. ' (' → logprob: -4.247801780700684
    9. '```' → logprob: -4.872801780700684
    10. '(Mod' → logprob: -5.247801780700684

Token 1292: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30443644523620605
    2. ':' → logprob: -2.429436445236206
    3. 'return' → logprob: -3.179436445236206
    4. '==' → logprob: -3.554436445236206
    5. ':
' → logprob: -3.804436445236206
    6. '=' → logprob: -4.054436683654785
    7. '```' → logprob: -4.304436683654785
    8. 'else' → logprob: -4.804436683654785
    9. ':return' → logprob: -5.304436683654785
    10. '           ' → logprob: -5.304436683654785

Token 1293: ' une' (ID: 2463)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003292851848527789
    2. ' b' → logprob: -5.878293037414551
    3. 'gb' → logprob: -7.753293037414551
    4. ' gb' → logprob: -11.25329303741455
    5. '(b' → logprob: -11.50329303741455
    6. '```' → logprob: -11.50329303741455
    7. '   ' → logprob: -12.00329303741455
    8. '           ' → logprob: -12.37829303741455
    9. '
' → logprob: -12.37829303741455
    10. '     ' → logprob: -13.50329303741455

Token 1294: ' ble' (ID: 10483)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0016074628802016377
    2. ' b' → logprob: -6.501607418060303
    3. '1' → logprob: -9.251607894897461
    4. '```' → logprob: -12.126607894897461
    5. ' ' → logprob: -13.376607894897461
    6. '
' → logprob: -14.376607894897461
    7. '   ' → logprob: -14.751607894897461
    8. '(b' → logprob: -14.876607894897461
    9. '  ' → logprob: -16.12660789489746
    10. '0' → logprob: -16.37660789489746

Token 1295: 'ue' (ID: 466)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5905876755714417
    2. '-' → logprob: -2.590587615966797
    3. ':
' → logprob: -2.590587615966797
    4. '+' → logprob: -2.965587615966797
    5. '):
' → logprob: -2.965587615966797
    6. '```' → logprob: -2.965587615966797
    7. ':' → logprob: -3.090587615966797
    8. ')' → logprob: -3.715587615966797
    9. ' -' → logprob: -4.340587615966797
    10. '**' → logprob: -4.465587615966797

Token 1296: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34277236461639404
    2. ':
' → logprob: -2.3427724838256836
    3. ':' → logprob: -2.5927724838256836
    4. '(s' → logprob: -3.2177724838256836
    5. '(b' → logprob: -3.5927724838256836
    6. ' (' → logprob: -4.217772483825684
    7. '```' → logprob: -4.217772483825684
    8. ',' → logprob: -4.342772483825684
    9. '       ' → logprob: -5.717772483825684
    10. '):
' → logprob: -6.592772483825684

Token 1297: 'dev' (ID: 6751)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12668541073799133
    2. 'b' → logprob: -2.376685380935669
    3. ' return' → logprob: -4.251685619354248
    4. 'res' → logprob: -4.751685619354248
    5. ' b' → logprob: -6.251685619354248
    6. '       ' → logprob: -7.501685619354248
    7. ' res' → logprob: -7.626685619354248
    8. '```' → logprob: -9.75168514251709
    9. '(return' → logprob: -10.37668514251709
    10. '(res' → logprob: -10.37668514251709

Token 1298: 'ient' (ID: 773)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7914000153541565
    2. ' -' → logprob: -0.7914000153541565
    3. '           ' → logprob: -2.9163999557495117
    4. 'b' → logprob: -4.541399955749512
    5. '```' → logprob: -4.666399955749512
    6. ' b' → logprob: -4.791399955749512
    7. '+' → logprob: -5.041399955749512
    8. '               ' → logprob: -7.041399955749512
    9. ')' → logprob: -7.166399955749512
    10. ' +' → logprob: -7.291399955749512

Token 1299: ' GB' (ID: 23280)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038439735770225525
    2. ' b' → logprob: -3.2884397506713867
    3. 'gb' → logprob: -8.288439750671387
    4. ' gb' → logprob: -9.913439750671387
    5. '   ' → logprob: -10.288439750671387
    6. '       ' → logprob: -11.538439750671387
    7. 'g' → logprob: -11.788439750671387
    8. '(b' → logprob: -12.038439750671387
    9. 'res' → logprob: -12.038439750671387
    10. '    ' → logprob: -12.538439750671387

Token 1300: ')
' (ID: 446)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7305344343185425
    2. ',' → logprob: -0.9805344343185425
    3. '-' → logprob: -1.9805344343185425
    4. '           ' → logprob: -5.480534553527832
    5. '):
' → logprob: -8.105534553527832
    6. '```' → logprob: -8.730534553527832
    7. ' ,' → logprob: -9.105534553527832
    8. ')' → logprob: -9.230534553527832
    9. ',
' → logprob: -9.480534553527832
    10. '       ' → logprob: -9.855534553527832

Token 1301: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05389520153403282
    2. '```' → logprob: -3.6788952350616455
    3. ':' → logprob: -4.678894996643066
    4. ':
' → logprob: -5.053894996643066
    5. '       ' → logprob: -5.178894996643066
    6. 'return' → logprob: -6.178894996643066
    7. ',' → logprob: -6.553894996643066
    8. '=' → logprob: -7.053894996643066
    9. '):
' → logprob: -7.303894996643066
    10. '``' → logprob: -8.428894996643066

Token 1302: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03709942847490311
    2. ' return' → logprob: -3.7870993614196777
    3. '       ' → logprob: -4.287099361419678
    4. '   ' → logprob: -11.787099838256836
    5. '           ' → logprob: -12.787099838256836
    6. '```' → logprob: -13.537099838256836
    7. '	return' → logprob: -14.412099838256836
    8. '(return' → logprob: -14.662099838256836
    9. ' ' → logprob: -15.662099838256836
    10. '(' → logprob: -15.912099838256836

Token 1303: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -6.372916686814278e-05
    2. '(return' → logprob: -9.7500638961792
    3. ' (' → logprob: -13.0000638961792
    4. 'return' → logprob: -13.8750638961792
    5. '   ' → logprob: -14.1250638961792
    6. 'res' → logprob: -14.3750638961792
    7. '(ret' → logprob: -14.8750638961792
    8. '(' → logprob: -15.7500638961792
    9. '(re' → logprob: -16.000062942504883
    10. '       ' → logprob: -16.500062942504883

Token 1304: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0017815681640058756
    2. '(res' → logprob: -6.376781463623047
    3. ' res' → logprob: -9.626781463623047
    4. 'Mod' → logprob: -12.376781463623047
    5. '   ' → logprob: -12.751781463623047
    6. 'return' → logprob: -13.376781463623047
    7. '       ' → logprob: -13.626781463623047
    8. ')' → logprob: -14.126781463623047
    9. 'rez' → logprob: -14.876781463623047
    10. ',res' → logprob: -15.001781463623047

Token 1305: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5781628489494324
    2. '*' → logprob: -0.8281628489494324
    3. ',' → logprob: -6.203162670135498
    4. ')' → logprob: -9.953163146972656
    5. '*,' → logprob: -10.203163146972656
    6. '+' → logprob: -10.578163146972656
    7. ' ,' → logprob: -11.078163146972656
    8. ' ' → logprob: -11.203163146972656
    9. ' +' → logprob: -11.328163146972656
    10. 's' → logprob: -11.953163146972656

Token 1306: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00171563564799726
    2. ' b' → logprob: -6.376715660095215
    3. '(b' → logprob: -12.876715660095215
    4. '   ' → logprob: -13.251715660095215
    5. '(Mod' → logprob: -13.251715660095215
    6. 'Mod' → logprob: -13.376715660095215
    7. 'gb' → logprob: -13.626715660095215
    8. ' ' → logprob: -14.001715660095215
    9. '
' → logprob: -14.376715660095215
    10. '(' → logprob: -14.501715660095215

Token 1307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002929174806922674
    2. '       ' → logprob: -9.000292778015137
    3. ' ,' → logprob: -9.000292778015137
    4. '`,' → logprob: -11.500292778015137
    5. '```' → logprob: -11.625292778015137
    6. '           ' → logprob: -12.125292778015137
    7. ',z' → logprob: -12.375292778015137
    8. '=' → logprob: -12.500292778015137
    9. ')' → logprob: -12.750292778015137
    10. ',s' → logprob: -13.375292778015137

Token 1308: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.0036004253197461367
    2. 'z' → logprob: -5.628600597381592
    3. '	z' → logprob: -15.753600120544434
    4. '```' → logprob: -16.62860107421875
    5. ',z' → logprob: -16.87860107421875
    6. '(z' → logprob: -17.00360107421875
    7. 's' → logprob: -17.25360107421875
    8. ' ' → logprob: -17.75360107421875
    9. '.z' → logprob: -18.12860107421875
    10. '0' → logprob: -18.12860107421875

Token 1309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002075933152809739
    2. ' ,' → logprob: -8.750207901000977
    3. '-' → logprob: -11.000207901000977
    4. '   ' → logprob: -11.500207901000977
    5. ',
' → logprob: -11.500207901000977
    6. ')' → logprob: -12.625207901000977
    7. ' -' → logprob: -13.500207901000977
    8. '',' → logprob: -13.750207901000977
    9. '`,' → logprob: -13.875207901000977
    10. '           ' → logprob: -14.250207901000977

Token 1310: ' r' (ID: 428)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2773246467113495
    2. 'r' → logprob: -1.6523246765136719
    3. ' z' → logprob: -3.152324676513672
    4. ' r' → logprob: -4.902324676513672
    5. '   ' → logprob: -8.527324676513672
    6. '    ' → logprob: -8.902324676513672
    7. '     ' → logprob: -10.902324676513672
    8. 'g' → logprob: -11.402324676513672
    9. '       ' → logprob: -11.402324676513672
    10. '  ' → logprob: -11.777324676513672

Token 1311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013366704806685448
    2. ' ,' → logprob: -6.876336574554443
    3. '-' → logprob: -8.751337051391602
    4. ' -' → logprob: -9.751337051391602
    5. ',g' → logprob: -10.626337051391602
    6. '```' → logprob: -11.251337051391602
    7. '   ' → logprob: -11.501337051391602
    8. '           ' → logprob: -11.626337051391602
    9. 'g' → logprob: -11.751337051391602
    10. '       ' → logprob: -11.876337051391602

Token 1312: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04868343099951744
    2. ' g' → logprob: -3.0486834049224854
    3. 'b' → logprob: -9.548683166503906
    4. ' b' → logprob: -10.923683166503906
    5. 'gb' → logprob: -12.548683166503906
    6. '   ' → logprob: -13.548683166503906
    7. ' ' → logprob: -14.173683166503906
    8. ' gb' → logprob: -14.798683166503906
    9. '  ' → logprob: -15.048683166503906
    10. '    ' → logprob: -15.048683166503906

Token 1313: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3005983829498291
    2. ',' → logprob: -1.925598382949829
    3. '-' → logprob: -2.175598382949829
    4. 'b' → logprob: -8.92559814453125
    5. ' ,' → logprob: -9.05059814453125
    6. ' b' → logprob: -11.30059814453125
    7. ' ' → logprob: -11.55059814453125
    8. '           ' → logprob: -11.92559814453125
    9. '```' → logprob: -12.42559814453125
    10. '       ' → logprob: -12.80059814453125

Token 1314: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023251185193657875
    2. ' b' → logprob: -3.7732512950897217
    3. '   ' → logprob: -13.2732515335083
    4. 'g' → logprob: -13.2732515335083
    5. '    ' → logprob: -13.8982515335083
    6. ' ' → logprob: -14.3982515335083
    7. ' g' → logprob: -15.1482515335083
    8. '  ' → logprob: -15.5232515335083
    9. '     ' → logprob: -16.148250579833984
    10. '       ' → logprob: -16.898250579833984

Token 1315: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08932143449783325
    2. '-' → logprob: -2.4643213748931885
    3. ',' → logprob: -8.33932113647461
    4. '```' → logprob: -9.96432113647461
    5. 'b' → logprob: -10.33932113647461
    6. '       ' → logprob: -11.08932113647461
    7. ')' → logprob: -11.33932113647461
    8. '           ' → logprob: -11.83932113647461
    9. '   ' → logprob: -11.83932113647461
    10. ' ' → logprob: -12.21432113647461

Token 1316: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019293478690087795
    2. ' ' → logprob: -6.25192928314209
    3. '```' → logprob: -15.25192928314209
    4. '           ' → logprob: -15.62692928314209
    5. '   ' → logprob: -15.75192928314209
    6. '       ' → logprob: -16.126930236816406
    7. '
' → logprob: -17.626930236816406
    8. ' ' → logprob: -17.751930236816406
    9. '<|end|>' → logprob: -17.876930236816406
    10. '[' → logprob: -18.251930236816406

Token 1317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.625059127807617
    4. '```' → logprob: -17.625059127807617
    5. '
' → logprob: -18.125059127807617
    6. '+' → logprob: -18.625059127807617
    7. '-' → logprob: -19.125059127807617
    8. ' ' → logprob: -19.437559127807617
    9. ',' → logprob: -20.187559127807617
    10. '  ' → logprob: -20.312559127807617

Token 1318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009474263642914593
    2. ' ,' → logprob: -7.62594747543335
    3. '```' → logprob: -8.875946998596191
    4. '       ' → logprob: -9.125946998596191
    5. ' rg' → logprob: -9.625946998596191
    6. 'rg' → logprob: -9.875946998596191
    7. ')' → logprob: -10.750946998596191
    8. '           ' → logprob: -10.875946998596191
    9. '),' → logprob: -11.125946998596191
    10. '`,' → logprob: -11.875946998596191

Token 1319: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.16022604703903198
    2. ' rg' → logprob: -1.9102261066436768
    3. '```' → logprob: -14.785225868225098
    4. 'rgb' → logprob: -15.035225868225098
    5. '_rg' → logprob: -15.160225868225098
    6. 'RG' → logprob: -15.660225868225098
    7. '(' → logprob: -15.785225868225098
    8. '   ' → logprob: -15.910225868225098
    9. ' rgb' → logprob: -16.160226821899414
    10. ' ' → logprob: -16.660226821899414

Token 1320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23795293271541595
    2. '+' → logprob: -1.7379529476165771
    3. ' +' → logprob: -3.362952947616577
    4. ' ,' → logprob: -6.862952709197998
    5. '+,' → logprob: -8.737953186035156
    6. '       ' → logprob: -11.862953186035156
    7. '```' → logprob: -11.862953186035156
    8. ',
' → logprob: -11.987953186035156
    9. ')' → logprob: -12.112953186035156
    10. '+
' → logprob: -12.612953186035156

Token 1321: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.22542718052864075
    2. ' gb' → logprob: -1.6004271507263184
    3. '1' → logprob: -12.600427627563477
    4. '	gb' → logprob: -12.600427627563477
    5. '```' → logprob: -13.225427627563477
    6. '.gb' → logprob: -13.350427627563477
    7. 'GB' → logprob: -14.350427627563477
    8. ' ' → logprob: -14.350427627563477
    9. 'Gb' → logprob: -14.475427627563477
    10. '+' → logprob: -14.850427627563477

Token 1322: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8120039701461792
    2. ',' → logprob: -1.0620039701461792
    3. ' +' → logprob: -1.5620039701461792
    4. ' ,' → logprob: -7.687004089355469
    5. '```' → logprob: -10.187004089355469
    6. '+,' → logprob: -10.812004089355469
    7. ')' → logprob: -11.562004089355469
    8. '           ' → logprob: -12.062004089355469
    9. '   ' → logprob: -12.687004089355469
    10. '       ' → logprob: -12.812004089355469

Token 1323: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.375009536743164
    4. '0' → logprob: -18.625009536743164
    5. '```' → logprob: -19.375009536743164
    6. '
' → logprob: -20.750009536743164
    7. '+' → logprob: -21.375009536743164
    8. '(' → logprob: -21.375009536743164
    9. ',' → logprob: -21.750009536743164
    10. '  ' → logprob: -21.875009536743164

Token 1324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.875
    4. '0' → logprob: -19.5
    5. '```' → logprob: -20.375
    6. '+' → logprob: -20.75
    7. '(' → logprob: -21.25
    8. '  ' → logprob: -21.875
    9. '<|end|>' → logprob: -21.875
    10. '-' → logprob: -22.0

Token 1325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005251537077128887
    2. ')' → logprob: -7.625524997711182
    3. ' ,' → logprob: -10.62552547454834
    4. '```' → logprob: -12.00052547454834
    5. '   ' → logprob: -13.37552547454834
    6. '       ' → logprob: -13.50052547454834
    7. ',
' → logprob: -14.12552547454834
    8. 'br' → logprob: -14.50052547454834
    9. ',b' → logprob: -14.62552547454834
    10. '           ' → logprob: -14.75052547454834

Token 1326: ' br' (ID: 1294)
  Prédit: ' br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' br' → logprob: -0.6931492686271667
    2. 'br' → logprob: -0.6931492686271667
    3. '	br' → logprob: -13.81814956665039
    4. '(br' → logprob: -14.44314956665039
    5. '```' → logprob: -15.94314956665039
    6. 'Br' → logprob: -15.94314956665039
    7. 'brane' → logprob: -16.56814956665039
    8. 'b' → logprob: -17.06814956665039
    9. '   ' → logprob: -17.19314956665039
    10. '0' → logprob: -17.44314956665039

Token 1327: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033593899570405483
    2. '   ' → logprob: -8.500335693359375
    3. ')
' → logprob: -9.375335693359375
    4. '       ' → logprob: -10.250335693359375
    5. '```' → logprob: -12.500335693359375
    6. '):
' → logprob: -12.750335693359375
    7. '):' → logprob: -13.125335693359375
    8. ' )' → logprob: -13.625335693359375
    9. ')`' → logprob: -14.500335693359375
    10. '           ' → logprob: -15.250335693359375

Token 1328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08677869290113449
    2. ')' → logprob: -3.4617786407470703
    3. '```' → logprob: -3.8367786407470703
    4. ':' → logprob: -4.33677864074707
    5. '):
' → logprob: -5.58677864074707
    6. ',' → logprob: -5.58677864074707
    7. '   ' → logprob: -5.71177864074707
    8. ':
' → logprob: -5.96177864074707
    9. '):' → logprob: -6.96177864074707
    10. '[' → logprob: -6.96177864074707

Token 1329: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08454954624176025
    2. '       ' → logprob: -2.5845494270324707
    3. '   ' → logprob: -5.334549427032471
    4. ' else' → logprob: -7.584549427032471
    5. '```' → logprob: -8.084549903869629
    6. '	else' → logprob: -13.084549903869629
    7. '{
' → logprob: -13.209549903869629
    8. '``' → logprob: -14.834549903869629
    9. '           ' → logprob: -15.459549903869629
    10. 'elif' → logprob: -15.834549903869629

Token 1330: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.14947155117988586
    2. '(' → logprob: -2.1494715213775635
    3. ' (
' → logprob: -4.649471759796143
    4. '(space' → logprob: -5.149471759796143
    5. '(
' → logprob: -5.274471759796143
    6. '(return' → logprob: -7.149471759796143
    7. '(res' → logprob: -7.649471759796143
    8. '[' → logprob: -9.399471282958984
    9. '<|end|>' → logprob: -9.399471282958984
    10. '(rest' → logprob: -9.524471282958984

Token 1331: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.35048428177833557
    2. '(return' → logprob: -1.9754842519760132
    3. ' return' → logprob: -2.8504843711853027
    4. '(' → logprob: -3.2254843711853027
    5. '       ' → logprob: -3.3504843711853027
    6. '(res' → logprob: -4.225484371185303
    7. 'return' → logprob: -5.225484371185303
    8. '   ' → logprob: -6.600484371185303
    9. '           ' → logprob: -6.725484371185303
    10. '```' → logprob: -6.850484371185303

Token 1332: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0032355827279388905
    2. ' return' → logprob: -5.753235816955566
    3. '(return' → logprob: -10.003235816955566
    4. '       ' → logprob: -11.878235816955566
    5. '           ' → logprob: -12.628235816955566
    6. '```' → logprob: -13.753235816955566
    7. '   ' → logprob: -14.128235816955566
    8. '(' → logprob: -14.878235816955566
    9. '{return' → logprob: -15.753235816955566
    10. '	return' → logprob: -16.75323486328125

Token 1333: ' Sinon' (ID: 154924)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007579309749417007
    2. ' return' → logprob: -7.250757694244385
    3. '           ' → logprob: -10.375758171081543
    4. 'res' → logprob: -12.625758171081543
    5. '   ' → logprob: -12.875758171081543
    6. '```' → logprob: -13.000758171081543
    7. '(return' → logprob: -13.000758171081543
    8. '       ' → logprob: -13.125758171081543
    9. '(z' → logprob: -13.125758171081543
    10. '(res' → logprob: -13.875758171081543

Token 1334: ' :' (ID: 712)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.004405313171446323
    2. '(' → logprob: -5.879405498504639
    3. '(return' → logprob: -6.879405498504639
    4. '           ' → logprob: -7.754405498504639
    5. ' return' → logprob: -9.62940502166748
    6. 'return' → logprob: -10.50440502166748
    7. '(
' → logprob: -11.00440502166748
    8. ' (
' → logprob: -11.75440502166748
    9. '   ' → logprob: -12.37940502166748
    10. '(res' → logprob: -12.50440502166748

Token 1335: ' à' (ID: 1221)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15544255077838898
    2. ' return' → logprob: -2.155442476272583
    3. '(return' → logprob: -4.155442714691162
    4. '(res' → logprob: -4.405442714691162
    5. ' (' → logprob: -8.530442237854004
    6. 'res' → logprob: -11.530442237854004
    7. '(' → logprob: -12.530442237854004
    8. ' res' → logprob: -12.655442237854004
    9. '   ' → logprob: -13.030442237854004
    10. '```' → logprob: -13.280442237854004

Token 1336: ' une' (ID: 2463)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.004712311085313559
    2. '(z' → logprob: -5.379712104797363
    3. 'res' → logprob: -10.004712104797363
    4. '(return' → logprob: -11.254712104797363
    5. ' (' → logprob: -11.379712104797363
    6. 'return' → logprob: -11.754712104797363
    7. 'z' → logprob: -11.879712104797363
    8. '(' → logprob: -12.129712104797363
    9. '(
' → logprob: -14.504712104797363
    10. '```' → logprob: -14.754712104797363

Token 1337: ' personne' (ID: 26304)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.004764518700540066
    2. '(res' → logprob: -5.879764556884766
    3. 'person' → logprob: -7.004764556884766
    4. ' (' → logprob: -7.754764556884766
    5. '(person' → logprob: -8.129764556884766
    6. '(s' → logprob: -8.754764556884766
    7. '(' → logprob: -10.129764556884766
    8. '(return' → logprob: -10.379764556884766
    9. '(r' → logprob: -10.504764556884766
    10. '(t' → logprob: -10.879764556884766

Token 1338: ' sans' (ID: 9828)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.673362672328949
    2. '*' → logprob: -0.923362672328949
    3. ' (' → logprob: -3.4233627319335938
    4. '(' → logprob: -3.5483627319335938
    5. '(z' → logprob: -4.298362731933594
    6. '*(' → logprob: -5.048362731933594
    7. '(s' → logprob: -5.798362731933594
    8. ',' → logprob: -5.923362731933594
    9. '*z' → logprob: -6.673362731933594
    10. '*=' → logprob: -7.298362731933594

Token 1339: ' balle' (ID: 147386)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.18885552883148193
    2. 'z' → logprob: -1.813855528831482
    3. 'ball' → logprob: -5.3138556480407715
    4. ' ball' → logprob: -5.5638556480407715
    5. '_ball' → logprob: -8.688855171203613
    6. '```' → logprob: -10.188855171203613
    7. ' balle' → logprob: -10.438855171203613
    8. 'b' → logprob: -10.813855171203613
    9. '(z' → logprob: -11.313855171203613
    10. '(ball' → logprob: -11.938855171203613

Token 1340: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6690802574157715
    2. '           ' → logprob: -1.4190802574157715
    3. '(' → logprob: -2.0440802574157715
    4. ',' → logprob: -3.1690802574157715
    5. '(z' → logprob: -3.5440802574157715
    6. '```' → logprob: -3.7940802574157715
    7. '(
' → logprob: -5.4190802574157715
    8. ' =' → logprob: -5.5440802574157715
    9. '=' → logprob: -5.9190802574157715
    10. '(n' → logprob: -5.9190802574157715

Token 1341: 'dev' (ID: 6751)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007934397086501122
    2. ' return' → logprob: -4.8829345703125
    3. 'z' → logprob: -8.8829345703125
    4. '           ' → logprob: -9.2579345703125
    5. ')' → logprob: -10.0079345703125
    6. '```' → logprob: -10.6329345703125
    7. '       ' → logprob: -11.6329345703125
    8. ' z' → logprob: -12.0079345703125
    9. '   ' → logprob: -12.3829345703125
    10. ')return' → logprob: -13.2579345703125

Token 1342: 'ient' (ID: 773)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.33957406878471375
    2. ' -' → logprob: -2.464574098587036
    3. '=' → logprob: -2.964574098587036
    4. ' z' → logprob: -3.339574098587036
    5. 'ant' → logprob: -3.839574098587036
    6. 'z' → logprob: -3.964574098587036
    7. 'et' → logprob: -4.714573860168457
    8. '=None' → logprob: -4.714573860168457
    9. '   ' → logprob: -4.839573860168457
    10. 'ent' → logprob: -5.089573860168457

Token 1343: ' G' (ID: 499)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.12248695641756058
    2. 'z' → logprob: -2.3724870681762695
    3. ' z' → logprob: -3.8724870681762695
    4. ' (' → logprob: -6.8724870681762695
    5. 'res' → logprob: -8.99748706817627
    6. '(' → logprob: -9.99748706817627
    7. '(res' → logprob: -11.49748706817627
    8. ' res' → logprob: -11.87248706817627
    9. '```' → logprob: -13.37248706817627
    10. '(s' → logprob: -13.62248706817627

Token 1344: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061776403337717056
    2. '-' → logprob: -3.5617763996124268
    3. ' -' → logprob: -3.5617763996124268
    4. '           ' → logprob: -6.186776638031006
    5. ' ,' → logprob: -7.061776638031006
    6. ')' → logprob: -9.186776161193848
    7. '```' → logprob: -10.186776161193848
    8. '   ' → logprob: -11.311776161193848
    9. '):
' → logprob: -11.311776161193848
    10. ',
' → logprob: -11.811776161193848

Token 1345: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05036225542426109
    2. ' =' → logprob: -3.1753623485565186
    3. ' return' → logprob: -5.1753621101379395
    4. 'return' → logprob: -7.5503621101379395
    5. '   ' → logprob: -8.300362586975098
    6. '=True' → logprob: -8.300362586975098
    7. '(' → logprob: -8.800362586975098
    8. '       ' → logprob: -8.925362586975098
    9. '           ' → logprob: -9.300362586975098
    10. '```' → logprob: -9.425362586975098

Token 1346: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002553307916969061
    2. ' return' → logprob: -6.002553462982178
    3. '   ' → logprob: -9.62755298614502
    4. '(return' → logprob: -11.62755298614502
    5. '       ' → logprob: -13.25255298614502
    6. '(res' → logprob: -15.50255298614502
    7. '```' → logprob: -15.50255298614502
    8. 'res' → logprob: -15.62755298614502
    9. '	return' → logprob: -16.127553939819336
    10. ':return' → logprob: -16.127553939819336

Token 1347: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00020425561524461955
    2. ' (' → logprob: -8.500204086303711
    3. 'res' → logprob: -14.125204086303711
    4. '(' → logprob: -16.87520408630371
    5. '(re' → logprob: -17.37520408630371
    6. '   ' → logprob: -18.12520408630371
    7. '(
' → logprob: -18.25020408630371
    8. ' res' → logprob: -18.25020408630371
    9. '(r' → logprob: -18.37520408630371
    10. '(result' → logprob: -19.00020408630371

Token 1348: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -8.061054359131958e-06
    2. '(res' → logprob: -11.750007629394531
    3. ' res' → logprob: -17.37500762939453
    4. '$res' → logprob: -19.12500762939453
    5. 'Res' → logprob: -20.00000762939453
    6. '	res' → logprob: -20.00000762939453
    7. ',res' → logprob: -20.12500762939453
    8. 'resi' → logprob: -20.50000762939453
    9. '=res' → logprob: -21.62500762939453
    10. '```' → logprob: -21.75000762939453

Token 1349: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.57596755027771
    2. '*' → logprob: -0.82596755027771
    3. ',' → logprob: -10.825967788696289
    4. ')' → logprob: -12.950967788696289
    5. '*(' → logprob: -13.075967788696289
    6. ' ' → logprob: -13.450967788696289
    7. '*,' → logprob: -14.075967788696289
    8. ' ' → logprob: -14.325967788696289
    9. ' ,' → logprob: -15.325967788696289
    10. '```' → logprob: -16.07596778869629

Token 1350: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -4.870950215263292e-05
    2. ' z' → logprob: -10.000048637390137
    3. '(z' → logprob: -13.125048637390137
    4. 'res' → logprob: -13.750048637390137
    5. 's' → logprob: -16.125049591064453
    6. '```' → logprob: -19.125049591064453
    7. '	z' → logprob: -19.500049591064453
    8. 'Mod' → logprob: -19.750049591064453
    9. ''z' → logprob: -20.000049591064453
    10. '
' → logprob: -20.750049591064453

Token 1351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007874715374782681
    2. '-' → logprob: -7.375787258148193
    3. ' ,' → logprob: -9.000787734985352
    4. ',z' → logprob: -11.125787734985352
    5. ',
' → logprob: -11.625787734985352
    6. ' -' → logprob: -12.125787734985352
    7. '   ' → logprob: -12.875787734985352
    8. ' z' → logprob: -13.625787734985352
    9. '```' → logprob: -13.625787734985352
    10. '`,' → logprob: -14.125787734985352

Token 1352: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.007606866303831339
    2. 'z' → logprob: -4.8826069831848145
    3. ' ' → logprob: -14.757606506347656
    4. '	z' → logprob: -15.757606506347656
    5. 's' → logprob: -17.257606506347656
    6. '```' → logprob: -17.507606506347656
    7. ''z' → logprob: -18.132606506347656
    8. ')' → logprob: -18.132606506347656
    9. ' ' → logprob: -18.632606506347656
    10. ',z' → logprob: -19.007606506347656

Token 1353: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132709264755249
    2. '-' → logprob: -1.313270926475525
    3. ' ' → logprob: -13.063270568847656
    4. '   ' → logprob: -13.188270568847656
    5. '<|end|>' → logprob: -13.438270568847656
    6. ' ' → logprob: -14.313270568847656
    7. '-
' → logprob: -14.563270568847656
    8. ' -
' → logprob: -14.563270568847656
    9. ',' → logprob: -15.063270568847656
    10. '[' → logprob: -15.188270568847656

Token 1354: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '<|end|>' → logprob: -15.75023078918457
    4. '```' → logprob: -16.00023078918457
    5. ' ' → logprob: -18.12523078918457
    6. '<|end|>' → logprob: -19.75023078918457
    7. '[' → logprob: -19.75023078918457
    8. '۱' → logprob: -20.37523078918457
    9. '   ' → logprob: -20.50023078918457
    10. '0' → logprob: -20.75023078918457

Token 1355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -19.87500762939453
    4. '<|end|>' → logprob: -21.62500762939453
    5. '۱' → logprob: -22.00000762939453
    6. ' ' → logprob: -22.25000762939453
    7. '
' → logprob: -23.00000762939453
    8. '' → logprob: -23.12500762939453
    9. '-' → logprob: -23.25000762939453
    10. '１' → logprob: -23.50000762939453

Token 1356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.570319702499546e-05
    2. ' ,' → logprob: -11.250025749206543
    3. ',r' → logprob: -11.375025749206543
    4. ',
' → logprob: -15.000025749206543
    5. '```' → logprob: -15.250025749206543
    6. '`,' → logprob: -16.250024795532227
    7. ')' → logprob: -16.250024795532227
    8. ',s' → logprob: -16.750024795532227
    9. ',g' → logprob: -16.875024795532227
    10. '‌,' → logprob: -17.375024795532227

Token 1357: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002453662164043635
    2. 'z' → logprob: -8.500245094299316
    3. ' r' → logprob: -10.125245094299316
    4. '   ' → logprob: -14.250245094299316
    5. '0' → logprob: -15.000245094299316
    6. 'res' → logprob: -15.250245094299316
    7. '     ' → logprob: -15.500245094299316
    8. '       ' → logprob: -15.875245094299316
    9. '    ' → logprob: -16.250246047973633
    10. ' z' → logprob: -17.375246047973633

Token 1358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03627341613173485
    2. '+' → logprob: -3.66127347946167
    3. ' +' → logprob: -4.66127347946167
    4. '-' → logprob: -8.411273002624512
    5. ' ,' → logprob: -8.786273002624512
    6. '<|end|>' → logprob: -10.536273002624512
    7. '   ' → logprob: -10.661273002624512
    8. ' -' → logprob: -11.661273002624512
    9. '```' → logprob: -11.786273002624512
    10. ',
' → logprob: -11.911273002624512

Token 1359: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1002303957939148
    2. ' g' → logprob: -2.3502304553985596
    3. 'r' → logprob: -10.85023021697998
    4. '   ' → logprob: -13.10023021697998
    5. ' r' → logprob: -13.60023021697998
    6. ' ' → logprob: -14.72523021697998
    7. '    ' → logprob: -14.72523021697998
    8. '	g' → logprob: -16.100231170654297
    9. '  ' → logprob: -16.600231170654297
    10. 'G' → logprob: -16.850231170654297

Token 1360: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03707817941904068
    2. ' +' → logprob: -4.412078380584717
    3. '-' → logprob: -4.662078380584717
    4. '+' → logprob: -4.787078380584717
    5. ' -' → logprob: -5.412078380584717
    6. ' ,' → logprob: -6.287078380584717
    7. '```' → logprob: -9.412077903747559
    8. '   ' → logprob: -10.537077903747559
    9. '       ' → logprob: -11.162077903747559
    10. ' ' → logprob: -11.287077903747559

Token 1361: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.87509536743164
    4. '0' → logprob: -18.12509536743164
    5. '<|end|>' → logprob: -18.62509536743164
    6. '```' → logprob: -18.75009536743164
    7. ' ' → logprob: -20.75009536743164
    8. ',' → logprob: -20.87509536743164
    9. '  ' → logprob: -21.00009536743164
    10. ')' → logprob: -21.00009536743164

Token 1362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '0' → logprob: -15.250007629394531
    4. '```' → logprob: -15.625007629394531
    5. '   ' → logprob: -18.25000762939453
    6. '<|end|>' → logprob: -18.87500762939453
    7. '
' → logprob: -19.37500762939453
    8. '+' → logprob: -20.00000762939453
    9. '-' → logprob: -20.12500762939453
    10. '  ' → logprob: -20.50000762939453

Token 1363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.661626634420827e-05
    2. ' ,' → logprob: -9.875086784362793
    3. '```' → logprob: -11.000086784362793
    4. ',b' → logprob: -11.125086784362793
    5. ')' → logprob: -13.625086784362793
    6. '<|end|>' → logprob: -14.000086784362793
    7. ',
' → logprob: -15.375086784362793
    8. ',s' → logprob: -15.750086784362793
    9. '1' → logprob: -15.750086784362793
    10. 'b' → logprob: -15.875086784362793

Token 1364: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020667314529419
    2. ' b' → logprob: -2.3502066135406494
    3. '```' → logprob: -18.97520637512207
    4. ' ' → logprob: -19.97520637512207
    5. '   ' → logprob: -20.35020637512207
    6. '	b' → logprob: -20.47520637512207
    7. ')b' → logprob: -21.60020637512207
    8. ' ' → logprob: -21.85020637512207
    9. '    ' → logprob: -22.35020637512207
    10. ' б' → logprob: -22.47520637512207

Token 1365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008096250821836293
    2. ' ,' → logprob: -7.250809669494629
    3. '+' → logprob: -10.125809669494629
    4. ' +' → logprob: -10.625809669494629
    5. ')' → logprob: -11.375809669494629
    6. '```' → logprob: -11.875809669494629
    7. ',
' → logprob: -12.250809669494629
    8. '-' → logprob: -12.375809669494629
    9. '   ' → logprob: -13.125809669494629
    10. '       ' → logprob: -13.375809669494629

Token 1366: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.03804539144039154
    2. ' rg' → logprob: -3.2880454063415527
    3. '   ' → logprob: -13.413044929504395
    4. '       ' → logprob: -13.913044929504395
    5. '     ' → logprob: -15.038044929504395
    6. ',' → logprob: -15.413044929504395
    7. '    ' → logprob: -15.788044929504395
    8. 'rgb' → logprob: -15.788044929504395
    9. '           ' → logprob: -15.913044929504395
    10. ' ' → logprob: -16.03804588317871

Token 1367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.990154047845863e-05
    2. ')' → logprob: -10.750049591064453
    3. ' ,' → logprob: -10.750049591064453
    4. '```' → logprob: -12.875049591064453
    5. ',b' → logprob: -13.750049591064453
    6. ',
' → logprob: -14.250049591064453
    7. ',r' → logprob: -14.875049591064453
    8. ',g' → logprob: -14.875049591064453
    9. '+' → logprob: -15.000049591064453
    10. '<|end|>' → logprob: -15.375049591064453

Token 1368: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.3868725895881653
    2. ' gb' → logprob: -1.1368725299835205
    3. '	gb' → logprob: -13.761872291564941
    4. '.gb' → logprob: -15.011872291564941
    5. 'GB' → logprob: -16.886873245239258
    6. ' ' → logprob: -17.386873245239258
    7. ' ' → logprob: -17.386873245239258
    8. 'g' → logprob: -17.636873245239258
    9. '```' → logprob: -18.261873245239258
    10. 'Gb' → logprob: -18.636873245239258

Token 1369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.47626737493556e-05
    2. '```' → logprob: -10.87503433227539
    3. ' ,' → logprob: -11.50003433227539
    4. '+' → logprob: -13.12503433227539
    5. ')' → logprob: -13.37503433227539
    6. '<|end|>' → logprob: -14.25003433227539
    7. ',b' → logprob: -14.62503433227539
    8. ',
' → logprob: -15.00003433227539
    9. '+,' → logprob: -15.50003433227539
    10. '``' → logprob: -16.62503433227539

Token 1370: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.3868718445301056
    2. ' br' → logprob: -1.1368718147277832
    3. '	br' → logprob: -15.011872291564941
    4. 'b' → logprob: -15.261872291564941
    5. '(br' → logprob: -15.511872291564941
    6. '```' → logprob: -16.761871337890625
    7. 'Br' → logprob: -17.011871337890625
    8. 'brane' → logprob: -17.636871337890625
    9. ' ' → logprob: -18.261871337890625
    10. '.br' → logprob: -19.136871337890625

Token 1371: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.551721889991313e-05
    2. '+' → logprob: -10.750065803527832
    3. ',' → logprob: -11.000065803527832
    4. ')
' → logprob: -11.500065803527832
    5. ' )' → logprob: -11.750065803527832
    6. '```' → logprob: -13.500065803527832
    7. '   ' → logprob: -13.625065803527832
    8. ')return' → logprob: -13.750065803527832
    9. '<|end|>' → logprob: -14.125065803527832
    10. ')`' → logprob: -14.125065803527832

Token 1372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018517106771469116
    2. 'else' → logprob: -4.268517017364502
    3. 'elif' → logprob: -6.018517017364502
    4. '```' → logprob: -6.268517017364502
    5. ' else' → logprob: -11.26851749420166
    6. ' elif' → logprob: -13.39351749420166
    7. '       ' → logprob: -14.64351749420166
    8. '``' → logprob: -15.14351749420166
    9. '	elif' → logprob: -15.14351749420166
    10. '	else' → logprob: -15.14351749420166

Token 1373: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7026436924934387
    2. 'else' (adapté à ' else') → logprob: -0.7026436924934387
    3. 'elif' → logprob: -4.702643871307373
    4. ' else' → logprob: -8.077643394470215
    5. '```' → logprob: -9.702643394470215
    6. ' elif' → logprob: -11.827643394470215
    7. '	else' → logprob: -14.327643394470215
    8. 'if' → logprob: -14.827643394470215
    9. 'elseif' → logprob: -16.20264434814453
    10. '	elif' → logprob: -16.20264434814453

Token 1374: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5250970125198364
    2. '   ' → logprob: -1.6500970125198364
    3. ':
' → logprob: -2.275096893310547
    4. '       ' → logprob: -2.400096893310547
    5. ' if' → logprob: -4.275096893310547
    6. ' :' → logprob: -5.400096893310547
    7. ' :
' → logprob: -6.775096893310547
    8. 'if' → logprob: -7.525096893310547
    9. '    ' → logprob: -7.775096893310547
    10. ' ==' → logprob: -8.150096893310547

Token 1375: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021371904760599136
    2. 'if' → logprob: -4.021371841430664
    3. ' if' → logprob: -6.396371841430664
    4. '   ' → logprob: -6.521371841430664
    5. '```' → logprob: -9.521371841430664
    6. '#' → logprob: -13.146371841430664
    7. '	if' → logprob: -14.396371841430664
    8. '
' → logprob: -14.521371841430664
    9. 'If' → logprob: -14.896371841430664
    10. '``' → logprob: -15.521371841430664

Token 1376: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02356036938726902
    2. '       ' → logprob: -4.273560523986816
    3. '   ' → logprob: -4.773560523986816
    4. ' if' → logprob: -7.023560523986816
    5. '#' → logprob: -11.523560523986816
    6. '	if' → logprob: -14.023560523986816
    7. '
' → logprob: -14.148560523986816
    8. '```' → logprob: -15.648560523986816
    9. 'If' → logprob: -16.2735595703125
    10. ' ' → logprob: -16.8985595703125

Token 1377: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009367265738546848
    2. '   ' → logprob: -5.2593674659729
    3. ' if' → logprob: -5.5093674659729
    4. 'B' → logprob: -9.759366989135742
    5. '#' → logprob: -11.009366989135742
    6. 'b' → logprob: -14.259366989135742
    7. '       ' → logprob: -14.759366989135742
    8. '
' → logprob: -15.134366989135742
    9. '	if' → logprob: -15.259366989135742
    10. '  ' → logprob: -16.009366989135742

Token 1378: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932271122932434
    2. ' ==' → logprob: -0.6932271122932434
    3. '=='' → logprob: -9.69322681427002
    4. '==
' → logprob: -11.31822681427002
    5. '=' → logprob: -13.44322681427002
    6. '===' → logprob: -13.81822681427002
    7. '   ' → logprob: -14.19322681427002
    8. 'if' → logprob: -14.56822681427002
    9. ' =='' → logprob: -14.94322681427002
    10. ' ==
' → logprob: -15.06822681427002

Token 1379: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00034177995985373855
    2. ' '' → logprob: -8.000341415405273
    3. 'B' → logprob: -12.375341415405273
    4. ' ' → logprob: -14.000341415405273
    5. '   ' → logprob: -14.375341415405273
    6. ''S' → logprob: -14.875341415405273
    7. '"B' → logprob: -15.500341415405273
    8. '  ' → logprob: -16.625341415405273
    9. ' B' → logprob: -16.625341415405273
    10. ' ' → logprob: -17.000341415405273

Token 1380: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06994343549013138
    2. ''' → logprob: -2.694943428039551
    3. '"B' → logprob: -12.94494342803955
    4. '   ' → logprob: -13.44494342803955
    5. ' B' → logprob: -13.44494342803955
    6. '`' → logprob: -14.44494342803955
    7. '
' → logprob: -15.56994342803955
    8. '```' → logprob: -15.94494342803955
    9. '"' → logprob: -16.069944381713867
    10. '  ' → logprob: -16.194944381713867

Token 1381: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012413020012900233
    2. '   ' → logprob: -6.876241207122803
    3. 'if' → logprob: -9.626241683959961
    4. ':' → logprob: -9.751241683959961
    5. ':
' → logprob: -9.876241683959961
    6. '```' → logprob: -10.876241683959961
    7. ' if' → logprob: -11.376241683959961
    8. '     ' → logprob: -14.126241683959961
    9. '      ' → logprob: -14.376241683959961
    10. '):
' → logprob: -14.751241683959961

Token 1382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009711593389511108
    2. '   ' → logprob: -5.009711742401123
    3. '```' → logprob: -5.884711742401123
    4. 'if' → logprob: -8.509711265563965
    5. ' if' → logprob: -12.259711265563965
    6. '``' → logprob: -12.759711265563965
    7. '           ' → logprob: -15.009711265563965
    8. '     ' → logprob: -15.009711265563965
    9. ' ' → logprob: -16.63471221923828
    10. '	if' → logprob: -16.75971221923828

Token 1383: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0001314295077463612
    2. '   ' → logprob: -9.000131607055664
    3. ' if' → logprob: -12.000131607055664
    4. '       ' → logprob: -13.500131607055664
    5. '```' → logprob: -14.750131607055664
    6. '``' → logprob: -19.500131607055664
    7. '	if' → logprob: -20.375131607055664
    8. '
' → logprob: -21.375131607055664
    9. ' ' → logprob: -22.250131607055664
    10. '  ' → logprob: -22.250131607055664

Token 1384: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -2.816093228830141e-06
    2. 'r' → logprob: -13.50000286102295
    3. 'rgb' → logprob: -14.25000286102295
    4. ' rg' → logprob: -14.37500286102295
    5. 'rb' → logprob: -16.250001907348633
    6. 'br' → logprob: -16.500001907348633
    7. '
' → logprob: -19.000001907348633
    8. '_rg' → logprob: -19.750001907348633
    9. 'rgba' → logprob: -20.000001907348633
    10. 'rp' → logprob: -20.125001907348633

Token 1385: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3134108781814575
    2. ':' → logprob: -1.3134108781814575
    3. '):
' → logprob: -9.813410758972168
    4. ':
' → logprob: -10.188410758972168
    5. '==' → logprob: -11.688410758972168
    6. '<|end|>' → logprob: -11.688410758972168
    7. '       ' → logprob: -11.938410758972168
    8. '```' → logprob: -12.063410758972168
    9. '>' → logprob: -12.313410758972168
    10. ':

' → logprob: -12.313410758972168

Token 1386: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4752965271472931
    2. '       ' → logprob: -0.9752964973449707
    3. '```' → logprob: -6.850296497344971
    4. 'return' → logprob: -9.350296974182129
    5. '#' → logprob: -10.350296974182129
    6. ':' → logprob: -11.350296974182129
    7. 'if' → logprob: -11.600296974182129
    8. ':
' → logprob: -11.850296974182129
    9. '``' → logprob: -12.350296974182129
    10. '          ' → logprob: -13.350296974182129

Token 1387: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6207242608070374
    2. '           ' → logprob: -1.3707242012023926
    3. '       ' → logprob: -1.6207242012023926
    4. 'return' → logprob: -4.620724201202393
    5. '```' → logprob: -8.12072467803955
    6. '(' → logprob: -8.62072467803955
    7. '{
' → logprob: -9.12072467803955
    8. '   ' → logprob: -9.37072467803955
    9. ' return' → logprob: -9.62072467803955
    10. '               ' → logprob: -9.62072467803955

Token 1388: ' Prior' (ID: 39936)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4832124412059784
    2. 'return' → logprob: -0.9832124710083008
    3. '       ' → logprob: -4.733212471008301
    4. '           ' → logprob: -8.8582124710083
    5. '```' → logprob: -9.2332124710083
    6. ' return' → logprob: -10.3582124710083
    7. '(return' → logprob: -11.7332124710083
    8. '``' → logprob: -12.3582124710083
    9. '   ' → logprob: -12.4832124710083
    10. '
' → logprob: -13.1082124710083

Token 1389: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.00949279498308897
    2. 'ity' → logprob: -5.384492874145508
    3. 'é' → logprob: -6.009492874145508
    4. 'Priority' → logprob: -7.759492874145508
    5. 'itié' → logprob: -7.759492874145508
    6. 'rité' → logprob: -8.384492874145508
    7. '#' → logprob: -8.384492874145508
    8. 'Prior' → logprob: -8.634492874145508
    9. '   ' → logprob: -8.884492874145508
    10. 'it' → logprob: -9.009492874145508

Token 1390: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019369127228856087
    2. ':' → logprob: -4.519369125366211
    3. ':
' → logprob: -5.519369125366211
    4. '       ' → logprob: -5.644369125366211
    5. '```' → logprob: -8.144369125366211
    6. 'return' → logprob: -8.394369125366211
    7. '(' → logprob: -10.144369125366211
    8. ' (' → logprob: -10.269369125366211
    9. ':return' → logprob: -10.644369125366211
    10. '          ' → logprob: -10.644369125366211

Token 1391: ' donner' (ID: 32394)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03219185397028923
    2. '(res' → logprob: -4.157191753387451
    3. '(return' → logprob: -4.657191753387451
    4. ' return' → logprob: -5.157191753387451
    5. '   ' → logprob: -7.907191753387451
    6. '       ' → logprob: -8.65719223022461
    7. '#' → logprob: -8.90719223022461
    8. ' (' → logprob: -9.78219223022461
    9. 'res' → logprob: -11.40719223022461
    10. '
' → logprob: -11.53219223022461

Token 1392: ' au' (ID: 2791)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0002655079588294029
    2. ' (' → logprob: -8.250265121459961
    3. '(' → logprob: -12.875265121459961
    4. '(return' → logprob: -14.125265121459961
    5. '(result' → logprob: -14.625265121459961
    6. '   ' → logprob: -15.500265121459961
    7. '(ret' → logprob: -15.875265121459961
    8. '(re' → logprob: -17.00026512145996
    9. '(rest' → logprob: -17.12526512145996
    10. '=res' → logprob: -17.25026512145996

Token 1393: ' groupe' (ID: 29494)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.5829475522041321
    2. 'rg' → logprob: -1.4579474925994873
    3. 'res' → logprob: -1.5829474925994873
    4. '(r' → logprob: -6.207947731018066
    5. ' (' → logprob: -7.207947731018066
    6. 'return' → logprob: -7.332947731018066
    7. ' res' → logprob: -9.082947731018066
    8. ' rg' → logprob: -9.832947731018066
    9. '(' → logprob: -10.332947731018066
    10. 'r' → logprob: -11.582947731018066

Token 1394: ' RG' (ID: 74468)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.2522568702697754
    2. '(r' → logprob: -1.5022568702697754
    3. ' rg' → logprob: -8.752256393432617
    4. '(res' → logprob: -9.127256393432617
    5. 'rgb' → logprob: -10.752256393432617
    6. '(' → logprob: -11.377256393432617
    7. 'res' → logprob: -11.377256393432617
    8. ' (' → logprob: -11.502256393432617
    9. '_rg' → logprob: -13.127256393432617
    10. '(rgb' → logprob: -13.377256393432617

Token 1395: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08983226865530014
    2. 'return' → logprob: -3.089832305908203
    3. ':
' → logprob: -4.339832305908203
    4. ':' → logprob: -4.964832305908203
    5. ' return' → logprob: -5.339832305908203
    6. '```' → logprob: -5.464832305908203
    7. '{
' → logprob: -5.589832305908203
    8. '       ' → logprob: -5.589832305908203
    9. ':return' → logprob: -6.964832305908203
    10. ',' → logprob: -7.214832305908203

Token 1396: 'dev' (ID: 6751)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00028493450372479856
    2. ' return' → logprob: -8.500285148620605
    3. '           ' → logprob: -10.250285148620605
    4. '(res' → logprob: -11.375285148620605
    5. '       ' → logprob: -11.500285148620605
    6. 'res' → logprob: -11.500285148620605
    7. '(return' → logprob: -11.500285148620605
    8. '```' → logprob: -12.875285148620605
    9. '   ' → logprob: -14.500285148620605
    10. '``' → logprob: -15.750285148620605

Token 1397: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.28398123383522034
    2. 'ent' → logprob: -1.408981204032898
    3. '```' → logprob: -7.0339813232421875
    4. 'enant' → logprob: -7.5339813232421875
    5. 'ant' → logprob: -7.7839813232421875
    6. '   ' → logprob: -7.7839813232421875
    7. 'end' → logprob: -8.908981323242188
    8. 'ect' → logprob: -9.408981323242188
    9. 'ont' → logprob: -10.283981323242188
    10. '``' → logprob: -10.408981323242188

Token 1398: ' RGB' (ID: 46144)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.6938495635986328
    2. 'res' → logprob: -1.4438495635986328
    3. '(res' → logprob: -2.568849563598633
    4. 'rgb' → logprob: -2.818849563598633
    5. '(r' → logprob: -3.193849563598633
    6. ' rg' → logprob: -3.318849563598633
    7. ' res' → logprob: -3.568849563598633
    8. ' (' → logprob: -4.068849563598633
    9. '(rgb' → logprob: -5.818849563598633
    10. ' rgb' → logprob: -6.193849563598633

Token 1399: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03689172863960266
    2. ',' → logprob: -4.661891937255859
    3. '):
' → logprob: -4.661891937255859
    4. '       ' → logprob: -4.786891937255859
    5. 'return' → logprob: -5.911891937255859
    6. ')' → logprob: -5.911891937255859
    7. '```' → logprob: -5.911891937255859
    8. ')
' → logprob: -8.03689193725586
    9. ' return' → logprob: -8.91189193725586
    10. '               ' → logprob: -9.03689193725586

Token 1400: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020859619602560997
    2. '           ' → logprob: -4.270859718322754
    3. 'return' → logprob: -5.020859718322754
    4. '```' → logprob: -10.270859718322754
    5. ' return' → logprob: -10.645859718322754
    6. '               ' → logprob: -11.270859718322754
    7. '   ' → logprob: -13.020859718322754
    8. ':return' → logprob: -14.770859718322754
    9. ':' → logprob: -15.395859718322754
    10. '``' → logprob: -15.395859718322754

Token 1401: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00035369666875340044
    2. ' return' → logprob: -8.000353813171387
    3. '       ' → logprob: -11.000353813171387
    4. '           ' → logprob: -13.500353813171387
    5. '   ' → logprob: -16.87535285949707
    6. '(return' → logprob: -17.00035285949707
    7. '	return' → logprob: -18.37535285949707
    8. '
' → logprob: -18.50035285949707
    9. '(' → logprob: -19.50035285949707
    10. ':return' → logprob: -19.62535285949707

Token 1402: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0007101670489646494
    2. ' (' → logprob: -7.2507100105285645
    3. 'res' → logprob: -15.625710487365723
    4. '(' → logprob: -17.750709533691406
    5. ' res' → logprob: -17.875709533691406
    6. '   ' → logprob: -17.875709533691406
    7. '(re' → logprob: -18.750709533691406
    8. '(result' → logprob: -19.000709533691406
    9. '(
' → logprob: -19.250709533691406
    10. '(r' → logprob: -19.375709533691406

Token 1403: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.048604849725961685
    2. '(res' → logprob: -3.048604965209961
    3. ' res' → logprob: -11.423604965209961
    4. ' (' → logprob: -12.923604965209961
    5. 'Mod' → logprob: -13.673604965209961
    6. 'Res' → logprob: -14.548604965209961
    7. '$res' → logprob: -14.548604965209961
    8. '   ' → logprob: -14.548604965209961
    9. ',res' → logprob: -15.173604965209961
    10. '	res' → logprob: -15.548604965209961

Token 1404: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31326404213905334
    2. '*' → logprob: -1.313264012336731
    3. '   ' → logprob: -14.313263893127441
    4. ' ' → logprob: -14.938263893127441
    5. ')' → logprob: -15.063263893127441
    6. '        ' → logprob: -15.438263893127441
    7. ' ' → logprob: -15.688263893127441
    8. '    ' → logprob: -15.688263893127441
    9. '*(' → logprob: -15.938263893127441
    10. '       ' → logprob: -16.188264846801758

Token 1405: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.02975199744105339
    2. ' rg' → logprob: -3.529752016067505
    3. '(r' → logprob: -14.404751777648926
    4. 'rgb' → logprob: -15.029751777648926
    5. 'r' → logprob: -15.154751777648926
    6. '(' → logprob: -16.154752731323242
    7. '_rg' → logprob: -16.529752731323242
    8. 'rig' → logprob: -17.904752731323242
    9. ' (' → logprob: -17.904752731323242
    10. 'rgba' → logprob: -18.154752731323242

Token 1406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012654215970542282
    2. ' ,' → logprob: -9.125126838684082
    3. ',z' → logprob: -11.625126838684082
    4. '           ' → logprob: -13.375126838684082
    5. '   ' → logprob: -13.375126838684082
    6. ' z' → logprob: -13.625126838684082
    7. '```' → logprob: -13.875126838684082
    8. '       ' → logprob: -14.125126838684082
    9. '`,' → logprob: -14.500126838684082
    10. 'z' → logprob: -15.125126838684082

Token 1407: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5759403705596924
    2. ' z' → logprob: -0.8259403705596924
    3. '(z' → logprob: -14.075940132141113
    4. '   ' → logprob: -17.07594108581543
    5. '	z' → logprob: -17.07594108581543
    6. '       ' → logprob: -17.57594108581543
    7. '```' → logprob: -18.45094108581543
    8. '    ' → logprob: -18.95094108581543
    9. '           ' → logprob: -19.45094108581543
    10. ' ' → logprob: -19.57594108581543

Token 1408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002387422136962414
    2. '-' → logprob: -6.377387523651123
    3. ' -' → logprob: -7.627387523651123
    4. ' ,' → logprob: -8.877387046813965
    5. '           ' → logprob: -10.377387046813965
    6. '       ' → logprob: -11.377387046813965
    7. ' rg' → logprob: -12.127387046813965
    8. '   ' → logprob: -12.877387046813965
    9. ',r' → logprob: -13.502387046813965
    10. '        ' → logprob: -14.002387046813965

Token 1409: ' r' (ID: 428)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2552964985370636
    2. 'r' → logprob: -1.5052964687347412
    3. ' z' → logprob: -5.88029670715332
    4. ' r' → logprob: -7.50529670715332
    5. '   ' → logprob: -11.50529670715332
    6. '       ' → logprob: -12.63029670715332
    7. '    ' → logprob: -13.88029670715332
    8. '     ' → logprob: -13.88029670715332
    9. '	z' → logprob: -14.75529670715332
    10. '           ' → logprob: -14.88029670715332

Token 1410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005538012366741896
    2. ' ,' → logprob: -5.880537986755371
    3. ' rg' → logprob: -6.755537986755371
    4. '-' → logprob: -7.505537986755371
    5. '   ' → logprob: -8.005537986755371
    6. 'rg' → logprob: -8.380537986755371
    7. '       ' → logprob: -8.630537986755371
    8. ' -' → logprob: -8.755537986755371
    9. '           ' → logprob: -10.380537986755371
    10. ',r' → logprob: -10.755537986755371

Token 1411: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.011053833179175854
    2. ' g' → logprob: -4.511054039001465
    3. '   ' → logprob: -12.261054039001465
    4. '    ' → logprob: -14.261054039001465
    5. '       ' → logprob: -15.636054039001465
    6. '     ' → logprob: -15.761054039001465
    7. '           ' → logprob: -15.886054039001465
    8. ' ' → logprob: -16.51105308532715
    9. '  ' → logprob: -16.63605308532715
    10. '	g' → logprob: -17.88605308532715

Token 1412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12053444981575012
    2. ' b' → logprob: -2.3705344200134277
    3. 'b' → logprob: -3.9955344200134277
    4. '   ' → logprob: -7.495534420013428
    5. '       ' → logprob: -7.745534420013428
    6. ' ,' → logprob: -7.870534420013428
    7. ',b' → logprob: -8.745534896850586
    8. ' rg' → logprob: -9.370534896850586
    9. '    ' → logprob: -10.995534896850586
    10. '```' → logprob: -10.995534896850586

Token 1413: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02975071594119072
    2. ' b' → logprob: -3.5297508239746094
    3. '   ' → logprob: -15.65475082397461
    4. '    ' → logprob: -16.90475082397461
    5. '       ' → logprob: -17.65475082397461
    6. ' ' → logprob: -18.15475082397461
    7. '	b' → logprob: -18.15475082397461
    8. 'B' → logprob: -19.02975082397461
    9. '  ' → logprob: -19.02975082397461
    10. '     ' → logprob: -19.15475082397461

Token 1414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002056523459032178
    2. '-' → logprob: -6.87705659866333
    3. ' ,' → logprob: -7.50205659866333
    4. ' -' → logprob: -7.75205659866333
    5. '       ' → logprob: -10.627056121826172
    6. '   ' → logprob: -12.002056121826172
    7. '           ' → logprob: -12.377056121826172
    8. '+' → logprob: -13.502056121826172
    9. ' rg' → logprob: -13.502056121826172
    10. '    ' → logprob: -14.377056121826172

Token 1415: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.00014966767048463225
    2. ' rg' → logprob: -9.000149726867676
    3. '0' → logprob: -11.625149726867676
    4. '   ' → logprob: -11.750149726867676
    5. '       ' → logprob: -12.500149726867676
    6. '     ' → logprob: -13.125149726867676
    7. '           ' → logprob: -13.625149726867676
    8. '    ' → logprob: -13.875149726867676
    9. '  ' → logprob: -14.750149726867676
    10. '      ' → logprob: -15.000149726867676

Token 1416: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01816023886203766
    2. '-' → logprob: -4.018160343170166
    3. ' ' → logprob: -11.768159866333008
    4. ',' → logprob: -14.143159866333008
    5. '   ' → logprob: -14.143159866333008
    6. '           ' → logprob: -14.768159866333008
    7. ' ' → logprob: -14.768159866333008
    8. '       ' → logprob: -16.518159866333008
    9. ' -
' → logprob: -16.518159866333008
    10. ')' → logprob: -16.643159866333008

Token 1417: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.000003814697266
    4. '
' → logprob: -18.750003814697266
    5. '<|end|>' → logprob: -19.250003814697266
    6. '```' → logprob: -19.500003814697266
    7. '           ' → logprob: -20.250003814697266
    8. '۱' → logprob: -20.750003814697266
    9. '0' → logprob: -21.125003814697266
    10. '       ' → logprob: -21.375003814697266

Token 1418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -19.125001907348633
    4. '
' → logprob: -19.750001907348633
    5. '0' → logprob: -20.000001907348633
    6. '<|end|>' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.375001907348633
    8. '-' → logprob: -20.875001907348633
    9. ',' → logprob: -21.250001907348633
    10. '۱' → logprob: -21.250001907348633

Token 1419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016218038217630237
    2. ' ,' → logprob: -8.750162124633789
    3. '           ' → logprob: -13.125162124633789
    4. ',
' → logprob: -14.500162124633789
    5. '       ' → logprob: -14.750162124633789
    6. ',g' → logprob: -15.500162124633789
    7. '```' → logprob: -16.62516212463379
    8. '   ' → logprob: -16.87516212463379
    9. '          ' → logprob: -17.00016212463379
    10. ')' → logprob: -17.00016212463379

Token 1420: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.023245826363563538
    2. ' gb' → logprob: -3.7732458114624023
    3. '	gb' → logprob: -16.14824676513672
    4. ' ' → logprob: -16.39824676513672
    5. '   ' → logprob: -16.52324676513672
    6. '       ' → logprob: -17.52324676513672
    7. '
' → logprob: -17.64824676513672
    8. '     ' → logprob: -17.64824676513672
    9. '.gb' → logprob: -18.39824676513672
    10. 'gc' → logprob: -18.89824676513672

Token 1421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023441045777872205
    2. ' ,' → logprob: -8.375234603881836
    3. '           ' → logprob: -13.375234603881836
    4. '       ' → logprob: -14.125234603881836
    5. ',
' → logprob: -14.125234603881836
    6. '```' → logprob: -15.125234603881836
    7. '   ' → logprob: -15.875234603881836
    8. ')' → logprob: -16.250234603881836
    9. ',b' → logprob: -16.375234603881836
    10. '        ' → logprob: -17.125234603881836

Token 1422: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.008614808320999146
    2. ' br' → logprob: -4.758615016937256
    3. '   ' → logprob: -16.133615493774414
    4. '	br' → logprob: -16.633615493774414
    5. '       ' → logprob: -17.508615493774414
    6. '(br' → logprob: -17.883615493774414
    7. 'b' → logprob: -18.133615493774414
    8. '    ' → logprob: -18.258615493774414
    9. ' ' → logprob: -18.383615493774414
    10. '  ' → logprob: -19.508615493774414

Token 1423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011526016751304269
    2. ')
' → logprob: -7.126152515411377
    3. '   ' → logprob: -8.251152992248535
    4. ' )' → logprob: -9.751152992248535
    5. '```' → logprob: -11.876152992248535
    6. ',' → logprob: -12.001152992248535
    7. '       ' → logprob: -12.376152992248535
    8. '+' → logprob: -12.501152992248535
    9. '  ' → logprob: -13.126152992248535
    10. ')`' → logprob: -13.626152992248535

Token 1424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014739240519702435
    2. '```' → logprob: -4.264739036560059
    3. '(' → logprob: -8.389739036560059
    4. '``' → logprob: -9.014739036560059
    5. '   ' → logprob: -9.389739036560059
    6. ')' → logprob: -10.264739036560059
    7. ',' → logprob: -10.389739036560059
    8. '           ' → logprob: -10.764739036560059
    9. '               ' → logprob: -11.264739036560059
    10. '[' → logprob: -11.639739036560059

Token 1425: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.014437785372138023
    2. 'else' → logprob: -4.264437675476074
    3. '       ' → logprob: -8.389437675476074
    4. ' elif' → logprob: -10.139437675476074
    5. '   ' → logprob: -12.764437675476074
    6. '```' → logprob: -13.639437675476074
    7. '           ' → logprob: -13.889437675476074
    8. '(' → logprob: -14.014437675476074
    9. ' else' → logprob: -14.139437675476074
    10. 'elseif' → logprob: -15.014437675476074

Token 1426: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16152068972587585
    2. 'g' → logprob: -1.9115207195281982
    3. 'rg' → logprob: -6.661520481109619
    4. 'rb' → logprob: -12.161520957946777
    5. 'rgb' → logprob: -12.161520957946777
    6. 'gr' → logprob: -13.161520957946777
    7. 'gb' → logprob: -13.161520957946777
    8. ' r' → logprob: -14.286520957946777
    9. 'b' → logprob: -14.536520957946777
    10. '   ' → logprob: -14.786520957946777

Token 1427: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055165138095617294
    2. ':
' → logprob: -3.0551650524139404
    3. '       ' → logprob: -6.1801652908325195
    4. '           ' → logprob: -6.1801652908325195
    5. 'if' → logprob: -7.4301652908325195
    6. '==' → logprob: -7.6801652908325195
    7. '```' → logprob: -8.05516529083252
    8. ',' → logprob: -8.68016529083252
    9. '<|end|>' → logprob: -8.93016529083252
    10. 'elif' → logprob: -9.30516529083252

Token 1428: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04761679470539093
    2. '           ' → logprob: -3.297616720199585
    3. '#' → logprob: -5.672616958618164
    4. '(' → logprob: -5.797616958618164
    5. '```' → logprob: -6.047616958618164
    6. '{
' → logprob: -8.797616958618164
    7. '               ' → logprob: -9.172616958618164
    8. ':' → logprob: -9.422616958618164
    9. 'if' → logprob: -9.922616958618164
    10. ' ' → logprob: -10.047616958618164

Token 1429: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.0096211489289999
    2. '           ' → logprob: -5.0096211433410645
    3. '       ' → logprob: -5.8846211433410645
    4. '```' → logprob: -10.009621620178223
    5. 'return' → logprob: -10.134621620178223
    6. ' #' → logprob: -10.509621620178223
    7. '(' → logprob: -12.884621620178223
    8. '               ' → logprob: -13.259621620178223
    9. ' return' → logprob: -14.009621620178223
    10. '   ' → logprob: -14.634621620178223

Token 1430: ' Ensuite' (ID: 113884)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3576308488845825
    2. '       ' → logprob: -1.7326308488845825
    3. '#' → logprob: -2.232630729675293
    4. '           ' → logprob: -4.232630729675293
    5. '```' → logprob: -7.232630729675293
    6. ' return' → logprob: -7.482630729675293
    7. 'b' → logprob: -7.607630729675293
    8. 'r' → logprob: -8.857630729675293
    9. 'res' → logprob: -10.232630729675293
    10. '(' → logprob: -10.607630729675293

Token 1431: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14876531064510345
    2. '(res' → logprob: -2.8987653255462646
    3. ' (' → logprob: -3.2737653255462646
    4. '       ' → logprob: -4.5237650871276855
    5. 'return' → logprob: -4.5237650871276855
    6. '(return' → logprob: -4.6487650871276855
    7. ' return' → logprob: -4.8987650871276855
    8. '#' → logprob: -5.2737650871276855
    9. '```' → logprob: -7.8987650871276855
    10. '(' → logprob: -8.148765563964844

Token 1432: ' à' (ID: 1221)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.021012088283896446
    2. 'res' → logprob: -4.896012306213379
    3. '(res' → logprob: -5.021012306213379
    4. ' return' → logprob: -5.146012306213379
    5. '(return' → logprob: -7.771012306213379
    6. ' res' → logprob: -7.896012306213379
    7. ' (' → logprob: -10.021012306213379
    8. '       ' → logprob: -10.396012306213379
    9. '```' → logprob: -11.646012306213379
    10. '   ' → logprob: -12.771012306213379

Token 1433: ' une' (ID: 2463)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.08444065600633621
    2. '(res' → logprob: -2.5844407081604004
    3. ' res' → logprob: -5.2094407081604
    4. 'r' → logprob: -10.459440231323242
    5. ' (' → logprob: -10.709440231323242
    6. '(r' → logprob: -11.459440231323242
    7. 'z' → logprob: -12.709440231323242
    8. '(z' → logprob: -13.459440231323242
    9. 'return' → logprob: -14.209440231323242
    10. 'b' → logprob: -14.209440231323242

Token 1434: ' personne' (ID: 26304)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.014714809134602547
    2. 'r' → logprob: -4.88971471786499
    3. '(res' → logprob: -5.01471471786499
    4. '(' → logprob: -8.764715194702148
    5. 'res' → logprob: -9.639715194702148
    6. ' (' → logprob: -9.764715194702148
    7. '(return' → logprob: -10.139715194702148
    8. 'return' → logprob: -10.639715194702148
    9. '(result' → logprob: -10.639715194702148
    10. ' r' → logprob: -10.639715194702148

Token 1435: ' avec' (ID: 3937)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.084620475769043
    2. ' (' → logprob: -1.334620475769043
    3. ',' → logprob: -1.709620475769043
    4. 'return' → logprob: -2.959620475769043
    5. '(return' → logprob: -2.959620475769043
    6. '       ' → logprob: -3.084620475769043
    7. ' return' → logprob: -3.834620475769043
    8. '(res' → logprob: -4.209620475769043
    9. '(s' → logprob: -4.834620475769043
    10. '```' → logprob: -4.959620475769043

Token 1436: ' une' (ID: 2463)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.23350577056407928
    2. ' g' → logprob: -1.6085057258605957
    3. 'r' → logprob: -5.483505725860596
    4. 'b' → logprob: -6.483505725860596
    5. ' r' → logprob: -6.608505725860596
    6. ' b' → logprob: -6.983505725860596
    7. '   ' → logprob: -9.733506202697754
    8. ' ' → logprob: -11.733506202697754
    9. 'a' → logprob: -12.233506202697754
    10. ' a' → logprob: -12.358506202697754

Token 1437: ' rouge' (ID: 56930)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5414725542068481
    2. 'r' → logprob: -0.9164725542068481
    3. ' g' → logprob: -4.666472434997559
    4. ' r' → logprob: -4.916472434997559
    5. 'b' → logprob: -6.791472434997559
    6. 's' → logprob: -9.416472434997559
    7. ' b' → logprob: -9.541472434997559
    8. 'rg' → logprob: -9.791472434997559
    9. 'rb' → logprob: -10.666472434997559
    10. '```' → logprob: -10.791472434997559

Token 1438: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007720675319433212
    2. '           ' → logprob: -5.257720470428467
    3. ' (' → logprob: -7.507720470428467
    4. '(s' → logprob: -7.632720470428467
    5. '```' → logprob: -8.007720947265625
    6. '(' → logprob: -8.132720947265625
    7. ' ,' → logprob: -8.632720947265625
    8. ',s' → logprob: -8.632720947265625
    9. ',
' → logprob: -8.882720947265625
    10. '(return' → logprob: -10.007720947265625

Token 1439: 'dev' (ID: 6751)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26695993542671204
    2. 'res' → logprob: -1.7669599056243896
    3. ' return' → logprob: -3.6419599056243896
    4. ' res' → logprob: -4.016960144042969
    5. 'z' → logprob: -4.641960144042969
    6. 'r' → logprob: -5.266960144042969
    7. ' z' → logprob: -6.016960144042969
    8. '       ' → logprob: -7.266960144042969
    9. '```' → logprob: -7.266960144042969
    10. ' r' → logprob: -7.891960144042969

Token 1440: 'ient' (ID: 773)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9258081316947937
    2. '=' → logprob: -1.5508081912994385
    3. '(r' → logprob: -1.5508081912994385
    4. 'r' → logprob: -3.1758081912994385
    5. 'b' → logprob: -3.8008081912994385
    6. ' =' → logprob: -3.9258081912994385
    7. 'eturn' → logprob: -4.050807952880859
    8. '```' → logprob: -4.300807952880859
    9. '(return' → logprob: -4.800807952880859
    10. '(' → logprob: -5.175807952880859

Token 1441: ' BR' (ID: 21735)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08172488212585449
    2. ' r' → logprob: -3.0817248821258545
    3. 'rg' → logprob: -3.5817248821258545
    4. ' rg' → logprob: -6.456725120544434
    5. 'g' → logprob: -6.706725120544434
    6. '(r' → logprob: -6.831725120544434
    7. ' g' → logprob: -8.456725120544434
    8. 'b' → logprob: -8.706725120544434
    9. 'rgb' → logprob: -9.081725120544434
    10. 'rb' → logprob: -9.081725120544434

Token 1442: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1308245211839676
    2. '-' → logprob: -2.255824565887451
    3. ' -' → logprob: -4.630824565887451
    4. '           ' → logprob: -5.130824565887451
    5. '```' → logprob: -6.755824565887451
    6. ')' → logprob: -8.130824089050293
    7. ' ,' → logprob: -8.380824089050293
    8. '       ' → logprob: -9.130824089050293
    9. ',
' → logprob: -9.505824089050293
    10. '-,' → logprob: -9.630824089050293

Token 1443: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7214555740356445
    2. '```' → logprob: -1.5964555740356445
    3. 'return' → logprob: -1.8464555740356445
    4. ':' → logprob: -3.8464555740356445
    5. ' return' → logprob: -3.8464555740356445
    6. ',' → logprob: -3.8464555740356445
    7. ':return' → logprob: -3.9714555740356445
    8. '(return' → logprob: -4.0964555740356445
    9. '(' → logprob: -4.5964555740356445
    10. '   ' → logprob: -4.7214555740356445

Token 1444: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002264686394482851
    2. ' return' → logprob: -6.127264499664307
    3. '       ' → logprob: -9.752264976501465
    4. '(return' → logprob: -10.877264976501465
    5. '```' → logprob: -13.752264976501465
    6. 'res' → logprob: -14.627264976501465
    7. '{return' → logprob: -14.877264976501465
    8. '(res' → logprob: -15.877264976501465
    9. ':return' → logprob: -15.877264976501465
    10. '	return' → logprob: -16.00226402282715

Token 1445: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0005626845522783697
    2. ' (' → logprob: -7.50056266784668
    3. '(return' → logprob: -11.87556266784668
    4. '(' → logprob: -13.87556266784668
    5. '(result' → logprob: -14.50056266784668
    6. '   ' → logprob: -15.12556266784668
    7. '(re' → logprob: -15.25056266784668
    8. '(rest' → logprob: -15.37556266784668
    9. '(r' → logprob: -16.25056266784668
    10. '(ret' → logprob: -16.37556266784668

Token 1446: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0001097417771234177
    2. '(res' → logprob: -9.125109672546387
    3. ' res' → logprob: -14.625109672546387
    4. 'return' → logprob: -15.500109672546387
    5. 'rest' → logprob: -16.125110626220703
    6. '$res' → logprob: -17.875110626220703
    7. 'rez' → logprob: -18.000110626220703
    8. 'r' → logprob: -18.000110626220703
    9. 'ret' → logprob: -18.625110626220703
    10. '```' → logprob: -18.625110626220703

Token 1447: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.428879052400589
    2. '*' → logprob: -1.0538790225982666
    3. ',' → logprob: -8.928878784179688
    4. '*,' → logprob: -11.053878784179688
    5. '*r' → logprob: -11.178878784179688
    6. '*(' → logprob: -12.178878784179688
    7. '       ' → logprob: -13.428878784179688
    8. '*b' → logprob: -13.428878784179688
    9. '*s' → logprob: -13.553878784179688
    10. '   ' → logprob: -13.553878784179688

Token 1448: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0017119476106017828
    2. ' r' → logprob: -6.376711845397949
    3. 'b' → logprob: -11.87671184539795
    4. '(r' → logprob: -13.50171184539795
    5. '   ' → logprob: -14.25171184539795
    6. ' ' → logprob: -15.75171184539795
    7. 'br' → logprob: -16.314212799072266
    8. '  ' → logprob: -16.689212799072266
    9. '```' → logprob: -16.689212799072266
    10. '	r' → logprob: -16.689212799072266

Token 1449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.670925358776003e-05
    2. ' ,' → logprob: -10.375066757202148
    3. ',z' → logprob: -11.000066757202148
    4. ',s' → logprob: -11.750066757202148
    5. ' z' → logprob: -13.375066757202148
    6. '`,' → logprob: -13.500066757202148
    7. '',' → logprob: -13.625066757202148
    8. ' s' → logprob: -13.875066757202148
    9. '",' → logprob: -14.125066757202148
    10. '```' → logprob: -14.250066757202148

Token 1450: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.0005532711511477828
    2. 'z' → logprob: -7.500553131103516
    3. '```' → logprob: -15.625553131103516
    4. '	z' → logprob: -16.875553131103516
    5. '(z' → logprob: -18.250553131103516
    6. 's' → logprob: -18.625553131103516
    7. ',z' → logprob: -18.625553131103516
    8. ' ' → logprob: -19.000553131103516
    9. ''z' → logprob: -19.375553131103516
    10. '=z' → logprob: -19.625553131103516

Token 1451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.387458365177736e-05
    2. ' ,' → logprob: -9.750083923339844
    3. ',r' → logprob: -10.750083923339844
    4. '   ' → logprob: -13.375083923339844
    5. '           ' → logprob: -14.375083923339844
    6. 'r' → logprob: -14.625083923339844
    7. '       ' → logprob: -15.000083923339844
    8. '<|end|>' → logprob: -15.500083923339844
    9. '<|end|>' → logprob: -15.750083923339844
    10. ' r' → logprob: -16.000083923339844

Token 1452: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002613358374219388
    2. ' r' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.000261306762695
    4. '     ' → logprob: -17.875261306762695
    5. '0' → logprob: -18.000261306762695
    6. ' ' → logprob: -18.250261306762695
    7. '    ' → logprob: -18.250261306762695
    8. '       ' → logprob: -18.375261306762695
    9. '```' → logprob: -18.625261306762695
    10. '  ' → logprob: -20.000261306762695

Token 1453: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11476515978574753
    2. '-' → logprob: -2.364765167236328
    3. ',' → logprob: -4.239765167236328
    4. ' ,' → logprob: -11.114765167236328
    5. '   ' → logprob: -12.114765167236328
    6. ' ' → logprob: -12.489765167236328
    7. '       ' → logprob: -13.114765167236328
    8. ')' → logprob: -13.364765167236328
    9. 'r' → logprob: -13.364765167236328
    10. '```' → logprob: -13.489765167236328

Token 1454: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002477677771821618
    2. ' ' → logprob: -6.002477645874023
    3. '0' → logprob: -13.127477645874023
    4. ',' → logprob: -17.377477645874023
    5. '[' → logprob: -17.377477645874023
    6. '```' → logprob: -17.627477645874023
    7. '<|end|>' → logprob: -18.627477645874023
    8. '   ' → logprob: -18.627477645874023
    9. ' ' → logprob: -18.752477645874023
    10. '
' → logprob: -19.752477645874023

Token 1455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '0' → logprob: -16.625123977661133
    4. '
' → logprob: -17.625123977661133
    5. '```' → logprob: -17.875123977661133
    6. '   ' → logprob: -19.687623977661133
    7. '[' → logprob: -20.062623977661133
    8. ',' → logprob: -20.187623977661133
    9. '۱' → logprob: -20.562623977661133
    10. '<|end|>' → logprob: -20.937623977661133

Token 1456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035369666875340044
    2. ' ,' → logprob: -8.250353813171387
    3. ' g' → logprob: -9.875353813171387
    4. ',g' → logprob: -10.250353813171387
    5. 'g' → logprob: -13.000353813171387
    6. '```' → logprob: -13.750353813171387
    7. '`,' → logprob: -14.500353813171387
    8. ' s' → logprob: -14.750353813171387
    9. ')' → logprob: -15.125353813171387
    10. '           ' → logprob: -15.125353813171387

Token 1457: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.014163628220558167
    2. ' g' → logprob: -4.264163494110107
    3. '<|end|>' → logprob: -16.764163970947266
    4. '```' → logprob: -17.014163970947266
    5. ' ' → logprob: -18.889163970947266
    6. '   ' → logprob: -19.264163970947266
    7. ' ' → logprob: -19.514163970947266
    8. '	g' → logprob: -19.889163970947266
    9. 's' → logprob: -20.014163970947266
    10. '    ' → logprob: -20.014163970947266

Token 1458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000636904442217201
    2. ' ,' → logprob: -7.375637054443359
    3. ',b' → logprob: -11.87563705444336
    4. ' b' → logprob: -13.12563705444336
    5. 'b' → logprob: -14.50063705444336
    6. '```' → logprob: -14.75063705444336
    7. '       ' → logprob: -15.62563705444336
    8. '   ' → logprob: -16.62563705444336
    9. ',g' → logprob: -16.75063705444336
    10. ',
' → logprob: -17.12563705444336

Token 1459: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038042064756155014
    2. ' b' → logprob: -3.2880420684814453
    3. '```' → logprob: -14.913042068481445
    4. '   ' → logprob: -16.038042068481445
    5. ' ' → logprob: -16.163042068481445
    6. '       ' → logprob: -17.538042068481445
    7. '    ' → logprob: -18.038042068481445
    8. '     ' → logprob: -18.350542068481445
    9. ' ' → logprob: -18.350542068481445
    10. 'B' → logprob: -18.413042068481445

Token 1460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008123667794279754
    2. ' ,' → logprob: -7.125812530517578
    3. '       ' → logprob: -12.750812530517578
    4. '```' → logprob: -13.625812530517578
    5. '           ' → logprob: -13.875812530517578
    6. ',r' → logprob: -14.125812530517578
    7. ',b' → logprob: -15.250812530517578
    8. ',
' → logprob: -15.250812530517578
    9. ',g' → logprob: -15.375812530517578
    10. '   ' → logprob: -15.625812530517578

Token 1461: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.011053833179175854
    2. ' rg' → logprob: -4.511054039001465
    3. '0' → logprob: -12.386054039001465
    4. 'rgb' → logprob: -14.511054039001465
    5. '   ' → logprob: -15.136054039001465
    6. '     ' → logprob: -15.261054039001465
    7. '       ' → logprob: -15.511054039001465
    8. ' ' → logprob: -16.13605308532715
    9. '           ' → logprob: -16.13605308532715
    10. '    ' → logprob: -16.26105308532715

Token 1462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007133854669518769
    2. ' ,' → logprob: -7.250713348388672
    3. ',
' → logprob: -13.625713348388672
    4. '       ' → logprob: -14.500713348388672
    5. '   ' → logprob: -14.625713348388672
    6. '+' → logprob: -14.625713348388672
    7. '```' → logprob: -15.750713348388672
    8. '+,' → logprob: -16.000713348388672
    9. '           ' → logprob: -16.625713348388672
    10. ',g' → logprob: -16.875713348388672

Token 1463: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.005240275990217924
    2. ' gb' → logprob: -5.255240440368652
    3. 'rg' → logprob: -12.630240440368652
    4. ' ' → logprob: -14.130240440368652
    5. '
' → logprob: -14.505240440368652
    6. 'b' → logprob: -15.005240440368652
    7. '	gb' → logprob: -15.005240440368652
    8. 'g' → logprob: -15.255240440368652
    9. 'rgb' → logprob: -15.505240440368652
    10. 'rb' → logprob: -15.505240440368652

Token 1464: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0180933475494385
    2. ',' → logprob: -1.1430933475494385
    3. ' +' → logprob: -1.1430933475494385
    4. ' ,' → logprob: -7.018093109130859
    5. '+,' → logprob: -9.26809310913086
    6. '           ' → logprob: -10.64309310913086
    7. '       ' → logprob: -11.01809310913086
    8. '```' → logprob: -12.01809310913086
    9. '   ' → logprob: -12.76809310913086
    10. ',
' → logprob: -13.14309310913086

Token 1465: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.018152866512537003
    2. ' br' → logprob: -4.018152713775635
    3. 'b' → logprob: -13.643153190612793
    4. '   ' → logprob: -14.018153190612793
    5. '(br' → logprob: -14.893153190612793
    6. '	br' → logprob: -15.518153190612793
    7. '  ' → logprob: -16.143152236938477
    8. ' ' → logprob: -16.268152236938477
    9. '    ' → logprob: -16.893152236938477
    10. '       ' → logprob: -17.393152236938477

Token 1466: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759414434432983
    2. ' +' → logprob: -0.8259414434432983
    3. '       ' → logprob: -13.82594108581543
    4. ' ' → logprob: -15.07594108581543
    5. '   ' → logprob: -15.95094108581543
    6. ')' → logprob: -16.20094108581543
    7. '+
' → logprob: -16.32594108581543
    8. '```' → logprob: -16.45094108581543
    9. '           ' → logprob: -16.82594108581543
    10. '+)' → logprob: -16.95094108581543

Token 1467: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012535012501757592
    2. ' ' → logprob: -9.00012493133545
    3. '0' → logprob: -13.50012493133545
    4. '+' → logprob: -14.62512493133545
    5. '   ' → logprob: -15.75012493133545
    6. ' +' → logprob: -17.625125885009766
    7. '
' → logprob: -18.500125885009766
    8. ')' → logprob: -18.625125885009766
    9. '```' → logprob: -18.625125885009766
    10. '  ' → logprob: -18.875125885009766

Token 1468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '0' → logprob: -16.000003814697266
    4. '+' → logprob: -16.750003814697266
    5. '-' → logprob: -16.875003814697266
    6. '
' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.625003814697266
    8. '```' → logprob: -18.375003814697266
    9. '(' → logprob: -18.750003814697266
    10. '１' → logprob: -19.062503814697266

Token 1469: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01038452796638012
    2. ')
' → logprob: -4.635384559631348
    3. '       ' → logprob: -7.510384559631348
    4. '   ' → logprob: -10.010384559631348
    5. '           ' → logprob: -11.135384559631348
    6. '```' → logprob: -12.010384559631348
    7. ' )' → logprob: -12.135384559631348
    8. ')`' → logprob: -12.885384559631348
    9. ')`
' → logprob: -13.135384559631348
    10. ')
' → logprob: -13.885384559631348

Token 1470: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.44782328605651855
    2. '       ' → logprob: -1.6978232860565186
    3. 'elif' → logprob: -2.1978232860565186
    4. '```' → logprob: -3.3228232860565186
    5. ' else' → logprob: -3.5728232860565186
    6. ' elif' → logprob: -6.447823524475098
    7. '<|end|>' → logprob: -8.197823524475098
    8. ')' → logprob: -8.447823524475098
    9. '(' → logprob: -9.072823524475098
    10. '[' → logprob: -9.197823524475098

Token 1471: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.15628714859485626
    2. 'else' → logprob: -2.03128719329834
    3. '       ' → logprob: -4.40628719329834
    4. ' elif' → logprob: -7.03128719329834
    5. ' else' → logprob: -8.03128719329834
    6. '```' → logprob: -9.90628719329834
    7. '(' → logprob: -10.65628719329834
    8. '           ' → logprob: -11.40628719329834
    9. '[' → logprob: -12.15628719329834
    10. '	elif' → logprob: -12.53128719329834

Token 1472: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0046218992210924625
    2. ' g' → logprob: -5.379621982574463
    3. 'b' → logprob: -13.629621505737305
    4. '   ' → logprob: -15.504621505737305
    5. ' ' → logprob: -16.129621505737305
    6. '	g' → logprob: -16.754621505737305
    7. ' b' → logprob: -16.879621505737305
    8. '```' → logprob: -17.504621505737305
    9. '
' → logprob: -17.879621505737305
    10. '  ' → logprob: -18.629621505737305

Token 1473: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8573487997055054
    2. ',' → logprob: -1.3573487997055054
    3. ':
' → logprob: -1.4823487997055054
    4. '       ' → logprob: -3.482348918914795
    5. '[' → logprob: -4.107348918914795
    6. '           ' → logprob: -4.357348918914795
    7. '```' → logprob: -4.857348918914795
    8. '==' → logprob: -4.982348918914795
    9. '   ' → logprob: -5.982348918914795
    10. '+' → logprob: -6.482348918914795

Token 1474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9348057508468628
    2. '```' → logprob: -1.0598057508468628
    3. '       ' → logprob: -1.5598057508468628
    4. '        ' → logprob: -4.434805870056152
    5. '(' → logprob: -5.059805870056152
    6. ':' → logprob: -5.184805870056152
    7. '`' → logprob: -5.309805870056152
    8. ' (' → logprob: -5.684805870056152
    9. '``' → logprob: -5.809805870056152
    10. '          ' → logprob: -6.059805870056152

Token 1475: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8215416669845581
    2. '```' → logprob: -1.446541666984558
    3. '(' → logprob: -2.0715417861938477
    4. '       ' → logprob: -2.3215417861938477
    5. ' return' → logprob: -3.4465417861938477
    6. '(return' → logprob: -3.5715417861938477
    7. '#' (adapté à ' #') → logprob: -4.321541786193848
    8. '``' → logprob: -4.571541786193848
    9. ' (' → logprob: -4.821541786193848
    10. '           ' → logprob: -6.196541786193848

Token 1476: ' Ensuite' (ID: 113884)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00030936390976421535
    2. ' return' → logprob: -8.875308990478516
    3. '       ' → logprob: -9.000308990478516
    4. '           ' → logprob: -10.625308990478516
    5. '```' → logprob: -11.375308990478516
    6. '(return' → logprob: -12.250308990478516
    7. 'res' → logprob: -12.375308990478516
    8. '
' → logprob: -15.250308990478516
    9. '``' → logprob: -15.625308990478516
    10. '(' → logprob: -15.750308990478516

Token 1477: ' :' (ID: 712)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3925568163394928
    2. '(res' → logprob: -1.1425567865371704
    3. '(return' → logprob: -6.017556667327881
    4. '           ' → logprob: -7.517556667327881
    5. '   ' → logprob: -7.642556667327881
    6. '(s' → logprob: -7.642556667327881
    7. 'return' → logprob: -7.892556667327881
    8. '(
' → logprob: -8.142557144165039
    9. '```' → logprob: -8.142557144165039
    10. '(' → logprob: -8.267557144165039

Token 1478: ' à' (ID: 1221)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.31696510314941406
    2. '(res' → logprob: -1.316965103149414
    3. ' res' → logprob: -6.066965103149414
    4. 'return' → logprob: -6.691965103149414
    5. ' (' → logprob: -9.816965103149414
    6. '   ' → logprob: -10.191965103149414
    7. '```' → logprob: -11.066965103149414
    8. '       ' → logprob: -11.816965103149414
    9. '(return' → logprob: -12.191965103149414
    10. ' return' → logprob: -12.566965103149414

Token 1479: ' une' (ID: 2463)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7681078314781189
    2. '(s' → logprob: -0.8931078314781189
    3. 's' → logprob: -3.1431078910827637
    4. '(z' → logprob: -3.7681078910827637
    5. '(g' → logprob: -4.143107891082764
    6. ' g' → logprob: -4.268107891082764
    7. 'gb' → logprob: -4.768107891082764
    8. ' (' → logprob: -5.268107891082764
    9. '(' → logprob: -5.268107891082764
    10. 'b' → logprob: -5.268107891082764

Token 1480: ' personne' (ID: 26304)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.122174933552742
    2. 'res' → logprob: -2.2471749782562256
    3. '(s' → logprob: -4.9971747398376465
    4. 's' → logprob: -6.3721747398376465
    5. '```' → logprob: -8.622175216674805
    6. '(result' → logprob: -8.747175216674805
    7. 'return' → logprob: -9.247175216674805
    8. ' (' → logprob: -9.497175216674805
    9. '(rep' → logprob: -10.122175216674805
    10. 'def' → logprob: -10.622175216674805

Token 1481: ' avec' (ID: 3937)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.12261594086885452
    2. ' with' → logprob: -2.4976160526275635
    3. ',' → logprob: -3.9976160526275635
    4. ' avec' → logprob: -5.247615814208984
    5. '```' → logprob: -5.747615814208984
    6. '+' → logprob: -5.872615814208984
    7. '           ' → logprob: -6.622615814208984
    8. 'avec' → logprob: -7.497615814208984
    9. '       ' → logprob: -7.747615814208984
    10. ' +' → logprob: -8.997615814208984

Token 1482: ' une' (ID: 2463)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.28348755836486816
    2. ' g' → logprob: -1.4084875583648682
    3. ' b' → logprob: -6.783487319946289
    4. 'b' → logprob: -6.908487319946289
    5. ' s' → logprob: -9.783487319946289
    6. '   ' → logprob: -10.408487319946289
    7. 'gb' → logprob: -10.408487319946289
    8. 's' → logprob: -10.533487319946289
    9. '```' → logprob: -11.033487319946289
    10. '(g' → logprob: -11.158487319946289

Token 1483: ' verte' (ID: 37130)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.007681865710765123
    2. ' g' → logprob: -4.882681846618652
    3. '```' → logprob: -10.507681846618652
    4. 'b' → logprob: -10.757681846618652
    5. 'green' → logprob: -11.132681846618652
    6. '1' → logprob: -12.007681846618652
    7. ' green' → logprob: -13.882681846618652
    8. '
' → logprob: -13.882681846618652
    9. '(g' → logprob: -14.007681846618652
    10. ' b' → logprob: -14.132681846618652

Token 1484: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7901565432548523
    2. ':
' → logprob: -1.665156602859497
    3. '           ' → logprob: -1.915156602859497
    4. '```' → logprob: -2.290156602859497
    5. ',' → logprob: -2.665156602859497
    6. ':' → logprob: -3.665156602859497
    7. ':return' → logprob: -5.415156364440918
    8. 'return' → logprob: -5.790156364440918
    9. '[' → logprob: -6.290156364440918
    10. '``' → logprob: -7.165156364440918

Token 1485: 'dev' (ID: 6751)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.022873401641845703
    2. 'res' → logprob: -3.8978734016418457
    3. ' return' → logprob: -6.147873401641846
    4. '(res' → logprob: -9.897872924804688
    5. '```' → logprob: -9.897872924804688
    6. '(return' → logprob: -10.147872924804688
    7. ' res' → logprob: -10.647872924804688
    8. '       ' → logprob: -11.647872924804688
    9. '``' → logprob: -12.147872924804688
    10. '
' → logprob: -12.647872924804688

Token 1486: 'ient' (ID: 773)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0246083736419678
    2. ' b' → logprob: -1.1496083736419678
    3. '=' → logprob: -1.7746083736419678
    4. ' =' → logprob: -2.8996083736419678
    5. 'return' → logprob: -3.2746083736419678
    6. ' return' → logprob: -3.3996083736419678
    7. '```' → logprob: -4.774608612060547
    8. 'g' → logprob: -5.649608612060547
    9. 'f' → logprob: -5.649608612060547
    10. '   ' → logprob: -6.024608612060547

Token 1487: ' GB' (ID: 23280)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.833088219165802
    2. 'gb' → logprob: -1.7080881595611572
    3. 'res' → logprob: -1.7080881595611572
    4. 'g' → logprob: -2.3330881595611572
    5. ' res' → logprob: -3.0830881595611572
    6. ' (' → logprob: -3.0830881595611572
    7. ' g' → logprob: -4.958088397979736
    8. ' gb' → logprob: -5.083088397979736
    9. 'b' → logprob: -8.958087921142578
    10. '(g' → logprob: -9.083087921142578

Token 1488: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.819878101348877
    2. ',' → logprob: -0.944878101348877
    3. ')' → logprob: -2.069878101348877
    4. '```' → logprob: -3.819878101348877
    5. '):
' → logprob: -4.444878101348877
    6. ',
' → logprob: -5.694878101348877
    7. '       ' → logprob: -5.944878101348877
    8. ')
' → logprob: -6.569878101348877
    9. ' ,' → logprob: -7.069878101348877
    10. '*' → logprob: -8.069877624511719

Token 1489: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4160294532775879
    2. '(' → logprob: -2.416029453277588
    3. ' return' → logprob: -2.416029453277588
    4. 'return' → logprob: -2.791029453277588
    5. '```' → logprob: -3.041029453277588
    6. ' (' → logprob: -4.166029453277588
    7. '[' → logprob: -5.166029453277588
    8. '(
' → logprob: -5.166029453277588
    9. '(return' → logprob: -5.166029453277588
    10. '``' → logprob: -5.291029453277588

Token 1490: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015884159365668893
    2. ' return' → logprob: -6.501588344573975
    3. '       ' → logprob: -9.376588821411133
    4. '```' → logprob: -13.876588821411133
    5. '(return' → logprob: -15.376588821411133
    6. '``' → logprob: -16.626588821411133
    7. '(' → logprob: -17.251588821411133
    8. '
' → logprob: -17.501588821411133
    9. '	return' → logprob: -17.876588821411133
    10. '           ' → logprob: -17.876588821411133

Token 1491: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.5760567784309387
    2. ' (' → logprob: -0.8260567784309387
    3. '(' → logprob: -9.326056480407715
    4. '(return' → logprob: -11.576056480407715
    5. '(
' → logprob: -12.451056480407715
    6. '```' → logprob: -12.701056480407715
    7. 'res' → logprob: -12.826056480407715
    8. '`' → logprob: -13.076056480407715
    9. ' res' → logprob: -13.076056480407715
    10. '(rest' → logprob: -13.951056480407715

Token 1492: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0005822229431942105
    2. '(res' → logprob: -7.625582218170166
    3. 'Mod' → logprob: -9.500582695007324
    4. ' res' → logprob: -11.000582695007324
    5. 'return' → logprob: -13.125582695007324
    6. 'Res' → logprob: -15.375582695007324
    7. '(Mod' → logprob: -15.375582695007324
    8. '   ' → logprob: -16.500581741333008
    9. '$res' → logprob: -16.625581741333008
    10. ' (' → logprob: -16.875581741333008

Token 1493: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07889870554208755
    2. '*' → logprob: -2.5788986682891846
    3. '*b' → logprob: -12.953898429870605
    4. '```' → logprob: -12.953898429870605
    5. ' ' → logprob: -14.203898429870605
    6. ',' → logprob: -14.328898429870605
    7. ' ' → logprob: -14.453898429870605
    8. '   ' → logprob: -14.828898429870605
    9. '*(' → logprob: -14.953898429870605
    10. ' +' → logprob: -14.953898429870605

Token 1494: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.004732249304652214
    2. ' g' → logprob: -5.379732131958008
    3. '(g' → logprob: -9.504732131958008
    4. ' (' → logprob: -10.879732131958008
    5. '(' → logprob: -11.754732131958008
    6. '(s' → logprob: -12.379732131958008
    7. 's' → logprob: -13.004732131958008
    8. '   ' → logprob: -14.129732131958008
    9. 'gb' → logprob: -14.567232131958008
    10. '
' → logprob: -14.942232131958008

Token 1495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006550124380737543
    2. ' ,' → logprob: -8.125655174255371
    3. '           ' → logprob: -8.875655174255371
    4. '`,' → logprob: -9.250655174255371
    5. '```' → logprob: -9.750655174255371
    6. ',s' → logprob: -11.500655174255371
    7. ',b' → logprob: -11.625655174255371
    8. '',' → logprob: -11.750655174255371
    9. ',
' → logprob: -11.750655174255371
    10. ')' → logprob: -11.875655174255371

Token 1496: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.0110511165112257
    2. 'z' → logprob: -4.511051177978516
    3. '```' → logprob: -13.761051177978516
    4. '(z' → logprob: -14.386051177978516
    5. '	z' → logprob: -14.636051177978516
    6. ',z' → logprob: -14.886051177978516
    7. ' ' → logprob: -15.386051177978516
    8. ''z' → logprob: -15.511051177978516
    9. ',' → logprob: -16.386051177978516
    10. '0' → logprob: -17.136051177978516

Token 1497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016931501450017095
    2. '-' → logprob: -6.626693248748779
    3. ' ,' → logprob: -8.501692771911621
    4. ' -' → logprob: -8.876692771911621
    5. '           ' → logprob: -12.001692771911621
    6. '```' → logprob: -12.126692771911621
    7. '`,' → logprob: -12.126692771911621
    8. ',
' → logprob: -13.126692771911621
    9. '       ' → logprob: -13.626692771911621
    10. '   ' → logprob: -14.001692771911621

Token 1498: ' r' (ID: 428)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2519422471523285
    2. ' g' → logprob: -1.5019422769546509
    3. 'b' → logprob: -11.75194263458252
    4. ' b' → logprob: -12.50194263458252
    5. '```' → logprob: -14.25194263458252
    6. 'z' → logprob: -14.87694263458252
    7. ' z' → logprob: -15.87694263458252
    8. '	g' → logprob: -16.376941680908203
    9. '`' → logprob: -16.501941680908203
    10. '   ' → logprob: -16.751941680908203

Token 1499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001090447069145739
    2. ' ,' → logprob: -6.8760905265808105
    3. '           ' → logprob: -10.376090049743652
    4. '```' → logprob: -12.001090049743652
    5. '   ' → logprob: -12.376090049743652
    6. '       ' → logprob: -12.751090049743652
    7. '-' → logprob: -13.001090049743652
    8. ',g' → logprob: -13.251090049743652
    9. '`,' → logprob: -14.001090049743652
    10. 'g' → logprob: -14.126090049743652

Token 1500: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.06998467445373535
    2. ' g' → logprob: -2.6949846744537354
    3. 'b' → logprob: -10.194984436035156
    4. ' b' → logprob: -12.069984436035156
    5. '   ' → logprob: -12.694984436035156
    6. ' ' → logprob: -14.444984436035156
    7. '    ' → logprob: -14.819984436035156
    8. '	g' → logprob: -15.194984436035156
    9. 'gb' → logprob: -15.319984436035156
    10. '```' → logprob: -15.319984436035156

Token 1501: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005519396159797907
    2. '+' → logprob: -6.005519390106201
    3. ' ,' → logprob: -6.130519390106201
    4. ' +' → logprob: -7.255519390106201
    5. '```' → logprob: -10.00551986694336
    6. 'b' → logprob: -10.38051986694336
    7. '+,' → logprob: -11.38051986694336
    8. ' b' → logprob: -11.38051986694336
    9. '       ' → logprob: -11.63051986694336
    10. 'g' → logprob: -11.75551986694336

Token 1502: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003602798329666257
    2. ' ' → logprob: -5.628602981567383
    3. '```' → logprob: -12.878602981567383
    4. '0' → logprob: -16.378602981567383
    5. '[' → logprob: -17.253602981567383
    6. ',' → logprob: -17.878602981567383
    7. '   ' → logprob: -18.003602981567383
    8. '<|end|>' → logprob: -18.878602981567383
    9. '`' → logprob: -19.128602981567383
    10. ' ' → logprob: -19.128602981567383

Token 1503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. ',' → logprob: -17.875059127807617
    4. '```' → logprob: -18.250059127807617
    5. '
' → logprob: -18.875059127807617
    6. '[' → logprob: -19.000059127807617
    7. '0' → logprob: -19.000059127807617
    8. '+' → logprob: -19.625059127807617
    9. '<|end|>' → logprob: -19.750059127807617
    10. '   ' → logprob: -20.875059127807617

Token 1504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003115095605608076
    2. ' ,' → logprob: -8.125311851501465
    3. ',b' → logprob: -11.625311851501465
    4. ' b' → logprob: -12.875311851501465
    5. 'b' → logprob: -13.375311851501465
    6. '```' → logprob: -13.500311851501465
    7. '`,' → logprob: -14.375311851501465
    8. ',
' → logprob: -15.750311851501465
    9. ')' → logprob: -16.62531089782715
    10. '``' → logprob: -16.75031089782715

Token 1505: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2014162540435791
    2. 'b' → logprob: -1.701416254043579
    3. '```' → logprob: -12.826416015625
    4. ' ' → logprob: -16.826416015625
    5. '`' → logprob: -17.076416015625
    6. 'B' → logprob: -17.576416015625
    7. ' б' → logprob: -17.701416015625
    8. '	b' → logprob: -17.826416015625
    9. ')b' → logprob: -17.826416015625
    10. ''b' → logprob: -17.951416015625

Token 1506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048656106810085475
    2. ' ,' → logprob: -7.750486373901367
    3. '           ' → logprob: -10.625486373901367
    4. '```' → logprob: -11.375486373901367
    5. ')' → logprob: -12.500486373901367
    6. '-' → logprob: -12.625486373901367
    7. '`,' → logprob: -12.875486373901367
    8. '       ' → logprob: -13.250486373901367
    9. '+' → logprob: -13.625486373901367
    10. ' -' → logprob: -13.750486373901367

Token 1507: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.16023072600364685
    2. ' rg' → logprob: -1.9102307558059692
    3. 'gb' → logprob: -12.66023063659668
    4. 'rgb' → logprob: -13.28523063659668
    5. ' gb' → logprob: -14.78523063659668
    6. ' rgb' → logprob: -14.78523063659668
    7. 'rb' → logprob: -15.53523063659668
    8. '   ' → logprob: -15.78523063659668
    9. ' ' → logprob: -16.03523063659668
    10. 'r' → logprob: -16.03523063659668

Token 1508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023894020705483854
    2. ' ,' → logprob: -8.375239372253418
    3. ',
' → logprob: -12.875239372253418
    4. '       ' → logprob: -13.750239372253418
    5. '```' → logprob: -13.875239372253418
    6. ')' → logprob: -14.000239372253418
    7. '+' → logprob: -14.250239372253418
    8. '           ' → logprob: -14.625239372253418
    9. '`,' → logprob: -14.625239372253418
    10. ',b' → logprob: -15.625239372253418

Token 1509: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.4740796685218811
    2. ' gb' → logprob: -0.9740796685218811
    3. '	gb' → logprob: -13.724080085754395
    4. '.gb' → logprob: -14.224080085754395
    5. 'GB' → logprob: -15.724080085754395
    6. '       ' → logprob: -15.974080085754395
    7. '```' → logprob: -16.349079132080078
    8. '         ' → logprob: -16.474079132080078
    9. '           ' → logprob: -16.474079132080078
    10. '     ' → logprob: -16.724079132080078

Token 1510: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005648265941999853
    2. ' ,' → logprob: -7.500565052032471
    3. '+' → logprob: -12.250564575195312
    4. '```' → logprob: -13.125564575195312
    5. ',
' → logprob: -13.250564575195312
    6. ',b' → logprob: -13.750564575195312
    7. '+,' → logprob: -14.375564575195312
    8. ')' → logprob: -14.625564575195312
    9. ' +' → logprob: -15.750564575195312
    10. '`,' → logprob: -16.000564575195312

Token 1511: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023095356300473213
    2. ' ' → logprob: -8.37523078918457
    3. '0' → logprob: -14.87523078918457
    4. '   ' → logprob: -17.50023078918457
    5. '+' → logprob: -17.75023078918457
    6. '```' → logprob: -18.37523078918457
    7. '<|end|>' → logprob: -18.50023078918457
    8. '[' → logprob: -19.00023078918457
    9. '           ' → logprob: -19.37523078918457
    10. ' +' → logprob: -19.62523078918457

Token 1512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '+' → logprob: -15.250011444091797
    4. '0' → logprob: -17.250011444091797
    5. 'b' → logprob: -18.625011444091797
    6. ' +' → logprob: -19.625011444091797
    7. '   ' → logprob: -19.750011444091797
    8. '
' → logprob: -20.125011444091797
    9. '```' → logprob: -20.375011444091797
    10. '[' → logprob: -20.875011444091797

Token 1513: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023131117632146925
    2. ' ,' → logprob: -8.875231742858887
    3. '           ' → logprob: -10.125231742858887
    4. '```' → logprob: -10.625231742858887
    5. ')' → logprob: -11.500231742858887
    6. ',b' → logprob: -12.375231742858887
    7. '       ' → logprob: -12.500231742858887
    8. '`,' → logprob: -13.250231742858887
    9. ',
' → logprob: -13.625231742858887
    10. ',r' → logprob: -13.875231742858887

Token 1514: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.5759821534156799
    2. ' br' → logprob: -0.8259821534156799
    3. 'b' → logprob: -10.200982093811035
    4. '	br' → logprob: -12.950982093811035
    5. ' b' → logprob: -13.450982093811035
    6. '```' → logprob: -14.075982093811035
    7. 'Br' → logprob: -14.950982093811035
    8. '(br' → logprob: -14.950982093811035
    9. 'brane' → logprob: -16.32598304748535
    10. '_br' → logprob: -16.57598304748535

Token 1515: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003728464711457491
    2. ')
' → logprob: -6.12872838973999
    3. ' )' → logprob: -7.00372838973999
    4. '       ' → logprob: -7.87872838973999
    5. '   ' → logprob: -9.628728866577148
    6. '           ' → logprob: -9.628728866577148
    7. '+' → logprob: -9.753728866577148
    8. ' )
' → logprob: -11.003728866577148
    9. '-' → logprob: -11.503728866577148
    10. ',' → logprob: -12.003728866577148

Token 1516: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.22341831028461456
    2. ' else' → logprob: -2.2234182357788086
    3. '       ' → logprob: -2.4734182357788086
    4. '```' → logprob: -5.098418235778809
    5. '	else' → logprob: -7.723418235778809
    6. '   ' → logprob: -7.848418235778809
    7. '<|end|>' → logprob: -8.098418235778809
    8. '           ' → logprob: -8.473418235778809
    9. ',' → logprob: -9.348418235778809
    10. ' ' → logprob: -11.223418235778809

Token 1517: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.026466917246580124
    2. ' else' → logprob: -3.9014668464660645
    3. '       ' → logprob: -5.1514668464660645
    4. '   ' → logprob: -9.776467323303223
    5. '```' → logprob: -10.651467323303223
    6. '	else' → logprob: -11.026467323303223
    7. '           ' → logprob: -11.151467323303223
    8. '_else' → logprob: -13.401467323303223
    9. '{
' → logprob: -14.151467323303223
    10. ',' → logprob: -14.901467323303223

Token 1518: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09266333281993866
    2. '(' → logprob: -3.217663288116455
    3. ' (
' → logprob: -3.217663288116455
    4. '(
' → logprob: -5.342663288116455
    5. '           ' → logprob: -6.217663288116455
    6. '<|end|>' → logprob: -7.217663288116455
    7. '(space' → logprob: -8.842663764953613
    8. '   ' → logprob: -9.092663764953613
    9. '(return' → logprob: -9.092663764953613
    10. '       ' → logprob: -9.217663764953613

Token 1519: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.15759915113449097
    2. 'return' → logprob: -2.7825992107391357
    3. '       ' → logprob: -3.1575992107391357
    4. '           ' → logprob: -4.157598972320557
    5. ' (' → logprob: -4.532598972320557
    6. '(' → logprob: -4.782598972320557
    7. '(return' → logprob: -5.532598972320557
    8. '```' → logprob: -6.657598972320557
    9. '   ' → logprob: -7.407598972320557
    10. '<|end|>' → logprob: -8.282599449157715

Token 1520: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004091104958206415
    2. ' return' → logprob: -5.504091262817383
    3. '           ' → logprob: -12.004091262817383
    4. '(return' → logprob: -12.379091262817383
    5. '       ' → logprob: -13.379091262817383
    6. '```' → logprob: -14.879091262817383
    7. '(' → logprob: -15.629091262817383
    8. '   ' → logprob: -15.629091262817383
    9. '	return' → logprob: -16.504091262817383
    10. ' ' → logprob: -17.504091262817383

Token 1521: ' Sinon' (ID: 154924)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.020055828616023064
    2. ' return' → logprob: -4.020055770874023
    3. '           ' → logprob: -6.270055770874023
    4. '   ' → logprob: -12.520055770874023
    5. '       ' → logprob: -12.645055770874023
    6. '```' → logprob: -12.770055770874023
    7. '(return' → logprob: -14.145055770874023
    8. '          ' → logprob: -15.145055770874023
    9. '#' → logprob: -15.145055770874023
    10. '(' → logprob: -15.395055770874023

Token 1522: ' :' (ID: 712)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02201361022889614
    2. '(' → logprob: -4.0220136642456055
    3. ' (
' → logprob: -6.2720136642456055
    4. '<|end|>' → logprob: -6.7720136642456055
    5. '(
' → logprob: -7.7720136642456055
    6. ' return' → logprob: -9.147013664245605
    7. '           ' → logprob: -9.397013664245605
    8. ' ' → logprob: -10.272013664245605
    9. '(return' → logprob: -10.522013664245605
    10. '(space' → logprob: -10.522013664245605

Token 1523: ' à' (ID: 1221)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24104543030261993
    2. ' return' → logprob: -1.6160454750061035
    3. '(return' → logprob: -4.8660454750061035
    4. '(res' → logprob: -5.4910454750061035
    5. ' (' → logprob: -5.7410454750061035
    6. '```' → logprob: -8.741044998168945
    7. 'res' → logprob: -9.491044998168945
    8. ' res' → logprob: -9.741044998168945
    9. '(z' → logprob: -9.866044998168945
    10. '(' → logprob: -10.241044998168945

Token 1524: ' une' (ID: 2463)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.7667704820632935
    2. 'Mod' → logprob: -1.3917704820632935
    3. ' (' → logprob: -2.016770362854004
    4. '(' → logprob: -2.641770362854004
    5. 'return' → logprob: -3.266770362854004
    6. ' Mod' → logprob: -4.016770362854004
    7. '(res' → logprob: -5.516770362854004
    8. ' return' → logprob: -5.641770362854004
    9. 'res' → logprob: -5.766770362854004
    10. '```' → logprob: -6.141770362854004

Token 1525: ' personne' (ID: 26304)
  Prédit: 'person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'person' → logprob: -0.09131287783384323
    2. '(person' → logprob: -2.591312885284424
    3. '(' → logprob: -5.091312885284424
    4. ' personne' → logprob: -5.841312885284424
    5. '(Mod' → logprob: -6.716312885284424
    6. 'Person' → logprob: -6.966312885284424
    7. '(res' → logprob: -7.466312885284424
    8. '_person' → logprob: -8.091312408447266
    9. ' (' → logprob: -9.091312408447266
    10. ' person' → logprob: -10.466312408447266

Token 1526: ' sans' (ID: 9828)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0187272597104311
    2. '(' → logprob: -4.0187273025512695
    3. '(space' → logprob: -7.7687273025512695
    4. '(z' → logprob: -10.26872730255127
    5. '(res' → logprob: -10.89372730255127
    6. ' (
' → logprob: -11.14372730255127
    7. '(s' → logprob: -11.39372730255127
    8. ')' → logprob: -11.51872730255127
    9. '(n' → logprob: -11.64372730255127
    10. '(return' → logprob: -11.76872730255127

Token 1527: ' balle' (ID: 147386)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5977160930633545
    2. ' b' → logprob: -1.0977160930633545
    3. 'ball' → logprob: -2.7227160930633545
    4. ' balle' → logprob: -3.2227160930633545
    5. ' ball' → logprob: -4.597716331481934
    6. '```' → logprob: -8.097716331481934
    7. ' ' → logprob: -8.847716331481934
    8. ' ' → logprob: -9.097716331481934
    9. ' bale' → logprob: -10.472716331481934
    10. '	b' → logprob: -10.847716331481934

Token 1528: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.142979696393013
    2. ' (' → logprob: -2.767979621887207
    3. '(
' → logprob: -2.892979621887207
    4. ',' → logprob: -4.642979621887207
    5. '```' → logprob: -6.392979621887207
    6. '(z' → logprob: -6.642979621887207
    7. '           ' → logprob: -7.017979621887207
    8. ')' → logprob: -7.392979621887207
    9. '`' → logprob: -8.517979621887207
    10. '       ' → logprob: -8.892979621887207

Token 1529: 'dev' (ID: 6751)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.346554696559906
    2. ' return' → logprob: -1.3465547561645508
    3. ' z' → logprob: -3.971554756164551
    4. 'z' → logprob: -4.721554756164551
    5. 'res' → logprob: -6.471554756164551
    6. '```' → logprob: -6.471554756164551
    7. '`' → logprob: -6.721554756164551
    8. ' res' → logprob: -7.721554756164551
    9. '``' → logprob: -8.97155475616455
    10. ' ' → logprob: -10.97155475616455

Token 1530: 'ient' (ID: 773)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.030884455889463425
    2. '-' → logprob: -4.405884265899658
    3. ' f' → logprob: -5.405884265899658
    4. '1' → logprob: -5.655884265899658
    5. 'z' → logprob: -6.155884265899658
    6. '=' → logprob: -6.405884265899658
    7. 'ef' → logprob: -6.780884265899658
    8. 'el' → logprob: -6.905884265899658
    9. 'e' → logprob: -7.530884265899658
    10. '```' → logprob: -7.655884265899658

Token 1531: ' B' (ID: 418)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2519527077674866
    2. 'b' → logprob: -1.5019526481628418
    3. '```' → logprob: -11.626953125
    4. 'B' → logprob: -11.751953125
    5. ' B' → logprob: -12.626953125
    6. ' z' → logprob: -13.126953125
    7. 'z' → logprob: -14.126953125
    8. ' res' → logprob: -15.751953125
    9. ' ' → logprob: -15.751953125
    10. 'res' → logprob: -16.251953125

Token 1532: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006572311744093895
    2. '           ' → logprob: -5.131572246551514
    3. '-' → logprob: -8.131572723388672
    4. '```' → logprob: -8.631572723388672
    5. ' ,' → logprob: -9.631572723388672
    6. ',
' → logprob: -10.381572723388672
    7. ',z' → logprob: -11.131572723388672
    8. ')' → logprob: -11.131572723388672
    9. '`,' → logprob: -11.881572723388672
    10. '       ' → logprob: -11.881572723388672

Token 1533: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3889133334159851
    2. 'return' → logprob: -1.1389133930206299
    3. '           ' → logprob: -7.513913154602051
    4. '   ' → logprob: -7.888913154602051
    5. '       ' → logprob: -8.13891315460205
    6. '```' → logprob: -8.26391315460205
    7. '(return' → logprob: -8.38891315460205
    8. '(' → logprob: -8.88891315460205
    9. ' (' → logprob: -9.13891315460205
    10. ' =' → logprob: -10.88891315460205

Token 1534: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4741458296775818
    2. ' return' → logprob: -0.9741458296775818
    3. '(return' → logprob: -9.849145889282227
    4. '(' → logprob: -11.599145889282227
    5. '       ' → logprob: -13.599145889282227
    6. ' 
' → logprob: -13.724145889282227
    7. '`' → logprob: -13.849145889282227
    8. '   ' → logprob: -13.974145889282227
    9. '```' → logprob: -14.224145889282227
    10. ' ' → logprob: -14.224145889282227

Token 1535: ' (' (ID: 350)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -2.856408536899835e-05
    2. ' (' → logprob: -10.500028610229492
    3. '(' → logprob: -14.375028610229492
    4. 'res' → logprob: -15.125028610229492
    5. '   ' → logprob: -17.875028610229492
    6. '(
' → logprob: -18.250028610229492
    7. '(result' → logprob: -19.125028610229492
    8. ' res' → logprob: -19.125028610229492
    9. ',res' → logprob: -20.125028610229492
    10. '(rest' → logprob: -20.375028610229492

Token 1536: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.10021023452281952
    2. '(res' → logprob: -2.350210189819336
    3. ' res' → logprob: -12.725210189819336
    4. ' (' → logprob: -15.350210189819336
    5. '$res' → logprob: -15.850210189819336
    6. ',res' → logprob: -16.725210189819336
    7. '	res' → logprob: -16.850210189819336
    8. '=res' → logprob: -17.225210189819336
    9. 'resi' → logprob: -17.725210189819336
    10. 'rez' → logprob: -18.350210189819336

Token 1537: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25194355845451355
    2. ' *' → logprob: -1.501943588256836
    3. '*(' → logprob: -12.501943588256836
    4. '*,' → logprob: -12.626943588256836
    5. ')' → logprob: -12.751943588256836
    6. ',' → logprob: -13.626943588256836
    7. ' ' → logprob: -14.126943588256836
    8. '```' → logprob: -14.501943588256836
    9. '*z' → logprob: -15.126943588256836
    10. ' ' → logprob: -15.376943588256836

Token 1538: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0788925439119339
    2. ' z' → logprob: -2.578892469406128
    3. '(z' → logprob: -12.828892707824707
    4. '	z' → logprob: -16.32889175415039
    5. 'res' → logprob: -16.70389175415039
    6. 's' → logprob: -17.82889175415039
    7. ' ' → logprob: -19.07889175415039
    8. '```' → logprob: -19.20389175415039
    9. ''z' → logprob: -19.20389175415039
    10. ' ' → logprob: -19.45389175415039

Token 1539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.644463479053229e-05
    2. ',z' → logprob: -10.625046730041504
    3. ' ,' → logprob: -11.000046730041504
    4. ' z' → logprob: -12.875046730041504
    5. '`,' → logprob: -13.375046730041504
    6. ',
' → logprob: -14.500046730041504
    7. ',n' → logprob: -15.125046730041504
    8. '',' → logprob: -15.875046730041504
    9. 'z' → logprob: -16.000045776367188
    10. '```' → logprob: -16.125045776367188

Token 1540: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.0031777136027812958
    2. 'z' → logprob: -5.753177642822266
    3. '	z' → logprob: -17.253177642822266
    4. ' ' → logprob: -18.503177642822266
    5. '```' → logprob: -20.253177642822266
    6. 's' → logprob: -20.378177642822266
    7. ' ' → logprob: -21.003177642822266
    8. '`' → logprob: -21.128177642822266
    9. ''z' → logprob: -21.253177642822266
    10. '(z' → logprob: -21.253177642822266

Token 1541: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47418296337127686
    2. '-' → logprob: -0.9741829633712769
    3. ',' → logprob: -9.224183082580566
    4. ' ' → logprob: -12.849183082580566
    5. '           ' → logprob: -13.724183082580566
    6. '   ' → logprob: -13.974183082580566
    7. ' ,' → logprob: -13.974183082580566
    8. ' ' → logprob: -14.974183082580566
    9. '```' → logprob: -14.974183082580566
    10. '    ' → logprob: -15.974183082580566

Token 1542: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. ' ' → logprob: -18.50007438659668
    4. '<|end|>' → logprob: -19.50007438659668
    5. '```' → logprob: -19.62507438659668
    6. '۱' → logprob: -20.12507438659668
    7. '１' → logprob: -20.87507438659668
    8. '' → logprob: -21.37507438659668
    9. '[' → logprob: -21.50007438659668
    10. '
' → logprob: -22.06257438659668

Token 1543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -20.125009536743164
    4. '
' → logprob: -20.500009536743164
    5. '   ' → logprob: -22.125009536743164
    6. '１' → logprob: -23.125009536743164
    7. '۱' → logprob: -23.875009536743164
    8. ' ' → logprob: -24.125009536743164
    9. '0' → logprob: -24.375009536743164
    10. '`' → logprob: -24.500009536743164

Token 1544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021366903092712164
    2. ' ,' → logprob: -8.500213623046875
    3. ',b' → logprob: -12.375213623046875
    4. ',r' → logprob: -12.875213623046875
    5. 'b' → logprob: -13.875213623046875
    6. ' b' → logprob: -14.500213623046875
    7. 'r' → logprob: -14.750213623046875
    8. ')' → logprob: -15.125213623046875
    9. '```' → logprob: -15.125213623046875
    10. '   ' → logprob: -15.375213623046875

Token 1545: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.5577775128767826e-06
    2. ' r' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.6250057220459
    4. '     ' → logprob: -18.2500057220459
    5. '    ' → logprob: -18.7500057220459
    6. '       ' → logprob: -19.0000057220459
    7. '  ' → logprob: -20.1250057220459
    8. '	r' → logprob: -20.2500057220459
    9. '0' → logprob: -20.3750057220459
    10. '           ' → logprob: -20.6250057220459

Token 1546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35423189401626587
    2. ' +' → logprob: -1.479231834411621
    3. '+' → logprob: -2.729231834411621
    4. ' ,' → logprob: -5.604231834411621
    5. '+,' → logprob: -6.604231834411621
    6. '   ' → logprob: -9.479231834411621
    7. '       ' → logprob: -10.854231834411621
    8. ' ' → logprob: -11.104231834411621
    9. '<|end|>' → logprob: -11.354231834411621
    10. '    ' → logprob: -11.979231834411621

Token 1547: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.011048408225178719
    2. ' g' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.511048316955566
    4. ' ' → logprob: -16.011049270629883
    5. '	g' → logprob: -16.011049270629883
    6. '    ' → logprob: -16.136049270629883
    7. '  ' → logprob: -16.761049270629883
    8. ' ' → logprob: -17.886049270629883
    9. '     ' → logprob: -18.261049270629883
    10. '#g' → logprob: -19.386049270629883

Token 1548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004253861960023642
    2. '+' → logprob: -6.37925386428833
    3. ' ,' → logprob: -6.37925386428833
    4. ' +' → logprob: -7.37925386428833
    5. '-' → logprob: -8.754253387451172
    6. ' -' → logprob: -10.629253387451172
    7. '```' → logprob: -11.379253387451172
    8. ',b' → logprob: -11.504253387451172
    9. '   ' → logprob: -11.754253387451172
    10. ' ' → logprob: -11.879253387451172

Token 1549: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.751502990722656
    4. '    ' → logprob: -18.001502990722656
    5. '       ' → logprob: -18.251502990722656
    6. '	b' → logprob: -19.001502990722656
    7. ' ' → logprob: -19.501502990722656
    8. '     ' → logprob: -20.001502990722656
    9. '(b' → logprob: -20.001502990722656
    10. '  ' → logprob: -20.376502990722656

Token 1550: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34846875071525574
    2. '+' → logprob: -1.2234687805175781
    3. '```' → logprob: -12.348468780517578
    4. '-' → logprob: -12.598468780517578
    5. '           ' → logprob: -12.723468780517578
    6. ' ' → logprob: -12.848468780517578
    7. 'b' → logprob: -13.098468780517578
    8. '       ' → logprob: -13.098468780517578
    9. '   ' → logprob: -13.723468780517578
    10. '        ' → logprob: -13.848468780517578

Token 1551: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '0' → logprob: -18.375051498413086
    4. '   ' → logprob: -19.125051498413086
    5. '```' → logprob: -19.500051498413086
    6. '+' → logprob: -19.625051498413086
    7. '１' → logprob: -21.250051498413086
    8. '
' → logprob: -21.750051498413086
    9. ',' → logprob: -21.750051498413086
    10. ')' → logprob: -21.750051498413086

Token 1552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -17.75
    4. '```' → logprob: -19.625
    5. '+' → logprob: -20.125
    6. '   ' → logprob: -21.5
    7. '0' → logprob: -21.625
    8. '
' → logprob: -21.625
    9. '=' → logprob: -21.875
    10. '<|end|>' → logprob: -21.875

Token 1553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010270876373397186
    2. ')' → logprob: -9.250102996826172
    3. ' ,' → logprob: -12.250102996826172
    4. ',
' → logprob: -14.125102996826172
    5. '```' → logprob: -14.625102996826172
    6. '),' → logprob: -15.250102996826172
    7. '<|end|>' → logprob: -16.125102996826172
    8. ',b' → logprob: -16.375102996826172
    9. '   ' → logprob: -16.875102996826172
    10. ',)' → logprob: -16.875102996826172

Token 1554: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.0001584850688232109
    2. ' rg' → logprob: -8.750158309936523
    3. '_rg' → logprob: -18.375158309936523
    4. '0' → logprob: -18.625158309936523
    5. 'rgb' → logprob: -18.750158309936523
    6. 'RG' → logprob: -19.875158309936523
    7. 'rig' → logprob: -20.375158309936523
    8. '   ' → logprob: -20.375158309936523
    9. 'rgba' → logprob: -20.625158309936523
    10. '     ' → logprob: -21.000158309936523

Token 1555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.542423165636137e-05
    2. ' ,' → logprob: -9.375085830688477
    3. ',
' → logprob: -14.875085830688477
    4. '```' → logprob: -16.625085830688477
    5. '   ' → logprob: -17.000085830688477
    6. ')' → logprob: -17.500085830688477
    7. '       ' → logprob: -17.750085830688477
    8. 'gb' → logprob: -18.000085830688477
    9. '  ' → logprob: -18.375085830688477
    10. ',g' → logprob: -18.750085830688477

Token 1556: ' gb' (ID: 21144)
  Prédit: 'gb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gb' → logprob: -0.0024758970830589533
    2. ' gb' → logprob: -6.002475738525391
    3. '	gb' → logprob: -15.75247573852539
    4. '.gb' → logprob: -18.12747573852539
    5. 'GB' → logprob: -19.12747573852539
    6. 'Gb' → logprob: -20.75247573852539
    7. 'br' → logprob: -20.75247573852539
    8. 'gh' → logprob: -21.37747573852539
    9. ' ' → logprob: -21.50247573852539
    10. 'gv' → logprob: -22.00247573852539

Token 1557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.583550642360933e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',
' → logprob: -15.125036239624023
    4. '```' → logprob: -16.250036239624023
    5. ')' → logprob: -16.750036239624023
    6. 'br' → logprob: -18.000036239624023
    7. ' br' → logprob: -18.375036239624023
    8. ',b' → logprob: -18.625036239624023
    9. '<|end|>' → logprob: -19.000036239624023
    10. ',\
' → logprob: -19.375036239624023

Token 1558: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.0002613358374219388
    2. ' br' → logprob: -8.250261306762695
    3. '	br' → logprob: -18.000261306762695
    4. ' ' → logprob: -19.625261306762695
    5. '   ' → logprob: -20.250261306762695
    6. 'b' → logprob: -20.625261306762695
    7. '(br' → logprob: -20.750261306762695
    8. 'brane' → logprob: -21.000261306762695
    9. 'Br' → logprob: -21.750261306762695
    10. 'bl' → logprob: -22.125261306762695

Token 1559: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.709308167453855e-05
    2. ')
' → logprob: -9.375086784362793
    3. '   ' → logprob: -13.500086784362793
    4. '```' → logprob: -15.125086784362793
    5. ' )' → logprob: -15.375086784362793
    6. ')return' → logprob: -16.12508773803711
    7. '+' → logprob: -16.87508773803711
    8. '),' → logprob: -17.00008773803711
    9. ')`' → logprob: -17.00008773803711
    10. ')\' → logprob: -17.00008773803711

Token 1560: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3835567235946655
    2. '(' → logprob: -1.7585567235946655
    3. '#' → logprob: -2.008556842803955
    4. 'def' → logprob: -2.133556842803955
    5. 'for' → logprob: -2.383556842803955
    6. 'res' → logprob: -2.633556842803955
    7. 'result' → logprob: -2.633556842803955
    8. '[' → logprob: -4.008556842803955
    9. 'state' → logprob: -4.758556842803955
    10. '(
' → logprob: -5.008556842803955

Token 1561: ' La' (ID: 3038)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.09084512293338776
    2. '#' → logprob: -3.0908451080322266
    3. 'z' → logprob: -4.340845108032227
    4. 'state' → logprob: -4.340845108032227
    5. 'result' → logprob: -4.340845108032227
    6. 'def' → logprob: -7.215845108032227
    7. 'states' → logprob: -7.965845108032227
    8. 'dp' → logprob: -8.090845108032227
    9. 'r' → logprob: -8.715845108032227
    10. 'x' → logprob: -9.090845108032227

Token 1562: ' variable' (ID: 11076)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1489562690258026
    2. 'def' → logprob: -2.398956298828125
    3. '#' → logprob: -4.148956298828125
    4. 'result' → logprob: -4.898956298828125
    5. '
' → logprob: -5.273956298828125
    6. 'r' → logprob: -5.273956298828125
    7. 's' → logprob: -5.898956298828125
    8. 'b' → logprob: -6.773956298828125
    9. 'rés' → logprob: -7.023956298828125
    10. 'state' → logprob: -7.148956298828125

Token 1563: ' `' (ID: 2700)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06783924996852875
    2. 'z' → logprob: -3.9428391456604004
    3. 'state' → logprob: -4.0678391456604
    4. ' =' → logprob: -4.6928391456604
    5. 'result' → logprob: -4.9428391456604
    6. '=' → logprob: -4.9428391456604
    7. '#' → logprob: -5.6928391456604
    8. 'count' → logprob: -7.4428391456604
    9. 'dp' → logprob: -7.6928391456604
    10. 'states' → logprob: -7.8178391456604

Token 1564: 'ans' (ID: 616)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.08415806293487549
    2. 'z' → logprob: -2.584157943725586
    3. '#' → logprob: -5.584157943725586
    4. 'result' → logprob: -7.959157943725586
    5. '(res' → logprob: -9.084157943725586
    6. 'people' → logprob: -9.334157943725586
    7. 'x' → logprob: -9.459157943725586
    8. 'count' → logprob: -9.459157943725586
    9. 'state' → logprob: -9.459157943725586
    10. 'r' → logprob: -9.709157943725586

Token 1565: '`' (ID: 63)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05525697022676468
    2. '=' → logprob: -2.9302570819854736
    3. 's' → logprob: -8.430256843566895
    4. '`' → logprob: -9.430256843566895
    5. '```' → logprob: -10.930256843566895
    6. ')' → logprob: -11.555256843566895
    7. ',' → logprob: -11.680256843566895
    8. '=int' → logprob: -11.930256843566895
    9. '_' → logprob: -12.055256843566895
    10. '=_' → logprob: -12.805256843566895

Token 1566: ' capture' (ID: 19374)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008618593215942383
    2. ' =' → logprob: -4.758618354797363
    3. ',' → logprob: -13.133618354797363
    4. 'ans' → logprob: -14.508618354797363
    5. '=
' → logprob: -14.633618354797363
    6. '```' → logprob: -14.883618354797363
    7. '=`' → logprob: -16.13361930847168
    8. '=res' → logprob: -16.25861930847168
    9. '=

' → logprob: -16.38361930847168
    10. 'z' → logprob: -16.75861930847168

Token 1567: ' le' (ID: 505)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02716057561337948
    2. '=' → logprob: -3.77716064453125
    3. 'res' → logprob: -5.65216064453125
    4. '<|end|>' → logprob: -9.40216064453125
    5. '=res' → logprob: -9.65216064453125
    6. '_res' → logprob: -10.02716064453125
    7. '```' → logprob: -10.27716064453125
    8. ',' → logprob: -10.77716064453125
    9. '
' → logprob: -11.15216064453125
    10. ' ' → logprob: -11.27716064453125

Token 1568: ' nombre' (ID: 9733)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0833083987236023
    2. 'Mod' → logprob: -3.083308458328247
    3. '=' → logprob: -4.708308219909668
    4. '(Mod' → logprob: -4.708308219909668
    5. 'result' → logprob: -5.083308219909668
    6. 'ans' → logprob: -5.833308219909668
    7. 'initial' → logprob: -5.958308219909668
    8. 'answer' → logprob: -7.208308219909668
    9. '(res' → logprob: -7.333308219909668
    10. ' =' → logprob: -8.208308219909668

Token 1569: ' total' (ID: 3609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24892087280750275
    2. ' =' → logprob: -1.8739209175109863
    3. 'de' → logprob: -3.9989209175109863
    4. '_' → logprob: -4.248920917510986
    5. '_ans' → logprob: -5.248920917510986
    6. '_possible' → logprob: -5.623920917510986
    7. 'ans' → logprob: -5.748920917510986
    8. '_total' → logprob: -6.123920917510986
    9. '_de' → logprob: -6.123920917510986
    10. '_tokens' → logprob: -6.248920917510986

Token 1570: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.777349054813385
    2. '=' → logprob: -0.902349054813385
    3. '_people' → logprob: -3.1523489952087402
    4. '_person' → logprob: -3.5273489952087402
    5. 'des' → logprob: -3.7773489952087402
    6. '_des' → logprob: -4.15234899520874
    7. 'de' → logprob: -5.02734899520874
    8. '_possible' → logprob: -5.15234899520874
    9. 'person' → logprob: -5.90234899520874
    10. '_' → logprob: -6.02734899520874

Token 1571: ' façons' (ID: 165958)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.758307933807373
    2. 'Mod' → logprob: -1.133307933807373
    3. 'ans' → logprob: -1.883307933807373
    4. 'person' → logprob: -3.883307933807373
    5. 'fa' → logprob: -4.258307933807373
    6. 'people' → logprob: -5.383307933807373
    7. 'res' → logprob: -5.633307933807373
    8. '```' → logprob: -5.633307933807373
    9. '#' → logprob: -6.383307933807373
    10. 'persons' → logprob: -7.008307933807373

Token 1572: ' possibles' (ID: 97753)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015060802921652794
    2. ' =' → logprob: -4.265060901641846
    3. 'ans' → logprob: -7.390060901641846
    4. ',' → logprob: -9.390060424804688
    5. '(ans' → logprob: -9.640060424804688
    6. '_ans' → logprob: -10.515060424804688
    7. '=
' → logprob: -10.640060424804688
    8. '<|end|>' → logprob: -11.265060424804688
    9. '```' → logprob: -11.390060424804688
    10. '	ans' → logprob: -11.640060424804688

Token 1573: ' d' (ID: 272)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00533206295222044
    2. '=' → logprob: -5.505331993103027
    3. ' =' → logprob: -7.005331993103027
    4. 'res' → logprob: -9.255331993103027
    5. '
' → logprob: -9.505331993103027
    6. '#' → logprob: -10.005331993103027
    7. '```' → logprob: -10.255331993103027
    8. 'z' → logprob: -10.505331993103027
    9. '(ans' → logprob: -10.505331993103027
    10. '=
' → logprob: -11.630331993103027

Token 1574: ''at' (ID: 85437)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5620133876800537
    2. 'e' → logprob: -2.0620133876800537
    3. 'ans' → logprob: -2.3120133876800537
    4. ' =' → logprob: -2.8120133876800537
    5. '```' → logprob: -3.5620133876800537
    6. '_' → logprob: -3.9370133876800537
    7. '`' → logprob: -3.9370133876800537
    8. ''être' → logprob: -4.437013626098633
    9. '_=' → logprob: -4.687013626098633
    10. 'es' → logprob: -4.937013626098633

Token 1575: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.008003822527825832
    2. 'tr' → logprob: -5.0080037117004395
    3. 'tribut' → logprob: -7.8830037117004395
    4. 'tri' → logprob: -8.508004188537598
    5. 't' → logprob: -8.758004188537598
    6. 'tributions' → logprob: -9.258004188537598
    7. 'ter' → logprob: -9.508004188537598
    8. 'tribution' → logprob: -9.508004188537598
    9. 'tribute' → logprob: -9.883004188537598
    10. 'tributes' → logprob: -10.008004188537598

Token 1576: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.0550219789147377
    2. 'u' → logprob: -3.5550220012664795
    3. 'ib' → logprob: -5.0550217628479
    4. 'r' → logprob: -5.3050217628479
    5. '#' → logprob: -6.4300217628479
    6. 'ué' → logprob: -6.5550217628479
    7. '=' → logprob: -6.6800217628479
    8. 'trib' → logprob: -6.6800217628479
    9. 'rib' → logprob: -7.0550217628479
    10. 'er' → logprob: -7.0550217628479

Token 1577: ' les' (ID: 1341)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003887130646035075
    2. '(' → logprob: -6.253887176513672
    3. '(ans' → logprob: -7.628887176513672
    4. '#' → logprob: -7.878887176513672
    5. '=' → logprob: -8.253887176513672
    6. 'people' → logprob: -9.003887176513672
    7. 'res' → logprob: -9.128887176513672
    8. '```' → logprob: -9.503887176513672
    9. 'person' → logprob: -9.628887176513672
    10. 'answer' → logprob: -9.628887176513672

Token 1578: ' ball' (ID: 7880)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.43839797377586365
    2. 'ans' → logprob: -1.938398003578186
    3. 'ball' → logprob: -2.1883978843688965
    4. '=' → logprob: -3.5633978843688965
    5. 'b' → logprob: -3.6883978843688965
    6. 'balls' → logprob: -3.9383978843688965
    7. '#' → logprob: -4.3133978843688965
    8. 'Mod' → logprob: -6.0633978843688965
    9. 'r' → logprob: -6.0633978843688965
    10. '```' → logprob: -6.5633978843688965

Token 1579: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.20610444247722626
    2. '=' → logprob: -2.4561045169830322
    3. 'res' → logprob: -3.5811045169830322
    4. 'ues' → logprob: -3.5811045169830322
    5. 'ans' → logprob: -4.331104278564453
    6. ' =' → logprob: -4.831104278564453
    7. 'eurs' → logprob: -5.331104278564453
    8. 'é' → logprob: -5.956104278564453
    9. '```' → logprob: -6.081104278564453
    10. 'ées' → logprob: -6.456104278564453

Token 1580: ',
' (ID: 412)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07693000882863998
    2. ' =' → logprob: -2.826930046081543
    3. 'ans' → logprob: -4.451930046081543
    4. 'res' → logprob: -6.326930046081543
    5. 'z' → logprob: -7.576930046081543
    6. ',' → logprob: -8.201930046081543
    7. '#' → logprob: -8.326930046081543
    8. '=(' → logprob: -9.951930046081543
    9. '=res' → logprob: -9.951930046081543
    10. '=
' → logprob: -10.076930046081543

Token 1581: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10133308172225952
    2. 'res' → logprob: -2.3513331413269043
    3. '#' → logprob: -7.851333141326904
    4. 'z' → logprob: -8.476332664489746
    5. '```' → logprob: -8.476332664489746
    6. '
' → logprob: -9.226332664489746
    7. ' ans' → logprob: -9.726332664489746
    8. '=' → logprob: -10.101332664489746
    9. '`' → logprob: -10.726332664489746
    10. 'answer' → logprob: -11.101332664489746

Token 1582: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01812688633799553
    2. 'res' → logprob: -4.393126964569092
    3. 'z' → logprob: -5.268126964569092
    4. '#' → logprob: -8.518126487731934
    5. 'state' → logprob: -9.143126487731934
    6. 'r' → logprob: -9.393126487731934
    7. 'answer' → logprob: -11.643126487731934
    8. '(ans' → logprob: -11.768126487731934
    9. '
' → logprob: -11.893126487731934
    10. 'result' → logprob: -12.018126487731934

Token 1583: ' reste' (ID: 26769)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5227676033973694
    2. 'ans' → logprob: -1.0227675437927246
    3. 'res' → logprob: -3.1477675437927246
    4. '#' → logprob: -5.897767543792725
    5. '
' → logprob: -7.647767543792725
    6. 'Z' → logprob: -8.772768020629883
    7. '```' → logprob: -9.022768020629883
    8. 'answer' → logprob: -9.147768020629883
    9. '_z' → logprob: -9.272768020629883
    10. '=' → logprob: -9.772768020629883

Token 1584: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0127322468906641
    2. ' =' → logprob: -4.637732028961182
    3. '=
' → logprob: -6.012732028961182
    4. 's' → logprob: -8.63773250579834
    5. 'ans' → logprob: -9.13773250579834
    6. '_ans' → logprob: -9.88773250579834
    7. '_' → logprob: -9.88773250579834
    8. 'res' → logprob: -10.13773250579834
    9. ' =
' → logprob: -10.88773250579834
    10. ')' → logprob: -10.88773250579834

Token 1585: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03354911506175995
    2. 'la' → logprob: -4.0335493087768555
    3. 'l' → logprob: -5.6585493087768555
    4. 'person' → logprob: -5.9085493087768555
    5. '```' → logprob: -6.5335493087768555
    6. 'persons' → logprob: -6.7835493087768555
    7. 'les' → logprob: -6.9085493087768555
    8. 'res' → logprob: -7.0335493087768555
    9. 'people' → logprob: -7.1585493087768555
    10. 'N' → logprob: -7.4085493087768555

Token 1586: ' tu' (ID: 3334)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.11938916146755219
    2. 'line' → logprob: -4.244389057159424
    3. 'ligne' → logprob: -4.369389057159424
    4. 'N' → logprob: -4.494389057159424
    5. 'def' → logprob: -4.494389057159424
    6. 'ans' → logprob: -4.494389057159424
    7. ' code' → logprob: -4.619389057159424
    8. 'for' → logprob: -4.994389057159424
    9. 'res' → logprob: -5.119389057159424
    10. '```' → logprob: -5.369389057159424

Token 1587: 'ile' (ID: 554)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.11539404839277267
    2. 'r' → logprob: -3.115394115447998
    3. 'ple' → logprob: -3.240394115447998
    4. 'p' → logprob: -4.365394115447998
    5. 'rn' → logprob: -5.865394115447998
    6. 'ples' → logprob: -5.990394115447998
    7. 'ype' → logprob: -6.490394115447998
    8. '```' → logprob: -6.865394115447998
    9. 'pes' → logprob: -7.115394115447998
    10. 'e' → logprob: -7.365394115447998

Token 1588: ' étant' (ID: 47869)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7881966233253479
    2. ' =' → logprob: -1.1631965637207031
    3. 'ans' → logprob: -1.6631965637207031
    4. 's' → logprob: -3.288196563720703
    5. 'res' → logprob: -6.288196563720703
    6. '=
' → logprob: -6.788196563720703
    7. '
' → logprob: -7.413196563720703
    8. '#' → logprob: -7.538196563720703
    9. '_ans' → logprob: -8.163196563720703
    10. '(ans' → logprob: -8.788196563720703

Token 1589: ' jet' (ID: 26158)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3854687511920929
    2. 'z' → logprob: -1.8854687213897705
    3. 'Mod' → logprob: -2.1354687213897705
    4. '=' → logprob: -4.26046895980835
    5. ' =' → logprob: -4.88546895980835
    6. 'res' → logprob: -5.13546895980835
    7. '(Mod' → logprob: -5.26046895980835
    8. '...' → logprob: -5.76046895980835
    9. '1' → logprob: -5.76046895980835
    10. '```' → logprob: -6.38546895980835

Token 1590: 'é' (ID: 377)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9741909503936768
    2. ')' → logprob: -1.2241909503936768
    3. 'p' → logprob: -2.8491909503936768
    4. 'e' → logprob: -3.3491909503936768
    5. '`' → logprob: -3.4741909503936768
    6. ')
' → logprob: -4.224190711975098
    7. 's' → logprob: -4.224190711975098
    8. ' =' → logprob: -4.349190711975098
    9. '0' → logprob: -4.474190711975098
    10. '=' → logprob: -4.599190711975098

Token 1591: ' (_' (ID: 11350)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05595067888498306
    2. '=' → logprob: -3.30595064163208
    3. ' =' → logprob: -4.18095064163208
    4. 'z' → logprob: -7.55595064163208
    5. '#' → logprob: -7.68095064163208
    6. '(ans' → logprob: -7.93095064163208
    7. '
' → logprob: -8.430951118469238
    8. 'res' → logprob: -8.555951118469238
    9. '_ans' → logprob: -9.180951118469238
    10. '```' → logprob: -9.430951118469238

Token 1592: ').
' (ID: 6294)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02016611583530903
    2. 'ans' → logprob: -4.520165920257568
    3. ' =' → logprob: -5.895165920257568
    4. 'res' → logprob: -6.145165920257568
    5. '=
' → logprob: -6.395165920257568
    6. ')' → logprob: -6.770165920257568
    7. ',' → logprob: -7.520165920257568
    8. '_' → logprob: -8.270166397094727
    9. 's' → logprob: -8.895166397094727
    10. '_=' → logprob: -8.895166397094727

Token 1593: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0020515278447419405
    2. 'res' → logprob: -6.25205135345459
    3. 'z' → logprob: -9.87705135345459
    4. '_' → logprob: -10.62705135345459
    5. '```' → logprob: -10.75205135345459
    6. '_ans' → logprob: -12.00205135345459
    7. 'from' → logprob: -12.37705135345459
    8. '_,' → logprob: -12.75205135345459
    9. '
' → logprob: -13.00205135345459
    10. '(ans' → logprob: -13.00205135345459

Token 1594: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00814005360007286
    2. 'res' → logprob: -4.8831400871276855
    3. '```' → logprob: -8.008139610290527
    4. '(ans' → logprob: -9.258139610290527
    5. 'z' → logprob: -10.258139610290527
    6. '_' → logprob: -11.383139610290527
    7. '_,' → logprob: -11.633139610290527
    8. 'def' → logprob: -12.008139610290527
    9. '(_,' → logprob: -12.008139610290527
    10. '_ans' → logprob: -12.133139610290527

Token 1595: ' utilise' (ID: 70283)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9444119334220886
    2. '=' → logprob: -1.1944119930267334
    3. ' =' → logprob: -1.9444119930267334
    4. 'ans' → logprob: -1.9444119930267334
    5. '
' → logprob: -5.069411754608154
    6. 'x' → logprob: -5.319411754608154
    7. 'def' → logprob: -5.944411754608154
    8. '=
' → logprob: -6.444411754608154
    9. 'z' → logprob: -6.569411754608154
    10. 'r' → logprob: -6.944411754608154

Token 1596: ' `' (ID: 2700)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6365740299224854
    2. 'res' → logprob: -0.8865740299224854
    3. 'Mod' → logprob: -3.0115740299224854
    4. 'reduce' → logprob: -5.386573791503906
    5. '(Mod' → logprob: -6.261573791503906
    6. '(ans' → logprob: -7.261573791503906
    7. '
' → logprob: -8.011573791503906
    8. '(res' → logprob: -8.011573791503906
    9. '(' → logprob: -8.136573791503906
    10. '(
' → logprob: -8.386573791503906

Token 1597: 'reduce' (ID: 49119)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10251286625862122
    2. 'res' → logprob: -2.477512836456299
    3. 'Mod' → logprob: -4.727512836456299
    4. 'z' → logprob: -6.227512836456299
    5. '(Mod' → logprob: -6.977512836456299
    6. '(ans' → logprob: -7.227512836456299
    7. 'Ans' → logprob: -8.727513313293457
    8. '(z' → logprob: -9.102513313293457
    9. 'N' → logprob: -9.352513313293457
    10. '(' → logprob: -9.352513313293457

Token 1598: '`' (ID: 63)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3498876094818115
    2. '(lambda' → logprob: -1.5998876094818115
    3. '(' → logprob: -2.7248876094818115
    4. '(
' → logprob: -3.5998876094818115
    5. '
' → logprob: -9.22488784790039
    6. '```' → logprob: -9.47488784790039
    7. '(function' → logprob: -9.97488784790039
    8. ')' → logprob: -9.97488784790039
    9. '((' → logprob: -10.34988784790039
    10. '(func' → logprob: -10.47488784790039

Token 1599: ' pour' (ID: 1930)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.9134727120399475
    2. '(lambda' → logprob: -1.4134726524353027
    3. ',' → logprob: -1.9134726524353027
    4. 'ans' → logprob: -2.5384726524353027
    5. 'lambda' → logprob: -3.5384726524353027
    6. '_ans' → logprob: -3.6634726524353027
    7. '_' → logprob: -3.7884726524353027
    8. '(ans' → logprob: -4.413472652435303
    9. 'def' → logprob: -5.163472652435303
    10. '(
' → logprob: -5.163472652435303

Token 1600: ' appliquer' (ID: 172872)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.006463236175477505
    2. '(lambda' → logprob: -5.256463050842285
    3. ' lambda' → logprob: -7.256463050842285
    4. 'f' → logprob: -8.006463050842285
    5. 'reduce' → logprob: -8.631463050842285
    6. '   ' → logprob: -12.506463050842285
    7. '
' → logprob: -12.881463050842285
    8. '_lambda' → logprob: -13.631463050842285
    9. '...' → logprob: -13.756463050842285
    10. '=lambda' → logprob: -14.256463050842285

Token 1601: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06307340413331985
    2. '(f' → logprob: -3.3130733966827393
    3. 'lambda' → logprob: -4.438073635101318
    4. '(lambda' → logprob: -4.813073635101318
    5. '(
' → logprob: -5.813073635101318
    6. ' f' → logprob: -6.563073635101318
    7. '
' → logprob: -9.18807315826416
    8. '(' → logprob: -9.43807315826416
    9. '   ' → logprob: -9.81307315826416
    10. ' lambda' → logprob: -9.93807315826416

Token 1602: ' fonction' (ID: 17610)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.038271214812994
    2. 'lambda' → logprob: -3.288271188735962
    3. 'partial' → logprob: -9.163270950317383
    4. '(lambda' → logprob: -10.288270950317383
    5. 'fun' → logprob: -10.538270950317383
    6. ' f' → logprob: -10.663270950317383
    7. ' lambda' → logprob: -11.038270950317383
    8. '
' → logprob: -11.663270950317383
    9. 'reduce' → logprob: -12.038270950317383
    10. '(f' → logprob: -12.413270950317383

Token 1603: ' `' (ID: 2700)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.09380784630775452
    2. '(lambda' → logprob: -2.5938079357147217
    3. 'f' → logprob: -4.843807697296143
    4. '(
' → logprob: -5.218807697296143
    5. '(' → logprob: -6.593807697296143
    6. 'lambda' → logprob: -8.9688081741333
    7. '```' → logprob: -12.0938081741333
    8. '(
' → logprob: -12.9688081741333
    9. '(fun' → logprob: -13.4688081741333
    10. '(func' → logprob: -13.4688081741333

Token 1604: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.200166469876422e-06
    2. 'lambda' → logprob: -12.375004768371582
    3. 'fun' → logprob: -15.000004768371582
    4. 'reduce' → logprob: -15.500004768371582
    5. '```' → logprob: -15.500004768371582
    6. ' f' → logprob: -16.2500057220459
    7. 'partial' → logprob: -16.3750057220459
    8. '(f' → logprob: -17.5000057220459
    9. '
' → logprob: -17.6250057220459
    10. '`' → logprob: -18.3750057220459

Token 1605: '`' (ID: 63)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.64509117603302
    2. '(lambda' → logprob: -1.02009117603302
    3. ',' → logprob: -2.2700910568237305
    4. '(' → logprob: -5.5200910568237305
    5. ')' → logprob: -6.3950910568237305
    6. 'f' → logprob: -6.7700910568237305
    7. '(
' → logprob: -6.8950910568237305
    8. 'lambda' → logprob: -6.8950910568237305
    9. ',f' → logprob: -7.0200910568237305
    10. '```' → logprob: -7.1450910568237305

Token 1606: ' sur' (ID: 1512)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.10909216850996017
    2. ',' → logprob: -2.9840922355651855
    3. '(
' → logprob: -3.8590922355651855
    4. '(f' → logprob: -4.6090922355651855
    5. 'lambda' → logprob: -5.3590922355651855
    6. ')' → logprob: -5.6090922355651855
    7. '(' → logprob: -5.9840922355651855
    8. '
' → logprob: -5.9840922355651855
    9. '```' → logprob: -6.1090922355651855
    10. 'f' → logprob: -6.8590922355651855

Token 1607: ' chaque' (ID: 21194)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00029244067263789475
    2. '(S' → logprob: -9.000292778015137
    3. 'range' → logprob: -9.375292778015137
    4. 'enumer' → logprob: -10.375292778015137
    5. 'lambda' → logprob: -10.750292778015137
    6. ' S' → logprob: -11.250292778015137
    7. '[S' → logprob: -12.250292778015137
    8. 'list' → logprob: -12.250292778015137
    9. 'f' → logprob: -13.000292778015137
    10. '(lambda' → logprob: -13.000292778015137

Token 1608: ' balle' (ID: 147386)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06071323901414871
    2. 's' → logprob: -3.435713291168213
    3. '_' → logprob: -3.810713291168213
    4. '(S' → logprob: -6.185713291168213
    5. '_S' → logprob: -7.435713291168213
    6. '_s' → logprob: -8.060712814331055
    7. '_
' → logprob: -8.435712814331055
    8. 'token' → logprob: -8.560712814331055
    9. 'char' → logprob: -8.685712814331055
    10. ' S' → logprob: -8.810712814331055

Token 1609: ' dans' (ID: 2671)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5032331347465515
    2. '_,' → logprob: -1.6282331943511963
    3. ',' → logprob: -1.7532331943511963
    4. 'lambda' → logprob: -4.878232955932617
    5. '(ans' → logprob: -5.253232955932617
    6. '(f' → logprob: -6.003232955932617
    7. '(_,' → logprob: -6.003232955932617
    8. 'ans' → logprob: -6.253232955932617
    9. 'f' → logprob: -6.753232955932617
    10. '(
' → logprob: -7.128232955932617

Token 1610: ' l' (ID: 305)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0005618501454591751
    2. ' S' → logprob: -7.500561714172363
    3. '(S' → logprob: -12.875561714172363
    4. 'reduce' → logprob: -13.000561714172363
    5. 'range' → logprob: -13.500561714172363
    6. '   ' → logprob: -13.750561714172363
    7. 's' → logprob: -15.125561714172363
    8. '_S' → logprob: -15.375561714172363
    9. '	S' → logprob: -15.500561714172363
    10. ' ' → logprob: -15.500561714172363

Token 1611: ''ordre' (ID: 124753)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.016810543835163116
    2. 'N' → logprob: -5.141810417175293
    3. 'reduce' → logprob: -5.141810417175293
    4. '_' → logprob: -7.266810417175293
    5. ' S' → logprob: -7.516810417175293
    6. 'input' → logprob: -7.766810417175293
    7. 's' → logprob: -7.891810417175293
    8. '(S' → logprob: -8.016810417175293
    9. 'range' → logprob: -8.016810417175293
    10. 'chain' → logprob: -8.641810417175293

Token 1612: ',
' (ID: 412)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6484856605529785
    2. ',' → logprob: -1.7734856605529785
    3. '_,' → logprob: -2.3984856605529785
    4. '_' → logprob: -3.2734856605529785
    5. ')' → logprob: -3.3984856605529785
    6. '(
' → logprob: -3.5234856605529785
    7. '(f' → logprob: -3.7734856605529785
    8. '(ans' → logprob: -4.0234856605529785
    9. '(' → logprob: -4.1484856605529785
    10. '(res' → logprob: -4.2734856605529785

Token 1613: '#' (ID: 2)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6223273873329163
    2. ' lambda' → logprob: -1.3723273277282715
    3. '_,' → logprob: -2.6223273277282715
    4. '(lambda' → logprob: -2.8723273277282715
    5. 'None' → logprob: -3.9973273277282715
    6. '_' → logprob: -4.2473273277282715
    7. '   ' → logprob: -4.2473273277282715
    8. 'initial' → logprob: -5.3723273277282715
    9. 'Mod' → logprob: -5.3723273277282715
    10. '(_,' → logprob: -5.3723273277282715

Token 1614: ' en' (ID: 469)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.6707530617713928
    2. 'ans' → logprob: -1.295753002166748
    3. 'lambda' → logprob: -2.045753002166748
    4. '(_,' → logprob: -3.545753002166748
    5. '(lambda' → logprob: -3.920753002166748
    6. 'None' → logprob: -4.295753002166748
    7. '(ans' → logprob: -5.420753002166748
    8. ' lambda' → logprob: -5.670753002166748
    9. ' ans' → logprob: -5.920753002166748
    10. ' _,' → logprob: -6.045753002166748

Token 1615: ' comm' (ID: 1394)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.0952222347259521
    2. '   ' → logprob: -1.3452222347259521
    3. 'lambda' → logprob: -2.470222234725952
    4. 'initial' → logprob: -2.845222234725952
    5. '(lambda' → logprob: -3.345222234725952
    6. '    ' → logprob: -3.720222234725952
    7. ' functools' → logprob: -3.720222234725952
    8. '(' → logprob: -3.845222234725952
    9. ' initial' → logprob: -4.095222473144531
    10. ' reduce' → logprob: -4.095222473144531

Token 1616: 'en' (ID: 262)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.41313862800598145
    2. 'ute' → logprob: -1.1631386280059814
    3. 'ule' → logprob: -5.288138389587402
    4. 'u' → logprob: -5.288138389587402
    5. 'utable' → logprob: -5.788138389587402
    6. 'uting' → logprob: -5.913138389587402
    7. 'le' → logprob: -6.788138389587402
    8. 'et' → logprob: -7.038138389587402
    9. 'el' → logprob: -7.038138389587402
    10. 'uta' → logprob: -7.413138389587402

Token 1617: 'çant' (ID: 78714)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.40788891911506653
    2. 'te' → logprob: -1.5328888893127441
    3. 't' → logprob: -3.157888889312744
    4. 'le' → logprob: -3.657888889312744
    5. 'ute' → logprob: -3.782888889312744
    6. 'ence' → logprob: -4.532888889312744
    7. 'ent' → logprob: -5.157888889312744
    8. 'de' → logprob: -6.032888889312744
    9. 'uting' → logprob: -6.657888889312744
    10. 'ut' → logprob: -6.782888889312744

Token 1618: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8376468420028687
    2. 'from' → logprob: -1.2126468420028687
    3. 'with' → logprob: -1.9626468420028687
    4. 'avec' → logprob: -3.337646961212158
    5. 'par' → logprob: -3.587646961212158
    6. '(Mod' → logprob: -3.837646961212158
    7. '=(' → logprob: -4.212646961212158
    8. ')' → logprob: -4.712646961212158
    9. '   ' → logprob: -5.087646961212158
    10. '(initial' → logprob: -5.962646961212158

Token 1619: ' l' (ID: 305)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.40872955322265625
    2. '(' → logprob: -1.5337295532226562
    3. ' (' → logprob: -2.1587295532226562
    4. '(N' → logprob: -6.033729553222656
    5. '(range' → logprob: -7.658729553222656
    6. '   ' → logprob: -7.908729553222656
    7. '(lambda' → logprob: -8.158729553222656
    8. '((' → logprob: -9.158729553222656
    9. '(initial' → logprob: -9.283729553222656
    10. '(res' → logprob: -9.283729553222656

Token 1620: ''état' (ID: 116357)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.04340813308954239
    2. ' (' → logprob: -4.293407917022705
    3. '(' → logprob: -4.418407917022705
    4. '(None' → logprob: -5.293407917022705
    5. 'Mod' → logprob: -6.418407917022705
    6. '(initial' → logprob: -6.418407917022705
    7. '(N' → logprob: -6.543407917022705
    8. 'initial' → logprob: -6.918407917022705
    9. '(res' → logprob: -7.293407917022705
    10. 'tuple' → logprob: -7.418407917022705

Token 1621: ' initial' (ID: 4871)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.1018680334091187
    2. '=' → logprob: -1.2268680334091187
    3. '=(' → logprob: -1.8518680334091187
    4. '(Mod' → logprob: -2.601868152618408
    5. '(initial' → logprob: -2.726868152618408
    6. '=lambda' → logprob: -3.351868152618408
    7. '(' → logprob: -3.726868152618408
    8. 'initial' → logprob: -5.851868152618408
    9. ' =' → logprob: -5.976868152618408
    10. '((' → logprob: -5.976868152618408

Token 1622: ' :
' (ID: 10039)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1638637781143188
    2. 'ans' → logprob: -1.6638637781143188
    3. '_,' → logprob: -2.1638636589050293
    4. ' =' → logprob: -2.4138636589050293
    5. ',' → logprob: -2.6638636589050293
    6. '(ans' → logprob: -2.6638636589050293
    7. '(lambda' → logprob: -3.1638636589050293
    8. 'res' → logprob: -3.6638636589050293
    9. ')' → logprob: -3.9138636589050293
    10. '(res' → logprob: -4.788863658905029

Token 1623: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9598211646080017
    2. '(Mod' → logprob: -1.2098212242126465
    3. '(ans' → logprob: -1.4598212242126465
    4. 'Mod' → logprob: -3.5848212242126465
    5. ' (' → logprob: -3.7098212242126465
    6. '(' → logprob: -4.8348212242126465
    7. 'res' → logprob: -4.9598212242126465
    8. '(lambda' → logprob: -5.0848212242126465
    9. '(
' → logprob: -5.4598212242126465
    10. '(res' → logprob: -5.9598212242126465

Token 1624: ' -' (ID: 533)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.2204141914844513
    2. 'ans' → logprob: -2.345414161682129
    3. 'Mod' → logprob: -3.220414161682129
    4. '(ans' → logprob: -3.595414161682129
    5. '(lambda' → logprob: -4.470414161682129
    6. '(' → logprob: -4.595414161682129
    7. 'res' → logprob: -5.970414161682129
    8. 'lambda' → logprob: -5.970414161682129
    9. ' (' → logprob: -6.345414161682129
    10. '(
' → logprob: -6.720414161682129

Token 1625: ' res' (ID: 694)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.2395315170288086
    2. 'Mod' → logprob: -1.7395315170288086
    3. 'ans' → logprob: -4.239531517028809
    4. '(' → logprob: -4.614531517028809
    5. '(ans' → logprob: -5.364531517028809
    6. 'N' → logprob: -5.989531517028809
    7. '(N' → logprob: -6.239531517028809
    8. '1' → logprob: -6.864531517028809
    9. '0' → logprob: -7.364531517028809
    10. '(M' → logprob: -7.864531517028809

Token 1626: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37921154499053955
    2. '=' → logprob: -1.2542115449905396
    3. ',' → logprob: -3.50421142578125
    4. ')' → logprob: -9.50421142578125
    5. ' ,' → logprob: -10.12921142578125
    6. '   ' → logprob: -10.62921142578125
    7. '=None' → logprob: -11.12921142578125
    8. '```' → logprob: -11.50421142578125
    9. '=
' → logprob: -11.87921142578125
    10. ',
' → logprob: -12.12921142578125

Token 1627: 'Mod' (ID: 4721)
  Prédit: 'Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0016887469682842493
    2. '(Mod' → logprob: -6.6266889572143555
    3. '1' → logprob: -8.001688957214355
    4. ' Mod' → logprob: -11.251688957214355
    5. '(' → logprob: -11.626688957214355
    6. '0' → logprob: -14.001688957214355
    7. 'MOD' → logprob: -14.626688957214355
    8. '(M' → logprob: -14.626688957214355
    9. 'mod' → logprob: -14.876688957214355
    10. 'Modulo' → logprob: -14.876688957214355

Token 1628: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.512236498361744e-07
    2. '_int' → logprob: -15.625000953674316
    3. 'In' → logprob: -15.875000953674316
    4. 'int' → logprob: -16.125
    5. ' Int' → logprob: -18.125
    6. '_Int' → logprob: -18.375
    7. 'Ints' → logprob: -18.875
    8. '	Int' → logprob: -19.5
    9. 'I' → logprob: -19.75
    10. '```' → logprob: -19.75

Token 1629: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036391536705195904
    2. '(N' → logprob: -6.128639221191406
    3. '1' → logprob: -6.628639221191406
    4. '((' → logprob: -10.253639221191406
    5. 'N' → logprob: -10.753639221191406
    6. '(Mod' → logprob: -10.878639221191406
    7. '(M' → logprob: -11.753639221191406
    8. '(n' → logprob: -12.128639221191406
    9. ' (' → logprob: -12.253639221191406
    10. '(pow' → logprob: -12.378639221191406

Token 1630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4055788516998291
    2. 'N' → logprob: -1.155578851699829
    3. '3' → logprob: -4.28057861328125
    4. '0' → logprob: -6.53057861328125
    5. '(' → logprob: -7.28057861328125
    6. '(N' → logprob: -7.28057861328125
    7. '2' → logprob: -7.78057861328125
    8. 'pow' → logprob: -8.28057861328125
    9. 'M' → logprob: -8.40557861328125
    10. 'K' → logprob: -9.03057861328125

Token 1631: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03316700458526611
    2. '),' → logprob: -3.5331668853759766
    3. ')' → logprob: -6.283166885375977
    4. '0' → logprob: -7.408166885375977
    5. ')
' → logprob: -7.783166885375977
    6. '),
' → logprob: -8.033166885375977
    7. ',
' → logprob: -9.783166885375977
    8. '(' → logprob: -10.658166885375977
    9. '   ' → logprob: -10.783166885375977
    10. ',),' → logprob: -11.283166885375977

Token 1632: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013546408154070377
    2. '0' → logprob: -7.376354694366455
    3. ',
' → logprob: -7.876354694366455
    4. '(' → logprob: -8.876354217529297
    5. ' ,' → logprob: -8.876354217529297
    6. 'N' → logprob: -11.126354217529297
    7. ' (' → logprob: -11.376354217529297
    8. ')' → logprob: -12.126354217529297
    9. '   ' → logprob: -12.251354217529297
    10. ',(' → logprob: -12.251354217529297

Token 1633: ' ' (ID: 220)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.6492728590965271
    2. '(' → logprob: -1.5242729187011719
    3. '1' → logprob: -1.5242729187011719
    4. '(Mod' → logprob: -3.899272918701172
    5. '0' → logprob: -5.274272918701172
    6. '_,' → logprob: -5.524272918701172
    7. '_' → logprob: -5.649272918701172
    8. '(_,' → logprob: -5.774272918701172
    9. 'N' → logprob: -6.024272918701172
    10. '_(' → logprob: -6.899272918701172

Token 1634: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006841945927590132
    2. '_' → logprob: -5.881842136383057
    3. '0' → logprob: -6.006842136383057
    4. '(N' → logprob: -7.506842136383057
    5. '_,' → logprob: -8.256841659545898
    6. '(' → logprob: -8.506841659545898
    7. 'Mod' → logprob: -9.381841659545898
    8. 'z' → logprob: -9.631841659545898
    9. '_N' → logprob: -9.631841659545898
    10. ' N' → logprob: -9.756841659545898

Token 1635: ' façon' (ID: 33381)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036617142613977194
    2. ',
' → logprob: -5.878661632537842
    3. ')' → logprob: -7.503661632537842
    4. ' ,' → logprob: -8.753662109375
    5. '),' → logprob: -9.503662109375
    6. '<|end|>' → logprob: -11.128662109375
    7. '
' → logprob: -11.378662109375
    8. ' ' → logprob: -11.878662109375
    9. ',
' → logprob: -12.253662109375
    10. ',None' → logprob: -13.128662109375

Token 1636: ' initial' (ID: 4871)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008486329577863216
    2. '(' → logprob: -6.008486270904541
    3. ',
' → logprob: -6.508486270904541
    4. '_,' → logprob: -6.633486270904541
    5. '<|end|>' → logprob: -6.758486270904541
    6. '   ' → logprob: -7.133486270904541
    7. ')' → logprob: -7.633486270904541
    8. ' ,' → logprob: -8.3834867477417
    9. '(
' → logprob: -9.2584867477417
    10. '_' → logprob: -9.7584867477417

Token 1637: 'e' (ID: 68)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.710833728313446
    2. ',' → logprob: -1.2108337879180908
    3. ')' → logprob: -1.8358337879180908
    4. '=' → logprob: -3.335833787918091
    5. ' =' → logprob: -5.085833549499512
    6. ')
' → logprob: -5.960833549499512
    7. '(' → logprob: -6.710833549499512
    8. '),
' → logprob: -6.710833549499512
    9. ')`' → logprob: -7.210833549499512
    10. '))' → logprob: -8.335833549499512

Token 1638: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001951945130713284
    2. ' ,' → logprob: -7.251952171325684
    3. '(' → logprob: -7.626952171325684
    4. ',
' → logprob: -8.376952171325684
    5. '0' → logprob: -8.501952171325684
    6. '_,' → logprob: -9.126952171325684
    7. ' (' → logprob: -10.376952171325684
    8. '```' → logprob: -10.376952171325684
    9. ')' → logprob: -10.626952171325684
    10. '   ' → logprob: -10.751952171325684

Token 1639: '#' (ID: 2)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.012123556807637215
    2. '_' → logprob: -4.6371235847473145
    3. '(_,' → logprob: -6.5121235847473145
    4. ' _,' → logprob: -8.012123107910156
    5. '_
' → logprob: -8.887123107910156
    6. '(' → logprob: -8.887123107910156
    7. '
' → logprob: -10.012123107910156
    8. '_,
' → logprob: -10.262123107910156
    9. '1' → logprob: -10.387123107910156
    10. ',' → logprob: -10.512123107910156

Token 1640: ' -' (ID: 533)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.009438485838472843
    2. '_' → logprob: -5.509438514709473
    3. '(_,' → logprob: -5.759438514709473
    4. 'ans' → logprob: -6.759438514709473
    5. ' _,' → logprob: -8.509438514709473
    6. '(' → logprob: -9.134438514709473
    7. 'z' → logprob: -9.259438514709473
    8. '_
' → logprob: -9.259438514709473
    9. 'res' → logprob: -9.259438514709473
    10. '0' → logprob: -9.509438514709473

Token 1641: ' z' (ID: 579)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008071460761129856
    2. '_' → logprob: -5.133071422576904
    3. 'z' → logprob: -6.258071422576904
    4. '_N' → logprob: -9.883071899414062
    5. ' N' → logprob: -10.133071899414062
    6. 'Z' → logprob: -10.258071899414062
    7. '0' → logprob: -10.383071899414062
    8. '_,' → logprob: -11.008071899414062
    9. 'ans' → logprob: -12.008071899414062
    10. '(N' → logprob: -12.133071899414062

Token 1642: '=N' (ID: 143132)
  Prédit: '=N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=N' → logprob: -0.3575671315193176
    2. '=' → logprob: -1.2325670719146729
    3. ' =' → logprob: -4.732567310333252
    4. ',' → logprob: -8.482566833496094
    5. ',N' → logprob: -10.732566833496094
    6. '=int' → logprob: -11.357566833496094
    7. '=
' → logprob: -11.482566833496094
    8. '   ' → logprob: -11.982566833496094
    9. '=len' → logprob: -12.857566833496094
    10. 'N' → logprob: -13.357566833496094

Token 1643: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48064446449279785
    2. '=' → logprob: -0.9806444644927979
    3. ' =' → logprob: -5.355644226074219
    4. '```' → logprob: -7.355644226074219
    5. ')' → logprob: -7.855644226074219
    6. ',
' → logprob: -8.605644226074219
    7. '_,' → logprob: -8.855644226074219
    8. ' ,' → logprob: -9.605644226074219
    9. '
' → logprob: -9.855644226074219
    10. '#' → logprob: -10.105644226074219

Token 1644: ' tous' (ID: 10688)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0010968804126605392
    2. 'z' → logprob: -6.876096725463867
    3. ' N' → logprob: -11.001096725463867
    4. 'r' → logprob: -11.376096725463867
    5. 'rest' → logprob: -11.501096725463867
    6. '0' → logprob: -11.876096725463867
    7. '#' → logprob: -12.251096725463867
    8. '```' → logprob: -12.626096725463867
    9. 'Z' → logprob: -14.126096725463867
    10. 'b' → logprob: -14.251096725463867

Token 1645: ' n' (ID: 297)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3712291419506073
    2. ' les' → logprob: -1.2462291717529297
    3. 'sans' → logprob: -4.49622917175293
    4. 'des' → logprob: -6.12122917175293
    5. ' ceux' → logprob: -6.37122917175293
    6. ' des' → logprob: -6.62122917175293
    7. ' ' → logprob: -6.87122917175293
    8. ',' → logprob: -7.24622917175293
    9. '```' → logprob: -7.37122917175293
    10. ' sans' → logprob: -7.37122917175293

Token 1646: ''ont' (ID: 64195)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6205502152442932
    2. ' =' → logprob: -1.3705501556396484
    3. '<|end|>' → logprob: -2.6205501556396484
    4. ')' → logprob: -2.8705501556396484
    5. '
' → logprob: -4.245550155639648
    6. 'obody' → logprob: -4.745550155639648
    7. '```' → logprob: -5.120550155639648
    8. 'des' → logprob: -5.245550155639648
    9. 'sans' → logprob: -5.245550155639648
    10. 's' → logprob: -5.245550155639648

Token 1647: ' pas' (ID: 2173)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04540829733014107
    2. 'initial' → logprob: -3.920408248901367
    3. ' N' → logprob: -4.920408248901367
    4. 'le' → logprob: -5.670408248901367
    5. 'auc' → logprob: -5.670408248901367
    6. ' encore' → logprob: -7.045408248901367
    7. 'au' → logprob: -7.170408248901367
    8. 'des' → logprob: -7.170408248901367
    9. '<|end|>' → logprob: -7.170408248901367
    10. 'une' → logprob: -7.295408248901367

Token 1648: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6420288681983948
    2. 'de' → logprob: -0.7670288681983948
    3. 'ball' → logprob: -5.51702880859375
    4. 'b' → logprob: -6.76702880859375
    5. ' une' → logprob: -6.89202880859375
    6. ' ' → logprob: -7.64202880859375
    7. ' ' → logprob: -7.76702880859375
    8. ' des' → logprob: -7.76702880859375
    9. ' balle' → logprob: -7.89202880859375
    10. 'une' → logprob: -8.14202880859375

Token 1649: ' ball' (ID: 7880)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8102964162826538
    2. 'ball' → logprob: -1.3102964162826538
    3. ' balle' → logprob: -1.3102964162826538
    4. ' ball' → logprob: -4.810296535491943
    5. '```' → logprob: -5.685296535491943
    6. ' ' → logprob: -6.435296535491943
    7. 'bal' → logprob: -7.060296535491943
    8. ' b' → logprob: -7.810296535491943
    9. ' ' → logprob: -8.622796058654785
    10. 'balls' → logprob: -8.872796058654785

Token 1650: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.062250327318906784
    2. 'e' → logprob: -2.8122503757476807
    3. 'les' → logprob: -8.437250137329102
    4. 'le' → logprob: -10.812250137329102
    5. 'alle' → logprob: -10.937250137329102
    6. '```' → logprob: -12.187250137329102
    7. 'ues' → logprob: -12.812250137329102
    8. 'onnes' → logprob: -13.062250137329102
    9. '\' → logprob: -13.187250137329102
    10. 'alles' → logprob: -13.687250137329102

Token 1651: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00358759518712759
    2. ' ,' → logprob: -6.50358772277832
    3. ',
' → logprob: -7.25358772277832
    4. '   ' → logprob: -7.75358772277832
    5. '=' → logprob: -8.50358772277832
    6. '_,' → logprob: -8.62858772277832
    7. '```' → logprob: -8.75358772277832
    8. ')' → logprob: -9.50358772277832
    9. ' =' → logprob: -9.75358772277832
    10. '(' → logprob: -9.75358772277832

Token 1652: ' départ' (ID: 32693)
  Prédit: ' départ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' départ' → logprob: -1.0433542728424072
    2. 'dé' → logprob: -1.2933542728424072
    3. 'tout' → logprob: -1.4183542728424072
    4. 'depart' → logprob: -2.5433542728424072
    5. 'all' → logprob: -4.293354034423828
    6. 'prem' → logprob: -4.918354034423828
    7. 'dep' → logprob: -5.168354034423828
    8. 't' → logprob: -5.168354034423828
    9. '```' → logprob: -5.168354034423828
    10. 'total' → logprob: -6.168354034423828

Token 1653: '
' (ID: 198)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.46178945899009705
    2. ',' → logprob: -1.0867894887924194
    3. ')' → logprob: -4.461789608001709
    4. '(_,' → logprob: -5.586789608001709
    5. '(' → logprob: -5.711789608001709
    6. '_' → logprob: -5.836789608001709
    7. ',
' → logprob: -6.711789608001709
    8. '),' → logprob: -6.711789608001709
    9. 'res' → logprob: -6.961789608001709
    10. 'ans' → logprob: -7.086789608001709

Token 1654: '#' (ID: 2)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.06766033917665482
    2. 'ans' → logprob: -2.942660331726074
    3. '_' → logprob: -5.692660331726074
    4. ',' → logprob: -5.817660331726074
    5. '(_,' → logprob: -6.067660331726074
    6. '```' → logprob: -6.942660331726074
    7. 'res' → logprob: -7.067660331726074
    8. '(ans' → logprob: -7.442660331726074
    9. ' _,' → logprob: -7.942660331726074
    10. '_ans' → logprob: -8.192660331726074

Token 1655: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0942835584282875
    2. '0' → logprob: -2.7192835807800293
    3. ' ,' → logprob: -5.094283580780029
    4. '   ' → logprob: -5.219283580780029
    5. 'r' → logprob: -5.969283580780029
    6. 'None' → logprob: -6.469283580780029
    7. '1' → logprob: -6.719283580780029
    8. 'N' → logprob: -6.844283580780029
    9. '```' → logprob: -7.219283580780029
    10. '(' → logprob: -7.469283580780029

Token 1656: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.26199185848236084
    2. '0' → logprob: -1.5119918584823608
    3. ' r' → logprob: -4.88699197769165
    4. ' ' → logprob: -6.38699197769165
    5. 'N' → logprob: -7.26199197769165
    6. ' N' → logprob: -10.386991500854492
    7. '   ' → logprob: -11.011991500854492
    8. '```' → logprob: -12.261991500854492
    9. 'R' → logprob: -12.636991500854492
    10. '(' → logprob: -12.636991500854492

Token 1657: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008128228597342968
    2. '=N' → logprob: -5.5081281661987305
    3. '+' → logprob: -6.1331281661987305
    4. ',' → logprob: -6.5081281661987305
    5. ' =' → logprob: -8.88312816619873
    6. ',N' → logprob: -9.13312816619873
    7. '+=' → logprob: -10.13312816619873
    8. '+,' → logprob: -10.75812816619873
    9. '=
' → logprob: -10.88312816619873
    10. '=True' → logprob: -10.88312816619873

Token 1658: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.38983777165412903
    2. 'g' → logprob: -1.1398377418518066
    3. '0' → logprob: -5.889837741851807
    4. ' ' → logprob: -8.889838218688965
    5. ' ' → logprob: -10.764838218688965
    6. '	g' → logprob: -11.264838218688965
    7. ',' → logprob: -11.514838218688965
    8. ' 
' → logprob: -13.514838218688965
    9. '```' → logprob: -13.514838218688965
    10. '   ' → logprob: -13.764838218688965

Token 1659: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1429203897714615
    2. ',' → logprob: -2.01792049407959
    3. ',b' → logprob: -9.39292049407959
    4. ' =' → logprob: -10.26792049407959
    5. '=
' → logprob: -10.39292049407959
    6. '0' → logprob: -10.39292049407959
    7. 'b' → logprob: -11.01792049407959
    8. ' ,' → logprob: -11.01792049407959
    9. ',
' → logprob: -11.76792049407959
    10. '```' → logprob: -12.26792049407959

Token 1660: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25193148851394653
    2. ' b' → logprob: -1.5019314289093018
    3. '```' → logprob: -13.251931190490723
    4. 'g' → logprob: -15.751931190490723
    5. ',' → logprob: -15.876931190490723
    6. ' ' → logprob: -16.37693214416504
    7. ' g' → logprob: -16.50193214416504
    8. '   ' → logprob: -16.87693214416504
    9. '``' → logprob: -16.87693214416504
    10. ',b' → logprob: -17.87693214416504

Token 1661: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04465173929929733
    2. ',' → logprob: -3.294651746749878
    3. ' =' → logprob: -5.044651508331299
    4. '0' → logprob: -9.044651985168457
    5. '=
' → logprob: -12.044651985168457
    6. ' ,' → logprob: -12.294651985168457
    7. ',r' → logprob: -13.294651985168457
    8. '```' → logprob: -13.669651985168457
    9. ',
' → logprob: -13.794651985168457
    10. '=None' → logprob: -13.919651985168457

Token 1662: ' rg' (ID: 34570)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067771850153803825
    2. 'rg' → logprob: -5.131777286529541
    3. ' ' → logprob: -7.256777286529541
    4. ' rg' → logprob: -9.631776809692383
    5. '
' → logprob: -10.256776809692383
    6. '_,' → logprob: -11.131776809692383
    7. '   ' → logprob: -12.006776809692383
    8. ',' → logprob: -12.006776809692383
    9. '```' → logprob: -12.381776809692383
    10. '_' → logprob: -13.131776809692383

Token 1663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022298341616988182
    2. '=' → logprob: -3.8972983360290527
    3. ' =' → logprob: -6.522298336029053
    4. ' ,' → logprob: -8.647298812866211
    5. '0' → logprob: -10.522298812866211
    6. '```' → logprob: -10.522298812866211
    7. ',
' → logprob: -10.772298812866211
    8. ',r' → logprob: -12.022298812866211
    9. ',g' → logprob: -12.272298812866211
    10. '`,' → logprob: -13.022298812866211

Token 1664: ' gb' (ID: 21144)
  Prédit: ' gb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gb' → logprob: -0.10957200080156326
    2. 'gb' → logprob: -2.734571933746338
    3. ' br' → logprob: -3.734571933746338
    4. 'br' → logprob: -4.234571933746338
    5. 'b' → logprob: -7.859571933746338
    6. '```' → logprob: -10.234572410583496
    7. ' b' → logprob: -10.359572410583496
    8. ' rb' → logprob: -11.359572410583496
    9. '0' → logprob: -11.484572410583496
    10. '	gb' → logprob: -12.234572410583496

Token 1665: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010374385863542557
    2. '=' → logprob: -4.635374546051025
    3. ' =' → logprob: -8.510374069213867
    4. ' ,' → logprob: -8.885374069213867
    5. ',
' → logprob: -9.760374069213867
    6. '```' → logprob: -9.885374069213867
    7. ',b' → logprob: -10.010374069213867
    8. '0' → logprob: -10.135374069213867
    9. ',r' → logprob: -10.385374069213867
    10. '
' → logprob: -12.010374069213867

Token 1666: ' br' (ID: 1294)
  Prédit: ' br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' br' → logprob: -0.3868783116340637
    2. 'br' → logprob: -1.136878252029419
    3. '```' → logprob: -12.38687801361084
    4. '	br' → logprob: -13.51187801361084
    5. 'b' → logprob: -14.26187801361084
    6. ' ' → logprob: -15.26187801361084
    7. '(br' → logprob: -15.51187801361084
    8. '0' → logprob: -15.88687801361084
    9. 'Br' → logprob: -16.386878967285156
    10. 'rb' → logprob: -16.386878967285156

Token 1667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13146524131298065
    2. ',' → logprob: -2.256465196609497
    3. ' =' → logprob: -4.006465435028076
    4. '0' → logprob: -8.506464958190918
    5. ')' → logprob: -10.881464958190918
    6. '```' → logprob: -10.881464958190918
    7. ' ,' → logprob: -11.756464958190918
    8. ',
' → logprob: -12.006464958190918
    9. '=
' → logprob: -12.631464958190918
    10. '   ' → logprob: -13.256464958190918

Token 1668: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005718595930375159
    2. '(' → logprob: -7.5005717277526855
    3. ' ' → logprob: -11.875572204589844
    4. '[' → logprob: -12.500572204589844
    5. '
' → logprob: -12.750572204589844
    6. ',' → logprob: -14.000572204589844
    7. ' (' → logprob: -14.000572204589844
    8. 'N' → logprob: -14.750572204589844
    9. '۰' → logprob: -14.750572204589844
    10. '`' → logprob: -14.875572204589844

Token 1669: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014287306112237275
    2. '(' → logprob: -8.875143051147461
    3. '[' → logprob: -13.625143051147461
    4. ' ' → logprob: -14.250143051147461
    5. '
' → logprob: -15.500143051147461
    6. '۰' → logprob: -15.625143051147461
    7. '(Mod' → logprob: -16.12514305114746
    8. ' (' → logprob: -16.25014305114746
    9. 'Mod' → logprob: -16.62514305114746
    10. '000' → logprob: -16.75014305114746

Token 1670: ' :' (ID: 712)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -1.1749638319015503
    2. ',' → logprob: -1.2999638319015503
    3. ')' → logprob: -2.04996395111084
    4. '(ans' → logprob: -2.54996395111084
    5. ')
' → logprob: -2.67496395111084
    6. 'ans' → logprob: -2.67496395111084
    7. '
' → logprob: -3.79996395111084
    8. 'res' → logprob: -4.54996395111084
    9. '),' → logprob: -5.29996395111084
    10. '(' → logprob: -5.42496395111084

Token 1671: ' aucun' (ID: 41678)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012528485618531704
    2. '(' → logprob: -5.137528419494629
    3. ',' → logprob: -6.012528419494629
    4. '
' → logprob: -6.762528419494629
    5. '_,' → logprob: -6.762528419494629
    6. '_' → logprob: -7.762528419494629
    7. ' ' → logprob: -7.887528419494629
    8. '=' → logprob: -8.387528419494629
    9. ' =' → logprob: -8.887528419494629
    10. ')' → logprob: -9.137528419494629

Token 1672: ' n' (ID: 297)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4825737178325653
    2. '_,' → logprob: -1.1075737476348877
    3. ',' → logprob: -3.7325737476348877
    4. 'ans' → logprob: -4.607573509216309
    5. '_
' → logprob: -5.732573509216309
    6. '_ans' → logprob: -5.732573509216309
    7. '_=' → logprob: -6.607573509216309
    8. ')' → logprob: -6.607573509216309
    9. '(_,' → logprob: -6.732573509216309
    10. '_)' → logprob: -6.857573509216309

Token 1673: ''a' (ID: 10443)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020514443516731262
    2. ',' → logprob: -5.395514488220215
    3. '```' → logprob: -5.395514488220215
    4. '=None' → logprob: -5.520514488220215
    5. '_=' → logprob: -6.770514488220215
    6. 'ball' → logprob: -6.895514488220215
    7. '_' → logprob: -7.020514488220215
    8. '<|end|>' → logprob: -7.145514488220215
    9. ')' → logprob: -7.270514488220215
    10. 'a' → logprob: -7.520514488220215

Token 1674: ' une' (ID: 2463)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5810624957084656
    2. 'auc' → logprob: -1.0810625553131104
    3. 'ball' → logprob: -2.8310625553131104
    4. '0' → logprob: -4.581062316894531
    5. 'des' → logprob: -4.706062316894531
    6. 'initial' → logprob: -4.956062316894531
    7. 'pas' → logprob: -5.831062316894531
    8. ' aucune' → logprob: -5.831062316894531
    9. '```' → logprob: -6.206062316894531
    10. 'une' → logprob: -6.331062316894531

Token 1675: ' balle' (ID: 147386)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.038814328610897064
    2. 'token' → logprob: -4.413814544677734
    3. 'b' → logprob: -4.538814544677734
    4. '```' → logprob: -4.663814544677734
    5. ' balle' → logprob: -6.288814544677734
    6. ',' → logprob: -7.288814544677734
    7. '0' → logprob: -7.413814544677734
    8. 'jet' → logprob: -7.663814544677734
    9. 'prem' → logprob: -7.788814544677734
    10. 'mod' → logprob: -7.913814544677734

Token 1676: ' ou' (ID: 2031)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.5281118750572205
    2. ',' → logprob: -1.5281119346618652
    3. '_' → logprob: -2.1531119346618652
    4. '(' → logprob: -3.9031119346618652
    5. ' =' → logprob: -4.778111934661865
    6. '=' → logprob: -5.028111934661865
    7. '(ans' → logprob: -5.028111934661865
    8. '(_,' → logprob: -5.528111934661865
    9. '```' → logprob: -5.778111934661865
    10. 'ans' → logprob: -5.778111934661865

Token 1677: ' une' (ID: 2463)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14655540883541107
    2. 'une' → logprob: -2.7715554237365723
    3. 'pas' → logprob: -3.8965554237365723
    4. 'auc' → logprob: -4.021555423736572
    5. '#' → logprob: -4.396555423736572
    6. '```' → logprob: -5.521555423736572
    7. ' ' → logprob: -5.771555423736572
    8. 'un' → logprob: -6.271555423736572
    9. ' aucune' → logprob: -6.521555423736572
    10. '
' → logprob: -6.521555423736572

Token 1678: ' paire' (ID: 148856)
  Prédit: 'pa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pa' → logprob: -0.5672935843467712
    2. '0' → logprob: -1.067293643951416
    3. 'pair' → logprob: -3.192293643951416
    4. '```' → logprob: -3.942293643951416
    5. 'ball' → logprob: -5.067293643951416
    6. 'p' → logprob: -5.067293643951416
    7. ' paire' → logprob: -5.192293643951416
    8. '
' → logprob: -5.692293643951416
    9. 'cou' → logprob: -6.317293643951416
    10. '1' → logprob: -6.442293643951416

Token 1679: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0140434503555298
    2. '_,' → logprob: -1.5140434503555298
    3. '(ans' → logprob: -1.8890434503555298
    4. '(' → logprob: -2.3890433311462402
    5. 'ans' → logprob: -3.1390433311462402
    6. ')' → logprob: -3.2640433311462402
    7. '_' → logprob: -3.5140433311462402
    8. '(_,' → logprob: -4.01404333114624
    9. ')
' → logprob: -5.26404333114624
    10. '(
' → logprob: -5.38904333114624

Token 1680: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.08933626860380173
    2. 'd' → logprob: -2.7143361568450928
    3. 'depart' → logprob: -4.839336395263672
    4. ' départ' → logprob: -5.464336395263672
    5. '0' → logprob: -5.714336395263672
    6. 'start' → logprob: -6.464336395263672
    7. 'prem' → logprob: -6.964336395263672
    8. 'initial' → logprob: -7.589336395263672
    9. '```' → logprob: -7.964336395263672
    10. 'dem' → logprob: -9.589336395263672

Token 1681: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.024680204689502716
    2. '_,' → logprob: -4.649680137634277
    3. ')
' → logprob: -5.399680137634277
    4. '(ans' → logprob: -5.524680137634277
    5. ')' → logprob: -6.024680137634277
    6. '_ans' → logprob: -7.149680137634277
    7. '_
' → logprob: -7.399680137634277
    8. ',' → logprob: -8.024680137634277
    9. '```' → logprob: -8.024680137634277
    10. '(_,' → logprob: -8.274680137634277

Token 1682: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0031217450741678476
    2. '(ans' → logprob: -6.253121852874756
    3. '_,' → logprob: -7.253121852874756
    4. 'state' → logprob: -8.753121376037598
    5. '(_,' → logprob: -9.378121376037598
    6. 'res' → logprob: -9.878121376037598
    7. 'result' → logprob: -10.128121376037598
    8. 'answer' → logprob: -10.128121376037598
    9. '_ans' → logprob: -10.378121376037598
    10. ' ans' → logprob: -10.753121376037598

Token 1683: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1131734549999237
    2. ' =' → logprob: -2.238173484802246
    3. ',' → logprob: -7.988173484802246
    4. '=res' → logprob: -12.988173484802246
    5. '```' → logprob: -13.113173484802246
    6. '_=' → logprob: -13.613173484802246
    7. '=
' → logprob: -13.613173484802246
    8. ')' → logprob: -13.988173484802246
    9. '=f' → logprob: -14.488173484802246
    10. '=_' → logprob: -14.488173484802246

Token 1684: ' *_' (ID: 48354)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05378754809498787
    2. '_,' → logprob: -3.3037874698638916
    3. 'z' → logprob: -4.803787708282471
    4. '_z' → logprob: -5.553787708282471
    5. '_=' → logprob: -5.803787708282471
    6. ' _' → logprob: -8.303787231445312
    7. ' _,' → logprob: -9.053787231445312
    8. ' z' → logprob: -9.303787231445312
    9. '_*' → logprob: -11.178787231445312
    10. '_
' → logprob: -11.428787231445312

Token 1685: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021852378267794847
    2. ' =' → logprob: -6.127185344696045
    3. ',' → logprob: -15.877184867858887
    4. '=f' → logprob: -17.127185821533203
    5. '=
' → logprob: -18.127185821533203
    6. ')' → logprob: -18.502185821533203
    7. '   ' → logprob: -19.502185821533203
    8. '=}' → logprob: -19.502185821533203
    9. '_=' → logprob: -19.752185821533203
    10. '＝' → logprob: -20.127185821533203

Token 1686: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -9.088346359931165e-07
    2. ' reduce' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.75
    4. 'redu' → logprob: -18.875
    5. '_reduce' → logprob: -20.375
    6. 're' → logprob: -20.5
    7. '.reduce' → logprob: -20.75
    8. 'Reduce' → logprob: -22.25
    9. '```' → logprob: -22.375
    10. 'fun' → logprob: -22.625

Token 1687: '(
' (ID: 1607)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.03070732019841671
    2. '(' → logprob: -3.655707359313965
    3. '(lambda' → logprob: -5.530707359313965
    4. '(
' → logprob: -7.780707359313965
    5. '(func' → logprob: -12.030707359313965
    6. '(F' → logprob: -12.905707359313965
    7. ' (' → logprob: -13.030707359313965
    8. '```' → logprob: -13.780707359313965
    9. '(fun' → logprob: -14.030707359313965
    10. '(function' → logprob: -14.030707359313965

Token 1688: '   ' (ID: 271)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.14776894450187683
    2. '   ' → logprob: -2.147768974304199
    3. ' f' → logprob: -3.897768974304199
    4. 'lambda' → logprob: -8.5227689743042
    5. '	f' → logprob: -9.6477689743042
    6. ' lambda' → logprob: -10.3977689743042
    7. '(lambda' → logprob: -11.0227689743042
    8. '(f' → logprob: -11.0227689743042
    9. ' ' → logprob: -12.3977689743042
    10. '[f' → logprob: -12.8977689743042

Token 1689: ' lambda' (ID: 27871)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0001137947037932463
    2. '   ' → logprob: -9.375113487243652
    3. 'lambda' (adapté à ' lambda') → logprob: -11.000113487243652
    4. ' f' → logprob: -11.500113487243652
    5. '	f' → logprob: -13.875113487243652
    6. '(f' → logprob: -14.375113487243652
    7. '[f' → logprob: -15.625113487243652
    8. ')' → logprob: -15.750113487243652
    9. '       ' → logprob: -16.62511444091797
    10. '(lambda' → logprob: -16.87511444091797

Token 1690: ' acc' (ID: 1259)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06836933642625809
    2. 'lambda' → logprob: -2.8183693885803223
    3. '(lambda' → logprob: -5.193369388580322
    4. ' f' → logprob: -7.818369388580322
    5. ' lambda' → logprob: -7.943369388580322
    6. '(f' → logprob: -9.943368911743164
    7. '   ' → logprob: -10.818368911743164
    8. '(
' → logprob: -13.818368911743164
    9. ' (' → logprob: -14.693368911743164
    10. '	f' → logprob: -15.318368911743164

Token 1691: ',' (ID: 11)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.4949425160884857
    2. 'lambda' → logprob: -0.9949425458908081
    3. '=lambda' → logprob: -4.869942665100098
    4. ',' → logprob: -5.119942665100098
    5. '   ' → logprob: -5.494942665100098
    6. ' lambda' → logprob: -5.994942665100098
    7. 'f' → logprob: -8.869942665100098
    8. ' (' → logprob: -9.744942665100098
    9. '(' → logprob: -9.869942665100098
    10. '(
' → logprob: -10.244942665100098

Token 1692: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18091312050819397
    2. ' s' → logprob: -1.8059130907058716
    3. 'x' → logprob: -7.805912971496582
    4. '   ' → logprob: -8.305912971496582
    5. 'c' → logprob: -8.680912971496582
    6. 'token' → logprob: -9.930912971496582
    7. 'color' → logprob: -10.180912971496582
    8. 'ss' → logprob: -10.305912971496582
    9. 'ball' → logprob: -10.555912971496582
    10. ' x' → logprob: -10.680912971496582

Token 1693: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9241108298301697
    2. 'f' → logprob: -1.0491108894348145
    3. '   ' → logprob: -2.1741108894348145
    4. ' f' → logprob: -2.4241108894348145
    5. ':' → logprob: -3.7991108894348145
    6. '(f' → logprob: -4.7991108894348145
    7. '(lambda' → logprob: -5.5491108894348145
    8. 'lambda' → logprob: -5.7991108894348145
    9. 's' → logprob: -6.0491108894348145
    10. '(s' → logprob: -6.1741108894348145

Token 1694: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0019646743312478065
    2. ' f' → logprob: -6.251964569091797
    3. 'lambda' → logprob: -10.751964569091797
    4. '(f' → logprob: -11.626964569091797
    5. '   ' → logprob: -12.626964569091797
    6. ' lambda' → logprob: -13.376964569091797
    7. '(lambda' → logprob: -15.126964569091797
    8. '	f' → logprob: -15.876964569091797
    9. '[f' → logprob: -15.876964569091797
    10. '*f' → logprob: -16.501964569091797

Token 1695: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.672973096370697
    2. '(s' → logprob: -1.0479731559753418
    3. '(acc' → logprob: -2.422973155975342
    4. 'acc' → logprob: -3.047973155975342
    5. '(' → logprob: -6.172973155975342
    6. '(
' → logprob: -7.797973155975342
    7. '(None' → logprob: -9.297972679138184
    8. ',' → logprob: -9.297972679138184
    9. ' (' → logprob: -10.172972679138184
    10. ' acc' → logprob: -10.172972679138184

Token 1696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0979003757238388
    2. '(acc' → logprob: -2.722900390625
    3. 'acc' → logprob: -3.722900390625
    4. ' acc' → logprob: -6.722900390625
    5. '   ' → logprob: -7.222900390625
    6. ')' → logprob: -7.222900390625
    7. ' ,' → logprob: -8.222900390625
    8. '),' → logprob: -8.847900390625
    9. ',
' → logprob: -8.847900390625
    10. '	acc' → logprob: -9.472900390625

Token 1697: ' *' (ID: 425)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0017374205635860562
    2. '*' → logprob: -6.376737594604492
    3. ' acc' → logprob: -10.626737594604492
    4. '
' → logprob: -12.376737594604492
    5. ')' → logprob: -13.126737594604492
    6. '(acc' → logprob: -13.251737594604492
    7. '_acc' → logprob: -14.126737594604492
    8. '*(' → logprob: -14.501737594604492
    9. '```' → logprob: -15.001737594604492
    10. '   ' → logprob: -15.126737594604492

Token 1698: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -5.512236498361744e-07
    2. ' acc' → logprob: -14.875000953674316
    3. '(acc' → logprob: -16.125
    4. '
' → logprob: -18.125
    5. '   ' → logprob: -18.375
    6. '[' → logprob: -18.75
    7. '*' → logprob: -20.125
    8. '```' → logprob: -20.625
    9. ')' → logprob: -20.75
    10. '_acc' → logprob: -20.75

Token 1699: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1878560483455658
    2. ',' → logprob: -2.1878559589385986
    3. '   ' → logprob: -3.3128559589385986
    4. '),
' → logprob: -4.437856197357178
    5. ')' → logprob: -4.562856197357178
    6. '       ' → logprob: -8.81285572052002
    7. '),
' → logprob: -10.06285572052002
    8. ')
' → logprob: -10.18785572052002
    9. '),

' → logprob: -10.43785572052002
    10. '  ' → logprob: -10.81285572052002

Token 1700: ' ' (ID: 220)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.011534865014255047
    2. ' S' → logprob: -4.511534690856934
    3. '   ' → logprob: -7.636534690856934
    4. '[S' → logprob: -13.261534690856934
    5. ' ' → logprob: -14.011534690856934
    6. 'list' → logprob: -14.511534690856934
    7. '(S' → logprob: -15.011534690856934
    8. ' list' → logprob: -15.636534690856934
    9. '	S' → logprob: -15.636534690856934
    10. '    ' → logprob: -15.761534690856934

Token 1701: ' #' (ID: 1069)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.4121114822482923e-06
    2. ' S' → logprob: -12.750003814697266
    3. 'list' → logprob: -15.125003814697266
    4. '   ' → logprob: -15.625003814697266
    5. 'range' → logprob: -17.875003814697266
    6. ' ' → logprob: -18.125003814697266
    7. '(S' → logprob: -18.250003814697266
    8. '[S' → logprob: -18.375003814697266
    9. '	S' → logprob: -20.250003814697266
    10. '_S' → logprob: -20.375003814697266

Token 1702: ' Acc' (ID: 6278)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10476602613925934
    2. '[S' → logprob: -3.2297661304473877
    3. 'range' → logprob: -3.7297661304473877
    4. '[' → logprob: -3.8547661304473877
    5. '(S' → logprob: -4.604765892028809
    6. 'iter' → logprob: -6.729765892028809
    7. '(range' → logprob: -7.229765892028809
    8. 'enumer' → logprob: -7.354765892028809
    9. '(' → logprob: -7.604765892028809
    10. 'lambda' → logprob: -7.979765892028809

Token 1703: 'umulate' (ID: 134636)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.27234947681427
    2. 'acc' → logprob: -1.64734947681427
    3. 'umulator' → logprob: -4.2723493576049805
    4. 'Mod' → logprob: -4.6473493576049805
    5. 'um' → logprob: -5.2723493576049805
    6. '(' → logprob: -5.2723493576049805
    7. ' acc' → logprob: -5.7723493576049805
    8. '(Mod' → logprob: -5.8973493576049805
    9. ')' → logprob: -6.0223493576049805
    10. '(lambda' → logprob: -7.2723493576049805

Token 1704: 'ur' (ID: 330)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.4264703392982483
    2. '(lambda' → logprob: -1.6764702796936035
    3. 'or' → logprob: -3.5514702796936035
    4. ')' → logprob: -3.6764702796936035
    5. '(
' → logprob: -4.0514702796936035
    6. 'lambda' → logprob: -4.1764702796936035
    7. '   ' → logprob: -4.3014702796936035
    8. ',' → logprob: -4.3014702796936035
    9. '(' → logprob: -4.3014702796936035
    10. 'e' → logprob: -4.4264702796936035

Token 1705: ' mis' (ID: 4694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27615824341773987
    2. '(S' → logprob: -1.5261582136154175
    3. ')' → logprob: -4.651158332824707
    4. ' ,' → logprob: -5.526158332824707
    5. 'S' → logprob: -5.776158332824707
    6. '<|end|>' → logprob: -6.151158332824707
    7. ',S' → logprob: -6.276158332824707
    8. '   ' → logprob: -6.401158332824707
    9. '(N' → logprob: -7.651158332824707
    10. ' (' → logprob: -8.776158332824707

Token 1706: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.113215684890747
    2. 'lambda' → logprob: -1.613215684890747
    3. '=' → logprob: -1.988215684890747
    4. '=lambda' → logprob: -1.988215684890747
    5. '(lambda' → logprob: -2.113215684890747
    6. '   ' → logprob: -3.238215684890747
    7. ')' → logprob: -4.238215446472168
    8. '0' → logprob: -5.738215446472168
    9. ' ,' → logprob: -5.863215446472168
    10. '(acc' → logprob: -5.863215446472168

Token 1707: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.03144301846623421
    2. 'f' → logprob: -4.781443119049072
    3. '(Mod' → logprob: -4.906443119049072
    4. 'Mod' → logprob: -5.406443119049072
    5. ' jour' → logprob: -5.781443119049072
    6. 'day' → logprob: -6.156443119049072
    7. 'jours' → logprob: -6.281443119049072
    8. '```' → logprob: -6.781443119049072
    9. 'lambda' → logprob: -7.656443119049072
    10. 'part' → logprob: -7.781443119049072

Token 1708: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6530846953392029
    2. '(S' → logprob: -0.7780846953392029
    3. ',S' → logprob: -4.778084754943848
    4. '   ' → logprob: -5.528084754943848
    5. ')' → logprob: -5.778084754943848
    6. '<|end|>' → logprob: -6.153084754943848
    7. 'S' → logprob: -6.653084754943848
    8. ' ,' → logprob: -7.903084754943848
    9. '(' → logprob: -8.778084754943848
    10. ' S' → logprob: -9.028084754943848

Token 1709: ' chaque' (ID: 21194)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3711702227592468
    2. 'each' → logprob: -1.6211702823638916
    3. 's' → logprob: -2.8711702823638916
    4. ' chaque' → logprob: -3.9961702823638916
    5. '<|end|>' → logprob: -4.1211700439453125
    6. ')' → logprob: -5.2461700439453125
    7. '(lambda' → logprob: -6.1211700439453125
    8. ' each' → logprob: -6.7461700439453125
    9. 'la' → logprob: -6.7461700439453125
    10. 'le' → logprob: -6.9961700439453125

Token 1710: ' balle' (ID: 147386)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.058664482086896896
    2. 'token' → logprob: -4.058664321899414
    3. ')' → logprob: -4.433664321899414
    4. '<|end|>' → logprob: -4.808664321899414
    5. ' s' → logprob: -5.183664321899414
    6. 'ball' → logprob: -5.308664321899414
    7. ' ' → logprob: -6.183664321899414
    8. '_' → logprob: -6.183664321899414
    9. 'b' → logprob: -7.433664321899414
    10. '```' → logprob: -7.933664321899414

Token 1711: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022189339622855186
    2. 'S' → logprob: -4.522189140319824
    3. ',S' → logprob: -5.397189140319824
    4. ' ,' → logprob: -5.897189140319824
    5. '(S' → logprob: -6.397189140319824
    6. ')' → logprob: -7.022189140319824
    7. '   ' → logprob: -7.397189140319824
    8. ' S' → logprob: -8.272189140319824
    9. '<|end|>' → logprob: -8.897189140319824
    10. 's' → logprob: -9.772189140319824

Token 1712: '   ' (ID: 271)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.6091064810752869
    2. '(Mod' → logprob: -1.3591065406799316
    3. ' Mod' → logprob: -2.4841065406799316
    4. '   ' → logprob: -2.8591065406799316
    5. ' (' → logprob: -4.484106540679932
    6. ',' → logprob: -4.484106540679932
    7. '(' → logprob: -4.984106540679932
    8. '[' → logprob: -4.984106540679932
    9. ' ans' → logprob: -5.609106540679932
    10. ' [' → logprob: -5.859106540679932

Token 1713: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.02072441391646862
    2. ' S' → logprob: -3.895724296569824
    3. '   ' → logprob: -8.645724296569824
    4. ' ' → logprob: -12.770724296569824
    5. '(S' → logprob: -14.020724296569824
    6. '	S' → logprob: -14.145724296569824
    7. 'range' → logprob: -14.270724296569824
    8. '[S' → logprob: -15.270724296569824
    9. ' range' → logprob: -15.395724296569824
    10. 'list' → logprob: -15.520724296569824

Token 1714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05569273605942726
    2. ')' → logprob: -2.930692672729492
    3. '   ' → logprob: -8.430692672729492
    4. ',)' → logprob: -8.555692672729492
    5. ' ,' → logprob: -8.555692672729492
    6. ',
' → logprob: -9.055692672729492
    7. '),' → logprob: -10.930692672729492
    8. '[' → logprob: -11.430692672729492
    9. '```' → logprob: -11.805692672729492
    10. ',N' → logprob: -12.055692672729492

Token 1715: '                         ' (ID: 6453)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.07159429043531418
    2. '(' → logprob: -3.07159423828125
    3. ' (' → logprob: -3.82159423828125
    4. '   ' → logprob: -7.32159423828125
    5. '(res' → logprob: -9.07159423828125
    6. '(initial' → logprob: -10.82159423828125
    7. '  ' → logprob: -10.82159423828125
    8. '(mod' → logprob: -11.94659423828125
    9. '(Module' → logprob: -12.44659423828125
    10. '    ' → logprob: -12.82159423828125

Token 1716: ' #' (ID: 1069)
  Prédit: '(initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(initial' → logprob: -0.881959855556488
    2. '(Mod' → logprob: -1.1319599151611328
    3. '(' → logprob: -1.8819599151611328
    4. ' (' → logprob: -2.631959915161133
    5. '   ' → logprob: -3.256959915161133
    6. '(init' → logprob: -8.381959915161133
    7. '(start' → logprob: -8.631959915161133
    8. '  ' → logprob: -8.756959915161133
    9. 'initial' → logprob: -9.131959915161133
    10. '(mod' → logprob: -10.506959915161133

Token 1717: ' It' (ID: 1225)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04566945880651474
    2. '(Mod' → logprob: -3.1706695556640625
    3. ' (' → logprob: -6.0456695556640625
    4. '(initial' → logprob: -8.295669555664062
    5. '   ' → logprob: -11.170669555664062
    6. '[' → logprob: -11.420669555664062
    7. '(N' → logprob: -11.545669555664062
    8. '(res' → logprob: -12.920669555664062
    9. '(None' → logprob: -13.420669555664062
    10. '(mod' → logprob: -13.420669555664062

Token 1718: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.856643557548523
    2. 'itial' → logprob: -2.2316436767578125
    3. ')' → logprob: -2.3566436767578125
    4. '[' → logprob: -2.4816436767578125
    5. '[N' → logprob: -2.6066436767578125
    6. 'N' → logprob: -2.7316436767578125
    7. 'ial' → logprob: -3.3566436767578125
    8. 'ialize' → logprob: -4.3566436767578125
    9. '<|end|>' → logprob: -4.6066436767578125
    10. 'range' → logprob: -4.6066436767578125

Token 1719: ' sur' (ID: 1512)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33373764157295227
    2. 'over' → logprob: -2.45873761177063
    3. '   ' → logprob: -2.70873761177063
    4. ' over' → logprob: -2.83373761177063
    5. ',' → logprob: -3.58373761177063
    6. 'sur' → logprob: -4.583737850189209
    7. '=' → logprob: -4.833737850189209
    8. '),' → logprob: -4.833737850189209
    9. 'through' → logprob: -6.208737850189209
    10. '(lambda' → logprob: -6.333737850189209

Token 1720: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8772867918014526
    2. 'S' → logprob: -1.2522867918014526
    3. 'N' → logprob: -2.002286911010742
    4. 'lambda' → logprob: -3.127286911010742
    5. 'the' → logprob: -3.752286911010742
    6. 'input' → logprob: -4.002286911010742
    7. ' range' → logprob: -4.502286911010742
    8. 'la' → logprob: -4.627286911010742
    9. ')' → logprob: -4.877286911010742
    10. 'ans' → logprob: -5.002286911010742

Token 1721: ' sé' (ID: 7462)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.4581802189350128
    2. 'string' → logprob: -1.3331801891326904
    3. 'S' → logprob: -2.4581801891326904
    4. 's' → logprob: -5.7081804275512695
    5. 'list' → logprob: -5.7081804275512695
    6. 'str' → logprob: -5.8331804275512695
    7. 'chain' → logprob: -6.0831804275512695
    8. 'code' → logprob: -6.3331804275512695
    9. 'sequence' → logprob: -6.7081804275512695
    10. 'input' → logprob: -7.4581804275512695

Token 1722: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.002242558402940631
    2. 'quences' → logprob: -6.877242565155029
    3. 'QUENCE' → logprob: -7.252242565155029
    4. 'rie' → logprob: -8.252242088317871
    5. 'Q' → logprob: -9.377242088317871
    6. 'que' → logprob: -10.252242088317871
    7. 'q' → logprob: -10.252242088317871
    8. 'ries' → logprob: -10.502242088317871
    9. 'r' → logprob: -10.752242088317871
    10. 'quential' → logprob: -12.127242088317871

Token 1723: ' de' (ID: 334)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.2623807489871979
    2. '(ans' → logprob: -2.512380838394165
    3. ',' → logprob: -2.887380838394165
    4. '(' → logprob: -3.012380838394165
    5. '((' → logprob: -4.262380599975586
    6. ' (' → logprob: -4.512380599975586
    7. '   ' → logprob: -4.762380599975586
    8. '(Mod' → logprob: -5.137380599975586
    9. ')' → logprob: -6.512380599975586
    10. '(
' → logprob: -6.762380599975586

Token 1724: ' couleurs' (ID: 54001)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.27371746301651
    2. 'chars' → logprob: -2.2737174034118652
    3. 'S' → logprob: -2.5237174034118652
    4. 's' → logprob: -4.023717403411865
    5. 'car' → logprob: -4.273717403411865
    6. 'char' → logprob: -5.148717403411865
    7. 'characters' → logprob: -5.398717403411865
    8. 'balls' → logprob: -5.773717403411865
    9. 'str' → logprob: -5.898717403411865
    10. 'b' → logprob: -5.898717403411865

Token 1725: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19264525175094604
    2. '(Mod' → logprob: -2.067645311355591
    3. '(' → logprob: -3.567645311355591
    4. ' (' → logprob: -4.317645072937012
    5. ')' → logprob: -5.942645072937012
    6. ',
' → logprob: -6.317645072937012
    7. '   ' → logprob: -7.067645072937012
    8. '(
' → logprob: -7.942645072937012
    9. '(initial' → logprob: -8.192645072937012
    10. ' ,' → logprob: -8.317645072937012

Token 1726: '   ' (ID: 271)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.5253200531005859
    2. ' (' → logprob: -0.9003200531005859
    3. '(' → logprob: -7.275320053100586
    4. ')' → logprob: -7.775320053100586
    5. 'Mod' → logprob: -8.275320053100586
    6. '(lambda' → logprob: -8.400320053100586
    7. '(acc' → logprob: -8.525320053100586
    8. '   ' → logprob: -8.525320053100586
    9. '(ans' → logprob: -9.400320053100586
    10. '(
' → logprob: -10.275320053100586

Token 1727: ' (' (ID: 350)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -6.749814019713085e-06
    2. ' (' → logprob: -12.125006675720215
    3. '(' (adapté à ' (') → logprob: -13.750006675720215
    4. '   ' → logprob: -15.875006675720215
    5. '(Module' → logprob: -17.25000762939453
    6. '((' → logprob: -17.50000762939453
    7. '(
' → logprob: -18.25000762939453
    8. 'Mod' → logprob: -18.75000762939453
    9. '  ' → logprob: -19.00000762939453
    10. '(mod' → logprob: -19.62500762939453

Token 1728: 'Mod' (ID: 4721)
  Prédit: 'Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -6.098748053773306e-05
    2. '(Mod' → logprob: -9.75006103515625
    3. ' Mod' → logprob: -13.12506103515625
    4. '1' → logprob: -15.12506103515625
    5. 'Modulo' → logprob: -16.37506103515625
    6. '   ' → logprob: -16.50006103515625
    7. ')' → logprob: -16.87506103515625
    8. '_Mod' → logprob: -17.25006103515625
    9. 'MOD' → logprob: -17.62506103515625
    10. '_mod' → logprob: -17.87506103515625

Token 1729: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -15.375
    3. '1' → logprob: -17.0
    4. '_int' → logprob: -17.625
    5. ')' → logprob: -17.75
    6. 'N' → logprob: -18.375
    7. '(Int' → logprob: -18.625
    8. ' Int' → logprob: -18.875
    9. '(' → logprob: -19.0
    10. '   ' → logprob: -19.375

Token 1730: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07889430224895477
    2. '1' → logprob: -2.5788943767547607
    3. '(
' → logprob: -12.82889461517334
    4. ' (' → logprob: -14.32889461517334
    5. '[' → logprob: -14.45389461517334
    6. '   ' → logprob: -15.32889461517334
    7. '
' → logprob: -15.95389461517334
    8. ',' → logprob: -16.203893661499023
    9. ' ' → logprob: -16.328893661499023
    10. '```' → logprob: -17.328893661499023

Token 1731: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.750000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.5
    5. '[' → logprob: -17.375
    6. '```' → logprob: -18.125
    7. '0' → logprob: -18.375
    8. ')' → logprob: -18.625
    9. '
' → logprob: -18.625
    10. ',' → logprob: -19.875

Token 1732: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4323595464229584
    2. '),' → logprob: -1.0573595762252808
    3. ')' → logprob: -5.68235969543457
    4. '),
' → logprob: -9.43235969543457
    5. 'N' → logprob: -10.05735969543457
    6. ',
' → logprob: -10.93235969543457
    7. ',N' → logprob: -11.05735969543457
    8. ' ,' → logprob: -11.18235969543457
    9. ')
' → logprob: -11.30735969543457
    10. '<|end|>' → logprob: -11.80735969543457

Token 1733: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00012368128227535635
    2. ' N' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.375123977661133
    4. '	N' → logprob: -17.750123977661133
    5. ' ' → logprob: -18.000123977661133
    6. ')' → logprob: -18.250123977661133
    7. '```' → logprob: -18.500123977661133
    8. '    ' → logprob: -18.875123977661133
    9. '[N' → logprob: -19.000123977661133
    10. ' ' → logprob: -19.625123977661133

Token 1734: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001742650754749775
    2. '0' → logprob: -6.501742839813232
    3. ' ,' → logprob: -8.376742362976074
    4. ')' → logprob: -12.126742362976074
    5. ',
' → logprob: -13.626742362976074
    6. '   ' → logprob: -13.751742362976074
    7. '),' → logprob: -14.251742362976074
    8. '```' → logprob: -15.001742362976074
    9. '<|end|>' → logprob: -15.376742362976074
    10. '<|end|>' → logprob: -15.501742362976074

Token 1735: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '۰' → logprob: -17.750001907348633
    5. '00' → logprob: -18.250001907348633
    6. '```' → logprob: -18.812501907348633
    7. ')' → logprob: -18.937501907348633
    8. '           ' → logprob: -19.312501907348633
    9. '  ' → logprob: -19.500001907348633
    10. '000' → logprob: -19.687501907348633

Token 1736: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -18.25
    4. '00' → logprob: -19.25
    5. '   ' → logprob: -19.625
    6. '000' → logprob: -20.1875
    7. '０' → logprob: -20.4375
    8. '০' → logprob: -20.5625
    9. '٠' → logprob: -20.6875
    10. '```' → logprob: -20.6875

Token 1737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06266111880540848
    2. '0' → logprob: -2.8126611709594727
    3. ' ,' → logprob: -7.312661170959473
    4. '   ' → logprob: -11.437661170959473
    5. ' ' → logprob: -11.812661170959473
    6. '```' → logprob: -13.187661170959473
    7. ',
' → logprob: -13.812661170959473
    8. ')' → logprob: -14.062661170959473
    9. '<|end|>' → logprob: -14.312661170959473
    10. '  ' → logprob: -14.562661170959473

Token 1738: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -19.125
    4. '۰' → logprob: -19.5
    5. '<|end|>' → logprob: -19.75
    6. '   ' → logprob: -21.0
    7. '00' → logprob: -21.375
    8. '  ' → logprob: -21.875
    9. '000' → logprob: -21.875
    10. '  ' → logprob: -21.875

Token 1739: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -20.000001907348633
    4. '۰' → logprob: -20.500001907348633
    5. '  ' → logprob: -21.000001907348633
    6. '000' → logprob: -21.125001907348633
    7. '00' → logprob: -21.375001907348633
    8. '```' → logprob: -21.500001907348633
    9. '০' → logprob: -22.937501907348633
    10. '#' → logprob: -23.000001907348633

Token 1740: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000730185944121331
    2. '0' → logprob: -7.250730037689209
    3. ' ,' → logprob: -10.875730514526367
    4. '```' → logprob: -14.875730514526367
    5. ')' → logprob: -15.000730514526367
    6. '`,' → logprob: -15.750730514526367
    7. '<|end|>' → logprob: -15.875730514526367
    8. ' ' → logprob: -15.875730514526367
    9. ',
' → logprob: -16.125730514526367
    10. '<|end|>' → logprob: -16.875730514526367

Token 1741: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.75000762939453
    4. '```' → logprob: -20.12500762939453
    5. '۰' → logprob: -20.25000762939453
    6. '  ' → logprob: -20.25000762939453
    7. '000' → logprob: -21.25000762939453
    8. ' ' → logprob: -22.37500762939453
    9. '    ' → logprob: -22.50000762939453
    10. '00' → logprob: -22.87500762939453

Token 1742: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.125017166137695
    4. '  ' → logprob: -18.000017166137695
    5. '۰' → logprob: -18.375017166137695
    6. '```' → logprob: -18.937517166137695
    7. '000' → logprob: -19.687517166137695
    8. '00' → logprob: -20.000017166137695
    9. '    ' → logprob: -20.125017166137695
    10. '     ' → logprob: -20.437517166137695

Token 1743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01614721491932869
    2. '0' → logprob: -4.141147136688232
    3. ' ,' → logprob: -9.14114761352539
    4. ' ' → logprob: -12.39114761352539
    5. ',
' → logprob: -14.89114761352539
    6. ')' → logprob: -15.39114761352539
    7. '   ' → logprob: -15.64114761352539
    8. '<|end|>' → logprob: -15.64114761352539
    9. '6' → logprob: -15.76614761352539
    10. '```' → logprob: -15.89114761352539

Token 1744: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -14.875027656555176
    4. '  ' → logprob: -16.375028610229492
    5. '000' → logprob: -17.875028610229492
    6. '    ' → logprob: -18.125028610229492
    7. '۰' → logprob: -18.812528610229492
    8. '```' → logprob: -18.812528610229492
    9. '     ' → logprob: -19.250028610229492
    10. '00' → logprob: -19.437528610229492

Token 1745: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.50000762939453
    4. '۰' → logprob: -17.50000762939453
    5. '  ' → logprob: -18.12500762939453
    6. '000' → logprob: -18.87500762939453
    7. '    ' → logprob: -20.12500762939453
    8. '```' → logprob: -20.18750762939453
    9. '...' → logprob: -20.25000762939453
    10. '00' → logprob: -20.25000762939453

Token 1746: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020588131621479988
    2. '0' → logprob: -3.8955881595611572
    3. ' ,' → logprob: -10.145587921142578
    4. ')' → logprob: -12.645587921142578
    5. ',
' → logprob: -13.645587921142578
    6. ' ' → logprob: -13.645587921142578
    7. '   ' → logprob: -15.020587921142578
    8. '```' → logprob: -15.395587921142578
    9. '(' → logprob: -15.645587921142578
    10. '6' → logprob: -16.395587921142578

Token 1747: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.12500762939453
    4. '۰' → logprob: -18.62500762939453
    5. '  ' → logprob: -20.00000762939453
    6. '000' → logprob: -20.12500762939453
    7. '00' → logprob: -20.75000762939453
    8. '০' → logprob: -21.18750762939453
    9. '<|end|>' → logprob: -21.18750762939453
    10. '#' → logprob: -21.31250762939453

Token 1748: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -17.625001907348633
    4. '000' → logprob: -18.625001907348633
    5. '   ' → logprob: -18.875001907348633
    6. '00' → logprob: -19.000001907348633
    7. '```' → logprob: -20.375001907348633
    8. '[' → logprob: -20.562501907348633
    9. '(' → logprob: -20.625001907348633
    10. '  ' → logprob: -20.687501907348633

Token 1749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005140714929439127
    2. '0' → logprob: -7.750514030456543
    3. ' ,' → logprob: -9.500514030456543
    4. ')' → logprob: -12.500514030456543
    5. '```' → logprob: -13.250514030456543
    6. '`,' → logprob: -13.875514030456543
    7. '   ' → logprob: -14.250514030456543
    8. ',
' → logprob: -14.250514030456543
    9. '),' → logprob: -15.750514030456543
    10. ' ' → logprob: -16.00051498413086

Token 1750: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.375066757202148
    4. '۰' → logprob: -17.56256675720215
    5. '  ' → logprob: -17.93756675720215
    6. '00' → logprob: -18.81256675720215
    7. '000' → logprob: -19.00006675720215
    8. '```' → logprob: -19.25006675720215
    9. ')' → logprob: -19.56256675720215
    10. '<|end|>' → logprob: -19.62506675720215

Token 1751: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -17.125003814697266
    4. '   ' → logprob: -18.687503814697266
    5. ')' → logprob: -19.187503814697266
    6. '০' → logprob: -19.375003814697266
    7. '...' → logprob: -19.437503814697266
    8. '00' → logprob: -19.562503814697266
    9. '000' → logprob: -19.687503814697266
    10. ',' → logprob: -19.812503814697266

Token 1752: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029491744935512543
    2. '0' → logprob: -5.877949237823486
    3. ' ,' → logprob: -9.377948760986328
    4. ')' → logprob: -9.752948760986328
    5. ' ' → logprob: -14.877948760986328
    6. '```' → logprob: -15.377948760986328
    7. '1' → logprob: -15.752948760986328
    8. '   ' → logprob: -16.002948760986328
    9. '),' → logprob: -16.190448760986328
    10. ',
' → logprob: -16.252948760986328

Token 1753: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008141548605635762
    2. ')' → logprob: -7.375813961029053
    3. '0' → logprob: -8.625814437866211
    4. ' ,' → logprob: -12.375814437866211
    5. '<|end|>' → logprob: -13.625814437866211
    6. '   ' → logprob: -13.875814437866211
    7. '```' → logprob: -14.750814437866211
    8. ',)' → logprob: -15.375814437866211
    9. ',
' → logprob: -15.625814437866211
    10. '1' → logprob: -15.875814437866211

Token 1754: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012868782505393028
    2. ',' → logprob: -9.125128746032715
    3. '   ' → logprob: -11.125128746032715
    4. ',)' → logprob: -13.625128746032715
    5. ')
' → logprob: -14.125128746032715
    6. ' )' → logprob: -14.250128746032715
    7. ')`' → logprob: -14.875128746032715
    8. '```' → logprob: -14.875128746032715
    9. '),' → logprob: -15.125128746032715
    10. '))' → logprob: -15.250128746032715

Token 1755: ' É' (ID: 10055)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006845257245004177
    2. ')' → logprob: -5.131845474243164
    3. ' ' → logprob: -8.131845474243164
    4. '<|end|>' → logprob: -8.131845474243164
    5. '1' → logprob: -8.756845474243164
    6. '(' → logprob: -9.631845474243164
    7. ',' → logprob: -10.006845474243164
    8. '),' → logprob: -11.756845474243164
    9. ')
' → logprob: -12.006845474243164
    10. '```' → logprob: -12.131845474243164

Token 1756: 'tat' (ID: 32232)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.09014592319726944
    2. '(' → logprob: -3.4651458263397217
    3. 'Mod' → logprob: -3.4651458263397217
    4. '(M' → logprob: -4.090146064758301
    5. 'x' → logprob: -5.715146064758301
    6. 'res' → logprob: -7.715146064758301
    7. ')' → logprob: -7.840146064758301
    8. 'ans' → logprob: -7.840146064758301
    9. '(res' → logprob: -8.0901460647583
    10. '(ans' → logprob: -8.2151460647583

Token 1757: ' initial' (ID: 4871)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015599997714161873
    2. '<|end|>' → logprob: -4.890600204467773
    3. ',' → logprob: -5.140600204467773
    4. '0' → logprob: -7.640600204467773
    5. '=' → logprob: -7.765600204467773
    6. '(' → logprob: -8.140600204467773
    7. '[' → logprob: -8.140600204467773
    8. '<|end|>' → logprob: -8.765600204467773
    9. '#' → logprob: -9.390600204467773
    10. '   ' → logprob: -9.390600204467773

Token 1758: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002298109233379364
    2. ',' → logprob: -6.127297878265381
    3. '0' → logprob: -10.377298355102539
    4. '<|end|>' → logprob: -10.502298355102539
    5. ',)' → logprob: -11.002298355102539
    6. '   ' → logprob: -11.377298355102539
    7. ')
' → logprob: -11.877298355102539
    8. '[' → logprob: -12.002298355102539
    9. ' )' → logprob: -12.752298355102539
    10. '```' → logprob: -13.252298355102539

Token 1759: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018703327514231205
    2. ',' → logprob: -6.376870155334473
    3. '   ' → logprob: -9.126870155334473
    4. '<|end|>' → logprob: -10.751870155334473
    5. ')
' → logprob: -11.626870155334473
    6. ',)' → logprob: -11.751870155334473
    7. '```' → logprob: -12.501870155334473
    8. '),' → logprob: -13.126870155334473
    9. ')`' → logprob: -13.376870155334473
    10. ' )' → logprob: -13.501870155334473

Token 1760: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002541872672736645
    2. '```' → logprob: -8.62525463104248
    3. ' print' → logprob: -9.75025463104248
    4. '
' → logprob: -11.62525463104248
    5. '``' → logprob: -12.50025463104248
    6. ')' → logprob: -13.25025463104248
    7. ')
' → logprob: -14.37525463104248
    8. '(print' → logprob: -14.75025463104248
    9. '`' → logprob: -15.50025463104248
    10. ',' → logprob: -15.75025463104248

Token 1761: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.75
    3. '#print' → logprob: -20.375
    4. '
' → logprob: -20.375
    5. 'for' → logprob: -21.375
    6. ' print' → logprob: -21.75
    7. '#' → logprob: -22.5
    8. 'prin' → logprob: -22.5
    9. 'pr' → logprob: -22.625
    10. 'ans' → logprob: -23.25

Token 1762: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.3644673228263855
    2. 'ich' → logprob: -1.3644673824310303
    3. 'iche' → logprob: -3.9894673824310303
    4. 'print' → logprob: -3.9894673824310303
    5. 'ichage' → logprob: -4.489467144012451
    6. '#' → logprob: -7.239467144012451
    7. 'ic' → logprob: -7.239467144012451
    8. '   ' → logprob: -9.73946762084961
    9. '```' → logprob: -9.73946762084961
    10. 'f' → logprob: -10.23946762084961

Token 1763: ' le' (ID: 505)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.15644843876361847
    2. 'print' → logprob: -2.4064483642578125
    3. 'ans' → logprob: -2.9064483642578125
    4. '(print' → logprob: -11.281448364257812
    5. '(str' → logprob: -13.031448364257812
    6. '(' → logprob: -13.531448364257812
    7. 'int' → logprob: -13.906448364257812
    8. ' ans' → logprob: -14.406448364257812
    9. '```' → logprob: -14.656448364257812
    10. '(
' → logprob: -15.156448364257812

Token 1764: ' nombre' (ID: 9733)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5514906048774719
    2. 'ans' → logprob: -1.5514905452728271
    3. 'print' → logprob: -1.5514905452728271
    4. '(' → logprob: -10.676490783691406
    5. '(print' → logprob: -11.801490783691406
    6. 'answer' → logprob: -12.051490783691406
    7. 'int' → logprob: -13.051490783691406
    8. '(res' → logprob: -13.176490783691406
    9. 'res' → logprob: -13.676490783691406
    10. '(
' → logprob: -13.676490783691406

Token 1765: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.40293440222740173
    2. '(' → logprob: -1.1529344320297241
    3. '(
' → logprob: -4.152934551239014
    4. 'ans' → logprob: -8.902934074401855
    5. 'print' → logprob: -10.402934074401855
    6. '(

' → logprob: -11.402934074401855
    7. '()' → logprob: -11.527934074401855
    8. '(`' → logprob: -11.902934074401855
    9. '(`
' → logprob: -12.152934074401855
    10. '(print' → logprob: -12.277934074401855

Token 1766: ' façons' (ID: 165958)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00622881343588233
    2. '(ans' → logprob: -5.256228923797607
    3. 'print' → logprob: -7.631228923797607
    4. 'res' → logprob: -7.631228923797607
    5. 'int' → logprob: -11.38122844696045
    6. '(res' → logprob: -12.00622844696045
    7. ' ans' → logprob: -13.13122844696045
    8. '```' → logprob: -13.50622844696045
    9. '(' → logprob: -13.63122844696045
    10. 'x' → logprob: -14.50622844696045

Token 1767: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21109333634376526
    2. '(ans' → logprob: -1.7110933065414429
    3. '(print' → logprob: -4.711093425750732
    4. '(' → logprob: -7.586093425750732
    5. 'ans' → logprob: -9.211092948913574
    6. '(res' → logprob: -11.211092948913574
    7. '```' → logprob: -11.711092948913574
    8. '(int' → logprob: -12.211092948913574
    9. '#print' → logprob: -14.336092948913574
    10. '(
' → logprob: -14.586092948913574

Token 1768: 'mod' (ID: 4847)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12701325118541718
    2. 'ans' → logprob: -2.1270132064819336
    3. '(ans' → logprob: -9.377013206481934
    4. ' ans' → logprob: -15.377013206481934
    5. 'res' → logprob: -16.50201416015625
    6. '```' → logprob: -16.50201416015625
    7. ' print' → logprob: -17.25201416015625
    8. 'int' → logprob: -17.50201416015625
    9. 'answer' → logprob: -18.00201416015625
    10. '(print' → logprob: -18.12701416015625

Token 1769: 'ulo' (ID: 5953)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9799620509147644
    2. '(ans' → logprob: -1.1049621105194092
    3. '(Mod' → logprob: -2.104962110519409
    4. 'MOD' → logprob: -2.854962110519409
    5. 'ans' → logprob: -3.479962110519409
    6. '```' → logprob: -3.979962110519409
    7. ')
' → logprob: -4.22996187210083
    8. '=' → logprob: -4.85496187210083
    9. '%' → logprob: -5.22996187210083
    10. 'print' → logprob: -5.47996187210083

Token 1770: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.34779155254364014
    2. 'ans' → logprob: -1.4727915525436401
    3. ' MOD' → logprob: -3.4727916717529297
    4. ')' → logprob: -4.09779167175293
    5. '(ans' → logprob: -5.09779167175293
    6. '998' → logprob: -5.47279167175293
    7. 'res' → logprob: -6.09779167175293
    8. ' ans' → logprob: -6.22279167175293
    9. ')
' → logprob: -7.47279167175293
    10. 'Mod' → logprob: -8.22279167175293

Token 1771: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21405796706676483
    2. ')
' → logprob: -1.8390579223632812
    3. '(ans' → logprob: -3.4640579223632812
    4. 'ans' → logprob: -6.964057922363281
    5. 'print' → logprob: -7.214057922363281
    6. '.print' → logprob: -8.839057922363281
    7. ',' → logprob: -8.964057922363281
    8. '(' → logprob: -9.589057922363281
    9. '())' → logprob: -9.589057922363281
    10. ')`
' → logprob: -9.714057922363281

Token 1772: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. ' print' → logprob: -20.625
    4. '``' → logprob: -20.75
    5. '#print' → logprob: -23.5
    6. '
' → logprob: -23.875
    7. '	print' → logprob: -25.25
    8. 'prints' → logprob: -25.25
    9. '(print' → logprob: -25.375
    10. 'Print' → logprob: -26.125

Token 1773: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.511406809295295e-06
    2. 'ans' → logprob: -12.000006675720215
    3. '(' → logprob: -15.000006675720215
    4. '	ans' → logprob: -18.6250057220459
    5. '(res' → logprob: -19.2500057220459
    6. '(answer' → logprob: -19.8750057220459
    7. '(
' → logprob: -19.8750057220459
    8. ' (' → logprob: -20.2500057220459
    9. ' ans' → logprob: -20.2500057220459
    10. '()' → logprob: -20.5000057220459

Token 1774: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007154120248742402
    2. '.x' → logprob: -7.250715255737305
    3. ')`' → logprob: -13.000715255737305
    4. ' )' → logprob: -13.875715255737305
    5. '`)' → logprob: -14.125715255737305
    6. ')
' → logprob: -14.375715255737305
    7. ').' → logprob: -15.250715255737305
    8. '))' → logprob: -15.500715255737305
    9. '<|end|>' → logprob: -15.500715255737305
    10. '```' → logprob: -15.625715255737305


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1772
Tokens correctement prédits (1ère position, stricte): 517
Tokens correctement prédits (1ère position, avec adaptation): 576
Tokens correctement prédits (top 10): 1171
Précision stricte (1ère position): 29.18%
Précision adaptée (1ère position): 32.51%
Précision (top 10): 66.08%
================================================================================
