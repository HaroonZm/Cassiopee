================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict

def read_dimensions():
    return map(int, input().split())

def read_mass(H):
    return [input() for _ in range(H)]

def create_grid(H, W, value=0):
    return [[value for _ in range(W)] for _ in range(H)]

def process_row_indicators(mass, H, W):
    values_row = defaultdict(int)
    ind_row = create_grid(H, W, 0)
    ind = 0
    for i in range(H):
        ind = increment_ind(ind)
        for j in range(W):
            ind, ind_row[i][j], values_row = process_row_cell(mass, i, j, ind, ind_row, values_row)
    return ind_row, values_row

def increment_ind(ind):
    return ind + 1

def process_row_cell(mass, i, j, ind, ind_row, values_row):
    if is_black_cell(mass[i][j]):
        ind = increment_ind(ind)
    else:
        values_row = increment_value_dict(values_row, ind)
        ind_row[i][j] = ind
    return ind, ind_row[i][j], values_row

def is_black_cell(chr):
    return chr == '#'

def increment_value_dict(dct, key):
    dct[key] += 1
    return dct

def process_col_indicators(mass, H, W):
    values_col = defaultdict(int)
    ind_col = create_grid(H, W, 0)
    ind = 0
    for j in range(W):
        ind = increment_ind(ind)
        for i in range(H):
            ind, ind_col[i][j], values_col = process_col_cell(mass, i, j, ind, ind_col, values_col)
    return ind_col, values_col

def process_col_cell(mass, i, j, ind, ind_col, values_col):
    if is_black_cell(mass[i][j]):
        ind = increment_ind(ind)
    else:
        values_col = increment_value_dict(values_col, ind)
        ind_col[i][j] = ind
    return ind, ind_col[i][j], values_col

def compute_max_sum(H, W, ind_row, values_row, ind_col, values_col):
    ans = 0
    for i in range(H):
        for j in range(W):
            ans = update_max(ans, ind_row, values_row, ind_col, values_col, i, j)
    return ans

def update_max(ans, ind_row, values_row, ind_col, values_col, i, j):
    val = values_row[ind_row[i][j]] + values_col[ind_col[i][j]] - 1
    return max(ans, val)

def main():
    H, W = read_dimensions()
    mass = read_mass(H)
    ind_row, values_row = process_row_indicators(mass, H, W)
    ind_col, values_col = process_col_indicators(mass, H, W)
    ans = compute_max_sum(H, W, ind_row, values_row, ind_col, values_col)
    print(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007142632734030485
    2. '(
' → logprob: -5.632142543792725
    3. '\' → logprob: -7.132142543792725
    4. '\(' → logprob: -7.382142543792725
    5. '```' → logprob: -7.882142543792725
    6. 'newline' → logprob: -8.007143020629883
    7. '\n' → logprob: -8.382143020629883
    8. '[' → logprob: -8.507143020629883
    9. '
' → logprob: -9.132143020629883
    10. 'def' → logprob: -9.257143020629883

Token 5: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6641499996185303
    2. '(' → logprob: -1.2891499996185303
    3. 'default' → logprob: -2.2891499996185303
    4. 'def' → logprob: -3.0391499996185303
    5. '\' → logprob: -4.414150238037109
    6. '(
' → logprob: -4.539150238037109
    7. 'a' → logprob: -4.789150238037109
    8. '
' → logprob: -5.914150238037109
    9. '```' → logprob: -6.039150238037109
    10. '\n' → logprob: -6.039150238037109

Token 6: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0012315383646637201
    2. ' defaultdict' → logprob: -7.001231670379639
    3. ' ' → logprob: -9.37623119354248
    4. ' space' → logprob: -10.12623119354248
    5. '  ' → logprob: -10.25123119354248
    6. '_' → logprob: -10.75123119354248
    7. ' process' → logprob: -11.12623119354248
    8. ' _' → logprob: -11.50123119354248
    9. ' func' → logprob: -11.75123119354248
    10. ' a' → logprob: -11.87623119354248

Token 7: '_dimensions' (ID: 157264)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31527987122535706
    2. '_' → logprob: -1.3152798414230347
    3. '_line' → logprob: -7.065279960632324
    4. ' (' → logprob: -8.440279960632324
    5. '_file' → logprob: -8.440279960632324
    6. '_data' → logprob: -9.440279960632324
    7. ')' → logprob: -9.565279960632324
    8. '_text' → logprob: -9.940279960632324
    9. ' _' → logprob: -10.315279960632324
    10. '(line' → logprob: -10.440279960632324

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00447878148406744
    2. '():' → logprob: -5.754478931427002
    3. '_' → logprob: -7.004478931427002
    4. ':' → logprob: -9.629478454589844
    5. '(:' → logprob: -9.879478454589844
    6. '):' → logprob: -10.004478454589844
    7. '(line' → logprob: -10.379478454589844
    8. '```' → logprob: -11.004478454589844
    9. ' (' → logprob: -11.129478454589844
    10. '('' → logprob: -11.379478454589844

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07641991972923279
    2. ':' → logprob: -3.7014198303222656
    3. '```' → logprob: -4.326419830322266
    4. '():' → logprob: -4.576419830322266
    5. '<|end|>' → logprob: -5.326419830322266
    6. '(' → logprob: -5.576419830322266
    7. '    
' → logprob: -5.826419830322266
    8. '()' → logprob: -6.076419830322266
    9. '\' → logprob: -6.076419830322266
    10. '    ' → logprob: -6.451419830322266

Token 10: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2885526418685913
    2. ' return' → logprob: -2.288552761077881
    3. 'return' (adapté à ' return') → logprob: -2.413552761077881
    4. ' ' → logprob: -3.538552761077881
    5. 'width' → logprob: -5.288552761077881
    6. 'data' → logprob: -5.413552761077881
    7. '    ' → logprob: -5.413552761077881
    8. 'dimensions' → logprob: -5.663552761077881
    9. ' line' → logprob: -5.788552761077881
    10. 'height' → logprob: -6.788552761077881

Token 11: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2273261845111847
    2. ' list' → logprob: -2.9773261547088623
    3. ' ' → logprob: -3.3523261547088623
    4. 'map' → logprob: -3.6023261547088623
    5. ' int' → logprob: -4.102326393127441
    6. ' tuple' → logprob: -4.352326393127441
    7. ' defaultdict' → logprob: -4.477326393127441
    8. 'list' → logprob: -4.477326393127441
    9. 'int' → logprob: -4.727326393127441
    10. '{}' → logprob: -5.352326393127441

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007706466130912304
    2. '(' → logprob: -4.882706642150879
    3. '(lambda' → logprob: -10.382706642150879
    4. '<int' → logprob: -10.757706642150879
    5. 'int' → logprob: -10.882706642150879
    6. '(list' → logprob: -11.632706642150879
    7. '(
' → logprob: -12.257706642150879
    8. '(tuple' → logprob: -12.382706642150879
    9. 'list' → logprob: -12.507706642150879
    10. '[int' → logprob: -13.007706642150879

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5161515474319458
    2. ')' → logprob: -1.7661515474319458
    3. '(' → logprob: -1.8911515474319458
    4. 'input' → logprob: -2.7661514282226562
    5. '('' → logprob: -5.266151428222656
    6. '(stdin' → logprob: -6.266151428222656
    7. ' input' → logprob: -6.516151428222656
    8. '(read' → logprob: -6.516151428222656
    9. '(f' → logprob: -6.766151428222656
    10. '(line' → logprob: -7.141151428222656

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25203999876976013
    2. 'input' → logprob: -1.5020400285720825
    3. ')' → logprob: -9.252039909362793
    4. ' )' → logprob: -12.127039909362793
    5. ' ' → logprob: -12.877039909362793
    6. '(input' → logprob: -13.377039909362793
    7. '	input' → logprob: -13.502039909362793
    8. ',input' → logprob: -13.752039909362793
    9. '=input' → logprob: -13.877039909362793
    10. ' raw' → logprob: -14.627039909362793

Token 15: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5962104201316833
    2. '()' → logprob: -1.0962104797363281
    3. '().' → logprob: -2.221210479736328
    4. '('' → logprob: -5.221210479736328
    5. '("' → logprob: -8.096210479736328
    6. '(' → logprob: -8.471210479736328
    7. '()))' → logprob: -9.221210479736328
    8. '());' → logprob: -9.221210479736328
    9. ')' → logprob: -9.346210479736328
    10. '(()' → logprob: -9.971210479736328

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015042672166600823
    2. 'strip' → logprob: -6.501504421234131
    3. ' split' → logprob: -13.751503944396973
    4. 'rstrip' → logprob: -14.126503944396973
    5. '(split' → logprob: -17.12650489807129
    6. ')' → logprob: -17.12650489807129
    7. 'read' → logprob: -17.50150489807129
    8. 'spl' → logprob: -17.87650489807129
    9. ' strip' → logprob: -18.87650489807129
    10. '```' → logprob: -18.87650489807129

Token 17: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1477256566286087
    2. '()))' → logprob: -2.5227255821228027
    3. ')' → logprob: -3.5227255821228027
    4. '))' → logprob: -3.6477255821228027
    5. '()' → logprob: -6.522725582122803
    6. '(' → logprob: -11.147726058959961
    7. ' ())' → logprob: -11.647726058959961
    8. '())
' → logprob: -11.772726058959961
    9. '()))
' → logprob: -12.272726058959961
    10. '()),' → logprob: -12.397726058959961

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3305453062057495
    2. 'd' → logprob: -2.080545425415039
    3. 'n' → logprob: -2.205545425415039
    4. '\' → logprob: -3.580545425415039
    5. '```' → logprob: -5.080545425415039
    6. '\n' → logprob: -5.830545425415039
    7. 'for' → logprob: -6.080545425415039
    8. '
' → logprob: -6.455545425415039
    9. 'a' → logprob: -6.705545425415039
    10. 'x' → logprob: -6.955545425415039

Token 19: ' read' (ID: 1729)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.4110766351222992
    2. ' main' → logprob: -1.2860766649246216
    3. ' process' → logprob: -3.786076545715332
    4. ' calculate' → logprob: -4.411076545715332
    5. ' count' → logprob: -5.161076545715332
    6. ' solution' → logprob: -5.661076545715332
    7. ' find' → logprob: -5.661076545715332
    8. ' dfs' → logprob: -5.911076545715332
    9. ' compute' → logprob: -6.536076545715332
    10. 'solve' → logprob: -6.661076545715332

Token 20: '_mass' (ID: 98668)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0644513368606567
    2. '_dimensions' → logprob: -1.5644513368606567
    3. '_line' → logprob: -1.8144513368606567
    4. '_array' → logprob: -2.189451217651367
    5. '_data' → logprob: -3.814451217651367
    6. '_list' → logprob: -4.064451217651367
    7. '_lines' → logprob: -4.064451217651367
    8. '_int' → logprob: -4.064451217651367
    9. '_string' → logprob: -4.314451217651367
    10. '_word' → logprob: -4.564451217651367

Token 21: '(H' (ID: 20904)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.46959882974624634
    2. '(' → logprob: -1.8445987701416016
    3. '()' → logprob: -1.8445987701416016
    4. 's' → logprob: -2.9695987701416016
    5. 'es' → logprob: -5.594598770141602
    6. '_' → logprob: -6.969598770141602
    7. '():
' → logprob: -7.594598770141602
    8. ' ()' → logprob: -8.219598770141602
    9. '_values' → logprob: -8.594598770141602
    10. 'def' → logprob: -9.094598770141602

Token 22: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08480837196111679
    2. '):' → logprob: -3.584808349609375
    3. '[' → logprob: -3.709808349609375
    4. ',' → logprob: -3.709808349609375
    5. '),' → logprob: -7.084808349609375
    6. 'e' → logprob: -7.584808349609375
    7. '[i' → logprob: -7.834808349609375
    8. '_' → logprob: -8.084808349609375
    9. 'ight' → logprob: -8.209808349609375
    10. 'L' → logprob: -8.334808349609375

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014543168246746063
    2. '    
' → logprob: -5.514543056488037
    3. '[' → logprob: -6.764543056488037
    4. '    ' → logprob: -6.764543056488037
    5. '```' → logprob: -6.764543056488037
    6. 'mass' → logprob: -7.014543056488037
    7. ' mass' → logprob: -7.389543056488037
    8. '\' → logprob: -7.389543056488037
    9. ':' → logprob: -7.514543056488037
    10. '
' → logprob: -7.639543056488037

Token 24: ' return' (ID: 622)
  Prédit: ' mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mass' → logprob: -0.4745296835899353
    2. '   ' → logprob: -1.72452974319458
    3. ' masses' → logprob: -2.59952974319458
    4. ' return' → logprob: -2.72452974319458
    5. 'mass' → logprob: -4.09952974319458
    6. ' weights' → logprob: -4.34952974319458
    7. ' defaultdict' → logprob: -5.09952974319458
    8. ' result' → logprob: -5.22452974319458
    9. ' m' → logprob: -5.34952974319458
    10. ' data' → logprob: -5.97452974319458

Token 25: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.573035717010498
    2. '[' → logprob: -0.948035717010498
    3. ' defaultdict' → logprob: -3.573035717010498
    4. 'default' → logprob: -4.448035717010498
    5. '[int' → logprob: -5.448035717010498
    6. 'list' → logprob: -6.823035717010498
    7. '[list' → logprob: -6.948035717010498
    8. ' ' → logprob: -7.323035717010498
    9. ' list' → logprob: -7.823035717010498
    10. '{' → logprob: -8.073036193847656

Token 26: 'input' (ID: 2586)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002933841198682785
    2. 'float' → logprob: -6.252933979034424
    3. ' int' → logprob: -7.502933979034424
    4. 'list' → logprob: -8.252933502197266
    5. 'map' → logprob: -8.877933502197266
    6. '[int' → logprob: -10.877933502197266
    7. 'tuple' → logprob: -11.877933502197266
    8. '0' → logprob: -12.252933502197266
    9. ' float' → logprob: -12.377933502197266
    10. '(int' → logprob: -12.502933502197266

Token 27: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31431469321250916
    2. '().' → logprob: -1.3143147230148315
    3. '())' → logprob: -7.939314842224121
    4. '()]' → logprob: -7.939314842224121
    5. '(' → logprob: -8.314314842224121
    6. ' ()' → logprob: -10.939314842224121
    7. '()>' → logprob: -11.064314842224121
    8. '()-' → logprob: -11.939314842224121
    9. '()+' → logprob: -12.189314842224121
    10. '("' → logprob: -12.314314842224121

Token 28: ' for' (ID: 395)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.22380901873111725
    2. '()' → logprob: -1.723809003829956
    3. ')' → logprob: -4.973809242248535
    4. ' for' → logprob: -5.348809242248535
    5. '.' → logprob: -5.598809242248535
    6. '.split' → logprob: -6.348809242248535
    7. 'for' → logprob: -6.473809242248535
    8. '())' → logprob: -7.098809242248535
    9. '.strip' → logprob: -7.473809242248535
    10. '(' → logprob: -7.598809242248535

Token 29: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07634393870830536
    2. '_' → logprob: -2.8263440132141113
    3. ' range' → logprob: -4.326344013214111
    4. ' ' → logprob: -7.201344013214111
    5. 'range' → logprob: -8.451343536376953
    6. '_range' → logprob: -9.951343536376953
    7. ' in' → logprob: -10.826343536376953
    8. '<|end|>' → logprob: -12.201343536376953
    9. ' xrange' → logprob: -12.326343536376953
    10. ' ' → logprob: -12.451343536376953

Token 30: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19334909319877625
    2. '(' → logprob: -2.9433491230010986
    3. 'in' → logprob: -2.9433491230010986
    4. '(H' → logprob: -3.6933491230010986
    5. '(range' → logprob: -4.0683488845825195
    6. ' in' → logprob: -4.3183488845825195
    7. ' range' → logprob: -4.5683488845825195
    8. '<|end|>' → logprob: -6.3183488845825195
    9. ' ' → logprob: -7.5683488845825195
    10. '('' → logprob: -7.8183488845825195

Token 31: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20152366161346436
    2. ' range' → logprob: -1.7015236616134644
    3. 'H' → logprob: -9.201523780822754
    4. '(range' → logprob: -12.201523780822754
    5. ' H' → logprob: -12.951523780822754
    6. '	range' → logprob: -14.201523780822754
    7. ' xrange' → logprob: -14.826523780822754
    8. ')' → logprob: -14.951523780822754
    9. ' ' → logprob: -15.576523780822754
    10. '(H' → logprob: -16.326522827148438

Token 32: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.20155005156993866
    2. '(' → logprob: -1.701550006866455
    3. '(len' → logprob: -9.201550483703613
    4. ' (' → logprob: -10.701550483703613
    5. '(N' → logprob: -12.201550483703613
    6. '(n' → logprob: -13.451550483703613
    7. '(
' → logprob: -13.576550483703613
    8. '((' → logprob: -13.576550483703613
    9. '(

' → logprob: -14.076550483703613
    10. '(s' → logprob: -14.451550483703613

Token 33: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.236549335066229e-05
    2. ')' → logprob: -11.500021934509277
    3. ']' → logprob: -12.125021934509277
    4. ' )' → logprob: -12.875021934509277
    5. '   ' → logprob: -13.000021934509277
    6. ')])' → logprob: -14.500021934509277
    7. '])]' → logprob: -14.875021934509277
    8. '')]' → logprob: -15.000021934509277
    9. ')}' → logprob: -15.875021934509277
    10. '))' → logprob: -15.875021934509277

Token 34: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03680279478430748
    2. '
' → logprob: -4.286802768707275
    3. '#' → logprob: -4.536802768707275
    4. '<|end|>' → logprob: -4.786802768707275
    5. '```' → logprob: -6.911802768707275
    6. '

' → logprob: -7.161802768707275
    7. '<|end|>' → logprob: -7.536802768707275
    8. '\n' → logprob: -7.911802768707275
    9. '\' → logprob: -8.536803245544434
    10. ' def' → logprob: -8.911803245544434

Token 35: ' create' (ID: 2501)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.219199776649475
    2. 'main' → logprob: -1.594199776649475
    3. 'solve' → logprob: -2.0941996574401855
    4. 'count' → logprob: -2.2191996574401855
    5. ' count' → logprob: -2.4691996574401855
    6. ' solve' → logprob: -3.3441996574401855
    7. 'process' → logprob: -3.8441996574401855
    8. ' process' → logprob: -4.3441996574401855
    9. 'calculate' → logprob: -4.3441996574401855
    10. 'read' → logprob: -4.5941996574401855

Token 36: '_grid' (ID: 34614)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4375585615634918
    2. '_map' → logprob: -1.9375585317611694
    3. '_mass' → logprob: -2.812558650970459
    4. '_matrix' → logprob: -3.062558650970459
    5. '_grid' → logprob: -4.062558650970459
    6. '_layer' → logprob: -4.312558650970459
    7. '_space' → logprob: -4.687558650970459
    8. '_array' → logprob: -4.937558650970459
    9. '_default' → logprob: -5.062558650970459
    10. '_table' → logprob: -5.437558650970459

Token 37: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018863797187805176
    2. '(H' → logprob: -4.143863677978516
    3. '((' → logprob: -6.893863677978516
    4. '("("' → logprob: -7.268863677978516
    5. '(grid' → logprob: -8.643863677978516
    6. ' (' → logprob: -9.018863677978516
    7. '()' → logprob: -9.393863677978516
    8. '()(' → logprob: -9.768863677978516
    9. '(h' → logprob: -10.018863677978516
    10. '(Grid' → logprob: -10.143863677978516

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001992490579141304
    2. ' ,' → logprob: -9.000199317932129
    3. ')' → logprob: -10.250199317932129
    4. '):' → logprob: -10.750199317932129
    5. ',width' → logprob: -12.750199317932129
    6. ',C' → logprob: -13.000199317932129
    7. ',H' → logprob: -13.000199317932129
    8. ',n' → logprob: -13.250199317932129
    9. ',N' → logprob: -13.625199317932129
    10. '   ' → logprob: -13.750199317932129

Token 39: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.004632572643458843
    2. ' W' → logprob: -5.379632472991943
    3. '   ' → logprob: -12.754632949829102
    4. '	W' → logprob: -12.754632949829102
    5. 'L' → logprob: -13.379632949829102
    6. '  ' → logprob: -13.504632949829102
    7. ' ' → logprob: -13.754632949829102
    8. ')' → logprob: -13.879632949829102
    9. '    ' → logprob: -14.879632949829102
    10. 'M' → logprob: -15.129632949829102

Token 40: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011844364780699834
    2. ')' → logprob: -9.875118255615234
    3. ',' → logprob: -10.000118255615234
    4. ' ):' → logprob: -10.875118255615234
    5. '):
' → logprob: -13.500118255615234
    6. '   ' → logprob: -14.375118255615234
    7. ':' → logprob: -15.125118255615234
    8. ' ' → logprob: -16.625118255615234
    9. '=' → logprob: -16.875118255615234
    10. ']:' → logprob: -17.125118255615234

Token 41: ' value' (ID: 1432)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.2993476390838623
    2. ' mass' → logprob: -1.5493476390838623
    3. 'mass' → logprob: -1.7993476390838623
    4. ' M' → logprob: -1.9243476390838623
    5. ' lines' → logprob: -3.1743476390838623
    6. ')' → logprob: -4.299347877502441
    7. ' grid' → logprob: -4.299347877502441
    8. ' )' → logprob: -4.299347877502441
    9. ' data' → logprob: -4.424347877502441
    10. ' default' → logprob: -4.549347877502441

Token 42: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05016511678695679
    2. '=' → logprob: -3.0501651763916016
    3. ')' → logprob: -6.675165176391602
    4. ' ):' → logprob: -8.675165176391602
    5. '=None' → logprob: -9.675165176391602
    6. ':' → logprob: -10.425165176391602
    7. 's' → logprob: -11.300165176391602
    8. ' =' → logprob: -11.425165176391602
    9. '):
' → logprob: -12.300165176391602
    10. '   ' → logprob: -12.425165176391602

Token 43: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22970937192440033
    2. ' '' → logprob: -2.1047093868255615
    3. ' )' → logprob: -3.6047093868255615
    4. ')' → logprob: -4.229709148406982
    5. ' ' → logprob: -4.229709148406982
    6. '0' → logprob: -4.479709148406982
    7. ' None' → logprob: -4.604709148406982
    8. ''.' → logprob: -5.979709148406982
    9. '"' → logprob: -6.979709148406982
    10. 'None' → logprob: -6.979709148406982

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017365860985592008
    2. ')' → logprob: -6.376736640930176
    3. ' ):' → logprob: -11.251736640930176
    4. '):
' → logprob: -11.251736640930176
    5. ',' → logprob: -12.001736640930176
    6. '   ' → logprob: -14.001736640930176
    7. ':' → logprob: -14.626736640930176
    8. ' ' → logprob: -15.626736640930176
    9. '):
' → logprob: -16.00173568725586
    10. ')):' → logprob: -16.12673568725586

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058544985949993134
    2. '[' → logprob: -3.808544874191284
    3. ':' → logprob: -4.183545112609863
    4. '(' → logprob: -5.308545112609863
    5. '(H' → logprob: -5.558545112609863
    6. '([[' → logprob: -6.433545112609863
    7. '  ' → logprob: -6.683545112609863
    8. '[[' → logprob: -6.808545112609863
    9. ')' → logprob: -7.558545112609863
    10. ' (' → logprob: -7.558545112609863

Token 46: ' return' (ID: 622)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.48501211404800415
    2. '[' → logprob: -1.9850120544433594
    3. '[[' → logprob: -1.9850120544433594
    4. ' [' → logprob: -2.2350120544433594
    5. '   ' → logprob: -6.860012054443359
    6. '[
' → logprob: -7.235012054443359
    7. ' [
' → logprob: -8.73501205444336
    8. ' return' → logprob: -8.73501205444336
    9. '[['' → logprob: -9.11001205444336
    10. 'return' (adapté à ' return') → logprob: -9.36001205444336

Token 47: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.1615218222141266
    2. ' [[' → logprob: -1.9115217924118042
    3. '[' → logprob: -7.036521911621094
    4. ' [' → logprob: -7.786521911621094
    5. '[
' → logprob: -13.661521911621094
    6. '[['' → logprob: -14.286521911621094
    7. '   ' → logprob: -15.411521911621094
    8. ' ' → logprob: -16.161521911621094
    9. '([[' → logprob: -16.911521911621094
    10. 'default' → logprob: -17.036521911621094

Token 48: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.002191660227254033
    2. ' value' → logprob: -6.127191543579102
    3. '0' → logprob: -12.002191543579102
    4. ')value' → logprob: -16.0021915435791
    5. '   ' → logprob: -16.3771915435791
    6. '"value' → logprob: -16.6271915435791
    7. ''value' → logprob: -16.7521915435791
    8. '(value' → logprob: -17.0021915435791
    9. '	value' → logprob: -17.2521915435791
    10. ' ' → logprob: -17.6271915435791

Token 49: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011036031879484653
    2. 'for' → logprob: -5.011035919189453
    3. ']' → logprob: -5.636035919189453
    4. ' ]' → logprob: -7.886035919189453
    5. ']*' → logprob: -8.136035919189453
    6. '   ' → logprob: -10.261035919189453
    7. ' ' → logprob: -10.761035919189453
    8. ')' → logprob: -11.636035919189453
    9. '    ' → logprob: -12.136035919189453
    10. '	for' → logprob: -13.386035919189453

Token 50: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3217860162258148
    2. ' _' → logprob: -1.3217860460281372
    3. ' range' → logprob: -4.821785926818848
    4. '_range' → logprob: -8.821785926818848
    5. 'range' → logprob: -8.821785926818848
    6. ' in' → logprob: -9.321785926818848
    7. ' ' → logprob: -10.071785926818848
    8. '<|end|>' → logprob: -12.571785926818848
    9. '__' → logprob: -13.571785926818848
    10. ' xrange' → logprob: -13.821785926818848

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8072532415390015
    2. 'range' → logprob: -0.8072532415390015
    3. ' range' → logprob: -2.432253360748291
    4. 'in' → logprob: -3.932253360748291
    5. 'ange' → logprob: -8.182252883911133
    6. ' ' → logprob: -9.307252883911133
    7. ' xrange' → logprob: -11.557252883911133
    8. '	range' → logprob: -12.432252883911133
    9. '(range' → logprob: -12.682252883911133
    10. '  ' → logprob: -12.932252883911133

Token 52: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022615134716034
    2. ' range' → logprob: -1.9102261066436768
    3. '_range' → logprob: -14.160225868225098
    4. '	range' → logprob: -14.160225868225098
    5. '_' → logprob: -15.535225868225098
    6. ' ' → logprob: -16.410226821899414
    7. ')' → logprob: -16.785226821899414
    8. '(range' → logprob: -16.785226821899414
    9. 'ange' → logprob: -17.035226821899414
    10. '   ' → logprob: -17.035226821899414

Token 53: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -5.88418151892256e-05
    2. '(' → logprob: -10.500059127807617
    3. 'W' → logprob: -11.125059127807617
    4. ' (' → logprob: -11.500059127807617
    5. ' W' → logprob: -12.125059127807617
    6. '   ' → logprob: -14.500059127807617
    7. '	W' → logprob: -16.000059127807617
    8. ' ' → logprob: -16.250059127807617
    9. ')' → logprob: -16.750059127807617
    10. '(H' → logprob: -17.625059127807617

Token 54: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.7159857786027715e-05
    2. ']' → logprob: -10.250046730041504
    3. ')' → logprob: -12.500046730041504
    4. '   ' → logprob: -12.625046730041504
    5. ']]' → logprob: -13.250046730041504
    6. ' )' → logprob: -13.500046730041504
    7. ' ]' → logprob: -14.250046730041504
    8. '])]' → logprob: -15.500046730041504
    9. '])' → logprob: -15.625046730041504
    10. ')]
' → logprob: -15.750046730041504

Token 55: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06982115656137466
    2. ' for' → logprob: -3.0698211193084717
    3. 'for' → logprob: -4.069821357727051
    4. '   ' → logprob: -6.194821357727051
    5. ' ]' → logprob: -6.569821357727051
    6. ')]' → logprob: -7.819821357727051
    7. ')' → logprob: -9.81982135772705
    8. '])' → logprob: -11.56982135772705
    9. '()]' → logprob: -12.44482135772705
    10. ' ' → logprob: -12.56982135772705

Token 56: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006771737709641457
    2. 'range' → logprob: -5.006771564483643
    3. '	range' → logprob: -11.6317720413208
    4. '<|end|>' → logprob: -11.6317720413208
    5. '_range' → logprob: -11.7567720413208
    6. '_' → logprob: -11.7567720413208
    7. ' _' → logprob: -11.8817720413208
    8. ' ' → logprob: -12.1317720413208
    9. '(range' → logprob: -12.2567720413208
    10. ' xrange' → logprob: -12.2567720413208

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2388174831867218
    2. 'in' → logprob: -1.9888174533843994
    3. 'range' → logprob: -2.6138174533843994
    4. ' range' → logprob: -6.1138176918029785
    5. ' ' → logprob: -9.61381721496582
    6. '<|end|>' → logprob: -10.48881721496582
    7. '(range' → logprob: -11.48881721496582
    8. '  ' → logprob: -12.73881721496582
    9. '	range' → logprob: -13.36381721496582
    10. ')' → logprob: -13.48881721496582

Token 58: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006724960170686245
    2. ' range' → logprob: -5.006724834442139
    3. '(range' → logprob: -11.631725311279297
    4. '	range' → logprob: -14.756725311279297
    5. '_range' → logprob: -16.256725311279297
    6. '.range' → logprob: -16.631725311279297
    7. '[' → logprob: -16.881725311279297
    8. ' xrange' → logprob: -17.756725311279297
    9. 'Range' → logprob: -18.506725311279297
    10. '<|end|>' → logprob: -18.631725311279297

Token 59: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.3080716346157715e-05
    2. '(' → logprob: -10.750022888183594
    3. '(range' → logprob: -14.000022888183594
    4. '((' → logprob: -15.125022888183594
    5. 'range' → logprob: -16.125022888183594
    6. ' (' → logprob: -16.375022888183594
    7. '(W' → logprob: -16.625022888183594
    8. '(I' → logprob: -17.375022888183594
    9. 'H' → logprob: -17.500022888183594
    10. '(S' → logprob: -17.625022888183594

Token 60: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.3544423381972592e-05
    2. '])]' → logprob: -12.00001335144043
    3. ']' → logprob: -12.50001335144043
    4. ')' → logprob: -13.37501335144043
    5. ')])' → logprob: -13.37501335144043
    6. '])' → logprob: -15.00001335144043
    7. ')],' → logprob: -16.37501335144043
    8. '   ' → logprob: -16.75001335144043
    9. '))' → logprob: -17.25001335144043
    10. '')]' → logprob: -17.25001335144043

Token 61: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002135982969775796
    2. '

' → logprob: -6.377135753631592
    3. '
' → logprob: -9.12713623046875
    4. '#' → logprob: -9.62713623046875
    5. '\' → logprob: -9.62713623046875
    6. 'class' → logprob: -9.75213623046875
    7. '```' → logprob: -10.25213623046875
    8. 'd' → logprob: -10.62713623046875
    9. 'from' → logprob: -11.62713623046875
    10. '<|end|>' → logprob: -11.75213623046875

Token 62: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6265366077423096
    2. 'main' → logprob: -2.1265366077423096
    3. ' bfs' → logprob: -2.1265366077423096
    4. 'b' → logprob: -2.7515366077423096
    5. ' count' → logprob: -3.1265366077423096
    6. 'count' → logprob: -3.2515366077423096
    7. 'solve' → logprob: -4.3765363693237305
    8. 'f' → logprob: -5.0015363693237305
    9. ' solve' → logprob: -5.1265363693237305
    10. ' flood' → logprob: -5.3765363693237305

Token 63: '_row' (ID: 19157)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7546278834342957
    2. '_grid' → logprob: -1.6296279430389404
    3. '(' → logprob: -1.7546279430389404
    4. '_dimensions' → logprob: -2.0046279430389404
    5. '(_' → logprob: -5.254627704620361
    6. '_dims' → logprob: -6.004627704620361
    7. '_(' → logprob: -6.254627704620361
    8. '_mass' → logprob: -6.379627704620361
    9. '```' → logprob: -6.504627704620361
    10. '_data' → logprob: -6.504627704620361

Token 64: '_ind' (ID: 20261)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.2591888904571533
    2. '(' → logprob: -1.5091888904571533
    3. '(rows' → logprob: -6.259188652038574
    4. '(Row' → logprob: -6.259188652038574
    5. '(line' → logprob: -6.634188652038574
    6. '(H' → logprob: -6.759188652038574
    7. '(grid' → logprob: -8.509188652038574
    8. '_row' → logprob: -8.759188652038574
    9. '(_' → logprob: -9.009188652038574
    10. '(r' → logprob: -9.759188652038574

Token 65: 'icators' (ID: 70920)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5245833396911621
    2. 'ices' → logprob: -0.8995833396911621
    3. 'icies' → logprob: -7.524583339691162
    4. '_' → logprob: -8.77458381652832
    5. '_ex' → logprob: -8.77458381652832
    6. 'ecs' → logprob: -9.39958381652832
    7. 'ent' → logprob: -9.52458381652832
    8. 'ec' → logprob: -9.77458381652832
    9. 'e' → logprob: -10.14958381652832
    10. 'icators' → logprob: -10.14958381652832

Token 66: '(m' (ID: 2145)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.4433121681213379
    2. '(' → logprob: -1.568312168121338
    3. '():' → logprob: -2.068312168121338
    4. '(row' → logprob: -3.943312168121338
    5. '()' → logprob: -6.443312168121338
    6. '(rows' → logprob: -7.318312168121338
    7. '(line' → logprob: -7.818312168121338
    8. '(s' → logprob: -9.06831169128418
    9. '(grid' → logprob: -9.19331169128418
    10. '((' → logprob: -9.31831169128418

Token 67: 'ass' (ID: 456)
  Prédit: 'ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.43643006682395935
    2. 'ap' → logprob: -2.311429977416992
    3. 'asses' → logprob: -2.561429977416992
    4. 'a' → logprob: -2.811429977416992
    5. 'atrix' → logprob: -2.936429977416992
    6. 'ask' → logprob: -4.186429977416992
    7. ')' → logprob: -4.811429977416992
    8. 'e' → logprob: -4.936429977416992
    9. 'asks' → logprob: -5.186429977416992
    10. '_rows' → logprob: -5.936429977416992

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12264472246170044
    2. '):' → logprob: -2.6226446628570557
    3. '[' → logprob: -3.6226446628570557
    4. ')]' → logprob: -5.997644901275635
    5. ')' → logprob: -6.247644901275635
    6. '[row' → logprob: -6.372644901275635
    7. 'ectors' → logprob: -6.872644901275635
    8. '   ' → logprob: -6.997644901275635
    9. ',H' → logprob: -6.997644901275635
    10. ')):' → logprob: -7.372644901275635

Token 69: ' H' (ID: 487)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.9983386397361755
    2. 'H' → logprob: -1.8733386993408203
    3. ' row' → logprob: -1.8733386993408203
    4. 'W' → logprob: -2.4983386993408203
    5. ' H' → logprob: -2.4983386993408203
    6. ' W' → logprob: -2.9983386993408203
    7. 'i' → logprob: -3.6233386993408203
    8. 'ind' → logprob: -3.9983386993408203
    9. ' indicators' → logprob: -4.49833869934082
    10. ' i' → logprob: -4.56083869934082

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005569627974182367
    2. '):' → logprob: -8.250556945800781
    3. ' ,' → logprob: -8.250556945800781
    4. ')' → logprob: -10.625556945800781
    5. '   ' → logprob: -12.250556945800781
    6. ',W' → logprob: -13.250556945800781
    7. ' ' → logprob: -14.250556945800781
    8. ' ):' → logprob: -14.375556945800781
    9. ',
' → logprob: -14.500556945800781
    10. '‌,' → logprob: -14.875556945800781

Token 71: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.14270852506160736
    2. ' W' → logprob: -2.0177085399627686
    3. '   ' → logprob: -10.892708778381348
    4. ' ' → logprob: -11.767708778381348
    5. ')' → logprob: -13.142708778381348
    6. '<|end|>' → logprob: -14.017708778381348
    7. '  ' → logprob: -14.142708778381348
    8. '    ' → logprob: -14.142708778381348
    9. '	W' → logprob: -14.892708778381348
    10. 'w' → logprob: -14.892708778381348

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03871295601129532
    2. ',' → logprob: -3.288712978363037
    3. ')' → logprob: -7.413712978363037
    4. ' ):' → logprob: -9.913712501525879
    5. '):
' → logprob: -11.538712501525879
    6. '   ' → logprob: -12.788712501525879
    7. ' ,' → logprob: -13.288712501525879
    8. ':' → logprob: -13.663712501525879
    9. '=' → logprob: -14.038712501525879
    10. ' ' → logprob: -14.538712501525879

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006194926332682371
    2. ' row' → logprob: -5.881195068359375
    3. 'row' → logprob: -6.631195068359375
    4. ':' → logprob: -7.131195068359375
    5. 'ind' → logprob: -8.006195068359375
    6. ' ind' → logprob: -9.131195068359375
    7. '):
' → logprob: -9.631195068359375
    8. '   ' → logprob: -9.631195068359375
    9. ' counts' → logprob: -9.881195068359375
    10. '    ' → logprob: -9.881195068359375

Token 74: ' values' (ID: 4824)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42862939834594727
    2. ' row' → logprob: -1.3036293983459473
    3. 'row' → logprob: -3.0536293983459473
    4. 'ind' → logprob: -3.9286293983459473
    5. ' result' → logprob: -6.428629398345947
    6. ' indicators' → logprob: -6.928629398345947
    7. ' ind' → logprob: -7.053629398345947
    8. 'rows' → logprob: -7.178629398345947
    9. ' counts' → logprob: -7.303629398345947
    10. 'result' → logprob: -7.303629398345947

Token 75: '_row' (ID: 19157)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34940505027770996
    2. '=' → logprob: -1.22440505027771
    3. ',' → logprob: -7.349405288696289
    4. ' ' → logprob: -8.599405288696289
    5. '=[]' → logprob: -9.349405288696289
    6. '   ' → logprob: -10.849405288696289
    7. '={}' → logprob: -11.349405288696289
    8. '[' → logprob: -12.849405288696289
    9. '  ' → logprob: -13.474405288696289
    10. ')' → logprob: -13.599405288696289

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5766744613647461
    2. '=' → logprob: -0.8266744613647461
    3. ',' → logprob: -8.076674461364746
    4. 's' → logprob: -8.576674461364746
    5. ')' → logprob: -8.951674461364746
    6. '=[]' → logprob: -10.201674461364746
    7. ']' → logprob: -11.076674461364746
    8. ' ' → logprob: -11.326674461364746
    9. '_' → logprob: -11.451674461364746
    10. '   ' → logprob: -11.451674461364746

Token 77: ' defaultdict' (ID: 107098)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.0524587631225586
    2. ' [' → logprob: -1.1774587631225586
    3. '[]' → logprob: -1.4274587631225586
    4. '[' → logprob: -2.9274587631225586
    5. ' defaultdict' → logprob: -3.3024587631225586
    6. ' [[]' → logprob: -4.927458763122559
    7. 'default' → logprob: -5.427458763122559
    8. ' ' → logprob: -8.177458763122559
    9. '[len' → logprob: -9.052458763122559
    10. ' default' → logprob: -9.302458763122559

Token 78: '(int' (ID: 2742)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.20171640813350677
    2. '(int' → logprob: -1.826716423034668
    3. '(' → logprob: -4.201716423034668
    4. '(lambda' → logprob: -5.076716423034668
    5. 'list' → logprob: -8.451716423034668
    6. '(
' → logprob: -8.451716423034668
    7. '<int' → logprob: -10.326716423034668
    8. 'int' → logprob: -11.701716423034668
    9. '=list' → logprob: -11.951716423034668
    10. ' list' → logprob: -12.326716423034668

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.941161776310764e-05
    2. ')
' → logprob: -10.750039100646973
    3. ' )' → logprob: -11.375039100646973
    4. ')

' → logprob: -12.500039100646973
    5. '())' → logprob: -14.250039100646973
    6. '()' → logprob: -14.875039100646973
    7. ')
' → logprob: -15.250039100646973
    8. ',' → logprob: -15.375039100646973
    9. ' ' → logprob: -15.375039100646973
    10. '   ' → logprob: -15.625039100646973

Token 80: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2771354615688324
    2. '   ' → logprob: -2.2771353721618652
    3. ' for' → logprob: -2.6521353721618652
    4. 'for' → logprob: -3.9021353721618652
    5. ' ' → logprob: -4.027135372161865
    6. '' → logprob: -5.152135372161865
    7. ' 
' → logprob: -5.277135372161865
    8. '  
' → logprob: -5.402135372161865
    9. ')' → logprob: -5.527135372161865
    10. ':' → logprob: -5.652135372161865

Token 81: ' ind' (ID: 1383)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5420277714729309
    2. 'for' → logprob: -0.9170277714729309
    3. '   ' → logprob: -4.042027950286865
    4. '
' → logprob: -8.167027473449707
    5. '	for' → logprob: -8.417027473449707
    6. ' ' → logprob: -8.542027473449707
    7. 'row' → logprob: -9.292027473449707
    8. 'rows' → logprob: -9.417027473449707
    9. '    
' → logprob: -10.042027473449707
    10. ')' → logprob: -10.542027473449707

Token 82: '_row' (ID: 19157)
  Prédit: 'icators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icators' → logprob: -0.16825725138187408
    2. 'ex' → logprob: -2.293257236480713
    3. 'ices' → logprob: -3.418257236480713
    4. 'icator' → logprob: -4.418257236480713
    5. 'ic' → logprob: -5.418257236480713
    6. '=' → logprob: -6.668257236480713
    7. ' =' → logprob: -7.918257236480713
    8. '_row' → logprob: -7.918257236480713
    9. 'ent' → logprob: -8.293257713317871
    10. '_' → logprob: -8.418257713317871

Token 83: ' =' (ID: 314)
  Prédit: 'icators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icators' → logprob: -0.044208064675331116
    2. 'ices' → logprob: -4.54420804977417
    3. '=' → logprob: -4.79420804977417
    4. 'ex' → logprob: -4.91920804977417
    5. ' =' → logprob: -5.91920804977417
    6. '[' → logprob: -5.91920804977417
    7. ']' → logprob: -6.29420804977417
    8. 'ic' → logprob: -6.29420804977417
    9. '```' → logprob: -6.41920804977417
    10. 's' → logprob: -6.91920804977417

Token 84: ' create' (ID: 2501)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27566275000572205
    2. '[]' → logprob: -1.7756627798080444
    3. ' [' → logprob: -3.275662660598755
    4. '0' → logprob: -4.275662899017334
    5. ' []' → logprob: -4.650662899017334
    6. 'default' → logprob: -5.900662899017334
    7. '[-' → logprob: -6.025662899017334
    8. ' defaultdict' → logprob: -6.525662899017334
    9. ' ' → logprob: -7.025662899017334
    10. '{}' → logprob: -7.150662899017334

Token 85: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -4.668304245569743e-05
    2. '_row' → logprob: -10.125046730041504
    3. '```' → logprob: -13.250046730041504
    4. '_gr' → logprob: -13.750046730041504
    5. 's' → logprob: -14.500046730041504
    6. 'grid' → logprob: -14.875046730041504
    7. ' _' → logprob: -15.250046730041504
    8. '_GRID' → logprob: -15.500046730041504
    9. '_line' → logprob: -15.625046730041504
    10. '"_' → logprob: -15.625046730041504

Token 86: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0005555360112339258
    2. '(' → logprob: -7.500555515289307
    3. '<|end|>' → logprob: -14.000555992126465
    4. ' (' → logprob: -14.250555992126465
    5. 'H' → logprob: -15.375555992126465
    6. ' ' → logprob: -15.750555992126465
    7. ')' → logprob: -16.00055503845215
    8. '(int' → logprob: -16.25055503845215
    9. '(
' → logprob: -16.50055503845215
    10. ')(' → logprob: -16.62555503845215

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005338943563401699
    2. ',W' → logprob: -5.2553391456604
    3. ' ,' → logprob: -9.380338668823242
    4. ',H' → logprob: -11.380338668823242
    5. ',
' → logprob: -12.880338668823242
    6. ',w' → logprob: -13.130338668823242
    7. ')' → logprob: -13.380338668823242
    8. '   ' → logprob: -14.880338668823242
    9. '```' → logprob: -15.005338668823242
    10. ',int' → logprob: -15.255338668823242

Token 88: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.006114955060184002
    2. ' W' → logprob: -5.131114959716797
    3. '1' → logprob: -8.756114959716797
    4. ' ' → logprob: -10.756114959716797
    5. '0' → logprob: -13.006114959716797
    6. '   ' → logprob: -13.381114959716797
    7. ')' → logprob: -13.881114959716797
    8. '	W' → logprob: -14.006114959716797
    9. '  ' → logprob: -14.756114959716797
    10. '2' → logprob: -15.631114959716797

Token 89: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00563023192808032
    2. '))' → logprob: -5.255630016326904
    3. ',' → logprob: -8.005630493164062
    4. ' )' → logprob: -10.380630493164062
    5. ')))' → logprob: -11.130630493164062
    6. ',)' → logprob: -11.880630493164062
    7. '),' → logprob: -12.380630493164062
    8. ')}' → logprob: -13.630630493164062
    9. ')`' → logprob: -14.505630493164062
    10. ')
' → logprob: -14.505630493164062

Token 90: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14382930099964142
    2. ' ' → logprob: -3.268829345703125
    3. 'False' → logprob: -3.643829345703125
    4. '-' → logprob: -3.768829345703125
    5. '1' → logprob: -3.768829345703125
    6. ''' → logprob: -4.768829345703125
    7. ' False' → logprob: -5.393829345703125
    8. ')' → logprob: -5.768829345703125
    9. ' -' → logprob: -6.518829345703125
    10. 'None' → logprob: -7.018829345703125

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16717460751533508
    2. '1' → logprob: -3.0421745777130127
    3. 'False' → logprob: -3.0421745777130127
    4. '-' → logprob: -3.7921745777130127
    5. ''' → logprob: -4.167174816131592
    6. '')' → logprob: -5.042174816131592
    7. ')' → logprob: -5.667174816131592
    8. 'None' → logprob: -6.042174816131592
    9. 'True' → logprob: -6.417174816131592
    10. ''.' → logprob: -6.542174816131592

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.875003814697266
    3. ')
' → logprob: -14.750003814697266
    4. '))' → logprob: -15.000003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '),' → logprob: -17.125003814697266
    7. '')' → logprob: -17.750003814697266
    8. ' ' → logprob: -18.125003814697266
    9. ')))' → logprob: -18.250003814697266
    10. ')return' → logprob: -18.375003814697266

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21234801411628723
    2. '   ' → logprob: -2.212347984313965
    3. ' 
' → logprob: -3.337347984313965
    4. ' ' → logprob: -4.337347984313965
    5. '    
' → logprob: -4.712347984313965
    6. '' → logprob: -4.962347984313965
    7. '  
' → logprob: -5.337347984313965
    8. ')' → logprob: -5.587347984313965
    9. ' for' → logprob: -5.837347984313965
    10. 'n' → logprob: -6.462347984313965

Token 94: ' ind' (ID: 1383)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5637749433517456
    2. '
' → logprob: -1.1887749433517456
    3. 'for' → logprob: -2.188775062561035
    4. '   ' → logprob: -4.938775062561035
    5. ' 
' → logprob: -5.938775062561035
    6. '	for' → logprob: -6.438775062561035
    7. ' ' → logprob: -6.563775062561035
    8. '    
' → logprob: -7.938775062561035
    9. '' → logprob: -8.063775062561035
    10. '  
' → logprob: -8.813775062561035

Token 95: ' =' (ID: 314)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.006112108938395977
    2. '_' → logprob: -5.506112098693848
    3. '_rows' → logprob: -6.756112098693848
    4. ' =' → logprob: -8.506112098693848
    5. 'row' → logprob: -9.256112098693848
    6. ' ' → logprob: -9.506112098693848
    7. '<|end|>' → logprob: -9.506112098693848
    8. '   ' → logprob: -9.631112098693848
    9. '_idx' → logprob: -10.506112098693848
    10. '=' → logprob: -10.506112098693848

Token 96: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.260209321975708
    2. ' ' → logprob: -1.510209321975708
    3. '1' → logprob: -5.010209083557129
    4. ' defaultdict' → logprob: -7.260209083557129
    5. ' []' → logprob: -8.260209083557129
    6. '[' → logprob: -9.010209083557129
    7. ' [' → logprob: -9.135209083557129
    8. ' -' → logprob: -9.135209083557129
    9. '[]' → logprob: -9.510209083557129
    10. '-' → logprob: -9.510209083557129

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48047545552253723
    2. '1' → logprob: -0.9804754257202148
    3. '-' → logprob: -5.730475425720215
    4. 'default' → logprob: -6.855475425720215
    5. ' ' → logprob: -7.480475425720215
    6. '{}' → logprob: -7.605475425720215
    7. '[]' → logprob: -8.105475425720215
    8. 'False' → logprob: -8.730475425720215
    9. '[' → logprob: -9.105475425720215
    10. '{' → logprob: -9.355475425720215

Token 98: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5941142439842224
    2. ' for' → logprob: -1.3441143035888672
    3. '
' → logprob: -2.344114303588867
    4. '<|end|>' → logprob: -2.844114303588867
    5. 'for' → logprob: -3.844114303588867
    6. '	for' → logprob: -4.969114303588867
    7. ' ' → logprob: -6.719114303588867
    8. '    
' → logprob: -7.094114303588867
    9. '  ' → logprob: -7.219114303588867
    10. '<|end|>' → logprob: -7.344114303588867

Token 100: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39070188999176025
    2. ' for' → logprob: -1.1407018899917603
    3. '   ' → logprob: -5.640701770782471
    4. 'i' → logprob: -8.765702247619629
    5. ' i' → logprob: -10.015702247619629
    6. ' ' → logprob: -10.515702247619629
    7. '
' → logprob: -10.640702247619629
    8. '	for' → logprob: -11.765702247619629
    9. '  ' → logprob: -12.640702247619629
    10. '```' → logprob: -13.765702247619629

Token 101: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018228257074952126
    2. 'i' → logprob: -4.768228054046631
    3. ' row' → logprob: -5.643228054046631
    4. ' r' → logprob: -5.768228054046631
    5. ' h' → logprob: -6.268228054046631
    6. ' range' → logprob: -8.643228530883789
    7. ' ' → logprob: -8.768228530883789
    8. 'row' → logprob: -8.768228530883789
    9. ' y' → logprob: -8.768228530883789
    10. 'r' → logprob: -9.393228530883789

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02372639626264572
    2. 'in' → logprob: -3.773726463317871
    3. ' ' → logprob: -7.773726463317871
    4. ',' → logprob: -10.523726463317871
    5. 'n' → logprob: -10.773726463317871
    6. '	in' → logprob: -12.148726463317871
    7. ' n' → logprob: -13.398726463317871
    8. ' ,' → logprob: -13.523726463317871
    9. '  ' → logprob: -14.273726463317871
    10. ' i' → logprob: -14.398726463317871

Token 103: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01251847855746746
    2. 'range' → logprob: -4.387518405914307
    3. ' ' → logprob: -12.387518882751465
    4. '	range' → logprob: -13.137518882751465
    5. ' xrange' → logprob: -13.387518882751465
    6. '(range' → logprob: -14.262518882751465
    7. ')' → logprob: -16.26251792907715
    8. '  ' → logprob: -16.38751792907715
    9. '   ' → logprob: -16.51251792907715
    10. '_range' → logprob: -16.88751792907715

Token 104: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0041797831654548645
    2. '(' → logprob: -5.504179954528809
    3. ' (' → logprob: -9.379179954528809
    4. ' H' → logprob: -11.629179954528809
    5. ' ' → logprob: -12.879179954528809
    6. '(len' → logprob: -13.504179954528809
    7. 'H' → logprob: -14.129179954528809
    8. '(
' → logprob: -14.254179954528809
    9. '(W' → logprob: -14.254179954528809
    10. '   ' → logprob: -14.504179954528809

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002695032162591815
    2. '):
' → logprob: -6.002695083618164
    3. ' ):' → logprob: -8.752695083618164
    4. ':' → logprob: -10.627695083618164
    5. ')' → logprob: -10.752695083618164
    6. '   ' → logprob: -11.377695083618164
    7. '+' → logprob: -13.502695083618164
    8. ',' → logprob: -13.877695083618164
    9. ' ' → logprob: -14.252695083618164
    10. '):
' → logprob: -14.627695083618164

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06763025373220444
    2. '<|end|>' → logprob: -3.3176302909851074
    3. ' ' → logprob: -4.067630290985107
    4. '   ' → logprob: -5.067630290985107
    5. '    ' → logprob: -5.942630290985107
    6. ' for' → logprob: -7.442630290985107
    7. '        
' → logprob: -7.567630290985107
    8. '<|end|>' → logprob: -7.942630290985107
    9. ',' → logprob: -8.31762981414795
    10. ':' → logprob: -8.44262981414795

Token 107: ' ind' (ID: 1383)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.099838376045227
    2. ' for' → logprob: -1.099838376045227
    3. 'for' → logprob: -1.474838376045227
    4. '   ' → logprob: -3.3498382568359375
    5. 'j' → logprob: -3.8498382568359375
    6. ' j' → logprob: -4.2248382568359375
    7. 'count' → logprob: -4.2248382568359375
    8. 'row' → logprob: -5.7248382568359375
    9. 'current' → logprob: -5.7248382568359375
    10. ' count' → logprob: -6.0998382568359375

Token 108: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.849181592464447
    2. ' +=' → logprob: -1.0991816520690918
    3. ' =' → logprob: -1.8491816520690918
    4. '+=' → logprob: -2.724181652069092
    5. ',' → logprob: -5.099181652069092
    6. ' ' → logprob: -5.224181652069092
    7. ')' → logprob: -6.599181652069092
    8. ' in' → logprob: -7.724181652069092
    9. '_row' → logprob: -7.849181652069092
    10. 'in' → logprob: -7.974181652069092

Token 109: ' increment' (ID: 24032)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15938448905944824
    2. ' ' → logprob: -2.0343844890594482
    3. ' mass' → logprob: -5.284384727478027
    4. '1' → logprob: -5.534384727478027
    5. ' i' → logprob: -6.159384727478027
    6. 'mass' → logprob: -6.534384727478027
    7. '-' → logprob: -7.159384727478027
    8. ' -' → logprob: -7.284384727478027
    9. '   ' → logprob: -7.409384727478027
    10. ' values' → logprob: -7.534384727478027

Token 110: '_ind' (ID: 20261)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4845069348812103
    2. '(ind' → logprob: -1.4845069646835327
    3. '(' → logprob: -2.609506845474243
    4. '+' → logprob: -3.484506845474243
    5. 'ind' → logprob: -3.609506845474243
    6. 'ed' → logprob: -4.859507083892822
    7. '_ind' → logprob: -5.859507083892822
    8. '()' → logprob: -6.109507083892822
    9. ')' → logprob: -6.609507083892822
    10. '_' → logprob: -6.609507083892822

Token 111: '(ind' (ID: 50964)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9742029309272766
    2. ' +' → logprob: -1.2242028713226318
    3. '(i' → logprob: -1.9742028713226318
    4. 'or' → logprob: -2.599202871322632
    5. ' ' → logprob: -4.349203109741211
    6. '(ind' → logprob: -4.724203109741211
    7. '_' → logprob: -4.849203109741211
    8. 'i' → logprob: -4.974203109741211
    9. 'ex' → logprob: -5.099203109741211
    10. 'er' → logprob: -5.099203109741211

Token 112: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8840866088867188
    2. ' if' → logprob: -1.2590866088867188
    3. ')' → logprob: -1.5090866088867188
    4. 'if' → logprob: -3.2590866088867188
    5. ' ' → logprob: -4.009086608886719
    6. ' ,' → logprob: -5.259086608886719
    7. '   ' → logprob: -5.384086608886719
    8. '       ' → logprob: -5.884086608886719
    9. ',i' → logprob: -6.009086608886719
    10. ' )' → logprob: -6.634086608886719

Token 113: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5477396249771118
    2. 'for' (adapté à ' for') → logprob: -0.9227396249771118
    3. '       ' → logprob: -4.297739505767822
    4. ' if' → logprob: -5.797739505767822
    5. '   ' → logprob: -6.172739505767822
    6. 'if' → logprob: -6.422739505767822
    7. '<|end|>' → logprob: -6.547739505767822
    8. 'j' → logprob: -7.172739505767822
    9. '    ' → logprob: -7.422739505767822
    10. ' ' → logprob: -8.54773998260498

Token 115: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.12700548768043518
    2. 'j' → logprob: -2.1270055770874023
    3. ' ' → logprob: -10.877005577087402
    4. ' ' → logprob: -11.627005577087402
    5. '   ' → logprob: -11.689505577087402
    6. ' w' → logprob: -12.564505577087402
    7. '	j' → logprob: -12.627005577087402
    8. 'w' → logprob: -12.877005577087402
    9. '```' → logprob: -12.939505577087402
    10. '_j' → logprob: -13.127005577087402

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007736411411315203
    2. 'in' → logprob: -4.8827362060546875
    3. ' ' → logprob: -9.132736206054688
    4. '    ' → logprob: -12.132736206054688
    5. '<|end|>' → logprob: -12.132736206054688
    6. '   ' → logprob: -12.507736206054688
    7. ')' → logprob: -13.757736206054688
    8. ' (' → logprob: -13.882736206054688
    9. '	in' → logprob: -13.882736206054688
    10. '  ' → logprob: -13.882736206054688

Token 117: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20143409073352814
    2. 'range' → logprob: -1.7014341354370117
    3. '(range' → logprob: -10.826434135437012
    4. '	range' → logprob: -14.701434135437012
    5. ' xrange' → logprob: -15.201434135437012
    6. '_range' → logprob: -16.826433181762695
    7. ' ' → logprob: -16.951433181762695
    8. ' W' → logprob: -16.951433181762695
    9. 'Range' → logprob: -17.201433181762695
    10. '.range' → logprob: -17.451433181762695

Token 118: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.06354796141386032
    2. '(' → logprob: -2.9385478496551514
    3. ' (' → logprob: -4.8135480880737305
    4. '(range' → logprob: -8.43854808807373
    5. ' range' → logprob: -9.18854808807373
    6. ')' → logprob: -9.31354808807373
    7. 'range' → logprob: -10.06354808807373
    8. '(H' → logprob: -10.56354808807373
    9. ' W' → logprob: -11.56354808807373
    10. ',' → logprob: -12.56354808807373

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01692342199385166
    2. '):
' → logprob: -4.266923427581787
    3. ' ):' → logprob: -6.641923427581787
    4. ')' → logprob: -6.891923427581787
    5. ':' → logprob: -8.641922950744629
    6. '   ' → logprob: -9.391922950744629
    7. ' ):
' → logprob: -10.391922950744629
    8. ')]' → logprob: -10.641922950744629
    9. '):
' → logprob: -10.641922950744629
    10. '       ' → logprob: -10.891922950744629

Token 120: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5186934471130371
    2. '<|end|>' → logprob: -1.643693447113037
    3. ' if' → logprob: -2.268693447113037
    4. '           ' → logprob: -3.018693447113037
    5. ' ' → logprob: -3.393693447113037
    6. '        ' → logprob: -5.143693447113037
    7. ':' → logprob: -5.518693447113037
    8. 'if' → logprob: -5.518693447113037
    9. '<|end|>' → logprob: -5.893693447113037
    10. ',' → logprob: -6.018693447113037

Token 121: ' ind' (ID: 1383)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18437276780605316
    2. ' ' → logprob: -2.434372663497925
    3. '<|end|>' → logprob: -3.309372663497925
    4. '           ' → logprob: -4.309372901916504
    5. '               ' → logprob: -4.559372901916504
    6. 'if' → logprob: -4.559372901916504
    7. '       ' → logprob: -5.434372901916504
    8. '            ' → logprob: -6.559372901916504
    9. ' ind' → logprob: -6.684372901916504
    10. '    ' → logprob: -7.559372901916504

Token 122: ',' (ID: 11)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.19238653779029846
    2. ' +=' → logprob: -2.0673866271972656
    3. '=' → logprob: -3.0673866271972656
    4. '+' → logprob: -7.192386627197266
    5. ' =' → logprob: -7.817386627197266
    6. '<|end|>' → logprob: -8.442386627197266
    7. ',' → logprob: -9.067386627197266
    8. ')' → logprob: -9.192386627197266
    9. ']+=' → logprob: -9.692386627197266
    10. ' ' → logprob: -10.067386627197266

Token 123: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.45295384526252747
    2. 'ind' → logprob: -2.077953815460205
    3. ' mass' → logprob: -2.202953815460205
    4. ' values' → logprob: -2.702953815460205
    5. 'mass' → logprob: -3.577953815460205
    6. 'values' → logprob: -3.702953815460205
    7. ' int' → logprob: -6.202953815460205
    8. 'int' → logprob: -6.202953815460205
    9. ' j' → logprob: -6.327953815460205
    10. 'j' → logprob: -7.327953815460205

Token 124: '_row' (ID: 19157)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5793890357017517
    2. ' =' → logprob: -0.8293890357017517
    3. '<|end|>' → logprob: -6.4543890953063965
    4. ']' → logprob: -7.9543890953063965
    5. ',' → logprob: -7.9543890953063965
    6. '<|end|>' → logprob: -8.329388618469238
    7. '[' → logprob: -8.829388618469238
    8. ' +=' → logprob: -9.204388618469238
    9. ']=' → logprob: -9.329388618469238
    10. '+=' → logprob: -9.329388618469238

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.632542913896032e-05
    2. '[' → logprob: -10.500046730041504
    3. '[j' → logprob: -11.500046730041504
    4. '[I' → logprob: -12.250046730041504
    5. 'i' → logprob: -13.875046730041504
    6. '[
' → logprob: -14.000046730041504
    7. ' [' → logprob: -14.750046730041504
    8. '[ind' → logprob: -14.750046730041504
    9. '```' → logprob: -15.000046730041504
    10. ']' → logprob: -15.750046730041504

Token 126: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0027004971634596586
    2. ']' → logprob: -6.252700328826904
    3. '[j' → logprob: -7.252700328826904
    4. ' ][' → logprob: -10.127700805664062
    5. '[' → logprob: -12.002700805664062
    6. ',j' → logprob: -12.252700805664062
    7. '[i' → logprob: -12.627700805664062
    8. 'j' → logprob: -13.252700805664062
    9. '"][' → logprob: -13.502700805664062
    10. ']][' → logprob: -13.627700805664062

Token 127: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.537868779967539e-06
    2. ']' → logprob: -12.125008583068848
    3. ' j' → logprob: -13.125008583068848
    4. '[j' → logprob: -14.125008583068848
    5. '	j' → logprob: -16.12500762939453
    6. '_j' → logprob: -16.87500762939453
    7. ' ' → logprob: -17.37500762939453
    8. '   ' → logprob: -17.87500762939453
    9. '[' → logprob: -18.00000762939453
    10. '][' → logprob: -18.00000762939453

Token 128: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006498866132460535
    2. ']=' → logprob: -7.750649929046631
    3. ' ]' → logprob: -8.625649452209473
    4. ')' → logprob: -10.750649452209473
    5. '=' → logprob: -11.625649452209473
    6. ')]' → logprob: -12.000649452209473
    7. ' =' → logprob: -13.875649452209473
    8. '[' → logprob: -15.000649452209473
    9. ']+=' → logprob: -15.000649452209473
    10. ']]' → logprob: -15.750649452209473

Token 129: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.43172138929367065
    2. ' values' → logprob: -1.0567214488983154
    3. ' =' → logprob: -7.056721210479736
    4. 'ind' → logprob: -7.181721210479736
    5. '_' → logprob: -7.556721210479736
    6. ' ind' → logprob: -8.931721687316895
    7. '=' → logprob: -8.931721687316895
    8. '_values' → logprob: -8.931721687316895
    9. ' _' → logprob: -9.306721687316895
    10. 'value' → logprob: -9.556721687316895

Token 130: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.016810661181807518
    2. 'row' → logprob: -5.141810894012451
    3. '[' → logprob: -5.266810894012451
    4. '[i' → logprob: -6.141810894012451
    5. '_' → logprob: -6.891810894012451
    6. '[row' → logprob: -7.266810894012451
    7. '<|end|>' → logprob: -7.266810894012451
    8. '[j' → logprob: -8.766810417175293
    9. '_rows' → logprob: -8.766810417175293
    10. '<|end|>' → logprob: -8.891810417175293

Token 131: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6890202760696411
    2. '[i' → logprob: -0.8140202760696411
    3. '[ind' → logprob: -3.4390201568603516
    4. '[j' → logprob: -4.564020156860352
    5. '<|end|>' → logprob: -5.564020156860352
    6. '[m' → logprob: -6.439020156860352
    7. '[
' → logprob: -6.564020156860352
    8. '[(' → logprob: -6.564020156860352
    9. ']' → logprob: -7.689020156860352
    10. '['' → logprob: -7.939020156860352

Token 132: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -1.3481743335723877
    2. 'ind' → logprob: -1.7231743335723877
    3. ' ind' → logprob: -1.8481743335723877
    4. 'process' → logprob: -1.9731743335723877
    5. 'increment' → logprob: -2.0981743335723877
    6. ' update' → logprob: -3.4731743335723877
    7. ' increment' → logprob: -3.7231743335723877
    8. 'update' → logprob: -3.8481743335723877
    9. '(ind' → logprob: -4.598174095153809
    10. 'check' → logprob: -4.973174095153809

Token 133: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.10906577110290527
    2. '_mass' → logprob: -3.1090657711029053
    3. '_' → logprob: -3.8590657711029053
    4. '_cell' → logprob: -4.859066009521484
    5. '_token' → logprob: -5.484066009521484
    6. '(i' → logprob: -5.484066009521484
    7. '_ind' → logprob: -5.859066009521484
    8. '(row' → logprob: -6.109066009521484
    9. '_value' → logprob: -6.109066009521484
    10. '(' → logprob: -6.484066009521484

Token 134: '_cell' (ID: 39197)
  Prédit: '_ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -1.3837743997573853
    2. '_indicator' → logprob: -1.6337743997573853
    3. '(m' → logprob: -1.8837743997573853
    4. '(' → logprob: -2.2587742805480957
    5. '(i' → logprob: -2.3837742805480957
    6. '_mass' → logprob: -2.6337742805480957
    7. '_cell' → logprob: -3.2587742805480957
    8. '_' → logprob: -3.6337742805480957
    9. '(ind' → logprob: -4.383774280548096
    10. '_line' → logprob: -4.758774280548096

Token 135: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.043449223041534424
    2. '(' → logprob: -3.1684491634368896
    3. '(i' → logprob: -8.418449401855469
    4. ' (' → logprob: -9.168449401855469
    5. '(ind' → logprob: -9.168449401855469
    6. '(
' → logprob: -11.793449401855469
    7. '(line' → logprob: -12.918449401855469
    8. '(j' → logprob: -13.293449401855469
    9. '(

' → logprob: -13.668449401855469
    10. '((' → logprob: -14.043449401855469

Token 136: 'ass' (ID: 456)
  Prédit: 'ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.045018069446086884
    2. '[i' → logprob: -3.920017957687378
    3. 'i' → logprob: -5.045018196105957
    4. '[j' → logprob: -5.045018196105957
    5. 'j' → logprob: -5.545018196105957
    6. ']' → logprob: -6.420018196105957
    7. ')' → logprob: -6.795018196105957
    8. 'a' → logprob: -6.920018196105957
    9. '(i' → logprob: -6.920018196105957
    10. '[' → logprob: -7.170018196105957

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13127560913562775
    2. '[i' → logprob: -2.1312756538391113
    3. ',i' → logprob: -5.506275653839111
    4. ' ,' → logprob: -8.631275177001953
    5. '[' → logprob: -10.256275177001953
    6. '   ' → logprob: -11.131275177001953
    7. ')' → logprob: -11.756275177001953
    8. ' ' → logprob: -11.881275177001953
    9. '```' → logprob: -12.131275177001953
    10. '[j' → logprob: -12.381275177001953

Token 138: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5283567309379578
    2. ' i' → logprob: -0.9033567309379578
    3. ' H' → logprob: -6.153356552124023
    4. 'H' → logprob: -6.403356552124023
    5. ' ind' → logprob: -7.528356552124023
    6. 'ind' → logprob: -7.653356552124023
    7. 'j' → logprob: -9.153356552124023
    8. ')' → logprob: -9.403356552124023
    9. ' j' → logprob: -10.153356552124023
    10. '   ' → logprob: -10.153356552124023

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18329501152038574
    2. ',j' → logprob: -1.8082950115203857
    3. ' ,' → logprob: -5.683295249938965
    4. 'j' → logprob: -9.683295249938965
    5. ')' → logprob: -10.683295249938965
    6. ' ' → logprob: -11.183295249938965
    7. '<|end|>' → logprob: -11.433295249938965
    8. '[j' → logprob: -11.683295249938965
    9. ' j' → logprob: -11.683295249938965
    10. '   ' → logprob: -12.433295249938965

Token 140: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0024763736873865128
    2. ' j' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.877476692199707
    4. '	j' → logprob: -16.12747573852539
    5. '[j' → logprob: -16.12747573852539
    6. '<|end|>' → logprob: -16.25247573852539
    7. 'w' → logprob: -16.50247573852539
    8. ' ' → logprob: -16.62747573852539
    9. ',j' → logprob: -16.62747573852539
    10. ')' → logprob: -17.12747573852539

Token 141: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31349462270736694
    2. ',' → logprob: -1.3134946823120117
    3. '   ' → logprob: -9.938494682312012
    4. ' ,' → logprob: -9.938494682312012
    5. ' )' → logprob: -10.563494682312012
    6. ',)' → logprob: -10.813494682312012
    7. '<|end|>' → logprob: -11.063494682312012
    8. ')]' → logprob: -11.188494682312012
    9. '       ' → logprob: -11.938494682312012
    10. ')
' → logprob: -12.063494682312012

Token 142: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.2173754870891571
    2. 'ind' → logprob: -1.8423755168914795
    3. ' values' → logprob: -3.4673755168914795
    4. 'values' → logprob: -5.3423752784729
    5. ' H' → logprob: -8.342375755310059
    6. ' W' → logprob: -8.592375755310059
    7. 'H' → logprob: -8.967375755310059
    8. 'W' → logprob: -9.217375755310059
    9. ' ' → logprob: -9.592375755310059
    10. ')' → logprob: -9.592375755310059

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11335483938455582
    2. ')' → logprob: -2.2383549213409424
    3. ' ,' → logprob: -7.988354682922363
    4. ',)' → logprob: -9.863354682922363
    5. '<|end|>' → logprob: -9.863354682922363
    6. '   ' → logprob: -10.363354682922363
    7. ' )' → logprob: -10.613354682922363
    8. '),' → logprob: -12.238354682922363
    9. ',
' → logprob: -12.738354682922363
    10. '       ' → logprob: -12.738354682922363

Token 144: ' ind' (ID: 1383)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.6524673700332642
    2. ' values' → logprob: -1.0274673700332642
    3. 'ind' → logprob: -2.5274672508239746
    4. ' ind' → logprob: -3.2774672508239746
    5. 'W' → logprob: -6.277467250823975
    6. ' W' → logprob: -7.152467250823975
    7. ')' → logprob: -7.402467250823975
    8. '	values' → logprob: -9.277467727661133
    9. ' ' → logprob: -9.402467727661133
    10. '   ' → logprob: -10.089967727661133

Token 145: '_row' (ID: 19157)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6279624104499817
    2. ')' → logprob: -1.252962350845337
    3. '_row' → logprob: -1.752962350845337
    4. 'row' → logprob: -6.377962589263916
    5. ',row' → logprob: -6.377962589263916
    6. '),' → logprob: -7.002962589263916
    7. 'values' → logprob: -7.502962589263916
    8. '_,' → logprob: -7.877962589263916
    9. '   ' → logprob: -8.377962112426758
    10. '))' → logprob: -8.627962112426758

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018613664724398404
    2. ')' → logprob: -9.0001859664917
    3. 'values' → logprob: -10.5001859664917
    4. ' ,' → logprob: -10.7501859664917
    5. '[' → logprob: -12.1251859664917
    6. '[i' → logprob: -12.3751859664917
    7. '.values' → logprob: -14.0001859664917
    8. ' values' → logprob: -14.0001859664917
    9. '),' → logprob: -14.3751859664917
    10. '   ' → logprob: -15.1251859664917

Token 147: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.2521534860134125
    2. ' values' → logprob: -1.5021535158157349
    3. 'W' → logprob: -9.752153396606445
    4. ')' → logprob: -10.252153396606445
    5. '   ' → logprob: -10.502153396606445
    6. '	values' → logprob: -10.627153396606445
    7. ' ' → logprob: -10.752153396606445
    8. 'H' → logprob: -11.752153396606445
    9. ' W' → logprob: -11.877153396606445
    10. '(values' → logprob: -12.002153396606445

Token 148: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.009504844434559345
    2. ')' → logprob: -4.759504795074463
    3. ')_' → logprob: -8.009505271911621
    4. '_' → logprob: -8.509505271911621
    5. '_)' → logprob: -9.134505271911621
    6. '_rows' → logprob: -9.134505271911621
    7. ',' → logprob: -10.009505271911621
    8. 'row' → logprob: -10.884505271911621
    9. '_Row' → logprob: -10.884505271911621
    10. '_,' → logprob: -11.384505271911621

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018387178715784103
    2. ')
' → logprob: -8.750184059143066
    3. ' )' → logprob: -11.250184059143066
    4. '   ' → logprob: -12.500184059143066
    5. '       ' → logprob: -13.125184059143066
    6. '           ' → logprob: -13.375184059143066
    7. ')

' → logprob: -13.500184059143066
    8. '))' → logprob: -13.625184059143066
    9. ',' → logprob: -14.125184059143066
    10. ' ' → logprob: -14.625184059143066

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19747254252433777
    2. '<|end|>' → logprob: -1.8224725723266602
    3. '
' → logprob: -5.07247257232666
    4. 'return' → logprob: -5.44747257232666
    5. ')' → logprob: -5.82247257232666
    6. ' return' → logprob: -6.82247257232666
    7. ' ' → logprob: -7.19747257232666
    8. '       ' → logprob: -7.57247257232666
    9. '<|end|>' → logprob: -7.82247257232666
    10. '	return' → logprob: -7.82247257232666

Token 151: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6422941088676453
    2. '<|end|>' → logprob: -1.26729416847229
    3. 'return' (adapté à ' return') → logprob: -2.01729416847229
    4. '
' → logprob: -3.26729416847229
    5. ')' → logprob: -4.517293930053711
    6. ' return' → logprob: -5.642293930053711
    7. 'def' → logprob: -6.267293930053711
    8. ' ' → logprob: -6.267293930053711
    9. '	return' → logprob: -7.267293930053711
    10. '       ' → logprob: -7.642293930053711

Token 152: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.010005856864154339
    2. ' ind' → logprob: -5.010005950927734
    3. 'values' → logprob: -5.760005950927734
    4. '(ind' → logprob: -9.385005950927734
    5. ' values' → logprob: -10.135005950927734
    6. '[ind' → logprob: -12.885005950927734
    7. 'indent' → logprob: -13.135005950927734
    8. 'indices' → logprob: -13.135005950927734
    9. 'inds' → logprob: -14.135005950927734
    10. '(values' → logprob: -14.135005950927734

Token 153: '_row' (ID: 19157)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.0430179201066494
    2. 'values' → logprob: -3.168017864227295
    3. '(values' → logprob: -11.668018341064453
    4. '_values' → logprob: -13.043018341064453
    5. '	values' → logprob: -13.043018341064453
    6. '.values' → logprob: -13.418018341064453
    7. ' ' → logprob: -13.668018341064453
    8. ' ' → logprob: -13.918018341064453
    9. '<|end|>' → logprob: -14.918018341064453
    10. ' ind' → logprob: -15.043018341064453

Token 156: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -6.825890159234405e-05
    2. '_' → logprob: -10.375068664550781
    3. '_rows' → logprob: -10.625068664550781
    4. 'row' → logprob: -12.625068664550781
    5. 's' → logprob: -12.625068664550781
    6. '_values' → logprob: -13.250068664550781
    7. '_Row' → logprob: -13.375068664550781
    8. '_ROW' → logprob: -14.000068664550781
    9. ' _' → logprob: -15.125068664550781
    10. '_cell' → logprob: -15.750068664550781

Token 157: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' increment' (ID: 24032)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.007859412580728531
    2. 'process' → logprob: -4.882859230041504
    3. ' increment' → logprob: -8.882859230041504
    4. ' read' → logprob: -10.257859230041504
    5. ' create' → logprob: -10.257859230041504
    6. 'increment' → logprob: -10.507859230041504
    7. '_' → logprob: -12.257859230041504
    8. '_process' → logprob: -12.507859230041504
    9. ' ' → logprob: -13.632859230041504
    10. '	process' → logprob: -13.757859230041504

Token 160: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.0001769616355886683
    2. '_' → logprob: -8.875177383422852
    3. '_inds' → logprob: -11.500177383422852
    4. '_indent' → logprob: -11.750177383422852
    5. '_in' → logprob: -12.375177383422852
    6. '(ind' → logprob: -12.500177383422852
    7. '_def' → logprob: -12.875177383422852
    8. '_int' → logprob: -13.125177383422852
    9. '(' → logprob: -13.875177383422852
    10. '_indices' → logprob: -14.000177383422852

Token 161: '(ind' (ID: 50964)
  Prédit: '(ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -0.1606372743844986
    2. '(' → logprob: -1.9106372594833374
    3. '(i' → logprob: -8.410636901855469
    4. '(index' → logprob: -9.785636901855469
    5. '():' → logprob: -10.035636901855469
    6. ' (' → logprob: -10.535636901855469
    7. '(in' → logprob: -10.785636901855469
    8. '(indent' → logprob: -10.910636901855469
    9. '(:' → logprob: -12.035636901855469
    10. '(
' → logprob: -12.660636901855469

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003250438952818513
    2. '):
' → logprob: -5.753250598907471
    3. ' ):' → logprob: -10.378250122070312
    4. ')' → logprob: -10.878250122070312
    5. ':' → logprob: -11.003250122070312
    6. '+' → logprob: -12.378250122070312
    7. '   ' → logprob: -14.378250122070312
    8. '):
' → logprob: -14.503250122070312
    9. '):

' → logprob: -15.378250122070312
    10. '=' → logprob: -16.003250122070312

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19390887022018433
    2. ' return' → logprob: -1.943908929824829
    3. 'return' → logprob: -3.443908929824829
    4. ' ind' → logprob: -6.81890869140625
    5. 'ind' → logprob: -9.94390869140625
    6. '    
' → logprob: -10.81890869140625
    7. '```' → logprob: -11.31890869140625
    8. '    ' → logprob: -11.81890869140625
    9. ' 
' → logprob: -13.44390869140625
    10. '	return' → logprob: -14.44390869140625

Token 164: ' return' (ID: 622)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.04580679535865784
    2. 'return' (adapté à ' return') → logprob: -3.295806884765625
    3. ' ind' → logprob: -5.295806884765625
    4. ' return' → logprob: -5.920806884765625
    5. '   ' → logprob: -10.170806884765625
    6. '(ind' → logprob: -14.170806884765625
    7. '1' → logprob: -15.795806884765625
    8. 'indent' → logprob: -16.045806884765625
    9. '[ind' → logprob: -16.170806884765625
    10. '```' → logprob: -16.295806884765625

Token 165: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.12692958116531372
    2. ' ind' → logprob: -2.126929521560669
    3. '(ind' → logprob: -13.62692928314209
    4. '   ' → logprob: -16.751930236816406
    5. '[ind' → logprob: -16.751930236816406
    6. '1' → logprob: -17.001930236816406
    7. 'indent' → logprob: -17.251930236816406
    8. '_ind' → logprob: -17.376930236816406
    9. '.ind' → logprob: -18.501930236816406
    10. ' ' → logprob: -18.626930236816406

Token 166: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693031132221222
    2. ' +' → logprob: -2.1269302368164062
    3. ' ' → logprob: -14.001930236816406
    4. ' +
' → logprob: -14.876930236816406
    5. '+
' → logprob: -15.126930236816406
    6. ' plus' → logprob: -15.126930236816406
    7. '<|end|>' → logprob: -15.251930236816406
    8. '+=' → logprob: -16.501930236816406
    9. '+++' → logprob: -16.751930236816406
    10. ' +=' → logprob: -17.001930236816406

Token 167: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.694766489090398e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.000066757202148
    4. '  ' → logprob: -18.62506675720215
    5. '```' → logprob: -18.62506675720215
    6. '2' → logprob: -19.12506675720215
    7. '[' → logprob: -19.37506675720215
    8. '100' → logprob: -19.87506675720215
    9. '0' → logprob: -19.93756675720215
    10. '<|end|>' → logprob: -20.18756675720215

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.625024795532227
    4. '0' → logprob: -16.500024795532227
    5. '2' → logprob: -16.750024795532227
    6. 'int' → logprob: -17.750024795532227
    7. '100' → logprob: -17.937524795532227
    8. '  ' → logprob: -18.000024795532227
    9. '
' → logprob: -18.125024795532227
    10. '```' → logprob: -18.812524795532227

Token 169: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04306747019290924
    2. '<|end|>' → logprob: -3.418067455291748
    3. '
' → logprob: -5.293067455291748
    4. '

' → logprob: -6.043067455291748
    5. ' def' → logprob: -6.793067455291748
    6. '<|end|>' → logprob: -7.918067455291748
    7. '\' → logprob: -8.793067932128906
    8. '```' → logprob: -9.543067932128906
    9. '#' → logprob: -9.793067932128906
    10. '[' → logprob: -10.043067932128906

Token 170: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08187976479530334
    2. '<|end|>' → logprob: -2.5818798542022705
    3. '<|end|>' → logprob: -6.956879615783691
    4. '
' → logprob: -6.956879615783691
    5. ' def' → logprob: -7.331879615783691
    6. '```' → logprob: -8.956879615783691
    7. '\' → logprob: -9.706879615783691
    8. '#' → logprob: -9.706879615783691
    9. '[' → logprob: -9.956879615783691
    10. ')' → logprob: -10.331879615783691

Token 171: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.048965439200401306
    2. 'process' → logprob: -3.0489654541015625
    3. ' def' → logprob: -9.173965454101562
    4. ' increment' → logprob: -9.298965454101562
    5. 'increment' → logprob: -9.673965454101562
    6. 'def' → logprob: -10.548965454101562
    7. ' read' → logprob: -10.548965454101562
    8. ' create' → logprob: -10.923965454101562
    9. '	process' → logprob: -11.548965454101562
    10. ' write' → logprob: -12.048965454101562

Token 172: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.024332860484719276
    2. '_' → logprob: -3.7743327617645264
    3. '_cell' → logprob: -7.1493330001831055
    4. ' _' → logprob: -9.024333000183105
    5. '_line' → logprob: -9.649333000183105
    6. '_user' → logprob: -11.149333000183105
    7. '_Row' → logprob: -11.399333000183105
    8. '_s' → logprob: -11.649333000183105
    9. '_rows' → logprob: -11.649333000183105
    10. '_process' → logprob: -11.899333000183105

Token 173: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.0013732073130086064
    2. '_' → logprob: -6.626373291015625
    3. '_cells' → logprob: -10.626373291015625
    4. '_Cell' → logprob: -11.626373291015625
    5. '_c' → logprob: -12.751373291015625
    6. '_token' → logprob: -12.876373291015625
    7. ' _' → logprob: -13.251373291015625
    8. '_CELL' → logprob: -13.376373291015625
    9. '<Cell' → logprob: -14.251373291015625
    10. '(' → logprob: -14.251373291015625

Token 174: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.003178782993927598
    2. '(' → logprob: -5.753178596496582
    3. '(
' → logprob: -14.628178596496582
    4. ' (' → logprob: -15.628178596496582
    5. '(

' → logprob: -16.2531795501709
    6. '(ma' → logprob: -16.2531795501709
    7. '(mask' → logprob: -16.6281795501709
    8. '(M' → logprob: -17.3781795501709
    9. '(user' → logprob: -17.5031795501709
    10. '(s' → logprob: -18.0031795501709

Token 175: 'ass' (ID: 456)
  Prédit: 'ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.023418543860316277
    2. 'a' → logprob: -3.773418426513672
    3. '(' → logprob: -9.898418426513672
    4. '(a' → logprob: -10.023418426513672
    5. 'as' → logprob: -10.523418426513672
    6. ')' → logprob: -11.773418426513672
    7. 'асс' → logprob: -12.148418426513672
    8. '_' → logprob: -12.523418426513672
    9. '_a' → logprob: -12.648418426513672
    10. '   ' → logprob: -12.648418426513672

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.386147626675665e-05
    2. ' ,' → logprob: -9.875073432922363
    3. ',i' → logprob: -11.000073432922363
    4. '   ' → logprob: -12.750073432922363
    5. '[i' → logprob: -14.125073432922363
    6. '[' → logprob: -14.375073432922363
    7. ',m' → logprob: -14.875073432922363
    8. ')' → logprob: -15.000073432922363
    9. ',
' → logprob: -16.37507438659668
    10. ',int' → logprob: -16.37507438659668

Token 177: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6326270699501038
    2. ' i' → logprob: -0.7576270699501038
    3. 'row' → logprob: -11.882627487182617
    4. ' ' → logprob: -12.007627487182617
    5. '   ' → logprob: -12.507627487182617
    6. ' row' → logprob: -12.632627487182617
    7. ')' → logprob: -12.882627487182617
    8. '	i' → logprob: -14.132627487182617
    9. '  ' → logprob: -14.257627487182617
    10. '    ' → logprob: -14.382627487182617

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000182921823579818
    2. ',j' → logprob: -9.00018310546875
    3. ' ,' → logprob: -9.75018310546875
    4. '   ' → logprob: -15.00018310546875
    5. '‌,' → logprob: -15.37518310546875
    6. ' ' → logprob: -16.00018310546875
    7. '<|end|>' → logprob: -16.12518310546875
    8. ',i' → logprob: -16.62518310546875
    9. '[' → logprob: -17.00018310546875
    10. ')' → logprob: -17.12518310546875

Token 179: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002476135268807411
    2. ' j' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.75247573852539
    4. ' ' → logprob: -16.00247573852539
    5. '	j' → logprob: -16.37747573852539
    6. '<|end|>' → logprob: -16.87747573852539
    7. '  ' → logprob: -18.00247573852539
    8. 'i' → logprob: -18.25247573852539
    9. ',j' → logprob: -18.25247573852539
    10. 'J' → logprob: -18.25247573852539

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.469590491382405e-05
    2. ' ,' → logprob: -9.62507438659668
    3. '   ' → logprob: -12.50007438659668
    4. '):' → logprob: -12.87507438659668
    5. ',
' → logprob: -13.37507438659668
    6. '‌,' → logprob: -15.75007438659668
    7. ' ' → logprob: -16.25007438659668
    8. '_,' → logprob: -16.62507438659668
    9. '  ' → logprob: -16.87507438659668
    10. ',

' → logprob: -17.37507438659668

Token 181: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.3868848979473114
    2. ' ind' → logprob: -1.1368849277496338
    3. '[ind' → logprob: -12.011884689331055
    4. '(ind' → logprob: -13.011884689331055
    5. 'indt' → logprob: -14.011884689331055
    6. ' ' → logprob: -14.136884689331055
    7. '   ' → logprob: -14.386884689331055
    8. ')' → logprob: -14.386884689331055
    9. '_ind' → logprob: -14.386884689331055
    10. 'indent' → logprob: -15.011884689331055

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003559615579433739
    2. '):' → logprob: -8.12535572052002
    3. ' ,' → logprob: -10.12535572052002
    4. '   ' → logprob: -11.37535572052002
    5. ',
' → logprob: -13.12535572052002
    6. '‌,' → logprob: -13.62535572052002
    7. ')' → logprob: -13.75035572052002
    8. '):
' → logprob: -14.62535572052002
    9. '_,' → logprob: -14.62535572052002
    10. ',m' → logprob: -14.75035572052002

Token 183: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.38687369227409363
    2. ' ind' → logprob: -1.136873722076416
    3. ' ' → logprob: -14.261873245239258
    4. '[ind' → logprob: -14.386873245239258
    5. '   ' → logprob: -14.886873245239258
    6. 'indent' → logprob: -15.261873245239258
    7. '_ind' → logprob: -15.511873245239258
    8. '(ind' → logprob: -15.761873245239258
    9. ')' → logprob: -16.261873245239258
    10. '    ' → logprob: -16.386873245239258

Token 184: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.000972325331531465
    2. ',' → logprob: -7.125972270965576
    3. '_,' → logprob: -9.625972747802734
    4. ',_' → logprob: -10.125972747802734
    5. ',row' → logprob: -10.750972747802734
    6. '_rows' → logprob: -11.375972747802734
    7. 'row' → logprob: -11.500972747802734
    8. '_' → logprob: -11.625972747802734
    9. '_Row' → logprob: -12.750972747802734
    10. ' _' → logprob: -13.250972747802734

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001955537445610389
    2. ' ,' → logprob: -8.625195503234863
    3. '   ' → logprob: -11.500195503234863
    4. ',j' → logprob: -13.875195503234863
    5. '‌,' → logprob: -14.250195503234863
    6. ',i' → logprob: -14.250195503234863
    7. ',
' → logprob: -14.250195503234863
    8. '):' → logprob: -14.375195503234863
    9. '_,' → logprob: -14.500195503234863
    10. ',m' → logprob: -15.000195503234863

Token 186: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.3132668435573578
    2. ' values' → logprob: -1.3132668733596802
    3. '	values' → logprob: -13.18826675415039
    4. ' ' → logprob: -14.18826675415039
    5. '.values' → logprob: -14.56326675415039
    6. '   ' → logprob: -14.56326675415039
    7. '_values' → logprob: -14.81326675415039
    8. 'mass' → logprob: -14.93826675415039
    9. 'value' → logprob: -15.06326675415039
    10. ' mass' → logprob: -15.43826675415039

Token 187: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.033548418432474136
    2. ',' → logprob: -3.533548355102539
    3. '_,' → logprob: -6.658548355102539
    4. ',row' → logprob: -6.658548355102539
    5. ',_' → logprob: -7.158548355102539
    6. '_' → logprob: -8.283548355102539
    7. '_Row' → logprob: -10.033548355102539
    8. '):' → logprob: -10.033548355102539
    9. ' ,' → logprob: -10.533548355102539
    10. '_ROW' → logprob: -10.658548355102539

Token 188: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.339776832144707e-05
    2. ',' → logprob: -10.250082969665527
    3. '):
' → logprob: -10.500082969665527
    4. ')' → logprob: -11.000082969665527
    5. '   ' → logprob: -13.250082969665527
    6. ':' → logprob: -13.875082969665527
    7. ' ):' → logprob: -14.375082969665527
    8. '):

' → logprob: -16.125083923339844
    9. '):
' → logprob: -16.625083923339844
    10. '*' → logprob: -16.875083923339844

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12151006609201431
    2. ' if' → logprob: -2.8715100288391113
    3. ' ' → logprob: -3.6215100288391113
    4. '<|end|>' → logprob: -4.246510028839111
    5. ':' → logprob: -5.121510028839111
    6. ',' → logprob: -5.871510028839111
    7. '    ' → logprob: -6.496510028839111
    8. '    
' → logprob: -6.621510028839111
    9. 'if' → logprob: -6.871510028839111
    10. ' 
' → logprob: -7.121510028839111

Token 190: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3011512756347656
    2. '   ' → logprob: -2.0511512756347656
    3. ' ' → logprob: -2.6761512756347656
    4. 'if' (adapté à ' if') → logprob: -3.3011512756347656
    5. '    ' → logprob: -4.926151275634766
    6. ' cell' → logprob: -5.176151275634766
    7. 'token' → logprob: -5.801151275634766
    8. ' token' → logprob: -5.926151275634766
    9. ' 
' → logprob: -6.051151275634766
    10. '       ' → logprob: -7.051151275634766

Token 191: ' is' (ID: 382)
  Prédit: ' mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mass' → logprob: -0.0017201616428792477
    2. 'mass' → logprob: -6.376719951629639
    3. ' j' → logprob: -12.001720428466797
    4. ' ind' → logprob: -12.251720428466797
    5. ' ' → logprob: -13.001720428466797
    6. 'j' → logprob: -13.126720428466797
    7. ' ' → logprob: -14.376720428466797
    8. ' (' → logprob: -14.376720428466797
    9. ' not' → logprob: -14.376720428466797
    10. ' masses' → logprob: -15.376720428466797

Token 192: '_black' (ID: 92024)
  Prédit: ' mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mass' → logprob: -1.1466996669769287
    2. '_mass' → logprob: -1.5216996669769287
    3. 'mass' → logprob: -2.0216996669769287
    4. '_' → logprob: -2.5216996669769287
    5. '_row' → logprob: -3.0216996669769287
    6. '_valid' → logprob: -3.3966996669769287
    7. '_cell' → logprob: -3.5216996669769287
    8. '_white' → logprob: -3.6466996669769287
    9. '_space' → logprob: -4.146699905395508
    10. '_block' → logprob: -4.396699905395508

Token 193: '_cell' (ID: 39197)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0442664660513401
    2. '[' → logprob: -3.91926646232605
    3. '[m' → logprob: -4.294266700744629
    4. 'mass' → logprob: -5.919266700744629
    5. '_' → logprob: -6.044266700744629
    6. '(' → logprob: -6.544266700744629
    7. '_mass' → logprob: -6.669266700744629
    8. '   ' → logprob: -8.294266700744629
    9. '```' → logprob: -8.419266700744629
    10. '_cell' → logprob: -8.544266700744629

Token 194: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.010786762461066246
    2. '(' → logprob: -5.010786533355713
    3. ' (' → logprob: -5.510786533355713
    4. ' ' → logprob: -12.135787010192871
    5. '   ' → logprob: -12.635787010192871
    6. '(
' → logprob: -12.885787010192871
    7. ',' → logprob: -13.260787010192871
    8. ')' → logprob: -13.510787010192871
    9. '  ' → logprob: -13.635787010192871
    10. '<|end|>' → logprob: -13.885787010192871

Token 195: 'ass' (ID: 456)
  Prédit: 'ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.00012606535165105015
    2. 'mass' → logprob: -9.500125885009766
    3. ' ass' → logprob: -10.625125885009766
    4. ' mass' → logprob: -11.125125885009766
    5. '   ' → logprob: -12.250125885009766
    6. '[' → logprob: -13.875125885009766
    7. ')' → logprob: -14.250125885009766
    8. 'a' → logprob: -14.625125885009766
    9. 'асс' → logprob: -14.750125885009766
    10. ',' → logprob: -14.875125885009766

Token 196: '[i' (ID: 1768)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01656845584511757
    2. '[i' → logprob: -4.641568660736084
    3. ',i' → logprob: -5.266568660736084
    4. ' ,' → logprob: -6.641568660736084
    5. '   ' → logprob: -8.766568183898926
    6. '[' → logprob: -9.766568183898926
    7. ')' → logprob: -10.516568183898926
    8. ' ' → logprob: -11.266568183898926
    9. '(i' → logprob: -11.891568183898926
    10. ',j' → logprob: -11.891568183898926

Token 197: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0288674496114254
    2. ',' → logprob: -3.903867483139038
    3. '],' → logprob: -5.028867244720459
    4. ',j' → logprob: -6.903867244720459
    5. '[j' → logprob: -7.903867244720459
    6. ']' → logprob: -8.903867721557617
    7. ' ,' → logprob: -10.153867721557617
    8. '],[' → logprob: -10.153867721557617
    9. ' ][' → logprob: -10.278867721557617
    10. '   ' → logprob: -10.528867721557617

Token 198: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.620622712536715e-05
    2. ' j' → logprob: -10.000045776367188
    3. '	j' → logprob: -16.000045776367188
    4. ',j' → logprob: -16.000045776367188
    5. '[j' → logprob: -16.125045776367188
    6. '_j' → logprob: -16.375045776367188
    7. '```' → logprob: -16.500045776367188
    8. ']' → logprob: -16.625045776367188
    9. '   ' → logprob: -16.750045776367188
    10. ' ' → logprob: -17.000045776367188

Token 199: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5233117341995239
    2. '):
' → logprob: -1.023311734199524
    3. ')' → logprob: -3.3983116149902344
    4. ']):' → logprob: -5.023311614990234
    5. ']):
' → logprob: -6.023311614990234
    6. ',' → logprob: -6.273311614990234
    7. ' ):' → logprob: -6.898311614990234
    8. '   ' → logprob: -7.523311614990234
    9. ''):' → logprob: -8.148311614990234
    10. ' ):
' → logprob: -8.148311614990234

Token 200: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45757049322128296
    2. '       ' → logprob: -1.0825705528259277
    3. ' :' → logprob: -3.9575705528259277
    4. ':
' → logprob: -5.707570552825928
    5. ',' → logprob: -6.457570552825928
    6. '   ' → logprob: -6.832570552825928
    7. ' and' → logprob: -7.457570552825928
    8. 'ind' → logprob: -7.582570552825928
    9. '):' → logprob: -7.582570552825928
    10. ' :
' → logprob: -7.707570552825928

Token 201: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.4973430037498474
    2. 'ind' (adapté à ' ind') → logprob: -1.3723430633544922
    3. ' return' → logprob: -2.997343063354492
    4. ' if' → logprob: -3.372343063354492
    5. ' values' → logprob: -3.747343063354492
    6. 'return' → logprob: -4.497343063354492
    7. '   ' → logprob: -5.247343063354492
    8. 'if' → logprob: -5.622343063354492
    9. '       ' → logprob: -5.747343063354492
    10. 'values' → logprob: -5.872343063354492

Token 202: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11902729421854019
    2. '+=' → logprob: -2.8690273761749268
    3. ',' → logprob: -3.7440273761749268
    4. ' =' → logprob: -4.119027137756348
    5. '=' → logprob: -4.244027137756348
    6. ' ,' → logprob: -7.369027137756348
    7. '+' → logprob: -7.994027137756348
    8. ' +' → logprob: -9.119027137756348
    9. ' ' → logprob: -9.869027137756348
    10. ')' → logprob: -11.369027137756348

Token 203: ' increment' (ID: 24032)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.06263647973537445
    2. ' ind' → logprob: -2.812636375427246
    3. '0' → logprob: -8.187636375427246
    4. 'increment' → logprob: -8.187636375427246
    5. ' ' → logprob: -10.062636375427246
    6. '1' → logprob: -10.312636375427246
    7. ' increment' → logprob: -11.187636375427246
    8. 'j' → logprob: -12.312636375427246
    9. '   ' → logprob: -12.812636375427246
    10. ' j' → logprob: -13.187636375427246

Token 204: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.08960603922605515
    2. 'ind' → logprob: -2.4646060466766357
    3. '(ind' → logprob: -7.464605808258057
    4. ' ind' → logprob: -10.214606285095215
    5. ' _' → logprob: -10.839606285095215
    6. '_' → logprob: -10.964606285095215
    7. '(' → logprob: -12.089606285095215
    8. '(_' → logprob: -12.464606285095215
    9. ' ' → logprob: -13.214606285095215
    10. ' (' → logprob: -13.339606285095215

Token 205: '(ind' (ID: 50964)
  Prédit: '(ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -0.0003662020608317107
    2. '(' → logprob: -8.0003662109375
    3. ' (' → logprob: -10.7503662109375
    4. 'ind' → logprob: -11.7503662109375
    5. '(
' → logprob: -14.1253662109375
    6. '(indent' → logprob: -15.1253662109375
    7. '[ind' → logprob: -16.1253662109375
    8. '   ' → logprob: -16.3753662109375
    9. '(

' → logprob: -16.7503662109375
    10. ' ' → logprob: -16.8753662109375

Token 206: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6407327055931091
    2. ')' → logprob: -0.7657327055931091
    3. '       ' → logprob: -4.890732765197754
    4. ',' → logprob: -8.015732765197754
    5. '   ' → logprob: -9.265732765197754
    6. ')
' → logprob: -10.015732765197754
    7. ')

' → logprob: -10.890732765197754
    8. ' )
' → logprob: -11.140732765197754
    9. '           ' → logprob: -11.515732765197754
    10. '
' → logprob: -11.640732765197754

Token 207: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04875427857041359
    2. '   ' → logprob: -3.4237542152404785
    3. ' ind' → logprob: -4.5487542152404785
    4. 'ind' → logprob: -5.6737542152404785
    5. 'return' → logprob: -8.298754692077637
    6. ' return' → logprob: -8.548754692077637
    7. ' else' → logprob: -9.173754692077637
    8. ',' → logprob: -9.298754692077637
    9. 'else' → logprob: -9.548754692077637
    10. '           ' → logprob: -9.923754692077637

Token 208: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08431213349103928
    2. '       ' → logprob: -3.9593122005462646
    3. ' ind' → logprob: -4.2093119621276855
    4. ' return' → logprob: -4.4593119621276855
    5. 'ind' → logprob: -4.7093119621276855
    6. ' values' → logprob: -4.7093119621276855
    7. ' else' → logprob: -5.0843119621276855
    8. 'return' → logprob: -5.4593119621276855
    9. ' if' → logprob: -6.0843119621276855
    10. 'else' (adapté à ' else') → logprob: -6.3343119621276855

Token 209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5131500363349915
    2. ':
' → logprob: -1.0131499767303467
    3. '       ' → logprob: -3.3881499767303467
    4. '   ' → logprob: -6.138150215148926
    5. ',' → logprob: -6.138150215148926
    6. '):
' → logprob: -9.763150215148926
    7. ',
' → logprob: -10.138150215148926
    8. ' if' → logprob: -10.638150215148926
    9. ' :
' → logprob: -11.138150215148926
    10. '    ' → logprob: -11.138150215148926

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14364098012447357
    2. ' ind' → logprob: -2.6436409950256348
    3. 'ind' → logprob: -3.6436409950256348
    4. ' values' → logprob: -4.143640995025635
    5. ' if' → logprob: -4.393640995025635
    6. '   ' → logprob: -5.518640995025635
    7. 'values' → logprob: -6.018640995025635
    8. 'if' → logprob: -6.768640995025635
    9. ' return' → logprob: -8.268640518188477
    10. 'return' → logprob: -9.143640518188477

Token 211: ' values' (ID: 4824)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.9115567803382874
    2. ' ind' → logprob: -1.5365567207336426
    3. 'values' (adapté à ' values') → logprob: -1.6615567207336426
    4. ' values' → logprob: -1.9115567207336426
    5. '   ' → logprob: -4.161556720733643
    6. 'if' → logprob: -4.286556720733643
    7. ' if' → logprob: -4.786556720733643
    8. ' pass' → logprob: -5.286556720733643
    9. 'pass' → logprob: -6.786556720733643
    10. '       ' → logprob: -7.161556720733643

Token 212: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00010449681576574221
    2. 'row' → logprob: -10.250104904174805
    3. '_rows' → logprob: -10.875104904174805
    4. 'Row' → logprob: -11.500104904174805
    5. '[row' → logprob: -12.000104904174805
    6. ',' → logprob: -12.250104904174805
    7. '[' → logprob: -12.375104904174805
    8. '=' → logprob: -12.625104904174805
    9. ' =' → logprob: -12.875104904174805
    10. '_' → logprob: -13.125104904174805

Token 213: ' =' (ID: 314)
  Prédit: '[ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.39075013995170593
    2. ',' → logprob: -1.6407501697540283
    3. '[' → logprob: -2.6407501697540283
    4. '[j' → logprob: -3.0157501697540283
    5. ',j' → logprob: -5.890749931335449
    6. '[(' → logprob: -6.390749931335449
    7. '   ' → logprob: -6.640749931335449
    8. '[i' → logprob: -7.265749931335449
    9. '[row' → logprob: -7.390749931335449
    10. ' =' → logprob: -7.890749931335449

Token 214: ' increment' (ID: 24032)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.298274427652359
    2. ' values' → logprob: -1.4232743978500366
    3. 'default' → logprob: -4.548274517059326
    4. ' defaultdict' → logprob: -5.173274517059326
    5. '	values' → logprob: -8.548274040222168
    6. 'dict' → logprob: -8.798274040222168
    7. ' default' → logprob: -8.923274040222168
    8. 'ind' → logprob: -9.298274040222168
    9. '{' → logprob: -10.173274040222168
    10. ' dict' → logprob: -10.548274040222168

Token 215: '_value' (ID: 6734)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.13027875125408173
    2. '(values' → logprob: -2.2552788257598877
    3. '_row' → logprob: -4.380278587341309
    4. ' values' → logprob: -6.130278587341309
    5. 'row' → logprob: -7.005278587341309
    6. 'default' → logprob: -7.255278587341309
    7. '_values' → logprob: -7.880278587341309
    8. 'ind' → logprob: -8.755278587341309
    9. '{' → logprob: -9.380278587341309
    10. '	values' → logprob: -9.630278587341309

Token 216: '_dict' (ID: 11295)
  Prédit: '(values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.4126506447792053
    2. 's' → logprob: -1.1626505851745605
    3. 'values' → logprob: -3.7876505851745605
    4. '_row' → logprob: -6.1626505851745605
    5. '_values' → logprob: -8.912651062011719
    6. ' values' → logprob: -8.912651062011719
    7. 'default' → logprob: -10.037651062011719
    8. '(s' → logprob: -10.162651062011719
    9. '(' → logprob: -10.162651062011719
    10. 'row' → logprob: -10.287651062011719

Token 217: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -5.1093578804284334e-05
    2. 'values' → logprob: -10.125051498413086
    3. ' (' → logprob: -11.750051498413086
    4. '(' → logprob: -13.000051498413086
    5. ' values' → logprob: -14.500051498413086
    6. '	values' → logprob: -16.125051498413086
    7. '(keys' → logprob: -16.500051498413086
    8. '.values' → logprob: -17.250051498413086
    9. '(default' → logprob: -17.875051498413086
    10. '{' → logprob: -18.125051498413086

Token 218: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0017020793166011572
    2. 'row' → logprob: -6.501702308654785
    3. ',' → logprob: -9.126702308654785
    4. ')' → logprob: -11.251702308654785
    5. 'Row' → logprob: -11.376702308654785
    6. '   ' → logprob: -12.001702308654785
    7. 'values' → logprob: -12.126702308654785
    8. '_Row' → logprob: -12.251702308654785
    9. '_ROW' → logprob: -12.501702308654785
    10. ' ' → logprob: -12.501702308654785

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004605783324223012
    2. ' ,' → logprob: -8.000460624694824
    3. '   ' → logprob: -9.875460624694824
    4. ')' → logprob: -10.500460624694824
    5. ',j' → logprob: -10.875460624694824
    6. '       ' → logprob: -11.750460624694824
    7. ' ' → logprob: -12.875460624694824
    8. ',m' → logprob: -12.875460624694824
    9. ',
' → logprob: -13.250460624694824
    10. '[' → logprob: -14.125460624694824

Token 220: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.10043322294950485
    2. ' ind' → logprob: -2.350433111190796
    3. 'j' → logprob: -10.100433349609375
    4. ' j' → logprob: -10.225433349609375
    5. '(ind' → logprob: -10.725433349609375
    6. ''' → logprob: -10.850433349609375
    7. ' ' → logprob: -11.225433349609375
    8. '[ind' → logprob: -11.350433349609375
    9. ''ind' → logprob: -11.350433349609375
    10. 'mass' → logprob: -11.475433349609375

Token 221: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01777292788028717
    2. ')
' → logprob: -4.142773151397705
    3. ',' → logprob: -7.017773151397705
    4. ' )' → logprob: -7.642773151397705
    5. '   ' → logprob: -8.142772674560547
    6. ' )
' → logprob: -10.267772674560547
    7. ')return' → logprob: -11.642772674560547
    8. ')

' → logprob: -11.892772674560547
    9. ' ,' → logprob: -12.392772674560547
    10. ' ' → logprob: -12.392772674560547

Token 222: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002889159834012389
    2. ' return' → logprob: -6.252889156341553
    3. 'return' → logprob: -7.627889156341553
    4. '       ' → logprob: -8.252889633178711
    5. '
' → logprob: -8.877889633178711
    6. '	return' → logprob: -10.752889633178711
    7. ',' → logprob: -11.127889633178711
    8. '    
' → logprob: -11.127889633178711
    9. ' ind' → logprob: -11.252889633178711
    10. ' 
' → logprob: -13.127889633178711

Token 223: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' (adapté à ' ind') → logprob: -0.16676756739616394
    2. ' ind' → logprob: -2.5417675971984863
    3. 'return' → logprob: -3.0417675971984863
    4. '   ' → logprob: -3.9167675971984863
    5. ' return' → logprob: -5.041767597198486
    6. 'j' → logprob: -8.041767120361328
    7. '       ' → logprob: -8.791767120361328
    8. '
' → logprob: -9.416767120361328
    9. ' j' → logprob: -10.041767120361328
    10. 'values' → logprob: -10.166767120361328

Token 224: '_row' (ID: 19157)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7637625336647034
    2. ',' → logprob: -1.1387624740600586
    3. ' =' → logprob: -1.8887624740600586
    4. ' +=' → logprob: -2.8887624740600586
    5. '+=' → logprob: -5.263762474060059
    6. ' ,' → logprob: -7.388762474060059
    7. '+' → logprob: -7.638762474060059
    8. 'return' → logprob: -8.388762474060059
    9. ' return' → logprob: -9.263762474060059
    10. ')' → logprob: -9.388762474060059

Token 225: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3795937522663735e-05
    2. '[' → logprob: -11.00002384185791
    3. '[I' → logprob: -12.62502384185791
    4. ' [' → logprob: -12.87502384185791
    5. '[ind' → logprob: -15.37502384185791
    6. ',' → logprob: -15.37502384185791
    7. '[j' → logprob: -16.000022888183594
    8. ',i' → logprob: -16.250022888183594
    9. '[
' → logprob: -16.875022888183594
    10. '[int' → logprob: -17.000022888183594

Token 226: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006298751104623079
    2. '[j' → logprob: -7.625629901885986
    3. '[' → logprob: -9.750629425048828
    4. ']' → logprob: -9.875629425048828
    5. ' ][' → logprob: -10.625629425048828
    6. ')[' → logprob: -13.375629425048828
    7. '"][' → logprob: -13.625629425048828
    8. ''][' → logprob: -13.750629425048828
    9. '}[' → logprob: -14.125629425048828
    10. '>[' → logprob: -14.250629425048828

Token 227: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.014684110297821e-06
    2. ' j' → logprob: -11.750008583068848
    3. '[j' → logprob: -14.250008583068848
    4. ']' → logprob: -16.000009536743164
    5. '   ' → logprob: -16.250009536743164
    6. '<|end|>' → logprob: -16.500009536743164
    7. ' ' → logprob: -17.125009536743164
    8. ':j' → logprob: -17.250009536743164
    9. '][' → logprob: -17.375009536743164
    10. '```' → logprob: -17.500009536743164

Token 228: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006325013004243374
    2. ' ]' → logprob: -5.3813252449035645
    3. ',' → logprob: -7.2563252449035645
    4. ']=' → logprob: -7.5063252449035645
    5. ')' → logprob: -8.131324768066406
    6. '],' → logprob: -9.631324768066406
    7. '=' → logprob: -10.256324768066406
    8. ' =' → logprob: -10.881324768066406
    9. ' ,' → logprob: -11.006324768066406
    10. ')]' → logprob: -12.381324768066406

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07906472682952881
    2. ' =' → logprob: -2.5790648460388184
    3. ',' → logprob: -8.70406436920166
    4. '=j' → logprob: -12.07906436920166
    5. ',j' → logprob: -13.82906436920166
    6. ' ,' → logprob: -14.20406436920166
    7. '[j' → logprob: -14.45406436920166
    8. '[' → logprob: -14.82906436920166
    9. '=
' → logprob: -15.32906436920166
    10. '=

' → logprob: -15.70406436920166

Token 230: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.002620846964418888
    2. ' ind' → logprob: -6.377620697021484
    3. '0' → logprob: -7.002620697021484
    4. ' ' → logprob: -12.752620697021484
    5. 'indent' → logprob: -13.377620697021484
    6. '1' → logprob: -14.252620697021484
    7. '-' → logprob: -14.627620697021484
    8. '   ' → logprob: -14.752620697021484
    9. '[ind' → logprob: -14.752620697021484
    10. '(ind' → logprob: -14.752620697021484

Token 231: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002880476415157318
    2. 'return' → logprob: -6.002880573272705
    3. ' return' → logprob: -8.127880096435547
    4. '
' → logprob: -10.002880096435547
    5. '    
' → logprob: -10.502880096435547
    6. ',' → logprob: -11.252880096435547
    7. '       ' → logprob: -11.502880096435547
    8. '	return' → logprob: -12.377880096435547
    9. '        
' → logprob: -13.002880096435547
    10. ':return' → logprob: -13.502880096435547

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003805068787187338
    2. '	return' → logprob: -6.503805160522461
    3. ' ind' → logprob: -7.003805160522461
    4. ' return' → logprob: -7.628805160522461
    5. '    
' → logprob: -7.878805160522461
    6. 'return' → logprob: -8.878805160522461
    7. '\t' → logprob: -9.003805160522461
    8. '[ind' → logprob: -10.003805160522461
    9. '	' → logprob: -10.128805160522461
    10. '       ' → logprob: -10.128805160522461

Token 233: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0058157374151051044
    2. 'return' (adapté à ' return') → logprob: -5.255815505981445
    3. ' return' → logprob: -7.880815505981445
    4. '	return' → logprob: -8.880815505981445
    5. '
' → logprob: -10.880815505981445
    6. '    
' → logprob: -11.505815505981445
    7. 'ind' → logprob: -12.005815505981445
    8. '       ' → logprob: -12.130815505981445
    9. ' ind' → logprob: -12.255815505981445
    10. ':return' → logprob: -12.380815505981445

Token 234: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.12703773379325867
    2. ' ind' → logprob: -2.127037763595581
    3. '(ind' → logprob: -9.12703800201416
    4. '[ind' → logprob: -14.37703800201416
    5. '   ' → logprob: -16.002037048339844
    6. ' (' → logprob: -16.252037048339844
    7. ' ' → logprob: -16.627037048339844
    8. 'indent' → logprob: -16.877037048339844
    9. '(' → logprob: -17.752037048339844
    10. 'indt' → logprob: -17.877037048339844

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041797831654548645
    2. ' ,' → logprob: -5.504179954528809
    3. '<|end|>' → logprob: -9.879179954528809
    4. '_,' → logprob: -11.004179954528809
    5. 'ind' → logprob: -11.754179954528809
    6. ',
' → logprob: -12.004179954528809
    7. '‌,' → logprob: -12.629179954528809
    8. ',j' → logprob: -12.879179954528809
    9. ',row' → logprob: -12.879179954528809
    10. ' ' → logprob: -13.379179954528809

Token 236: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.31326761841773987
    2. 'ind' → logprob: -1.3132675886154175
    3. '<|end|>' → logprob: -12.938267707824707
    4. '[ind' → logprob: -13.563267707824707
    5. '(ind' → logprob: -14.313267707824707
    6. ' ' → logprob: -15.063267707824707
    7. 'indent' → logprob: -15.063267707824707
    8. 'indt' → logprob: -15.188267707824707
    9. '_ind' → logprob: -15.688267707824707
    10. '0' → logprob: -15.938267707824707

Token 237: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.001958251930773258
    2. 'row' → logprob: -6.25195837020874
    3. ',' → logprob: -11.001957893371582
    4. 'Row' → logprob: -12.626957893371582
    5. ',row' → logprob: -13.501957893371582
    6. '_ROW' → logprob: -13.876957893371582
    7. '_Row' → logprob: -14.001957893371582
    8. '_rows' → logprob: -14.001957893371582
    9. '_' → logprob: -14.126957893371582
    10. ',_' → logprob: -14.251957893371582

Token 238: '[i' (ID: 1768)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02639458142220974
    2. ',j' → logprob: -4.151394367218018
    3. '[i' → logprob: -5.526394367218018
    4. '[j' → logprob: -6.026394367218018
    5. ',i' → logprob: -6.026394367218018
    6. ' ,' → logprob: -7.026394367218018
    7. '[' → logprob: -8.026394844055176
    8. '<|end|>' → logprob: -8.651394844055176
    9. ',[' → logprob: -10.401394844055176
    10. '[ind' → logprob: -10.526394844055176

Token 239: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.3759821653366089
    2. '][' → logprob: -1.7509821653366089
    3. ',j' → logprob: -2.3759822845458984
    4. ',' → logprob: -3.3759822845458984
    5. '[' → logprob: -4.500982284545898
    6. ',[' → logprob: -7.500982284545898
    7. '[i' → logprob: -7.875982284545898
    8. ']' → logprob: -8.625982284545898
    9. '],[' → logprob: -9.500982284545898
    10. '   ' → logprob: -9.500982284545898

Token 240: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.7432603272027336e-06
    2. ' j' → logprob: -13.500001907348633
    3. '[j' → logprob: -15.750001907348633
    4. '   ' → logprob: -16.125001907348633
    5. '```' → logprob: -17.125001907348633
    6. '	j' → logprob: -17.500001907348633
    7. ']' → logprob: -17.625001907348633
    8. '[' → logprob: -17.875001907348633
    9. '<|end|>' → logprob: -17.875001907348633
    10. ' ' → logprob: -18.375001907348633

Token 241: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016182278341148049
    2. ' ,' → logprob: -8.750162124633789
    3. '   ' → logprob: -12.875162124633789
    4. '‌,' → logprob: -15.750162124633789
    5. ',
' → logprob: -16.12516212463379
    6. '],' → logprob: -16.62516212463379
    7. '),' → logprob: -16.75016212463379
    8. '```' → logprob: -16.75016212463379
    9. '<|end|>' → logprob: -16.87516212463379
    10. ' ' → logprob: -16.87516212463379

Token 242: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.06196914613246918
    2. ' values' → logprob: -2.811969041824341
    3. '(values' → logprob: -14.311968803405762
    4. '	values' → logprob: -14.436968803405762
    5. '.values' → logprob: -15.436968803405762
    6. 'value' → logprob: -16.436969757080078
    7. '_values' → logprob: -17.561969757080078
    8. ' ' → logprob: -17.686969757080078
    9. 'Values' → logprob: -17.936969757080078
    10. '   ' → logprob: -18.311969757080078

Token 243: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00025966696557588875
    2. '_' → logprob: -9.250259399414062
    3. '_rows' → logprob: -9.250259399414062
    4. '_values' → logprob: -10.250259399414062
    5. 'row' → logprob: -11.500259399414062
    6. 's' → logprob: -11.875259399414062
    7. '_Row' → logprob: -12.250259399414062
    8. '_ROW' → logprob: -12.375259399414062
    9. ' _' → logprob: -13.250259399414062
    10. '_value' → logprob: -13.875259399414062

Token 244: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030035560950636864
    2. '<|end|>' → logprob: -3.7800354957580566
    3. '
' → logprob: -5.155035495758057
    4. '

' → logprob: -7.530035495758057
    5. ' def' → logprob: -8.280035972595215
    6. '[' → logprob: -10.030035972595215
    7. '<|end|>' → logprob: -10.280035972595215
    8. ')' → logprob: -10.905035972595215
    9. '_' → logprob: -11.405035972595215
    10. ':' → logprob: -11.405035972595215

Token 245: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20136003196239471
    2. '_' → logprob: -2.076359987258911
    3. 'def' → logprob: -3.326359987258911
    4. '<|end|>' → logprob: -4.95136022567749
    5. ')' → logprob: -5.32636022567749
    6. '[' → logprob: -5.57636022567749
    7. ' ' → logprob: -6.70136022567749
    8. ':def' → logprob: -7.20136022567749
    9. ' def' → logprob: -7.32636022567749
    10. '(' → logprob: -7.95136022567749

Token 246: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2522720694541931
    2. ' is' → logprob: -1.502272129058838
    3. 'increment' → logprob: -8.50227165222168
    4. ' increment' → logprob: -10.00227165222168
    5. 'def' → logprob: -10.87727165222168
    6. '_is' → logprob: -11.25227165222168
    7. 'process' → logprob: -11.25227165222168
    8. ' process' → logprob: -11.50227165222168
    9. ' black' → logprob: -11.62727165222168
    10. ' read' → logprob: -12.12727165222168

Token 247: '_black' (ID: 92024)
  Prédit: '_black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_black' → logprob: -7.107425062713446e-06
    2. '_' → logprob: -12.875006675720215
    3. '_blank' → logprob: -12.875006675720215
    4. '_white' → logprob: -13.250006675720215
    5. '_cell' → logprob: -16.62500762939453
    6. '_BLACK' → logprob: -17.12500762939453
    7. '_bl' → logprob: -17.25000762939453
    8. '_b' → logprob: -17.50000762939453
    9. ' _' → logprob: -17.62500762939453
    10. 'black' → logprob: -17.75000762939453

Token 248: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -4.1080467781284824e-05
    2. '_' → logprob: -11.125041007995605
    3. '_Cell' → logprob: -12.000041007995605
    4. '_cells' → logprob: -12.125041007995605
    5. '_CELL' → logprob: -12.625041007995605
    6. 'cell' → logprob: -13.750041007995605
    7. '_s' → logprob: -13.875041007995605
    8. '##_' → logprob: -13.875041007995605
    9. '```' → logprob: -14.125041007995605
    10. '_cube' → logprob: -14.250041007995605

Token 249: '(chr' (ID: 185847)
  Prédit: '(cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cell' → logprob: -0.013468424789607525
    2. '(char' → logprob: -5.513468265533447
    3. '(c' → logprob: -5.638468265533447
    4. '(s' → logprob: -6.013468265533447
    5. '(' → logprob: -6.513468265533447
    6. '(m' → logprob: -7.263468265533447
    7. '(ch' → logprob: -7.763468265533447
    8. '(token' → logprob: -8.263468742370605
    9. '(value' → logprob: -8.388468742370605
    10. '(character' → logprob: -9.763468742370605

Token 250: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19921061396598816
    2. '):
' → logprob: -2.0742106437683105
    3. 's' → logprob: -3.5742106437683105
    4. '(' → logprob: -4.6992106437683105
    5. 'c' → logprob: -5.6992106437683105
    6. 'a' → logprob: -5.8242106437683105
    7. ')' → logprob: -6.3242106437683105
    8. 'acter' → logprob: -6.3242106437683105
    9. '):

' → logprob: -6.4492106437683105
    10. '_' → logprob: -6.5742106437683105

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24892133474349976
    2. 'chr' → logprob: -1.7489213943481445
    3. 'return' → logprob: -3.3739213943481445
    4. ' ' → logprob: -5.7489213943481445
    5. ' return' → logprob: -6.1239213943481445
    6. '=' → logprob: -6.2489213943481445
    7. 'def' → logprob: -7.2489213943481445
    8. '(chr' → logprob: -7.3739213943481445
    9. '==' → logprob: -7.6239213943481445
    10. '  ' → logprob: -7.7489213943481445

Token 252: ' return' (ID: 622)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.054384633898735046
    2. 'return' (adapté à ' return') → logprob: -3.054384708404541
    3. ' return' → logprob: -5.804384708404541
    4. ' chr' → logprob: -6.054384708404541
    5. '(chr' → logprob: -8.054384231567383
    6. '   ' → logprob: -9.554384231567383
    7. ' ' → logprob: -10.929384231567383
    8. '_chr' → logprob: -11.929384231567383
    9. '  ' → logprob: -13.554384231567383
    10. '==' → logprob: -14.054384231567383

Token 253: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.0381486713886261
    2. ' chr' → logprob: -3.2881486415863037
    3. '(chr' → logprob: -9.538148880004883
    4. ' ' → logprob: -10.538148880004883
    5. '#' → logprob: -12.788148880004883
    6. '  ' → logprob: -13.288148880004883
    7. ' '#'' → logprob: -13.663148880004883
    8. 'ch' → logprob: -13.913148880004883
    9. '_chr' → logprob: -14.788148880004883
    10. '   ' → logprob: -14.913148880004883

Token 254: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05181419849395752
    2. ' ==' → logprob: -3.051814079284668
    3. '=='' → logprob: -5.801814079284668
    4. '=' → logprob: -10.051814079284668
    5. '[' → logprob: -10.051814079284668
    6. ' in' → logprob: -10.176814079284668
    7. '#' → logprob: -10.551814079284668
    8. '=="' → logprob: -11.301814079284668
    9. '[]' → logprob: -11.801814079284668
    10. 'in' → logprob: -11.926814079284668

Token 255: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.17770326137542725
    2. '#' → logprob: -2.302703380584717
    3. '"#' → logprob: -3.802703380584717
    4. ''.' → logprob: -4.177703380584717
    5. ''' → logprob: -4.302703380584717
    6. ''*' → logprob: -4.927703380584717
    7. ' '#'' → logprob: -6.052703380584717
    8. '.' → logprob: -6.927703380584717
    9. '"' → logprob: -7.927703380584717
    10. '*' → logprob: -8.802702903747559

Token 256: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10474756360054016
    2. '')' → logprob: -2.8547475337982178
    3. ')'' → logprob: -4.354747772216797
    4. ')' → logprob: -4.479747772216797
    5. ''#' → logprob: -4.479747772216797
    6. '#' → logprob: -5.104747772216797
    7. ''''' → logprob: -9.104747772216797
    8. '<|end|>' → logprob: -9.354747772216797
    9. '"' → logprob: -10.479747772216797
    10. '')"' → logprob: -11.104747772216797

Token 257: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.0002639582962729037
    2. ' increment' → logprob: -8.375264167785645
    3. 'def' → logprob: -10.375264167785645
    4. 'default' → logprob: -14.000264167785645
    5. 'increments' → logprob: -15.000264167785645
    6. ' def' → logprob: -16.125263214111328
    7. '
' → logprob: -16.250263214111328
    8. 'from' → logprob: -16.375263214111328
    9. 'update' → logprob: -16.375263214111328
    10. 'increase' → logprob: -16.375263214111328

Token 259: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.668304245569743e-05
    2. '_values' → logprob: -10.125046730041504
    3. '_' → logprob: -12.625046730041504
    4. '_val' → logprob: -12.750046730041504
    5. '_Value' → logprob: -15.625046730041504
    6. ' _' → logprob: -16.125045776367188
    7. '_VALUE' → logprob: -17.875045776367188
    8. 'value' → logprob: -18.000045776367188
    9. ')_' → logprob: -18.250045776367188
    10. '##_' → logprob: -18.375045776367188

Token 260: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0012204634258523583
    2. 's' → logprob: -7.126220226287842
    3. '_def' → logprob: -8.501220703125
    4. 'def' → logprob: -9.501220703125
    5. '_value' → logprob: -9.626220703125
    6. '_dic' → logprob: -11.001220703125
    7. '_' → logprob: -11.251220703125
    8. '_dictionary' → logprob: -11.626220703125
    9. '_values' → logprob: -11.751220703125
    10. '_s' → logprob: -12.001220703125

Token 261: '(d' (ID: 2572)
  Prédit: '(values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.013973206281661987
    2. '(dict' → logprob: -4.763973236083984
    3. '(d' → logprob: -5.513973236083984
    4. '(dictionary' → logprob: -7.013973236083984
    5. '(dic' → logprob: -8.888973236083984
    6. '(vals' → logprob: -9.263973236083984
    7. '(value' → logprob: -9.388973236083984
    8. '(' → logprob: -10.138973236083984
    9. ' (' → logprob: -10.638973236083984
    10. '(def' → logprob: -10.888973236083984

Token 262: 'ct' (ID: 308)
  Prédit: 'ict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.16691114008426666
    2. 'ef' → logprob: -2.2919111251831055
    3. ',' → logprob: -4.0419111251831055
    4. 'ictionary' → logprob: -4.4169111251831055
    5. 'ic' → logprob: -5.0419111251831055
    6. '.setdefault' → logprob: -5.0419111251831055
    7. ')' → logprob: -5.6669111251831055
    8. 'ct' → logprob: -5.7919111251831055
    9. ' ' → logprob: -7.1669111251831055
    10. '<|end|>' → logprob: -7.5419111251831055

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008941899868659675
    2. ',d' → logprob: -7.250894069671631
    3. ' ,' → logprob: -8.625894546508789
    4. ',value' → logprob: -13.375894546508789
    5. ',key' → logprob: -13.500894546508789
    6. ',k' → logprob: -14.750894546508789
    7. 'd' → logprob: -14.875894546508789
    8. ',
' → logprob: -15.375894546508789
    9. '_,' → logprob: -15.500894546508789
    10. ',val' → logprob: -15.875894546508789

Token 264: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.20480360090732574
    2. ' key' → logprob: -1.7048035860061646
    3. 'ind' → logprob: -5.954803466796875
    4. ' ind' → logprob: -7.204803466796875
    5. 'k' → logprob: -10.329803466796875
    6. ')' → logprob: -12.079803466796875
    7. 'value' → logprob: -12.954803466796875
    8. 'index' → logprob: -13.579803466796875
    9. '	key' → logprob: -13.954803466796875
    10. ' ' → logprob: -13.954803466796875

Token 265: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47411277890205383
    2. '):
' → logprob: -0.9741127490997314
    3. '):
' → logprob: -10.849112510681152
    4. ')' → logprob: -11.724112510681152
    5. '):

' → logprob: -12.224112510681152
    6. ',' → logprob: -13.724112510681152
    7. ']:' → logprob: -14.474112510681152
    8. '[key' → logprob: -14.974112510681152
    9. '   ' → logprob: -15.224112510681152
    10. ':' → logprob: -15.849112510681152

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016299557173624635
    2. 'd' → logprob: -6.626629829406738
    3. ' d' → logprob: -8.251629829406738
    4. '{' → logprob: -10.876629829406738
    5. '{
' → logprob: -11.626629829406738
    6. 'default' → logprob: -12.501629829406738
    7. '):
' → logprob: -12.876629829406738
    8. '  ' → logprob: -13.501629829406738
    9. '
' → logprob: -13.626629829406738
    10. ' ' → logprob: -13.626629829406738

Token 267: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.04085066542029381
    2. '   ' → logprob: -3.2908506393432617
    3. 'new' → logprob: -6.415850639343262
    4. ' d' → logprob: -6.915850639343262
    5. 'default' → logprob: -9.165850639343262
    6. ' new' → logprob: -9.915850639343262
    7. '
' → logprob: -11.165850639343262
    8. '	d' → logprob: -12.790850639343262
    9. 'from' → logprob: -13.415850639343262
    10. '  ' → logprob: -13.790850639343262

Token 268: 'ct' (ID: 308)
  Prédit: 'ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.00022320532298181206
    2. ' =' → logprob: -8.625223159790039
    3. '   ' → logprob: -11.250223159790039
    4. '=' → logprob: -11.750223159790039
    5. '[' → logprob: -11.875223159790039
    6. 'c' → logprob: -12.125223159790039
    7. 'ict' → logprob: -12.250223159790039
    8. 'f' → logprob: -13.250223159790039
    9. 'd' → logprob: -13.625223159790039
    10. '  ' → logprob: -14.500223159790039

Token 269: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. '[d' → logprob: -15.625
    4. '.setdefault' → logprob: -16.375
    5. '[k' → logprob: -17.75
    6. 'key' → logprob: -18.625
    7. 'd' → logprob: -19.125
    8. '[...]' → logprob: -20.875
    9. '```' → logprob: -21.125
    10. '_key' → logprob: -21.25

Token 270: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.070975071750581e-05
    2. ']+=' → logprob: -10.500030517578125
    3. ']=' → logprob: -12.750030517578125
    4. ' ]' → logprob: -15.750030517578125
    5. ')' → logprob: -18.250030517578125
    6. ']+' → logprob: -19.000030517578125
    7. '   ' → logprob: -19.375030517578125
    8. '']' → logprob: -19.500030517578125
    9. '=' → logprob: -19.750030517578125
    10. '"]' → logprob: -20.250030517578125

Token 271: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08641520887613297
    2. '+=' → logprob: -2.5864152908325195
    3. ' =' → logprob: -5.5864152908325195
    4. ' +=' → logprob: -5.5864152908325195
    5. ']+=' → logprob: -15.33641529083252
    6. '.=' → logprob: -16.961414337158203
    7. '+' → logprob: -17.211414337158203
    8. ' ' → logprob: -17.586414337158203
    9. '=

' → logprob: -17.711414337158203
    10. '＝' → logprob: -17.961414337158203

Token 272: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.250431060791016
    4. '```' → logprob: -18.812931060791016
    5. '0' → logprob: -19.312931060791016
    6. '2' → logprob: -19.500431060791016
    7. '  ' → logprob: -19.750431060791016
    8. '<|end|>' → logprob: -19.812931060791016
    9. 'def' → logprob: -20.000431060791016
    10. '
' → logprob: -20.125431060791016

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '```' → logprob: -18.625001907348633
    5. '<|end|>' → logprob: -19.250001907348633
    6. '0' → logprob: -19.250001907348633
    7. '2' → logprob: -19.750001907348633
    8. '
' → logprob: -19.937501907348633
    9. '  ' → logprob: -20.312501907348633
    10. '10' → logprob: -20.500001907348633

Token 274: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000831782293971628
    2. ' return' → logprob: -7.375831604003906
    3. 'return' → logprob: -8.500831604003906
    4. '<|end|>' → logprob: -14.125831604003906
    5. '	return' → logprob: -14.875831604003906
    6. ',' → logprob: -15.500831604003906
    7. '   ' → logprob: -15.500831604003906
    8. '
' → logprob: -15.875831604003906
    9. '    
' → logprob: -16.125831604003906
    10. ' ' → logprob: -16.500831604003906

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025449818931519985
    2. 'return' → logprob: -6.00254487991333
    3. ' return' → logprob: -9.627545356750488
    4. '	return' → logprob: -12.627545356750488
    5. '```' → logprob: -17.127544403076172
    6. '       ' → logprob: -17.502544403076172
    7. '
' → logprob: -17.877544403076172
    8. ' ' → logprob: -18.127544403076172
    9. '    
' → logprob: -18.252544403076172
    10. '  ' → logprob: -18.377544403076172

Token 276: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02438916265964508
    2. ' return' → logprob: -3.7743892669677734
    3. '   ' → logprob: -6.774389266967773
    4. '	return' → logprob: -15.274389266967773
    5. ' ' → logprob: -16.774389266967773
    6. '{return' → logprob: -17.899389266967773
    7. '  ' → logprob: -18.149389266967773
    8. ':return' → logprob: -18.649389266967773
    9. '
' → logprob: -19.149389266967773
    10. '```' → logprob: -19.649389266967773

Token 277: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.547789674485102e-05
    2. ' d' → logprob: -10.250035285949707
    3. '	d' → logprob: -21.750036239624023
    4. '   ' → logprob: -22.000036239624023
    5. '```' → logprob: -22.875036239624023
    6. 'dict' → logprob: -23.750036239624023
    7. '
' → logprob: -24.125036239624023
    8. '  ' → logprob: -24.500036239624023
    9. ' ' → logprob: -24.625036239624023
    10. '`' → logprob: -25.125036239624023

Token 278: 'ct' (ID: 308)
  Prédit: 'ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0007261329446919262
    2. 'd' → logprob: -7.250726222991943
    3. 'c' → logprob: -11.125725746154785
    4. '```' → logprob: -14.625725746154785
    5. 'st' → logprob: -14.875725746154785
    6. 'ctl' → logprob: -16.0007266998291
    7. '[' → logprob: -16.3757266998291
    8. 'ctr' → logprob: -16.3757266998291
    9. 'cts' → logprob: -16.8757266998291
    10. '   ' → logprob: -16.8757266998291

Token 279: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.3428524136543274
    2. 'process' → logprob: -1.7178523540496826
    3. ' main' → logprob: -2.3428523540496826
    4. 'main' → logprob: -5.342852592468262
    5. ' read' → logprob: -5.467852592468262
    6. ' def' → logprob: -6.092852592468262
    7. 'def' → logprob: -6.467852592468262
    8. 'read' → logprob: -6.592852592468262
    9. ' create' → logprob: -8.092852592468262
    10. 'create' → logprob: -10.092852592468262

Token 282: '_col' (ID: 7255)
  Prédit: '_column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_column' → logprob: -0.355197012424469
    2. '_col' → logprob: -1.2301969528198242
    3. '_row' → logprob: -5.605196952819824
    4. '_' → logprob: -6.480196952819824
    5. 'column' → logprob: -7.480196952819824
    6. 'col' → logprob: -7.605196952819824
    7. '_columns' → logprob: -8.605196952819824
    8. '_block' → logprob: -8.980196952819824
    9. '_black' → logprob: -10.105196952819824
    10. '_cell' → logprob: -10.980196952819824

Token 283: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.0009056262206286192
    2. '_indices' → logprob: -7.875905513763428
    3. 'ind' → logprob: -8.625905990600586
    4. 'umn' → logprob: -9.000905990600586
    5. '_indicator' → logprob: -9.500905990600586
    6. '(ind' → logprob: -10.500905990600586
    7. '_cells' → logprob: -11.125905990600586
    8. 'um' → logprob: -11.125905990600586
    9. '_inds' → logprob: -11.125905990600586
    10. 's' → logprob: -11.250905990600586

Token 284: 'icators' (ID: 70920)
  Prédit: 'icators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icators' → logprob: -1.664371848164592e-05
    2. 'icator' → logprob: -11.250016212463379
    3. 'ic' → logprob: -12.625016212463379
    4. 'ex' → logprob: -15.875016212463379
    5. '(' → logprob: -17.750017166137695
    6. 'icates' → logprob: -18.375017166137695
    7. 'ices' → logprob: -18.375017166137695
    8. 'icat' → logprob: -18.500017166137695
    9. '_' → logprob: -18.625017166137695
    10. '[' → logprob: -18.750017166137695

Token 285: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.057743949990254e-05
    2. '(' → logprob: -10.875020980834961
    3. ' (' → logprob: -13.375020980834961
    4. '(M' → logprob: -17.62502098083496
    5. '(def' → logprob: -19.00002098083496
    6. '(mask' → logprob: -19.12502098083496
    7. 'def' → logprob: -19.25002098083496
    8. '(ma' → logprob: -19.25002098083496
    9. '(
' → logprob: -19.37502098083496
    10. '(mc' → logprob: -19.62502098083496

Token 286: 'ass' (ID: 456)
  Prédit: 'ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.00045379105722531676
    2. 'def' → logprob: -7.750453948974609
    3. 'mass' → logprob: -10.75045394897461
    4. '(m' → logprob: -14.50045394897461
    5. ' mass' → logprob: -15.37545394897461
    6. 'асс' → logprob: -15.50045394897461
    7. '(def' → logprob: -16.00045394897461
    8. 'as' → logprob: -16.62545394897461
    9. ' ass' → logprob: -16.62545394897461
    10. '_mass' → logprob: -16.62545394897461

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012070851516909897
    2. ' ,' → logprob: -9.125121116638184
    3. ',H' → logprob: -12.125121116638184
    4. 'def' → logprob: -12.375121116638184
    5. '(H' → logprob: -14.750121116638184
    6. 'H' → logprob: -15.250121116638184
    7. '_,' → logprob: -15.375121116638184
    8. '   ' → logprob: -15.500121116638184
    9. 'import' → logprob: -15.750121116638184
    10. '):' → logprob: -15.937621116638184

Token 288: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5159621834754944
    2. ' H' → logprob: -1.0159621238708496
    3. ' len' → logprob: -4.01596212387085
    4. 'len' → logprob: -4.51596212387085
    5. 'def' → logprob: -5.51596212387085
    6. '   ' → logprob: -6.01596212387085
    7. 'W' → logprob: -6.14096212387085
    8. ' W' → logprob: -6.26596212387085
    9. ' def' → logprob: -7.51596212387085
    10. 'lambda' → logprob: -8.640962600708008

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.816591434879228e-05
    2. ',W' → logprob: -9.62508773803711
    3. ' ,' → logprob: -10.75008773803711
    4. ',
' → logprob: -15.62508773803711
    5. 'def' → logprob: -15.75008773803711
    6. 'W' → logprob: -16.12508773803711
    7. '_,' → logprob: -17.00008773803711
    8. '   ' → logprob: -17.50008773803711
    9. ',w' → logprob: -17.50008773803711
    10. ',

' → logprob: -18.62508773803711

Token 290: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0009117019944824278
    2. ' W' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.000911712646484
    4. 'def' → logprob: -17.875911712646484
    5. ' ' → logprob: -18.375911712646484
    6. '  ' → logprob: -19.000911712646484
    7. '	W' → logprob: -19.125911712646484
    8. ')' → logprob: -19.625911712646484
    9. ',W' → logprob: -19.625911712646484
    10. '<|end|>' → logprob: -20.125911712646484

Token 291: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3133029043674469
    2. '):
' → logprob: -1.3133028745651245
    3. '):
' → logprob: -10.563302993774414
    4. ')' → logprob: -11.438302993774414
    5. '):

' → logprob: -13.063302993774414
    6. '   ' → logprob: -13.813302993774414
    7. ' ):' → logprob: -14.563302993774414
    8. ',' → logprob: -14.688302993774414
    9. ':' → logprob: -15.688302993774414
    10. 'def' → logprob: -15.813302993774414

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7246489524841309
    2. ' values' → logprob: -0.7246489524841309
    3. 'values' → logprob: -3.474648952484131
    4. '	values' → logprob: -10.849649429321289
    5. '_values' → logprob: -11.474649429321289
    6. ' ind' → logprob: -13.474649429321289
    7. 'def' → logprob: -13.724649429321289
    8. '```' → logprob: -13.724649429321289
    9. '.values' → logprob: -13.974649429321289
    10. 'ind' → logprob: -14.599649429321289

Token 293: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.0004343645414337516
    2. ' values' → logprob: -7.750434398651123
    3. '   ' → logprob: -12.500433921813965
    4. 'ind' → logprob: -18.00043487548828
    5. '	values' → logprob: -18.50043487548828
    6. 'def' → logprob: -20.00043487548828
    7. ' ' → logprob: -21.00043487548828
    8. '.values' → logprob: -21.25043487548828
    9. '_values' → logprob: -21.25043487548828
    10. '
' → logprob: -21.37543487548828

Token 294: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.001943395473062992
    2. '_row' → logprob: -6.751943588256836
    3. '_column' → logprob: -7.251943588256836
    4. '_' → logprob: -11.126943588256836
    5. '_default' → logprob: -11.126943588256836
    6. 'col' → logprob: -11.626943588256836
    7. 'default' → logprob: -11.876943588256836
    8. 'def' → logprob: -12.251943588256836
    9. '_cols' → logprob: -12.251943588256836
    10. '_columns' → logprob: -12.626943588256836

Token 295: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. ',' → logprob: -16.518150329589844
    4. '=
' → logprob: -17.643150329589844
    5. '   ' → logprob: -17.643150329589844
    6. ' ' → logprob: -18.518150329589844
    7. 'def' → logprob: -19.893150329589844
    8. '=row' → logprob: -20.143150329589844
    9. 'values' → logprob: -20.268150329589844
    10. ')' → logprob: -20.268150329589844

Token 296: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.688212614681106e-05
    2. ' defaultdict' → logprob: -11.000017166137695
    3. ' default' → logprob: -16.750017166137695
    4. '"default' → logprob: -18.000017166137695
    5. '(default' → logprob: -18.250017166137695
    6. ''default' → logprob: -18.750017166137695
    7. '.default' → logprob: -19.500017166137695
    8. '   ' → logprob: -20.000017166137695
    9. 'collections' → logprob: -20.750017166137695
    10. 'def' → logprob: -21.375017166137695

Token 297: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008626040071249008
    2. 'int' → logprob: -4.7586259841918945
    3. '[int' → logprob: -12.133625984191895
    4. '=int' → logprob: -12.633625984191895
    5. '<int' → logprob: -13.508625984191895
    6. ',int' → logprob: -14.008625984191895
    7. ']int' → logprob: -15.508625984191895
    8. ':int' → logprob: -15.633625984191895
    9. 'def' → logprob: -16.13362693786621
    10. '```' → logprob: -17.13362693786621

Token 298: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1277398318052292
    2. ')' → logprob: -2.127739906311035
    3. '   ' → logprob: -7.127739906311035
    4. ')
' → logprob: -12.252739906311035
    5. ' )
' → logprob: -12.627739906311035
    6. ' ' → logprob: -14.627739906311035
    7. ' )' → logprob: -15.752739906311035
    8. '  ' → logprob: -15.752739906311035
    9. ')

' → logprob: -16.87773895263672
    10. '())
' → logprob: -17.50273895263672

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029065461829304695
    2. 'ind' → logprob: -3.6540653705596924
    3. ' ind' → logprob: -5.9040656089782715
    4. 'def' → logprob: -11.154065132141113
    5. '
' → logprob: -11.654065132141113
    6. '```' → logprob: -12.404065132141113
    7. 'indent' → logprob: -13.654065132141113
    8. 'col' → logprob: -13.779065132141113
    9. '  ' → logprob: -14.029065132141113
    10. '[ind' → logprob: -14.029065132141113

Token 300: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' (adapté à ' ind') → logprob: -0.0004387750814203173
    2. ' ind' → logprob: -7.750438690185547
    3. '   ' → logprob: -11.750438690185547
    4. 'def' → logprob: -16.125438690185547
    5. '
' → logprob: -17.000438690185547
    6. 'indent' → logprob: -17.250438690185547
    7. '[ind' → logprob: -18.500438690185547
    8. '```' → logprob: -18.625438690185547
    9. '(ind' → logprob: -20.000438690185547
    10. 'col' → logprob: -20.125438690185547

Token 301: '_col' (ID: 7255)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01105442550033331
    2. ' =' → logprob: -4.511054515838623
    3. '_row' → logprob: -12.511054039001465
    4. '   ' → logprob: -14.261054039001465
    5. ',' → logprob: -14.511054039001465
    6. '_col' → logprob: -15.011054039001465
    7. '	' → logprob: -15.136054039001465
    8. '=_' → logprob: -15.386054039001465
    9. 'col' → logprob: -15.511054039001465
    10. '=row' → logprob: -15.636054039001465

Token 302: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141752064228058
    2. ' =' → logprob: -1.7014175653457642
    3. '=create' → logprob: -12.451417922973633
    4. ',' → logprob: -15.451417922973633
    5. ' ' → logprob: -16.576417922973633
    6. ')' → logprob: -17.826417922973633
    7. '   ' → logprob: -18.576417922973633
    8. 'create' → logprob: -19.076417922973633
    9. '[' → logprob: -19.326417922973633
    10. 'def' → logprob: -19.701417922973633

Token 303: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.47407984733581543
    2. ' create' → logprob: -0.9740798473358154
    3. '[' → logprob: -13.849080085754395
    4. '(create' → logprob: -14.474080085754395
    5. '[[' → logprob: -14.849080085754395
    6. '.create' → logprob: -15.599080085754395
    7. '   ' → logprob: -15.599080085754395
    8. ' ' → logprob: -15.849080085754395
    9. '	create' → logprob: -15.849080085754395
    10. '=create' → logprob: -15.974080085754395

Token 304: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -4.596781946020201e-05
    2. 'grid' → logprob: -10.000045776367188
    3. ' grid' → logprob: -15.875045776367188
    4. 'Grid' → logprob: -16.000045776367188
    5. '(H' → logprob: -16.375045776367188
    6. '<Grid' → logprob: -16.875045776367188
    7. '```' → logprob: -17.375045776367188
    8. '(grid' → logprob: -17.875045776367188
    9. '_gr' → logprob: -18.125045776367188
    10. 'def' → logprob: -18.375045776367188

Token 305: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -8.900034299585968e-05
    2. '(W' → logprob: -9.375088691711426
    3. '(' → logprob: -12.750088691711426
    4. 'H' → logprob: -14.000088691711426
    5. '(
' → logprob: -15.875088691711426
    6. ' (' → logprob: -16.750089645385742
    7. ',' → logprob: -18.000089645385742
    8. '   ' → logprob: -18.125089645385742
    9. ' H' → logprob: -18.625089645385742
    10. 'def' → logprob: -18.875089645385742

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008035530336201191
    2. ',W' → logprob: -7.375803470611572
    3. ' ,' → logprob: -8.75080394744873
    4. 'W' → logprob: -11.87580394744873
    5. '(W' → logprob: -12.00080394744873
    6. '   ' → logprob: -13.25080394744873
    7. ')' → logprob: -13.37580394744873
    8. ',H' → logprob: -14.62580394744873
    9. ' W' → logprob: -14.75080394744873
    10. ',
' → logprob: -14.87580394744873

Token 307: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.011097692884504795
    2. ' W' → logprob: -4.7610979080200195
    3. 'H' → logprob: -6.0110979080200195
    4. ' H' → logprob: -10.63609790802002
    5. ' ' → logprob: -13.51109790802002
    6. '   ' → logprob: -13.51109790802002
    7. ',' → logprob: -15.13609790802002
    8. '0' → logprob: -15.26109790802002
    9. '1' → logprob: -15.51109790802002
    10. '	W' → logprob: -15.51109790802002

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013332580216228962
    2. ')' → logprob: -4.513332366943359
    3. ' ,' → logprob: -6.763332366943359
    4. '0' → logprob: -6.888332366943359
    5. '(' → logprob: -10.26333236694336
    6. ')
' → logprob: -10.38833236694336
    7. '   ' → logprob: -10.76333236694336
    8. '),' → logprob: -11.88833236694336
    9. '(),' → logprob: -12.63833236694336
    10. 'def' → logprob: -12.88833236694336

Token 309: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.85366350505501e-05
    2. ' ' → logprob: -9.25009822845459
    3. '   ' → logprob: -13.12509822845459
    4. ')' → logprob: -15.62509822845459
    5. '  ' → logprob: -16.500099182128906
    6. '```' → logprob: -17.437599182128906
    7. '    ' → logprob: -17.625099182128906
    8. '۰' → logprob: -18.062599182128906
    9. '1' → logprob: -18.562599182128906
    10. '[' → logprob: -18.687599182128906

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.00001049041748
    4. '1' → logprob: -17.375011444091797
    5. '00' → logprob: -17.437511444091797
    6. ')' → logprob: -17.750011444091797
    7. '```' → logprob: -17.812511444091797
    8. '۰' → logprob: -18.000011444091797
    9. '  ' → logprob: -18.250011444091797
    10. '-' → logprob: -18.312511444091797

Token 311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3871363401412964
    2. ')
' → logprob: -1.1371363401412964
    3. '   ' → logprob: -8.262136459350586
    4. ')
' → logprob: -12.012136459350586
    5. ' )
' → logprob: -14.512136459350586
    6. ')`
' → logprob: -15.512136459350586
    7. ')

' → logprob: -15.887136459350586
    8. ' ' → logprob: -16.262136459350586
    9. 'def' → logprob: -16.262136459350586
    10. ' )' → logprob: -16.262136459350586

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06643027067184448
    2. 'ind' → logprob: -2.8164303302764893
    3. ' ind' → logprob: -5.56643009185791
    4. '```' → logprob: -7.81643009185791
    5. '
' → logprob: -9.06643009185791
    6. 'for' → logprob: -9.31643009185791
    7. ' for' → logprob: -11.81643009185791
    8. 'indent' → logprob: -12.44143009185791
    9. '``' → logprob: -12.69143009185791
    10. '  ' → logprob: -13.06643009185791

Token 313: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' (adapté à ' ind') → logprob: -0.024228837341070175
    2. 'for' → logprob: -3.774228811264038
    3. '   ' → logprob: -7.399229049682617
    4. ' ind' → logprob: -8.149229049682617
    5. ' for' → logprob: -9.899229049682617
    6. 'def' → logprob: -10.774229049682617
    7. 'indent' → logprob: -12.774229049682617
    8. 'col' → logprob: -12.899229049682617
    9. '
' → logprob: -13.274229049682617
    10. '```' → logprob: -13.524229049682617

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602262556552887
    2. '=' → logprob: -1.9102262258529663
    3. '   ' → logprob: -14.285225868225098
    4. ' ' → logprob: -14.785225868225098
    5. ',' → logprob: -15.035225868225098
    6. 'import' → logprob: -15.285225868225098
    7. 'def' → logprob: -15.410225868225098
    8. '  ' → logprob: -16.285226821899414
    9. 'for' → logprob: -17.035226821899414
    10. '=
' → logprob: -17.285226821899414

Token 315: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0552658773958683
    2. ' ' → logprob: -2.9302659034729004
    3. '1' → logprob: -7.9302659034729
    4. '   ' → logprob: -12.180265426635742
    5. 'increment' → logprob: -12.180265426635742
    6. ' -' → logprob: -12.617765426635742
    7. 'default' → logprob: -13.305265426635742
    8. '  ' → logprob: -13.867765426635742
    9. '-' → logprob: -13.930265426635742
    10. 'int' → logprob: -14.305265426635742

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013204771094024181
    2. '-' → logprob: -7.3763203620910645
    3. '1' → logprob: -7.5013203620910645
    4. ' ' → logprob: -9.001320838928223
    5. 'increment' → logprob: -12.126320838928223
    6. 'default' → logprob: -12.313820838928223
    7. ' -' → logprob: -12.813820838928223
    8. 'int' → logprob: -14.563820838928223
    9. '[' → logprob: -14.813820838928223
    10. '{' → logprob: -15.376320838928223

Token 317: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007331513334065676
    2. 'for' → logprob: -7.625733375549316
    3. ' for' → logprob: -8.375733375549316
    4. '
' → logprob: -11.500733375549316
    5. ',' → logprob: -13.250733375549316
    6. '    
' → logprob: -13.625733375549316
    7. '<|end|>' → logprob: -14.250733375549316
    8. ')' → logprob: -14.375733375549316
    9. '```' → logprob: -16.000732421875
    10. '	for' → logprob: -17.250732421875

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12404664605855942
    2. 'for' → logprob: -2.374046564102173
    3. ' for' → logprob: -3.749046564102173
    4. '
' → logprob: -11.999046325683594
    5. '<|end|>' → logprob: -12.249046325683594
    6. '```' → logprob: -12.749046325683594
    7. '	for' → logprob: -13.124046325683594
    8. '  ' → logprob: -14.374046325683594
    9. '    
' → logprob: -14.624046325683594
    10. ' ' → logprob: -14.874046325683594

Token 319: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002892258344218135
    2. ' for' → logprob: -8.250288963317871
    3. '   ' → logprob: -10.500288963317871
    4. '```' → logprob: -14.625288963317871
    5. '
' → logprob: -17.500289916992188
    6. '	for' → logprob: -18.125289916992188
    7. '    
' → logprob: -18.625289916992188
    8. 'def' → logprob: -18.625289916992188
    9. 'ind' → logprob: -19.500289916992188
    10. '<|end|>' → logprob: -19.875289916992188

Token 320: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.42897990345954895
    2. ' j' → logprob: -1.0539798736572266
    3. 'i' → logprob: -8.428979873657227
    4. ' i' → logprob: -10.053979873657227
    5. ' range' → logprob: -12.178979873657227
    6. 'range' → logprob: -12.428979873657227
    7. '_j' → logprob: -13.053979873657227
    8. '[j' → logprob: -13.053979873657227
    9. '   ' → logprob: -14.428979873657227
    10. '```' → logprob: -14.428979873657227

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004621187690645456
    2. 'in' → logprob: -5.3796210289001465
    3. 'range' → logprob: -14.379621505737305
    4. ' ' → logprob: -16.004621505737305
    5. '   ' → logprob: -16.254621505737305
    6. 'In' → logprob: -17.129621505737305
    7. '[' → logprob: -17.379621505737305
    8. ' range' → logprob: -17.754621505737305
    9. 'import' → logprob: -17.879621505737305
    10. '(' → logprob: -18.004621505737305

Token 322: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868718445301056
    2. ' range' → logprob: -1.1368718147277832
    3. '(range' → logprob: -14.761872291564941
    4. ' in' → logprob: -15.011872291564941
    5. 'in' → logprob: -16.011871337890625
    6. 'Range' → logprob: -18.636871337890625
    7. ' ' → logprob: -19.011871337890625
    8. '_range' → logprob: -19.136871337890625
    9. 'H' → logprob: -19.261871337890625
    10. '	range' → logprob: -19.261871337890625

Token 323: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0015315281925722957
    2. '(H' → logprob: -6.876531600952148
    3. 'range' → logprob: -8.001531600952148
    4. '(' → logprob: -9.001531600952148
    5. 'W' → logprob: -10.751531600952148
    6. '(range' → logprob: -11.376531600952148
    7. ' range' → logprob: -12.001531600952148
    8. 'H' → logprob: -14.626531600952148
    9. 'in' → logprob: -15.126531600952148
    10. ' (' → logprob: -15.376531600952148

Token 324: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0789889320731163
    2. '):
' → logprob: -2.578989028930664
    3. ':' → logprob: -9.578989028930664
    4. ')' → logprob: -10.828989028930664
    5. '   ' → logprob: -12.578989028930664
    6. '):

' → logprob: -13.078989028930664
    7. '):
' → logprob: -13.203989028930664
    8. ' ):' → logprob: -13.453989028930664
    9. ':
' → logprob: -14.828989028930664
    10. 'def' → logprob: -15.328989028930664

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025139504577964544
    2. 'ind' → logprob: -6.127513885498047
    3. ' ind' → logprob: -8.627513885498047
    4. '   ' → logprob: -8.877513885498047
    5. 'indent' → logprob: -12.377513885498047
    6. '
' → logprob: -13.002513885498047
    7. '[ind' → logprob: -13.627513885498047
    8. 'indt' → logprob: -14.627513885498047
    9. '           ' → logprob: -14.752513885498047
    10. '```' → logprob: -15.502513885498047

Token 326: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' (adapté à ' ind') → logprob: -0.2541399598121643
    2. ' ind' → logprob: -1.5041399002075195
    3. '   ' → logprob: -6.1291399002075195
    4. '       ' → logprob: -10.62913990020752
    5. 'indent' → logprob: -13.37913990020752
    6. '    ' → logprob: -14.25413990020752
    7. 'indt' → logprob: -14.25413990020752
    8. ' for' → logprob: -14.62913990020752
    9. '```' → logprob: -14.75413990020752
    10. '(ind' → logprob: -15.00413990020752

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245712742209435
    2. ' =' → logprob: -3.7732458114624023
    3. '   ' → logprob: -16.023244857788086
    4. '+=' → logprob: -16.773244857788086
    5. '=
' → logprob: -17.773244857788086
    6. '=

' → logprob: -18.648244857788086
    7. ' +=' → logprob: -18.773244857788086
    8. ' ' → logprob: -19.148244857788086
    9. '=int' → logprob: -20.273244857788086
    10. ',' → logprob: -20.273244857788086

Token 328: ' increment' (ID: 24032)
  Prédit: ' increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increment' → logprob: -0.20141948759555817
    2. 'increment' → logprob: -1.701419472694397
    3. '0' → logprob: -12.451419830322266
    4. ' incremental' → logprob: -13.826419830322266
    5. ' ' → logprob: -14.951419830322266
    6. ' increments' → logprob: -15.326419830322266
    7. '1' → logprob: -15.701419830322266
    8. '.increment' → logprob: -16.451419830322266
    9. ' incre' → logprob: -16.451419830322266
    10. 'in' → logprob: -16.576419830322266

Token 329: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.10021615028381348
    2. 'ind' → logprob: -2.3502161502838135
    3. '(ind' → logprob: -11.725215911865234
    4. '[ind' → logprob: -14.100215911865234
    5. ''ind' → logprob: -15.600215911865234
    6. 'Ind' → logprob: -16.225215911865234
    7. ' ind' → logprob: -16.225215911865234
    8. 'inds' → logprob: -16.350215911865234
    9. '_col' → logprob: -16.475215911865234
    10. 'j' → logprob: -17.225215911865234

Token 330: '(ind' (ID: 50964)
  Prédit: '(ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -0.00016146517009474337
    2. 'ind' → logprob: -8.750161170959473
    3. '0' → logprob: -13.000161170959473
    4. '[ind' → logprob: -14.750161170959473
    5. '(' → logprob: -15.625161170959473
    6. 'def' → logprob: -16.25016212463379
    7. '   ' → logprob: -18.50016212463379
    8. '1' → logprob: -18.50016212463379
    9. '(indent' → logprob: -19.00016212463379
    10. 'for' → logprob: -19.25016212463379

Token 331: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5764092803001404
    2. ')' → logprob: -0.8264092803001404
    3. '       ' → logprob: -7.701409339904785
    4. '   ' → logprob: -12.201409339904785
    5. '<|end|>' → logprob: -12.576409339904785
    6. ')
' → logprob: -12.701409339904785
    7. ' )
' → logprob: -13.201409339904785
    8. ' )' → logprob: -13.826409339904785
    9. ')

' → logprob: -14.201409339904785
    10. 'for' → logprob: -14.451409339904785

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01853886991739273
    2. 'for' → logprob: -4.143538951873779
    3. ' for' → logprob: -6.268538951873779
    4. '   ' → logprob: -7.518538951873779
    5. '```' → logprob: -10.268538475036621
    6. '
' → logprob: -11.018538475036621
    7. '<|end|>' → logprob: -12.018538475036621
    8. '           ' → logprob: -12.768538475036621
    9. ' ' → logprob: -13.768538475036621
    10. '	for' → logprob: -13.893538475036621

Token 333: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00026264708139933646
    2. ' for' → logprob: -8.250262260437012
    3. '   ' → logprob: -13.500262260437012
    4. '       ' → logprob: -19.875263214111328
    5. '	for' → logprob: -20.375263214111328
    6. '
' → logprob: -21.250263214111328
    7. '```' → logprob: -22.125263214111328
    8. ' ' → logprob: -22.625263214111328
    9. '  ' → logprob: -24.250263214111328
    10. '    
' → logprob: -24.625263214111328

Token 334: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023246407508850098
    2. ' i' → logprob: -3.7732462882995605
    3. ' in' → logprob: -15.398246765136719
    4. '_i' → logprob: -15.773246765136719
    5. '   ' → logprob: -16.27324676513672
    6. 'I' → logprob: -16.27324676513672
    7. '```' → logprob: -16.27324676513672
    8. '`' → logprob: -16.52324676513672
    9. '	i' → logprob: -16.77324676513672
    10. 'import' → logprob: -17.02324676513672

Token 335: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007607339881360531
    2. 'in' → logprob: -4.882607460021973
    3. '   ' → logprob: -14.507607460021973
    4. '    ' → logprob: -15.632607460021973
    5. ' ' → logprob: -16.007606506347656
    6. '	in' → logprob: -16.257606506347656
    7. '       ' → logprob: -16.382606506347656
    8. '        ' → logprob: -16.507606506347656
    9. 'range' → logprob: -16.757606506347656
    10. '```' → logprob: -17.132606506347656

Token 336: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326615810394287
    2. ' range' → logprob: -1.3132661581039429
    3. '(range' → logprob: -13.438265800476074
    4. 'H' → logprob: -13.563265800476074
    5. ' in' → logprob: -14.063265800476074
    6. '(H' → logprob: -14.563265800476074
    7. 'in' → logprob: -15.438265800476074
    8. '0' → logprob: -17.06326675415039
    9. ' H' → logprob: -17.93826675415039
    10. '(' → logprob: -18.43826675415039

Token 337: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0015791363548487425
    2. 'H' → logprob: -6.501579284667969
    3. 'range' → logprob: -9.876579284667969
    4. ' range' → logprob: -10.751579284667969
    5. '(' → logprob: -13.376579284667969
    6. ' (' → logprob: -14.001579284667969
    7. ' H' → logprob: -14.001579284667969
    8. '0' → logprob: -14.251579284667969
    9. '   ' → logprob: -17.37657928466797
    10. '1' → logprob: -17.62657928466797

Token 338: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15333250164985657
    2. ':' → logprob: -2.153332471847534
    3. '):
' → logprob: -3.653332471847534
    4. ':
' → logprob: -9.528332710266113
    5. '   ' → logprob: -10.403332710266113
    6. '       ' → logprob: -10.903332710266113
    7. ')' → logprob: -11.528332710266113
    8. ',' → logprob: -12.278332710266113
    9. 'ind' → logprob: -12.403332710266113
    10. '           ' → logprob: -12.653332710266113

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021038930863142014
    2. ' ind' → logprob: -4.396039009094238
    3. 'ind' → logprob: -4.771039009094238
    4. '```' → logprob: -12.146039009094238
    5. '(ind' → logprob: -12.771039009094238
    6. '               ' → logprob: -13.021039009094238
    7. '[ind' → logprob: -13.021039009094238
    8. '
' → logprob: -13.021039009094238
    9. ',' → logprob: -13.021039009094238
    10. 'indt' → logprob: -14.146039009094238

Token 340: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' (adapté à ' ind') → logprob: -0.38689500093460083
    2. ' ind' → logprob: -1.136894941329956
    3. '           ' → logprob: -10.886895179748535
    4. '[ind' → logprob: -13.261895179748535
    5. '(ind' → logprob: -13.886895179748535
    6. '               ' → logprob: -13.886895179748535
    7. 'indent' → logprob: -14.511895179748535
    8. '       ' → logprob: -14.636895179748535
    9. '```' → logprob: -14.636895179748535
    10. '   ' → logprob: -16.38689422607422

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1517960956552997e-05
    2. '=' → logprob: -11.625011444091797
    3. ' ,' → logprob: -13.125011444091797
    4. ' =' → logprob: -16.250011444091797
    5. 'ind' → logprob: -16.250011444091797
    6. '   ' → logprob: -16.500011444091797
    7. ',j' → logprob: -16.875011444091797
    8. '[ind' → logprob: -16.875011444091797
    9. ',i' → logprob: -17.250011444091797
    10. ' ind' → logprob: -17.750011444091797

Token 342: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.12694942951202393
    2. 'ind' → logprob: -2.1269493103027344
    3. 'i' → logprob: -11.001949310302734
    4. ' i' → logprob: -12.876949310302734
    5. ',' → logprob: -14.376949310302734
    6. '[ind' → logprob: -15.001949310302734
    7. '(ind' → logprob: -15.251949310302734
    8. 'indt' → logprob: -15.251949310302734
    9. 'col' → logprob: -16.251949310302734
    10. 'j' → logprob: -16.376949310302734

Token 343: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0015293825417757034
    2. ',' → logprob: -6.876529216766357
    3. '_row' → logprob: -7.751529216766357
    4. 'col' → logprob: -10.251529693603516
    5. ',_' → logprob: -10.751529693603516
    6. '_column' → logprob: -12.376529693603516
    7. ',col' → logprob: -12.501529693603516
    8. '_,' → logprob: -14.626529693603516
    9. '	col' → logprob: -15.251529693603516
    10. ' ,' → logprob: -16.126529693603516

Token 344: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013464801304508
    2. '[' → logprob: -9.250134468078613
    3. ',i' → logprob: -11.500134468078613
    4. 'i' → logprob: -11.500134468078613
    5. '<|end|>' → logprob: -11.750134468078613
    6. '=' → logprob: -13.500134468078613
    7. '[I' → logprob: -13.500134468078613
    8. ' [' → logprob: -13.500134468078613
    9. '(i' → logprob: -13.625134468078613
    10. ',' → logprob: -13.875134468078613

Token 345: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00029494395130313933
    2. '[j' → logprob: -8.87529468536377
    3. ']' → logprob: -9.62529468536377
    4. ' ][' → logprob: -10.25029468536377
    5. '[i' → logprob: -10.37529468536377
    6. '],' → logprob: -11.50029468536377
    7. ',' → logprob: -12.37529468536377
    8. ',j' → logprob: -12.62529468536377
    9. ']][' → logprob: -13.75029468536377
    10. '   ' → logprob: -14.12529468536377

Token 346: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1472419600977446e-06
    2. ' j' → logprob: -14.000000953674316
    3. '[j' → logprob: -16.625001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '	j' → logprob: -17.000001907348633
    6. 'i' → logprob: -17.000001907348633
    7. '```' → logprob: -17.250001907348633
    8. ',j' → logprob: -17.875001907348633
    9. ' ' → logprob: -18.000001907348633
    10. '  ' → logprob: -18.375001907348633

Token 347: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.2813657820224762
    2. ',' → logprob: -1.4063657522201538
    3. ' ,' → logprob: -9.156365394592285
    4. ']' → logprob: -9.531365394592285
    5. ' ],' → logprob: -10.656365394592285
    6. '),' → logprob: -12.406365394592285
    7. ']=' → logprob: -13.031365394592285
    8. '=' → logprob: -13.281365394592285
    9. ',j' → logprob: -13.656365394592285
    10. 'ind' → logprob: -13.781365394592285

Token 348: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.18190999329090118
    2. 'values' → logprob: -1.8069100379943848
    3. ' mass' → logprob: -7.181910037994385
    4. 'process' → logprob: -7.306910037994385
    5. ' process' → logprob: -7.306910037994385
    6. 'mass' → logprob: -10.306909561157227
    7. ' ind' → logprob: -12.056909561157227
    8. 'ind' → logprob: -12.556909561157227
    9. 'value' → logprob: -13.056909561157227
    10. '(values' → logprob: -13.181909561157227

Token 349: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.38748255372047424
    2. '_row' → logprob: -1.1374825239181519
    3. ',' → logprob: -7.762482643127441
    4. ',_' → logprob: -10.012482643127441
    5. '_,' → logprob: -10.012482643127441
    6. 'col' → logprob: -10.512482643127441
    7. '_' → logprob: -10.762482643127441
    8. '_cell' → logprob: -11.262482643127441
    9. 'row' → logprob: -12.387482643127441
    10. '   ' → logprob: -12.637482643127441

Token 350: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519293427467346
    2. ' =' → logprob: -1.5019292831420898
    3. '   ' → logprob: -16.001930236816406
    4. ' ' → logprob: -16.626930236816406
    5. ',' → logprob: -17.751930236816406
    6. '       ' → logprob: -18.251930236816406
    7. ')' → logprob: -18.501930236816406
    8. '           ' → logprob: -19.251930236816406
    9. ')=' → logprob: -19.751930236816406
    10. '=
' → logprob: -19.751930236816406

Token 351: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.5759395360946655
    2. ' process' → logprob: -0.8259395360946655
    3. '	process' → logprob: -16.325939178466797
    4. '(process' → logprob: -17.325939178466797
    5. '.process' → logprob: -17.700939178466797
    6. ' proces' → logprob: -18.450939178466797
    7. 'proces' → logprob: -18.825939178466797
    8. 'rocess' → logprob: -18.950939178466797
    9. '_process' → logprob: -18.950939178466797
    10. '   ' → logprob: -21.075939178466797

Token 352: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0022192494943737984
    2. '_row' → logprob: -6.377219200134277
    3. 'col' → logprob: -7.752219200134277
    4. '_column' → logprob: -9.377219200134277
    5. '_cell' → logprob: -13.877219200134277
    6. 'column' → logprob: -14.877219200134277
    7. 'row' → logprob: -15.252219200134277
    8. '   ' → logprob: -15.377219200134277
    9. ' col' → logprob: -15.627219200134277
    10. 'process' → logprob: -16.002220153808594

Token 353: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -2.4391956685576588e-05
    2. 'cell' → logprob: -10.750024795532227
    3. '(m' → logprob: -13.625024795532227
    4. 'Cell' → logprob: -14.875024795532227
    5. '_mass' → logprob: -15.250024795532227
    6. '_cells' → logprob: -15.250024795532227
    7. '_col' → logprob: -15.250024795532227
    8. ' cell' → logprob: -16.000024795532227
    9. '   ' → logprob: -16.250024795532227
    10. '_column' → logprob: -16.500024795532227

Token 354: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -13.875000953674316
    3. 'm' → logprob: -16.500001907348633
    4. '(
' → logprob: -17.750001907348633
    5. ' (' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.875001907348633
    7. '```' → logprob: -19.000001907348633
    8. '	m' → logprob: -20.375001907348633
    9. ',m' → logprob: -20.750001907348633
    10. '`' → logprob: -21.000001907348633

Token 355: 'ass' (ID: 456)
  Prédit: 'ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -5.526570384972729e-05
    2. 'mass' → logprob: -10.250055313110352
    3. ',' → logprob: -11.250055313110352
    4. '[' → logprob: -13.500055313110352
    5. ' mass' → logprob: -13.875055313110352
    6. '_mass' → logprob: -14.000055313110352
    7. '   ' → logprob: -14.875055313110352
    8. ')' → logprob: -15.000055313110352
    9. ']' → logprob: -15.125055313110352
    10. '[i' → logprob: -15.250055313110352

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013585673877969384
    2. ',i' → logprob: -7.001358509063721
    3. ' ,' → logprob: -7.751358509063721
    4. '   ' → logprob: -11.126358985900879
    5. ',m' → logprob: -13.751358985900879
    6. '[i' → logprob: -15.251358985900879
    7. '           ' → logprob: -15.376358985900879
    8. '       ' → logprob: -15.876358985900879
    9. '  ' → logprob: -16.376358032226562
    10. '(i' → logprob: -16.626358032226562

Token 357: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1128736287355423
    2. ' i' → logprob: -2.2378735542297363
    3. '   ' → logprob: -9.987874031066895
    4. ' ' → logprob: -13.487874031066895
    5. 'ind' → logprob: -13.612874031066895
    6. ' ind' → logprob: -13.987874031066895
    7. ',' → logprob: -14.237874031066895
    8. '  ' → logprob: -14.987874031066895
    9. '    ' → logprob: -15.487874031066895
    10. '	i' → logprob: -16.112873077392578

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004408015520311892
    2. ',j' → logprob: -8.37544059753418
    3. ' ,' → logprob: -8.50044059753418
    4. '           ' → logprob: -12.75044059753418
    5. '       ' → logprob: -13.37544059753418
    6. '   ' → logprob: -13.87544059753418
    7. '[' → logprob: -14.87544059753418
    8. '[j' → logprob: -15.25044059753418
    9. '```' → logprob: -15.37544059753418
    10. 'j' → logprob: -15.87544059753418

Token 359: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014165391214191914
    2. ' j' → logprob: -4.26416540145874
    3. '   ' → logprob: -13.639164924621582
    4. 'ind' → logprob: -15.389164924621582
    5. ' ' → logprob: -16.1391658782959
    6. ',' → logprob: -16.3891658782959
    7. ',j' → logprob: -16.5141658782959
    8. ' ind' → logprob: -16.6391658782959
    9. '	j' → logprob: -16.8891658782959
    10. '    ' → logprob: -17.1391658782959

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.947715832618997e-05
    2. ' ,' → logprob: -9.375089645385742
    3. 'ind' → logprob: -12.625089645385742
    4. '   ' → logprob: -14.500089645385742
    5. ' ind' → logprob: -15.625089645385742
    6. '[ind' → logprob: -15.750089645385742
    7. '),' → logprob: -16.125089645385742
    8. ')' → logprob: -16.250089645385742
    9. '```' → logprob: -16.750089645385742
    10. '(ind' → logprob: -17.000089645385742

Token 361: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.0485873706638813
    2. ' ind' → logprob: -3.0485873222351074
    3. 'indent' → logprob: -18.173587799072266
    4. '[ind' → logprob: -19.548587799072266
    5. '(ind' → logprob: -20.548587799072266
    6. 'inds' → logprob: -20.923587799072266
    7. '   ' → logprob: -20.923587799072266
    8. '.ind' → logprob: -21.923587799072266
    9. '_ind' → logprob: -22.048587799072266
    10. ' indent' → logprob: -22.423587799072266

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.849109119386412e-06
    2. ' ,' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.875009536743164
    4. ')' → logprob: -15.625009536743164
    5. 'ind' → logprob: -15.625009536743164
    6. '[ind' → logprob: -16.000009536743164
    7. '       ' → logprob: -17.375009536743164
    8. '_,' → logprob: -18.375009536743164
    9. '```' → logprob: -18.375009536743164
    10. '           ' → logprob: -18.625009536743164

Token 363: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.4740772247314453
    2. 'ind' → logprob: -0.9740772247314453
    3. '[ind' → logprob: -15.474077224731445
    4. '(ind' → logprob: -17.974077224731445
    5. 'inds' → logprob: -18.224077224731445
    6. 'indent' → logprob: -18.474077224731445
    7. '   ' → logprob: -18.974077224731445
    8. '_ind' → logprob: -19.349077224731445
    9. ' ' → logprob: -19.599077224731445
    10. '.ind' → logprob: -19.599077224731445

Token 364: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0009181279456242919
    2. '_row' → logprob: -7.000917911529541
    3. 'col' → logprob: -12.2509183883667
    4. '_column' → logprob: -13.3759183883667
    5. '_cols' → logprob: -17.000917434692383
    6. '_COL' → logprob: -17.250917434692383
    7. ',' → logprob: -17.375917434692383
    8. '_' → logprob: -17.625917434692383
    9. '_columns' → logprob: -17.750917434692383
    10. '_rows' → logprob: -17.875917434692383

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. ' ,' → logprob: -11.750015258789062
    3. 'values' → logprob: -13.500015258789062
    4. ',value' → logprob: -13.625015258789062
    5. '   ' → logprob: -13.750015258789062
    6. '```' → logprob: -13.875015258789062
    7. ',m' → logprob: -14.625015258789062
    8. ',col' → logprob: -15.000015258789062
    9. ',d' → logprob: -15.125015258789062
    10. ')' → logprob: -15.500015258789062

Token 366: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.12692831456661224
    2. ' values' → logprob: -2.1269283294677734
    3. '	values' → logprob: -16.001928329467773
    4. '(values' → logprob: -17.126928329467773
    5. '.values' → logprob: -17.376928329467773
    6. '_values' → logprob: -18.626928329467773
    7. 'value' → logprob: -19.001928329467773
    8. 'Values' → logprob: -19.626928329467773
    9. '-values' → logprob: -19.626928329467773
    10. '   ' → logprob: -19.626928329467773

Token 367: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.00020973898062948138
    2. '_row' → logprob: -8.50020980834961
    3. 'col' → logprob: -12.37520980834961
    4. ',' → logprob: -14.37520980834961
    5. ')' → logprob: -14.75020980834961
    6. '_cell' → logprob: -15.87520980834961
    7. '_column' → logprob: -15.87520980834961
    8. '   ' → logprob: -16.25020980834961
    9. '_' → logprob: -16.37520980834961
    10. '```' → logprob: -16.50020980834961

Token 368: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029761141166090965
    2. ')
' → logprob: -3.5297610759735107
    3. '   ' → logprob: -11.52976131439209
    4. '       ' → logprob: -14.90476131439209
    5. ' )' → logprob: -16.029760360717773
    6. ')
' → logprob: -16.154760360717773
    7. ')

' → logprob: -16.404760360717773
    8. ' ' → logprob: -17.029760360717773
    9. 'def' → logprob: -17.029760360717773
    10. '           ' → logprob: -17.404760360717773

Token 369: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3450462520122528
    2. 'def' → logprob: -1.3450462818145752
    3. '<|end|>' → logprob: -3.720046281814575
    4. ')' → logprob: -5.845046043395996
    5. '<|end|>' → logprob: -6.720046043395996
    6. '``' → logprob: -7.095046043395996
    7. '
' → logprob: -8.220046043395996
    8. '\' → logprob: -8.345046043395996
    9. '   ' → logprob: -8.470046043395996
    10. ' def' → logprob: -8.595046043395996

Token 370: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4023917317390442
    2. '```' → logprob: -1.4023916721343994
    3. 'def' → logprob: -2.6523916721343994
    4. 'return' (adapté à ' return') → logprob: -5.2773919105529785
    5. '       ' → logprob: -5.5273919105529785
    6. '<|end|>' → logprob: -6.0273919105529785
    7. '``' → logprob: -7.0273919105529785
    8. '\' → logprob: -7.9023919105529785
    9. ')' → logprob: -8.27739143371582
    10. '`' → logprob: -8.90239143371582

Token 371: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.6931484341621399
    2. ' ind' → logprob: -0.6931484341621399
    3. '(ind' → logprob: -13.818148612976074
    4. '[ind' → logprob: -16.193147659301758
    5. 'indent' → logprob: -16.568147659301758
    6. '_ind' → logprob: -17.568147659301758
    7. ''ind' → logprob: -18.318147659301758
    8. '.ind' → logprob: -19.193147659301758
    9. ' indent' → logprob: -19.443147659301758
    10. '   ' → logprob: -19.818147659301758

Token 372: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -5.466968650580384e-05
    2. 'col' → logprob: -10.625054359436035
    3. '_ind' → logprob: -11.125054359436035
    4. ',' → logprob: -12.000054359436035
    5. '_row' → logprob: -12.875054359436035
    6. '_column' → logprob: -13.250054359436035
    7. 'ind' → logprob: -13.500054359436035
    8. '_' → logprob: -13.625054359436035
    9. '_,' → logprob: -13.625054359436035
    10. '_COL' → logprob: -14.875054359436035

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3856492842023727e-06
    2. 'values' → logprob: -14.000000953674316
    3. ' ,' → logprob: -15.125000953674316
    4. 'def' → logprob: -16.500001907348633
    5. '.values' → logprob: -16.750001907348633
    6. ',
' → logprob: -17.375001907348633
    7. '(values' → logprob: -18.250001907348633
    8. '<|end|>' → logprob: -18.500001907348633
    9. '   ' → logprob: -19.250001907348633
    10. ' values' → logprob: -19.500001907348633

Token 374: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.5759401917457581
    2. 'values' → logprob: -0.8259401917457581
    3. '	values' → logprob: -15.200940132141113
    4. '(values' → logprob: -15.200940132141113
    5. '.values' → logprob: -16.07594108581543
    6. '_values' → logprob: -16.20094108581543
    7. 'Values' → logprob: -17.95094108581543
    8. 'value' → logprob: -18.32594108581543
    9. ' ' → logprob: -18.57594108581543
    10. ' valores' → logprob: -18.57594108581543

Token 375: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0002222516923211515
    2. '_row' → logprob: -8.500222206115723
    3. '_' → logprob: -12.000222206115723
    4. 'default' → logprob: -12.625222206115723
    5. '_default' → logprob: -12.750222206115723
    6. 'col' → logprob: -13.250222206115723
    7. '_values' → logprob: -14.250222206115723
    8. '_val' → logprob: -14.375222206115723
    9. '```' → logprob: -14.375222206115723
    10. '_cols' → logprob: -14.500222206115723

Token 376: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013488641707226634
    2. '```' → logprob: -9.250134468078613
    3. '
' → logprob: -10.250134468078613
    4. '<|end|>' → logprob: -13.625134468078613
    5. '``' → logprob: -14.125134468078613
    6. ' def' → logprob: -14.625134468078613
    7. ':def' → logprob: -15.000134468078613
    8. 'python' → logprob: -15.500134468078613
    9. '    
' → logprob: -15.625134468078613
    10. 'ndef' → logprob: -16.75013542175293

Token 377: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023103614803403616
    2. '```' → logprob: -6.127310276031494
    3. ':def' → logprob: -10.252310752868652
    4. 'python' → logprob: -10.252310752868652
    5. 'ndef' → logprob: -11.502310752868652
    6. '
' → logprob: -11.752310752868652
    7. '-def' → logprob: -12.127310752868652
    8. 'The' → logprob: -12.377310752868652
    9. '``' → logprob: -12.502310752868652
    10. 'Python' → logprob: -12.877310752868652

Token 378: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.06995232403278351
    2. ' process' → logprob: -2.6949522495269775
    3. 'def' → logprob: -11.194952011108398
    4. '	process' → logprob: -14.444952011108398
    5. ' def' → logprob: -14.944952011108398
    6. 'increment' → logprob: -15.069952011108398
    7. '_process' → logprob: -15.319952011108398
    8. '(process' → logprob: -15.319952011108398
    9. '
' → logprob: -15.319952011108398
    10. ' ' → logprob: -16.0699520111084

Token 379: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0002695608709473163
    2. '_row' → logprob: -8.250269889831543
    3. '_cell' → logprob: -12.500269889831543
    4. '_column' → logprob: -12.875269889831543
    5. '_' → logprob: -13.750269889831543
    6. 'col' → logprob: -14.375269889831543
    7. ''_' → logprob: -16.500268936157227
    8. '_line' → logprob: -16.625268936157227
    9. '"_' → logprob: -17.125268936157227
    10. '_def' → logprob: -17.500268936157227

Token 380: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -1.8624639324116288e-06
    2. '_cells' → logprob: -14.125001907348633
    3. 'cell' → logprob: -14.625001907348633
    4. 'def' → logprob: -14.750001907348633
    5. '_CELL' → logprob: -17.500001907348633
    6. '_Cell' → logprob: -17.625001907348633
    7. '_row' → logprob: -17.875001907348633
    8. '<Cell' → logprob: -18.125001907348633
    9. '
' → logprob: -18.625001907348633
    10. 'Cell' → logprob: -18.750001907348633

Token 381: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: 0.0
    2. '(' → logprob: -17.25
    3. 'def' → logprob: -19.125
    4. '(cell' → logprob: -19.875
    5. ' (' → logprob: -20.0
    6. '(
' → logprob: -20.875
    7. '((' → logprob: -21.375
    8. '```' → logprob: -21.625
    9. 'mass' → logprob: -22.375
    10. '   ' → logprob: -22.625

Token 382: 'ass' (ID: 456)
  Prédit: 'ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -7.226628895296017e-06
    2. 'mass' → logprob: -12.000007629394531
    3. '(m' → logprob: -15.250007629394531
    4. '(' → logprob: -15.250007629394531
    5. '_mass' → logprob: -15.875007629394531
    6. ' mass' → logprob: -16.25000762939453
    7. 'a' → logprob: -16.62500762939453
    8. '   ' → logprob: -16.87500762939453
    9. '=' → logprob: -17.12500762939453
    10. '[' → logprob: -17.50000762939453

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.988221684878226e-06
    2. ' ,' → logprob: -12.500006675720215
    3. ',i' → logprob: -12.750006675720215
    4. '   ' → logprob: -16.00000762939453
    5. '(i' → logprob: -16.25000762939453
    6. ',m' → logprob: -17.50000762939453
    7. 'def' → logprob: -17.50000762939453
    8. '[i' → logprob: -18.37500762939453
    9. '_,' → logprob: -19.62500762939453
    10. ',
' → logprob: -19.62500762939453

Token 384: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141343772411346
    2. ' i' → logprob: -1.7014133930206299
    3. '   ' → logprob: -16.826414108276367
    4. ' ' → logprob: -17.451414108276367
    5. 'j' → logprob: -18.076414108276367
    6. '	i' → logprob: -19.201414108276367
    7. '  ' → logprob: -20.076414108276367
    8. ' j' → logprob: -20.201414108276367
    9. ',' → logprob: -20.326414108276367
    10. ')' → logprob: -20.826414108276367

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.015305552864447e-05
    2. ',j' → logprob: -10.000060081481934
    3. ' ,' → logprob: -11.250060081481934
    4. 'def' → logprob: -13.875060081481934
    5. '   ' → logprob: -15.125060081481934
    6. '[],' → logprob: -15.750060081481934
    7. '[j' → logprob: -16.12506103515625
    8. ',i' → logprob: -16.62506103515625
    9. '_,' → logprob: -17.12506103515625
    10. '[' → logprob: -17.37506103515625

Token 386: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0024826733861118555
    2. ' j' → logprob: -6.002482891082764
    3. 'i' → logprob: -11.877482414245605
    4. '   ' → logprob: -16.127483367919922
    5. ' i' → logprob: -17.002483367919922
    6. '	j' → logprob: -17.752483367919922
    7. ' ' → logprob: -18.752483367919922
    8. 'ind' → logprob: -18.877483367919922
    9. ',j' → logprob: -18.877483367919922
    10. '$j' → logprob: -19.627483367919922

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -13.12500286102295
    3. '   ' → logprob: -14.37500286102295
    4. 'ind' → logprob: -17.500001907348633
    5. 'def' → logprob: -17.875001907348633
    6. '[ind' → logprob: -18.000001907348633
    7. '(ind' → logprob: -18.000001907348633
    8. '_,' → logprob: -18.625001907348633
    9. ',
' → logprob: -19.500001907348633
    10. '):' → logprob: -20.250001907348633

Token 388: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.16022473573684692
    2. 'ind' → logprob: -1.9102246761322021
    3. '[ind' → logprob: -15.535224914550781
    4. '   ' → logprob: -15.785224914550781
    5. 'indent' → logprob: -16.41022491455078
    6. '(ind' → logprob: -16.66022491455078
    7. ' ' → logprob: -17.03522491455078
    8. '_ind' → logprob: -17.53522491455078
    9. ' indent' → logprob: -17.66022491455078
    10. '.ind' → logprob: -18.16022491455078

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3856492842023727e-06
    2. '   ' → logprob: -14.000000953674316
    3. ' ,' → logprob: -14.750000953674316
    4. ',
' → logprob: -17.625001907348633
    5. '):' → logprob: -18.375001907348633
    6. 'def' → logprob: -19.250001907348633
    7. ',int' → logprob: -19.750001907348633
    8. ',m' → logprob: -19.875001907348633
    9. ' ' → logprob: -20.250001907348633
    10. '  ' → logprob: -20.250001907348633

Token 390: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.3868737816810608
    2. ' ind' → logprob: -1.136873722076416
    3. 'col' → logprob: -14.011874198913574
    4. '   ' → logprob: -14.261874198913574
    5. ' col' → logprob: -14.261874198913574
    6. ' ' → logprob: -15.136874198913574
    7. '[ind' → logprob: -15.761874198913574
    8. '  ' → logprob: -16.761873245239258
    9. 'indent' → logprob: -17.136873245239258
    10. '(ind' → logprob: -17.761873245239258

Token 391: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0002807623823173344
    2. ',' → logprob: -8.250280380249023
    3. ',col' → logprob: -11.875280380249023
    4. ',_' → logprob: -12.000280380249023
    5. 'col' → logprob: -12.375280380249023
    6. '_column' → logprob: -14.000280380249023
    7. '   ' → logprob: -14.875280380249023
    8. '_,' → logprob: -14.875280380249023
    9. '_row' → logprob: -15.250280380249023
    10. '_COL' → logprob: -16.250280380249023

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ' ,' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.37500286102295
    4. ',
' → logprob: -17.750003814697266
    5. ',m' → logprob: -18.000003814697266
    6. 'def' → logprob: -18.250003814697266
    7. ',j' → logprob: -18.750003814697266
    8. ',int' → logprob: -19.000003814697266
    9. ',i' → logprob: -19.000003814697266
    10. ',row' → logprob: -19.125003814697266

Token 393: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.04860156774520874
    2. ' values' → logprob: -3.0486016273498535
    3. 'i' → logprob: -12.298601150512695
    4. ' ' → logprob: -12.923601150512695
    5. '   ' → logprob: -13.298601150512695
    6. 'ind' → logprob: -13.298601150512695
    7. '	values' → logprob: -13.673601150512695
    8. ' i' → logprob: -13.923601150512695
    9. '  ' → logprob: -14.923601150512695
    10. 'value' → logprob: -14.923601150512695

Token 394: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0008136780234053731
    2. ',' → logprob: -7.2508134841918945
    3. '_cell' → logprob: -10.000813484191895
    4. '_row' → logprob: -10.375813484191895
    5. '):' → logprob: -12.125813484191895
    6. ',_' → logprob: -12.125813484191895
    7. '   ' → logprob: -12.250813484191895
    8. '):
' → logprob: -12.625813484191895
    9. 'col' → logprob: -12.875813484191895
    10. '_column' → logprob: -13.625813484191895

Token 395: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04861529543995857
    2. '):' → logprob: -3.0486152172088623
    3. '):
' → logprob: -10.548615455627441
    4. '):

' → logprob: -14.048615455627441
    5. ')' → logprob: -14.548615455627441
    6. '   ' → logprob: -14.798615455627441
    7. ':' → logprob: -16.423614501953125
    8. ' ):
' → logprob: -17.548614501953125
    9. '():
' → logprob: -18.423614501953125
    10. ':
' → logprob: -18.923614501953125

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.0484450437361374e-05
    2. ' if' → logprob: -10.500040054321289
    3. '```' → logprob: -11.375040054321289
    4. 'if' → logprob: -14.000040054321289
    5. '    
' → logprob: -15.875040054321289
    6. '`' → logprob: -16.50004005432129
    7. ')' → logprob: -16.75004005432129
    8. '       ' → logprob: -16.87504005432129
    9. '   ' → logprob: -16.87504005432129
    10. '
' → logprob: -16.87504005432129

Token 397: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16679148375988007
    2. '   ' → logprob: -1.9167914390563965
    3. ' if' → logprob: -5.0417914390563965
    4. '```' → logprob: -9.416791915893555
    5. '	if' → logprob: -14.166791915893555
    6. 'If' → logprob: -14.791791915893555
    7. ' ' → logprob: -15.041791915893555
    8. '  ' → logprob: -15.416791915893555
    9. 'def' → logprob: -15.541791915893555
    10. '    ' → logprob: -15.916791915893555

Token 398: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06196925416588783
    2. 'is' → logprob: -2.81196928024292
    3. 'mass' → logprob: -14.061968803405762
    4. '(is' → logprob: -15.561968803405762
    5. 'not' → logprob: -15.561968803405762
    6. ' mass' → logprob: -16.311969757080078
    7. ' ' → logprob: -16.311969757080078
    8. ' not' → logprob: -16.436969757080078
    9. '	is' → logprob: -16.436969757080078
    10. '#' → logprob: -17.186969757080078

Token 399: '_black' (ID: 92024)
  Prédit: '_black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_black' → logprob: -1.9361264946837764e-07
    2. 'black' → logprob: -17.0
    3. '_' → logprob: -17.25
    4. '_white' → logprob: -17.25
    5. '_col' → logprob: -18.375
    6. 'Black' → logprob: -19.0
    7. '_blank' → logprob: -19.25
    8. '_BLACK' → logprob: -19.25
    9. ' black' → logprob: -20.625
    10. '```' → logprob: -21.125

Token 400: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -9.088346359931165e-07
    2. '_cells' → logprob: -14.750000953674316
    3. 'cell' → logprob: -15.875000953674316
    4. '_Cell' → logprob: -16.0
    5. '_CELL' → logprob: -16.5
    6. '_' → logprob: -16.875
    7. '<Cell' → logprob: -17.0
    8. ' _' → logprob: -17.75
    9. ' cell' → logprob: -18.0
    10. '```' → logprob: -18.0

Token 401: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.25
    3. ' (' → logprob: -19.375
    4. '#' → logprob: -20.0
    5. '	m' → logprob: -20.5
    6. '(mask' → logprob: -20.5
    7. ')' → logprob: -20.625
    8. '(M' → logprob: -20.875
    9. '(
' → logprob: -21.25
    10. '[m' → logprob: -21.375

Token 402: 'ass' (ID: 456)
  Prédit: 'ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.08911187201738358
    2. 'mass' → logprob: -2.464111804962158
    3. '(m' → logprob: -9.589112281799316
    4. ' mass' → logprob: -9.589112281799316
    5. '[m' → logprob: -10.464112281799316
    6. '_mass' → logprob: -13.089112281799316
    7. 'as' → logprob: -14.214112281799316
    8. 'm' → logprob: -14.464112281799316
    9. '.mass' → logprob: -14.714112281799316
    10. 'cell' → logprob: -14.714112281799316

Token 403: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006156971794553101
    2. '[m' → logprob: -7.87561559677124
    3. '[j' → logprob: -8.500616073608398
    4. '[ind' → logprob: -11.500616073608398
    5. ')[' → logprob: -11.625616073608398
    6. '[' → logprob: -12.250616073608398
    7. '   ' → logprob: -13.000616073608398
    8. ')' → logprob: -13.000616073608398
    9. '[I' → logprob: -14.625616073608398
    10. ' [' → logprob: -14.875616073608398

Token 404: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008846310898661613
    2. '[j' → logprob: -5.383846282958984
    3. '[i' → logprob: -5.508846282958984
    4. '[' → logprob: -10.258846282958984
    5. ' ][' → logprob: -10.258846282958984
    6. ']' → logprob: -10.758846282958984
    7. '   ' → logprob: -10.883846282958984
    8. '[col' → logprob: -11.258846282958984
    9. ')[' → logprob: -11.883846282958984
    10. '       ' → logprob: -12.383846282958984

Token 405: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.726595241460018e-05
    2. 'i' → logprob: -10.37503719329834
    3. '[j' → logprob: -13.00003719329834
    4. ']' → logprob: -14.12503719329834
    5. '][' → logprob: -14.12503719329834
    6. ' j' → logprob: -14.37503719329834
    7. ')' → logprob: -14.62503719329834
    8. '[' → logprob: -15.12503719329834
    9. '   ' → logprob: -15.12503719329834
    10. ' ' → logprob: -15.75003719329834

Token 406: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048639826476573944
    2. '):' → logprob: -3.0486397743225098
    3. '   ' → logprob: -10.798640251159668
    4. '):

' → logprob: -11.423640251159668
    5. ')' → logprob: -11.548640251159668
    6. '):
' → logprob: -11.798640251159668
    7. ''):
' → logprob: -13.298640251159668
    8. '       ' → logprob: -14.298640251159668
    9. ' ):
' → logprob: -14.798640251159668
    10. '():
' → logprob: -15.798640251159668

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017947778105735779
    2. '   ' → logprob: -6.501794815063477
    3. '
' → logprob: -9.376794815063477
    4. '):
' → logprob: -9.626794815063477
    5. ':
' → logprob: -9.751794815063477
    6. 'ind' → logprob: -10.001794815063477
    7. ':' → logprob: -11.876794815063477
    8. '        
' → logprob: -11.876794815063477
    9. '{
' → logprob: -12.001794815063477
    10. ' ind' → logprob: -12.126794815063477

Token 408: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' (adapté à ' ind') → logprob: -0.01875849813222885
    2. ' ind' → logprob: -4.018758296966553
    3. '   ' → logprob: -7.518758296966553
    4. '       ' → logprob: -9.643758773803711
    5. 'indent' → logprob: -15.143758773803711
    6. '[ind' → logprob: -15.643758773803711
    7. '(ind' → logprob: -16.26875877380371
    8. 'return' → logprob: -16.39375877380371
    9. '.ind' → logprob: -16.39375877380371
    10. '
' → logprob: -16.89375877380371

Token 409: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141363143920898
    2. ' =' → logprob: -1.701413631439209
    3. '   ' → logprob: -15.326414108276367
    4. '+=' → logprob: -16.826414108276367
    5. ' ' → logprob: -16.951414108276367
    6. '=
' → logprob: -17.451414108276367
    7. ')' → logprob: -18.451414108276367
    8. '  ' → logprob: -18.951414108276367
    9. 'return' → logprob: -18.951414108276367
    10. '=int' → logprob: -18.951414108276367

Token 410: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.3132627606391907
    2. ' increment' → logprob: -1.313262701034546
    3. '.increment' → logprob: -15.063262939453125
    4. 'increments' → logprob: -15.438262939453125
    5. '_increment' → logprob: -16.063262939453125
    6. ' incremental' → logprob: -16.313262939453125
    7. ' increments' → logprob: -16.563262939453125
    8. 'indent' → logprob: -17.188262939453125
    9. 'increase' → logprob: -17.188262939453125
    10. '   ' → logprob: -17.563262939453125

Token 411: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.038059741258621216
    2. 'ind' → logprob: -3.288059711456299
    3. '(ind' → logprob: -11.288060188293457
    4. 'Ind' → logprob: -12.163060188293457
    5. '[ind' → logprob: -14.663060188293457
    6. ' ind' → logprob: -17.28805923461914
    7. '.ind' → logprob: -17.78805923461914
    8. 'def' → logprob: -18.16305923461914
    9. 'inds' → logprob: -18.28805923461914
    10. '
' → logprob: -18.28805923461914

Token 412: '(ind' (ID: 50964)
  Prédit: '(ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -2.5776860184123507e-06
    2. 'ind' → logprob: -13.00000286102295
    3. '[ind' → logprob: -15.12500286102295
    4. '(indent' → logprob: -19.750001907348633
    5. ' ind' → logprob: -21.500001907348633
    6. '(inter' → logprob: -21.875001907348633
    7. '(' → logprob: -22.250001907348633
    8. '(in' → logprob: -22.375001907348633
    9. 'IND' → logprob: -22.500001907348633
    10. ' (' → logprob: -22.625001907348633

Token 413: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014199115335941315
    2. ')
' → logprob: -4.264199256896973
    3. '   ' → logprob: -10.264199256896973
    4. ')

' → logprob: -15.639199256896973
    5. ' )' → logprob: -16.014198303222656
    6. ')
' → logprob: -16.264198303222656
    7. ')return' → logprob: -16.389198303222656
    8. '       ' → logprob: -16.389198303222656
    9. '()' → logprob: -17.014198303222656
    10. '),' → logprob: -17.889198303222656

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006718571297824383
    2. 'else' → logprob: -5.006718635559082
    3. ' else' → logprob: -13.381718635559082
    4. '```' → logprob: -13.506718635559082
    5. '
' → logprob: -15.756718635559082
    6. '       ' → logprob: -17.006717681884766
    7. '  ' → logprob: -18.131717681884766
    8. ' ' → logprob: -18.756717681884766
    9. '#else' → logprob: -19.131717681884766
    10. ')' → logprob: -19.131717681884766

Token 415: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.005465809255838394
    2. '   ' → logprob: -5.255465984344482
    3. ' else' → logprob: -8.380465507507324
    4. '```' → logprob: -13.255465507507324
    5. '	else' → logprob: -14.755465507507324
    6. ':' → logprob: -15.380465507507324
    7. ' ' → logprob: -15.880465507507324
    8. '#else' → logprob: -16.75546646118164
    9. ':
' → logprob: -16.88046646118164
    10. ')' → logprob: -16.88046646118164

Token 416: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.780755877494812
    2. ':' → logprob: -1.155755877494812
    3. ':
' → logprob: -1.780755877494812
    4. ',' → logprob: -2.9057559967041016
    5. ',
' → logprob: -5.905755996704102
    6. '   ' → logprob: -6.905755996704102
    7. '):
' → logprob: -9.280755996704102
    8. '{
' → logprob: -11.030755996704102
    9. '{' → logprob: -11.530755996704102
    10. '```' → logprob: -11.530755996704102

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025508119724690914
    2. 'values' → logprob: -6.0025506019592285
    3. '   ' → logprob: -9.627551078796387
    4. ' values' → logprob: -11.877551078796387
    5. '           ' → logprob: -13.877551078796387
    6. '```' → logprob: -14.502551078796387
    7. '     ' → logprob: -15.377551078796387
    8. '	values' → logprob: -15.502551078796387
    9. '      ' → logprob: -15.877551078796387
    10. 'value' → logprob: -16.12755012512207

Token 418: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.006725437473505735
    2. ' values' → logprob: -5.006725311279297
    3. '   ' → logprob: -12.131725311279297
    4. '       ' → logprob: -12.381725311279297
    5. '	values' → logprob: -15.256725311279297
    6. '           ' → logprob: -15.881725311279297
    7. 'value' → logprob: -17.631725311279297
    8. '.values' → logprob: -18.131725311279297
    9. '```' → logprob: -18.131725311279297
    10. '_values' → logprob: -18.256725311279297

Token 419: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -1.2233183042553719e-05
    2. '_values' → logprob: -12.500012397766113
    3. 'col' → logprob: -13.125012397766113
    4. '_row' → logprob: -13.125012397766113
    5. '_value' → logprob: -13.250012397766113
    6. 'values' → logprob: -14.125012397766113
    7. '_' → logprob: -14.500012397766113
    8. '_cols' → logprob: -14.500012397766113
    9. '_column' → logprob: -15.125012397766113
    10. '=' → logprob: -16.125011444091797

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326422095298767
    2. ' =' → logprob: -1.31326425075531
    3. '   ' → logprob: -13.563263893127441
    4. ' ' → logprob: -14.938263893127441
    5. ',' → logprob: -15.188263893127441
    6. '[' → logprob: -15.563263893127441
    7. '=
' → logprob: -16.313264846801758
    8. ')' → logprob: -16.563264846801758
    9. '```' → logprob: -16.688264846801758
    10. 'values' → logprob: -17.063264846801758

Token 421: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.10020699352025986
    2. ' increment' → logprob: -2.3502070903778076
    3. '.increment' → logprob: -15.975207328796387
    4. 'increase' → logprob: -16.97520637512207
    5. '_increment' → logprob: -16.97520637512207
    6. ' ' → logprob: -17.10020637512207
    7. 'increments' → logprob: -17.10020637512207
    8. '   ' → logprob: -17.47520637512207
    9. ' incremental' → logprob: -17.47520637512207
    10. ' increments' → logprob: -18.22520637512207

Token 422: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1517960956552997e-05
    2. 'value' → logprob: -11.375011444091797
    3. 'Value' → logprob: -18.125011444091797
    4. ' value' → logprob: -19.625011444091797
    5. 'alue' → logprob: -19.750011444091797
    6. '_values' → logprob: -20.750011444091797
    7. '_' → logprob: -21.250011444091797
    8. '_VALUE' → logprob: -21.375011444091797
    9. 'values' → logprob: -23.250011444091797
    10. '```' → logprob: -23.500011444091797

Token 423: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.001877231989055872
    2. 'dict' → logprob: -6.501877307891846
    3. 'values' → logprob: -8.626876831054688
    4. '_value' → logprob: -9.376876831054688
    5. '(values' → logprob: -9.876876831054688
    6. 'd' → logprob: -10.751876831054688
    7. 'value' → logprob: -11.251876831054688
    8. '(d' → logprob: -11.626876831054688
    9. '```' → logprob: -11.876876831054688
    10. 'Dict' → logprob: -12.376876831054688

Token 424: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -3.128163257315464e-07
    2. 'values' → logprob: -15.125
    3. ' values' → logprob: -18.25
    4. ' (' → logprob: -19.25
    5. '(' → logprob: -20.625
    6. '	values' → logprob: -21.125
    7. '.values' → logprob: -21.875
    8. '(results' → logprob: -22.75
    9. '(keys' → logprob: -23.0
    10. ' ' → logprob: -23.25

Token 425: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.004125299863517284
    2. 'values' → logprob: -5.879125118255615
    3. '(values' → logprob: -7.129125118255615
    4. 'col' → logprob: -7.754125118255615
    5. 'Col' → logprob: -9.379125595092773
    6. '_COL' → logprob: -13.504125595092773
    7. '[' → logprob: -14.379125595092773
    8. ' values' → logprob: -14.379125595092773
    9. '-col' → logprob: -14.504125595092773
    10. '_column' → logprob: -15.004125595092773

Token 426: ',' (ID: 11)
  Prédit: '(values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.07894619554281235
    2. ',' → logprob: -2.578946113586426
    3. 'values' → logprob: -10.078946113586426
    4. '.values' → logprob: -12.078946113586426
    5. '       ' → logprob: -13.328946113586426
    6. ' ,' → logprob: -13.453946113586426
    7. ' values' → logprob: -13.828946113586426
    8. '   ' → logprob: -13.828946113586426
    9. ' (' → logprob: -14.203946113586426
    10. ',d' → logprob: -14.203946113586426

Token 427: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.011049824766814709
    2. ' ind' → logprob: -4.511049747467041
    3. '[ind' → logprob: -13.8860502243042
    4. '(ind' → logprob: -14.3860502243042
    5. 'values' → logprob: -15.6360502243042
    6. 'indent' → logprob: -16.136049270629883
    7. 'inds' → logprob: -16.386049270629883
    8. '   ' → logprob: -17.136049270629883
    9. ' values' → logprob: -17.511049270629883
    10. '       ' → logprob: -17.511049270629883

Token 428: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0061112819239497185
    2. '   ' → logprob: -5.756111145019531
    3. ')
' → logprob: -6.506111145019531
    4. ')' → logprob: -7.256111145019531
    5. ',' → logprob: -7.256111145019531
    6. '
' → logprob: -12.256111145019531
    7. ' ind' → logprob: -12.256111145019531
    8. 'ind' → logprob: -12.256111145019531
    9. '),' → logprob: -13.006111145019531
    10. '[ind' → logprob: -13.131111145019531

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.423877477645874
    2. ' ind' → logprob: -1.673877477645874
    3. '   ' → logprob: -1.923877477645874
    4. 'ind' → logprob: -4.673877716064453
    5. '```' → logprob: -6.298877716064453
    6. '[ind' → logprob: -7.673877716064453
    7. '``' → logprob: -8.673877716064453
    8. '           ' → logprob: -10.048877716064453
    9. '[' → logprob: -10.673877716064453
    10. '
' → logprob: -10.923877716064453

Token 430: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' (adapté à ' ind') → logprob: -0.004086708649992943
    2. ' ind' → logprob: -5.504086494445801
    3. '   ' → logprob: -11.7540864944458
    4. '
' → logprob: -15.8790864944458
    5. '       ' → logprob: -16.379087448120117
    6. 'indent' → logprob: -16.379087448120117
    7. '```' → logprob: -16.629087448120117
    8. '[ind' → logprob: -16.629087448120117
    9. '  ' → logprob: -17.504087448120117
    10. '    
' → logprob: -18.254087448120117

Token 431: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.00010640407708706334
    2. ',' → logprob: -9.625106811523438
    3. 'col' → logprob: -10.500106811523438
    4. '_' → logprob: -13.250106811523438
    5. '_column' → logprob: -13.375106811523438
    6. '```' → logprob: -13.500106811523438
    7. ',col' → logprob: -13.750106811523438
    8. '=' → logprob: -14.000106811523438
    9. '_row' → logprob: -14.250106811523438
    10. '	col' → logprob: -14.375106811523438

Token 432: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.875
    3. '[I' → logprob: -18.5
    4. '   ' → logprob: -19.0
    5. '```' → logprob: -19.25
    6. ' [' → logprob: -19.25
    7. ')[' → logprob: -19.375
    8. 'i' → logprob: -19.375
    9. '[j' → logprob: -20.0
    10. '][' → logprob: -20.375

Token 433: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001311074709519744
    2. '[' → logprob: -7.126311302185059
    3. '[i' → logprob: -8.001311302185059
    4. ']' → logprob: -9.751311302185059
    5. ')[' → logprob: -10.126311302185059
    6. '[j' → logprob: -10.751311302185059
    7. ' ][' → logprob: -11.751311302185059
    8. '```' → logprob: -11.876311302185059
    9. '>[' → logprob: -12.126311302185059
    10. '       ' → logprob: -12.126311302185059

Token 434: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.045823566731997e-05
    2. '][' → logprob: -11.375020027160645
    3. ']' → logprob: -12.125020027160645
    4. 'i' → logprob: -13.375020027160645
    5. '```' → logprob: -14.250020027160645
    6. '[j' → logprob: -14.625020027160645
    7. ' j' → logprob: -15.000020027160645
    8. '[' → logprob: -15.500020027160645
    9. '   ' → logprob: -15.625020027160645
    10. ' ' → logprob: -16.50002098083496

Token 435: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2133340835571289
    2. '=' → logprob: -1.713334083557129
    3. ']=' → logprob: -4.838334083557129
    4. ' =' → logprob: -5.838334083557129
    5. ')' → logprob: -7.088334083557129
    6. '[j' → logprob: -9.838334083557129
    7. '[' → logprob: -10.213334083557129
    8. ',' → logprob: -10.588334083557129
    9. ' ]' → logprob: -10.588334083557129
    10. '[i' → logprob: -11.088334083557129

Token 436: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078639671206474
    2. ' =' → logprob: -5.5040788650512695
    3. '[' → logprob: -16.629077911376953
    4. ',' → logprob: -17.754077911376953
    5. '[ind' → logprob: -18.004077911376953
    6. '=
' → logprob: -19.129077911376953
    7. ')' → logprob: -20.379077911376953
    8. '=

' → logprob: -20.629077911376953
    9. '＝' → logprob: -22.004077911376953
    10. ']=' → logprob: -22.129077911376953

Token 437: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -1.306760805164231e-05
    2. ' ind' → logprob: -11.25001335144043
    3. '[ind' → logprob: -22.75001335144043
    4. '(ind' → logprob: -23.00001335144043
    5. 'indent' → logprob: -23.25001335144043
    6. 'int' → logprob: -23.62501335144043
    7. '   ' → logprob: -25.25001335144043
    8. 'inter' → logprob: -26.75001335144043
    9. '  ' → logprob: -26.87501335144043
    10. ' ' → logprob: -26.87501335144043

Token 438: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006725079845637083
    2. 'return' → logprob: -5.006725311279297
    3. ' return' → logprob: -11.631725311279297
    4. '	return' → logprob: -14.756725311279297
    5. '```' → logprob: -14.881725311279297
    6. '
' → logprob: -16.381725311279297
    7. ':return' → logprob: -18.381725311279297
    8. '``' → logprob: -18.631725311279297
    9. 'eturn' → logprob: -18.756725311279297
    10. ',' → logprob: -19.131725311279297

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003182467306032777
    2. 'return' → logprob: -5.753182411193848
    3. ' return' → logprob: -12.378182411193848
    4. '	return' → logprob: -14.628182411193848
    5. '```' → logprob: -17.378183364868164
    6. '
' → logprob: -19.128183364868164
    7. '       ' → logprob: -19.378183364868164
    8. '{return' → logprob: -19.628183364868164
    9. ':return' → logprob: -19.878183364868164
    10. 'eturn' → logprob: -20.128183364868164

Token 440: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4119192659854889
    2. '   ' → logprob: -1.6619192361831665
    3. ' return' → logprob: -1.9119192361831665
    4. '0' → logprob: -11.161919593811035
    5. '```' → logprob: -11.161919593811035
    6. '	return' → logprob: -11.411919593811035
    7. ' ' → logprob: -12.661919593811035
    8. '
' → logprob: -13.286919593811035
    9. '  ' → logprob: -13.411919593811035
    10. ',' → logprob: -13.536919593811035

Token 441: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.07888989895582199
    2. ' ind' → logprob: -2.578889846801758
    3. '(ind' → logprob: -16.203889846801758
    4. '[ind' → logprob: -18.453889846801758
    5. '_ind' → logprob: -21.453889846801758
    6. '.ind' → logprob: -21.703889846801758
    7. '   ' → logprob: -21.953889846801758
    8. ' ' → logprob: -22.453889846801758
    9. 'indent' → logprob: -22.453889846801758
    10. 'Ind' → logprob: -22.828889846801758

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010390079842181876
    2. 'ind' → logprob: -9.250103950500488
    3. '[ind' → logprob: -12.250103950500488
    4. ' ind' → logprob: -13.250103950500488
    5. ' ,' → logprob: -14.250103950500488
    6. '_ind' → logprob: -15.125103950500488
    7. '(ind' → logprob: -16.250102996826172
    8. ',col' → logprob: -16.500102996826172
    9. '_col' → logprob: -17.125102996826172
    10. '[' → logprob: -17.375102996826172

Token 443: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.10020849853754044
    2. 'ind' → logprob: -2.3502085208892822
    3. '[ind' → logprob: -13.600208282470703
    4. '(ind' → logprob: -14.600208282470703
    5. '_ind' → logprob: -16.975208282470703
    6. '.ind' → logprob: -17.350208282470703
    7. 'indent' → logprob: -17.475208282470703
    8. 'indt' → logprob: -17.600208282470703
    9. 'int' → logprob: -18.600208282470703
    10. ' indent' → logprob: -18.850208282470703

Token 444: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -6.511406809295295e-06
    2. 'col' → logprob: -12.000006675720215
    3. '_row' → logprob: -15.500006675720215
    4. '_column' → logprob: -17.2500057220459
    5. '_COL' → logprob: -17.7500057220459
    6. '[' → logprob: -18.1250057220459
    7. 'Col' → logprob: -18.1250057220459
    8. '_' → logprob: -18.5000057220459
    9. '_cols' → logprob: -18.6250057220459
    10. '_ind' → logprob: -19.6250057220459

Token 445: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.000017166137695
    3. 'i' → logprob: -14.750017166137695
    4. ' [' → logprob: -15.750017166137695
    5. '```' → logprob: -15.875017166137695
    6. '   ' → logprob: -17.000017166137695
    7. '[
' → logprob: -17.500017166137695
    8. ' ' → logprob: -17.625017166137695
    9. ',i' → logprob: -17.625017166137695
    10. '[col' → logprob: -18.000017166137695

Token 446: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16704116761684418
    2. '[j' → logprob: -2.042041063308716
    3. '][' → logprob: -3.917041063308716
    4. '[' → logprob: -5.542041301727295
    5. 'j' → logprob: -9.042040824890137
    6. 'i' → logprob: -10.042040824890137
    7. '[row' → logprob: -11.167040824890137
    8. ' [' → logprob: -11.292040824890137
    9. ']' → logprob: -11.292040824890137
    10. '[col' → logprob: -11.542040824890137

Token 447: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003821716527454555
    2. 'i' → logprob: -7.875381946563721
    3. '[j' → logprob: -13.625382423400879
    4. ' j' → logprob: -14.875382423400879
    5. '[i' → logprob: -14.875382423400879
    6. '```' → logprob: -16.125381469726562
    7. '   ' → logprob: -17.500381469726562
    8. '][' → logprob: -17.625381469726562
    9. ' ' → logprob: -17.875381469726562
    10. ']' → logprob: -18.250381469726562

Token 448: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -12.375004768371582
    3. '],' → logprob: -17.750003814697266
    4. '‌,' → logprob: -17.875003814697266
    5. ',value' → logprob: -17.875003814697266
    6. 'values' → logprob: -18.875003814697266
    7. '`,' → logprob: -19.500003814697266
    8. '<|end|>' → logprob: -19.500003814697266
    9. '```' → logprob: -19.625003814697266
    10. ',v' → logprob: -19.750003814697266

Token 449: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.47407710552215576
    2. ' values' → logprob: -0.9740771055221558
    3. '.values' → logprob: -16.849077224731445
    4. '(values' → logprob: -17.724077224731445
    5. '	values' → logprob: -18.099077224731445
    6. '_values' → logprob: -19.224077224731445
    7. 'Values' → logprob: -20.724077224731445
    8. ' ' → logprob: -20.724077224731445
    9. 'value' → logprob: -20.849077224731445
    10. ' valores' → logprob: -21.224077224731445

Token 450: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0006551315891556442
    2. '_row' → logprob: -8.000655174255371
    3. '_values' → logprob: -8.750655174255371
    4. '_' → logprob: -8.875655174255371
    5. '_value' → logprob: -11.500655174255371
    6. '_val' → logprob: -12.500655174255371
    7. ''_' → logprob: -13.125655174255371
    8. '\' → logprob: -14.125655174255371
    9. '_cols' → logprob: -14.250655174255371
    10. '_column' → logprob: -14.250655174255371

Token 451: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 452: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038802746683359146
    2. '#' → logprob: -3.6638028621673584
    3. '<|end|>' → logprob: -5.663802623748779
    4. '[' → logprob: -5.788802623748779
    5. '```' → logprob: -6.788802623748779
    6. 'ind' → logprob: -7.038802623748779
    7. ')' → logprob: -7.288802623748779
    8. '
' → logprob: -7.913802623748779
    9. 'print' → logprob: -8.288803100585938
    10. 'n' → logprob: -8.413803100585938

Token 453: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03310830891132355
    2. ' main' → logprob: -3.5331082344055176
    3. 'def' → logprob: -6.158108234405518
    4. 'solve' → logprob: -7.033108234405518
    5. 'read' → logprob: -9.033108711242676
    6. 'process' → logprob: -9.658108711242676
    7. 'calculate' → logprob: -10.033108711242676
    8. ' def' → logprob: -10.783108711242676
    9. ' solve' → logprob: -11.033108711242676
    10. 'parse' → logprob: -11.283108711242676

Token 454: '_max' (ID: 13731)
  Prédit: '_ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.8518060445785522
    2. '_row' → logprob: -1.9768060445785522
    3. '_cl' → logprob: -2.601806163787842
    4. '_values' → logprob: -2.851806163787842
    5. '_non' → logprob: -3.226806163787842
    6. 'row' → logprob: -3.726806163787842
    7. '_connected' → logprob: -3.726806163787842
    8. '_h' → logprob: -3.976806163787842
    9. '_grid' → logprob: -4.101806163787842
    10. '_max' → logprob: -4.101806163787842

Token 455: '_sum' (ID: 29859)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.923232913017273
    2. '_rectangle' → logprob: -1.923232913017273
    3. '_sum' → logprob: -2.1732330322265625
    4. '_area' → logprob: -2.2982330322265625
    5. '_value' → logprob: -2.4232330322265625
    6. '_ind' → logprob: -2.5482330322265625
    7. '_cl' → logprob: -3.5482330322265625
    8. '_s' → logprob: -3.5482330322265625
    9. '_rect' → logprob: -3.6732330322265625
    10. '_' → logprob: -4.2982330322265625

Token 456: '(H' (ID: 20904)
  Prédit: '(values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.027719611302018166
    2. '(H' → logprob: -4.527719497680664
    3. '(' → logprob: -5.277719497680664
    4. '():' → logprob: -5.277719497680664
    5. '(ind' → logprob: -5.527719497680664
    6. '(m' → logprob: -7.402719497680664
    7. '(def' → logprob: -7.777719497680664
    8. '(d' → logprob: -8.652719497680664
    9. '(indices' → logprob: -8.777719497680664
    10. '(rows' → logprob: -8.902719497680664

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010783452307805419
    2. ' ,' → logprob: -10.250107765197754
    3. ',
' → logprob: -10.750107765197754
    4. '):' → logprob: -11.250107765197754
    5. ',W' → logprob: -11.250107765197754
    6. 'def' → logprob: -11.500107765197754
    7. '   ' → logprob: -12.375107765197754
    8. '):
' → logprob: -12.375107765197754
    9. '_,' → logprob: -14.500107765197754
    10. ',m' → logprob: -14.625107765197754

Token 458: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.03598491847515106
    2. ' W' → logprob: -4.410984992980957
    3. 'values' → logprob: -4.410984992980957
    4. 'ind' → logprob: -4.785984992980957
    5. ' ind' → logprob: -6.285984992980957
    6. ' values' → logprob: -7.285984992980957
    7. '   ' → logprob: -10.285984992980957
    8. ' ' → logprob: -10.785984992980957
    9. ')' → logprob: -11.223484992980957
    10. 'row' → logprob: -11.535984992980957

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000526938121765852
    2. '):' → logprob: -8.125527381896973
    3. ' ,' → logprob: -8.875527381896973
    4. '):
' → logprob: -10.125527381896973
    5. '   ' → logprob: -10.375527381896973
    6. ',
' → logprob: -11.375527381896973
    7. 'def' → logprob: -13.125527381896973
    8. ',m' → logprob: -13.875527381896973
    9. '_,' → logprob: -14.125527381896973
    10. ')' → logprob: -14.250527381896973

Token 460: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.2829616665840149
    2. 'values' → logprob: -2.03296160697937
    3. ' ind' → logprob: -2.28296160697937
    4. ' values' → logprob: -4.532961845397949
    5. 'row' → logprob: -6.532961845397949
    6. 'mass' → logprob: -7.782961845397949
    7. 'i' → logprob: -8.53296184539795
    8. ' row' → logprob: -9.03296184539795
    9. ' mass' → logprob: -9.40796184539795
    10. '   ' → logprob: -9.97046184539795

Token 461: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00335534755140543
    2. '_col' → logprob: -5.753355503082275
    3. 'row' → logprob: -9.378355026245117
    4. ',' → logprob: -10.128355026245117
    5. '_,' → logprob: -11.753355026245117
    6. ',_' → logprob: -11.878355026245117
    7. ',row' → logprob: -11.878355026245117
    8. '_rows' → logprob: -12.253355026245117
    9. '   ' → logprob: -12.503355026245117
    10. ')' → logprob: -12.753355026245117

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002135534887202084
    2. ' ,' → logprob: -8.500213623046875
    3. '_,' → logprob: -12.500213623046875
    4. ',
' → logprob: -13.375213623046875
    5. '   ' → logprob: -13.750213623046875
    6. '[ind' → logprob: -13.875213623046875
    7. ',int' → logprob: -14.625213623046875
    8. '),' → logprob: -14.625213623046875
    9. 'ind' → logprob: -14.875213623046875
    10. ',col' → logprob: -15.875213623046875

Token 463: ' values' (ID: 4824)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.2519300878047943
    2. ' ind' → logprob: -1.5019301176071167
    3. '   ' → logprob: -15.001930236816406
    4. 'indent' → logprob: -15.376930236816406
    5. '[ind' → logprob: -15.751930236816406
    6. ' ' → logprob: -16.251930236816406
    7. 'inds' → logprob: -16.876930236816406
    8. '  ' → logprob: -17.001930236816406
    9. '(ind' → logprob: -17.751930236816406
    10. ' indent' → logprob: -18.251930236816406

Token 464: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.037676140666007996
    2. '_col' → logprob: -3.5376760959625244
    3. ',' → logprob: -4.9126763343811035
    4. '_,' → logprob: -8.162675857543945
    5. ',_' → logprob: -8.787675857543945
    6. ',row' → logprob: -10.037675857543945
    7. ' ,' → logprob: -10.912675857543945
    8. 'row' → logprob: -11.412675857543945
    9. '_rows' → logprob: -11.662675857543945
    10. '   ' → logprob: -11.662675857543945

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001149867384810932
    2. ' ,' → logprob: -9.125115394592285
    3. '   ' → logprob: -12.375115394592285
    4. '):' → logprob: -14.500115394592285
    5. ',
' → logprob: -14.875115394592285
    6. '_,' → logprob: -15.125115394592285
    7. ' ' → logprob: -16.12511444091797
    8. '  ' → logprob: -16.25011444091797
    9. '):
' → logprob: -16.25011444091797
    10. 'ind' → logprob: -16.37511444091797

Token 466: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.225444495677948
    2. ' ind' → logprob: -1.6004445552825928
    3. 'values' → logprob: -10.975444793701172
    4. '   ' → logprob: -11.850444793701172
    5. ' values' → logprob: -12.725444793701172
    6. '  ' → logprob: -13.600444793701172
    7. ' ' → logprob: -13.975444793701172
    8. 'inds' → logprob: -14.475444793701172
    9. 'indent' → logprob: -14.850444793701172
    10. 'indices' → logprob: -14.975444793701172

Token 467: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -6.153795766294934e-06
    2. ',' → logprob: -12.500005722045898
    3. 'col' → logprob: -14.375005722045898
    4. '_,' → logprob: -14.500005722045898
    5. ',col' → logprob: -14.625005722045898
    6. '_column' → logprob: -14.875005722045898
    7. ',_' → logprob: -14.875005722045898
    8. '_row' → logprob: -16.8750057220459
    9. '_cols' → logprob: -17.2500057220459
    10. '_COL' → logprob: -18.1250057220459

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038586699520237744
    2. ' ,' → logprob: -7.875385761260986
    3. ',W' → logprob: -13.125386238098145
    4. ',col' → logprob: -13.500386238098145
    5. ',int' → logprob: -14.750386238098145
    6. ',
' → logprob: -15.000386238098145
    7. ',row' → logprob: -15.625386238098145
    8. '_,' → logprob: -15.750386238098145
    9. '   ' → logprob: -15.750386238098145
    10. 'def' → logprob: -15.875386238098145

Token 469: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.11465185135602951
    2. ' values' → logprob: -2.239651918411255
    3. 'W' → logprob: -6.364651679992676
    4. ' W' → logprob: -9.364651679992676
    5. 'H' → logprob: -11.489651679992676
    6. ' ' → logprob: -13.114651679992676
    7. '   ' → logprob: -13.239651679992676
    8. '	values' → logprob: -13.239651679992676
    9. '.values' → logprob: -13.739651679992676
    10. '  ' → logprob: -14.239651679992676

Token 470: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -8.061054359131958e-06
    2. 'col' → logprob: -11.875007629394531
    3. '_' → logprob: -15.250007629394531
    4. ',' → logprob: -15.375007629394531
    5. '_,' → logprob: -15.625007629394531
    6. '[col' → logprob: -15.875007629394531
    7. '_row' → logprob: -16.25000762939453
    8. ',col' → logprob: -16.50000762939453
    9. '_COL' → logprob: -16.62500762939453
    10. '	col' → logprob: -16.87500762939453

Token 471: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015979375457391143
    2. '):
' → logprob: -7.001597881317139
    3. ',' → logprob: -7.376597881317139
    4. '   ' → logprob: -10.126598358154297
    5. ')' → logprob: -11.126598358154297
    6. ' ):' → logprob: -12.876598358154297
    7. '):
' → logprob: -13.501598358154297
    8. '  ' → logprob: -15.251598358154297
    9. ' ' → logprob: -15.251598358154297
    10. '):

' → logprob: -15.376598358154297

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007250601192936301
    2. 'max' → logprob: -7.250725269317627
    3. ' max' → logprob: -11.250724792480469
    4. '```' → logprob: -13.500724792480469
    5. 'result' → logprob: -15.000724792480469
    6. '	max' → logprob: -16.00072479248047
    7. 'def' → logprob: -17.25072479248047
    8. '_max' → logprob: -17.25072479248047
    9. '   ' → logprob: -17.25072479248047
    10. 'res' → logprob: -18.75072479248047

Token 473: ' ans' (ID: 3345)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.012035451829433441
    2. '   ' → logprob: -4.512035369873047
    3. 'result' → logprob: -7.512035369873047
    4. 'res' → logprob: -8.012035369873047
    5. 'best' → logprob: -10.012035369873047
    6. ' max' → logprob: -10.262035369873047
    7. 'ans' (adapté à ' ans') → logprob: -11.137035369873047
    8. 'maximum' → logprob: -12.012035369873047
    9. '_max' → logprob: -12.262035369873047
    10. 'answer' → logprob: -13.762035369873047

Token 474: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694081664085388
    2. '=' → logprob: -2.1269407272338867
    3. '   ' → logprob: -11.626940727233887
    4. ',' → logprob: -13.001940727233887
    5. '_' → logprob: -14.626940727233887
    6. 'max' → logprob: -15.376940727233887
    7. ' ' → logprob: -15.376940727233887
    8. ')' → logprob: -16.126941680908203
    9. '  ' → logprob: -16.251941680908203
    10. ' _' → logprob: -16.376941680908203

Token 475: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012052885256707668
    2. ' ' → logprob: -4.5120530128479
    3. 'float' → logprob: -7.3870530128479
    4. '-' → logprob: -8.387052536010742
    5. ' -' → logprob: -9.637052536010742
    6. ' float' → logprob: -9.762052536010742
    7. 'max' → logprob: -11.512052536010742
    8. '1' → logprob: -11.762052536010742
    9. '   ' → logprob: -12.387052536010742
    10. 'None' → logprob: -13.387052536010742

Token 476: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034777168184518814
    2. 'float' → logprob: -6.253477573394775
    3. '-' → logprob: -6.628477573394775
    4. 'max' → logprob: -8.878478050231934
    5. '1' → logprob: -10.253478050231934
    6. 'default' → logprob: -12.003478050231934
    7. ' ' → logprob: -12.003478050231934
    8. '-max' → logprob: -12.128478050231934
    9. '-(' → logprob: -12.128478050231934
    10. 'int' → logprob: -12.253478050231934

Token 477: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01615002751350403
    2. '
' → logprob: -4.141149997711182
    3. '    
' → logprob: -9.39115047454834
    4. ' for' → logprob: -11.01615047454834
    5. 'for' → logprob: -11.89115047454834
    6. '  
' → logprob: -12.64115047454834
    7. '   
' → logprob: -13.39115047454834
    8. '  ' → logprob: -13.64115047454834
    9. '
' → logprob: -14.51615047454834
    10. ' ' → logprob: -14.89115047454834

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001205893131555058
    2. 'for' → logprob: -9.125120162963867
    3. ' for' → logprob: -11.375120162963867
    4. '
' → logprob: -15.625120162963867
    5. '    
' → logprob: -17.750120162963867
    6. '	for' → logprob: -18.000120162963867
    7. '       ' → logprob: -19.125120162963867
    8. '```' → logprob: -19.875120162963867
    9. ' ' → logprob: -20.250120162963867
    10. '   ' → logprob: -20.375120162963867

Token 479: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003416607796680182
    2. '   ' → logprob: -8.000341415405273
    3. ' for' → logprob: -12.000341415405273
    4. '	for' → logprob: -18.750341415405273
    5. ' ' → logprob: -20.250341415405273
    6. '  ' → logprob: -20.750341415405273
    7. '
' → logprob: -21.750341415405273
    8. '```' → logprob: -23.000341415405273
    9. '    
' → logprob: -23.125341415405273
    10. 'For' → logprob: -24.500341415405273

Token 480: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2014213353395462
    2. ' i' → logprob: -1.7014213800430298
    3. ' range' → logprob: -12.576421737670898
    4. '_i' → logprob: -13.201421737670898
    5. 'range' → logprob: -13.451421737670898
    6. '_' → logprob: -14.576421737670898
    7. '	i' → logprob: -14.826421737670898
    8. ' in' → logprob: -15.701421737670898
    9. ' _' → logprob: -16.5764217376709
    10. ' ' → logprob: -16.7014217376709

Token 481: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017118285177275538
    2. 'in' → logprob: -6.376711845397949
    3. ' ' → logprob: -12.00171184539795
    4. ',' → logprob: -13.75171184539795
    5. '   ' → logprob: -14.25171184539795
    6. '0' → logprob: -15.00171184539795
    7. '[' → logprob: -15.37671184539795
    8. ')' → logprob: -15.50171184539795
    9. '_' → logprob: -15.87671184539795
    10. 'import' → logprob: -16.001710891723633

Token 482: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048054322600365
    2. ' range' → logprob: -4.511047840118408
    3. 'in' → logprob: -15.636048316955566
    4. '(range' → logprob: -17.26104736328125
    5. ' in' → logprob: -17.38604736328125
    6. '   ' → logprob: -17.63604736328125
    7. ' ' → logprob: -17.88604736328125
    8. ')' → logprob: -18.38604736328125
    9. '	range' → logprob: -19.26104736328125
    10. '
' → logprob: -19.51104736328125

Token 483: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -3.404745439183898e-05
    2. 'H' → logprob: -10.37503433227539
    3. '(' → logprob: -13.00003433227539
    4. ' (' → logprob: -15.75003433227539
    5. ' H' → logprob: -15.75003433227539
    6. '(
' → logprob: -16.37503433227539
    7. '   ' → logprob: -17.00003433227539
    8. '	H' → logprob: -18.12503433227539
    9. ',H' → logprob: -18.62503433227539
    10. ')' → logprob: -19.37503433227539

Token 484: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47447463870048523
    2. '):' → logprob: -0.9744746685028076
    3. '   ' → logprob: -7.9744744300842285
    4. ':' → logprob: -10.724474906921387
    5. ')' → logprob: -11.349474906921387
    6. '):
' → logprob: -12.224474906921387
    7. ':
' → logprob: -12.599474906921387
    8. ' ):
' → logprob: -12.724474906921387
    9. '):

' → logprob: -12.974474906921387
    10. ' ):' → logprob: -13.349474906921387

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011188744247192517
    2. '   ' → logprob: -9.37511157989502
    3. ' for' → logprob: -11.25011157989502
    4. '
' → logprob: -12.75011157989502
    5. '	   ' → logprob: -12.75011157989502
    6. ',' → logprob: -13.62511157989502
    7. '<|end|>' → logprob: -13.62511157989502
    8. 'for' → logprob: -13.75011157989502
    9. '    ' → logprob: -13.87511157989502
    10. '     ' → logprob: -14.37511157989502

Token 486: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6036205887794495
    2. ' for' → logprob: -0.8536205887794495
    3. '   ' → logprob: -3.6036205291748047
    4. '       ' → logprob: -9.728620529174805
    5. '	for' → logprob: -11.728620529174805
    6. ' ' → logprob: -12.103620529174805
    7. '    ' → logprob: -13.103620529174805
    8. '  ' → logprob: -14.353620529174805
    9. '    
' → logprob: -15.478620529174805
    10. 'j' → logprob: -15.728620529174805

Token 487: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07841695100069046
    2. ' j' → logprob: -2.7034170627593994
    3. 'range' → logprob: -5.70341682434082
    4. ' range' → logprob: -6.20341682434082
    5. '0' → logprob: -6.45341682434082
    6. ' W' → logprob: -7.20341682434082
    7. 'W' → logprob: -7.45341682434082
    8. '   ' → logprob: -9.70341682434082
    9. ' ' → logprob: -10.07841682434082
    10. ')' → logprob: -11.20341682434082

Token 488: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05577865242958069
    2. 'in' → logprob: -2.930778741836548
    3. ')' → logprob: -7.680778503417969
    4. ' ' → logprob: -9.055778503417969
    5. '   ' → logprob: -9.055778503417969
    6. ',' → logprob: -10.180778503417969
    7. '+' → logprob: -10.305778503417969
    8. '<|end|>' → logprob: -10.680778503417969
    9. ' (' → logprob: -11.055778503417969
    10. '[' → logprob: -11.055778503417969

Token 489: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3144695460796356
    2. ' range' → logprob: -1.314469575881958
    3. '(W' → logprob: -6.814469337463379
    4. 'W' → logprob: -9.314469337463379
    5. '(range' → logprob: -11.564469337463379
    6. ' W' → logprob: -11.939469337463379
    7. 'Range' → logprob: -12.939469337463379
    8. '   ' → logprob: -15.189469337463379
    9. ' ' → logprob: -15.939469337463379
    10. '_range' → logprob: -16.064470291137695

Token 490: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -2.4034345187828876e-05
    2. 'W' → logprob: -11.25002384185791
    3. '(' → logprob: -12.12502384185791
    4. ' (' → logprob: -12.50002384185791
    5. '   ' → logprob: -13.75002384185791
    6. ')' → logprob: -15.62502384185791
    7. '(
' → logprob: -15.75002384185791
    8. 'range' → logprob: -16.125024795532227
    9. '(H' → logprob: -16.250024795532227
    10. ' W' → logprob: -17.125024795532227

Token 491: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20244921743869781
    2. '):
' → logprob: -1.7024492025375366
    3. ':' → logprob: -7.202449321746826
    4. '           ' → logprob: -9.077448844909668
    5. '       ' → logprob: -9.702448844909668
    6. ')' → logprob: -10.327448844909668
    7. '   ' → logprob: -10.452448844909668
    8. '):
' → logprob: -10.952448844909668
    9. ',' → logprob: -11.702448844909668
    10. ':
' → logprob: -11.827448844909668

Token 492: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031399279832839966
    2. ':' → logprob: -6.503139972686768
    3. ':
' → logprob: -6.878139972686768
    4. ' if' → logprob: -8.25313949584961
    5. ',' → logprob: -8.75313949584961
    6. '       ' → logprob: -9.50313949584961
    7. '
' → logprob: -10.25313949584961
    8. 'if' → logprob: -11.62813949584961
    9. '<|end|>' → logprob: -11.75313949584961
    10. '          ' → logprob: -12.00313949584961

Token 493: ' ans' (ID: 3345)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5550356507301331
    2. '       ' → logprob: -1.3050355911254883
    3. 'if' → logprob: -1.9300355911254883
    4. '           ' → logprob: -4.930035591125488
    5. '               ' → logprob: -6.805035591125488
    6. '   ' → logprob: -6.805035591125488
    7. ' ' → logprob: -9.305035591125488
    8. '	if' → logprob: -10.430035591125488
    9. '```' → logprob: -11.055035591125488
    10. '
' → logprob: -11.930035591125488

Token 494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4565390944480896
    2. ' =' → logprob: -1.0815391540527344
    3. '+=' → logprob: -4.206539154052734
    4. ' +=' → logprob: -4.456539154052734
    5. '=max' → logprob: -7.081539154052734
    6. 'max' → logprob: -9.331539154052734
    7. ' max' → logprob: -11.456539154052734
    8. '   ' → logprob: -12.706539154052734
    9. '+' → logprob: -12.706539154052734
    10. '.=' → logprob: -13.081539154052734

Token 495: ' update' (ID: 4027)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.47407716512680054
    2. 'max' → logprob: -0.9740771651268005
    3. '	max' → logprob: -16.974077224731445
    4. '_max' → logprob: -17.349077224731445
    5. '(max' → logprob: -17.349077224731445
    6. '0' → logprob: -17.724077224731445
    7. ',max' → logprob: -17.849077224731445
    8. '   ' → logprob: -17.849077224731445
    9. '=max' → logprob: -17.974077224731445
    10. '[max' → logprob: -18.849077224731445

Token 496: '_max' (ID: 13731)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7270690202713013
    2. ' max' → logprob: -0.8520690202713013
    3. ' ans' → logprob: -2.7270689010620117
    4. 'ans' → logprob: -3.7270689010620117
    5. '(ans' → logprob: -7.852068901062012
    6. '_max' → logprob: -8.852068901062012
    7. '(max' → logprob: -9.727068901062012
    8. '_ans' → logprob: -10.977068901062012
    9. '=max' → logprob: -11.102068901062012
    10. ' ' → logprob: -12.102068901062012

Token 497: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004759292118251324
    2. '(max' → logprob: -5.504759311676025
    3. '(' → logprob: -8.254758834838867
    4. 'max' → logprob: -8.379758834838867
    5. 'ans' → logprob: -9.004758834838867
    6. '_ans' → logprob: -11.129758834838867
    7. '(sum' → logprob: -11.629758834838867
    8. '_max' → logprob: -11.629758834838867
    9. '	ans' → logprob: -11.754758834838867
    10. '(
' → logprob: -11.754758834838867

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00460729980841279
    2. ',max' → logprob: -6.004607200622559
    3. ' ,' → logprob: -6.254607200622559
    4. 'max' → logprob: -8.754607200622559
    5. ' max' → logprob: -10.379607200622559
    6. 'values' → logprob: -11.879607200622559
    7. ',value' → logprob: -12.879607200622559
    8. ')' → logprob: -13.379607200622559
    9. ',
' → logprob: -13.629607200622559
    10. ' values' → logprob: -14.254607200622559

Token 499: ' ind' (ID: 1383)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.2542707622051239
    2. 'values' → logprob: -1.5042707920074463
    3. '(values' → logprob: -6.879270553588867
    4. ' ind' → logprob: -7.129270553588867
    5. 'ind' → logprob: -7.879270553588867
    6. '	values' → logprob: -10.129270553588867
    7. ' get' → logprob: -10.754270553588867
    8. ' (' → logprob: -11.504270553588867
    9. 'get' → logprob: -11.754270553588867
    10. ')' → logprob: -12.004270553588867

Token 500: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.009798945859074593
    2. '_col' → logprob: -4.634799003601074
    3. ',' → logprob: -11.509799003601074
    4. ',_' → logprob: -11.759799003601074
    5. '_,' → logprob: -12.259799003601074
    6. ')' → logprob: -12.759799003601074
    7. ',row' → logprob: -12.759799003601074
    8. ')_' → logprob: -13.009799003601074
    9. 'row' → logprob: -13.134799003601074
    10. '_' → logprob: -13.384799003601074

Token 501: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015574338613077998
    2. ' [' → logprob: -9.500155448913574
    3. '[' → logprob: -10.250155448913574
    4. ',' → logprob: -11.250155448913574
    5. ')[' → logprob: -11.625155448913574
    6. '][' → logprob: -12.000155448913574
    7. '[j' → logprob: -12.250155448913574
    8. ',i' → logprob: -12.625155448913574
    9. '[I' → logprob: -12.625155448913574
    10. ')' → logprob: -13.125155448913574

Token 502: ' values' (ID: 4824)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6329389810562134
    2. ' i' → logprob: -0.7579389810562134
    3. 'j' → logprob: -8.257939338684082
    4. ' j' → logprob: -10.007939338684082
    5. ',' → logprob: -11.382939338684082
    6. ',i' → logprob: -11.757939338684082
    7. '[i' → logprob: -12.507939338684082
    8. ' ' → logprob: -12.882939338684082
    9. '           ' → logprob: -13.132939338684082
    10. ')' → logprob: -13.257939338684082

Token 503: '_row' (ID: 19157)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0225052572786808
    2. '_row' → logprob: -4.147505283355713
    3. ',' → logprob: -5.147505283355713
    4. ',i' → logprob: -7.647505283355713
    5. '[j' → logprob: -10.147504806518555
    6. ')' → logprob: -10.397504806518555
    7. '[row' → logprob: -11.147504806518555
    8. '   ' → logprob: -11.397504806518555
    9. '][' → logprob: -11.772504806518555
    10. ' ,' → logprob: -11.772504806518555

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0043470412492752075
    2. ' ,' → logprob: -6.25434684753418
    3. ',j' → logprob: -6.87934684753418
    4. '[j' → logprob: -7.12934684753418
    5. '[' → logprob: -8.62934684753418
    6. '[i' → logprob: -9.00434684753418
    7. '           ' → logprob: -9.37934684753418
    8. '   ' → logprob: -9.50434684753418
    9. ',i' → logprob: -9.50434684753418
    10. ',[' → logprob: -11.37934684753418

Token 505: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.48560991883277893
    2. 'ind' → logprob: -1.1106098890304565
    3. ' i' → logprob: -3.360610008239746
    4. 'i' → logprob: -3.985610008239746
    5. 'j' → logprob: -6.985610008239746
    6. ',' → logprob: -7.610610008239746
    7. ' j' → logprob: -7.985610008239746
    8. '           ' → logprob: -8.985610008239746
    9. '    ' → logprob: -10.610610008239746
    10. '   ' → logprob: -10.860610008239746

Token 506: '_col' (ID: 7255)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.026050498709082603
    2. '_col' → logprob: -3.776050567626953
    3. ',' → logprob: -6.401050567626953
    4. '[i' → logprob: -8.651050567626953
    5. ',j' → logprob: -8.651050567626953
    6. '   ' → logprob: -9.026050567626953
    7. '[j' → logprob: -9.276050567626953
    8. ' ,' → logprob: -9.401050567626953
    9. ')' → logprob: -9.651050567626953
    10. ',_' → logprob: -9.901050567626953

Token 507: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015478975547011942
    2. ',j' → logprob: -9.500154495239258
    3. ',i' → logprob: -9.875154495239258
    4. ' ,' → logprob: -10.750154495239258
    5. '```' → logprob: -13.625154495239258
    6. '[i' → logprob: -13.750154495239258
    7. ',[' → logprob: -13.875154495239258
    8. '           ' → logprob: -14.000154495239258
    9. '   ' → logprob: -14.375154495239258
    10. '[j' → logprob: -14.625154495239258

Token 508: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.1305152177810669
    2. ' values' → logprob: -2.1305150985717773
    3. 'j' → logprob: -5.755515098571777
    4. ' j' → logprob: -8.630515098571777
    5. 'i' → logprob: -8.755515098571777
    6. '   ' → logprob: -10.380515098571777
    7. ' i' → logprob: -10.630515098571777
    8. '    ' → logprob: -12.130515098571777
    9. '	values' → logprob: -12.255515098571777
    10. '           ' → logprob: -12.630515098571777

Token 509: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.004990743473172188
    2. ',' → logprob: -5.379990577697754
    3. ',col' → logprob: -8.879990577697754
    4. 'col' → logprob: -9.129990577697754
    5. 'Col' → logprob: -9.879990577697754
    6. '_COL' → logprob: -10.504990577697754
    7. ',j' → logprob: -10.879990577697754
    8. '[' → logprob: -12.379990577697754
    9. '_cols' → logprob: -12.504990577697754
    10. ',[' → logprob: -12.879990577697754

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00222780997864902
    2. ',i' → logprob: -7.252227783203125
    3. ' ,' → logprob: -7.377227783203125
    4. '[i' → logprob: -7.502227783203125
    5. '           ' → logprob: -8.127227783203125
    6. '   ' → logprob: -10.752227783203125
    7. ')' → logprob: -12.127227783203125
    8. '               ' → logprob: -12.877227783203125
    9. '(i' → logprob: -13.002227783203125
    10. '       ' → logprob: -13.127227783203125

Token 511: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4741123616695404
    2. ' i' → logprob: -0.9741123914718628
    3. ',' → logprob: -10.849112510681152
    4. '           ' → logprob: -12.224112510681152
    5. ')' → logprob: -12.349112510681152
    6. ' ' → logprob: -13.349112510681152
    7. '   ' → logprob: -13.724112510681152
    8. ',i' → logprob: -14.099112510681152
    9. 'j' → logprob: -14.224112510681152
    10. '    ' → logprob: -15.474112510681152

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0511954091489315
    2. ',j' → logprob: -3.0511953830718994
    3. ' ,' → logprob: -6.0511956214904785
    4. '           ' → logprob: -8.42619514465332
    5. '   ' → logprob: -11.55119514465332
    6. '       ' → logprob: -11.92619514465332
    7. '               ' → logprob: -12.42619514465332
    8. ')' → logprob: -13.55119514465332
    9. '[j' → logprob: -13.80119514465332
    10. ' ' → logprob: -13.80119514465332

Token 513: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1002088338136673
    2. ' j' → logprob: -2.3502087593078613
    3. '   ' → logprob: -14.72520923614502
    4. '    ' → logprob: -14.85020923614502
    5. ')' → logprob: -14.97520923614502
    6. ' ' → logprob: -15.10020923614502
    7. '	j' → logprob: -15.47520923614502
    8. ',j' → logprob: -15.47520923614502
    9. ' ' → logprob: -15.97520923614502
    10. '  ' → logprob: -16.475208282470703

Token 514: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10068396478891373
    2. ')
' → logprob: -2.3506839275360107
    3. '           ' → logprob: -7.97568416595459
    4. '       ' → logprob: -9.47568416595459
    5. '   ' → logprob: -10.97568416595459
    6. ',' → logprob: -11.85068416595459
    7. ' )' → logprob: -11.85068416595459
    8. ')
' → logprob: -11.85068416595459
    9. ' )
' → logprob: -12.35068416595459
    10. ')\
' → logprob: -12.60068416595459

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5010566711425781
    2. '           ' → logprob: -1.8760566711425781
    3. '
' → logprob: -2.501056671142578
    4. '    
' → logprob: -3.001056671142578
    5. '       ' → logprob: -3.751056671142578
    6. ' 
' → logprob: -3.876056671142578
    7. '  
' → logprob: -4.251056671142578
    8. 'def' → logprob: -4.876056671142578
    9. 'return' → logprob: -5.001056671142578
    10. ' ' → logprob: -5.001056671142578

Token 516: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.64073646068573
    2. '
' → logprob: -1.39073646068573
    3. 'return' (adapté à ' return') → logprob: -1.64073646068573
    4. '       ' → logprob: -4.2657365798950195
    5. ' return' → logprob: -5.1407365798950195
    6. '           ' → logprob: -5.3907365798950195
    7. '    
' → logprob: -5.8907365798950195
    8. 'def' → logprob: -6.7657365798950195
    9. '	return' → logprob: -7.6407365798950195
    10. ' 
' → logprob: -7.8907365798950195

Token 517: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2519367039203644
    2. ' ans' → logprob: -1.501936674118042
    3. '(ans' → logprob: -12.126936912536621
    4. '	ans' → logprob: -13.126936912536621
    5. '_ans' → logprob: -15.751936912536621
    6. ' ' → logprob: -18.126935958862305
    7. ' ' → logprob: -18.876935958862305
    8. 'answer' → logprob: -20.001935958862305
    9. 'max' → logprob: -20.126935958862305
    10. 'int' → logprob: -20.251935958862305

Token 518: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06864961981773376
    2. '
' → logprob: -2.8186495304107666
    3. '<|end|>' → logprob: -5.568649768829346
    4. '

' → logprob: -7.193649768829346
    5. '\' → logprob: -7.693649768829346
    6. '   ' → logprob: -7.693649768829346
    7. '    
' → logprob: -8.318649291992188
    8. ' def' → logprob: -8.443649291992188
    9. '```' → logprob: -8.818649291992188
    10. '  
' → logprob: -8.818649291992188

Token 519: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01166742667555809
    2. '
' → logprob: -4.511667251586914
    3. ' def' → logprob: -8.761667251586914
    4. '\' → logprob: -8.761667251586914
    5. '    
' → logprob: -9.636667251586914
    6. '<|end|>' → logprob: -9.636667251586914
    7. '   ' → logprob: -10.136667251586914
    8. ' 
' → logprob: -10.136667251586914
    9. '```' → logprob: -10.136667251586914
    10. '

' → logprob: -11.011667251586914

Token 520: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.5760183334350586
    2. 'update' → logprob: -0.8260183334350586
    3. 'def' → logprob: -9.576018333435059
    4. '_update' → logprob: -12.451018333435059
    5. ' def' → logprob: -12.576018333435059
    6. 'max' → logprob: -14.326018333435059
    7. ' ' → logprob: -14.826018333435059
    8. '.update' → logprob: -15.326018333435059
    9. '	update' → logprob: -15.326018333435059
    10. '(update' → logprob: -15.326018333435059

Token 521: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0015196226304396987
    2. 'max' → logprob: -6.501519680023193
    3. '(max' → logprob: -12.001519203186035
    4. 'def' → logprob: -12.501519203186035
    5. 'Max' → logprob: -13.001519203186035
    6. '_' → logprob: -13.126519203186035
    7. ' max' → logprob: -14.376519203186035
    8. '(' → logprob: -14.501519203186035
    9. '_min' → logprob: -14.501519203186035
    10. '_MAX' → logprob: -14.626519203186035

Token 522: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.723352049040841e-06
    2. '(old' → logprob: -13.250004768371582
    3. '(' → logprob: -13.625004768371582
    4. ' (' → logprob: -13.875004768371582
    5. '(max' → logprob: -14.875004768371582
    6. '(prev' → logprob: -15.750004768371582
    7. '(answer' → logprob: -16.625003814697266
    8. '(acc' → logprob: -16.750003814697266
    9. '(current' → logprob: -17.250003814697266
    10. '(existing' → logprob: -17.625003814697266

Token 523: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.688212614681106e-05
    2. ' ,' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.125017166137695
    4. '‌,' → logprob: -18.375017166137695
    5. ',int' → logprob: -18.750017166137695
    6. '<|end|>' → logprob: -19.125017166137695
    7. ',
' → logprob: -19.500017166137695
    8. '_,' → logprob: -20.500017166137695
    9. ',row' → logprob: -20.500017166137695
    10. ',i' → logprob: -20.625017166137695

Token 524: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.029751762747764587
    2. 'ind' → logprob: -3.529751777648926
    3. '[ind' → logprob: -15.279751777648926
    4. '   ' → logprob: -15.654751777648926
    5. '_ind' → logprob: -15.904751777648926
    6. ' ' → logprob: -15.904751777648926
    7. '(ind' → logprob: -16.27975082397461
    8. '.ind' → logprob: -16.27975082397461
    9. ')' → logprob: -16.52975082397461
    10. 'indent' → logprob: -16.77975082397461

Token 525: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00015014449309092015
    2. ',' → logprob: -9.250149726867676
    3. ',row' → logprob: -10.000149726867676
    4. 'row' → logprob: -12.875149726867676
    5. '_,' → logprob: -13.000149726867676
    6. '_ROW' → logprob: -13.625149726867676
    7. ',_' → logprob: -13.875149726867676
    8. '_Row' → logprob: -14.500149726867676
    9. ' ,' → logprob: -14.875149726867676
    10. '_rows' → logprob: -15.625149726867676

Token 526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.060365608893335e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',value' → logprob: -16.25004005432129
    4. ',
' → logprob: -16.75004005432129
    5. ',row' → logprob: -16.75004005432129
    6. ',val' → logprob: -16.87504005432129
    7. ',int' → logprob: -16.87504005432129
    8. ',...' → logprob: -17.37504005432129
    9. ',

' → logprob: -17.62504005432129
    10. '   ' → logprob: -18.00004005432129

Token 527: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.5759415030479431
    2. 'values' → logprob: -0.8259415030479431
    3. '	values' → logprob: -14.45094108581543
    4. '(values' → logprob: -14.82594108581543
    5. '   ' → logprob: -15.32594108581543
    6. ' ind' → logprob: -15.45094108581543
    7. '.values' → logprob: -15.57594108581543
    8. '_values' → logprob: -15.82594108581543
    9. 'ind' → logprob: -15.95094108581543
    10. ' ' → logprob: -15.95094108581543

Token 528: '_row' (ID: 19157)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031448006629943848
    2. '_row' → logprob: -6.37814474105835
    3. ',row' → logprob: -7.00314474105835
    4. ' ,' → logprob: -8.753145217895508
    5. ',col' → logprob: -9.628145217895508
    6. '   ' → logprob: -9.628145217895508
    7. ',j' → logprob: -10.128145217895508
    8. ',i' → logprob: -10.253145217895508
    9. '_col' → logprob: -10.378145217895508
    10. ',
' → logprob: -10.878145217895508

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9146995327901095e-05
    2. ' ,' → logprob: -10.875019073486328
    3. ',
' → logprob: -16.000019073486328
    4. '   ' → logprob: -17.875019073486328
    5. '[ind' → logprob: -18.000019073486328
    6. ',int' → logprob: -19.000019073486328
    7. ',

' → logprob: -19.375019073486328
    8. '‌,' → logprob: -19.375019073486328
    9. 'ind' → logprob: -19.500019073486328
    10. ',index' → logprob: -19.625019073486328

Token 530: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.005235648714005947
    2. ' ind' → logprob: -5.25523567199707
    3. '   ' → logprob: -13.75523567199707
    4. '[ind' → logprob: -15.00523567199707
    5. '(ind' → logprob: -16.13023567199707
    6. 'ans' → logprob: -16.63023567199707
    7. '  ' → logprob: -17.00523567199707
    8. ' ' → logprob: -17.00523567199707
    9. 'inds' → logprob: -17.63023567199707
    10. '    ' → logprob: -18.25523567199707

Token 531: '_col' (ID: 7255)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.3890126049518585
    2. '_col' → logprob: -1.1390125751495361
    3. ',' → logprob: -6.264012813568115
    4. '_,' → logprob: -9.389012336730957
    5. ',_' → logprob: -9.639012336730957
    6. 'row' → logprob: -10.389012336730957
    7. '   ' → logprob: -10.639012336730957
    8. ' ,' → logprob: -11.639012336730957
    9. 'col' → logprob: -11.889012336730957
    10. ',row' → logprob: -12.014012336730957

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.656383680412546e-05
    2. ' ,' → logprob: -10.000046730041504
    3. ',
' → logprob: -14.500046730041504
    4. ',value' → logprob: -15.375046730041504
    5. ',

' → logprob: -15.875046730041504
    6. 'values' → logprob: -16.125045776367188
    7. '   ' → logprob: -16.750045776367188
    8. '[' → logprob: -17.250045776367188
    9. ',\
' → logprob: -17.625045776367188
    10. ',val' → logprob: -17.875045776367188

Token 533: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.03804252669215202
    2. ' values' → logprob: -3.2880425453186035
    3. '	values' → logprob: -14.288042068481445
    4. '.values' → logprob: -15.663042068481445
    5. '(values' → logprob: -15.788042068481445
    6. 'ind' → logprob: -16.163042068481445
    7. '   ' → logprob: -17.163042068481445
    8. ' ' → logprob: -18.288042068481445
    9. '_values' → logprob: -18.413042068481445
    10. ' ind' → logprob: -18.663042068481445

Token 534: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.00011570196511456743
    2. '_row' → logprob: -9.500115394592285
    3. ',' → logprob: -10.750115394592285
    4. '_,' → logprob: -11.125115394592285
    5. ',_' → logprob: -12.625115394592285
    6. 'col' → logprob: -14.000115394592285
    7. ',col' → logprob: -15.875115394592285
    8. '_COL' → logprob: -16.3751163482666
    9. '_' → logprob: -16.7501163482666
    10. '   ' → logprob: -16.8751163482666

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012880703434348106
    2. ',i' → logprob: -9.000128746032715
    3. ' ,' → logprob: -12.250128746032715
    4. '   ' → logprob: -14.500128746032715
    5. 'i' → logprob: -17.25012969970703
    6. ',j' → logprob: -17.37512969970703
    7. ',
' → logprob: -17.50012969970703
    8. ',int' → logprob: -17.87512969970703
    9. '‌,' → logprob: -18.87512969970703
    10. '_,' → logprob: -18.87512969970703

Token 536: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12695161998271942
    2. ' i' → logprob: -2.1269516944885254
    3. '   ' → logprob: -11.001951217651367
    4. '    ' → logprob: -12.626951217651367
    5. ' ' → logprob: -13.501951217651367
    6. '  ' → logprob: -14.501951217651367
    7. '       ' → logprob: -14.751951217651367
    8. '           ' → logprob: -14.751951217651367
    9. '	i' → logprob: -14.876951217651367
    10. '        ' → logprob: -15.876951217651367

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016623330884613097
    2. ',j' → logprob: -9.250165939331055
    3. ' ,' → logprob: -9.625165939331055
    4. '   ' → logprob: -12.500165939331055
    5. ',
' → logprob: -16.000165939331055
    6. '‌,' → logprob: -16.250165939331055
    7. '_,' → logprob: -17.500165939331055
    8. '  ' → logprob: -17.500165939331055
    9. ' ' → logprob: -17.625165939331055
    10. ',i' → logprob: -17.750165939331055

Token 538: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003177952254191041
    2. ' j' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.503177642822266
    4. ' ' → logprob: -17.003177642822266
    5. '    ' → logprob: -17.753177642822266
    6. '  ' → logprob: -18.128177642822266
    7. '	j' → logprob: -18.378177642822266
    8. '       ' → logprob: -19.503177642822266
    9. '     ' → logprob: -19.628177642822266
    10. ' ' → logprob: -20.003177642822266

Token 539: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002485050121322274
    2. '):
' → logprob: -6.002485275268555
    3. ')' → logprob: -12.502485275268555
    4. '):
' → logprob: -12.502485275268555
    5. '   ' → logprob: -13.877485275268555
    6. '):

' → logprob: -14.752485275268555
    7. ' ):' → logprob: -15.002485275268555
    8. ',' → logprob: -15.377485275268555
    9. ':' → logprob: -17.127485275268555
    10. ' ' → logprob: -18.002485275268555

Token 540: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0724501833319664
    2. ' ' → logprob: -4.197450160980225
    3. ' if' → logprob: -4.197450160980225
    4. ' 
' → logprob: -4.447450160980225
    5. ':' → logprob: -4.572450160980225
    6. '    
' → logprob: -5.322450160980225
    7. ',' → logprob: -6.072450160980225
    8. '   
' → logprob: -6.322450160980225
    9. '    ' → logprob: -6.697450160980225
    10. '
' → logprob: -7.072450160980225

Token 541: ' val' (ID: 1459)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17356984317302704
    2. 'if' → logprob: -2.548569917678833
    3. '   ' → logprob: -3.048569917678833
    4. ' cell' → logprob: -3.673569917678833
    5. 'cell' → logprob: -5.423569679260254
    6. ' val' → logprob: -6.548569679260254
    7. ' ind' → logprob: -7.048569679260254
    8. '    ' → logprob: -7.423569679260254
    9. 'val' (adapté à ' val') → logprob: -8.173569679260254
    10. 'ind' → logprob: -8.548569679260254

Token 542: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6139085292816162
    2. ' =' → logprob: -0.8639085292816162
    3. '_' → logprob: -3.613908529281616
    4. 'ue' → logprob: -4.988908767700195
    5. ' ' → logprob: -6.613908767700195
    6. 'ues' → logprob: -7.613908767700195
    7. ',' → logprob: -7.613908767700195
    8. 's' → logprob: -8.113908767700195
    9. '   ' → logprob: -8.238908767700195
    10. 'u' → logprob: -8.363908767700195

Token 543: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.12191779911518097
    2. '0' → logprob: -2.621917724609375
    3. ' values' → logprob: -3.246917724609375
    4. '(values' → logprob: -6.121917724609375
    5. ' ' → logprob: -7.746917724609375
    6. '(' → logprob: -8.246917724609375
    7. 'ind' → logprob: -8.996917724609375
    8. ' (' → logprob: -9.621917724609375
    9. '   ' → logprob: -10.121917724609375
    10. '	values' → logprob: -10.621917724609375

Token 544: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -9.233804303221405e-05
    2. '_col' → logprob: -9.625092506408691
    3. '_' → logprob: -10.750092506408691
    4. 'row' → logprob: -12.750092506408691
    5. '_rows' → logprob: -15.000092506408691
    6. '[_' → logprob: -15.250092506408691
    7. '_max' → logprob: -15.500092506408691
    8. 'Row' → logprob: -15.750092506408691
    9. '_Row' → logprob: -16.125091552734375
    10. '_ROW' → logprob: -16.500091552734375

Token 545: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.00027134892297908664
    2. '.get' → logprob: -8.250271797180176
    3. '[get' → logprob: -12.375271797180176
    4. '[' → logprob: -12.500271797180176
    5. 'get' → logprob: -13.125271797180176
    6. '[
' → logprob: -16.12527084350586
    7. '[(' → logprob: -18.00027084350586
    8. '[int' → logprob: -18.62527084350586
    9. '[in' → logprob: -18.87527084350586
    10. ' [' → logprob: -19.12527084350586

Token 546: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.676292231422849e-05
    2. 'row' → logprob: -11.375017166137695
    3. '[row' → logprob: -12.875017166137695
    4. '[_' → logprob: -13.875017166137695
    5. 'Row' → logprob: -14.875017166137695
    6. '_col' → logprob: -14.875017166137695
    7. '_ROW' → logprob: -15.250017166137695
    8. ']_' → logprob: -15.375017166137695
    9. '_Row' → logprob: -16.500017166137695
    10. '[' → logprob: -16.625017166137695

Token 547: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.76628842484206e-05
    2. '[' → logprob: -10.375067710876465
    3. ']' → logprob: -11.625067710876465
    4. '[j' → logprob: -11.750067710876465
    5. '][' → logprob: -12.125067710876465
    6. ' [' → logprob: -12.250067710876465
    7. 'i' → logprob: -13.500067710876465
    8. '   ' → logprob: -13.750067710876465
    9. '[
' → logprob: -13.875067710876465
    10. '[row' → logprob: -14.000067710876465

Token 548: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008251105318777263
    2. '[j' → logprob: -8.000824928283691
    3. '][' → logprob: -8.250824928283691
    4. '[' → logprob: -9.250824928283691
    5. ' [' → logprob: -9.875824928283691
    6. ']' → logprob: -10.375824928283691
    7. '[
' → logprob: -10.625824928283691
    8. '[row' → logprob: -12.250824928283691
    9. '[I' → logprob: -12.500824928283691
    10. '```' → logprob: -12.500824928283691

Token 549: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004436587623786181
    2. '[j' → logprob: -8.000443458557129
    3. 'i' → logprob: -9.375443458557129
    4. ' j' → logprob: -10.875443458557129
    5. '[i' → logprob: -13.000443458557129
    6. '][' → logprob: -14.750443458557129
    7. '[' → logprob: -14.875443458557129
    8. '```' → logprob: -14.875443458557129
    9. ']' → logprob: -15.000443458557129
    10. '[
' → logprob: -15.500443458557129

Token 550: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011570196511456743
    2. ']+' → logprob: -9.375115394592285
    3. ' ]' → logprob: -10.625115394592285
    4. ']]' → logprob: -12.125115394592285
    5. ']
' → logprob: -15.375115394592285
    6. '`]' → logprob: -15.500115394592285
    7. '[' → logprob: -16.1251163482666
    8. '   ' → logprob: -16.2501163482666
    9. ']*' → logprob: -16.3751163482666
    10. '[i' → logprob: -16.6251163482666

Token 551: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931896805763245
    2. ' +' → logprob: -0.6931896805763245
    3. ' if' → logprob: -10.69318962097168
    4. 'if' → logprob: -11.06818962097168
    5. '+
' → logprob: -13.06818962097168
    6. '   ' → logprob: -14.69318962097168
    7. ' ' → logprob: -14.69318962097168
    8. '[' → logprob: -14.94318962097168
    9. ' +
' → logprob: -15.31818962097168
    10. ' plus' → logprob: -16.31818962097168

Token 552: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.38688457012176514
    2. 'values' → logprob: -1.1368845701217651
    3. '(values' → logprob: -11.761884689331055
    4. '	values' → logprob: -12.636884689331055
    5. '.values' → logprob: -14.261884689331055
    6. ' ' → logprob: -14.386884689331055
    7. '   ' → logprob: -15.386884689331055
    8. '_values' → logprob: -15.511884689331055
    9. '1' → logprob: -15.761884689331055
    10. 'value' → logprob: -15.761884689331055

Token 553: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -1.0564331205387134e-05
    2. '_row' → logprob: -12.37501049041748
    3. 'col' → logprob: -12.87501049041748
    4. '[col' → logprob: -13.00001049041748
    5. '_' → logprob: -13.87501049041748
    6. '[_' → logprob: -16.125011444091797
    7. '[' → logprob: -16.250011444091797
    8. '_COL' → logprob: -16.875011444091797
    9. 'Col' → logprob: -17.125011444091797
    10. '_val' → logprob: -17.250011444091797

Token 554: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -1.688212614681106e-05
    2. '[' → logprob: -11.000017166137695
    3. '[
' → logprob: -17.500017166137695
    4. ' [' → logprob: -18.000017166137695
    5. '(ind' → logprob: -18.125017166137695
    6. '```' → logprob: -19.250017166137695
    7. '[in' → logprob: -19.375017166137695
    8. '[(' → logprob: -19.875017166137695
    9. 'ind' → logprob: -20.875017166137695
    10. '[int' → logprob: -21.000017166137695

Token 555: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.011547238565981388
    2. '_row' → logprob: -4.511547088623047
    3. 'col' → logprob: -7.636547088623047
    4. 'Col' → logprob: -11.886547088623047
    5. '_column' → logprob: -12.511547088623047
    6. '[col' → logprob: -13.011547088623047
    7. '	col' → logprob: -13.761547088623047
    8. '_COL' → logprob: -14.261547088623047
    9. 'row' → logprob: -14.261547088623047
    10. ' col' → logprob: -15.136547088623047

Token 556: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5690089639974758e-05
    2. '[' → logprob: -12.375015258789062
    3. '][' → logprob: -12.625015258789062
    4. '[j' → logprob: -12.625015258789062
    5. ' [' → logprob: -13.375015258789062
    6. '[I' → logprob: -13.625015258789062
    7. 'i' → logprob: -14.250015258789062
    8. '```' → logprob: -14.375015258789062
    9. ']' → logprob: -16.000015258789062
    10. '[int' → logprob: -16.250015258789062

Token 557: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7077314853668213
    2. '[j' → logprob: -1.2077314853668213
    3. '[i' → logprob: -1.5827314853668213
    4. '[' → logprob: -6.332731246948242
    5. ']' → logprob: -7.082731246948242
    6. ' [' → logprob: -8.957731246948242
    7. ']][' → logprob: -9.957731246948242
    8. ' ][' → logprob: -9.957731246948242
    9. 'j' → logprob: -10.332731246948242
    10. '   ' → logprob: -10.957731246948242

Token 558: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005170515505596995
    2. '[j' → logprob: -7.625516891479492
    3. ' j' → logprob: -10.625516891479492
    4. ']' → logprob: -13.625516891479492
    5. '```' → logprob: -14.000516891479492
    6. '][' → logprob: -14.125516891479492
    7. '   ' → logprob: -14.250516891479492
    8. '[' → logprob: -14.875516891479492
    9. ' ' → logprob: -15.250516891479492
    10. '	j' → logprob: -15.625516891479492

Token 559: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012654215970542282
    2. ']]' → logprob: -9.875126838684082
    3. ']
' → logprob: -10.000126838684082
    4. ']+' → logprob: -11.625126838684082
    5. ' ]' → logprob: -11.750126838684082
    6. ')]' → logprob: -12.000126838684082
    7. ']

' → logprob: -13.375126838684082
    8. '])' → logprob: -13.500126838684082
    9. '()]' → logprob: -14.125126838684082
    10. ']>' → logprob: -14.250126838684082

Token 560: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004044802393764257
    2. ' if' → logprob: -5.754045009613037
    3. 'if' → logprob: -8.129044532775879
    4. '   ' → logprob: -8.504044532775879
    5. '    
' → logprob: -8.879044532775879
    6. ' 
' → logprob: -9.379044532775879
    7. '+' → logprob: -9.754044532775879
    8. '
' → logprob: -10.004044532775879
    9. '  
' → logprob: -11.129044532775879
    10. ')' → logprob: -11.754044532775879

Token 561: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002031827752944082
    2. ' ' → logprob: -9.250203132629395
    3. '2' → logprob: -9.375203132629395
    4. 'is' → logprob: -11.875203132629395
    5. '(' → logprob: -12.375203132629395
    6. 'int' → logprob: -12.875203132629395
    7. ' (' → logprob: -12.875203132629395
    8. '(is' → logprob: -13.000203132629395
    9. '   ' → logprob: -13.250203132629395
    10. '0' → logprob: -14.125203132629395

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013228575699031353
    2. '(is' → logprob: -7.2513227462768555
    3. 'is' → logprob: -8.626322746276855
    4. '(' → logprob: -8.751322746276855
    5. 'int' → logprob: -9.251322746276855
    6. '2' → logprob: -9.251322746276855
    7. '(int' → logprob: -10.376322746276855
    8. ' ' → logprob: -10.626322746276855
    9. ' (' → logprob: -11.251322746276855
    10. '(in' → logprob: -12.876322746276855

Token 563: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45174741744995117
    2. '
' → logprob: -1.2017474174499512
    3. ')' → logprob: -3.326747417449951
    4. ' if' → logprob: -4.076747417449951
    5. '<|end|>' → logprob: -5.576747417449951
    6. '    
' → logprob: -5.701747417449951
    7. 'if' → logprob: -6.951747417449951
    8. ')
' → logprob: -7.951747417449951
    9. '	if' → logprob: -8.07674789428711
    10. '\n' → logprob: -8.45174789428711

Token 564: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001116404077038169
    2. ' if' → logprob: -8.001116752624512
    3. 'return' → logprob: -8.751116752624512
    4. '
' → logprob: -8.751116752624512
    5. ' return' → logprob: -8.876116752624512
    6. '    
' → logprob: -8.876116752624512
    7. 'if' → logprob: -9.376116752624512
    8. ')' → logprob: -9.876116752624512
    9. '	return' → logprob: -10.626116752624512
    10. '	if' → logprob: -12.251116752624512

Token 565: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6637363433837891
    2. 'return' (adapté à ' return') → logprob: -1.163736343383789
    3. ' if' → logprob: -2.288736343383789
    4. '   ' → logprob: -3.163736343383789
    5. ' return' → logprob: -3.538736343383789
    6. ',' → logprob: -10.788736343383789
    7. ')' → logprob: -12.163736343383789
    8. 'ans' → logprob: -12.413736343383789
    9. ' ' → logprob: -12.538736343383789
    10. '    ' → logprob: -12.913736343383789

Token 566: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0016016254667192698
    2. 'val' → logprob: -6.751601696014404
    3. ' max' → logprob: -7.751601696014404
    4. 'ans' → logprob: -14.376601219177246
    5. '   ' → logprob: -14.751601219177246
    6. ' val' → logprob: -15.376601219177246
    7. '
' → logprob: -17.626602172851562
    8. '	max' → logprob: -17.876602172851562
    9. '(max' → logprob: -18.001602172851562
    10. ' ans' → logprob: -19.001602172851562

Token 567: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.50001049041748
    3. '(val' → logprob: -14.62501049041748
    4. 'ans' → logprob: -17.500011444091797
    5. '(answer' → logprob: -19.000011444091797
    6. '(
' → logprob: -19.625011444091797
    7. '	ans' → logprob: -20.125011444091797
    8. ' (' → logprob: -20.625011444091797
    9. '(an' → logprob: -20.625011444091797
    10. '(acc' → logprob: -20.875011444091797

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008681939914822578
    2. ',val' → logprob: -4.758681774139404
    3. ' ,' → logprob: -9.633682250976562
    4. ',
' → logprob: -14.008682250976562
    5. ' val' → logprob: -14.758682250976562
    6. 'val' → logprob: -15.133682250976562
    7. ',

' → logprob: -16.133682250976562
    8. ')' → logprob: -16.258682250976562
    9. '[val' → logprob: -16.508682250976562
    10. ',value' → logprob: -16.758682250976562

Token 569: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.4740770161151886
    2. 'val' → logprob: -0.9740769863128662
    3. '	val' → logprob: -18.099077224731445
    4. '[val' → logprob: -18.974077224731445
    5. '(val' → logprob: -19.474077224731445
    6. '_val' → logprob: -20.474077224731445
    7. ',val' → logprob: -20.849077224731445
    8. ')' → logprob: -22.099077224731445
    9. '.val' → logprob: -22.349077224731445
    10. ' ' → logprob: -22.849077224731445

Token 570: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3544423381972592e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -15.12501335144043
    4. '<|end|>' → logprob: -16.50001335144043
    5. ')

' → logprob: -16.87501335144043
    6. ')}' → logprob: -17.50001335144043
    7. ')return' → logprob: -18.12501335144043
    8. '),' → logprob: -18.62501335144043
    9. '}' → logprob: -18.75001335144043
    10. ')#' → logprob: -19.00001335144043

Token 571: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1603061705827713
    2. ' main' → logprob: -1.9103062152862549
    3. 'def' → logprob: -10.035305976867676
    4. '__' → logprob: -11.160305976867676
    5. 'read' → logprob: -11.410305976867676
    6. 'solve' → logprob: -12.035305976867676
    7. 'if' → logprob: -13.160305976867676
    8. ' solve' → logprob: -13.535305976867676
    9. ' read' → logprob: -13.785305976867676
    10. ' __' → logprob: -14.285305976867676

Token 573: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.981667537620524e-06
    2. ' ():' → logprob: -13.500001907348633
    3. '():
' → logprob: -14.500001907348633
    4. '()' → logprob: -17.000001907348633
    5. '():
' → logprob: -19.500001907348633
    6. '()>' → logprob: -21.250001907348633
    7. '().' → logprob: -21.625001907348633
    8. ':' → logprob: -22.125001907348633
    9. '(' → logprob: -22.125001907348633
    10. '():

' → logprob: -22.375001907348633

Token 574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07253122329711914
    2. 'H' → logprob: -2.822531223297119
    3. ' H' → logprob: -4.572531223297119
    4. '(H' → logprob: -8.822530746459961
    5. '	H' → logprob: -11.572530746459961
    6. ' ' → logprob: -11.697530746459961
    7. '  ' → logprob: -12.197530746459961
    8. '()' → logprob: -12.447530746459961
    9. ',H' → logprob: -14.072530746459961
    10. '```' → logprob: -15.197530746459961

Token 575: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.0006771695916540921
    2. '   ' → logprob: -7.500677108764648
    3. ' H' → logprob: -9.000677108764648
    4. '	H' → logprob: -14.875677108764648
    5. ' ' → logprob: -15.500677108764648
    6. '(H' → logprob: -15.500677108764648
    7. '  ' → logprob: -16.00067710876465
    8. 'h' → logprob: -18.25067710876465
    9. ',H' → logprob: -18.87567710876465
    10. '_H' → logprob: -19.12567710876465

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000170882252859883
    2. ',W' → logprob: -8.750170707702637
    3. ' ,' → logprob: -11.375170707702637
    4. '   ' → logprob: -14.750170707702637
    5. 'W' → logprob: -15.000170707702637
    6. ' W' → logprob: -16.250171661376953
    7. ',
' → logprob: -16.375171661376953
    8. '=' → logprob: -18.125171661376953
    9. ',w' → logprob: -18.250171661376953
    10. '‌,' → logprob: -18.750171661376953

Token 577: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.07889099419116974
    2. ' W' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.203890800476074
    4. '  ' → logprob: -14.953890800476074
    5. '    ' → logprob: -15.953890800476074
    6. '   ' → logprob: -16.07889175415039
    7. ' ' → logprob: -17.45389175415039
    8. ' =' → logprob: -17.57889175415039
    9. '<|end|>' → logprob: -17.57889175415039
    10. '=W' → logprob: -18.32889175415039

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2522716820240021
    2. '=' → logprob: -1.5022716522216797
    3. ',' → logprob: -8.00227165222168
    4. '   ' → logprob: -12.75227165222168
    5. '<|end|>' → logprob: -13.37727165222168
    6. ')' → logprob: -13.75227165222168
    7. ' =
' → logprob: -14.75227165222168
    8. ')=' → logprob: -15.00227165222168
    9. ' =)' → logprob: -15.37727165222168
    10. ' ' → logprob: -15.62727165222168

Token 579: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5759623050689697
    2. 'read' → logprob: -0.8259623050689697
    3. ' map' → logprob: -10.82596206665039
    4. 'map' → logprob: -12.82596206665039
    5. '	read' → logprob: -15.45096206665039
    6. ' tuple' → logprob: -16.45096206665039
    7. ' ' → logprob: -17.07596206665039
    8. '   ' → logprob: -17.82596206665039
    9. '  ' → logprob: -18.32596206665039
    10. '(read' → logprob: -18.45096206665039

Token 580: '_dimensions' (ID: 157264)
  Prédit: '_dimensions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dimensions' → logprob: -0.00767938420176506
    2. '()' → logprob: -5.007679462432861
    3. '(' → logprob: -7.132679462432861
    4. '_dims' → logprob: -9.757678985595703
    5. '_' → logprob: -9.882678985595703
    6. 'dimensions' → logprob: -10.382678985595703
    7. 'Dimensions' → logprob: -11.882678985595703
    8. '_coordinates' → logprob: -12.382678985595703
    9. '()
' → logprob: -12.507678985595703
    10. '(dim' → logprob: -13.132678985595703

Token 581: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0792943462729454
    2. '
' → logprob: -2.579294443130493
    3. '    
' → logprob: -8.954294204711914
    4. 'mass' → logprob: -9.079294204711914
    5. '<|end|>' → logprob: -9.829294204711914
    6. ' mass' → logprob: -10.579294204711914
    7. '```' → logprob: -10.954294204711914
    8. '
' → logprob: -11.329294204711914
    9. '(m' → logprob: -11.704294204711914
    10. '  ' → logprob: -11.704294204711914

Token 582: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12265463173389435
    2. 'mass' → logprob: -2.247654676437378
    3. ' mass' → logprob: -4.997654438018799
    4. '
' → logprob: -6.997654438018799
    5. '```' → logprob: -6.997654438018799
    6. '<|end|>' → logprob: -6.997654438018799
    7. '	m' → logprob: -9.497654914855957
    8. '    
' → logprob: -9.872654914855957
    9. 'm' → logprob: -10.122654914855957
    10. '_mass' → logprob: -10.247654914855957

Token 583: ' mass' (ID: 4842)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mass' (adapté à ' mass') → logprob: -0.0001645644661039114
    2. '   ' → logprob: -8.875164985656738
    3. ' mass' → logprob: -10.625164985656738
    4. 'mas' → logprob: -15.750164985656738
    5. 'm' → logprob: -16.125164031982422
    6. '_mass' → logprob: -16.375164031982422
    7. 'Mass' → logprob: -17.500164031982422
    8. '.mass' → logprob: -18.000164031982422
    9. '  ' → logprob: -18.250164031982422
    10. 'massa' → logprob: -18.500164031982422

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024494677782059
    2. '=' → logprob: -2.3502449989318848
    3. '   ' → logprob: -10.225244522094727
    4. ',' → logprob: -13.975244522094727
    5. ' ' → logprob: -14.850244522094727
    6. '[' → logprob: -15.475244522094727
    7. ')' → logprob: -15.600244522094727
    8. '    ' → logprob: -15.850244522094727
    9. '  ' → logprob: -16.225244522094727
    10. '	' → logprob: -16.350244522094727

Token 585: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.014163628220558167
    2. ' read' → logprob: -4.264163494110107
    3. '(read' → logprob: -17.014163970947266
    4. '   ' → logprob: -17.389163970947266
    5. '	read' → logprob: -18.264163970947266
    6. '[' → logprob: -18.514163970947266
    7. '.read' → logprob: -20.139163970947266
    8. ' [' → logprob: -21.014163970947266
    9. '_read' → logprob: -21.764163970947266
    10. ' ' → logprob: -22.139163970947266

Token 586: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.16100449860095978
    2. '_dimensions' → logprob: -1.9110045433044434
    3. '(' → logprob: -7.661004543304443
    4. 'mass' → logprob: -8.786004066467285
    5. '(_' → logprob: -10.536004066467285
    6. '_' → logprob: -10.911004066467285
    7. '("_' → logprob: -11.161004066467285
    8. '_m' → logprob: -11.286004066467285
    9. '```' → logprob: -11.411004066467285
    10. 'dimensions' → logprob: -11.661004066467285

Token 587: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.981667537620524e-06
    2. 'H' → logprob: -13.375001907348633
    3. '(' → logprob: -14.750001907348633
    4. '   ' → logprob: -17.375001907348633
    5. ' (' → logprob: -17.750001907348633
    6. '(
' → logprob: -18.000001907348633
    7. '
' → logprob: -20.125001907348633
    8. 'def' → logprob: -20.500001907348633
    9. '```' → logprob: -20.750001907348633
    10. '((' → logprob: -21.500001907348633

Token 588: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009132515988312662
    2. ')
' → logprob: -7.000913143157959
    3. '   ' → logprob: -14.000913619995117
    4. ' )' → logprob: -14.125913619995117
    5. ')
' → logprob: -16.000913619995117
    6. '),' → logprob: -16.875913619995117
    7. ' ' → logprob: -17.125913619995117
    8. ')

' → logprob: -17.625913619995117
    9. '())' → logprob: -17.875913619995117
    10. '))' → logprob: -18.125913619995117

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12941180169582367
    2. ' ind' → logprob: -2.2544116973876953
    3. 'ind' → logprob: -4.129411697387695
    4. '
' → logprob: -8.379411697387695
    5. '    
' → logprob: -9.504411697387695
    6. '[ind' → logprob: -10.379411697387695
    7. '(ind' → logprob: -11.129411697387695
    8. '```' → logprob: -12.379411697387695
    9. '<|end|>' → logprob: -13.629411697387695
    10. '        
' → logprob: -14.379411697387695

Token 590: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.5927871465682983
    2. 'ind' (adapté à ' ind') → logprob: -0.8427871465682983
    3. '   ' → logprob: -4.092787265777588
    4. '[ind' → logprob: -12.46778678894043
    5. '(ind' → logprob: -12.96778678894043
    6. ' ' → logprob: -13.46778678894043
    7. '    
' → logprob: -13.71778678894043
    8. '  ' → logprob: -13.84278678894043
    9. 'indent' → logprob: -13.84278678894043
    10. '_ind' → logprob: -14.21778678894043

Token 591: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.1160349458805285e-05
    2. '_' → logprob: -12.875011444091797
    3. '_rows' → logprob: -13.125011444091797
    4. '_line' → logprob: -13.750011444091797
    5. ',_' → logprob: -13.875011444091797
    6. '_col' → logprob: -14.125011444091797
    7. ' _' → logprob: -14.250011444091797
    8. '   ' → logprob: -14.375011444091797
    9. '=_' → logprob: -14.375011444091797
    10. ',' → logprob: -14.375011444091797

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ' ,' → logprob: -13.37500286102295
    3. '‌,' → logprob: -14.50000286102295
    4. ',
' → logprob: -14.75000286102295
    5. '<|end|>' → logprob: -16.000003814697266
    6. ',int' → logprob: -17.375003814697266
    7. ',user' → logprob: -17.500003814697266
    8. ',

' → logprob: -17.750003814697266
    9. '‍,' → logprob: -17.750003814697266
    10. '_,' → logprob: -17.750003814697266

Token 593: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.47408273816108704
    2. 'values' → logprob: -0.9740827083587646
    3. '   ' → logprob: -13.224082946777344
    4. '	values' → logprob: -13.599082946777344
    5. '(values' → logprob: -14.224082946777344
    6. ' ' → logprob: -14.224082946777344
    7. '_values' → logprob: -14.724082946777344
    8. '.values' → logprob: -14.849082946777344
    9. '  ' → logprob: -16.349082946777344
    10. 'value' → logprob: -16.724082946777344

Token 594: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.735893965815194e-05
    2. '_' → logprob: -11.875017166137695
    3. ' =' → logprob: -13.000017166137695
    4. '=' → logprob: -13.500017166137695
    5. '=_' → logprob: -13.750017166137695
    6. ' _' → logprob: -13.875017166137695
    7. 'row' → logprob: -14.000017166137695
    8. '_line' → logprob: -14.000017166137695
    9. ',_' → logprob: -14.250017166137695
    10. ',' → logprob: -14.250017166137695

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16031795740127563
    2. ' =' → logprob: -1.9103178977966309
    3. ',' → logprob: -9.285318374633789
    4. '<|end|>' → logprob: -14.410318374633789
    5. '=create' → logprob: -15.410318374633789
    6. ')' → logprob: -16.53531837463379
    7. '=
' → logprob: -16.78531837463379
    8. '=

' → logprob: -17.16031837463379
    9. ' ' → logprob: -17.41031837463379
    10. ' =
' → logprob: -17.91031837463379

Token 596: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.03804149478673935
    2. ' process' → logprob: -3.288041591644287
    3. '(process' → logprob: -18.038042068481445
    4. '_process' → logprob: -19.163042068481445
    5. '	process' → logprob: -19.788042068481445
    6. '.process' → logprob: -20.038042068481445
    7. 'proces' → logprob: -20.538042068481445
    8. 'rocess' → logprob: -20.788042068481445
    9. ' proces' → logprob: -21.663042068481445
    10. 'prozess' → logprob: -22.788042068481445

Token 597: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -2.696889623621246e-06
    2. '_col' → logprob: -13.37500286102295
    3. 'row' → logprob: -13.75000286102295
    4. '_rows' → logprob: -17.250001907348633
    5. '_line' → logprob: -17.375001907348633
    6. '(row' → logprob: -18.500001907348633
    7. '_' → logprob: -18.875001907348633
    8. ' _' → logprob: -19.125001907348633
    9. '_Row' → logprob: -19.375001907348633
    10. '_mass' → logprob: -19.750001907348633

Token 598: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.02479836530983448
    2. '(m' → logprob: -4.149798393249512
    3. 'ind' → logprob: -4.774798393249512
    4. '(ind' → logprob: -8.774798393249512
    5. '_indicator' → logprob: -9.149798393249512
    6. ' indicators' → logprob: -12.149798393249512
    7. '_mass' → logprob: -12.274798393249512
    8. 'indicator' → logprob: -12.399798393249512
    9. 'mass' → logprob: -12.899798393249512
    10. 'Indicators' → logprob: -13.149798393249512

Token 599: 'icators' (ID: 70920)
  Prédit: 'icators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icators' → logprob: -2.0219828002154827e-05
    2. 'ic' → logprob: -10.875020027160645
    3. 'ators' → logprob: -14.250020027160645
    4. '(' → logprob: -15.750020027160645
    5. 'icator' → logprob: -16.12502098083496
    6. 'itors' → logprob: -16.37502098083496
    7. 'ex' → logprob: -16.75002098083496
    8. '[' → logprob: -16.87502098083496
    9. 'ind' → logprob: -17.37502098083496
    10. '_' → logprob: -17.87502098083496

Token 600: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -13.125004768371582
    3. ' (' → logprob: -13.750004768371582
    4. '   ' → logprob: -14.125004768371582
    5. 'mass' → logprob: -15.000004768371582
    6. '```' → logprob: -15.625004768371582
    7. ' mass' → logprob: -16.375003814697266
    8. 'm' → logprob: -17.125003814697266
    9. '`' → logprob: -17.875003814697266
    10. '(
' → logprob: -18.125003814697266

Token 601: 'ass' (ID: 456)
  Prédit: 'ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -4.842555426876061e-06
    2. '   ' → logprob: -13.875004768371582
    3. 'as' → logprob: -13.875004768371582
    4. 'mass' → logprob: -14.250004768371582
    5. ')' → logprob: -14.750004768371582
    6. '```' → logprob: -15.000004768371582
    7. 'a' → logprob: -15.500004768371582
    8. 'асс' → logprob: -15.500004768371582
    9. ' ass' → logprob: -15.750004768371582
    10. ' mass' → logprob: -15.750004768371582

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0921942703134846e-05
    2. ' ,' → logprob: -11.87501049041748
    3. ',H' → logprob: -12.50001049041748
    4. '   ' → logprob: -15.50001049041748
    5. ')' → logprob: -18.000011444091797
    6. ',W' → logprob: -19.000011444091797
    7. ',
' → logprob: -19.125011444091797
    8. '=' → logprob: -19.625011444091797
    9. 'import' → logprob: -19.875011444091797
    10. '```' → logprob: -20.250011444091797

Token 603: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.493430894101039e-05
    2. ' H' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.37507438659668
    4. ')' → logprob: -20.12507438659668
    5. 'W' → logprob: -20.12507438659668
    6. ',H' → logprob: -21.00007438659668
    7. '(H' → logprob: -21.62507438659668
    8. '<|end|>' → logprob: -22.37507438659668
    9. ' ' → logprob: -22.75007438659668
    10. '	H' → logprob: -22.75007438659668

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.023293538717553e-05
    2. ',W' → logprob: -10.750030517578125
    3. ' ,' → logprob: -11.875030517578125
    4. '   ' → logprob: -13.250030517578125
    5. ',
' → logprob: -18.000030517578125
    6. ')' → logprob: -18.250030517578125
    7. '‌,' → logprob: -19.250030517578125
    8. '```' → logprob: -19.250030517578125
    9. ',w' → logprob: -19.375030517578125
    10. 'W' → logprob: -19.875030517578125

Token 605: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.005233763717114925
    2. ' W' → logprob: -5.2552337646484375
    3. '   ' → logprob: -18.505233764648438
    4. ')' → logprob: -20.130233764648438
    5. ' ' → logprob: -20.755233764648438
    6. '```' → logprob: -21.505233764648438
    7. '	W' → logprob: -21.755233764648438
    8. '<W' → logprob: -21.880233764648438
    9. ',W' → logprob: -22.130233764648438
    10. '  ' → logprob: -22.255233764648438

Token 606: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2616746127605438
    2. ')
' → logprob: -1.5116746425628662
    3. '   ' → logprob: -4.636674404144287
    4. ')
' → logprob: -11.761674880981445
    5. '),' → logprob: -16.136674880981445
    6. ' ' → logprob: -16.261674880981445
    7. '```' → logprob: -16.511674880981445
    8. ',' → logprob: -16.636674880981445
    9. ')

' → logprob: -16.761674880981445
    10. ' )
' → logprob: -17.011674880981445

Token 607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28425928950309753
    2. 'ind' → logprob: -1.78425931930542
    3. ' ind' → logprob: -2.53425931930542
    4. '[ind' → logprob: -9.159258842468262
    5. '```' → logprob: -10.034258842468262
    6. '
' → logprob: -10.784258842468262
    7. '(ind' → logprob: -12.034258842468262
    8. 'indent' → logprob: -12.159258842468262
    9. '    
' → logprob: -13.034258842468262
    10. 'indt' → logprob: -14.034258842468262

Token 608: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' (adapté à ' ind') → logprob: -0.0649564117193222
    2. ' ind' → logprob: -2.8149564266204834
    3. '   ' → logprob: -5.814956188201904
    4. '[ind' → logprob: -13.689956665039062
    5. 'indent' → logprob: -14.939956665039062
    6. '(ind' → logprob: -16.189956665039062
    7. 'indt' → logprob: -17.314956665039062
    8. '```' → logprob: -17.564956665039062
    9. '.ind' → logprob: -17.689956665039062
    10. ' ' → logprob: -18.064956665039062

Token 609: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -2.696889623621246e-06
    2. ',_' → logprob: -13.37500286102295
    3. ',' → logprob: -14.75000286102295
    4. '_column' → logprob: -15.37500286102295
    5. '_,' → logprob: -16.125001907348633
    6. '_row' → logprob: -17.000001907348633
    7. '_com' → logprob: -17.000001907348633
    8. '_cols' → logprob: -17.250001907348633
    9. 'col' → logprob: -17.375001907348633
    10. '_' → logprob: -17.375001907348633

Token 610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. '=' → logprob: -13.375004768371582
    3. ',col' → logprob: -13.625004768371582
    4. ' ,' → logprob: -14.000004768371582
    5. ',
' → logprob: -14.750004768371582
    6. '‌,' → logprob: -16.250003814697266
    7. ',value' → logprob: -16.875003814697266
    8. '_,' → logprob: -17.125003814697266
    9. ',column' → logprob: -17.500003814697266
    10. ' col' → logprob: -18.000003814697266

Token 611: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.31326231360435486
    2. ' values' → logprob: -1.3132623434066772
    3. '(values' → logprob: -15.188261985778809
    4. '	values' → logprob: -15.563261985778809
    5. '.values' → logprob: -16.813262939453125
    6. 'value' → logprob: -16.813262939453125
    7. '   ' → logprob: -17.438262939453125
    8. 'process' → logprob: -17.688262939453125
    9. '_values' → logprob: -17.688262939453125
    10. ' ' → logprob: -17.813262939453125

Token 612: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.029306979849934578
    2. ' =' → logprob: -3.9043068885803223
    3. '=' → logprob: -4.779306888580322
    4. 'col' → logprob: -8.77930736541748
    5. ',' → logprob: -9.27930736541748
    6. '   ' → logprob: -9.90430736541748
    7. '(m' → logprob: -12.02930736541748
    8. '_COL' → logprob: -12.77930736541748
    9. '_mass' → logprob: -12.90430736541748
    10. '[col' → logprob: -13.27930736541748

Token 613: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '＝' → logprob: -20.878177642822266
    4. ',' → logprob: -21.378177642822266
    5. ')' → logprob: -21.753177642822266
    6. '=
' → logprob: -22.378177642822266
    7. '=

' → logprob: -22.378177642822266
    8. '=create' → logprob: -22.628177642822266
    9. '=m' → logprob: -22.878177642822266
    10. ')=' → logprob: -23.003177642822266

Token 614: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.02975083328783512
    2. ' process' → logprob: -3.5297508239746094
    3. '(process' → logprob: -15.02975082397461
    4. '	process' → logprob: -19.02975082397461
    5. '.process' → logprob: -19.77975082397461
    6. '_process' → logprob: -21.90475082397461
    7. 'proces' → logprob: -22.15475082397461
    8. ' proces' → logprob: -22.40475082397461
    9. 'rocess' → logprob: -22.65475082397461
    10. '   ' → logprob: -23.90475082397461

Token 615: '_col' (ID: 7255)
  Prédit: '_ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.0028313882648944855
    2. 'ind' → logprob: -6.00283145904541
    3. '_col' → logprob: -8.00283145904541
    4. '(m' → logprob: -11.25283145904541
    5. '(ind' → logprob: -12.00283145904541
    6. '_row' → logprob: -14.50283145904541
    7. 'col' → logprob: -14.62783145904541
    8. '_mass' → logprob: -15.25283145904541
    9. '_indicator' → logprob: -15.37783145904541
    10. 'mass' → logprob: -15.62783145904541

Token 616: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.07271791249513626
    2. 'ind' → logprob: -2.6977179050445557
    3. '(m' → logprob: -6.072718143463135
    4. '(ind' → logprob: -8.447717666625977
    5. ' indicators' → logprob: -9.572717666625977
    6. '(H' → logprob: -9.822717666625977
    7. 'Indicators' → logprob: -9.822717666625977
    8. '(W' → logprob: -10.197717666625977
    9. 's' → logprob: -12.197717666625977
    10. 'indicator' → logprob: -12.322717666625977

Token 617: 'icators' (ID: 70920)
  Prédit: 'icators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icators' → logprob: -7.584239938296378e-06
    2. 'ators' → logprob: -12.250007629394531
    3. '(' → logprob: -14.000007629394531
    4. 'ic' → logprob: -14.500007629394531
    5. 'ex' → logprob: -14.875007629394531
    6. 'itors' → logprob: -15.000007629394531
    7. 'actors' → logprob: -15.250007629394531
    8. '[' → logprob: -16.37500762939453
    9. '   ' → logprob: -16.50000762939453
    10. '```' → logprob: -16.75000762939453

Token 618: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.128163257315464e-07
    2. 'mass' → logprob: -16.125
    3. '(' → logprob: -16.5
    4. 'm' → logprob: -16.75
    5. '```' → logprob: -17.375
    6. ' mass' → logprob: -17.5
    7. ' (' → logprob: -17.75
    8. ',m' → logprob: -18.375
    9. '[m' → logprob: -18.875
    10. ',' → logprob: -19.5

Token 619: 'ass' (ID: 456)
  Prédit: 'ass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.015530280768871307
    2. 'mass' → logprob: -4.265530109405518
    3. ',' → logprob: -6.640530109405518
    4. ' mass' → logprob: -10.140530586242676
    5. '   ' → logprob: -11.515530586242676
    6. 'H' → logprob: -12.765530586242676
    7. 'ess' → logprob: -13.140530586242676
    8. 'ss' → logprob: -14.265530586242676
    9. '```' → logprob: -14.515530586242676
    10. ',H' → logprob: -14.765530586242676

Token 620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014239625306800008
    2. ',m' → logprob: -9.625142097473145
    3. ' ,' → logprob: -10.250142097473145
    4. '   ' → logprob: -10.625142097473145
    5. ')' → logprob: -11.625142097473145
    6. '(m' → logprob: -12.875142097473145
    7. ',H' → logprob: -13.000142097473145
    8. '(' → logprob: -14.000142097473145
    9. ',
' → logprob: -14.250142097473145
    10. '),' → logprob: -15.250142097473145

Token 621: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.2246291337069124e-05
    2. ' H' → logprob: -10.750021934509277
    3. 'mass' → logprob: -14.500021934509277
    4. '(H' → logprob: -16.125022888183594
    5. ' mass' → logprob: -16.250022888183594
    6. '   ' → logprob: -17.125022888183594
    7. ',H' → logprob: -18.750022888183594
    8. ',' → logprob: -19.875022888183594
    9. '-H' → logprob: -20.500022888183594
    10. ')' → logprob: -20.625022888183594

Token 622: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014919086243025959
    2. ',W' → logprob: -8.87514877319336
    3. ' ,' → logprob: -11.75014877319336
    4. '   ' → logprob: -14.00014877319336
    5. 'W' → logprob: -14.62514877319336
    6. ',H' → logprob: -16.25014877319336
    7. ',
' → logprob: -18.25014877319336
    8. '```' → logprob: -19.00014877319336
    9. ')' → logprob: -19.12514877319336
    10. ' W' → logprob: -19.37514877319336

Token 623: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.01011207327246666
    2. 'H' → logprob: -4.760112285614014
    3. ' W' → logprob: -6.510112285614014
    4. ' H' → logprob: -11.760111808776855
    5. '   ' → logprob: -15.635111808776855
    6. ' ' → logprob: -16.760112762451172
    7. '```' → logprob: -18.260112762451172
    8. ')' → logprob: -18.635112762451172
    9. '	W' → logprob: -19.010112762451172
    10. ',W' → logprob: -19.260112762451172

Token 624: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011149736819788814
    2. ')
' → logprob: -7.001114845275879
    3. '   ' → logprob: -8.501114845275879
    4. ')
' → logprob: -15.751114845275879
    5. ' )' → logprob: -15.876114845275879
    6. ')

' → logprob: -17.501115798950195
    7. ' ' → logprob: -18.501115798950195
    8. ').' → logprob: -18.876115798950195
    9. ')`' → logprob: -18.876115798950195
    10. '),' → logprob: -19.001115798950195

Token 625: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037621514638885856
    2. 'ans' → logprob: -8.625375747680664
    3. '```' → logprob: -9.375375747680664
    4. 'print' → logprob: -9.875375747680664
    5. 'result' → logprob: -10.625375747680664
    6. ' ans' → logprob: -11.250375747680664
    7. '	ans' → logprob: -11.625375747680664
    8. '    
' → logprob: -12.375375747680664
    9. '
' → logprob: -12.500375747680664
    10. 'answer' → logprob: -13.000375747680664

Token 626: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.3927539885044098
    2. 'print' → logprob: -1.1427539587020874
    3. '   ' → logprob: -6.017754077911377
    4. 'result' → logprob: -6.017754077911377
    5. 'answer' → logprob: -7.017754077911377
    6. 'res' → logprob: -9.642753601074219
    7. ' ans' → logprob: -11.017753601074219
    8. '```' → logprob: -12.142753601074219
    9. 'max' → logprob: -12.267753601074219
    10. ' print' → logprob: -12.767753601074219

Token 627: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740794599056244
    2. '=' → logprob: -0.9740794897079468
    3. '   ' → logprob: -13.724079132080078
    4. ')' → logprob: -14.974079132080078
    5. ' ' → logprob: -15.099079132080078
    6. '  ' → logprob: -15.474079132080078
    7. 'print' → logprob: -15.724079132080078
    8. '.' → logprob: -16.724079132080078
    9. ' =
' → logprob: -16.724079132080078
    10. '(' → logprob: -16.974079132080078

Token 628: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.048587486147880554
    2. ' compute' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.423587799072266
    4. '.compute' → logprob: -17.173587799072266
    5. '_compute' → logprob: -17.673587799072266
    6. 'computer' → logprob: -18.673587799072266
    7. 'max' → logprob: -19.048587799072266
    8. '0' → logprob: -19.173587799072266
    9. '
' → logprob: -20.673587799072266
    10. 'comput' → logprob: -21.048587799072266

Token 629: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.5048530030981055e-06
    2. 'max' → logprob: -13.500001907348633
    3. '_sum' → logprob: -19.125001907348633
    4. '_min' → logprob: -19.500001907348633
    5. '```' → logprob: -20.750001907348633
    6. '_MAX' → logprob: -20.875001907348633
    7. ' _' → logprob: -21.125001907348633
    8. '
' → logprob: -21.375001907348633
    9. '_total' → logprob: -21.750001907348633
    10. '(max' → logprob: -21.875001907348633

Token 630: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.704273118884885e-07
    2. 'sum' → logprob: -15.000000953674316
    3. '_max' → logprob: -15.875000953674316
    4. '
' → logprob: -17.0
    5. '_val' → logprob: -17.125
    6. '```' → logprob: -17.25
    7. '_ans' → logprob: -17.25
    8. ' _' → logprob: -17.375
    9. '\' → logprob: -17.75
    10. '__' → logprob: -18.625

Token 631: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -6.704273118884885e-07
    2. ' (' → logprob: -14.750000953674316
    3. '(' → logprob: -15.625000953674316
    4. 'H' → logprob: -18.125
    5. '```' → logprob: -18.5
    6. '(len' → logprob: -19.5
    7. '(
' → logprob: -19.75
    8. '(h' → logprob: -20.75
    9. '((' → logprob: -21.0
    10. '(W' → logprob: -21.125

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8670179997570813e-05
    2. ',W' → logprob: -11.375019073486328
    3. ' ,' → logprob: -12.125019073486328
    4. ',
' → logprob: -13.625019073486328
    5. '   ' → logprob: -14.875019073486328
    6. '```' → logprob: -16.625019073486328
    7. '=' → logprob: -17.250019073486328
    8. ')' → logprob: -17.500019073486328
    9. 'W' → logprob: -17.875019073486328
    10. ',H' → logprob: -19.000019073486328

Token 633: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.01815006136894226
    2. ' W' → logprob: -4.0181498527526855
    3. '   ' → logprob: -16.018150329589844
    4. ' ' → logprob: -17.893150329589844
    5. '  ' → logprob: -18.143150329589844
    6. '```' → logprob: -18.143150329589844
    7. '	W' → logprob: -19.018150329589844
    8. ',W' → logprob: -19.268150329589844
    9. '<W' → logprob: -19.518150329589844
    10. ')' → logprob: -19.768150329589844

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.941850526549388e-06
    2. ' ,' → logprob: -11.875007629394531
    3. ',
' → logprob: -14.875007629394531
    4. 'ind' → logprob: -15.250007629394531
    5. ')' → logprob: -15.750007629394531
    6. '   ' → logprob: -16.00000762939453
    7. '[ind' → logprob: -16.75000762939453
    8. '```' → logprob: -18.12500762939453
    9. '(ind' → logprob: -18.37500762939453
    10. '_,' → logprob: -18.50000762939453

Token 635: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.0007099286303855479
    2. ' ind' → logprob: -7.2507100105285645
    3. '[ind' → logprob: -19.500709533691406
    4. 'indent' → logprob: -20.375709533691406
    5. '(ind' → logprob: -20.750709533691406
    6. '   ' → logprob: -21.000709533691406
    7. ' ' → logprob: -22.375709533691406
    8. 'inds' → logprob: -22.625709533691406
    9. '.ind' → logprob: -22.750709533691406
    10. '_ind' → logprob: -22.875709533691406

Token 636: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -3.4121114822482923e-06
    2. 'row' → logprob: -13.000003814697266
    3. '_col' → logprob: -13.750003814697266
    4. ',row' → logprob: -17.500003814697266
    5. ',' → logprob: -17.875003814697266
    6. ',_' → logprob: -18.125003814697266
    7. '_ROW' → logprob: -18.375003814697266
    8. ' row' → logprob: -18.375003814697266
    9. '_rows' → logprob: -18.750003814697266
    10. ' _' → logprob: -19.750003814697266

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.676981345459353e-06
    2. ' ,' → logprob: -12.250005722045898
    3. 'values' → logprob: -14.250005722045898
    4. ',
' → logprob: -16.2500057220459
    5. '```' → logprob: -17.5000057220459
    6. '‌,' → logprob: -18.1250057220459
    7. 'ind' → logprob: -18.1250057220459
    8. '   ' → logprob: -18.8750057220459
    9. ',value' → logprob: -18.8750057220459
    10. ' values' → logprob: -18.8750057220459

Token 638: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.023245595395565033
    2. ' values' → logprob: -3.7732455730438232
    3. '	values' → logprob: -17.023244857788086
    4. '.values' → logprob: -17.148244857788086
    5. '(values' → logprob: -17.773244857788086
    6. '_values' → logprob: -18.148244857788086
    7. '   ' → logprob: -19.648244857788086
    8. 'ind' → logprob: -20.273244857788086
    9. '-values' → logprob: -21.148244857788086
    10. ' ' → logprob: -21.523244857788086

Token 639: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.08698906749486923
    2. 'row' → logprob: -3.086989164352417
    3. ',' → logprob: -3.336989164352417
    4. ',row' → logprob: -6.836988925933838
    5. 'values' → logprob: -7.086988925933838
    6. '_col' → logprob: -8.836989402770996
    7. 'col' → logprob: -10.836989402770996
    8. 'Row' → logprob: -11.336989402770996
    9. '_,' → logprob: -11.461989402770996
    10. ' ,' → logprob: -11.836989402770996

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.180258191714529e-06
    2. ' ,' → logprob: -12.000008583068848
    3. 'ind' → logprob: -13.750008583068848
    4. '[ind' → logprob: -14.750008583068848
    5. ',
' → logprob: -15.375008583068848
    6. '   ' → logprob: -15.750008583068848
    7. ' ind' → logprob: -17.25000762939453
    8. '```' → logprob: -17.75000762939453
    9. '(ind' → logprob: -18.50000762939453
    10. '‌,' → logprob: -19.37500762939453

Token 641: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.0019312551012262702
    2. ' ind' → logprob: -6.251931190490723
    3. 'values' → logprob: -13.001931190490723
    4. '   ' → logprob: -15.876931190490723
    5. ' values' → logprob: -16.50193214416504
    6. '[ind' → logprob: -16.87693214416504
    7. 'indent' → logprob: -17.25193214416504
    8. 'inds' → logprob: -18.00193214416504
    9. '  ' → logprob: -18.25193214416504
    10. '(ind' → logprob: -18.62693214416504

Token 642: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -1.2664456789934775e-06
    2. '_row' → logprob: -14.250000953674316
    3. 'col' → logprob: -14.375000953674316
    4. '_COL' → logprob: -18.250001907348633
    5. '_column' → logprob: -18.625001907348633
    6. ',' → logprob: -18.875001907348633
    7. 'Col' → logprob: -19.250001907348633
    8. '_,' → logprob: -20.250001907348633
    9. '	col' → logprob: -20.500001907348633
    10. '_' → logprob: -21.000001907348633

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4285862057004124e-05
    2. 'values' → logprob: -10.37503433227539
    3. ' ,' → logprob: -12.87503433227539
    4. ',value' → logprob: -15.50003433227539
    5. ' values' → logprob: -16.00003433227539
    6. '(values' → logprob: -16.87503433227539
    7. ',
' → logprob: -17.50003433227539
    8. '```' → logprob: -17.75003433227539
    9. '.values' → logprob: -18.25003433227539
    10. '_values' → logprob: -18.37503433227539

Token 644: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.02975071594119072
    2. ' values' → logprob: -3.5297508239746094
    3. 'ind' → logprob: -16.40475082397461
    4. '	values' → logprob: -16.52975082397461
    5. '(values' → logprob: -18.02975082397461
    6. '   ' → logprob: -18.15475082397461
    7. '.values' → logprob: -18.27975082397461
    8. ' ' → logprob: -18.90475082397461
    9. '_values' → logprob: -19.27975082397461
    10. 'value' → logprob: -19.27975082397461

Token 645: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -5.8961017202818766e-05
    2. 'col' → logprob: -10.625059127807617
    3. ',' → logprob: -10.875059127807617
    4. '_COL' → logprob: -12.000059127807617
    5. 'Col' → logprob: -12.500059127807617
    6. '_cols' → logprob: -12.750059127807617
    7. '_values' → logprob: -13.625059127807617
    8. '_,' → logprob: -14.000059127807617
    9. '_row' → logprob: -15.125059127807617
    10. ',col' → logprob: -15.875059127807617

Token 646: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029781844466924667
    2. ')' → logprob: -3.5297818183898926
    3. '   ' → logprob: -10.90478229522705
    4. ')
' → logprob: -11.27978229522705
    5. ')

' → logprob: -15.65478229522705
    6. ')`
' → logprob: -16.279781341552734
    7. ' )
' → logprob: -16.404781341552734
    8. ' ' → logprob: -17.279781341552734
    9. '  ' → logprob: -18.279781341552734
    10. ',' → logprob: -18.529781341552734

Token 647: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002951793372631073
    2. 'print' → logprob: -5.877951622009277
    3. ' print' → logprob: -9.502951622009277
    4. '```' → logprob: -9.877951622009277
    5. '
' → logprob: -11.002951622009277
    6. '    
' → logprob: -13.252951622009277
    7. '	print' → logprob: -13.252951622009277
    8. '<|end|>' → logprob: -15.377951622009277
    9. '``' → logprob: -16.377952575683594
    10. '
' → logprob: -16.627952575683594

Token 648: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -12.750003814697266
    3. ' print' → logprob: -14.375003814697266
    4. '```' → logprob: -14.875003814697266
    5. 'return' → logprob: -18.000003814697266
    6. '#print' → logprob: -19.500003814697266
    7. '	print' → logprob: -20.000003814697266
    8. '``' → logprob: -20.625003814697266
    9. 'pr' → logprob: -21.250003814697266
    10. '`' → logprob: -22.750003814697266

Token 649: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.125015258789062
    3. '(answer' → logprob: -15.500015258789062
    4. ' (' → logprob: -16.000015258789062
    5. '(
' → logprob: -17.375015258789062
    6. '()' → logprob: -17.500015258789062
    7. '('' → logprob: -18.000015258789062
    8. '(max' → logprob: -18.000015258789062
    9. '(ord' → logprob: -18.500015258789062
    10. '(abs' → logprob: -18.750015258789062

Token 650: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.5
    3. ')
' → logprob: -16.875
    4. '()' → logprob: -17.5
    5. ')`' → logprob: -17.625
    6. '())' → logprob: -17.875
    7. '))' → logprob: -18.625
    8. '`)' → logprob: -19.375
    9. '')' → logprob: -20.25
    10. ')}' → logprob: -20.375

Token 651: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00026574634830467403
    2. 'main' → logprob: -8.250266075134277
    3. ' if' → logprob: -12.375266075134277
    4. '```' → logprob: -15.750266075134277
    5. '#' → logprob: -16.12526512145996
    6. ' main' → logprob: -17.25026512145996
    7. '(main' → logprob: -17.62526512145996
    8. '
' → logprob: -18.37526512145996
    9. '\' → logprob: -19.00026512145996
    10. '#if' → logprob: -19.12526512145996

Token 652: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 650
Tokens correctement prédits (1ère position, stricte): 331
Tokens correctement prédits (1ère position, avec adaptation): 355
Tokens correctement prédits (top 10): 589
Précision stricte (1ère position): 50.92%
Précision adaptée (1ère position): 54.62%
Précision (top 10): 90.62%
================================================================================
