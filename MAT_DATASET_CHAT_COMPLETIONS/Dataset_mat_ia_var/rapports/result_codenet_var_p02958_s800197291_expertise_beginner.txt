================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = input().split()
for i in range(n):
    s[i] = int(s[i])

result = "YES"
problems = 0

for i in range(n - 1):
    if s[i + 1] - s[i] < 1:
        problems += 1
        if problems == 1:
            first_val = s[i]
            first_idx = i
        elif problems == 2:
            second_val = s[i + 1]
            second_idx = i + 1
        elif problems > 2:
            result = "NO"
            break

if problems == 1:
    result = "NO"
elif problems == 2:
    # swap the two elements
    temp = s[first_idx]
    s[first_idx] = s[second_idx]
    s[second_idx] = temp
    # check if the swap fixed the sequence
    ok = True
    if first_idx < n - 1:
        if s[first_idx + 1] - s[first_idx] < 1:
            ok = False
    if second_idx > 0:
        if s[second_idx] - s[second_idx - 1] < 1:
            ok = False
    if not ok:
        result = "NO"

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.717296517104842e-05
    2. ''' → logprob: -10.625057220458984
    3. '('' → logprob: -11.250057220458984
    4. '(
' → logprob: -11.875057220458984
    5. '(n' → logprob: -13.000057220458984
    6. '```' → logprob: -13.250057220458984
    7. '("("' → logprob: -13.250057220458984
    8. '()' → logprob: -13.500057220458984
    9. '`' → logprob: -13.625057220458984
    10. '[' → logprob: -14.125057220458984

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733853131532669
    2. ')' → logprob: -2.823385238647461
    3. '()' → logprob: -4.698385238647461
    4. '())' → logprob: -6.948385238647461
    5. '```' → logprob: -8.198385238647461
    6. '(
' → logprob: -8.448385238647461
    7. '('' → logprob: -8.823385238647461
    8. '(()' → logprob: -9.073385238647461
    9. '`' → logprob: -9.198385238647461
    10. '("("' → logprob: -9.698385238647461

Token 5: 's' (ID: 82)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9191970825195312
    2. 'i' → logprob: -1.1691970825195312
    3. 'for' → logprob: -1.6691970825195312
    4. 's' → logprob: -3.1691970825195312
    5. '*' → logprob: -4.669197082519531
    6. ')' → logprob: -4.919197082519531
    7. 'x' → logprob: -5.044197082519531
    8. '#' → logprob: -5.169197082519531
    9. '`' → logprob: -5.169197082519531
    10. 'a' → logprob: -5.544197082519531

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2778743505477905
    2. '[' → logprob: -1.5278743505477905
    3. 'um' → logprob: -1.5278743505477905
    4. ' =' → logprob: -1.6528743505477905
    5. '=' → logprob: -3.40287446975708
    6. 'tr' → logprob: -3.90287446975708
    7. 'trip' → logprob: -4.90287446975708
    8. 'u' → logprob: -5.27787446975708
    9. ' +=' → logprob: -5.52787446975708
    10. 't' → logprob: -5.77787446975708

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.24063092470169067
    2. ' input' → logprob: -1.865630865097046
    3. '""' → logprob: -3.240630865097046
    4. '''' → logprob: -4.490631103515625
    5. '"' → logprob: -5.990631103515625
    6. ''' → logprob: -6.490631103515625
    7. '0' → logprob: -6.740631103515625
    8. ' ""' → logprob: -6.865631103515625
    9. ' ''' → logprob: -7.115631103515625
    10. ' ' → logprob: -7.365631103515625

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037087430246174335
    2. ''' → logprob: -6.628708839416504
    3. '('' → logprob: -6.878708839416504
    4. '()' → logprob: -7.753708839416504
    5. '"' → logprob: -8.378708839416504
    6. ')' → logprob: -8.628708839416504
    7. '`' → logprob: -8.878708839416504
    8. '(
' → logprob: -9.003708839416504
    9. '("("' → logprob: -9.628708839416504
    10. ' (' → logprob: -10.128708839416504

Token 9: 'split' (ID: 13627)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1257802248001099
    2. 'if' → logprob: -1.3757802248001099
    3. '.' → logprob: -1.8757802248001099
    4. 's' → logprob: -3.2507801055908203
    5. 'count' → logprob: -3.3757801055908203
    6. 't' → logprob: -3.7507801055908203
    7. 'l' → logprob: -3.8757801055908203
    8. '_' → logprob: -4.12578010559082
    9. '#' → logprob: -4.25078010559082
    10. 'a' → logprob: -4.37578010559082

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005244191270321608
    2. '('' → logprob: -6.005244255065918
    3. '("("' → logprob: -6.380244255065918
    4. '()' → logprob: -7.505244255065918
    5. '`' → logprob: -9.255244255065918
    6. ' (' → logprob: -9.505244255065918
    7. '((' → logprob: -9.755244255065918
    8. '"' → logprob: -9.755244255065918
    9. '(

' → logprob: -9.880244255065918
    10. ''' → logprob: -10.255244255065918

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14061419665813446
    2. 'a' → logprob: -3.6406142711639404
    3. 's' → logprob: -3.8906142711639404
    4. 'c' → logprob: -4.140614032745361
    5. 'result' → logprob: -4.140614032745361
    6. 'count' → logprob: -4.390614032745361
    7. '[' → logprob: -4.390614032745361
    8. 'numbers' → logprob: -5.765614032745361
    9. 'sum' → logprob: -5.890614032745361
    10. 'n' → logprob: -5.890614032745361

Token 12: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2531597912311554
    2. ' ' → logprob: -1.628159761428833
    3. '_' → logprob: -3.878159761428833
    4. 'i' → logprob: -5.503159999847412
    5. ' _' → logprob: -6.128159999847412
    6. '  ' → logprob: -8.503159523010254
    7. ' ‌' → logprob: -9.878159523010254
    8. ' s' → logprob: -10.253159523010254
    9. ' x' → logprob: -10.378159523010254
    10. ' item' → logprob: -10.878159523010254

Token 13: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2654390335083008
    2. ' in' → logprob: -1.5154390335083008
    3. ' ' → logprob: -5.015439033508301
    4. 'n' → logprob: -5.765439033508301
    5. '_' → logprob: -6.515439033508301
    6. '  ' → logprob: -6.765439033508301
    7. ' n' → logprob: -8.0154390335083
    8. ')' → logprob: -8.6404390335083
    9. '<|end|>' → logprob: -9.6404390335083
    10. '[' → logprob: -9.8904390335083

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5760044455528259
    2. ' range' → logprob: -0.8260044455528259
    3. 's' → logprob: -9.701004028320312
    4. '	range' → logprob: -13.576004028320312
    5. ' s' → logprob: -13.951004028320312
    6. '(range' → logprob: -14.201004028320312
    7. 'n' → logprob: -14.951004028320312
    8. '.range' → logprob: -15.826004028320312
    9. ' xrange' → logprob: -15.826004028320312
    10. '_range' → logprob: -16.201004028320312

Token 15: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07905624061822891
    2. '(n' → logprob: -2.5790562629699707
    3. ' (' → logprob: -9.204055786132812
    4. '(len' → logprob: -9.829055786132812
    5. '(range' → logprob: -12.579055786132812
    6. '(
' → logprob: -12.704055786132812
    7. '(i' → logprob: -12.829055786132812
    8. '((' → logprob: -14.829055786132812
    9. ' ' → logprob: -14.829055786132812
    10. '()' → logprob: -15.079055786132812

Token 16: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04874496906995773
    2. '):' → logprob: -3.0487449169158936
    3. '[' → logprob: -9.423745155334473
    4. '+' → logprob: -10.048745155334473
    5. ':' → logprob: -11.298745155334473
    6. ' )' → logprob: -12.048745155334473
    7. '-' → logprob: -13.298745155334473
    8. '[i' → logprob: -13.298745155334473
    9. ')**' → logprob: -13.548745155334473
    10. '):
' → logprob: -13.798745155334473

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15758579969406128
    2. ' ' → logprob: -2.657585859298706
    3. '    ' → logprob: -3.657585859298706
    4. ' if' → logprob: -3.907585859298706
    5. ' s' → logprob: -4.282585620880127
    6. 's' → logprob: -5.532585620880127
    7. 'if' → logprob: -5.532585620880127
    8. '    
' → logprob: -6.032585620880127
    9. ' print' → logprob: -6.407585620880127
    10. 'print' → logprob: -6.782585620880127

Token 18: ' s' (ID: 265)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4183620512485504
    2. 'if' → logprob: -1.918362021446228
    3. 's' (adapté à ' s') → logprob: -2.4183621406555176
    4. '   ' → logprob: -3.2933621406555176
    5. ' if' → logprob: -3.4183621406555176
    6. ' print' → logprob: -3.6683621406555176
    7. ' s' → logprob: -5.793362140655518
    8. '    ' → logprob: -6.043362140655518
    9. 'i' → logprob: -6.168362140655518
    10. 'for' → logprob: -6.793362140655518

Token 19: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3135225772857666
    2. '[i' → logprob: -1.3135225772857666
    3. '[s' → logprob: -9.188522338867188
    4. '[...]' → logprob: -10.313522338867188
    5. '\[' → logprob: -10.313522338867188
    6. '[int' → logprob: -10.438522338867188
    7. '[I' → logprob: -11.563522338867188
    8. '```' → logprob: -11.688522338867188
    9. '[]' → logprob: -11.813522338867188
    10. '[count' → logprob: -12.438522338867188

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03859218582510948
    2. '].' → logprob: -3.7885921001434326
    3. ' ]' → logprob: -5.538592338562012
    4. ')' → logprob: -5.788592338562012
    5. '][' → logprob: -6.288592338562012
    6. '[' → logprob: -6.288592338562012
    7. '])' → logprob: -6.663592338562012
    8. ']==' → logprob: -6.913592338562012
    9. ']=' → logprob: -7.538592338562012
    10. '.append' → logprob: -7.913592338562012

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051911305636167526
    2. '[' → logprob: -3.4269113540649414
    3. '+=' → logprob: -5.176911354064941
    4. ' =' → logprob: -5.426911354064941
    5. '+' → logprob: -5.676911354064941
    6. '==' → logprob: -6.051911354064941
    7. ')' → logprob: -7.676911354064941
    8. '.' → logprob: -8.301911354064941
    9. ' +=' → logprob: -8.301911354064941
    10. ',' → logprob: -8.926911354064941

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006743439007550478
    2. ' int' → logprob: -5.006743431091309
    3. 's' → logprob: -10.881743431091309
    4. 'float' → logprob: -12.506743431091309
    5. '(int' → logprob: -13.631743431091309
    6. ' s' → logprob: -13.756743431091309
    7. 'str' → logprob: -14.131743431091309
    8. ''int' → logprob: -14.256743431091309
    9. '[int' → logprob: -14.631743431091309
    10. '=int' → logprob: -14.881743431091309

Token 23: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020611725747585297
    2. '(s' → logprob: -3.8956117630004883
    3. 's' → logprob: -10.270611763000488
    4. '(
' → logprob: -11.395611763000488
    5. '('' → logprob: -11.645611763000488
    6. '(

' → logprob: -11.895611763000488
    7. '("("' → logprob: -13.020611763000488
    8. '((' → logprob: -13.645611763000488
    9. '()' → logprob: -13.645611763000488
    10. '(`' → logprob: -13.895611763000488

Token 24: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002242204500362277
    2. '[' → logprob: -6.127242088317871
    3. ')' → logprob: -9.877242088317871
    4. ' [' → logprob: -13.127242088317871
    5. '[I' → logprob: -13.752242088317871
    6. '[s' → logprob: -14.002242088317871
    7. ')[' → logprob: -14.752242088317871
    8. '[
' → logprob: -14.752242088317871
    9. ']' → logprob: -14.877242088317871
    10. '[x' → logprob: -15.627242088317871

Token 25: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013075049966573715
    2. '))' → logprob: -4.38807487487793
    3. '])' → logprob: -7.51307487487793
    4. ']' → logprob: -12.38807487487793
    5. ')])' → logprob: -12.38807487487793
    6. ')))' → logprob: -13.13807487487793
    7. ')]' → logprob: -13.13807487487793
    8. ')
' → logprob: -13.38807487487793
    9. ' )' → logprob: -13.76307487487793
    10. '[' → logprob: -13.88807487487793

Token 26: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21073518693447113
    2. 's' → logprob: -2.0857350826263428
    3. 'sum' → logprob: -4.460735321044922
    4. 'max' → logprob: -4.585735321044922
    5. 'if' → logprob: -4.960735321044922
    6. '#' → logprob: -5.085735321044922
    7. 'print' → logprob: -5.335735321044922
    8. 'm' → logprob: -5.710735321044922
    9. 'n' → logprob: -5.960735321044922
    10. 'a' → logprob: -5.960735321044922

Token 27: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12279655784368515
    2. '[' → logprob: -2.7477965354919434
    3. '=' → logprob: -4.122796535491943
    4. '.' → logprob: -4.122796535491943
    5. '_' → logprob: -4.872796535491943
    6. ' =' → logprob: -5.872796535491943
    7. 's' → logprob: -6.122796535491943
    8. '.append' → logprob: -6.497796535491943
    9. '[]' → logprob: -6.997796535491943
    10. '()' → logprob: -7.122796535491943

Token 28: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5869762301445007
    2. ' []' → logprob: -1.4619762897491455
    3. '[]' → logprob: -2.5869762897491455
    4. ' ' → logprob: -2.7119762897491455
    5. 'sum' → logprob: -3.7119762897491455
    6. '[' → logprob: -4.336976051330566
    7. 's' → logprob: -4.711976051330566
    8. ' [' → logprob: -5.086976051330566
    9. ' max' → logprob: -5.461976051330566
    10. ' sum' → logprob: -5.461976051330566

Token 29: 'YES' (ID: 31958)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14482752978801727
    2. '0' → logprob: -2.6448276042938232
    3. ''' → logprob: -3.6448276042938232
    4. 'sum' → logprob: -4.144827365875244
    5. 'max' → logprob: -5.269827365875244
    6. ' "' → logprob: -5.644827365875244
    7. '""' → logprob: -5.894827365875244
    8. '1' → logprob: -6.269827365875244
    9. '[' → logprob: -6.519827365875244
    10. ' ' → logprob: -6.769827365875244

Token 30: '"
' (ID: 1092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: 'pro' (ID: 823)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.19837307929992676
    2. '
' → logprob: -1.9483730792999268
    3. 'if' → logprob: -4.073372840881348
    4. 'for' → logprob: -4.698372840881348
    5. ' if' → logprob: -5.198372840881348
    6. '<|end|>' → logprob: -5.573372840881348
    7. ' for' → logprob: -6.698372840881348
    8. '\' → logprob: -8.573372840881348
    9. ' 
' → logprob: -9.073372840881348
    10. '```' → logprob: -9.448372840881348

Token 32: 'blems' (ID: 50594)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08637037128210068
    2. 'duct' → logprob: -2.5863704681396484
    3. 'b' → logprob: -6.086370468139648
    4. 'f' → logprob: -6.461370468139648
    5. 'du' → logprob: -6.586370468139648
    6. 'duc' → logprob: -7.586370468139648
    7. 'm' → logprob: -8.336370468139648
    8. 'x' → logprob: -8.461370468139648
    9. 's' → logprob: -8.586370468139648
    10. 'c' → logprob: -9.086370468139648

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5571296215057373
    2. '=' → logprob: -0.9321296215057373
    3. 'Solved' → logprob: -4.307129859924316
    4. '_completed' → logprob: -5.807129859924316
    5. '=[]' → logprob: -5.932129859924316
    6. '_' → logprob: -6.182129859924316
    7. '_count' → logprob: -6.432129859924316
    8. '<|end|>' → logprob: -6.557129859924316
    9. '_found' → logprob: -7.057129859924316
    10. '_s' → logprob: -7.432129859924316

Token 34: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.096274733543396
    2. ' []' → logprob: -1.596274733543396
    3. '[]' → logprob: -1.721274733543396
    4. '0' → logprob: -2.3462748527526855
    5. 'set' → logprob: -2.5962748527526855
    6. ' {}' → logprob: -3.2212748527526855
    7. ' set' → logprob: -3.2212748527526855
    8. ' ' → logprob: -3.7212748527526855
    9. '[' → logprob: -5.2212748527526855
    10. ' [' → logprob: -5.7212748527526855

Token 35: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.35544663667678833
    2. '0' → logprob: -1.9804465770721436
    3. '[' → logprob: -2.7304465770721436
    4. '{}' → logprob: -2.8554465770721436
    5. 'set' → logprob: -3.3554465770721436
    6. '[int' → logprob: -6.855446815490723
    7. '{' → logprob: -7.605446815490723
    8. '1' → logprob: -8.105446815490723
    9. '[]}' → logprob: -8.230446815490723
    10. '[n' → logprob: -8.355446815490723

Token 36: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22036531567573547
    2. '
' → logprob: -1.720365285873413
    3. '\n' → logprob: -4.470365524291992
    4. ' for' → logprob: -4.970365524291992
    5. '<|end|>' → logprob: -9.095365524291992
    6. ' 
' → logprob: -9.470365524291992
    7. 'if' → logprob: -9.970365524291992
    8. '' → logprob: -10.470365524291992
    9. '\' → logprob: -10.470365524291992
    10. '```' → logprob: -10.970365524291992

Token 37: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015191456768661737
    2. ' for' → logprob: -6.751519203186035
    3. '
' → logprob: -8.001519203186035
    4. '\n' → logprob: -12.001519203186035
    5. 'if' → logprob: -12.251519203186035
    6. '```' → logprob: -14.126519203186035
    7. ' 
' → logprob: -14.626519203186035
    8. '<|end|>' → logprob: -14.751519203186035
    9. '=' → logprob: -15.126519203186035
    10. '	for' → logprob: -15.126519203186035

Token 38: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20587053894996643
    2. ' ' → logprob: -1.705870509147644
    3. '_' → logprob: -6.580870628356934
    4. '  ' → logprob: -6.830870628356934
    5. 'i' → logprob: -6.955870628356934
    6. ' ' → logprob: -7.955870628356934
    7. ' _' → logprob: -8.080870628356934
    8. ' ‌' → logprob: -8.955870628356934
    9. ' s' → logprob: -9.080870628356934
    10. ' (' → logprob: -11.205870628356934

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1055152639746666
    2. 'in' → logprob: -2.355515241622925
    3. ' ' → logprob: -5.355515480041504
    4. '  ' → logprob: -7.855515480041504
    5. '<|end|>' → logprob: -9.605515480041504
    6. '	in' → logprob: -10.105515480041504
    7. '+' → logprob: -11.230515480041504
    8. '   ' → logprob: -11.605515480041504
    9. 'range' → logprob: -12.105515480041504
    10. ')' → logprob: -12.355515480041504

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868746757507324
    2. ' range' → logprob: -1.1368746757507324
    3. '(range' → logprob: -12.76187515258789
    4. '	range' → logprob: -14.63687515258789
    5. ' ' → logprob: -16.13687515258789
    6. '   ' → logprob: -17.01187515258789
    7. 's' → logprob: -17.13687515258789
    8. ')' → logprob: -17.26187515258789
    9. '  ' → logprob: -17.88687515258789
    10. '(' → logprob: -17.88687515258789

Token 41: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4748344421386719
    2. '(n' → logprob: -0.9748344421386719
    3. ' (' → logprob: -7.224834442138672
    4. '(len' → logprob: -10.974834442138672
    5. '(s' → logprob: -11.974834442138672
    6. '(pro' → logprob: -13.349834442138672
    7. '(
' → logprob: -13.974834442138672
    8. ' ' → logprob: -14.224834442138672
    9. '(

' → logprob: -14.724834442138672
    10. '()' → logprob: -14.849834442138672

Token 42: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013097180984914303
    2. '-' → logprob: -4.513097286224365
    3. ' ):' → logprob: -6.888097286224365
    4. ')' → logprob: -7.263097286224365
    5. '):
' → logprob: -8.763096809387207
    6. ' -' → logprob: -8.888096809387207
    7. ' ' → logprob: -11.513096809387207
    8. ':' → logprob: -11.638096809387207
    9. '   ' → logprob: -12.388096809387207
    10. ' )' → logprob: -12.763096809387207

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07018906623125076
    2. ' ' → logprob: -2.6951889991760254
    3. '2' → logprob: -8.320189476013184
    4. '3' → logprob: -12.070189476013184
    5. ')' → logprob: -13.695189476013184
    6. '   ' → logprob: -14.320189476013184
    7. '  ' → logprob: -14.570189476013184
    8. '-' → logprob: -15.070189476013184
    9. '4' → logprob: -15.320189476013184
    10. ' )' → logprob: -15.695189476013184

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002311549847945571
    2. '2' → logprob: -6.127311706542969
    3. ' ' → logprob: -9.252311706542969
    4. '3' → logprob: -10.502311706542969
    5. '4' → logprob: -13.627311706542969
    6. '   ' → logprob: -14.877311706542969
    7. '5' → logprob: -15.377311706542969
    8. ')' → logprob: -15.752311706542969
    9. '

' → logprob: -15.752311706542969
    10. '  ' → logprob: -15.939811706542969

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014284093864262104
    2. ' ):' → logprob: -4.514284133911133
    3. ')' → logprob: -5.889284133911133
    4. '):
' → logprob: -8.264284133911133
    5. ' )' → logprob: -9.264284133911133
    6. ':' → logprob: -9.514284133911133
    7. ',' → logprob: -11.389284133911133
    8. '):
' → logprob: -11.889284133911133
    9. ' ' → logprob: -11.889284133911133
    10. ' ):
' → logprob: -12.639284133911133

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015718290582299232
    2. ' if' → logprob: -4.765718460083008
    3. ':' → logprob: -5.265718460083008
    4. ' ' → logprob: -7.265718460083008
    5. '    
' → logprob: -8.015718460083008
    6. ' 
' → logprob: -8.515718460083008
    7. ':
' → logprob: -8.640718460083008
    8. 'if' → logprob: -9.015718460083008
    9. '    ' → logprob: -9.265718460083008
    10. '<|end|>' → logprob: -9.765718460083008

Token 47: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16077066957950592
    2. 'if' (adapté à ' if') → logprob: -2.1607706546783447
    3. '   ' → logprob: -3.4107706546783447
    4. '    ' → logprob: -8.910770416259766
    5. ' ' → logprob: -9.160770416259766
    6. '	if' → logprob: -11.660770416259766
    7. '```' → logprob: -12.160770416259766
    8. '  ' → logprob: -13.160770416259766
    9. '       ' → logprob: -13.285770416259766
    10. ' for' → logprob: -13.910770416259766

Token 48: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.030174370855093002
    2. 's' → logprob: -3.5301742553710938
    3. ' abs' → logprob: -8.780174255371094
    4. '   ' → logprob: -9.280174255371094
    5. '(s' → logprob: -10.155174255371094
    6. 'pro' → logprob: -10.530174255371094
    7. 'abs' → logprob: -10.530174255371094
    8. ' pro' → logprob: -10.780174255371094
    9. ' ' → logprob: -10.905174255371094
    10. ' not' → logprob: -11.530174255371094

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021152703266125172
    2. '[' → logprob: -8.500211715698242
    3. ' [' → logprob: -12.750211715698242
    4. '[s' → logprob: -13.375211715698242
    5. '```' → logprob: -14.250211715698242
    6. '[I' → logprob: -14.500211715698242
    7. 'i' → logprob: -15.125211715698242
    8. ' ' → logprob: -15.375211715698242
    9. '[
' → logprob: -15.375211715698242
    10. '[j' → logprob: -15.500211715698242

Token 50: ' +' (ID: 659)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.010581295005977154
    2. ' >' → logprob: -4.7605814933776855
    3. '>=' → logprob: -7.2605814933776855
    4. '==' → logprob: -8.010581016540527
    5. '<' → logprob: -8.385581016540527
    6. '+' → logprob: -8.385581016540527
    7. '[' → logprob: -9.135581016540527
    8. '<=' → logprob: -9.510581016540527
    9. ']' → logprob: -9.635581016540527
    10. '[i' → logprob: -9.760581016540527

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03826146200299263
    2. ' ' → logprob: -3.2882614135742188
    3. ']' → logprob: -9.038261413574219
    4. '   ' → logprob: -10.163261413574219
    5. '  ' → logprob: -10.663261413574219
    6. '```' → logprob: -11.538261413574219
    7. '0' → logprob: -11.663261413574219
    8. '`' → logprob: -12.413261413574219
    9. ')' → logprob: -12.663261413574219
    10. '2' → logprob: -12.788261413574219

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003876550472341478
    2. 'i' → logprob: -8.375387191772461
    3. ']' → logprob: -9.750387191772461
    4. '0' → logprob: -9.875387191772461
    5. ' ' → logprob: -10.500387191772461
    6. '-' → logprob: -12.000387191772461
    7. '2' → logprob: -13.000387191772461
    8. '   ' → logprob: -13.125387191772461
    9. '```' → logprob: -13.312887191772461
    10. ')' → logprob: -13.375387191772461

Token 53: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5936124324798584
    2. '<' → logprob: -0.8436124324798584
    3. '>' → logprob: -4.4686126708984375
    4. ' ' → logprob: -6.3436126708984375
    5. ' >' → logprob: -6.3436126708984375
    6. ' <=' → logprob: -6.7186126708984375
    7. '<=' → logprob: -7.4686126708984375
    8. ' >=' → logprob: -8.718612670898438
    9. '>=' → logprob: -8.843612670898438
    10. '   ' → logprob: -9.343612670898438

Token 54: ' -' (ID: 533)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5526694655418396
    2. ' <' → logprob: -0.9276694655418396
    3. '>' → logprob: -4.802669525146484
    4. ' <=' → logprob: -4.802669525146484
    5. '<=' → logprob: -5.177669525146484
    6. ' >' → logprob: -5.677669525146484
    7. '>=' → logprob: -6.927669525146484
    8. ' ' → logprob: -6.927669525146484
    9. ' >=' → logprob: -7.302669525146484
    10. '-' → logprob: -7.927669525146484

Token 55: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3871845304965973
    2. ' s' → logprob: -1.137184500694275
    3. '1' → logprob: -8.637184143066406
    4. ' ' → logprob: -9.262184143066406
    5. '  ' → logprob: -11.387184143066406
    6. '   ' → logprob: -11.512184143066406
    7. '	s' → logprob: -11.637184143066406
    8. '(s' → logprob: -12.762184143066406
    9. '    ' → logprob: -13.637184143066406
    10. '2' → logprob: -13.762184143066406

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.47495681833243e-05
    2. '[' → logprob: -10.625024795532227
    3. '[I' → logprob: -16.375024795532227
    4. '[s' → logprob: -17.125024795532227
    5. ' [' → logprob: -17.500024795532227
    6. '[index' → logprob: -17.625024795532227
    7. '[int' → logprob: -17.750024795532227
    8. '[...]' → logprob: -18.625024795532227
    9. '[j' → logprob: -18.750024795532227
    10. '[user' → logprob: -18.875024795532227

Token 57: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5567917823791504
    2. '<' → logprob: -1.4317917823791504
    3. ' >' → logprob: -2.0567917823791504
    4. '>' → logprob: -3.0567917823791504
    5. ' <=' → logprob: -5.18179178237915
    6. ' >=' → logprob: -5.93179178237915
    7. ' ' → logprob: -6.80679178237915
    8. '<=' → logprob: -6.93179178237915
    9. '>=' → logprob: -7.18179178237915
    10. ' ==' → logprob: -7.18179178237915

Token 58: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.0018527507781982
    2. '>' → logprob: -1.0018527507781982
    3. ' >' → logprob: -1.7518527507781982
    4. ' <' → logprob: -2.5018527507781982
    5. '<=' → logprob: -5.626852989196777
    6. ' <=' → logprob: -6.251852989196777
    7. '>=' → logprob: -6.501852989196777
    8. '==' → logprob: -7.376852989196777
    9. '!=' → logprob: -7.501852989196777
    10. ' >=' → logprob: -7.501852989196777

Token 59: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7340664267539978
    2. '0' → logprob: -0.8590664267539978
    3. ' ' → logprob: -2.9840664863586426
    4. ' -' → logprob: -3.1090664863586426
    5. '2' → logprob: -7.359066486358643
    6. '1' → logprob: -7.484066486358643
    7. '10' → logprob: -10.859066009521484
    8. '3' → logprob: -11.484066009521484
    9. '6' → logprob: -11.859066009521484
    10. '7' → logprob: -12.546566009521484

Token 60: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6969050765037537
    2. '0' → logprob: -0.6969050765037537
    3. '2' → logprob: -5.821905136108398
    4. '1' → logprob: -7.696905136108398
    5. ' -' → logprob: -9.571905136108398
    6. '3' → logprob: -9.696905136108398
    7. ' ' → logprob: -9.821905136108398
    8. 's' → logprob: -10.446905136108398
    9. '10' → logprob: -10.821905136108398
    10. '```' → logprob: -11.509405136108398

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00799105130136013
    2. ':
' → logprob: -5.632990837097168
    3. ' :' → logprob: -6.132990837097168
    4. ' and' → logprob: -6.757990837097168
    5. ' or' → logprob: -7.382990837097168
    6. '0' → logprob: -8.382990837097168
    7. 'and' → logprob: -9.132990837097168
    8. ' :
' → logprob: -10.382990837097168
    9. ' ' → logprob: -11.632990837097168
    10. '1' → logprob: -11.882990837097168

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023410427384078503
    2. '   ' → logprob: -6.627341270446777
    3. ' problems' → logprob: -7.627341270446777
    4. 'pro' → logprob: -9.002341270446777
    5. '    ' → logprob: -9.502341270446777
    6. '0' → logprob: -10.002341270446777
    7. '1' → logprob: -10.127341270446777
    8. ' ' → logprob: -10.377341270446777
    9. '           ' → logprob: -10.377341270446777
    10. '        
' → logprob: -11.002341270446777

Token 63: ' problems' (ID: 6840)
  Prédit: ' problems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problems' → logprob: -0.00800062995404005
    2. 'pro' → logprob: -4.88300085067749
    3. '   ' → logprob: -8.633000373840332
    4. '	pro' → logprob: -9.133000373840332
    5. ' pro' → logprob: -10.008000373840332
    6. ' probl' → logprob: -11.008000373840332
    7. '       ' → logprob: -11.383000373840332
    8. '1' → logprob: -12.508000373840332
    9. ' proble' → logprob: -12.758000373840332
    10. '```' → logprob: -12.758000373840332

Token 64: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.016157422214746475
    2. '+=' → logprob: -4.141157627105713
    3. '+' → logprob: -9.391157150268555
    4. ' =' → logprob: -10.516157150268555
    5. ' ' → logprob: -12.016157150268555
    6. '=' → logprob: -12.641157150268555
    7. ' +' → logprob: -12.891157150268555
    8. ' -=' → logprob: -15.141157150268555
    9. '+='' → logprob: -16.391157150268555
    10. ' >' → logprob: -16.516157150268555

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021105022460687906
    2. ' ' → logprob: -8.875210762023926
    3. '2' → logprob: -9.625210762023926
    4. 's' → logprob: -12.750210762023926
    5. '3' → logprob: -14.125210762023926
    6. '10' → logprob: -14.375210762023926
    7. '0' → logprob: -15.750210762023926
    8. '4' → logprob: -16.000211715698242
    9. '100' → logprob: -16.187711715698242
    10. '(' → logprob: -16.375211715698242

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.893480243277736e-05
    2. '2' → logprob: -10.375039100646973
    3. ' ' → logprob: -11.875039100646973
    4. '3' → logprob: -15.500039100646973
    5. 's' → logprob: -15.812539100646973
    6. '10' → logprob: -15.875039100646973
    7. '<|end|>' → logprob: -16.625038146972656
    8. '0' → logprob: -17.000038146972656
    9. '100' → logprob: -17.812538146972656
    10. '4' → logprob: -17.875038146972656

Token 67: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06823783367872238
    2. '       ' → logprob: -3.568237781524658
    3. ' if' → logprob: -4.193237781524658
    4. ' ' → logprob: -4.568237781524658
    5. '    
' → logprob: -6.068237781524658
    6. 'if' → logprob: -6.068237781524658
    7. '    ' → logprob: -6.193237781524658
    8. '
' → logprob: -6.193237781524658
    9. ' 
' → logprob: -6.943237781524658
    10. '<|end|>' → logprob: -7.068237781524658

Token 68: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9907697439193726
    2. '       ' → logprob: -1.1157697439193726
    3. ' if' → logprob: -1.8657697439193726
    4. ' 
' → logprob: -2.740769863128662
    5. ' ' → logprob: -3.490769863128662
    6. '
' → logprob: -3.990769863128662
    7. 'if' → logprob: -4.240769863128662
    8. '    
' → logprob: -5.240769863128662
    9. '    ' → logprob: -5.615769863128662
    10. ' and' → logprob: -5.990769863128662

Token 69: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1912434846162796
    2. ' if' → logprob: -2.1912434101104736
    3. '       ' → logprob: -2.8162434101104736
    4. '   ' → logprob: -6.191243648529053
    5. 'result' → logprob: -9.566243171691895
    6. 's' → logprob: -9.691243171691895
    7. ' ' → logprob: -9.941243171691895
    8. '1' → logprob: -10.066243171691895
    9. ' s' → logprob: -10.316243171691895
    10. '           ' → logprob: -10.941243171691895

Token 70: ' problems' (ID: 6840)
  Prédit: ' problems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problems' → logprob: -0.0013375049456954002
    2. 'pro' → logprob: -6.62633752822876
    3. 'problem' → logprob: -12.876337051391602
    4. 'result' → logprob: -12.876337051391602
    5. ' problem' → logprob: -13.751337051391602
    6. 's' → logprob: -14.001337051391602
    7. 'proble' → logprob: -14.001337051391602
    8. ' probl' → logprob: -14.126337051391602
    9. 'Problems' → logprob: -14.376337051391602
    10. ' ' → logprob: -14.501337051391602

Token 71: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.47409483790397644
    2. ' >' → logprob: -0.9740948677062988
    3. ' ' → logprob: -11.97409439086914
    4. ' ' → logprob: -12.72409439086914
    5. '2' → logprob: -13.59909439086914
    6. '>=' → logprob: -13.59909439086914
    7. '1' → logprob: -13.59909439086914
    8. '()>' → logprob: -13.72409439086914
    9. '==' → logprob: -13.97409439086914
    10. '   ' → logprob: -14.59909439086914

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326223015785217
    2. '2' → logprob: -0.7576223015785217
    3. '1' → logprob: -10.882622718811035
    4. '>' → logprob: -12.632622718811035
    5. '3' → logprob: -15.070122718811035
    6. '"' → logprob: -16.00762176513672
    7. ' >' → logprob: -16.13262176513672
    8. '   ' → logprob: -16.44512176513672
    9. '```' → logprob: -16.63262176513672
    10. '  ' → logprob: -16.82012176513672

Token 73: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004982246900908649
    2. ' ' → logprob: -7.625498294830322
    3. '1' → logprob: -11.750497817993164
    4. '3' → logprob: -13.625497817993164
    5. '>' → logprob: -14.375497817993164
    6. '   ' → logprob: -15.687997817993164
    7. '```' → logprob: -16.625497817993164
    8. '"' → logprob: -16.812997817993164
    9. '  ' → logprob: -17.187997817993164
    10. 'more' → logprob: -17.812997817993164

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35731491446495056
    2. ' and' → logprob: -1.232314944267273
    3. ' :' → logprob: -5.2323150634765625
    4. ':
' → logprob: -6.1073150634765625
    5. 'and' → logprob: -6.9823150634765625
    6. ' or' → logprob: -9.232315063476562
    7. ' ' → logprob: -9.357315063476562
    8. ' :
' → logprob: -9.607315063476562
    9. '   ' → logprob: -10.857315063476562
    10. ',' → logprob: -11.107315063476562

Token 75: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4288911521434784
    2. ' s' → logprob: -2.053891181945801
    3. ' and' → logprob: -2.303891181945801
    4. '   ' → logprob: -3.178891181945801
    5. ':' → logprob: -3.928891181945801
    6. '       ' → logprob: -4.053891181945801
    7. ' if' → logprob: -4.678891181945801
    8. 's' → logprob: -4.678891181945801
    9. ':
' → logprob: -4.803891181945801
    10. ' continue' → logprob: -4.928891181945801

Token 76: ' first' (ID: 1577)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4492197632789612
    2. 'if' → logprob: -1.1992197036743164
    3. '           ' → logprob: -3.3242197036743164
    4. ' if' → logprob: -4.574219703674316
    5. ' s' → logprob: -4.824219703674316
    6. '       ' → logprob: -6.574219703674316
    7. 'continue' → logprob: -6.699219703674316
    8. '   ' → logprob: -7.074219703674316
    9. 'i' → logprob: -7.074219703674316
    10. 'pass' → logprob: -7.949219703674316

Token 77: '_val' (ID: 13694)
  Prédit: '_problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_problem' → logprob: -1.0435000658035278
    2. '_index' → logprob: -1.1685000658035278
    3. ' =' → logprob: -2.0434999465942383
    4. '_pro' → logprob: -3.1684999465942383
    5. '_break' → logprob: -3.7934999465942383
    6. '_de' → logprob: -3.7934999465942383
    7. '_diff' → logprob: -4.168499946594238
    8. '_remove' → logprob: -4.543499946594238
    9. '_occ' → logprob: -4.668499946594238
    10. '_' → logprob: -4.793499946594238

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4009607136249542
    2. 'ue' → logprob: -1.4009606838226318
    3. '=' → logprob: -2.900960683822632
    4. '_index' → logprob: -4.025960922241211
    5. '_' → logprob: -5.400960922241211
    6. ' ' → logprob: -6.275960922241211
    7. 'u' → logprob: -6.775960922241211
    8. ',' → logprob: -7.400960922241211
    9. '   ' → logprob: -7.400960922241211
    10. '_idx' → logprob: -7.525960922241211

Token 79: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3572017252445221
    2. 's' → logprob: -1.2322016954421997
    3. ' s' → logprob: -5.35720157623291
    4. ' i' → logprob: -5.60720157623291
    5. '   ' → logprob: -8.48220157623291
    6. '0' → logprob: -10.73220157623291
    7. ' ' → logprob: -11.10720157623291
    8. '1' → logprob: -11.54470157623291
    9. '[i' → logprob: -11.73220157623291
    10. 'max' → logprob: -11.79470157623291

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.990154047845863e-05
    2. '[' → logprob: -10.625049591064453
    3. 'i' → logprob: -10.750049591064453
    4. '[s' → logprob: -14.250049591064453
    5. '[a' → logprob: -14.625049591064453
    6. '[I' → logprob: -14.625049591064453
    7. '[first' → logprob: -15.000049591064453
    8. '[n' → logprob: -15.125049591064453
    9. '[j' → logprob: -15.375049591064453
    10. '[user' → logprob: -16.000049591064453

Token 81: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18287980556488037
    2. ')' → logprob: -2.30787992477417
    3. '+' → logprob: -3.18287992477417
    4. '<|end|>' → logprob: -3.93287992477417
    5. '])' → logprob: -6.18287992477417
    6. ']+' → logprob: -6.80787992477417
    7. '<|end|>' → logprob: -6.93287992477417
    8. ')
' → logprob: -7.68287992477417
    9. ']
' → logprob: -7.93287992477417
    10. ' ]' → logprob: -7.93287992477417

Token 82: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2983432710170746
    2. '           ' → logprob: -1.423343300819397
    3. 'elif' → logprob: -5.173343181610107
    4. 'else' → logprob: -5.298343181610107
    5. ' else' → logprob: -6.173343181610107
    6. ' elif' → logprob: -6.423343181610107
    7. '   ' → logprob: -7.923343181610107
    8. '<|end|>' → logprob: -7.923343181610107
    9. ' and' → logprob: -8.048343658447266
    10. ' if' → logprob: -8.423343658447266

Token 83: ' first' (ID: 1577)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.3517831265926361
    2. 'first' (adapté à ' first') → logprob: -1.8517831563949585
    3. 'if' → logprob: -2.351783037185669
    4. '           ' → logprob: -3.726783037185669
    5. 'index' → logprob: -5.226783275604248
    6. 'next' → logprob: -5.976783275604248
    7. '   ' → logprob: -6.226783275604248
    8. 'continue' → logprob: -6.351783275604248
    9. 'last' → logprob: -6.476783275604248
    10. ' second' → logprob: -6.476783275604248

Token 84: '_idx' (ID: 15257)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.10828354954719543
    2. '+' → logprob: -3.108283519744873
    3. '_' → logprob: -3.733283519744873
    4. '_index' → logprob: -4.483283519744873
    5. '_idx' → logprob: -4.983283519744873
    6. '_i' → logprob: -5.608283519744873
    7. '_plus' → logprob: -6.108283519744873
    8. '_next' → logprob: -6.483283519744873
    9. '+=' → logprob: -6.733283519744873
    10. '_diff' → logprob: -6.858283519744873

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16044600307941437
    2. '=' → logprob: -1.910446047782898
    3. ' ' → logprob: -8.535446166992188
    4. '<|end|>' → logprob: -10.910446166992188
    5. ',' → logprob: -12.910446166992188
    6. '<|end|>' → logprob: -13.910446166992188
    7. ')' → logprob: -14.160446166992188
    8. '=i' → logprob: -14.410446166992188
    9. ' +=' → logprob: -14.910446166992188
    10. '=end' → logprob: -15.535446166992188

Token 86: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009757624007761478
    2. ' i' → logprob: -4.6347575187683105
    3. '	i' → logprob: -13.884757995605469
    4. '<|end|>' → logprob: -15.509757995605469
    5. '   ' → logprob: -15.759757995605469
    6. ' ' → logprob: -15.759757995605469
    7. '[i' → logprob: -16.13475799560547
    8. '0' → logprob: -16.50975799560547
    9. '1' → logprob: -17.13475799560547
    10. '(i' → logprob: -17.38475799560547

Token 87: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02057458832859993
    2. 'elif' → logprob: -4.520574569702148
    3. 'else' → logprob: -5.770574569702148
    4. '<|end|>' → logprob: -5.770574569702148
    5. '   ' → logprob: -6.395574569702148
    6. ' elif' → logprob: -7.145574569702148
    7. ' else' → logprob: -7.645574569702148
    8. '           ' → logprob: -9.645574569702148
    9. '<|end|>' → logprob: -10.020574569702148
    10. '	elif' → logprob: -10.270574569702148

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051138442009687424
    2. 'else' → logprob: -4.301138401031494
    3. '<|end|>' → logprob: -4.301138401031494
    4. 'elif' → logprob: -4.426138401031494
    5. '   ' → logprob: -4.801138401031494
    6. ' else' → logprob: -6.426138401031494
    7. ' elif' → logprob: -7.426138401031494
    8. '<|end|>' → logprob: -9.426138877868652
    9. '```' → logprob: -9.926138877868652
    10. '           ' → logprob: -10.051138877868652

Token 89: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5051124691963196
    2. '       ' → logprob: -1.5051124095916748
    3. 'elif' (adapté à ' elif') → logprob: -1.8801124095916748
    4. ' else' → logprob: -4.005112648010254
    5. ' elif' → logprob: -6.130112648010254
    6. '   ' → logprob: -6.505112648010254
    7. '	elif' → logprob: -10.880112648010254
    8. '           ' → logprob: -11.255112648010254
    9. '<|end|>' → logprob: -11.255112648010254
    10. '	else' → logprob: -11.630112648010254

Token 90: ' problems' (ID: 6840)
  Prédit: ' problems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problems' → logprob: -0.0635237917304039
    2. 'pro' → logprob: -2.938523769378662
    3. ' s' → logprob: -4.938523769378662
    4. 's' → logprob: -6.938523769378662
    5. ' ' → logprob: -8.56352424621582
    6. ' pro' → logprob: -9.31352424621582
    7. '   ' → logprob: -10.81352424621582
    8. ' probl' → logprob: -11.06352424621582
    9. 'proble' → logprob: -11.06352424621582
    10. 'result' → logprob: -11.12602424621582

Token 91: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2044716328382492
    2. ' >' → logprob: -1.8294715881347656
    3. '==' → logprob: -3.8294715881347656
    4. '>' → logprob: -5.954471588134766
    5. ' >=' → logprob: -9.704471588134766
    6. ' ' → logprob: -10.204471588134766
    7. '2' → logprob: -12.829471588134766
    8. '>=' → logprob: -12.954471588134766
    9. '=' → logprob: -13.579471588134766
    10. ' =' → logprob: -13.829471588134766

Token 92: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009757150895893574
    2. ' ' → logprob: -4.634757041931152
    3. '>' → logprob: -14.259757041931152
    4. '3' → logprob: -15.572257041931152
    5. '1' → logprob: -16.32225799560547
    6. '  ' → logprob: -17.25975799560547
    7. '۲' → logprob: -17.25975799560547
    8. '   ' → logprob: -17.50975799560547
    9. ' ' → logprob: -17.94725799560547
    10. '```' → logprob: -18.44725799560547

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9862216504407115e-05
    2. ' ' → logprob: -10.875020027160645
    3. '3' → logprob: -14.750020027160645
    4. '>' → logprob: -15.000020027160645
    5. '  ' → logprob: -16.375019073486328
    6. '1' → logprob: -16.625019073486328
    7. '   ' → logprob: -16.625019073486328
    8. '```' → logprob: -18.750019073486328
    9. '২' → logprob: -19.000019073486328
    10. '۲' → logprob: -19.250019073486328

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02346057817339897
    2. ':
' → logprob: -4.148460388183594
    3. ' and' → logprob: -5.023460388183594
    4. ' :' → logprob: -7.398460388183594
    5. ' :
' → logprob: -9.648460388183594
    6. 'and' → logprob: -9.773460388183594
    7. '   ' → logprob: -10.148460388183594
    8. ' or' → logprob: -11.898460388183594
    9. ' ' → logprob: -11.898460388183594
    10. '       ' → logprob: -12.148460388183594

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07219202071428299
    2. '       ' → logprob: -3.1971919536590576
    3. ' if' → logprob: -4.197192192077637
    4. 'if' → logprob: -5.447192192077637
    5. '   ' → logprob: -5.822192192077637
    6. ' second' → logprob: -6.072192192077637
    7. 'second' → logprob: -6.197192192077637
    8. ' break' → logprob: -7.072192192077637
    9. 'break' → logprob: -7.947192192077637
    10. '               ' → logprob: -8.447192192077637

Token 96: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' (adapté à ' second') → logprob: -0.3881617486476898
    2. ' second' → logprob: -1.8881617784500122
    3. 'if' → logprob: -2.2631616592407227
    4. ' if' → logprob: -3.0131616592407227
    5. '           ' → logprob: -5.013161659240723
    6. '   ' → logprob: -6.138161659240723
    7. 'break' → logprob: -6.763161659240723
    8. '               ' → logprob: -6.888161659240723
    9. 'print' → logprob: -6.888161659240723
    10. ' last' → logprob: -6.888161659240723

Token 97: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.22751334309577942
    2. '_idx' → logprob: -1.602513313293457
    3. '_' → logprob: -6.352513313293457
    4. ' _' → logprob: -9.102513313293457
    5. '_i' → logprob: -9.852513313293457
    6. '_vals' → logprob: -10.477513313293457
    7. '_index' → logprob: -10.727513313293457
    8. '_v' → logprob: -11.727513313293457
    9. 'val' → logprob: -11.727513313293457
    10. '_pos' → logprob: -11.977513313293457

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01251753605902195
    2. '=' → logprob: -4.38751745223999
    3. ' ' → logprob: -12.262517929077148
    4. ',' → logprob: -13.387517929077148
    5. 's' → logprob: -13.637517929077148
    6. '=s' → logprob: -15.387517929077148
    7. ' s' → logprob: -17.01251792907715
    8. '   ' → logprob: -17.38751792907715
    9. ' ==' → logprob: -17.76251792907715
    10. '＝' → logprob: -18.07501792907715

Token 99: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5231457352638245
    2. 's' → logprob: -0.8981457352638245
    3. ' ' → logprob: -12.02314567565918
    4. 'i' → logprob: -12.14814567565918
    5. '	s' → logprob: -12.89814567565918
    6. '   ' → logprob: -13.52314567565918
    7. '<|end|>' → logprob: -13.77314567565918
    8. '  ' → logprob: -14.02314567565918
    9. ' i' → logprob: -14.14814567565918
    10. '(s' → logprob: -14.39814567565918

Token 100: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.50000286102295
    3. '[first' → logprob: -14.12500286102295
    4. '[j' → logprob: -16.625001907348633
    5. '[I' → logprob: -16.750001907348633
    6. 'i' → logprob: -16.750001907348633
    7. '[s' → logprob: -16.875001907348633
    8. '[int' → logprob: -17.625001907348633
    9. '[n' → logprob: -17.750001907348633
    10. '[user' → logprob: -18.000001907348633

Token 101: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25711724162101746
    2. '+' → logprob: -1.8821172714233398
    3. ']
' → logprob: -2.63211727142334
    4. ' +' → logprob: -6.25711727142334
    5. ')' → logprob: -9.00711727142334
    6. ']+' → logprob: -9.50711727142334
    7. '+
' → logprob: -9.63211727142334
    8. ' ]' → logprob: -9.75711727142334
    9. '<|end|>' → logprob: -9.75711727142334
    10. ']

' → logprob: -9.88211727142334

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015943869948387146
    2. ' ' → logprob: -8.75015926361084
    3. '```' → logprob: -15.50015926361084
    4. '   ' → logprob: -15.62515926361084
    5. '<|end|>' → logprob: -16.000160217285156
    6. ')' → logprob: -16.312660217285156
    7. '0' → logprob: -16.437660217285156
    8. '`' → logprob: -16.812660217285156
    9. '  ' → logprob: -16.875160217285156
    10. ']' → logprob: -17.562660217285156

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -16.125009536743164
    4. '```' → logprob: -16.500009536743164
    5. '0' → logprob: -16.687509536743164
    6. '   ' → logprob: -16.750009536743164
    7. '  ' → logprob: -17.937509536743164
    8. ')' → logprob: -18.062509536743164
    9. '<|end|>' → logprob: -18.375009536743164
    10. '-' → logprob: -18.562509536743164

Token 104: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7724712491035461
    2. ')' → logprob: -1.3974711894989014
    3. ']
' → logprob: -1.8974711894989014
    4. ')
' → logprob: -2.1474711894989014
    5. '<|end|>' → logprob: -4.2724714279174805
    6. '           ' → logprob: -4.8974714279174805
    7. '
' → logprob: -7.2724714279174805
    8. '               ' → logprob: -7.6474714279174805
    9. '       ' → logprob: -8.02247142791748
    10. ' ]' → logprob: -8.52247142791748

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050975434482097626
    2. '       ' → logprob: -3.1759753227233887
    3. ' if' → logprob: -5.300975322723389
    4. '<|end|>' → logprob: -7.175975322723389
    5. '               ' → logprob: -7.800975322723389
    6. 'if' → logprob: -7.925975322723389
    7. '   ' → logprob: -8.300975799560547
    8. ',' → logprob: -8.425975799560547
    9. ' else' → logprob: -8.800975799560547
    10. ' and' → logprob: -8.800975799560547

Token 106: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' (adapté à ' second') → logprob: -0.23988927900791168
    2. ' second' → logprob: -1.6148892641067505
    3. '           ' → logprob: -5.239889144897461
    4. ' break' → logprob: -5.739889144897461
    5. 'break' → logprob: -6.489889144897461
    6. 'if' → logprob: -6.614889144897461
    7. ' if' → logprob: -6.864889144897461
    8. '   ' → logprob: -6.989889144897461
    9. '       ' → logprob: -7.989889144897461
    10. 'print' → logprob: -8.114889144897461

Token 107: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.018792543560266495
    2. '_val' → logprob: -4.018792629241943
    3. '_index' → logprob: -8.393792152404785
    4. '_' → logprob: -9.768792152404785
    5. ' _' → logprob: -9.893792152404785
    6. '_i' → logprob: -10.143792152404785
    7. '_idxs' → logprob: -10.393792152404785
    8. 'idx' → logprob: -10.643792152404785
    9. '_indices' → logprob: -10.893792152404785
    10. 'val' → logprob: -11.018792152404785

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014889107085764408
    2. '=' → logprob: -4.264889240264893
    3. ' ' → logprob: -7.264889240264893
    4. '<|end|>' → logprob: -11.764888763427734
    5. '=i' → logprob: -12.639888763427734
    6. ' +=' → logprob: -12.764888763427734
    7. 'i' → logprob: -12.889888763427734
    8. '            ' → logprob: -13.389888763427734
    9. '+' → logprob: -13.764888763427734
    10. ' i' → logprob: -13.889888763427734

Token 109: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22542013227939606
    2. 'i' → logprob: -1.6004201173782349
    3. '(i' → logprob: -12.725419998168945
    4. '	i' → logprob: -13.100419998168945
    5. ' ' → logprob: -13.850419998168945
    6. '   ' → logprob: -14.475419998168945
    7. ' (' → logprob: -15.225419998168945
    8. 'I' → logprob: -15.975419998168945
    9. '    ' → logprob: -15.975419998168945
    10. '[i' → logprob: -16.225419998168945

Token 110: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3483618199825287
    2. '           ' → logprob: -1.723361849784851
    3. 'if' → logprob: -2.7233617305755615
    4. ' if' → logprob: -3.4733617305755615
    5. 'else' → logprob: -4.723361968994141
    6. ' else' → logprob: -5.598361968994141
    7. '<|end|>' → logprob: -6.348361968994141
    8. '               ' → logprob: -7.098361968994141
    9. '+' → logprob: -7.098361968994141
    10. '   ' → logprob: -7.473361968994141

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076228417456150055
    2. ' ' → logprob: -5.132622718811035
    3. '2' → logprob: -6.382622718811035
    4. '0' → logprob: -13.757622718811035
    5. '```' → logprob: -14.757622718811035
    6. '   ' → logprob: -15.695122718811035
    7. 'second' → logprob: -16.32012367248535
    8. '<|end|>' → logprob: -16.82012367248535
    9. '`' → logprob: -16.88262367248535
    10. '  ' → logprob: -17.19512367248535

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.289473822107539e-05
    2. '2' → logprob: -9.750062942504883
    3. ' ' → logprob: -12.500062942504883
    4. '0' → logprob: -14.125062942504883
    5. '<|end|>' → logprob: -17.187562942504883
    6. '```' → logprob: -17.375062942504883
    7. 'second' → logprob: -18.062562942504883
    8. '۱' → logprob: -18.375062942504883
    9. '   ' → logprob: -18.437562942504883
    10. '１' → logprob: -18.937562942504883

Token 113: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1829191893339157
    2. 'if' → logprob: -2.6829192638397217
    3. ' if' → logprob: -2.8079192638397217
    4. '<|end|>' → logprob: -4.307919025421143
    5. '           ' → logprob: -4.557919025421143
    6. '
' → logprob: -5.807919025421143
    7. '   ' → logprob: -5.807919025421143
    8. 'else' → logprob: -5.932919025421143
    9. ' else' → logprob: -6.432919025421143
    10. '        ' → logprob: -7.307919025421143

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10262949764728546
    2. '<|end|>' → logprob: -3.2276294231414795
    3. 'if' → logprob: -3.7276294231414795
    4. '
' → logprob: -4.227629661560059
    5. ' if' → logprob: -4.477629661560059
    6. '           ' → logprob: -5.602629661560059
    7. '```' → logprob: -6.977629661560059
    8. '   ' → logprob: -7.102629661560059
    9. '        ' → logprob: -7.727629661560059
    10. '        
' → logprob: -7.977629661560059

Token 115: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4590841829776764
    2. '       ' → logprob: -1.209084153175354
    3. ' else' → logprob: -2.8340842723846436
    4. 'if' → logprob: -5.3340840339660645
    5. '   ' → logprob: -5.5840840339660645
    6. 'elif' (adapté à ' elif') → logprob: -6.9590840339660645
    7. ' if' → logprob: -7.2090840339660645
    8. '           ' → logprob: -8.084084510803223
    9. '```' → logprob: -8.959084510803223
    10. ' elif' → logprob: -9.709084510803223

Token 116: ' problems' (ID: 6840)
  Prédit: ' problems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problems' → logprob: -0.0004486653197091073
    2. 'pro' → logprob: -8.500448226928711
    3. ' ' → logprob: -8.625448226928711
    4. ' True' → logprob: -11.125448226928711
    5. 'Problems' → logprob: -11.375448226928711
    6. '1' → logprob: -11.500448226928711
    7. ' probl' → logprob: -11.875448226928711
    8. 'True' → logprob: -12.125448226928711
    9. ' problem' → logprob: -12.500448226928711
    10. '   ' → logprob: -13.375448226928711

Token 117: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.40938493609428406
    2. ' ==' → logprob: -1.1593849658966064
    3. '==' → logprob: -4.409384727478027
    4. '>' → logprob: -5.034384727478027
    5. ' >=' → logprob: -5.659384727478027
    6. ' ' → logprob: -9.909384727478027
    7. '>=' → logprob: -10.409384727478027
    8. '   ' → logprob: -11.284384727478027
    9. ' ' → logprob: -11.909384727478027
    10. '  ' → logprob: -13.284384727478027

Token 118: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25206148624420166
    2. ' ' → logprob: -1.5020614862442017
    3. '1' → logprob: -9.00206184387207
    4. '3' → logprob: -12.00206184387207
    5. '   ' → logprob: -13.25206184387207
    6. '=' → logprob: -14.87706184387207
    7. '  ' → logprob: -15.12706184387207
    8. '>' → logprob: -15.37706184387207
    9. '0' → logprob: -16.43956184387207
    10. '<|end|>' → logprob: -16.43956184387207

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.873571692267433e-05
    2. ' ' → logprob: -10.125068664550781
    3. '1' → logprob: -10.500068664550781
    4. '3' → logprob: -13.750068664550781
    5. '   ' → logprob: -18.62506866455078
    6. '  ' → logprob: -19.18756866455078
    7. '>' → logprob: -19.25006866455078
    8. '۲' → logprob: -19.62506866455078
    9. '```' → logprob: -20.37506866455078
    10. '=' → logprob: -20.50006866455078

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08001814037561417
    2. ':
' → logprob: -2.5800180435180664
    3. '       ' → logprob: -7.330018043518066
    4. '           ' → logprob: -8.580018043518066
    5. '   ' → logprob: -8.705018043518066
    6. ' :' → logprob: -9.705018043518066
    7. ' :
' → logprob: -10.580018043518066
    8. '=' → logprob: -11.955018043518066
    9. ' =' → logprob: -12.455018043518066
    10. ':return' → logprob: -12.455018043518066

Token 121: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5932461619377136
    2. '           ' → logprob: -1.5932462215423584
    3. '   ' → logprob: -1.7182462215423584
    4. 'result' → logprob: -3.0932462215423584
    5. ' result' → logprob: -3.9682462215423584
    6. ' break' → logprob: -8.593246459960938
    7. 'break' → logprob: -8.968246459960938
    8. '```' → logprob: -9.843246459960938
    9. '               ' → logprob: -10.218246459960938
    10. '	result' → logprob: -10.343246459960938

Token 122: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.004753238055855036
    2. ' result' → logprob: -5.629753112792969
    3. '   ' → logprob: -7.379753112792969
    4. '           ' → logprob: -8.254753112792969
    5. 'print' → logprob: -8.879753112792969
    6. 'break' → logprob: -9.754753112792969
    7. '
' → logprob: -10.129753112792969
    8. '       ' → logprob: -10.754753112792969
    9. '	result' → logprob: -12.754753112792969
    10. ' ' → logprob: -13.254753112792969

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740847945213318
    2. '=' → logprob: -0.9740847945213318
    3. ' ' → logprob: -11.849084854125977
    4. ' =
' → logprob: -15.349084854125977
    5. ' ="' → logprob: -15.474084854125977
    6. ' +=' → logprob: -16.974084854125977
    7. '=
' → logprob: -17.099084854125977
    8. 's' → logprob: -17.349084854125977
    9. '=

' → logprob: -17.599084854125977
    10. '```' → logprob: -17.724084854125977

Token 124: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0008486981969326735
    2. ' "' → logprob: -7.375848770141602
    3. '"No' → logprob: -8.500848770141602
    4. ' ' → logprob: -12.000848770141602
    5. '   ' → logprob: -12.125848770141602
    6. ''' → logprob: -12.625848770141602
    7. '"N' → logprob: -12.625848770141602
    8. 'NO' → logprob: -15.250848770141602
    9. '
' → logprob: -15.875848770141602
    10. '       ' → logprob: -17.0008487701416

Token 125: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.0007475639577023685
    2. '"' → logprob: -7.3757476806640625
    3. ' NO' → logprob: -9.125747680664062
    4. '"No' → logprob: -11.625747680664062
    5. ' ' → logprob: -13.625747680664062
    6. '   ' → logprob: -14.125747680664062
    7. '"N' → logprob: -15.000747680664062
    8. '_NO' → logprob: -15.375747680664062
    9. 'No' → logprob: -15.750747680664062
    10. ''' → logprob: -15.875747680664062

Token 126: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07468457520008087
    2. '"
' → logprob: -2.6996846199035645
    3. '           ' → logprob: -6.1996846199035645
    4. ')' → logprob: -6.9496846199035645
    5. '")' → logprob: -6.9496846199035645
    6. '       ' → logprob: -7.5746846199035645
    7. '<|end|>' → logprob: -9.824684143066406
    8. ')
' → logprob: -9.949684143066406
    9. '```' → logprob: -10.199684143066406
    10. ')"' → logprob: -10.324684143066406

Token 127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2032041847705841
    2. '
' → logprob: -2.3282041549682617
    3. 'if' → logprob: -3.2032041549682617
    4. '       ' → logprob: -3.9532041549682617
    5. '            
' → logprob: -4.828204154968262
    6. '<|end|>' → logprob: -5.703204154968262
    7. '\n' → logprob: -5.828204154968262
    8. 'break' → logprob: -6.078204154968262
    9. '    
' → logprob: -6.453204154968262
    10. '   ' → logprob: -6.453204154968262

Token 128: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6270064115524292
    2. 'break' (adapté à ' break') → logprob: -0.8770064115524292
    3. '       ' → logprob: -3.3770065307617188
    4. '           ' → logprob: -4.377006530761719
    5. '	break' → logprob: -6.127006530761719
    6. '   ' → logprob: -7.127006530761719
    7. '               ' → logprob: -10.377006530761719
    8. '
' → logprob: -10.377006530761719
    9. '```' → logprob: -12.127006530761719
    10. '        
' → logprob: -12.627006530761719

Token 129: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04096532240509987
    2. 'else' → logprob: -3.2909653186798096
    3. ' if' → logprob: -6.540965557098389
    4. '
' → logprob: -7.915965557098389
    5. 'elif' → logprob: -8.04096508026123
    6. ' else' → logprob: -8.54096508026123
    7. '```' → logprob: -9.04096508026123
    8. 'for' → logprob: -9.04096508026123
    9. ')' → logprob: -9.16596508026123
    10. '    
' → logprob: -9.91596508026123

Token 130: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14488518238067627
    2. '
' → logprob: -2.3948850631713867
    3. 'else' → logprob: -4.144885063171387
    4. ' if' → logprob: -4.394885063171387
    5. ' 
' → logprob: -4.519885063171387
    6. '  
' → logprob: -7.019885063171387
    7. ' else' → logprob: -7.269885063171387
    8. '    
' → logprob: -7.269885063171387
    9. 'elif' → logprob: -7.519885063171387
    10. 'for' → logprob: -7.894885063171387

Token 131: ' problems' (ID: 6840)
  Prédit: ' problems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problems' → logprob: -0.15076729655265808
    2. ' result' → logprob: -2.2757673263549805
    3. 'result' → logprob: -3.9007673263549805
    4. 'pro' → logprob: -4.1507673263549805
    5. ' n' → logprob: -7.9007673263549805
    6. ' s' → logprob: -7.9007673263549805
    7. ' ' → logprob: -8.65076732635498
    8. 'n' → logprob: -9.15076732635498
    9. ' problem' → logprob: -10.27576732635498
    10. 's' → logprob: -10.27576732635498

Token 132: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.23624688386917114
    2. ' ==' → logprob: -1.8612468242645264
    3. '<=' → logprob: -3.8612468242645264
    4. '==' → logprob: -4.1112470626831055
    5. ' >' → logprob: -4.3612470626831055
    6. ' <' → logprob: -5.9862470626831055
    7. ' ' → logprob: -6.8612470626831055
    8. '>' → logprob: -7.4862470626831055
    9. '<' → logprob: -8.736247062683105
    10. ' !=' → logprob: -8.861247062683105

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8582224249839783
    2. '1' → logprob: -0.9832224249839783
    3. ' ' → logprob: -1.608222484588623
    4. '2' → logprob: -6.358222484588623
    5. '   ' → logprob: -13.045722007751465
    6. '  ' → logprob: -13.295722007751465
    7. ' ' → logprob: -14.233222007751465
    8. '	' → logprob: -15.045722007751465
    9. '=' → logprob: -16.17072296142578
    10. '3' → logprob: -16.48322296142578

Token 134: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1481110006570816
    2. '1' → logprob: -2.02311110496521
    3. '2' → logprob: -5.398110866546631
    4. ' ' → logprob: -7.023110866546631
    5. '   ' → logprob: -13.523111343383789
    6. '  ' → logprob: -14.398111343383789
    7. '```' → logprob: -15.148111343383789
    8. '=' → logprob: -15.460611343383789
    9. '3' → logprob: -15.648111343383789
    10. '

' → logprob: -16.02311134338379

Token 135: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5713472366333008
    2. ':' → logprob: -0.9463472366333008
    3. ' and' → logprob: -3.071347236633301
    4. '   ' → logprob: -7.821347236633301
    5. 'and' → logprob: -8.9463472366333
    6. ' :
' → logprob: -9.1963472366333
    7. ' or' → logprob: -9.8213472366333
    8. ' :' → logprob: -10.9463472366333
    9. ':

' → logprob: -11.8213472366333
    10. ' ' → logprob: -13.0713472366333

Token 136: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15120622515678406
    2. 'result' → logprob: -2.2762062549591064
    3. '   ' → logprob: -3.4012062549591064
    4. 's' → logprob: -6.276206016540527
    5. ' if' → logprob: -7.401206016540527
    6. 'first' → logprob: -7.526206016540527
    7. 'next' → logprob: -8.526206016540527
    8. 'second' → logprob: -8.526206016540527
    9. '#' → logprob: -8.776206016540527
    10. 'diff' → logprob: -8.901206016540527

Token 137: ' result' (ID: 1534)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05472022294998169
    2. 'result' (adapté à ' result') → logprob: -3.054720163345337
    3. 's' → logprob: -5.804720401763916
    4. '   ' → logprob: -6.929720401763916
    5. ' if' → logprob: -7.679720401763916
    6. '#' → logprob: -7.804720401763916
    7. 'pass' → logprob: -8.679719924926758
    8. 'first' → logprob: -8.804719924926758
    9. 'second' → logprob: -8.804719924926758
    10. 'for' → logprob: -8.929719924926758

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931605935096741
    2. ' =' → logprob: -0.6931605935096741
    3. '+=' → logprob: -11.943161010742188
    4. ' +=' → logprob: -13.068161010742188
    5. ' ' → logprob: -13.818161010742188
    6. '   ' → logprob: -14.193161010742188
    7. 's' → logprob: -14.818161010742188
    8. ')' → logprob: -15.068161010742188
    9. '==' → logprob: -15.193161010742188
    10. ',' → logprob: -15.318161010742188

Token 139: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006509898230433464
    2. ' "' → logprob: -5.506509780883789
    3. '"No' → logprob: -6.631509780883789
    4. '"N' → logprob: -7.756509780883789
    5. '"s' → logprob: -8.256509780883789
    6. 'str' → logprob: -8.881509780883789
    7. '"S' → logprob: -9.381509780883789
    8. 's' → logprob: -10.006509780883789
    9. 'NO' → logprob: -11.006509780883789
    10. ''' → logprob: -11.006509780883789

Token 140: 'NO' (ID: 14695)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2276855856180191
    2. 'NO' → logprob: -1.852685570716858
    3. 'YES' → logprob: -3.1026856899261475
    4. '"No' → logprob: -6.602685451507568
    5. '"N' → logprob: -8.602685928344727
    6. ''' → logprob: -9.352685928344727
    7. ' "' → logprob: -10.227685928344727
    8. 'yes' → logprob: -11.102685928344727
    9. 'str' → logprob: -11.102685928344727
    10. '"S' → logprob: -11.102685928344727

Token 141: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04662060737609863
    2. 'print' → logprob: -3.2966206073760986
    3. '"
' → logprob: -4.9216203689575195
    4. '
' → logprob: -7.1716203689575195
    5. 'else' → logprob: -8.29662036895752
    6. 'elif' → logprob: -8.67162036895752
    7. '```' → logprob: -11.17162036895752
    8. '\n' → logprob: -11.42162036895752
    9. '<|end|>' → logprob: -11.42162036895752
    10. '"

' → logprob: -11.92162036895752

Token 142: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5783222913742065
    2. 'elif' → logprob: -0.8283222913742065
    3. '
' → logprob: -6.203322410583496
    4. ' else' → logprob: -8.578322410583496
    5. 'if' → logprob: -9.828322410583496
    6. '```' → logprob: -10.203322410583496
    7. ' elif' → logprob: -10.453322410583496
    8. '<|end|>' → logprob: -10.578322410583496
    9. '  
' → logprob: -11.953322410583496
    10. 'print' → logprob: -12.328322410583496

Token 143: ' problems' (ID: 6840)
  Prédit: ' problems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problems' → logprob: -0.4892914891242981
    2. 'pro' → logprob: -0.9892914891242981
    3. ' (' → logprob: -5.114291667938232
    4. '(pro' → logprob: -5.239291667938232
    5. ' result' → logprob: -6.739291667938232
    6. ' s' → logprob: -7.364291667938232
    7. '(' → logprob: -7.364291667938232
    8. 'result' → logprob: -7.864291667938232
    9. ' second' → logprob: -8.489291191101074
    10. ' first' → logprob: -8.989291191101074

Token 144: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11290121078491211
    2. '==' → logprob: -2.237901210784912
    3. ' <=' → logprob: -10.23790168762207
    4. ' ' → logprob: -10.36290168762207
    5. '<=' → logprob: -12.23790168762207
    6. ' in' → logprob: -13.36290168762207
    7. '   ' → logprob: -14.36290168762207
    8. '0' → logprob: -14.36290168762207
    9. '=' → logprob: -14.61290168762207
    10. '2' → logprob: -14.86290168762207

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30026277899742126
    2. '2' → logprob: -1.8002628087997437
    3. ' ' → logprob: -2.425262689590454
    4. '1' → logprob: -5.175262928009033
    5. '   ' → logprob: -12.425262451171875
    6. '  ' → logprob: -12.925262451171875
    7. '=' → logprob: -13.362762451171875
    8. '    ' → logprob: -14.862762451171875
    9. '	' → logprob: -15.050262451171875
    10. '
' → logprob: -15.362762451171875

Token 146: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039143726229667664
    2. '2' → logprob: -3.2891438007354736
    3. '1' → logprob: -7.1641435623168945
    4. ' ' → logprob: -8.039143562316895
    5. '   ' → logprob: -13.476643562316895
    6. '
' → logprob: -13.726643562316895
    7. '=' → logprob: -14.976643562316895
    8. '

' → logprob: -14.976643562316895
    9. '```' → logprob: -15.226643562316895
    10. '  ' → logprob: -15.414143562316895

Token 147: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6335976123809814
    2. ':' → logprob: -0.7585976123809814
    3. '   ' → logprob: -7.258597373962402
    4. ' and' → logprob: -9.383597373962402
    5. ' :
' → logprob: -9.508597373962402
    6. ' ==' → logprob: -9.633597373962402
    7. ' =' → logprob: -10.883597373962402
    8. '=' → logprob: -11.133597373962402
    9. '==' → logprob: -11.133597373962402
    10. '):
' → logprob: -11.883597373962402

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008769734762609005
    2. 'if' → logprob: -5.383769512176514
    3. ' if' → logprob: -5.633769512176514
    4. ':
' → logprob: -7.758769512176514
    5. ':' → logprob: -9.008769989013672
    6. '   ' → logprob: -12.133769989013672
    7. '    
' → logprob: -12.633769989013672
    8. '```' → logprob: -13.508769989013672
    9. ' ' → logprob: -13.633769989013672
    10. '
' → logprob: -13.883769989013672

Token 149: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14397600293159485
    2. '   ' → logprob: -2.6439759731292725
    3. ' if' → logprob: -2.7689759731292725
    4. '
' → logprob: -9.268976211547852
    5. ' s' → logprob: -9.893976211547852
    6. 's' → logprob: -9.893976211547852
    7. '    
' → logprob: -10.643976211547852
    8. '#' (adapté à ' #') → logprob: -10.893976211547852
    9. 'diff' → logprob: -11.393976211547852
    10. ' ' → logprob: -11.768976211547852

Token 150: ' swap' (ID: 25489)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6438186168670654
    2. ' if' → logprob: -0.7688186168670654
    3. '   ' → logprob: -5.2688188552856445
    4. ' s' → logprob: -6.8938188552856445
    5. ' #' → logprob: -7.0188188552856445
    6. ' diff' → logprob: -7.1438188552856445
    7. 'diff' → logprob: -7.3938188552856445
    8. ' temp' → logprob: -7.5188188552856445
    9. '#' → logprob: -7.6438188552856445
    10. 'temp' → logprob: -7.8938188552856445

Token 151: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6469211578369141
    2. ' s' → logprob: -0.7719211578369141
    3. '   ' → logprob: -4.271921157836914
    4. '    ' → logprob: -9.771921157836914
    5. ' if' → logprob: -10.021921157836914
    6. '(s' → logprob: -10.146921157836914
    7. ',' → logprob: -10.521921157836914
    8. 'if' → logprob: -10.771921157836914
    9. ' ' → logprob: -10.896921157836914
    10. '       ' → logprob: -11.271921157836914

Token 152: ' two' (ID: 1920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00148486637044698
    2. ' s' → logprob: -6.8764848709106445
    3. 'first' → logprob: -8.876484870910645
    4. 'values' → logprob: -9.001484870910645
    5. 'two' → logprob: -10.376484870910645
    6. 'elements' → logprob: -10.626484870910645
    7. ' first' → logprob: -10.751484870910645
    8. ' values' → logprob: -10.751484870910645
    9. ',' → logprob: -10.751484870910645
    10. ' elements' → logprob: -11.126484870910645

Token 153: ' elements' (ID: 8632)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07992713153362274
    2. ' s' → logprob: -2.5799272060394287
    3. 'if' → logprob: -7.57992696762085
    4. ' if' → logprob: -8.454927444458008
    5. '   ' → logprob: -9.579927444458008
    6. 'val' → logprob: -9.954927444458008
    7. ' =' → logprob: -10.079927444458008
    8. 'values' → logprob: -10.579927444458008
    9. ' values' → logprob: -10.829927444458008
    10. ',' → logprob: -11.204927444458008

Token 154: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07555748522281647
    2. ' s' → logprob: -2.8255574703216553
    3. 's' → logprob: -4.450557708740234
    4. ' =' → logprob: -6.950557708740234
    5. '
' → logprob: -8.700557708740234
    6. '    
' → logprob: -8.700557708740234
    7. ',' → logprob: -9.075557708740234
    8. ':
' → logprob: -9.200557708740234
    9. ':' → logprob: -9.325557708740234
    10. ' if' → logprob: -9.575557708740234

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014048444107174873
    2. 's' → logprob: -4.8890485763549805
    3. ' s' → logprob: -5.7640485763549805
    4. ' if' → logprob: -5.8890485763549805
    5. 'if' → logprob: -7.6390485763549805
    6. '    
' → logprob: -11.76404857635498
    7. ',' → logprob: -11.88904857635498
    8. '
' → logprob: -12.13904857635498
    9. '       ' → logprob: -13.01404857635498
    10. 'temp' → logprob: -13.13904857635498

Token 156: ' temp' (ID: 5484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006853427272289991
    2. ' s' → logprob: -5.0068535804748535
    3. '   ' → logprob: -9.631853103637695
    4. 'temp' (adapté à ' temp') → logprob: -9.631853103637695
    5. 'tmp' → logprob: -12.256853103637695
    6. ' temp' → logprob: -14.006853103637695
    7. 'if' → logprob: -14.506853103637695
    8. '	s' → logprob: -15.631853103637695
    9. '       ' → logprob: -15.881853103637695
    10. '`s' → logprob: -16.006853103637695

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759595036506653
    2. ' =' → logprob: -0.8259595036506653
    3. 's' → logprob: -11.325959205627441
    4. '=s' → logprob: -12.200959205627441
    5. ',' → logprob: -13.700959205627441
    6. '   ' → logprob: -14.575959205627441
    7. ' ' → logprob: -14.700959205627441
    8. '=
' → logprob: -15.700959205627441
    9. '[' → logprob: -15.825959205627441
    10. ')' → logprob: -15.825959205627441

Token 158: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.3080716346157715e-05
    2. ' s' → logprob: -10.750022888183594
    3. '   ' → logprob: -13.625022888183594
    4. 'first' → logprob: -15.125022888183594
    5. '	s' → logprob: -17.750022888183594
    6. '  ' → logprob: -18.000022888183594
    7. '`s' → logprob: -18.000022888183594
    8. ' ' → logprob: -18.125022888183594
    9. 'second' → logprob: -18.625022888183594
    10. '(s' → logprob: -18.875022888183594

Token 159: '[first' (ID: 162208)
  Prédit: '[first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[first' → logprob: -0.0004387750814203173
    2. '[' → logprob: -7.750438690185547
    3. 'first' → logprob: -11.750438690185547
    4. 'second' → logprob: -15.625438690185547
    5. '	first' → logprob: -19.250438690185547
    6. 'First' → logprob: -19.250438690185547
    7. '[left' → logprob: -19.500438690185547
    8. ' [' → logprob: -19.625438690185547
    9. '(first' → logprob: -19.625438690185547
    10. ' first' → logprob: -19.750438690185547

Token 160: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.08939175307750702
    2. '_val' → logprob: -2.4643917083740234
    3. 'idx' → logprob: -8.339391708374023
    4. '[first' → logprob: -9.339391708374023
    5. 'val' → logprob: -9.589391708374023
    6. 'first' → logprob: -10.964391708374023
    7. '[' → logprob: -11.839391708374023
    8. ']' → logprob: -11.839391708374023
    9. '[idx' → logprob: -12.089391708374023
    10. '][' → logprob: -12.714391708374023

Token 161: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.061990655958652496
    2. ']' → logprob: -2.811990737915039
    3. ' ]
' → logprob: -11.311990737915039
    4. ']
' → logprob: -12.061990737915039
    5. ']

' → logprob: -12.436990737915039
    6. ' ]' → logprob: -13.936990737915039
    7. 's' → logprob: -15.936990737915039
    8. ']'
' → logprob: -17.81199073791504
    9. '']
' → logprob: -18.18699073791504
    10. ')
' → logprob: -18.43699073791504

Token 162: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2232414186000824
    2. '   ' → logprob: -2.0982413291931152
    3. ' s' → logprob: -2.5982413291931152
    4. '
' → logprob: -6.223241329193115
    5. '<|end|>' → logprob: -8.098241806030273
    6. ' =' → logprob: -8.598241806030273
    7. '=s' → logprob: -8.723241806030273
    8. '=' → logprob: -9.598241806030273
    9. 'n' → logprob: -10.223241806030273
    10. '	s' → logprob: -10.348241806030273

Token 163: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0032052809838205576
    2. ' s' → logprob: -5.753205299377441
    3. '   ' → logprob: -10.503205299377441
    4. ' ' → logprob: -16.753204345703125
    5. '	s' → logprob: -16.878204345703125
    6. '```' → logprob: -17.628204345703125
    7. '
' → logprob: -18.503204345703125
    8. '  ' → logprob: -18.628204345703125
    9. '`s' → logprob: -18.878204345703125
    10. '       ' → logprob: -19.253204345703125

Token 164: '[first' (ID: 162208)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07889033854007721
    2. '[first' → logprob: -2.578890323638916
    3. 'second' → logprob: -15.328890800476074
    4. '	second' → logprob: -15.828890800476074
    5. '```' → logprob: -16.953889846801758
    6. ' [' → logprob: -17.078889846801758
    7. 'first' → logprob: -17.578889846801758
    8. '][' → logprob: -18.078889846801758
    9. '[next' → logprob: -18.453889846801758
    10. '[last' → logprob: -18.578889846801758

Token 165: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.1875571544806007e-05
    2. 'idx' → logprob: -12.000011444091797
    3. '+' → logprob: -12.750011444091797
    4. '[idx' → logprob: -14.125011444091797
    5. '_idxs' → logprob: -14.625011444091797
    6. '_index' → logprob: -14.750011444091797
    7. ']' → logprob: -14.875011444091797
    8. '_val' → logprob: -16.250011444091797
    9. '_i' → logprob: -16.500011444091797
    10. '[' → logprob: -17.000011444091797

Token 166: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.302704761968926e-05
    2. '],' → logprob: -10.250073432922363
    3. ']=' → logprob: -10.625073432922363
    4. ' ]' → logprob: -11.250073432922363
    5. '=' → logprob: -15.875073432922363
    6. ']
' → logprob: -16.375072479248047
    7. ',' → logprob: -17.375072479248047
    8. 's' → logprob: -17.375072479248047
    9. ']

' → logprob: -17.750072479248047
    10. '   ' → logprob: -17.750072479248047

Token 167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005236598663032055
    2. ' =' → logprob: -5.255236625671387
    3. '=s' → logprob: -13.130236625671387
    4. ',' → logprob: -14.505236625671387
    5. 's' → logprob: -15.630236625671387
    6. '=

' → logprob: -17.25523567199707
    7. '=
' → logprob: -18.25523567199707
    8. ' ' → logprob: -19.00523567199707
    9. '=}' → logprob: -19.88023567199707
    10. ')' → logprob: -19.88023567199707

Token 168: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0030428392346948385
    2. 'second' → logprob: -5.878042697906494
    3. ' s' → logprob: -8.378043174743652
    4. ' second' → logprob: -11.753043174743652
    5. '   ' → logprob: -15.378043174743652
    6. '	s' → logprob: -18.128042221069336
    7. ' ' → logprob: -18.253042221069336
    8. '  ' → logprob: -18.753042221069336
    9. 'Second' → logprob: -18.878042221069336
    10. '(second' → logprob: -18.878042221069336

Token 169: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10021767020225525
    2. 'second' → logprob: -2.350217580795288
    3. 's' → logprob: -11.600217819213867
    4. ' second' → logprob: -14.350217819213867
    5. '(second' → logprob: -14.975217819213867
    6. '	second' → logprob: -14.975217819213867
    7. '[first' → logprob: -15.225217819213867
    8. '_second' → logprob: -16.350217819213867
    9. '[s' → logprob: -16.475217819213867
    10. 'Second' → logprob: -16.725217819213867

Token 170: 'second' (ID: 13901)
  Prédit: 'second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.018180379644036293
    2. 's' → logprob: -4.0181803703308105
    3. ' second' → logprob: -10.893180847167969
    4. '[' → logprob: -11.518180847167969
    5. ' s' → logprob: -14.393180847167969
    6. '	second' → logprob: -14.518180847167969
    7. '(second' → logprob: -15.143180847167969
    8. '   ' → logprob: -15.518180847167969
    9. 'Second' → logprob: -15.518180847167969
    10. '.second' → logprob: -16.76818084716797

Token 171: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -8.458980300929397e-05
    2. '_val' → logprob: -9.50008487701416
    3. 'idx' → logprob: -11.62508487701416
    4. '_index' → logprob: -15.12508487701416
    5. '_idxs' → logprob: -16.500083923339844
    6. 'val' → logprob: -16.625083923339844
    7. 'Idx' → logprob: -17.000083923339844
    8. ']' → logprob: -17.250083923339844
    9. '_' → logprob: -17.500083923339844
    10. 'second' → logprob: -17.625083923339844

Token 172: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05533062294125557
    2. ']
' → logprob: -2.930330514907837
    3. '   ' → logprob: -8.555330276489258
    4. 'temp' → logprob: -9.180330276489258
    5. '
' → logprob: -9.430330276489258
    6. '<|end|>' → logprob: -10.305330276489258
    7. ')' → logprob: -12.055330276489258
    8. '```' → logprob: -12.305330276489258
    9. '    
' → logprob: -12.430330276489258
    10. 's' → logprob: -12.555330276489258

Token 173: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15651337802410126
    2. ' s' → logprob: -2.4065134525299072
    3. '   ' → logprob: -2.9065134525299072
    4. '
' → logprob: -10.781513214111328
    5. '	s' → logprob: -11.031513214111328
    6. '    
' → logprob: -11.656513214111328
    7. '(s' → logprob: -11.781513214111328
    8. '```' → logprob: -11.781513214111328
    9. ' 
' → logprob: -11.906513214111328
    10. '  
' → logprob: -12.656513214111328

Token 174: ' s' (ID: 265)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0753897950053215
    2. 's' (adapté à ' s') → logprob: -2.825389862060547
    3. ' temp' → logprob: -4.325389862060547
    4. ' s' → logprob: -9.200389862060547
    5. '[temp' → logprob: -13.450389862060547
    6. 'second' → logprob: -14.200389862060547
    7. '(temp' → logprob: -15.575389862060547
    8. 'tmp' → logprob: -15.700389862060547
    9. '	temp' → logprob: -16.075389862060547
    10. '=temp' → logprob: -16.075389862060547

Token 175: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3544423381972592e-05
    2. '[first' → logprob: -11.37501335144043
    3. 'second' → logprob: -13.50001335144043
    4. '[temp' → logprob: -16.00001335144043
    5. '_second' → logprob: -16.25001335144043
    6. '```' → logprob: -16.62501335144043
    7. '[next' → logprob: -16.75001335144043
    8. '   ' → logprob: -17.25001335144043
    9. '	second' → logprob: -17.25001335144043
    10. ' second' → logprob: -17.50001335144043

Token 176: 'second' (ID: 13901)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0001576506474521011
    2. ' first' → logprob: -9.500157356262207
    3. 'second' → logprob: -9.750157356262207
    4. 'i' → logprob: -11.875157356262207
    5. 'idx' → logprob: -12.375157356262207
    6. '[first' → logprob: -12.500157356262207
    7. 'index' → logprob: -12.625157356262207
    8. ']' → logprob: -13.000157356262207
    9. ' ' → logprob: -13.625157356262207
    10. 'last' → logprob: -14.125157356262207

Token 177: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0008126051397994161
    2. 'idx' → logprob: -7.125812530517578
    3. 'Idx' → logprob: -11.875812530517578
    4. ']' → logprob: -15.375812530517578
    5. '_val' → logprob: -15.375812530517578
    6. '_IDX' → logprob: -15.625812530517578
    7. '_index' → logprob: -15.750812530517578
    8. 'x' → logprob: -16.250812530517578
    9. ' idx' → logprob: -16.625812530517578
    10. 'IDX' → logprob: -16.750812530517578

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.6550729419104755e-05
    2. ' ]' → logprob: -10.500036239624023
    3. ']=' → logprob: -12.000036239624023
    4. ']
' → logprob: -12.875036239624023
    5. ']

' → logprob: -15.875036239624023
    6. '   ' → logprob: -18.125036239624023
    7. '],' → logprob: -18.250036239624023
    8. '=' → logprob: -18.500036239624023
    9. ')' → logprob: -18.750036239624023
    10. '']' → logprob: -18.750036239624023

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164566993713379
    2. ' =' → logprob: -4.264164447784424
    3. '=
' → logprob: -14.264164924621582
    4. '=temp' → logprob: -14.889164924621582
    5. ' =
' → logprob: -17.014163970947266
    6. ',' → logprob: -17.639163970947266
    7. ']=' → logprob: -19.139163970947266
    8. '=s' → logprob: -19.264163970947266
    9. ')' → logprob: -19.514163970947266
    10. '＝' → logprob: -19.514163970947266

Token 180: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.03804149478673935
    2. ' temp' → logprob: -3.288041591644287
    3. 'tmp' → logprob: -16.913042068481445
    4. 'tem' → logprob: -18.038042068481445
    5. '	temp' → logprob: -18.413042068481445
    6. 't' → logprob: -20.538042068481445
    7. '$temp' → logprob: -20.788042068481445
    8. '[temp' → logprob: -20.913042068481445
    9. '(temp' → logprob: -21.413042068481445
    10. ' tmp' → logprob: -21.413042068481445

Token 181: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0012965429341420531
    2. '

' → logprob: -7.251296520233154
    3. '\n' → logprob: -8.126296997070312
    4. '    
' → logprob: -9.376296997070312
    5. 'if' → logprob: -9.501296997070312
    6. '  
' → logprob: -10.126296997070312
    7. '   ' → logprob: -10.376296997070312
    8. ' if' → logprob: -10.876296997070312
    9. '
' → logprob: -11.001296997070312
    10. '<|end|>' → logprob: -11.626296997070312

Token 182: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15093418955802917
    2. 'if' → logprob: -2.2759342193603516
    3. ' if' → logprob: -4.650934219360352
    4. '<|end|>' → logprob: -4.650934219360352
    5. '   ' → logprob: -4.775934219360352
    6. '    
' → logprob: -5.400934219360352
    7. '  
' → logprob: -6.650934219360352
    8. '\n' → logprob: -6.650934219360352
    9. 'for' → logprob: -7.275934219360352
    10. '#' → logprob: -7.275934219360352

Token 183: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16353893280029297
    2. 'if' → logprob: -1.913538932800293
    3. '#' (adapté à ' #') → logprob: -5.913538932800293
    4. '
' → logprob: -8.038538932800293
    5. 'valid' → logprob: -9.538538932800293
    6. 'is' → logprob: -9.788538932800293
    7. '    
' → logprob: -10.163538932800293
    8. 'sorted' → logprob: -10.163538932800293
    9. '   ' → logprob: -10.288538932800293
    10. 'prev' → logprob: -11.413538932800293

Token 184: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03723439201712608
    2. 'for' → logprob: -3.787234306335449
    3. ' if' → logprob: -4.412234306335449
    4. '#' → logprob: -7.412234306335449
    5. 'result' → logprob: -7.537234306335449
    6. ' for' → logprob: -7.662234306335449
    7. '
' → logprob: -9.78723430633545
    8. '   ' → logprob: -10.66223430633545
    9. 'check' → logprob: -11.03723430633545
    10. 'valid' → logprob: -11.16223430633545

Token 185: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2342781126499176
    2. 'if' → logprob: -1.6092780828475952
    3. '   ' → logprob: -5.484278202056885
    4. ' for' → logprob: -6.109278202056885
    5. 'for' → logprob: -6.109278202056885
    6. 'result' → logprob: -8.859277725219727
    7. ' =' → logprob: -10.734277725219727
    8. ' result' → logprob: -10.859277725219727
    9. 's' → logprob: -10.984277725219727
    10. '    
' → logprob: -12.359277725219727

Token 186: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.040225859731435776
    2. 'all' → logprob: -3.2902257442474365
    3. 's' → logprob: -6.665225982666016
    4. ' s' → logprob: -7.165225982666016
    5. 'sorted' → logprob: -9.790225982666016
    6. 'result' → logprob: -10.915225982666016
    7. ' sorted' → logprob: -10.915225982666016
    8. ' the' → logprob: -11.165225982666016
    9. 'for' → logprob: -12.040225982666016
    10. ' for' → logprob: -12.040225982666016

Token 187: ' swap' (ID: 25489)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7500099539756775
    2. 'all' → logprob: -1.0000100135803223
    3. 's' → logprob: -2.5000100135803223
    4. 'result' → logprob: -2.8750100135803223
    5. ' s' → logprob: -4.375010013580322
    6. ' result' → logprob: -5.375010013580322
    7. 'sorted' → logprob: -6.250010013580322
    8. 'for' → logprob: -6.875010013580322
    9. ' for' → logprob: -7.625010013580322
    10. ' ' → logprob: -8.500009536743164

Token 188: ' fixed' (ID: 13213)
  Prédit: ' fixes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fixes' → logprob: -0.8664402365684509
    2. 'fix' → logprob: -1.3664402961730957
    3. '   ' → logprob: -2.8664402961730957
    4. 'resolved' → logprob: -3.6164402961730957
    5. 'correct' → logprob: -3.7414402961730957
    6. 'rest' → logprob: -3.8664402961730957
    7. 'makes' → logprob: -3.8664402961730957
    8. ' restored' → logprob: -3.9914402961730957
    9. ' resolves' → logprob: -4.116440296173096
    10. ' restores' → logprob: -4.366440296173096

Token 189: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1275334507226944
    2. 'the' → logprob: -2.127533435821533
    3. 's' → logprob: -7.627533435821533
    4. ' s' → logprob: -9.627533912658691
    5. ' all' → logprob: -10.752533912658691
    6. ' any' → logprob: -11.502533912658691
    7. 'all' → logprob: -12.252533912658691
    8. ' ' → logprob: -12.252533912658691
    9. 'for' → logprob: -12.752533912658691
    10. '   ' → logprob: -13.002533912658691

Token 190: ' sequence' (ID: 16281)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.43479880690574646
    2. 'list' → logprob: -1.9347988367080688
    3. 'sequence' → logprob: -2.0597987174987793
    4. 'array' → logprob: -2.6847987174987793
    5. 'issue' → logprob: -5.184798717498779
    6. 's' → logprob: -6.059798717498779
    7. ' problem' → logprob: -6.184798717498779
    8. 'code' → logprob: -6.934798717498779
    9. ' sequence' → logprob: -7.434798717498779
    10. ' array' → logprob: -8.559799194335938

Token 191: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7719711065292358
    2. '   ' → logprob: -1.0219711065292358
    3. 'for' → logprob: -1.7719711065292358
    4. '
' → logprob: -5.396971225738525
    5. 'if' → logprob: -6.146971225738525
    6. ' if' → logprob: -6.771971225738525
    7. '    
' → logprob: -9.271970748901367
    8. '```' → logprob: -10.521970748901367
    9. ',' → logprob: -10.771970748901367
    10. 'result' → logprob: -11.146970748901367

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039697494357824326
    2. ' for' → logprob: -3.5396974086761475
    3. 'for' → logprob: -4.664697647094727
    4. 'if' → logprob: -8.414697647094727
    5. ' if' → logprob: -8.789697647094727
    6. '    
' → logprob: -10.039697647094727
    7. '
' → logprob: -10.164697647094727
    8. 'result' → logprob: -11.789697647094727
    9. ' result' → logprob: -12.039697647094727
    10. ' is' → logprob: -13.164697647094727

Token 193: ' ok' (ID: 4763)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0040768589824438095
    2. 'if' → logprob: -6.254076957702637
    3. 'result' → logprob: -6.379076957702637
    4. 'valid' → logprob: -8.254076957702637
    5. ' for' → logprob: -8.879076957702637
    6. 'is' → logprob: -10.504076957702637
    7. 'correct' → logprob: -11.504076957702637
    8. '   ' → logprob: -12.754076957702637
    9. 'ok' (adapté à ' ok') → logprob: -12.879076957702637
    10. 'flag' → logprob: -13.004076957702637

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011074943467974663
    2. '=' → logprob: -4.511075019836426
    3. 'ay' → logprob: -10.761075019836426
    4. '=True' → logprob: -12.761075019836426
    5. ' ' → logprob: -13.636075019836426
    6. '   ' → logprob: -14.136075019836426
    7. 'ey' → logprob: -14.261075019836426
    8. 'y' → logprob: -16.01107406616211
    9. ' ' → logprob: -16.26107406616211
    10. '=False' → logprob: -16.38607406616211

Token 195: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005373560823500156
    2. ' True' → logprob: -5.255373477935791
    3. 'all' → logprob: -9.00537395477295
    4. ' all' → logprob: -11.00537395477295
    5. '(True' → logprob: -15.00537395477295
    6. '   ' → logprob: -17.380373001098633
    7. '"' → logprob: -18.005373001098633
    8. 'All' → logprob: -18.255373001098633
    9. ' ' → logprob: -18.630373001098633
    10. 'true' → logprob: -18.755373001098633

Token 196: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12344224750995636
    2. ' for' → logprob: -2.6234421730041504
    3. 'for' → logprob: -3.2484421730041504
    4. '
' → logprob: -5.37344217300415
    5. '    
' → logprob: -9.748442649841309
    6. '<|end|>' → logprob: -11.123442649841309
    7. '	for' → logprob: -11.498442649841309
    8. ' 
' → logprob: -11.998442649841309
    9. '\n' → logprob: -12.123442649841309
    10. '  
' → logprob: -13.623442649841309

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19674576818943024
    2. 'for' → logprob: -2.1967458724975586
    3. ' for' → logprob: -2.6967458724975586
    4. '
' → logprob: -11.696745872497559
    5. '    
' → logprob: -14.071745872497559
    6. '	for' → logprob: -14.071745872497559
    7. '  ' → logprob: -14.071745872497559
    8. ' ' → logprob: -14.946745872497559
    9. '    ' → logprob: -15.071745872497559
    10. '```' → logprob: -15.446745872497559

Token 198: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.7697225252486533e-06
    2. ' for' → logprob: -12.500003814697266
    3. '
' → logprob: -19.500003814697266
    4. '```' → logprob: -21.250003814697266
    5. '	for' → logprob: -22.000003814697266
    6. '   ' → logprob: -23.000003814697266
    7. ' ' → logprob: -24.375003814697266
    8. 'For' → logprob: -24.375003814697266
    9. ' 
' → logprob: -25.000003814697266
    10. 'prev' → logprob: -25.125003814697266

Token 199: ' first' (ID: 1577)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.605739176273346
    2. ' n' → logprob: -1.2307391166687012
    3. 's' → logprob: -2.730739116668701
    4. 'n' → logprob: -2.980739116668701
    5. ' not' → logprob: -3.980739116668701
    6. ' any' → logprob: -4.855739116668701
    7. ' len' → logprob: -4.855739116668701
    8. ' ok' → logprob: -5.230739116668701
    9. 'ok' → logprob: -5.605739116668701
    10. 'len' → logprob: -6.730739116668701

Token 200: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0036175278946757317
    2. '_val' → logprob: -5.628617763519287
    3. '+' → logprob: -11.878617286682129
    4. '_' → logprob: -12.753617286682129
    5. 'idx' → logprob: -13.003617286682129
    6. '>' → logprob: -13.378617286682129
    7. '   ' → logprob: -14.128617286682129
    8. '_index' → logprob: -15.253617286682129
    9. ' _' → logprob: -15.378617286682129
    10. ' idx' → logprob: -15.503617286682129

Token 201: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01125164981931448
    2. ' >' → logprob: -4.511251449584961
    3. '-' → logprob: -9.511251449584961
    4. '+' → logprob: -9.761251449584961
    5. '<' → logprob: -10.136251449584961
    6. ' <' → logprob: -11.386251449584961
    7. '<n' → logprob: -11.761251449584961
    8. '<len' → logprob: -12.386251449584961
    9. 'and' → logprob: -13.386251449584961
    10. ' ' → logprob: -13.511251449584961

Token 202: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01481945812702179
    2. 'len' → logprob: -4.889819622039795
    3. 'second' → logprob: -5.389819622039795
    4. ' n' → logprob: -6.389819622039795
    5. 'first' → logprob: -7.264819622039795
    6. '1' → logprob: -9.139819145202637
    7. '0' → logprob: -9.389819145202637
    8. ' second' → logprob: -10.764819145202637
    9. ' len' → logprob: -11.264819145202637
    10. ' ' → logprob: -11.889819145202637

Token 203: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07889298349618912
    2. ' -' → logprob: -2.578892946243286
    3. 'and' → logprob: -13.953892707824707
    4. ' ' → logprob: -13.953892707824707
    5. '   ' → logprob: -14.078892707824707
    6. '1' → logprob: -15.078892707824707
    7. ' and' → logprob: -15.328892707824707
    8. '−' → logprob: -16.203893661499023
    9. '–' → logprob: -17.328893661499023
    10. '2' → logprob: -17.578893661499023

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08903052657842636
    2. '2' → logprob: -2.4640305042266846
    3. ' ' → logprob: -9.339030265808105
    4. '   ' → logprob: -13.464030265808105
    5. '-' → logprob: -14.339030265808105
    6. '
' → logprob: -14.839030265808105
    7. '3' → logprob: -15.464030265808105
    8. '```' → logprob: -15.464030265808105
    9. '  ' → logprob: -16.526531219482422
    10. '       ' → logprob: -16.776531219482422

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006722352933138609
    2. '2' → logprob: -5.006722450256348
    3. ' ' → logprob: -12.131722450256348
    4. '   ' → logprob: -14.381722450256348
    5. '
' → logprob: -14.881722450256348
    6. '-' → logprob: -15.131722450256348
    7. '```' → logprob: -16.13172149658203
    8. '3' → logprob: -16.38172149658203
    9. '...' → logprob: -16.69422149658203
    10. '

' → logprob: -17.06922149658203

Token 206: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2534640431404114
    2. 'and' → logprob: -1.5034639835357666
    3. ':
' → logprob: -7.128464221954346
    4. ':' → logprob: -8.003463745117188
    5. '   ' → logprob: -8.003463745117188
    6. ' ' → logprob: -9.753463745117188
    7. '	and' → logprob: -13.503463745117188
    8. '  ' → logprob: -14.253463745117188
    9. '    ' → logprob: -14.378463745117188
    10. ' и' → logprob: -14.753463745117188

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006999758537858725
    2. ' and' → logprob: -5.381999969482422
    3. ' if' → logprob: -7.006999969482422
    4. '   ' → logprob: -7.506999969482422
    5. 'and' → logprob: -7.631999969482422
    6. 'if' → logprob: -8.006999969482422
    7. ':
' → logprob: -10.506999969482422
    8. ':' → logprob: -11.381999969482422
    9. '<|end|>' → logprob: -11.381999969482422
    10. '	   ' → logprob: -11.506999969482422

Token 208: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.022720282897353172
    2. ' if' → logprob: -4.0227203369140625
    3. '   ' → logprob: -5.3977203369140625
    4. '       ' → logprob: -10.647720336914062
    5. 'ok' → logprob: -12.397720336914062
    6. '	if' → logprob: -13.772720336914062
    7. ' ok' → logprob: -13.772720336914062
    8. ' ' → logprob: -14.147720336914062
    9. '  ' → logprob: -14.272720336914062
    10. 'for' → logprob: -14.522720336914062

Token 209: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002209019847214222
    2. ' s' → logprob: -6.127209186553955
    3. '   ' → logprob: -10.752208709716797
    4. '(s' → logprob: -13.877208709716797
    5. '	s' → logprob: -14.252208709716797
    6. '    ' → logprob: -15.502208709716797
    7. 'not' → logprob: -15.752208709716797
    8. ' ' → logprob: -15.877208709716797
    9. '  ' → logprob: -16.377208709716797
    10. '`s' → logprob: -16.377208709716797

Token 210: '[first' (ID: 162208)
  Prédit: '[first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[first' → logprob: -2.339278580620885e-06
    2. 'first' → logprob: -13.000001907348633
    3. '	first' → logprob: -19.375001907348633
    4. ' first' → logprob: -21.250001907348633
    5. '   ' → logprob: -21.500001907348633
    6. ':first' → logprob: -21.625001907348633
    7. 'First' → logprob: -21.750001907348633
    8. '[f' → logprob: -22.000001907348633
    9. '(first' → logprob: -22.125001907348633
    10. '[' → logprob: -22.625001907348633

Token 211: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -8.77627644513268e-06
    2. 'idx' → logprob: -12.500008583068848
    3. '+' → logprob: -12.625008583068848
    4. '   ' → logprob: -14.625008583068848
    5. '_idxs' → logprob: -15.125008583068848
    6. '[idx' → logprob: -15.375008583068848
    7. ']' → logprob: -16.000009536743164
    8. 'Idx' → logprob: -16.250009536743164
    9. '```' → logprob: -16.250009536743164
    10. '	idx' → logprob: -16.375009536743164

Token 212: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.042094387114048004
    2. ' +' → logprob: -3.2920944690704346
    3. ']' → logprob: -5.5420942306518555
    4. '>' → logprob: -10.417094230651855
    5. '[' → logprob: -10.542094230651855
    6. ']>' → logprob: -10.917094230651855
    7. '+]' → logprob: -11.292094230651855
    8. ' ]' → logprob: -11.667094230651855
    9. '   ' → logprob: -12.042094230651855
    10. ']+' → logprob: -12.042094230651855

Token 213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030522197484970093
    2. ' ' → logprob: -6.003052234649658
    3. '0' → logprob: -8.0030517578125
    4. ']' → logprob: -8.3780517578125
    5. '   ' → logprob: -12.2530517578125
    6. ')' → logprob: -13.0030517578125
    7. 's' → logprob: -13.1280517578125
    8. 'first' → logprob: -14.2530517578125
    9. '  ' → logprob: -14.3780517578125
    10. '```' → logprob: -14.5030517578125

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011938270181417465
    2. 'i' → logprob: -5.761938095092773
    3. ']' → logprob: -5.761938095092773
    4. '-' → logprob: -5.886938095092773
    5. 'first' → logprob: -6.886938095092773
    6. '0' → logprob: -7.261938095092773
    7. ')' → logprob: -8.011938095092773
    8. 'second' → logprob: -8.636938095092773
    9. 'idx' → logprob: -8.636938095092773
    10. ' ' → logprob: -8.886938095092773

Token 215: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1603325754404068
    2. ' -' → logprob: -1.9103325605392456
    3. '-s' → logprob: -10.160332679748535
    4. ']' → logprob: -10.285332679748535
    5. '<=' → logprob: -10.910332679748535
    6. 's' → logprob: -11.410332679748535
    7. ' ' → logprob: -13.035332679748535
    8. '   ' → logprob: -13.410332679748535
    9. ' <=' → logprob: -14.160332679748535
    10. ')' → logprob: -14.410332679748535

Token 216: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8613424897193909
    2. '<=' → logprob: -1.236342430114746
    3. '-' → logprob: -1.361342430114746
    4. ' <=' → logprob: -3.486342430114746
    5. ' ' → logprob: -11.486342430114746
    6. '   ' → logprob: -11.986342430114746
    7. '<' → logprob: -12.111342430114746
    8. '-s' → logprob: -12.111342430114746
    9. '  ' → logprob: -13.611342430114746
    10. ']<=' → logprob: -14.486342430114746

Token 217: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31326499581336975
    2. 's' → logprob: -1.3132649660110474
    3. '   ' → logprob: -13.813264846801758
    4. '1' → logprob: -14.813264846801758
    5. '	s' → logprob: -14.938264846801758
    6. '(s' → logprob: -15.063264846801758
    7. ' ' → logprob: -15.188264846801758
    8. '       ' → logprob: -15.688264846801758
    9. '```' → logprob: -16.063264846801758
    10. '[' → logprob: -16.313264846801758

Token 218: '[first' (ID: 162208)
  Prédit: '[first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[first' → logprob: -1.6240566083070007e-06
    2. 'first' → logprob: -13.500001907348633
    3. '[s' → logprob: -15.875001907348633
    4. '[' → logprob: -17.125001907348633
    5. '[f' → logprob: -18.125001907348633
    6. 's' → logprob: -18.125001907348633
    7. '[left' → logprob: -19.500001907348633
    8. '[last' → logprob: -19.625001907348633
    9. '
' → logprob: -20.125001907348633
    10. '[
' → logprob: -20.625001907348633

Token 219: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.01421087421476841
    2. 'idx' → logprob: -4.2642107009887695
    3. 'Idx' → logprob: -10.51421070098877
    4. '[idx' → logprob: -11.88921070098877
    5. '_idxs' → logprob: -12.13921070098877
    6. '	idx' → logprob: -12.88921070098877
    7. '_IDX' → logprob: -13.76421070098877
    8. 'IDX' → logprob: -14.26421070098877
    9. ' idx' → logprob: -14.63921070098877
    10. 'index' → logprob: -14.63921070098877

Token 220: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08951950818300247
    2. '<' → logprob: -2.464519500732422
    3. ' <=' → logprob: -8.339519500732422
    4. '<=' → logprob: -9.214519500732422
    5. ' ' → logprob: -9.339519500732422
    6. ')' → logprob: -9.589519500732422
    7. ']' → logprob: -10.089519500732422
    8. '<|end|>' → logprob: -11.714519500732422
    9. ')<' → logprob: -11.839519500732422
    10. ']<' → logprob: -11.964519500732422

Token 221: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47424617409706116
    2. ' <' → logprob: -0.9742461442947388
    3. '<=' → logprob: -8.97424602508545
    4. ' <=' → logprob: -10.09924602508545
    5. ' ' → logprob: -14.09924602508545
    6. '   ' → logprob: -15.34924602508545
    7. '<n' → logprob: -16.224246978759766
    8. '<int' → logprob: -17.099246978759766
    9. '<class' → logprob: -17.224246978759766
    10. ' ' → logprob: -17.224246978759766

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018150994554162025
    2. ' ' → logprob: -4.018150806427002
    3. '0' → logprob: -13.89315128326416
    4. '   ' → logprob: -16.143150329589844
    5. '<|end|>' → logprob: -18.018150329589844
    6. '```' → logprob: -19.018150329589844
    7. '=' → logprob: -19.143150329589844
    8. ' ' → logprob: -19.518150329589844
    9. '
' → logprob: -19.768150329589844
    10. '  ' → logprob: -20.018150329589844

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025718524120748043
    2. '0' → logprob: -6.002572059631348
    3. ' ' → logprob: -9.252572059631348
    4. '-' → logprob: -15.877572059631348
    5. '=' → logprob: -16.37757110595703
    6. '   ' → logprob: -16.62757110595703
    7. ' -' → logprob: -18.19007110595703
    8. '2' → logprob: -18.62757110595703
    9. '```' → logprob: -18.62757110595703
    10. '>' → logprob: -19.37757110595703

Token 224: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.33380126953125
    2. ':' → logprob: -1.95880126953125
    3. '       ' → logprob: -1.95880126953125
    4. '           ' → logprob: -6.70880126953125
    5. '   ' → logprob: -7.83380126953125
    6. ' or' → logprob: -9.95880126953125
    7. '):
' → logprob: -11.20880126953125
    8. ' :
' → logprob: -11.45880126953125
    9. ':

' → logprob: -12.08380126953125
    10. ' and' → logprob: -12.08380126953125

Token 225: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5978654623031616
    2. '           ' → logprob: -1.0978654623031616
    3. '\n' → logprob: -2.847865581512451
    4. '
' → logprob: -2.972865581512451
    5. ':
' → logprob: -6.472865581512451
    6. 'newline' → logprob: -6.722865581512451
    7. '\
' → logprob: -6.722865581512451
    8. '   ' → logprob: -6.972865581512451
    9. 'ok' → logprob: -7.472865581512451
    10. '\' → logprob: -8.097865104675293

Token 226: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.12736710906028748
    2. ' ok' → logprob: -2.1273670196533203
    3. '	ok' → logprob: -8.50236701965332
    4. '   ' → logprob: -8.87736701965332
    5. '       ' → logprob: -9.50236701965332
    6. '
' → logprob: -11.12736701965332
    7. ' okay' → logprob: -12.75236701965332
    8. 'okay' → logprob: -13.87736701965332
    9. '           ' → logprob: -14.00236701965332
    10. '        
' → logprob: -14.87736701965332

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694533169269562
    2. ' =' → logprob: -2.1269452571868896
    3. '=False' → logprob: -11.001945495605469
    4. '           ' → logprob: -15.626945495605469
    5. '==' → logprob: -15.626945495605469
    6. '=True' → logprob: -16.50194549560547
    7. '=
' → logprob: -16.87694549560547
    8. '=

' → logprob: -16.87694549560547
    9. '   ' → logprob: -17.12694549560547
    10. ')' → logprob: -17.12694549560547

Token 228: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0011703446507453918
    2. ' False' → logprob: -6.7511701583862305
    3. '=False' → logprob: -16.376171112060547
    4. '(False' → logprob: -17.876171112060547
    5. '   ' → logprob: -19.251171112060547
    6. 'false' → logprob: -19.501171112060547
    7. '.False' → logprob: -20.626171112060547
    8. '0' → logprob: -20.751171112060547
    9. '_false' → logprob: -21.126171112060547
    10. 'True' → logprob: -22.126171112060547

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005127601907588542
    2. 'if' → logprob: -7.875512599945068
    3. '
' → logprob: -9.250513076782227
    4. 'elif' → logprob: -11.250513076782227
    5. ' if' → logprob: -11.625513076782227
    6. '    
' → logprob: -12.125513076782227
    7. 'for' → logprob: -12.875513076782227
    8. '       ' → logprob: -13.375513076782227
    9. 'else' → logprob: -13.500513076782227
    10. '```' → logprob: -13.750513076782227

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024699477944523096
    2. '
' → logprob: -6.502470016479492
    3. 'if' → logprob: -7.252470016479492
    4. '    
' → logprob: -8.752470016479492
    5. ' if' → logprob: -9.752470016479492
    6. '```' → logprob: -10.877470016479492
    7. '<|end|>' → logprob: -12.127470016479492
    8. 'elif' → logprob: -12.377470016479492
    9. '       ' → logprob: -12.877470016479492
    10. 'for' → logprob: -13.127470016479492

Token 231: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.28114235401153564
    2. '   ' → logprob: -1.5311423540115356
    3. ' if' → logprob: -3.656142234802246
    4. '
' → logprob: -5.906142234802246
    5. '    
' → logprob: -9.531142234802246
    6. '\n' → logprob: -10.281142234802246
    7. '	if' → logprob: -10.656142234802246
    8. 'elif' → logprob: -10.656142234802246
    9. 'for' → logprob: -10.906142234802246
    10. '  ' → logprob: -10.906142234802246

Token 232: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.43388187885284424
    2. 'second' → logprob: -1.3088818788528442
    3. ' first' → logprob: -2.6838817596435547
    4. 'first' → logprob: -4.308881759643555
    5. ' ' → logprob: -9.808881759643555
    6. '	second' → logprob: -10.558881759643555
    7. '   ' → logprob: -10.933881759643555
    8. ' s' → logprob: -11.433881759643555
    9. '  ' → logprob: -12.308881759643555
    10. '(second' → logprob: -12.558881759643555

Token 233: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -3.292907877039397e-06
    2. '_index' → logprob: -13.87500286102295
    3. '_idxs' → logprob: -14.62500286102295
    4. '_val' → logprob: -15.00000286102295
    5. '```' → logprob: -15.00000286102295
    6. ' _' → logprob: -15.62500286102295
    7. '_' → logprob: -15.75000286102295
    8. 'idx' → logprob: -16.375003814697266
    9. '_IDX' → logprob: -16.500003814697266
    10. '_pos' → logprob: -16.500003814697266

Token 234: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1441338211297989
    2. '<' → logprob: -2.0191338062286377
    3. ' ' → logprob: -7.269134044647217
    4. '+' → logprob: -7.894134044647217
    5. ' >' → logprob: -8.769133567810059
    6. '>' → logprob: -8.894133567810059
    7. ' +' → logprob: -9.644133567810059
    8. '<n' → logprob: -11.769133567810059
    9. '   ' → logprob: -11.894133567810059
    10. '  ' → logprob: -12.894133567810059

Token 235: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14302176237106323
    2. ' ' → logprob: -2.018021821975708
    3. ' first' → logprob: -8.518021583557129
    4. 'first' → logprob: -9.143021583557129
    5. '1' → logprob: -10.268021583557129
    6. '=' → logprob: -13.018021583557129
    7. 'second' → logprob: -14.268021583557129
    8. '   ' → logprob: -14.643021583557129
    9. '[first' → logprob: -14.768021583557129
    10. '(first' → logprob: -14.955521583557129

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001969077391549945
    2. ' ' → logprob: -6.251968860626221
    3. 'first' → logprob: -10.376969337463379
    4. ' first' → logprob: -12.001969337463379
    5. '1' → logprob: -13.001969337463379
    6. '   ' → logprob: -14.876969337463379
    7. '  ' → logprob: -16.439468383789062
    8. 'second' → logprob: -16.501968383789062
    9. '(first' → logprob: -16.751968383789062
    10. '[first' → logprob: -16.751968383789062

Token 237: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1799965649843216
    2. ':' → logprob: -1.9299966096878052
    3. ' and' → logprob: -4.429996490478516
    4. '       ' → logprob: -4.929996490478516
    5. '   ' → logprob: -8.554996490478516
    6. 'and' → logprob: -8.804996490478516
    7. ' :
' → logprob: -9.804996490478516
    8. '):
' → logprob: -11.429996490478516
    9. ':

' → logprob: -11.929996490478516
    10. ' :' → logprob: -12.679996490478516

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001595676294527948
    2. ' if' → logprob: -6.501595497131348
    3. '```' → logprob: -9.626595497131348
    4. '   ' → logprob: -11.501595497131348
    5. '    ' → logprob: -11.751595497131348
    6. 'if' → logprob: -13.251595497131348
    7. '           ' → logprob: -13.626595497131348
    8. '     ' → logprob: -13.751595497131348
    9. '      ' → logprob: -13.876595497131348
    10. '        ' → logprob: -14.001595497131348

Token 239: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.060019489377737045
    2. '       ' → logprob: -2.9350194931030273
    3. 'if' (adapté à ' if') → logprob: -5.560019493103027
    4. '   ' → logprob: -6.685019493103027
    5. '    ' → logprob: -11.560019493103027
    6. ' ' → logprob: -11.935019493103027
    7. '```' → logprob: -12.185019493103027
    8. '           ' → logprob: -13.435019493103027
    9. '     ' → logprob: -13.685019493103027
    10. '	if' → logprob: -14.185019493103027

Token 240: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.016041407361626625
    2. 's' → logprob: -4.141041278839111
    3. ' abs' → logprob: -12.89104175567627
    4. '   ' → logprob: -13.14104175567627
    5. '(s' → logprob: -14.01604175567627
    6. 'abs' → logprob: -14.64104175567627
    7. '    ' → logprob: -14.76604175567627
    8. ' ' → logprob: -15.14104175567627
    9. '	s' → logprob: -15.51604175567627
    10. ' ' → logprob: -16.266040802001953

Token 241: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.625
    3. '[first' → logprob: -16.25
    4. 'second' → logprob: -16.5
    5. '[
' → logprob: -17.75
    6. '   ' → logprob: -18.125
    7. '[next' → logprob: -18.75
    8. '	' → logprob: -19.25
    9. '	second' → logprob: -19.375
    10. '```' → logprob: -19.625

Token 242: 'second' (ID: 13901)
  Prédit: 'second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.2529360055923462
    2. '[' → logprob: -1.5029360055923462
    3. ' second' → logprob: -7.252935886383057
    4. '   ' → logprob: -8.377936363220215
    5. '	second' → logprob: -10.752936363220215
    6. ' ' → logprob: -11.252936363220215
    7. '(second' → logprob: -11.252936363220215
    8. 's' → logprob: -12.127936363220215
    9. '_second' → logprob: -12.377936363220215
    10. ' [' → logprob: -12.877936363220215

Token 243: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.1398757123970427e-05
    2. 'Idx' → logprob: -12.125011444091797
    3. 'idx' → logprob: -12.625011444091797
    4. '_index' → logprob: -13.750011444091797
    5. '-' → logprob: -14.000011444091797
    6. '[' → logprob: -15.500011444091797
    7. '_IDX' → logprob: -16.250011444091797
    8. '
' → logprob: -16.500011444091797
    9. 'i' → logprob: -16.750011444091797
    10. '   ' → logprob: -16.750011444091797

Token 244: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25549760460853577
    2. '-' → logprob: -1.5054975748062134
    3. ' ' → logprob: -5.880497455596924
    4. ']' → logprob: -7.630497455596924
    5. '   ' → logprob: -8.505497932434082
    6. ')' → logprob: -10.880497932434082
    7. '  ' → logprob: -11.255497932434082
    8. '[' → logprob: -11.380497932434082
    9. '`' → logprob: -11.755497932434082
    10. '1' → logprob: -12.005497932434082

Token 245: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38693761825561523
    2. '-' → logprob: -1.1369376182556152
    3. ' ' → logprob: -10.386938095092773
    4. 's' → logprob: -11.011938095092773
    5. '   ' → logprob: -11.636938095092773
    6. ' s' → logprob: -12.511938095092773
    7. '```' → logprob: -14.011938095092773
    8. '[' → logprob: -14.136938095092773
    9. '  ' → logprob: -14.261938095092773
    10. '=' → logprob: -14.886938095092773

Token 246: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5759442448616028
    2. 's' → logprob: -0.8259442448616028
    3. '   ' → logprob: -12.950943946838379
    4. '	s' → logprob: -14.325943946838379
    5. '(s' → logprob: -14.325943946838379
    6. '<s' → logprob: -15.200943946838379
    7. ' ' → logprob: -15.700943946838379
    8. '[' → logprob: -16.075944900512695
    9. '1' → logprob: -16.200944900512695
    10. '<|end|>' → logprob: -16.200944900512695

Token 247: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.625
    3. '   ' → logprob: -15.625
    4. ' ' → logprob: -17.5
    5. '	' → logprob: -18.375
    6. 'second' → logprob: -18.5
    7. '[s' → logprob: -19.0
    8. '[
' → logprob: -19.0
    9. '1' → logprob: -19.125
    10. '
' → logprob: -19.25

Token 248: 'second' (ID: 13901)
  Prédit: 'second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.20173130929470062
    2. '[' → logprob: -1.7017313241958618
    3. 's' → logprob: -8.45173168182373
    4. '   ' → logprob: -9.82673168182373
    5. ' second' → logprob: -10.45173168182373
    6. '(second' → logprob: -11.20173168182373
    7. '	second' → logprob: -12.95173168182373
    8. '`' → logprob: -13.82673168182373
    9. 'first' → logprob: -14.20173168182373
    10. '
' → logprob: -14.32673168182373

Token 249: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -9.73446003627032e-05
    2. '1' → logprob: -9.875097274780273
    3. 'Idx' → logprob: -10.125097274780273
    4. 'idx' → logprob: -12.750097274780273
    5. '[' → logprob: -14.125097274780273
    6. '2' → logprob: -14.750097274780273
    7. '_IDX' → logprob: -14.750097274780273
    8. ']' → logprob: -15.250097274780273
    9. '```' → logprob: -15.375097274780273
    10. '[idx' → logprob: -15.500097274780273

Token 250: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003491261973977089
    2. ' -' → logprob: -6.253491401672363
    3. '1' → logprob: -7.128491401672363
    4. '[' → logprob: -7.628491401672363
    5. '```' → logprob: -9.003491401672363
    6. '<|end|>' → logprob: -10.003491401672363
    7. ' ' → logprob: -10.503491401672363
    8. '>' → logprob: -10.753491401672363
    9. '   ' → logprob: -11.628491401672363
    10. ']' → logprob: -11.878491401672363

Token 251: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -14.875012397766113
    4. ']' → logprob: -15.750012397766113
    5. '   ' → logprob: -16.750011444091797
    6. 's' → logprob: -17.750011444091797
    7. ')' → logprob: -18.250011444091797
    8. '+' → logprob: -18.500011444091797
    9. '}' → logprob: -18.500011444091797
    10. '`' → logprob: -18.500011444091797

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2961512513575144e-05
    2. ' ' → logprob: -10.750022888183594
    3. '   ' → logprob: -13.750022888183594
    4. '```' → logprob: -15.875022888183594
    5. '0' → logprob: -16.375022888183594
    6. '  ' → logprob: -17.125022888183594
    7. '<|end|>' → logprob: -17.187522888183594
    8. '    ' → logprob: -17.250022888183594
    9. '2' → logprob: -17.937522888183594
    10. '>' → logprob: -18.062522888183594

Token 253: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1887052059173584
    2. '<' → logprob: -1.8137052059173584
    3. ']' → logprob: -4.8137054443359375
    4. ']<' → logprob: -7.6887054443359375
    5. ')' → logprob: -8.438705444335938
    6. ' ' → logprob: -9.938705444335938
    7. '<|end|>' → logprob: -10.938705444335938
    8. ')<' → logprob: -11.188705444335938
    9. '[' → logprob: -11.688705444335938
    10. '   ' → logprob: -11.813705444335938

Token 254: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2014167606830597
    2. '<' → logprob: -1.7014167308807373
    3. '<int' → logprob: -13.826416969299316
    4. ' ' → logprob: -14.076416969299316
    5. '   ' → logprob: -14.951416969299316
    6. '[' → logprob: -15.451416969299316
    7. ' ' → logprob: -15.701416969299316
    8. '<class' → logprob: -15.701416969299316
    9. ')<' → logprob: -15.951416969299316
    10. '<|end|>' → logprob: -16.076416015625

Token 255: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004621422383934259
    2. ' ' → logprob: -5.379621505737305
    3. '   ' → logprob: -14.254621505737305
    4. '0' → logprob: -14.629621505737305
    5. '<|end|>' → logprob: -16.629621505737305
    6. '```' → logprob: -18.254621505737305
    7. '  ' → logprob: -18.629621505737305
    8. ' ' → logprob: -19.004621505737305
    9. '    ' → logprob: -19.379621505737305
    10. '=' → logprob: -19.754621505737305

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -15.875021934509277
    4. '0' → logprob: -16.12502098083496
    5. '   ' → logprob: -16.87502098083496
    6. '```' → logprob: -18.25002098083496
    7. '=' → logprob: -19.37502098083496
    8. '<|end|>' → logprob: -19.81252098083496
    9. '2' → logprob: -20.06252098083496
    10. '  ' → logprob: -20.25002098083496

Token 257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07526663690805435
    2. ':
' → logprob: -2.7002665996551514
    3. '       ' → logprob: -5.3252668380737305
    4. '           ' → logprob: -7.8252668380737305
    5. '   ' → logprob: -11.20026683807373
    6. '<|end|>' → logprob: -11.95026683807373
    7. '):
' → logprob: -12.07526683807373
    8. '):' → logprob: -12.20026683807373
    9. '               ' → logprob: -12.95026683807373
    10. '=' → logprob: -12.95026683807373

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03870170935988426
    2. '       ' → logprob: -3.2887017726898193
    3. ':' → logprob: -8.038702011108398
    4. ':
' → logprob: -8.413702011108398
    5. '               ' → logprob: -9.788702011108398
    6. '          ' → logprob: -10.913702011108398
    7. '   ' → logprob: -11.788702011108398
    8. ',' → logprob: -12.038702011108398
    9. '		' → logprob: -12.288702011108398
    10. '         ' → logprob: -12.788702011108398

Token 259: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.04323211684823036
    2. 'ok' (adapté à ' ok') → logprob: -3.1682322025299072
    3. '           ' → logprob: -9.543231964111328
    4. '	ok' → logprob: -9.793231964111328
    5. '       ' → logprob: -10.293231964111328
    6. '   ' → logprob: -10.668231964111328
    7. '
' → logprob: -10.668231964111328
    8. ' okay' → logprob: -11.668231964111328
    9. '```' → logprob: -12.418231964111328
    10. '               ' → logprob: -12.793231964111328

Token 260: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16036507487297058
    2. ' =' → logprob: -1.910365104675293
    3. '==' → logprob: -9.285365104675293
    4. '=False' → logprob: -10.535365104675293
    5. ' ==' → logprob: -10.910365104675293
    6. '=True' → logprob: -13.785365104675293
    7. '           ' → logprob: -14.160365104675293
    8. ':' → logprob: -15.410365104675293
    9. '=
' → logprob: -15.410365104675293
    10. ')' → logprob: -15.660365104675293

Token 261: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. '(False' → logprob: -19.00020408630371
    4. 'false' → logprob: -19.62520408630371
    5. 'True' → logprob: -20.00020408630371
    6. '_false' → logprob: -20.00020408630371
    7. '=False' → logprob: -20.12520408630371
    8. '   ' → logprob: -20.12520408630371
    9. '.False' → logprob: -21.37520408630371
    10. 'F' → logprob: -21.87520408630371

Token 262: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13792119920253754
    2. '   ' → logprob: -2.137921094894409
    3. 'if' → logprob: -4.762921333312988
    4. '    
' → logprob: -6.762921333312988
    5. ' if' → logprob: -7.512921333312988
    6. 'result' → logprob: -8.262921333312988
    7. '\n' → logprob: -8.762921333312988
    8. '

' → logprob: -9.387921333312988
    9. '```' → logprob: -9.512921333312988
    10. '  
' → logprob: -10.262921333312988

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22082147002220154
    2. 'if' → logprob: -1.720821499824524
    3. '
' → logprob: -4.220821380615234
    4. ' if' → logprob: -5.720821380615234
    5. 'else' → logprob: -7.470821380615234
    6. 'result' → logprob: -7.970821380615234
    7. '    
' → logprob: -8.470821380615234
    8. '```' → logprob: -9.345821380615234
    9. '+
' → logprob: -11.845821380615234
    10. '+' → logprob: -11.970821380615234

Token 264: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0021876145619899035
    2. 'result' → logprob: -7.002187728881836
    3. ' if' → logprob: -7.502187728881836
    4. 'else' → logprob: -8.127187728881836
    5. 'for' → logprob: -8.627187728881836
    6. 'print' → logprob: -9.377187728881836
    7. '   ' → logprob: -9.377187728881836
    8. '```' → logprob: -9.877187728881836
    9. '
' → logprob: -11.252187728881836
    10. ')' → logprob: -11.877187728881836

Token 265: ' not' (ID: 625)
  Prédit: ' ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.15952078998088837
    2. ' not' → logprob: -2.0345208644866943
    3. 'ok' → logprob: -4.159520626068115
    4. 'not' → logprob: -6.909520626068115
    5. ' ' → logprob: -10.034521102905273
    6. ' okay' → logprob: -11.034521102905273
    7. ' result' → logprob: -11.534521102905273
    8. ' ' → logprob: -12.034521102905273
    9. '(ok' → logprob: -12.659521102905273
    10. '	ok' → logprob: -12.784521102905273

Token 266: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.006716436706483364
    2. 'ok' → logprob: -5.006716251373291
    3. ' okay' → logprob: -14.38171672821045
    4. ' ' → logprob: -15.38171672821045
    5. '	ok' → logprob: -15.75671672821045
    6. ' ' → logprob: -16.381715774536133
    7. ''ok' → logprob: -17.381715774536133
    8. '(ok' → logprob: -17.631715774536133
    9. '_ok' → logprob: -17.881715774536133
    10. ' OK' → logprob: -19.006715774536133

Token 267: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10746441781520844
    2. ':
' → logprob: -2.35746431350708
    3. '       ' → logprob: -5.60746431350708
    4. '   ' → logprob: -5.73246431350708
    5. '=' → logprob: -8.357464790344238
    6. ' =' → logprob: -10.232464790344238
    7. ' :' → logprob: -11.232464790344238
    8. '==' → logprob: -11.607464790344238
    9. 'result' → logprob: -12.607464790344238
    10. ' :
' → logprob: -12.732464790344238

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09525066614151001
    2. '   ' → logprob: -2.5952506065368652
    3. ' result' → logprob: -4.595250606536865
    4. 'result' → logprob: -5.095250606536865
    5. '	result' → logprob: -13.970251083374023
    6. '```' → logprob: -14.720251083374023
    7. '           ' → logprob: -14.970251083374023
    8. '
' → logprob: -15.845251083374023
    9. ' ' → logprob: -16.220251083374023
    10. ',result' → logprob: -16.720251083374023

Token 269: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.01931757479906082
    2. ' result' → logprob: -4.019317626953125
    3. '   ' → logprob: -6.769317626953125
    4. '
' → logprob: -11.269317626953125
    5. '	result' → logprob: -12.894317626953125
    6. ' ' → logprob: -13.894317626953125
    7. '```' → logprob: -14.394317626953125
    8. '    
' → logprob: -14.769317626953125
    9. '       ' → logprob: -14.894317626953125
    10. '  ' → logprob: -15.144317626953125

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014172795228660107
    2. '=' → logprob: -4.2641730308532715
    3. ' +=' → logprob: -11.764172554016113
    4. ' ="' → logprob: -13.889172554016113
    5. ' ' → logprob: -15.389172554016113
    6. '+=' → logprob: -15.514172554016113
    7. ' ='' → logprob: -16.88917350769043
    8. ' .=' → logprob: -17.38917350769043
    9. '```' → logprob: -18.01417350769043
    10. ')' → logprob: -18.26417350769043

Token 271: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023384306579828262
    2. ' "' → logprob: -3.7733843326568604
    3. '"No' → logprob: -8.898384094238281
    4. ''' → logprob: -13.398384094238281
    5. ' NO' → logprob: -15.523384094238281
    6. '"N' → logprob: -15.898384094238281
    7. 'NO' → logprob: -16.14838409423828
    8. ' ' → logprob: -16.39838409423828
    9. '("' → logprob: -17.27338409423828
    10. ' ' → logprob: -17.77338409423828

Token 272: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.0007142199319787323
    2. '"' → logprob: -7.250714302062988
    3. '"No' → logprob: -12.625714302062988
    4. ' NO' → logprob: -14.000714302062988
    5. ''' → logprob: -16.125713348388672
    6. '"N' → logprob: -16.875713348388672
    7. '   ' → logprob: -17.875713348388672
    8. '_NO' → logprob: -17.875713348388672
    9. 'No' → logprob: -18.000713348388672
    10. 'N' → logprob: -18.250713348388672

Token 273: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003473825636319816
    2. '
' → logprob: -8.000347137451172
    3. ' print' → logprob: -12.125347137451172
    4. '\n' → logprob: -12.625347137451172
    5. '```' → logprob: -12.875347137451172
    6. '<|end|>' → logprob: -14.625347137451172
    7. '
' → logprob: -17.000347137451172
    8. '(print' → logprob: -17.125347137451172
    9. '\' → logprob: -17.250347137451172
    10. 'else' → logprob: -17.250347137451172

Token 275: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049615535885095596
    2. '(result' → logprob: -3.0496156215667725
    3. '("("' → logprob: -6.924615383148193
    4. '('' → logprob: -10.299615859985352
    5. '(
' → logprob: -12.049615859985352
    6. '("' → logprob: -13.049615859985352
    7. '("(' → logprob: -14.799615859985352
    8. '()' → logprob: -14.799615859985352
    9. '(`' → logprob: -15.174615859985352
    10. '("")' → logprob: -15.674615859985352

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. '())' → logprob: -11.875020027160645
    3. '()' → logprob: -12.000020027160645
    4. ' )' → logprob: -12.125020027160645
    5. '```' → logprob: -14.375020027160645
    6. '(' → logprob: -15.000020027160645
    7. '")' → logprob: -15.375020027160645
    8. '`)' → logprob: -15.500020027160645
    9. ')
' → logprob: -15.750020027160645
    10. '')' → logprob: -15.875020027160645


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 274
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 125
Tokens correctement prédits (top 10): 241
Précision stricte (1ère position): 41.97%
Précision adaptée (1ère position): 45.62%
Précision (top 10): 87.96%
================================================================================
