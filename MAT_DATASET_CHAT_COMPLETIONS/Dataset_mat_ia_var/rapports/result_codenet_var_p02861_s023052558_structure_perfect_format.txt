================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
ls = [list(map(int, input().split())) for i in range(n)]
a = 0
for j in range(n):
    for k in range(n):
        if j < k:
            a += ((ls[k][0] - ls[j][0]) ** 2 + (ls[k][1] - ls[j][1]) ** 2) ** 0.5
b = a / (n * (n - 1) / 2)
print(b * (n - 1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'ls' (ID: 3973)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1520191729068756
    2. '.' → logprob: -2.0270192623138428
    3. '\[' → logprob: -4.902019023895264
    4. '[]' → logprob: -7.902019023895264
    5. '_' → logprob: -8.152019500732422
    6. '.append' → logprob: -8.402019500732422
    7. '[:]' → logprob: -8.652019500732422
    8. 't' → logprob: -8.777019500732422
    9. '=' → logprob: -9.402019500732422
    10. '[
' → logprob: -9.777019500732422

Token 7: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.23569874465465546
    2. '[]' → logprob: -1.8606986999511719
    3. 'list' → logprob: -3.860698699951172
    4. ' list' → logprob: -3.860698699951172
    5. ' [' → logprob: -4.735698699951172
    6. '[' → logprob: -6.360698699951172
    7. '[input' → logprob: -6.735698699951172
    8. 'input' → logprob: -8.485698699951172
    9. '[list' → logprob: -8.485698699951172
    10. ' input' → logprob: -8.985698699951172

Token 8: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08670524507761002
    2. 'i' → logprob: -3.086705207824707
    3. '0' → logprob: -3.836705207824707
    4. ')' → logprob: -4.836705207824707
    5. ']' → logprob: -5.461705207824707
    6. ' int' → logprob: -6.461705207824707
    7. 'input' → logprob: -7.211705207824707
    8. ']int' → logprob: -7.586705207824707
    9. ' i' → logprob: -8.211705207824707
    10. '(int' → logprob: -9.086705207824707

Token 9: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0034759361296892166
    2. '(' → logprob: -5.878476142883301
    3. '(input' → logprob: -7.753476142883301
    4. '(range' → logprob: -8.6284761428833
    5. '(int' → logprob: -10.1284761428833
    6. '()' → logprob: -11.2534761428833
    7. '(
' → logprob: -13.0034761428833
    8. ' map' → logprob: -13.5034761428833
    9. '(eval' → logprob: -13.5034761428833
    10. '()]' → logprob: -13.6284761428833

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003693013568408787
    2. '(str' → logprob: -9.00036907196045
    3. '(' → logprob: -9.37536907196045
    4. 'int' → logprob: -9.37536907196045
    5. '<int' → logprob: -11.00036907196045
    6. '```' → logprob: -11.25036907196045
    7. '(input' → logprob: -11.37536907196045
    8. '=int' → logprob: -11.50036907196045
    9. ',int' → logprob: -11.75036907196045
    10. '[int' → logprob: -12.25036907196045

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001452494296245277
    2. '(' → logprob: -7.376452445983887
    3. 'input' → logprob: -8.001452445983887
    4. ',input' → logprob: -8.501452445983887
    5. '))' → logprob: -8.876452445983887
    6. ')' → logprob: -9.751452445983887
    7. '=input' → logprob: -10.751452445983887
    8. '(
' → logprob: -11.376452445983887
    9. '`' → logprob: -12.001452445983887
    10. '[input' → logprob: -12.126452445983887

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.034167371690273285
    2. ' input' → logprob: -3.4091672897338867
    3. '(input' → logprob: -8.159167289733887
    4. ')' → logprob: -8.534167289733887
    5. ',input' → logprob: -10.659167289733887
    6. '))' → logprob: -12.284167289733887
    7. '=input' → logprob: -12.409167289733887
    8. '<input' → logprob: -13.659167289733887
    9. '	input' → logprob: -13.909167289733887
    10. '[input' → logprob: -14.034167289733887

Token 13: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.995397365652025e-05
    2. '()))' → logprob: -9.750089645385742
    3. '()' → logprob: -10.625089645385742
    4. '())' → logprob: -12.625089645385742
    5. '))' → logprob: -13.375089645385742
    6. '.split' → logprob: -14.500089645385742
    7. ' ().' → logprob: -14.625089645385742
    8. '(' → logprob: -14.750089645385742
    9. '()
' → logprob: -15.000089645385742
    10. ')' → logprob: -15.375089645385742

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011999934213235974
    2. 'strip' → logprob: -6.751200199127197
    3. 'rstrip' → logprob: -10.876199722290039
    4. '(split' → logprob: -12.001199722290039
    5. ' split' → logprob: -12.376199722290039
    6. ')' → logprob: -15.126199722290039
    7. 'spl' → logprob: -16.12619972229004
    8. 's' → logprob: -16.12619972229004
    9. 'replace' → logprob: -17.50119972229004
    10. 'read' → logprob: -17.75119972229004

Token 15: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.23211385309696198
    2. '))' → logprob: -1.6071138381958008
    3. '())' → logprob: -5.482113838195801
    4. '(' → logprob: -6.857113838195801
    5. '()' → logprob: -7.232113838195801
    6. ')' → logprob: -7.482113838195801
    7. '('' → logprob: -9.2321138381958
    8. ''))' → logprob: -10.3571138381958
    9. '())))' → logprob: -11.1071138381958
    10. ')))' → logprob: -11.4821138381958

Token 16: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0103797912597656
    2. ')]' → logprob: -1.0103797912597656
    3. ']' → logprob: -1.5103797912597656
    4. '()]' → logprob: -3.7603797912597656
    5. 'for' → logprob: -4.135379791259766
    6. '(' → logprob: -5.385379791259766
    7. '())' → logprob: -6.510379791259766
    8. '()' → logprob: -6.510379791259766
    9. ' for' → logprob: -6.635379791259766
    10. '])' → logprob: -7.135379791259766

Token 17: ' i' (ID: 575)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16249778866767883
    2. ' range' → logprob: -2.2874977588653564
    3. '_' → logprob: -3.5374977588653564
    4. '(range' → logprob: -4.6624979972839355
    5. '()' → logprob: -5.0374979972839355
    6. 'range' → logprob: -5.9124979972839355
    7. ' ' → logprob: -8.162497520446777
    8. ' i' → logprob: -9.162497520446777
    9. '_range' → logprob: -9.412497520446777
    10. ' _' → logprob: -9.912497520446777

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04952581226825714
    2. 'in' → logprob: -3.049525737762451
    3. '(' → logprob: -8.04952621459961
    4. ' range' → logprob: -8.29952621459961
    5. 'range' → logprob: -9.04952621459961
    6. '(range' → logprob: -9.67452621459961
    7. ')' → logprob: -10.04952621459961
    8. '	in' → logprob: -10.54952621459961
    9. '<|end|>' → logprob: -10.54952621459961
    10. ' ' → logprob: -10.67452621459961

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10027341544628143
    2. 'range' → logprob: -2.350273370742798
    3. '	range' → logprob: -9.850273132324219
    4. '(range' → logprob: -11.475273132324219
    5. ' ' → logprob: -12.975273132324219
    6. ' xrange' → logprob: -14.100273132324219
    7. ')' → logprob: -15.725273132324219
    8. '_range' → logprob: -15.850273132324219
    9. ' rango' → logprob: -16.47527313232422
    10. '  ' → logprob: -16.72527313232422

Token 20: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.038043100386857986
    2. '(' → logprob: -3.2880430221557617
    3. ' (' → logprob: -14.663043022155762
    4. '(
' → logprob: -14.913043022155762
    5. ' n' → logprob: -15.038043022155762
    6. 'n' → logprob: -15.663043022155762
    7. '(len' → logprob: -16.038043975830078
    8. ')' → logprob: -16.038043975830078
    9. '(range' → logprob: -16.413043975830078
    10. '(N' → logprob: -17.163043975830078

Token 21: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005317062605172396
    2. ')' → logprob: -7.6255316734313965
    3. ']' → logprob: -10.125532150268555
    4. ')])' → logprob: -13.625532150268555
    5. ' )' → logprob: -14.250532150268555
    6. '))' → logprob: -14.375532150268555
    7. '')]' → logprob: -14.750532150268555
    8. '])]' → logprob: -15.125532150268555
    9. '])' → logprob: -16.125532150268555
    10. ')]
' → logprob: -16.375532150268555

Token 22: 'a' (ID: 64)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5277812480926514
    2. 'm' → logprob: -2.5277812480926514
    3. 'for' → logprob: -2.5277812480926514
    4. 'max' → logprob: -3.1527812480926514
    5. 'sum' → logprob: -3.2777812480926514
    6. 'result' → logprob: -3.5277812480926514
    7. 'r' → logprob: -3.7777812480926514
    8. 'c' → logprob: -4.4027814865112305
    9. 'count' → logprob: -4.4027814865112305
    10. 'res' → logprob: -4.6527814865112305

Token 23: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.044990718364715576
    2. '.' → logprob: -4.419990539550781
    3. 's' → logprob: -4.794990539550781
    4. 'r' → logprob: -5.169990539550781
    5. '[p' → logprob: -6.044990539550781
    6. '[i' → logprob: -6.419990539550781
    7. '=' → logprob: -6.419990539550781
    8. 'p' → logprob: -6.544990539550781
    9. 'a' → logprob: -6.544990539550781
    10. '[n' → logprob: -7.044990539550781

Token 24: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5298226475715637
    2. '[' → logprob: -1.279822587966919
    3. ' []' → logprob: -3.154822587966919
    4. '0' → logprob: -3.404822587966919
    5. 'ls' → logprob: -3.779822587966919
    6. ' [' → logprob: -4.154822826385498
    7. 'sum' → logprob: -5.154822826385498
    8. 'sorted' → logprob: -5.779822826385498
    9. '[len' → logprob: -5.779822826385498
    10. '[max' → logprob: -6.404822826385498

Token 25: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8203928470611572
    2. '[]' → logprob: -0.8203928470611572
    3. 'ls' → logprob: -2.8203928470611572
    4. '0' → logprob: -4.195392608642578
    5. 'sum' → logprob: -4.320392608642578
    6. '[max' → logprob: -4.570392608642578
    7. '[len' → logprob: -4.945392608642578
    8. 'sorted' → logprob: -5.195392608642578
    9. 'max' → logprob: -5.570392608642578
    10. 'len' → logprob: -6.445392608642578

Token 26: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.322995126247406
    2. '\n' → logprob: -1.5729951858520508
    3. '
' → logprob: -3.822995185852051
    4. ' for' → logprob: -3.947995185852051
    5. '\' → logprob: -5.072995185852051
    6. '<|end|>' → logprob: -5.572995185852051
    7. ' ' → logprob: -5.572995185852051
    8. '+' → logprob: -5.572995185852051
    9. '' → logprob: -6.322995185852051
    10. 'n' → logprob: -6.447995185852051

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019065799191594124
    2. '\n' → logprob: -4.144065856933594
    3. '
' → logprob: -7.019065856933594
    4. 'f' → logprob: -7.144065856933594
    5. '\' → logprob: -7.644065856933594
    6. ' for' → logprob: -8.019065856933594
    7. '' → logprob: -8.644065856933594
    8. '```' → logprob: -9.144065856933594
    9. 'd' → logprob: -10.019065856933594
    10. 'r' → logprob: -10.894065856933594

Token 28: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1885407269001007
    2. ' i' → logprob: -1.8135406970977783
    3. '  ' → logprob: -5.438540935516357
    4. '_' → logprob: -6.188540935516357
    5. ' _' → logprob: -6.563540935516357
    6. ' ‌' → logprob: -7.313540935516357
    7. 'i' → logprob: -8.9385404586792
    8. ' ls' → logprob: -10.9385404586792
    9. ' ﻿' → logprob: -11.1885404586792
    10. '  ' → logprob: -11.3135404586792

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0387469045817852
    2. 'in' → logprob: -3.2887468338012695
    3. ' ' → logprob: -7.6637468338012695
    4. 'n' → logprob: -8.91374683380127
    5. '+' → logprob: -10.78874683380127
    6. ' n' → logprob: -11.03874683380127
    7. ')' → logprob: -11.28874683380127
    8. '  ' → logprob: -11.53874683380127
    9. 'range' → logprob: -11.66374683380127
    10. '	in' → logprob: -12.03874683380127

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06377357244491577
    2. 'range' → logprob: -2.8137736320495605
    3. ' ls' → logprob: -6.4387736320495605
    4. 'ls' → logprob: -8.813773155212402
    5. ' ' → logprob: -10.563773155212402
    6. ' ra' → logprob: -11.563773155212402
    7. '	range' → logprob: -12.813773155212402
    8. ' r' → logprob: -13.063773155212402
    9. ')' → logprob: -13.313773155212402
    10. ' ' → logprob: -13.438773155212402

Token 31: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20149266719818115
    2. '(' → logprob: -1.7014926671981812
    3. '(len' → logprob: -9.826492309570312
    4. '(a' → logprob: -11.076492309570312
    5. ' (' → logprob: -12.201492309570312
    6. '(s' → logprob: -13.076492309570312
    7. '(
' → logprob: -14.201492309570312
    8. ' n' → logprob: -14.201492309570312
    9. '()' → logprob: -15.326492309570312
    10. '(range' → logprob: -15.326492309570312

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013152358587831259
    2. ')' → logprob: -6.876315116882324
    3. ' ):' → logprob: -8.751315116882324
    4. '):
' → logprob: -9.626315116882324
    5. ':' → logprob: -10.501315116882324
    6. '+' → logprob: -10.751315116882324
    7. '-' → logprob: -12.126315116882324
    8. ']:' → logprob: -14.251315116882324
    9. ' ' → logprob: -15.001315116882324
    10. ' )' → logprob: -15.126315116882324

Token 33: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9904171228408813
    2. '   ' → logprob: -1.2404171228408813
    3. ' ' → logprob: -1.3654171228408813
    4. '[' → logprob: -3.740417003631592
    5. '     
' → logprob: -4.240417003631592
    6. '```' → logprob: -4.240417003631592
    7. '    
' → logprob: -4.490417003631592
    8. ' 
' → logprob: -5.615417003631592
    9. '`' → logprob: -5.865417003631592
    10. '<|end|>' → logprob: -5.990417003631592

Token 34: ' for' (ID: 395)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3406597375869751
    2. ' for' → logprob: -1.965659737586975
    3. 'a' → logprob: -2.2156596183776855
    4. 'for' (adapté à ' for') → logprob: -4.0906596183776855
    5. ' ' → logprob: -4.9656596183776855
    6. ' if' → logprob: -4.9656596183776855
    7. '   ' → logprob: -5.0906596183776855
    8. '    ' → logprob: -6.2156596183776855
    9. 'if' → logprob: -7.4656596183776855
    10. '  ' → logprob: -10.965660095214844

Token 35: ' k' (ID: 372)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.41107216477394104
    2. ' n' → logprob: -1.2860721349716187
    3. 'range' → logprob: -3.911072254180908
    4. ' ' → logprob: -4.036072254180908
    5. 'n' → logprob: -4.411072254180908
    6. ' i' → logprob: -5.286072254180908
    7. ')' → logprob: -6.036072254180908
    8. ' ls' → logprob: -6.411072254180908
    9. 'i' → logprob: -7.911072254180908
    10. ' j' → logprob: -8.28607177734375

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007850776426494122
    2. 'in' → logprob: -4.882850646972656
    3. ' ' → logprob: -8.507850646972656
    4. '    ' → logprob: -11.257850646972656
    5. '(' → logprob: -12.007850646972656
    6. ' k' → logprob: -12.132850646972656
    7. '   ' → logprob: -12.632850646972656
    8. '	in' → logprob: -12.757850646972656
    9. '+' → logprob: -13.007850646972656
    10. 'k' → logprob: -13.382850646972656

Token 37: ' range' (ID: 3352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.35521626472473145
    2. ' range' → logprob: -1.6052162647247314
    3. 'n' → logprob: -2.9802162647247314
    4. 'range' → logprob: -3.1052162647247314
    5. '(n' → logprob: -6.230216026306152
    6. ' ' → logprob: -8.730216026306152
    7. '(range' → logprob: -9.230216026306152
    8. '(' → logprob: -9.355216026306152
    9. ' (' → logprob: -9.355216026306152
    10. ')' → logprob: -9.605216026306152

Token 38: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.048924341797828674
    2. '(' → logprob: -3.048924446105957
    3. ' (' → logprob: -8.173924446105957
    4. '(s' → logprob: -10.423924446105957
    5. '(k' → logprob: -11.673924446105957
    6. '(j' → logprob: -12.798924446105957
    7. ' n' → logprob: -12.923924446105957
    8. '(a' → logprob: -13.048924446105957
    9. '(len' → logprob: -13.048924446105957
    10. ')' → logprob: -13.048924446105957

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006507210782729089
    2. ')' → logprob: -7.875650882720947
    3. '-' → logprob: -8.750650405883789
    4. '):
' → logprob: -9.875650405883789
    5. ':' → logprob: -10.500650405883789
    6. '+' → logprob: -11.000650405883789
    7. ' ):' → logprob: -11.750650405883789
    8. '   ' → logprob: -13.000650405883789
    9. ']:' → logprob: -13.875650405883789
    10. '-k' → logprob: -13.875650405883789

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35610878467559814
    2. '    ' → logprob: -1.9811087846755981
    3. ' ' → logprob: -2.7311086654663086
    4. '     
' → logprob: -3.4811086654663086
    5. '[' → logprob: -4.231108665466309
    6. '   ' → logprob: -5.106108665466309
    7. 'if' → logprob: -5.106108665466309
    8. '```' → logprob: -5.231108665466309
    9. ' 
' → logprob: -5.481108665466309
    10. '        ' → logprob: -5.606108665466309

Token 41: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7906376719474792
    2. ' if' → logprob: -1.290637731552124
    3. 'a' → logprob: -1.665637731552124
    4. ' a' → logprob: -3.165637731552124
    5. '       ' → logprob: -4.290637493133545
    6. '           ' → logprob: -4.290637493133545
    7. ' ' → logprob: -5.540637493133545
    8. '    ' → logprob: -5.915637493133545
    9. '   ' → logprob: -6.290637493133545
    10. ' ls' → logprob: -6.665637493133545

Token 42: ' j' (ID: 441)
  Prédit: ' ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ls' → logprob: -0.007387617137283087
    2. 'ls' → logprob: -5.132387638092041
    3. ' a' → logprob: -7.507387638092041
    4. ' j' → logprob: -8.757387161254883
    5. ' ' → logprob: -8.757387161254883
    6. '(ls' → logprob: -8.882387161254883
    7. 'a' → logprob: -9.132387161254883
    8. ' k' → logprob: -9.132387161254883
    9. ' n' → logprob: -9.757387161254883
    10. ' (' → logprob: -9.882387161254883

Token 43: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16874182224273682
    2. '>' → logprob: -3.2937417030334473
    3. ' !=' → logprob: -3.2937417030334473
    4. ' ==' → logprob: -3.2937417030334473
    5. ' <' → logprob: -3.9187417030334473
    6. '+' → logprob: -4.418741703033447
    7. ' ' → logprob: -5.918741703033447
    8. ' <=' → logprob: -6.043741703033447
    9. '==' → logprob: -6.168741703033447
    10. '!=' → logprob: -6.418741703033447

Token 44: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.23558299243450165
    2. ' k' → logprob: -1.610582947731018
    3. ' n' → logprob: -5.2355828285217285
    4. 'n' → logprob: -5.4855828285217285
    5. '=' → logprob: -7.9855828285217285
    6. ' ' → logprob: -8.860583305358887
    7. '=k' → logprob: -9.360583305358887
    8. '=n' → logprob: -11.235583305358887
    9. '	k' → logprob: -11.610583305358887
    10. 'a' → logprob: -11.735583305358887

Token 45: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4388274550437927
    2. ':' → logprob: -1.0638275146484375
    3. 'and' → logprob: -4.9388275146484375
    4. '           ' → logprob: -6.1888275146484375
    5. ':
' → logprob: -8.063827514648438
    6. ' :' → logprob: -8.688827514648438
    7. '            ' → logprob: -9.688827514648438
    8. '       ' → logprob: -9.813827514648438
    9. '        ' → logprob: -10.188827514648438
    10. ' ' → logprob: -10.438827514648438

Token 46: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.34426596760749817
    2. '           ' → logprob: -1.7192659378051758
    3. ' ' → logprob: -2.969265937805176
    4. ':' → logprob: -3.844265937805176
    5. '               ' → logprob: -3.844265937805176
    6. '            ' → logprob: -4.844265937805176
    7. 'and' → logprob: -6.344265937805176
    8. ' :' → logprob: -6.594265937805176
    9. ':
' → logprob: -7.094265937805176
    10. '             ' → logprob: -7.719265937805176

Token 47: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5648884773254395
    2. ' a' → logprob: -0.9398884773254395
    3. 'if' → logprob: -4.6898884773254395
    4. 'ls' → logprob: -4.6898884773254395
    5. ' ls' → logprob: -4.6898884773254395
    6. ' if' → logprob: -5.3148884773254395
    7. ' ' → logprob: -5.4398884773254395
    8. '           ' → logprob: -6.1898884773254395
    9. '               ' → logprob: -7.8148884773254395
    10. '            ' → logprob: -8.564888000488281

Token 48: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3596533536911011
    2. '+=' → logprob: -1.484653353691101
    3. '+' → logprob: -2.6096534729003906
    4. ' +' → logprob: -6.984653472900391
    5. '=' → logprob: -7.109653472900391
    6. ' =' → logprob: -9.35965347290039
    7. ' ' → logprob: -9.98465347290039
    8. '[' → logprob: -10.60965347290039
    9. '+=(' → logprob: -11.35965347290039
    10. '+='' → logprob: -11.98465347290039

Token 49: ' ((' (ID: 3536)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.009378364309668541
    2. ' ls' → logprob: -4.884378433227539
    3. 'abs' → logprob: -7.384378433227539
    4. '1' → logprob: -7.384378433227539
    5. 'max' → logprob: -8.134378433227539
    6. '(ls' → logprob: -10.009378433227539
    7. 'int' → logprob: -10.259378433227539
    8. ' max' → logprob: -10.509378433227539
    9. '(' → logprob: -10.634378433227539
    10. 'min' → logprob: -11.134378433227539

Token 50: 'ls' (ID: 3973)
  Prédit: 'ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.024055570363998413
    2. ' ls' → logprob: -3.8990554809570312
    3. 'abs' → logprob: -5.899055480957031
    4. '1' → logprob: -8.899055480957031
    5. '(' → logprob: -9.399055480957031
    6. ' abs' → logprob: -9.399055480957031
    7. '(ls' → logprob: -9.524055480957031
    8. 'j' → logprob: -9.899055480957031
    9. 'n' → logprob: -10.149055480957031
    10. ')' → logprob: -10.274055480957031

Token 51: '[k' (ID: 14298)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.007714278530329466
    2. '[k' → logprob: -4.88271427154541
    3. ')[' → logprob: -10.13271427154541
    4. '][' → logprob: -10.88271427154541
    5. '[i' → logprob: -11.25771427154541
    6. '[n' → logprob: -11.75771427154541
    7. ' [' → logprob: -11.88271427154541
    8. '[' → logprob: -12.00771427154541
    9. '[a' → logprob: -12.63271427154541
    10. ')' → logprob: -13.50771427154541

Token 52: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3712262511253357
    2. '[j' → logprob: -1.2462263107299805
    3. '[' → logprob: -4.1212263107299805
    4. '[i' → logprob: -5.9962263107299805
    5. '[k' → logprob: -6.4962263107299805
    6. '[a' → logprob: -7.3712263107299805
    7. ' ][' → logprob: -8.12122631072998
    8. ']' → logprob: -8.37122631072998
    9. '-' → logprob: -8.62122631072998
    10. '[l' → logprob: -8.74622631072998

Token 53: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004077451303601265
    2. 'k' → logprob: -5.879077434539795
    3. '0' → logprob: -7.254077434539795
    4. 'i' → logprob: -8.504077911376953
    5. ' j' → logprob: -8.754077911376953
    6. ']' → logprob: -9.629077911376953
    7. '1' → logprob: -10.629077911376953
    8. '][' → logprob: -10.629077911376953
    9. ')' → logprob: -10.754077911376953
    10. 'l' → logprob: -11.629077911376953

Token 54: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09110710769891739
    2. '-' → logprob: -3.466107130050659
    3. ']-' → logprob: -3.466107130050659
    4. ' -' → logprob: -3.841107130050659
    5. ' ]' → logprob: -5.96610689163208
    6. '[' → logprob: -9.216107368469238
    7. '][' → logprob: -9.216107368469238
    8. '])' → logprob: -9.341107368469238
    9. ']+' → logprob: -9.841107368469238
    10. ' ' → logprob: -9.841107368469238

Token 55: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31510278582572937
    2. '-' → logprob: -1.3151028156280518
    3. '+' → logprob: -7.190102577209473
    4. ')' → logprob: -7.940102577209473
    5. ' +' → logprob: -8.315102577209473
    6. '*' → logprob: -8.815102577209473
    7. ' )' → logprob: -9.440102577209473
    8. ' ' → logprob: -9.690102577209473
    9. '**' → logprob: -10.315102577209473
    10. ' -
' → logprob: -10.315102577209473

Token 56: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.03828154876828194
    2. ' ls' → logprob: -3.2882814407348633
    3. 'lsx' → logprob: -9.538281440734863
    4. '_ls' → logprob: -10.038281440734863
    5. ')' → logprob: -10.538281440734863
    6. '(ls' → logprob: -10.788281440734863
    7. 'lsl' → logprob: -11.038281440734863
    8. 'lsi' → logprob: -11.163281440734863
    9. ' ' → logprob: -11.538281440734863
    10. '<|end|>' → logprob: -12.788281440734863

Token 57: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005811501177959144
    2. '][' → logprob: -7.87558126449585
    3. '[k' → logprob: -9.125580787658691
    4. '[' → logprob: -9.875580787658691
    5. ')[' → logprob: -10.750580787658691
    6. '[n' → logprob: -12.625580787658691
    7. '[s' → logprob: -13.125580787658691
    8. '[i' → logprob: -13.250580787658691
    9. ' [' → logprob: -13.375580787658691
    10. '[l' → logprob: -13.375580787658691

Token 58: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005264613428153098
    2. '[' → logprob: -8.000526428222656
    3. ']' → logprob: -9.000526428222656
    4. ' ][' → logprob: -10.500526428222656
    5. ''][' → logprob: -11.125526428222656
    6. '"][' → logprob: -11.375526428222656
    7. '])' → logprob: -13.188026428222656
    8. '1' → logprob: -13.625526428222656
    9. '```' → logprob: -14.188026428222656
    10. '>[' → logprob: -14.188026428222656

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019556330516934395
    2. '1' → logprob: -6.251955509185791
    3. ' ' → logprob: -10.75195598602295
    4. '])' → logprob: -13.75195598602295
    5. '   ' → logprob: -14.43945598602295
    6. ']' → logprob: -14.68945598602295
    7. 'k' → logprob: -14.75195598602295
    8. '```' → logprob: -15.25195598602295
    9. ']])' → logprob: -15.37695598602295
    10. ']]' → logprob: -15.56445598602295

Token 60: '])' (ID: 4636)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.5797779560089111
    2. ')' → logprob: -0.8297779560089111
    3. ' )' → logprob: -5.579777717590332
    4. '       ' → logprob: -11.329777717590332
    5. ')*' → logprob: -11.829777717590332
    6. '   ' → logprob: -11.954777717590332
    7. '))' → logprob: -11.954777717590332
    8. ')*(' → logprob: -12.204777717590332
    9. ' ' → logprob: -12.954777717590332
    10. '           ' → logprob: -13.079777717590332

Token 61: ' **' (ID: 6240)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.4306884706020355
    2. ')' → logprob: -1.305688500404358
    3. '**' → logprob: -2.6806883811950684
    4. ' )' → logprob: -5.180688381195068
    5. ' **' → logprob: -5.555688381195068
    6. '2' → logprob: -7.430688381195068
    7. '*' → logprob: -8.555688858032227
    8. '**)' → logprob: -9.930688858032227
    9. ' *' → logprob: -10.305688858032227
    10. ' +' → logprob: -10.680688858032227

Token 62: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015105740167200565
    2. ' ' → logprob: -6.5015106201171875
    3. '3' → logprob: -12.626510620117188
    4. '۲' → logprob: -13.814010620117188
    5. '1' → logprob: -14.001510620117188
    6. '٢' → logprob: -14.814010620117188
    7. '(' → logprob: -15.126510620117188
    8. ')' → logprob: -15.189010620117188
    9. '²' → logprob: -15.314010620117188
    10. '```' → logprob: -15.376510620117188

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026407750556245446
    2. ' ' → logprob: -8.250264167785645
    3. '3' → logprob: -14.250264167785645
    4. ')' → logprob: -14.250264167785645
    5. '1' → logprob: -14.500264167785645
    6. '0' → logprob: -15.875264167785645
    7. '۲' → logprob: -16.000263214111328
    8. '(' → logprob: -16.062763214111328
    9. '```' → logprob: -16.500263214111328
    10. '-' → logprob: -16.625263214111328

Token 64: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47428402304649353
    2. '+' → logprob: -0.9742840528488159
    3. ' +
' → logprob: -9.474284172058105
    4. ')' → logprob: -9.599284172058105
    5. '+
' → logprob: -10.849284172058105
    6. '+(' → logprob: -11.724284172058105
    7. ')+' → logprob: -11.974284172058105
    8. '<|end|>' → logprob: -11.974284172058105
    9. ')+(' → logprob: -11.974284172058105
    10. ' )' → logprob: -12.224284172058105

Token 65: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.010692169889807701
    2. '(ls' → logprob: -4.760692119598389
    3. '(' → logprob: -7.385692119598389
    4. '<|end|>' → logprob: -7.510692119598389
    5. ' ' → logprob: -8.135692596435547
    6. '(s' → logprob: -8.385692596435547
    7. '(l' → logprob: -8.635692596435547
    8. ' ((' → logprob: -8.885692596435547
    9. '(n' → logprob: -11.010692596435547
    10. ')' → logprob: -11.385692596435547

Token 66: 'ls' (ID: 3973)
  Prédit: 'ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.03409167379140854
    2. ' ls' → logprob: -3.4090917110443115
    3. '(ls' → logprob: -7.784091472625732
    4. '_ls' → logprob: -10.78409194946289
    5. 'lsx' → logprob: -13.03409194946289
    6. ' ' → logprob: -13.40909194946289
    7. ' (' → logprob: -13.65909194946289
    8. '(' → logprob: -13.78409194946289
    9. 'lsl' → logprob: -14.03409194946289
    10. '   ' → logprob: -14.65909194946289

Token 67: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -8.061054359131958e-06
    2. '[j' → logprob: -12.250007629394531
    3. '[' → logprob: -13.375007629394531
    4. ' [' → logprob: -14.125007629394531
    5. '][' → logprob: -14.875007629394531
    6. ' ' → logprob: -15.625007629394531
    7. 'k' → logprob: -16.37500762939453
    8. '[
' → logprob: -16.50000762939453
    9. '<|end|>' → logprob: -17.00000762939453
    10. '[key' → logprob: -17.25000762939453

Token 68: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.659005157416686e-05
    2. '[' → logprob: -10.375066757202148
    3. ']' → logprob: -11.125066757202148
    4. ' ][' → logprob: -11.625066757202148
    5. ')[' → logprob: -12.625066757202148
    6. '"][' → logprob: -12.750066757202148
    7. ''][' → logprob: -13.125066757202148
    8. '>[' → logprob: -13.250066757202148
    9. '   ' → logprob: -14.875066757202148
    10. ']][' → logprob: -15.125066757202148

Token 69: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22546620666980743
    2. '1' → logprob: -1.600466251373291
    3. ' ' → logprob: -10.350465774536133
    4. '[' → logprob: -10.975465774536133
    5. '```' → logprob: -14.162965774536133
    6. '][' → logprob: -14.225465774536133
    7. '
' → logprob: -14.287965774536133
    8. '   ' → logprob: -15.100465774536133
    9. '-' → logprob: -15.350465774536133
    10. '
' → logprob: -15.537965774536133

Token 70: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12490513175725937
    2. ']' → logprob: -2.4999051094055176
    3. ')' → logprob: -3.9999051094055176
    4. '<|end|>' → logprob: -4.749905109405518
    5. '-' → logprob: -4.874905109405518
    6. ' ' → logprob: -8.249905586242676
    7. ']-' → logprob: -8.499905586242676
    8. ' ]' → logprob: -9.499905586242676
    9. '<|end|>' → logprob: -9.749905586242676
    10. '[' → logprob: -10.749905586242676

Token 71: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0006588232354260981
    2. '-' → logprob: -7.625658988952637
    3. '<|end|>' → logprob: -9.125658988952637
    4. ')' → logprob: -10.125658988952637
    5. ' ' → logprob: -10.875658988952637
    6. '<|end|>' → logprob: -13.375658988952637
    7. ' -
' → logprob: -15.375658988952637
    8. ' )' → logprob: -15.500658988952637
    9. ' –' → logprob: -15.625658988952637
    10. ' ' → logprob: -15.750658988952637

Token 72: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.3490360677242279
    2. ' ls' → logprob: -1.2240360975265503
    3. '_ls' → logprob: -7.84903621673584
    4. '<|end|>' → logprob: -8.97403621673584
    5. '(ls' → logprob: -9.97403621673584
    6. 'lsx' → logprob: -11.47403621673584
    7. ' ' → logprob: -12.59903621673584
    8. 'lst' → logprob: -12.84903621673584
    9. 's' → logprob: -12.97403621673584
    10. 'LS' → logprob: -13.47403621673584

Token 73: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005349974613636732
    2. '][' → logprob: -5.255350112915039
    3. '[k' → logprob: -9.505350112915039
    4. '[' → logprob: -10.630350112915039
    5. '[js' → logprob: -12.255350112915039
    6. '[][' → logprob: -13.255350112915039
    7. 's' → logprob: -13.505350112915039
    8. ''][' → logprob: -13.630350112915039
    9. ']' → logprob: -13.755350112915039
    10. '[user' → logprob: -14.005350112915039

Token 74: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.505351095460355e-05
    2. '[' → logprob: -10.750075340270996
    3. '"][' → logprob: -10.750075340270996
    4. ' ][' → logprob: -11.250075340270996
    5. ']' → logprob: -11.875075340270996
    6. ''][' → logprob: -12.125075340270996
    7. '()][' → logprob: -13.125075340270996
    8. ')][' → logprob: -13.500075340270996
    9. ']][' → logprob: -14.375075340270996
    10. ')[' → logprob: -14.625075340270996

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.75003719329834
    3. '])' → logprob: -12.37503719329834
    4. '0' → logprob: -12.87503719329834
    5. '```' → logprob: -12.87503719329834
    6. ')' → logprob: -13.00003719329834
    7. ']' → logprob: -14.12503719329834
    8. '   ' → logprob: -14.43753719329834
    9. '<|end|>' → logprob: -15.18753719329834
    10. '[' → logprob: -15.43753719329834

Token 76: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013235644437372684
    2. '])' → logprob: -4.638235569000244
    3. ')**' → logprob: -6.388235569000244
    4. '）' → logprob: -6.888235569000244
    5. '`)' → logprob: -8.513236045837402
    6. '2' → logprob: -8.513236045837402
    7. '**' → logprob: -9.513236045837402
    8. '')' → logprob: -9.763236045837402
    9. ']' → logprob: -9.888236045837402
    10. '))' → logprob: -10.138236045837402

Token 77: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.19183267652988434
    2. ')' → logprob: -2.5668327808380127
    3. ' **' → logprob: -3.0668327808380127
    4. '2' → logprob: -3.4418327808380127
    5. ')**' → logprob: -4.191832542419434
    6. '0' → logprob: -6.691832542419434
    7. ' ' → logprob: -7.066832542419434
    8. ' **)' → logprob: -7.191832542419434
    9. ' )' → logprob: -7.441832542419434
    10. '**)' → logprob: -7.941832542419434

Token 78: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009357591043226421
    2. ' ' → logprob: -7.0009355545043945
    3. '1' → logprob: -11.875935554504395
    4. ')' → logprob: -12.375935554504395
    5. '**' → logprob: -12.625935554504395
    6. '²' → logprob: -13.125935554504395
    7. '(' → logprob: -13.500935554504395
    8. '<|end|>' → logprob: -13.813435554504395
    9. '*' → logprob: -14.250935554504395
    10. '```' → logprob: -14.313435554504395

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011284107313258573
    2. '1' → logprob: -9.625112533569336
    3. ' ' → logprob: -10.000112533569336
    4. '0' → logprob: -15.375112533569336
    5. ')' → logprob: -15.500112533569336
    6. '```' → logprob: -15.500112533569336
    7. '{' → logprob: -16.000112533569336
    8. '(' → logprob: -16.000112533569336
    9. '<|end|>' → logprob: -16.375112533569336
    10. '   ' → logprob: -17.125112533569336

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5803789496421814
    2. ')**' → logprob: -0.8303789496421814
    3. ' )' → logprob: -5.455379009246826
    4. '**' → logprob: -8.955378532409668
    5. '0' → logprob: -11.705378532409668
    6. ' ' → logprob: -12.330378532409668
    7. '**)' → logprob: -12.830378532409668
    8. '))' → logprob: -12.830378532409668
    9. '   ' → logprob: -13.330378532409668
    10. ' ' → logprob: -13.580378532409668

Token 81: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.013735014945268631
    2. ' **' → logprob: -4.388734817504883
    3. ')' → logprob: -7.388734817504883
    4. ')**' → logprob: -7.888734817504883
    5. '0' → logprob: -8.763734817504883
    6. '**
' → logprob: -10.888734817504883
    7. '()' → logprob: -11.013734817504883
    8. ' )' → logprob: -11.513734817504883
    9. '*' → logprob: -12.013734817504883
    10. 'import' → logprob: -12.388734817504883

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012998099438846111
    2. ' ' → logprob: -4.512998104095459
    3. '(' → logprob: -6.262998104095459
    4. ' (' → logprob: -10.7629976272583
    5. '.' → logprob: -10.8879976272583
    6. ' .' → logprob: -13.3879976272583
    7. '   ' → logprob: -15.3879976272583
    8. '1' → logprob: -15.5754976272583
    9. ' ' → logprob: -15.7004976272583
    10. '-' → logprob: -16.200498580932617

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013396469876170158
    2. '(' → logprob: -6.876339435577393
    3. ' ' → logprob: -8.62633991241455
    4. '.' → logprob: -9.00133991241455
    5. '-' → logprob: -13.12633991241455
    6. ' (' → logprob: -14.62633991241455
    7. '{' → logprob: -14.62633991241455
    8. '1' → logprob: -14.87633991241455
    9. '   ' → logprob: -15.00133991241455
    10. '2' → logprob: -16.563838958740234

Token 84: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007642415002919734
    2. '-' → logprob: -7.5007643699646
    3. '0' → logprob: -9.125763893127441
    4. '.-' → logprob: -9.375763893127441
    5. '```' → logprob: -12.750763893127441
    6. '-.' → logprob: -13.000763893127441
    7. '1' → logprob: -13.000763893127441
    8. '5' → logprob: -13.125763893127441
    9. ' -' → logprob: -13.125763893127441
    10. '.
' → logprob: -14.000763893127441

Token 85: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.729906196298543e-06
    2. '25' → logprob: -12.500009536743164
    3. '```' → logprob: -13.250009536743164
    4. '2' → logprob: -14.062509536743164
    5. '0' → logprob: -14.562509536743164
    6. '4' → logprob: -14.625009536743164
    7. '3' → logprob: -15.062509536743164
    8. '05' → logprob: -15.187509536743164
    9. '.' → logprob: -15.437509536743164
    10. '75' → logprob: -15.687509536743164

Token 86: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01382707804441452
    2. '
' → logprob: -4.638826847076416
    3. ' print' → logprob: -6.388826847076416
    4. ')' → logprob: -7.138826847076416
    5. ' 
' → logprob: -7.638826847076416
    6. ' ' → logprob: -8.263827323913574
    7. '\n' → logprob: -8.513827323913574
    8. 'n' → logprob: -9.388827323913574
    9. '            
' → logprob: -9.388827323913574
    10. '  
' → logprob: -9.638827323913574

Token 87: 'b' (ID: 65)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.016494631767273
    2. '
' → logprob: -1.141494631767273
    3. '\n' → logprob: -1.891494631767273
    4. ')' → logprob: -2.8914947509765625
    5. ' ' → logprob: -3.5164947509765625
    6. '<|end|>' → logprob: -3.7664947509765625
    7. '```' → logprob: -4.5164947509765625
    8. '#' → logprob: -5.1414947509765625
    9. '  
' → logprob: -5.1414947509765625
    10. 'newline' → logprob: -5.3914947509765625

Token 88: ' =' (ID: 314)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.10927066951990128
    2. ' /' → logprob: -2.3592705726623535
    3. '=' → logprob: -5.9842705726623535
    4. '+' → logprob: -6.3592705726623535
    5. ' ' → logprob: -6.6092705726623535
    6. ' /=' → logprob: -7.4842705726623535
    7. ' =' → logprob: -7.7342705726623535
    8. 'a' → logprob: -7.9842705726623535
    9. '/n' → logprob: -7.9842705726623535
    10. '/a' → logprob: -8.609271049499512

Token 89: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47692856192588806
    2. ' a' → logprob: -1.1019285917282104
    3. '0' → logprob: -3.351928472518921
    4. ' ' → logprob: -4.4769287109375
    5. 'round' → logprob: -8.8519287109375
    6. ' round' → logprob: -9.1019287109375
    7. '1' → logprob: -9.6019287109375
    8. 'int' → logprob: -9.9769287109375
    9. ' n' → logprob: -10.1019287109375
    10. ' int' → logprob: -10.3519287109375

Token 90: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.11081962287425995
    2. ' /' → logprob: -2.6108195781707764
    3. '/n' → logprob: -3.6108195781707764
    4. '/
' → logprob: -5.9858198165893555
    5. ' /
' → logprob: -7.2358198165893555
    6. 'n' → logprob: -7.7358198165893555
    7. ' ' → logprob: -8.485819816589355
    8. '
' → logprob: -9.235819816589355
    9. '/
/' → logprob: -9.735819816589355
    10. '0' → logprob: -9.860819816589355

Token 91: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2840070128440857
    2. 'n' → logprob: -1.5340070724487305
    3. '(' → logprob: -4.1590070724487305
    4. '2' → logprob: -4.4090070724487305
    5. ' (' → logprob: -6.2840070724487305
    6. '((' → logprob: -6.6590070724487305
    7. ' n' → logprob: -7.7840070724487305
    8. '1' → logprob: -9.28400707244873
    9. '3' → logprob: -9.53400707244873
    10. ' ' → logprob: -11.28400707244873

Token 92: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3654125928878784
    2. 'n' → logprob: -1.2404125928878784
    3. '2' → logprob: -4.740412712097168
    4. '(' → logprob: -5.365412712097168
    5. ' (' → logprob: -6.365412712097168
    6. '((' → logprob: -6.740412712097168
    7. ' n' → logprob: -7.740412712097168
    8. '1' → logprob: -11.240412712097168
    9. '3' → logprob: -11.615412712097168
    10. ' ' → logprob: -11.990412712097168

Token 93: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6889653205871582
    2. '*(' → logprob: -1.0639653205871582
    3. ' *' → logprob: -1.9389653205871582
    4. '-' → logprob: -5.313965320587158
    5. ')' → logprob: -5.688965320587158
    6. ' -' → logprob: -8.06396484375
    7. '(n' → logprob: -8.56396484375
    8. ' ' → logprob: -9.93896484375
    9. '2' → logprob: -10.43896484375
    10. ' ' → logprob: -11.18896484375

Token 94: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03461552783846855
    2. ' (' → logprob: -3.5346155166625977
    3. '2' → logprob: -5.534615516662598
    4. '(' → logprob: -7.659615516662598
    5. ' ' → logprob: -8.534615516662598
    6. ')' → logprob: -9.534615516662598
    7. 'n' → logprob: -9.534615516662598
    8. '1' → logprob: -9.909615516662598
    9. '((' → logprob: -11.909615516662598
    10. '(j' → logprob: -11.909615516662598

Token 95: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0023881373926997185
    2. '(n' → logprob: -6.752388000488281
    3. ' n' → logprob: -6.877388000488281
    4. ' (' → logprob: -9.252388000488281
    5. '2' → logprob: -9.627388000488281
    6. '1' → logprob: -11.377388000488281
    7. '-' → logprob: -12.627388000488281
    8. ')' → logprob: -13.002388000488281
    9. ')n' → logprob: -13.127388000488281
    10. ' ' → logprob: -13.627388000488281

Token 96: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08898504823446274
    2. ' -' → logprob: -2.463984966278076
    3. '1' → logprob: -10.213985443115234
    4. ')' → logprob: -11.963985443115234
    5. '−' → logprob: -14.338985443115234
    6. ' ' → logprob: -14.463985443115234
    7. '2' → logprob: -15.213985443115234
    8. '))' → logprob: -15.588985443115234
    9. ')-' → logprob: -15.713985443115234
    10. '```' → logprob: -15.838985443115234

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018517737044021487
    2. ' ' → logprob: -6.501851558685303
    3. '2' → logprob: -8.251852035522461
    4. ')' → logprob: -9.376852035522461
    5. '```' → logprob: -13.126852035522461
    6. '   ' → logprob: -14.876852035522461
    7. ' )' → logprob: -14.876852035522461
    8. '<|end|>' → logprob: -15.251852035522461
    9. '`)' → logprob: -15.626852035522461
    10. ')
' → logprob: -16.18935203552246

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001745775662129745
    2. '2' → logprob: -8.750174522399902
    3. ')' → logprob: -11.625174522399902
    4. ' ' → logprob: -12.875174522399902
    5. '```' → logprob: -13.000174522399902
    6. '<|end|>' → logprob: -14.000174522399902
    7. '   ' → logprob: -15.250174522399902
    8. '...' → logprob: -15.937674522399902
    9. '  ' → logprob: -16.06267547607422
    10. '{' → logprob: -16.50017547607422

Token 99: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3617975115776062
    2. ')' → logprob: -1.236797571182251
    3. ')/' → logprob: -4.361797332763672
    4. ' ))' → logprob: -8.611797332763672
    5. ')//' → logprob: -9.361797332763672
    6. ' )' → logprob: -9.361797332763672
    7. '))/' → logprob: -9.986797332763672
    8. '//' → logprob: -10.236797332763672
    9. ')))' → logprob: -10.736797332763672
    10. '/' → logprob: -11.111797332763672

Token 100: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010354319238103926
    2. ' )' → logprob: -9.875103950500488
    3. '))' → logprob: -10.500103950500488
    4. '/' → logprob: -11.375103950500488
    5. ')
' → logprob: -12.125103950500488
    6. '//' → logprob: -13.125103950500488
    7. ')/' → logprob: -13.625103950500488
    8. '*' → logprob: -13.750103950500488
    9. '**' → logprob: -14.125103950500488
    10. ')**' → logprob: -14.875103950500488

Token 101: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012518716044723988
    2. ' ' → logprob: -4.387518882751465
    3. '1' → logprob: -12.262518882751465
    4. ')' → logprob: -13.762518882751465
    5. ' ' → logprob: -13.887518882751465
    6. ' 
' → logprob: -15.012518882751465
    7. '
' → logprob: -15.387518882751465
    8. '```' → logprob: -15.387518882751465
    9. '3' → logprob: -15.450018882751465
    10. '  ' → logprob: -15.825018882751465

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9862216504407115e-05
    2. ' ' → logprob: -11.125020027160645
    3. '1' → logprob: -12.250020027160645
    4. '3' → logprob: -17.000019073486328
    5. '.' → logprob: -17.375019073486328
    6. ')' → logprob: -17.625019073486328
    7. '```' → logprob: -17.625019073486328
    8. '
' → logprob: -17.750019073486328
    9. ' ' → logprob: -18.000019073486328
    10. '{' → logprob: -18.750019073486328

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -13.000004768371582
    3. ')
' → logprob: -13.375004768371582
    4. '))' → logprob: -14.500004768371582
    5. ')`' → logprob: -16.1250057220459
    6. '')' → logprob: -16.3750057220459
    7. ')n' → logprob: -16.3750057220459
    8. '*' → logprob: -16.7500057220459
    9. ')**' → logprob: -16.8750057220459
    10. '**' → logprob: -17.0000057220459

Token 104: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.0590548703912646e-05
    2. ' print' → logprob: -10.875030517578125
    3. ')' → logprob: -11.875030517578125
    4. 'b' → logprob: -13.250030517578125
    5. '
' → logprob: -14.250030517578125
    6. '\n' → logprob: -14.750030517578125
    7. '#' → logprob: -15.125030517578125
    8. 'pr' → logprob: -15.375030517578125
    9. 'p' → logprob: -15.375030517578125
    10. '(print' → logprob: -15.375030517578125

Token 105: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4743562638759613
    2. '(b' → logprob: -0.9743562936782837
    3. '(a' → logprob: -8.349356651306152
    4. '('' → logprob: -11.099356651306152
    5. '(round' → logprob: -11.599356651306152
    6. '((' → logprob: -11.974356651306152
    7. '("("' → logprob: -11.974356651306152
    8. ' (' → logprob: -13.474356651306152
    9. '(f' → logprob: -13.849356651306152
    10. '(`' → logprob: -13.974356651306152

Token 106: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -15.250001907348633
    4. ')
' → logprob: -17.000001907348633
    5. ')`' → logprob: -17.375001907348633
    6. ')}' → logprob: -18.625001907348633
    7. '),' → logprob: -19.625001907348633
    8. '）' → logprob: -19.625001907348633
    9. ').' → logprob: -20.250001907348633
    10. ')#' → logprob: -20.625001907348633

Token 107: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19491037726402283
    2. ' ' → logprob: -2.0699102878570557
    3. '3' → logprob: -3.0699102878570557
    4. '1' → logprob: -5.944910526275635
    5. '6' → logprob: -7.194910526275635
    6. '4' → logprob: -7.319910526275635
    7. 'n' → logprob: -8.944910049438477
    8. ' n' → logprob: -9.569910049438477
    9. '5' → logprob: -9.694910049438477
    10. '(' → logprob: -10.569910049438477

Token 108: 'n' (ID: 77)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.017025265842676163
    2. 'n' → logprob: -4.892025470733643
    3. '3' → logprob: -5.267025470733643
    4. '4' → logprob: -6.642025470733643
    5. '1' → logprob: -7.017025470733643
    6. '(n' → logprob: -7.142025470733643
    7. '10' → logprob: -8.017024993896484
    8. '(' → logprob: -8.517024993896484
    9. '0' → logprob: -9.017024993896484
    10. '100' → logprob: -9.392024993896484

Token 109: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3414097726345062
    2. ' -' → logprob: -1.4664098024368286
    3. ' /' → logprob: -4.216409683227539
    4. '/' → logprob: -4.216409683227539
    5. ')' → logprob: -4.466409683227539
    6. '+' → logprob: -5.091409683227539
    7. '/(' → logprob: -5.591409683227539
    8. ')/(' → logprob: -5.591409683227539
    9. '))' → logprob: -6.716409683227539
    10. ' +' → logprob: -6.716409683227539

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02651032991707325
    2. ' ' → logprob: -3.776510238647461
    3. '2' → logprob: -5.776510238647461
    4. ' n' → logprob: -10.464010238647461
    5. '3' → logprob: -10.589010238647461
    6. 'n' → logprob: -10.839010238647461
    7. ')' → logprob: -10.901510238647461
    8. '(n' → logprob: -11.651510238647461
    9. '   ' → logprob: -11.714010238647461
    10. '-' → logprob: -12.026510238647461

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022713904036208987
    2. '2' → logprob: -8.750226974487305
    3. ' ' → logprob: -9.750226974487305
    4. '3' → logprob: -12.812726974487305
    5. '   ' → logprob: -14.125226974487305
    6. '-' → logprob: -14.187726974487305
    7. '```' → logprob: -14.312726974487305
    8. ')' → logprob: -14.375226974487305
    9. '１' → logprob: -14.437726974487305
    10. '  ' → logprob: -14.625226974487305

Token 112: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009109546430408955
    2. '))' → logprob: -4.7591094970703125
    3. ' )' → logprob: -7.7591094970703125
    4. ')))' → logprob: -11.259109497070312
    5. '**' → logprob: -11.384109497070312
    6. '/' → logprob: -11.384109497070312
    7. ')**' → logprob: -11.509109497070312
    8. '*' → logprob: -12.259109497070312
    9. ' /' → logprob: -12.259109497070312
    10. ')
' → logprob: -12.884109497070312


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 110
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 45
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 39.09%
Précision adaptée (1ère position): 40.91%
Précision (top 10): 84.55%
================================================================================
