================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
shift_value = int(input())
input_string = input()
alphabet_list = []
for alphabet_index in range(26):
    alphabet_list.append(chr(65 + alphabet_index))
output_string = ''
for character_index in range(len(input_string)):
    current_position = alphabet_list.index(input_string[character_index])
    shifted_position = (current_position + shift_value) % 26
    output_string += alphabet_list[shifted_position]
print(output_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'shift' (ID: 27472)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2983323037624359
    2. '3' → logprob: -1.7983323335647583
    3. '5' → logprob: -2.9233322143554688
    4. '1' → logprob: -3.2983322143554688
    5. '4' → logprob: -6.923332214355469
    6. '2' → logprob: -8.173332214355469
    7. '42' → logprob: -8.423332214355469
    8. '0' → logprob: -9.673332214355469
    9. '10' → logprob: -9.798332214355469
    10. '7' → logprob: -10.673332214355469

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002250887919217348
    2. '```' → logprob: -6.752250671386719
    3. '_' → logprob: -8.252250671386719
    4. 'shift' → logprob: -8.377250671386719
    5. '('' → logprob: -9.002250671386719
    6. '_shift' → logprob: -9.127250671386719
    7. '`' → logprob: -9.377250671386719
    8. ''' → logprob: -10.127250671386719
    9. '("("' → logprob: -10.127250671386719
    10. '[' → logprob: -10.377250671386719

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09324145317077637
    2. ')' → logprob: -2.4682414531707764
    3. '('' → logprob: -6.9682416915893555
    4. '```' → logprob: -7.7182416915893555
    5. '(
' → logprob: -7.8432416915893555
    6. '()' → logprob: -7.9682416915893555
    7. '("("' → logprob: -8.093241691589355
    8. '[' → logprob: -8.218241691589355
    9. '(token' → logprob: -8.843241691589355
    10. '())' → logprob: -9.093241691589355

Token 6: 'input' (ID: 2586)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04751267656683922
    2. 'cipher' → logprob: -4.547512531280518
    3. '+' → logprob: -5.047512531280518
    4. 's' → logprob: -5.547512531280518
    5. 'result' → logprob: -5.672512531280518
    6. 'shift' → logprob: -5.672512531280518
    7. 'text' → logprob: -5.797512531280518
    8. 'for' → logprob: -6.047512531280518
    9. 'x' → logprob: -6.672512531280518
    10. 'a' → logprob: -6.672512531280518

Token 7: '_string' (ID: 8609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.067262053489685
    2. '_str' → logprob: -1.442262053489685
    3. '_string' → logprob: -1.692262053489685
    4. '()' → logprob: -2.5672621726989746
    5. '_value' → logprob: -3.0672621726989746
    6. '_' → logprob: -3.1922621726989746
    7. '_text' → logprob: -4.192262172698975
    8. '_data' → logprob: -4.442262172698975
    9. '('' → logprob: -4.567262172698975
    10. '_char' → logprob: -5.442262172698975

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02631528116762638
    2. '+' → logprob: -4.276315212249756
    3. '[:]' → logprob: -5.526315212249756
    4. '=' → logprob: -6.651315212249756
    5. '.strip' → logprob: -7.151315212249756
    6. '.' → logprob: -7.151315212249756
    7. '[input' → logprob: -7.151315212249756
    8. '```' → logprob: -7.276315212249756
    9. '[token' → logprob: -7.526315212249756
    10. '[next' → logprob: -7.901315212249756

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0487055741250515
    2. 'input' → logprob: -3.048705577850342
    3. ' ' → logprob: -10.048705101013184
    4. '(input' → logprob: -10.923705101013184
    5. '"' → logprob: -11.173705101013184
    6. '=input' → logprob: -11.173705101013184
    7. ' "' → logprob: -11.548705101013184
    8. ' str' → logprob: -12.423705101013184
    9. '<input' → logprob: -13.173705101013184
    10. ''' → logprob: -13.298705101013184

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01766190491616726
    2. '()' → logprob: -4.142662048339844
    3. '('' → logprob: -7.142662048339844
    4. ')' → logprob: -7.642662048339844
    5. ' (' → logprob: -9.142662048339844
    6. '```' → logprob: -9.767662048339844
    7. '("("' → logprob: -10.142662048339844
    8. ''' → logprob: -10.767662048339844
    9. '())' → logprob: -10.767662048339844
    10. '(
' → logprob: -11.017662048339844

Token 11: 'alphabet' (ID: 198460)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11061793565750122
    2. 'output' → logprob: -2.8606178760528564
    3. 'shift' → logprob: -3.6106178760528564
    4. 'decoded' → logprob: -4.6106181144714355
    5. 'encoded' → logprob: -4.9856181144714355
    6. 'for' → logprob: -6.4856181144714355
    7. 'encrypted' → logprob: -7.7356181144714355
    8. 'cipher' → logprob: -7.8606181144714355
    9. 'res' → logprob: -8.110617637634277
    10. 'new' → logprob: -8.485617637634277

Token 12: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17643406987190247
    2. '_size' → logprob: -2.30143404006958
    3. ' =' → logprob: -3.30143404006958
    4. 's' → logprob: -5.17643404006958
    5. '[' → logprob: -5.67643404006958
    6. '=' → logprob: -5.92643404006958
    7. '_length' → logprob: -5.92643404006958
    8. '[:]' → logprob: -5.92643404006958
    9. '_len' → logprob: -7.05143404006958
    10. '_s' → logprob: -7.42643404006958

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9942826628684998
    2. '.' → logprob: -1.3692827224731445
    3. '=' → logprob: -1.9942827224731445
    4. '[' → logprob: -2.1192827224731445
    5. '_' → logprob: -2.8692827224731445
    6. '[:]' → logprob: -3.2442827224731445
    7. '<|end|>' → logprob: -4.8692827224731445
    8. 's' → logprob: -4.9942827224731445
    9. '[]' → logprob: -5.3692827224731445
    10. '=[]' → logprob: -7.1192827224731445

Token 14: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.47469818592071533
    2. ' ['' → logprob: -1.8496981859207153
    3. ' list' → logprob: -2.099698066711426
    4. '['' → logprob: -3.474698066711426
    5. ' []' → logprob: -3.724698066711426
    6. '[list' → logprob: -4.474698066711426
    7. '[' → logprob: -4.724698066711426
    8. 'list' → logprob: -4.724698066711426
    9. ' "' → logprob: -5.349698066711426
    10. ' ["' → logprob: -5.724698066711426

Token 15: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0050429292023181915
    2. ' for' → logprob: -5.505043029785156
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -7.880043029785156
    4. 'a' → logprob: -8.130043029785156
    5. 'alphabet' → logprob: -9.505043029785156
    6. '_' → logprob: -9.630043029785156
    7. '=' → logprob: -10.005043029785156
    8. '```' → logprob: -10.380043029785156
    9. '#' → logprob: -11.255043029785156
    10. ':' → logprob: -11.380043029785156

Token 16: ' alphabet' (ID: 47840)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7289711833000183
    2. ' ' → logprob: -0.9789711833000183
    3. ' c' → logprob: -2.103971242904663
    4. ' char' → logprob: -4.103971004486084
    5. ' _' → logprob: -6.103971004486084
    6. 'i' → logprob: -8.103971481323242
    7. ' ch' → logprob: -8.228971481323242
    8. '  ' → logprob: -8.978971481323242
    9. 'c' → logprob: -9.228971481323242
    10. '_' → logprob: -9.603971481323242

Token 17: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023492956534028053
    2. '_' → logprob: -4.773492813110352
    3. ' ' → logprob: -4.773492813110352
    4. 'in' → logprob: -5.273492813110352
    5. '_in' → logprob: -7.648492813110352
    6. 's' → logprob: -7.898492813110352
    7. '  ' → logprob: -9.148492813110352
    8. ' i' → logprob: -9.273492813110352
    9. ' _' → logprob: -9.648492813110352
    10. '```' → logprob: -11.398492813110352

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029836108908057213
    2. 'in' → logprob: -3.5298361778259277
    3. ' ' → logprob: -9.77983570098877
    4. '	in' → logprob: -11.02983570098877
    5. ',' → logprob: -12.90483570098877
    6. '  ' → logprob: -13.77983570098877
    7. ' _' → logprob: -13.84233570098877
    8. '_in' → logprob: -14.02983570098877
    9. ' ,' → logprob: -14.27983570098877
    10. '0' → logprob: -14.34233570098877

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759512186050415
    2. 'range' → logprob: -0.8259512186050415
    3. 'alphabet' → logprob: -11.57595157623291
    4. '	range' → logprob: -13.95095157623291
    5. ' alphabet' → logprob: -14.45095157623291
    6. '(range' → logprob: -14.70095157623291
    7. '_range' → logprob: -16.075950622558594
    8. ' ' → logprob: -16.200950622558594
    9. ' xrange' → logprob: -16.450950622558594
    10. 'rang' → logprob: -16.950950622558594

Token 20: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5771085023880005
    2. '(len' → logprob: -0.8271085023880005
    3. ' (' → logprob: -6.952108383178711
    4. '(ord' → logprob: -9.202108383178711
    5. '(length' → logprob: -9.452108383178711
    6. '(
' → logprob: -10.827108383178711
    7. '(range' → logprob: -12.452108383178711
    8. ' len' → logprob: -13.327108383178711
    9. '(

' → logprob: -14.077108383178711
    10. '('' → logprob: -14.327108383178711

Token 21: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0021888066548854113
    2. ' ' → logprob: -6.252188682556152
    3. '65' → logprob: -9.002188682556152
    4. 'len' → logprob: -9.127188682556152
    5. ' len' → logprob: -12.252188682556152
    6. '97' → logprob: -12.252188682556152
    7. '0' → logprob: -12.377188682556152
    8. '   ' → logprob: -12.502188682556152
    9. '25' → logprob: -13.252188682556152
    10. '1' → logprob: -13.377188682556152

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022350670769810677
    2. ')' → logprob: -6.377234935760498
    3. ' ):' → logprob: -7.627234935760498
    4. ':' → logprob: -10.502235412597656
    5. '):
' → logprob: -11.377235412597656
    6. '+' → logprob: -12.377235412597656
    7. ' )' → logprob: -14.252235412597656
    8. '):

' → logprob: -15.002235412597656
    9. ',' → logprob: -15.252235412597656
    10. ']:' → logprob: -15.502235412597656

Token 23: '   ' (ID: 271)
  Prédit: ' alphabet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alphabet' → logprob: -0.1019565686583519
    2. '   ' → logprob: -2.976956605911255
    3. 'alphabet' → logprob: -3.101956605911255
    4. '	al' → logprob: -8.601956367492676
    5. ' alphabetical' → logprob: -8.726956367492676
    6. ' al' → logprob: -9.101956367492676
    7. ' alph' → logprob: -9.101956367492676
    8. '```' → logprob: -9.601956367492676
    9. ' ' → logprob: -9.726956367492676
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.851956367492676

Token 24: ' alphabet' (ID: 47840)
  Prédit: ' alphabet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alphabet' → logprob: -0.6959090232849121
    2. 'alphabet' (adapté à ' alphabet') → logprob: -0.6959090232849121
    3. '   ' → logprob: -6.445909023284912
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -8.94590950012207
    5. ' alphabetical' → logprob: -8.94590950012207
    6. 'alb' → logprob: -8.94590950012207
    7. ' al' → logprob: -9.19590950012207
    8. '```' → logprob: -9.50840950012207
    9. ' alph' → logprob: -9.57090950012207
    10. 'al' → logprob: -9.82090950012207

Token 25: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.698698704596609e-05
    2. '_' → logprob: -10.125097274780273
    3. '=' → logprob: -10.750097274780273
    4. ' =' → logprob: -11.375097274780273
    5. '_lst' → logprob: -12.250097274780273
    6. '_value' → logprob: -12.500097274780273
    7. '_char' → logprob: -13.125097274780273
    8. 's' → logprob: -13.250097274780273
    9. '_append' → logprob: -13.250097274780273
    10. 'list' → logprob: -13.750097274780273

Token 26: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06265898793935776
    2. '.' → logprob: -2.8126590251922607
    3. ' .' → logprob: -7.312658786773682
    4. '.app' → logprob: -11.56265926361084
    5. 'append' → logprob: -12.18765926361084
    6. '.ap' → logprob: -12.43765926361084
    7. '.=' → logprob: -13.56265926361084
    8. '.extend' → logprob: -14.31265926361084
    9. '=' → logprob: -14.31265926361084
    10. ' +=' → logprob: -14.56265926361084

Token 27: '(chr' (ID: 185847)
  Prédit: '(chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chr' → logprob: -0.00044353955308906734
    2. '(' → logprob: -8.250443458557129
    3. 'chr' → logprob: -8.750443458557129
    4. '(ord' → logprob: -11.000443458557129
    5. ' chr' → logprob: -13.125443458557129
    6. '('' → logprob: -13.125443458557129
    7. '((' → logprob: -13.375443458557129
    8. ' (' → logprob: -14.000443458557129
    9. '(ch' → logprob: -16.125444412231445
    10. '(str' → logprob: -16.250444412231445

Token 28: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02984374202787876
    2. '(ord' → logprob: -3.529843807220459
    3. '65' → logprob: -9.7798433303833
    4. '((' → logprob: -10.9048433303833
    5. ' (' → logprob: -11.5298433303833
    6. '(al' → logprob: -12.5298433303833
    7. '(i' → logprob: -14.4048433303833
    8. '40' → logprob: -14.6548433303833
    9. '(
' → logprob: -14.6548433303833
    10. ' ' → logprob: -14.9048433303833

Token 29: '65' (ID: 3898)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.3450755476951599
    2. '65' → logprob: -1.7200756072998047
    3. 'alphabet' → logprob: -2.5950756072998047
    4. '(ord' → logprob: -3.9700756072998047
    5. 'ord' → logprob: -4.220075607299805
    6. ' ' → logprob: -6.220075607299805
    7. ' ord' → logprob: -6.345075607299805
    8. ' alphabet' → logprob: -8.220075607299805
    9. '(' → logprob: -8.720075607299805
    10. 'shift' → logprob: -8.970075607299805

Token 30: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3133094608783722
    2. ' +' → logprob: -1.3133094310760498
    3. ' ' → logprob: -10.938309669494629
    4. ' plus' → logprob: -11.188309669494629
    5. ' ' → logprob: -12.813309669494629
    6. '＋' → logprob: -13.688309669494629
    7. 'plus' → logprob: -13.813309669494629
    8. '+i' → logprob: -13.813309669494629
    9. ')+' → logprob: -13.938309669494629
    10. '    ' → logprob: -13.938309669494629

Token 31: ' alphabet' (ID: 47840)
  Prédit: 'alphabet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alphabet' → logprob: -0.005930693820118904
    2. ' alphabet' → logprob: -5.1309309005737305
    3. 'al' → logprob: -13.25593090057373
    4. 'alph' → logprob: -16.630929946899414
    5. 'alb' → logprob: -17.005929946899414
    6. 'alpha' → logprob: -17.255929946899414
    7. ' ' → logprob: -17.630929946899414
    8. ' alphabetical' → logprob: -18.005929946899414
    9. '(al' → logprob: -18.380929946899414
    10. '```' → logprob: -18.380929946899414

Token 32: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.75
    3. 'index' → logprob: -16.875
    4. '_value' → logprob: -18.625
    5. ' _' → logprob: -18.75
    6. '_i' → logprob: -20.0
    7. '__' → logprob: -20.25
    8. '_idx' → logprob: -20.375
    9. ')' → logprob: -20.5
    10. '_list' → logprob: -20.625

Token 33: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005244783591479063
    2. ')' → logprob: -5.255244731903076
    3. ')))' → logprob: -11.880245208740234
    4. '))
' → logprob: -12.880245208740234
    5. ' ))' → logprob: -13.630245208740234
    6. ')
' → logprob: -16.130245208740234
    7. '   ' → logprob: -16.755245208740234
    8. '+' → logprob: -16.755245208740234
    9. ''))' → logprob: -16.880245208740234
    10. '),' → logprob: -17.005245208740234

Token 34: 'output' (ID: 6130)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.5350969433784485
    2. 'result' → logprob: -1.4100968837738037
    3. 'encoded' → logprob: -2.5350968837738037
    4. 'output' → logprob: -2.9100968837738037
    5. 'cipher' → logprob: -4.785097122192383
    6. 'encrypted' → logprob: -4.910097122192383
    7. '
' → logprob: -5.160097122192383
    8. 'for' → logprob: -5.535097122192383
    9. 'new' → logprob: -5.660097122192383
    10. 'decoded' → logprob: -6.410097122192383

Token 35: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.2547246813774109
    2. '_' → logprob: -1.5047247409820557
    3. '_str' → logprob: -6.379724502563477
    4. ' =' → logprob: -8.129724502563477
    5. '_list' → logprob: -8.504724502563477
    6. '_text' → logprob: -8.754724502563477
    7. 'string' → logprob: -9.004724502563477
    8. '=' → logprob: -9.254724502563477
    9. '_strings' → logprob: -9.754724502563477
    10. '_chars' → logprob: -9.879724502563477

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11932579427957535
    2. ' +=' → logprob: -2.244325876235962
    3. '=' → logprob: -5.119325637817383
    4. '+=' → logprob: -7.869325637817383
    5. '+' → logprob: -10.369325637817383
    6. '_' → logprob: -10.619325637817383
    7. ' ' → logprob: -10.869325637817383
    8. ' +' → logprob: -11.369325637817383
    9. '+='' → logprob: -11.619325637817383
    10. ' .=' → logprob: -12.369325637817383

Token 37: ' ''
' (ID: 25366)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.03736865147948265
    2. '"' → logprob: -3.7873685359954834
    3. '''' → logprob: -4.9123687744140625
    4. ' ""' → logprob: -5.0373687744140625
    5. ''' → logprob: -9.162368774414062
    6. ' ' → logprob: -10.412368774414062
    7. ' ''' → logprob: -10.537368774414062
    8. ' "' → logprob: -11.912368774414062
    9. '""""' → logprob: -13.037368774414062
    10. '"""' → logprob: -13.287368774414062

Token 38: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00026205103495158255
    2. ' for' → logprob: -8.250262260437012
    3. '
' → logprob: -14.625262260437012
    4. '```' → logprob: -15.750262260437012
    5. '	for' → logprob: -17.000261306762695
    6. 'f' → logprob: -17.125261306762695
    7. 'i' → logprob: -17.375261306762695
    8. ' 
' → logprob: -17.750261306762695
    9. '\n' → logprob: -18.125261306762695
    10. 'For' → logprob: -18.250261306762695

Token 39: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.8625141382217407
    2. ' char' → logprob: -1.3625141382217407
    3. ' i' → logprob: -1.8625141382217407
    4. ' input' → logprob: -2.737514019012451
    5. ' ' → logprob: -3.862514019012451
    6. ' _' → logprob: -3.987514019012451
    7. ' letter' → logprob: -4.237514019012451
    8. ' alphabet' → logprob: -4.362514019012451
    9. ' c' → logprob: -4.987514019012451
    10. ' string' → logprob: -5.112514019012451

Token 40: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004703880287706852
    2. 'in' → logprob: -5.379703998565674
    3. ' ' → logprob: -9.504703521728516
    4. '	in' → logprob: -12.379703521728516
    5. '  ' → logprob: -13.504703521728516
    6. '<|end|>' → logprob: -14.254703521728516
    7. ' i' → logprob: -14.379703521728516
    8. '   ' → logprob: -14.629703521728516
    9. '_in' → logprob: -15.004703521728516
    10. 's' → logprob: -15.129703521728516

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028915368020534515
    2. 'in' → logprob: -5.877891540527344
    3. ' ' → logprob: -9.377891540527344
    4. '	in' → logprob: -14.127891540527344
    5. ',' → logprob: -14.502891540527344
    6. ' ,' → logprob: -15.127891540527344
    7. '  ' → logprob: -15.877891540527344
    8. '<|end|>' → logprob: -16.127891540527344
    9. 'In' → logprob: -16.877891540527344
    10. 'range' → logprob: -17.190391540527344

Token 42: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12692999839782715
    2. 'range' → logprob: -2.126929998397827
    3. ' input' → logprob: -14.126930236816406
    4. 'input' → logprob: -14.251930236816406
    5. '(range' → logprob: -15.751930236816406
    6. ' ' → logprob: -15.751930236816406
    7. '	range' → logprob: -15.876930236816406
    8. '   ' → logprob: -17.251930236816406
    9. 'output' → logprob: -18.001930236816406
    10. '_range' → logprob: -18.376930236816406

Token 43: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.03965292125940323
    2. '(' → logprob: -3.2896528244018555
    3. ' (' → logprob: -6.5396528244018555
    4. ' len' → logprob: -8.789652824401855
    5. '(length' → logprob: -11.789652824401855
    6. '(range' → logprob: -13.539652824401855
    7. 'len' → logprob: -13.789652824401855
    8. '(space' → logprob: -13.914652824401855
    9. '(s' → logprob: -15.039652824401855
    10. '<len' → logprob: -15.289652824401855

Token 44: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0012151175178587437
    2. '(' → logprob: -6.751214981079102
    3. '(output' → logprob: -10.126214981079102
    4. 'input' → logprob: -12.376214981079102
    5. ' (' → logprob: -14.501214981079102
    6. ' input' → logprob: -16.8762149810791
    7. '(
' → logprob: -17.0012149810791
    8. '(

' → logprob: -17.3762149810791
    9. '=input' → logprob: -17.8762149810791
    10. '(in' → logprob: -18.0012149810791

Token 45: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -5.512236498361744e-07
    2. 'string' → logprob: -15.000000953674316
    3. '_' → logprob: -16.75
    4. ')' → logprob: -17.0
    5. '_str' → logprob: -17.75
    6. '_strings' → logprob: -17.75
    7. 'String' → logprob: -17.875
    8. '_character' → logprob: -18.0
    9. ' _' → logprob: -18.25
    10. '_STRING' → logprob: -18.375

Token 46: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.06152086332440376
    2. '):' → logprob: -2.93652081489563
    3. '))' → logprob: -5.561521053314209
    4. ' ):' → logprob: -6.811521053314209
    5. ')):
' → logprob: -6.936521053314209
    6. ' ))' → logprob: -7.936521053314209
    7. ')' → logprob: -9.06152057647705
    8. ' ' → logprob: -9.18652057647705
    9. ')):
' → logprob: -9.81152057647705
    10. ':' → logprob: -10.31152057647705

Token 47: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17231549322605133
    2. '   ' → logprob: -2.9223155975341797
    3. ' if' → logprob: -3.0473155975341797
    4. '    ' → logprob: -3.5473155975341797
    5. ' character' → logprob: -4.92231559753418
    6. 'character' → logprob: -5.42231559753418
    7. 'c' → logprob: -5.79731559753418
    8. ' ```' → logprob: -6.29731559753418
    9. ' ,' → logprob: -6.67231559753418
    10. 'if' → logprob: -6.67231559753418

Token 48: ' current' (ID: 2208)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.365234911441803
    2. 'character' → logprob: -2.240234851837158
    3. ' if' → logprob: -2.615234851837158
    4. ' character' → logprob: -2.740234851837158
    5. 'c' → logprob: -3.990234851837158
    6. ' c' → logprob: -4.740234851837158
    7. ' ```' → logprob: -5.365234851837158
    8. 'current' (adapté à ' current') → logprob: -5.615234851837158
    9. ' current' → logprob: -5.615234851837158
    10. '    ' → logprob: -5.740234851837158

Token 49: '_position' (ID: 23739)
  Prédit: '_character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.23086470365524292
    2. '_' → logprob: -2.1058647632598877
    3. '_char' → logprob: -2.4808647632598877
    4. ' _' → logprob: -7.855864524841309
    5. 'character' → logprob: -8.855864524841309
    6. '_string' → logprob: -9.230864524841309
    7. 'char' → logprob: -9.855864524841309
    8. ' ' → logprob: -10.855864524841309
    9. '_space' → logprob: -12.355864524841309
    10. '_letter' → logprob: -12.480864524841309

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004089678172022104
    2. '=' → logprob: -5.504089832305908
    3. ' ' → logprob: -11.62908935546875
    4. ' +=' → logprob: -13.87908935546875
    5. ')' → logprob: -14.25408935546875
    6. ' =)' → logprob: -15.00408935546875
    7. '_' → logprob: -15.62908935546875
    8. ',' → logprob: -16.00408935546875
    9. ' )' → logprob: -16.62908935546875
    10. '   ' → logprob: -17.25408935546875

Token 51: ' alphabet' (ID: 47840)
  Prédit: 'alphabet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alphabet' → logprob: -0.5804433822631836
    2. ' alphabet' → logprob: -0.8304433822631836
    3. '(al' → logprob: -5.955443382263184
    4. ' (' → logprob: -6.830443382263184
    5. '(' → logprob: -8.705443382263184
    6. 'al' → logprob: -9.080443382263184
    7. '   ' → logprob: -9.580443382263184
    8. ' alphabetical' → logprob: -9.830443382263184
    9. ' output' → logprob: -9.955443382263184
    10. 'output' → logprob: -10.080443382263184

Token 52: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.935296834039036e-06
    2. '_index' → logprob: -13.12500286102295
    3. 'list' → logprob: -15.62500286102295
    4. 'List' → logprob: -16.000003814697266
    5. '_lists' → logprob: -16.250003814697266
    6. '_value' → logprob: -16.625003814697266
    7. '[' → logprob: -16.625003814697266
    8. 'ist' → logprob: -17.125003814697266
    9. '_string' → logprob: -17.250003814697266
    10. '_List' → logprob: -17.375003814697266

Token 53: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -1.6405310816480778e-05
    2. '.find' → logprob: -11.625016212463379
    3. 'index' → logprob: -12.250016212463379
    4. '.Index' → logprob: -13.375016212463379
    5. ' .' → logprob: -14.125016212463379
    6. '.' → logprob: -16.000017166137695
    7. ').' → logprob: -16.000017166137695
    8. '.count' → logprob: -16.875017166137695
    9. '   ' → logprob: -17.500017166137695
    10. '_index' → logprob: -17.625017166137695

Token 54: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.069664333248511e-05
    2. '(' → logprob: -10.875020980834961
    3. ' (' → logprob: -14.375020980834961
    4. 'input' → logprob: -14.625020980834961
    5. '(character' → logprob: -14.750020980834961
    6. '(output' → logprob: -16.50002098083496
    7. '((' → logprob: -16.50002098083496
    8. ',input' → logprob: -17.50002098083496
    9. '(current' → logprob: -18.00002098083496
    10. '('' → logprob: -18.37502098083496

Token 55: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.000536828360054642
    2. 'string' → logprob: -7.625536918640137
    3. 'String' → logprob: -10.000536918640137
    4. '_character' → logprob: -14.250536918640137
    5. '_' → logprob: -14.625536918640137
    6. ')' → logprob: -14.625536918640137
    7. '_str' → logprob: -15.000536918640137
    8. '_char' → logprob: -15.000536918640137
    9. '```' → logprob: -15.250536918640137
    10. '_STRING' → logprob: -15.375536918640137

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00219273311085999
    2. '[current' → logprob: -6.127192497253418
    3. ' [' → logprob: -12.627192497253418
    4. '[input' → logprob: -13.377192497253418
    5. 'character' → logprob: -14.252192497253418
    6. '```' → logprob: -14.877192497253418
    7. '_character' → logprob: -15.002192497253418
    8. '[
' → logprob: -15.252192497253418
    9. ')' → logprob: -15.377192497253418
    10. '   ' → logprob: -15.502192497253418

Token 57: 'character' (ID: 38245)
  Prédit: 'character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.0025269107427448034
    2. ' character' → logprob: -6.002526760101318
    3. '_character' → logprob: -10.252527236938477
    4. ' ' → logprob: -11.877527236938477
    5. '(character' → logprob: -12.002527236938477
    6. '   ' → logprob: -14.252527236938477
    7. '.character' → logprob: -14.877527236938477
    8. ')' → logprob: -15.127527236938477
    9. '-character' → logprob: -15.252527236938477
    10. ']' → logprob: -15.377527236938477

Token 58: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.531315314830863e-06
    2. 'index' → logprob: -12.875003814697266
    3. 's' → logprob: -15.750003814697266
    4. 'Index' → logprob: -15.750003814697266
    5. '])' → logprob: -16.125003814697266
    6. 'ex' → logprob: -16.500003814697266
    7. ']_' → logprob: -16.625003814697266
    8. 'nd' → logprob: -16.750003814697266
    9. '_' → logprob: -17.000003814697266
    10. '_INDEX' → logprob: -17.250003814697266

Token 59: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5292562246322632
    2. ')' → logprob: -0.9042562246322632
    3. ']' → logprob: -5.529256343841553
    4. ' )' → logprob: -7.154256343841553
    5. ' ' → logprob: -8.279255867004395
    6. ' ])' → logprob: -8.279255867004395
    7. '])+' → logprob: -8.404255867004395
    8. ''])' → logprob: -9.029255867004395
    9. '）' → logprob: -9.154255867004395
    10. '   ' → logprob: -9.654255867004395

Token 60: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03864013031125069
    2. '   ' → logprob: -4.163640022277832
    3. ' +' → logprob: -4.413640022277832
    4. '+
' → logprob: -5.163640022277832
    5. ' ' → logprob: -6.913640022277832
    6. ')' → logprob: -6.913640022277832
    7. 'output' → logprob: -6.913640022277832
    8. ' +
' → logprob: -8.038640022277832
    9. ']' → logprob: -8.663640022277832
    10. '#' → logprob: -8.913640022277832

Token 61: ' shifted' (ID: 58644)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5046743750572205
    2. ' shifted' → logprob: -1.1296744346618652
    3. ' output' → logprob: -4.004674434661865
    4. 'new' → logprob: -4.004674434661865
    5. 'shift' → logprob: -4.379674434661865
    6. '   ' → logprob: -4.629674434661865
    7. ' shift' → logprob: -5.504674434661865
    8. ' next' → logprob: -5.629674434661865
    9. 'output' → logprob: -6.004674434661865
    10. ' current' → logprob: -6.254674434661865

Token 62: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.004490292631089687
    2. '_value' → logprob: -5.879490375518799
    3. '_' → logprob: -7.129490375518799
    4. '_positions' → logprob: -7.629490375518799
    5. '_pos' → logprob: -8.00448989868164
    6. '_current' → logprob: -11.12948989868164
    7. '_index' → logprob: -11.62948989868164
    8. ' _' → logprob: -11.75448989868164
    9. '_shift' → logprob: -11.75448989868164
    10. '_output' → logprob: -12.25448989868164

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975570224225521
    2. '=' → logprob: -3.5297555923461914
    3. ' ' → logprob: -12.904755592346191
    4. '<|end|>' → logprob: -13.529755592346191
    5. ')' → logprob: -14.279755592346191
    6. 's' → logprob: -15.779755592346191
    7. '   ' → logprob: -16.154756546020508
    8. ' +=' → logprob: -16.279756546020508
    9. '```' → logprob: -16.529756546020508
    10. ' =)' → logprob: -16.654756546020508

Token 64: ' (' (ID: 350)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.5761151313781738
    2. ' (' → logprob: -0.8261151313781738
    3. '(' → logprob: -9.201114654541016
    4. 'current' → logprob: -10.451114654541016
    5. ' ' → logprob: -11.201114654541016
    6. ' current' → logprob: -11.576114654541016
    7. '   ' → logprob: -12.076114654541016
    8. '(character' → logprob: -12.576114654541016
    9. '(abs' → logprob: -13.576114654541016
    10. '[current' → logprob: -13.826114654541016

Token 65: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.006732303183525801
    2. ' current' → logprob: -5.00673246383667
    3. '   ' → logprob: -11.131731986999512
    4. '(current' → logprob: -13.881731986999512
    5. '	current' → logprob: -15.256731986999512
    6. 'shift' → logprob: -15.381731986999512
    7. ' ' → logprob: -15.756731986999512
    8. '$current' → logprob: -15.881731986999512
    9. 'cur' → logprob: -16.131732940673828
    10. '[current' → logprob: -16.506732940673828

Token 66: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -12.875005722045898
    3. 'position' → logprob: -13.000005722045898
    4. '_positions' → logprob: -14.875005722045898
    5. 'Position' → logprob: -15.250005722045898
    6. '_pos' → logprob: -16.3750057220459
    7. '_shift' → logprob: -16.7500057220459
    8. '_POSITION' → logprob: -17.0000057220459
    9. '_value' → logprob: -17.5000057220459
    10. ' _' → logprob: -17.7500057220459

Token 67: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692968547344208
    2. '+' → logprob: -2.126929759979248
    3. ' ' → logprob: -13.62692928314209
    4. ' plus' → logprob: -15.12692928314209
    5. ' ' → logprob: -16.751930236816406
    6. ' -' → logprob: -17.126930236816406
    7. ' +
' → logprob: -17.876930236816406
    8. ')' → logprob: -19.001930236816406
    9. ' +
' → logprob: -19.251930236816406
    10. ' shift' → logprob: -19.376930236816406

Token 68: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.10020796209573746
    2. 'shift' → logprob: -2.350208044052124
    3. ' ' → logprob: -14.475208282470703
    4. ')' → logprob: -15.225208282470703
    5. '.shift' → logprob: -16.475208282470703
    6. 'sh' → logprob: -16.600208282470703
    7. 'space' → logprob: -16.725208282470703
    8. ' ' → logprob: -16.850208282470703
    9. '    ' → logprob: -17.100208282470703
    10. '_shift' → logprob: -17.225208282470703

Token 69: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.0280383548888494e-06
    2. '_val' → logprob: -14.750000953674316
    3. ')_' → logprob: -15.000000953674316
    4. '_' → logprob: -16.125001907348633
    5. 'value' → logprob: -16.125001907348633
    6. ')' → logprob: -17.500001907348633
    7. ' _' → logprob: -18.125001907348633
    8. '_Value' → logprob: -19.125001907348633
    9. '_values' → logprob: -19.625001907348633
    10. '_shift' → logprob: -20.250001907348633

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.435139898210764e-05
    2. ')%' → logprob: -9.625083923339844
    3. ' )' → logprob: -11.000083923339844
    4. '%' → logprob: -13.625083923339844
    5. ')
' → logprob: -16.125083923339844
    6. '   ' → logprob: -16.750083923339844
    7. ')`' → logprob: -16.750083923339844
    8. ' ' → logprob: -17.500083923339844
    9. ')

' → logprob: -17.500083923339844
    10. '`)' → logprob: -17.875083923339844

Token 71: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.033737100660800934
    2. '%' → logprob: -3.4087371826171875
    3. ' ' → logprob: -9.908737182617188
    4. ')' → logprob: -10.283737182617188
    5. ')%' → logprob: -12.658737182617188
    6. '<|end|>' → logprob: -13.283737182617188
    7. ' ' → logprob: -13.658737182617188
    8. '   ' → logprob: -14.283737182617188
    9. ' )' → logprob: -15.658737182617188
    10. '```' → logprob: -15.783737182617188

Token 72: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. 'len' → logprob: -15.875626564025879
    4. '   ' → logprob: -17.500627517700195
    5. ' len' → logprob: -19.000627517700195
    6. '```' → logprob: -19.000627517700195
    7. '  ' → logprob: -19.625627517700195
    8. '    ' → logprob: -20.750627517700195
    9. '`' → logprob: -21.375627517700195
    10. ')' → logprob: -21.813127517700195

Token 73: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. 'len' → logprob: -14.750007629394531
    4. '   ' → logprob: -19.00000762939453
    5. '```' → logprob: -19.00000762939453
    6. ' len' → logprob: -19.37500762939453
    7. 'length' → logprob: -20.87500762939453
    8. '`' → logprob: -21.12500762939453
    9. '(len' → logprob: -21.25000762939453
    10. '  ' → logprob: -22.12500762939453

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003226910252124071
    2. 'output' → logprob: -6.3782267570495605
    3. '
' → logprob: -7.2532267570495605
    4. '    
' → logprob: -7.3782267570495605
    5. ' output' → logprob: -9.628227233886719
    6. ')' → logprob: -9.628227233886719
    7. '	output' → logprob: -11.003227233886719
    8. '```' → logprob: -11.503227233886719
    9. '       ' → logprob: -11.878227233886719
    10. '<|end|>' → logprob: -12.003227233886719

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028560364618897438
    2. 'output' → logprob: -3.6535604000091553
    3. ' output' → logprob: -7.028560161590576
    4. '    
' → logprob: -7.403560161590576
    5. '	output' → logprob: -8.528560638427734
    6. '
' → logprob: -8.653560638427734
    7. ' shifted' → logprob: -9.028560638427734
    8. '```' → logprob: -9.278560638427734
    9. 'shift' → logprob: -10.028560638427734
    10. '<|end|>' → logprob: -10.403560638427734

Token 76: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.20072442293167114
    2. '   ' → logprob: -1.8257243633270264
    3. ' output' → logprob: -3.9507243633270264
    4. 'shift' → logprob: -6.9507246017456055
    5. '	output' → logprob: -8.450724601745605
    6. ' shifted' → logprob: -8.450724601745605
    7. 'current' → logprob: -10.075724601745605
    8. 'character' → logprob: -10.200724601745605
    9. '```' → logprob: -11.950724601745605
    10. '    
' → logprob: -12.450724601745605

Token 77: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.8908587662735954e-05
    2. '_' → logprob: -11.875019073486328
    3. '_character' → logprob: -11.875019073486328
    4. 'string' → logprob: -13.000019073486328
    5. '_char' → logprob: -13.250019073486328
    6. 'String' → logprob: -15.875019073486328
    7. '_str' → logprob: -16.125019073486328
    8. '_strings' → logprob: -16.250019073486328
    9. '_s' → logprob: -16.250019073486328
    10. '_chars' → logprob: -16.625019073486328

Token 78: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1275249570608139
    2. ' +=' → logprob: -2.1275248527526855
    3. '+='' → logprob: -7.8775248527526855
    4. '+' → logprob: -8.502525329589844
    5. '+="' → logprob: -12.127525329589844
    6. ' +' → logprob: -12.252525329589844
    7. '+=(' → logprob: -13.127525329589844
    8. '=' → logprob: -13.502525329589844
    9. ']+=' → logprob: -14.377525329589844
    10. '.append' → logprob: -16.252525329589844

Token 79: ' alphabet' (ID: 47840)
  Prédit: 'alphabet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alphabet' → logprob: -0.0789414495229721
    2. ' alphabet' → logprob: -2.5789413452148438
    3. 'alph' → logprob: -10.703941345214844
    4. 'al' → logprob: -11.828941345214844
    5. 'chr' → logprob: -12.453941345214844
    6. ' alph' → logprob: -12.703941345214844
    7. 'alpha' → logprob: -12.953941345214844
    8. 'alp' → logprob: -13.078941345214844
    9. 'alb' → logprob: -13.203941345214844
    10. '   ' → logprob: -13.453941345214844

Token 80: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.246537173457909e-06
    2. 't' → logprob: -13.375003814697266
    3. 'ist' → logprob: -13.500003814697266
    4. 'list' → logprob: -14.000003814697266
    5. '_lst' → logprob: -16.125003814697266
    6. 'alist' → logprob: -16.250003814697266
    7. 'List' → logprob: -16.250003814697266
    8. '[_' → logprob: -16.750003814697266
    9. '```' → logprob: -17.125003814697266
    10. '_' → logprob: -17.375003814697266

Token 81: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. 'shift' → logprob: -17.625
    3. '```' → logprob: -17.875
    4. ' [' → logprob: -19.0
    5. '[
' → logprob: -19.875
    6. '[current' → logprob: -20.375
    7. '\[' → logprob: -20.375
    8. '[offset' → logprob: -20.625
    9. ' shifted' → logprob: -20.875
    10. '   ' → logprob: -21.0

Token 82: 'shift' (ID: 27472)
  Prédit: 'shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.00011272187111899257
    2. ' shifted' → logprob: -9.125112533569336
    3. '[' → logprob: -12.625112533569336
    4. ']' → logprob: -15.875112533569336
    5. '   ' → logprob: -16.625112533569336
    6. '```' → logprob: -16.750112533569336
    7. 'sh' → logprob: -17.125112533569336
    8. '_shift' → logprob: -17.250112533569336
    9. ' shift' → logprob: -17.625112533569336
    10. ')' → logprob: -18.250112533569336

Token 83: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.00013595925702247769
    2. '_position' → logprob: -9.375136375427246
    3. '_value' → logprob: -10.750136375427246
    4. '_pos' → logprob: -11.625136375427246
    5. 'ted' → logprob: -12.000136375427246
    6. 'e' → logprob: -12.000136375427246
    7. '_ed' → logprob: -13.000136375427246
    8. '_' → logprob: -13.250136375427246
    9. ' _' → logprob: -14.500136375427246
    10. 'd' → logprob: -14.750136375427246

Token 84: '_position' (ID: 23739)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.061031561344861984
    2. '_position' → logprob: -2.9360315799713135
    3. 'd' → logprob: -5.311031341552734
    4. 'position' → logprob: -8.186031341552734
    5. '_pos' → logprob: -8.186031341552734
    6. 'ted' → logprob: -8.311031341552734
    7. 'e' → logprob: -8.686031341552734
    8. 's' → logprob: -10.186031341552734
    9. 't' → logprob: -10.936031341552734
    10. '```' → logprob: -10.936031341552734

Token 85: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. ')
' → logprob: -11.750012397766113
    3. ']' → logprob: -12.625012397766113
    4. ' )' → logprob: -14.375012397766113
    5. '))' → logprob: -15.625012397766113
    6. '')' → logprob: -16.12501335144043
    7. ')

' → logprob: -16.37501335144043
    8. '```' → logprob: -16.50001335144043
    9. ')]' → logprob: -16.75001335144043
    10. '}' → logprob: -17.00001335144043

Token 86: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004137496289331466
    2. '#' → logprob: -8.87541389465332
    3. '<|end|>' → logprob: -8.87541389465332
    4. ' print' → logprob: -9.62541389465332
    5. '```' → logprob: -10.75041389465332
    6. '
' → logprob: -11.12541389465332
    7. '#print' → logprob: -11.50041389465332
    8. ')' → logprob: -11.75041389465332
    9. '(print' → logprob: -12.62541389465332
    10. '\n' → logprob: -13.12541389465332

Token 87: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029078897088766098
    2. '('' → logprob: -3.779078960418701
    3. '(output' → logprob: -5.404078960418701
    4. '("("' → logprob: -6.654078960418701
    5. '(input' → logprob: -11.654078483581543
    6. ''' → logprob: -12.654078483581543
    7. ' (' → logprob: -12.779078483581543
    8. '(
' → logprob: -13.154078483581543
    9. '(`' → logprob: -13.154078483581543
    10. '((' → logprob: -13.279078483581543

Token 88: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -2.3557529857498594e-05
    2. 'string' → logprob: -11.50002384185791
    3. '_' → logprob: -12.25002384185791
    4. '_str' → logprob: -12.25002384185791
    5. '_s' → logprob: -13.75002384185791
    6. ')_' → logprob: -14.37502384185791
    7. '_strings' → logprob: -14.50002384185791
    8. '```' → logprob: -14.62502384185791
    9. 'String' → logprob: -15.37502384185791
    10. '_text' → logprob: -15.50002384185791

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -15.500000953674316
    4. ')`' → logprob: -17.0
    5. ')
' → logprob: -18.0
    6. '')' → logprob: -18.625
    7. '(' → logprob: -18.75
    8. '`)' → logprob: -18.875
    9. '()' → logprob: -19.25
    10. ')}' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 87
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 71
Précision stricte (1ère position): 56.32%
Précision adaptée (1ère position): 57.47%
Précision (top 10): 81.61%
================================================================================
