================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from collections import Counter

input_string_length = int(input())
input_string = input()

modulo_value = 1000000007

substring_count = 1
character_counter = Counter()
character_counter[input_string[0]] += 1

for current_char in input_string[1:]:
    if current_char in character_counter:
        current_product = 1
        for counted_char, counted_count in character_counter.items():
            if counted_char == current_char:
                continue
            current_product = (current_product * (1 + counted_count)) % modulo_value
        substring_count = (substring_count + current_product) % modulo_value
        character_counter[current_char] += 1
    else:
        substring_count = (2 * substring_count) % modulo_value
        substring_count = (substring_count + 1) % modulo_value
        character_counter[current_char] += 1

print(substring_count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0006273718317970634
    2. 'os' → logprob: -7.375627517700195
    3. ' re' → logprob: -15.375627517700195
    4. ' math' → logprob: -15.500627517700195
    5. '_os' → logprob: -15.750627517700195
    6. '"os' → logprob: -15.875627517700195
    7. ' json' → logprob: -16.250627517700195
    8. '	os' → logprob: -17.250627517700195
    9. ' ' → logprob: -18.125627517700195
    10. ' argparse' → logprob: -18.125627517700195

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04753120616078377
    2. '\n' → logprob: -4.1725311279296875
    3. '\' → logprob: -4.5475311279296875
    4. 'import' → logprob: -4.6725311279296875
    5. '
' → logprob: -5.6725311279296875
    6. '```' → logprob: -6.2975311279296875
    7. '

' → logprob: -6.6725311279296875
    8. ',' → logprob: -6.9225311279296875
    9. '<|end|>' → logprob: -6.9225311279296875
    10. '.
' → logprob: -7.4225311279296875

Token 6: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8251055479049683
    2. '\n' → logprob: -1.3251055479049683
    3. '
' → logprob: -2.200105667114258
    4. '.' → logprob: -2.700105667114258
    5. '\' → logprob: -3.325105667114258
    6. '```' → logprob: -3.325105667114258
    7. '

' → logprob: -3.825105667114258
    8. '<|end|>' → logprob: -5.325105667114258
    9. '' → logprob: -5.450105667114258
    10. ',' → logprob: -5.450105667114258

Token 7: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.28010454773902893
    2. ' os' → logprob: -1.5301045179367065
    3. 'collections' → logprob: -4.780104637145996
    4. ' datetime' → logprob: -4.905104637145996
    5. ' itertools' → logprob: -5.780104637145996
    6. ' random' → logprob: -6.155104637145996
    7. 'os' → logprob: -6.530104637145996
    8. ' typing' → logprob: -6.655104637145996
    9. ' math' → logprob: -6.905104637145996
    10. ' numpy' → logprob: -7.280104637145996

Token 8: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4421836733818054
    2. ' import' → logprob: -1.1921837329864502
    3. '.' → logprob: -2.94218373298645
    4. ' ' → logprob: -7.942183494567871
    5. '<|end|>' → logprob: -7.942183494567871
    6. '.import' → logprob: -9.692183494567871
    7. '.Counter' → logprob: -9.942183494567871
    8. '_' → logprob: -9.942183494567871
    9. '```' → logprob: -10.442183494567871
    10. ' defaultdict' → logprob: -10.567183494567871

Token 9: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2956232726573944
    2. ' deque' → logprob: -1.6706233024597168
    3. 'deque' → logprob: -3.170623302459717
    4. ' abc' → logprob: -3.795623302459717
    5. 'abc' → logprob: -6.170623302459717
    6. ' Counter' → logprob: -7.920623302459717
    7. ' named' → logprob: -8.045622825622559
    8. 'default' → logprob: -8.545622825622559
    9. 'named' → logprob: -9.170622825622559
    10. 'Counter' → logprob: -9.295622825622559

Token 10: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7859470844268799
    2. 'import' → logprob: -0.9109470844268799
    3. ',' → logprob: -3.03594708442688
    4. '\' → logprob: -3.28594708442688
    5. '<|end|>' → logprob: -4.285946846008301
    6. '.' → logprob: -4.535946846008301
    7. '```' → logprob: -5.035946846008301
    8. '
' → logprob: -5.035946846008301
    9. 'newline' → logprob: -5.660946846008301
    10. '<|end|>' → logprob: -6.035946846008301

Token 11: 'input' (ID: 2586)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5066737532615662
    2. 'def' → logprob: -1.381673812866211
    3. '```' → logprob: -3.256673812866211
    4. '\' → logprob: -3.631673812866211
    5. '\n' → logprob: -3.756673812866211
    6. ',' → logprob: -3.756673812866211
    7. '`' → logprob: -5.006673812866211
    8. '#' → logprob: -5.256673812866211
    9. '.' → logprob: -5.256673812866211
    10. '
' → logprob: -5.506673812866211

Token 12: '_string' (ID: 8609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030941737350076437
    2. '.' → logprob: -6.00309419631958
    3. '()' → logprob: -8.128093719482422
    4. ' (' → logprob: -8.878093719482422
    5. ')' → logprob: -9.753093719482422
    6. '```' → logprob: -10.503093719482422
    7. '(
' → logprob: -11.128093719482422
    8. '=' → logprob: -11.503093719482422
    9. '_' → logprob: -11.503093719482422
    10. ',' → logprob: -11.503093719482422

Token 13: '_length' (ID: 11514)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5463087558746338
    2. '.' → logprob: -1.2963087558746338
    3. '[' → logprob: -2.421308755874634
    4. '=' → logprob: -3.296308755874634
    5. ' =' → logprob: -4.796308517456055
    6. ')' → logprob: -5.046308517456055
    7. '_' → logprob: -6.171308517456055
    8. ',' → logprob: -7.046308517456055
    9. ' (' → logprob: -7.296308517456055
    10. ''' → logprob: -7.546308517456055

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07402081787586212
    2. '_' → logprob: -3.3240208625793457
    3. '=' → logprob: -3.6990208625793457
    4. ' =' → logprob: -5.199020862579346
    5. ' (' → logprob: -6.074020862579346
    6. ')' → logprob: -6.574020862579346
    7. ' ' → logprob: -7.949020862579346
    8. '.' → logprob: -8.324020385742188
    9. '[' → logprob: -8.949020385742188
    10. 's' → logprob: -9.074020385742188

Token 15: ' int' (ID: 677)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6832560300827026
    2. ' int' → logprob: -1.0582560300827026
    3. ' ' → logprob: -2.433256149291992
    4. 'len' → logprob: -3.683256149291992
    5. 'int' → logprob: -4.058256149291992
    6. '0' → logprob: -4.183256149291992
    7. '10' → logprob: -6.683256149291992
    8. '20' → logprob: -7.808256149291992
    9. ' input' → logprob: -7.933256149291992
    10. '(len' → logprob: -9.808256149291992

Token 16: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001276426832191646
    2. ' (' → logprob: -7.75127649307251
    3. '(input' → logprob: -7.87627649307251
    4. ' ' → logprob: -8.751276016235352
    5. '('' → logprob: -9.376276016235352
    6. '()' → logprob: -9.876276016235352
    7. '(space' → logprob: -10.001276016235352
    8. '```' → logprob: -10.251276016235352
    9. '(sys' → logprob: -11.001276016235352
    10. '<|end|>' → logprob: -11.251276016235352

Token 17: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3467310965061188
    2. '()' → logprob: -1.7217310667037964
    3. ')' → logprob: -2.221731185913086
    4. '())' → logprob: -5.221731185913086
    5. '('' → logprob: -8.471731185913086
    6. '(
' → logprob: -9.846731185913086
    7. ' ' → logprob: -10.346731185913086
    8. ' )' → logprob: -10.596731185913086
    9. '(

' → logprob: -10.721731185913086
    10. '[' → logprob: -11.596731185913086

Token 18: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.010894659906625748
    2. 's' → logprob: -6.010894775390625
    3. 'string' → logprob: -6.135894775390625
    4. ')' → logprob: -6.260894775390625
    5. 'data' → logprob: -6.885894775390625
    6. 'for' → logprob: -7.510894775390625
    7. 'count' → logprob: -7.635894775390625
    8. 'result' → logprob: -8.135894775390625
    9. 'text' → logprob: -8.510894775390625
    10. 'if' → logprob: -8.760894775390625

Token 19: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.39833933115005493
    2. '_' → logprob: -1.6483392715454102
    3. '(' → logprob: -2.27333927154541
    4. '```' → logprob: -4.39833927154541
    5. '()' → logprob: -5.14833927154541
    6. '("_' → logprob: -5.39833927154541
    7. '('_' → logprob: -5.89833927154541
    8. '_str' → logprob: -6.39833927154541
    9. 'string' → logprob: -6.89833927154541
    10. '_strings' → logprob: -7.14833927154541

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3501736521720886
    2. '=' → logprob: -1.6001737117767334
    3. '_' → logprob: -2.9751737117767334
    4. '.' → logprob: -4.350173473358154
    5. '_length' → logprob: -4.350173473358154
    6. '[:]' → logprob: -5.350173473358154
    7. '[' → logprob: -5.475173473358154
    8. '()' → logprob: -5.600173473358154
    9. '_len' → logprob: -6.600173473358154
    10. ' ' → logprob: -7.100173473358154

Token 21: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.006109266541898251
    2. 'input' → logprob: -5.131109237670898
    3. ' ' → logprob: -8.631109237670898
    4. ' ' → logprob: -14.256109237670898
    5. '	input' → logprob: -14.631109237670898
    6. '=input' → logprob: -15.381109237670898
    7. ' sys' → logprob: -15.631109237670898
    8. '(input' → logprob: -15.631109237670898
    9. ' str' → logprob: -15.881109237670898
    10. ' '' → logprob: -16.1311092376709

Token 22: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023753171786665916
    2. '()' → logprob: -4.0237531661987305
    3. '```' → logprob: -6.5237531661987305
    4. '('' → logprob: -6.6487531661987305
    5. ''' → logprob: -7.0237531661987305
    6. ' ' → logprob: -7.3987531661987305
    7. ' (' → logprob: -8.52375316619873
    8. '_' → logprob: -8.64875316619873
    9. '("("' → logprob: -8.64875316619873
    10. '"' → logprob: -8.77375316619873

Token 23: 'mod' (ID: 4847)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8154914975166321
    2. 'counter' → logprob: -1.3154914379119873
    3. 'result' → logprob: -2.4404914379119873
    4. 'count' → logprob: -2.5654914379119873
    5. 'frequency' → logprob: -3.6904914379119873
    6. 'tokens' → logprob: -4.315491676330566
    7. '\n' → logprob: -4.440491676330566
    8. 'c' → logprob: -4.565491676330566
    9. 'n' → logprob: -4.565491676330566
    10. 'length' → logprob: -4.940491676330566

Token 24: 'ulo' (ID: 5953)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1362675428390503
    2. '=' → logprob: -2.13626766204834
    3. ' ' → logprob: -5.01126766204834
    4. '_' → logprob: -6.01126766204834
    5. '  ' → logprob: -10.26126766204834
    6. 'ulus' → logprob: -10.26126766204834
    7. ' _' → logprob: -10.38626766204834
    8. '   ' → logprob: -11.76126766204834
    9. '_mod' → logprob: -12.01126766204834
    10. 'ul' → logprob: -12.26126766204834

Token 25: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4639533460140228
    2. '_' → logprob: -1.3389533758163452
    3. ' ' → logprob: -2.7139532566070557
    4. '=' → logprob: -3.2139532566070557
    5. ' _' → logprob: -6.588953495025635
    6. ')' → logprob: -8.338953018188477
    7. '(' → logprob: -8.588953018188477
    8. '_space' → logprob: -8.588953018188477
    9. 's' → logprob: -9.213953018188477
    10. '  ' → logprob: -9.463953018188477

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005424669478088617
    2. '=' → logprob: -5.255424499511719
    3. ' ' → logprob: -9.005424499511719
    4. '_' → logprob: -9.630424499511719
    5. ' =)' → logprob: -14.755424499511719
    6. ' =
' → logprob: -15.130424499511719
    7. 's' → logprob: -15.255424499511719
    8. '_space' → logprob: -15.380424499511719
    9. ' _' → logprob: -15.755424499511719
    10. ',' → logprob: -15.880424499511719

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1297977864742279
    2. '10' → logprob: -2.6297976970672607
    3. '100' → logprob: -3.0047976970672607
    4. '1' → logprob: -9.87979793548584
    5. '998' → logprob: -10.87979793548584
    6. ' (' → logprob: -11.75479793548584
    7. '109' → logprob: -13.87979793548584
    8. 'pow' → logprob: -14.00479793548584
    9. '2' → logprob: -14.12979793548584
    10. '101' → logprob: -14.12979793548584

Token 28: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.14350084960460663
    2. '100' → logprob: -2.018500804901123
    3. '998' → logprob: -7.268500804901123
    4. '1' → logprob: -9.518501281738281
    5. ' ' → logprob: -10.643501281738281
    6. '(' → logprob: -11.143501281738281
    7. '2' → logprob: -12.393501281738281
    8. 'int' → logprob: -12.518501281738281
    9. 'pow' → logprob: -12.643501281738281
    10. '101' → logprob: -13.768501281738281

Token 29: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.12867888808250427
    2. '9' → logprob: -2.128678798675537
    3. '0' → logprob: -6.878678798675537
    4. '09' → logprob: -8.378679275512695
    5. '00' → logprob: -8.878679275512695
    6. '```' → logprob: -9.628679275512695
    7. '009' → logprob: -9.753679275512695
    8. '007' → logprob: -9.878679275512695
    9. ' ' → logprob: -10.378679275512695
    10. '003' → logprob: -10.378679275512695

Token 30: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.003090370213612914
    2. '0' → logprob: -6.8780903816223145
    3. '19' → logprob: -6.8780903816223145
    4. '7' → logprob: -7.7530903816223145
    5. '007' → logprob: -7.7530903816223145
    6. '+' → logprob: -9.628089904785156
    7. '3' → logprob: -9.878089904785156
    8. '```' → logprob: -11.378089904785156
    9. '9' → logprob: -11.503089904785156
    10. ' ' → logprob: -12.003089904785156

Token 31: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -8.304016228066757e-05
    2. '07' → logprob: -9.500082969665527
    3. '+' → logprob: -12.375082969665527
    4. '9' → logprob: -13.375082969665527
    5. '007' → logprob: -13.875082969665527
    6. ' ' → logprob: -14.250082969665527
    7. '0' → logprob: -14.750082969665527
    8. '```' → logprob: -15.375082969665527
    9. '19' → logprob: -17.500083923339844
    10. '000' → logprob: -18.062583923339844

Token 32: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07907683402299881
    2. 'n' → logprob: -3.3290767669677734
    3. '\n' → logprob: -3.9540767669677734
    4. ' 
' → logprob: -5.079076766967773
    5. '\' → logprob: -5.704076766967773
    6. 'a' → logprob: -6.079076766967773
    7. '<|end|>' → logprob: -6.079076766967773
    8. 'result' → logprob: -6.204076766967773
    9. '#' → logprob: -7.079076766967773
    10. '

' → logprob: -7.329076766967773

Token 33: 'substring' (ID: 61719)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.4454774558544159
    2. 'frequency' → logprob: -2.3204774856567383
    3. 'freq' → logprob: -2.8204774856567383
    4. 'character' → logprob: -3.1954774856567383
    5. 'factor' → logprob: -3.1954774856567383
    6. 'counter' → logprob: -3.3204774856567383
    7. 'result' → logprob: -3.4454774856567383
    8. 'count' → logprob: -4.320477485656738
    9. 'def' → logprob: -4.945477485656738
    10. 'dp' → logprob: -5.070477485656738

Token 34: '_count' (ID: 7536)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.31845930218696594
    2. '_s' → logprob: -2.5684592723846436
    3. '_count' → logprob: -2.6934592723846436
    4. 's' → logprob: -2.8184592723846436
    5. '_' → logprob: -3.0684592723846436
    6. '_counter' → logprob: -4.068459510803223
    7. '_lengths' → logprob: -5.943459510803223
    8. '_length' → logprob: -6.693459510803223
    9. '_len' → logprob: -8.193459510803223
    10. '_c' → logprob: -8.818459510803223

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.554882287979126
    2. 's' → logprob: -0.929882287979126
    3. '=' → logprob: -3.554882287979126
    4. '_' → logprob: -6.304882049560547
    5. ' ' → logprob: -7.679882049560547
    6. '(' → logprob: -8.429882049560547
    7. '_s' → logprob: -9.679882049560547
    8. '[' → logprob: -9.804882049560547
    9. '_counts' → logprob: -11.429882049560547
    10. '(s' → logprob: -12.179882049560547

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8882898092269897
    2. ' Counter' → logprob: -1.2632898092269897
    3. '0' → logprob: -1.7632898092269897
    4. ' {}' → logprob: -2.3882899284362793
    5. 'Counter' → logprob: -4.263289928436279
    6. ' [' → logprob: -4.263289928436279
    7. '{}' → logprob: -4.888289928436279
    8. ' len' → logprob: -6.138289928436279
    9. ' defaultdict' → logprob: -6.513289928436279
    10. '1' → logprob: -7.013289928436279

Token 37: '1' (ID: 16)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.45554086565971375
    2. '0' → logprob: -1.5805408954620361
    3. '{}' → logprob: -2.205540895462036
    4. '[' → logprob: -3.580540895462036
    5. 'len' → logprob: -4.955540657043457
    6. 'default' → logprob: -4.955540657043457
    7. '{' → logprob: -5.830540657043457
    8. '1' → logprob: -5.955540657043457
    9. ' Counter' → logprob: -7.330540657043457
    10. '[len' → logprob: -7.705540657043457

Token 38: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7683644890785217
    2. '+' → logprob: -1.393364429473877
    3. '0' → logprob: -2.393364429473877
    4. '
' → logprob: -2.518364429473877
    5. '<|end|>' → logprob: -3.518364429473877
    6. 'for' → logprob: -3.643364429473877
    7. '#' → logprob: -3.893364429473877
    8. '*' → logprob: -4.143364429473877
    9. ' *' → logprob: -5.393364429473877
    10. ' 
' → logprob: -5.393364429473877

Token 39: 'character' (ID: 38245)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07540394365787506
    2. ' for' → logprob: -3.325403928756714
    3. '_' → logprob: -4.700404167175293
    4. '=' → logprob: -5.325404167175293
    5. '*' → logprob: -5.700404167175293
    6. ' ' → logprob: -5.950404167175293
    7. '
' → logprob: -6.075404167175293
    8. 's' → logprob: -6.325404167175293
    9. ' *' → logprob: -6.450404167175293
    10. 'f' → logprob: -6.575404167175293

Token 40: '_counter' (ID: 35419)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.7325062155723572
    2. '_counter' → logprob: -1.482506275177002
    3. '_count' → logprob: -1.732506275177002
    4. 's' → logprob: -2.232506275177002
    5. '_frequency' → logprob: -5.857506275177002
    6. '_' → logprob: -6.107506275177002
    7. '_f' → logprob: -6.482506275177002
    8. '_freq' → logprob: -6.982506275177002
    9. '_s' → logprob: -8.607505798339844
    10. '_index' → logprob: -9.482505798339844

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2528741657733917
    2. '=' → logprob: -1.5028741359710693
    3. '[' → logprob: -8.127874374389648
    4. ' ' → logprob: -8.377874374389648
    5. 's' → logprob: -8.502874374389648
    6. '.' → logprob: -8.627874374389648
    7. '  ' → logprob: -10.877874374389648
    8. ')' → logprob: -13.127874374389648
    9. '<|end|>' → logprob: -13.252874374389648
    10. '[:]' → logprob: -13.377874374389648

Token 42: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.07895148545503616
    2. 'Counter' → logprob: -2.578951597213745
    3. '.Counter' → logprob: -10.953951835632324
    4. ' ' → logprob: -11.078951835632324
    5. ' counter' → logprob: -11.578951835632324
    6. ' ' → logprob: -11.953951835632324
    7. ' defaultdict' → logprob: -12.453951835632324
    8. 'counter' → logprob: -13.453951835632324
    9. ' Coun' → logprob: -13.766451835632324
    10. '_counter' → logprob: -13.891451835632324

Token 43: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25574925541877747
    2. '(input' → logprob: -1.505749225616455
    3. '()' → logprob: -5.630749225616455
    4. '(user' → logprob: -9.880749702453613
    5. ' (' → logprob: -10.255749702453613
    6. '('' → logprob: -10.505749702453613
    7. '(
' → logprob: -10.880749702453613
    8. '(import' → logprob: -11.255749702453613
    9. '(open' → logprob: -11.255749702453613
    10. '(sub' → logprob: -12.005749702453613

Token 44: 'character' (ID: 38245)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.00829599890857935
    2. '_' → logprob: -5.133296012878418
    3. 's' → logprob: -7.133296012878418
    4. '_count' → logprob: -7.258296012878418
    5. ' =' → logprob: -7.758296012878418
    6. '=' → logprob: -8.758296012878418
    7. '_counts' → logprob: -10.008296012878418
    8. 'Counter' → logprob: -10.133296012878418
    9. '_s' → logprob: -10.383296012878418
    10. '```' → logprob: -10.383296012878418

Token 46: '[input' (ID: 157156)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04412708804011345
    2. '.' → logprob: -4.169126987457275
    3. '.update' → logprob: -4.294126987457275
    4. '['' → logprob: -5.169126987457275
    5. '[input' → logprob: -5.169126987457275
    6. '[]' → logprob: -7.544126987457275
    7. '<|end|>' → logprob: -7.919126987457275
    8. '[token' → logprob: -8.294127464294434
    9. '[
' → logprob: -8.544127464294434
    10. '.setdefault' → logprob: -8.544127464294434

Token 47: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -5.180879816180095e-05
    2. '_' → logprob: -10.125051498413086
    3. '_character' → logprob: -12.250051498413086
    4. '_char' → logprob: -12.625051498413086
    5. 'string' → logprob: -12.750051498413086
    6. '_str' → logprob: -14.875051498413086
    7. 'String' → logprob: -16.375051498413086
    8. '_s' → logprob: -16.375051498413086
    9. '```' → logprob: -16.375051498413086
    10. ' _' → logprob: -17.500051498413086

Token 48: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011325203813612461
    2. ']' → logprob: -4.511325359344482
    3. '[input' → logprob: -9.886324882507324
    4. '[
' → logprob: -10.011324882507324
    5. '[i' → logprob: -10.261324882507324
    6. ')]' → logprob: -10.386324882507324
    7. '[]' → logprob: -10.511324882507324
    8. '[-' → logprob: -10.511324882507324
    9. '[len' → logprob: -11.636324882507324
    10. ']+=' → logprob: -12.011324882507324

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001957179047167301
    2. ' ' → logprob: -6.251957416534424
    3. 'substring' → logprob: -11.001956939697266
    4. ' substring' → logprob: -12.751956939697266
    5. '-' → logprob: -13.001956939697266
    6. '[' → logprob: -13.501956939697266
    7. '   ' → logprob: -14.126956939697266
    8. ']' → logprob: -14.314456939697266
    9. '1' → logprob: -14.501956939697266
    10. ' -' → logprob: -15.001956939697266

Token 50: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.07953845709562302
    2. ']' → logprob: -2.579538345336914
    3. ' ]]' → logprob: -7.954538345336914
    4. '']]' → logprob: -8.704538345336914
    5. ' ]' → logprob: -10.204538345336914
    6. ')]' → logprob: -10.329538345336914
    7. ']]]' → logprob: -10.704538345336914
    8. '"]]' → logprob: -11.079538345336914
    9. ']+' → logprob: -12.079538345336914
    10. ']]=' → logprob: -12.079538345336914

Token 51: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.13377214968204498
    2. '+=' → logprob: -2.133772134780884
    3. '=' → logprob: -5.383772373199463
    4. ' =' → logprob: -6.133772373199463
    5. '+' → logprob: -10.258771896362305
    6. ' ' → logprob: -11.383771896362305
    7. ' +' → logprob: -12.133771896362305
    8. ']+=' → logprob: -12.133771896362305
    9. '<|end|>' → logprob: -13.758771896362305
    10. '```' → logprob: -14.258771896362305

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043126524542458355
    2. ' ' → logprob: -7.750431060791016
    3. '<|end|>' → logprob: -14.750431060791016
    4. '```' → logprob: -16.562931060791016
    5. '  ' → logprob: -17.000431060791016
    6. '۱' → logprob: -17.250431060791016
    7. '   ' → logprob: -17.312931060791016
    8. '+' → logprob: -17.937931060791016
    9. '2' → logprob: -18.312931060791016
    10. '<|end|>' → logprob: -18.437931060791016

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. 'substring' → logprob: -16.250017166137695
    4. '```' → logprob: -17.250017166137695
    5. '   ' → logprob: -17.625017166137695
    6. '<|end|>' → logprob: -18.250017166137695
    7. '
' → logprob: -18.937517166137695
    8. 'sub' → logprob: -19.000017166137695
    9. '  ' → logprob: -19.125017166137695
    10. '۱' → logprob: -19.187517166137695

Token 54: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8243207931518555
    2. '\n' → logprob: -1.0743207931518555
    3. '
' → logprob: -1.8243207931518555
    4. ' for' → logprob: -2.9493207931518555
    5. '\' → logprob: -5.9493207931518555
    6. ' 
' → logprob: -6.6993207931518555
    7. '<|end|>' → logprob: -6.9493207931518555
    8. '```' → logprob: -8.199320793151855
    9. ' ' → logprob: -8.574320793151855
    10. 'i' → logprob: -9.199320793151855

Token 56: ' current' (ID: 2208)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04369550943374634
    2. ' ' → logprob: -3.5436954498291016
    3. ' _' → logprob: -4.418695449829102
    4. 'i' → logprob: -7.418695449829102
    5. ' c' → logprob: -7.543695449829102
    6. ' char' → logprob: -7.918695449829102
    7. '_' → logprob: -9.043695449829102
    8. ' index' → logprob: -9.543695449829102
    9. ' idx' → logprob: -10.168695449829102
    10. 'c' → logprob: -10.793695449829102

Token 57: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.39885324239730835
    2. ' in' → logprob: -2.148853302001953
    3. '_index' → logprob: -2.648853302001953
    4. '_character' → logprob: -2.648853302001953
    5. '_' → logprob: -3.023853302001953
    6. ' _' → logprob: -3.898853302001953
    7. '_token' → logprob: -7.148853302001953
    8. '_idx' → logprob: -7.523853302001953
    9. ' char' → logprob: -9.148853302001953
    10. 'char' → logprob: -9.523853302001953

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005352936219424009
    2. 'in' → logprob: -5.255352973937988
    3. ' ' → logprob: -9.255352973937988
    4. 's' → logprob: -12.130352973937988
    5. '_in' → logprob: -12.755352973937988
    6. '_index' → logprob: -13.005352973937988
    7. '_' → logprob: -13.505352973937988
    8. ',' → logprob: -13.505352973937988
    9. '	in' → logprob: -13.505352973937988
    10. '  ' → logprob: -13.630352973937988

Token 59: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.006659011822193861
    2. 'input' → logprob: -5.506659030914307
    3. ' ' → logprob: -6.006659030914307
    4. ' range' → logprob: -9.256658554077148
    5. '(input' → logprob: -12.131658554077148
    6. '[input' → logprob: -13.006658554077148
    7. 'range' → logprob: -13.381658554077148
    8. '  ' → logprob: -13.381658554077148
    9. '	input' → logprob: -13.881658554077148
    10. '<input' → logprob: -14.006658554077148

Token 60: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.4021237802808173e-05
    2. 'string' → logprob: -11.500014305114746
    3. '_' → logprob: -13.125014305114746
    4. 'String' → logprob: -14.250014305114746
    5. '_char' → logprob: -15.125014305114746
    6. '_str' → logprob: -15.250014305114746
    7. '```' → logprob: -15.750014305114746
    8. '_STRING' → logprob: -16.12501335144043
    9. '_String' → logprob: -16.25001335144043
    10. '_strings' → logprob: -16.75001335144043

Token 61: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020689958706498146
    2. '[' → logprob: -3.8956899642944336
    3. '[:]' → logprob: -10.020689964294434
    4. ' :' → logprob: -10.270689964294434
    5. ':
' → logprob: -10.270689964294434
    6. '[:' → logprob: -10.520689964294434
    7. '[:-' → logprob: -12.770689964294434
    8. ':**' → logprob: -13.270689964294434
    9. '```' → logprob: -14.770689964294434
    10. '):' → logprob: -15.395689964294434

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006229649879969656
    2. ':' → logprob: -7.875622749328613
    3. ' ' → logprob: -9.250622749328613
    4. ']:' → logprob: -9.500622749328613
    5. '):' → logprob: -9.875622749328613
    6. '[' → logprob: -11.500622749328613
    7. '```' → logprob: -13.000622749328613
    8. ']):' → logprob: -14.000622749328613
    9. ' :' → logprob: -14.000622749328613
    10. ':]' → logprob: -14.000622749328613

Token 63: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04412367194890976
    2. ']:' → logprob: -3.169123649597168
    3. ' :' → logprob: -6.919123649597168
    4. ':]' → logprob: -9.544123649597168
    5. '():' → logprob: -10.794123649597168
    6. '):' → logprob: -11.419123649597168
    7. ']:
' → logprob: -12.044123649597168
    8. ' :]' → logprob: -12.294123649597168
    9. '>:' → logprob: -12.544123649597168
    10. ':],' → logprob: -12.669123649597168

Token 64: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.43439534306526184
    2. ':' → logprob: -1.0593953132629395
    3. '):' → logprob: -5.3093953132629395
    4. ']:
' → logprob: -8.059395790100098
    5. ']' → logprob: -8.684395790100098
    6. ' :' → logprob: -9.559395790100098
    7. ':
' → logprob: -9.934395790100098
    8. '):
' → logprob: -10.684395790100098
    9. ':]' → logprob: -10.684395790100098
    10. '}:' → logprob: -10.934395790100098

Token 65: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39211687445640564
    2. ' 
' → logprob: -1.392116904258728
    3. ' if' → logprob: -3.0171167850494385
    4. '<|end|>' → logprob: -4.642117023468018
    5. '   ' → logprob: -5.017117023468018
    6. '    
' → logprob: -5.767117023468018
    7. '```' → logprob: -6.017117023468018
    8. '    ' → logprob: -6.642117023468018
    9. '     
' → logprob: -6.767117023468018
    10. ' 

' → logprob: -8.01711654663086

Token 66: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.171519473195076
    2. ' ' → logprob: -2.6715195178985596
    3. '```' → logprob: -3.1715195178985596
    4. 'if' (adapté à ' if') → logprob: -3.6715195178985596
    5. ' ```' → logprob: -4.1715192794799805
    6. 'i' → logprob: -6.4215192794799805
    7. ' 
' → logprob: -6.7965192794799805
    8. ' i' → logprob: -7.5465192794799805
    9. 's' → logprob: -8.04651927947998
    10. ' ' → logprob: -8.04651927947998

Token 67: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5898894667625427
    2. ' character' → logprob: -0.8398894667625427
    3. 'character' → logprob: -4.7148895263671875
    4. 'current' → logprob: -5.3398895263671875
    5. ' not' → logprob: -9.839889526367188
    6. ' input' → logprob: -11.089889526367188
    7. ' ' → logprob: -11.339889526367188
    8. ' ' → logprob: -12.214889526367188
    9. ' char' → logprob: -12.964889526367188
    10. '(character' → logprob: -13.464889526367188

Token 68: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00022678142704535276
    2. '_' → logprob: -8.875226974487305
    3. 'char' → logprob: -9.875226974487305
    4. '_string' → logprob: -11.250226974487305
    5. 'Char' → logprob: -12.375226974487305
    6. ' _' → logprob: -12.625226974487305
    7. '_chars' → logprob: -12.875226974487305
    8. '_counter' → logprob: -13.250226974487305
    9. '_str' → logprob: -13.500226974487305
    10. '_token' → logprob: -13.625226974487305

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6377610564231873
    2. ' not' → logprob: -0.7627610564231873
    3. 'in' → logprob: -5.762761116027832
    4. 'not' → logprob: -6.637761116027832
    5. ' ' → logprob: -7.387761116027832
    6. '   ' → logprob: -10.950261116027832
    7. '  ' → logprob: -12.075261116027832
    8. ' is' → logprob: -12.075261116027832
    9. ' i' → logprob: -12.075261116027832
    10. ' no' → logprob: -12.325261116027832

Token 70: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.20142494142055511
    2. 'character' → logprob: -1.7014249563217163
    3. '(character' → logprob: -11.826424598693848
    4. 'Character' → logprob: -13.451424598693848
    5. '_character' → logprob: -14.076424598693848
    6. '<Character' → logprob: -14.576424598693848
    7. '.character' → logprob: -14.576424598693848
    8. ' ' → logprob: -14.701424598693848
    9. ' ' → logprob: -14.951424598693848
    10. '   ' → logprob: -16.576425552368164

Token 71: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -14.250001907348633
    3. 'counter' → logprob: -14.625001907348633
    4. 's' → logprob: -15.375001907348633
    5. '```' → logprob: -15.375001907348633
    6. '_count' → logprob: -15.500001907348633
    7. ' _' → logprob: -16.000001907348633
    8. '_c' → logprob: -16.375001907348633
    9. '_character' → logprob: -17.000001907348633
    10. '_to' → logprob: -17.000001907348633

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05969018489122391
    2. ' and' → logprob: -2.934690237045288
    3. 'and' → logprob: -6.559689998626709
    4. '.keys' → logprob: -6.559689998626709
    5. ' :' → logprob: -6.934689998626709
    6. '<|end|>' → logprob: -8.184690475463867
    7. ':
' → logprob: -8.309690475463867
    8. ' or' → logprob: -8.559690475463867
    9. '<|end|>' → logprob: -9.684690475463867
    10. '.' → logprob: -10.059690475463867

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09055911749601364
    2. '   ' → logprob: -3.8405590057373047
    3. '+' → logprob: -4.340559005737305
    4. '    ' → logprob: -4.840559005737305
    5. ' +' → logprob: -4.840559005737305
    6. ',' → logprob: -5.090559005737305
    7. ':' → logprob: -5.465559005737305
    8. '<|end|>' → logprob: -5.465559005737305
    9. 'substring' → logprob: -5.590559005737305
    10. '        
' → logprob: -5.590559005737305

Token 74: ' current' (ID: 2208)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.2264544516801834
    2. ' substring' → logprob: -1.601454496383667
    3. 'character' → logprob: -7.726454257965088
    4. '
' → logprob: -8.351454734802246
    5. ' character' → logprob: -8.851454734802246
    6. '   ' → logprob: -9.101454734802246
    7. '```' → logprob: -9.976454734802246
    8. '	sub' → logprob: -11.476454734802246
    9. 'Substring' → logprob: -11.601454734802246
    10. 'substr' → logprob: -11.726454734802246

Token 75: '_product' (ID: 21247)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.013075288385152817
    2. '_count' → logprob: -5.388075351715088
    3. '_counter' → logprob: -5.888075351715088
    4. '_' → logprob: -6.013075351715088
    5. '_token' → logprob: -6.388075351715088
    6. '_string' → logprob: -6.763075351715088
    7. '_character' → logprob: -9.13807487487793
    8. '_sub' → logprob: -10.13807487487793
    9. 'char' → logprob: -10.38807487487793
    10. '_chars' → logprob: -10.63807487487793

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11610491573810577
    2. '=' → logprob: -2.2411048412323
    3. ' *=' → logprob: -5.991105079650879
    4. 's' → logprob: -7.491105079650879
    5. '*=' → logprob: -8.991105079650879
    6. ' ' → logprob: -9.741105079650879
    7. '   ' → logprob: -11.616105079650879
    8. '```' → logprob: -12.241105079650879
    9. '*' → logprob: -12.491105079650879
    10. ' *' → logprob: -13.241105079650879

Token 77: ' ' (ID: 220)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'substring' → logprob: -1.0710142850875854
    2. ' substring' → logprob: -1.1960142850875854
    3. ' (' → logprob: -1.5710142850875854
    4. '(sub' → logprob: -1.9460142850875854
    5. '(' → logprob: -6.071014404296875
    6. 'sub' → logprob: -7.571014404296875
    7. 'substr' → logprob: -8.071014404296875
    8. '(mod' → logprob: -8.196014404296875
    9. '(substr' → logprob: -8.321014404296875
    10. 'Substring' → logprob: -9.508514404296875

Token 78: '1' (ID: 16)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.17251986265182495
    2. '(sub' → logprob: -2.5475199222564697
    3. ' substring' → logprob: -2.6725199222564697
    4. ' (' → logprob: -4.672519683837891
    5. '(' → logprob: -7.672519683837891
    6. '(mod' → logprob: -7.797519683837891
    7. 'sub' → logprob: -8.54751968383789
    8. '(character' → logprob: -8.79751968383789
    9. 'substr' → logprob: -8.92251968383789
    10. '(substr' → logprob: -9.54751968383789

Token 79: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0178252458572388
    2. '<|end|>' → logprob: -1.3928252458572388
    3. '   ' → logprob: -1.7678252458572388
    4. 'for' → logprob: -2.017825126647949
    5. ' for' → logprob: -3.267825126647949
    6. '       ' → logprob: -4.392825126647949
    7. ' ' → logprob: -4.517825126647949
    8. '+' → logprob: -4.767825126647949
    9. '<|end|>' → logprob: -5.267825126647949
    10. ' 
' → logprob: -6.267825126647949

Token 81: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12701316177845
    2. ' for' → logprob: -2.1270132064819336
    3. '       ' → logprob: -9.502013206481934
    4. '        ' → logprob: -12.752013206481934
    5. '	for' → logprob: -12.752013206481934
    6. ' ' → logprob: -13.127013206481934
    7. '   ' → logprob: -14.127013206481934
    8. '        
' → logprob: -14.377013206481934
    9. '    ' → logprob: -15.377013206481934
    10. ' 
' → logprob: -15.752013206481934

Token 82: ' counted' (ID: 60500)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5248367786407471
    2. 'value' → logprob: -1.774836778640747
    3. ' count' → logprob: -2.649836778640747
    4. 'key' → logprob: -3.274836778640747
    5. '_' → logprob: -3.399836778640747
    6. 'char' → logprob: -3.399836778640747
    7. 'v' → logprob: -4.024836540222168
    8. ' value' → logprob: -4.399836540222168
    9. ' key' → logprob: -4.649836540222168
    10. 'c' → logprob: -5.149836540222168

Token 83: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.04212673380970955
    2. '_character' → logprob: -3.7921266555786133
    3. '_count' → logprob: -4.792126655578613
    4. 'char' → logprob: -5.417126655578613
    5. '_value' → logprob: -6.417126655578613
    6. '_key' → logprob: -6.792126655578613
    7. 'character' → logprob: -6.917126655578613
    8. '_chars' → logprob: -7.417126655578613
    9. ' in' → logprob: -7.542126655578613
    10. 'count' → logprob: -7.667126655578613

Token 84: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08015909790992737
    2. 'acter' → logprob: -3.2051591873168945
    3. 'acters' → logprob: -3.3301591873168945
    4. ',' → logprob: -7.9551591873168945
    5. 'cter' → logprob: -9.330159187316895
    6. 's' → logprob: -9.455159187316895
    7. ' ' → logprob: -9.955159187316895
    8. 'count' → logprob: -10.205159187316895
    9. '_count' → logprob: -10.830159187316895
    10. 'actor' → logprob: -11.205159187316895

Token 85: ' counted' (ID: 60500)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006833771709352732
    2. ' count' → logprob: -5.006833553314209
    3. 'current' → logprob: -10.131834030151367
    4. 'frequency' → logprob: -10.381834030151367
    5. 'counter' → logprob: -10.881834030151367
    6. 'counts' → logprob: -11.506834030151367
    7. 'value' → logprob: -12.506834030151367
    8. ' current' → logprob: -12.756834030151367
    9. 'cnt' → logprob: -13.131834030151367
    10. '_count' → logprob: -13.256834030151367

Token 86: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.02299049124121666
    2. '_value' → logprob: -4.272990703582764
    3. '_counter' → logprob: -5.772990703582764
    4. '_chars' → logprob: -6.522990703582764
    5. '_char' → logprob: -7.022990703582764
    6. 'count' → logprob: -7.272990703582764
    7. '_occ' → logprob: -7.397990703582764
    8. '_frequency' → logprob: -7.772990703582764
    9. '_token' → logprob: -7.897990703582764
    10. '_tokens' → logprob: -8.522990226745605

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02635197527706623
    2. 'in' → logprob: -3.6513519287109375
    3. ' ' → logprob: -10.651351928710938
    4. 's' → logprob: -11.651351928710938
    5. '<|end|>' → logprob: -12.276351928710938
    6. '<|end|>' → logprob: -12.776351928710938
    7. 'ine' → logprob: -13.026351928710938
    8. 'inthe' → logprob: -13.526351928710938
    9. 'count' → logprob: -13.776351928710938
    10. '	in' → logprob: -14.151351928710938

Token 88: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.02975083328783512
    2. ' character' → logprob: -3.5297508239746094
    3. '(character' → logprob: -15.15475082397461
    4. '.character' → logprob: -17.27975082397461
    5. '
' → logprob: -18.65475082397461
    6. '_character' → logprob: -18.90475082397461
    7. ' ' → logprob: -18.90475082397461
    8. 'counter' → logprob: -18.90475082397461
    9. 'Character' → logprob: -19.02975082397461
    10. '   ' → logprob: -19.15475082397461

Token 89: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -4.751746746478602e-05
    2. 'counter' → logprob: -10.00004768371582
    3. 'ounter' → logprob: -14.37504768371582
    4. 's' → logprob: -14.50004768371582
    5. 'Counter' → logprob: -15.12504768371582
    6. '_' → logprob: -15.50004768371582
    7. 'er' → logprob: -15.75004768371582
    8. '_count' → logprob: -16.25004768371582
    9. ' counter' → logprob: -16.37504768371582
    10. '_COUNTER' → logprob: -17.25004768371582

Token 90: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0014879583613947034
    2. '.' → logprob: -7.001487731933594
    3. 'items' → logprob: -8.001487731933594
    4. '.values' → logprob: -8.376487731933594
    5. ' .' → logprob: -12.001487731933594
    6. '.iteritems' → logprob: -12.626487731933594
    7. ' items' → logprob: -14.751487731933594
    8. '   ' → logprob: -15.001487731933594
    9. '.Items' → logprob: -15.251487731933594
    10. '_items' → logprob: -15.751487731933594

Token 91: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.062442537397146225
    2. '():
' → logprob: -2.8124425411224365
    3. '()' → logprob: -7.812442302703857
    4. '():

' → logprob: -10.062442779541016
    5. '():
' → logprob: -11.187442779541016
    6. ' ():' → logprob: -12.062442779541016
    7. ':' → logprob: -12.187442779541016
    8. '()):
' → logprob: -14.062442779541016
    9. '()*' → logprob: -15.187442779541016
    10. '()`' → logprob: -15.187442779541016

Token 92: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08121315389871597
    2. 'current' → logprob: -2.9562132358551025
    3. ' current' → logprob: -4.331212997436523
    4. ':' → logprob: -5.581212997436523
    5. '
' → logprob: -5.956212997436523
    6. '```' → logprob: -6.831212997436523
    7. '            
' → logprob: -7.206212997436523
    8. ':
' → logprob: -7.331212997436523
    9. '[current' → logprob: -7.456212997436523
    10. '            ' → logprob: -7.956212997436523

Token 93: ' if' (ID: 538)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.4307385981082916
    2. 'current' → logprob: -1.0557385683059692
    3. '           ' → logprob: -6.43073844909668
    4. '               ' → logprob: -9.30573844909668
    5. '
' → logprob: -9.43073844909668
    6. '       ' → logprob: -9.80573844909668
    7. '[current' → logprob: -10.30573844909668
    8. '```' → logprob: -10.55573844909668
    9. ',current' → logprob: -10.68073844909668
    10. '	current' → logprob: -11.05573844909668

Token 94: ' counted' (ID: 60500)
  Prédit: ' counted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counted' → logprob: -0.30785009264945984
    2. 'count' → logprob: -1.4328501224517822
    3. 'current' → logprob: -4.057849884033203
    4. ' current' → logprob: -4.807849884033203
    5. ' count' → logprob: -7.682849884033203
    6. '   ' → logprob: -9.182849884033203
    7. 'character' → logprob: -10.120349884033203
    8. 'char' → logprob: -10.307849884033203
    9. ' ' → logprob: -10.370349884033203
    10. '    ' → logprob: -10.620349884033203

Token 95: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.5246055722236633
    2. '_count' → logprob: -0.8996055722236633
    3. 'char' → logprob: -6.899605751037598
    4. '_counter' → logprob: -8.649605751037598
    5. 'count' → logprob: -8.649605751037598
    6. '_' → logprob: -10.774605751037598
    7. '_product' → logprob: -10.774605751037598
    8. '
' → logprob: -11.149605751037598
    9. '_chars' → logprob: -11.899605751037598
    10. '```' → logprob: -12.149605751037598

Token 96: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.40568873286247253
    2. ' !=' → logprob: -1.405688762664795
    3. '==' → logprob: -2.530688762664795
    4. '!=' → logprob: -5.030688762664795
    5. ' in' → logprob: -7.530688762664795
    6. ' <=' → logprob: -7.655688762664795
    7. ' >=' → logprob: -7.905688762664795
    8. ' not' → logprob: -8.655688285827637
    9. ' is' → logprob: -9.155688285827637
    10. ' ' → logprob: -9.280688285827637

Token 97: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6326488852500916
    2. ' current' → logprob: -0.7576488852500916
    3. '   ' → logprob: -10.882648468017578
    4. ' ' → logprob: -11.882648468017578
    5. '	current' → logprob: -12.257648468017578
    6. 'character' → logprob: -12.382648468017578
    7. 'urrent' → logprob: -13.007648468017578
    8. '$current' → logprob: -13.382648468017578
    9. '=current' → logprob: -13.382648468017578
    10. 'c' → logprob: -13.757648468017578

Token 98: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -4.954393079970032e-05
    2. 'char' → logprob: -10.000049591064453
    3. '_' → logprob: -13.250049591064453
    4. 'Char' → logprob: -14.375049591064453
    5. '_CHAR' → logprob: -14.625049591064453
    6. '_string' → logprob: -16.125049591064453
    7. '```' → logprob: -16.250049591064453
    8. '_count' → logprob: -16.375049591064453
    9. '_chars' → logprob: -16.375049591064453
    10. '_str' → logprob: -16.500049591064453

Token 99: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5288217663764954
    2. ':' → logprob: -0.9038217663764954
    3. '               ' → logprob: -6.15382194519043
    4. ' and' → logprob: -6.65382194519043
    5. '           ' → logprob: -7.52882194519043
    6. '):
' → logprob: -7.65382194519043
    7. ' :
' → logprob: -7.90382194519043
    8. 'and' → logprob: -8.65382194519043
    9. ':

' → logprob: -8.77882194519043
    10. ' :' → logprob: -8.77882194519043

Token 100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30132758617401123
    2. ':' → logprob: -2.051327705383301
    3. ':
' → logprob: -2.426327705383301
    4. '           ' → logprob: -3.801327705383301
    5. ',' → logprob: -5.801327705383301
    6. 'current' → logprob: -5.926327705383301
    7. '*' → logprob: -6.301327705383301
    8. ' :' → logprob: -6.301327705383301
    9. ' =' → logprob: -6.301327705383301
    10. '+' → logprob: -6.551327705383301

Token 101: ' continue' (ID: 4901)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6442072987556458
    2. 'current' → logprob: -1.144207239151001
    3. '
' → logprob: -2.144207239151001
    4. '               ' → logprob: -3.769207239151001
    5. '           ' → logprob: -4.39420747756958
    6. 'count' → logprob: -6.01920747756958
    7. '(current' → logprob: -8.144207000732422
    8. '```' → logprob: -8.644207000732422
    9. ' counted' → logprob: -8.644207000732422
    10. ',current' → logprob: -9.269207000732422

Token 102: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3966514468193054
    2. '
' → logprob: -1.2716515064239502
    3. 'current' → logprob: -3.14665150642395
    4. '            
' → logprob: -6.771651268005371
    5. ' current' → logprob: -6.896651268005371
    6. '               ' → logprob: -7.021651268005371
    7. ' 
' → logprob: -8.896651268005371
    8. '(current' → logprob: -9.021651268005371
    9. '                
' → logprob: -9.521651268005371
    10. '  
' → logprob: -9.521651268005371

Token 103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041308533400297165
    2. 'current' → logprob: -3.791308641433716
    3. '
' → logprob: -4.291308403015137
    4. 'count' → logprob: -6.166308403015137
    5. ' current' → logprob: -6.416308403015137
    6. '            
' → logprob: -9.291308403015137
    7. '```' → logprob: -9.791308403015137
    8. '               ' → logprob: -9.916308403015137
    9. '       ' → logprob: -10.166308403015137
    10. ',current' → logprob: -10.416308403015137

Token 104: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.3794165253639221
    2. ' current' → logprob: -1.2544164657592773
    3. '
' → logprob: -3.6294164657592773
    4. '           ' → logprob: -6.004416465759277
    5. '               ' → logprob: -8.004416465759277
    6. '       ' → logprob: -8.504416465759277
    7. '```' → logprob: -8.754416465759277
    8. ',current' → logprob: -9.004416465759277
    9. 'count' → logprob: -9.504416465759277
    10. '            
' → logprob: -9.504416465759277

Token 105: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -3.79811754100956e-05
    2. 'product' → logprob: -10.375038146972656
    3. '_token' → logprob: -12.625038146972656
    4. '_' → logprob: -14.625038146972656
    5. '_count' → logprob: -14.625038146972656
    6. '_char' → logprob: -14.625038146972656
    7. 'Product' → logprob: -14.625038146972656
    8. '_character' → logprob: -15.125038146972656
    9. ' product' → logprob: -15.250038146972656
    10. '_PRODUCT' → logprob: -16.125038146972656

Token 106: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.1909504234790802
    2. ' *=' → logprob: -1.9409503936767578
    3. '=' → logprob: -3.565950393676758
    4. ' =' → logprob: -6.440950393676758
    5. '*' → logprob: -7.940950393676758
    6. '```' → logprob: -11.440950393676758
    7. '   ' → logprob: -11.565950393676758
    8. ' ' → logprob: -12.315950393676758
    9. ' ' → logprob: -12.690950393676758
    10. '       ' → logprob: -13.190950393676758

Token 107: ' (' (ID: 350)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.07907639443874359
    2. ' (' → logprob: -2.5790762901306152
    3. 'current' → logprob: -9.204076766967773
    4. ' current' → logprob: -9.954076766967773
    5. '(' → logprob: -10.454076766967773
    6. '   ' → logprob: -12.579076766967773
    7. ' ' → logprob: -14.079076766967773
    8. '```' → logprob: -14.329076766967773
    9. ',current' → logprob: -14.579076766967773
    10. '(max' → logprob: -14.579076766967773

Token 108: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.020062830299139023
    2. ' current' → logprob: -4.1450629234313965
    3. '(current' → logprob: -5.5200629234313965
    4. ' (' → logprob: -12.395062446594238
    5. 'cur' → logprob: -13.145062446594238
    6. 'count' → logprob: -13.395062446594238
    7. '   ' → logprob: -13.770062446594238
    8. '(' → logprob: -14.020062446594238
    9. '	current' → logprob: -14.270062446594238
    10. 'curr' → logprob: -14.395062446594238

Token 109: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -0.00011605957115534693
    2. 'product' → logprob: -9.375116348266602
    3. 'Product' → logprob: -11.500116348266602
    4. '_token' → logprob: -11.875116348266602
    5. '_' → logprob: -12.250116348266602
    6. '_char' → logprob: -12.750116348266602
    7. ' product' → logprob: -13.750116348266602
    8. '_PRODUCT' → logprob: -14.000116348266602
    9. '_Product' → logprob: -14.125116348266602
    10. '_character' → logprob: -14.750116348266602

Token 110: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02324955351650715
    2. '*' → logprob: -3.773249626159668
    3. ' ' → logprob: -13.523249626159668
    4. ' ' → logprob: -14.273249626159668
    5. '*(' → logprob: -14.398249626159668
    6. '*object' → logprob: -14.523249626159668
    7. '```' → logprob: -15.273249626159668
    8. '**' → logprob: -15.523249626159668
    9. ' **' → logprob: -15.898249626159668
    10. '   ' → logprob: -16.52324867248535

Token 111: ' (' (ID: 350)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.05192364379763603
    2. 'count' → logprob: -3.5519237518310547
    3. ' (' → logprob: -4.426923751831055
    4. '(math' → logprob: -5.176923751831055
    5. 'math' → logprob: -7.176923751831055
    6. '(max' → logprob: -7.301923751831055
    7. 'pow' → logprob: -7.676923751831055
    8. ' counted' → logprob: -7.676923751831055
    9. '(pow' → logprob: -7.801923751831055
    10. '(' → logprob: -7.801923751831055

Token 112: '1' (ID: 16)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.11343337595462799
    2. '(count' → logprob: -2.238433361053467
    3. ' counted' → logprob: -8.113433837890625
    4. ' count' → logprob: -9.363433837890625
    5. '(' → logprob: -9.613433837890625
    6. ' (' → logprob: -9.738433837890625
    7. '   ' → logprob: -10.988433837890625
    8. 'pow' → logprob: -11.113433837890625
    9. 'counts' → logprob: -11.238433837890625
    10. '[count' → logprob: -11.738433837890625

Token 113: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17995154857635498
    2. ' +' → logprob: -1.804951548576355
    3. '0' → logprob: -9.929951667785645
    4. '000' → logprob: -10.054951667785645
    5. 'count' → logprob: -10.679951667785645
    6. '<|end|>' → logprob: -10.679951667785645
    7. '<<' → logprob: -11.804951667785645
    8. '<|end|>' → logprob: -12.179951667785645
    9. '           ' → logprob: -12.554951667785645
    10. 'current' → logprob: -12.554951667785645

Token 114: ' counted' (ID: 60500)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10201697051525116
    2. ' counted' → logprob: -2.3520169258117676
    3. 'character' → logprob: -6.977016925811768
    4. ' count' → logprob: -7.477016925811768
    5. 'counter' → logprob: -9.352017402648926
    6. ' ' → logprob: -9.477017402648926
    7. 'current' → logprob: -10.602017402648926
    8. '   ' → logprob: -10.602017402648926
    9. 'counts' → logprob: -11.477017402648926
    10. ' character' → logprob: -11.602017402648926

Token 115: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00019734179659280926
    2. '_counter' → logprob: -8.625197410583496
    3. '_char' → logprob: -11.250197410583496
    4. 'count' → logprob: -13.125197410583496
    5. '_' → logprob: -13.750197410583496
    6. 'counter' → logprob: -15.500197410583496
    7. '
' → logprob: -15.750197410583496
    8. '_character' → logprob: -15.750197410583496
    9. 'Count' → logprob: -15.875197410583496
    10. '[' → logprob: -16.37519645690918

Token 116: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004738176241517067
    2. ')' → logprob: -5.3797383308410645
    3. ' ))' → logprob: -9.379737854003906
    4. ')
' → logprob: -11.379737854003906
    5. '   ' → logprob: -12.004737854003906
    6. ')%' → logprob: -12.379737854003906
    7. '))
' → logprob: -12.504737854003906
    8. ')))' → logprob: -12.879737854003906
    9. ' )' → logprob: -12.879737854003906
    10. ' ' → logprob: -14.129737854003906

Token 117: ' %' (ID: 1851)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6456272602081299
    2. '
' → logprob: -0.7706272602081299
    3. '        
' → logprob: -4.895627021789551
    4. '
' → logprob: -6.770627021789551
    5. ' 
' → logprob: -7.145627021789551
    6. 'substring' → logprob: -7.645627021789551
    7. ' modulo' → logprob: -7.770627021789551
    8. 'mod' → logprob: -7.895627021789551
    9. '   ' → logprob: -8.02062702178955
    10. ')' → logprob: -8.27062702178955

Token 118: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16024261713027954
    2. ' modulo' → logprob: -1.9102425575256348
    3. '(mod' → logprob: -11.410243034362793
    4. 'module' → logprob: -12.285243034362793
    5. '```' → logprob: -13.785243034362793
    6. ' ' → logprob: -14.035243034362793
    7. '	mod' → logprob: -15.410243034362793
    8. 'mo' → logprob: -15.910243034362793
    9. 'Modulo' → logprob: -15.910243034362793
    10. '   ' → logprob: -16.410242080688477

Token 119: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.292907877039397e-06
    2. 'value' → logprob: -12.75000286102295
    3. '_code' → logprob: -16.000003814697266
    4. '```' → logprob: -16.125003814697266
    5. '_' → logprob: -17.000003814697266
    6. '\' → logprob: -17.250003814697266
    7. '_VALUE' → logprob: -17.250003814697266
    8. '_values' → logprob: -17.875003814697266
    9. '7' → logprob: -18.000003814697266
    10. '_val' → logprob: -18.250003814697266

Token 120: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4099618196487427
    2. '   ' → logprob: -1.4099618196487427
    3. '       ' → logprob: -1.7849618196487427
    4. 'substring' → logprob: -2.284961700439453
    5. ' 
' → logprob: -2.659961700439453
    6. '    
' → logprob: -3.284961700439453
    7. ')' → logprob: -3.284961700439453
    8. ' substring' → logprob: -3.659961700439453
    9. '\n' → logprob: -4.034961700439453
    10. '        
' → logprob: -4.159961700439453

Token 121: '       ' (ID: 309)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' → logprob: -1.0301377773284912
    2. ' substring' → logprob: -1.0301377773284912
    3. '       ' → logprob: -2.030137777328491
    4. '   ' → logprob: -2.155137777328491
    5. ')' → logprob: -4.03013801574707
    6. 'else' → logprob: -4.53013801574707
    7. ' else' → logprob: -5.40513801574707
    8. '        
' → logprob: -6.53013801574707
    9. '    
' → logprob: -6.78013801574707
    10. '
' → logprob: -6.78013801574707

Token 122: ' substring' (ID: 89494)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' (adapté à ' substring') → logprob: -0.12076520919799805
    2. ' substring' → logprob: -2.620765209197998
    3. '   ' → logprob: -3.495765209197998
    4. 'else' → logprob: -5.495765209197998
    5. '       ' → logprob: -5.870765209197998
    6. 'character' → logprob: -7.370765209197998
    7. '```' → logprob: -7.495765209197998
    8. ' else' → logprob: -7.745765209197998
    9. '        
' → logprob: -7.870765209197998
    10. '    
' → logprob: -7.870765209197998

Token 123: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. ' _' → logprob: -17.75
    3. '_c' → logprob: -17.875
    4. 's' → logprob: -18.5
    5. '_' → logprob: -18.5
    6. '_length' → logprob: -19.25
    7. '\' → logprob: -19.375
    8. '_cont' → logprob: -19.375
    9. '_counter' → logprob: -19.375
    10. '_code' → logprob: -19.5

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.349650502204895
    2. '=' → logprob: -1.224650502204895
    3. ' +=' → logprob: -7.7246503829956055
    4. '+=' → logprob: -7.9746503829956055
    5. ' *=' → logprob: -8.224650382995605
    6. ' ' → logprob: -9.224650382995605
    7. '*=' → logprob: -10.474650382995605
    8. '   ' → logprob: -11.599650382995605
    9. '  ' → logprob: -12.099650382995605
    10. '	' → logprob: -13.099650382995605

Token 125: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03412151336669922
    2. '(sub' → logprob: -3.409121513366699
    3. '(substr' → logprob: -7.784121513366699
    4. '(' → logprob: -10.5341215133667
    5. ' substring' → logprob: -10.9091215133667
    6. 'substring' → logprob: -12.2841215133667
    7. '(int' → logprob: -13.1591215133667
    8. ' ' → logprob: -13.5341215133667
    9. '(current' → logprob: -13.9091215133667
    10. ' substr' → logprob: -14.0341215133667

Token 126: 'substring' (ID: 61719)
  Prédit: 'substring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.09219599515199661
    2. '(sub' → logprob: -2.842195987701416
    3. ' substring' → logprob: -3.592195987701416
    4. 'sub' → logprob: -6.717195987701416
    5. 'substr' → logprob: -7.342195987701416
    6. ' (' → logprob: -8.217196464538574
    7. '(substr' → logprob: -9.717196464538574
    8. 'current' → logprob: -11.592196464538574
    9. '   ' → logprob: -11.717196464538574
    10. '(' → logprob: -12.217196464538574

Token 127: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.961759259458631e-06
    2. 'count' → logprob: -12.625004768371582
    3. '_product' → logprob: -14.625004768371582
    4. ' _' → logprob: -15.125004768371582
    5. '_' → logprob: -15.250004768371582
    6. 'Count' → logprob: -16.0000057220459
    7. '_c' → logprob: -16.7500057220459
    8. ' count' → logprob: -16.7500057220459
    9. '_code' → logprob: -17.1250057220459
    10. '   ' → logprob: -17.1250057220459

Token 128: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.016655685380101204
    2. ' +' → logprob: -4.641655921936035
    3. '*' → logprob: -5.141655921936035
    4. '+' → logprob: -6.891655921936035
    5. ' ' → logprob: -11.516655921936035
    6. '```' → logprob: -14.516655921936035
    7. ' ' → logprob: -15.016655921936035
    8. ' -' → logprob: -15.516655921936035
    9. ')' → logprob: -15.954155921936035
    10. '**' → logprob: -16.14165496826172

Token 129: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.018158959224820137
    2. 'current' → logprob: -4.018158912658691
    3. '(current' → logprob: -11.893158912658691
    4. ' (' → logprob: -13.643158912658691
    5. ' ' → logprob: -15.143158912658691
    6. '	current' → logprob: -15.518158912658691
    7. ',current' → logprob: -16.393159866333008
    8. '1' → logprob: -16.518159866333008
    9. '$current' → logprob: -16.643159866333008
    10. '_current' → logprob: -16.893159866333008

Token 130: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -0.0005685218493454158
    2. '_char' → logprob: -7.625568389892578
    3. '_token' → logprob: -10.625568389892578
    4. 'Product' → logprob: -10.875568389892578
    5. 'product' → logprob: -11.000568389892578
    6. 'substring' → logprob: -11.625568389892578
    7. '_character' → logprob: -12.625568389892578
    8. 'char' → logprob: -13.250568389892578
    9. '_' → logprob: -13.250568389892578
    10. '_sub' → logprob: -13.625568389892578

Token 131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006341627449728549
    2. ' )' → logprob: -7.50063419342041
    3. ' *' → logprob: -10.12563419342041
    4. '*' → logprob: -10.87563419342041
    5. ')%' → logprob: -11.75063419342041
    6. '%' → logprob: -12.00063419342041
    7. '   ' → logprob: -12.25063419342041
    8. '+' → logprob: -14.00063419342041
    9. ' %' → logprob: -14.37563419342041
    10. ' +' → logprob: -14.62563419342041

Token 132: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0305385272949934
    2. '%' → logprob: -3.530538558959961
    3. ' %
' → logprob: -8.155538558959961
    4. ' *' → logprob: -8.155538558959961
    5. ' ' → logprob: -9.530538558959961
    6. '   ' → logprob: -10.280538558959961
    7. ')' → logprob: -10.280538558959961
    8. '%
' → logprob: -11.030538558959961
    9. '       ' → logprob: -11.655538558959961
    10. '<|end|>' → logprob: -11.655538558959961

Token 133: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.061979226768016815
    2. 'mod' → logprob: -2.811979293823242
    3. 'module' → logprob: -12.686979293823242
    4. '(mod' → logprob: -12.811979293823242
    5. ' ' → logprob: -13.061979293823242
    6. '```' → logprob: -13.311979293823242
    7. ' ' → logprob: -14.311979293823242
    8. 'space' → logprob: -15.311979293823242
    9. '`' → logprob: -15.561979293823242
    10. '	mod' → logprob: -15.811979293823242

Token 134: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.935296834039036e-06
    2. 'value' → logprob: -13.00000286102295
    3. '_code' → logprob: -15.25000286102295
    4. '_' → logprob: -16.500003814697266
    5. 'valu' → logprob: -16.500003814697266
    6. '```' → logprob: -16.875003814697266
    7. '_VALUE' → logprob: -17.000003814697266
    8. '_values' → logprob: -17.375003814697266
    9. '_val' → logprob: -17.750003814697266
    10. '_string' → logprob: -17.875003814697266

Token 135: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009571913629770279
    2. '    
' → logprob: -5.3845720291137695
    3. 'character' → logprob: -6.1345720291137695
    4. '
' → logprob: -6.2595720291137695
    5. ' character' → logprob: -7.6345720291137695
    6. ' 
' → logprob: -9.25957202911377
    7. '        
' → logprob: -9.50957202911377
    8. 'else' → logprob: -10.00957202911377
    9. '   
' → logprob: -10.13457202911377
    10. '  
' → logprob: -10.63457202911377

Token 136: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06314413994550705
    2. 'character' → logprob: -2.8131442070007324
    3. ' character' → logprob: -6.813144207000732
    4. '    
' → logprob: -10.938143730163574
    5. '       ' → logprob: -11.063143730163574
    6. 'Character' → logprob: -11.563143730163574
    7. '   ' → logprob: -11.563143730163574
    8. '
' → logprob: -11.938143730163574
    9. '(character' → logprob: -12.313143730163574
    10. '```' → logprob: -12.563143730163574

Token 137: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' (adapté à ' character') → logprob: -0.004596387501806021
    2. '   ' → logprob: -5.75459623336792
    3. ' character' → logprob: -6.62959623336792
    4. '
' → logprob: -9.629596710205078
    5. '    
' → logprob: -11.754596710205078
    6. '       ' → logprob: -11.754596710205078
    7. '(character' → logprob: -12.379596710205078
    8. 'else' → logprob: -13.004596710205078
    9. '        
' → logprob: -13.129596710205078
    10. '```' → logprob: -13.879596710205078

Token 138: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -6.749814019713085e-06
    2. '_count' → logprob: -12.500006675720215
    3. 'counter' → logprob: -13.250006675720215
    4. '_' → logprob: -14.000006675720215
    5. 'Counter' → logprob: -16.12500762939453
    6. '_controller' → logprob: -16.25000762939453
    7. '\' → logprob: -16.75000762939453
    8. ' _' → logprob: -17.00000762939453
    9. '_counts' → logprob: -17.37500762939453
    10. 'ounter' → logprob: -17.62500762939453

Token 139: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.4974866644479334e-05
    2. '[' → logprob: -12.000015258789062
    3. '[cur' → logprob: -12.500015258789062
    4. 'current' → logprob: -13.000015258789062
    5. '[input' → logprob: -13.125015258789062
    6. '[curr' → logprob: -14.750015258789062
    7. '[
' → logprob: -16.375015258789062
    8. '
' → logprob: -16.750015258789062
    9. '[next' → logprob: -16.750015258789062
    10. ' current' → logprob: -17.250015258789062

Token 140: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00028970264247618616
    2. '_string' → logprob: -8.875289916992188
    3. '_counter' → logprob: -9.750289916992188
    4. 'char' → logprob: -10.125289916992188
    5. 'string' → logprob: -10.750289916992188
    6. 'current' → logprob: -11.000289916992188
    7. '[current' → logprob: -12.250289916992188
    8. 'Char' → logprob: -12.625289916992188
    9. '_chars' → logprob: -13.625289916992188
    10. '```' → logprob: -13.875289916992188

Token 141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08343178033828735
    2. ']+=' → logprob: -2.5834317207336426
    3. '+=' → logprob: -5.458431720733643
    4. ' +=' → logprob: -8.4584321975708
    5. ')' → logprob: -10.2084321975708
    6. ' ]' → logprob: -11.9584321975708
    7. '[' → logprob: -11.9584321975708
    8. '}' → logprob: -12.7084321975708
    9. '+' → logprob: -13.4584321975708
    10. '']' → logprob: -13.4584321975708

Token 142: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004200086463242769
    2. ' +=' → logprob: -5.629199981689453
    3. ']+=' → logprob: -7.504199981689453
    4. '[' → logprob: -10.754199981689453
    5. '=' → logprob: -11.004199981689453
    6. '```' → logprob: -12.379199981689453
    7. '<|end|>' → logprob: -12.879199981689453
    8. '+' → logprob: -13.629199981689453
    9. '+='' → logprob: -14.754199981689453
    10. '++' → logprob: -15.129199981689453

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -20.500036239624023
    4. '0' → logprob: -20.625036239624023
    5. '```' → logprob: -21.125036239624023
    6. '2' → logprob: -23.250036239624023
    7. '  ' → logprob: -23.250036239624023
    8. '[' → logprob: -23.500036239624023
    9. '<|end|>' → logprob: -23.500036239624023
    10. '+' → logprob: -23.500036239624023

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -21.875
    4. '   ' → logprob: -22.0
    5. '0' → logprob: -23.125
    6. '<|end|>' → logprob: -23.5
    7. '１' → logprob: -23.75
    8. '۱' → logprob: -24.0
    9. '2' → logprob: -24.375
    10. '100' → logprob: -24.5

Token 145: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.26387667655944824
    2. '   ' → logprob: -2.1388766765594482
    3. ' else' → logprob: -2.2638766765594482
    4. '```' → logprob: -4.763876914978027
    5. '<|end|>' → logprob: -6.888876914978027
    6. '
' → logprob: -8.638876914978027
    7. ')' → logprob: -9.138876914978027
    8. '#' → logprob: -9.513876914978027
    9. '    
' → logprob: -9.888876914978027
    10. ' 
' → logprob: -10.138876914978027

Token 146: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02115553617477417
    2. '   ' → logprob: -4.14615535736084
    3. ' else' → logprob: -5.39615535736084
    4. '```' → logprob: -7.64615535736084
    5. 'continue' → logprob: -10.39615535736084
    6. ')' → logprob: -10.39615535736084
    7. '<|end|>' → logprob: -11.39615535736084
    8. 'elif' → logprob: -11.77115535736084
    9. '#' → logprob: -12.27115535736084
    10. 'return' → logprob: -13.14615535736084

Token 147: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.010412258096039295
    2. ' else' → logprob: -4.885412216186523
    3. '   ' → logprob: -5.885412216186523
    4. '```' → logprob: -10.885412216186523
    5. ')' → logprob: -13.385412216186523
    6. 'elif' → logprob: -13.635412216186523
    7. '	else' → logprob: -15.385412216186523
    8. 'continue' → logprob: -15.385412216186523
    9. ']' → logprob: -15.760412216186523
    10. 'return' → logprob: -16.885412216186523

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5293223857879639
    2. ':
' → logprob: -0.9043223857879639
    3. '   ' → logprob: -5.154322624206543
    4. '       ' → logprob: -8.029322624206543
    5. '{' → logprob: -10.779322624206543
    6. ' :
' → logprob: -11.529322624206543
    7. ':

' → logprob: -11.904322624206543
    8. '):
' → logprob: -11.904322624206543
    9. '```' → logprob: -12.029322624206543
    10. '
' → logprob: -12.279322624206543

Token 149: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11039720475673676
    2. ' character' → logprob: -2.6103971004486084
    3. 'character' → logprob: -4.1103973388671875
    4. '       ' → logprob: -4.2353973388671875
    5. '   ' → logprob: -10.110397338867188
    6. '```' → logprob: -10.485397338867188
    7. '	   ' → logprob: -11.735397338867188
    8. 'substring' → logprob: -11.735397338867188
    9. '    ' → logprob: -11.985397338867188
    10. ' substring' → logprob: -12.110397338867188

Token 150: ' substring' (ID: 89494)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.3149072825908661
    2. 'substring' (adapté à ' substring') → logprob: -1.3149073123931885
    3. '   ' → logprob: -7.314907073974609
    4. ' character' → logprob: -7.439907073974609
    5. ' substring' → logprob: -8.18990707397461
    6. 'current' → logprob: -10.06490707397461
    7. 'char' → logprob: -10.68990707397461
    8. 'for' → logprob: -11.56490707397461
    9. '       ' → logprob: -11.81490707397461
    10. 'substr' → logprob: -12.18990707397461

Token 151: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.2664456789934775e-06
    2. 'count' → logprob: -14.375000953674316
    3. '_counter' → logprob: -15.500000953674316
    4. '_length' → logprob: -15.750000953674316
    5. '_' → logprob: -15.875000953674316
    6. '_counts' → logprob: -16.750001907348633
    7. '\' → logprob: -18.375001907348633
    8. '_c' → logprob: -18.625001907348633
    9. 'Count' → logprob: -18.750001907348633
    10. 's' → logprob: -18.750001907348633

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1273575723171234
    2. '=' → logprob: -2.1273574829101562
    3. ' *=' → logprob: -8.127357482910156
    4. ' +=' → logprob: -9.252357482910156
    5. '*=' → logprob: -10.877357482910156
    6. '+=' → logprob: -11.127357482910156
    7. ' ' → logprob: -13.377357482910156
    8. '   ' → logprob: -13.627357482910156
    9. ' <<=' → logprob: -14.127357482910156
    10. '	' → logprob: -15.127357482910156

Token 153: ' (' (ID: 350)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.26581206917762756
    2. ' (' → logprob: -1.5158120393753052
    3. '(substr' → logprob: -4.890811920166016
    4. '(' → logprob: -5.265811920166016
    5. '(mod' → logprob: -7.890811920166016
    6. 'substring' → logprob: -8.140811920166016
    7. ' substring' → logprob: -8.765811920166016
    8. '(current' → logprob: -9.765811920166016
    9. '2' → logprob: -10.390811920166016
    10. '   ' → logprob: -10.765811920166016

Token 154: '2' (ID: 17)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.05073920637369156
    2. 'substring' → logprob: -3.050739288330078
    3. '(substr' → logprob: -6.800739288330078
    4. '(' → logprob: -7.925739288330078
    5. ' substring' → logprob: -8.550739288330078
    6. 'sub' → logprob: -8.925739288330078
    7. '2' → logprob: -8.925739288330078
    8. 'substr' → logprob: -9.300739288330078
    9. ' (' → logprob: -9.550739288330078
    10. '((' → logprob: -11.300739288330078

Token 155: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014317808672785759
    2. '*' → logprob: -4.264317989349365
    3. ' ' → logprob: -9.514317512512207
    4. ' **' → logprob: -10.139317512512207
    5. '**' → logprob: -11.389317512512207
    6. ')' → logprob: -11.764317512512207
    7. '   ' → logprob: -11.889317512512207
    8. '*object' → logprob: -12.389317512512207
    9. '_' → logprob: -13.139317512512207
    10. ' _' → logprob: -13.264317512512207

Token 156: ' substring' (ID: 89494)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.1426878571510315
    2. ' substring' → logprob: -2.0176877975463867
    3. 'substr' → logprob: -11.892687797546387
    4. 'sub' → logprob: -12.392687797546387
    5. 'Substring' → logprob: -14.767687797546387
    6. '   ' → logprob: -15.267687797546387
    7. 'subtotal' → logprob: -15.392687797546387
    8. '(sub' → logprob: -15.517687797546387
    9. '	sub' → logprob: -15.517687797546387
    10. ' ' → logprob: -16.392688751220703

Token 157: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.682846287731081e-05
    2. 'count' → logprob: -9.625066757202148
    3. 'substring' → logprob: -14.500066757202148
    4. 'Count' → logprob: -15.750066757202148
    5. 'ount' → logprob: -17.00006675720215
    6. ' count' → logprob: -18.00006675720215
    7. '_cont' → logprob: -18.12506675720215
    8. 's' → logprob: -18.62506675720215
    9. '_c' → logprob: -18.87506675720215
    10. '_COUNT' → logprob: -19.00006675720215

Token 158: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004123192047700286
    2. ' )' → logprob: -8.000411987304688
    3. ')%' → logprob: -9.625411987304688
    4. '%' → logprob: -11.875411987304688
    5. '-' → logprob: -13.750411987304688
    6. ' -' → logprob: -14.000411987304688
    7. '   ' → logprob: -14.250411987304688
    8. ' %' → logprob: -14.375411987304688
    9. '+' → logprob: -15.125411987304688
    10. ' ' → logprob: -16.000411987304688

Token 159: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5759775042533875
    2. '%' → logprob: -0.8259775042533875
    3. '   ' → logprob: -10.950977325439453
    4. ' ' → logprob: -11.575977325439453
    5. ')' → logprob: -12.325977325439453
    6. '       ' → logprob: -13.075977325439453
    7. ')%' → logprob: -13.200977325439453
    8. '```' → logprob: -14.200977325439453
    9. '
' → logprob: -14.700977325439453
    10. '  ' → logprob: -15.200977325439453

Token 160: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3133208751678467
    2. ' modulo' → logprob: -1.3133208751678467
    3. '(mod' → logprob: -10.438321113586426
    4. 'module' → logprob: -10.938321113586426
    5. ' ' → logprob: -11.938321113586426
    6. '```' → logprob: -12.813321113586426
    7. '	mod' → logprob: -14.188321113586426
    8. '   ' → logprob: -14.813321113586426
    9. '100' → logprob: -14.938321113586426
    10. ' ' → logprob: -15.063321113586426

Token 161: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.1080467781284824e-05
    2. 'value' → logprob: -10.125041007995605
    3. 'mod' → logprob: -14.375041007995605
    4. '```' → logprob: -16.375041961669922
    5. '_code' → logprob: -16.500041961669922
    6. 'valu' → logprob: -16.500041961669922
    7. '_values' → logprob: -16.750041961669922
    8. '_VALUE' → logprob: -17.250041961669922
    9. '100' → logprob: -17.375041961669922
    10. '000' → logprob: -17.750041961669922

Token 162: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4086254835128784
    2. '       ' → logprob: -1.4086254835128784
    3. 'character' → logprob: -2.408625602722168
    4. ' character' → logprob: -6.908625602722168
    5. '           ' → logprob: -12.283625602722168
    6. '(character' → logprob: -12.283625602722168
    7. '
' → logprob: -13.158625602722168
    8. '_character' → logprob: -13.408625602722168
    9. '```' → logprob: -13.533625602722168
    10. 'Character' → logprob: -13.908625602722168

Token 163: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7594726085662842
    2. 'character' → logprob: -0.7594726085662842
    3. '       ' → logprob: -2.759472608566284
    4. ' character' → logprob: -7.134472846984863
    5. '```' → logprob: -10.759472846984863
    6. '
' → logprob: -11.509472846984863
    7. 'Character' → logprob: -11.884472846984863
    8. '(character' → logprob: -12.634472846984863
    9. '           ' → logprob: -12.884472846984863
    10. '_character' → logprob: -13.509472846984863

Token 164: ' substring' (ID: 89494)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'character' → logprob: -6.337155355140567e-05
    2. ' character' → logprob: -9.750062942504883
    3. '   ' → logprob: -12.250062942504883
    4. '       ' → logprob: -15.500062942504883
    5. 'Character' → logprob: -17.750062942504883
    6. '
' → logprob: -17.875062942504883
    7. '(character' → logprob: -17.875062942504883
    8. '.character' → logprob: -18.250062942504883
    9. ' ' → logprob: -18.750062942504883
    10. '  ' → logprob: -19.500062942504883

Token 165: '_count' (ID: 7536)
  Prédit: '_counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.049058396369218826
    2. '_count' → logprob: -3.049058437347412
    3. 'counter' → logprob: -7.674058437347412
    4. 'count' → logprob: -13.799057960510254
    5. '_character' → logprob: -13.924057960510254
    6. 'ounter' → logprob: -14.174057960510254
    7. '_char' → logprob: -14.549057960510254
    8. 'Counter' → logprob: -14.674057960510254
    9. '_counts' → logprob: -14.799057960510254
    10. '_code' → logprob: -14.799057960510254

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.005435585975647
    2. ' =' → logprob: -1.380435585975647
    3. '_count' → logprob: -2.2554354667663574
    4. '
' → logprob: -2.5054354667663574
    5. '   ' → logprob: -3.1304354667663574
    6. ' +=' → logprob: -3.7554354667663574
    7. '_counter' → logprob: -4.005435466766357
    8. '_character' → logprob: -4.130435466766357
    9. 'import' → logprob: -4.380435466766357
    10. '       ' → logprob: -4.380435466766357

Token 167: ' (' (ID: 350)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.06310060620307922
    2. 'substring' → logprob: -3.438100576400757
    3. ' (' → logprob: -3.938100576400757
    4. '(character' → logprob: -5.938100814819336
    5. '(substr' → logprob: -6.313100814819336
    6. '(' → logprob: -6.688100814819336
    7. '(max' → logprob: -7.063100814819336
    8. ' substring' → logprob: -7.313100814819336
    9. '(current' → logprob: -7.438100814819336
    10. '(mod' → logprob: -7.563100814819336

Token 168: 'substring' (ID: 61719)
  Prédit: 'substring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.35186633467674255
    2. '(sub' → logprob: -1.226866364479065
    3. '(mod' → logprob: -7.351866245269775
    4. '(' → logprob: -7.601866245269775
    5. 'substr' → logprob: -7.601866245269775
    6. ' substring' → logprob: -7.726866245269775
    7. 'sub' → logprob: -8.101866722106934
    8. 'mod' → logprob: -8.476866722106934
    9. ' (' → logprob: -8.476866722106934
    10. '(substr' → logprob: -8.726866722106934

Token 169: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0008439337252639234
    2. 'count' → logprob: -7.1258440017700195
    3. '%' → logprob: -11.37584400177002
    4. 'Count' → logprob: -11.37584400177002
    5. 'substring' → logprob: -13.00084400177002
    6. 'substr' → logprob: -13.00084400177002
    7. '...' → logprob: -13.37584400177002
    8. '```' → logprob: -13.50084400177002
    9. ')' → logprob: -14.00084400177002
    10. '(' → logprob: -14.50084400177002

Token 170: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20145563781261444
    2. '+' → logprob: -2.201455593109131
    3. ' -' → logprob: -2.701455593109131
    4. ' +' → logprob: -5.451455593109131
    5. ')' → logprob: -8.326456069946289
    6. '%' → logprob: -9.451456069946289
    7. ' ' → logprob: -10.701456069946289
    8. '```' → logprob: -10.701456069946289
    9. '*' → logprob: -11.451456069946289
    10. '=' → logprob: -12.013956069946289

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.059421975165605545
    2. '0' → logprob: -4.184422016143799
    3. ' ' → logprob: -4.309422016143799
    4. 'mod' → logprob: -5.059422016143799
    5. ' character' → logprob: -5.434422016143799
    6. 'substring' → logprob: -5.434422016143799
    7. 'character' → logprob: -5.559422016143799
    8. ' (' → logprob: -6.309422016143799
    9. ' substring' → logprob: -6.309422016143799
    10. ' current' → logprob: -6.684422016143799

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05030659958720207
    2. 'mod' → logprob: -3.550306558609009
    3. '0' → logprob: -4.675306797027588
    4. 'substring' → logprob: -5.300306797027588
    5. 'character' → logprob: -5.675306797027588
    6. '(mod' → logprob: -7.300306797027588
    7. '(' → logprob: -7.675306797027588
    8. ' ' → logprob: -7.675306797027588
    9. '(character' → logprob: -8.80030632019043
    10. 'input' → logprob: -9.17530632019043

Token 173: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035373423248529434
    2. ')
' → logprob: -3.4103734493255615
    3. '
' → logprob: -6.535373210906982
    4. '       ' → logprob: -9.28537368774414
    5. '   ' → logprob: -9.53537368774414
    6. '<|end|>' → logprob: -10.53537368774414
    7. ')%' → logprob: -10.91037368774414
    8. ' )' → logprob: -11.28537368774414
    9. '```' → logprob: -11.41037368774414
    10. '  
' → logprob: -11.66037368774414

Token 174: ' %' (ID: 1851)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04462312534451485
    2. 'character' → logprob: -4.044622898101807
    3. '%' → logprob: -4.544622898101807
    4. '   ' → logprob: -5.169622898101807
    5. '       ' → logprob: -5.794622898101807
    6. '        
' → logprob: -6.794622898101807
    7. '  
' → logprob: -6.919622898101807
    8. ' character' → logprob: -6.919622898101807
    9. ' 
' → logprob: -7.044622898101807
    10. '
' → logprob: -7.544622898101807

Token 175: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.10029520094394684
    2. 'mod' → logprob: -2.350295305252075
    3. ' ' → logprob: -9.975295066833496
    4. 'space' → logprob: -11.600295066833496
    5. ' ' → logprob: -11.725295066833496
    6. '(mod' → logprob: -11.850295066833496
    7. 'module' → logprob: -12.225295066833496
    8. '```' → logprob: -12.475295066833496
    9. '`' → logprob: -12.725295066833496
    10. ' mod' → logprob: -13.725295066833496

Token 176: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.512236498361744e-07
    2. 'mod' → logprob: -15.250000953674316
    3. 'value' → logprob: -16.125
    4. '_mod' → logprob: -16.25
    5. '_code' → logprob: -17.875
    6. '_variable' → logprob: -18.0
    7. '_values' → logprob: -18.25
    8. '```' → logprob: -18.25
    9. '_' → logprob: -18.375
    10. '_VALUE' → logprob: -18.5

Token 177: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019632872194051743
    2. 'character' → logprob: -4.144632816314697
    3. '       ' → logprob: -6.019632816314697
    4. ' character' → logprob: -7.144632816314697
    5. '	char' → logprob: -8.519633293151855
    6. '(character' → logprob: -9.894633293151855
    7. '```' → logprob: -10.519633293151855
    8. '
' → logprob: -10.769633293151855
    9. '    
' → logprob: -11.019633293151855
    10. '_character' → logprob: -11.269633293151855

Token 178: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08626113086938858
    2. 'character' → logprob: -2.586261034011841
    3. '       ' → logprob: -5.21126127243042
    4. ' character' → logprob: -6.33626127243042
    5. '	char' → logprob: -10.211260795593262
    6. '```' → logprob: -10.336260795593262
    7. '(character' → logprob: -10.711260795593262
    8. '_character' → logprob: -11.836260795593262
    9. '	' → logprob: -11.961260795593262
    10. '.character' → logprob: -12.461260795593262

Token 179: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' (adapté à ' character') → logprob: -0.0007206532754935324
    2. '   ' → logprob: -7.625720500946045
    3. ' character' → logprob: -8.375720977783203
    4. '       ' → logprob: -13.500720977783203
    5. '
' → logprob: -14.375720977783203
    6. '(character' → logprob: -16.250720977783203
    7. '.character' → logprob: -17.000720977783203
    8. ' ' → logprob: -17.125720977783203
    9. 'Character' → logprob: -17.250720977783203
    10. '  ' → logprob: -17.375720977783203

Token 180: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -8.2994620242971e-06
    2. 'counter' → logprob: -11.750008583068848
    3. '_count' → logprob: -15.250008583068848
    4. 'Counter' → logprob: -16.50000762939453
    5. 'ounter' → logprob: -17.50000762939453
    6. '_' → logprob: -17.50000762939453
    7. '_COUNTER' → logprob: -18.37500762939453
    8. '_c' → logprob: -18.75000762939453
    9. '_counts' → logprob: -19.25000762939453
    10. ' counter' → logprob: -19.75000762939453

Token 181: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -5.466968650580384e-05
    2. '[input' → logprob: -9.875054359436035
    3. '[' → logprob: -13.625054359436035
    4. 'current' → logprob: -13.750054359436035
    5. '[cur' → logprob: -14.375054359436035
    6. '[curr' → logprob: -15.875054359436035
    7. '[
' → logprob: -17.00005531311035
    8. '_current' → logprob: -18.00005531311035
    9. '```' → logprob: -18.00005531311035
    10. ' [' → logprob: -18.00005531311035

Token 182: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.003485677530989051
    2. 'current' → logprob: -6.503485679626465
    3. 'char' → logprob: -7.003485679626465
    4. '[current' → logprob: -7.378485679626465
    5. '_current' → logprob: -8.003485679626465
    6. '[' → logprob: -10.503485679626465
    7. '_string' → logprob: -10.628485679626465
    8. '```' → logprob: -11.253485679626465
    9. '_chars' → logprob: -11.503485679626465
    10. '_counter' → logprob: -11.503485679626465

Token 183: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013577328063547611
    2. ']+=' → logprob: -6.626357555389404
    3. ']=' → logprob: -11.501358032226562
    4. ' +=' → logprob: -11.876358032226562
    5. '+=' → logprob: -12.126358032226562
    6. '=' → logprob: -12.626358032226562
    7. '[' → logprob: -12.751358032226562
    8. ')' → logprob: -13.126358032226562
    9. ' ]' → logprob: -14.251358032226562
    10. ']+' → logprob: -16.251358032226562

Token 184: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2529595196247101
    2. '+=' → logprob: -2.0029594898223877
    3. ' +=' → logprob: -2.5029594898223877
    4. ' =' → logprob: -5.002959728240967
    5. ']+=' → logprob: -12.502959251403809
    6. ' ' → logprob: -14.377959251403809
    7. '   ' → logprob: -16.002960205078125
    8. '.=' → logprob: -16.127960205078125
    9. '```' → logprob: -16.252960205078125
    10. '[' → logprob: -16.627960205078125

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.375139236450195
    4. '0' → logprob: -17.125139236450195
    5. '```' → logprob: -17.500139236450195
    6. '  ' → logprob: -18.000139236450195
    7. '2' → logprob: -18.375139236450195
    8. '<|end|>' → logprob: -19.562639236450195
    9. '[' → logprob: -19.625139236450195
    10. '
' → logprob: -19.937639236450195

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.500028610229492
    4. '```' → logprob: -17.125028610229492
    5. '2' → logprob: -17.375028610229492
    6. '0' → logprob: -17.625028610229492
    7. '  ' → logprob: -18.000028610229492
    8. '۱' → logprob: -18.937528610229492
    9. '
' → logprob: -19.187528610229492
    10. '[' → logprob: -19.312528610229492

Token 187: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. ' print' → logprob: -13.500001907348633
    3. '```' → logprob: -16.500001907348633
    4. '
' → logprob: -20.125001907348633
    5. 'for' → logprob: -20.375001907348633
    6. '(print' → logprob: -20.750001907348633
    7. '#print' → logprob: -20.875001907348633
    8. '``' → logprob: -21.750001907348633
    9. '<|end|>' → logprob: -22.625001907348633
    10. '.print' → logprob: -22.750001907348633

Token 189: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.07907738536596298
    2. '(' → logprob: -2.5790774822235107
    3. '(substr' → logprob: -9.07907772064209
    4. 'substring' → logprob: -10.32907772064209
    5. '("("' → logprob: -10.95407772064209
    6. ' (' → logprob: -11.57907772064209
    7. '('' → logprob: -12.07907772064209
    8. '((' → logprob: -13.07907772064209
    9. '(len' → logprob: -13.82907772064209
    10. '()' → logprob: -13.95407772064209

Token 190: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -2.2200749754119897e-06
    2. 'tring' → logprob: -13.500001907348633
    3. 'str' → logprob: -14.875001907348633
    4. 'ring' → logprob: -15.250001907348633
    5. 'r' → logprob: -16.625001907348633
    6. 'substring' → logprob: -16.875001907348633
    7. '_string' → logprob: -17.500001907348633
    8. ' string' → logprob: -18.000001907348633
    9. 'strip' → logprob: -18.500001907348633
    10. 'strings' → logprob: -19.000001907348633

Token 191: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.088346359931165e-07
    2. ')_' → logprob: -14.625000953674316
    3. '_counts' → logprob: -15.750000953674316
    4. '_counter' → logprob: -16.25
    5. '_' → logprob: -16.5
    6. '\' → logprob: -17.0
    7. ')' → logprob: -17.625
    8. '_code' → logprob: -17.875
    9. '```' → logprob: -18.125
    10. 'count' → logprob: -18.375

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -14.750000953674316
    4. '+' → logprob: -16.375001907348633
    5. ')`' → logprob: -18.625001907348633
    6. '```' → logprob: -19.000001907348633
    7. '))' → logprob: -19.125001907348633
    8. '`)' → logprob: -19.500001907348633
    9. '')' → logprob: -19.500001907348633
    10. ')#' → logprob: -19.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 190
Tokens correctement prédits (1ère position, stricte): 96
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 160
Précision stricte (1ère position): 50.53%
Précision adaptée (1ère position): 53.68%
Précision (top 10): 84.21%
================================================================================
