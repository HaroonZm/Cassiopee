================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    stop = list(input())
    a, b = 0, 0
    for i in stop:
        if i == 'A':
            a += 1
        else:
            b += 1
    if a > 0 and b > 0:
        print('Yes')
    else:
        print('No')

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.4547159969806671
    2. '\n' → logprob: -1.3297159671783447
    3. '   ' → logprob: -2.7047159671783447
    4. '    
' → logprob: -4.579716205596924
    5. ' 
' → logprob: -5.204716205596924
    6. '    ' → logprob: -5.454716205596924
    7. '```' → logprob: -5.579716205596924
    8. '(' → logprob: -5.954716205596924
    9. ''' → logprob: -6.579716205596924
    10. ' \' → logprob: -7.329716205596924

Token 4: ' stop' (ID: 5666)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7860245108604431
    2. '   ' → logprob: -1.536024570465088
    3. 'pass' → logprob: -2.286024570465088
    4. 'p' → logprob: -2.911024570465088
    5. 'r' → logprob: -2.911024570465088
    6. 'return' → logprob: -3.161024570465088
    7. '#' → logprob: -3.786024570465088
    8. 'a' → logprob: -4.161024570465088
    9. 'i' → logprob: -4.411024570465088
    10. '```' → logprob: -5.411024570465088

Token 5: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1807539314031601
    2. '()' → logprob: -2.9307539463043213
    3. ':' → logprob: -3.4307539463043213
    4. '=' → logprob: -3.5557539463043213
    5. '(' → logprob: -3.8057539463043213
    6. 'word' → logprob: -5.055753707885742
    7. ')' → logprob: -5.180753707885742
    8. '_condition' → logprob: -5.430753707885742
    9. ' ' → logprob: -6.055753707885742
    10. '_token' → logprob: -6.180753707885742

Token 6: ' list' (ID: 1562)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.2574376165866852
    2. 'False' → logprob: -1.7574375867843628
    3. '"' → logprob: -3.6324377059936523
    4. ' True' → logprob: -3.8824377059936523
    5. ''' → logprob: -5.632437705993652
    6. 'True' → logprob: -6.007437705993652
    7. ' ' → logprob: -7.757437705993652
    8. ' None' → logprob: -7.882437705993652
    9. ' "' → logprob: -8.257437705993652
    10. ' '' → logprob: -8.882437705993652

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008585256524384022
    2. '('' → logprob: -5.008585453033447
    3. '()' → logprob: -7.633585453033447
    4. '```' → logprob: -8.383584976196289
    5. '("("' → logprob: -8.633584976196289
    6. ' (' → logprob: -9.008584976196289
    7. '[' → logprob: -9.258584976196289
    8. '((' → logprob: -9.383584976196289
    9. '[(' → logprob: -9.508584976196289
    10. '(range' → logprob: -9.508584976196289

Token 8: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20765824615955353
    2. '()' → logprob: -1.832658290863037
    3. '(' → logprob: -4.332658290863037
    4. '('' → logprob: -4.832658290863037
    5. ')' → logprob: -5.332658290863037
    6. ' ())' → logprob: -7.457658290863037
    7. '().' → logprob: -7.582658290863037
    8. '("' → logprob: -8.957657814025879
    9. '()))' → logprob: -9.707657814025879
    10. '(""))' → logprob: -9.957657814025879

Token 9: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5442495346069336
    2. '(' → logprob: -1.9192495346069336
    3. '.' → logprob: -2.5442495346069336
    4. '()' → logprob: -2.9192495346069336
    5. '_' → logprob: -3.1692495346069336
    6. ' ' → logprob: -3.2942495346069336
    7. '=' → logprob: -4.169249534606934
    8. '[' → logprob: -4.419249534606934
    9. ':' → logprob: -4.544249534606934
    10. '[:]' → logprob: -5.169249534606934

Token 10: ' a' (ID: 261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4957113265991211
    2. '.' → logprob: -1.620711326599121
    3. '[' → logprob: -2.870711326599121
    4. ':' → logprob: -3.245711326599121
    5. '=' → logprob: -3.870711326599121
    6. ',' → logprob: -4.120711326599121
    7. '(' → logprob: -4.245711326599121
    8. ' ' → logprob: -4.495711326599121
    9. '_' → logprob: -4.995711326599121
    10. '()' → logprob: -4.995711326599121

Token 11: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8665165305137634
    2. '=' → logprob: -1.2415165901184082
    3. 'rray' → logprob: -2.991516590118408
    4. 's' → logprob: -3.116516590118408
    5. 'dd' → logprob: -4.116516590118408
    6. 'ct' → logprob: -4.241516590118408
    7. ' ' → logprob: -4.241516590118408
    8. '.append' → logprob: -4.366516590118408
    9. 'p' → logprob: -4.491516590118408
    10. '.' → logprob: -4.616516590118408

Token 12: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0696631669998169
    2. ' b' → logprob: -2.8196630477905273
    3. ' =' → logprob: -6.069663047790527
    4. 's' → logprob: -6.444663047790527
    5. 'stop' → logprob: -6.694663047790527
    6. 'n' → logprob: -7.944663047790527
    7. '=' → logprob: -7.944663047790527
    8. ' s' → logprob: -8.069663047790527
    9. '_' → logprob: -8.194663047790527
    10. 'i' → logprob: -8.319663047790527

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014822274446487427
    2. '=' → logprob: -4.264822483062744
    3. ',' → logprob: -7.389822483062744
    4. ' ' → logprob: -11.264822006225586
    5. ')' → logprob: -11.639822006225586
    6. ' ,' → logprob: -11.639822006225586
    7. '_' → logprob: -12.389822006225586
    8. '  ' → logprob: -13.514822006225586
    9. '[' → logprob: -14.139822006225586
    10. ' =
' → logprob: -14.327322006225586

Token 14: ' ' (ID: 220)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.1577671766281128
    2. ' map' → logprob: -1.5327671766281128
    3. '0' → logprob: -2.0327672958374023
    4. ' ' → logprob: -2.4077672958374023
    5. 'stop' → logprob: -2.6577672958374023
    6. '1' → logprob: -2.6577672958374023
    7. ' stop' → logprob: -3.2827672958374023
    8. 'input' → logprob: -3.5327672958374023
    9. ' input' → logprob: -4.282767295837402
    10. 'len' → logprob: -5.157767295837402

Token 15: '0' (ID: 15)
  Prédit: 'stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stop' → logprob: -0.8052185773849487
    2. 'map' → logprob: -1.0552185773849487
    3. 'input' → logprob: -2.5552186965942383
    4. '0' → logprob: -2.9302186965942383
    5. '1' → logprob: -3.8052186965942383
    6. 'len' → logprob: -4.055218696594238
    7. ' map' → logprob: -4.555218696594238
    8. 'int' → logprob: -5.055218696594238
    9. ' stop' → logprob: -5.055218696594238
    10. ' ' → logprob: -6.055218696594238

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4051617681980133
    2. '<|end|>' → logprob: -1.155161738395691
    3. '<|end|>' → logprob: -4.7801618576049805
    4. ' ,' → logprob: -4.9051618576049805
    5. '0' → logprob: -7.5301618576049805
    6. ')' → logprob: -7.7801618576049805
    7. ' ' → logprob: -8.53016185760498
    8. 'b' → logprob: -8.65516185760498
    9. '1' → logprob: -8.78016185760498
    10. 'a' → logprob: -8.90516185760498

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12281827628612518
    2. ' ' → logprob: -2.2478182315826416
    3. 'len' → logprob: -4.872818470001221
    4. ' len' → logprob: -6.497818470001221
    5. '1' → logprob: -7.372818470001221
    6. '10' → logprob: -10.747817993164062
    7. '2' → logprob: -10.872817993164062
    8. '  ' → logprob: -10.997817993164062
    9. '100' → logprob: -11.247817993164062
    10. '5' → logprob: -11.497817993164062

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05212927237153053
    2. 'len' → logprob: -3.3021292686462402
    3. '1' → logprob: -4.42712926864624
    4. ' ' → logprob: -6.80212926864624
    5. ' len' → logprob: -8.552129745483398
    6. '-' → logprob: -8.927129745483398
    7. '2' → logprob: -9.177129745483398
    8. '3' → logprob: -9.302129745483398
    9. '9' → logprob: -9.427129745483398
    10. '4' → logprob: -9.427129745483398

Token 19: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4977637529373169
    2. '
' → logprob: -1.247763752937317
    3. ' ' → logprob: -3.8727636337280273
    4. '```' → logprob: -3.9977636337280273
    5. 'while' → logprob: -4.247763633728027
    6. '    
' → logprob: -4.622763633728027
    7. ' while' → logprob: -4.747763633728027
    8. '  ' → logprob: -5.372763633728027
    9. '  
' → logprob: -5.497763633728027
    10. ' 
' → logprob: -5.747763633728027

Token 20: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5102573037147522
    2. '   ' → logprob: -1.2602572441101074
    3. '<|end|>' → logprob: -3.1352572441101074
    4. ' ' → logprob: -3.6352572441101074
    5. ' 
' → logprob: -4.760257244110107
    6. '  
' → logprob: -4.885257244110107
    7. '\n' → logprob: -4.885257244110107
    8. '    
' → logprob: -5.135257244110107
    9. '```' → logprob: -5.885257244110107
    10. '  ' → logprob: -6.010257244110107

Token 21: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1582087278366089
    2. ' while' → logprob: -1.9082087278366089
    3. '   ' → logprob: -2.0332088470458984
    4. 'while' → logprob: -2.0332088470458984
    5. 'for' (adapté à ' for') → logprob: -2.1582088470458984
    6. ' ' → logprob: -2.7832088470458984
    7. '```' → logprob: -3.1582088470458984
    8. '
' → logprob: -3.9082088470458984
    9. '<|end|>' → logprob: -5.283208847045898
    10. '\n' → logprob: -5.408208847045898

Token 22: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7429656386375427
    2. ' ' → logprob: -1.3679656982421875
    3. ' i' → logprob: -1.7429656982421875
    4. ' s' → logprob: -2.7429656982421875
    5. 'c' → logprob: -4.4929656982421875
    6. ' stop' → logprob: -5.7429656982421875
    7. '_' → logprob: -5.8679656982421875
    8. ' ch' → logprob: -5.9929656982421875
    9. 's' → logprob: -6.1179656982421875
    10. ' _' → logprob: -6.4929656982421875

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018388954922556877
    2. 'in' → logprob: -4.268388748168945
    3. 'n' → logprob: -6.393388748168945
    4. ' ' → logprob: -6.643388748168945
    5. '  ' → logprob: -7.518388748168945
    6. ',' → logprob: -8.518388748168945
    7. ' n' → logprob: -8.643388748168945
    8. '_' → logprob: -9.643388748168945
    9. '(' → logprob: -10.018388748168945
    10. '   ' → logprob: -10.268388748168945

Token 24: ' stop' (ID: 5666)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.059675250202417374
    2. 'range' → logprob: -3.4346752166748047
    3. ' stop' → logprob: -3.6846752166748047
    4. 'stop' → logprob: -7.559675216674805
    5. ' ' → logprob: -10.559675216674805
    6. '  ' → logprob: -10.934675216674805
    7. '   ' → logprob: -12.184675216674805
    8. '```' → logprob: -12.684675216674805
    9. '	range' → logprob: -13.309675216674805
    10. ' ' → logprob: -13.372175216674805

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017566323280334473
    2. ' in' → logprob: -4.267566204071045
    3. '):' → logprob: -7.017566204071045
    4. 'in' → logprob: -7.142566204071045
    5. ' :' → logprob: -7.267566204071045
    6. ',' → logprob: -8.517566680908203
    7. '   ' → logprob: -9.142566680908203
    8. '[' → logprob: -9.267566680908203
    9. ' ' → logprob: -9.642566680908203
    10. '():' → logprob: -9.892566680908203

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7237505316734314
    2. '    ' → logprob: -1.0987505912780762
    3. ':' → logprob: -2.723750591278076
    4. ' ' → logprob: -2.848750591278076
    5. '   ' → logprob: -3.598750591278076
    6. '<|end|>' → logprob: -4.223750591278076
    7. 'if' → logprob: -5.098750591278076
    8. ' if' → logprob: -6.098750591278076
    9. '        ' → logprob: -6.473750591278076
    10. '```' → logprob: -7.473750591278076

Token 27: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11174999177455902
    2. 'if' (adapté à ' if') → logprob: -2.7367498874664307
    3. '    ' → logprob: -3.9867498874664307
    4. '   ' → logprob: -4.23675012588501
    5. '       ' → logprob: -5.48675012588501
    6. ' ' → logprob: -5.86175012588501
    7. 'i' → logprob: -8.861749649047852
    8. '  ' → logprob: -8.986749649047852
    9. '        ' → logprob: -8.986749649047852
    10. ' i' → logprob: -9.486749649047852

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12735609710216522
    2. 'i' → logprob: -2.1273560523986816
    3. ' ' → logprob: -8.00235652923584
    4. '  ' → logprob: -10.00235652923584
    5. ' not' → logprob: -10.87735652923584
    6. '(i' → logprob: -11.62735652923584
    7. '   ' → logprob: -12.50235652923584
    8. ' ' → logprob: -13.00235652923584
    9. '	i' → logprob: -13.25235652923584
    10. 'a' → logprob: -13.37735652923584

Token 29: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12950511276721954
    2. '==' → logprob: -2.129505157470703
    3. ' in' → logprob: -6.629505157470703
    4. ' ' → logprob: -7.379505157470703
    5. '=' → logprob: -8.379505157470703
    6. ' =='' → logprob: -9.629505157470703
    7. '=='' → logprob: -9.879505157470703
    8. ' =' → logprob: -10.379505157470703
    9. '.' → logprob: -10.629505157470703
    10. '=="' → logprob: -10.879505157470703

Token 30: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08317118138074875
    2. ''a' → logprob: -3.2081711292266846
    3. ''A' → logprob: -4.458171367645264
    4. '"' → logprob: -4.708171367645264
    5. ' '' → logprob: -5.208171367645264
    6. ''S' → logprob: -6.083171367645264
    7. ''U' → logprob: -6.458171367645264
    8. ''O' → logprob: -6.583171367645264
    9. ''o' → logprob: -6.708171367645264
    10. ''L' → logprob: -7.333171367645264

Token 31: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0331097841262817
    2. 'R' → logprob: -1.5331097841262817
    3. 'a' → logprob: -1.9081097841262817
    4. 'L' → logprob: -2.158109664916992
    5. ''' → logprob: -3.158109664916992
    6. 'I' → logprob: -4.033109664916992
    7. 'B' → logprob: -4.033109664916992
    8. 'S' → logprob: -4.283109664916992
    9. '0' → logprob: -4.658109664916992
    10. 'U' → logprob: -4.783109664916992

Token 32: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.02496383525431156
    2. ''' → logprob: -3.774963855743408
    3. '':
' → logprob: -7.024963855743408
    4. ' ':' → logprob: -7.899963855743408
    5. '':
' → logprob: -8.89996337890625
    6. ' '' → logprob: -9.02496337890625
    7. ':' → logprob: -9.52496337890625
    8. '+' → logprob: -9.89996337890625
    9. ''s' → logprob: -10.27496337890625
    10. '':

' → logprob: -11.77496337890625

Token 33: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7527316212654114
    2. ' a' → logprob: -1.5027315616607666
    3. '       ' → logprob: -1.6277315616607666
    4. 'a' → logprob: -2.5027315616607666
    5. ' ' → logprob: -4.877731800079346
    6. ' :' → logprob: -5.627731800079346
    7. '           ' → logprob: -5.752731800079346
    8. ' and' → logprob: -6.752731800079346
    9. ' +' → logprob: -6.877731800079346
    10. ' b' → logprob: -6.877731800079346

Token 34: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5240983366966248
    2. 'a' (adapté à ' a') → logprob: -0.8990983366966248
    3. ' ' → logprob: -7.5240983963012695
    4. 'b' → logprob: -8.64909839630127
    5. ' b' → logprob: -8.77409839630127
    6. '    ' → logprob: -10.52409839630127
    7. '+' → logprob: -11.02409839630127
    8. '<|end|>' → logprob: -11.52409839630127
    9. '```' → logprob: -12.02409839630127
    10. ' +' → logprob: -12.02409839630127

Token 35: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014506053179502487
    2. ' +=' → logprob: -4.264505863189697
    3. '+' → logprob: -8.014506340026855
    4. '=' → logprob: -11.389506340026855
    5. '+='' → logprob: -15.639506340026855
    6. ']+=' → logprob: -15.889506340026855
    7. '+=(' → logprob: -16.38950538635254
    8. ' ' → logprob: -17.13950538635254
    9. '++' → logprob: -17.26450538635254
    10. ' +' → logprob: -17.63950538635254

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011049824766814709
    2. ' ' → logprob: -4.511049747467041
    3. '2' → logprob: -14.3860502243042
    4. '3' → logprob: -15.0110502243042
    5. '10' → logprob: -15.1360502243042
    6. '   ' → logprob: -16.386049270629883
    7. '4' → logprob: -16.386049270629883
    8. '0' → logprob: -16.573549270629883
    9. '  ' → logprob: -16.573549270629883
    10. '+' → logprob: -16.636049270629883

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001294030516874045
    2. ' ' → logprob: -9.000129699707031
    3. '2' → logprob: -12.625129699707031
    4. '3' → logprob: -14.000129699707031
    5. '10' → logprob: -15.000129699707031
    6. '+' → logprob: -15.875129699707031
    7. '4' → logprob: -15.937629699707031
    8. '   ' → logprob: -15.937629699707031
    9. 'a' → logprob: -16.12512969970703
    10. '１' → logprob: -16.12512969970703

Token 38: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07421020418405533
    2. ' else' → logprob: -3.3242101669311523
    3. ' elif' → logprob: -4.199210166931152
    4. 'else' → logprob: -4.699210166931152
    5. 'elif' → logprob: -4.949210166931152
    6. ' ' → logprob: -6.449210166931152
    7. '<|end|>' → logprob: -7.199210166931152
    8. '   ' → logprob: -7.574210166931152
    9. '        ' → logprob: -7.824210166931152
    10. '```' → logprob: -8.074210166931152

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049132850021123886
    2. '<|end|>' → logprob: -3.799132823944092
    3. ' else' → logprob: -5.049132823944092
    4. ' elif' → logprob: -5.049132823944092
    5. 'elif' → logprob: -5.299132823944092
    6. 'else' → logprob: -6.049132823944092
    7. ' ' → logprob: -6.174132823944092
    8. '        ' → logprob: -6.799132823944092
    9. '    ' → logprob: -7.549132823944092
    10. '<|end|>' → logprob: -7.924132823944092

Token 40: ' else' (ID: 1203)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.2794724106788635
    2. 'elif' → logprob: -1.6544723510742188
    3. ' else' → logprob: -3.1544723510742188
    4. 'else' (adapté à ' else') → logprob: -4.654472351074219
    5. ' ' → logprob: -8.154472351074219
    6. '       ' → logprob: -9.779472351074219
    7. '	elif' → logprob: -10.279472351074219
    8. '    ' → logprob: -10.529472351074219
    9. '   ' → logprob: -11.154472351074219
    10. ' if' → logprob: -12.279472351074219

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036855933722108603
    2. ':
' → logprob: -5.628685474395752
    3. '<|end|>' → logprob: -9.62868595123291
    4. ':

' → logprob: -12.37868595123291
    5. ' :' → logprob: -12.50368595123291
    6. 's' → logprob: -12.62868595123291
    7. ' ' → logprob: -13.87868595123291
    8. '           ' → logprob: -13.87868595123291
    9. '<|end|>' → logprob: -13.87868595123291
    10. '```' → logprob: -14.37868595123291

Token 42: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20153720676898956
    2. ' b' → logprob: -2.0765371322631836
    3. 'b' → logprob: -3.2015371322631836
    4. '    ' → logprob: -4.826537132263184
    5. '   ' → logprob: -5.826537132263184
    6. '       ' → logprob: -5.951537132263184
    7. ' ' → logprob: -6.576537132263184
    8. '```' → logprob: -7.701537132263184
    9. ':' → logprob: -7.826537132263184
    10. '  ' → logprob: -9.576537132263184

Token 43: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10021637380123138
    2. 'b' (adapté à ' b') → logprob: -2.3502163887023926
    3. '           ' → logprob: -12.225215911865234
    4. '    ' → logprob: -12.725215911865234
    5. ' ' → logprob: -14.350215911865234
    6. '   ' → logprob: -14.600215911865234
    7. '	b' → logprob: -14.975215911865234
    8. '```' → logprob: -15.850215911865234
    9. '       ' → logprob: -16.100215911865234
    10. ' ' → logprob: -16.475215911865234

Token 44: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12699110805988312
    2. ' +=' → logprob: -2.126991033554077
    3. '+' → logprob: -10.376991271972656
    4. '=' → logprob: -10.376991271972656
    5. ']+=' → logprob: -15.251991271972656
    6. ' ' → logprob: -15.876991271972656
    7. ' +' → logprob: -16.126991271972656
    8. '+='' → logprob: -16.251991271972656
    9. '+=(' → logprob: -16.876991271972656
    10. '+="' → logprob: -17.001991271972656

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233882926404476
    2. ' ' → logprob: -5.2552337646484375
    3. '<|end|>' → logprob: -16.880233764648438
    4. '   ' → logprob: -17.255233764648438
    5. '0' → logprob: -18.005233764648438
    6. '１' → logprob: -18.380233764648438
    7. '  ' → logprob: -18.380233764648438
    8. '```' → logprob: -19.130233764648438
    9. '<|end|>' → logprob: -19.505233764648438
    10. '    ' → logprob: -19.630233764648438

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '<|end|>' → logprob: -16.625036239624023
    4. '   ' → logprob: -17.125036239624023
    5. '  ' → logprob: -18.375036239624023
    6. '１' → logprob: -18.500036239624023
    7. '-' → logprob: -18.875036239624023
    8. '```' → logprob: -18.875036239624023
    9. '<|end|>' → logprob: -19.500036239624023
    10. '१' → logprob: -19.750036239624023

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020052673295140266
    2. '   ' → logprob: -4.270052909851074
    3. '<|end|>' → logprob: -5.770052909851074
    4. '    
' → logprob: -7.145052909851074
    5. '  
' → logprob: -7.145052909851074
    6. ' 
' → logprob: -8.270052909851074
    7. '\n' → logprob: -8.520052909851074
    8. ' ' → logprob: -8.645052909851074
    9. '
' → logprob: -8.895052909851074
    10. '```' → logprob: -9.145052909851074

Token 48: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018494760617613792
    2. '   ' → logprob: -4.393494606018066
    3. '    
' → logprob: -6.268494606018066
    4. '  
' → logprob: -6.643494606018066
    5. '```' → logprob: -6.768494606018066
    6. '
' → logprob: -8.018494606018066
    7. '\n' → logprob: -8.268494606018066
    8. '<|end|>' → logprob: -8.393494606018066
    9. '' → logprob: -8.768494606018066
    10. ' 
' → logprob: -9.018494606018066

Token 49: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.046244047582149506
    2. '   ' → logprob: -3.2962441444396973
    3. '    
' → logprob: -5.921244144439697
    4. '  
' → logprob: -6.296244144439697
    5. '<|end|>' → logprob: -7.046244144439697
    6. ' 
' → logprob: -7.171244144439697
    7. '```' → logprob: -7.546244144439697
    8. ' if' → logprob: -7.671244144439697
    9. '
' → logprob: -8.421243667602539
    10. ' ' → logprob: -8.796243667602539

Token 50: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.007627211511135101
    2. 'a' → logprob: -4.882627010345459
    3. ' ' → logprob: -11.007627487182617
    4. ' ' → logprob: -12.757627487182617
    5. '	a' → logprob: -14.507627487182617
    6. '_a' → logprob: -14.882627487182617
    7. '  ' → logprob: -15.382627487182617
    8. ' b' → logprob: -15.757627487182617
    9. '(a' → logprob: -15.757627487182617
    10. '   ' → logprob: -16.882627487182617

Token 51: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.28672677278518677
    2. ' >' → logprob: -1.411726713180542
    3. '==' → logprob: -5.536726951599121
    4. ' ==' → logprob: -6.536726951599121
    5. ' ' → logprob: -9.661726951599121
    6. '>=' → logprob: -10.036726951599121
    7. '<' → logprob: -11.161726951599121
    8. '>b' → logprob: -11.411726951599121
    9. ' >=' → logprob: -11.786726951599121
    10. '=' → logprob: -11.911726951599121

Token 52: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12692894041538239
    2. ' b' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.25192928314209
    4. '	b' → logprob: -16.751928329467773
    5. '>b' → logprob: -17.001928329467773
    6. '   ' → logprob: -17.126928329467773
    7. '<|end|>' → logprob: -17.501928329467773
    8. ' б' → logprob: -18.126928329467773
    9. '  ' → logprob: -18.376928329467773
    10. '```' → logprob: -19.126928329467773

Token 53: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00017982252757064998
    2. ' b' → logprob: -8.6251802444458
    3. ' ' → logprob: -16.125179290771484
    4. '   ' → logprob: -18.000179290771484
    5. '0' → logprob: -18.250179290771484
    6. '	b' → logprob: -18.750179290771484
    7. '  ' → logprob: -19.000179290771484
    8. '<|end|>' → logprob: -19.625179290771484
    9. '>b' → logprob: -19.625179290771484
    10. '    ' → logprob: -20.625179290771484

Token 54: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06290014088153839
    2. ':' → logprob: -3.3129000663757324
    3. 'and' → logprob: -3.8129000663757324
    4. '>' → logprob: -6.562900066375732
    5. ' ' → logprob: -7.437900066375732
    6. ' >' → logprob: -8.18790054321289
    7. ' :' → logprob: -10.06290054321289
    8. ' a' → logprob: -10.06290054321289
    9. ' or' → logprob: -10.56290054321289
    10. 'a' → logprob: -10.93790054321289

Token 55: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07891865074634552
    2. 'b' → logprob: -2.578918695449829
    3. ' ' → logprob: -11.20391845703125
    4. 'a' → logprob: -12.57891845703125
    5. ' a' → logprob: -12.57891845703125
    6. ' not' → logprob: -12.95391845703125
    7. ' ' → logprob: -13.07891845703125
    8. ' stop' → logprob: -13.57891845703125
    9. 'stop' → logprob: -14.57891845703125
    10. '   ' → logprob: -14.82891845703125

Token 56: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04884941503405571
    2. '>' → logprob: -3.04884934425354
    3. ' ==' → logprob: -8.548849105834961
    4. ' ' → logprob: -10.423849105834961
    5. '==' → logprob: -10.423849105834961
    6. '<|end|>' → logprob: -12.923849105834961
    7. ' <' → logprob: -13.048849105834961
    8. '<|end|>' → logprob: -14.673849105834961
    9. '.' → logprob: -14.798849105834961
    10. ' ' → logprob: -14.798849105834961

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5760207772254944
    2. ' ' → logprob: -0.8260207772254944
    3. '<|end|>' → logprob: -9.951021194458008
    4. '1' → logprob: -11.701021194458008
    5. '  ' → logprob: -11.826021194458008
    6. 'a' → logprob: -12.826021194458008
    7. '<|end|>' → logprob: -12.826021194458008
    8. '>' → logprob: -12.951021194458008
    9. '=' → logprob: -13.076021194458008
    10. '   ' → logprob: -13.263521194458008

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005937686190009117
    2. ' ' → logprob: -5.130937576293945
    3. '1' → logprob: -12.755937576293945
    4. 'a' → logprob: -13.255937576293945
    5. '  ' → logprob: -14.443437576293945
    6. '<|end|>' → logprob: -14.630937576293945
    7. '>' → logprob: -15.005937576293945
    8. '   ' → logprob: -15.005937576293945
    9. '=' → logprob: -15.193437576293945
    10. '.' → logprob: -15.380937576293945

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010572222527116537
    2. ':
' → logprob: -6.876057147979736
    3. ' and' → logprob: -11.626057624816895
    4. '   ' → logprob: -12.501057624816895
    5. ':return' → logprob: -12.626057624816895
    6. ',' → logprob: -12.751057624816895
    7. ' :' → logprob: -13.001057624816895
    8. '       ' → logprob: -13.501057624816895
    9. ':

' → logprob: -14.626057624816895
    10. '.' → logprob: -15.001057624816895

Token 60: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21269673109054565
    2. '       ' → logprob: -1.7126967906951904
    3. '   ' → logprob: -5.337696552276611
    4. ':
' → logprob: -5.337696552276611
    5. '.' → logprob: -7.587696552276611
    6. ',' → logprob: -7.712696552276611
    7. ' and' → logprob: -8.71269702911377
    8. 'print' → logprob: -9.08769702911377
    9. ':return' → logprob: -10.21269702911377
    10. '<|end|>' → logprob: -10.21269702911377

Token 61: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7827176451683044
    2. 'print' (adapté à ' print') → logprob: -1.2827177047729492
    3. '       ' → logprob: -2.032717704772949
    4. ' return' → logprob: -2.532717704772949
    5. '   ' → logprob: -3.532717704772949
    6. 'return' → logprob: -3.907717704772949
    7. '    ' → logprob: -6.032717704772949
    8. ' if' → logprob: -7.407717704772949
    9. ' stop' → logprob: -7.407717704772949
    10. ' for' → logprob: -7.907717704772949

Token 62: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4761093854904175
    2. '("' → logprob: -1.2261093854904175
    3. '('' → logprob: -2.601109504699707
    4. '()' → logprob: -4.601109504699707
    5. '("("' → logprob: -7.976109504699707
    6. '("")' → logprob: -8.351109504699707
    7. '"' → logprob: -9.351109504699707
    8. '(True' → logprob: -9.726109504699707
    9. '((' → logprob: -9.851109504699707
    10. '(
' → logprob: -10.101109504699707

Token 63: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.2771938145160675
    2. 'DRAW' → logprob: -3.027193784713745
    3. 'Y' → logprob: -3.152193784713745
    4. 'No' → logprob: -3.402193784713745
    5. 'YES' → logprob: -3.652193784713745
    6. 'Tie' → logprob: -4.152194023132324
    7. 'Draw' → logprob: -5.027194023132324
    8. 'Mixed' → logprob: -5.152194023132324
    9. 'NO' → logprob: -5.527194023132324
    10. ' Yes' → logprob: -5.527194023132324

Token 64: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.046734265983104706
    2. '')
' → logprob: -3.29673433303833
    3. ')' → logprob: -4.79673433303833
    4. '!' → logprob: -9.046733856201172
    5. '')
' → logprob: -9.171733856201172
    6. ')
' → logprob: -9.296733856201172
    7. ')')
' → logprob: -10.546733856201172
    8. '")' → logprob: -10.796733856201172
    9. '!')
' → logprob: -11.046733856201172
    10. '')

' → logprob: -12.046733856201172

Token 65: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.302310585975647
    2. '   ' → logprob: -2.3023104667663574
    3. '<|end|>' → logprob: -2.3023104667663574
    4. ' else' → logprob: -3.0523104667663574
    5. '```' → logprob: -5.552310466766357
    6. '<|end|>' → logprob: -5.677310466766357
    7. '
' → logprob: -6.052310466766357
    8. '	else' → logprob: -6.802310466766357
    9. 'elif' → logprob: -6.927310466766357
    10. ' ' → logprob: -7.552310466766357

Token 66: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.11178431659936905
    2. ' else' → logprob: -2.4867842197418213
    3. '<|end|>' → logprob: -4.3617844581604
    4. 'elif' → logprob: -5.4867844581604
    5. '   ' → logprob: -5.4867844581604
    6. ' ' → logprob: -7.8617844581604
    7. '<|end|>' → logprob: -8.111783981323242
    8. '```' → logprob: -8.111783981323242
    9. ' elif' → logprob: -8.361783981323242
    10. '	else' → logprob: -8.736783981323242

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.006006828509271e-05
    2. ':
' → logprob: -9.500080108642578
    3. '       ' → logprob: -13.000080108642578
    4. '   ' → logprob: -14.000080108642578
    5. ' :' → logprob: -14.250080108642578
    6. '<|end|>' → logprob: -14.625080108642578
    7. ':return' → logprob: -14.875080108642578
    8. '):' → logprob: -15.125080108642578
    9. '():' → logprob: -16.250080108642578
    10. ':

' → logprob: -17.125080108642578

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002158146962756291
    2. '<|end|>' → logprob: -8.750215530395508
    3. 'print' → logprob: -10.500215530395508
    4. '   ' → logprob: -11.875215530395508
    5. '```' → logprob: -12.625215530395508
    6. '<|end|>' → logprob: -12.625215530395508
    7. '           ' → logprob: -13.125215530395508
    8. ' ' → logprob: -13.500215530395508
    9. '        ' → logprob: -13.625215530395508
    10. '        
' → logprob: -13.750215530395508

Token 69: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.11053340882062912
    2. ' print' → logprob: -2.4855334758758545
    3. '   ' → logprob: -4.235533237457275
    4. '       ' → logprob: -4.985533237457275
    5. '	print' → logprob: -10.985533714294434
    6. '```' → logprob: -11.235533714294434
    7. ' ' → logprob: -11.610533714294434
    8. '    ' → logprob: -11.860533714294434
    9. '           ' → logprob: -12.735533714294434
    10. '  ' → logprob: -13.860533714294434

Token 70: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16060194373130798
    2. '(' → logprob: -1.9106019735336304
    3. '()' → logprob: -7.91060209274292
    4. '("' → logprob: -12.785601615905762
    5. '(False' → logprob: -12.785601615905762
    6. '(None' → logprob: -12.910601615905762
    7. '(('' → logprob: -14.285601615905762
    8. '(True' → logprob: -14.660601615905762
    9. '(\'' → logprob: -14.785601615905762
    10. '(
' → logprob: -15.035601615905762

Token 71: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0002142650482710451
    2. 'Yes' → logprob: -8.750214576721191
    3. ''' → logprob: -9.875214576721191
    4. ' No' → logprob: -13.250214576721191
    5. 'NO' → logprob: -13.625214576721191
    6. '')' → logprob: -15.375214576721191
    7. '"No' → logprob: -15.375214576721191
    8. 'None' → logprob: -16.000213623046875
    9. 'Not' → logprob: -16.250213623046875
    10. 'All' → logprob: -16.750213623046875

Token 72: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0004446124075911939
    2. ')' → logprob: -7.750444412231445
    3. '')
' → logprob: -11.250444412231445
    4. '")' → logprob: -14.250444412231445
    5. '')

' → logprob: -16.125444412231445
    6. ''' → logprob: -17.125444412231445
    7. '')"' → logprob: -18.000444412231445
    8. '```' → logprob: -18.375444412231445
    9. '   ' → logprob: -18.625444412231445
    10. '}')' → logprob: -18.875444412231445

Token 73: 'main' (ID: 7731)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1621469259262085
    2. '<|end|>' → logprob: -2.537147045135498
    3. '\n' → logprob: -2.787147045135498
    4. '\' → logprob: -5.412147045135498
    5. '```' → logprob: -7.287147045135498
    6. '#' → logprob: -7.287147045135498
    7. 'main' → logprob: -7.537147045135498
    8. '<|end|>' → logprob: -7.662147045135498
    9. 'n' → logprob: -8.16214656829834
    10. '' → logprob: -8.16214656829834

Token 74: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5231887102127075
    2. '(' → logprob: -0.8981887102127075
    3. '(
' → logprob: -11.523188591003418
    4. '```' → logprob: -11.523188591003418
    5. ')' → logprob: -11.773188591003418
    6. '().' → logprob: -12.398188591003418
    7. '('' → logprob: -12.773188591003418
    8. '(

' → logprob: -12.773188591003418
    9. '<|end|>' → logprob: -12.773188591003418
    10. '(`' → logprob: -12.898188591003418


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 62
Précision stricte (1ère position): 38.89%
Précision adaptée (1ère position): 41.67%
Précision (top 10): 86.11%
================================================================================
