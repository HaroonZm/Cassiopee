================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
S = input()
K = int(input())
point = S[K - 1]
word = ""
for i in range(N):
    if S[i] == point:
        word += S[i]
    else:
        word += "*"
print(word)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003559615579433739
    2. '('' → logprob: -8.87535572052002
    3. '(N' → logprob: -9.00035572052002
    4. ''' → logprob: -11.00035572052002
    5. '(input' → logprob: -11.00035572052002
    6. '(
' → logprob: -11.25035572052002
    7. '()' → logprob: -11.37535572052002
    8. '("("' → logprob: -11.37535572052002
    9. '```' → logprob: -12.12535572052002
    10. '(`' → logprob: -12.37535572052002

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7158713936805725
    2. 'if' → logprob: -1.2158713340759277
    3. '\n' → logprob: -2.5908713340759277
    4. 's' → logprob: -3.7158713340759277
    5. 'i' → logprob: -3.8408713340759277
    6. 'x' → logprob: -4.215871334075928
    7. '```' → logprob: -4.340871334075928
    8. '`' → logprob: -4.715871334075928
    9. 'a' → logprob: -4.715871334075928
    10. ')' → logprob: -4.965871334075928

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11139343678951263
    2. '=' → logprob: -2.861393451690674
    3. '[' → logprob: -3.236393451690674
    4. ' =' → logprob: -4.861393451690674
    5. ')' → logprob: -8.236392974853516
    6. '_' → logprob: -8.486392974853516
    7. 'u' → logprob: -9.861392974853516
    8. '.=' → logprob: -9.861392974853516
    9. '[:]' → logprob: -9.986392974853516
    10. ':' → logprob: -9.986392974853516

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08980905264616013
    2. ' input' → logprob: -2.464808940887451
    3. '""' → logprob: -8.21480941772461
    4. ' ' → logprob: -8.58980941772461
    5. '0' → logprob: -8.83980941772461
    6. '"' → logprob: -9.71480941772461
    7. '[]' → logprob: -10.08980941772461
    8. '''' → logprob: -10.58980941772461
    9. 'list' → logprob: -10.96480941772461
    10. '[input' → logprob: -10.96480941772461

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007787258364260197
    2. '()' → logprob: -5.257787227630615
    3. '('' → logprob: -7.132787227630615
    4. ''' → logprob: -7.382787227630615
    5. ')' → logprob: -7.382787227630615
    6. '"' → logprob: -9.257787704467773
    7. '(
' → logprob: -9.507787704467773
    8. '```' → logprob: -9.757787704467773
    9. '("("' → logprob: -9.882787704467773
    10. ' (' → logprob: -10.007787704467773

Token 9: 'K' (ID: 42)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5799543261528015
    2. 'if' → logprob: -1.3299543857574463
    3. 'count' → logprob: -2.7049543857574463
    4. 'i' → logprob: -3.2049543857574463
    5. 'f' → logprob: -3.8299543857574463
    6. 'result' → logprob: -4.204954147338867
    7. 'c' → logprob: -4.954954147338867
    8. 'sum' → logprob: -5.329954147338867
    9. 'd' → logprob: -5.829954147338867
    10. 's' → logprob: -5.954954147338867

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1297551840543747
    2. '=' → logprob: -2.1297552585601807
    3. ' ' → logprob: -6.629755020141602
    4. ',' → logprob: -6.754755020141602
    5. '[' → logprob: -9.004755020141602
    6. '.' → logprob: -9.129755020141602
    7. '_' → logprob: -10.629755020141602
    8. '=int' → logprob: -11.129755020141602
    9. '=input' → logprob: -11.879755020141602
    10. '-' → logprob: -11.879755020141602

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16046956181526184
    2. 'int' → logprob: -1.9104695320129395
    3. ' N' → logprob: -9.035470008850098
    4. ' ' → logprob: -9.910470008850098
    5. '=int' → logprob: -10.660470008850098
    6. '[int' → logprob: -10.785470008850098
    7. '<int' → logprob: -11.285470008850098
    8. '0' → logprob: -12.535470008850098
    9. '(int' → logprob: -12.660470008850098
    10. 'N' → logprob: -12.785470008850098

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06583966314792633
    2. '()' → logprob: -3.0658397674560547
    3. '('' → logprob: -4.190839767456055
    4. ' (' → logprob: -8.190839767456055
    5. '(K' → logprob: -8.440839767456055
    6. ' ' → logprob: -8.565839767456055
    7. '(S' → logprob: -8.815839767456055
    8. '```' → logprob: -8.940839767456055
    9. '("' → logprob: -9.065839767456055
    10. '(input' → logprob: -9.065839767456055

Token 13: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.060494355857372284
    2. '()' → logprob: -3.3104944229125977
    3. '())' → logprob: -3.8104944229125977
    4. '`)' → logprob: -10.060494422912598
    5. ' )' → logprob: -11.935494422912598
    6. '(' → logprob: -12.935494422912598
    7. '))' → logprob: -12.935494422912598
    8. '```' → logprob: -13.185494422912598
    9. '）' → logprob: -13.435494422912598
    10. '")' → logprob: -13.435494422912598

Token 14: 'point' (ID: 4859)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11205100268125534
    2. 'for' → logprob: -2.737051010131836
    3. 'print' → logprob: -4.112051010131836
    4. 's' → logprob: -4.862051010131836
    5. 'res' → logprob: -5.112051010131836
    6. 'output' → logprob: -5.612051010131836
    7. 't' → logprob: -6.362051010131836
    8. '```' → logprob: -6.487051010131836
    9. 'ans' → logprob: -7.112051010131836
    10. 'answer' → logprob: -7.237051010131836

Token 15: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.105460986495018
    2. '=' → logprob: -2.7304608821868896
    3. '_' → logprob: -4.230461120605469
    4. '.' → logprob: -4.230461120605469
    5. ' =' → logprob: -5.480461120605469
    6. '(' → logprob: -7.480461120605469
    7. ')' → logprob: -8.230461120605469
    8. 'S' → logprob: -8.480461120605469
    9. '_s' → logprob: -8.480461120605469
    10. '[' → logprob: -8.980461120605469

Token 16: ' S' (ID: 336)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1132243350148201
    2. ' ' → logprob: -2.2382242679595947
    3. 'S' → logprob: -8.988224029541016
    4. 'K' → logprob: -9.238224029541016
    5. ' S' → logprob: -9.863224029541016
    6. ' K' → logprob: -10.113224029541016
    7. '[]' → logprob: -10.363224029541016
    8. ' []' → logprob: -10.613224029541016
    9. '1' → logprob: -11.238224029541016
    10. '[' → logprob: -12.738224029541016

Token 17: '[K' (ID: 137571)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06097222864627838
    2. '.' → logprob: -3.310972213745117
    3. '[:]' → logprob: -4.310972213745117
    4. '[K' → logprob: -4.810972213745117
    5. '.replace' → logprob: -7.435972213745117
    6. '[N' → logprob: -9.560972213745117
    7. '[::-' → logprob: -9.935972213745117
    8. '[int' → logprob: -9.935972213745117
    9. '[:' → logprob: -10.185972213745117
    10. '[]' → logprob: -10.560972213745117

Token 18: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001726584043353796
    2. ' -' → logprob: -6.8767266273498535
    3. ')' → logprob: -8.126726150512695
    4. '1' → logprob: -8.376726150512695
    5. '-)' → logprob: -9.001726150512695
    6. ']' → logprob: -11.001726150512695
    7. '2' → logprob: -11.626726150512695
    8. '])' → logprob: -12.251726150512695
    9. '4' → logprob: -12.751726150512695
    10. '0' → logprob: -13.251726150512695

Token 19: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.250015258789062
    3. '2' → logprob: -14.250015258789062
    4. ')' → logprob: -14.500015258789062
    5. '<|end|>' → logprob: -15.750015258789062
    6. ']' → logprob: -16.125015258789062
    7. '```' → logprob: -16.125015258789062
    8. '...' → logprob: -16.250015258789062
    9. '１' → logprob: -16.750015258789062
    10. '0' → logprob: -16.812515258789062

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '１' → logprob: -15.250001907348633
    4. '۱' → logprob: -16.250001907348633
    5. '2' → logprob: -16.812501907348633
    6. '```' → logprob: -16.875001907348633
    7. '১' → logprob: -17.187501907348633
    8. '१' → logprob: -17.437501907348633
    9. ')' → logprob: -18.437501907348633
    10. '0' → logprob: -19.000001907348633

Token 21: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43474721908569336
    2. ']' → logprob: -1.0597472190856934
    3. '']' → logprob: -5.809747219085693
    4. '')' → logprob: -6.559747219085693
    5. '])' → logprob: -6.684747219085693
    6. ')]' → logprob: -9.059747695922852
    7. '[' → logprob: -9.434747695922852
    8. ')])' → logprob: -10.309747695922852
    9. '）' → logprob: -11.184747695922852
    10. ''])' → logprob: -11.309747695922852

Token 22: 'word' (ID: 1801)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6362206339836121
    2. '
' → logprob: -1.0112206935882568
    3. 'result' → logprob: -2.886220693588257
    4. '\n' → logprob: -3.761220693588257
    5. 'print' → logprob: -4.511220455169678
    6. ' for' → logprob: -5.386220455169678
    7. '```' → logprob: -5.636220455169678
    8. '
' → logprob: -5.761220455169678
    9. 'output' → logprob: -6.511220455169678
    10. '' → logprob: -7.011220455169678

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7447543740272522
    2. '=' → logprob: -1.1197543144226074
    3. 's' → logprob: -1.6197543144226074
    4. '_' → logprob: -8.369754791259766
    5. ' ' → logprob: -8.869754791259766
    6. '=[]' → logprob: -9.494754791259766
    7. '_list' → logprob: -9.869754791259766
    8. '.replace' → logprob: -10.119754791259766
    9. '[' → logprob: -10.869754791259766
    10. '  ' → logprob: -10.869754791259766

Token 24: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.5882754325866699
    2. '''' → logprob: -0.8382754325866699
    3. '[]' → logprob: -4.46327543258667
    4. '"' → logprob: -7.83827543258667
    5. ''' → logprob: -9.213275909423828
    6. '[' → logprob: -9.338275909423828
    7. '['' → logprob: -9.338275909423828
    8. '["' → logprob: -11.088275909423828
    9. ''''' → logprob: -11.213275909423828
    10. ''s' → logprob: -11.713275909423828

Token 25: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.36574100604048e-06
    2. ' for' → logprob: -12.500004768371582
    3. 'f' → logprob: -14.625004768371582
    4. '```' → logprob: -16.375003814697266
    5. '	for' → logprob: -17.625003814697266
    6. 'fo' → logprob: -19.750003814697266
    7. ':' → logprob: -19.875003814697266
    8. 'i' → logprob: -20.125003814697266
    9. '<|end|>' → logprob: -20.125003814697266
    10. ')' → logprob: -20.125003814697266

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28905099630355835
    2. ' ' → logprob: -1.4140510559082031
    3. ' c' → logprob: -5.039051055908203
    4. 'i' → logprob: -7.164051055908203
    5. ' _' → logprob: -8.289051055908203
    6. '_' → logprob: -8.789051055908203
    7. 'c' → logprob: -9.039051055908203
    8. '  ' → logprob: -10.039051055908203
    9. ' char' → logprob: -11.539051055908203
    10. ' )' → logprob: -12.039051055908203

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04490159824490547
    2. 'in' → logprob: -3.1699016094207764
    3. ' ' → logprob: -6.669901371002197
    4. 'n' → logprob: -7.544901371002197
    5. ' n' → logprob: -9.794901847839355
    6. '	in' → logprob: -10.544901847839355
    7. '  ' → logprob: -11.544901847839355
    8. ' i' → logprob: -12.669901847839355
    9. ',' → logprob: -13.169901847839355
    10. '   ' → logprob: -13.794901847839355

Token 28: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16030648350715637
    2. 'range' → logprob: -1.910306453704834
    3. ' S' → logprob: -9.910306930541992
    4. ' ' → logprob: -11.160306930541992
    5. 'S' → logprob: -11.410306930541992
    6. '(range' → logprob: -13.160306930541992
    7. '	range' → logprob: -13.160306930541992
    8. '   ' → logprob: -14.535306930541992
    9. ')' → logprob: -14.660306930541992
    10. 's' → logprob: -15.160306930541992

Token 29: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2791273593902588
    2. '(len' → logprob: -1.5291273593902588
    3. '(N' → logprob: -3.654127359390259
    4. ' (' → logprob: -7.27912712097168
    5. '(n' → logprob: -8.52912712097168
    6. '(
' → logprob: -10.40412712097168
    7. ' len' → logprob: -11.27912712097168
    8. '(

' → logprob: -12.15412712097168
    9. '(K' → logprob: -13.02912712097168
    10. '(i' → logprob: -13.15412712097168

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.481510692741722e-05
    2. ':' → logprob: -10.12507438659668
    3. '):
' → logprob: -10.75007438659668
    4. ')' → logprob: -11.62507438659668
    5. ' ):' → logprob: -13.00007438659668
    6. '）：' → logprob: -15.37507438659668
    7. '>):' → logprob: -15.62507438659668
    8. '}:' → logprob: -15.75007438659668
    9. ']:' → logprob: -15.87507438659668
    10. '-' → logprob: -15.87507438659668

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22113744914531708
    2. ' if' → logprob: -1.9711374044418335
    3. ' ' → logprob: -3.221137523651123
    4. '<|end|>' → logprob: -4.471137523651123
    5. '```' → logprob: -6.221137523651123
    6. '    
' → logprob: -6.346137523651123
    7. '    ' → logprob: -7.096137523651123
    8. ' 
' → logprob: -7.096137523651123
    9. '	if' → logprob: -7.846137523651123
    10. ' i' → logprob: -8.096137046813965

Token 32: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7035948038101196
    2. 'if' (adapté à ' if') → logprob: -1.4535948038101196
    3. '   ' → logprob: -1.5785948038101196
    4. ' word' → logprob: -3.32859468460083
    5. ' ' → logprob: -4.57859468460083
    6. 'word' → logprob: -4.82859468460083
    7. 's' → logprob: -5.57859468460083
    8. 'a' → logprob: -7.07859468460083
    9. 'c' → logprob: -7.07859468460083
    10. '    ' → logprob: -7.20359468460083

Token 33: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.05764829367399216
    2. 'S' → logprob: -2.932648181915283
    3. ' ' → logprob: -5.932648181915283
    4. ' i' → logprob: -9.682648658752441
    5. '   ' → logprob: -10.682648658752441
    6. 'i' → logprob: -11.807648658752441
    7. '    ' → logprob: -11.932648658752441
    8. '  ' → logprob: -12.432648658752441
    9. ' (' → logprob: -13.432648658752441
    10. ' ' → logprob: -13.807648658752441

Token 34: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.750003814697266
    3. '[I' → logprob: -14.625003814697266
    4. '[K' → logprob: -14.625003814697266
    5. 'i' → logprob: -16.375003814697266
    6. '[N' → logprob: -17.000003814697266
    7. '[int' → logprob: -18.500003814697266
    8. '[S' → logprob: -18.625003814697266
    9. '[index' → logprob: -18.750003814697266
    10. '[G' → logprob: -18.875003814697266

Token 35: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3260267674922943
    2. ' ==' → logprob: -1.9510267972946167
    3. '!=' → logprob: -2.201026678085327
    4. ' !=' → logprob: -3.701026678085327
    5. '=' → logprob: -7.951026916503906
    6. ' ' → logprob: -9.076026916503906
    7. ']==' → logprob: -9.326026916503906
    8. '```' → logprob: -9.951026916503906
    9. ' ' → logprob: -10.826026916503906
    10. ']!=' → logprob: -11.201026916503906

Token 36: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08495455980300903
    2. ' ==' → logprob: -2.5849545001983643
    3. '!=' → logprob: -5.209954738616943
    4. ' !=' → logprob: -7.709954738616943
    5. '=' → logprob: -9.084954261779785
    6. '```' → logprob: -12.084954261779785
    7. ']==' → logprob: -12.209954261779785
    8. '===' → logprob: -13.334954261779785
    9. ' ' → logprob: -13.584954261779785
    10. '<|end|>' → logprob: -14.147454261779785

Token 37: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.03365664556622505
    2. ' point' → logprob: -3.408656597137451
    3. ' ' → logprob: -12.15865707397461
    4. '	point' → logprob: -12.40865707397461
    5. '  ' → logprob: -14.53365707397461
    6. '   ' → logprob: -15.15865707397461
    7. '(point' → logprob: -15.28365707397461
    8. '-point' → logprob: -15.53365707397461
    9. 'punkt' → logprob: -16.65865707397461
    10. '.point' → logprob: -16.78365707397461

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08803614974021912
    2. ' or' → logprob: -3.088036060333252
    3. 'else' → logprob: -4.088036060333252
    4. ' else' → logprob: -4.463036060333252
    5. ':
' → logprob: -5.588036060333252
    6. 'or' → logprob: -5.713036060333252
    7. '<|end|>' → logprob: -7.088036060333252
    8. '   ' → logprob: -7.213036060333252
    9. '.replace' → logprob: -8.08803653717041
    10. '.' → logprob: -8.83803653717041

Token 39: '       ' (ID: 309)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.001824288978241384
    2. ' word' → logprob: -7.001824378967285
    3. 'i' → logprob: -8.126824378967285
    4. 'lower' → logprob: -8.626824378967285
    5. '[word' → logprob: -9.001824378967285
    6. '   ' → logprob: -10.251824378967285
    7. '	word' → logprob: -10.251824378967285
    8. '```' → logprob: -10.376824378967285
    9. '.lower' → logprob: -10.876824378967285
    10. '[i' → logprob: -10.876824378967285

Token 40: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' (adapté à ' word') → logprob: -0.0010786604834720492
    2. 'a' → logprob: -7.0010786056518555
    3. 'i' → logprob: -10.501078605651855
    4. 'A' → logprob: -10.501078605651855
    5. 'w' → logprob: -10.501078605651855
    6. ' word' → logprob: -10.876078605651855
    7. 'lower' → logprob: -11.126078605651855
    8. '[word' → logprob: -11.626078605651855
    9. 'print' → logprob: -12.376078605651855
    10. 'c' → logprob: -12.376078605651855

Token 41: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002530118217691779
    2. ' +=' → logprob: -6.377530097961426
    3. '+='' → logprob: -8.002530097961426
    4. '+="' → logprob: -8.377530097961426
    5. '+' → logprob: -8.752530097961426
    6. '+=(' → logprob: -9.502530097961426
    7. '=' → logprob: -10.752530097961426
    8. ']+=' → logprob: -12.002530097961426
    9. '.append' → logprob: -13.627530097961426
    10. '```' → logprob: -14.877530097961426

Token 42: ' S' (ID: 336)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.29089394211769104
    2. 'word' → logprob: -1.4158939123153687
    3. 'chr' → logprob: -5.040894031524658
    4. 'S' → logprob: -6.165894031524658
    5. 'toupper' → logprob: -8.6658935546875
    6. ' ' → logprob: -8.7908935546875
    7. ' point' → logprob: -9.0408935546875
    8. '"' → logprob: -9.4158935546875
    9. ' word' → logprob: -9.4158935546875
    10. 'uppercase' → logprob: -9.9158935546875

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006781232077628374
    2. '[' → logprob: -7.875678062438965
    3. '[K' → logprob: -8.375678062438965
    4. '[word' → logprob: -10.500678062438965
    5. 'i' → logprob: -11.250678062438965
    6. '"[' → logprob: -12.250678062438965
    7. '[k' → logprob: -12.250678062438965
    8. '[I' → logprob: -13.000678062438965
    9. '[key' → logprob: -13.125678062438965
    10. 'point' → logprob: -13.375678062438965

Token 44: ']
' (ID: 1592)
  Prédit: '.upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.upper' → logprob: -0.3054625988006592
    2. '.lower' → logprob: -1.5554625988006592
    3. '.' → logprob: -3.305462598800659
    4. ')' → logprob: -4.680462837219238
    5. '.swap' → logprob: -6.555462837219238
    6. ').' → logprob: -6.680462837219238
    7. '.replace' → logprob: -6.805462837219238
    8. '".' → logprob: -7.555462837219238
    9. 'upper' → logprob: -8.305462837219238
    10. ' .' → logprob: -8.430462837219238

Token 45: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.008271406404674053
    2. 'lower' → logprob: -5.633271217346191
    3. ' else' → logprob: -6.758271217346191
    4. '.lower' → logprob: -6.758271217346191
    5. 'elif' → logprob: -6.883271217346191
    6. '```' → logprob: -8.008271217346191
    7. '   ' → logprob: -8.133271217346191
    8. ''*' → logprob: -9.008271217346191
    9. '*' → logprob: -9.508271217346191
    10. '#else' → logprob: -9.633271217346191

Token 46: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.016384361311793327
    2. ' else' → logprob: -4.141384124755859
    3. 'elif' → logprob: -8.39138412475586
    4. '```' → logprob: -10.64138412475586
    5. '   ' → logprob: -11.01638412475586
    6. '	else' → logprob: -11.26638412475586
    7. '.lower' → logprob: -11.26638412475586
    8. 'e' → logprob: -11.39138412475586
    9. 'lower' → logprob: -11.64138412475586
    10. '.' → logprob: -12.26638412475586

Token 47: ':
' (ID: 734)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.35317379236221313
    2. '.' → logprob: -1.8531737327575684
    3. ' word' → logprob: -2.4781737327575684
    4. '"' → logprob: -4.978173732757568
    5. '   ' → logprob: -4.978173732757568
    6. '"*' → logprob: -5.353173732757568
    7. '       ' → logprob: -5.603173732757568
    8. ' .' → logprob: -5.603173732757568
    9. '[word' → logprob: -5.603173732757568
    10. '#' → logprob: -5.728173732757568

Token 48: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1348353624343872
    2. 'word' → logprob: -3.2598352432250977
    3. ''*' → logprob: -3.5098352432250977
    4. '"."' → logprob: -4.134835243225098
    5. ''' → logprob: -4.884835243225098
    6. '"*' → logprob: -5.009835243225098
    7. '?' → logprob: -5.009835243225098
    8. ''.' → logprob: -5.259835243225098
    9. '.' → logprob: -5.509835243225098
    10. '".' → logprob: -5.509835243225098

Token 49: ' word' (ID: 2195)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3693190813064575
    2. ''*' → logprob: -1.7443190813064575
    3. '"."' → logprob: -3.244318962097168
    4. '"*' → logprob: -3.494318962097168
    5. ''.' → logprob: -3.994318962097168
    6. 'word' (adapté à ' word') → logprob: -4.244318962097168
    7. ''' → logprob: -4.244318962097168
    8. '".' → logprob: -4.869318962097168
    9. '.' → logprob: -5.369318962097168
    10. '*' → logprob: -5.994318962097168

Token 50: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0847247987985611
    2. '+' → logprob: -3.2097249031066895
    3. ' +=' → logprob: -3.2097249031066895
    4. '+='' → logprob: -7.9597249031066895
    5. ' +' → logprob: -9.459724426269531
    6. '+="' → logprob: -9.709724426269531
    7. '+=(' → logprob: -12.584724426269531
    8. '=' → logprob: -13.209724426269531
    9. '<|end|>' → logprob: -13.334724426269531
    10. ')' → logprob: -13.584724426269531

Token 51: ' "*' (ID: 32458)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.47480541467666626
    2. ''.' → logprob: -1.0998053550720215
    3. '"*' → logprob: -3.9748053550720215
    4. '".' → logprob: -4.5998053550720215
    5. '"."' → logprob: -4.9748053550720215
    6. '"' → logprob: -5.0998053550720215
    7. ''' → logprob: -6.2248053550720215
    8. '.' → logprob: -7.7248053550720215
    9. 'chr' → logprob: -8.59980583190918
    10. 'lower' → logprob: -8.59980583190918

Token 52: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5308728218078613
    2. '*' → logprob: -1.2808728218078613
    3. '*"' → logprob: -2.0308728218078613
    4. '"*' → logprob: -5.905872821807861
    5. '")' → logprob: -9.155872344970703
    6. '```' → logprob: -10.280872344970703
    7. '**' → logprob: -12.280872344970703
    8. ''' → logprob: -12.280872344970703
    9. '<|end|>' → logprob: -12.405872344970703
    10. ''*' → logprob: -12.780872344970703

Token 53: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.555654105497524e-05
    2. '
' → logprob: -10.37509536743164
    3. '```' → logprob: -11.00009536743164
    4. ' print' → logprob: -11.12509536743164
    5. '*' → logprob: -11.87509536743164
    6. ')' → logprob: -12.12509536743164
    7. '<|end|>' → logprob: -12.62509536743164
    8. 'word' → logprob: -12.75009536743164
    9. '#' → logprob: -13.00009536743164
    10. '"' → logprob: -13.00009536743164

Token 54: '(word' (ID: 35459)
  Prédit: '(word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.313351035118103
    2. '(' → logprob: -1.313351035118103
    3. '("("' → logprob: -9.563350677490234
    4. '()' → logprob: -11.813350677490234
    5. '('' → logprob: -12.188350677490234
    6. '(w' → logprob: -13.188350677490234
    7. 'word' → logprob: -13.688350677490234
    8. '(world' → logprob: -14.188350677490234
    9. '(user' → logprob: -14.813350677490234
    10. '(
' → logprob: -15.063350677490234

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.5
    3. '')' → logprob: -18.0
    4. '))' → logprob: -18.5
    5. ')`' → logprob: -18.75
    6. '")' → logprob: -19.25
    7. ')
' → logprob: -19.625
    8. '`)' → logprob: -19.625
    9. '#' → logprob: -20.75
    10. '(' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 53
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 30.19%
Précision adaptée (1ère position): 33.96%
Précision (top 10): 67.92%
================================================================================
