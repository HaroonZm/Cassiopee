================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Prendre les entrées (attention à la façon de séparer)
n, k = [int(x) for x in input().strip().split()]

reste = n % k  # on garde le reste, on ne sait jamais
diff = k - reste

# Petite hésitation sur ce qu'il faut minimiser, mais essayons ça :
resultat = min(n, reste, diff)
print(resultat)
# pas sûr que ça soit optimal dans tous les cas, à revoir peut-être
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Pr' (ID: 2284)
  → Token d'amorce (pas de prédiction)

Token 2: 'endre' (ID: 9574)
  → Token d'amorce (pas de prédiction)

Token 3: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10581181943416595
    2. ' un' → logprob: -3.105811834335327
    3. ' en' → logprob: -3.480811834335327
    4. '_' → logprob: -4.105811595916748
    5. 'un' → logprob: -6.230811595916748
    6. ' la' → logprob: -6.980811595916748
    7. ' ' → logprob: -6.980811595916748
    8. 'l' → logprob: -7.230811595916748
    9. ' une' → logprob: -7.355811595916748
    10. '#' → logprob: -7.480811595916748

Token 4: ' entr' (ID: 7072)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04593588784337044
    2. 'import' → logprob: -4.670936107635498
    3. ' ' → logprob: -4.670936107635498
    4. '#' → logprob: -4.920936107635498
    5. ' données' → logprob: -5.045936107635498
    6. 'don' → logprob: -5.670936107635498
    7. '_' → logprob: -5.795936107635498
    8. 'data' → logprob: -6.920936107635498
    9. 'esp' → logprob: -7.170936107635498
    10. '  ' → logprob: -7.795936107635498

Token 5: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.10435930639505386
    2. 'ées' → logprob: -2.4793593883514404
    3. 'ée' → logprob: -4.354359149932861
    4. 'e' → logprob: -6.479359149932861
    5. 'és' → logprob: -7.729359149932861
    6. 'è' → logprob: -8.97935962677002
    7. 'es' → logprob: -9.10435962677002
    8. '́' → logprob: -9.35435962677002
    9. 'í' → logprob: -10.60435962677002
    10. '#' → logprob: -10.60435962677002

Token 6: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.214318871498108
    2. '#' → logprob: -1.339318871498108
    3. 'user' → logprob: -2.0893187522888184
    4. '```' → logprob: -2.7143187522888184
    5. 'n' → logprob: -2.9643187522888184
    6. 'entr' → logprob: -3.2143187522888184
    7. 'x' → logprob: -3.2143187522888184
    8. 'inputs' → logprob: -3.7143187522888184
    9. 'e' → logprob: -3.9643187522888184
    10. 'entrée' → logprob: -4.089318752288818

Token 7: 'attention' (ID: 126213)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16387514770030975
    2. ' utilisateur' → logprob: -2.788875102996826
    3. 'user' → logprob: -3.413875102996826
    4. 'util' → logprob: -3.413875102996826
    5. '_util' → logprob: -4.913875102996826
    6. '):' → logprob: -4.913875102996826
    7. ' )' → logprob: -6.038875102996826
    8. 'input' → logprob: -6.788875102996826
    9. ' utilisateurs' → logprob: -6.788875102996826
    10. ' user' → logprob: -7.288875102996826

Token 8: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011502698063850403
    2. ' )' → logprob: -5.636502742767334
    3. '_' → logprob: -5.886502742767334
    4. ',' → logprob: -6.261502742767334
    5. 's' → logprob: -7.011502742767334
    6. '):' → logprob: -7.386502742767334
    7. ' ' → logprob: -7.636502742767334
    8. ':' → logprob: -8.636502265930176
    9. ' de' → logprob: -8.761502265930176
    10. '#' → logprob: -9.011502265930176

Token 9: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1453755795955658
    2. 'la' → logprob: -2.5203754901885986
    3. ' l' → logprob: -3.6453754901885986
    4. ' ' → logprob: -5.145375728607178
    5. 'les' → logprob: -5.520375728607178
    6. 'es' → logprob: -5.770375728607178
    7. ' ' → logprob: -6.395375728607178
    8. ' la' → logprob: -6.520375728607178
    9. '_l' → logprob: -6.770375728607178
    10. 's' → logprob: -6.895375728607178

Token 10: ' façon' (ID: 33381)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1706007719039917
    2. 's' → logprob: -1.4206007719039917
    3. '\n' → logprob: -1.4206007719039917
    4. 'ligne' → logprob: -2.2956008911132812
    5. 'newline' → logprob: -4.170600891113281
    6. 'n' → logprob: -4.295600891113281
    7. 'entrée' → logprob: -5.045600891113281
    8. '\s' → logprob: -5.170600891113281
    9. 'validation' → logprob: -5.170600891113281
    10. 'vir' → logprob: -5.670600891113281

Token 11: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.48941993713378906
    2. 'd' → logprob: -1.489419937133789
    3. ' dont' → logprob: -2.864419937133789
    4. ' de' → logprob: -3.114419937133789
    5. 'dont' → logprob: -3.739419937133789
    6. 'de' → logprob: -4.364419937133789
    7. ')' → logprob: -4.739419937133789
    8. '#' → logprob: -4.989419937133789
    9. ' ' → logprob: -4.989419937133789
    10. ' )' → logprob: -7.614419937133789

Token 12: ' sé' (ID: 7462)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.6684352159500122
    2. 'coder' → logprob: -1.2934352159500122
    3. 'l' → logprob: -2.7934350967407227
    4. 'g' → logprob: -3.7934350967407227
    5. 's' → logprob: -3.9184350967407227
    6. ' coder' → logprob: -3.9184350967407227
    7. 'dem' → logprob: -4.168435096740723
    8. '#' → logprob: -4.418435096740723
    9. 'comment' → logprob: -4.668435096740723
    10. 'é' → logprob: -5.043435096740723

Token 13: 'parer' (ID: 48041)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.74613356590271
    2. 'p' → logprob: -1.37113356590271
    3. 'lection' → logprob: -2.49613356590271
    4. 'c' → logprob: -2.99613356590271
    5. 'v' → logprob: -3.62113356590271
    6. 'l' → logprob: -3.74613356590271
    7. 'parer' → logprob: -4.121133804321289
    8. 'lec' → logprob: -4.371133804321289
    9. 'q' → logprob: -4.496133804321289
    10. 'lect' → logprob: -4.871133804321289

Token 14: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3468846380710602
    2. 'les' → logprob: -1.8468846082687378
    3. ' les' → logprob: -2.8468847274780273
    4. 'des' → logprob: -3.0968847274780273
    5. ' )' → logprob: -4.721884727478027
    6. ',' → logprob: -4.721884727478027
    7. ' des' → logprob: -5.596884727478027
    8. 'par' → logprob: -5.846884727478027
    9. ' par' → logprob: -6.096884727478027
    10. '):' → logprob: -6.221884727478027

Token 15: 'n' (ID: 77)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.8956345319747925
    2. 'entr' → logprob: -1.8956345319747925
    3. 'n' → logprob: -2.770634651184082
    4. 'input' → logprob: -2.895634651184082
    5. 'user' → logprob: -3.020634651184082
    6. 'ent' → logprob: -3.020634651184082
    7. 'entrée' → logprob: -3.020634651184082
    8. 'entries' → logprob: -3.145634651184082
    9. 's' → logprob: -3.770634651184082
    10. 'data' → logprob: -4.020634651184082

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2350109815597534
    2. 'ombre' → logprob: -1.7350109815597534
    3. 'om' → logprob: -1.8600109815597534
    4. 'b' → logprob: -2.235011100769043
    5. '_' → logprob: -2.360011100769043
    6. '=' → logprob: -2.985011100769043
    7. 'o' → logprob: -3.110011100769043
    8. 'e' → logprob: -3.735011100769043
    9. 'ombres' → logprob: -4.235011100769043
    10. ',' → logprob: -4.610011100769043

Token 17: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.16613714396953583
    2. 'm' → logprob: -2.916137218475342
    3. ' ' → logprob: -3.166137218475342
    4. ' input' → logprob: -3.166137218475342
    5. 'input' → logprob: -5.166137218475342
    6. ' k' → logprob: -6.041137218475342
    7. ' =' → logprob: -6.666137218475342
    8. ' p' → logprob: -6.916137218475342
    9. ' q' → logprob: -7.541137218475342
    10. ' espace' → logprob: -8.041136741638184

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25237247347831726
    2. '=' → logprob: -1.5023725032806396
    3. ',' → logprob: -7.7523722648620605
    4. '=input' → logprob: -11.627372741699219
    5. ')' → logprob: -13.877372741699219
    6. ' ,' → logprob: -14.002372741699219
    7. ' ' → logprob: -14.752372741699219
    8. 's' → logprob: -14.752372741699219
    9. '=int' → logprob: -15.002372741699219
    10. ' =
' → logprob: -15.002372741699219

Token 19: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12475992739200592
    2. 'map' → logprob: -2.2497599124908447
    3. ' input' → logprob: -4.624760150909424
    4. 'input' → logprob: -6.249760150909424
    5. ' list' → logprob: -9.499759674072266
    6. ' ' → logprob: -11.124759674072266
    7. 'list' → logprob: -11.374759674072266
    8. ' [' → logprob: -11.624759674072266
    9. 'int' → logprob: -11.874759674072266
    10. ' int' → logprob: -12.249759674072266

Token 20: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000523246475495398
    2. ' int' → logprob: -7.625523090362549
    3. ']' → logprob: -12.000523567199707
    4. 'map' → logprob: -12.125523567199707
    5. '   ' → logprob: -12.250523567199707
    6. '```' → logprob: -12.250523567199707
    7. 'input' → logprob: -12.500523567199707
    8. ']int' → logprob: -12.625523567199707
    9. '0' → logprob: -13.750523567199707
    10. '*' → logprob: -13.750523567199707

Token 21: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.057594284415245056
    2. '(i' → logprob: -2.9325942993164062
    3. '(input' → logprob: -6.682594299316406
    4. '(' → logprob: -7.432594299316406
    5. '(s' → logprob: -7.432594299316406
    6. ']' → logprob: -8.807594299316406
    7. '(_)' → logprob: -9.932594299316406
    8. 'x' → logprob: -10.932594299316406
    9. '()]' → logprob: -11.057594299316406
    10. '(item' → logprob: -11.932594299316406

Token 22: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ' )' → logprob: -13.125006675720215
    3. 'for' → logprob: -13.500006675720215
    4. ' for' → logprob: -13.625006675720215
    5. ')]' → logprob: -13.750006675720215
    6. ')
' → logprob: -15.875006675720215
    7. '),' → logprob: -15.875006675720215
    8. '.split' → logprob: -16.1250057220459
    9. '')' → logprob: -16.6250057220459
    10. '.strip' → logprob: -16.7500057220459

Token 23: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.523289144039154
    2. 'for' → logprob: -0.898289144039154
    3. ')' → logprob: -8.77328872680664
    4. ' ' → logprob: -12.64828872680664
    5. ']' → logprob: -12.77328872680664
    6. ' in' → logprob: -13.14828872680664
    7. '(x' → logprob: -14.39828872680664
    8. 'in' → logprob: -14.89828872680664
    9. '```' → logprob: -14.89828872680664
    10. '	for' → logprob: -15.14828872680664

Token 24: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.023567240685224533
    2. 'input' → logprob: -3.7735671997070312
    3. ' x' → logprob: -8.148567199707031
    4. ' in' → logprob: -11.023567199707031
    5. '=input' → logprob: -12.023567199707031
    6. ' ' → logprob: -12.523567199707031
    7. 'x' → logprob: -13.523567199707031
    8. '(input' → logprob: -13.773567199707031
    9. ' raw' → logprob: -13.898567199707031
    10. '<|end|>' → logprob: -14.023567199707031

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12731683254241943
    2. 'in' → logprob: -2.127316951751709
    3. 'input' → logprob: -8.00231647491455
    4. '<|end|>' → logprob: -10.75231647491455
    5. ' input' → logprob: -11.87731647491455
    6. '<|end|>' → logprob: -12.12731647491455
    7. '=input' → logprob: -12.25231647491455
    8. ' ' → logprob: -12.37731647491455
    9. '(input' → logprob: -12.62731647491455
    10. 'import' → logprob: -14.06481647491455

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740811586380005
    2. ' input' → logprob: -0.9740811586380005
    3. '(input' → logprob: -12.974081039428711
    4. '=input' → logprob: -14.849081039428711
    5. ' ' → logprob: -15.099081039428711
    6. '<input' → logprob: -15.349081039428711
    7. '	input' → logprob: -15.599081039428711
    8. '```' → logprob: -15.724081039428711
    9. '[input' → logprob: -16.34908103942871
    10. ',input' → logprob: -16.59908103942871

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12412794679403305
    2. '()' → logprob: -2.6241278648376465
    3. '()]' → logprob: -3.1241278648376465
    4. '()].' → logprob: -8.374128341674805
    5. '("' → logprob: -12.374128341674805
    6. '())' → logprob: -12.499128341674805
    7. '(' → logprob: -12.874128341674805
    8. '('' → logprob: -12.999128341674805
    9. '()`' → logprob: -12.999128341674805
    10. '()>' → logprob: -13.374128341674805

Token 28: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019757419358938932
    2. 'strip' → logprob: -6.2519755363464355
    3. 'rstrip' → logprob: -10.501976013183594
    4. ' split' → logprob: -10.876976013183594
    5. 'replace' → logprob: -15.001976013183594
    6. '(split' → logprob: -15.376976013183594
    7. 'spl' → logprob: -15.876976013183594
    8. ' strip' → logprob: -18.001976013183594
    9. '.split' → logprob: -19.501976013183594
    10. 'read' → logprob: -19.501976013183594

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00038944309926591814
    2. '()' → logprob: -7.875389575958252
    3. '('' → logprob: -12.000389099121094
    4. ' ().' → logprob: -13.125389099121094
    5. '()]' → logprob: -15.000389099121094
    6. '(' → logprob: -15.000389099121094
    7. '("' → logprob: -15.625389099121094
    8. '()].' → logprob: -15.875389099121094
    9. '().'' → logprob: -16.000389099121094
    10. '('').' → logprob: -17.125389099121094

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'rstrip' → logprob: -14.750000953674316
    3. ' split' → logprob: -15.375000953674316
    4. 'spl' → logprob: -15.500000953674316
    5. '(split' → logprob: -16.875
    6. 'sp' → logprob: -18.125
    7. 'replace' → logprob: -18.5
    8. 'strip' → logprob: -18.5
    9. 'plit' → logprob: -19.125
    10. '.split' → logprob: -19.375

Token 31: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.10282095521688461
    2. '('' → logprob: -2.352820873260498
    3. '()' → logprob: -6.102820873260498
    4. '(' → logprob: -7.977820873260498
    5. '("' → logprob: -10.602821350097656
    6. '())' → logprob: -12.852821350097656
    7. '(',' → logprob: -13.602821350097656
    8. '()]
' → logprob: -13.727821350097656
    9. '()],' → logprob: -14.727821350097656
    10. '("("' → logprob: -14.852821350097656

Token 32: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.006949799135327339
    2. '())' → logprob: -6.0069499015808105
    3. '()' → logprob: -6.6319499015808105
    4. ')]' → logprob: -6.7569499015808105
    5. '('' → logprob: -6.8819499015808105
    6. '(' → logprob: -7.1319499015808105
    7. ']' → logprob: -8.881949424743652
    8. '("' → logprob: -11.631949424743652
    9. ')' → logprob: -12.256949424743652
    10. '')]' → logprob: -13.506949424743652

Token 33: 'reste' (ID: 84661)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7012652158737183
    2. '#' → logprob: -1.7012652158737183
    3. 'a' → logprob: -2.451265335083008
    4. ')' → logprob: -2.826265335083008
    5. 'r' → logprob: -3.701265335083008
    6. ' ' → logprob: -3.951265335083008
    7. 'd' → logprob: -3.951265335083008
    8. 'm' → logprob: -4.076265335083008
    9. '
' → logprob: -4.326265335083008
    10. 'x' → logprob: -4.326265335083008

Token 34: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.588283121585846
    2. ' =' → logprob: -0.963283121585846
    3. '_' → logprob: -3.463283061981201
    4. 's' → logprob: -3.713283061981201
    5. ',' → logprob: -4.963283061981201
    6. ' ' → logprob: -10.33828353881836
    7. '_tokens' → logprob: -10.33828353881836
    8. ')' → logprob: -10.58828353881836
    9. '_k' → logprob: -10.58828353881836
    10. '_s' → logprob: -10.71328353881836

Token 35: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5227550864219666
    2. ' n' → logprob: -1.3977551460266113
    3. 'k' → logprob: -2.0227551460266113
    4. ' k' → logprob: -3.6477551460266113
    5. '(n' → logprob: -7.522755146026611
    6. ' ' → logprob: -8.022754669189453
    7. '(k' → logprob: -8.647754669189453
    8. '0' → logprob: -8.772754669189453
    9. ' (' → logprob: -8.897754669189453
    10. '1' → logprob: -9.647754669189453

Token 36: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06660237163305283
    2. '%' → logprob: -2.8166024684906006
    3. ' ' → logprob: -5.8166022300720215
    4. ' -' → logprob: -7.1916022300720215
    5. '-' → logprob: -7.5666022300720215
    6. ' %
' → logprob: -8.31660270690918
    7. ' //' → logprob: -10.44160270690918
    8. '%n' → logprob: -10.69160270690918
    9. ')' → logprob: -11.56660270690918
    10. ' %

' → logprob: -11.69160270690918

Token 37: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00012558852904476225
    2. ' k' → logprob: -9.000125885009766
    3. '10' → logprob: -14.375125885009766
    4. ' ' → logprob: -14.500125885009766
    5. '2' → logprob: -15.125125885009766
    6. '100' → logprob: -15.875125885009766
    7. '(k' → logprob: -16.375125885009766
    8. '	k' → logprob: -16.500125885009766
    9. '4' → logprob: -16.625125885009766
    10. '26' → logprob: -16.625125885009766

Token 38: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8291681408882141
    2. '<|end|>' → logprob: -1.0791680812835693
    3. '\n' → logprob: -2.3291680812835693
    4. '#' → logprob: -2.9541680812835693
    5. 'print' → logprob: -3.9541680812835693
    6. ' ' → logprob: -4.704168319702148
    7. '```' → logprob: -4.704168319702148
    8. ')' → logprob: -4.954168319702148
    9. '+' → logprob: -5.079168319702148
    10. '*' → logprob: -5.204168319702148

Token 40: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.472342312335968
    2. ' k' → logprob: -1.8473422527313232
    3. ' n' → logprob: -2.0973422527313232
    4. '"' → logprob: -3.9723422527313232
    5. ' reste' → logprob: -4.222342491149902
    6. ' rest' → logprob: -4.847342491149902
    7. ' espace' → logprob: -4.847342491149902
    8. ' ' → logprob: -5.097342491149902
    9. 'n' → logprob: -5.472342491149902
    10. '1' → logprob: -5.472342491149902

Token 41: ' garde' (ID: 65309)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.6253288388252258
    2. ' ' → logprob: -2.250328779220581
    3. ' a' → logprob: -3.250328779220581
    4. ' continue' → logprob: -3.375328779220581
    5. ' pense' → logprob: -3.750328779220581
    6. ' calcul' → logprob: -3.875328779220581
    7. ' print' → logprob: -4.00032901763916
    8. ' n' → logprob: -4.12532901763916
    9. 'print' → logprob: -4.25032901763916
    10. ' =' → logprob: -4.37532901763916

Token 42: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12151788175106049
    2. ' l' → logprob: -3.3715178966522217
    3. ' le' → logprob: -3.4965178966522217
    4. 'le' → logprob: -3.9965178966522217
    5. ' la' → logprob: -5.121517658233643
    6. ' les' → logprob: -5.121517658233643
    7. 'l' → logprob: -5.621517658233643
    8. ' uniquement' → logprob: -5.746517658233643
    9. ' ' → logprob: -6.246517658233643
    10. ' seulement' → logprob: -6.621517658233643

Token 43: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.09093645960092545
    2. 'reste' → logprob: -3.4659364223480225
    3. ' même' → logprob: -4.590936660766602
    4. ' plus' → logprob: -4.965936660766602
    5. '```' → logprob: -5.090936660766602
    6. 'r' → logprob: -5.215936660766602
    7. ' ' → logprob: -5.590936660766602
    8. ' nombre' → logprob: -5.715936660766602
    9. ' maximum' → logprob: -5.715936660766602
    10. 'plus' → logprob: -6.340936660766602

Token 44: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' on' (ID: 402)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6311821937561035
    2. ' on' → logprob: -2.0061821937561035
    3. ' ' → logprob: -2.2561821937561035
    4. 'n' → logprob: -3.2561821937561035
    5. ' mais' → logprob: -3.6311821937561035
    6. '<|end|>' → logprob: -3.7561821937561035
    7. ' car' → logprob: -3.8811821937561035
    8. ' et' → logprob: -3.8811821937561035
    9. ' k' → logprob: -3.8811821937561035
    10. ' qui' → logprob: -4.2561821937561035

Token 46: ' ne' (ID: 453)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.4166630506515503
    2. ' va' → logprob: -1.5416630506515503
    3. ' div' → logprob: -2.16666316986084
    4. ' prend' → logprob: -2.79166316986084
    5. ' calc' → logprob: -2.79166316986084
    6. ' veut' → logprob: -3.04166316986084
    7. ' cherche' → logprob: -3.16666316986084
    8. ' peut' → logprob: -3.79166316986084
    9. 'le' → logprob: -4.04166316986084
    10. ' le' → logprob: -4.16666316986084

Token 47: ' sait' (ID: 52101)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.2838692367076874
    2. ' div' → logprob: -2.4088692665100098
    3. 'pe' → logprob: -2.5338692665100098
    4. 'fait' → logprob: -4.03386926651001
    5. ' peut' → logprob: -4.78386926651001
    6. 'g' → logprob: -5.03386926651001
    7. 'p' → logprob: -5.28386926651001
    8. 'pas' → logprob: -5.28386926651001
    9. 'f' → logprob: -5.53386926651001
    10. 's' → logprob: -5.53386926651001

Token 48: ' jamais' (ID: 23077)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.25825411081314087
    2. 'pas' → logprob: -1.508254051208496
    3. ' ' → logprob: -5.758254051208496
    4. ' rien' → logprob: -6.008254051208496
    5. ' jamais' → logprob: -8.258254051208496
    6. ' plus' → logprob: -8.758254051208496
    7. 'plus' → logprob: -10.008254051208496
    8. 'r' → logprob: -10.133254051208496
    9. 'p' → logprob: -10.133254051208496
    10. ' que' → logprob: -10.508254051208496

Token 49: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8048905730247498
    2. '\n' → logprob: -1.5548906326293945
    3. '<|end|>' → logprob: -2.0548906326293945
    4. ' 
' → logprob: -2.3048906326293945
    5. ' ' → logprob: -3.6798906326293945
    6. '\' → logprob: -3.8048906326293945
    7. 'n' → logprob: -3.8048906326293945
    8. '  
' → logprob: -4.5548906326293945
    9. '```' → logprob: -5.3048906326293945
    10. '#' → logprob: -5.5548906326293945

Token 50: 'diff' (ID: 31460)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15879398584365845
    2. '<|end|>' → logprob: -3.0337939262390137
    3. '\n' → logprob: -3.1587939262390137
    4. ' 
' → logprob: -3.7837939262390137
    5. ' ' → logprob: -4.783793926239014
    6. '#' → logprob: -5.033793926239014
    7. 'print' → logprob: -5.783793926239014
    8. 'n' → logprob: -5.908793926239014
    9. '  
' → logprob: -6.158793926239014
    10. '\' → logprob: -6.283793926239014

Token 51: ' =' (ID: 314)
  Prédit: 'érence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érence' → logprob: -0.5972188115119934
    2. ' =' → logprob: -1.2222187519073486
    3. '=' → logprob: -2.0972187519073486
    4. 'érance' → logprob: -4.597218990325928
    5. 'é' → logprob: -4.722218990325928
    6. 'er' → logprob: -5.472218990325928
    7. '_' → logprob: -5.597218990325928
    8. 'férence' → logprob: -6.222218990325928
    9. 'érences' → logprob: -6.347218990325928
    10. 'ference' → logprob: -8.09721851348877

Token 52: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.33202049136161804
    2. 'k' → logprob: -1.4570205211639404
    3. ' n' → logprob: -3.8320205211639404
    4. ' (' → logprob: -4.457020282745361
    5. ' abs' → logprob: -5.207020282745361
    6. 'abs' → logprob: -5.582020282745361
    7. 'n' → logprob: -5.707020282745361
    8. '(k' → logprob: -6.332020282745361
    9. ' ' → logprob: -7.207020282745361
    10. '0' → logprob: -8.33202075958252

Token 53: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11089197546243668
    2. ' //' → logprob: -2.8608920574188232
    3. '-' → logprob: -3.6108920574188232
    4. '<|end|>' → logprob: -4.360891819000244
    5. ' ' → logprob: -5.485891819000244
    6. '//' → logprob: -6.610891819000244
    7. ' *' → logprob: -6.735891819000244
    8. '<|end|>' → logprob: -7.860891819000244
    9. ' if' → logprob: -8.735892295837402
    10. ' #' → logprob: -9.360892295837402

Token 54: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.010500495322048664
    2. '1' → logprob: -4.635500431060791
    3. ' reste' → logprob: -7.385500431060791
    4. 'rest' → logprob: -9.38550090789795
    5. ' ' → logprob: -10.38550090789795
    6. '2' → logprob: -12.63550090789795
    7. '(' → logprob: -13.63550090789795
    8. '0' → logprob: -14.26050090789795
    9. ' (' → logprob: -14.38550090789795
    10. '(n' → logprob: -14.51050090789795

Token 55: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24262383580207825
    2. '<|end|>' → logprob: -1.7426238059997559
    3. ' ' → logprob: -3.992623805999756
    4. ' 
' → logprob: -4.742623805999756
    5. ' if' → logprob: -4.992623805999756
    6. '<|end|>' → logprob: -6.367623805999756
    7. '  
' → logprob: -6.617623805999756
    8. ')' → logprob: -7.242623805999756
    9. '\n' → logprob: -7.617623805999756
    10. 'if' → logprob: -7.617623805999756

Token 56: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' Petite' (ID: 129719)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22665053606033325
    2. 'if' → logprob: -2.6016504764556885
    3. ' ' → logprob: -3.3516504764556885
    4. ' for' → logprob: -3.4766504764556885
    5. '#' → logprob: -4.226650714874268
    6. ' #' → logprob: -4.726650714874268
    7. 'for' → logprob: -4.851650714874268
    8. 'print' → logprob: -5.476650714874268
    9. 'n' → logprob: -5.601650714874268
    10. ' n' → logprob: -5.726650714874268

Token 58: ' hés' (ID: 135770)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3871235847473145
    2. ' ast' → logprob: -1.6371235847473145
    3. 'exp' → logprob: -2.0121235847473145
    4. ' #' → logprob: -2.6371235847473145
    5. ' modification' → logprob: -2.7621235847473145
    6. 'mod' → logprob: -2.8871235847473145
    7. 'comment' → logprob: -3.1371235847473145
    8. ' correction' → logprob: -3.7621235847473145
    9. ' remarque' → logprob: -3.8871235847473145
    10. 'ast' → logprob: -4.1371235847473145

Token 59: 'itation' (ID: 7949)
  Prédit: 'itation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itation' → logprob: -0.009038535878062248
    2. 'ite' → logprob: -5.13403844833374
    3. 'it' → logprob: -7.00903844833374
    4. 'itations' → logprob: -7.13403844833374
    5. 'istance' → logprob: -8.134038925170898
    6. 'is' → logprob: -8.509038925170898
    7. 's' → logprob: -8.634038925170898
    8. 'ité' → logprob: -8.759038925170898
    9. 'ist' → logprob: -9.884038925170898
    10. 'és' → logprob: -9.884038925170898

Token 60: ' sur' (ID: 1512)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8018611669540405
    2. '<|end|>' → logprob: -1.0518611669540405
    3. '#' → logprob: -2.42686128616333
    4. ' ' → logprob: -3.42686128616333
    5. '<|end|>' → logprob: -4.30186128616333
    6. ':' → logprob: -4.42686128616333
    7. 'n' → logprob: -4.55186128616333
    8. '...' → logprob: -4.92686128616333
    9. 'print' → logprob: -5.30186128616333
    10. '.' → logprob: -5.30186128616333

Token 61: ' ce' (ID: 2357)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.09722521901130676
    2. ' l' → logprob: -3.4722251892089844
    3. 'la' → logprob: -3.7222251892089844
    4. ' le' → logprob: -3.9722251892089844
    5. 'l' → logprob: -5.097225189208984
    6. 'le' → logprob: -5.222225189208984
    7. ' ce' → logprob: -6.222225189208984
    8. ' ' → logprob: -6.347225189208984
    9. ' ' → logprob: -7.597225189208984
    10. ' comment' → logprob: -7.972225189208984

Token 62: ' qu' (ID: 474)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5519196391105652
    2. ' diff' → logprob: -2.30191969871521
    3. ' que' → logprob: -2.42691969871521
    4. ' qui' → logprob: -2.92691969871521
    5. '#' → logprob: -3.42691969871521
    6. ' point' → logprob: -4.051919460296631
    7. 'qui' → logprob: -4.676919460296631
    8. ' qu' → logprob: -5.051919460296631
    9. '```' → logprob: -5.051919460296631
    10. 'f' → logprob: -5.176919460296631

Token 63: ''il' (ID: 14683)
  Prédit: ''on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.5196831226348877
    2. ''il' → logprob: -1.1446831226348877
    3. '#' → logprob: -3.2696831226348877
    4. 'on' → logprob: -3.7696831226348877
    5. 'il' → logprob: -3.8946831226348877
    6. ''' → logprob: -6.769682884216309
    7. ' on' → logprob: -7.144682884216309
    8. 'e' → logprob: -7.269682884216309
    9. ' ' → logprob: -7.394682884216309
    10. ''à' → logprob: -7.894682884216309

Token 64: ' faut' (ID: 17821)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.030723391100764275
    2. '#' → logprob: -3.9057233333587646
    3. 'fa' → logprob: -5.280723571777344
    4. ' faut' → logprob: -6.280723571777344
    5. 'fall' → logprob: -6.780723571777344
    6. '   ' → logprob: -7.280723571777344
    7. 'fait' → logprob: -7.655723571777344
    8. ' ' → logprob: -9.280723571777344
    9. '       ' → logprob: -9.280723571777344
    10. '```' → logprob: -9.280723571777344

Token 65: ' minim' (ID: 23874)
  Prédit: ' faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faire' → logprob: -0.1946144849061966
    2. 'faire' → logprob: -1.8196145296096802
    3. '#' → logprob: -4.569614410400391
    4. ' ' → logprob: -6.194614410400391
    5. 'f' → logprob: -7.694614410400391
    6. 'mettre' → logprob: -8.44461441040039
    7. 'print' → logprob: -8.56961441040039
    8. ' prendre' → logprob: -8.69461441040039
    9. '```' → logprob: -8.81961441040039
    10. '-faire' → logprob: -9.06961441040039

Token 66: 'iser' (ID: 7466)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.14339055120944977
    2. 'al' → logprob: -2.143390655517578
    3. 'er' → logprob: -5.268390655517578
    4. 'ale' → logprob: -6.018390655517578
    5. 'e' → logprob: -6.268390655517578
    6. 'u' → logprob: -6.518390655517578
    7. 'a' → logprob: -6.643390655517578
    8. 'aux' → logprob: -7.018390655517578
    9. 'un' → logprob: -7.768390655517578
    10. 'umer' → logprob: -7.893390655517578

Token 67: ',' (ID: 11)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.0529651641845703
    2. ',' → logprob: -2.0529651641845703
    3. ':' → logprob: -2.0529651641845703
    4. '#' → logprob: -2.3029651641845703
    5. ' :' → logprob: -2.5529651641845703
    6. '...' → logprob: -3.1779651641845703
    7. 'max' → logprob: -3.8029651641845703
    8. '.' → logprob: -3.9279651641845703
    9. ' =' → logprob: -4.17796516418457
    10. ' entre' → logprob: -4.42796516418457

Token 68: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8031044602394104
    2. ' mais' → logprob: -1.0531044006347656
    3. ' #' → logprob: -2.1781044006347656
    4. ' but' → logprob: -3.1781044006347656
    5. 'diff' → logprob: -3.8031044006347656
    6. ' ' → logprob: -5.053104400634766
    7. 'mais' → logprob: -5.178104400634766
    8. ' la' → logprob: -6.178104400634766
    9. ',' → logprob: -6.303104400634766
    10. ' diff' → logprob: -6.428104400634766

Token 69: ' essay' (ID: 9635)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.2629613876342773
    2. ' je' → logprob: -1.5129613876342773
    3. 'diff' → logprob: -1.7629613876342773
    4. 'print' → logprob: -2.5129613876342773
    5. '#' → logprob: -3.1379613876342773
    6. ' probablement' → logprob: -3.3879613876342773
    7. ' print' → logprob: -3.5129613876342773
    8. ' diff' → logprob: -3.8879613876342773
    9. ' il' → logprob: -4.012961387634277
    10. ' le' → logprob: -4.137961387634277

Token 70: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.7090756893157959
    2. 'e' → logprob: -0.8340756893157959
    3. 'er' → logprob: -2.709075689315796
    4. '#' → logprob: -5.084075927734375
    5. 'ez' → logprob: -8.709075927734375
    6. 'r' → logprob: -9.209075927734375
    7. ':' → logprob: -9.334075927734375
    8. 'ont' → logprob: -9.459075927734375
    9. 'ant' → logprob: -9.459075927734375
    10. 'é' → logprob: -9.584075927734375

Token 71: ' ça' (ID: 13590)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3069400489330292
    2. 'print' → logprob: -2.3069400787353516
    3. ' print' → logprob: -3.3069400787353516
    4. ' la' → logprob: -3.5569400787353516
    5. ' diff' → logprob: -3.8069400787353516
    6. ':' → logprob: -4.181940078735352
    7. 'max' → logprob: -4.806940078735352
    8. ' max' → logprob: -5.556940078735352
    9. 'result' → logprob: -5.681940078735352
    10. 'distance' → logprob: -5.681940078735352

Token 72: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8449627757072449
    2. '
' → logprob: -0.9699627757072449
    3. ' :' → logprob: -2.8449628353118896
    4. 'diff' → logprob: -3.5949628353118896
    5. ':
' → logprob: -3.7199628353118896
    6. 'print' → logprob: -4.0949625968933105
    7. 'n' → logprob: -4.5949625968933105
    8. ' :
' → logprob: -5.0949625968933105
    9. 'result' → logprob: -5.2199625968933105
    10. 'total' → logprob: -5.4699625968933105

Token 73: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06266827881336212
    2. 'result' → logprob: -4.562668323516846
    3. 'if' → logprob: -4.812668323516846
    4. ' print' → logprob: -5.187668323516846
    5. 'answer' → logprob: -5.187668323516846
    6. 'ans' → logprob: -5.562668323516846
    7. 'diff' → logprob: -5.687668323516846
    8. 'min' → logprob: -5.812668323516846
    9. 'res' → logprob: -5.812668323516846
    10. 'cost' → logprob: -5.812668323516846

Token 74: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02640817128121853
    2. '=' → logprob: -3.6514081954956055
    3. 's' → logprob: -9.901408195495605
    4. '1' → logprob: -10.151408195495605
    5. '_' → logprob: -11.526408195495605
    6. ' ' → logprob: -12.526408195495605
    7. 'e' → logprob: -13.651408195495605
    8. ' ' → logprob: -13.776408195495605
    9. ',' → logprob: -14.526408195495605
    10. '0' → logprob: -14.651408195495605

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0053184316493570805
    2. '=' → logprob: -5.255318641662598
    3. '_' → logprob: -9.880318641662598
    4. '1' → logprob: -11.255318641662598
    5. 's' → logprob: -11.255318641662598
    6. ' ' → logprob: -12.880318641662598
    7. ',' → logprob: -13.130318641662598
    8. ' =
' → logprob: -14.255318641662598
    9. ' ' → logprob: -14.880318641662598
    10. '=int' → logprob: -14.880318641662598

Token 76: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1430121660232544
    2. 'n' → logprob: -1.8930121660232544
    3. ' min' → logprob: -2.018012046813965
    4. ' n' → logprob: -2.143012046813965
    5. 'abs' → logprob: -3.143012046813965
    6. 'k' → logprob: -3.143012046813965
    7. 'max' → logprob: -3.393012046813965
    8. 'diff' → logprob: -3.643012046813965
    9. ' (' → logprob: -3.768012046813965
    10. ' max' → logprob: -4.018012046813965

Token 77: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.27410468459129333
    2. '(diff' → logprob: -2.399104595184326
    3. '(' → logprob: -2.649104595184326
    4. '(re' → logprob: -3.274104595184326
    5. '(abs' → logprob: -3.899104595184326
    6. '(k' → logprob: -4.524104595184326
    7. '(rest' → logprob: -5.149104595184326
    8. '((' → logprob: -5.899104595184326
    9. '(r' → logprob: -7.899104595184326
    10. '(
' → logprob: -9.399105072021484

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30149710178375244
    2. ' +' → logprob: -1.6764971017837524
    3. '+' → logprob: -3.301496982574463
    4. ' ,' → logprob: -3.551496982574463
    5. ' -' → logprob: -5.676496982574463
    6. '-' → logprob: -6.426496982574463
    7. '+n' → logprob: -6.426496982574463
    8. ',n' → logprob: -8.301497459411621
    9. '+k' → logprob: -8.551497459411621
    10. ' //' → logprob: -8.801497459411621

Token 79: ' reste' (ID: 26769)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11729127913713455
    2. 'n' → logprob: -3.492291212081909
    3. ' abs' → logprob: -3.992291212081909
    4. ' k' → logprob: -4.117291450500488
    5. ' diff' → logprob: -4.117291450500488
    6. ' ' → logprob: -4.367291450500488
    7. ' (' → logprob: -4.617291450500488
    8. 'diff' → logprob: -6.117291450500488
    9. 'abs' → logprob: -6.242291450500488
    10. 'k' → logprob: -6.867291450500488

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028048740699887276
    2. ' ,' → logprob: -4.028048515319824
    3. ' +' → logprob: -4.903048515319824
    4. ')' → logprob: -6.653048515319824
    5. '+' → logprob: -7.028048515319824
    6. ',k' → logprob: -9.778048515319824
    7. ',result' → logprob: -9.778048515319824
    8. ' )' → logprob: -10.653048515319824
    9. ',n' → logprob: -10.653048515319824
    10. '+k' → logprob: -10.778048515319824

Token 81: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.014735600911080837
    2. 'diff' → logprob: -4.264735698699951
    3. ' ' → logprob: -8.139735221862793
    4. ',' → logprob: -9.139735221862793
    5. ' k' → logprob: -9.389735221862793
    6. '	diff' → logprob: -10.514735221862793
    7. ' ,' → logprob: -11.514735221862793
    8. ')' → logprob: -11.514735221862793
    9. ' ' → logprob: -11.764735221862793
    10. ' abs' → logprob: -11.889735221862793

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ' )' → logprob: -11.750008583068848
    3. '))' → logprob: -15.375008583068848
    4. ',' → logprob: -16.12500762939453
    5. ')
' → logprob: -16.50000762939453
    6. ',)' → logprob: -16.62500762939453
    7. ')`' → logprob: -17.25000762939453
    8. '}' → logprob: -17.87500762939453
    9. '),' → logprob: -18.25000762939453
    10. ' ' → logprob: -18.87500762939453

Token 83: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17967261373996735
    2. '<|end|>' → logprob: -2.5546727180480957
    3. '
' → logprob: -3.1796727180480957
    4. 'print' → logprob: -3.5546727180480957
    5. ' ' → logprob: -5.054672718048096
    6. '+' → logprob: -5.429672718048096
    7. '```' → logprob: -6.554672718048096
    8. '*' → logprob: -6.804672718048096
    9. ' 
' → logprob: -7.679672718048096
    10. '<|end|>' → logprob: -7.804672718048096

Token 84: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759440064430237
    2. '(result' → logprob: -0.8259440064430237
    3. '(res' → logprob: -14.200943946838379
    4. '()' → logprob: -14.450943946838379
    5. '(
' → logprob: -14.575943946838379
    6. '(resultado' → logprob: -14.700943946838379
    7. '(n' → logprob: -14.950943946838379
    8. '(rest' → logprob: -15.075943946838379
    9. '(results' → logprob: -15.200943946838379
    10. '(re' → logprob: -15.200943946838379

Token 85: 'at' (ID: 266)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5695279240608215
    2. 'at' → logprob: -1.0695278644561768
    3. ')' → logprob: -2.4445278644561768
    4. ')t' → logprob: -5.569528102874756
    5. 'tat' → logprob: -8.444527626037598
    6. 'a' → logprob: -9.069527626037598
    7. 'ats' → logprob: -10.694527626037598
    8. 'ât' → logprob: -10.819527626037598
    9. 'nt' → logprob: -11.569527626037598
    10. 'ent' → logprob: -11.944527626037598

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -14.12500286102295
    4. ')`' → logprob: -16.125003814697266
    5. ')
' → logprob: -16.625003814697266
    6. '`)' → logprob: -17.500003814697266
    7. '(' → logprob: -17.750003814697266
    8. '+' → logprob: -18.000003814697266
    9. '#' → logprob: -18.375003814697266
    10. '')' → logprob: -18.625003814697266

Token 87: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' pas' (ID: 2173)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0772753953933716
    2. '<|end|>' → logprob: -1.0772753953933716
    3. ' ' → logprob: -1.2022753953933716
    4. '<|end|>' → logprob: -4.952275276184082
    5. '#' → logprob: -5.577275276184082
    6. 'n' → logprob: -6.202275276184082
    7. '```' → logprob: -6.452275276184082
    8. ' )' → logprob: -7.327275276184082
    9. '
' → logprob: -7.577275276184082
    10. '+' → logprob: -7.702275276184082

Token 89: ' sûr' (ID: 46415)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01702127978205681
    2. '<|end|>' → logprob: -5.017021179199219
    3. ')' → logprob: -5.517021179199219
    4. 'e' → logprob: -6.767021179199219
    5. ' )' → logprob: -7.142021179199219
    6. '#' → logprob: -7.142021179199219
    7. 'u' → logprob: -7.517021179199219
    8. '  ' → logprob: -8.017021179199219
    9. '(' → logprob: -8.392021179199219
    10. '<|end|>' → logprob: -8.392021179199219

Token 90: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' ça' (ID: 13590)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -1.2834223508834839
    2. ' ce' → logprob: -1.4084223508834839
    3. 'cela' → logprob: -1.5334223508834839
    4. ' ça' → logprob: -1.7834223508834839
    5. 'c' → logprob: -3.1584224700927734
    6. 'ça' → logprob: -4.033422470092773
    7. 'print' → logprob: -4.408422470092773
    8. ' cela' → logprob: -4.908422470092773
    9. '#' → logprob: -5.533422470092773
    10. 'le' → logprob: -5.783422470092773

Token 92: ' soit' (ID: 17293)
  Prédit: ' marche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marche' → logprob: -0.3517245054244995
    2. ' fonctionne' → logprob: -1.3517245054244995
    3. 'fonction' → logprob: -3.726724624633789
    4. ' soit' → logprob: -5.351724624633789
    5. ' fasse' → logprob: -5.726724624633789
    6. 'conv' → logprob: -6.851724624633789
    7. ' f' → logprob: -6.976724624633789
    8. 'f' → logprob: -7.226724624633789
    9. 'mar' → logprob: -7.476724624633789
    10. ' fonctionner' → logprob: -8.226724624633789

Token 93: ' optimal' (ID: 24174)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.21746936440467834
    2. 'ce' → logprob: -3.3424694538116455
    3. 'bon' → logprob: -3.3424694538116455
    4. 'just' → logprob: -3.7174694538116455
    5. 'exact' → logprob: -3.8424694538116455
    6. 'le' → logprob: -3.8424694538116455
    7. 'tout' → logprob: -4.592469215393066
    8. 'cela' → logprob: -4.717469215393066
    9. 'la' → logprob: -4.842469215393066
    10. 'clair' → logprob: -5.092469215393066

Token 94: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520984709262848
    2. '<|end|>' → logprob: -1.6270984411239624
    3. ' ' → logprob: -4.627098560333252
    4. '
' → logprob: -5.377098560333252
    5. '#' → logprob: -5.752098560333252
    6. '```' → logprob: -6.002098560333252
    7. '<|end|>' → logprob: -6.127098560333252
    8. 'n' → logprob: -6.877098560333252
    9. '}' → logprob: -7.127098560333252
    10. '\n' → logprob: -7.377098560333252

Token 95: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7133778929710388
    2. 'tout' → logprob: -1.4633779525756836
    3. 'l' → logprob: -2.5883779525756836
    4. '#' → logprob: -2.9633779525756836
    5. 'ce' → logprob: -3.0883779525756836
    6. ' ce' → logprob: -3.5883779525756836
    7. 'la' → logprob: -4.213377952575684
    8. ' tous' → logprob: -4.463377952575684
    9. 'cet' → logprob: -4.463377952575684
    10. 'le' → logprob: -4.713377952575684

Token 96: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.004019041545689106
    2. '#' → logprob: -6.129019260406494
    3. 'cas' → logprob: -7.129019260406494
    4. ' les' → logprob: -7.254019260406494
    5. 'le' → logprob: -8.629018783569336
    6. '```' → logprob: -9.879018783569336
    7. 'cases' → logprob: -10.379018783569336
    8. 's' → logprob: -11.379018783569336
    9. 'l' → logprob: -12.004018783569336
    10. 'leurs' → logprob: -12.004018783569336

Token 97: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.007177545223385096
    2. ' cas' → logprob: -5.007177352905273
    3. 'cases' → logprob: -7.757177352905273
    4. 'tests' → logprob: -11.007177352905273
    5. '#' → logprob: -11.757177352905273
    6. 'c' → logprob: -12.632177352905273
    7. 'Cas' → logprob: -13.507177352905273
    8. 'context' → logprob: -13.632177352905273
    9. 'cass' → logprob: -14.007177352905273
    10. 'test' → logprob: -14.007177352905273

Token 98: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' revoir' (ID: 136174)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9831173419952393
    2. 'l' → logprob: -1.7331173419952393
    3. 'tout' → logprob: -1.8581173419952393
    4. 'part' → logprob: -2.7331173419952393
    5. 't' → logprob: -2.8581173419952393
    6. '100' → logprob: -2.9831173419952393
    7. 'prem' → logprob: -3.7331173419952393
    8. 'long' → logprob: -3.8581173419952393
    9. 'vous' → logprob: -4.48311710357666
    10. 'la' → logprob: -4.98311710357666

Token 101: ' peut' (ID: 9216)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '-être' (ID: 33599)
  Prédit: '-être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-être' → logprob: -0.46280115842819214
    2. 'être' → logprob: -1.087801218032837
    3. 'etre' → logprob: -4.212800979614258
    4. '-' → logprob: -4.712800979614258
    5. 'ètre' → logprob: -5.837800979614258
    6. 'êt' → logprob: -6.712800979614258
    7. 'e' → logprob: -7.212800979614258
    8. 'à' → logprob: -7.337800979614258
    9. ''être' → logprob: -7.462800979614258
    10. 'et' → logprob: -7.837800979614258


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 100
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 22.00%
Précision adaptée (1ère position): 22.00%
Précision (top 10): 61.00%
================================================================================
