================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import permutations

def rotate(lst, n=1):
    return lst[-n:] + lst[:-n]

# lecture et transformation
XYZ = list(map(lambda x: x, input().split()))
indices = reduce(lambda acc, i: acc+[i], [2,0,1], [])
XYZ = [XYZ[i] for i in indices]

# recomposition
print(reduce(lambda a,b: f"{a} {b}", map(str, XYZ)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3718698024749756
    2. 'partial' → logprob: -1.3718698024749756
    3. 'reduce' → logprob: -3.1218698024749756
    4. ' wraps' → logprob: -4.746870040893555
    5. 'l' → logprob: -6.121870040893555
    6. 'cached' → logprob: -6.996870040893555
    7. 'cache' → logprob: -8.121870040893555
    8. '```' → logprob: -8.371870040893555
    9. ' partial' → logprob: -8.746870040893555
    10. 'cmp' → logprob: -8.871870040893555

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023532075807452202
    2. '(lambda' → logprob: -4.148531913757324
    3. '.' → logprob: -5.273531913757324
    4. ' (' → logprob: -6.898531913757324
    5. ',' → logprob: -7.648531913757324
    6. '```' → logprob: -8.523531913757324
    7. ''' → logprob: -8.773531913757324
    8. 'lambda' → logprob: -9.523531913757324
    9. '\' → logprob: -9.648531913757324
    10. '`' → logprob: -9.898531913757324

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0288831889629364
    2. '\' → logprob: -4.15388298034668
    3. 'def' → logprob: -5.02888298034668
    4. '(
' → logprob: -6.02888298034668
    5. '(lambda' → logprob: -6.52888298034668
    6. ',' → logprob: -7.52888298034668
    7. '\n' → logprob: -7.77888298034668
    8. '```' → logprob: -7.90388298034668
    9. '\(' → logprob: -8.40388298034668
    10. '`' → logprob: -9.27888298034668

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.017892837524414
    2. ' operator' → logprob: -1.267892837524414
    3. ' itertools' → logprob: -1.517892837524414
    4. ' collections' → logprob: -2.017892837524414
    5. ' os' → logprob: -5.892892837524414
    6. 'operator' → logprob: -6.767892837524414
    7. 'math' → logprob: -7.892892837524414
    8. ' typing' → logprob: -8.017892837524414
    9. 'collections' → logprob: -8.142892837524414
    10. ' sys' → logprob: -9.142892837524414

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1461934596300125
    2. 'import' → logprob: -2.271193504333496
    3. '.' → logprob: -3.521193504333496
    4. ' .' → logprob: -6.396193504333496
    5. '.import' → logprob: -6.771193504333496
    6. ' ' → logprob: -8.521193504333496
    7. '	import' → logprob: -9.771193504333496
    8. '<|end|>' → logprob: -9.771193504333496
    9. '_import' → logprob: -10.146193504333496
    10. '.im' → logprob: -10.771193504333496

Token 8: ' permutations' (ID: 174595)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.3397762775421143
    2. 'count' → logprob: -1.3397762775421143
    3. 'cycle' → logprob: -2.2147762775421143
    4. 'chain' → logprob: -2.4647762775421143
    5. 'com' → logprob: -2.5897762775421143
    6. 'acc' → logprob: -2.5897762775421143
    7. ' group' → logprob: -2.7147762775421143
    8. ' cycle' → logprob: -4.214776039123535
    9. 'product' → logprob: -4.464776039123535
    10. ' chain' → logprob: -4.589776039123535

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002319033956155181
    2. '(
' → logprob: -6.627318859100342
    3. 'def' → logprob: -8.3773193359375
    4. '.' → logprob: -8.7523193359375
    5. '`' → logprob: -8.8773193359375
    6. '\' → logprob: -9.1273193359375
    7. '```' → logprob: -9.3773193359375
    8. '\(' → logprob: -9.8773193359375
    9. '#' → logprob: -10.1273193359375
    10. ',' → logprob: -10.1273193359375

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42403775453567505
    2. '\' → logprob: -2.1740376949310303
    3. 'def' → logprob: -2.1740376949310303
    4. '(
' → logprob: -3.1740376949310303
    5. '\n' → logprob: -3.2990376949310303
    6. 'for' → logprob: -4.424037933349609
    7. '
' → logprob: -4.924037933349609
    8. '```' → logprob: -5.424037933349609
    9. '`' → logprob: -6.049037933349609
    10. 'import' → logprob: -6.299037933349609

Token 11: ' rotate' (ID: 31987)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30289095640182495
    2. ' factorial' → logprob: -1.4278910160064697
    3. ' reduce' → logprob: -5.177890777587891
    4. ' permutations' → logprob: -5.802890777587891
    5. ' factor' → logprob: -5.927890777587891
    6. ' calculate' → logprob: -6.552890777587891
    7. ' sorted' → logprob: -6.802890777587891
    8. ' max' → logprob: -6.927890777587891
    9. ' sort' → logprob: -6.927890777587891
    10. ' f' → logprob: -7.052890777587891

Token 12: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00630617281422019
    2. '_' → logprob: -5.881306171417236
    3. ' (' → logprob: -6.381306171417236
    4. '_left' → logprob: -7.756306171417236
    5. '(x' → logprob: -8.756306648254395
    6. '_string' → logprob: -8.881306648254395
    7. '_right' → logprob: -9.256306648254395
    8. '(_' → logprob: -9.631306648254395
    9. '_(' → logprob: -9.756306648254395
    10. '_list' → logprob: -10.006306648254395

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00398876192048192
    2. '[' → logprob: -6.628988742828369
    3. ')' → logprob: -6.878988742828369
    4. '):' → logprob: -7.128988742828369
    5. ' ,' → logprob: -8.503989219665527
    6. '(lst' → logprob: -8.503989219665527
    7. ',l' → logprob: -8.628989219665527
    8. ',n' → logprob: -10.128989219665527
    9. '   ' → logprob: -10.378989219665527
    10. ',list' → logprob: -10.878989219665527

Token 14: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.21204401552677155
    2. ' k' → logprob: -1.7120440006256104
    3. 'n' → logprob: -4.9620442390441895
    4. 'k' → logprob: -6.2120442390441895
    5. ' ' → logprob: -7.7120442390441895
    6. ' steps' → logprob: -8.462043762207031
    7. ' lst' → logprob: -8.462043762207031
    8. ' offset' → logprob: -8.587043762207031
    9. ' shift' → logprob: -8.712043762207031
    10. ' positions' → logprob: -8.962043762207031

Token 15: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007625677157193422
    2. ')' → logprob: -4.882625579833984
    3. '):
' → logprob: -11.882625579833984
    4. ' ):' → logprob: -12.007625579833984
    5. '=' → logprob: -13.257625579833984
    6. ':' → logprob: -14.257625579833984
    7. ',' → logprob: -14.507625579833984
    8. '*' → logprob: -14.757625579833984
    9. ' ' → logprob: -14.757625579833984
    10. ')：' → logprob: -14.757625579833984

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011244339868426323
    2. ')' → logprob: -5.136244297027588
    3. ' ' → logprob: -5.386244297027588
    4. ' )' → logprob: -7.261244297027588
    5. ' len' → logprob: -12.011244773864746
    6. '2' → logprob: -12.511244773864746
    7. 'len' → logprob: -13.011244773864746
    8. ')n' → logprob: -13.261244773864746
    9. '0' → logprob: -13.636244773864746
    10. '```' → logprob: -13.886244773864746

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024863574653863907
    2. ')' → logprob: -6.002486228942871
    3. ' ):' → logprob: -12.002486228942871
    4. '):
' → logprob: -13.377486228942871
    5. ',' → logprob: -13.627486228942871
    6. ':' → logprob: -13.752486228942871
    7. ')：' → logprob: -15.752486228942871
    8. '):
' → logprob: -16.502487182617188
    9. '),' → logprob: -16.627487182617188
    10. ' ' → logprob: -16.877487182617188

Token 18: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5106001496315002
    2. '   ' → logprob: -1.0106000900268555
    3. '):' → logprob: -5.2606000900268555
    4. '[:]' → logprob: -5.2606000900268555
    5. ' ' → logprob: -5.3856000900268555
    6. ' return' → logprob: -5.3856000900268555
    7. '```' → logprob: -5.5106000900268555
    8. ':
' → logprob: -6.2606000900268555
    9. ':return' → logprob: -6.3856000900268555
    10. '[' → logprob: -6.6356000900268555

Token 19: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.744024932384491
    2. ' lst' → logprob: -1.3690249919891357
    3. 'return' (adapté à ' return') → logprob: -1.9940249919891357
    4. 'lst' → logprob: -2.4940249919891357
    5. '   ' → logprob: -2.9940249919891357
    6. '```' → logprob: -6.494024753570557
    7. '`' → logprob: -10.744025230407715
    8. '``' → logprob: -10.869025230407715
    9. ' rotated' → logprob: -11.244025230407715
    10. 'from' → logprob: -11.369025230407715

Token 20: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.20142823457717896
    2. ' lst' → logprob: -1.7014281749725342
    3. '(lst' → logprob: -12.201428413391113
    4. '   ' → logprob: -12.826428413391113
    5. '```' → logprob: -13.826428413391113
    6. '_lst' → logprob: -13.951428413391113
    7. '[' → logprob: -14.076428413391113
    8. 'list' → logprob: -14.201428413391113
    9. 'l' → logprob: -14.201428413391113
    10. ' ' → logprob: -14.326428413391113

Token 21: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.20198051631450653
    2. '[n' → logprob: -1.701980471611023
    3. '[' → logprob: -7.5769805908203125
    4. '[len' → logprob: -10.451980590820312
    5. '[:]' → logprob: -11.201980590820312
    6. 'n' → logprob: -11.701980590820312
    7. '[:' → logprob: -13.951980590820312
    8. '[min' → logprob: -14.076980590820312
    9. '[
' → logprob: -14.201980590820312
    10. '[N' → logprob: -14.576980590820312

Token 22: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.0
    3. ' n' → logprob: -17.25
    4. 'n't' → logprob: -21.375
    5. '	n' → logprob: -21.5
    6. '```' → logprob: -21.875
    7. '2' → logprob: -22.375
    8. ')n' → logprob: -22.875
    9. '-n' → logprob: -23.0
    10. 'nth' → logprob: -23.0

Token 23: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0005542247672565281
    2. ':' → logprob: -7.500554084777832
    3. ':].' → logprob: -14.625554084777832
    4. ']' → logprob: -15.125554084777832
    5. ' :]' → logprob: -15.375554084777832
    6. ':],' → logprob: -16.00055503845215
    7. '+' → logprob: -17.12555503845215
    8. ']+' → logprob: -17.50055503845215
    9. ':]

' → logprob: -17.75055503845215
    10. ':)' → logprob: -18.75055503845215

Token 24: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020632868632674217
    2. ' +' → logprob: -3.8956329822540283
    3. '+l' → logprob: -9.39563274383545
    4. '+[' → logprob: -12.02063274383545
    5. '   ' → logprob: -14.52063274383545
    6. '+n' → logprob: -14.77063274383545
    7. '+k' → logprob: -15.77063274383545
    8. '```' → logprob: -15.89563274383545
    9. '[' → logprob: -16.145633697509766
    10. '+b' → logprob: -16.145633697509766

Token 25: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.16022492945194244
    2. ' lst' → logprob: -1.9102249145507812
    3. '(lst' → logprob: -15.160224914550781
    4. '_lst' → logprob: -15.285224914550781
    5. '.lst' → logprob: -15.535224914550781
    6. 'list' → logprob: -17.16022491455078
    7. ' ' → logprob: -17.28522491455078
    8. 'ls' → logprob: -18.91022491455078
    9. 'Lst' → logprob: -19.28522491455078
    10. 'l' → logprob: -19.53522491455078

Token 26: '[:-' (ID: 63556)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.08554809540510178
    2. '[:-' → logprob: -2.835548162460327
    3. '[:]' → logprob: -3.960548162460327
    4. '[n' → logprob: -5.710547924041748
    5. '[' → logprob: -7.335547924041748
    6. '[len' → logprob: -8.710548400878906
    7. '[-' → logprob: -10.085548400878906
    8. 'n' → logprob: -10.835548400878906
    9. '[]' → logprob: -11.210548400878906
    10. '(n' → logprob: -11.210548400878906

Token 27: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. ' n' → logprob: -15.375
    3. '-n' → logprob: -17.375
    4. '	n' → logprob: -19.375
    5. '1' → logprob: -21.5
    6. '_n' → logprob: -21.875
    7. ')n' → logprob: -22.0
    8. 'n't' → logprob: -22.75
    9. '-' → logprob: -22.75
    10. ']' → logprob: -23.0

Token 28: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010157392360270023
    2. ']' → logprob: -4.635157585144043
    3. '])' → logprob: -7.885157585144043
    4. '）' → logprob: -11.135157585144043
    5. ')]' → logprob: -11.760157585144043
    6. ')])' → logprob: -13.885157585144043
    7. ')
' → logprob: -15.385157585144043
    8. '```' → logprob: -15.510157585144043
    9. ' )' → logprob: -15.635157585144043
    10. '))' → logprob: -15.760157585144043

Token 29: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05878790095448494
    2. '
' → logprob: -3.1837878227233887
    3. '```' → logprob: -5.058787822723389
    4. '\' → logprob: -5.308787822723389
    5. '\n' → logprob: -6.308787822723389
    6. '

' → logprob: -7.183787822723389
    7. '`

' → logprob: -8.183788299560547
    8. '#' → logprob: -8.808788299560547
    9. '
' → logprob: -8.808788299560547
    10. ' def' → logprob: -8.933788299560547

Token 30: ' lecture' (ID: 31993)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5794709324836731
    2. 'def' → logprob: -2.4544708728790283
    3. ' Code' → logprob: -2.9544708728790283
    4. ' Given' → logprob: -3.3294708728790283
    5. ' The' → logprob: -3.5794708728790283
    6. ' Let's' → logprob: -3.7044708728790283
    7. ' permutations' → logprob: -3.8294708728790283
    8. ' Define' → logprob: -4.204471111297607
    9. ' Test' → logprob: -4.329471111297607
    10. ' Here's' → logprob: -4.579471111297607

Token 31: ' et' (ID: 859)
  Prédit: '_notes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_notes' → logprob: -0.049379222095012665
    2. ' =' → logprob: -4.174379348754883
    3. '_note' → logprob: -4.799379348754883
    4. '_' → logprob: -5.049379348754883
    5. '#' → logprob: -5.424379348754883
    6. 'notes' → logprob: -5.674379348754883
    7. '_code' → logprob: -5.924379348754883
    8. 'def' → logprob: -6.299379348754883
    9. '_h' → logprob: -6.549379348754883
    10. '=' → logprob: -7.299379348754883

Token 32: ' transformation' (ID: 26242)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5974459052085876
    2. 'criture' → logprob: -1.2224459648132324
    3. 'e' → logprob: -2.4724459648132324
    4. 'd' → logprob: -3.7224459648132324
    5. '#' → logprob: -4.472445964813232
    6. 'de' → logprob: -5.472445964813232
    7. ' traitement' → logprob: -5.472445964813232
    8. 'trait' → logprob: -5.597445964813232
    9. 'analyse' → logprob: -5.847445964813232
    10. 'validation' → logprob: -6.222445964813232

Token 33: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4173375368118286
    2. ' de' → logprob: -2.292337417602539
    3. 'des' → logprob: -2.542337417602539
    4. ' du' → logprob: -2.667337417602539
    5. 'def' → logprob: -3.542337417602539
    6. 'de' → logprob: -3.667337417602539
    7. 'du' → logprob: -4.542337417602539
    8. ' en' → logprob: -4.917337417602539
    9. ' d' → logprob: -5.792337417602539
    10. ' of' → logprob: -6.292337417602539

Token 34: 'XYZ' (ID: 68227)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.4255847930908203
    2. 'lines' → logprob: -2.3005847930908203
    3. 'text' → logprob: -2.5505847930908203
    4. 'def' → logprob: -3.8005847930908203
    5. 'input' → logprob: -3.9255847930908203
    6. 'code' → logprob: -3.9255847930908203
    7. 'lst' → logprob: -4.17558479309082
    8. ' lines' → logprob: -4.30058479309082
    9. 'with' → logprob: -4.30058479309082
    10. ' data' → logprob: -4.80058479309082

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030965588986873627
    2. '=' → logprob: -4.280965805053711
    3. '_data' → logprob: -5.905965805053711
    4. 'S' → logprob: -6.405965805053711
    5. 's' → logprob: -6.405965805053711
    6. '_' → logprob: -7.030965805053711
    7. '_strings' → logprob: -7.155965805053711
    8. 'data' → logprob: -7.530965805053711
    9. '_input' → logprob: -7.655965805053711
    10. '_DATA' → logprob: -7.655965805053711

Token 36: ' list' (ID: 1562)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0234649181365967
    2. '[' → logprob: -1.6484649181365967
    3. ''' → logprob: -1.7734649181365967
    4. '['' → logprob: -2.0234649181365967
    5. 'list' → logprob: -2.7734649181365967
    6. '["' → logprob: -3.5234649181365967
    7. 'input' → logprob: -4.773465156555176
    8. '[(' → logprob: -4.898465156555176
    9. '[['' → logprob: -5.148465156555176
    10. '[[' → logprob: -5.398465156555176

Token 37: '(map' (ID: 16946)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.20125533640384674
    2. '('' → logprob: -2.5762553215026855
    3. '(range' → logprob: -2.9512553215026855
    4. '("' → logprob: -3.2012553215026855
    5. '(' → logprob: -4.7012553215026855
    6. '(map' → logprob: -6.7012553215026855
    7. '(X' → logprob: -7.2012553215026855
    8. '(it' → logprob: -7.5762553215026855
    9. '(input' → logprob: -8.076255798339844
    10. '((' → logprob: -8.201255798339844

Token 38: '(lambda' (ID: 43341)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -1.0401628017425537
    2. '(ord' → logprob: -1.0401628017425537
    3. '(int' → logprob: -1.9151628017425537
    4. '(lambda' → logprob: -2.4151628017425537
    5. '(' → logprob: -3.2901628017425537
    6. '(per' → logprob: -5.040163040161133
    7. '(chr' → logprob: -5.165163040161133
    8. '(list' → logprob: -5.290163040161133
    9. '(tuple' → logprob: -6.790163040161133
    10. '(float' → logprob: -7.665163040161133

Token 39: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.593591570854187
    2. 'x' → logprob: -0.968591570854187
    3. ' xyz' → logprob: -3.9685916900634766
    4. ' s' → logprob: -4.093591690063477
    5. 'xyz' → logprob: -4.093591690063477
    6. 's' → logprob: -4.718591690063477
    7. 'c' → logprob: -6.468591690063477
    8. ' c' → logprob: -6.468591690063477
    9. 'perm' → logprob: -7.218591690063477
    10. 'p' → logprob: -8.218591690063477

Token 40: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004430627159308642
    2. ' :' → logprob: -8.625443458557129
    3. ':x' → logprob: -9.500443458557129
    4. ':list' → logprob: -9.500443458557129
    5. ':int' → logprob: -10.250443458557129
    6. 'x' → logprob: -10.375443458557129
    7. ',' → logprob: -10.750443458557129
    8. ' x' → logprob: -12.000443458557129
    9. ':['' → logprob: -12.500443458557129
    10. '[' → logprob: -12.625443458557129

Token 41: ' x' (ID: 1215)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.9428198933601379
    2. 'int' → logprob: -1.4428198337554932
    3. 'x' → logprob: -2.067819833755493
    4. ' ord' → logprob: -2.442819833755493
    5. ' int' → logprob: -3.067819833755493
    6. 'chr' → logprob: -3.692819833755493
    7. 'per' → logprob: -4.317820072174072
    8. 'str' → logprob: -4.317820072174072
    9. ' x' → logprob: -4.317820072174072
    10. 'rotate' → logprob: -4.567820072174072

Token 42: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4161591529846191
    2. '**' → logprob: -1.6661591529846191
    3. '*' → logprob: -1.7911591529846191
    4. '[' → logprob: -1.9161591529846191
    5. ' +' → logprob: -2.291159152984619
    6. '.split' → logprob: -2.916159152984619
    7. '[::-' → logprob: -3.541159152984619
    8. ' *' → logprob: -4.166159152984619
    9. '.replace' → logprob: -4.291159152984619
    10. '-' → logprob: -4.541159152984619

Token 43: ' input' (ID: 3422)
  Prédit: 'XYZ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XYZ' → logprob: -1.4418847560882568
    2. 'range' → logprob: -1.6918847560882568
    3. 'per' → logprob: -1.8168847560882568
    4. ''' → logprob: -2.191884756088257
    5. '"' → logprob: -2.441884756088257
    6. ' permutations' → logprob: -2.941884756088257
    7. ' XYZ' → logprob: -2.941884756088257
    8. ' range' → logprob: -3.691884756088257
    9. '[' → logprob: -4.191884994506836
    10. 'input' → logprob: -4.191884994506836

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.687071681022644
    2. '()' → logprob: -1.062071681022644
    3. '()))' → logprob: -2.0620718002319336
    4. '())' → logprob: -4.062071800231934
    5. '())))' → logprob: -5.687071800231934
    6. '()));' → logprob: -6.437071800231934
    7. '()>' → logprob: -7.437071800231934
    8. '(' → logprob: -7.937071800231934
    9. '());' → logprob: -8.437071800231934
    10. '()),' → logprob: -9.312071800231934

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03819216787815094
    2. 'strip' → logprob: -3.2881922721862793
    3. 'rstrip' → logprob: -9.038191795349121
    4. 'read' → logprob: -10.663191795349121
    5. 'replace' → logprob: -12.538191795349121
    6. ')' → logprob: -12.913191795349121
    7. ' split' → logprob: -13.163191795349121
    8. '(split' → logprob: -15.788191795349121
    9. ' ' → logprob: -16.538192749023438
    10. ' strip' → logprob: -16.663192749023438

Token 46: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3966752588748932
    2. '('' → logprob: -1.3966752290725708
    3. '())' → logprob: -3.3966753482818604
    4. '()' → logprob: -3.5216753482818604
    5. '())))' → logprob: -5.021675109863281
    6. '(' → logprob: -5.146675109863281
    7. '(','' → logprob: -5.771675109863281
    8. '("' → logprob: -7.146675109863281
    9. '))' → logprob: -8.271675109863281
    10. '()));' → logprob: -9.896675109863281

Token 47: 'indices' (ID: 30992)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3364746570587158
    2. '<|end|>' → logprob: -2.961474657058716
    3. 'XYZ' → logprob: -3.086474657058716
    4. '[' → logprob: -3.586474657058716
    5. '#' → logprob: -3.836474657058716
    6. ')
' → logprob: -4.086474418640137
    7. '.' → logprob: -4.586474418640137
    8. '(' → logprob: -4.586474418640137
    9. '
' → logprob: -4.586474418640137
    10. ' ' → logprob: -4.711474418640137

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43832218647003174
    2. ' =' → logprob: -1.0633221864700317
    3. '_' → logprob: -4.688322067260742
    4. '_=' → logprob: -9.313322067260742
    5. ')' → logprob: -9.813322067260742
    6. '=[]' → logprob: -10.188322067260742
    7. '_to' → logprob: -10.688322067260742
    8. '(' → logprob: -11.188322067260742
    9. ',' → logprob: -11.313322067260742
    10. '_indices' → logprob: -11.438322067260742

Token 49: ' reduce' (ID: 10389)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7716838717460632
    2. 'list' → logprob: -1.021683931350708
    3. '[' → logprob: -2.396683931350708
    4. ' [' → logprob: -3.271683931350708
    5. '[]' → logprob: -4.271683692932129
    6. 'range' → logprob: -4.521683692932129
    7. ' []' → logprob: -5.021683692932129
    8. ' range' → logprob: -5.021683692932129
    9. ' permutations' → logprob: -5.646683692932129
    10. 'per' → logprob: -6.146683692932129

Token 50: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.038377102464437485
    2. '(' → logprob: -3.288377046585083
    3. '(operator' → logprob: -8.538376808166504
    4. '(len' → logprob: -9.913376808166504
    5. '(int' → logprob: -10.663376808166504
    6. '((' → logprob: -10.788376808166504
    7. '```' → logprob: -10.788376808166504
    8. '(list' → logprob: -12.538376808166504
    9. '(
' → logprob: -12.663376808166504
    10. 'lambda' → logprob: -12.788376808166504

Token 51: ' acc' (ID: 1259)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5137161612510681
    2. ' x' → logprob: -1.138716220855713
    3. 'lambda' → logprob: -3.138716220855713
    4. 'x' → logprob: -3.763716220855713
    5. ' a' → logprob: -5.013716220855713
    6. ' acc' → logprob: -5.513716220855713
    7. ' ' → logprob: -6.013716220855713
    8. 'a' → logprob: -7.138716220855713
    9. '(lambda' → logprob: -8.263715744018555
    10. 'acc' → logprob: -8.763715744018555

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.551721889991313e-05
    2. ' ,' → logprob: -10.250065803527832
    3. 'lambda' → logprob: -11.000065803527832
    4. ',x' → logprob: -12.375065803527832
    5. '[' → logprob: -12.625065803527832
    6. '+' → logprob: -13.625065803527832
    7. ',index' → logprob: -13.875065803527832
    8. 'acc' → logprob: -14.250065803527832
    9. ':' → logprob: -14.375065803527832
    10. ' ' → logprob: -15.125065803527832

Token 53: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2444428950548172
    2. ' x' → logprob: -1.8694429397583008
    3. 'i' → logprob: -3.494442939758301
    4. ' i' → logprob: -4.369442939758301
    5. 'idx' → logprob: -5.244442939758301
    6. ' idx' → logprob: -5.619442939758301
    7. 'acc' → logprob: -6.119442939758301
    8. ' acc' → logprob: -6.369442939758301
    9. 'curr' → logprob: -6.619442939758301
    10. 'y' → logprob: -6.744442939758301

Token 54: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008670372189953923
    2. ' :' → logprob: -7.375866889953613
    3. ',' → logprob: -9.000866889953613
    4. ',:' → logprob: -10.250866889953613
    5. '_:' → logprob: -11.250866889953613
    6. 's' → logprob: -11.375866889953613
    7. 'x' → logprob: -11.750866889953613
    8. '+:' → logprob: -12.000866889953613
    9. 't' → logprob: -12.000866889953613
    10. 'ex' → logprob: -12.500866889953613

Token 55: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.14122168719768524
    2. ' acc' → logprob: -2.141221761703491
    3. '(acc' → logprob: -4.766221523284912
    4. '(' → logprob: -6.641221523284912
    5. '[' → logprob: -6.641221523284912
    6. ' (' → logprob: -7.641221523284912
    7. ' ' → logprob: -7.828721523284912
    8. '  ' → logprob: -7.953721523284912
    9. 'indices' → logprob: -8.14122200012207
    10. '[]' → logprob: -9.14122200012207

Token 56: '+[' (ID: 166077)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3078157603740692
    2. ' +' → logprob: -1.4328157901763916
    3. '+[' → logprob: -3.6828157901763916
    4. ' if' → logprob: -7.1828155517578125
    5. 'if' → logprob: -9.557815551757812
    6. '*' → logprob: -9.682815551757812
    7. '|' → logprob: -9.932815551757812
    8. ' |' → logprob: -10.057815551757812
    9. '+(' → logprob: -10.807815551757812
    10. '+i' → logprob: -11.057815551757812

Token 57: 'i' (ID: 72)
  Prédit: 'XYZ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XYZ' → logprob: -0.45508846640586853
    2. 'i' → logprob: -2.2050883769989014
    3. 'int' → logprob: -2.5800883769989014
    4. 'len' → logprob: -2.7050883769989014
    5. 'indices' → logprob: -3.5800883769989014
    6. 'per' → logprob: -4.5800886154174805
    7. '[' → logprob: -4.7050886154174805
    8. 'rotate' → logprob: -4.7050886154174805
    9. 'xyz' → logprob: -5.2050886154174805
    10. 'perm' → logprob: -5.3300886154174805

Token 58: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.8264336585998535
    2. '+' → logprob: -1.0764336585998535
    3. '-' → logprob: -2.5764336585998535
    4. ' if' → logprob: -2.7014336585998535
    5. '*' → logprob: -3.7014336585998535
    6. ' +' → logprob: -3.7014336585998535
    7. '[' → logprob: -4.5764336585998535
    8. ' -' → logprob: -5.4514336585998535
    9. ' *' → logprob: -5.9514336585998535
    10. '.index' → logprob: -5.9514336585998535

Token 59: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8177445530891418
    2. 'range' → logprob: -1.817744493484497
    3. '[' → logprob: -2.567744493484497
    4. 'XYZ' → logprob: -2.567744493484497
    5. ' int' → logprob: -2.942744493484497
    6. 'len' → logprob: -3.192744493484497
    7. '[int' → logprob: -3.192744493484497
    8. ' range' → logprob: -4.192744731903076
    9. 'per' → logprob: -4.192744731903076
    10. '0' → logprob: -4.317744731903076

Token 60: '2' (ID: 17)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9455060362815857
    2. 'i' → logprob: -1.3205060958862305
    3. 'XYZ' → logprob: -1.3205060958862305
    4. 'len' → logprob: -4.0705060958862305
    5. ' int' → logprob: -5.0705060958862305
    6. 'xyz' → logprob: -5.1955060958862305
    7. 'j' → logprob: -5.3205060958862305
    8. 'per' → logprob: -5.3205060958862305
    9. '0' → logprob: -5.3205060958862305
    10. 'perm' → logprob: -5.6955060958862305

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5120363831520081
    2. '])' → logprob: -1.7620363235473633
    3. '3' → logprob: -3.3870363235473633
    4. '*i' → logprob: -3.3870363235473633
    5. ']' → logprob: -3.6370363235473633
    6. '+' → logprob: -3.8870363235473633
    7. '*' → logprob: -4.012036323547363
    8. '+i' → logprob: -4.262036323547363
    9. ' +' → logprob: -4.637036323547363
    10. ' *' → logprob: -4.887036323547363

Token 62: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3441898226737976
    2. '3' → logprob: -1.8441898822784424
    3. '4' → logprob: -2.4691898822784424
    4. '5' → logprob: -3.4691898822784424
    5. '1' → logprob: -4.469189643859863
    6. '0' → logprob: -6.094189643859863
    7. '6' → logprob: -6.344189643859863
    8. '7' → logprob: -7.094189643859863
    9. ' -' → logprob: -8.469189643859863
    10. '8' → logprob: -9.094189643859863

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012247794307768345
    2. '])' → logprob: -4.762247562408447
    3. ' ,' → logprob: -5.887247562408447
    4. ']' → logprob: -8.012248039245605
    5. ' ])' → logprob: -8.887248039245605
    6. '],' → logprob: -9.012248039245605
    7. '1' → logprob: -9.137248039245605
    8. '3' → logprob: -10.387248039245605
    9. '4' → logprob: -10.512248039245605
    10. '2' → logprob: -11.137248039245605

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2901363968849182
    2. ' ' → logprob: -1.4151363372802734
    3. '3' → logprob: -5.290136337280273
    4. '4' → logprob: -5.665136337280273
    5. '5' → logprob: -8.290136337280273
    6. '6' → logprob: -10.165136337280273
    7. '7' → logprob: -10.165136337280273
    8. ' -' → logprob: -10.415136337280273
    9. '-' → logprob: -10.790136337280273
    10. ']' → logprob: -11.290136337280273

Token 65: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5775547027587891
    2. '])' → logprob: -0.8275547027587891
    3. ']' → logprob: -7.327554702758789
    4. ']))' → logprob: -7.702554702758789
    5. ' ],' → logprob: -9.327554702758789
    6. ' ])' → logprob: -9.577554702758789
    7. '])]' → logprob: -9.827554702758789
    8. '),' → logprob: -9.952554702758789
    9. '],[' → logprob: -10.077554702758789
    10. ']])' → logprob: -10.577554702758789

Token 66: ' [])
' (ID: 64395)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6281355619430542
    2. '[])' → logprob: -0.8781355619430542
    3. '[' → logprob: -3.3781356811523438
    4. ' [])' → logprob: -4.378135681152344
    5. 'XYZ' → logprob: -7.253135681152344
    6. ' []' → logprob: -7.253135681152344
    7. ')' → logprob: -7.378135681152344
    8. 'list' → logprob: -7.878135681152344
    9. ' [' → logprob: -8.003135681152344
    10. ' ' → logprob: -8.503135681152344

Token 67: 'XYZ' (ID: 68227)
  Prédit: 'XYZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XYZ' → logprob: -0.8297713398933411
    2. ')' → logprob: -0.9547713398933411
    3. '<|end|>' → logprob: -2.3297712802886963
    4. 'indices' → logprob: -3.5797712802886963
    5. '[' → logprob: -3.7047712802886963
    6. '(' → logprob: -5.579771518707275
    7. 'print' → logprob: -5.704771518707275
    8. ' ' → logprob: -5.954771518707275
    9. ' XYZ' → logprob: -6.079771518707275
    10. ']' → logprob: -6.204771518707275

Token 68: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3994600474834442
    2. '<|end|>' → logprob: -1.2744600772857666
    3. '(' → logprob: -4.0244598388671875
    4. ')' → logprob: -4.5244598388671875
    5. '['' → logprob: -4.6494598388671875
    6. '(['' → logprob: -6.1494598388671875
    7. '<|end|>' → logprob: -6.2744598388671875
    8. '([' → logprob: -6.2744598388671875
    9. ']' → logprob: -6.3994598388671875
    10. '[:]' → logprob: -7.0244598388671875

Token 69: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29044049978256226
    2. ' [' → logprob: -1.415440559387207
    3. 'rotate' → logprob: -5.540440559387207
    4. '[list' → logprob: -6.040440559387207
    5. ' rotate' → logprob: -6.665440559387207
    6. ' list' → logprob: -6.915440559387207
    7. 'list' → logprob: -7.915440559387207
    8. '[get' → logprob: -9.915440559387207
    9. '[index' → logprob: -10.540440559387207
    10. '[i' → logprob: -11.165440559387207

Token 70: 'XYZ' (ID: 68227)
  Prédit: 'XYZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XYZ' → logprob: -0.0023295057471841574
    2. ' XYZ' → logprob: -6.127329349517822
    3. 'rotate' → logprob: -9.25232982635498
    4. 'xyz' → logprob: -10.75232982635498
    5. 'X' → logprob: -11.62732982635498
    6. 'XY' → logprob: -12.00232982635498
    7. '   ' → logprob: -13.00232982635498
    8. ' ' → logprob: -13.37732982635498
    9. '  ' → logprob: -13.37732982635498
    10. ' rotate' → logprob: -13.37732982635498

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03187887743115425
    2. '[' → logprob: -3.53187894821167
    3. '[idx' → logprob: -6.90687894821167
    4. '[ind' → logprob: -7.15687894821167
    5. '[index' → logprob: -8.156878471374512
    6. 'indices' → logprob: -11.531878471374512
    7. ']' → logprob: -11.531878471374512
    8. '[ix' → logprob: -11.531878471374512
    9. 'i' → logprob: -12.031878471374512
    10. '[x' → logprob: -12.156878471374512

Token 72: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010139751975657418
    2. ' ]' → logprob: -9.250101089477539
    3. ' for' → logprob: -12.625101089477539
    4. 'for' → logprob: -13.500101089477539
    5. ' ' → logprob: -16.50010108947754
    6. ']]' → logprob: -16.50010108947754
    7. ')' → logprob: -16.50010108947754
    8. ']
' → logprob: -16.87510108947754
    9. 's' → logprob: -16.87510108947754
    10. ')]' → logprob: -17.12510108947754

Token 73: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3171413540840149
    2. 'for' → logprob: -1.3171412944793701
    3. ']' → logprob: -5.567141532897949
    4. ')' → logprob: -10.69214153289795
    5. ' ' → logprob: -11.56714153289795
    6. '	for' → logprob: -11.56714153289795
    7. ' ]' → logprob: -12.44214153289795
    8. '<|end|>' → logprob: -13.19214153289795
    9. '   ' → logprob: -13.94214153289795
    10. '  ' → logprob: -14.81714153289795

Token 74: ' i' (ID: 575)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.38690927624702454
    2. ' indices' → logprob: -1.1369092464447021
    3. '(indices' → logprob: -11.011909484863281
    4. '"indices' → logprob: -11.511909484863281
    5. 'indice' → logprob: -12.136909484863281
    6. '.indices' → logprob: -13.261909484863281
    7. '_indices' → logprob: -13.761909484863281
    8. 'ind' → logprob: -14.136909484863281
    9. 'indexes' → logprob: -14.136909484863281
    10. ' indice' → logprob: -14.636909484863281

Token 75: ' in' (ID: 306)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.111815445125103
    2. ' indices' → logprob: -2.4868154525756836
    3. '(indices' → logprob: -3.8618154525756836
    4. '"indices' → logprob: -7.236815452575684
    5. ' in' → logprob: -7.736815452575684
    6. '.indices' → logprob: -8.111815452575684
    7. '<|end|>' → logprob: -9.736815452575684
    8. '_indices' → logprob: -10.236815452575684
    9. 'Indices' → logprob: -11.986815452575684
    10. ' ' → logprob: -12.111815452575684

Token 76: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.03374689444899559
    2. ' indices' → logprob: -3.4087469577789307
    3. 'range' → logprob: -9.783746719360352
    4. ' range' → logprob: -10.533746719360352
    5. '(indices' → logprob: -12.158746719360352
    6. '"indices' → logprob: -12.658746719360352
    7. 'indice' → logprob: -12.658746719360352
    8. 'ind' → logprob: -13.033746719360352
    9. 'indexes' → logprob: -13.533746719360352
    10. '.indices' → logprob: -13.658746719360352

Token 77: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.623244553338736e-05
    2. ' ]' → logprob: -9.750065803527832
    3. ']
' → logprob: -12.375065803527832
    4. ')]' → logprob: -13.250065803527832
    5. '])' → logprob: -14.250065803527832
    6. ']

' → logprob: -14.375065803527832
    7. ']
' → logprob: -15.625065803527832
    8. ')' → logprob: -15.750065803527832
    9. '()]' → logprob: -16.00006675720215
    10. '`]' → logprob: -16.75006675720215

Token 78: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' recom' (ID: 19119)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9941114783287048
    2. 'for' → logprob: -1.3691115379333496
    3. 'print' → logprob: -1.8691115379333496
    4. 'XYZ' → logprob: -3.1191115379333496
    5. 'result' → logprob: -3.7441115379333496
    6. '#' → logprob: -3.7441115379333496
    7. 'per' → logprob: -4.24411153793335
    8. 'def' → logprob: -4.61911153793335
    9. ' perm' → logprob: -4.61911153793335
    10. 'xyz' → logprob: -4.74411153793335

Token 80: 'position' (ID: 4504)
  Prédit: 'position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5692163705825806
    2. 'b' → logprob: -1.1942163705825806
    3. 'bination' → logprob: -2.444216251373291
    4. 'bine' → logprob: -4.444216251373291
    5. 'pose' → logprob: -4.694216251373291
    6. 'bin' → logprob: -5.944216251373291
    7. 'pos' → logprob: -6.319216251373291
    8. '#' → logprob: -6.444216251373291
    9. 'posite' → logprob: -6.444216251373291
    10. 'binations' → logprob: -6.444216251373291

Token 81: '
' (ID: 198)
  Prédit: 'XYZ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XYZ' → logprob: -0.8634966611862183
    2. 'result' → logprob: -1.2384966611862183
    3. 'print' → logprob: -1.7384966611862183
    4. ' =' → logprob: -3.988496780395508
    5. ' result' → logprob: -4.238496780395508
    6. 'xyz' → logprob: -4.488496780395508
    7. 'output' → logprob: -4.613496780395508
    8. '_' → logprob: -4.738496780395508
    9. ' XYZ' → logprob: -4.863496780395508
    10. ' print' → logprob: -5.488496780395508

Token 82: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.483197957277298
    2. 'result' → logprob: -1.1081979274749756
    3. 'XYZ' → logprob: -3.8581979274749756
    4. 'output' → logprob: -4.483198165893555
    5. ' print' → logprob: -5.483198165893555
    6. ' result' → logprob: -5.733198165893555
    7. 'new' → logprob: -6.358198165893555
    8. 'res' → logprob: -6.358198165893555
    9. 'xyz' → logprob: -6.483198165893555
    10. 'answer' → logprob: -6.483198165893555

Token 83: '(re' (ID: 8178)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7751356959342957
    2. '('' → logprob: -1.1501357555389404
    3. '("("' → logprob: -2.1501357555389404
    4. '(' → logprob: -2.2751357555389404
    5. '(("' → logprob: -6.775135517120361
    6. '(('' → logprob: -7.400135517120361
    7. '"' → logprob: -7.900135517120361
    8. '("(' → logprob: -8.27513599395752
    9. '((' → logprob: -8.52513599395752
    10. '(tuple' → logprob: -8.52513599395752

Token 84: 'duce' (ID: 21375)
  Prédit: 'XYZ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XYZ' → logprob: -0.14470501244068146
    2. 'pr' → logprob: -3.269705057144165
    3. 'duce' → logprob: -3.394705057144165
    4. 'verse' → logprob: -4.519704818725586
    5. 'd' → logprob: -5.144704818725586
    6. 'duced' → logprob: -5.519704818725586
    7. 'size' → logprob: -5.644704818725586
    8. 'nder' → logprob: -5.894704818725586
    9. 'place' → logprob: -6.019704818725586
    10. 'versed' → logprob: -6.144704818725586

Token 85: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.04865288361907005
    2. '(' → logprob: -3.0486528873443604
    3. '(
' → logprob: -9.923652648925781
    4. ' (' → logprob: -12.173652648925781
    5. '((' → logprob: -12.298652648925781
    6. '(operator' → logprob: -13.173652648925781
    7. '(

' → logprob: -13.548652648925781
    8. ')' → logprob: -14.048652648925781
    9. '(len' → logprob: -14.798652648925781
    10. 'lambda' → logprob: -14.798652648925781

Token 86: ' a' (ID: 261)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.6688150763511658
    2. ' lambda' → logprob: -0.7938150763511658
    3. ' a' → logprob: -3.6688151359558105
    4. 'acc' → logprob: -5.5438151359558105
    5. 'lambda' → logprob: -6.0438151359558105
    6. ' x' → logprob: -6.5438151359558105
    7. 'a' → logprob: -7.2938151359558105
    8. ' ' → logprob: -7.6688151359558105
    9. '(lambda' → logprob: -7.6688151359558105
    10. ' ac' → logprob: -8.668814659118652

Token 87: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0111493319272995
    2. ' ,' → logprob: -5.2611494064331055
    3. ',a' → logprob: -5.8861494064331055
    4. 'a' → logprob: -6.5111494064331055
    5. 'lambda' → logprob: -6.6361494064331055
    6. '=lambda' → logprob: -9.136149406433105
    7. ' lambda' → logprob: -9.386149406433105
    8. ' a' → logprob: -10.261149406433105
    9. ',x' → logprob: -11.011149406433105
    10. '+' → logprob: -11.511149406433105

Token 88: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014049386605620384
    2. ' :' → logprob: -4.764049530029297
    3. ':a' → logprob: -5.389049530029297
    4. ',' → logprob: -7.764049530029297
    5. ',a' → logprob: -8.139049530029297
    6. 'a' → logprob: -9.139049530029297
    7. ',:' → logprob: -12.264049530029297
    8. ':b' → logprob: -12.514049530029297
    9. ' a' → logprob: -12.764049530029297
    10. ',b' → logprob: -13.264049530029297

Token 89: ' f' (ID: 285)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4307659864425659
    2. ' a' → logprob: -1.055765986442566
    3. ' str' → logprob: -7.0557661056518555
    4. 'str' → logprob: -7.6807661056518555
    5. ' f' → logprob: -8.180766105651855
    6. 'f' → logprob: -8.305766105651855
    7. ' ' → logprob: -9.055766105651855
    8. '	a' → logprob: -10.055766105651855
    9. '  ' → logprob: -11.180766105651855
    10. '   ' → logprob: -11.555766105651855

Token 90: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.001114616054110229
    2. ''{' → logprob: -6.876114845275879
    3. 'a' → logprob: -9.751114845275879
    4. '"a' → logprob: -11.626114845275879
    5. '"' → logprob: -12.001114845275879
    6. '""' → logprob: -12.751114845275879
    7. 'ormat' → logprob: -13.751114845275879
    8. '{' → logprob: -13.876114845275879
    9. '{}' → logprob: -14.001114845275879
    10. '_string' → logprob: -14.751114845275879

Token 91: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.790129555156454e-05
    2. ' a' → logprob: -9.625067710876465
    3. '{' → logprob: -14.625067710876465
    4. ' ' → logprob: -15.375067710876465
    5. '	a' → logprob: -15.562567710876465
    6. 'b' → logprob: -16.25006866455078
    7. '}' → logprob: -16.25006866455078
    8. 'str' → logprob: -16.37506866455078
    9. ''a' → logprob: -16.37506866455078
    10. 'а' → logprob: -16.62506866455078

Token 92: '}' (ID: 92)
  Prédit: '}{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}{' → logprob: -0.41039136052131653
    2. '}' → logprob: -1.6603913307189941
    3. '}_{' → logprob: -2.410391330718994
    4. ' }' → logprob: -3.660391330718994
    5. '}-{' → logprob: -4.410391330718994
    6. '},{' → logprob: -5.035391330718994
    7. '{' → logprob: -5.785391330718994
    8. '+' → logprob: -6.285391330718994
    9. '+b' → logprob: -6.285391330718994
    10. ' +' → logprob: -7.035391330718994

Token 93: ' {' (ID: 354)
  Prédit: '+b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.2676527500152588
    2. '+' → logprob: -2.267652750015259
    3. 'b' → logprob: -2.517652750015259
    4. ',b' → logprob: -4.26765251159668
    5. '{' → logprob: -4.51765251159668
    6. ' +' → logprob: -4.76765251159668
    7. ' b' → logprob: -5.26765251159668
    8. '_' → logprob: -5.89265251159668
    9. ',' → logprob: -6.14265251159668
    10. 'f' → logprob: -6.26765251159668

Token 94: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.080963092041202e-06
    2. ' b' → logprob: -12.250004768371582
    3. ')b' → logprob: -16.1250057220459
    4. ' ' → logprob: -17.0000057220459
    5. '   ' → logprob: -17.1250057220459
    6. '  ' → logprob: -17.2500057220459
    7. '	b' → logprob: -17.6250057220459
    8. '}' → logprob: -18.1250057220459
    9. '{' → logprob: -18.2500057220459
    10. 'str' → logprob: -18.5000057220459

Token 95: '}",' (ID: 20115)
  Prédit: '}",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}",' → logprob: -0.042683061212301254
    2. '}"' → logprob: -3.7926831245422363
    3. '",' → logprob: -4.042683124542236
    4. ')",' → logprob: -7.417683124542236
    5. '"' → logprob: -7.792683124542236
    6. '}")' → logprob: -8.042682647705078
    7. '}' → logprob: -8.167682647705078
    8. ')"' → logprob: -10.792682647705078
    9. '"}' → logprob: -10.917682647705078
    10. '")' → logprob: -11.042682647705078

Token 96: ' map' (ID: 4014)
  Prédit: 'XYZ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XYZ' → logprob: -0.014177384786307812
    2. ' XYZ' → logprob: -4.264177322387695
    3. 'xyz' → logprob: -12.139177322387695
    4. 'XY' → logprob: -12.764177322387695
    5. ' ' → logprob: -13.264177322387695
    6. '   ' → logprob: -13.389177322387695
    7. 'ABC' → logprob: -14.014177322387695
    8. '  ' → logprob: -14.264177322387695
    9. ' xyz' → logprob: -15.764177322387695
    10. 'YZ' → logprob: -16.389177322387695

Token 97: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.10074400156736374
    2. '(lambda' → logprob: -2.3507440090179443
    3. '(' → logprob: -7.725743770599365
    4. 'str' → logprob: -9.350744247436523
    5. '(int' → logprob: -13.225744247436523
    6. '(tuple' → logprob: -13.225744247436523
    7. '(print' → logprob: -13.850744247436523
    8. '(list' → logprob: -13.975744247436523
    9. '[str' → logprob: -14.100744247436523
    10. ' (' → logprob: -14.725744247436523

Token 98: ',' (ID: 11)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.11339271813631058
    2. ',' → logprob: -2.2383928298950195
    3. ',X' → logprob: -8.23839282989502
    4. ' ,' → logprob: -8.98839282989502
    5. '(' → logprob: -9.36339282989502
    6. ')' → logprob: -10.23839282989502
    7. '(),' → logprob: -10.98839282989502
    8. 'XYZ' → logprob: -11.23839282989502
    9. '),' → logprob: -12.11339282989502
    10. ')(' → logprob: -12.23839282989502

Token 99: ' XYZ' (ID: 142627)
  Prédit: 'XYZ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XYZ' → logprob: -0.023281820118427277
    2. ' XYZ' → logprob: -3.7732818126678467
    3. 'XY' → logprob: -11.148282051086426
    4. 'xyz' → logprob: -11.398282051086426
    5. '(X' → logprob: -12.273282051086426
    6. ' ' → logprob: -13.898282051086426
    7. ' XY' → logprob: -13.898282051086426
    8. 'ABC' → logprob: -14.148282051086426
    9. ' xyz' → logprob: -14.148282051086426
    10. '_xyz' → logprob: -14.148282051086426

Token 100: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10127512365579605
    2. ')))' → logprob: -2.3512752056121826
    3. ')' → logprob: -6.8512749671936035
    4. '))))' → logprob: -11.976275444030762
    5. ' ))' → logprob: -13.851275444030762
    6. '),' → logprob: -14.226275444030762
    7. ']))' → logprob: -14.351275444030762
    8. '))
' → logprob: -14.351275444030762
    9. ')])' → logprob: -15.851275444030762
    10. ')))
' → logprob: -15.976275444030762


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 98
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 36.73%
Précision adaptée (1ère position): 36.73%
Précision (top 10): 68.37%
================================================================================
