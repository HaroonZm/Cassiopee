================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys as SYS
from functools import reduce as R
from itertools import chain as C, starmap as SM
from collections import defaultdict as DD
from bisect import bisect_left as B, bisect_right as BR

__DEBUG = True

# Raccourci pour lecture
get = lambda t=int: t(SYS.stdin.readline())
gets = lambda t=int: list(map(t, SYS.stdin.readline().split()))

class WeirdUnionFind(object):
    def __init__(s, n):
        s._p = [None] * n  # -1 devient None
    def __str__(s):
        return f"UF@{id(s)}:{s._p!r}"
    def link(s, x, y):
        rX, rY = s.find(x), s.find(y)
        if rX ^ rY:
            s._p[rX] = y
    def find(s, x):
        t = s._p[x]
        if t is None: return x
        s._p[x] = s.find(t); return s._p[x]
    def connected(s, x, y):
        return s.find(x) == s.find(y)

N, M = gets()
P = gets()

# Rang bizarre
uf = WeirdUnionFind(N)
for __ in range(M):
    a, b = gets()
    uf.link(a-1, b-1)

clump = DD(set)
list(map(lambda i: clump[uf.find(i)].add(i), range(N)))

if __DEBUG: print(clump, file=SYS.stderr)

result = 0
for gr in clump.values():
    want = {P[i]-1 for i in gr}
    result += len(set(gr) & want)
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' SYS' (ID: 72374)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5253707766532898
    2. ' sys' → logprob: -1.1503708362579346
    3. ' ' → logprob: -2.7753708362579346
    4. '   ' → logprob: -4.6503705978393555
    5. 'sy' → logprob: -4.6503705978393555
    6. 's' → logprob: -5.7753705978393555
    7. ' sy' → logprob: -6.7753705978393555
    8. '```' → logprob: -6.7753705978393555
    9. '`' → logprob: -7.1503705978393555
    10. '  ' → logprob: -7.1503705978393555

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000635235570371151
    2. 'import' → logprob: -8.500635147094727
    3. 'newline' → logprob: -9.125635147094727
    4. '
' → logprob: -9.875635147094727
    5. '\n' → logprob: -10.000635147094727
    6. '```' → logprob: -10.125635147094727
    7. '<|end|>' → logprob: -10.125635147094727
    8. '.import' → logprob: -10.625635147094727
    9. ',' → logprob: -11.000635147094727
    10. '

' → logprob: -11.125635147094727

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2229321002960205
    2. '
' → logprob: -2.2229321002960205
    3. '\n' → logprob: -2.7229321002960205
    4. 'newline' → logprob: -4.472931861877441
    5. 'import' → logprob: -5.597931861877441
    6. '

' → logprob: -6.472931861877441
    7. '<|end|>' → logprob: -6.472931861877441
    8. '\' → logprob: -6.472931861877441
    9. '.import' → logprob: -6.722931861877441
    10. '```' → logprob: -6.722931861877441

Token 6: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006390388123691082
    2. 'os' → logprob: -5.631390571594238
    3. ' math' → logprob: -7.131390571594238
    4. ' pathlib' → logprob: -7.631390571594238
    5. ' ' → logprob: -7.881390571594238
    6. ' typing' → logprob: -8.381390571594238
    7. ' collections' → logprob: -8.381390571594238
    8. ' sys' → logprob: -9.131390571594238
    9. '_os' → logprob: -9.756390571594238
    10. ' import' → logprob: -9.881390571594238

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18132886290550232
    2. 'import' → logprob: -1.8063288927078247
    3. ' ' → logprob: -7.431328773498535
    4. '_import' → logprob: -7.556328773498535
    5. '.' → logprob: -8.306328773498535
    6. '_' → logprob: -9.056328773498535
    7. '	import' → logprob: -9.806328773498535
    8. '.import' → logprob: -10.681328773498535
    9. ' ' → logprob: -12.556328773498535
    10. ' impor' → logprob: -12.556328773498535

Token 8: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -1.0202710628509521
    2. ' partial' → logprob: -1.2702710628509521
    3. 'wrap' → logprob: -1.8952710628509521
    4. ' wraps' → logprob: -2.020271062850952
    5. 'reduce' → logprob: -3.770271062850952
    6. 'l' → logprob: -3.770271062850952
    7. ' l' → logprob: -3.770271062850952
    8. ' reduce' → logprob: -5.270271301269531
    9. 'cmp' → logprob: -7.770271301269531
    10. 'cache' → logprob: -8.645271301269531

Token 9: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5396010279655457
    2. '.' → logprob: -1.4146010875701904
    3. 'import' → logprob: -2.7896010875701904
    4. ' ' → logprob: -2.9146010875701904
    5. '(' → logprob: -4.164600849151611
    6. '<|end|>' → logprob: -4.289600849151611
    7. '\n' → logprob: -5.414600849151611
    8. '\' → logprob: -5.414600849151611
    9. '_' → logprob: -6.039600849151611
    10. '<|end|>' → logprob: -6.289600849151611

Token 10: ' R' (ID: 460)
  Prédit: ' RED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' RED' → logprob: -0.34582433104515076
    2. ' red' → logprob: -1.5958243608474731
    3. 'RED' → logprob: -3.0958242416381836
    4. ' R' → logprob: -4.095824241638184
    5. ' ' → logprob: -4.845824241638184
    6. ' r' → logprob: -4.970824241638184
    7. ' rd' → logprob: -5.720824241638184
    8. ' functools' → logprob: -6.095824241638184
    9. ' RD' → logprob: -6.220824241638184
    10. 'R' → logprob: -7.345824241638184

Token 11: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008221517316997051
    2. ',' → logprob: -5.133221626281738
    3. ' ' → logprob: -7.383221626281738
    4. '(' → logprob: -7.758221626281738
    5. ' .' → logprob: -7.883221626281738
    6. '[' → logprob: -8.258221626281738
    7. ')' → logprob: -9.008221626281738
    8. '<|end|>' → logprob: -9.883221626281738
    9. 'import' → logprob: -10.258221626281738
    10. '\' → logprob: -10.383221626281738

Token 12: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2840855121612549
    2. ',' → logprob: -1.4090855121612549
    3. '\' → logprob: -6.784085273742676
    4. 'import' → logprob: -8.034085273742676
    5. '_' → logprob: -8.284085273742676
    6. '(' → logprob: -8.409085273742676
    7. 'def' → logprob: -8.659085273742676
    8. ',
' → logprob: -8.784085273742676
    9. '\n' → logprob: -9.034085273742676
    10. '.
' → logprob: -9.909085273742676

Token 13: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6015961766242981
    2. ' operator' → logprob: -1.1015961170196533
    3. ' itertools' → logprob: -2.7265961170196533
    4. ' os' → logprob: -3.3515961170196533
    5. ' collections' → logprob: -4.351596355438232
    6. 'operator' → logprob: -5.851596355438232
    7. 'math' → logprob: -6.476596355438232
    8. ' typing' → logprob: -6.851596355438232
    9. ' ' → logprob: -8.351595878601074
    10. 'os' → logprob: -9.226595878601074

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04465070739388466
    2. 'import' → logprob: -3.1696507930755615
    3. '.' → logprob: -6.794650554656982
    4. ' .' → logprob: -8.66965103149414
    5. '	import' → logprob: -8.91965103149414
    6. '.import' → logprob: -8.91965103149414
    7. ' ' → logprob: -10.41965103149414
    8. '.im' → logprob: -11.04465103149414
    9. '_import' → logprob: -11.41965103149414
    10. ' itertools' → logprob: -11.79465103149414

Token 15: ' chain' (ID: 13464)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.6411657333374023
    2. ' chain' → logprob: -2.3911657333374023
    3. 'group' → logprob: -2.3911657333374023
    4. ' cycle' → logprob: -2.7661657333374023
    5. 'count' → logprob: -3.0161657333374023
    6. ' count' → logprob: -3.3911657333374023
    7. 'chain' → logprob: -3.7661657333374023
    8. 'com' → logprob: -3.8911657333374023
    9. ' product' → logprob: -4.016165733337402
    10. 'per' → logprob: -4.141165733337402

Token 16: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8965468406677246
    2. 'import' → logprob: -1.7715468406677246
    3. '(' → logprob: -2.0215468406677246
    4. ' ' → logprob: -2.1465468406677246
    5. ' as' → logprob: -2.6465468406677246
    6. '.' → logprob: -3.6465468406677246
    7. '<|end|>' → logprob: -3.6465468406677246
    8. 'as' → logprob: -4.146546840667725
    9. ' (' → logprob: -4.646546840667725
    10. '(
' → logprob: -4.896546840667725

Token 17: ' C' (ID: 363)
  Prédit: ' CH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' CH' → logprob: -0.003237482625991106
    2. ' C' → logprob: -6.003237247467041
    3. ' CHA' → logprob: -8.0032377243042
    4. 'CH' → logprob: -8.6282377243042
    5. ' ' → logprob: -9.6282377243042
    6. 'C' → logprob: -9.7532377243042
    7. 'CHAIN' → logprob: -10.3782377243042
    8. ' chain' → logprob: -11.1282377243042
    9. ' CHP' → logprob: -11.1282377243042
    10. ' Ch' → logprob: -11.6282377243042

Token 18: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38195422291755676
    2. ',' → logprob: -1.6319541931152344
    3. '(' → logprob: -2.5069541931152344
    4. 'import' → logprob: -4.131954193115234
    5. '_' → logprob: -4.631954193115234
    6. ')' → logprob: -5.506954193115234
    7. 'from' → logprob: -6.006954193115234
    8. '\' → logprob: -6.131954193115234
    9. '(
' → logprob: -6.756954193115234
    10. '<|end|>' → logprob: -7.381954193115234

Token 19: ' st' (ID: 420)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.44709843397140503
    2. 'cycle' → logprob: -1.9470984935760498
    3. 'is' → logprob: -2.57209849357605
    4. ' is' → logprob: -3.32209849357605
    5. 'compress' → logprob: -3.94709849357605
    6. 'group' → logprob: -4.197098255157471
    7. ' cycle' → logprob: -4.322098255157471
    8. 'acc' → logprob: -4.447098255157471
    9. 'product' → logprob: -4.697098255157471
    10. 'count' → logprob: -4.697098255157471

Token 20: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.09024951606988907
    2. 'ar' → logprob: -2.465249538421631
    3. 'a' → logprob: -8.090249061584473
    4. 'ee' → logprob: -8.090249061584473
    5. 'art' → logprob: -8.965249061584473
    6. 'eep' → logprob: -9.090249061584473
    7. 'arp' → logprob: -9.590249061584473
    8. 'ool' → logprob: -9.715249061584473
    9. 'arb' → logprob: -10.340249061584473
    10. 'eel' → logprob: -10.340249061584473

Token 21: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -2.2200749754119897e-06
    2. 'apper' → logprob: -15.125001907348633
    3. 'er' → logprob: -15.250001907348633
    4. 'ep' → logprob: -15.375001907348633
    5. 'a' → logprob: -15.500001907348633
    6. '```' → logprob: -15.625001907348633
    7. 'app' → logprob: -15.750001907348633
    8. 'up' → logprob: -15.750001907348633
    9. 'e' → logprob: -15.875001907348633
    10. 'erp' → logprob: -15.875001907348633

Token 22: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.4127117097377777
    2. ',' → logprob: -2.2877116203308105
    3. '(' → logprob: -2.4127116203308105
    4. '<|end|>' → logprob: -2.5377116203308105
    5. 'from' → logprob: -3.6627116203308105
    6. 'as' → logprob: -3.9127116203308105
    7. 'import' → logprob: -5.2877116203308105
    8. ' (' → logprob: -5.7877116203308105
    9. '<|end|>' → logprob: -5.9127116203308105
    10. ')' → logprob: -5.9127116203308105

Token 23: ' SM' (ID: 20297)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08687770366668701
    2. ' S' → logprob: -2.5868778228759766
    3. 'SM' → logprob: -5.086877822875977
    4. 'M' → logprob: -7.211877822875977
    5. ' SM' → logprob: -7.711877822875977
    6. ' M' → logprob: -9.086877822875977
    7. 'SAM' → logprob: -9.524377822875977
    8. 'ST' → logprob: -9.711877822875977
    9. ' ' → logprob: -9.774377822875977
    10. 's' → logprob: -9.961877822875977

Token 24: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5350357890129089
    2. ',' → logprob: -1.1600358486175537
    3. '.' → logprob: -2.7850358486175537
    4. '(
' → logprob: -4.035035610198975
    5. '\' → logprob: -5.660035610198975
    6. ')' → logprob: -5.660035610198975
    7. 'import' → logprob: -5.660035610198975
    8. 'def' → logprob: -6.160035610198975
    9. 'from' → logprob: -6.535035610198975
    10. ',
' → logprob: -6.660035610198975

Token 25: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18419115245342255
    2. '(' → logprob: -1.934191107749939
    3. ',' → logprob: -4.3091912269592285
    4. '(
' → logprob: -5.5591912269592285
    5. '\' → logprob: -6.8091912269592285
    6. 'import' → logprob: -6.8091912269592285
    7. ';' → logprob: -7.3091912269592285
    8. 'def' → logprob: -7.3091912269592285
    9. '\n' → logprob: -7.8091912269592285
    10. '.
' → logprob: -8.43419075012207

Token 26: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.16743217408657074
    2. 'operator' → logprob: -2.2924320697784424
    3. ' math' → logprob: -3.2924320697784424
    4. ' collections' → logprob: -4.7924323081970215
    5. 'math' → logprob: -5.5424323081970215
    6. 'collections' → logprob: -6.4174323081970215
    7. ' ' → logprob: -6.9174323081970215
    8. ' os' → logprob: -8.292431831359863
    9. ' functools' → logprob: -8.292431831359863
    10. 'os' → logprob: -8.542431831359863

Token 27: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06482469290494919
    2. ' import' → logprob: -3.4398245811462402
    3. '.' → logprob: -4.18982458114624
    4. 'abc' → logprob: -4.31482458114624
    5. '<|end|>' → logprob: -6.56482458114624
    6. ' abc' → logprob: -8.939825057983398
    7. 'ounter' → logprob: -9.189825057983398
    8. '```' → logprob: -9.564825057983398
    9. '	import' → logprob: -9.814825057983398
    10. '.Counter' → logprob: -10.189825057983398

Token 28: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.020125459879636765
    2. ' Counter' → logprob: -4.895125389099121
    3. 'default' → logprob: -5.020125389099121
    4. ' abc' → logprob: -5.895125389099121
    5. ' deque' → logprob: -7.020125389099121
    6. 'Counter' → logprob: -7.395125389099121
    7. 'deque' → logprob: -7.520125389099121
    8. ' named' → logprob: -7.645125389099121
    9. 'abc' → logprob: -8.520125389099121
    10. 'named' → logprob: -9.145125389099121

Token 29: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.08965342491865158
    2. ' ' → logprob: -2.964653491973877
    3. '<|end|>' → logprob: -4.589653491973877
    4. ',' → logprob: -4.714653491973877
    5. 'as' → logprob: -5.089653491973877
    6. 'import' → logprob: -5.214653491973877
    7. ' 
' → logprob: -7.214653491973877
    8. ' 

' → logprob: -7.589653491973877
    9. '<|end|>' → logprob: -7.964653491973877
    10. ' ,' → logprob: -8.214653015136719

Token 30: ' DD' (ID: 52933)
  Prédit: 'DD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DD' → logprob: -0.014598513022065163
    2. ' DD' → logprob: -5.139598369598389
    3. 'dd' → logprob: -5.639598369598389
    4. '_dd' → logprob: -6.139598369598389
    5. 'D' → logprob: -6.514598369598389
    6. ' dd' → logprob: -7.639598369598389
    7. 'DF' → logprob: -8.264598846435547
    8. 'default' → logprob: -8.514598846435547
    9. ' D' → logprob: -9.139598846435547
    10. '_D' → logprob: -10.014598846435547

Token 31: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42584896087646484
    2. ' ' → logprob: -2.425848960876465
    3. '.' → logprob: -2.800848960876465
    4. '<|end|>' → logprob: -3.050848960876465
    5. '\' → logprob: -3.800848960876465
    6. 'import' → logprob: -4.300848960876465
    7. '
' → logprob: -4.300848960876465
    8. ',
' → logprob: -4.300848960876465
    9. '\n' → logprob: -4.550848960876465
    10. '' → logprob: -4.675848960876465

Token 32: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5485872030258179
    2. '
' → logprob: -2.4235873222351074
    3. 'import' → logprob: -2.7985873222351074
    4. 'def' → logprob: -2.9235873222351074
    5. '

' → logprob: -3.0485873222351074
    6. '\n' → logprob: -3.6735873222351074
    7. ',
' → logprob: -3.7985873222351074
    8. '' → logprob: -4.048587322235107
    9. ' ' → logprob: -4.173587322235107
    10. '.' → logprob: -4.298587322235107

Token 33: ' bis' (ID: 7204)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -1.0532091856002808
    2. ' math' → logprob: -1.0532091856002808
    3. ' typing' → logprob: -1.9282091856002808
    4. ' os' → logprob: -2.9282093048095703
    5. 'operator' → logprob: -3.0532093048095703
    6. 'math' → logprob: -3.8032093048095703
    7. 'typing' → logprob: -5.05320930480957
    8. ' ' → logprob: -5.30320930480957
    9. ' collections' → logprob: -5.42820930480957
    10. 'os' → logprob: -5.55320930480957

Token 34: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.416665640543215e-05
    2. 'ec' → logprob: -10.50003433227539
    3. 'e' → logprob: -12.12503433227539
    4. 'ectl' → logprob: -14.87503433227539
    5. 'ected' → logprob: -15.50003433227539
    6. 'ecta' → logprob: -15.62503433227539
    7. '>' → logprob: -16.62503433227539
    8. 'ections' → logprob: -16.75003433227539
    9. '```' → logprob: -17.00003433227539
    10. 'ectin' → logprob: -17.25003433227539

Token 35: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.056579139083623886
    2. 'import' → logprob: -2.931579113006592
    3. '<|end|>' → logprob: -7.056579113006592
    4. '	import' → logprob: -7.681579113006592
    5. ' ' → logprob: -8.30657958984375
    6. '_import' → logprob: -9.30657958984375
    7. ' importar' → logprob: -11.93157958984375
    8. ' im' → logprob: -12.86907958984375
    9. '<|end|>' → logprob: -12.86907958984375
    10. 'ort' → logprob: -12.86907958984375

Token 36: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.03408821299672127
    2. ' ins' → logprob: -3.409088134765625
    3. 'bis' → logprob: -8.659088134765625
    4. ' ' → logprob: -8.784088134765625
    5. '_' → logprob: -10.034088134765625
    6. ' in' → logprob: -11.034088134765625
    7. 'ins' → logprob: -11.159088134765625
    8. ' b' → logprob: -11.159088134765625
    9. '_ins' → logprob: -11.409088134765625
    10. '	b' → logprob: -12.534088134765625

Token 37: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00010962257510982454
    2. 'e' → logprob: -9.375109672546387
    3. 'ec' → logprob: -10.750109672546387
    4. '```' → logprob: -13.875109672546387
    5. '' → logprob: -15.000109672546387
    6. '

' → logprob: -15.000109672546387
    7. 'ected' → logprob: -15.375109672546387
    8. 'ectl' → logprob: -15.500109672546387
    9. '  

' → logprob: -15.625109672546387
    10. 'ection' → logprob: -15.750109672546387

Token 38: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.5666959881782532
    2. '_right' → logprob: -1.0666959285736084
    3. '_' → logprob: -2.9416959285736084
    4. '<|end|>' → logprob: -3.4416959285736084
    5. '<|end|>' → logprob: -7.4416961669921875
    6. '_RIGHT' → logprob: -7.6916961669921875
    7. 'right' → logprob: -7.8166961669921875
    8. 'Right' → logprob: -8.066696166992188
    9. '```' → logprob: -8.191696166992188
    10. ' as' → logprob: -8.566696166992188

Token 39: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04222993180155754
    2. ',' → logprob: -4.042230129241943
    3. '(
' → logprob: -4.292230129241943
    4. ' ' → logprob: -6.167230129241943
    5. ' (' → logprob: -6.417230129241943
    6. '<|end|>' → logprob: -7.167230129241943
    7. '
' → logprob: -7.292230129241943
    8. '' → logprob: -7.417230129241943
    9. '\' → logprob: -7.542230129241943
    10. '\n' → logprob: -7.667230129241943

Token 40: ' B' (ID: 418)
  Prédit: ' BL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BL' → logprob: -0.0626603290438652
    2. 'BL' → logprob: -3.3126602172851562
    3. ' ' → logprob: -4.937660217285156
    4. ' bis' → logprob: -4.937660217285156
    5. ' b' → logprob: -5.812660217285156
    6. ' bl' → logprob: -6.187660217285156
    7. ' B' → logprob: -6.437660217285156
    8. 'bl' → logprob: -6.937660217285156
    9. 'b' → logprob: -7.562660217285156
    10. 'B' → logprob: -7.687660217285156

Token 41: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.548706591129303
    2. '<|end|>' → logprob: -1.5487065315246582
    3. ',' → logprob: -2.548706531524658
    4. ' ' → logprob: -3.298706531524658
    5. '.' → logprob: -3.923706531524658
    6. '\' → logprob: -4.298706531524658
    7. '
' → logprob: -4.423706531524658
    8. '(
' → logprob: -4.548706531524658
    9. '[' → logprob: -4.798706531524658
    10. '_' → logprob: -5.048706531524658

Token 42: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.23046012222766876
    2. ' bis' → logprob: -1.6054601669311523
    3. 'ins' → logprob: -6.230460166931152
    4. 'b' → logprob: -6.355460166931152
    5. 's' → logprob: -8.480460166931152
    6. 'import' → logprob: -8.667960166931152
    7. '<|end|>' → logprob: -8.667960166931152
    8. ' ins' → logprob: -9.292960166931152
    9. 'bi' → logprob: -9.605460166931152
    10. 'is' → logprob: -9.855460166931152

Token 43: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.6537622034084052e-05
    2. 'ec' → logprob: -11.25002670288086
    3. 'e' → logprob: -12.00002670288086
    4. 'sect' → logprob: -12.62502670288086
    5. 'ectl' → logprob: -13.75002670288086
    6. 'ected' → logprob: -13.87502670288086
    7. '```' → logprob: -14.00002670288086
    8. 'ects' → logprob: -15.37502670288086
    9. 'ection' → logprob: -15.87502670288086
    10. 'ecta' → logprob: -16.62502670288086

Token 44: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0019627707079052925
    2. '_' → logprob: -6.376962661743164
    3. '<|end|>' → logprob: -9.001962661743164
    4. '_r' → logprob: -10.001962661743164
    5. ' _' → logprob: -10.501962661743164
    6. '_left' → logprob: -10.626962661743164
    7. '__' → logprob: -11.376962661743164
    8. 'right' → logprob: -12.001962661743164
    9. '_RIGHT' → logprob: -12.126962661743164
    10. '_Right' → logprob: -12.751962661743164

Token 45: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.5180075168609619
    2. '<|end|>' → logprob: -1.143007516860962
    3. 'as' → logprob: -2.518007516860962
    4. '<|end|>' → logprob: -6.018007278442383
    5. ' ' → logprob: -6.518007278442383
    6. '_as' → logprob: -8.018007278442383
    7. '  ' → logprob: -8.143007278442383
    8. '	as' → logprob: -9.518007278442383
    9. '(as' → logprob: -10.143007278442383
    10. 'As' → logprob: -10.393007278442383

Token 46: ' BR' (ID: 21735)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7855939269065857
    2. 'BR' → logprob: -1.6605939865112305
    3. 'B' → logprob: -1.7855939865112305
    4. ' ' → logprob: -2.1605939865112305
    5. ' R' → logprob: -3.4105939865112305
    6. ' BR' → logprob: -4.6605939865112305
    7. ' B' → logprob: -4.9105939865112305
    8. 'S' → logprob: -5.9105939865112305
    9. ' bis' → logprob: -6.1605939865112305
    10. '```' → logprob: -6.4105939865112305

Token 47: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0952837467193604
    2. '<|end|>' → logprob: -1.2202837467193604
    3. '(' → logprob: -2.3452837467193604
    4. '
' → logprob: -2.7202837467193604
    5. ' ' → logprob: -2.8452837467193604
    6. 'def' → logprob: -3.3452837467193604
    7. ')' → logprob: -3.8452837467193604
    8. '\n' → logprob: -4.220283508300781
    9. '.' → logprob: -4.345283508300781
    10. '(
' → logprob: -4.470283508300781

Token 48: '__' (ID: 771)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4888054132461548
    2. 'd' → logprob: -1.4888054132461548
    3. '_' → logprob: -2.3638052940368652
    4. '#' → logprob: -3.4888052940368652
    5. 'D' → logprob: -4.988805294036865
    6. 'de' → logprob: -5.613805294036865
    7. ',' → logprob: -5.738805294036865
    8. ':' → logprob: -5.863805294036865
    9. ' ' → logprob: -6.238805294036865
    10. '```' → logprob: -6.488805294036865

Token 49: 'DEBUG' (ID: 13806)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.06151772290468216
    2. 'version' → logprob: -3.0615177154541016
    3. 'name' → logprob: -4.436517715454102
    4. 'author' → logprob: -7.811517715454102
    5. 'import' → logprob: -8.186517715454102
    6. 'built' → logprob: -9.436517715454102
    7. 'doc' → logprob: -9.561517715454102
    8. 'title' → logprob: -10.436517715454102
    9. 'a' → logprob: -10.436517715454102
    10. 'al' → logprob: -10.686517715454102

Token 50: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004050263669341803
    2. ' =' → logprob: -6.504050254821777
    3. '=' → logprob: -6.629050254821777
    4. '___' → logprob: -7.504050254821777
    5. '_' → logprob: -8.004050254821777
    6. '____' → logprob: -8.504050254821777
    7. '=False' → logprob: -10.004050254821777
    8. '_=' → logprob: -11.504050254821777
    9. '=True' → logprob: -11.629050254821777
    10. ' __' → logprob: -11.629050254821777

Token 51: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.23153191804885864
    2. ' False' → logprob: -1.6065318584442139
    3. 'True' → logprob: -6.106532096862793
    4. '0' → logprob: -6.231532096862793
    5. ' True' → logprob: -6.356532096862793
    6. '1' → logprob: -9.731532096862793
    7. ' ' → logprob: -9.731532096862793
    8. 'F' → logprob: -10.731532096862793
    9. '(False' → logprob: -11.606532096862793
    10. '__' → logprob: -12.481532096862793

Token 52: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16695773601531982
    2. '

' → logprob: -2.1669578552246094
    3. '' → logprob: -4.916957855224609
    4. '\' → logprob: -5.166957855224609
    5. '
' → logprob: -5.416957855224609
    6. ' 

' → logprob: -5.666957855224609
    7. '_' → logprob: -5.666957855224609
    8. '<|end|>' → logprob: -5.916957855224609
    9. ' 
' → logprob: -6.166957855224609
    10. '__' → logprob: -6.291957855224609

Token 53: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03010150045156479
    2. 'd' → logprob: -4.405101299285889
    3. '_' → logprob: -4.780101299285889
    4. '#' → logprob: -6.155101299285889
    5. 'class' → logprob: -6.530101299285889
    6. 'de' → logprob: -7.030101299285889
    7. 'D' → logprob: -7.155101299285889
    8. '__' → logprob: -7.280101299285889
    9. 'if' → logprob: -7.530101299285889
    10. '
' → logprob: -8.530101776123047

Token 54: ' R' (ID: 460)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04049549251794815
    2. 'def' → logprob: -3.9154953956604004
    3. ' def' → logprob: -4.9154953956604
    4. ' #' → logprob: -5.4154953956604
    5. '#' → logprob: -5.5404953956604
    6. '_' → logprob: -6.5404953956604
    7. ' _' → logprob: -8.165495872497559
    8. 'd' → logprob: -8.165495872497559
    9. 'import' → logprob: -8.165495872497559
    10. '  ' → logprob: -8.915495872497559

Token 55: 'acc' (ID: 3717)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1629808247089386
    2. 'ed' → logprob: -3.287980794906616
    3. '[' → logprob: -4.037981033325195
    4. '()' → logprob: -4.412981033325195
    5. ' =' → logprob: -4.537981033325195
    6. '(
' → logprob: -4.662981033325195
    7. ')' → logprob: -4.662981033325195
    8. 'ANGE' → logprob: -4.912981033325195
    9. ' (' → logprob: -5.287981033325195
    10. '#' → logprob: -5.287981033325195

Token 56: 'our' (ID: 401)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.7163019180297852
    2. 'e' → logprob: -2.591301918029785
    3. 'on' → logprob: -2.591301918029785
    4. 'o' → logprob: -3.216301918029785
    5. 'om' → logprob: -3.216301918029785
    6. 'uire' → logprob: -3.216301918029785
    7. 'ol' → logprob: -3.466301918029785
    8. 'ur' → logprob: -3.591301918029785
    9. 'urs' → logprob: -3.591301918029785
    10. 'ule' → logprob: -3.841301918029785

Token 57: 'ci' (ID: 2114)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9222651124000549
    2. 'ci' → logprob: -1.5472650527954102
    3. '__' → logprob: -1.7972650527954102
    4. 'ei' → logprob: -4.17226505279541
    5. 'pi' → logprob: -4.17226505279541
    6. '_ci' → logprob: -4.17226505279541
    7. 'é' → logprob: -4.42226505279541
    8. 'çi' → logprob: -4.42226505279541
    9. 'api' → logprob: -4.67226505279541
    10. 'eci' → logprob: -4.79726505279541

Token 58: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.756416380405426
    2. ' =' → logprob: -1.3814163208007812
    3. 'def' → logprob: -1.5064163208007812
    4. ':' → logprob: -3.8814163208007812
    5. '_' → logprob: -4.131416320800781
    6. 's' → logprob: -5.006416320800781
    7. '#' → logprob: -5.881416320800781
    8. ' :' → logprob: -6.506416320800781
    9. ' ' → logprob: -6.881416320800781
    10. 'S' → logprob: -7.006416320800781

Token 59: ' lecture' (ID: 31993)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.5338401794433594
    2. ' la' → logprob: -1.9088401794433594
    3. ' l' → logprob: -2.1588401794433594
    4. 'def' → logprob: -2.4088401794433594
    5. ' def' → logprob: -3.0338401794433594
    6. ' les' → logprob: -3.0338401794433594
    7. 'sys' → logprob: -3.2838401794433594
    8. ' le' → logprob: -3.4088401794433594
    9. 'la' → logprob: -3.6588401794433594
    10. 'l' → logprob: -3.7838401794433594

Token 60: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33764663338661194
    2. ' =' → logprob: -1.9626466035842896
    3. ' ' → logprob: -3.462646722793579
    4. '()' → logprob: -3.587646722793579
    5. '(' → logprob: -3.837646722793579
    6. 's' → logprob: -4.337646484375
    7. 'def' → logprob: -4.837646484375
    8. '=' → logprob: -5.212646484375
    9. 'sys' → logprob: -5.587646484375
    10. '=sys' → logprob: -5.587646484375

Token 61: 'get' (ID: 522)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7290917038917542
    2. 'def' → logprob: -1.8540916442871094
    3. '_' → logprob: -1.9790916442871094
    4. '=' → logprob: -2.8540916442871094
    5. 'L' → logprob: -3.4790916442871094
    6. 'input' → logprob: -3.7290916442871094
    7. 'l' → logprob: -3.8540916442871094
    8. 's' → logprob: -4.229091644287109
    9. 'in' → logprob: -4.354091644287109
    10. 'i' → logprob: -4.854091644287109

Token 62: ' =' (ID: 314)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5978214144706726
    2. 'attr' → logprob: -1.0978214740753174
    3. '_input' → logprob: -2.9728214740753174
    4. '_line' → logprob: -3.2228214740753174
    5. ' =' → logprob: -4.847821235656738
    6. 'input' → logprob: -5.347821235656738
    7. '_' → logprob: -5.722821235656738
    8. '=sys' → logprob: -5.847821235656738
    9. '=' → logprob: -6.097821235656738
    10. '=input' → logprob: -7.097821235656738

Token 63: ' lambda' (ID: 27871)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.9315520524978638
    2. ' sys' → logprob: -1.3065520524978638
    3. 'SYS' → logprob: -2.056551933288574
    4. ' SYS' → logprob: -2.306551933288574
    5. ' lambda' → logprob: -3.306551933288574
    6. 'lambda' → logprob: -3.431551933288574
    7. 'input' → logprob: -3.806551933288574
    8. ' input' → logprob: -4.556551933288574
    9. '=sys' → logprob: -6.306551933288574
    10. ' getattr' → logprob: -6.806551933288574

Token 64: ' t' (ID: 260)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.43010374903678894
    2. ' input' → logprob: -1.4301037788391113
    3. 'sys' → logprob: -3.6801037788391113
    4. 'input' → logprob: -4.055103778839111
    5. ' lambda' → logprob: -4.180103778839111
    6. ' open' → logprob: -4.555103778839111
    7. '=sys' → logprob: -4.555103778839111
    8. ' SYS' → logprob: -4.680103778839111
    9. ' ' → logprob: -4.805103778839111
    10. 'lambda' → logprob: -5.180103778839111

Token 65: '=int' (ID: 37431)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32761818170547485
    2. ',' → logprob: -2.57761812210083
    3. ' t' → logprob: -2.57761812210083
    4. ' :' → logprob: -3.32761812210083
    5. ' sys' → logprob: -3.70261812210083
    6. ':t' → logprob: -3.95261812210083
    7. '=sys' → logprob: -4.32761812210083
    8. 't' → logprob: -4.70261812210083
    9. ' iter' → logprob: -4.82761812210083
    10. 'sys' → logprob: -6.20261812210083

Token 66: ':' (ID: 25)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.9018726348876953
    2. ':' → logprob: -1.1518726348876953
    3. ',' → logprob: -1.4018726348876953
    4. '(input' → logprob: -4.276872634887695
    5. 'input' → logprob: -4.651872634887695
    6. '(' → logprob: -6.026872634887695
    7. ' :' → logprob: -6.276872634887695
    8. ' input' → logprob: -6.651872634887695
    9. ',:' → logprob: -7.401872634887695
    10. '(sys' → logprob: -7.651872634887695

Token 67: ' t' (ID: 260)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.264188289642334
    2. ' map' → logprob: -2.639188289642334
    3. 'int' → logprob: -3.264188289642334
    4. ' t' → logprob: -3.264188289642334
    5. ' sys' → logprob: -3.514188289642334
    6. ' __' → logprob: -4.389188289642334
    7. ' input' → logprob: -4.764188289642334
    8. ' list' → logprob: -4.889188289642334
    9. 't' → logprob: -5.014188289642334
    10. ' ' → logprob: -5.139188289642334

Token 68: '(S' (ID: 6181)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5919696688652039
    2. '(input' → logprob: -1.7169697284698486
    3. '(sys' → logprob: -1.8419697284698486
    4. ',' → logprob: -2.7169697284698486
    5. '()' → logprob: -4.3419694900512695
    6. 'input' → logprob: -4.7169694900512695
    7. '(stdin' → logprob: -6.3419694900512695
    8. '(open' → logprob: -6.4669694900512695
    9. '(s' → logprob: -6.9669694900512695
    10. '().' → logprob: -7.0919694900512695

Token 69: 'YS' (ID: 17546)
  Prédit: 'YS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YS' → logprob: -3.128163257315464e-07
    2. 'Y' → logprob: -15.125
    3. 'ys' → logprob: -16.875
    4. 'YD' → logprob: -18.5
    5. 'TD' → logprob: -21.25
    6. 'YST' → logprob: -21.5
    7. ' Y' → logprob: -21.5
    8. 'YM' → logprob: -21.75
    9. 'Ys' → logprob: -22.25
    10. 'YT' → logprob: -23.125

Token 70: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0032845442183315754
    2. '.argv' → logprob: -5.753284454345703
    3. '.input' → logprob: -9.753284454345703
    4. '.stdout' → logprob: -10.628284454345703
    5. '.' → logprob: -11.378284454345703
    6. '.readline' → logprob: -12.253284454345703
    7. ' .' → logprob: -12.628284454345703
    8. '.std' → logprob: -13.378284454345703
    9. '.stderr' → logprob: -13.503284454345703
    10. '.read' → logprob: -14.128284454345703

Token 71: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0008079635445028543
    2. '.read' → logprob: -7.250807762145996
    3. '.' → logprob: -9.250807762145996
    4. ' readline' → logprob: -13.875807762145996
    5. 'read' → logprob: -14.375807762145996
    6. '.stdin' → logprob: -16.125808715820312
    7. '.)' → logprob: -16.625808715820312
    8. '.readlines' → logprob: -16.750808715820312
    9. ')' → logprob: -16.750808715820312
    10. ' .' → logprob: -17.125808715820312

Token 72: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3915746808052063
    2. '())' → logprob: -1.1415746212005615
    3. '()' → logprob: -5.391574859619141
    4. ')' → logprob: -9.26657485961914
    5. '()[' → logprob: -10.76657485961914
    6. '();)' → logprob: -11.64157485961914
    7. ' ())' → logprob: -12.51657485961914
    8. '(' → logprob: -13.01657485961914
    9. '().__' → logprob: -13.51657485961914
    10. '());' → logprob: -13.51657485961914

Token 73: 'gets' (ID: 27582)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6606011390686035
    2. 'def' → logprob: -2.0356011390686035
    3. '

' → logprob: -2.4106011390686035
    4. '\n' → logprob: -2.5356011390686035
    5. '#' → logprob: -3.1606011390686035
    6. ')' → logprob: -3.6606011390686035
    7. ',' → logprob: -4.1606011390686035
    8. ' ' → logprob: -4.7856011390686035
    9. '<|end|>' → logprob: -4.9106011390686035
    10. '(
' → logprob: -4.9106011390686035

Token 74: ' =' (ID: 314)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6572412252426147
    2. '.readline' → logprob: -1.4072412252426147
    3. 'line' → logprob: -2.1572413444519043
    4. 's' → logprob: -3.4072413444519043
    5. '()' → logprob: -3.4072413444519043
    6. '.strip' → logprob: -3.6572413444519043
    7. 'strip' → logprob: -4.407241344451904
    8. ')' → logprob: -5.532241344451904
    9. 'rstrip' → logprob: -5.532241344451904
    10. '.rstrip' → logprob: -6.032241344451904

Token 75: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.45133236050605774
    2. ' lambda' → logprob: -1.0763323307037354
    3. 'SYS' → logprob: -4.8263325691223145
    4. ' SYS' → logprob: -4.9513325691223145
    5. '(lambda' → logprob: -5.8263325691223145
    6. 'sys' → logprob: -6.2013325691223145
    7. ' sys' → logprob: -7.2013325691223145
    8. '=lambda' → logprob: -7.4513325691223145
    9. 'list' → logprob: -8.513832092285156
    10. 'S' → logprob: -8.888832092285156

Token 76: ' t' (ID: 260)
  Prédit: ' SYS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' SYS' → logprob: -0.7539433836936951
    2. 'SYS' → logprob: -1.0039434432983398
    3. ':' → logprob: -2.50394344329834
    4. 'lambda' → logprob: -4.00394344329834
    5. ' lambda' → logprob: -4.37894344329834
    6. '=sys' → logprob: -4.62894344329834
    7. 's' → logprob: -4.62894344329834
    8. 'sys' → logprob: -4.75394344329834
    9. ' sys' → logprob: -4.75394344329834
    10. ' ' → logprob: -5.50394344329834

Token 77: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6854809522628784
    2. '=str' → logprob: -1.3104809522628784
    3. '=lambda' → logprob: -2.060481071472168
    4. '=sys' → logprob: -2.560481071472168
    5. '=int' → logprob: -4.810481071472168
    6. ':' → logprob: -5.060481071472168
    7. '=s' → logprob: -5.935481071472168
    8. 's' → logprob: -6.685481071472168
    9. '=S' → logprob: -6.935481071472168
    10. '=line' → logprob: -7.310481071472168

Token 78: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011180450208485126
    2. '(S' → logprob: -4.886180400848389
    3. ' :' → logprob: -6.136180400848389
    4. ':S' → logprob: -7.136180400848389
    5. 's' → logprob: -8.511180877685547
    6. '(s' → logprob: -9.136180877685547
    7. ',' → logprob: -9.386180877685547
    8. '=' → logprob: -10.511180877685547
    9. 't' → logprob: -10.511180877685547
    10. '(sys' → logprob: -10.886180877685547

Token 79: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.23327316343784332
    2. ' list' → logprob: -1.7332731485366821
    3. 'map' → logprob: -3.7332732677459717
    4. ' map' → logprob: -6.108273029327393
    5. 't' → logprob: -6.733273029327393
    6. 'SYS' → logprob: -6.983273029327393
    7. ' t' → logprob: -7.483273029327393
    8. '[' → logprob: -7.608273029327393
    9. 'sys' → logprob: -7.858273029327393
    10. ' SYS' → logprob: -7.983273029327393

Token 80: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005256645381450653
    2. '(' → logprob: -5.255256652832031
    3. 'map' → logprob: -11.755256652832031
    4. '(t' → logprob: -11.880256652832031
    5. '(S' → logprob: -12.380256652832031
    6. '(
' → logprob: -13.130256652832031
    7. '()' → logprob: -15.130256652832031
    8. '(

' → logprob: -15.255256652832031
    9. ' map' → logprob: -15.630256652832031
    10. 't' → logprob: -15.755256652832031

Token 81: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.005956529639661312
    2. '(' → logprob: -5.130956649780273
    3. 't' → logprob: -11.255956649780273
    4. '(
' → logprob: -12.255956649780273
    5. ')' → logprob: -12.505956649780273
    6. ')t' → logprob: -13.130956649780273
    7. '<|end|>' → logprob: -13.380956649780273
    8. '	t' → logprob: -14.255956649780273
    9. '(lambda' → logprob: -14.505956649780273
    10. ')(' → logprob: -14.880956649780273

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043326061218976974
    2. ',S' → logprob: -3.1683261394500732
    3. ' ,' → logprob: -8.668326377868652
    4. '(S' → logprob: -9.543326377868652
    5. ',int' → logprob: -10.793326377868652
    6. ',System' → logprob: -10.918326377868652
    7. '(sys' → logprob: -11.793326377868652
    8. ',s' → logprob: -12.043326377868652
    9. 'S' → logprob: -12.543326377868652
    10. ',input' → logprob: -12.543326377868652

Token 83: ' SYS' (ID: 72374)
  Prédit: 'SYS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SYS' → logprob: -0.1618482619524002
    2. ' SYS' → logprob: -1.9118483066558838
    3. '(S' → logprob: -7.786848068237305
    4. ' ' → logprob: -7.911848068237305
    5. 'sys' → logprob: -8.786848068237305
    6. 'SY' → logprob: -8.911848068237305
    7. '_SYS' → logprob: -9.036848068237305
    8. ' sys' → logprob: -9.411848068237305
    9. '  ' → logprob: -9.661848068237305
    10. '   ' → logprob: -10.036848068237305

Token 84: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.7968066206085496e-05
    2. '.' → logprob: -11.000027656555176
    3. 'stdin' → logprob: -11.625027656555176
    4. '.stdout' → logprob: -13.875027656555176
    5. '.readline' → logprob: -14.750027656555176
    6. '.std' → logprob: -14.750027656555176
    7. '(stdin' → logprob: -15.500027656555176
    8. ' .' → logprob: -15.625027656555176
    9. ' stdin' → logprob: -16.375028610229492
    10. '.argv' → logprob: -17.625028610229492

Token 85: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006357223726809025
    2. '.stdin' → logprob: -5.381357192993164
    3. 'stdin' → logprob: -6.381357192993164
    4. '.readlines' → logprob: -10.631357192993164
    5. '.stdout' → logprob: -12.131357192993164
    6. '.' → logprob: -12.506357192993164
    7. 'read' → logprob: -13.256357192993164
    8. '.read' → logprob: -13.256357192993164
    9. '```' → logprob: -13.631357192993164
    10. 'stdout' → logprob: -13.756357192993164

Token 86: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.747814349073451e-05
    2. '()' → logprob: -11.500017166137695
    3. ' ().' → logprob: -12.500017166137695
    4. '.readline' → logprob: -13.000017166137695
    5. ' ' → logprob: -15.000017166137695
    6. 'line' → logprob: -15.625017166137695
    7. '.' → logprob: -15.875017166137695
    8. '.strip' → logprob: -16.125017166137695
    9. ')' → logprob: -16.125017166137695
    10. '))' → logprob: -16.500017166137695

Token 87: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.603705883026123
    2. 'strip' → logprob: -0.853705883026123
    3. 'rstrip' → logprob: -3.603705883026123
    4. 'read' → logprob: -8.853706359863281
    5. ' strip' → logprob: -11.853706359863281
    6. ' split' → logprob: -11.853706359863281
    7. ')' → logprob: -13.478706359863281
    8. '(split' → logprob: -13.853706359863281
    9. 'spl' → logprob: -13.978706359863281
    10. 'decode' → logprob: -14.228706359863281

Token 88: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.17175312340259552
    2. '()' → logprob: -2.546753168106079
    3. '))' → logprob: -2.546753168106079
    4. '())' → logprob: -7.1717529296875
    5. '(' → logprob: -8.4217529296875
    6. '()))
' → logprob: -9.2967529296875
    7. ')' → logprob: -10.2967529296875
    8. '()))
' → logprob: -11.5467529296875
    9. '()));' → logprob: -12.1717529296875
    10. '()))

' → logprob: -12.7967529296875

Token 89: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7610297203063965
    2. '
' → logprob: -1.5110297203063965
    3. 'def' → logprob: -1.7610297203063965
    4. '' → logprob: -3.5110297203063965
    5. 'd' → logprob: -3.8860297203063965
    6. '\' → logprob: -4.1360297203063965
    7. '\n' → logprob: -4.2610297203063965
    8. 'n' → logprob: -4.7610297203063965
    9. '

' → logprob: -5.0110297203063965
    10. ' ' → logprob: -5.5110297203063965

Token 90: ' Weird' (ID: 153616)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21667435765266418
    2. ' My' → logprob: -3.091674327850342
    3. ' Solver' → logprob: -3.841674327850342
    4. ' Data' → logprob: -4.091674327850342
    5. ' S' → logprob: -4.091674327850342
    6. ' Sorted' → logprob: -4.341674327850342
    7. ' Counter' → logprob: -4.466674327850342
    8. ' Solution' → logprob: -4.841674327850342
    9. ' Binary' → logprob: -4.966674327850342
    10. ' Trie' → logprob: -5.216674327850342

Token 91: 'Union' (ID: 39222)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.311025619506836
    2. ' ' → logprob: -2.061025619506836
    3. ' :' → logprob: -2.186025619506836
    4. 'A' → logprob: -2.186025619506836
    5. ':' → logprob: -2.561025619506836
    6. 'E' → logprob: -2.561025619506836
    7. '_' → logprob: -2.811025619506836
    8. 'C' → logprob: -3.061025619506836
    9. 'L' → logprob: -3.186025619506836
    10. 'T' → logprob: -4.811025619506836

Token 92: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.006719991099089384
    2. '-F' → logprob: -5.256720066070557
    3. 'F' → logprob: -7.131720066070557
    4. ':' → logprob: -7.506720066070557
    5. '-' → logprob: -10.631719589233398
    6. '_Find' → logprob: -10.756719589233398
    7. '(' → logprob: -10.881719589233398
    8. 'Fin' → logprob: -11.006719589233398
    9. '{' → logprob: -11.381719589233398
    10. ' Find' → logprob: -11.756719589233398

Token 93: '(object' (ID: 9750)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009104225784540176
    2. '(' → logprob: -5.259104251861572
    3. ' :' → logprob: -5.634104251861572
    4. '():' → logprob: -9.009103775024414
    5. ':
' → logprob: -9.634103775024414
    6. '(object' → logprob: -10.259103775024414
    7. '(:' → logprob: -11.509103775024414
    8. '<|end|>' → logprob: -11.509103775024414
    9. '):' → logprob: -12.009103775024414
    10. ':**' → logprob: -12.134103775024414

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03498360887169838
    2. ':' → logprob: -3.9099836349487305
    3. ' ):' → logprob: -4.9099836349487305
    4. ')' → logprob: -5.0349836349487305
    5. ' :' → logprob: -8.40998363494873
    6. '):
' → logprob: -9.40998363494873
    7. ':)' → logprob: -9.90998363494873
    8. ' )' → logprob: -10.03498363494873
    9. '():' → logprob: -10.78498363494873
    10. ' ' → logprob: -11.28498363494873

Token 95: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033582046162337065
    2. ':
' → logprob: -6.003358364105225
    3. ' :' → logprob: -7.128358364105225
    4. ' :
' → logprob: -10.128357887268066
    5. '(' → logprob: -10.878357887268066
    6. '   ' → logprob: -11.628357887268066
    7. '():' → logprob: -13.253357887268066
    8. '<|end|>' → logprob: -13.378357887268066
    9. ',' → logprob: -14.003357887268066
    10. '):' → logprob: -14.128357887268066

Token 96: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20541632175445557
    2. ' :' → logprob: -2.705416202545166
    3. ' def' → logprob: -3.080416202545166
    4. ' ' → logprob: -4.205416202545166
    5. ' :
' → logprob: -4.205416202545166
    6. ':
' → logprob: -4.205416202545166
    7. '<|end|>' → logprob: -4.205416202545166
    8. 'def' (adapté à ' def') → logprob: -5.580416202545166
    9. ':def' → logprob: -6.080416202545166
    10. '   ' → logprob: -6.330416202545166

Token 97: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01560621801763773
    2. ' _' → logprob: -4.64060640335083
    3. 'nit' → logprob: -5.76560640335083
    4. 'init' → logprob: -6.89060640335083
    5. ' init' → logprob: -7.39060640335083
    6. '__' → logprob: -7.39060640335083
    7. ' nit' → logprob: -9.265605926513672
    8. ' ' → logprob: -9.390605926513672
    9. ' def' → logprob: -9.390605926513672
    10. '_init' → logprob: -10.515605926513672

Token 98: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.7610454708337784e-05
    2. 'i' → logprob: -11.250027656555176
    3. 'ini' → logprob: -11.875027656555176
    4. ' init' → logprob: -12.125027656555176
    5. 'in' → logprob: -13.500027656555176
    6. '_init' → logprob: -15.250027656555176
    7. '	init' → logprob: -15.500027656555176
    8. ' ' → logprob: -15.750027656555176
    9. '   ' → logprob: -16.50002670288086
    10. '```' → logprob: -17.00002670288086

Token 99: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.12734685838222504
    2. '__' → logprob: -2.1273467540740967
    3. '__(
' → logprob: -8.252346992492676
    4. '__((' → logprob: -9.502346992492676
    5. '___' → logprob: -10.502346992492676
    6. '__('' → logprob: -10.877346992492676
    7. '__(*' → logprob: -11.127346992492676
    8. '_' → logprob: -11.877346992492676
    9. '(' → logprob: -12.502346992492676
    10. '____' → logprob: -12.752346992492676

Token 100: 's' (ID: 82)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07006069272756577
    2. ' self' → logprob: -2.6950607299804688
    3. ' ' → logprob: -9.195060729980469
    4. 's' → logprob: -11.945060729980469
    5. '	self' → logprob: -12.320060729980469
    6. '   ' → logprob: -13.070060729980469
    7. ',self' → logprob: -13.070060729980469
    8. ')' → logprob: -13.195060729980469
    9. ',' → logprob: -13.445060729980469
    10. ' ' → logprob: -13.945060729980469

Token 101: ',' (ID: 11)
  Prédit: 'elf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elf' → logprob: -0.004244604613631964
    2. ',' → logprob: -5.504244804382324
    3. 'self' → logprob: -9.129244804382324
    4. ',self' → logprob: -10.129244804382324
    5. ' elf' → logprob: -11.629244804382324
    6. ' ,' → logprob: -12.004244804382324
    7. ' self' → logprob: -14.129244804382324
    8. '(self' → logprob: -14.629244804382324
    9. '	self' → logprob: -14.629244804382324
    10. ',s' → logprob: -15.254244804382324

Token 102: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5354424715042114
    2. 'n' → logprob: -0.9104424715042114
    3. ' self' → logprob: -5.785442352294922
    4. 'self' → logprob: -6.160442352294922
    5. ' ' → logprob: -6.910442352294922
    6. ' N' → logprob: -7.285442352294922
    7. ' a' → logprob: -7.285442352294922
    8. 'N' → logprob: -7.535442352294922
    9. ' size' → logprob: -7.660442352294922
    10. 'a' → logprob: -7.785442352294922

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02285732515156269
    2. ' ):' → logprob: -3.897857427597046
    3. ')' → logprob: -6.147857189178467
    4. ' )' → logprob: -9.397857666015625
    5. ',' → logprob: -9.647857666015625
    6. ':' → logprob: -11.522857666015625
    7. '):
' → logprob: -11.772857666015625
    8. ' :' → logprob: -12.272857666015625
    9. '=' → logprob: -13.397857666015625
    10. ' ,' → logprob: -14.022857666015625

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1894461214542389
    2. ':' → logprob: -2.314446210861206
    3. ',' → logprob: -4.064445972442627
    4. ',s' → logprob: -4.189445972442627
    5. '   ' → logprob: -4.814445972442627
    6. '        ' → logprob: -5.314445972442627
    7. ')' → logprob: -5.689445972442627
    8. ' s' → logprob: -5.814445972442627
    9. ':s' → logprob: -5.814445972442627
    10. '):' → logprob: -5.939445972442627

Token 105: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6341001391410828
    2. 's' (adapté à ' s') → logprob: -0.7591001391410828
    3. '       ' → logprob: -6.634099960327148
    4. '	s' → logprob: -9.384099960327148
    5. '   ' → logprob: -9.884099960327148
    6. ' ' → logprob: -10.134099960327148
    7. 'self' → logprob: -12.884099960327148
    8. ' ' → logprob: -13.884099960327148
    9. 'n' → logprob: -14.009099960327148
    10. '    ' → logprob: -14.134099960327148

Token 106: '._' (ID: 2697)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.1006951779127121
    2. '.' → logprob: -2.4756951332092285
    3. '._' → logprob: -5.7256951332092285
    4. '.p' → logprob: -6.6006951332092285
    5. ' .' → logprob: -6.6006951332092285
    6. '.parent' → logprob: -6.6006951332092285
    7. '.size' → logprob: -6.9756951332092285
    8. '.f' → logprob: -7.2256951332092285
    9. '.t' → logprob: -8.350695610046387
    10. '.a' → logprob: -8.475695610046387

Token 107: 'p' (ID: 79)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.0834709405899048
    2. 'p' → logprob: -1.2084709405899048
    3. 'par' → logprob: -1.7084709405899048
    4. 'n' → logprob: -2.3334708213806152
    5. 'fa' → logprob: -4.208470821380615
    6. 'size' → logprob: -4.208470821380615
    7. 'parents' → logprob: -4.208470821380615
    8. 'pa' → logprob: -4.958470821380615
    9. 'root' → logprob: -5.458470821380615
    10. 'id' → logprob: -5.833470821380615

Token 108: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6460041403770447
    2. 'ar' → logprob: -1.2710041999816895
    3. ' =' → logprob: -1.6460041999816895
    4. '[' → logprob: -7.2710041999816895
    5. '=[' → logprob: -7.2710041999816895
    6. 'a' → logprob: -8.396003723144531
    7. '=[]' → logprob: -8.771003723144531
    8. 'ARENT' → logprob: -9.271003723144531
    9. ' =[' → logprob: -9.646003723144531
    10. ',' → logprob: -9.896003723144531

Token 109: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02668514847755432
    2. '[' → logprob: -4.7766852378845215
    3. '[-' → logprob: -4.9016852378845215
    4. '[list' → logprob: -5.2766852378845215
    5. ' list' → logprob: -5.4016852378845215
    6. ' [' → logprob: -8.401684761047363
    7. '[n' → logprob: -8.526684761047363
    8. '[s' → logprob: -9.151684761047363
    9. '{' → logprob: -9.526684761047363
    10. '{}' → logprob: -9.776684761047363

Token 110: 'None' (ID: 8505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.040476951748132706
    2. '-' → logprob: -3.4154770374298096
    3. ' i' → logprob: -5.0404767990112305
    4. '-i' → logprob: -8.79047679901123
    5. '*' → logprob: -9.79047679901123
    6. ' -' → logprob: -10.41547679901123
    7. '*i' → logprob: -10.54047679901123
    8. 'x' → logprob: -10.66547679901123
    9. 'None' → logprob: -11.29047679901123
    10. '_' → logprob: -11.66547679901123

Token 111: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18141993880271912
    2. ']*' → logprob: -1.9314199686050415
    3. ']*(' → logprob: -4.181419849395752
    4. ']+' → logprob: -5.931419849395752
    5. ' for' → logprob: -6.056419849395752
    6. ' ]' → logprob: -7.806419849395752
    7. 'for' → logprob: -8.30642032623291
    8. ',' → logprob: -10.80642032623291
    9. ' if' → logprob: -11.93142032623291
    10. 'if' → logprob: -12.68142032623291

Token 112: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5913934111595154
    2. ' for' → logprob: -1.5913934707641602
    3. ']*' → logprob: -1.7163934707641602
    4. ']*(' → logprob: -3.09139347076416
    5. 'for' → logprob: -4.46639347076416
    6. ']+' → logprob: -5.71639347076416
    7. ' ]' → logprob: -6.59139347076416
    8. ')' → logprob: -7.59139347076416
    9. ' *' → logprob: -7.71639347076416
    10. ',' → logprob: -8.34139347076416

Token 113: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0028383955359458923
    2. '(n' → logprob: -6.502838611602783
    3. ' n' → logprob: -6.752838611602783
    4. ' (' → logprob: -8.877838134765625
    5. '(' → logprob: -10.627838134765625
    6. '	n' → logprob: -14.127838134765625
    7. ' ' → logprob: -14.252838134765625
    8. ')n' → logprob: -14.252838134765625
    9. '_n' → logprob: -14.877838134765625
    10. '(s' → logprob: -15.127838134765625

Token 114: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28025346994400024
    2. '<|end|>' → logprob: -1.5302534103393555
    3. ' 
' → logprob: -4.5302534103393555
    4. ' ' → logprob: -4.7802534103393555
    5. '<|end|>' → logprob: -6.4052534103393555
    6. '\n' → logprob: -6.5302534103393555
    7. '       ' → logprob: -6.5302534103393555
    8. '  
' → logprob: -6.6552534103393555
    9. 's' → logprob: -7.5302534103393555
    10. '
' → logprob: -8.155253410339355

Token 115: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5818071961402893
    2. ' None' → logprob: -1.9568071365356445
    3. 'n' → logprob: -2.4568071365356445
    4. '<|end|>' → logprob: -2.4568071365356445
    5. ' ' → logprob: -3.0818071365356445
    6. 's' → logprob: -3.4568071365356445
    7. ' n' → logprob: -4.3318071365356445
    8. ' s' → logprob: -4.8318071365356445
    9. ')' → logprob: -4.8318071365356445
    10. '1' → logprob: -5.4568071365356445

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013274075172375888
    2. ' ' → logprob: -9.75013256072998
    3. '2' → logprob: -10.37513256072998
    4. 's' → logprob: -11.62513256072998
    5. 'n' → logprob: -11.75013256072998
    6. '(' → logprob: -12.50013256072998
    7. '

' → logprob: -12.93763256072998
    8. 'size' → logprob: -13.00013256072998
    9. ' -' → logprob: -13.56263256072998
    10. ' n' → logprob: -13.62513256072998

Token 118: ' devient' (ID: 63488)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5125299692153931
    2. '0' → logprob: -2.2625298500061035
    3. ' -' → logprob: -2.5125298500061035
    4. 's' → logprob: -2.8875298500061035
    5. '<|end|>' → logprob: -2.8875298500061035
    6. ' ' → logprob: -3.2625298500061035
    7. 'None' → logprob: -3.8875298500061035
    8. '1' → logprob: -4.6375298500061035
    9. ' None' → logprob: -5.2625298500061035
    10. 'n' → logprob: -5.6375298500061035

Token 120: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37770888209342957
    2. '<|end|>' → logprob: -2.002708911895752
    3. '\n' → logprob: -2.127708911895752
    4. ' 
' → logprob: -3.127708911895752
    5. ' ' → logprob: -4.877708911895752
    6. '  
' → logprob: -5.627708911895752
    7. '<|end|>' → logprob: -6.877708911895752
    8. '\' → logprob: -6.877708911895752
    9. '
' → logprob: -7.877708911895752
    10. '' → logprob: -8.002708435058594

Token 121: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' __' (ID: 2516)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.028505682945251465
    2. 'find' → logprob: -4.153505802154541
    3. ' root' → logprob: -5.278505802154541
    4. ' ' → logprob: -6.278505802154541
    5. ' f' → logprob: -6.903505802154541
    6. ' union' → logprob: -7.153505802154541
    7. ' unite' → logprob: -7.528505802154541
    8. '_find' → logprob: -7.653505802154541
    9. ' p' → logprob: -7.903505802154541
    10. ' get' → logprob: -8.278505325317383

Token 124: 'str' (ID: 689)
  Prédit: 'getitem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'getitem' → logprob: -0.042033709585666656
    2. 'len' → logprob: -3.5420336723327637
    3. 'init' → logprob: -5.167033672332764
    4. 'contains' → logprob: -5.542033672332764
    5. 'get' → logprob: -7.042033672332764
    6. 'repr' → logprob: -7.292033672332764
    7. 'set' → logprob: -7.417033672332764
    8. 'call' → logprob: -8.417034149169922
    9. 'iter' → logprob: -9.667034149169922
    10. 'bool' → logprob: -10.042034149169922

Token 125: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.029790988191962242
    2. '__' → logprob: -3.5297908782958984
    3. '__('' → logprob: -11.029790878295898
    4. '__(
' → logprob: -11.154790878295898
    5. '__((' → logprob: -12.154790878295898
    6. '__("' → logprob: -13.279790878295898
    7. '___' → logprob: -13.404790878295898
    8. '(s' → logprob: -14.779790878295898
    9. '__.__' → logprob: -14.904790878295898
    10. '__(*' → logprob: -15.154790878295898

Token 126: 's' (ID: 82)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004950531758368015
    2. '(self' → logprob: -6.129950523376465
    3. 's' → logprob: -6.754950523376465
    4. ')(' → logprob: -6.879950523376465
    5. ')' → logprob: -8.504950523376465
    6. '(' → logprob: -8.754950523376465
    7. 'self' → logprob: -9.004950523376465
    8. '__(' → logprob: -9.504950523376465
    9. ' (' → logprob: -12.504950523376465
    10. ')s' → logprob: -13.129950523376465

Token 127: '):
' (ID: 1883)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.06401031464338303
    2. ',' → logprob: -2.9390103816986084
    3. ',s' → logprob: -5.689010143280029
    4. '):' → logprob: -6.064010143280029
    5. '(self' → logprob: -6.689010143280029
    6. ')' → logprob: -7.189010143280029
    7. ')(' → logprob: -7.439010143280029
    8. 'self' → logprob: -8.189010620117188
    9. 's' → logprob: -8.814010620117188
    10. '   ' → logprob: -9.064010620117188

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4070183336734772
    2. ' return' → logprob: -1.5320183038711548
    3. 'return' → logprob: -2.9070184230804443
    4. '    ' → logprob: -3.7820184230804443
    5. '(' → logprob: -4.407018184661865
    6. '"' → logprob: -4.407018184661865
    7. '        ' → logprob: -5.907018184661865
    8. '   ' → logprob: -6.032018184661865
    9. ' ' → logprob: -6.407018184661865
    10. ''' → logprob: -6.657018184661865

Token 129: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2903704047203064
    2. ' return' → logprob: -2.415370464324951
    3. '"' → logprob: -2.540370464324951
    4. ''' → logprob: -2.790370464324951
    5. '   ' → logprob: -4.540370464324951
    6. '    ' → logprob: -6.540370464324951
    7. ' ' → logprob: -6.540370464324951
    8. '""' → logprob: -6.665370464324951
    9. ''\' → logprob: -6.665370464324951
    10. '  ' → logprob: -7.290370464324951

Token 130: ' f' (ID: 285)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1899845451116562
    2. '"' → logprob: -1.8149845600128174
    3. 'str' → logprob: -5.064984321594238
    4. 'repr' → logprob: -6.564984321594238
    5. ' str' → logprob: -7.439984321594238
    6. 'f' → logprob: -7.564984321594238
    7. ' repr' → logprob: -8.189984321594238
    8. ''S' → logprob: -8.564984321594238
    9. '''' → logprob: -8.689984321594238
    10. ''s' → logprob: -8.814984321594238

Token 131: '"' (ID: 1)
  Prédit: '"<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"<' → logprob: -0.13760460913181305
    2. ''<' → logprob: -3.0126047134399414
    3. '"{' → logprob: -3.5126047134399414
    4. '"We' → logprob: -3.5126047134399414
    5. '"' → logprob: -4.512604713439941
    6. ''{' → logprob: -5.637604713439941
    7. '"W' → logprob: -5.762604713439941
    8. ''' → logprob: -6.387604713439941
    9. '"[' → logprob: -8.762604713439941
    10. '"(' → logprob: -9.012604713439941

Token 132: 'UF' (ID: 54005)
  Prédit: 'We'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'We' → logprob: -0.4354732632637024
    2. '<' → logprob: -2.5604732036590576
    3. '"We' → logprob: -2.8104732036590576
    4. '{' → logprob: -3.0604732036590576
    5. '"{' → logprob: -3.0604732036590576
    6. '"<' → logprob: -3.3104732036590576
    7. ''' → logprob: -3.8104732036590576
    8. ''{' → logprob: -4.060473442077637
    9. 'Union' → logprob: -4.435473442077637
    10. ''<' → logprob: -4.810473442077637

Token 133: '@' (ID: 31)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '({' → logprob: -0.6554169058799744
    2. '{' → logprob: -1.2804169654846191
    3. '[{' → logprob: -2.780416965484619
    4. '<{' → logprob: -3.405416965484619
    5. ' {' → logprob: -3.655416965484619
    6. ':' → logprob: -3.905416965484619
    7. '{"' → logprob: -4.280416965484619
    8. '(' → logprob: -5.030416965484619
    9. '{s' → logprob: -5.030416965484619
    10. '{{' → logprob: -5.405416965484619

Token 134: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.21082662045955658
    2. '{id' → logprob: -1.7108266353607178
    3. '{s' → logprob: -5.335826396942139
    4. '0' → logprob: -5.585826396942139
    5. '{x' → logprob: -7.335826396942139
    6. '{
' → logprob: -9.460826873779297
    7. '{i' → logprob: -10.210826873779297
    8. '{text' → logprob: -10.835826873779297
    9. '{name' → logprob: -12.460826873779297
    10. '<{' → logprob: -12.585826873779297

Token 135: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.02279125526547432
    2. '{id' → logprob: -4.272791385650635
    3. 'hex' → logprob: -4.772791385650635
    4. '{' → logprob: -10.022790908813477
    5. ' id' → logprob: -10.147790908813477
    6. 's' → logprob: -10.272790908813477
    7. '(id' → logprob: -12.772790908813477
    8. '
' → logprob: -13.147790908813477
    9. ' hex' → logprob: -13.272790908813477
    10. '{
' → logprob: -13.522790908813477

Token 136: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -11.500011444091797
    3. ' (' → logprob: -13.375011444091797
    4. '(
' → logprob: -17.125011444091797
    5. 's' → logprob: -17.750011444091797
    6. ' ' → logprob: -18.375011444091797
    7. '(x' → logprob: -18.875011444091797
    8. '```' → logprob: -19.875011444091797
    9. '}(' → logprob: -20.250011444091797
    10. '(
' → logprob: -20.625011444091797

Token 137: ')}' (ID: 15468)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0011472448240965605
    2. '(' → logprob: -7.376147270202637
    3. '}' → logprob: -8.376147270202637
    4. ' (' → logprob: -10.001147270202637
    5. '):' → logprob: -10.001147270202637
    6. '{' → logprob: -10.376147270202637
    7. 's' → logprob: -10.376147270202637
    8. '{s' → logprob: -10.501147270202637
    9. ')' → logprob: -10.751147270202637
    10. ':s' → logprob: -10.876147270202637

Token 138: ':{' (ID: 25490)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5966408848762512
    2. ' {' → logprob: -1.2216408252716064
    3. '{"' → logprob: -2.9716408252716064
    4. '({' → logprob: -3.9716408252716064
    5. '{s' → logprob: -4.0966410636901855
    6. '(p' → logprob: -4.0966410636901855
    7. ':' → logprob: -4.5966410636901855
    8. '"' → logprob: -5.2216410636901855
    9. ' "' → logprob: -5.5966410636901855
    10. '(' → logprob: -5.5966410636901855

Token 139: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02438206598162651
    2. ' s' → logprob: -4.2743821144104
    3. '[' → logprob: -5.8993821144104
    4. ''' → logprob: -6.0243821144104
    5. '[s' → logprob: -6.5243821144104
    6. ''s' → logprob: -6.8993821144104
    7. '''.' → logprob: -7.3993821144104
    8. 'len' → logprob: -7.7743821144104
    9. '[(' → logprob: -8.399381637573242
    10. '['' → logprob: -8.399381637573242

Token 140: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00016468366084154695
    2. '_p' → logprob: -9.625164985656738
    3. ' .' → logprob: -10.250164985656738
    4. '.' → logprob: -10.750164985656738
    5. '.__' → logprob: -11.250164985656738
    6. '.p' → logprob: -12.000164985656738
    7. '_' → logprob: -12.750164985656738
    8. '
' → logprob: -13.125164985656738
    9. ' ' → logprob: -13.500164985656738
    10. '{' → logprob: -13.500164985656738

Token 141: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001521526137366891
    2. '_p' → logprob: -6.501521587371826
    3. '```' → logprob: -12.001521110534668
    4. '
' → logprob: -12.251521110534668
    5. ' p' → logprob: -13.814021110534668
    6. '_' → logprob: -13.939021110534668
    7. ' ' → logprob: -14.314021110534668
    8. '{' → logprob: -14.501521110534668
    9. '`' → logprob: -15.001521110534668
    10. '

' → logprob: -15.064021110534668

Token 142: '!' (ID: 0)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.0022747928742319345
    2. '}' → logprob: -6.502274990081787
    3. '}")' → logprob: -7.877274990081787
    4. '})' → logprob: -8.377274513244629
    5. '!' → logprob: -8.877274513244629
    6. '}"
' → logprob: -12.127274513244629
    7. '"' → logprob: -12.877274513244629
    8. '}}"' → logprob: -12.877274513244629
    9. '}".' → logprob: -13.002274513244629
    10. ' }' → logprob: -13.127274513244629

Token 143: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5430945158004761
    2. 's' → logprob: -1.043094515800476
    3. '}' → logprob: -2.9180946350097656
    4. '}"' → logprob: -4.793094635009766
    5. '_s' → logprob: -6.668094635009766
    6. '_r' → logprob: -7.168094635009766
    7. 'repr' → logprob: -7.543094635009766
    8. '_repr' → logprob: -7.918094635009766
    9. '}s' → logprob: -8.043094635009766
    10. '}")' → logprob: -8.168094635009766

Token 144: '}"
' (ID: 26189)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.0005289645632728934
    2. '}' → logprob: -7.750528812408447
    3. '"' → logprob: -9.375529289245605
    4. '}"
' → logprob: -12.000529289245605
    5. ' }' → logprob: -12.250529289245605
    6. '}}"' → logprob: -14.000529289245605
    7. '"}' → logprob: -15.250529289245605
    8. '}")' → logprob: -15.250529289245605
    9. '```' → logprob: -15.500529289245605
    10. '}
' → logprob: -15.750529289245605

Token 145: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2373819500207901
    2. '<|end|>' → logprob: -2.112381935119629
    3. '   ' → logprob: -3.112381935119629
    4. '    
' → logprob: -3.737381935119629
    5. ' 
' → logprob: -4.612381935119629
    6. '  
' → logprob: -5.237381935119629
    7. '   
' → logprob: -6.612381935119629
    8. ' ' → logprob: -6.737381935119629
    9. '  ' → logprob: -6.862381935119629
    10. '\n' → logprob: -7.112381935119629

Token 146: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07884075492620468
    2. 'def' (adapté à ' def') → logprob: -3.578840732574463
    3. '    
' → logprob: -4.328840732574463
    4. ' 
' → logprob: -4.578840732574463
    5. ' def' → logprob: -4.703840732574463
    6. '   ' → logprob: -4.828840732574463
    7. '  
' → logprob: -6.203840732574463
    8. '	
' → logprob: -6.703840732574463
    9. '	def' → logprob: -6.703840732574463
    10. '   
' → logprob: -7.078840732574463

Token 147: ' link' (ID: 3461)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.19942936301231384
    2. 'find' → logprob: -2.1994292736053467
    3. '_find' → logprob: -3.1994292736053467
    4. ' root' → logprob: -4.074429512023926
    5. 'root' → logprob: -6.324429512023926
    6. 'f' → logprob: -6.824429512023926
    7. ' f' → logprob: -6.949429512023926
    8. ' ' → logprob: -7.074429512023926
    9. ' union' → logprob: -7.324429512023926
    10. ' get' → logprob: -7.449429512023926

Token 148: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0013716686517000198
    2. '(self' → logprob: -6.62637186050415
    3. '(' → logprob: -10.126371383666992
    4. ' (' → logprob: -12.626371383666992
    5. 'self' → logprob: -14.001371383666992
    6. '(a' → logprob: -14.876371383666992
    7. '<|end|>' → logprob: -14.876371383666992
    8. '}(' → logprob: -15.751371383666992
    9. ')(' → logprob: -15.876371383666992
    10. '__(' → logprob: -16.626371383666992

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03179619833827019
    2. ',a' → logprob: -4.156795978546143
    3. ',x' → logprob: -5.781795978546143
    4. ',u' → logprob: -5.781795978546143
    5. '(a' → logprob: -6.281795978546143
    6. 'a' → logprob: -6.781795978546143
    7. ',i' → logprob: -6.781795978546143
    8. ',p' → logprob: -6.906795978546143
    9. ' ,' → logprob: -7.281795978546143
    10. ')(' → logprob: -7.656795978546143

Token 150: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2114371806383133
    2. 'a' → logprob: -1.8364372253417969
    3. ' x' → logprob: -4.336437225341797
    4. 'u' → logprob: -4.836437225341797
    5. ' a' → logprob: -5.336437225341797
    6. 'i' → logprob: -5.586437225341797
    7. 'p' → logprob: -7.961437225341797
    8. ' u' → logprob: -7.961437225341797
    9. ' i' → logprob: -8.586437225341797
    10. 'l' → logprob: -8.586437225341797

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005543439765460789
    2. ',y' → logprob: -8.000554084777832
    3. ' ,' → logprob: -8.500554084777832
    4. ',x' → logprob: -11.500554084777832
    5. ')' → logprob: -13.625554084777832
    6. ',
' → logprob: -14.250554084777832
    7. ' ' → logprob: -14.750554084777832
    8. 'y' → logprob: -15.000554084777832
    9. '):' → logprob: -15.125554084777832
    10. ',s' → logprob: -15.250554084777832

Token 152: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06197473779320717
    2. ' y' → logprob: -2.8119747638702393
    3. ' ' → logprob: -12.81197452545166
    4. '	y' → logprob: -13.43697452545166
    5. '   ' → logprob: -13.93697452545166
    6. '  ' → logprob: -14.68697452545166
    7. ')' → logprob: -14.81197452545166
    8. '    ' → logprob: -15.06197452545166
    9. 'p' → logprob: -15.81197452545166
    10. ')y' → logprob: -16.186975479125977

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033283839002251625
    2. ')' → logprob: -6.128328323364258
    3. ' ):' → logprob: -6.878328323364258
    4. '):
' → logprob: -9.253328323364258
    5. ',' → logprob: -11.753328323364258
    6. ' )' → logprob: -12.878328323364258
    7. ':' → logprob: -13.003328323364258
    8. '):
' → logprob: -14.003328323364258
    9. ' ' → logprob: -14.128328323364258
    10. ')：' → logprob: -15.003328323364258

Token 154: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3446139991283417
    2. '):' → logprob: -2.469614028930664
    3. ')' → logprob: -2.594614028930664
    4. '<|end|>' → logprob: -2.969614028930664
    5. '
' → logprob: -3.594614028930664
    6. ':
' → logprob: -3.969614028930664
    7. ' ' → logprob: -4.594614028930664
    8. ' :' → logprob: -4.969614028930664
    9. '):
' → logprob: -5.844614028930664
    10. '       ' → logprob: -6.094614028930664

Token 155: ' r' (ID: 428)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5638108849525452
    2. 'px' → logprob: -1.3138108253479004
    3. 's' → logprob: -2.9388108253479004
    4. 'p' → logprob: -3.6888108253479004
    5. 'x' → logprob: -3.8138108253479004
    6. 'sx' → logprob: -3.9388108253479004
    7. 'while' → logprob: -4.1888108253479
    8. 'def' → logprob: -5.5638108253479
    9. 'xp' → logprob: -5.5638108253479
    10. 'assert' → logprob: -5.8138108253479

Token 156: 'X' (ID: 55)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35962849855422974
    2. 'oot' → logprob: -2.234628438949585
    3. '=' → logprob: -2.484628438949585
    4. 'x' → logprob: -3.484628438949585
    5. 'eturn' → logprob: -3.484628438949585
    6. '=s' → logprob: -4.609628677368164
    7. 's' → logprob: -4.859628677368164
    8. 'es' → logprob: -4.859628677368164
    9. '"""' → logprob: -5.484628677368164
    10. 'a' → logprob: -5.609628677368164

Token 157: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10067006200551987
    2. '=' → logprob: -2.600670099258423
    3. ',' → logprob: -4.350669860839844
    4. 'oot' → logprob: -5.725669860839844
    5. '=s' → logprob: -5.725669860839844
    6. ',s' → logprob: -6.600669860839844
    7. 'ank' → logprob: -9.100669860839844
    8. ' ' → logprob: -9.350669860839844
    9. '=root' → logprob: -9.600669860839844
    10. 's' → logprob: -9.725669860839844

Token 158: ' r' (ID: 428)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.19608214497566223
    2. 's' → logprob: -2.07108211517334
    3. ' r' → logprob: -3.82108211517334
    4. 'r' → logprob: -3.94608211517334
    5. ' =' → logprob: -5.32108211517334
    6. '=' → logprob: -6.32108211517334
    7. ' y' → logprob: -6.57108211517334
    8. 'y' → logprob: -7.57108211517334
    9. ' ' → logprob: -7.82108211517334
    10. ')' → logprob: -7.94608211517334

Token 159: 'Y' (ID: 56)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06023096665740013
    2. ' =' → logprob: -3.3102309703826904
    3. ',' → logprob: -4.310230731964111
    4. 'x' → logprob: -4.935230731964111
    5. 's' → logprob: -8.31023120880127
    6. '=s' → logprob: -8.68523120880127
    7. 'X' → logprob: -9.31023120880127
    8. ' ' → logprob: -9.31023120880127
    9. '<|end|>' → logprob: -9.31023120880127
    10. '=None' → logprob: -9.68523120880127

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14277952909469604
    2. ' =' → logprob: -2.017779588699341
    3. ',' → logprob: -9.767779350280762
    4. '=s' → logprob: -10.142779350280762
    5. ')' → logprob: -13.017779350280762
    6. '=
' → logprob: -13.517779350280762
    7. ' =
' → logprob: -14.517779350280762
    8. '=r' → logprob: -14.517779350280762
    9. ')=' → logprob: -14.642779350280762
    10. ',s' → logprob: -15.142779350280762

Token 161: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.43672481179237366
    2. 's' → logprob: -1.0617247819900513
    3. '(s' → logprob: -5.311724662780762
    4. ' (' → logprob: -6.561724662780762
    5. ' x' → logprob: -7.561724662780762
    6. 'x' → logprob: -7.811724662780762
    7. '[s' → logprob: -9.186724662780762
    8. '(x' → logprob: -9.561724662780762
    9. ' y' → logprob: -9.686724662780762
    10. ' ' → logprob: -9.811724662780762

Token 162: '.find' (ID: 4231)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.5255791544914246
    2. '.find' → logprob: -0.9005791544914246
    3. 'find' → logprob: -6.77557897567749
    4. '.root' → logprob: -8.275579452514648
    5. '_find' → logprob: -9.025579452514648
    6. '.union' → logprob: -9.025579452514648
    7. '.parent' → logprob: -9.150579452514648
    8. '.link' → logprob: -9.275579452514648
    9. '.f' → logprob: -9.775579452514648
    10. '.__' → logprob: -9.900579452514648

Token 163: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00036953974631614983
    2. '(' → logprob: -8.50036907196045
    3. '(y' → logprob: -9.25036907196045
    4. '(s' → logprob: -9.87536907196045
    5. ' (' → logprob: -11.75036907196045
    6. '

' → logprob: -13.00036907196045
    7. '
' → logprob: -13.50036907196045
    8. '(
' → logprob: -13.62536907196045
    9. ')' → logprob: -13.62536907196045
    10. ' ' → logprob: -13.87536907196045

Token 164: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0027985796332359314
    2. ' ),' → logprob: -6.377798557281494
    3. ')' → logprob: -7.002798557281494
    4. ' ' → logprob: -9.377799034118652
    5. '()),' → logprob: -9.877799034118652
    6. ',' → logprob: -10.377799034118652
    7. '),(' → logprob: -13.002799034118652
    8. '
' → logprob: -13.002799034118652
    9. ')
' → logprob: -13.252799034118652
    10. ',),' → logprob: -13.252799034118652

Token 165: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2519415020942688
    2. 's' → logprob: -1.501941442489624
    3. '       ' → logprob: -11.501941680908203
    4. '   ' → logprob: -14.001941680908203
    5. '        ' → logprob: -15.126941680908203
    6. '    ' → logprob: -15.376941680908203
    7. '      ' → logprob: -15.626941680908203
    8. '  ' → logprob: -15.876941680908203
    9. '           ' → logprob: -16.001941680908203
    10. '(s' → logprob: -16.126941680908203

Token 166: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00019507692195475101
    2. '.' → logprob: -8.625195503234863
    3. ' .' → logprob: -12.125195503234863
    4. ').' → logprob: -12.500195503234863
    5. 'find' → logprob: -12.750195503234863
    6. '.findall' → logprob: -13.500195503234863
    7. '().' → logprob: -14.125195503234863
    8. '].' → logprob: -15.500195503234863
    9. '>.' → logprob: -15.500195503234863
    10. '=find' → logprob: -16.000194549560547

Token 167: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0003820524725597352
    2. '(' → logprob: -7.875381946563721
    3. ' (' → logprob: -13.625382423400879
    4. '(
' → logprob: -15.750382423400879
    5. '(s' → logprob: -16.250381469726562
    6. ')(' → logprob: -16.375381469726562
    7. 'y' → logprob: -16.375381469726562
    8. ')' → logprob: -16.500381469726562
    9. '(Y' → logprob: -16.625381469726562
    10. '(x' → logprob: -17.375381469726562

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007726464420557022
    2. ')
' → logprob: -4.882726669311523
    3. ' )' → logprob: -9.882726669311523
    4. ')
' → logprob: -11.257726669311523
    5. '   ' → logprob: -11.382726669311523
    6. ');' → logprob: -12.257726669311523
    7. '<|end|>' → logprob: -12.257726669311523
    8. ')return' → logprob: -12.382726669311523
    9. '       ' → logprob: -12.632726669311523
    10. '
' → logprob: -12.757726669311523

Token 169: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05985838174819946
    2. '<|end|>' → logprob: -3.1848583221435547
    3. '       ' → logprob: -4.559858322143555
    4. ' 
' → logprob: -7.059858322143555
    5. '' → logprob: -7.184858322143555
    6. '  
' → logprob: -7.309858322143555
    7. '
' → logprob: -7.434858322143555
    8. '	' → logprob: -7.809858322143555
    9. ' ' → logprob: -7.934858322143555
    10. ' if' → logprob: -8.309858322143555

Token 170: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5599775910377502
    2. '       ' → logprob: -0.9349775910377502
    3. ' if' → logprob: -3.5599775314331055
    4. 's' → logprob: -5.0599775314331055
    5. '	if' → logprob: -7.9349775314331055
    6. '
' → logprob: -8.184977531433105
    7. '   ' → logprob: -8.309977531433105
    8. '        
' → logprob: -9.434977531433105
    9. 'x' → logprob: -9.684977531433105
    10. ' ' → logprob: -9.809977531433105

Token 171: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5760089755058289
    2. ' r' → logprob: -0.8260089755058289
    3. ' ' → logprob: -10.826008796691895
    4. ' s' → logprob: -11.201008796691895
    5. 's' → logprob: -11.451008796691895
    6. '   ' → logprob: -11.951008796691895
    7. '	r' → logprob: -12.326008796691895
    8. ' ' → logprob: -12.576008796691895
    9. '(r' → logprob: -12.826008796691895
    10. '    ' → logprob: -13.201008796691895

Token 172: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -2.963691804325208e-05
    2. 'Y' → logprob: -11.875029563903809
    3. ' X' → logprob: -12.375029563903809
    4. '[' → logprob: -12.625029563903809
    5. ')' → logprob: -12.750029563903809
    6. '=' → logprob: -13.000029563903809
    7. 'x' → logprob: -13.375029563903809
    8. '```' → logprob: -14.000029563903809
    9. ' ' → logprob: -14.125029563903809
    10. '
' → logprob: -14.125029563903809

Token 173: ' ^' (ID: 7602)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.41950151324272156
    2. '==' → logprob: -2.044501543045044
    3. 'is' → logprob: -2.169501543045044
    4. '!=' → logprob: -2.669501543045044
    5. ' ==' → logprob: -4.169501304626465
    6. ' !=' → logprob: -4.294501304626465
    7. ' ' → logprob: -8.169501304626465
    8. '=' → logprob: -9.044501304626465
    9. ')' → logprob: -10.544501304626465
    10. '==
' → logprob: -11.044501304626465

Token 174: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005488214083015919
    2. ' r' → logprob: -5.255488395690918
    3. 'None' → logprob: -8.505488395690918
    4. ' ' → logprob: -11.005488395690918
    5. ' None' → logprob: -11.630488395690918
    6. 's' → logprob: -12.005488395690918
    7. '=' → logprob: -12.005488395690918
    8. '-' → logprob: -12.255488395690918
    9. '	r' → logprob: -13.505488395690918
    10. '  ' → logprob: -13.880488395690918

Token 175: 'Y' (ID: 56)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -8.017927029868588e-05
    2. ' r' → logprob: -10.000080108642578
    3. '0' → logprob: -11.500080108642578
    4. 's' → logprob: -11.500080108642578
    5. 'None' → logprob: -12.250080108642578
    6. 'Y' → logprob: -12.500080108642578
    7. ' ' → logprob: -13.250080108642578
    8. '=' → logprob: -13.375080108642578
    9. '=r' → logprob: -14.625080108642578
    10. 'y' → logprob: -15.500080108642578

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0598924160003662
    2. ' and' → logprob: -1.1848924160003662
    3. 'and' → logprob: -1.8098924160003662
    4. '==' → logprob: -1.8098924160003662
    5. ' ==' → logprob: -4.434892654418945
    6. ' is' → logprob: -5.184892654418945
    7. ' :' → logprob: -6.684892654418945
    8. '!=' → logprob: -6.934892654418945
    9. '=' → logprob: -7.934892654418945
    10. ' !=' → logprob: -9.559892654418945

Token 177: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08149503171443939
    2. '       ' → logprob: -3.3314950466156006
    3. ':
' → logprob: -3.4564950466156006
    4. ' :' → logprob: -5.5814948081970215
    5. '           ' → logprob: -5.7064948081970215
    6. ' and' → logprob: -7.0814948081970215
    7. ',' → logprob: -7.5814948081970215
    8. '=' → logprob: -7.9564948081970215
    9. ' :
' → logprob: -8.08149528503418
    10. ' =' → logprob: -8.45649528503418

Token 178: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3718692362308502
    2. 's' (adapté à ' s') → logprob: -1.6218692064285278
    3. '           ' → logprob: -2.7468693256378174
    4. '       ' → logprob: -3.6218693256378174
    5. ' if' → logprob: -4.371869087219238
    6. '               ' → logprob: -5.871869087219238
    7. '   ' → logprob: -6.621869087219238
    8. '
' → logprob: -6.746869087219238
    9. 'if' → logprob: -6.746869087219238
    10. ' x' → logprob: -7.996869087219238

Token 179: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.387458365177736e-05
    2. '_p' → logprob: -9.750083923339844
    3. ']._' → logprob: -11.000083923339844
    4. '.' → logprob: -12.625083923339844
    5. ')._' → logprob: -13.500083923339844
    6. '_link' → logprob: -14.375083923339844
    7. ' .' → logprob: -14.500083923339844
    8. '_' → logprob: -14.625083923339844
    9. '   ' → logprob: -15.125083923339844
    10. '.p' → logprob: -15.125083923339844

Token 180: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00013393278641160578
    2. '_p' → logprob: -9.125133514404297
    3. '.p' → logprob: -12.000133514404297
    4. '.' → logprob: -12.375133514404297
    5. 'link' → logprob: -13.375133514404297
    6. 'r' → logprob: -13.687633514404297
    7. ' ' → logprob: -13.937633514404297
    8. ' p' → logprob: -14.062633514404297
    9. '```' → logprob: -14.125133514404297
    10. 's' → logprob: -14.375133514404297

Token 181: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00018542143516242504
    2. '[' → logprob: -9.125185012817383
    3. '[s' → logprob: -10.125185012817383
    4. '[min' → logprob: -11.250185012817383
    5. '[y' → logprob: -11.375185012817383
    6. 'r' → logprob: -12.375185012817383
    7. '[max' → logprob: -13.000185012817383
    8. '[x' → logprob: -13.875185012817383
    9. ' [' → logprob: -14.125185012817383
    10. '][' → logprob: -14.500185012817383

Token 182: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00196110550314188
    2. 'Y' → logprob: -6.2519612312316895
    3. '[' → logprob: -11.876960754394531
    4. ']' → logprob: -12.001960754394531
    5. 'p' → logprob: -12.126960754394531
    6. 'x' → logprob: -13.251960754394531
    7. '[p' → logprob: -13.376960754394531
    8. ')' → logprob: -13.376960754394531
    9. ' X' → logprob: -13.751960754394531
    10. '[r' → logprob: -14.001960754394531

Token 183: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004511685692705214
    2. ']=' → logprob: -8.00045108795166
    3. ' ]' → logprob: -9.12545108795166
    4. '-' → logprob: -13.25045108795166
    5. '],' → logprob: -13.75045108795166
    6. ']+=' → logprob: -14.25045108795166
    7. '=' → logprob: -14.75045108795166
    8. ' ' → logprob: -15.00045108795166
    9. '[' → logprob: -15.12545108795166
    10. ']==' → logprob: -15.56295108795166

Token 184: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0792909488081932
    2. ' =' → logprob: -2.5792908668518066
    3. ']' → logprob: -8.204291343688965
    4. ',' → logprob: -10.454291343688965
    5. ']=' → logprob: -10.454291343688965
    6. '>' → logprob: -11.204291343688965
    7. ')' → logprob: -11.329291343688965
    8. ' ' → logprob: -11.454291343688965
    9. '[' → logprob: -12.704291343688965
    10. 's' → logprob: -13.079291343688965

Token 185: ' y' (ID: 342)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.4121114822482923e-06
    2. ' r' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.000003814697266
    4. ' ' → logprob: -19.000003814697266
    5. '           ' → logprob: -19.250003814697266
    6. '     ' → logprob: -19.250003814697266
    7. '  ' → logprob: -19.750003814697266
    8. 'y' → logprob: -19.875003814697266
    9. '
' → logprob: -20.000003814697266
    10. '    ' → logprob: -20.000003814697266

Token 186: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.07831840962171555
    2. ' find' → logprob: -2.7033183574676514
    3. 'ind' → logprob: -5.5783185958862305
    4. '_find' → logprob: -6.0783185958862305
    5. 'link' → logprob: -6.9533185958862305
    6. 'def' → logprob: -7.9533185958862305
    7. '=find' → logprob: -9.20331859588623
    8. 'union' → logprob: -9.51581859588623
    9. ' link' → logprob: -9.64081859588623
    10. ' ' → logprob: -9.89081859588623

Token 190: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006716862553730607
    2. '(' → logprob: -7.750671863555908
    3. '(self' → logprob: -8.37567138671875
    4. 's' → logprob: -11.75067138671875
    5. '(x' → logprob: -13.37567138671875
    6. 'self' → logprob: -14.37567138671875
    7. '(
' → logprob: -15.87567138671875
    8. ' (' → logprob: -16.50067138671875
    9. 'def' → logprob: -17.00067138671875
    10. ')' → logprob: -17.12567138671875

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6405310816480778e-05
    2. ',x' → logprob: -11.375016212463379
    3. ',s' → logprob: -12.625016212463379
    4. ' ,' → logprob: -14.250016212463379
    5. ',self' → logprob: -15.125016212463379
    6. 'self' → logprob: -15.375016212463379
    7. 's' → logprob: -15.375016212463379
    8. ',
' → logprob: -16.250017166137695
    9. ',n' → logprob: -17.250017166137695
    10. '(x' → logprob: -17.750017166137695

Token 192: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0016848169034346938
    2. ' x' → logprob: -6.501684665679932
    3. 's' → logprob: -10.00168514251709
    4. 'i' → logprob: -10.00168514251709
    5. 'a' → logprob: -10.12668514251709
    6. 'u' → logprob: -11.25168514251709
    7. 'r' → logprob: -11.37668514251709
    8. 'v' → logprob: -12.25168514251709
    9. 'k' → logprob: -12.37668514251709
    10. 'p' → logprob: -12.50168514251709

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004121142439544201
    2. '):
' → logprob: -5.50412130355835
    3. ')' → logprob: -10.379120826721191
    4. ':' → logprob: -12.129120826721191
    5. '):
' → logprob: -12.754120826721191
    6. ' ):' → logprob: -13.004120826721191
    7. '):

' → logprob: -14.004120826721191
    8. ',' → logprob: -16.504121780395508
    9. '}:' → logprob: -17.004121780395508
    10. '   ' → logprob: -17.129121780395508

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057972438633441925
    2. '
' → logprob: -4.307972431182861
    3. ' p' → logprob: -4.557972431182861
    4. ' 
' → logprob: -4.682972431182861
    5. ' s' → logprob: -5.557972431182861
    6. '   ' → logprob: -5.932972431182861
    7. 'p' → logprob: -5.932972431182861
    8. ' if' → logprob: -6.307972431182861
    9. '        ' → logprob: -6.432972431182861
    10. ' ' → logprob: -6.682972431182861

Token 195: ' t' (ID: 260)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.032273001968860626
    2. 'if' → logprob: -4.407272815704346
    3. 'px' → logprob: -5.282272815704346
    4. ' p' → logprob: -5.532272815704346
    5. 'while' → logprob: -5.532272815704346
    6. '   ' → logprob: -6.032272815704346
    7. 'r' → logprob: -7.032272815704346
    8. '       ' → logprob: -7.282272815704346
    9. ' px' → logprob: -7.282272815704346
    10. '
' → logprob: -7.407272815704346

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16086141765117645
    2. ' =' → logprob: -1.9108613729476929
    3. '=s' → logprob: -8.160861015319824
    4. ',' → logprob: -9.160861015319824
    5. '=x' → logprob: -9.410861015319824
    6. ' ' → logprob: -9.785861015319824
    7. '  ' → logprob: -11.035861015319824
    8. 'x' → logprob: -11.035861015319824
    9. 'f' → logprob: -11.285861015319824
    10. '   ' → logprob: -11.660861015319824

Token 197: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18704618513584137
    2. 'x' → logprob: -1.8120461702346802
    3. ' s' → logprob: -5.062046051025391
    4. ' x' → logprob: -7.062046051025391
    5. ' ' → logprob: -10.43704605102539
    6. '0' → logprob: -11.68704605102539
    7. '	s' → logprob: -11.87454605102539
    8. '[]' → logprob: -11.93704605102539
    9. '  ' → logprob: -11.99954605102539
    10. '   ' → logprob: -12.56204605102539

Token 198: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.919942486798391e-05
    2. '
' → logprob: -10.250059127807617
    3. '_p' → logprob: -10.875059127807617
    4. '.' → logprob: -13.500059127807617
    5. '_s' → logprob: -15.125059127807617
    6. ';' → logprob: -15.250059127807617
    7. ',' → logprob: -15.250059127807617
    8. ')._' → logprob: -15.250059127807617
    9. '.p' → logprob: -15.375059127807617
    10. ' ' → logprob: -15.375059127807617

Token 199: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.349075556499884e-05
    2. '_p' → logprob: -10.2500638961792
    3. 'find' → logprob: -10.7500638961792
    4. '_find' → logprob: -13.7500638961792
    5. ' p' → logprob: -13.8750638961792
    6. '```' → logprob: -14.3125638961792
    7. 'Find' → logprob: -14.3750638961792
    8. '[p' → logprob: -14.5625638961792
    9. '<p' → logprob: -15.5000638961792
    10. '-p' → logprob: -15.7500638961792

Token 200: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.511406809295295e-06
    2. 'x' → logprob: -12.000006675720215
    3. '[' → logprob: -16.0000057220459
    4. '[s' → logprob: -16.6250057220459
    5. ' x' → logprob: -18.1250057220459
    6. '```' → logprob: -18.2500057220459
    7. '[int' → logprob: -18.3750057220459
    8. '(x' → logprob: -18.8750057220459
    9. '[
' → logprob: -19.1250057220459
    10. '[u' → logprob: -19.2500057220459

Token 201: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6340174078941345
    2. ')' → logprob: -0.7590174078941345
    3. ' )
' → logprob: -7.634017467498779
    4. ']' → logprob: -8.009016990661621
    5. ' )' → logprob: -8.384016990661621
    6. ']
' → logprob: -8.759016990661621
    7. '<|end|>' → logprob: -10.009016990661621
    8. 'if' → logprob: -10.259016990661621
    9. ' if' → logprob: -10.759016990661621
    10. ')
' → logprob: -10.759016990661621

Token 202: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13643844425678253
    2. 'if' → logprob: -2.7614383697509766
    3. '
' → logprob: -3.6364383697509766
    4. '       ' → logprob: -3.8864383697509766
    5. '<|end|>' → logprob: -4.886438369750977
    6. '	if' → logprob: -5.511438369750977
    7. ';if' → logprob: -6.261438369750977
    8. ' or' → logprob: -7.011438369750977
    9. ' is' → logprob: -7.261438369750977
    10. ')' → logprob: -7.636438369750977

Token 203: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009360295720398426
    2. ' if' → logprob: -4.884360313415527
    3. '
' → logprob: -6.634360313415527
    4. '       ' → logprob: -8.009360313415527
    5. 'return' → logprob: -10.134360313415527
    6. 'None' → logprob: -10.134360313415527
    7. '	if' → logprob: -11.759360313415527
    8. 'If' → logprob: -12.759360313415527
    9. 'is' → logprob: -13.134360313415527
    10. ';if' → logprob: -13.259360313415527

Token 204: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1002136841416359
    2. ' t' → logprob: -2.3502137660980225
    3. 'None' → logprob: -12.725214004516602
    4. '   ' → logprob: -13.850214004516602
    5. ' None' → logprob: -13.975214004516602
    6. '    ' → logprob: -14.225214004516602
    7. '	t' → logprob: -14.350214004516602
    8. ' ' → logprob: -14.725214004516602
    9. ' is' → logprob: -15.600214004516602
    10. ' not' → logprob: -16.3502140045166

Token 205: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08904121816158295
    2. 'is' → logprob: -2.464041233062744
    3. '==' → logprob: -9.464040756225586
    4. ' ==' → logprob: -12.089040756225586
    5. ' ' → logprob: -12.339040756225586
    6. ')' → logprob: -12.464040756225586
    7. ' None' → logprob: -12.964040756225586
    8. 'None' → logprob: -13.089040756225586
    9. ')is' → logprob: -13.339040756225586
    10. '	is' → logprob: -14.214040756225586

Token 206: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014624830335378647
    2. ' None' → logprob: -4.26462459564209
    3. 'not' → logprob: -8.26462459564209
    4. ' not' → logprob: -8.51462459564209
    5. 'Not' → logprob: -13.51462459564209
    6. '_None' → logprob: -14.38962459564209
    7. '(None' → logprob: -15.01462459564209
    8. '...' → logprob: -15.13962459564209
    9. '=None' → logprob: -15.51462459564209
    10. '   ' → logprob: -15.51462459564209

Token 207: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0705711618065834
    2. ':
' → logprob: -2.820571184158325
    3. ':return' → logprob: -4.820570945739746
    4. ' or' → logprob: -8.070570945739746
    5. ' :' → logprob: -9.445570945739746
    6. '       ' → logprob: -10.445570945739746
    7. 'return' → logprob: -10.820570945739746
    8. ' return' → logprob: -10.820570945739746
    9. '           ' → logprob: -11.445570945739746
    10. '):' → logprob: -12.070570945739746

Token 208: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.30184340476989746
    2. ' return' → logprob: -1.8018434047698975
    3. '           ' → logprob: -2.9268434047698975
    4. 'x' → logprob: -3.3018434047698975
    5. ' x' → logprob: -5.551843643188477
    6. '       ' → logprob: -6.926843643188477
    7. '	return' → logprob: -8.551843643188477
    8. '	       ' → logprob: -10.426843643188477
    9. '   ' → logprob: -11.426843643188477
    10. 's' → logprob: -11.676843643188477

Token 209: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017024369444698095
    2. ' x' → logprob: -6.376702308654785
    3. '	x' → logprob: -15.626702308654785
    4. ' ' → logprob: -17.6267032623291
    5. '
' → logprob: -18.5017032623291
    6. '   ' → logprob: -18.8767032623291
    7. ')x' → logprob: -19.3767032623291
    8. ' ' → logprob: -19.7517032623291
    9. '  ' → logprob: -19.8767032623291
    10. '(x' → logprob: -20.2517032623291

Token 210: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22836461663246155
    2. '
' → logprob: -1.6033645868301392
    3. '<|end|>' → logprob: -6.72836446762085
    4. '        
' → logprob: -7.72836446762085
    5. ' else' → logprob: -8.228364944458008
    6. '   ' → logprob: -8.728364944458008
    7. ' 
' → logprob: -9.228364944458008
    8. 'else' → logprob: -9.353364944458008
    9. '  
' → logprob: -9.478364944458008
    10. 's' → logprob: -9.603364944458008

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005328032188117504
    2. '	' → logprob: -6.630328178405762
    3. ' else' → logprob: -6.880328178405762
    4. '<|end|>' → logprob: -7.255328178405762
    5. '   ' → logprob: -7.880328178405762
    6. '\n' → logprob: -8.130328178405762
    7. '        
' → logprob: -8.255328178405762
    8. ' 
' → logprob: -8.505328178405762
    9. ' s' → logprob: -8.505328178405762
    10. 's' → logprob: -9.005328178405762

Token 212: ' s' (ID: 265)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9310163259506226
    2. 's' (adapté à ' s') → logprob: -1.1810163259506226
    3. 'p' → logprob: -2.181016445159912
    4. '       ' → logprob: -2.306016445159912
    5. ' s' → logprob: -2.931016445159912
    6. ' p' → logprob: -4.556016445159912
    7. ' r' → logprob: -4.681016445159912
    8. 'u' → logprob: -5.681016445159912
    9. '   ' → logprob: -5.681016445159912
    10. 'y' → logprob: -6.806016445159912

Token 213: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.3902033970225602e-05
    2. ']._' → logprob: -11.875014305114746
    3. '.' → logprob: -12.750014305114746
    4. ')._' → logprob: -12.750014305114746
    5. '_p' → logprob: -14.375014305114746
    6. ' .' → logprob: -16.25001335144043
    7. '.p' → logprob: -16.62501335144043
    8. '.__' → logprob: -16.62501335144043
    9. '_' → logprob: -17.12501335144043
    10. '."_' → logprob: -17.37501335144043

Token 214: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3544423381972592e-05
    2. 'find' → logprob: -11.75001335144043
    3. '_p' → logprob: -12.37501335144043
    4. '	p' → logprob: -15.25001335144043
    5. 'link' → logprob: -15.75001335144043
    6. '
' → logprob: -16.12501335144043
    7. '   ' → logprob: -16.56251335144043
    8. '```' → logprob: -16.62501335144043
    9. '_' → logprob: -16.68751335144043
    10. '_find' → logprob: -16.75001335144043

Token 215: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0017170661594718695
    2. 'x' → logprob: -6.3767170906066895
    3. '[' → logprob: -11.876716613769531
    4. '[t' → logprob: -13.376716613769531
    5. '[s' → logprob: -13.376716613769531
    6. ' x' → logprob: -13.626716613769531
    7. '```' → logprob: -13.876716613769531
    8. ',x' → logprob: -15.001716613769531
    9. ' [' → logprob: -15.251716613769531
    10. 's' → logprob: -15.251716613769531

Token 216: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04158896952867508
    2. ']=' → logprob: -3.4165890216827393
    3. '=' → logprob: -4.91658878326416
    4. ' =' → logprob: -8.04158878326416
    5. ')' → logprob: -8.66658878326416
    6. '],' → logprob: -10.29158878326416
    7. ' ]' → logprob: -10.54158878326416
    8. ')=' → logprob: -11.04158878326416
    9. ',' → logprob: -11.16658878326416
    10. ']+=' → logprob: -13.66658878326416

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815064437687397
    2. ' =' → logprob: -4.018150806427002
    3. ',' → logprob: -14.393150329589844
    4. '=t' → logprob: -16.643150329589844
    5. '=s' → logprob: -16.893150329589844
    6. '.=' → logprob: -17.768150329589844
    7. ' ' → logprob: -18.393150329589844
    8. '＝' → logprob: -18.518150329589844
    9. '=

' → logprob: -19.268150329589844
    10. ')' → logprob: -19.393150329589844

Token 218: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004623203072696924
    2. ' s' → logprob: -5.3796234130859375
    3. 't' → logprob: -14.129623413085938
    4. ' ' → logprob: -14.754623413085938
    5. 'r' → logprob: -14.879623413085938
    6. '   ' → logprob: -15.004623413085938
    7. 'p' → logprob: -15.004623413085938
    8. 'y' → logprob: -15.254623413085938
    9. '	s' → logprob: -15.504623413085938
    10. 'u' → logprob: -16.129623413085938

Token 219: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.007759003899991512
    2. '._' → logprob: -4.882759094238281
    3. 'find' → logprob: -9.382759094238281
    4. '.' → logprob: -9.882759094238281
    5. '_.' → logprob: -12.007759094238281
    6. '_find' → logprob: -12.382759094238281
    7. ' .' → logprob: -13.382759094238281
    8. '.link' → logprob: -13.757759094238281
    9. '	find' → logprob: -14.007759094238281
    10. '..' → logprob: -14.257759094238281

Token 220: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -4.966313281329349e-05
    2. '(' → logprob: -10.000049591064453
    3. '(s' → logprob: -12.875049591064453
    4. ' (' → logprob: -14.250049591064453
    5. 't' → logprob: -15.000049591064453
    6. 's' → logprob: -15.375049591064453
    7. '(
' → logprob: -15.500049591064453
    8. ')' → logprob: -16.375049591064453
    9. '(token' → logprob: -16.875049591064453
    10. '((' → logprob: -17.125049591064453

Token 221: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08140834420919418
    2. '(t' → logprob: -2.5814082622528076
    3. '(x' → logprob: -7.081408500671387
    4. ')
' → logprob: -7.206408500671387
    5. ')t' → logprob: -8.081408500671387
    6. '(' → logprob: -8.456408500671387
    7. 't' → logprob: -8.831408500671387
    8. ' )' → logprob: -8.956408500671387
    9. '(s' → logprob: -9.206408500671387
    10. 's' → logprob: -11.831408500671387

Token 222: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008408311754465103
    2. '       ' → logprob: -5.258408546447754
    3. ' return' → logprob: -5.758408546447754
    4. '   ' → logprob: -11.508408546447754
    5. '	return' → logprob: -13.133408546447754
    6. 's' → logprob: -14.633408546447754
    7. ' ' → logprob: -15.008408546447754
    8. '
' → logprob: -16.133407592773438
    9. ':return' → logprob: -16.258407592773438
    10. '_return' → logprob: -17.258407592773438

Token 223: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0067651099525392056
    2. ' s' → logprob: -5.006764888763428
    3. '_s' → logprob: -11.006765365600586
    4. '(s' → logprob: -11.006765365600586
    5. 'x' → logprob: -11.256765365600586
    6. 'p' → logprob: -13.006765365600586
    7. ' ' → logprob: -15.256765365600586
    8. '_p' → logprob: -15.756765365600586
    9. ' x' → logprob: -16.131765365600586
    10. ' ' → logprob: -16.131765365600586

Token 224: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0035750074312090874
    2. '[x' → logprob: -6.128574848175049
    3. '.' → logprob: -7.503574848175049
    4. '_' → logprob: -7.628574848175049
    5. '.x' → logprob: -8.628575325012207
    6. '[' → logprob: -9.753575325012207
    7. '_x' → logprob: -10.628575325012207
    8. '.__' → logprob: -11.253575325012207
    9. '(x' → logprob: -11.753575325012207
    10. '.[' → logprob: -11.753575325012207

Token 225: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.180258191714529e-06
    2. '_p' → logprob: -11.875008583068848
    3. 'find' → logprob: -15.125008583068848
    4. '[' → logprob: -15.812508583068848
    5. '[p' → logprob: -16.68750762939453
    6. 'token' → logprob: -16.81250762939453
    7. '```' → logprob: -16.87500762939453
    8. '{' → logprob: -16.93750762939453
    9. 'п' → logprob: -16.93750762939453
    10. '<p' → logprob: -17.00000762939453

Token 226: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.980854959692806e-05
    2. 'x' → logprob: -9.875069618225098
    3. '[' → logprob: -11.000069618225098
    4. '(x' → logprob: -14.125069618225098
    5. ' [' → logprob: -15.625069618225098
    6. ' x' → logprob: -16.125070571899414
    7. '[s' → logprob: -16.125070571899414
    8. '```' → logprob: -16.500070571899414
    9. '<|end|>' → logprob: -16.500070571899414
    10. '<x' → logprob: -16.500070571899414

Token 227: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4905931055545807
    2. '<|end|>' → logprob: -0.9905930757522583
    3. '}' → logprob: -4.240592956542969
    4. ']' → logprob: -6.865592956542969
    5. '<|end|>' → logprob: -7.365592956542969
    6. ' )' → logprob: -9.240592956542969
    7. '```' → logprob: -9.865592956542969
    8. ' }' → logprob: -10.115592956542969
    9. '
' → logprob: -10.115592956542969
    10. ')
' → logprob: -10.740592956542969

Token 228: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: ' connected' (ID: 12079)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.767733097076416
    2. 'same' → logprob: -1.767733097076416
    3. 'root' → logprob: -2.017733097076416
    4. 'connected' → logprob: -2.517733097076416
    5. 'un' → logprob: -2.642733097076416
    6. 'roots' → logprob: -4.017733097076416
    7. 'merge' → logprob: -4.142733097076416
    8. 'size' → logprob: -4.892733097076416
    9. 'parent' → logprob: -5.142733097076416
    10. 'join' → logprob: -6.017733097076416

Token 231: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.723973582556937e-05
    2. '(self' → logprob: -11.250017166137695
    3. 's' → logprob: -12.875017166137695
    4. '(' → logprob: -13.625017166137695
    5. ' (' → logprob: -15.375017166137695
    6. '=' → logprob: -16.750017166137695
    7. '(
' → logprob: -16.875017166137695
    8. '   ' → logprob: -17.625017166137695
    9. 'self' → logprob: -17.625017166137695
    10. '(S' → logprob: -18.125017166137695

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42156729102134705
    2. '(s' → logprob: -1.4215673208236694
    3. '(self' → logprob: -2.29656720161438
    4. 'self' → logprob: -7.546567440032959
    5. 's' → logprob: -8.0465669631958
    6. '(' → logprob: -8.0465669631958
    7. ' ,' → logprob: -8.4215669631958
    8. ' (' → logprob: -8.5465669631958
    9. ',s' → logprob: -9.2965669631958
    10. ',self' → logprob: -9.2965669631958

Token 233: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22545839846134186
    2. ' x' → logprob: -1.6004583835601807
    3. 's' → logprob: -11.225458145141602
    4. 'a' → logprob: -11.350458145141602
    5. ' s' → logprob: -12.225458145141602
    6. ')' → logprob: -12.225458145141602
    7. ' ' → logprob: -13.225458145141602
    8. '   ' → logprob: -13.350458145141602
    9. '	x' → logprob: -13.350458145141602
    10. ' a' → logprob: -13.350458145141602

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004338877333793789
    2. ' ,' → logprob: -7.750433921813965
    3. ',y' → logprob: -13.500433921813965
    4. ',x' → logprob: -13.625433921813965
    5. ',
' → logprob: -14.625433921813965
    6. ',s' → logprob: -16.75043296813965
    7. 's' → logprob: -16.87543296813965
    8. ',

' → logprob: -17.37543296813965
    9. ')' → logprob: -17.75043296813965
    10. '   ' → logprob: -18.12543296813965

Token 235: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04859452322125435
    2. ' y' → logprob: -3.0485944747924805
    3. ' ' → logprob: -12.54859447479248
    4. '   ' → logprob: -13.04859447479248
    5. '	y' → logprob: -14.29859447479248
    6. '  ' → logprob: -14.92359447479248
    7. 'x' → logprob: -15.42359447479248
    8. '    ' → logprob: -15.54859447479248
    9. '```' → logprob: -17.548595428466797
    10. ' ' → logprob: -17.798595428466797

Token 236: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.049168605357408524
    2. '):
' → logprob: -3.049168586730957
    3. ')' → logprob: -7.674168586730957
    4. ' ):' → logprob: -9.174168586730957
    5. '):
' → logprob: -12.049168586730957
    6. ' ):
' → logprob: -12.674168586730957
    7. '):

' → logprob: -13.424168586730957
    8. '   ' → logprob: -14.674168586730957
    9. ')=' → logprob: -14.674168586730957
    10. ' )' → logprob: -14.799168586730957

Token 237: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.05550431087613106
    2. ' s' → logprob: -4.305504322052002
    3. ' 
' → logprob: -4.555504322052002
    4. '    ' → logprob: -4.680504322052002
    5. '   ' → logprob: -5.180504322052002
    6. ' (' → logprob: -5.680504322052002
    7. '       ' → logprob: -5.930504322052002
    8. '(s' → logprob: -6.055504322052002
    9. '    
' → logprob: -6.305504322052002
    10. '<|end|>' → logprob: -6.930504322052002

Token 238: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09389097988605499
    2. 's' → logprob: -2.593890905380249
    3. ' return' → logprob: -4.218891143798828
    4. ' s' → logprob: -8.843891143798828
    5. '   ' → logprob: -11.218891143798828
    6. '
' → logprob: -11.593891143798828
    7. '(s' → logprob: -12.343891143798828
    8. 'r' → logprob: -14.343891143798828
    9. '	return' → logprob: -14.468891143798828
    10. ' ' → logprob: -14.843891143798828

Token 239: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008616581559181213
    2. ' s' → logprob: -4.7586164474487305
    3. '(s' → logprob: -13.88361644744873
    4. ' ' → logprob: -14.50861644744873
    5. '   ' → logprob: -14.50861644744873
    6. '	s' → logprob: -16.883617401123047
    7. '  ' → logprob: -16.883617401123047
    8. '
' → logprob: -17.633617401123047
    9. ' ' → logprob: -18.508617401123047
    10. ' (' → logprob: -19.008617401123047

Token 240: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00025073037249967456
    2. '.' → logprob: -8.875250816345215
    3. '._' → logprob: -9.250250816345215
    4. 'find' → logprob: -11.375250816345215
    5. ').' → logprob: -14.000250816345215
    6. ' .' → logprob: -14.125250816345215
    7. '_.' → logprob: -15.000250816345215
    8. '	find' → logprob: -15.750250816345215
    9. '.findall' → logprob: -15.875250816345215
    10. '=find' → logprob: -15.875250816345215

Token 241: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931707859039307
    2. '(x' → logprob: -0.6931707859039307
    3. '(s' → logprob: -11.068170547485352
    4. 's' → logprob: -12.568170547485352
    5. 'x' → logprob: -13.693170547485352
    6. '(
' → logprob: -13.693170547485352
    7. ')' → logprob: -14.068170547485352
    8. ' (' → logprob: -14.443170547485352
    9. '<|end|>' → logprob: -15.443170547485352
    10. '(

' → logprob: -16.06817054748535

Token 242: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002418345306068659
    2. ')==' → logprob: -6.127418518066406
    3. ',' → logprob: -8.752418518066406
    4. ' )' → logprob: -10.127418518066406
    5. '(x' → logprob: -10.502418518066406
    6. ')
' → logprob: -12.752418518066406
    7. '==' → logprob: -13.252418518066406
    8. ',x' → logprob: -14.002418518066406
    9. '   ' → logprob: -14.377418518066406
    10. '(' → logprob: -15.252418518066406

Token 243: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08935349434614182
    2. ' ==' → logprob: -2.464353561401367
    3. '()==' → logprob: -7.964353561401367
    4. '=' → logprob: -10.214353561401367
    5. '==
' → logprob: -11.714353561401367
    6. ' ' → logprob: -12.339353561401367
    7. '()' → logprob: -12.464353561401367
    8. ')==' → logprob: -12.464353561401367
    9. '^' → logprob: -12.839353561401367
    10. ']==' → logprob: -13.589353561401367

Token 244: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002482315758243203
    2. ' s' → logprob: -6.0024824142456055
    3. 'y' → logprob: -12.627482414245605
    4. '   ' → logprob: -13.627482414245605
    5. '       ' → logprob: -14.502482414245605
    6. ' y' → logprob: -15.502482414245605
    7. ' ' → logprob: -15.502482414245605
    8. '    ' → logprob: -15.502482414245605
    9. '     ' → logprob: -15.752482414245605
    10. '	s' → logprob: -15.752482414245605

Token 245: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0010001786286011338
    2. 'find' → logprob: -7.37600040435791
    3. '.' → logprob: -8.12600040435791
    4. ').' → logprob: -9.87600040435791
    5. '(y' → logprob: -11.37600040435791
    6. '.y' → logprob: -12.25100040435791
    7. 'y' → logprob: -12.37600040435791
    8. ' .' → logprob: -12.50100040435791
    9. ')' → logprob: -14.00100040435791
    10. '(find' → logprob: -14.25100040435791

Token 246: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0005456457729451358
    2. 'y' → logprob: -8.375545501708984
    3. '(' → logprob: -8.625545501708984
    4. '(s' → logprob: -9.000545501708984
    5. 's' → logprob: -11.875545501708984
    6. ' y' → logprob: -13.750545501708984
    7. ' (' → logprob: -13.750545501708984
    8. '(x' → logprob: -14.000545501708984
    9. ')' → logprob: -14.250545501708984
    10. '(
' → logprob: -15.000545501708984

Token 247: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001968649885384366
    2. ')
' → logprob: -8.87519645690918
    3. '<|end|>' → logprob: -10.50019645690918
    4. ' )' → logprob: -10.87519645690918
    5. ')return' → logprob: -12.50019645690918
    6. '<|end|>' → logprob: -13.25019645690918
    7. ')

' → logprob: -13.87519645690918
    8. ')x' → logprob: -14.25019645690918
    9. '   ' → logprob: -14.25019645690918
    10. '}' → logprob: -14.25019645690918

Token 248: 'N' (ID: 45)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3614933490753174
    2. '=' → logprob: -1.2364933490753174
    3. ',' → logprob: -4.361493110656738
    4. ' ,' → logprob: -8.986493110656738
    5. ' ' → logprob: -10.486493110656738
    6. '=int' → logprob: -11.611493110656738
    7. ')' → logprob: -11.736493110656738
    8. ',N' → logprob: -12.111493110656738
    9. ' =
' → logprob: -12.236493110656738
    10. '.' → logprob: -12.486493110656738

Token 250: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.2996083199977875
    2. 'Q' → logprob: -1.4246083498001099
    3. 'K' → logprob: -4.29960823059082
    4. ' M' → logprob: -5.92460823059082
    5. '=' → logprob: -7.79960823059082
    6. ' Q' → logprob: -7.92460823059082
    7. ' =' → logprob: -8.79960823059082
    8. 'get' → logprob: -8.79960823059082
    9. 'q' → logprob: -9.04960823059082
    10. 'N' → logprob: -9.29960823059082

Token 251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2524210810661316
    2. ' =' → logprob: -1.5024211406707764
    3. ',' → logprob: -7.627420902252197
    4. '=get' → logprob: -13.127421379089355
    5. ' ' → logprob: -14.252421379089355
    6. '=N' → logprob: -14.877421379089355
    7. '=

' → logprob: -15.002421379089355
    8. ' =
' → logprob: -15.502421379089355
    9. '=sys' → logprob: -15.752421379089355
    10. ')' → logprob: -15.752421379089355

Token 252: ' gets' (ID: 8625)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.38127103447914124
    2. ' get' → logprob: -2.0062711238861084
    3. 'gets' → logprob: -2.1312711238861084
    4. ' gets' → logprob: -2.7562711238861084
    5. ' ' → logprob: -9.131271362304688
    6. ' map' → logprob: -9.381271362304688
    7. '	get' → logprob: -10.756271362304688
    8. 'map' → logprob: -10.881271362304688
    9. ' ge' → logprob: -11.631271362304688
    10. 'ge' → logprob: -11.756271362304688

Token 253: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010676169040380046
    2. '(' → logprob: -9.500106811523438
    3. '();' → logprob: -11.000106811523438
    4. '()
' → logprob: -12.125106811523438
    5. '())' → logprob: -12.750106811523438
    6. ' ()' → logprob: -13.125106811523438
    7. '(),' → logprob: -13.125106811523438
    8. '()]' → logprob: -14.875106811523438
    9. '()>' → logprob: -14.875106811523438
    10. '()[' → logprob: -14.875106811523438

Token 254: 'P' (ID: 47)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.13799035549163818
    2. 'uf' → logprob: -2.3879904747009277
    3. 'wu' → logprob: -4.137990474700928
    4. 'W' → logprob: -4.887990474700928
    5. 'u' → logprob: -5.637990474700928
    6. 's' → logprob: -6.137990474700928
    7. 'ufs' → logprob: -6.262990474700928
    8. 'd' → logprob: -7.387990474700928
    9. 'wo' → logprob: -7.512990474700928
    10. 'wf' → logprob: -7.637990474700928

Token 255: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35074833035469055
    2. ' =' → logprob: -1.2257483005523682
    3. ',' → logprob: -6.100748538970947
    4. 'r' → logprob: -11.100748062133789
    5. '=[]' → logprob: -12.475748062133789
    6. ')' → logprob: -12.475748062133789
    7. '.' → logprob: -12.725748062133789
    8. 's' → logprob: -12.725748062133789
    9. ' ' → logprob: -12.850748062133789
    10. '=P' → logprob: -12.850748062133789

Token 256: ' gets' (ID: 8625)
  Prédit: 'gets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gets' → logprob: -0.018624287098646164
    2. ' gets' → logprob: -4.018624305725098
    3. 'get' → logprob: -7.768624305725098
    4. '[' → logprob: -10.768624305725098
    5. 'list' → logprob: -11.268624305725098
    6. 'Gets' → logprob: -12.768624305725098
    7. '[]' → logprob: -12.893624305725098
    8. ' ' → logprob: -13.143624305725098
    9. ' get' → logprob: -13.518624305725098
    10. ' [' → logprob: -13.768624305725098

Token 257: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -5.431207682704553e-05
    2. '()
' → logprob: -10.500054359436035
    3. '(' → logprob: -10.750054359436035
    4. '(N' → logprob: -13.000054359436035
    5. ' ()' → logprob: -13.875054359436035
    6. '();' → logprob: -14.750054359436035
    7. '(P' → logprob: -14.875054359436035
    8. '()]' → logprob: -15.375054359436035
    9. '())' → logprob: -15.625054359436035
    10. '()\' → logprob: -15.750054359436035

Token 258: '#' (ID: 2)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.1285795271396637
    2. 'w' → logprob: -2.628579616546631
    3. 'W' → logprob: -3.503579616546631
    4. 'U' → logprob: -5.378579616546631
    5. 'UF' → logprob: -5.753579616546631
    6. 'wu' → logprob: -6.378579616546631
    7. 'u' → logprob: -6.378579616546631
    8. 'ufs' → logprob: -6.753579616546631
    9. 'd' → logprob: -7.128579616546631
    10. 'uff' → logprob: -7.378579616546631

Token 259: ' Rang' (ID: 75255)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.06654191762208939
    2. 'w' → logprob: -3.691541910171509
    3. ' uf' → logprob: -4.816542148590088
    4. 'd' → logprob: -4.941542148590088
    5. 'u' → logprob: -5.316542148590088
    6. 'ufs' → logprob: -5.691542148590088
    7. 'W' → logprob: -5.816542148590088
    8. 'ds' → logprob: -5.816542148590088
    9. 'UF' → logprob: -5.816542148590088
    10. 'U' → logprob: -6.816542148590088

Token 260: ' bizarre' (ID: 61150)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2621362507343292
    2. 's' → logprob: -1.5121362209320068
    3. '=' → logprob: -4.887136459350586
    4. 'P' → logprob: -7.137136459350586
    5. '_' → logprob: -8.262136459350586
    6. 'S' → logprob: -8.387136459350586
    7. ' ' → logprob: -8.512136459350586
    8. 'es' → logprob: -8.762136459350586
    9. '=[]' → logprob: -9.387136459350586
    10. 'e' → logprob: -9.762136459350586

Token 261: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3015141785144806
    2. '=' → logprob: -1.6765141487121582
    3. 's' → logprob: -2.926514148712158
    4. 'rank' → logprob: -5.176514148712158
    5. 'r' → logprob: -5.551514148712158
    6. 'uf' → logprob: -6.426514148712158
    7. 'class' → logprob: -6.551514148712158
    8. 'R' → logprob: -6.676514148712158
    9. 'w' → logprob: -7.301514148712158
    10. 'p' → logprob: -7.426514148712158

Token 262: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.5656822323799133
    2. 'W' → logprob: -1.9406821727752686
    3. 'UF' → logprob: -2.4406821727752686
    4. 'w' → logprob: -3.0656821727752686
    5. 'rank' → logprob: -3.0656821727752686
    6. 'R' → logprob: -3.5656821727752686
    7. 'r' → logprob: -4.440682411193848
    8. 'U' → logprob: -4.815682411193848
    9. 'RU' → logprob: -4.815682411193848
    10. 'ruf' → logprob: -4.940682411193848

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408369183540344
    2. '=' → logprob: -0.974083662033081
    3. ' ' → logprob: -12.97408390045166
    4. '.' → logprob: -13.34908390045166
    5. '  ' → logprob: -15.22408390045166
    6. '.=' → logprob: -15.22408390045166
    7. '```' → logprob: -15.34908390045166
    8. ' =
' → logprob: -15.41158390045166
    9. 'We' → logprob: -15.66158390045166
    10. '=
' → logprob: -15.72408390045166

Token 264: ' Weird' (ID: 153616)
  Prédit: 'We'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'We' → logprob: -0.03381294012069702
    2. ' Weird' → logprob: -3.408812999725342
    3. ' We' → logprob: -9.408812522888184
    4. ' ' → logprob: -10.158812522888184
    5. ' weird' → logprob: -11.283812522888184
    6. '  ' → logprob: -11.783812522888184
    7. '   ' → logprob: -11.908812522888184
    8. '	' → logprob: -12.658812522888184
    9. '```' → logprob: -12.783812522888184
    10. '
' → logprob: -12.908812522888184

Token 265: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -5.5577775128767826e-06
    2. ' Union' → logprob: -12.625005722045898
    3. 'union' → logprob: -13.750005722045898
    4. '```' → logprob: -15.500005722045898
    5. '_union' → logprob: -15.875005722045898
    6. '[' → logprob: -16.1250057220459
    7. ''Union' → logprob: -16.3750057220459
    8. 'uf' → logprob: -16.5000057220459
    9. 'Uni' → logprob: -16.6250057220459
    10. '.union' → logprob: -16.8750057220459

Token 266: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -1.5213274309644476e-05
    2. 'Union' → logprob: -12.125015258789062
    3. 'F' → logprob: -12.375015258789062
    4. 'Fill' → logprob: -13.125015258789062
    5. 'Fold' → logprob: -13.750015258789062
    6. '(' → logprob: -14.375015258789062
    7. '[' → logprob: -14.375015258789062
    8. '```' → logprob: -15.125015258789062
    9. 'uf' → logprob: -16.000015258789062
    10. 'Set' → logprob: -16.000015258789062

Token 267: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.125016212463379
    3. '(M' → logprob: -14.500016212463379
    4. '(len' → logprob: -14.750016212463379
    5. '(
' → logprob: -15.250016212463379
    6. ' (' → logprob: -15.500016212463379
    7. '(P' → logprob: -16.000017166137695
    8. ')(' → logprob: -16.125017166137695
    9. 'N' → logprob: -16.500017166137695
    10. '(n' → logprob: -16.750017166137695

Token 268: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47483086585998535
    2. ')' → logprob: -0.9748308658599854
    3. ')

' → logprob: -7.474830627441406
    4. ')
' → logprob: -8.599830627441406
    5. ')

' → logprob: -14.224830627441406
    6. ')`
' → logprob: -14.849830627441406
    7. ')`' → logprob: -14.974830627441406
    8. '+' → logprob: -15.724830627441406
    9. ' )
' → logprob: -15.849830627441406
    10. ' )' → logprob: -16.474830627441406

Token 269: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.596781946020201e-05
    2. ' for' → logprob: -10.375045776367188
    3. 'i' → logprob: -11.750045776367188
    4. '<|end|>' → logprob: -12.750045776367188
    5. '[' → logprob: -14.000045776367188
    6. 'f' → logprob: -14.500045776367188
    7. '
' → logprob: -15.125045776367188
    8. '```' → logprob: -15.250045776367188
    9. 'idx' → logprob: -15.500045776367188
    10. 'x' → logprob: -15.750045776367188

Token 270: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7945021986961365
    2. ' i' → logprob: -1.5445022583007812
    3. ' _' → logprob: -1.9195022583007812
    4. 'i' → logprob: -1.9195022583007812
    5. '_i' → logprob: -4.294502258300781
    6. 'x' → logprob: -4.794502258300781
    7. ' u' → logprob: -5.294502258300781
    8. 'u' → logprob: -5.544502258300781
    9. ' x' → logprob: -5.794502258300781
    10. 'a' → logprob: -5.794502258300781

Token 271: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46310922503471375
    2. ' in' → logprob: -1.0881092548370361
    3. 'in' → logprob: -3.588109254837036
    4. 'i' → logprob: -5.713109016418457
    5. ' _' → logprob: -6.338109016418457
    6. ' i' → logprob: -7.588109016418457
    7. '_i' → logprob: -8.088109016418457
    8. 'range' → logprob: -9.338109016418457
    9. ' ' → logprob: -9.588109016418457
    10. 'I' → logprob: -10.588109016418457

Token 272: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007129086880013347
    2. ' range' → logprob: -7.250712871551514
    3. '_' → logprob: -13.125713348388672
    4. 'rang' → logprob: -14.500713348388672
    5. '	range' → logprob: -15.500713348388672
    6. 'P' → logprob: -16.375713348388672
    7. 'r' → logprob: -17.250713348388672
    8. '(range' → logprob: -17.375713348388672
    9. ' ' → logprob: -17.500713348388672
    10. 'C' → logprob: -17.500713348388672

Token 273: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00014692598779220134
    2. '(' → logprob: -8.875146865844727
    3. '(
' → logprob: -12.375146865844727
    4. ' (' → logprob: -13.125146865844727
    5. ' M' → logprob: -14.500146865844727
    6. 'M' → logprob: -15.500146865844727
    7. '(N' → logprob: -16.875146865844727
    8. '(m' → logprob: -17.250146865844727
    9. '(B' → logprob: -18.250146865844727
    10. '(

' → logprob: -18.375146865844727

Token 274: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013258934020996094
    2. '):
' → logprob: -4.388258934020996
    3. ' ):' → logprob: -7.888258934020996
    4. ')' → logprob: -8.013258934020996
    5. ':' → logprob: -10.638258934020996
    6. '):
' → logprob: -11.263258934020996
    7. ' ):
' → logprob: -12.638258934020996
    8. ',' → logprob: -14.513258934020996
    9. ' )' → logprob: -14.763258934020996
    10. ' :' → logprob: -15.013258934020996

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9273965358734131
    2. 'x' → logprob: -1.177396535873413
    3. ' x' → logprob: -2.177396535873413
    4. ' u' → logprob: -2.677396535873413
    5. 'a' → logprob: -2.927396535873413
    6. 'u' → logprob: -3.302396535873413
    7. ' a' → logprob: -3.927396535873413
    8. 'A' → logprob: -6.427396774291992
    9. ' A' → logprob: -6.427396774291992
    10. '	u' → logprob: -8.552396774291992

Token 276: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.2547045350074768
    2. 'x' → logprob: -1.629704475402832
    3. 'u' → logprob: -3.754704475402832
    4. 'A' → logprob: -6.004704475402832
    5. 'i' → logprob: -6.629704475402832
    6. 'X' → logprob: -7.004704475402832
    7. ' a' → logprob: -8.004704475402832
    8. '   ' → logprob: -8.504704475402832
    9. ' x' → logprob: -9.754704475402832
    10. 'U' → logprob: -10.129704475402832

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11541072279214859
    2. ',b' → logprob: -2.240410804748535
    3. ' ,' → logprob: -6.115410804748535
    4. 'b' → logprob: -8.865410804748535
    5. '=' → logprob: -9.115410804748535
    6. ',a' → logprob: -9.490410804748535
    7. ' =' → logprob: -10.740410804748535
    8. ' b' → logprob: -11.615410804748535
    9. 'a' → logprob: -12.615410804748535
    10. ',B' → logprob: -12.865410804748535

Token 278: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007606747094541788
    2. ' b' → logprob: -4.8826069831848145
    3. ' ' → logprob: -15.257606506347656
    4. 'B' → logprob: -16.257606506347656
    5. '   ' → logprob: -16.507606506347656
    6. '<|end|>' → logprob: -16.507606506347656
    7. '  ' → logprob: -16.632606506347656
    8. '>b' → logprob: -16.757606506347656
    9. '	b' → logprob: -17.507606506347656
    10. '_b' → logprob: -17.882606506347656

Token 279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22554990649223328
    2. ' =' → logprob: -1.6005499362945557
    3. ',' → logprob: -9.225549697875977
    4. '=get' → logprob: -10.225549697875977
    5. ' ' → logprob: -14.100549697875977
    6. 'b' → logprob: -14.975549697875977
    7. 'a' → logprob: -14.975549697875977
    8. '   ' → logprob: -15.350549697875977
    9. ')' → logprob: -15.725549697875977
    10. 'get' → logprob: -16.225549697875977

Token 280: ' gets' (ID: 8625)
  Prédit: 'gets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gets' → logprob: -0.03388242423534393
    2. ' gets' → logprob: -3.4088823795318604
    3. 'get' → logprob: -8.408882141113281
    4. ' ' → logprob: -12.408882141113281
    5. 'Gets' → logprob: -12.908882141113281
    6. '   ' → logprob: -13.158882141113281
    7. ' get' → logprob: -13.158882141113281
    8. '  ' → logprob: -14.783882141113281
    9. '```' → logprob: -15.033882141113281
    10. '	' → logprob: -15.408882141113281

Token 281: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003111519617959857
    2. '(' → logprob: -8.125310897827148
    3. '()
' → logprob: -12.125310897827148
    4. '();' → logprob: -12.875310897827148
    5. ' ()' → logprob: -12.875310897827148
    6. '()]' → logprob: -13.875310897827148
    7. '())' → logprob: -14.375310897827148
    8. ')' → logprob: -14.500310897827148
    9. '```' → logprob: -14.875310897827148
    10. '()<' → logprob: -15.500310897827148

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037279874086380005
    2. 'uf' → logprob: -3.6622798442840576
    3. '
' → logprob: -5.912280082702637
    4. '<|end|>' → logprob: -6.037280082702637
    5. '    
' → logprob: -6.412280082702637
    6. ' ' → logprob: -7.162280082702637
    7. ' uf' → logprob: -7.162280082702637
    8. '  ' → logprob: -7.662280082702637
    9. 'a' → logprob: -8.162280082702637
    10. ')' → logprob: -8.287280082702637

Token 283: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.006140188314020634
    2. ' uf' → logprob: -5.131140232086182
    3. '   ' → logprob: -8.506139755249023
    4. 'u' → logprob: -13.881139755249023
    5. 'if' → logprob: -13.881139755249023
    6. 'ug' → logprob: -13.881139755249023
    7. ' ' → logprob: -14.006139755249023
    8. 'ufs' → logprob: -14.131139755249023
    9. '.uf' → logprob: -14.256139755249023
    10. 'ub' → logprob: -14.381139755249023

Token 284: '.link' (ID: 31945)
  Prédit: '.link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.link' → logprob: -3.35706390615087e-05
    2. '.' → logprob: -10.375033378601074
    3. '.links' → logprob: -14.000033378601074
    4. '.Link' → logprob: -15.125033378601074
    5. ' .' → logprob: -15.375033378601074
    6. '.unlink' → logprob: -15.375033378601074
    7. '.line' → logprob: -15.875033378601074
    8. '<link' → logprob: -16.12503433227539
    9. '.l' → logprob: -16.37503433227539
    10. '.lin' → logprob: -16.62503433227539

Token 285: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -10.750024795532227
    3. 'a' → logprob: -12.750024795532227
    4. '(
' → logprob: -15.000024795532227
    5. '((' → logprob: -16.500024795532227
    6. ' (' → logprob: -17.875024795532227
    7. '(A' → logprob: -18.125024795532227
    8. '(ab' → logprob: -18.125024795532227
    9. '(abs' → logprob: -18.750024795532227
    10. '```' → logprob: -18.875024795532227

Token 286: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8879665732383728
    2. ' -' → logprob: -1.1379666328430176
    3. ',' → logprob: -1.7629666328430176
    4. ' ,' → logprob: -2.3879666328430176
    5. ',b' → logprob: -6.012966632843018
    6. ' ' → logprob: -6.637966632843018
    7. 'a' → logprob: -8.13796615600586
    8. '   ' → logprob: -9.13796615600586
    9. 'b' → logprob: -9.26296615600586
    10. ' -,' → logprob: -9.63796615600586

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. ',' → logprob: -17.2500057220459
    4. '```' → logprob: -17.2500057220459
    5. '0' → logprob: -18.5625057220459
    6. ')' → logprob: -18.6250057220459
    7. '１' → logprob: -18.7500057220459
    8. '
' → logprob: -18.8125057220459
    9. '   ' → logprob: -19.1250057220459
    10. '

' → logprob: -19.1250057220459

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056274138391017914
    2. ' ,' → logprob: -3.056274175643921
    3. ',b' → logprob: -4.931273937225342
    4. 'b' → logprob: -8.0562744140625
    5. '   ' → logprob: -9.3062744140625
    6. ' b' → logprob: -10.8062744140625
    7. ' ' → logprob: -12.3062744140625
    8. ' ,
' → logprob: -12.9312744140625
    9. ',
' → logprob: -13.0562744140625
    10. '-' → logprob: -14.1812744140625

Token 289: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0017031522002071142
    2. ' b' → logprob: -6.376703262329102
    3. '   ' → logprob: -13.876703262329102
    4. '	b' → logprob: -17.0017032623291
    5. ' ' → logprob: -17.2517032623291
    6. ')b' → logprob: -17.2517032623291
    7. 'B' → logprob: -18.0017032623291
    8. '    ' → logprob: -18.6267032623291
    9. '  ' → logprob: -18.7517032623291
    10. ')' → logprob: -18.8767032623291

Token 290: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.061054359131958e-06
    2. ' -' → logprob: -11.750007629394531
    3. ')-' → logprob: -16.37500762939453
    4. '()-' → logprob: -16.75000762939453
    5. ')' → logprob: -17.62500762939453
    6. ' ' → logprob: -18.00000762939453
    7. '1' → logprob: -18.25000762939453
    8. '2' → logprob: -19.00000762939453
    9. '-)' → logprob: -19.00000762939453
    10. '-
' → logprob: -19.12500762939453

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '2' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.750003814697266
    4. ')' → logprob: -15.375003814697266
    5. '<|end|>' → logprob: -16.062503814697266
    6. '```' → logprob: -16.125003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '-' → logprob: -17.312503814697266
    9. 'b' → logprob: -17.625003814697266
    10. '۱' → logprob: -18.062503814697266

Token 292: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018077615823131055
    2. ')
' → logprob: -8.625181198120117
    3. ' )' → logprob: -14.125181198120117
    4. '   ' → logprob: -15.875181198120117
    5. ')

' → logprob: -15.875181198120117
    6. ')
' → logprob: -16.375181198120117
    7. '))' → logprob: -17.625181198120117
    8. '')' → logprob: -18.250181198120117
    9. ')a' → logprob: -18.250181198120117
    10. ')#' → logprob: -18.500181198120117

Token 293: 'cl' (ID: 565)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06515133380889893
    2. 'print' → logprob: -4.065151214599609
    3. 'P' → logprob: -4.440151214599609
    4. '#' → logprob: -4.565151214599609
    5. 'i' → logprob: -4.690151214599609
    6. '<|end|>' → logprob: -5.690151214599609
    7. '...' → logprob: -6.065151214599609
    8. 'p' → logprob: -6.690151214599609
    9. ' for' → logprob: -6.815151214599609
    10. 'while' → logprob: -7.065151214599609

Token 294: 'ump' (ID: 2643)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.30479148030281067
    2. 'asses' → logprob: -1.8047914505004883
    3. 'usters' → logprob: -2.4297914505004883
    4. 'uster' → logprob: -5.304791450500488
    5. 's' → logprob: -6.554791450500488
    6. '#' → logprob: -7.179791450500488
    7. 'ust' → logprob: -7.554791450500488
    8. 'us' → logprob: -8.554791450500488
    9. '   ' → logprob: -8.679791450500488
    10. 'uf' → logprob: -8.804791450500488

Token 295: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07150307297706604
    2. 'ed' → logprob: -3.446503162384033
    3. ' =' → logprob: -3.696503162384033
    4. '_map' → logprob: -5.821503162384033
    5. '_sizes' → logprob: -6.071503162384033
    6. '=' → logprob: -7.071503162384033
    7. '_indices' → logprob: -7.571503162384033
    8. '_size' → logprob: -7.696503162384033
    9. 'es' → logprob: -7.696503162384033
    10. 'usters' → logprob: -7.821503162384033

Token 296: ' DD' (ID: 52933)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8083018064498901
    2. 'default' → logprob: -1.1833018064498901
    3. 'DD' → logprob: -1.4333018064498901
    4. '[]' → logprob: -5.68330192565918
    5. '{}' → logprob: -5.80830192565918
    6. '[[' → logprob: -6.80830192565918
    7. '{' → logprob: -6.93330192565918
    8. ' [' → logprob: -9.18330192565918
    9. ' defaultdict' → logprob: -9.18330192565918
    10. '[{' → logprob: -9.18330192565918

Token 297: '(set' (ID: 25904)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.07769775390625
    2. '(list' → logprob: -1.32769775390625
    3. 'int' → logprob: -1.57769775390625
    4. '(int' → logprob: -1.70269775390625
    5. '(lambda' → logprob: -6.07769775390625
    6. 'set' → logprob: -6.32769775390625
    7. 'lambda' → logprob: -7.70269775390625
    8. '(set' → logprob: -8.20269775390625
    9. '[int' → logprob: -8.32769775390625
    10. '
' → logprob: -8.45269775390625

Token 298: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1269749402999878
    2. ')
' → logprob: -2.1269750595092773
    3. ')

' → logprob: -11.001975059509277
    4. '())
' → logprob: -11.876975059509277
    5. '())' → logprob: -12.001975059509277
    6. ')
' → logprob: -12.376975059509277
    7. '[int' → logprob: -13.001975059509277
    8. ')`
' → logprob: -13.001975059509277
    9. '(int' → logprob: -13.376975059509277
    10. ')set' → logprob: -13.501975059509277

Token 299: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.961759259458631e-06
    2. ' for' → logprob: -12.250004768371582
    3. ')' → logprob: -16.6250057220459
    4. '	for' → logprob: -17.5000057220459
    5. '```' → logprob: -17.7500057220459
    6. '#' → logprob: -17.8750057220459
    7. 'i' → logprob: -18.0000057220459
    8. 'For' → logprob: -18.0000057220459
    9. '
' → logprob: -18.6250057220459
    10. '0' → logprob: -19.1250057220459

Token 300: '(map' (ID: 16946)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.38792553544044495
    2. '(cl' → logprob: -2.387925624847412
    3. '(' → logprob: -3.387925624847412
    4. '_' → logprob: -3.387925624847412
    5. 'cl' → logprob: -3.512925624847412
    6. 's' → logprob: -3.887925624847412
    7. 'for' → logprob: -4.012925624847412
    8. '_=' → logprob: -4.012925624847412
    9. 'P' → logprob: -4.262925624847412
    10. '(map' → logprob: -4.762925624847412

Token 301: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.008041894994676113
    2. '(' → logprob: -4.883041858673096
    3. '((' → logprob: -8.133042335510254
    4. '(cl' → logprob: -9.258042335510254
    5. '(
' → logprob: -11.383042335510254
    6. 'lambda' → logprob: -11.508042335510254
    7. '   ' → logprob: -12.258042335510254
    8. '(l' → logprob: -12.508042335510254
    9. ' (' → logprob: -12.883042335510254
    10. '(u' → logprob: -12.883042335510254

Token 302: ' i' (ID: 575)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5873033404350281
    2. ' (' → logprob: -2.087303400039673
    3. ' x' → logprob: -2.587303400039673
    4. ' lambda' → logprob: -2.962303400039673
    5. ' a' → logprob: -3.462303400039673
    6. '(' → logprob: -3.712303400039673
    7. ' p' → logprob: -4.087303161621094
    8. '(x' → logprob: -4.212303161621094
    9. ' r' → logprob: -4.587303161621094
    10. '(a' → logprob: -4.712303161621094

Token 303: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006000963971018791
    2. ' :' → logprob: -5.506000995635986
    3. ':
' → logprob: -7.631000995635986
    4. 'cl' → logprob: -7.881000995635986
    5. ':(' → logprob: -8.006000518798828
    6. ',' → logprob: -8.006000518798828
    7. ' cl' → logprob: -9.006000518798828
    8. '(cl' → logprob: -9.131000518798828
    9. ':i' → logprob: -9.631000518798828
    10. '=' → logprob: -11.006000518798828

Token 304: ' cl' (ID: 567)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.24317623674869537
    2. ' cl' → logprob: -1.6181762218475342
    3. '   ' → logprob: -4.118176460266113
    4. 'lambda' → logprob: -7.993176460266113
    5. ' lambda' → logprob: -8.243176460266113
    6. '(cl' → logprob: -8.368176460266113
    7. '	cl' → logprob: -9.118176460266113
    8. ' ' → logprob: -9.243176460266113
    9. ' uf' → logprob: -9.493176460266113
    10. 'uf' → logprob: -9.618176460266113

Token 305: 'ump' (ID: 2643)
  Prédit: 'ump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ump' → logprob: -0.0048006996512413025
    2. 'cl' → logprob: -5.879800796508789
    3. '[' → logprob: -6.504800796508789
    4. 'umps' → logprob: -7.879800796508789
    5. '[u' → logprob: -10.629800796508789
    6. 'up' → logprob: -10.754800796508789
    7. '   ' → logprob: -11.254800796508789
    8. '.update' → logprob: -11.379800796508789
    9. '[c' → logprob: -11.754800796508789
    10. 'mp' → logprob: -12.629800796508789

Token 306: '[' (ID: 58)
  Prédit: '[P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[P' → logprob: -0.2575187087059021
    2. '[' → logprob: -1.5075187683105469
    3. '[s' → logprob: -5.882518768310547
    4. '(P' → logprob: -6.757518768310547
    5. '[i' → logprob: -7.632518768310547
    6. '(' → logprob: -7.757518768310547
    7. '[u' → logprob: -8.507518768310547
    8. '[int' → logprob: -9.382518768310547
    9. '.__' → logprob: -9.507518768310547
    10. '[(' → logprob: -9.882518768310547

Token 307: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -5.049755782238208e-05
    2. ' uf' → logprob: -10.50005054473877
    3. '(' → logprob: -10.87505054473877
    4. 'ufs' → logprob: -13.12505054473877
    5. '   ' → logprob: -14.50005054473877
    6. '
' → logprob: -15.12505054473877
    7. ' ' → logprob: -15.50005054473877
    8. 'ufe' → logprob: -15.75005054473877
    9. 'ufi' → logprob: -15.87505054473877
    10. '[' → logprob: -16.000049591064453

Token 308: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -2.3080716346157715e-05
    2. '.' → logprob: -11.125022888183594
    3. 'find' → logprob: -12.375022888183594
    4. 'P' → logprob: -13.750022888183594
    5. '```' → logprob: -14.125022888183594
    6. ' .' → logprob: -14.375022888183594
    7. '._' → logprob: -15.625022888183594
    8. '.get' → logprob: -15.750022888183594
    9. '.findall' → logprob: -15.875022888183594
    10. '	find' → logprob: -16.000022888183594

Token 309: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.101369894575328e-05
    2. '(P' → logprob: -9.750081062316895
    3. '(' → logprob: -11.000081062316895
    4. ' (' → logprob: -13.125081062316895
    5. '(I' → logprob: -14.375081062316895
    6. ')(' → logprob: -14.875081062316895
    7. '[i' → logprob: -14.875081062316895
    8. '(u' → logprob: -14.875081062316895
    9. '((' → logprob: -15.000081062316895
    10. '](' → logprob: -15.125081062316895

Token 310: ')].' (ID: 58800)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.015529810450971127
    2. '].' → logprob: -4.765529632568359
    3. '()].' → logprob: -5.015529632568359
    4. ')].' → logprob: -8.76552963256836
    5. ').' → logprob: -10.01552963256836
    6. 'i' → logprob: -10.89052963256836
    7. '(' → logprob: -12.01552963256836
    8. '()).' → logprob: -12.01552963256836
    9. '(a' → logprob: -12.14052963256836
    10. '(x' → logprob: -12.64052963256836

Token 311: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -5.676981345459353e-06
    2. '.add' → logprob: -12.500005722045898
    3. ' add' → logprob: -13.375005722045898
    4. 'update' → logprob: -15.000005722045898
    5. '_add' → logprob: -18.5000057220459
    6. ')add' → logprob: -18.7500057220459
    7. 'ad' → logprob: -19.0000057220459
    8. '	add' → logprob: -19.1250057220459
    9. '
' → logprob: -19.3750057220459
    10. 'a' → logprob: -20.2500057220459

Token 312: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0004902417422272265
    2. '(P' → logprob: -7.625490188598633
    3. '(' → logprob: -13.750490188598633
    4. ' (' → logprob: -14.875490188598633
    5. '((' → logprob: -15.125490188598633
    6. 'i' → logprob: -15.375490188598633
    7. '(p' → logprob: -16.625490188598633
    8. ' i' → logprob: -16.625490188598633
    9. ',i' → logprob: -16.625490188598633
    10. '(
' → logprob: -17.125490188598633

Token 313: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04357534646987915
    2. '),' → logprob: -3.1685752868652344
    3. ')' → logprob: -8.668575286865234
    4. ' ,' → logprob: -8.918575286865234
    5. ',P' → logprob: -8.918575286865234
    6. ',i' → logprob: -9.793575286865234
    7. ',N' → logprob: -10.918575286865234
    8. ',list' → logprob: -11.168575286865234
    9. '))' → logprob: -11.793575286865234
    10. ',p' → logprob: -12.168575286865234

Token 314: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003360582049936056
    2. ' range' → logprob: -8.000335693359375
    3. '   ' → logprob: -14.750335693359375
    4. ' ' → logprob: -16.125335693359375
    5. '	range' → logprob: -17.000335693359375
    6. '  ' → logprob: -17.250335693359375
    7. '    ' → logprob: -19.875335693359375
    8. '(range' → logprob: -20.125335693359375
    9. 'rang' → logprob: -20.500335693359375
    10. 'r' → logprob: -20.625335693359375

Token 315: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.0339031834737398e-05
    2. 'N' → logprob: -11.375020027160645
    3. '(' → logprob: -12.375020027160645
    4. '(len' → logprob: -12.500020027160645
    5. '(
' → logprob: -14.375020027160645
    6. '(n' → logprob: -15.375020027160645
    7. '   ' → logprob: -18.12502098083496
    8. '	N' → logprob: -18.25002098083496
    9. ' (' → logprob: -18.87502098083496
    10. 'len' → logprob: -19.00002098083496

Token 316: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0013335748808458447
    2. ')))' → logprob: -6.876333713531494
    3. ')' → logprob: -8.126333236694336
    4. '))
' → logprob: -12.876333236694336
    5. ' ))' → logprob: -14.126333236694336
    6. '));' → logprob: -14.626333236694336
    7. '))))' → logprob: -14.626333236694336
    8. '),' → logprob: -15.501333236694336
    9. '()))' → logprob: -16.126333236694336
    10. ')
' → logprob: -16.501333236694336

Token 317: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9706828594207764
    2. ')' → logprob: -1.2206828594207764
    3. '<|end|>' → logprob: -2.2206828594207764
    4. '#' → logprob: -2.3456828594207764
    5. 'P' → logprob: -2.9706828594207764
    6. 'print' → logprob: -3.4706828594207764
    7. 'p' → logprob: -5.2206830978393555
    8. '[' → logprob: -5.5956830978393555
    9. ' for' → logprob: -5.8456830978393555
    10. ']' → logprob: -5.8456830978393555

Token 318: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5824159979820251
    2. ' P' → logprob: -1.83241605758667
    3. ' len' → logprob: -2.70741605758667
    4. ' all' → logprob: -2.70741605758667
    5. ' any' → logprob: -3.08241605758667
    6. '__' → logprob: -3.08241605758667
    7. ' not' → logprob: -3.45741605758667
    8. 'P' → logprob: -4.70741605758667
    9. ' ' → logprob: -5.33241605758667
    10. ' N' → logprob: -5.95741605758667

Token 319: 'DEBUG' (ID: 13806)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.00022797346173319966
    2. ' __' → logprob: -9.750227928161621
    3. 'main' → logprob: -10.250227928161621
    4. '__' → logprob: -10.375227928161621
    5. '.name' → logprob: -10.625227928161621
    6. ' ==' → logprob: -10.750227928161621
    7. ' ' → logprob: -11.000227928161621
    8. ' name' → logprob: -11.125227928161621
    9. '_' → logprob: -11.875227928161621
    10. '.' → logprob: -12.750227928161621

Token 320: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009847812354564667
    2. ' :' → logprob: -5.259847640991211
    3. ':
' → logprob: -5.384847640991211
    4. ' :
' → logprob: -11.134847640991211
    5. ' and' → logprob: -13.759847640991211
    6. ':
' → logprob: -14.009847640991211
    7. ':

' → logprob: -14.384847640991211
    8. ' ==' → logprob: -16.13484764099121
    9. 'and' → logprob: -16.25984764099121
    10. ':#' → logprob: -16.38484764099121

Token 321: ' print' (ID: 2123)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5474207997322083
    2. ' print' → logprob: -1.1724207401275635
    3. '   ' → logprob: -3.0474207401275635
    4. ' sys' → logprob: -3.4224207401275635
    5. 'print' → logprob: -4.422420978546143
    6. 'for' → logprob: -5.172420978546143
    7. ' 
' → logprob: -5.422420978546143
    8. '
' → logprob: -5.547420978546143
    9. ' SYS' → logprob: -7.047420978546143
    10. ' __' → logprob: -7.297420978546143

Token 322: '(cl' (ID: 16811)
  Prédit: '(cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cl' → logprob: -0.05503574386239052
    2. '(f' → logprob: -3.8050358295440674
    3. '((' → logprob: -4.430035591125488
    4. '(len' → logprob: -4.930035591125488
    5. '(' → logprob: -5.680035591125488
    6. '(list' → logprob: -5.805035591125488
    7. '("' → logprob: -5.930035591125488
    8. '(sorted' → logprob: -7.305035591125488
    9. '({' → logprob: -7.430035591125488
    10. '([' → logprob: -8.055035591125488

Token 323: 'ump' (ID: 2643)
  Prédit: 'ump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ump' → logprob: -9.305326966568828e-05
    2. 'up' → logprob: -9.625093460083008
    3. 'mp' → logprob: -12.125093460083008
    4. '{' → logprob: -13.000093460083008
    5. 'umps' → logprob: -13.000093460083008
    6. ')' → logprob: -13.250093460083008
    7. '[' → logprob: -13.250093460083008
    8. 'um' → logprob: -13.375093460083008
    9. '   ' → logprob: -13.625093460083008
    10. ' ump' → logprob: -13.625093460083008

Token 324: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8351892473874614e-05
    2. ' )' → logprob: -10.250048637390137
    3. ',' → logprob: -11.875048637390137
    4. '))' → logprob: -13.375048637390137
    5. ',)' → logprob: -13.750048637390137
    6. '})' → logprob: -13.875048637390137
    7. ')`' → logprob: -14.625048637390137
    8. ')
' → logprob: -14.875048637390137
    9. ')}' → logprob: -15.250048637390137
    10. ')")' → logprob: -15.250048637390137

Token 325: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.025814348831772804
    2. ' file' → logprob: -4.525814533233643
    3. ')' → logprob: -4.900814533233643
    4. 'P' → logprob: -5.775814533233643
    5. 'uf' → logprob: -6.900814533233643
    6. 'flush' → logprob: -7.400814533233643
    7. ' P' → logprob: -8.025814056396484
    8. 'len' → logprob: -8.275814056396484
    9. '[P' → logprob: -8.275814056396484
    10. 'sep' → logprob: -8.775814056396484

Token 326: '=' (ID: 28)
  Prédit: '=sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.0005668530357070267
    2. '=' → logprob: -7.5005669593811035
    3. '=open' → logprob: -11.250566482543945
    4. 'sys' → logprob: -14.625566482543945
    5. ' =' → logprob: -14.875566482543945
    6. '(sys' → logprob: -16.375566482543945
    7. 'SYS' → logprob: -17.500566482543945
    8. '	sys' → logprob: -17.625566482543945
    9. ' sys' → logprob: -19.000566482543945
    10. '=lambda' → logprob: -19.000566482543945

Token 327: 'SYS' (ID: 83122)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008252848871052265
    2. ' sys' → logprob: -5.2582526206970215
    3. 'SYS' → logprob: -6.5082526206970215
    4. '=sys' → logprob: -6.5082526206970215
    5. '(sys' → logprob: -11.50825309753418
    6. ' SYS' → logprob: -11.63325309753418
    7. '	sys' → logprob: -11.75825309753418
    8. '/sys' → logprob: -13.00825309753418
    9. '  ' → logprob: -13.25825309753418
    10. ' ' → logprob: -14.38325309753418

Token 328: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -0.002536782529205084
    2. '.stdout' → logprob: -6.002536773681641
    3. 'stderr' → logprob: -9.75253677368164
    4. '.__' → logprob: -13.75253677368164
    5. '.stdin' → logprob: -14.87753677368164
    6. '=sys' → logprob: -15.00253677368164
    7. '.std' → logprob: -15.12753677368164
    8. ' .' → logprob: -15.25253677368164
    9. '.' → logprob: -15.75253677368164
    10. '(stderr' → logprob: -15.87753677368164

Token 329: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.750001907348633
    3. ')
' → logprob: -15.500001907348633
    4. '())' → logprob: -16.250001907348633
    5. '))' → logprob: -16.375001907348633
    6. ')`' → logprob: -16.625001907348633
    7. '()' → logprob: -16.750001907348633
    8. ')#' → logprob: -17.000001907348633
    9. ')}' → logprob: -17.875001907348633
    10. '),' → logprob: -18.250001907348633

Token 330: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18238741159439087
    2. 'Q' → logprob: -3.182387351989746
    3. 'res' → logprob: -4.182387351989746
    4. 'S' → logprob: -4.182387351989746
    5. 'answer' → logprob: -4.432387351989746
    6. '#' → logprob: -4.557387351989746
    7. 'sorted' → logprob: -4.557387351989746
    8. 'ans' → logprob: -4.807387351989746
    9. 'R' → logprob: -4.807387351989746
    10. 'P' → logprob: -5.432387351989746

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10055913776159286
    2. '=' → logprob: -2.3505592346191406
    3. '_' → logprob: -8.10055923461914
    4. 's' → logprob: -10.72555923461914
    5. '_=' → logprob: -11.60055923461914
    6. ' ' → logprob: -13.10055923461914
    7. ',' → logprob: -13.22555923461914
    8. '=[]' → logprob: -13.22555923461914
    9. '[:]' → logprob: -13.35055923461914
    10. ')' → logprob: -13.47555923461914

Token 332: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14858786761760712
    2. 'sum' → logprob: -2.523587942123413
    3. '[]' → logprob: -3.398587942123413
    4. ' ' → logprob: -4.773587703704834
    5. 'all' → logprob: -5.523587703704834
    6. ' sum' → logprob: -6.023587703704834
    7. '[' → logprob: -6.148587703704834
    8. 'R' → logprob: -6.398587703704834
    9. '[]
' → logprob: -6.648587703704834
    10. ' []' → logprob: -7.398587703704834

Token 333: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1310676634311676
    2. 'sum' → logprob: -2.5060677528381348
    3. '[]' → logprob: -3.8810677528381348
    4. 'R' → logprob: -4.756067752838135
    5. 'all' → logprob: -5.256067752838135
    6. '[]
' → logprob: -6.381067752838135
    7. '[' → logprob: -6.381067752838135
    8. '1' → logprob: -7.256067752838135
    9. 'list' → logprob: -7.256067752838135
    10. 'True' → logprob: -7.381067752838135

Token 334: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21329393982887268
    2. 'for' → logprob: -1.8382939100265503
    3. ' for' → logprob: -3.71329402923584
    4. ' 
' → logprob: -5.33829402923584
    5. ' ' → logprob: -7.08829402923584
    6. '<|end|>' → logprob: -7.33829402923584
    7. '' → logprob: -7.58829402923584
    8. ',' → logprob: -7.71329402923584
    9. ',
' → logprob: -8.46329402923584
    10. '\n' → logprob: -8.58829402923584

Token 335: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002395390532910824
    2. ' for' → logprob: -6.127395153045654
    3. '
' → logprob: -8.502395629882812
    4. '+
' → logprob: -13.252395629882812
    5. ')' → logprob: -14.252395629882812
    6. '+' → logprob: -14.377395629882812
    7. 'result' → logprob: -14.752395629882812
    8. ' 
' → logprob: -14.752395629882812
    9. ',' → logprob: -14.877395629882812
    10. 'while' → logprob: -15.002395629882812

Token 336: ' gr' (ID: 984)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.6493936777114868
    2. 'group' → logprob: -1.8993936777114868
    3. 's' → logprob: -2.2743935585021973
    4. 'k' → logprob: -2.3993935585021973
    5. 'comp' → logprob: -2.6493935585021973
    6. 'key' → logprob: -2.7743935585021973
    7. 'root' → logprob: -2.7743935585021973
    8. 'v' → logprob: -2.7743935585021973
    9. 'g' → logprob: -3.3993935585021973
    10. 'grp' → logprob: -3.7743935585021973

Token 337: ' in' (ID: 306)
  Prédit: 'oup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.0061863986775279045
    2. ',' → logprob: -5.256186485290527
    3. 'oupe' → logprob: -7.881186485290527
    4. 'up' → logprob: -8.506186485290527
    5. 'p' → logprob: -8.756186485290527
    6. ' in' → logprob: -9.506186485290527
    7. 'ou' → logprob: -9.881186485290527
    8. 'o' → logprob: -10.631186485290527
    9. '```' → logprob: -11.006186485290527
    10. '   ' → logprob: -11.381186485290527

Token 338: ' cl' (ID: 567)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -1.9146995327901095e-05
    2. ' cl' → logprob: -10.875019073486328
    3. 'list' → logprob: -16.125019073486328
    4. 'map' → logprob: -18.000019073486328
    5. '	cl' → logprob: -18.625019073486328
    6. '(cl' → logprob: -18.750019073486328
    7. 'values' → logprob: -21.250019073486328
    8. '   ' → logprob: -21.375019073486328
    9. ' ' → logprob: -22.000019073486328
    10. '
' → logprob: -22.375019073486328

Token 339: 'ump' (ID: 2643)
  Prédit: 'ump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ump' → logprob: -4.2987729102605954e-05
    2. 'cl' → logprob: -10.875042915344238
    3. 'umps' → logprob: -11.125042915344238
    4. 'mp' → logprob: -13.000042915344238
    5. 'up' → logprob: -13.000042915344238
    6. 'u' → logprob: -13.250042915344238
    7. '   ' → logprob: -13.500042915344238
    8. 'um' → logprob: -15.375042915344238
    9. 'ust' → logprob: -15.750042915344238
    10. '{' → logprob: -15.875042915344238

Token 340: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.08126876503229141
    2. ':' → logprob: -2.581268787384033
    3. 'values' → logprob: -6.206268787384033
    4. '_values' → logprob: -8.331268310546875
    5. ':
' → logprob: -9.956268310546875
    6. '.' → logprob: -10.831268310546875
    7. '<|end|>' → logprob: -11.081268310546875
    8. ' values' → logprob: -11.706268310546875
    9. '-values' → logprob: -12.331268310546875
    10. '.value' → logprob: -12.331268310546875

Token 341: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009762406698428094
    2. '():
' → logprob: -7.500976085662842
    3. ':' → logprob: -7.875976085662842
    4. '()' → logprob: -10.2509765625
    5. '):' → logprob: -12.3759765625
    6. '(' → logprob: -12.8759765625
    7. '():
' → logprob: -14.2509765625
    8. ' ():' → logprob: -14.7509765625
    9. ':
' → logprob: -16.2509765625
    10. ' :' → logprob: -16.5009765625

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15702813863754272
    2. 'p' → logprob: -3.2820281982421875
    3. ' p' → logprob: -3.4070281982421875
    4. 'result' → logprob: -4.7820281982421875
    5. ' s' → logprob: -4.9070281982421875
    6. 's' → logprob: -4.9070281982421875
    7. ' sorted' → logprob: -4.9070281982421875
    8. ' result' → logprob: -5.2820281982421875
    9. ' for' → logprob: -5.5320281982421875
    10. '       ' → logprob: -5.5320281982421875

Token 343: ' want' (ID: 1682)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -1.5981937646865845
    2. 'p' → logprob: -1.9731937646865845
    3. 'result' → logprob: -2.223193645477295
    4. 'idx' → logprob: -2.473193645477295
    5. 's' → logprob: -3.348193645477295
    6. 'sorted' → logprob: -3.348193645477295
    7. 'if' → logprob: -3.473193645477295
    8. 'pos' → logprob: -3.598193645477295
    9. 'arr' → logprob: -3.723193645477295
    10. '   ' → logprob: -3.723193645477295

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4747382402420044
    2. ' =' → logprob: -0.9747382402420044
    3. ',' → logprob: -7.349738121032715
    4. '   ' → logprob: -11.849738121032715
    5. ' ,' → logprob: -12.599738121032715
    6. ' ' → logprob: -12.724738121032715
    7. '    ' → logprob: -14.099738121032715
    8. '	' → logprob: -14.224738121032715
    9. '  ' → logprob: -14.724738121032715
    10. '.' → logprob: -14.974738121032715

Token 345: ' {' (ID: 354)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.2873500883579254
    2. '{' → logprob: -2.0373501777648926
    3. 'set' → logprob: -3.1623501777648926
    4. '[' → logprob: -3.5373501777648926
    5. '[P' → logprob: -4.162350177764893
    6. '[min' → logprob: -4.912350177764893
    7. 'sum' → logprob: -5.162350177764893
    8. 'list' → logprob: -5.412350177764893
    9. '[C' → logprob: -5.537350177764893
    10. '[list' → logprob: -5.787350177764893

Token 346: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.01238815113902092
    2. 'i' → logprob: -4.887388229370117
    3. 'p' → logprob: -5.887388229370117
    4. ' P' → logprob: -6.762388229370117
    5. 'x' → logprob: -8.262388229370117
    6. '*' → logprob: -8.512388229370117
    7. 'v' → logprob: -9.012388229370117
    8. '   ' → logprob: -9.887388229370117
    9. 'k' → logprob: -10.137388229370117
    10. ' ' → logprob: -10.262388229370117

Token 347: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005307526444084942
    2. '[x' → logprob: -7.87553071975708
    3. '[j' → logprob: -9.250531196594238
    4. '[p' → logprob: -11.250531196594238
    5. '[idx' → logprob: -11.375531196594238
    6. '[v' → logprob: -12.000531196594238
    7. 'i' → logprob: -12.250531196594238
    8. '[k' → logprob: -12.500531196594238
    9. '[' → logprob: -12.875531196594238
    10. '[item' → logprob: -12.875531196594238

Token 348: ']-' (ID: 27107)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5237359404563904
    2. 'for' → logprob: -0.8987359404563904
    3. ':' → logprob: -8.398736000061035
    4. ' ' → logprob: -8.523736000061035
    5. '   ' → logprob: -9.648736000061035
    6. '}' → logprob: -10.523736000061035
    7. ']' → logprob: -10.773736000061035
    8. '  ' → logprob: -11.023736000061035
    9. '	for' → logprob: -11.273736000061035
    10. '    ' → logprob: -11.273736000061035

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002305838977918029
    2. ' ' → logprob: -6.12730598449707
    3. 'min' → logprob: -9.37730598449707
    4. ' min' → logprob: -11.00230598449707
    5. 'i' → logprob: -11.62730598449707
    6. ' i' → logprob: -12.50230598449707
    7. '{' → logprob: -13.50230598449707
    8. '  ' → logprob: -14.00230598449707
    9. '   ' → logprob: -14.12730598449707
    10. '(min' → logprob: -14.62730598449707

Token 350: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3135846257209778
    2. 'for' → logprob: -1.313584566116333
    3. '	for' → logprob: -8.813584327697754
    4. ' ' → logprob: -9.313584327697754
    5. '   ' → logprob: -10.188584327697754
    6. ':' → logprob: -10.313584327697754
    7. '  ' → logprob: -12.688584327697754
    8. '    ' → logprob: -13.063584327697754
    9. '       ' → logprob: -13.188584327697754
    10. '           ' → logprob: -14.063584327697754

Token 351: ' i' (ID: 575)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.0024768433067947626
    2. ' gr' → logprob: -6.002476692199707
    3. '	gr' → logprob: -13.877476692199707
    4. '
' → logprob: -16.002477645874023
    5. '   ' → logprob: -16.752477645874023
    6. ' ' → logprob: -17.127477645874023
    7. ' ' → logprob: -17.377477645874023
    8. '(gr' → logprob: -17.877477645874023
    9. 'i' → logprob: -18.002477645874023
    10. '  ' → logprob: -19.127477645874023

Token 352: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4745669364929199
    2. 'in' → logprob: -0.9745669364929199
    3. 'gr' → logprob: -7.97456693649292
    4. 'i' → logprob: -9.599567413330078
    5. ' ' → logprob: -10.474567413330078
    6. ' i' → logprob: -10.849567413330078
    7. '
' → logprob: -11.224567413330078
    8. ' gr' → logprob: -11.849567413330078
    9. '   ' → logprob: -12.724567413330078
    10. '  ' → logprob: -13.599567413330078

Token 353: ' gr' (ID: 984)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.0001801801408873871
    2. ' gr' → logprob: -8.6251802444458
    3. '	gr' → logprob: -14.3751802444458
    4. '
' → logprob: -17.125179290771484
    5. '   ' → logprob: -17.375179290771484
    6. '(gr' → logprob: -19.125179290771484
    7. ' ' → logprob: -19.250179290771484
    8. 'Gr' → logprob: -20.125179290771484
    9. '  ' → logprob: -21.125179290771484
    10. 'list' → logprob: -21.500179290771484

Token 354: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.022317349910736084
    2. '   ' → logprob: -4.147317409515381
    3. ' }' → logprob: -5.397317409515381
    4. '}
' → logprob: -6.397317409515381
    5. ' }
' → logprob: -10.522316932678223
    6. ',' → logprob: -10.522316932678223
    7. '  ' → logprob: -12.522316932678223
    8. '}
' → logprob: -12.647316932678223
    9. ' ' → logprob: -12.772316932678223
    10. '}

' → logprob: -13.772316932678223

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036470092833042145
    2. 'have' → logprob: -4.16146993637085
    3. 'for' → logprob: -5.41146993637085
    4. 'result' → logprob: -5.66146993637085
    5. ' for' → logprob: -6.28646993637085
    6. 'count' → logprob: -6.41146993637085
    7. 'got' → logprob: -6.53646993637085
    8. 'current' → logprob: -6.53646993637085
    9. 'if' → logprob: -7.28646993637085
    10. 'found' → logprob: -7.41146993637085

Token 356: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.033116500824689865
    2. ' result' → logprob: -3.658116579055786
    3. 'if' → logprob: -5.908116340637207
    4. '   ' → logprob: -6.658116340637207
    5. 'for' → logprob: -7.033116340637207
    6. ' if' → logprob: -7.783116340637207
    7. 'res' → logprob: -8.408116340637207
    8. '
' → logprob: -8.533116340637207
    9. ' ' → logprob: -8.533116340637207
    10. 'common' → logprob: -8.908116340637207

Token 357: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10027157515287399
    2. '+=' → logprob: -2.350271463394165
    3. ' |=' → logprob: -10.475271224975586
    4. ' ' → logprob: -10.975271224975586
    5. ' =' → logprob: -12.350271224975586
    6. '+=(' → logprob: -12.850271224975586
    7. ' ' → logprob: -12.975271224975586
    8. '+' → logprob: -13.225271224975586
    9. '=' → logprob: -13.350271224975586
    10. ' +' → logprob: -13.475271224975586

Token 358: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.002361498074606061
    2. 'sum' → logprob: -6.127361297607422
    3. ' len' → logprob: -9.127361297607422
    4. 'min' → logprob: -10.252361297607422
    5. '1' → logprob: -10.502361297607422
    6. '(len' → logprob: -13.752361297607422
    7. ' sum' → logprob: -13.752361297607422
    8. '
' → logprob: -14.127361297607422
    9. ' ' → logprob: -14.127361297607422
    10. 'int' → logprob: -14.627361297607422

Token 359: '(set' (ID: 25904)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.6962478756904602
    2. '(gr' → logprob: -0.6962478756904602
    3. '(' → logprob: -5.8212480545043945
    4. '((' → logprob: -9.696248054504395
    5. '(set' → logprob: -10.196248054504395
    6. '(cl' → logprob: -12.071248054504395
    7. 'want' → logprob: -12.321248054504395
    8. '(g' → logprob: -12.821248054504395
    9. '([' → logprob: -12.946248054504395
    10. '(
' → logprob: -13.071248054504395

Token 360: '(gr' (ID: 64506)
  Prédit: '(gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gr' → logprob: -0.12047570198774338
    2. '(w' → logprob: -2.3704757690429688
    3. '.inter' → logprob: -3.9954757690429688
    4. '(inter' → logprob: -7.245475769042969
    5. '(' → logprob: -7.995475769042969
    6. '(range' → logprob: -8.745475769042969
    7. '(P' → logprob: -8.995475769042969
    8. '.gr' → logprob: -9.495475769042969
    9. '.w' → logprob: -10.245475769042969
    10. '(g' → logprob: -10.370475769042969

Token 361: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1115865558385849
    2. ' &' → logprob: -2.986586570739746
    3. '&' → logprob: -3.111586570739746
    4. ' )' → logprob: -4.861586570739746
    5. ')&' → logprob: -6.611586570739746
    6. '.inter' → logprob: -7.361586570739746
    7. ').' → logprob: -7.861586570739746
    8. '   ' → logprob: -8.861586570739746
    9. ')
' → logprob: -9.736586570739746
    10. ' ' → logprob: -9.861586570739746

Token 362: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.14435453712940216
    2. '&' → logprob: -2.0193545818328857
    3. '.inter' → logprob: -6.644354343414307
    4. ' ' → logprob: -8.769354820251465
    5. '&w' → logprob: -9.019354820251465
    6. '   ' → logprob: -10.519354820251465
    7. ' -' → logprob: -11.144354820251465
    8. ')' → logprob: -11.644354820251465
    9. ' &
' → logprob: -11.769354820251465
    10. '-' → logprob: -11.894354820251465

Token 363: ' want' (ID: 1682)
  Prédit: ' want'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.3869325518608093
    2. 'want' → logprob: -1.136932611465454
    3. '	want' → logprob: -10.386932373046875
    4. 'w' → logprob: -11.511932373046875
    5. ' ' → logprob: -12.011932373046875
    6. '   ' → logprob: -12.511932373046875
    7. 'wan' → logprob: -12.761932373046875
    8. ' ' → logprob: -13.386932373046875
    9. '
' → logprob: -13.761932373046875
    10. 'wish' → logprob: -14.011932373046875

Token 364: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.096126576769166e-05
    2. ')
' → logprob: -10.125041007995605
    3. ' )' → logprob: -14.375041007995605
    4. '))' → logprob: -16.75004005432129
    5. '   ' → logprob: -16.75004005432129
    6. ')

' → logprob: -16.87504005432129
    7. '}' → logprob: -17.50004005432129
    8. ')#' → logprob: -17.87504005432129
    9. ')}' → logprob: -18.25004005432129
    10. '())' → logprob: -18.25004005432129

Token 365: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6748826503753662
    2. '
' → logprob: -1.5498826503753662
    3. '<|end|>' → logprob: -1.6748826503753662
    4. ')' → logprob: -2.549882650375366
    5. '\n' → logprob: -5.049882888793945
    6. '#' → logprob: -5.674882888793945
    7. 'result' → logprob: -7.174882888793945
    8. ' print' → logprob: -8.049882888793945
    9. '#print' → logprob: -8.174882888793945
    10. '+' → logprob: -8.174882888793945

Token 366: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.014168561436235905
    2. '(' → logprob: -4.264168739318848
    3. 'result' → logprob: -12.389168739318848
    4. ' (' → logprob: -15.389168739318848
    5. '(results' → logprob: -15.389168739318848
    6. '(
' → logprob: -15.889168739318848
    7. '(f' → logprob: -16.13916778564453
    8. '('' → logprob: -16.51416778564453
    9. '(res' → logprob: -16.51416778564453
    10. '(re' → logprob: -16.76416778564453

Token 367: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011212585377506912
    2. ' )' → logprob: -9.125112533569336
    3. ')
' → logprob: -12.875112533569336
    4. '+' → logprob: -15.500112533569336
    5. '```' → logprob: -15.875112533569336
    6. '')' → logprob: -16.125112533569336
    7. '()' → logprob: -16.750112533569336
    8. '))' → logprob: -17.000112533569336
    9. ')#' → logprob: -17.125112533569336
    10. '}' → logprob: -17.125112533569336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 365
Tokens correctement prédits (1ère position, stricte): 139
Tokens correctement prédits (1ère position, avec adaptation): 146
Tokens correctement prédits (top 10): 281
Précision stricte (1ère position): 38.08%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 76.99%
================================================================================
