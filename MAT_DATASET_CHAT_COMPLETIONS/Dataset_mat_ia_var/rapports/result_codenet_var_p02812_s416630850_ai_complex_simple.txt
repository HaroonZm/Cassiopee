================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add
(lambda f: (f(input()), print(reduce(add, map(lambda x: x=="ABC", (input().strip()[i:i+3] for i in range(len(input().strip())-2))), 0))))(lambda x: None)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005409015342593193
    2. '(lambda' → logprob: -5.880409240722656
    3. ' (' → logprob: -6.755409240722656
    4. '.' → logprob: -7.880409240722656
    5. ',' → logprob: -8.505409240722656
    6. '\' → logprob: -8.880409240722656
    7. ' ' → logprob: -8.880409240722656
    8. ''' → logprob: -9.005409240722656
    9. '(space' → logprob: -9.505409240722656
    10. '```' → logprob: -9.630409240722656

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022899029776453972
    2. 'import' → logprob: -3.8978989124298096
    3. ' ' → logprob: -6.397899150848389
    4. '.' → logprob: -7.522899150848389
    5. ' .' → logprob: -9.14789867401123
    6. '.import' → logprob: -10.64789867401123
    7. '	import' → logprob: -11.77289867401123
    8. '<|end|>' → logprob: -13.02289867401123
    9. '_import' → logprob: -13.39789867401123
    10. ' ' → logprob: -13.52289867401123

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.30121177434921265
    2. ' import' → logprob: -1.8012118339538574
    3. ' mul' → logprob: -3.0512118339538574
    4. 'add' → logprob: -3.8012118339538574
    5. ' ' → logprob: -4.051211833953857
    6. 'import' → logprob: -5.426211833953857
    7. 'mul' → logprob: -6.301211833953857
    8. ' item' → logprob: -7.051211833953857
    9. ' icon' → logprob: -8.4262113571167
    10. '```' → logprob: -9.3012113571167

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271875485777855
    2. '(
' → logprob: -4.052718639373779
    3. ',' → logprob: -4.552718639373779
    4. '\n' → logprob: -4.677718639373779
    5. '\' → logprob: -4.802718639373779
    6. '#' → logprob: -6.677718639373779
    7. '`' → logprob: -6.802718639373779
    8. '
' → logprob: -7.677718639373779
    9. '()' → logprob: -7.802718639373779
    10. ' ' → logprob: -7.927718639373779

Token 10: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.133224219083786
    2. '(
' → logprob: -2.3832242488861084
    3. '\' → logprob: -4.508224010467529
    4. 'def' → logprob: -5.383224010467529
    5. '(

' → logprob: -5.383224010467529
    6. '\n' → logprob: -5.758224010467529
    7. 'a' → logprob: -6.633224010467529
    8. 'r' → logprob: -6.758224010467529
    9. ',' → logprob: -6.883224010467529
    10. 'result' → logprob: -7.258224010467529

Token 11: ' f' (ID: 285)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02387598343193531
    2. 'x' → logprob: -3.8988759517669678
    3. ' n' → logprob: -6.898876190185547
    4. ' a' → logprob: -7.148876190185547
    5. ' )' → logprob: -7.523876190185547
    6. 'a' → logprob: -8.398876190185547
    7. ' lst' → logprob: -8.648876190185547
    8. ' ' → logprob: -8.898876190185547
    9. ')' → logprob: -9.523876190185547
    10. ' numbers' → logprob: -9.648876190185547

Token 12: ':' (ID: 25)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6269277930259705
    2. ' f' → logprob: -2.1269278526306152
    3. ',' → logprob: -2.3769278526306152
    4. ':' → logprob: -2.5019278526306152
    5. '=lambda' → logprob: -3.2519278526306152
    6. ' ,' → logprob: -3.5019278526306152
    7. ' lambda' → logprob: -3.5019278526306152
    8. ' ' → logprob: -4.751927852630615
    9. '(lambda' → logprob: -4.751927852630615
    10. ' x' → logprob: -5.001927852630615

Token 13: ' (' (ID: 350)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.9520099759101868
    2. '(lambda' → logprob: -1.077009916305542
    3. 'lambda' → logprob: -2.077009916305542
    4. ' f' → logprob: -2.827009916305542
    5. ' (' → logprob: -3.077009916305542
    6. 'f' → logprob: -3.202009916305542
    7. '(f' → logprob: -6.577010154724121
    8. '(' → logprob: -7.952010154724121
    9. ')' → logprob: -9.327010154724121
    10. ' ' → logprob: -10.077010154724121

Token 14: 'f' (ID: 69)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.06044149398803711
    2. 'f' → logprob: -3.685441493988037
    3. '(lambda' → logprob: -4.185441493988037
    4. ' lambda' → logprob: -4.185441493988037
    5. 'x' → logprob: -6.435441493988037
    6. ' f' → logprob: -7.685441493988037
    7. '   ' → logprob: -8.185441970825195
    8. ' (' → logprob: -8.810441970825195
    9. '(f' → logprob: -8.935441970825195
    10. ' ' → logprob: -9.435441970825195

Token 15: '(input' (ID: 10054)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9576700925827026
    2. '(lambda' → logprob: -1.3326700925827026
    3. '(f' → logprob: -2.207670211791992
    4. ' f' → logprob: -2.707670211791992
    5. ' )' → logprob: -3.082670211791992
    6. ' lambda' → logprob: -3.207670211791992
    7. ')' → logprob: -3.582670211791992
    8. 'lambda' → logprob: -3.832670211791992
    9. '(' → logprob: -3.957670211791992
    10. '=lambda' → logprob: -5.082670211791992

Token 16: '()),' (ID: 24379)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.7015955448150635
    2. ')' → logprob: -0.9515955448150635
    3. '))' → logprob: -2.4515955448150635
    4. '())))' → logprob: -5.076595306396484
    5. ')(' → logprob: -5.201595306396484
    6. '))(' → logprob: -5.576595306396484
    7. '(' → logprob: -5.826595306396484
    8. '()))' → logprob: -5.826595306396484
    9. '())' → logprob: -5.951595306396484
    10. '('' → logprob: -6.451595306396484

Token 17: ' print' (ID: 2123)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.8764051198959351
    2. ' lambda' → logprob: -0.8764051198959351
    3. 'lambda' → logprob: -2.3764052391052246
    4. ')' → logprob: -3.3764052391052246
    5. 'f' → logprob: -4.001405239105225
    6. '(lambda' → logprob: -5.001405239105225
    7. ' reduce' → logprob: -5.751405239105225
    8. '))' → logprob: -5.751405239105225
    9. ' (' → logprob: -6.251405239105225
    10. 'reduce' → logprob: -6.626405239105225

Token 18: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6862820386886597
    2. '(f' → logprob: -0.8112820386886597
    3. '(add' → logprob: -3.561282157897949
    4. '(lambda' → logprob: -4.061282157897949
    5. '(re' → logprob: -5.436282157897949
    6. '((' → logprob: -6.811282157897949
    7. '('' → logprob: -7.436282157897949
    8. '(end' → logprob: -8.56128215789795
    9. '(eval' → logprob: -9.68628215789795
    10. '(print' → logprob: -9.81128215789795

Token 19: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -1.9981420336989686e-05
    2. 'd' → logprob: -11.000020027160645
    3. 'du' → logprob: -14.000020027160645
    4. 'duced' → logprob: -14.125020027160645
    5. '(' → logprob: -14.875020027160645
    6. 'move' → logprob: -15.250020027160645
    7. 'f' → logprob: -16.000019073486328
    8. 'verse' → logprob: -16.000019073486328
    9. 'duc' → logprob: -16.125019073486328
    10. 'solve' → logprob: -16.375019073486328

Token 20: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.046223558485507965
    2. '(' → logprob: -3.4212236404418945
    3. '(lambda' → logprob: -4.6712236404418945
    4. '<|end|>' → logprob: -6.9212236404418945
    5. ')' → logprob: -7.1712236404418945
    6. 'add' → logprob: -8.046223640441895
    7. ')add' → logprob: -8.046223640441895
    8. ' add' → logprob: -8.796223640441895
    9. '(operator' → logprob: -9.171223640441895
    10. '<|end|>' → logprob: -9.171223640441895

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12788011133670807
    2. ',f' → logprob: -3.002880096435547
    3. '(f' → logprob: -3.502880096435547
    4. '(' → logprob: -4.127880096435547
    5. ' ,' → logprob: -4.502880096435547
    6. '(lambda' → logprob: -4.877880096435547
    7. ' (' → logprob: -6.752880096435547
    8. 'f' → logprob: -7.377880096435547
    9. ',map' → logprob: -7.377880096435547
    10. ',[' → logprob: -8.252880096435547

Token 22: ' map' (ID: 4014)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.8099430203437805
    2. ' map' → logprob: -1.0599429607391357
    3. 'f' → logprob: -2.3099429607391357
    4. 'map' → logprob: -2.8099429607391357
    5. ' list' → logprob: -4.809943199157715
    6. '(f' → logprob: -4.934943199157715
    7. '(map' → logprob: -5.059943199157715
    8. ' [' → logprob: -5.309943199157715
    9. '[f' → logprob: -5.434943199157715
    10. '[' → logprob: -5.434943199157715

Token 23: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.248185932636261
    2. '(str' → logprob: -1.9981858730316162
    3. '(ord' → logprob: -3.373185873031616
    4. '(lambda' → logprob: -3.623185873031616
    5. '(' → logprob: -3.873185873031616
    6. '(len' → logprob: -6.998186111450195
    7. '(f' → logprob: -7.373186111450195
    8. '(chr' → logprob: -7.498186111450195
    9. '(input' → logprob: -9.123186111450195
    10. '(float' → logprob: -9.748186111450195

Token 24: ' x' (ID: 1215)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.48635929822921753
    2. 'int' → logprob: -1.2363593578338623
    3. ' str' → logprob: -3.6113593578338623
    4. ' ord' → logprob: -4.236359119415283
    5. 'str' → logprob: -4.361359119415283
    6. ' f' → logprob: -4.486359119415283
    7. ' lambda' → logprob: -5.236359119415283
    8. 'f' → logprob: -5.236359119415283
    9. 'lambda' → logprob: -5.236359119415283
    10. 'len' → logprob: -5.486359119415283

Token 25: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14377447962760925
    2. ' :' → logprob: -2.6437745094299316
    3. ',' → logprob: -3.3937745094299316
    4. ':int' → logprob: -3.6437745094299316
    5. ':x' → logprob: -6.893774509429932
    6. ':f' → logprob: -7.518774509429932
    7. ',int' → logprob: -7.893774509429932
    8. ' ,' → logprob: -8.018774032592773
    9. ',f' → logprob: -8.643774032592773
    10. ',x' → logprob: -8.893774032592773

Token 26: ' x' (ID: 1215)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.731302797794342
    2. 'int' → logprob: -1.1063027381896973
    3. ' f' → logprob: -3.1063027381896973
    4. ' x' → logprob: -3.6063027381896973
    5. ' lambda' → logprob: -3.8563027381896973
    6. 'f' → logprob: -3.9813027381896973
    7. 'len' → logprob: -4.231302738189697
    8. ' str' → logprob: -4.356302738189697
    9. 'lambda' → logprob: -4.356302738189697
    10. 'x' → logprob: -4.731302738189697

Token 27: '=="' (ID: 24027)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.20687322318553925
    2. '*' → logprob: -2.0818731784820557
    3. ' *' → logprob: -4.331873416900635
    4. '+' → logprob: -4.581873416900635
    5. '*x' → logprob: -4.581873416900635
    6. ' **' → logprob: -4.581873416900635
    7. '[' → logprob: -5.331873416900635
    8. ' +' → logprob: -5.456873416900635
    9. '*f' → logprob: -6.081873416900635
    10. ',' → logprob: -6.456873416900635

Token 28: 'ABC' (ID: 44197)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.349596381187439
    2. ''' → logprob: -1.724596381187439
    3. 'a' → logprob: -1.724596381187439
    4. '(' → logprob: -2.4745965003967285
    5. '[' → logprob: -3.5995965003967285
    6. '1' → logprob: -3.5995965003967285
    7. '4' → logprob: -3.8495965003967285
    8. '7' → logprob: -4.2245965003967285
    9. '0' → logprob: -4.5370965003967285
    10. '9' → logprob: -4.6620965003967285

Token 29: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.22193244099617004
    2. 'D' → logprob: -2.5969324111938477
    3. '\n' → logprob: -2.8469324111938477
    4. '"' → logprob: -3.2219324111938477
    5. ',' → logprob: -5.721932411193848
    6. 'DE' → logprob: -5.846932411193848
    7. 'ABC' → logprob: -6.221932411193848
    8. '",(' → logprob: -6.221932411193848
    9. 'def' → logprob: -6.471932411193848
    10. '"),' → logprob: -6.596932411193848

Token 30: ' (' (ID: 350)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.7462400197982788
    2. 'f' → logprob: -0.8712400197982788
    3. ' list' → logprob: -3.3712401390075684
    4. 'list' → logprob: -3.7462401390075684
    5. 'input' → logprob: -3.7462401390075684
    6. ' input' → logprob: -3.9962401390075684
    7. ' ' → logprob: -6.621240139007568
    8. ')' → logprob: -6.746240139007568
    9. '_' → logprob: -7.371240139007568
    10. '))' → logprob: -7.621240139007568

Token 31: 'input' (ID: 2586)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2974996268749237
    2. ' f' → logprob: -1.422499656677246
    3. 'input' → logprob: -5.422499656677246
    4. 'list' → logprob: -5.672499656677246
    5. ' list' → logprob: -5.797499656677246
    6. ' input' → logprob: -6.547499656677246
    7. ' ' → logprob: -7.422499656677246
    8. 'x' → logprob: -7.922499656677246
    9. ')' → logprob: -8.047499656677246
    10. '   ' → logprob: -8.422499656677246

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.933856189250946
    2. '())' → logprob: -1.8088562488555908
    3. '()' → logprob: -1.9338562488555908
    4. '()))' → logprob: -2.183856248855591
    5. '()).' → logprob: -2.558856248855591
    6. ')' → logprob: -3.058856248855591
    7. '()),' → logprob: -3.433856248855591
    8. '())))' → logprob: -4.308856010437012
    9. '(),' → logprob: -4.933856010437012
    10. '())).' → logprob: -6.058856010437012

Token 33: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6688674092292786
    2. '().' → logprob: -0.7938674092292786
    3. 'strip' → logprob: -3.668867349624634
    4. '()' → logprob: -5.668867588043213
    5. '.split' → logprob: -6.668867588043213
    6. ')))' → logprob: -6.793867588043213
    7. '())))' → logprob: -6.918867588043213
    8. 'rstrip' → logprob: -7.418867588043213
    9. ' split' → logprob: -7.668867588043213
    10. '()))' → logprob: -7.918867588043213

Token 34: '()[' (ID: 20778)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014279267750680447
    2. '()' → logprob: -4.639279365539551
    3. '()).' → logprob: -6.014279365539551
    4. '())' → logprob: -7.639279365539551
    5. '())).' → logprob: -8.26427936553955
    6. '(),' → logprob: -8.76427936553955
    7. ')' → logprob: -8.76427936553955
    8. '()))' → logprob: -8.76427936553955
    9. '())))' → logprob: -8.76427936553955
    10. ').' → logprob: -9.01427936553955

Token 35: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7335231304168701
    2. '::' → logprob: -1.6085231304168701
    3. ':' → logprob: -2.35852313041687
    4. ']))' → logprob: -2.98352313041687
    5. '0' → logprob: -3.85852313041687
    6. ' i' → logprob: -3.98352313041687
    7. ':i' → logprob: -4.233523368835449
    8. '::-' → logprob: -4.233523368835449
    9. '])' → logprob: -4.483523368835449
    10. ':]' → logprob: -4.483523368835449

Token 36: ':i' (ID: 34041)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6519603133201599
    2. ':]' → logprob: -1.4019603729248047
    3. '::' → logprob: -2.7769603729248047
    4. ']' → logprob: -2.9019603729248047
    5. ':-' → logprob: -3.6519603729248047
    6. '-' → logprob: -3.6519603729248047
    7. ']))' → logprob: -4.151960372924805
    8. '+' → logprob: -4.276960372924805
    9. ':],' → logprob: -5.276960372924805
    10. ':i' → logprob: -5.526960372924805

Token 37: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5795717239379883
    2. '3' → logprob: -0.8295717239379883
    3. '==' → logprob: -6.454571723937988
    4. '6' → logprob: -7.079571723937988
    5. '4' → logprob: -7.579571723937988
    6. ' +' → logprob: -8.954571723937988
    7. ' ' → logprob: -9.079571723937988
    8. '```' → logprob: -9.204571723937988
    9. '-' → logprob: -10.204571723937988
    10. '*' → logprob: -10.392071723937988

Token 38: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.001302618533372879
    2. ' ' → logprob: -6.751302719116211
    3. '4' → logprob: -10.251302719116211
    4. '```' → logprob: -10.376302719116211
    5. '   ' → logprob: -11.063802719116211
    6. 'len' → logprob: -11.813802719116211
    7. '  ' → logprob: -11.813802719116211
    8. '2' → logprob: -12.063802719116211
    9. '1' → logprob: -12.126302719116211
    10. '    ' → logprob: -13.251302719116211

Token 39: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00527727697044611
    2. ']))' → logprob: -6.130277156829834
    3. '])' → logprob: -6.255277156829834
    4. ')' → logprob: -7.630277156829834
    5. '],' → logprob: -8.755277633666992
    6. ')]' → logprob: -8.880277633666992
    7. '])))' → logprob: -9.005277633666992
    8. 'for' → logprob: -9.755277633666992
    9. ' ]' → logprob: -10.130277633666992
    10. ' for' → logprob: -10.255277633666992

Token 40: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47712692618370056
    2. 'for' → logprob: -0.977126955986023
    3. ')' → logprob: -5.9771270751953125
    4. ' ' → logprob: -9.102127075195312
    5. ']' → logprob: -9.477127075195312
    6. ' in' → logprob: -9.602127075195312
    7. '```' → logprob: -9.727127075195312
    8. ',' → logprob: -10.477127075195312
    9. '	for' → logprob: -10.602127075195312
    10. '   ' → logprob: -11.227127075195312

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013637182302772999
    2. 'i' → logprob: -4.388637065887451
    3. ' range' → logprob: -6.888637065887451
    4. ' ' → logprob: -9.63863754272461
    5. 'range' → logprob: -10.38863754272461
    6. '	i' → logprob: -12.51363754272461
    7. ')' → logprob: -13.26363754272461
    8. '<|end|>' → logprob: -13.63863754272461
    9. ' xrange' → logprob: -14.01363754272461
    10. '  ' → logprob: -14.26363754272461

Token 42: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0838361531496048
    2. ' in' → logprob: -2.583836078643799
    3. '<|end|>' → logprob: -6.083836078643799
    4. ' xrange' → logprob: -6.708836078643799
    5. 'range' → logprob: -6.833836078643799
    6. ' ' → logprob: -8.583836555480957
    7. '	range' → logprob: -9.458836555480957
    8. '<|end|>' → logprob: -9.708836555480957
    9. 'in' → logprob: -11.708836555480957
    10. ' i' → logprob: -11.833836555480957

Token 43: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14269210398197174
    2. 'range' → logprob: -2.0176920890808105
    3. ' xrange' → logprob: -11.767692565917969
    4. '	range' → logprob: -12.392692565917969
    5. ' ' → logprob: -12.767692565917969
    6. '(range' → logprob: -13.642692565917969
    7. ')' → logprob: -14.892692565917969
    8. '  ' → logprob: -15.517692565917969
    9. '[' → logprob: -16.01769256591797
    10. '.range' → logprob: -16.51769256591797

Token 44: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.03245246782898903
    2. '(' → logprob: -3.5324525833129883
    3. '(int' → logprob: -6.532452583312988
    4. '(-' → logprob: -7.282452583312988
    5. ' len' → logprob: -8.782452583312988
    6. ')' → logprob: -9.282452583312988
    7. '(n' → logprob: -9.657452583312988
    8. 'len' → logprob: -9.782452583312988
    9. ' ' → logprob: -10.907452583312988
    10. '(input' → logprob: -10.907452583312988

Token 45: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07330799102783203
    2. '(' → logprob: -2.823307991027832
    3. '(s' → logprob: -5.198307991027832
    4. 's' → logprob: -6.948307991027832
    5. '_' → logprob: -7.073307991027832
    6. '(f' → logprob: -7.573307991027832
    7. 'input' → logprob: -7.823307991027832
    8. '-' → logprob: -7.823307991027832
    9. '(
' → logprob: -8.198307991027832
    10. '(lambda' → logprob: -8.198307991027832

Token 46: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9839640855789185
    2. '())' → logprob: -1.1089640855789185
    3. '()))' → logprob: -1.8589640855789185
    4. '())))' → logprob: -2.358963966369629
    5. '()-' → logprob: -3.858963966369629
    6. '().' → logprob: -4.983963966369629
    7. ')))' → logprob: -5.233963966369629
    8. ')' → logprob: -5.358963966369629
    9. '()[' → logprob: -6.108963966369629
    10. '))))' → logprob: -6.608963966369629

Token 47: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.015093677677214146
    2. 's' → logprob: -5.515093803405762
    3. ')' → logprob: -5.640093803405762
    4. ')))' → logprob: -6.515093803405762
    5. '))' → logprob: -6.640093803405762
    6. 'rstrip' → logprob: -6.765093803405762
    7. ' strip' → logprob: -7.390093803405762
    8. '.strip' → logprob: -7.765093803405762
    9. '3' → logprob: -7.890093803405762
    10. '0' → logprob: -8.015093803405762

Token 48: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6560468077659607
    2. '()-' → logprob: -0.9060468077659607
    3. ')' → logprob: -3.6560468673706055
    4. '-' → logprob: -4.1560468673706055
    5. ')-' → logprob: -4.1560468673706055
    6. '()))' → logprob: -5.0310468673706055
    7. ')))' → logprob: -5.9060468673706055
    8. '))))' → logprob: -6.0310468673706055
    9. '())' → logprob: -6.1560468673706055
    10. '))' → logprob: -6.7810468673706055

Token 49: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006542474031448364
    2. ' -' → logprob: -5.131542682647705
    3. ')' → logprob: -9.131542205810547
    4. '),' → logprob: -9.506542205810547
    5. ')-' → logprob: -9.756542205810547
    6. ' ' → logprob: -9.881542205810547
    7. ')))' → logprob: -9.881542205810547
    8. '))' → logprob: -10.006542205810547
    9. '()-' → logprob: -10.006542205810547
    10. ')),' → logprob: -10.506542205810547

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007806538138538599
    2. ' ' → logprob: -4.882806301116943
    3. '3' → logprob: -9.132806777954102
    4. '1' → logprob: -10.445306777954102
    5. '4' → logprob: -11.195306777954102
    6. '```' → logprob: -11.507806777954102
    7. '-' → logprob: -12.132806777954102
    8. '+' → logprob: -12.757806777954102
    9. 'len' → logprob: -13.070306777954102
    10. '0' → logprob: -13.132806777954102

Token 51: '))),' (ID: 85891)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.402488648891449
    2. '))' → logprob: -1.1524887084960938
    3. ' ))' → logprob: -5.277488708496094
    4. ')))' → logprob: -6.027488708496094
    5. ')))),' → logprob: -6.277488708496094
    6. '),' → logprob: -6.527488708496094
    7. ')' → logprob: -6.777488708496094
    8. ')))))
' → logprob: -6.777488708496094
    9. ')),' → logprob: -7.027488708496094
    10. ' ' → logprob: -7.652488708496094

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9796286821365356
    2. '1' → logprob: -1.7296286821365356
    3. 'f' → logprob: -1.9796286821365356
    4. ')))' → logprob: -2.104628562927246
    5. ' ' → logprob: -3.479628562927246
    6. 'lambda' → logprob: -3.604628562927246
    7. '2' → logprob: -3.729628562927246
    8. '))' → logprob: -3.729628562927246
    9. ')' → logprob: -3.979628562927246
    10. ' f' → logprob: -4.229628562927246

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09572655707597733
    2. ' ' → logprob: -2.720726490020752
    3. '1' → logprob: -4.095726490020752
    4. 'f' → logprob: -5.220726490020752
    5. ' f' → logprob: -6.345726490020752
    6. ')' → logprob: -7.345726490020752
    7. ')))' → logprob: -7.970726490020752
    8. '))' → logprob: -8.59572696685791
    9. ' )' → logprob: -9.34572696685791
    10. ' -' → logprob: -9.78322696685791

Token 54: '))))' (ID: 57459)
  Prédit: '))))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.26138412952423096
    2. ')))' → logprob: -1.761384129524231
    3. '))' → logprob: -3.0113840103149414
    4. ')' → logprob: -4.761384010314941
    5. '),' → logprob: -8.636384010314941
    6. ')))),' → logprob: -9.011384010314941
    7. ')));' → logprob: -10.886384010314941
    8. ')))))
' → logprob: -10.886384010314941
    9. '))))

' → logprob: -11.011384010314941
    10. ')),' → logprob: -11.136384010314941

Token 55: '(' (ID: 7)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.579167366027832
    2. ')(' → logprob: -1.204167366027832
    3. '(' → logprob: -2.204167366027832
    4. '))' → logprob: -4.079167366027832
    5. ' )' → logprob: -5.579167366027832
    6. ')(
' → logprob: -6.204167366027832
    7. '))(' → logprob: -6.329167366027832
    8. ',' → logprob: -6.954167366027832
    9. ')))' → logprob: -7.204167366027832
    10. ' ' → logprob: -7.329167366027832

Token 56: 'lambda' (ID: 35280)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.664097011089325
    2. 'lambda' → logprob: -1.2890970706939697
    3. 'str' → logprob: -2.0390970706939697
    4. 'input' → logprob: -2.6640970706939697
    5. ' lambda' → logprob: -5.664096832275391
    6. 'len' → logprob: -5.664096832275391
    7. ' int' → logprob: -7.414096832275391
    8. ' str' → logprob: -7.539096832275391
    9. ')' → logprob: -7.914096832275391
    10. '(lambda' → logprob: -7.914096832275391

Token 57: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15629960596561432
    2. ' x' → logprob: -2.656299591064453
    3. 's' → logprob: -3.531299591064453
    4. 'n' → logprob: -4.656299591064453
    5. 'lambda' → logprob: -4.656299591064453
    6. ' s' → logprob: -5.281299591064453
    7. 'a' → logprob: -5.281299591064453
    8. ' n' → logprob: -5.781299591064453
    9. '_' → logprob: -5.906299591064453
    10. ' lambda' → logprob: -6.156299591064453

Token 58: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004380636382848024
    2. ':x' → logprob: -6.129380702972412
    3. ' :' → logprob: -6.254380702972412
    4. 'x' → logprob: -9.629380226135254
    5. ',' → logprob: -9.879380226135254
    6. ':int' → logprob: -10.004380226135254
    7. ',x' → logprob: -10.504380226135254
    8. ')' → logprob: -11.129380226135254
    9. '.' → logprob: -11.754380226135254
    10. ':
' → logprob: -11.879380226135254

Token 59: ' None' (ID: 4662)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25124576687812805
    2. ' x' → logprob: -2.0012457370758057
    3. 'int' → logprob: -3.0012457370758057
    4. 'input' → logprob: -4.251245975494385
    5. ' int' → logprob: -5.126245975494385
    6. ' input' → logprob: -5.376245975494385
    7. 'str' → logprob: -5.751245975494385
    8. 'len' → logprob: -6.376245975494385
    9. '[int' → logprob: -6.501245975494385
    10. 'print' → logprob: -6.876245975494385

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17187140882015228
    2. '))' → logprob: -1.9218714237213135
    3. '):' → logprob: -4.671871185302734
    4. ' )' → logprob: -6.671871185302734
    5. ')))' → logprob: -7.796871185302734
    6. ' ))' → logprob: -8.796871185302734
    7. ')):' → logprob: -8.796871185302734
    8. '),' → logprob: -10.296871185302734
    9. ',' → logprob: -10.546871185302734
    10. ' ' → logprob: -10.546871185302734


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 58
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 43.10%
Précision adaptée (1ère position): 43.10%
Précision (top 10): 74.14%
================================================================================
