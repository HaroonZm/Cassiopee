================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math  # Importation du module 'math' qui fournit des fonctions mathématiques, ici on l’utilisera pour le calcul du PGCD

# Lecture de deux entiers depuis l'entrée standard (c’est-à-dire depuis le clavier)
# La fonction input() lit une ligne de texte au format chaîne de caractères (string)
# Ensuite, split() sépare cette chaîne selon les espaces et renvoie une liste de chaînes
# map(int, ...) transforme chaque chaîne de cette liste en nombre entier (int)
# Enfin, on attribue les deux entiers obtenus aux variables A et B
A, B = map(int, input().split())

# Calcul du résultat selon la formule du PPCM (plus petit commun multiple)
# On multiplie d'abord A et B ensemble. L'opérateur * effectue la multiplication arithmétique
# On utilise 'math.gcd(A, B)' pour calculer le plus grand commun diviseur (PGCD) des deux nombres A et B
# La fonction math.gcd retourne un entier correspondant au PGCD
# On divise ensuite le produit (A * B) par le PGCD obtenu pour déterminer le PPCM
# L'opérateur // est la division entière, c’est-à-dire qu’on ne garde que la partie entière du résultat sans les décimales
result = (A * B) // math.gcd(A, B)

# Affichage du résultat final à l'utilisateur
# La fonction print() affiche la valeur fournie entre parenthèses sur une nouvelle ligne de la sortie standard (généralement l'écran)
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002737330214586109
    2. '\' → logprob: -9.125273704528809
    3. '\n' → logprob: -9.875273704528809
    4. 'import' → logprob: -10.625273704528809
    5. '```' → logprob: -10.875273704528809
    6. '.e' → logprob: -11.250273704528809
    7. '.pi' → logprob: -11.375273704528809
    8. '<|end|>' → logprob: -12.125273704528809
    9. '.\' → logprob: -12.250273704528809
    10. '.

' → logprob: -12.875273704528809

Token 4: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5940733551979065
    2. '.' → logprob: -0.9690733551979065
    3. '.sqrt' → logprob: -3.8440732955932617
    4. ' .' → logprob: -4.094073295593262
    5. ' import' → logprob: -5.094073295593262
    6. ' math' → logprob: -5.594073295593262
    7. ' sqrt' → logprob: -5.969073295593262
    8. '<|end|>' → logprob: -6.219073295593262
    9. 'cmath' → logprob: -6.219073295593262
    10. ' is' → logprob: -6.594073295593262

Token 5: 'ation' (ID: 387)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02456866204738617
    2. '<|end|>' → logprob: -4.774568557739258
    3. ' .' → logprob: -5.024568557739258
    4. ' ' → logprob: -5.274568557739258
    5. '_' → logprob: -7.024568557739258
    6. '.math' → logprob: -7.774568557739258
    7. '<|end|>' → logprob: -7.774568557739258
    8. '.pyplot' → logprob: -8.024568557739258
    9. '```' → logprob: -8.274568557739258
    10. 's' → logprob: -8.274568557739258

Token 6: ' du' (ID: 1462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003389568068087101
    2. 'import' → logprob: -6.503389358520508
    3. '\' → logprob: -7.878389358520508
    4. '<|end|>' → logprob: -7.878389358520508
    5. '```' → logprob: -8.503389358520508
    6. '\n' → logprob: -9.253389358520508
    7. '<|end|>' → logprob: -9.503389358520508
    8. ' .' → logprob: -9.503389358520508
    9. '.e' → logprob: -9.628389358520508
    10. '.import' → logprob: -9.753389358520508

Token 7: ' module' (ID: 8827)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5252907276153564
    2. ' ' → logprob: -1.4002907276153564
    3. ' module' → logprob: -1.9002907276153564
    4. 'math' → logprob: -5.150290489196777
    5. 'module' → logprob: -6.275290489196777
    6. ' ' → logprob: -6.900290489196777
    7. '_' → logprob: -7.025290489196777
    8. ' système' → logprob: -7.900290489196777
    9. 's' → logprob: -8.150290489196777
    10. ' os' → logprob: -8.400290489196777

Token 8: ' '' (ID: 461)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6284946799278259
    2. 'import' → logprob: -1.8784947395324707
    3. '<|end|>' → logprob: -2.5034947395324707
    4. '\' → logprob: -2.7534947395324707
    5. '\n' → logprob: -2.7534947395324707
    6. '```' → logprob: -3.5034947395324707
    7. '
' → logprob: -3.8784947395324707
    8. ',' → logprob: -4.628494739532471
    9. '<|end|>' → logprob: -4.628494739532471
    10. '

' → logprob: -4.753494739532471

Token 9: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.054978884756565094
    2. ' math' → logprob: -2.929978847503662
    3. 'cmath' → logprob: -9.80497932434082
    4. '_math' → logprob: -10.92997932434082
    5. 'Math' → logprob: -11.80497932434082
    6. 'mat' → logprob: -12.05497932434082
    7. 'os' → logprob: -12.92997932434082
    8. ''' → logprob: -13.42997932434082
    9. 'm' → logprob: -13.80497932434082
    10. '.math' → logprob: -14.05497932434082

Token 10: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23612800240516663
    2. '.' → logprob: -1.6111279726028442
    3. '```' → logprob: -5.486127853393555
    4. 'import' → logprob: -6.361127853393555
    5. '')' → logprob: -7.486127853393555
    6. ''' → logprob: -7.611127853393555
    7. ' )' → logprob: -7.611127853393555
    8. ' .' → logprob: -7.736127853393555
    9. '>' → logprob: -7.986127853393555
    10. ''s' → logprob: -8.111127853393555

Token 11: ' qui' (ID: 2780)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.41001492738723755
    2. '\n' → logprob: -1.9100148677825928
    3. '\' → logprob: -2.2850148677825928
    4. 'import' → logprob: -3.4100148677825928
    5. '
' → logprob: -3.6600148677825928
    6. '' → logprob: -4.785015106201172
    7. '```' → logprob: -5.535015106201172
    8. '<|end|>' → logprob: -5.535015106201172
    9. '
' → logprob: -5.660015106201172
    10. '

' → logprob: -6.160015106201172

Token 12: ' fournit' (ID: 123615)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19897176325321198
    2. ' fournit' → logprob: -2.073971748352051
    3. ' contient' → logprob: -3.823971748352051
    4. ' permet' → logprob: -3.948971748352051
    5. ' provides' → logprob: -5.323971748352051
    6. ' est' → logprob: -6.073971748352051
    7. ' provide' → logprob: -6.198971748352051
    8. ' offre' → logprob: -7.698971748352051
    9. ' facilite' → logprob: -7.698971748352051
    10. ' contains' → logprob: -7.823971748352051

Token 13: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.008376275189220905
    2. 's' → logprob: -5.758376121520996
    3. 'des' → logprob: -6.133376121520996
    4. ' ' → logprob: -6.758376121520996
    5. ' les' → logprob: -7.008376121520996
    6. ' diverses' → logprob: -7.758376121520996
    7. ' math' → logprob: -9.133376121520996
    8. ' l' → logprob: -9.758376121520996
    9. ' une' → logprob: -9.883376121520996
    10. 'es' → logprob: -10.383376121520996

Token 14: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.10977411270141602
    2. ' ' → logprob: -2.734774112701416
    3. ' fonctionnalités' → logprob: -3.484774112701416
    4. 'fonction' → logprob: -6.234774112701416
    5. 'fon' → logprob: -6.609774112701416
    6. ' espaces' → logprob: -7.234774112701416
    7. ' outils' → logprob: -7.484774112701416
    8. ' fonction' → logprob: -7.484774112701416
    9. 'f' → logprob: -7.609774112701416
    10. ' ' → logprob: -7.734774112701416

Token 15: ' math' (ID: 13324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0104855140671134
    2. 'import' → logprob: -5.510485649108887
    3. ',' → logprob: -6.385485649108887
    4. '<|end|>' → logprob: -6.510485649108887
    5. '```' → logprob: -7.135485649108887
    6. ' .' → logprob: -7.260485649108887
    7. '.pyplot' → logprob: -8.510485649108887
    8. ' ' → logprob: -8.510485649108887
    9. 'es' → logprob: -9.135485649108887
    10. '\' → logprob: -9.385485649108887

Token 16: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.0029780601616948843
    2. 'ématique' → logprob: -6.1279778480529785
    3. '.' → logprob: -7.6279778480529785
    4. 'ém' → logprob: -8.377978324890137
    5. 'é' → logprob: -10.377978324890137
    6. '```' → logprob: -11.002978324890137
    7. 'étiques' → logprob: -12.002978324890137
    8. 's' → logprob: -12.377978324890137
    9. 'éma' → logprob: -12.752978324890137
    10. ' é' → logprob: -13.377978324890137

Token 17: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2007628679275513
    2. '\n' → logprob: -1.2007628679275513
    3. '\' → logprob: -2.2007627487182617
    4. '.' → logprob: -2.3257627487182617
    5. 'import' → logprob: -2.4507627487182617
    6. '

' → logprob: -2.9507627487182617
    7. '```' → logprob: -4.200762748718262
    8. '
' → logprob: -4.325762748718262
    9. '<|end|>' → logprob: -5.200762748718262
    10. ',' → logprob: -5.825762748718262

Token 18: ' ici' (ID: 27994)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2009623050689697
    2. 'import' → logprob: -1.3259623050689697
    3. ' telles' → logprob: -2.2009623050689697
    4. ' ' → logprob: -2.4509623050689697
    5. '.' → logprob: -2.5759623050689697
    6. ' notamment' → logprob: -2.8259623050689697
    7. '```' → logprob: -4.200962066650391
    8. ' ,' → logprob: -4.200962066650391
    9. '<|end|>' → logprob: -4.575962066650391
    10. '  ' → logprob: -5.450962066650391

Token 19: ' on' (ID: 402)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04386597126722336
    2. ',' → logprob: -3.793865919113159
    3. 'import' → logprob: -4.793866157531738
    4. ' ' → logprob: -5.043866157531738
    5. ' .' → logprob: -6.293866157531738
    6. ' pour' → logprob: -7.668866157531738
    7. '\' → logprob: -7.793866157531738
    8. ' ,' → logprob: -7.918866157531738
    9. ' for' → logprob: -8.043866157531738
    10. ' 

' → logprob: -9.043866157531738

Token 20: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06920353323221207
    2. ' utilise' → logprob: -3.4442036151885986
    3. ' calc' → logprob: -4.8192033767700195
    4. ' ' → logprob: -5.0692033767700195
    5. ' va' → logprob: -5.6942033767700195
    6. 'util' → logprob: -5.8192033767700195
    7. ' utilis' → logprob: -6.0692033767700195
    8. 's' → logprob: -6.4442033767700195
    9. '  ' → logprob: -6.6942033767700195
    10. 'space' → logprob: -6.8192033767700195

Token 21: '’util' (ID: 39053)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -1.3909904956817627
    2. ''util' → logprob: -1.8909904956817627
    3. ' utilise' → logprob: -2.1409904956817627
    4. 'util' → logprob: -2.3909904956817627
    5. ' ' → logprob: -2.5159904956817627
    6. 'e' → logprob: -2.8909904956817627
    7. ' '' → logprob: -2.8909904956817627
    8. ''' → logprob: -3.1409904956817627
    9. 'a' → logprob: -3.3909904956817627
    10. ' utilis' → logprob: -4.140990257263184

Token 22: 'is' (ID: 276)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002881903201341629
    2. 'se' → logprob: -6.50288200378418
    3. 'sé' → logprob: -7.37788200378418
    4. 'ser' → logprob: -7.87788200378418
    5. 't' → logprob: -8.62788200378418
    6. '#' → logprob: -10.00288200378418
    7. '```' → logprob: -11.25288200378418
    8. '.' → logprob: -11.75288200378418
    9. 'd' → logprob: -11.75288200378418
    10. 'sat' → logprob: -12.12788200378418

Token 23: 'era' (ID: 2060)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3552856743335724
    2. 's' → logprob: -1.23028564453125
    3. 'ser' → logprob: -6.60528564453125
    4. '.' → logprob: -6.98028564453125
    5. 'se' → logprob: -6.98028564453125
    6. 'z' → logprob: -6.98028564453125
    7. 'é' → logprob: -7.35528564453125
    8. 'e' → logprob: -7.73028564453125
    9. '#' → logprob: -8.60528564453125
    10. 'm' → logprob: -8.85528564453125

Token 24: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018918879330158234
    2. 'import' → logprob: -4.393918991088867
    3. ',' → logprob: -6.518918991088867
    4. '\' → logprob: -6.518918991088867
    5. ' .' → logprob: -7.018918991088867
    6. '<|end|>' → logprob: -7.518918991088867
    7. '\n' → logprob: -8.018918991088867
    8. '```' → logprob: -8.018918991088867
    9. 'e' → logprob: -8.518918991088867
    10. '.import' → logprob: -8.518918991088867

Token 25: ' le' (ID: 505)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.8770795464515686
    2. ' calcul' → logprob: -1.2520794868469238
    3. 'sqrt' → logprob: -2.377079486846924
    4. ' la' → logprob: -3.627079486846924
    5. 'calcul' → logprob: -3.627079486846924
    6. 'pow' → logprob: -3.877079486846924
    7. ' log' → logprob: -4.127079486846924
    8. ' ' → logprob: -4.377079486846924
    9. 'log' → logprob: -4.502079486846924
    10. ' ' → logprob: -4.502079486846924

Token 26: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.5766886472702026
    2. 'log' → logprob: -1.2016886472702026
    3. ' calcul' → logprob: -2.576688766479492
    4. 'cal' → logprob: -4.576688766479492
    5. ' logarith' → logprob: -4.701688766479492
    6. 'import' → logprob: -4.701688766479492
    7. 'c' → logprob: -4.826688766479492
    8. 'sqrt' → logprob: -5.201688766479492
    9. 'cos' → logprob: -5.451688766479492
    10. ' log' → logprob: -5.701688766479492

Token 27: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6438563466072083
    2. '.' → logprob: -1.5188562870025635
    3. '_' → logprob: -2.5188562870025635
    4. 's' → logprob: -2.7688562870025635
    5. 'import' → logprob: -3.2688562870025635
    6. ',' → logprob: -3.8938562870025635
    7. '\' → logprob: -4.268856525421143
    8. '<|end|>' → logprob: -4.893856525421143
    9. ')' → logprob: -5.393856525421143
    10. '(' → logprob: -5.518856525421143

Token 28: ' PG' (ID: 44249)
  Prédit: ' logarith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' logarith' → logprob: -0.7640541791915894
    2. ' ' → logprob: -1.3890541791915894
    3. ' log' → logprob: -1.7640541791915894
    4. 'log' → logprob: -3.389054298400879
    5. ' rayon' → logprob: -4.764054298400879
    6. ' π' → logprob: -4.889054298400879
    7. ' carré' → logprob: -5.139054298400879
    8. ' facteur' → logprob: -5.264054298400879
    9. 's' → logprob: -5.639054298400879
    10. 'é' → logprob: -5.639054298400879

Token 29: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.5245140790939331
    2. 'cd' → logprob: -0.8995140790939331
    3. 'C' → logprob: -7.149514198303223
    4. 'c' → logprob: -8.149514198303223
    5. 'CF' → logprob: -8.899514198303223
    6. 'cf' → logprob: -10.524514198303223
    7. '_cd' → logprob: -10.774514198303223
    8. ' cd' → logprob: -10.899514198303223
    9. 'G' → logprob: -11.149514198303223
    10. 'Cd' → logprob: -11.774514198303223

Token 30: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8898253440856934
    2. '
' → logprob: -1.2648253440856934
    3. '\' → logprob: -1.6398253440856934
    4. '

' → logprob: -3.8898253440856934
    5. '.' → logprob: -3.8898253440856934
    6. '' → logprob: -4.014825344085693
    7. '#' → logprob: -4.514825344085693
    8. ',' → logprob: -4.514825344085693
    9. 'def' → logprob: -4.639825344085693
    10. '  
' → logprob: -5.764825344085693

Token 31: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9537143111228943
    2. '
' → logprob: -1.203714370727539
    3. '\' → logprob: -1.953714370727539
    4. '

' → logprob: -2.703714370727539
    5. '' → logprob: -3.828714370727539
    6. ',' → logprob: -3.953714370727539
    7. '#' → logprob: -4.078714370727539
    8. 'def' → logprob: -4.078714370727539
    9. '.' → logprob: -4.828714370727539
    10. 'import' → logprob: -5.078714370727539

Token 32: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017301812767982483
    2. ' def' → logprob: -4.3923020362854
    3. '#' → logprob: -5.3923020362854
    4. ' #' → logprob: -9.517301559448242
    5. 'a' → logprob: -9.892301559448242
    6. 'import' → logprob: -10.392301559448242
    7. 'd' → logprob: -10.892301559448242
    8. 'from' → logprob: -11.017301559448242
    9. ' a' → logprob: -11.642301559448242
    10. 'g' → logprob: -12.017301559448242

Token 33: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2712239623069763
    2. 'des' → logprob: -2.771224021911621
    3. ' des' → logprob: -3.146224021911621
    4. '_' → logprob: -3.146224021911621
    5. 's' → logprob: -4.146224021911621
    6. '()' → logprob: -4.271224021911621
    7. 'de' → logprob: -4.521224021911621
    8. ' (' → logprob: -4.521224021911621
    9. ' de' → logprob: -4.521224021911621
    10. ' ' → logprob: -5.271224021911621

Token 34: ' deux' (ID: 10301)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2845562994480133
    2. ' deux' → logprob: -2.2845563888549805
    3. 'a' → logprob: -2.6595563888549805
    4. ' a' → logprob: -4.0345563888549805
    5. 'la' → logprob: -4.4095563888549805
    6. ' ' → logprob: -4.4095563888549805
    7. ' l' → logprob: -4.6595563888549805
    8. ' two' → logprob: -4.6595563888549805
    9. 'de' → logprob: -5.4095563888549805
    10. 'l' → logprob: -5.6595563888549805

Token 35: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.039331939071416855
    2. ' ent' → logprob: -3.5393319129943848
    3. ' ' → logprob: -5.289331912994385
    4. 'ent' → logprob: -6.539331912994385
    5. ' nombre' → logprob: -6.664331912994385
    6. ' entier' → logprob: -7.539331912994385
    7. ' integers' → logprob: -7.914331912994385
    8. 'n' → logprob: -7.914331912994385
    9. 'nombre' → logprob: -7.914331912994385
    10. ' numbers' → logprob: -10.289332389831543

Token 36: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -5.514650183613412e-05
    2. 'ières' → logprob: -10.125055313110352
    3. 'ier' → logprob: -11.875055313110352
    4. 'i' → logprob: -12.125055313110352
    5. 'ers' → logprob: -13.875055313110352
    6. 'r' → logprob: -14.250055313110352
    7. 'riers' → logprob: -15.125055313110352
    8. '```' → logprob: -15.875055313110352
    9. 'ires' → logprob: -16.25005531311035
    10. '#' → logprob: -16.37505531311035

Token 37: ' depuis' (ID: 16277)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015147916972637177
    2. 'n' → logprob: -4.265147686004639
    3. 'x' → logprob: -7.890147686004639
    4. 's' → logprob: -7.890147686004639
    5. ' a' → logprob: -9.140148162841797
    6. '\n' → logprob: -10.265148162841797
    7. '```' → logprob: -11.015148162841797
    8. '\' → logprob: -11.265148162841797
    9. 'num' → logprob: -11.515148162841797
    10. 'nombre' → logprob: -11.765148162841797

Token 38: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9023994207382202
    2. ' input' → logprob: -1.0273994207382202
    3. ' l' → logprob: -1.7773994207382202
    4. ' la' → logprob: -3.6523995399475098
    5. 'input' → logprob: -4.02739953994751
    6. 'la' → logprob: -4.52739953994751
    7. ' ' → logprob: -4.77739953994751
    8. 'le' → logprob: -6.15239953994751
    9. ' ' → logprob: -7.15239953994751
    10. '_' → logprob: -7.90239953994751

Token 39: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06577995419502258
    2. ''' → logprob: -3.3157799243927
    3. ''entrée' → logprob: -4.565780162811279
    4. ''utilisateur' → logprob: -4.815780162811279
    5. 'e' → logprob: -5.065780162811279
    6. 'input' → logprob: -6.690780162811279
    7. 'es' → logprob: -7.940780162811279
    8. ''a' → logprob: -8.065779685974121
    9. 'u' → logprob: -8.315779685974121
    10. ' input' → logprob: -9.565779685974121

Token 40: ' standard' (ID: 7024)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16406354308128357
    2. 'n' → logprob: -2.0390634536743164
    3. 'x' → logprob: -4.539063453674316
    4. 's' → logprob: -5.164063453674316
    5. '```' → logprob: -6.664063453674316
    6. ' a' → logprob: -7.039063453674316
    7. 'num' → logprob: -7.039063453674316
    8. 'nombre' → logprob: -8.039063453674316
    9. 'numbers' → logprob: -8.539063453674316
    10. 'number' → logprob: -8.789063453674316

Token 41: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04590435326099396
    2. 'x' → logprob: -3.5459043979644775
    3. 'n' → logprob: -4.420904159545898
    4. ' a' → logprob: -6.920904159545898
    5. '\n' → logprob: -6.920904159545898
    6. '```' → logprob: -7.170904159545898
    7. '\' → logprob: -7.670904159545898
    8. 'num' → logprob: -7.795904159545898
    9. 'number' → logprob: -8.920904159545898
    10. '``' → logprob: -9.670904159545898

Token 42: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3503883183002472
    2. ' )' → logprob: -1.6003882884979248
    3. 'a' → logprob: -2.600388288497925
    4. 'n' → logprob: -5.225388526916504
    5. 'input' → logprob: -5.600388526916504
    6. ' ' → logprob: -5.600388526916504
    7. '`)' → logprob: -5.850388526916504
    8. ' input' → logprob: -7.350388526916504
    9. 'x' → logprob: -7.725388526916504
    10. 'ent' → logprob: -7.975388526916504

Token 43: '’est' (ID: 6838)
  Prédit: 'omme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omme' → logprob: -1.4607596397399902
    2. 'ode' → logprob: -1.7107596397399902
    3. 'e' → logprob: -1.9607596397399902
    4. ')' → logprob: -2.0857596397399902
    5. 'omm' → logprob: -2.7107596397399902
    6. 'om' → logprob: -2.8357596397399902
    7. 'on' → logprob: -3.2107596397399902
    8. '`)' → logprob: -3.5857596397399902
    9. ''' → logprob: -3.9607596397399902
    10. 'ont' → logprob: -4.08575963973999

Token 44: '-à' (ID: 56297)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5422183871269226
    2. ' ' → logprob: -2.6672184467315674
    3. 'la' → logprob: -2.9172184467315674
    4. 'l' → logprob: -3.1672184467315674
    5. 'de' → logprob: -3.4172184467315674
    6. ' les' → logprob: -3.5422184467315674
    7. ' ' → logprob: -3.6672184467315674
    8. 'le' → logprob: -3.7922184467315674
    9. 'des' → logprob: -4.167218208312988
    10. 's' → logprob: -4.167218208312988

Token 45: '-dire' (ID: 76064)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.079681634902954
    2. 'à' → logprob: -1.704681634902954
    3. 'la' → logprob: -2.454681634902954
    4. '#' → logprob: -2.954681634902954
    5. '`' → logprob: -2.954681634902954
    6. 'a' → logprob: -3.329681634902954
    7. 'de' → logprob: -3.579681634902954
    8. ' la' → logprob: -4.079681396484375
    9. 'u' → logprob: -4.079681396484375
    10. 'd' → logprob: -4.204681396484375

Token 46: ' depuis' (ID: 16277)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.39161285758018494
    2. ' l' → logprob: -1.2666128873825073
    3. 'de' → logprob: -4.766613006591797
    4. ' ' → logprob: -4.891613006591797
    5. ' la' → logprob: -5.391613006591797
    6. ' input' → logprob: -5.391613006591797
    7. ' via' → logprob: -5.891613006591797
    8. ' de' → logprob: -6.016613006591797
    9. 'le' → logprob: -6.141613006591797
    10. 'la' → logprob: -6.641613006591797

Token 47: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5652429461479187
    2. 'l' → logprob: -1.4402430057525635
    3. ' input' → logprob: -2.0652430057525635
    4. ' la' → logprob: -3.3152430057525635
    5. ' ' → logprob: -3.9402430057525635
    6. 'input' → logprob: -5.440242767333984
    7. 'le' → logprob: -6.065242767333984
    8. 'la' → logprob: -6.190242767333984
    9. ' ' → logprob: -6.565242767333984
    10. ' le' → logprob: -7.565242767333984

Token 48: ' clavier' (ID: 187878)
  Prédit: ' clavier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clavier' → logprob: -0.42068853974342346
    2. 'input' → logprob: -1.920688509941101
    3. ' input' → logprob: -2.0456886291503906
    4. 'cl' → logprob: -3.6706886291503906
    5. ' utilisateur' → logprob: -4.545688629150391
    6. 's' → logprob: -4.545688629150391
    7. 't' → logprob: -5.670688629150391
    8. 'u' → logprob: -6.045688629150391
    9. ' user' → logprob: -6.795688629150391
    10. ' ' → logprob: -6.795688629150391

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1296873241662979
    2. 'n' → logprob: -2.8796873092651367
    3. 'a' → logprob: -3.0046873092651367
    4. 's' → logprob: -5.379687309265137
    5. 'x' → logprob: -6.004687309265137
    6. ',' → logprob: -6.379687309265137
    7. 'e' → logprob: -6.629687309265137
    8. '`)' → logprob: -7.004687309265137
    9. '')' → logprob: -7.254687309265137
    10. ':' → logprob: -7.504687309265137

Token 50: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007134470157325268
    2. 'x' → logprob: -5.132134437561035
    3. 'n' → logprob: -7.882134437561035
    4. 'num' → logprob: -8.007134437561035
    5. 'nombre' → logprob: -8.132134437561035
    6. '```' → logprob: -9.007134437561035
    7. 'number' → logprob: -10.882134437561035
    8. '\' → logprob: -11.257134437561035
    9. '\n' → logprob: -11.382134437561035
    10. 'ent' → logprob: -11.382134437561035

Token 51: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01248717401176691
    2. 'x' → logprob: -4.512487411499023
    3. ' a' → logprob: -7.387487411499023
    4. 'n' → logprob: -8.012487411499023
    5. 'num' → logprob: -8.012487411499023
    6. 'nombre' → logprob: -9.137487411499023
    7. '```' → logprob: -11.262487411499023
    8. 'number' → logprob: -11.512487411499023
    9. ' x' → logprob: -11.512487411499023
    10. 'numero' → logprob: -12.887487411499023

Token 52: ' fonction' (ID: 17610)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03900134563446045
    2. ' a' → logprob: -3.53900146484375
    3. 'x' → logprob: -4.91400146484375
    4. 'n' → logprob: -7.78900146484375
    5. ' x' → logprob: -7.91400146484375
    6. ' ' → logprob: -8.28900146484375
    7. ' premier' → logprob: -8.28900146484375
    8. 'prem' → logprob: -8.78900146484375
    9. 'nombre' → logprob: -8.91400146484375
    10. ' nombre' → logprob: -9.53900146484375

Token 53: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5103292465209961
    2. ' input' → logprob: -1.010329246520996
    3. ' =' → logprob: -4.260329246520996
    4. '=input' → logprob: -4.760329246520996
    5. 'int' → logprob: -5.385329246520996
    6. 'a' → logprob: -6.010329246520996
    7. ' int' → logprob: -6.260329246520996
    8. 'n' → logprob: -6.510329246520996
    9. '=' → logprob: -7.510329246520996
    10. 's' → logprob: -8.010329246520996

Token 54: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38747960329055786
    2. '()' → logprob: -1.137479543685913
    3. '(
' → logprob: -8.387479782104492
    4. '("")' → logprob: -9.262479782104492
    5. '('' → logprob: -9.762479782104492
    6. '(

' → logprob: -10.012479782104492
    7. '("' → logprob: -10.137479782104492
    8. ')' → logprob: -10.387479782104492
    9. 's' → logprob: -10.637479782104492
    10. '("("' → logprob: -11.137479782104492

Token 55: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22718825936317444
    2. '()' → logprob: -1.602188229560852
    3. 's' → logprob: -7.6021881103515625
    4. ')' → logprob: -7.7271881103515625
    5. '(
' → logprob: -7.9771881103515625
    6. '('' → logprob: -9.477188110351562
    7. '#' → logprob: -9.727188110351562
    8. '("")' → logprob: -9.977188110351562
    9. '())' → logprob: -10.352188110351562
    10. '("' → logprob: -10.602188110351562

Token 56: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007429980672895908
    2. '(' → logprob: -5.257430076599121
    3. ' une' → logprob: -7.007430076599121
    4. 'une' → logprob: -8.132430076599121
    5. '("")' → logprob: -8.132430076599121
    6. 's' → logprob: -9.007430076599121
    7. ' deux' → logprob: -9.257430076599121
    8. '("' → logprob: -10.132430076599121
    9. 'de' → logprob: -10.382430076599121
    10. 'un' → logprob: -10.382430076599121

Token 57: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8739120960235596
    2. ' chaîne' → logprob: -1.3739120960235596
    3. ' ' → logprob: -1.6239120960235596
    4. '(' → logprob: -2.7489120960235596
    5. ' ligne' → logprob: -3.7489120960235596
    6. 'entrée' → logprob: -4.3739118576049805
    7. 'chaine' → logprob: -5.1239118576049805
    8. 's' → logprob: -5.2489118576049805
    9. 'ligne' → logprob: -5.3739118576049805
    10. '  ' → logprob: -5.9989118576049805

Token 58: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.49278557300567627
    2. ' =' → logprob: -1.7427855730056763
    3. 's' → logprob: -2.9927854537963867
    4. ' ' → logprob: -3.1177854537963867
    5. 'user' → logprob: -4.242785453796387
    6. 'e' → logprob: -4.492785453796387
    7. ' de' → logprob: -4.867785453796387
    8. '=' → logprob: -4.992785453796387
    9. '_' → logprob: -4.992785453796387
    10. ' utilisateur' → logprob: -4.992785453796387

Token 59: ' texte' (ID: 53492)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.5114447474479675
    2. ' code' → logprob: -1.1364448070526123
    3. 'texte' → logprob: -2.8864448070526123
    4. 'l' → logprob: -4.261444568634033
    5. ' texte' → logprob: -5.761444568634033
    6. ' l' → logprob: -6.011444568634033
    7. 's' → logprob: -7.011444568634033
    8. ' input' → logprob: -7.761444568634033
    9. 'commande' → logprob: -7.761444568634033
    10. 'input' → logprob: -7.886444568634033

Token 60: ' au' (ID: 2791)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8098298907279968
    2. 's' → logprob: -1.3098299503326416
    3. 'user' → logprob: -2.4348299503326416
    4. '(' → logprob: -2.8098299503326416
    5. ',' → logprob: -2.9348299503326416
    6. 'n' → logprob: -3.8098299503326416
    7. 'e' → logprob: -4.4348297119140625
    8. 'a' → logprob: -4.8098297119140625
    9. ' =' → logprob: -5.5598297119140625
    10. ' ,' → logprob: -6.0598297119140625

Token 61: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.5575922131538391
    2. ' clavier' → logprob: -1.1825921535491943
    3. 'cl' → logprob: -2.3075921535491943
    4. 'keyboard' → logprob: -4.682592391967773
    5. 'pass' → logprob: -5.432592391967773
    6. 'user' → logprob: -6.432592391967773
    7. 'standard' → logprob: -6.432592391967773
    8. 'input' → logprob: -6.932592391967773
    9. 'prompt' → logprob: -7.557592391967773
    10. 'stdin' → logprob: -7.682592391967773

Token 62: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16862954199314117
    2. 'texte' → logprob: -3.2936296463012695
    3. '()' → logprob: -3.9186296463012695
    4. ''' → logprob: -4.0436296463012695
    5. '  ' → logprob: -4.2936296463012695
    6. ' texte' → logprob: -4.9186296463012695
    7. 's' → logprob: -5.1686296463012695
    8. ' input' → logprob: -5.6686296463012695
    9. ' Python' → logprob: -5.6686296463012695
    10. ' string' → logprob: -5.7936296463012695

Token 63: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8965047001838684
    2. '()' → logprob: -1.5215046405792236
    3. 'de' → logprob: -1.8965046405792236
    4. 'user' → logprob: -3.0215046405792236
    5. ' ' → logprob: -3.2715046405792236
    6. 'e' → logprob: -4.021504878997803
    7. ' =' → logprob: -4.146504878997803
    8. 'd' → logprob: -4.271504878997803
    9. ' de' → logprob: -4.521504878997803
    10. 'n' → logprob: -4.521504878997803

Token 64: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.2522609531879425
    2. ' caractères' → logprob: -1.5022609233856201
    3. ' caractère' → logprob: -8.7522611618042
    4. ' caracteres' → logprob: -9.2522611618042
    5. ' caract' → logprob: -10.0022611618042
    6. 'texte' → logprob: -10.8772611618042
    7. ' car' → logprob: -12.7522611618042
    8. 'chars' → logprob: -13.2522611618042
    9. 's' → logprob: -14.0022611618042
    10. 'c' → logprob: -14.0022611618042

Token 65: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36939874291419983
    2. 'x' → logprob: -1.8693987131118774
    3. 'n' → logprob: -1.9943987131118774
    4. '#' → logprob: -5.869398593902588
    5. '```' → logprob: -5.869398593902588
    6. '\n' → logprob: -5.994398593902588
    7. '\' → logprob: -6.369398593902588
    8. 'e' → logprob: -6.369398593902588
    9. 'num' → logprob: -6.494398593902588
    10. '1' → logprob: -6.744398593902588

Token 66: 'string' (ID: 1655)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009337982162833214
    2. ' )' → logprob: -5.259337902069092
    3. '),' → logprob: -5.634337902069092
    4. 'input' → logprob: -9.50933837890625
    5. '")' → logprob: -9.75933837890625
    6. '')' → logprob: -9.88433837890625
    7. 'et' → logprob: -10.13433837890625
    8. '()' → logprob: -10.13433837890625
    9. ' ),' → logprob: -10.38433837890625
    10. ')
' → logprob: -10.50933837890625

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006437772884964943
    2. ' )' → logprob: -5.1314377784729
    3. '')' → logprob: -8.256437301635742
    4. '")' → logprob: -9.881437301635742
    5. '),' → logprob: -10.381437301635742
    6. ' ' → logprob: -10.506437301635742
    7. 'user' → logprob: -10.756437301635742
    8. '()' → logprob: -11.256437301635742
    9. ').' → logprob: -11.256437301635742
    10. ')
' → logprob: -11.256437301635742

Token 68: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11585152894258499
    2. 'x' → logprob: -2.365851640701294
    3. 'n' → logprob: -4.615851402282715
    4. 'nombre' → logprob: -6.115851402282715
    5. 'num' → logprob: -6.365851402282715
    6. 'ent' → logprob: -7.365851402282715
    7. '#' → logprob: -8.365851402282715
    8. '```' → logprob: -8.365851402282715
    9. 'number' → logprob: -8.990851402282715
    10. '\' → logprob: -9.115851402282715

Token 69: ' Ensuite' (ID: 113884)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018596678972244263
    2. 'x' → logprob: -4.268596649169922
    3. 'nombre' → logprob: -6.268596649169922
    4. 'n' → logprob: -7.018596649169922
    5. 'num' → logprob: -7.143596649169922
    6. ' a' → logprob: -7.768596649169922
    7. 'ent' → logprob: -8.643596649169922
    8. 'number' → logprob: -9.268596649169922
    9. '#' → logprob: -9.893596649169922
    10. 'nb' → logprob: -10.768596649169922

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06433956325054169
    2. ' on' → logprob: -3.1893396377563477
    3. 'on' → logprob: -4.189339637756348
    4. 'nous' → logprob: -6.814339637756348
    5. ' ,' → logprob: -7.189339637756348
    6. 'les' → logprob: -7.189339637756348
    7. '#' → logprob: -7.439339637756348
    8. 'la' → logprob: -7.939339637756348
    9. 'n' → logprob: -8.064339637756348
    10. 'a' → logprob: -8.064339637756348

Token 71: ' split' (ID: 12648)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5805975198745728
    2. ' on' → logprob: -1.3305975198745728
    3. ' a' → logprob: -2.705597400665283
    4. ' x' → logprob: -3.455597400665283
    5. 'x' → logprob: -3.580597400665283
    6. 'n' → logprob: -3.955597400665283
    7. ' n' → logprob: -4.705597400665283
    8. 'on' → logprob: -5.705597400665283
    9. 'val' → logprob: -5.705597400665283
    10. 'num' → logprob: -5.705597400665283

Token 72: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03783329576253891
    2. '('' → logprob: -3.5378332138061523
    3. '(' → logprob: -4.912833213806152
    4. '("' → logprob: -7.662833213806152
    5. ' ()' → logprob: -9.537833213806152
    6. '().' → logprob: -9.912833213806152
    7. '(',' → logprob: -10.412833213806152
    8. '("("' → logprob: -11.037833213806152
    9. '()]' → logprob: -11.787833213806152
    10. '（）' → logprob: -11.912833213806152

Token 73: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03391239047050476
    2. '(' → logprob: -3.908912420272827
    3. '('' → logprob: -5.033912181854248
    4. '().' → logprob: -6.033912181854248
    5. ' ()' → logprob: -6.158912181854248
    6. 'split' → logprob: -8.033912658691406
    7. '("' → logprob: -8.033912658691406
    8. '.split' → logprob: -8.283912658691406
    9. ' (' → logprob: -8.658912658691406
    10. '("")' → logprob: -8.908912658691406

Token 74: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.000329386442899704
    2. 'par' → logprob: -8.50032901763916
    3. 'p' → logprob: -9.87532901763916
    4. 'parer' → logprob: -10.62532901763916
    5. 'pa' → logprob: -11.25032901763916
    6. 'parent' → logprob: -11.50032901763916
    7. 'paration' → logprob: -11.87532901763916
    8. 'para' → logprob: -12.37532901763916
    9. 'pares' → logprob: -13.25032901763916
    10. '|' → logprob: -13.37532901763916

Token 75: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3786432147026062
    2. ' la' → logprob: -1.503643274307251
    3. '('' → logprob: -3.378643274307251
    4. 'la' → logprob: -3.503643274307251
    5. ' ' → logprob: -4.878643035888672
    6. ' l' → logprob: -6.003643035888672
    7. ' ()' → logprob: -6.003643035888672
    8. 'les' → logprob: -6.128643035888672
    9. '(' → logprob: -6.128643035888672
    10. ' les' → logprob: -6.378643035888672

Token 76: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.10791227221488953
    2. ' ligne' → logprob: -2.607912302017212
    3. 'chaine' → logprob: -4.732912063598633
    4. ' chaine' → logprob: -4.982912063598633
    5. 'ligne' → logprob: -5.107912063598633
    6. ' ' → logprob: -5.982912063598633
    7. 's' → logprob: -6.857912063598633
    8. 'cha' → logprob: -6.982912063598633
    9. ' string' → logprob: -6.982912063598633
    10. ' ' → logprob: -7.982912063598633

Token 77: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1597183346748352
    2. ' ()' → logprob: -2.5347182750701904
    3. '('' → logprob: -3.4097182750701904
    4. ' ' → logprob: -4.9097185134887695
    5. '(' → logprob: -5.4097185134887695
    6. ' (' → logprob: -5.7847185134887695
    7. 's' → logprob: -5.9097185134887695
    8. ' )' → logprob: -5.9097185134887695
    9. '[]' → logprob: -6.4097185134887695
    10. '("' → logprob: -6.4097185134887695

Token 78: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2429884374141693
    2. ' les' → logprob: -3.117988348007202
    3. 'l' → logprob: -3.242988348007202
    4. ' le' → logprob: -3.742988348007202
    5. ' ' → logprob: -3.992988348007202
    6. ''' → logprob: -4.117988586425781
    7. 'le' → logprob: -4.367988586425781
    8. 'un' → logprob: -4.492988586425781
    9. 'les' → logprob: -4.742988586425781
    10. ' '' → logprob: -4.867988586425781

Token 79: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.5424234867095947
    2. 'esp' → logprob: -0.9174234867095947
    3. ''esp' → logprob: -4.167423248291016
    4. 'es' → logprob: -6.167423248291016
    5. ' ' → logprob: -8.292423248291016
    6. ''espace' → logprob: -8.417423248291016
    7. ''' → logprob: -8.917423248291016
    8. 'l' → logprob: -8.917423248291016
    9. 'spaces' → logprob: -9.167423248291016
    10. '’esp' → logprob: -9.167423248291016

Token 80: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.354873776435852
    2. '\' → logprob: -2.1048736572265625
    3. 's' → logprob: -2.3548736572265625
    4. '\n' → logprob: -2.3548736572265625
    5. 'x' → logprob: -2.6048736572265625
    6. 'tokens' → logprob: -2.7298736572265625
    7. ',' → logprob: -3.1048736572265625
    8. 'ent' → logprob: -3.2298736572265625
    9. '[' → logprob: -3.4798736572265625
    10. '```' → logprob: -3.7298736572265625

Token 81: ' ren' (ID: 5427)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.3049644231796265
    2. ' récup' → logprob: -2.304964542388916
    3. ' transforme' → logprob: -2.429964542388916
    4. 'r' → logprob: -2.429964542388916
    5. 'convert' → logprob: -2.554964542388916
    6. ' map' → logprob: -3.179964542388916
    7. 'l' → logprob: -3.304964542388916
    8. 'les' → logprob: -3.429964542388916
    9. ' ' → logprob: -3.804964542388916
    10. ' permet' → logprob: -4.054964542388916

Token 82: 'voie' (ID: 70072)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.43983933329582214
    2. 'voie' → logprob: -1.0648393630981445
    3. 'voit' → logprob: -4.9398393630981445
    4. 'd' → logprob: -6.5648393630981445
    5. 'voy' → logprob: -6.5648393630981445
    6. 't' → logprob: -7.4398393630981445
    7. 'voi' → logprob: -8.814839363098145
    8. 'ver' → logprob: -8.814839363098145
    9. 'vo' → logprob: -8.939839363098145
    10. 'e' → logprob: -10.564839363098145

Token 83: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18629220128059387
    2. '[]' → logprob: -2.3112921714782715
    3. ' la' → logprob: -3.6862921714782715
    4. ' ' → logprob: -3.6862921714782715
    5. ' []' → logprob: -5.0612921714782715
    6. '[:]' → logprob: -6.4362921714782715
    7. ' une' → logprob: -6.6862921714782715
    8. 'la' → logprob: -6.8112921714782715
    9. '()' → logprob: -6.8112921714782715
    10. '['' → logprob: -6.9362921714782715

Token 84: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4945067167282104
    2. 'liste' → logprob: -1.4945067167282104
    3. 'list' → logprob: -1.6195067167282104
    4. ' ' → logprob: -1.9945067167282104
    5. ' liste' → logprob: -1.9945067167282104
    6. '[]' → logprob: -3.9945068359375
    7. 's' → logprob: -4.1195068359375
    8. '['' → logprob: -4.2445068359375
    9. ' list' → logprob: -4.6195068359375
    10. 'l' → logprob: -5.3695068359375

Token 85: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.643825113773346
    2. '```' → logprob: -2.518825054168701
    3. 'des' → logprob: -2.893825054168701
    4. 'tokens' → logprob: -3.143825054168701
    5. '`' → logprob: -3.393825054168701
    6. 'n' → logprob: -3.393825054168701
    7. 's' → logprob: -3.643825054168701
    8. 'de' → logprob: -3.643825054168701
    9. 'a' → logprob: -3.643825054168701
    10. '[
' → logprob: -3.768825054168701

Token 86: ' chaînes' (ID: 179904)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5338950753211975
    2. ' chaînes' → logprob: -1.1588950157165527
    3. ' mots' → logprob: -3.9088950157165527
    4. 'cha' → logprob: -4.033895015716553
    5. 'tokens' → logprob: -4.283895015716553
    6. ' tokens' → logprob: -4.533895015716553
    7. 'chain' → logprob: -4.908895015716553
    8. 'l' → logprob: -5.533895015716553
    9. 'strings' → logprob: -5.658895015716553
    10. 'chaine' → logprob: -5.658895015716553

Token 87: '
' (ID: 198)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.808999240398407
    2. '[' → logprob: -1.5589993000030518
    3. 's' → logprob: -2.3089993000030518
    4. '```' → logprob: -2.4339993000030518
    5. 'n' → logprob: -4.058999061584473
    6. 'a' → logprob: -4.058999061584473
    7. '`' → logprob: -4.558999061584473
    8. '[
' → logprob: -4.558999061584473
    9. 'user' → logprob: -4.933999061584473
    10. '(' → logprob: -4.933999061584473

Token 88: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.014868974685669
    2. 'ent' → logprob: -1.264868974685669
    3. 'n' → logprob: -2.139868974685669
    4. 'tokens' → logprob: -2.514868974685669
    5. '```' → logprob: -3.139868974685669
    6. 'numbers' → logprob: -3.389868974685669
    7. '[' → logprob: -3.764868974685669
    8. 'x' → logprob: -4.26486873626709
    9. '\n' → logprob: -5.76486873626709
    10. '\' → logprob: -5.88986873626709

Token 89: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4868721663951874
    2. 'n' → logprob: -1.9868721961975098
    3. 'numbers' → logprob: -2.3618721961975098
    4. 'x' → logprob: -3.3618721961975098
    5. 'ent' → logprob: -3.3618721961975098
    6. ' a' → logprob: -3.7368721961975098
    7. '#' → logprob: -4.11187219619751
    8. 'nums' → logprob: -4.73687219619751
    9. ' numbers' → logprob: -5.11187219619751
    10. 'val' → logprob: -5.11187219619751

Token 90: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04721968248486519
    2. '(int' → logprob: -3.172219753265381
    3. '(lambda' → logprob: -5.547219753265381
    4. '(str' → logprob: -9.047219276428223
    5. '(math' → logprob: -9.422219276428223
    6. '(
' → logprob: -9.797219276428223
    7. '(func' → logprob: -11.297219276428223
    8. '(f' → logprob: -11.797219276428223
    9. '(function' → logprob: -11.922219276428223
    10. '(float' → logprob: -11.922219276428223

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23239433765411377
    2. ')' → logprob: -1.6073943376541138
    3. ',input' → logprob: -5.482394218444824
    4. ' ,' → logprob: -7.107394218444824
    5. ',)' → logprob: -7.482394218444824
    6. ' )' → logprob: -7.607394218444824
    7. '(' → logprob: -7.732394218444824
    8. '(input' → logprob: -8.607394218444824
    9. ',int' → logprob: -9.732394218444824
    10. 'import' → logprob: -10.482394218444824

Token 92: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.531248927116394
    2. 'input' → logprob: -1.031248927116394
    3. ')' → logprob: -2.9062490463256836
    4. ' )' → logprob: -7.156249046325684
    5. '(input' → logprob: -9.906249046325684
    6. ')>' → logprob: -11.406249046325684
    7. ' ' → logprob: -11.656249046325684
    8. ',input' → logprob: -12.031249046325684
    9. '[input' → logprob: -12.281249046325684
    10. '),' → logprob: -12.531249046325684

Token 93: ' transforme' (ID: 184109)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4953495264053345
    2. ')' → logprob: -0.9953495264053345
    3. '(input' → logprob: -4.620349407196045
    4. '(int' → logprob: -5.995349407196045
    5. ' )' → logprob: -6.245349407196045
    6. '()' → logprob: -6.870349407196045
    7. '(
' → logprob: -6.870349407196045
    8. '(s' → logprob: -7.620349407196045
    9. '(list' → logprob: -7.870349407196045
    10. '(...)' → logprob: -7.870349407196045

Token 94: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6150672435760498
    2. ' les' → logprob: -1.6150672435760498
    3. ' chaque' → logprob: -1.7400672435760498
    4. ' ces' → logprob: -4.115067481994629
    5. 'l' → logprob: -4.240067481994629
    6. ' ' → logprob: -4.365067481994629
    7. ' l' → logprob: -4.740067481994629
    8. ' cette' → logprob: -4.865067481994629
    9. ' chacune' → logprob: -4.990067481994629
    10. 'les' → logprob: -4.990067481994629

Token 95: ' chaîne' (ID: 89288)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.08817945420742035
    2. 'chaine' → logprob: -3.463179349899292
    3. 'entrée' → logprob: -4.588179588317871
    4. ' chaîne' → logprob: -5.338179588317871
    5. '<|end|>' → logprob: -5.463179588317871
    6. 'part' → logprob: -5.588179588317871
    7. ')' → logprob: -5.713179588317871
    8. 'car' → logprob: -5.713179588317871
    9. 'input' → logprob: -6.088179588317871
    10. 'é' → logprob: -6.213179588317871

Token 96: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27515777945518494
    2. ')' → logprob: -1.6501578092575073
    3. '(int' → logprob: -3.5251576900482178
    4. '(lambda' → logprob: -5.025157928466797
    5. '()' → logprob: -6.025157928466797
    6. '(str' → logprob: -6.150157928466797
    7. ' )' → logprob: -6.150157928466797
    8. 's' → logprob: -6.400157928466797
    9. ' ' → logprob: -7.400157928466797
    10. '(
' → logprob: -7.650157928466797

Token 97: ' cette' (ID: 7696)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2160574346780777
    2. ' la' → logprob: -1.8410574197769165
    3. 'l' → logprob: -4.091057300567627
    4. 'élé' → logprob: -5.841057300567627
    5. 'chaine' → logprob: -5.966057300567627
    6. 'strings' → logprob: -6.216057300567627
    7. ' tokens' → logprob: -6.216057300567627
    8. 'tokens' → logprob: -6.466057300567627
    9. 'car' → logprob: -6.716057300567627
    10. ' l' → logprob: -6.966057300567627

Token 98: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.029188547283411026
    2. ' ' → logprob: -4.029188632965088
    3. 'liste' → logprob: -4.654188632965088
    4. ' list' → logprob: -7.904188632965088
    5. ' ligne' → logprob: -8.15418815612793
    6. 's' → logprob: -8.65418815612793
    7. 'list' → logprob: -8.90418815612793
    8. ' listes' → logprob: -9.02918815612793
    9. 'l' → logprob: -9.40418815612793
    10. ' l' → logprob: -9.52918815612793

Token 99: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04813816025853157
    2. '(' → logprob: -3.29813814163208
    3. ' )' → logprob: -5.42313814163208
    4. ',' → logprob: -5.54813814163208
    5. '(int' → logprob: -7.17313814163208
    6. 'int' → logprob: -8.173138618469238
    7. '()' → logprob: -9.673138618469238
    8. '(lambda' → logprob: -9.673138618469238
    9. '(
' → logprob: -9.923138618469238
    10. '),' → logprob: -10.173138618469238

Token 100: ' nombre' (ID: 9733)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.08827441185712814
    2. ' entier' → logprob: -3.0882744789123535
    3. ' int' → logprob: -3.7132744789123535
    4. ' ent' → logprob: -5.0882744789123535
    5. ' des' → logprob: -6.2132744789123535
    6. 'ent' → logprob: -6.3382744789123535
    7. 'int' → logprob: -6.7132744789123535
    8. ' nombre' → logprob: -6.8382744789123535
    9. ' integer' → logprob: -6.9632744789123535
    10. 'un' → logprob: -7.3382744789123535

Token 101: ' entier' (ID: 80473)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10709690302610397
    2. 's' → logprob: -3.3570969104766846
    3. ' ' → logprob: -3.6070969104766846
    4. ')' → logprob: -4.2320966720581055
    5. '_' → logprob: -4.2320966720581055
    6. ' (' → logprob: -5.2320966720581055
    7. ' )' → logprob: -6.6070966720581055
    8. '(s' → logprob: -7.1070966720581055
    9. ',' → logprob: -7.4820966720581055
    10. '(
' → logprob: -7.7320966720581055

Token 102: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07146034389734268
    2. 'x' → logprob: -3.571460247039795
    3. 'n' → logprob: -3.571460247039795
    4. 's' → logprob: -5.821460247039795
    5. ')' → logprob: -6.321460247039795
    6. ' a' → logprob: -6.571460247039795
    7. '(a' → logprob: -7.196460247039795
    8. ',' → logprob: -7.321460247039795
    9. '(' → logprob: -7.321460247039795
    10. '(
' → logprob: -7.571460247039795

Token 103: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14413411915302277
    2. ' )' → logprob: -2.019134044647217
    3. 'input' → logprob: -7.644134044647217
    4. 'int' → logprob: -8.144134521484375
    5. ' input' → logprob: -9.144134521484375
    6. 'map' → logprob: -9.519134521484375
    7. '))' → logprob: -9.519134521484375
    8. '),' → logprob: -9.769134521484375
    9. '`)' → logprob: -9.894134521484375
    10. ' ' → logprob: -10.144134521484375

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012654215970542282
    2. ' )' → logprob: -10.000126838684082
    3. '(' → logprob: -11.250126838684082
    4. '))' → logprob: -11.500126838684082
    5. ')
' → logprob: -11.750126838684082
    6. 'def' → logprob: -12.000126838684082
    7. '()' → logprob: -12.000126838684082
    8. ')`' → logprob: -12.000126838684082
    9. '`)' → logprob: -12.000126838684082
    10. 's' → logprob: -12.500126838684082

Token 105: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023894954472780228
    2. 'x' → logprob: -4.148894786834717
    3. 'n' → logprob: -5.273894786834717
    4. ' a' → logprob: -6.648894786834717
    5. 'ent' → logprob: -7.398894786834717
    6. 'numbers' → logprob: -8.398895263671875
    7. 'val' → logprob: -8.898895263671875
    8. 'nombre' → logprob: -9.148895263671875
    9. '```' → logprob: -9.523895263671875
    10. '#' → logprob: -10.023895263671875

Token 106: ' Enfin' (ID: 85274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02707124687731266
    2. 'x' → logprob: -4.152071475982666
    3. ' a' → logprob: -4.777071475982666
    4. 'n' → logprob: -6.902071475982666
    5. 'numbers' → logprob: -7.527071475982666
    6. 'ent' → logprob: -7.902071475982666
    7. ' x' → logprob: -8.402070999145508
    8. 'nums' → logprob: -9.777070999145508
    9. 'num' → logprob: -9.902070999145508
    10. '#' → logprob: -9.902070999145508

Token 107: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28381720185279846
    2. ' a' → logprob: -1.533817172050476
    3. 'x' → logprob: -4.158817291259766
    4. ' x' → logprob: -5.033817291259766
    5. ',' → logprob: -5.408817291259766
    6. 'n' → logprob: -6.158817291259766
    7. ' nombres' → logprob: -7.408817291259766
    8. ',a' → logprob: -8.158817291259766
    9. ' ,' → logprob: -8.283817291259766
    10. ' n' → logprob: -8.283817291259766

Token 108: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35925209522247314
    2. ' a' → logprob: -1.2342520952224731
    3. 'x' → logprob: -6.109251976013184
    4. 'ent' → logprob: -6.359251976013184
    5. ' x' → logprob: -6.484251976013184
    6. 'numbers' → logprob: -6.734251976013184
    7. 'n' → logprob: -7.359251976013184
    8. ' numbers' → logprob: -7.484251976013184
    9. 'values' → logprob: -7.734251976013184
    10. ' nombres' → logprob: -8.234251976013184

Token 109: ' attrib' (ID: 72186)
  Prédit: ' ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ass' → logprob: -0.6453146934509277
    2. ' affect' → logprob: -1.8953146934509277
    3. 'aff' → logprob: -2.2703146934509277
    4. ' stock' → logprob: -2.7703146934509277
    5. 'r' → logprob: -3.2703146934509277
    6. 'stock' → logprob: -3.5203146934509277
    7. 'ass' → logprob: -3.8953146934509277
    8. ' récup' → logprob: -4.270314693450928
    9. 'convert' → logprob: -4.770314693450928
    10. 'attrib' → logprob: -4.770314693450928

Token 110: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.006217082031071186
    2. 'uer' → logprob: -5.506217002868652
    3. 'u' → logprob: -6.381217002868652
    4. 'uera' → logprob: -8.256217002868652
    5. 'uez' → logprob: -9.881217002868652
    6. 'ué' → logprob: -10.006217002868652
    7. 'uée' → logprob: -10.881217002868652
    8. 'uent' → logprob: -11.506217002868652
    9. ' u' → logprob: -11.631217002868652
    10. 'uet' → logprob: -12.006217002868652

Token 111: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07165077328681946
    2. ' a' → logprob: -3.821650743484497
    3. ' les' → logprob: -4.071650981903076
    4. ' aux' → logprob: -5.196650981903076
    5. ' la' → logprob: -5.446650981903076
    6. ' à' → logprob: -5.696650981903076
    7. ' ,' → logprob: -5.696650981903076
    8. ',' → logprob: -6.196650981903076
    9. ' deux' → logprob: -6.821650981903076
    10. ' l' → logprob: -6.946650981903076

Token 112: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.3445197343826294
    2. ' nombres' → logprob: -1.7195197343826294
    3. ' valeurs' → logprob: -2.96951961517334
    4. ' a' → logprob: -4.09451961517334
    5. 'de' → logprob: -4.34451961517334
    6. ' ent' → logprob: -4.84451961517334
    7. 'ent' → logprob: -5.46951961517334
    8. ' two' → logprob: -5.46951961517334
    9. 'a' → logprob: -5.84451961517334
    10. ' variables' → logprob: -5.96951961517334

Token 113: ' ent' (ID: 1121)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4009966850280762
    2. ' nombres' → logprob: -1.4009966850280762
    3. ' a' → logprob: -2.150996685028076
    4. ' n' → logprob: -2.525996685028076
    5. ' ' → logprob: -2.650996685028076
    6. 'a' → logprob: -2.650996685028076
    7. ' )' → logprob: -3.400996685028076
    8. ' integers' → logprob: -3.650996685028076
    9. ' x' → logprob: -4.150996685028076
    10. 'x' → logprob: -4.150996685028076

Token 114: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0030051618814468384
    2. 'ières' → logprob: -6.253005027770996
    3. 'i' → logprob: -7.253005027770996
    4. 'ier' → logprob: -8.253005027770996
    5. 'ers' → logprob: -9.753005027770996
    6. 'ière' → logprob: -11.128005027770996
    7. ' i' → logprob: -11.628005027770996
    8. '   ' → logprob: -12.753005027770996
    9. 'ieres' → logprob: -12.753005027770996
    10. 't' → logprob: -12.753005027770996

Token 115: ' obten' (ID: 28150)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.027029355987906456
    2. ' a' → logprob: -3.777029275894165
    3. 'x' → logprob: -5.777029514312744
    4. 'n' → logprob: -7.777029514312744
    5. ' x' → logprob: -9.027029037475586
    6. 'numbers' → logprob: -10.652029037475586
    7. 'A' → logprob: -11.277029037475586
    8. 's' → logprob: -11.402029037475586
    9. ',' → logprob: -11.652029037475586
    10. ' n' → logprob: -11.777029037475586

Token 116: 'us' (ID: 385)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.09345373511314392
    2. 'ue' → logprob: -2.4684536457061768
    3. 'e' → logprob: -6.093453884124756
    4. 'ues' → logprob: -6.968453884124756
    5. 'ué' → logprob: -8.093453407287598
    6. 'uer' → logprob: -8.218453407287598
    7. 'uez' → logprob: -8.718453407287598
    8. 'us' → logprob: -8.718453407287598
    9. '=' → logprob: -9.093453407287598
    10. 'uée' → logprob: -9.468453407287598

Token 117: ' aux' (ID: 5850)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007323235739022493
    2. 'x' → logprob: -5.382323265075684
    3. ' a' → logprob: -6.007323265075684
    4. 'n' → logprob: -8.632323265075684
    5. 'nombre' → logprob: -10.632323265075684
    6. ' x' → logprob: -11.507323265075684
    7. ' nombres' → logprob: -12.257323265075684
    8. 'num' → logprob: -12.382323265075684
    9. 'ent' → logprob: -12.882323265075684
    10. ',' → logprob: -13.007323265075684

Token 118: ' variables' (ID: 13955)
  Prédit: ' variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.5155670046806335
    2. ' a' → logprob: -1.1405670642852783
    3. 'a' → logprob: -2.6405670642852783
    4. 'variables' → logprob: -5.265566825866699
    5. ' nombres' → logprob: -5.765566825866699
    6. ' ' → logprob: -6.890566825866699
    7. ' deux' → logprob: -7.140566825866699
    8. ' x' → logprob: -7.390566825866699
    9. 'x' → logprob: -7.515566825866699
    10. 'n' → logprob: -8.6405668258667

Token 119: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5371784567832947
    2. ' a' → logprob: -0.9121784567832947
    3. 'x' → logprob: -4.9121785163879395
    4. ' x' → logprob: -5.0371785163879395
    5. ' `' → logprob: -10.537178039550781
    6. '`' → logprob: -11.037178039550781
    7. 'n' → logprob: -11.037178039550781
    8. ' n' → logprob: -11.662178039550781
    9. ' u' → logprob: -11.787178039550781
    10. 'u' → logprob: -12.162178039550781

Token 120: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030116761103272438
    2. ' ,' → logprob: -3.5301167964935303
    3. ',A' → logprob: -8.15511703491211
    4. ' et' → logprob: -11.15511703491211
    5. ',a' → logprob: -11.28011703491211
    6. 'a' → logprob: -11.65511703491211
    7. ',B' → logprob: -12.15511703491211
    8. ',
' → logprob: -12.28011703491211
    9. 'et' → logprob: -12.40511703491211
    10. '1' → logprob: -12.40511703491211

Token 121: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.14279679954051971
    2. 'B' → logprob: -2.017796754837036
    3. ' ' → logprob: -9.392796516418457
    4. ' ' → logprob: -10.517796516418457
    5. ' ' → logprob: -12.892796516418457
    6. ',' → logprob: -13.517796516418457
    7. '  ' → logprob: -14.017796516418457
    8. '`' → logprob: -14.017796516418457
    9. '```' → logprob: -14.017796516418457
    10. ' ,' → logprob: -14.142796516418457

Token 122: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002742112148553133
    2. 'a' → logprob: -6.377742290496826
    3. '
' → logprob: -7.502742290496826
    4. ' A' → logprob: -7.877742290496826
    5. '```' → logprob: -10.252741813659668
    6. ' 
' → logprob: -11.002741813659668
    7. '  
' → logprob: -11.127741813659668
    8. '

' → logprob: -12.127741813659668
    9. '#' → logprob: -12.377741813659668
    10. 'x' → logprob: -12.627741813659668

Token 123: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003469057264737785
    2. '
' → logprob: -8.500347137451172
    3. ' A' → logprob: -9.750347137451172
    4. '```' → logprob: -10.250347137451172
    5. 'a' → logprob: -10.750347137451172
    6. '\n' → logprob: -11.875347137451172
    7. '  
' → logprob: -12.250347137451172
    8. ' 
' → logprob: -12.500347137451172
    9. '\' → logprob: -12.750347137451172
    10. '``' → logprob: -13.125347137451172

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007133854669518769
    2. ' ,' → logprob: -7.250713348388672
    3. ',B' → logprob: -12.750713348388672
    4. ',A' → logprob: -16.000713348388672
    5. 's' → logprob: -16.250713348388672
    6. ' ' → logprob: -16.625713348388672
    7. ',b' → logprob: -16.625713348388672
    8. ',
' → logprob: -17.625713348388672
    9. ' =' → logprob: -17.750713348388672
    10. '1' → logprob: -18.000713348388672

Token 125: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.14325183629989624
    2. 'B' → logprob: -2.018251895904541
    3. ' ' → logprob: -7.518251895904541
    4. '  ' → logprob: -11.768251419067383
    5. ' ' → logprob: -11.768251419067383
    6. '<|end|>' → logprob: -11.768251419067383
    7. '=B' → logprob: -12.393251419067383
    8. ')' → logprob: -14.018251419067383
    9. '=' → logprob: -14.018251419067383
    10. ' =' → logprob: -14.268251419067383

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011059612035751343
    2. '=' → logprob: -4.511059761047363
    3. ',' → logprob: -12.261059761047363
    4. ' =
' → logprob: -12.636059761047363
    5. ' ' → logprob: -13.136059761047363
    6. '=input' → logprob: -14.386059761047363
    7. ' ' → logprob: -14.886059761047363
    8. '<|end|>' → logprob: -15.386059761047363
    9. '=int' → logprob: -15.511059761047363
    10. ')' → logprob: -15.636059761047363

Token 127: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06197015196084976
    2. 'map' → logprob: -2.8119702339172363
    3. ' ' → logprob: -14.186969757080078
    4. ' list' → logprob: -14.311969757080078
    5. '	map' → logprob: -14.686969757080078
    6. ' ' → logprob: -15.186969757080078
    7. ' input' → logprob: -15.436969757080078
    8. 'input' → logprob: -16.186969757080078
    9. 'list' → logprob: -16.436969757080078
    10. 'm' → logprob: -16.561969757080078

Token 128: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01818084716796875
    2. '(' → logprob: -4.018180847167969
    3. ' (' → logprob: -10.893180847167969
    4. '<int' → logprob: -12.393180847167969
    5. '(
' → logprob: -13.018180847167969
    6. '(input' → logprob: -13.018180847167969
    7. 'int' → logprob: -13.518180847167969
    8. '(lambda' → logprob: -14.393180847167969
    9. '[int' → logprob: -14.768180847167969
    10. '=int' → logprob: -15.143180847167969

Token 129: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001599725685082376
    2. 'input' → logprob: -6.8765997886657715
    3. '(' → logprob: -7.6265997886657715
    4. ')' → logprob: -10.501599311828613
    5. ',input' → logprob: -10.626599311828613
    6. ' (' → logprob: -10.876599311828613
    7. ' input' → logprob: -12.376599311828613
    8. '=input' → logprob: -13.126599311828613
    9. ')(' → logprob: -14.126599311828613
    10. '```' → logprob: -14.126599311828613

Token 130: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0788951888680458
    2. ' input' → logprob: -2.578895092010498
    3. '(input' → logprob: -13.078895568847656
    4. ')' → logprob: -13.328895568847656
    5. ' ' → logprob: -14.078895568847656
    6. '=input' → logprob: -15.078895568847656
    7. '	input' → logprob: -15.453895568847656
    8. '<input' → logprob: -16.078895568847656
    9. ',input' → logprob: -16.078895568847656
    10. '```' → logprob: -16.703895568847656

Token 131: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0385538712143898
    2. '()' → logprob: -3.2885539531707764
    3. '())' → logprob: -7.663553714752197
    4. ')' → logprob: -11.038554191589355
    5. '('' → logprob: -11.913554191589355
    6. '("' → logprob: -11.913554191589355
    7. '(' → logprob: -12.413554191589355
    8. ' ().' → logprob: -13.038554191589355
    9. '(()' → logprob: -14.038554191589355
    10. '()`' → logprob: -14.163554191589355

Token 132: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020830852736253291
    2. 'strip' → logprob: -8.500207901000977
    3. ' split' → logprob: -13.000207901000977
    4. '(split' → logprob: -13.125207901000977
    5. ')' → logprob: -15.625207901000977
    6. 'read' → logprob: -16.375207901000977
    7. 'rstrip' → logprob: -16.375207901000977
    8. 'plit' → logprob: -16.750207901000977
    9. '()' → logprob: -17.250207901000977
    10. '_split' → logprob: -17.750207901000977

Token 133: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0074001578614115715
    2. '()' → logprob: -5.632400035858154
    3. '()))' → logprob: -5.757400035858154
    4. ')' → logprob: -7.507400035858154
    5. '(' → logprob: -10.132400512695312
    6. '))' → logprob: -10.257400512695312
    7. ' ())' → logprob: -12.507400512695312
    8. '('' → logprob: -12.757400512695312
    9. '());' → logprob: -14.382400512695312
    10. '())
' → logprob: -15.132400512695312

Token 134: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.400221049785614
    2. '#' → logprob: -1.1502211093902588
    3. 'print' → logprob: -5.27522087097168
    4. '

' → logprob: -6.27522087097168
    5. 'pg' → logprob: -6.90022087097168
    6. 'g' → logprob: -7.02522087097168
    7. '
' → logprob: -7.15022087097168
    8. ' 
' → logprob: -7.27522087097168
    9. 'result' → logprob: -7.40022087097168
    10. 'def' → logprob: -7.65022087097168

Token 135: ' Calcul' (ID: 57243)
  Prédit: 'pg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pg' → logprob: -0.9245628118515015
    2. 'print' → logprob: -1.0495628118515015
    3. '#' → logprob: -1.7995628118515015
    4. 'result' → logprob: -3.299562931060791
    5. ' pg' → logprob: -4.549562931060791
    6. ' print' → logprob: -4.549562931060791
    7. ' #' → logprob: -5.174562931060791
    8. 'def' → logprob: -5.174562931060791
    9. 'while' → logprob: -6.049562931060791
    10. ' result' → logprob: -6.049562931060791

Token 136: ' du' (ID: 1462)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.35044386982917786
    2. ' du' → logprob: -1.8504438400268555
    3. 'result' → logprob: -3.1004438400268555
    4. 'g' → logprob: -3.4754438400268555
    5. '#' → logprob: -3.8504438400268555
    6. 'pg' → logprob: -3.9754438400268555
    7. 'A' → logprob: -5.4754438400268555
    8. 'def' → logprob: -5.6004438400268555
    9. '_pg' → logprob: -5.8504438400268555
    10. ' ' → logprob: -6.4754438400268555

Token 137: ' résultat' (ID: 62556)
  Prédit: 'pg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pg' → logprob: -0.349934846162796
    2. ' pg' → logprob: -1.3499348163604736
    3. 'g' → logprob: -4.349935054779053
    4. '_pg' → logprob: -4.474935054779053
    5. ' math' → logprob: -5.224935054779053
    6. 'math' → logprob: -5.849935054779053
    7. ' gcd' → logprob: -5.849935054779053
    8. ' ' → logprob: -8.349934577941895
    9. 'p' → logprob: -9.224934577941895
    10. 'PG' → logprob: -9.224934577941895

Token 138: ' selon' (ID: 27571)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3674704134464264
    2. 'result' → logprob: -1.367470383644104
    3. ' result' → logprob: -4.1174702644348145
    4. 'g' → logprob: -5.2424702644348145
    5. 'r' → logprob: -5.3674702644348145
    6. '  
' → logprob: -5.6174702644348145
    7. ' 
' → logprob: -5.8674702644348145
    8. 'res' → logprob: -5.8674702644348145
    9. ',' → logprob: -5.9924702644348145
    10. 's' → logprob: -6.3674702644348145

Token 139: ' la' (ID: 557)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.050458844751119614
    2. ' la' → logprob: -3.5504589080810547
    3. ' ' → logprob: -4.925458908081055
    4. 'math' → logprob: -5.050458908081055
    5. ' l' → logprob: -5.800458908081055
    6. ' le' → logprob: -6.550458908081055
    7. '<|end|>' → logprob: -7.425458908081055
    8. 'l' → logprob: -7.925458908081055
    9. ' the' → logprob: -8.425458908081055
    10. ' leur' → logprob: -8.675458908081055

Token 140: ' formule' (ID: 84316)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.16390419006347656
    2. 'math' → logprob: -1.9139041900634766
    3. ' fonction' → logprob: -7.163904190063477
    4. 'fonction' → logprob: -7.913904190063477
    5. ' logique' → logprob: -8.163904190063477
    6. ' méthode' → logprob: -8.413904190063477
    7. 'g' → logprob: -8.538904190063477
    8. ' logic' → logprob: -8.663904190063477
    9. 'import' → logprob: -8.663904190063477
    10. ' function' → logprob: -8.663904190063477

Token 141: ' du' (ID: 1462)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -1.223652958869934
    2. ' math' → logprob: -1.848652958869934
    3. ' :' → logprob: -2.4736528396606445
    4. 'PG' → logprob: -2.4736528396606445
    5. 'result' → logprob: -2.5986528396606445
    6. 'pg' → logprob: -2.7236528396606445
    7. ':' → logprob: -2.9736528396606445
    8. 'A' → logprob: -3.2236528396606445
    9. 'g' → logprob: -3.5986528396606445
    10. ' ' → logprob: -3.5986528396606445

Token 142: ' PPC' (ID: 94738)
  Prédit: ' pg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pg' → logprob: -0.4699995517730713
    2. ' PG' → logprob: -1.3449995517730713
    3. ' math' → logprob: -2.7199995517730713
    4. 'pg' → logprob: -4.469999313354492
    5. ' plus' → logprob: -4.594999313354492
    6. 'PG' → logprob: -4.844999313354492
    7. ' ' → logprob: -5.594999313354492
    8. '```' → logprob: -5.594999313354492
    9. '_pg' → logprob: -5.719999313354492
    10. ' ' → logprob: -6.219999313354492

Token 143: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005358975380659103
    2. 'D' → logprob: -5.880359172821045
    3. 'm' → logprob: -6.005359172821045
    4. 'М' → logprob: -10.505358695983887
    5. 'E' → logprob: -11.130358695983887
    6. 'd' → logprob: -12.380358695983887
    7. 'м' → logprob: -12.380358695983887
    8. '=' → logprob: -12.630358695983887
    9. 'def' → logprob: -12.880358695983887
    10. 'م' → logprob: -12.880358695983887

Token 144: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049984607845544815
    2. ' :' → logprob: -4.049984455108643
    3. ':' → logprob: -5.049984455108643
    4. '=' → logprob: -5.174984455108643
    5. ' ' → logprob: -5.299984455108643
    6. 'def' → logprob: -5.299984455108643
    7. 'C' → logprob: -6.424984455108643
    8. ' ,' → logprob: -6.549984455108643
    9. 'P' → logprob: -6.799984455108643
    10. ',' → logprob: -7.174984455108643

Token 145: 'plus' (ID: 11601)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.7990376353263855
    2. 'A' → logprob: -1.5490376949310303
    3. ' (' → logprob: -1.5490376949310303
    4. '(A' → logprob: -2.5490376949310303
    5. ' math' → logprob: -4.799037456512451
    6. 'math' → logprob: -4.924037456512451
    7. ')' → logprob: -5.049037456512451
    8. '(' → logprob: -5.424037456512451
    9. ' ' → logprob: -5.549037456512451
    10. 'def' → logprob: -5.799037456512451

Token 146: ' petit' (ID: 20577)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' commun' (ID: 2797)
  Prédit: ' commun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' commun' → logprob: -0.8216556906700134
    2. ' multiple' → logprob: -1.3216557502746582
    3. 'commun' → logprob: -1.6966557502746582
    4. ' ' → logprob: -3.196655750274658
    5. 'multiple' → logprob: -3.196655750274658
    6. '```' → logprob: -5.071655750274658
    7. '_multiple' → logprob: -5.321655750274658
    8. 'comm' → logprob: -5.821655750274658
    9. ' common' → logprob: -6.196655750274658
    10. 'multip' → logprob: -6.571655750274658

Token 148: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.4356304407119751
    2. ' multiple' → logprob: -1.060630440711975
    3. 'div' → logprob: -5.6856303215026855
    4. 'multip' → logprob: -6.0606303215026855
    5. '_multiple' → logprob: -7.9356303215026855
    6. ' ' → logprob: -8.060630798339844
    7. '```' → logprob: -9.185630798339844
    8. ' div' → logprob: -9.435630798339844
    9. 'mul' → logprob: -10.060630798339844
    10. 'mult' → logprob: -10.185630798339844

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010545680299401283
    2. ')
' → logprob: -5.26054573059082
    3. ' =' → logprob: -6.13554573059082
    4. ' )' → logprob: -6.26054573059082
    5. '=' → logprob: -7.76054573059082
    6. ')

' → logprob: -8.88554573059082
    7. 'def' → logprob: -9.13554573059082
    8. '(' → logprob: -9.38554573059082
    9. '):' → logprob: -9.38554573059082
    10. '(A' → logprob: -9.38554573059082

Token 150: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.34835800528526306
    2. ' ' → logprob: -2.223357915878296
    3. 'P' → logprob: -2.473357915878296
    4. 'C' → logprob: -3.723357915878296
    5. ' result' → logprob: -4.098358154296875
    6. 'pp' → logprob: -4.598358154296875
    7. '#' → logprob: -4.973358154296875
    8. 'r' → logprob: -4.973358154296875
    9. 'p' → logprob: -5.098358154296875
    10. 'res' → logprob: -5.473358154296875

Token 151: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3546021580696106
    2. 'l' → logprob: -2.479602098464966
    3. ' result' → logprob: -2.729602098464966
    4. 'P' → logprob: -3.479602098464966
    5. ' l' → logprob: -3.479602098464966
    6. 'pp' → logprob: -3.604602098464966
    7. 'def' → logprob: -4.104602336883545
    8. 'C' → logprob: -4.229602336883545
    9. 'print' → logprob: -4.979602336883545
    10. 'res' → logprob: -5.229602336883545

Token 152: ' multipl' (ID: 44269)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6432705521583557
    2. ' calc' → logprob: -1.643270492553711
    3. 'print' → logprob: -2.393270492553711
    4. ' continue' → logprob: -3.143270492553711
    5. 'continue' → logprob: -4.018270492553711
    6. 'calc' → logprob: -4.018270492553711
    7. ' print' → logprob: -4.393270492553711
    8. ' va' → logprob: -4.518270492553711
    9. 'cal' → logprob: -4.643270492553711
    10. ' #' → logprob: -4.768270492553711

Token 153: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.3261072039604187
    2. 'ip' → logprob: -1.8261072635650635
    3. 'ic' → logprob: -4.201107025146484
    4. 'é' → logprob: -4.201107025146484
    5. 'e' → logprob: -4.326107025146484
    6. 'ié' → logprob: -4.576107025146484
    7. 'import' → logprob: -4.701107025146484
    8. 'ipl' → logprob: -4.701107025146484
    9. 'ies' → logprob: -4.701107025146484
    10. 'ier' → logprob: -4.826107025146484

Token 154: ' d' (ID: 272)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3143078088760376
    2. 'A' → logprob: -1.3143078088760376
    3. ' les' → logprob: -7.689307689666748
    4. ' ' → logprob: -7.689307689666748
    5. '<|end|>' → logprob: -10.939308166503906
    6. 's' → logprob: -11.314308166503906
    7. '(A' → logprob: -11.439308166503906
    8. '  ' → logprob: -11.564308166503906
    9. 'les' → logprob: -11.689308166503906
    10. ',' → logprob: -12.064308166503906

Token 155: ''abord' (ID: 89989)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.13136781752109528
    2. 'A' → logprob: -2.7563679218292236
    3. 'e' → logprob: -3.3813679218292236
    4. 'es' → logprob: -3.7563679218292236
    5. ' e' → logprob: -7.3813676834106445
    6. ''A' → logprob: -7.6313676834106445
    7. '(A' → logprob: -8.006367683410645
    8. ' ' → logprob: -8.631367683410645
    9. 'eux' → logprob: -9.131367683410645
    10. 's' → logprob: -9.131367683410645

Token 156: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2545745074748993
    2. 'A' → logprob: -1.5045745372772217
    3. ' les' → logprob: -6.254574298858643
    4. ' ' → logprob: -7.629574298858643
    5. 'les' → logprob: -9.8795747756958
    6. 's' → logprob: -10.1295747756958
    7. ' la' → logprob: -10.3795747756958
    8. '<|end|>' → logprob: -10.8795747756958
    9. 'l' → logprob: -11.3795747756958
    10. ',' → logprob: -11.5045747756958

Token 157: ' et' (ID: 859)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07832260429859161
    2. '*' → logprob: -2.703322649002075
    3. ' et' → logprob: -5.578322410583496
    4. ',' → logprob: -5.953322410583496
    5. ' ' → logprob: -6.828322410583496
    6. 'et' → logprob: -7.828322410583496
    7. ' and' → logprob: -8.453322410583496
    8. ' par' → logprob: -9.578322410583496
    9. ' by' → logprob: -9.953322410583496
    10. '```' → logprob: -10.578322410583496

Token 158: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.10136033594608307
    2. 'B' → logprob: -2.351360321044922
    3. ' ' → logprob: -6.976360321044922
    4. '<|end|>' → logprob: -8.726360321044922
    5. '  ' → logprob: -9.976360321044922
    6. '```' → logprob: -12.351360321044922
    7. ' ' → logprob: -12.976360321044922
    8. ',' → logprob: -14.851360321044922
    9. '	B' → logprob: -14.976360321044922
    10. ' ' → logprob: -15.226360321044922

Token 159: ' ensemble' (ID: 33081)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3540235161781311
    2. '*' → logprob: -1.2290234565734863
    3. ',' → logprob: -5.604023456573486
    4. ' *
' → logprob: -7.104023456573486
    5. ' ,' → logprob: -8.104023933410645
    6. ' ' → logprob: -8.354023933410645
    7. '*
' → logprob: -9.354023933410645
    8. ')' → logprob: -9.854023933410645
    9. 's' → logprob: -9.854023933410645
    10. ' ' → logprob: -9.979023933410645

Token 160: '.' (ID: 13)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2905004024505615
    2. ' *' → logprob: -1.4155004024505615
    3. ',' → logprob: -5.415500640869141
    4. ' ' → logprob: -5.790500640869141
    5. 'result' → logprob: -7.540500640869141
    6. ' *
' → logprob: -7.790500640869141
    7. ' ,' → logprob: -8.29050064086914
    8. '*
' → logprob: -8.66550064086914
    9. 's' → logprob: -10.04050064086914
    10. ')' → logprob: -10.16550064086914

Token 161: ' L' (ID: 451)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.22567664086818695
    2. ' result' → logprob: -2.6006765365600586
    3. ' ' → logprob: -3.4756765365600586
    4. ' *' → logprob: -3.4756765365600586
    5. '*' → logprob: -3.9756765365600586
    6. 'product' → logprob: -4.850676536560059
    7. ',' → logprob: -5.100676536560059
    8. ' ,' → logprob: -5.725676536560059
    9. ' product' → logprob: -5.850676536560059
    10. ' p' → logprob: -5.850676536560059

Token 162: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2848997414112091
    2. ''' → logprob: -2.1598997116088867
    3. '#' → logprob: -3.0348997116088867
    4. 'a' → logprob: -3.5348997116088867
    5. 'es' → logprob: -4.534899711608887
    6. ' résultat' → logprob: -5.409899711608887
    7. ' a' → logprob: -5.534899711608887
    8. 'result' → logprob: -6.034899711608887
    9. ' '' → logprob: -6.034899711608887
    10. '*' → logprob: -6.034899711608887

Token 163: 'érateur' (ID: 108528)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.3307705521583557
    2. 'er' → logprob: -1.705770492553711
    3. 'érateur' → logprob: -2.705770492553711
    4. 'ér' → logprob: -3.705770492553711
    5. 'os' → logprob: -5.080770492553711
    6. 'èr' → logprob: -8.205770492553711
    7. 'éré' → logprob: -8.205770492553711
    8. 'érations' → logprob: -8.330770492553711
    9. 'érer' → logprob: -8.830770492553711
    10. 'r' → logprob: -8.830770492553711

Token 164: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.43078333139419556
    2. ' *' → logprob: -1.0557832717895508
    3. ' ' → logprob: -7.305783271789551
    4. '"' → logprob: -7.930783271789551
    5. ' ' → logprob: -8.30578327178955
    6. ' `' → logprob: -8.43078327178955
    7. '`' → logprob: -8.80578327178955
    8. ' '*'' → logprob: -9.05578327178955
    9. '```' → logprob: -9.68078327178955
    10. '  ' → logprob: -10.80578327178955

Token 165: ' effect' (ID: 3159)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0005811501177959144
    2. 'u' → logprob: -7.50058126449585
    3. '*' → logprob: -12.000580787658691
    4. 'ué' → logprob: -12.000580787658691
    5. 'uera' → logprob: -12.250580787658691
    6. 'uer' → logprob: -12.375580787658691
    7. 'uez' → logprob: -13.625580787658691
    8. 'uée' → logprob: -13.625580787658691
    9. '```' → logprob: -14.000580787658691
    10. 'úe' → logprob: -14.000580787658691

Token 167: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.22302976250648499
    2. '<|end|>' → logprob: -2.348029851913452
    3. ' la' → logprob: -2.598029851913452
    4. 'une' → logprob: -4.473029613494873
    5. ' l' → logprob: -5.348029613494873
    6. 'l' → logprob: -5.598029613494873
    7. 'la' → logprob: -5.848029613494873
    8. ' un' → logprob: -5.973029613494873
    9. 'multip' → logprob: -6.848029613494873
    10. ' ' → logprob: -6.973029613494873

Token 168: ' multiplication' (ID: 86340)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.4769609570503235
    2. ' multiplication' → logprob: -0.9769609570503235
    3. ' multip' → logprob: -6.226961135864258
    4. 'mult' → logprob: -8.101961135864258
    5. ' produit' → logprob: -8.351961135864258
    6. 'produ' → logprob: -8.851961135864258
    7. 'mul' → logprob: -10.351961135864258
    8. '<|end|>' → logprob: -10.476961135864258
    9. ' ' → logprob: -10.601961135864258
    10. 'm' → logprob: -10.851961135864258

Token 169: ' ar' (ID: 646)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.991827666759491
    2. 'P' → logprob: -1.3668277263641357
    3. 'pp' → logprob: -2.1168277263641357
    4. ' ' → logprob: -3.2418277263641357
    5. ' p' → logprob: -3.3668277263641357
    6. ' result' → logprob: -3.4918277263641357
    7. 'C' → logprob: -3.8668277263641357
    8. 'p' → logprob: -4.116827487945557
    9. '*' → logprob: -4.241827487945557
    10. ',' → logprob: -4.491827487945557

Token 170: 'ith' (ID: 437)
  Prédit: 'ith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ith' → logprob: -0.4486005902290344
    2. 'é' → logprob: -1.5736005306243896
    3. '*' → logprob: -2.5736005306243896
    4. 'e' → logprob: -3.5736005306243896
    5. 'és' → logprob: -4.448600769042969
    6. 'ithmetic' → logprob: -4.823600769042969
    7. 'érée' → logprob: -5.073600769042969
    8. 'ivée' → logprob: -5.948600769042969
    9. 'égr' → logprob: -6.073600769042969
    10. 'A' → logprob: -6.323600769042969

Token 171: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06448375433683395
    2. '*' → logprob: -3.314483642578125
    3. 'mé' → logprob: -4.064483642578125
    4. 'étique' → logprob: -5.564483642578125
    5. 'im' → logprob: -6.689483642578125
    6. 'ématique' → logprob: -6.939483642578125
    7. 't' → logprob: -7.314483642578125
    8. 'ém' → logprob: -7.314483642578125
    9. 'é' → logprob: -8.564483642578125
    10. 'ith' → logprob: -8.564483642578125

Token 172: 'étique' (ID: 41132)
  Prédit: 'étique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étique' → logprob: -0.10768258571624756
    2. 'é' → logprob: -2.357682704925537
    3. 'étiques' → logprob: -5.482682704925537
    4. '*' → logprob: -6.357682704925537
    5. 't' → logprob: -7.232682704925537
    6. 'è' → logprob: -7.482682704925537
    7. 'ético' → logprob: -9.982682228088379
    8. 'ét' → logprob: -10.732682228088379
    9. '�' → logprob: -11.107682228088379
    10. 'èt' → logprob: -11.232682228088379

Token 173: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.39148491621017456
    2. 'P' → logprob: -2.0164849758148193
    3. '*' → logprob: -2.6414849758148193
    4. 'C' → logprob: -3.5164849758148193
    5. 'pp' → logprob: -3.6414849758148193
    6. '#' → logprob: -4.14148473739624
    7. 'p' → logprob: -4.64148473739624
    8. ' result' → logprob: -4.64148473739624
    9. ' *' → logprob: -4.89148473739624
    10. ',' → logprob: -5.14148473739624

Token 174: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.033931851387024
    2. '*' → logprob: -1.408931851387024
    3. ' *' → logprob: -1.533931851387024
    4. 'P' → logprob: -2.2839317321777344
    5. 'result' → logprob: -3.7839317321777344
    6. ' P' → logprob: -4.908931732177734
    7. ',' → logprob: -4.908931732177734
    8. 'l' → logprob: -5.408931732177734
    9. 'pp' → logprob: -5.783931732177734
    10. ' p' → logprob: -5.783931732177734

Token 175: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9162232875823975
    2. 'p' → logprob: -2.0412232875823975
    3. 'P' → logprob: -2.2912232875823975
    4. 'l' → logprob: -2.9162232875823975
    5. ' p' → logprob: -3.0412232875823975
    6. '#' → logprob: -3.2912232875823975
    7. 'result' → logprob: -3.4162232875823975
    8. ' l' → logprob: -3.5412232875823975
    9. 'g' → logprob: -3.6662232875823975
    10. ' P' → logprob: -4.416223526000977

Token 176: ' utilise' (ID: 70283)
  Prédit: ' div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.6023995876312256
    2. 'div' → logprob: -0.8523995876312256
    3. ' utilise' → logprob: -3.9773995876312256
    4. ' calc' → logprob: -5.102399826049805
    5. 'util' → logprob: -8.227399826049805
    6. '#' → logprob: -8.477399826049805
    7. '/' → logprob: -8.602399826049805
    8. 'calc' → logprob: -9.102399826049805
    9. ' /' → logprob: -9.727399826049805
    10. 'divide' → logprob: -9.727399826049805

Token 177: ' '' (ID: 461)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.02445129118859768
    2. 'math' → logprob: -3.77445125579834
    3. ' la' → logprob: -6.89945125579834
    4. ' le' → logprob: -9.39945125579834
    5. ' ' → logprob: -9.77445125579834
    6. ' l' → logprob: -11.02445125579834
    7. ' ' → logprob: -11.39945125579834
    8. 'l' → logprob: -11.89945125579834
    9. '(math' → logprob: -12.02445125579834
    10. ' les' → logprob: -13.02445125579834

Token 178: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0036022020503878593
    2. ' math' → logprob: -5.628602027893066
    3. 'm' → logprob: -14.378602027893066
    4. ' ' → logprob: -14.753602027893066
    5. '(math' → logprob: -14.878602027893066
    6. 'Math' → logprob: -15.503602027893066
    7. '.math' → logprob: -15.628602027893066
    8. 'ma' → logprob: -16.003602981567383
    9. '```' → logprob: -16.503602981567383
    10. 'mat' → logprob: -16.628602981567383

Token 179: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.2530391216278076
    2. '.' → logprob: -1.5030391216278076
    3. '.sqrt' → logprob: -7.503039360046387
    4. ' .' → logprob: -8.503039360046387
    5. '.ceil' → logprob: -8.628039360046387
    6. '.s' → logprob: -10.878039360046387
    7. '.p' → logprob: -11.003039360046387
    8. '.pi' → logprob: -11.003039360046387
    9. '.factor' → logprob: -11.253039360046387
    10. '.floor' → logprob: -11.503039360046387

Token 180: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.2352385965641588e-05
    2. 'g' → logprob: -12.500012397766113
    3. 'c' → logprob: -13.250012397766113
    4. '```' → logprob: -13.375012397766113
    5. 'cdn' → logprob: -13.625012397766113
    6. '  ' → logprob: -13.750012397766113
    7. '   ' → logprob: -13.750012397766113
    8. 'cm' → logprob: -14.750012397766113
    9. 'a' → logprob: -15.375012397766113
    10. '**' → logprob: -15.625012397766113

Token 181: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.02656187303364277
    2. '(' → logprob: -3.776561975479126
    3. '('' → logprob: -5.901561737060547
    4. '()' → logprob: -7.776561737060547
    5. ')' → logprob: -9.026561737060547
    6. '(a' → logprob: -10.776561737060547
    7. '(B' → logprob: -12.276561737060547
    8. '')' → logprob: -12.526561737060547
    9. ''' → logprob: -13.901561737060547
    10. '((' → logprob: -14.026561737060547

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012820183765143156
    2. ',B' → logprob: -7.001282215118408
    3. ' ,' → logprob: -8.00128173828125
    4. ')' → logprob: -11.00128173828125
    5. ',A' → logprob: -11.37628173828125
    6. ',
' → logprob: -13.62628173828125
    7. '(),' → logprob: -13.62628173828125
    8. ',b' → logprob: -13.75128173828125
    9. ' ' → logprob: -14.00128173828125
    10. 'B' → logprob: -14.00128173828125

Token 183: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.14271235466003418
    2. ' B' → logprob: -2.017712354660034
    3. ' ' → logprob: -10.392712593078613
    4. ')' → logprob: -13.017712593078613
    5. 'b' → logprob: -13.767712593078613
    6. '	B' → logprob: -14.267712593078613
    7. ' ' → logprob: -14.580212593078613
    8. '  ' → logprob: -15.080212593078613
    9. '```' → logprob: -15.080212593078613
    10. ' )' → logprob: -15.517712593078613

Token 184: ')'' (ID: 45517)
  Prédit: ')''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.26255181431770325
    2. '())' → logprob: -1.5125517845153809
    3. '()' → logprob: -5.262551784515381
    4. ')' → logprob: -5.512551784515381
    5. '))' → logprob: -7.137551784515381
    6. '(' → logprob: -8.887552261352539
    7. '('' → logprob: -9.012552261352539
    8. ' )' → logprob: -9.262552261352539
    9. '')' → logprob: -9.762552261352539
    10. '(A' → logprob: -10.512552261352539

Token 185: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021823805291205645
    2. ')
' → logprob: -7.127182483673096
    3. '))' → logprob: -7.252182483673096
    4. ' )' → logprob: -7.502182483673096
    5. ' ' → logprob: -10.877182006835938
    6. '
' → logprob: -11.127182006835938
    7. ')))' → logprob: -11.377182006835938
    8. 'print' → logprob: -11.627182006835938
    9. ')*' → logprob: -11.627182006835938
    10. '()' → logprob: -11.877182006835938

Token 186: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.734982967376709
    2. ' obtenir' → logprob: -1.234982967376709
    3. 'calcul' → logprob: -1.734982967376709
    4. ' trouver' → logprob: -3.484982967376709
    5. 'ob' → logprob: -4.109982967376709
    6. ' déterminer' → logprob: -6.734982967376709
    7. 'tr' → logprob: -6.859982967376709
    8. 'cal' → logprob: -6.984982967376709
    9. ' récupérer' → logprob: -7.234982967376709
    10. ' ' → logprob: -7.859982967376709

Token 187: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0019360085716471076
    2. 'uler' → logprob: -6.376935958862305
    3. '#' → logprob: -9.251935958862305
    4. 'ate' → logprob: -10.751935958862305
    5. 'ler' → logprob: -10.751935958862305
    6. 'ul' → logprob: -11.001935958862305
    7. 'uer' → logprob: -11.376935958862305
    8. 'érer' → logprob: -11.876935958862305
    9. ' er' → logprob: -12.126935958862305
    10. 'ater' → logprob: -12.376935958862305

Token 188: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08014446496963501
    2. '(A' → logprob: -2.8301444053649902
    3. ')' → logprob: -4.08014440536499
    4. 'le' → logprob: -7.95514440536499
    5. 'the' → logprob: -8.955144882202148
    6. ',' → logprob: -9.330144882202148
    7. '()' → logprob: -9.455144882202148
    8. '(B' → logprob: -9.830144882202148
    9. ' la' → logprob: -9.955144882202148
    10. 'A' → logprob: -9.955144882202148

Token 189: ' plus' (ID: 2932)
  Prédit: ' pg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pg' → logprob: -1.032099962234497
    2. ' plus' → logprob: -1.407099962234497
    3. ' PG' → logprob: -1.907099962234497
    4. 'pg' → logprob: -2.657099962234497
    5. 'PG' → logprob: -2.907099962234497
    6. ' ' → logprob: -3.157099962234497
    7. '<|end|>' → logprob: -3.407099962234497
    8. ' greatest' → logprob: -4.157099723815918
    9. '_pg' → logprob: -4.532099723815918
    10. ')' → logprob: -5.407099723815918

Token 190: ' grand' (ID: 6363)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29659536480903625
    2. 'g' → logprob: -2.171595335006714
    3. '.g' → logprob: -3.296595335006714
    4. 'grand' → logprob: -3.296595335006714
    5. '_g' → logprob: -4.796595573425293
    6. 's' → logprob: -4.921595573425293
    7. '<|end|>' → logprob: -5.046595573425293
    8. ')' → logprob: -5.046595573425293
    9. '_' → logprob: -5.296595573425293
    10. '   ' → logprob: -5.921595573425293

Token 191: ' commun' (ID: 2797)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2413918673992157
    2. '_common' → logprob: -2.616391897201538
    3. 'commun' → logprob: -2.741391897201538
    4. ' commun' → logprob: -3.866391897201538
    5. '_comm' → logprob: -4.241391658782959
    6. 'common' → logprob: -4.616391658782959
    7. '<|end|>' → logprob: -4.741391658782959
    8. ' common' → logprob: -5.366391658782959
    9. '(' → logprob: -5.991391658782959
    10. ' ' → logprob: -6.241391658782959

Token 192: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.037730906158685684
    2. ' div' → logprob: -3.7877309322357178
    3. '_div' → logprob: -4.912730693817139
    4. ' divisor' → logprob: -5.537730693817139
    5. '	div' → logprob: -6.912730693817139
    6. '<div' → logprob: -7.287730693817139
    7. 'd' → logprob: -7.662730693817139
    8. ' ' → logprob: -8.287731170654297
    9. ' divis' → logprob: -8.537731170654297
    10. '_d' → logprob: -9.037731170654297

Token 193: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.0010871129343286157
    2. 'ise' → logprob: -7.251087188720703
    3. '```' → logprob: -9.001087188720703
    4. 'is' → logprob: -9.501087188720703
    5. 'isateur' → logprob: -10.501087188720703
    6. 'isseur' → logprob: -10.876087188720703
    7. 'isor' → logprob: -11.251087188720703
    8. '(' → logprob: -11.626087188720703
    9. '`' → logprob: -11.626087188720703
    10. '#' → logprob: -11.751087188720703

Token 194: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8084118366241455
    2. 'P' → logprob: -1.4334118366241455
    3. 'result' → logprob: -2.0584118366241455
    4. 'pp' → logprob: -2.4334118366241455
    5. 'p' → logprob: -3.4334118366241455
    6. ')
' → logprob: -4.183411598205566
    7. '(' → logprob: -4.433411598205566
    8. '(
' → logprob: -5.183411598205566
    9. '(pp' → logprob: -5.433411598205566
    10. '()' → logprob: -5.683411598205566

Token 195: 'PG' (ID: 18421)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32530105113983154
    2. '(A' → logprob: -1.9503010511398315
    3. 'A' → logprob: -2.075301170349121
    4. ',' → logprob: -5.075301170349121
    5. ' A' → logprob: -6.575301170349121
    6. ' )' → logprob: -6.825301170349121
    7. '(' → logprob: -8.200301170349121
    8. ' ,' → logprob: -8.200301170349121
    9. ',A' → logprob: -8.325301170349121
    10. '),' → logprob: -9.200301170349121

Token 196: 'CD' (ID: 8257)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.017063124105334282
    2. 'd' → logprob: -5.017063140869141
    3. ')' → logprob: -5.767063140869141
    4. ' div' → logprob: -6.142063140869141
    5. ',' → logprob: -6.517063140869141
    6. 'cd' → logprob: -7.392063140869141
    7. '_div' → logprob: -7.892063140869141
    8. 'de' → logprob: -8.01706314086914
    9. 'des' → logprob: -8.14206314086914
    10. '<div' → logprob: -8.26706314086914

Token 197: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03731352463364601
    2. '(A' → logprob: -3.412313461303711
    3. '))' → logprob: -6.162313461303711
    4. '(' → logprob: -7.162313461303711
    5. ')
' → logprob: -8.287313461303711
    6. '()' → logprob: -8.787313461303711
    7. '())' → logprob: -8.912313461303711
    8. '   ' → logprob: -10.037313461303711
    9. ' )' → logprob: -10.287313461303711
    10. ')))' → logprob: -10.412313461303711

Token 198: ' des' (ID: 731)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5317111015319824
    2. 'result' → logprob: -1.4067111015319824
    3. 'pp' → logprob: -2.6567111015319824
    4. ')' → logprob: -3.2817111015319824
    5. 'print' → logprob: -3.7817111015319824
    6. 'p' → logprob: -4.531711101531982
    7. '
' → logprob: -5.031711101531982
    8. 'PP' → logprob: -5.656711101531982
    9. ')
' → logprob: -5.781711101531982
    10. ' 
' → logprob: -5.906711101531982

Token 199: ' deux' (ID: 10301)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4301539659500122
    2. ' A' → logprob: -1.0551539659500122
    3. ' deux' → logprob: -7.180153846740723
    4. 'de' → logprob: -7.680153846740723
    5. ' ' → logprob: -8.805153846740723
    6. ' two' → logprob: -9.930153846740723
    7. ')' → logprob: -11.805153846740723
    8. ' ' → logprob: -12.305153846740723
    9. '(A' → logprob: -12.430153846740723
    10. '2' → logprob: -12.555153846740723

Token 200: ' nombres' (ID: 76205)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6478290557861328
    2. '(A' → logprob: -1.1478290557861328
    3. '(' → logprob: -2.647829055786133
    4. 'A' → logprob: -2.772829055786133
    5. ' A' → logprob: -4.397829055786133
    6. '*' → logprob: -5.647829055786133
    7. ',' → logprob: -6.022829055786133
    8. '(
' → logprob: -6.147829055786133
    9. '()' → logprob: -6.272829055786133
    10. ' ' → logprob: -6.897829055786133

Token 201: ' A' (ID: 355)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.200914204120636
    2. 'pp' → logprob: -2.450914144515991
    3. ')' → logprob: -3.450914144515991
    4. 'result' → logprob: -3.700914144515991
    5. 'print' → logprob: -4.32591438293457
    6. ')
' → logprob: -4.82591438293457
    7. '
' → logprob: -5.20091438293457
    8. 'PP' → logprob: -5.57591438293457
    9. 'p' → logprob: -6.20091438293457
    10. 'C' → logprob: -6.95091438293457

Token 202: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005538951605558395
    2. ',' → logprob: -5.3805389404296875
    3. '))' → logprob: -7.7555389404296875
    4. ' )' → logprob: -9.130538940429688
    5. '),' → logprob: -9.755538940429688
    6. ')*' → logprob: -9.755538940429688
    7. ')
' → logprob: -10.130538940429688
    8. '*' → logprob: -10.505538940429688
    9. ').' → logprob: -10.755538940429688
    10. '(' → logprob: -11.005538940429688

Token 203: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.3135969936847687
    2. 'B' → logprob: -1.3135969638824463
    3. ' ' → logprob: -8.063596725463867
    4. ' ' → logprob: -11.313596725463867
    5. '  ' → logprob: -12.313596725463867
    6. 'b' → logprob: -14.313596725463867
    7. '   ' → logprob: -14.813596725463867
    8. ' math' → logprob: -14.813596725463867
    9. ',' → logprob: -15.063596725463867
    10. '```' → logprob: -15.188596725463867

Token 204: '
' (ID: 198)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.20072197914123535
    2. 'result' → logprob: -2.5757219791412354
    3. 'pp' → logprob: -3.2007219791412354
    4. 'print' → logprob: -3.7007219791412354
    5. 'p' → logprob: -4.200721740722656
    6. '
' → logprob: -4.450721740722656
    7. 'C' → logprob: -5.575721740722656
    8. 'PP' → logprob: -5.700721740722656
    9. 'r' → logprob: -6.575721740722656
    10. '#' → logprob: -7.200721740722656

Token 205: '#' (ID: 2)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.27902689576148987
    2. 'result' → logprob: -1.7790268659591675
    3. 'pp' → logprob: -3.154026985168457
    4. 'print' → logprob: -3.529026985168457
    5. 'PP' → logprob: -6.279026985168457
    6. 'C' → logprob: -7.779026985168457
    7. '#' → logprob: -8.904026985168457
    8. 'res' → logprob: -9.779026985168457
    9. 'r' → logprob: -10.279026985168457
    10. 'R' → logprob: -10.529026985168457

Token 206: ' La' (ID: 3038)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.9890092611312866
    2. 'print' → logprob: -1.2390092611312866
    3. 'pp' → logprob: -1.4890092611312866
    4. 'result' → logprob: -2.239009380340576
    5. 'PP' → logprob: -5.489009380340576
    6. 'C' → logprob: -7.114009380340576
    7. ' result' → logprob: -8.239008903503418
    8. ' print' → logprob: -8.239008903503418
    9. 'l' → logprob: -8.614008903503418
    10. '#' → logprob: -8.989008903503418

Token 207: ' fonction' (ID: 17610)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -1.0178855657577515
    2. 'result' → logprob: -1.3928855657577515
    3. 'P' → logprob: -1.7678855657577515
    4. ' result' → logprob: -2.517885684967041
    5. ' p' → logprob: -3.392885684967041
    6. '#' → logprob: -3.392885684967041
    7. 'print' → logprob: -3.642885684967041
    8. ' PPC' → logprob: -4.517885684967041
    9. 'r' → logprob: -5.142885684967041
    10. ' pp' → logprob: -5.392885684967041

Token 208: ' math' (ID: 13324)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.46066030859947205
    2. 'pp' → logprob: -1.2106603384017944
    3. ' print' → logprob: -2.960660219192505
    4. 'P' → logprob: -5.085660457611084
    5. ' p' → logprob: -5.835660457611084
    6. 'math' → logprob: -6.210660457611084
    7. ' l' → logprob: -6.460660457611084
    8. ' PPC' → logprob: -6.460660457611084
    9. 'PP' → logprob: -6.710660457611084
    10. ' math' → logprob: -6.835660457611084

Token 209: '.g' (ID: 1940)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5839583277702332
    2. '.g' → logprob: -0.8339583277702332
    3. '.ceil' → logprob: -5.333958148956299
    4. '.sqrt' → logprob: -6.458958148956299
    5. '.l' → logprob: -7.708958148956299
    6. '.p' → logprob: -7.833958148956299
    7. '.floor' → logprob: -8.583958625793457
    8. '.pp' → logprob: -8.583958625793457
    9. ' .' → logprob: -9.708958625793457
    10. '.prod' → logprob: -9.833958625793457

Token 210: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -8.2994620242971e-06
    2. 'cdn' → logprob: -12.750008583068848
    3. '```' → logprob: -13.750008583068848
    4. 'cdf' → logprob: -14.250008583068848
    5. 'c' → logprob: -14.375008583068848
    6. 'cad' → logprob: -15.000008583068848
    7. 'g' → logprob: -15.375008583068848
    8. 'cmath' → logprob: -15.500008583068848
    9. 'acd' → logprob: -15.812508583068848
    10. ' gcd' → logprob: -15.875008583068848

Token 211: ' retourne' (ID: 178818)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47415077686309814
    2. '(A' → logprob: -0.9741507768630981
    3. '()' → logprob: -10.099150657653809
    4. '(
' → logprob: -11.224150657653809
    5. ')' → logprob: -11.849150657653809
    6. ' (' → logprob: -12.599150657653809
    7. 'A' → logprob: -13.099150657653809
    8. '(

' → logprob: -13.599150657653809
    9. 'def' → logprob: -13.724150657653809
    10. '(a' → logprob: -13.849150657653809

Token 212: ' un' (ID: 537)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.47799378633499146
    2. ' un' → logprob: -1.2279937267303467
    3. 'le' → logprob: -2.8529937267303467
    4. 'un' → logprob: -4.352993965148926
    5. ' ' → logprob: -5.102993965148926
    6. ' l' → logprob: -5.727993965148926
    7. 'A' → logprob: -6.227993965148926
    8. ' A' → logprob: -6.477993965148926
    9. 'l' → logprob: -6.852993965148926
    10. ' la' → logprob: -7.352993965148926

Token 213: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7186195850372314
    2. ' entier' → logprob: -0.8436195850372314
    3. 'int' → logprob: -2.7186195850372314
    4. ' int' → logprob: -4.843619346618652
    5. 'e' → logprob: -5.343619346618652
    6. ' nombre' → logprob: -6.343619346618652
    7. 'nombre' → logprob: -6.843619346618652
    8. ' ent' → logprob: -7.468619346618652
    9. ' entière' → logprob: -9.468619346618652
    10. ''ent' → logprob: -9.468619346618652

Token 214: ' correspondant' (ID: 146058)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.5526410937309265
    2. 'P' → logprob: -1.3026411533355713
    3. 'result' → logprob: -1.9276411533355713
    4. 'PP' → logprob: -6.427640914916992
    5. 'p' → logprob: -6.802640914916992
    6. 'C' → logprob: -7.177640914916992
    7. '#' → logprob: -7.177640914916992
    8. 'r' → logprob: -7.302640914916992
    9. 'print' → logprob: -7.802640914916992
    10. '  
' → logprob: -8.177640914916992

Token 215: ' au' (ID: 2791)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.3047493100166321
    2. 'pp' → logprob: -1.9297492504119873
    3. 'result' → logprob: -2.5547492504119873
    4. ')' → logprob: -4.929749488830566
    5. 'PP' → logprob: -5.179749488830566
    6. 'A' → logprob: -5.304749488830566
    7. '#' → logprob: -5.554749488830566
    8. 'print' → logprob: -6.054749488830566
    9. ' PPC' → logprob: -6.179749488830566
    10. ',' → logprob: -6.804749488830566

Token 216: ' PG' (ID: 44249)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.8781269192695618
    2. 'plus' → logprob: -1.003126859664917
    3. 'pg' → logprob: -2.378126859664917
    4. 'PG' → logprob: -2.378126859664917
    5. ' PG' → logprob: -3.878126859664917
    6. ' pg' → logprob: -4.753127098083496
    7. 'div' → logprob: -7.003127098083496
    8. 'Plus' → logprob: -7.628127098083496
    9. '_pg' → logprob: -8.003127098083496
    10. ' Plus' → logprob: -8.628127098083496

Token 217: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.005397038068622351
    2. 'cd' → logprob: -5.630396842956543
    3. 'C' → logprob: -6.380396842956543
    4. 'c' → logprob: -10.380396842956543
    5. ' CD' → logprob: -11.255396842956543
    6. ' C' → logprob: -11.505396842956543
    7. 'Ｃ' → logprob: -11.630396842956543
    8. 'Cd' → logprob: -12.255396842956543
    9. 'g' → logprob: -12.692896842956543
    10. '   ' → logprob: -13.505396842956543

Token 218: '
' (ID: 198)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.1512993723154068
    2. 'pp' → logprob: -2.901299476623535
    3. 'result' → logprob: -3.026299476623535
    4. 'print' → logprob: -4.151299476623535
    5. '
' → logprob: -5.151299476623535
    6. 'C' → logprob: -5.401299476623535
    7. '#' → logprob: -6.401299476623535
    8. 'p' → logprob: -6.526299476623535
    9. 'PP' → logprob: -6.651299476623535
    10. ')' → logprob: -6.776299476623535

Token 219: '#' (ID: 2)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.6296963095664978
    2. 'result' → logprob: -1.5046963691711426
    3. 'P' → logprob: -1.6296963691711426
    4. 'print' → logprob: -3.1296963691711426
    5. 'p' → logprob: -6.504696369171143
    6. 'PP' → logprob: -6.629696369171143
    7. 'C' → logprob: -7.004696369171143
    8. 'l' → logprob: -7.254696369171143
    9. 'r' → logprob: -7.629696369171143
    10. '#' → logprob: -8.754695892333984

Token 220: ' On' (ID: 2160)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.25438928604125977
    2. 'result' → logprob: -2.1293892860412598
    3. 'P' → logprob: -2.6293892860412598
    4. 'print' → logprob: -3.6293892860412598
    5. 'l' → logprob: -5.25438928604126
    6. 'PP' → logprob: -7.37938928604126
    7. 'L' → logprob: -8.254388809204102
    8. ' result' → logprob: -8.254388809204102
    9. 'C' → logprob: -8.504388809204102
    10. ' l' → logprob: -9.129388809204102

Token 221: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.06155112385749817
    2. ' div' → logprob: -3.561551094055176
    3. 'print' → logprob: -4.186551094055176
    4. ' calc' → logprob: -5.061551094055176
    5. 'calc' → logprob: -5.811551094055176
    6. '#' → logprob: -6.686551094055176
    7. 'pp' → logprob: -6.936551094055176
    8. 'cal' → logprob: -7.061551094055176
    9. 'result' → logprob: -7.936551094055176
    10. 'aff' → logprob: -7.936551094055176

Token 222: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.2824144661426544
    2. 'ide' → logprob: -1.407414436340332
    3. '   ' → logprob: -8.407414436340332
    4. '#' → logprob: -8.782414436340332
    5. '(' → logprob: -9.282414436340332
    6. '```' → logprob: -9.657414436340332
    7. ')' → logprob: -9.782414436340332
    8. '()' → logprob: -9.782414436340332
    9. 'ize' → logprob: -9.907414436340332
    10. 'id' → logprob: -10.032414436340332

Token 223: ' ensuite' (ID: 39713)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07604128122329712
    2. ' A' → logprob: -3.2010412216186523
    3. '(A' → logprob: -4.326041221618652
    4. 'A' → logprob: -4.576041221618652
    5. '(' → logprob: -4.951041221618652
    6. ' ' → logprob: -6.326041221618652
    7. ' par' → logprob: -10.701041221618652
    8. '  ' → logprob: -11.326041221618652
    9. '   ' → logprob: -11.326041221618652
    10. '*' → logprob: -11.326041221618652

Token 224: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7237218618392944
    2. ' A' → logprob: -1.3487218618392944
    3. 'A' → logprob: -1.9737218618392944
    4. '(A' → logprob: -2.223721981048584
    5. '(' → logprob: -4.848721981048584
    6. ' ' → logprob: -8.348721504211426
    7. ' par' → logprob: -9.348721504211426
    8. '*' → logprob: -10.473721504211426
    9. '   ' → logprob: -10.723721504211426
    10. '((' → logprob: -10.973721504211426

Token 225: ' produit' (ID: 29429)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.43729621171951294
    2. ' A' → logprob: -1.0622961521148682
    3. '(A' → logprob: -5.062296390533447
    4. ' (' → logprob: -6.187296390533447
    5. '(' → logprob: -9.312295913696289
    6. ' product' → logprob: -11.187295913696289
    7. ' ' → logprob: -11.687295913696289
    8. ' produit' → logprob: -11.687295913696289
    9. 'abs' → logprob: -11.812295913696289
    10. 'product' → logprob: -11.812295913696289

Token 226: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7486811280250549
    2. '(A' → logprob: -0.8736811280250549
    3. ' (' → logprob: -2.62368106842041
    4. 'A' → logprob: -3.87368106842041
    5. ' A' → logprob: -4.49868106842041
    6. ' ' → logprob: -5.74868106842041
    7. ' par' → logprob: -7.12368106842041
    8. '*' → logprob: -7.99868106842041
    9. ')' → logprob: -8.74868106842041
    10. ' de' → logprob: -8.87368106842041

Token 227: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09113889187574387
    2. ' A' → logprob: -2.4661388397216797
    3. '(A' → logprob: -6.34113883972168
    4. ' (' → logprob: -7.84113883972168
    5. ' ' → logprob: -10.71613883972168
    6. '   ' → logprob: -11.46613883972168
    7. ')' → logprob: -12.59113883972168
    8. '(' → logprob: -12.96613883972168
    9. ' ' → logprob: -13.84113883972168
    10. '  ' → logprob: -13.96613883972168

Token 228: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.28125330805778503
    2. ' *' → logprob: -1.4062533378601074
    3. ' ' → logprob: -9.40625286102295
    4. ' ' → logprob: -11.40625286102295
    5. ')' → logprob: -12.53125286102295
    6. ',' → logprob: -13.40625286102295
    7. '*b' → logprob: -13.65625286102295
    8. '*A' → logprob: -14.28125286102295
    9. '```' → logprob: -14.40625286102295
    10. '**' → logprob: -14.65625286102295

Token 229: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.026310749351978302
    2. ' B' → logprob: -3.651310682296753
    3. ' ' → logprob: -11.901310920715332
    4. ')' → logprob: -13.026310920715332
    5. ' )' → logprob: -14.276310920715332
    6. ' ' → logprob: -15.526310920715332
    7. ',' → logprob: -15.776310920715332
    8. '```' → logprob: -16.026309967041016
    9. ' ' → logprob: -16.651309967041016
    10. ''' → logprob: -16.651309967041016

Token 230: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002849925309419632
    2. ' )' → logprob: -5.87785005569458
    3. ')//' → logprob: -10.502849578857422
    4. ' ' → logprob: -12.377849578857422
    5. '//' → logprob: -12.377849578857422
    6. ',' → logprob: -12.627849578857422
    7. ')
' → logprob: -13.502849578857422
    8. '#' → logprob: -14.127849578857422
    9. ' //' → logprob: -14.127849578857422
    10. ' ' → logprob: -14.377849578857422

Token 231: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31084343791007996
    2. ' //' → logprob: -2.1858434677124023
    3. ' by' → logprob: -2.9358434677124023
    4. ' ' → logprob: -3.4358434677124023
    5. ' /' → logprob: -3.6858434677124023
    6. '//' → logprob: -3.8108434677124023
    7. ' )' → logprob: -4.435843467712402
    8. '/' → logprob: -5.310843467712402
    9. 'by' → logprob: -6.435843467712402
    10. ',' → logprob: -6.935843467712402

Token 232: ' le' (ID: 505)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6931608319282532
    2. 'math' → logprob: -0.6931608319282532
    3. '(math' → logprob: -11.318161010742188
    4. ' ' → logprob: -14.318161010742188
    5. ' la' → logprob: -15.068161010742188
    6. '.math' → logprob: -15.818161010742188
    7. ' ' → logprob: -16.193161010742188
    8. ' le' → logprob: -16.193161010742188
    9. ' maths' → logprob: -17.068161010742188
    10. 'Math' → logprob: -17.193161010742188

Token 233: ' PG' (ID: 44249)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.07889342308044434
    2. ' math' → logprob: -2.5788934230804443
    3. '(math' → logprob: -12.828893661499023
    4. ' ' → logprob: -14.828893661499023
    5. '.math' → logprob: -15.203893661499023
    6. 'Math' → logprob: -15.828893661499023
    7. '   ' → logprob: -17.578893661499023
    8. ' ' → logprob: -17.703893661499023
    9. '```' → logprob: -17.703893661499023
    10. '\xf0\x9d' → logprob: -17.828893661499023

Token 234: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.0033167421352118254
    2. 'cd' → logprob: -5.878316879272461
    3. 'C' → logprob: -7.753316879272461
    4. 'Cd' → logprob: -10.003316879272461
    5. 'math' → logprob: -11.628316879272461
    6. '(C' → logprob: -12.128316879272461
    7. 'A' → logprob: -12.628316879272461
    8. 'g' → logprob: -13.128316879272461
    9. 'Ｃ' → logprob: -13.253316879272461
    10. '```' → logprob: -13.628316879272461

Token 235: ' obtenu' (ID: 117330)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.8930935263633728
    2. 'result' → logprob: -1.5180935859680176
    3. 'print' → logprob: -1.7680935859680176
    4. 'pp' → logprob: -2.1430935859680176
    5. 'p' → logprob: -3.2680935859680176
    6. ',' → logprob: -4.768093585968018
    7. 'C' → logprob: -4.893093585968018
    8. ')' → logprob: -5.643093585968018
    9. ' result' → logprob: -5.768093585968018
    10. '
' → logprob: -5.768093585968018

Token 236: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9279782176017761
    2. 'pp' → logprob: -1.427978277206421
    3. 'P' → logprob: -1.677978277206421
    4. 'result' → logprob: -1.802978277206421
    5. 'C' → logprob: -5.177978038787842
    6. '
' → logprob: -5.927978038787842
    7. ',' → logprob: -6.552978038787842
    8. 'p' → logprob: -7.552978038787842
    9. 'r' → logprob: -7.552978038787842
    10. '#' → logprob: -8.177978515625

Token 237: ' déterminer' (ID: 122024)
  Prédit: ' obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.16181814670562744
    2. ' calcul' → logprob: -2.161818027496338
    3. ' ' → logprob: -3.911818027496338
    4. 'calcul' → logprob: -4.661818027496338
    5. ' get' → logprob: -6.911818027496338
    6. ' trouver' → logprob: -7.286818027496338
    7. 'ob' → logprob: -7.536818027496338
    8. ' calculate' → logprob: -8.036818504333496
    9. ' déterminer' → logprob: -8.036818504333496
    10. ')' → logprob: -8.411818504333496

Token 238: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.12566889822483063
    2. 'le' → logprob: -2.625669002532959
    3. ' ' → logprob: -4.625669002532959
    4. ' la' → logprob: -4.625669002532959
    5. 'A' → logprob: -4.750669002532959
    6. ' l' → logprob: -4.875669002532959
    7. ' A' → logprob: -5.250669002532959
    8. '(A' → logprob: -6.500669002532959
    9. ' (' → logprob: -7.000669002532959
    10. ' the' → logprob: -7.125669002532959

Token 239: ' PPC' (ID: 94738)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.47948703169822693
    2. 'P' → logprob: -1.2294870615005493
    3. ' PPC' → logprob: -3.4794869422912598
    4. ' p' → logprob: -3.6044869422912598
    5. ' P' → logprob: -4.72948694229126
    6. ' pp' → logprob: -5.22948694229126
    7. ' plus' → logprob: -5.35448694229126
    8. ' ' → logprob: -5.47948694229126
    9. 'plus' → logprob: -5.60448694229126
    10. '_pp' → logprob: -7.22948694229126

Token 240: 'M' (ID: 44)
  Prédit: 'CM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CM' → logprob: -0.16741180419921875
    2. 'M' → logprob: -2.0424118041992188
    3. 'cm' → logprob: -4.042411804199219
    4. 'C' → logprob: -5.417411804199219
    5. '=' → logprob: -7.917411804199219
    6. 'A' → logprob: -7.917411804199219
    7. 'm' → logprob: -8.042411804199219
    8. '*' → logprob: -8.167411804199219
    9. '#' → logprob: -8.667411804199219
    10. ' =' → logprob: -8.792411804199219

Token 241: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2526266574859619
    2. 'result' → logprob: -2.252626657485962
    3. 'P' → logprob: -2.877626657485962
    4. 'pp' → logprob: -2.877626657485962
    5. 'p' → logprob: -6.252626419067383
    6. 'C' → logprob: -6.377626419067383
    7. 'PP' → logprob: -7.252626419067383
    8. 'r' → logprob: -7.752626419067383
    9. 'l' → logprob: -8.127626419067383
    10. ',' → logprob: -9.002626419067383

Token 242: '#' (ID: 2)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.38258475065231323
    2. 'print' → logprob: -1.757584810256958
    3. 'P' → logprob: -2.632584810256958
    4. 'result' → logprob: -2.632584810256958
    5. 'PP' → logprob: -7.382584571838379
    6. 'l' → logprob: -7.382584571838379
    7. 'C' → logprob: -8.382584571838379
    8. 'res' → logprob: -10.007584571838379
    9. '#' → logprob: -10.257584571838379
    10. 'lp' → logprob: -11.132584571838379

Token 243: ' L' (ID: 451)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.700452983379364
    2. 'print' → logprob: -1.0754530429840088
    3. 'result' → logprob: -2.200453042984009
    4. 'P' → logprob: -3.700453042984009
    5. 'l' → logprob: -3.700453042984009
    6. ' l' → logprob: -7.20045280456543
    7. 'PP' → logprob: -7.57545280456543
    8. 'LC' → logprob: -8.32545280456543
    9. ' result' → logprob: -8.45045280456543
    10. ' print' → logprob: -9.07545280456543

Token 244: ''op' (ID: 70747)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.3944317400455475
    2. 'result' → logprob: -1.894431710243225
    3. 'print' → logprob: -2.5194318294525146
    4. 'C' → logprob: -3.3944318294525146
    5. 'PP' → logprob: -3.6444318294525146
    6. 'pp' → logprob: -4.0194315910339355
    7. '#' → logprob: -4.6444315910339355
    8. 'cm' → logprob: -6.5194315910339355
    9. 'ppm' → logprob: -7.0194315910339355
    10. ' result' → logprob: -7.1444315910339355

Token 245: 'érateur' (ID: 108528)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.06402597576379776
    2. 'CM' → logprob: -3.56402587890625
    3. 'c' → logprob: -3.93902587890625
    4. 'pcm' → logprob: -5.31402587890625
    5. 'PCM' → logprob: -6.31402587890625
    6. 'ération' → logprob: -6.68902587890625
    7. 'C' → logprob: -7.06402587890625
    8. 'result' → logprob: -7.31402587890625
    9. 'prim' → logprob: -7.56402587890625
    10. 'rem' → logprob: -7.93902587890625

Token 246: ' //' (ID: 602)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6016654968261719
    2. '=' → logprob: -0.8516654968261719
    3. 'result' → logprob: -4.851665496826172
    4. '*' → logprob: -5.726665496826172
    5. 'pp' → logprob: -5.851665496826172
    6. ' ' → logprob: -5.976665496826172
    7. '_pp' → logprob: -6.101665496826172
    8. '/' → logprob: -6.726665496826172
    9. '_result' → logprob: -6.851665496826172
    10. '_' → logprob: -6.976665496826172

Token 247: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.077744483947754
    2. '<|end|>' → logprob: -1.077744483947754
    3. 'A' → logprob: -2.452744483947754
    4. ' A' → logprob: -2.702744483947754
    5. '=' → logprob: -3.452744483947754
    6. ' =' → logprob: -3.577744483947754
    7. 'result' → logprob: -3.702744483947754
    8. ')' → logprob: -4.202744483947754
    9. ',' → logprob: -4.327744483947754
    10. '#' → logprob: -4.702744483947754

Token 248: ' la' (ID: 557)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.20254559814929962
    2. ' la' → logprob: -2.077545642852783
    3. ' une' → logprob: -3.952545642852783
    4. ' l' → logprob: -4.327545642852783
    5. ' utilisée' → logprob: -4.577545642852783
    6. ' used' → logprob: -6.077545642852783
    7. 'l' → logprob: -6.202545642852783
    8. 'la' → logprob: -6.702545642852783
    9. '#' → logprob: -6.702545642852783
    10. 'used' → logprob: -6.827545642852783

Token 249: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.2197716385126114
    2. ' division' → logprob: -1.7197716236114502
    3. 'div' → logprob: -4.219771862030029
    4. ' opér' → logprob: -6.219771862030029
    5. ' ' → logprob: -6.969771862030029
    6. 'operator' → logprob: -8.844771385192871
    7. 'floor' → logprob: -9.719771385192871
    8. ' operator' → logprob: -9.844771385192871
    9. ' div' → logprob: -10.344771385192871
    10. ' /' → logprob: -10.594771385192871

Token 250: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.6157472133636475
    2. 'integer' → logprob: -2.2407472133636475
    3. ' integer' → logprob: -2.7407472133636475
    4. 'A' → logprob: -3.2407472133636475
    5. 'int' → logprob: -3.3657472133636475
    6. ' ' → logprob: -3.3657472133636475
    7. 'ent' → logprob: -3.9907472133636475
    8. '=' → logprob: -4.115747451782227
    9. 'a' → logprob: -4.365747451782227
    10. ',' → logprob: -4.490747451782227

Token 251: ',' (ID: 11)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5923100709915161
    2. 'pp' → logprob: -1.4673100709915161
    3. 'P' → logprob: -1.5923100709915161
    4. 'print' → logprob: -4.717309951782227
    5. ' result' → logprob: -6.717309951782227
    6. 'res' → logprob: -7.467309951782227
    7. 'l' → logprob: -7.592309951782227
    8. 'p' → logprob: -7.842309951782227
    9. 'PP' → logprob: -8.342309951782227
    10. 'r' → logprob: -8.467309951782227

Token 252: ' c' (ID: 274)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.647133469581604
    2. ' PPC' → logprob: -2.0221333503723145
    3. 'pp' → logprob: -2.3971333503723145
    4. ' result' → logprob: -2.5221333503723145
    5. ' )' → logprob: -3.2721333503723145
    6. ' pp' → logprob: -3.7721333503723145
    7. ')' → logprob: -4.0221333503723145
    8. ' p' → logprob: -4.0221333503723145
    9. ' =' → logprob: -4.0221333503723145
    10. 'P' → logprob: -4.2721333503723145

Token 253: '’est' (ID: 6838)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.808900237083435
    2. ''' → logprob: -2.0589003562927246
    3. 'u' → logprob: -2.1839003562927246
    4. 'al' → logprob: -2.3089003562927246
    5. 'omme' → logprob: -2.4339003562927246
    6. ' a' → logprob: -3.0589003562927246
    7. '#' → logprob: -3.1839003562927246
    8. 'alculate' → logprob: -3.3089003562927246
    9. 'a' → logprob: -3.4339003562927246
    10. 'om' → logprob: -3.4339003562927246

Token 254: '-à' (ID: 56297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7674517631530762
    2. ' une' → logprob: -1.6424517631530762
    3. ' un' → logprob: -2.517451763153076
    4. ' la' → logprob: -3.267451763153076
    5. ' le' → logprob: -3.392451763153076
    6. ' utilisé' → logprob: -3.642451763153076
    7. 'à' → logprob: -4.017451763153076
    8. 'une' → logprob: -4.142451763153076
    9. '-à' → logprob: -4.267451763153076
    10. ' à' → logprob: -4.642451763153076

Token 255: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.24788685142993927
    2. '-dire' → logprob: -1.8728868961334229
    3. ' dire' → logprob: -3.372886896133423
    4. 'jà' → logprob: -4.497886657714844
    5. 'à' → logprob: -5.622886657714844
    6. 'près' → logprob: -6.122886657714844
    7. 'part' → logprob: -6.372886657714844
    8. '#' → logprob: -6.747886657714844
    9. 'div' → logprob: -6.747886657714844
    10. 'j' → logprob: -6.747886657714844

Token 256: ' qu' (ID: 474)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9145457744598389
    2. ' une' → logprob: -1.7895457744598389
    3. 'qui' → logprob: -2.414545774459839
    4. 'la' → logprob: -2.789545774459839
    5. ' que' → logprob: -3.039545774459839
    6. 'une' → logprob: -3.164545774459839
    7. 'sans' → logprob: -3.664545774459839
    8. ' le' → logprob: -3.789545774459839
    9. ' celle' → logprob: -3.914545774459839
    10. 'que' → logprob: -4.039546012878418

Token 257: '’on' (ID: 25036)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8285495638847351
    2. ' a' → logprob: -1.4535496234893799
    3. ' A' → logprob: -1.5785496234893799
    4. ' on' → logprob: -3.45354962348938
    5. 'A' → logprob: -3.95354962348938
    6. 'a' → logprob: -4.828549385070801
    7. ''' → logprob: -4.953549385070801
    8. ' the' → logprob: -5.203549385070801
    9. ' le' → logprob: -5.203549385070801
    10. '=' → logprob: -5.453549385070801

Token 258: ' ne' (ID: 453)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -1.7114678621292114
    2. 'div' → logprob: -2.086467742919922
    3. ' calc' → logprob: -3.211467742919922
    4. ' réalise' → logprob: -3.336467742919922
    5. ' //' → logprob: -3.461467742919922
    6. ' effect' → logprob: -3.461467742919922
    7. 'effect' → logprob: -3.461467742919922
    8. ' ' → logprob: -3.711467742919922
    9. ' utilise' → logprob: -3.711467742919922
    10. 'return' → logprob: -3.836467742919922

Token 259: ' garde' (ID: 65309)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.0571633577346802
    2. ' //' → logprob: -2.1821632385253906
    3. ' retourne' → logprob: -2.3071632385253906
    4. '//' → logprob: -3.3071632385253906
    5. 'return' → logprob: -3.5571632385253906
    6. ' ' → logprob: -3.5571632385253906
    7. 'calcul' → logprob: -3.8071632385253906
    8. 'pas' → logprob: -3.8071632385253906
    9. 'cal' → logprob: -4.057163238525391
    10. ' calc' → logprob: -4.057163238525391

Token 260: ' que' (ID: 661)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.5367218255996704
    2. 'es' → logprob: -2.161721706390381
    3. ' le' → logprob: -2.161721706390381
    4. ' espace' → logprob: -2.661721706390381
    5. '=' → logprob: -2.786721706390381
    6. ' A' → logprob: -2.911721706390381
    7. ' ' → logprob: -3.161721706390381
    8. ' pas' → logprob: -3.286721706390381
    9. ' espaces' → logprob: -3.661721706390381
    10. ' ' → logprob: -3.786721706390381

Token 261: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2796284258365631
    2. ' l' → logprob: -2.1546285152435303
    3. 'le' → logprob: -3.1546285152435303
    4. 'la' → logprob: -3.1546285152435303
    5. ' la' → logprob: -3.7796285152435303
    6. ' le' → logprob: -4.154628276824951
    7. ' ' → logprob: -7.279628276824951
    8. 'les' → logprob: -7.404628276824951
    9. 'A' → logprob: -7.904628276824951
    10. ' les' → logprob: -7.904628276824951

Token 262: ' partie' (ID: 22139)
  Prédit: ' quotient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quotient' → logprob: -0.5202466249465942
    2. 'quot' → logprob: -1.8952466249465942
    3. ' partie' → logprob: -2.3952465057373047
    4. ' result' → logprob: -3.1452465057373047
    5. 'result' → logprob: -3.2702465057373047
    6. ' part' → logprob: -3.6452465057373047
    7. ' résultat' → logprob: -3.6452465057373047
    8. ' resultat' → logprob: -5.020246505737305
    9. 'part' → logprob: -5.145246505737305
    10. ' entier' → logprob: -5.395246505737305

Token 263: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.031231485307216644
    2. 'ent' → logprob: -4.15623140335083
    3. ' ent' → logprob: -5.15623140335083
    4. ' ' → logprob: -5.90623140335083
    5. 'quot' → logprob: -6.53123140335083
    6. ' A' → logprob: -7.15623140335083
    7. 'A' → logprob: -7.40623140335083
    8. ' entier' → logprob: -7.53123140335083
    9. ' à' → logprob: -7.65623140335083
    10. 'result' → logprob: -7.78123140335083

Token 264: ' du' (ID: 1462)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.708384096622467
    2. 'result' → logprob: -0.833384096622467
    3. 'P' → logprob: -3.3333840370178223
    4. ' result' → logprob: -5.083384037017822
    5. 'C' → logprob: -5.833384037017822
    6. '_pp' → logprob: -5.958384037017822
    7. ',' → logprob: -6.083384037017822
    8. 'l' → logprob: -6.083384037017822
    9. '
' → logprob: -6.083384037017822
    10. 'p' → logprob: -6.208384037017822

Token 265: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.736316442489624
    2. 'rés' → logprob: -1.361316442489624
    3. 'result' → logprob: -1.736316442489624
    4. 'quot' → logprob: -2.986316442489624
    5. ' result' → logprob: -4.986316680908203
    6. 'div' → logprob: -5.236316680908203
    7. ' quotient' → logprob: -5.361316680908203
    8. 'A' → logprob: -5.361316680908203
    9. ' A' → logprob: -5.486316680908203
    10. 'division' → logprob: -5.861316680908203

Token 266: ' sans' (ID: 9828)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.19683928787708282
    2. 'P' → logprob: -1.9468393325805664
    3. 'result' → logprob: -3.5718393325805664
    4. 'print' → logprob: -4.946839332580566
    5. 'PP' → logprob: -7.821839332580566
    6. 'l' → logprob: -8.696839332580566
    7. 'C' → logprob: -10.196839332580566
    8. '#' → logprob: -10.321839332580566
    9. 'ppm' → logprob: -11.196839332580566
    10. 'p' → logprob: -11.696839332580566

Token 267: ' les' (ID: 1341)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reste' → logprob: -1.264032244682312
    2. 're' → logprob: -1.389032244682312
    3. ' remainder' → logprob: -1.764032244682312
    4. 'rest' → logprob: -2.5140323638916016
    5. ' reste' → logprob: -3.0140323638916016
    6. 'd' → logprob: -3.5140323638916016
    7. ' ' → logprob: -4.139032363891602
    8. ' rest' → logprob: -4.264032363891602
    9. ' ' → logprob: -4.764032363891602
    10. 'r' → logprob: -5.014032363891602

Token 268: ' déc' (ID: 8498)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -1.000463843345642
    2. 'rest' → logprob: -1.500463843345642
    3. 'd' → logprob: -1.625463843345642
    4. ' remainder' → logprob: -2.7504639625549316
    5. ' rest' → logprob: -3.0004639625549316
    6. ' reste' → logprob: -3.3754639625549316
    7. ' déc' → logprob: -3.5004639625549316
    8. 'decimal' → logprob: -5.125463962554932
    9. ' decimal' → logprob: -5.375463962554932
    10. ' ' → logprob: -5.500463962554932

Token 269: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.549475371837616
    2. 'imal' → logprob: -1.0494754314422607
    3. 'imals' → logprob: -2.6744754314422607
    4. '```' → logprob: -6.174475193023682
    5. 'imes' → logprob: -7.924475193023682
    6. 'al' → logprob: -8.42447566986084
    7. '``' → logprob: -8.54947566986084
    8. 'ims' → logprob: -9.17447566986084
    9. 'ima' → logprob: -9.54947566986084
    10. 'i' → logprob: -9.79947566986084

Token 270: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.00797721091657877
    2. 'al' → logprob: -5.38297700881958
    3. 'als' → logprob: -7.13297700881958
    4. 'aux' → logprob: -7.25797700881958
    5. '%' → logprob: -7.38297700881958
    6. '```' → logprob: -8.507977485656738
    7. 'ale' → logprob: -8.632977485656738
    8. 'les' → logprob: -9.257977485656738
    9. '' → logprob: -9.757977485656738
    10. 'à' → logprob: -9.882977485656738

Token 271: '
' (ID: 198)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.21161721646785736
    2. 'P' → logprob: -2.3366172313690186
    3. 'result' → logprob: -2.9616172313690186
    4. 'print' → logprob: -3.2116172313690186
    5. 'l' → logprob: -6.5866169929504395
    6. 'PP' → logprob: -8.086617469787598
    7. 'p' → logprob: -9.711617469787598
    8. ' result' → logprob: -10.211617469787598
    9. 'res' → logprob: -10.336617469787598
    10. 'lp' → logprob: -10.461617469787598

Token 272: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07817323505878448
    2. 'result' → logprob: -3.5781731605529785
    3. 'pp' → logprob: -3.7031731605529785
    4. 'P' → logprob: -3.8281731605529785
    5. 'PP' → logprob: -7.7031731605529785
    6. 'l' → logprob: -8.453173637390137
    7. 'C' → logprob: -9.578173637390137
    8. ' print' → logprob: -10.578173637390137
    9. 'LC' → logprob: -10.578173637390137
    10. 'res' → logprob: -11.078173637390137

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1804099977016449
    2. '=' → logprob: -1.8054100275039673
    3. ' ' → logprob: -7.930409908294678
    4. 'at' → logprob: -8.430410385131836
    5. 's' → logprob: -10.055410385131836
    6. '_' → logprob: -10.555410385131836
    7. 'ats' → logprob: -11.930410385131836
    8. '   ' → logprob: -13.180410385131836
    9. ',' → logprob: -13.430410385131836
    10. '  ' → logprob: -13.680410385131836

Token 274: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.41325628757476807
    2. '(A' → logprob: -1.788256287574768
    3. ' A' → logprob: -2.2882561683654785
    4. 'A' → logprob: -2.6632561683654785
    5. ' ' → logprob: -9.913256645202637
    6. '(' → logprob: -10.288256645202637
    7. '   ' → logprob: -12.913256645202637
    8. '  ' → logprob: -13.038256645202637
    9. '	A' → logprob: -13.288256645202637
    10. ' ' → logprob: -14.288256645202637

Token 275: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.2729995988775045e-06
    2. ' A' → logprob: -12.000006675720215
    3. '(A' → logprob: -20.5000057220459
    4. '   ' → logprob: -20.6250057220459
    5. '	A' → logprob: -21.2500057220459
    6. ' ' → logprob: -23.1250057220459
    7. '*A' → logprob: -23.6250057220459
    8. 'a' → logprob: -23.7500057220459
    9. '_A' → logprob: -23.8750057220459
    10. '  ' → logprob: -24.1250057220459

Token 276: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12693870067596436
    2. '*' → logprob: -2.126938819885254
    3. ' ' → logprob: -12.126938819885254
    4. ' ' → logprob: -12.376938819885254
    5. ')' → logprob: -13.876938819885254
    6. '**' → logprob: -17.251937866210938
    7. '```' → logprob: -17.251937866210938
    8. ' )' → logprob: -17.751937866210938
    9. ' **' → logprob: -17.876937866210938
    10. '*)' → logprob: -18.001937866210938

Token 277: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.38687223196029663
    2. ' B' → logprob: -1.1368722915649414
    3. ' ' → logprob: -13.761872291564941
    4. ' ' → logprob: -16.636871337890625
    5. '	B' → logprob: -17.261871337890625
    6. ')' → logprob: -17.386871337890625
    7. '  ' → logprob: -18.011871337890625
    8. '   ' → logprob: -18.261871337890625
    9. '```' → logprob: -18.761871337890625
    10. ' (' → logprob: -19.386871337890625

Token 278: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004311460361350328
    2. ' )' → logprob: -8.125431060791016
    3. ')//' → logprob: -9.125431060791016
    4. ' //' → logprob: -10.750431060791016
    5. '//' → logprob: -12.250431060791016
    6. ' ' → logprob: -18.875431060791016
    7. ')
' → logprob: -19.500431060791016
    8. ' ' → logprob: -19.750431060791016
    9. ']' → logprob: -20.125431060791016
    10. '   ' → logprob: -20.125431060791016

Token 279: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.693148672580719
    2. ' //' → logprob: -0.693148672580719
    3. ' ' → logprob: -14.193148612976074
    4. ' ' → logprob: -14.693148612976074
    5. ')' → logprob: -16.31814956665039
    6. '//=' → logprob: -16.81814956665039
    7. '```' → logprob: -16.94314956665039
    8. '//
' → logprob: -17.19314956665039
    9. '/' → logprob: -17.19314956665039
    10. ' //
' → logprob: -17.56814956665039

Token 280: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -2.15310683415737e-05
    2. ' math' → logprob: -10.750021934509277
    3. '(math' → logprob: -18.12502098083496
    4. 'Math' → logprob: -20.62502098083496
    5. '.math' → logprob: -22.50002098083496
    6. 'm' → logprob: -24.12502098083496
    7. 'mat' → logprob: -24.12502098083496
    8. '_math' → logprob: -24.50002098083496
    9. 'ma' → logprob: -25.87502098083496
    10. 'max' → logprob: -26.00002098083496

Token 281: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.026500709354877472
    2. '.' → logprob: -3.651500701904297
    3. '.gdx' → logprob: -9.151500701904297
    4. ' .' → logprob: -10.776500701904297
    5. '.sqrt' → logprob: -11.276500701904297
    6. '.gms' → logprob: -11.526500701904297
    7. '.gnu' → logprob: -12.151500701904297
    8. '​.' → logprob: -12.276500701904297
    9. '.gsub' → logprob: -12.276500701904297
    10. '.wpi' → logprob: -12.651500701904297

Token 282: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -6.704273118884885e-07
    2. 'CD' → logprob: -15.125000953674316
    3. 'cdn' → logprob: -15.500000953674316
    4. 'c' → logprob: -16.875
    5. 'd' → logprob: -17.875
    6. ' cd' → logprob: -18.25
    7. '_cd' → logprob: -18.375
    8. '	cd' → logprob: -18.375
    9. 'sd' → logprob: -18.75
    10. 'dc' → logprob: -18.75

Token 283: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0007117166533134878
    2. '(' → logprob: -7.250711917877197
    3. ' (' → logprob: -13.375711441040039
    4. '(B' → logprob: -16.25071144104004
    5. '(
' → logprob: -17.25071144104004
    6. '(a' → logprob: -18.00071144104004
    7. '((' → logprob: -18.50071144104004
    8. 'A' → logprob: -19.25071144104004
    9. ' ' → logprob: -20.12571144104004
    10. ',' → logprob: -20.25071144104004

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.93710636976175e-05
    2. 'B' → logprob: -10.250099182128906
    3. ',B' → logprob: -10.250099182128906
    4. ' ,' → logprob: -10.625099182128906
    5. ')' → logprob: -12.625099182128906
    6. ',
' → logprob: -14.500099182128906
    7. ' B' → logprob: -15.500099182128906
    8. ',b' → logprob: -15.750099182128906
    9. '```' → logprob: -17.250099182128906
    10. ',
' → logprob: -17.375099182128906

Token 285: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0005530327325686812
    2. ' B' → logprob: -7.500553131103516
    3. ' ' → logprob: -16.875553131103516
    4. ')' → logprob: -17.875553131103516
    5. 'b' → logprob: -18.875553131103516
    6. '```' → logprob: -19.500553131103516
    7. '   ' → logprob: -20.000553131103516
    8. '	B' → logprob: -20.250553131103516
    9. '  ' → logprob: -20.375553131103516
    10. '_B' → logprob: -20.875553131103516

Token 286: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.625000953674316
    4. '))' → logprob: -16.375
    5. '()' → logprob: -19.125
    6. ')`' → logprob: -19.125
    7. ')}' → logprob: -19.25
    8. '}' → logprob: -19.25
    9. '),' → logprob: -19.875
    10. ')

' → logprob: -20.0

Token 287: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.0
    3. '#print' → logprob: -20.625
    4. '```' → logprob: -20.625
    5. '
' → logprob: -21.375
    6. '#' → logprob: -21.875
    7. 'prin' → logprob: -22.125
    8. '.print' → logprob: -23.125
    9. '(print' → logprob: -23.125
    10. 'Print' → logprob: -23.375

Token 288: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.5
    3. 'prin' → logprob: -19.875
    4. '#print' → logprob: -20.375
    5. '#' → logprob: -20.625
    6. 'pr' → logprob: -21.375
    7. '
' → logprob: -23.375
    8. '```' → logprob: -23.75
    9. 'pri' → logprob: -25.125
    10. 'printf' → logprob: -25.25

Token 289: 'ichage' (ID: 118475)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1587837040424347
    2. '#' → logprob: -2.9087836742401123
    3. 'ich' → logprob: -3.1587836742401123
    4. 'ichage' → logprob: -3.2837836742401123
    5. 'iche' → logprob: -5.283783912658691
    6. 'icher' → logprob: -5.658783912658691
    7. '#print' → logprob: -6.158783912658691
    8. 'ic' → logprob: -7.408783912658691
    9. '```' → logprob: -7.908783912658691
    10. 'f' → logprob: -9.033783912658691

Token 290: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24314606189727783
    2. '(result' → logprob: -1.7431460618972778
    3. 'result' → logprob: -3.4931459426879883
    4. '(' → logprob: -4.743145942687988
    5. '(print' → logprob: -6.368145942687988
    6. '()' → logprob: -10.493145942687988
    7. ' print' → logprob: -11.618145942687988
    8. '("' → logprob: -13.493145942687988
    9. ' result' → logprob: -13.618145942687988
    10. '(output' → logprob: -14.743145942687988

Token 291: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00025919382460415363
    2. 'print' → logprob: -8.875259399414062
    3. ' result' → logprob: -9.125259399414062
    4. ' résultat' → logprob: -11.875259399414062
    5. '(result' → logprob: -13.375259399414062
    6. 'rés' → logprob: -13.875259399414062
    7. ' resultat' → logprob: -14.125259399414062
    8. 'r' → logprob: -16.625259399414062
    9. 'res' → logprob: -16.875259399414062
    10. 'resultado' → logprob: -16.875259399414062

Token 292: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.200166469876422e-06
    2. ' print' → logprob: -12.750004768371582
    3. '
' → logprob: -13.000004768371582
    4. '(print' → logprob: -17.6250057220459
    5. 'result' → logprob: -17.7500057220459
    6. '#print' → logprob: -19.1250057220459
    7. '```' → logprob: -19.7500057220459
    8. '
' → logprob: -20.3750057220459
    9. '.print' → logprob: -20.7500057220459
    10. ')' → logprob: -21.6250057220459

Token 293: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. ' print' → logprob: -13.750000953674316
    3. '
' → logprob: -15.750000953674316
    4. '#print' → logprob: -19.125001907348633
    5. '```' → logprob: -19.750001907348633
    6. '(print' → logprob: -20.250001907348633
    7. 'result' → logprob: -21.375001907348633
    8. '.print' → logprob: -21.375001907348633
    9. 'prin' → logprob: -22.000001907348633
    10. '
' → logprob: -22.125001907348633

Token 294: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.125495433807373
    2. 'la' → logprob: -1.500495433807373
    3. 'l' → logprob: -1.625495433807373
    4. ' l' → logprob: -1.875495433807373
    5. ' la' → logprob: -2.625495433807373
    6. ' ' → logprob: -5.125495433807373
    7. ' ' → logprob: -5.625495433807373
    8. ' print' → logprob: -5.875495433807373
    9. 'aff' → logprob: -6.000495433807373
    10. '_la' → logprob: -6.000495433807373

Token 295: ''utilisateur' (ID: 140803)
  Prédit: ''écran'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.5137973427772522
    2. 'a' → logprob: -1.2637972831726074
    3. 'é' → logprob: -2.3887972831726074
    4. 'print' → logprob: -4.263797283172607
    5. ''aide' → logprob: -5.513797283172607
    6. '’écran' → logprob: -5.888797283172607
    7. 'e' → logprob: -6.263797283172607
    8. 'stdout' → logprob: -7.138797283172607
    9. ''é' → logprob: -7.388797283172607
    10. '#' → logprob: -7.513797283172607

Token 296: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. ' print' → logprob: -13.00000286102295
    3. '
' → logprob: -14.75000286102295
    4. '```' → logprob: -18.750001907348633
    5. '(print' → logprob: -19.875001907348633
    6. 'prin' → logprob: -19.875001907348633
    7. '#print' → logprob: -19.875001907348633
    8. 'pr' → logprob: -20.125001907348633
    9. '.print' → logprob: -21.000001907348633
    10. '
' → logprob: -21.250001907348633

Token 297: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.75
    3. '```' → logprob: -24.5
    4. 'prin' → logprob: -25.375
    5. 'pr' → logprob: -26.375
    6. '#print' → logprob: -27.0
    7. '
' → logprob: -28.125
    8. 'printf' → logprob: -28.625
    9. '.print' → logprob: -28.875
    10. 'Print' → logprob: -28.875

Token 298: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. 'prin' → logprob: -23.75
    4. '```' → logprob: -24.125
    5. 'pr' → logprob: -24.25
    6. '#print' → logprob: -26.375
    7. 'pri' → logprob: -27.125
    8. 'Print' → logprob: -27.75
    9. '
' → logprob: -28.0
    10. 'p' → logprob: -28.25

Token 299: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.465036105713807e-06
    2. ' print' → logprob: -12.125007629394531
    3. 'pr' → logprob: -13.375007629394531
    4. 'p' → logprob: -15.250007629394531
    5. 'prin' → logprob: -15.625007629394531
    6. 'pri' → logprob: -19.50000762939453
    7. '#print' → logprob: -20.37500762939453
    8. '
' → logprob: -20.62500762939453
    9. 'r' → logprob: -20.75000762939453
    10. 'printf' → logprob: -21.00000762939453

Token 300: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.493430894101039e-05
    2. ' print' → logprob: -9.500075340270996
    3. 'pr' → logprob: -17.25007438659668
    4. 'prin' → logprob: -18.25007438659668
    5. 'printf' → logprob: -23.00007438659668
    6. 'pri' → logprob: -23.00007438659668
    7. '#print' → logprob: -23.12507438659668
    8. '.print' → logprob: -23.62507438659668
    9. '(print' → logprob: -23.62507438659668
    10. 'p' → logprob: -23.87507438659668

Token 301: '()' (ID: 416)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.13632142543792725
    2. '(' → logprob: -2.636321544647217
    3. '()' → logprob: -2.886321544647217
    4. ' (' → logprob: -11.386321067810059
    5. '(res' → logprob: -12.636321067810059
    6. '(output' → logprob: -12.761321067810059
    7. 'result' → logprob: -13.011321067810059
    8. '(print' → logprob: -13.011321067810059
    9. ' ()' → logprob: -13.386321067810059
    10. '("' → logprob: -13.761321067810059

Token 302: ' affiche' (ID: 127479)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.02571641281247139
    2. '(' → logprob: -3.7757163047790527
    3. '(print' → logprob: -6.275716304779053
    4. 'print' → logprob: -8.275716781616211
    5. '()' → logprob: -8.275716781616211
    6. 'result' → logprob: -10.150716781616211
    7. '(output' → logprob: -10.650716781616211
    8. ' (' → logprob: -11.900716781616211
    9. '(results' → logprob: -13.275716781616211
    10. '("' → logprob: -13.900716781616211

Token 303: ' la' (ID: 557)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.01108153723180294
    2. 'result' → logprob: -4.511081695556641
    3. '(' → logprob: -10.38608169555664
    4. ' (' → logprob: -13.51108169555664
    5. ' result' → logprob: -14.01108169555664
    6. '()' → logprob: -15.38608169555664
    7. '=result' → logprob: -16.01108169555664
    8. ',result' → logprob: -16.26108169555664
    9. '(res' → logprob: -16.38608169555664
    10. '[result' → logprob: -17.51108169555664

Token 304: ' valeur' (ID: 41664)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.022023288533091545
    2. '(result' → logprob: -3.8970232009887695
    3. ' result' → logprob: -6.5220232009887695
    4. '(' → logprob: -12.52202320098877
    5. 'rés' → logprob: -13.77202320098877
    6. ' résultat' → logprob: -13.89702320098877
    7. 'r' → logprob: -13.89702320098877
    8. ' resultat' → logprob: -14.64702320098877
    9. 'resultado' → logprob: -14.64702320098877
    10. 'value' → logprob: -14.77202320098877

Token 305: ' four' (ID: 4242)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0012120219180360436
    2. '(' → logprob: -6.751212120056152
    3. 'result' → logprob: -10.126212120056152
    4. ' (' → logprob: -13.751212120056152
    5. '()' → logprob: -15.001212120056152
    6. '(res' → logprob: -15.876212120056152
    7. '(
' → logprob: -16.501211166381836
    8. '=result' → logprob: -16.751211166381836
    9. ',result' → logprob: -17.001211166381836
    10. '(resultado' → logprob: -17.251211166381836

Token 306: 'nie' (ID: 7640)
  Prédit: 'nie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nie' → logprob: -0.8400815725326538
    2. 'ni' → logprob: -1.5900815725326538
    3. 'print' → logprob: -1.8400815725326538
    4. 'n' → logprob: -2.7150816917419434
    5. 't' → logprob: -2.8400816917419434
    6. 'nit' → logprob: -3.8400816917419434
    7. 'née' → logprob: -4.465081691741943
    8. 'nis' → logprob: -4.715081691741943
    9. 'nt' → logprob: -4.840081691741943
    10. 'nd' → logprob: -5.215081691741943

Token 307: ' entre' (ID: 3853)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.018788332119584084
    2. '(' → logprob: -4.0187883377075195
    3. 'result' → logprob: -7.5187883377075195
    4. '()' → logprob: -9.76878833770752
    5. '(
' → logprob: -10.76878833770752
    6. 'print' → logprob: -11.64378833770752
    7. '(print' → logprob: -11.89378833770752
    8. ' (' → logprob: -14.64378833770752
    9. ',result' → logprob: -15.01878833770752
    10. '(res' → logprob: -15.89378833770752

Token 308: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0038000731728971004
    2. '()' → logprob: -5.628799915313721
    3. '(' → logprob: -8.753800392150879
    4. '(parent' → logprob: -10.503800392150879
    5. '_parent' → logprob: -13.128800392150879
    6. ' parent' → logprob: -13.253800392150879
    7. 'par' → logprob: -13.253800392150879
    8. 'result' → logprob: -13.378800392150879
    9. 'paren' → logprob: -13.753800392150879
    10. ' parentheses' → logprob: -13.878800392150879

Token 309: 'h' (ID: 71)
  Prédit: 'èses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'èses' → logprob: -0.01949376054108143
    2. 'eses' → logprob: -4.019493579864502
    3. 'es' → logprob: -6.769493579864502
    4. 'èse' → logprob: -9.26949405670166
    5. 'heses' → logprob: -9.76949405670166
    6. 'ès' → logprob: -11.39449405670166
    7. 'esis' → logprob: -11.39449405670166
    8. 'ses' → logprob: -11.64449405670166
    9. ')' → logprob: -12.51949405670166
    10. 'ères' → logprob: -12.89449405670166

Token 310: 'èses' (ID: 188395)
  Prédit: 'èses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èses' → logprob: -0.006867520976811647
    2. 'eses' → logprob: -5.256867408752441
    3. 'es' → logprob: -6.506867408752441
    4. 'èse' → logprob: -10.006867408752441
    5. 'ès' → logprob: -10.131867408752441
    6. 'ères' → logprob: -10.756867408752441
    7. 'è' → logprob: -11.256867408752441
    8. ')' → logprob: -12.006867408752441
    9. 'heses' → logprob: -12.006867408752441
    10. 'esis' → logprob: -13.131867408752441

Token 311: ' sur' (ID: 1512)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02344660460948944
    2. 'result' → logprob: -4.023446559906006
    3. '(result' → logprob: -5.273446559906006
    4. '(print' → logprob: -8.898447036743164
    5. '(' → logprob: -11.148447036743164
    6. ' print' → logprob: -12.273447036743164
    7. ' result' → logprob: -15.023447036743164
    8. '()' → logprob: -15.398447036743164
    9. ')' → logprob: -15.648447036743164
    10. '(
' → logprob: -16.148447036743164

Token 312: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3066396117210388
    2. 'l' → logprob: -1.8066396713256836
    3. ' la' → logprob: -2.4316396713256836
    4. 'une' → logprob: -5.306639671325684
    5. ' une' → logprob: -5.806639671325684
    6. ' ' → logprob: -6.931639671325684
    7. ' l' → logprob: -7.306639671325684
    8. '```' → logprob: -7.431639671325684
    9. '()' → logprob: -7.556639671325684
    10. 'e' → logprob: -8.556639671325684

Token 313: ' nouvelle' (ID: 24562)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.019242968410253525
    2. 'nou' → logprob: -4.519242763519287
    3. '\n' → logprob: -5.394242763519287
    4. ' ligne' → logprob: -6.519242763519287
    5. 'l' → logprob: -7.269242763519287
    6. ' nouvelle' → logprob: -8.269243240356445
    7. 'lig' → logprob: -8.394243240356445
    8. 'é' → logprob: -8.519243240356445
    9. 'console' → logprob: -8.769243240356445
    10. 'line' → logprob: -8.894243240356445

Token 314: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0075784665532410145
    2. ' ligne' → logprob: -5.257578372955322
    3. 'line' → logprob: -6.507578372955322
    4. 'l' → logprob: -7.132578372955322
    5. 'lig' → logprob: -10.75757884979248
    6. '()' → logprob: -11.38257884979248
    7. ')' → logprob: -11.75757884979248
    8. 'lin' → logprob: -13.00757884979248
    9. '(' → logprob: -13.13257884979248
    10. 'lí' → logprob: -13.50757884979248

Token 315: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0071712820790708065
    2. 'result' → logprob: -5.007171154022217
    3. '(result' → logprob: -7.882171154022217
    4. '(print' → logprob: -10.257171630859375
    5. '(' → logprob: -11.007171630859375
    6. '(
' → logprob: -11.132171630859375
    7. ' print' → logprob: -12.257171630859375
    8. '()
' → logprob: -12.882171630859375
    9. '
' → logprob: -13.007171630859375
    10. '()' → logprob: -13.257171630859375

Token 316: ' la' (ID: 557)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.2292053997516632
    2. 'la' → logprob: -2.729205369949341
    3. ' code' → logprob: -2.729205369949341
    4. 'l' → logprob: -3.104205369949341
    5. 'texte' → logprob: -4.47920560836792
    6. 'console' → logprob: -5.10420560836792
    7. 'python' → logprob: -5.85420560836792
    8. 'print' → logprob: -5.85420560836792
    9. 'terminal' → logprob: -6.60420560836792
    10. 'stdout' → logprob: -7.22920560836792

Token 317: ' sortie' (ID: 52761)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.015062556602060795
    2. ' console' → logprob: -4.26506233215332
    3. 'terminal' → logprob: -7.14006233215332
    4. 'con' → logprob: -10.51506233215332
    5. 'code' → logprob: -11.14006233215332
    6. ' terminal' → logprob: -11.26506233215332
    7. '#' → logprob: -11.76506233215332
    8. 'fonction' → logprob: -12.01506233215332
    9. 'sort' → logprob: -12.26506233215332
    10. 'stdout' → logprob: -12.26506233215332

Token 318: ' standard' (ID: 7024)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.10139403492212296
    2. 'result' → logprob: -2.351393938064575
    3. 'print' → logprob: -7.476394176483154
    4. '(' → logprob: -7.476394176483154
    5. '()' → logprob: -10.101393699645996
    6. ')' → logprob: -12.351393699645996
    7. '(print' → logprob: -12.476393699645996
    8. '=result' → logprob: -13.726393699645996
    9. '(r' → logprob: -14.351393699645996
    10. ' result' → logprob: -14.351393699645996

Token 319: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7120533811976202e-05
    2. 'result' → logprob: -11.250017166137695
    3. '(print' → logprob: -12.875017166137695
    4. ' print' → logprob: -13.875017166137695
    5. '(result' → logprob: -14.625017166137695
    6. '(' → logprob: -17.875017166137695
    7. '()' → logprob: -18.000017166137695
    8. '(
' → logprob: -19.000017166137695
    9. '```' → logprob: -19.000017166137695
    10. '()
' → logprob: -19.125017166137695

Token 320: 'g' (ID: 70)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014198292046785355
    2. 'result' → logprob: -4.264198303222656
    3. '(result' → logprob: -11.389198303222656
    4. 'print' → logprob: -11.889198303222656
    5. ' result' → logprob: -12.014198303222656
    6. ' )' → logprob: -12.139198303222656
    7. ')
' → logprob: -14.014198303222656
    8. '()' → logprob: -14.514198303222656
    9. ',result' → logprob: -14.514198303222656
    10. ').' → logprob: -15.014198303222656

Token 321: 'én' (ID: 3289)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8095996975898743
    2. 'l' → logprob: -1.1845996379852295
    3. 'u' → logprob: -2.6845996379852295
    4. 'lobal' → logprob: -2.6845996379852295
    5. 'print' → logprob: -3.3095996379852295
    6. 'ame' → logprob: -4.309599876403809
    7. 'a' → logprob: -4.434599876403809
    8. '`' → logprob: -5.184599876403809
    9. '```' → logprob: -5.809599876403809
    10. 'én' → logprob: -5.809599876403809

Token 322: 'éralement' (ID: 198718)
  Prédit: 'ral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ral' → logprob: -0.5548754334449768
    2. 'rale' → logprob: -1.179875373840332
    3. 'érale' → logprob: -2.554875373840332
    4. 'al' → logprob: -4.554875373840332
    5. 'r' → logprob: -4.804875373840332
    6. 'ale' → logprob: -5.304875373840332
    7. 'ération' → logprob: -5.429875373840332
    8. 'n' → logprob: -5.679875373840332
    9. 'nale' → logprob: -6.304875373840332
    10. 'ration' → logprob: -6.429875373840332

Token 323: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.043566107749939
    2. 'la' → logprob: -1.043566107749939
    3. 'l' → logprob: -1.668566107749939
    4. ' la' → logprob: -2.5435662269592285
    5. 'console' → logprob: -4.5435662269592285
    6. ' l' → logprob: -5.0435662269592285
    7. 'le' → logprob: -5.2935662269592285
    8. ' )' → logprob: -7.0435662269592285
    9. '()' → logprob: -7.1685662269592285
    10. 'à' → logprob: -7.2935662269592285

Token 324: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.2574165165424347
    2. 'e' → logprob: -1.6324164867401123
    3. ')' → logprob: -4.132416725158691
    4. 'console' → logprob: -5.257416725158691
    5. '’écran' → logprob: -6.257416725158691
    6. 'é' → logprob: -6.382416725158691
    7. 'terminal' → logprob: -6.757416725158691
    8. ''é' → logprob: -6.757416725158691
    9. ''' → logprob: -7.132416725158691
    10. ''e' → logprob: -7.257416725158691

Token 325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8312570318812504e-05
    2. '(' → logprob: -12.000018119812012
    3. '(result' → logprob: -12.000018119812012
    4. ' )' → logprob: -13.375018119812012
    5. ',' → logprob: -14.125018119812012
    6. ')
' → logprob: -14.125018119812012
    7. ')`' → logprob: -14.125018119812012
    8. '()' → logprob: -14.250018119812012
    9. ',result' → logprob: -14.875018119812012
    10. ')#' → logprob: -15.000018119812012

Token 326: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.75
    3. '```' → logprob: -18.75
    4. 'pr' → logprob: -23.125
    5. '
' → logprob: -23.25
    6. 'prin' → logprob: -23.875
    7. '#print' → logprob: -24.875
    8. '(print' → logprob: -24.875
    9. '.print' → logprob: -25.125
    10. '``' → logprob: -25.875

Token 327: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.16024017333984375
    2. '(' → logprob: -1.9102401733398438
    3. ' (' → logprob: -11.285240173339844
    4. 'result' → logprob: -13.285240173339844
    5. '(res' → logprob: -14.160240173339844
    6. '((' → logprob: -15.035240173339844
    7. '(
' → logprob: -15.410240173339844
    8. '(resultado' → logprob: -16.285240173339844
    9. '()' → logprob: -16.660240173339844
    10. '(results' → logprob: -16.660240173339844

Token 328: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.5
    3. '))' → logprob: -19.25
    4. ')`' → logprob: -20.375
    5. '())' → logprob: -21.0
    6. ')
' → logprob: -21.375
    7. '()' → logprob: -21.625
    8. ')}' → logprob: -22.875
    9. '')' → logprob: -23.125
    10. '）' → logprob: -23.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 326
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 178
Précision stricte (1ère position): 22.70%
Précision adaptée (1ère position): 22.70%
Précision (top 10): 54.60%
================================================================================
