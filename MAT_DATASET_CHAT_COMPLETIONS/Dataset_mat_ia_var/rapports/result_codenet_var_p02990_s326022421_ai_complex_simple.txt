================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import functools
import operator
import itertools

MOD = int('9' * 9 + '7')  # 1000000007

# Reimplement framod in maximally convoluted fashion
def framod(n, mod, a=1):
    # Using functools.reduce, itertools.chain, operator.mul, and unnecessary lambda
    return functools.reduce(
        lambda x, y: (x * y) % mod,
        itertools.islice(itertools.accumulate(itertools.cycle([1])), 1, n + 1),
        a
    ) if n == 0 else functools.reduce(lambda x, y: (x * y) % mod, range(1, n + 1), a)

# Exponentiation by squaring, using recursion and lambdas wrapped in a list comprehension
def power(n, r, mod):
    return (
        (lambda f: f(f, n, r, mod))(
            lambda self, n, r, mod: 1 if r == 0 else (
                self(self, n * n % mod, r // 2, mod) if r % 2 == 0 else n * self(self, n, r - 1, mod) % mod
            )
        )
    )

# Combinatorial with modular inverse, written as a single expression
def comb(n, k, mod):
    return (
        lambda a, b, c: (a * power(b, mod - 2, mod) * power(c, mod - 2, mod)) % mod
    )(framod(n, mod), framod(k, mod), framod(n - k, mod))

# Input parsing using next and map, print using list comprehension for side effects
def main():
    N, K = (lambda l: tuple(map(int, l[0].rstrip().decode().split())))([sys.stdin.buffer.readline()])
    _ = [
        print(
            ((comb(N - K + 1, i, MOD) * comb(K - 1, i - 1, MOD)) % MOD)
            if i <= N - K + 1 else 0
        )
        for i in range(1, K + 1)
    ]

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.259079363080673e-05
    2. 'os' → logprob: -11.375012397766113
    3. ' math' → logprob: -15.000012397766113
    4. '"os' → logprob: -15.375012397766113
    5. ' re' → logprob: -15.875012397766113
    6. ' json' → logprob: -16.00001335144043
    7. '_os' → logprob: -17.00001335144043
    8. '	os' → logprob: -17.00001335144043
    9. ' ' → logprob: -17.25001335144043
    10. ' argparse' → logprob: -17.25001335144043

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05557388439774513
    2. '\' → logprob: -3.3055739402770996
    3. '@' → logprob: -5.5555739402771
    4. '\n' → logprob: -5.5555739402771
    5. 'import' → logprob: -5.9305739402771
    6. ',' → logprob: -6.4305739402771
    7. '
' → logprob: -6.8055739402771
    8. '<|end|>' → logprob: -7.0555739402771
    9. 'def' → logprob: -7.8055739402771
    10. '.
' → logprob: -7.8055739402771

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.023702995851635933
    2. '\' → logprob: -4.523703098297119
    3. 'import' → logprob: -5.773703098297119
    4. 'def' → logprob: -6.148703098297119
    5. '```' → logprob: -6.648703098297119
    6. ',' → logprob: -6.898703098297119
    7. '\n' → logprob: -7.023703098297119
    8. '@' → logprob: -7.148703098297119
    9. ' as' → logprob: -7.273703098297119
    10. '.
' → logprob: -8.023702621459961

Token 7: ' operator' (ID: 11019)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.10593535751104355
    2. ' operator' → logprob: -2.6059353351593018
    3. 'os' → logprob: -4.980935573577881
    4. ' itertools' → logprob: -4.980935573577881
    5. 'operator' → logprob: -5.605935573577881
    6. ' collections' → logprob: -5.855935573577881
    7. ' threading' → logprob: -6.605935573577881
    8. ' io' → logprob: -6.980935573577881
    9. ' math' → logprob: -6.980935573577881
    10. ' json' → logprob: -6.980935573577881

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003337886882945895
    2. ',' → logprob: -6.878337860107422
    3. '\' → logprob: -7.753337860107422
    4. ' as' → logprob: -7.878337860107422
    5. 'as' → logprob: -8.253337860107422
    6. '\n' → logprob: -8.878337860107422
    7. 'import' → logprob: -9.003337860107422
    8. '.
' → logprob: -9.003337860107422
    9. '<|end|>' → logprob: -9.003337860107422
    10. '#' → logprob: -9.003337860107422

Token 9: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004591518547385931
    2. ',' → logprob: -6.379591464996338
    3. '#' → logprob: -7.504591464996338
    4. '\' → logprob: -7.629591464996338
    5. 'def' → logprob: -7.754591464996338
    6. '.
' → logprob: -8.504591941833496
    7. '@' → logprob: -8.879591941833496
    8. '=' → logprob: -8.879591941833496
    9. '(' → logprob: -8.879591941833496
    10. '```' → logprob: -9.004591941833496

Token 10: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.4350588023662567
    2. ' math' → logprob: -1.935058832168579
    3. ' collections' → logprob: -2.310058832168579
    4. ' os' → logprob: -2.935058832168579
    5. 'collections' → logprob: -4.18505859375
    6. 'math' → logprob: -4.18505859375
    7. 'os' → logprob: -4.43505859375
    8. ' re' → logprob: -5.81005859375
    9. 'it' → logprob: -6.18505859375
    10. ' threading' → logprob: -6.56005859375

Token 11: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002031065057963133
    2. '.
' → logprob: -7.627030849456787
    3. '\' → logprob: -8.002031326293945
    4. 'import' → logprob: -8.252031326293945
    5. ',' → logprob: -8.627031326293945
    6. 'def' → logprob: -8.627031326293945
    7. '```' → logprob: -8.752031326293945
    8. '.

' → logprob: -9.627031326293945
    9. '\n' → logprob: -9.752031326293945
    10. 'from' → logprob: -10.127031326293945

Token 12: 'MOD' (ID: 52135)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003154546022415161
    2. 'def' → logprob: -6.753154754638672
    3. ',' → logprob: -7.878154754638672
    4. '#' → logprob: -8.378154754638672
    5. '=' → logprob: -8.378154754638672
    6. '(' → logprob: -8.753154754638672
    7. '.
' → logprob: -8.753154754638672
    8. '```' → logprob: -8.878154754638672
    9. 'from' → logprob: -9.003154754638672
    10. '\' → logprob: -9.253154754638672

Token 13: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5316133499145508
    2. ' =' → logprob: -0.9066133499145508
    3. '_' → logprob: -4.781613349914551
    4. ' ' → logprob: -10.65661334991455
    5. '_=' → logprob: -10.65661334991455
    6. '.' → logprob: -11.90661334991455
    7. ')' → logprob: -12.53161334991455
    8. ',' → logprob: -12.65661334991455
    9. '=

' → logprob: -13.15661334991455
    10. ' =
' → logprob: -13.78161334991455

Token 14: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22662754356861115
    2. '10' → logprob: -1.6016275882720947
    3. '100' → logprob: -6.726627349853516
    4. '1' → logprob: -11.476627349853516
    5. 'int' → logprob: -13.726627349853516
    6. ' ' → logprob: -14.226627349853516
    7. '998' → logprob: -14.226627349853516
    8. '0' → logprob: -14.601627349853516
    9. ' (' → logprob: -14.726627349853516
    10. '_' → logprob: -15.476627349853516

Token 15: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00046558488975279033
    2. '('' → logprob: -7.875465393066406
    3. '32' → logprob: -10.125465393066406
    4. '("' → logprob: -11.625465393066406
    5. '()' → logprob: -11.875465393066406
    6. ''' → logprob: -12.500465393066406
    7. ' (' → logprob: -12.625465393066406
    8. '(pow' → logprob: -13.000465393066406
    9. '```' → logprob: -13.125465393066406
    10. '(sys' → logprob: -13.250465393066406

Token 16: '9' (ID: 24)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05622738227248192
    2. '100' → logprob: -3.431227445602417
    3. '(' → logprob: -3.931227445602417
    4. ' ' → logprob: -6.056227207183838
    5. '10' → logprob: -9.056227684020996
    6. '0' → logprob: -9.806227684020996
    7. '3' → logprob: -10.556227684020996
    8. '2' → logprob: -11.056227684020996
    9. ' (' → logprob: -11.181227684020996
    10. '"' → logprob: -11.181227684020996

Token 17: ''' (ID: 6)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -0.03491545841097832
    2. '000' → logprob: -3.5349154472351074
    3. '7' → logprob: -6.784915447235107
    4. '99' → logprob: -7.034915447235107
    5. '007' → logprob: -7.034915447235107
    6. '9' → logprob: -7.284915447235107
    7. '0' → logprob: -7.784915447235107
    8. '')' → logprob: -8.034915924072266
    9. '998' → logprob: -8.784915924072266
    10. ''' → logprob: -8.784915924072266

Token 18: ' *' (ID: 425)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '999' → logprob: -0.0014731991104781628
    2. '000' → logprob: -7.501473426818848
    3. '9' → logprob: -8.251473426818848
    4. '_' → logprob: -9.001473426818848
    5. '99' → logprob: -9.126473426818848
    6. '+' → logprob: -9.501473426818848
    7. '7' → logprob: -9.501473426818848
    8. '0' → logprob: -9.626473426818848
    9. '007' → logprob: -9.876473426818848
    10. ''' → logprob: -10.001473426818848

Token 19: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.047877732664346695
    2. '12' → logprob: -4.047877788543701
    3. '10' → logprob: -4.422877788543701
    4. '11' → logprob: -5.547877788543701
    5. ' ' → logprob: -6.172877788543701
    6. '8' → logprob: -6.172877788543701
    7. '13' → logprob: -6.547877788543701
    8. '6' → logprob: -6.672877788543701
    9. '7' → logprob: -6.672877788543701
    10. '14' → logprob: -6.797877788543701

Token 20: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0420374795794487
    2. '10' → logprob: -4.542037487030029
    3. '12' → logprob: -4.667037487030029
    4. '11' → logprob: -5.417037487030029
    5. '18' → logprob: -5.417037487030029
    6. '13' → logprob: -6.042037487030029
    7. '14' → logprob: -6.292037487030029
    8. '15' → logprob: -6.417037487030029
    9. '8' → logprob: -6.917037487030029
    10. '999' → logprob: -6.917037487030029

Token 21: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15827545523643494
    2. '+' → logprob: -2.1582753658294678
    3. '9' → logprob: -4.408275604248047
    4. '999' → logprob: -4.408275604248047
    5. ' +' → logprob: -5.908275604248047
    6. ' )' → logprob: -6.658275604248047
    7. ')+' → logprob: -6.658275604248047
    8. '99' → logprob: -7.283275604248047
    9. '0' → logprob: -9.033275604248047
    10. '+)' → logprob: -9.283275604248047

Token 22: ' '' (ID: 461)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.6558226346969604
    2. ''' → logprob: -1.6558226346969604
    3. '7' → logprob: -2.03082275390625
    4. '+' → logprob: -2.40582275390625
    5. '9' → logprob: -3.28082275390625
    6. '1' → logprob: -4.28082275390625
    7. '')' → logprob: -5.03082275390625
    8. '3' → logprob: -5.90582275390625
    9. '0' → logprob: -6.15582275390625
    10. ''\' → logprob: -6.53082275390625

Token 23: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.002000961685553193
    2. '1' → logprob: -6.62700080871582
    3. '+' → logprob: -7.62700080871582
    4. '')' → logprob: -9.37700080871582
    5. ''' → logprob: -9.87700080871582
    6. '9' → logprob: -11.25200080871582
    7. '3' → logprob: -11.50200080871582
    8. '+')' → logprob: -11.62700080871582
    9. ' +' → logprob: -12.00200080871582
    10. ''+' → logprob: -12.87700080871582

Token 24: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006243953830562532
    2. '\n' → logprob: -8.125624656677246
    3. '')' → logprob: -8.375624656677246
    4. ')
' → logprob: -9.750624656677246
    5. ')\' → logprob: -11.375624656677246
    6. '3' → logprob: -11.625624656677246
    7. '9' → logprob: -12.500624656677246
    8. '```' → logprob: -12.625624656677246
    9. ' )' → logprob: -13.250624656677246
    10. '\' → logprob: -13.500624656677246

Token 25: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32556843757629395
    2. '\n' → logprob: -2.325568437576294
    3. '*' → logprob: -2.575568437576294
    4. '' → logprob: -2.950568437576294
    5. ')' → logprob: -4.075568199157715
    6. '
' → logprob: -4.575568199157715
    7. '+' → logprob: -4.700568199157715
    8. ' 
' → logprob: -5.825568199157715
    9. '\' → logprob: -6.075568199157715
    10. '**' → logprob: -6.200568199157715

Token 26: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07444459944963455
    2. '\n' → logprob: -3.324444532394409
    3. '
' → logprob: -4.324444770812988
    4. ')' → logprob: -4.949444770812988
    5. '' → logprob: -4.949444770812988
    6. '*' → logprob: -5.574444770812988
    7. ' 
' → logprob: -6.574444770812988
    8. '```' → logprob: -7.574444770812988
    9. '+' → logprob: -7.699444770812988
    10. '

' → logprob: -7.949444770812988

Token 27: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8059254884719849
    2. ' ' → logprob: -0.9309254884719849
    3. '\n' → logprob: -2.3059253692626953
    4. ' +' → logprob: -3.1809253692626953
    5. '<|end|>' → logprob: -5.180925369262695
    6. ' \' → logprob: -5.555925369262695
    7. '\' → logprob: -6.805925369262695
    8. ' =' → logprob: -7.055925369262695
    9. '```' → logprob: -7.180925369262695
    10. '100' → logprob: -7.430925369262695

Token 28: '100' (ID: 1353)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030785739421844482
    2. '<|end|>' → logprob: -4.53078556060791
    3. ' ' → logprob: -5.28078556060791
    4. '```' → logprob: -5.53078556060791
    5. '\n' → logprob: -6.15578556060791
    6. ' +' → logprob: -6.40578556060791
    7. '\' → logprob: -6.53078556060791
    8. ')' → logprob: -6.78078556060791
    9. '<|end|>' → logprob: -7.28078556060791
    10. '1' → logprob: -7.40578556060791

Token 29: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0004908377304673195
    2. '```' → logprob: -8.75049114227295
    3. '_' → logprob: -9.25049114227295
    4. ' ' → logprob: -10.00049114227295
    5. '0' → logprob: -10.25049114227295
    6. '7' → logprob: -10.50049114227295
    7. '+' → logprob: -10.50049114227295
    8. '9' → logprob: -10.62549114227295
    9. ''' → logprob: -11.25049114227295
    10. '**' → logprob: -11.50049114227295

Token 30: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.04319683834910393
    2. '007' → logprob: -3.1681969165802
    3. '009' → logprob: -9.293196678161621
    4. '0' → logprob: -10.293196678161621
    5. '+' → logprob: -10.543196678161621
    6. '003' → logprob: -11.168196678161621
    7. '00' → logprob: -11.668196678161621
    8. '```' → logprob: -11.668196678161621
    9. ' ' → logprob: -11.918196678161621
    10. '004' → logprob: -13.918196678161621

Token 31: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.2664456789934775e-06
    2. '+' → logprob: -14.500000953674316
    3. '07' → logprob: -14.875000953674316
    4. '9' → logprob: -15.125000953674316
    5. '007' → logprob: -16.750001907348633
    6. ' ' → logprob: -17.750001907348633
    7. '37' → logprob: -18.125001907348633
    8. '97' → logprob: -18.250001907348633
    9. '19' → logprob: -18.250001907348633
    10. '3' → logprob: -18.625001907348633

Token 32: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0915689766407013
    2. '

' → logprob: -2.841568946838379
    3. '\n' → logprob: -4.341568946838379
    4. '' → logprob: -5.091568946838379
    5. '\' → logprob: -5.466568946838379
    6. '
' → logprob: -5.841568946838379
    7. '*' → logprob: -7.091568946838379
    8. ')' → logprob: -8.091568946838379
    9. '```' → logprob: -8.466568946838379
    10. '#' → logprob: -8.466568946838379

Token 33: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30582937598228455
    2. '

' → logprob: -2.1808292865753174
    3. 'def' → logprob: -2.3058292865753174
    4. '\' → logprob: -4.0558295249938965
    5. '\n' → logprob: -4.4308295249938965
    6. '' → logprob: -5.1808295249938965
    7. '
' → logprob: -5.4308295249938965
    8. '#' → logprob: -6.1808295249938965
    9. ',' → logprob: -6.3058295249938965
    10. 'n' → logprob: -6.4308295249938965

Token 34: ' Re' (ID: 907)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03156626597046852
    2. ' def' → logprob: -4.031566143035889
    3. 'class' → logprob: -5.031566143035889
    4. 'from' → logprob: -5.781566143035889
    5. '#' → logprob: -6.406566143035889
    6. ' class' → logprob: -7.281566143035889
    7. 'n' → logprob: -7.656566143035889
    8. ' from' → logprob: -9.156566619873047
    9. 'input' → logprob: -9.156566619873047
    10. 'INF' → logprob: -9.156566619873047

Token 35: 'implement' (ID: 105849)
  Prédit: 'ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ad' → logprob: -1.89216148853302
    2. 'turn' → logprob: -1.89216148853302
    3. 'def' → logprob: -2.0171613693237305
    4. 'duce' → logprob: -2.1421613693237305
    5. 'solve' → logprob: -2.5171613693237305
    6. 'f' → logprob: -2.6421613693237305
    7. 'main' → logprob: -2.8921613693237305
    8. 'c' → logprob: -3.1421613693237305
    9. 'd' → logprob: -3.1421613693237305
    10. 'mainder' → logprob: -3.5171613693237305

Token 36: ' fram' (ID: 19795)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25030720233917236
    2. 'ing' → logprob: -1.8753072023391724
    3. ' def' → logprob: -3.375307083129883
    4. 'from' → logprob: -5.500307083129883
    5. 'pow' → logprob: -5.625307083129883
    6. '#' → logprob: -5.875307083129883
    7. 's' → logprob: -6.000307083129883
    8. 'class' → logprob: -6.375307083129883
    9. 'ed' → logprob: -6.375307083129883
    10. ' the' → logprob: -6.750307083129883

Token 37: 'od' (ID: 368)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.131707563996315
    2. 'e' → logprob: -2.1317076683044434
    3. 'ef' → logprob: -6.506707668304443
    4. 'es' → logprob: -7.631707668304443
    5. 'ing' → logprob: -8.131707191467285
    6. 'el' → logprob: -8.256707191467285
    7. 'eval' → logprob: -8.381707191467285
    8. 'ec' → logprob: -8.381707191467285
    9. 'eb' → logprob: -8.381707191467285
    10. 'ewel' → logprob: -8.631707191467285

Token 38: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07137621194124222
    2. '(' → logprob: -3.196376323699951
    3. ' def' → logprob: -4.946376323699951
    4. '_' → logprob: -4.946376323699951
    5. 'ular' → logprob: -6.571376323699951
    6. '[' → logprob: -7.071376323699951
    7. 'f' → logprob: -7.196376323699951
    8. ' ' → logprob: -7.196376323699951
    9. '.' → logprob: -7.321376323699951
    10. 'ulate' → logprob: -7.321376323699951

Token 39: ' maxim' (ID: 29045)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4056655466556549
    2. 'python' → logprob: -1.6556655168533325
    3. ' python' → logprob: -3.780665636062622
    4. ' def' → logprob: -3.905665636062622
    5. ' Python' → logprob: -4.155665397644043
    6. 'Python' → logprob: -4.280665397644043
    7. 'pow' → logprob: -4.405665397644043
    8. 'a' → logprob: -4.530665397644043
    9. 'math' → logprob: -5.280665397644043
    10. 'range' → logprob: -5.280665397644043

Token 40: 'ally' (ID: 2146)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.02405300922691822
    2. 'al' → logprob: -4.14905309677124
    3. 'a' → logprob: -6.02405309677124
    4. 'u' → logprob: -6.64905309677124
    5. 'ul' → logprob: -6.77405309677124
    6. 'def' → logprob: -7.39905309677124
    7. 'e' → logprob: -7.52405309677124
    8. 'ize' → logprob: -8.149052619934082
    9. '```' → logprob: -8.774052619934082
    10. 'un' → logprob: -9.024052619934082

Token 41: ' convol' (ID: 191866)
  Prédit: 'ized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.7055485844612122
    2. 'efficient' → logprob: -1.5805485248565674
    3. 'optimized' → logprob: -2.5805485248565674
    4. 'ally' → logprob: -3.2055485248565674
    5. 'functional' → logprob: -3.3305485248565674
    6. ' functional' → logprob: -4.3305487632751465
    7. ' optimized' → logprob: -4.7055487632751465
    8. 'speed' → logprob: -4.7055487632751465
    9. 'a' → logprob: -4.7055487632751465
    10. 'import' → logprob: -4.8305487632751465

Token 42: 'uted' (ID: 26369)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.545250654220581
    2. 'e' → logprob: -0.920250654220581
    3. 'al' → logprob: -4.79525089263916
    4. 'ol' → logprob: -4.92025089263916
    5. 'ent' → logprob: -6.29525089263916
    6. 'ing' → logprob: -6.92025089263916
    7. 'ex' → logprob: -7.29525089263916
    8. '```' → logprob: -7.42025089263916
    9. 'olved' → logprob: -7.42025089263916
    10. 'eval' → logprob: -8.79525089263916

Token 43: ' fashion' (ID: 12808)
  Prédit: ' way'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' way' → logprob: -0.5708233714103699
    2. ' fashion' → logprob: -1.5708234310150146
    3. ' ways' → logprob: -2.6958234310150146
    4. ' form' → logprob: -2.8208234310150146
    5. 'def' → logprob: -3.1958234310150146
    6. ' def' → logprob: -4.5708231925964355
    7. 'fashion' → logprob: -4.6958231925964355
    8. ' manner' → logprob: -4.9458231925964355
    9. ' and' → logprob: -5.0708231925964355
    10. ' code' → logprob: -5.4458231925964355

Token 44: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4702666997909546
    2. 'def' → logprob: -1.0952666997909546
    3. ':' → logprob: -4.595266819000244
    4. '_' → logprob: -4.720266819000244
    5. 'de' → logprob: -5.095266819000244
    6. '\' → logprob: -5.345266819000244
    7. '
' → logprob: -5.720266819000244
    8. '' → logprob: -5.845266819000244
    9. ' def' → logprob: -7.720266819000244
    10. '(' → logprob: -7.720266819000244

Token 45: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026828253641724586
    2. 'd' → logprob: -4.651828289031982
    3. 'de' → logprob: -4.901828289031982
    4. '
' → logprob: -5.276828289031982
    5. ' def' → logprob: -6.151828289031982
    6. '

' → logprob: -8.026827812194824
    7. '_' → logprob: -8.026827812194824
    8. '\' → logprob: -8.151827812194824
    9. 'f' → logprob: -8.526827812194824
    10. ':' → logprob: -9.026827812194824

Token 46: ' fram' (ID: 19795)
  Prédit: ' fram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fram' → logprob: -0.3714052736759186
    2. 'fram' → logprob: -1.3714052438735962
    3. ' frame' → logprob: -3.9964053630828857
    4. ' fra' → logprob: -4.246405124664307
    5. ' ' → logprob: -5.121405124664307
    6. 'fr' → logprob: -6.058905124664307
    7. ' fran' → logprob: -6.308905124664307
    8. 'frame' → logprob: -6.433905124664307
    9. 'fra' → logprob: -6.496405124664307
    10. ' fr' → logprob: -6.746405124664307

Token 47: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.00016420685278717428
    2. 'o' → logprob: -9.625164031982422
    3. 'mod' → logprob: -10.000164031982422
    4. 'ed' → logprob: -10.375164031982422
    5. 'e' → logprob: -12.500164031982422
    6. 'odd' → logprob: -12.625164031982422
    7. 'odule' → logprob: -13.250164031982422
    8. '```' → logprob: -13.625164031982422
    9. 'odb' → logprob: -13.625164031982422
    10. 'од' → logprob: -13.875164031982422

Token 48: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3484848141670227
    2. '(x' → logprob: -2.098484754562378
    3. '(a' → logprob: -2.473484754562378
    4. '(n' → logprob: -2.598484754562378
    5. '(*' → logprob: -5.223484992980957
    6. '(num' → logprob: -5.973484992980957
    7. '(s' → logprob: -6.473484992980957
    8. '(base' → logprob: -6.973484992980957
    9. '(number' → logprob: -7.098484992980957
    10. '(f' → logprob: -8.098484992980957

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01404503546655178
    2. '):' → logprob: -4.889045238494873
    3. ' ,' → logprob: -5.264045238494873
    4. ')' → logprob: -7.639045238494873
    5. ':' → logprob: -7.889045238494873
    6. ' ' → logprob: -9.389044761657715
    7. ' ):' → logprob: -9.389044761657715
    8. ' :' → logprob: -10.139044761657715
    9. ',n' → logprob: -10.514044761657715
    10. ',
' → logprob: -11.014044761657715

Token 50: ' mod' (ID: 1812)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.141964077949524
    2. ' k' → logprob: -1.266964077949524
    3. 'k' → logprob: -1.391964077949524
    4. 'm' → logprob: -2.0169639587402344
    5. ' r' → logprob: -5.391963958740234
    6. ' p' → logprob: -5.766963958740234
    7. 'r' → logprob: -6.516963958740234
    8. 'p' → logprob: -6.891963958740234
    9. ' mod' → logprob: -6.891963958740234
    10. 'mod' → logprob: -6.891963958740234

Token 51: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06718282401561737
    2. ',' → logprob: -2.817182779312134
    3. ')' → logprob: -5.442183017730713
    4. '=' → logprob: -7.942183017730713
    5. ' ):' → logprob: -8.067182540893555
    6. ':' → logprob: -9.317182540893555
    7. '):
' → logprob: -10.317182540893555
    8. ' ,' → logprob: -10.692182540893555
    9. '):
' → logprob: -11.442182540893555
    10. ')=' → logprob: -11.817182540893555

Token 52: ' a' (ID: 261)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -2.047349691390991
    2. ' f' → logprob: -2.172349691390991
    3. ' acc' → logprob: -2.172349691390991
    4. ' cache' → logprob: -2.172349691390991
    5. 'k' → logprob: -2.922349691390991
    6. 'f' → logprob: -3.047349691390991
    7. ' p' → logprob: -3.172349691390991
    8. ' r' → logprob: -3.297349691390991
    9. ' op' → logprob: -3.797349691390991
    10. ' m' → logprob: -3.797349691390991

Token 53: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14154334366321564
    2. ',' → logprob: -2.516543388366699
    3. 's' → logprob: -3.516543388366699
    4. '=' → logprob: -4.516543388366699
    5. ' ):' → logprob: -5.891543388366699
    6. 'x' → logprob: -6.016543388366699
    7. 'rray' → logprob: -7.016543388366699
    8. ':' → logprob: -7.391543388366699
    9. 'l' → logprob: -7.641543388366699
    10. ' ,' → logprob: -8.1415433883667

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7942429780960083
    2. '0' → logprob: -1.4192429780960083
    3. ' ' → logprob: -1.9192429780960083
    4. 'n' → logprob: -3.4192428588867188
    5. '[]' → logprob: -3.5442428588867188
    6. '[' → logprob: -4.044242858886719
    7. ' None' → logprob: -4.544242858886719
    8. 'None' → logprob: -4.794242858886719
    9. ' n' → logprob: -4.919242858886719
    10. '[])' → logprob: -5.169242858886719

Token 55: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3159812390804291
    2. '):' → logprob: -1.3159812688827515
    3. ')' → logprob: -6.815981388092041
    4. ' ):' → logprob: -7.190981388092041
    5. ' ,' → logprob: -7.315981388092041
    6. ',
' → logprob: -10.315980911254883
    7. ',n' → logprob: -10.315980911254883
    8. ',b' → logprob: -10.815980911254883
    9. '):
' → logprob: -10.815980911254883
    10. '=' → logprob: -11.440980911254883

Token 56: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13223043084144592
    2. ',' → logprob: -2.757230520248413
    3. ' :' → logprob: -2.882230520248413
    4. ' ,' → logprob: -6.382230281829834
    5. ' ' → logprob: -7.507230281829834
    6. '):' → logprob: -7.757230281829834
    7. ':
' → logprob: -7.882230281829834
    8. ' if' → logprob: -7.882230281829834
    9. ' :
' → logprob: -8.007230758666992
    10. ')' → logprob: -9.382230758666992

Token 57: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3074623942375183
    2. '   ' → logprob: -2.182462453842163
    3. 'if' → logprob: -2.682462453842163
    4. ' for' → logprob: -3.182462453842163
    5. ' return' → logprob: -4.932462215423584
    6. ' result' → logprob: -5.307462215423584
    7. ' ' → logprob: -5.432462215423584
    8. ' while' → logprob: -5.807462215423584
    9. 'for' → logprob: -5.932462215423584
    10. 'def' → logprob: -6.182462215423584

Token 58: ' Using' (ID: 17511)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7770951986312866
    2. 'if' → logprob: -1.9020951986312866
    3. ' for' → logprob: -2.277095317840576
    4. 'for' → logprob: -2.902095317840576
    5. ' result' → logprob: -3.277095317840576
    6. ' while' → logprob: -3.402095317840576
    7. 'result' → logprob: -3.527095317840576
    8. ' res' → logprob: -3.777095317840576
    9. 'r' → logprob: -3.902095317840576
    10. ' r' → logprob: -3.902095317840576

Token 59: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.42673489451408386
    2. 'pow' → logprob: -2.1767349243164062
    3. 'a' → logprob: -2.9267349243164062
    4. 'operator' → logprob: -3.4267349243164062
    5. ' functools' → logprob: -3.6767349243164062
    6. 'div' → logprob: -3.9267349243164062
    7. 'reduce' → logprob: -4.051734924316406
    8. 'lambda' → logprob: -4.051734924316406
    9. 'bin' → logprob: -4.676734924316406
    10. 'sum' → logprob: -5.301734924316406

Token 60: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.07906592637300491
    2. 'reduce' → logprob: -3.329066038131714
    3. ' reduce' → logprob: -4.079065799713135
    4. '.partial' → logprob: -4.204065799713135
    5. '   ' → logprob: -5.579065799713135
    6. '.wrap' → logprob: -6.704065799713135
    7. 'def' → logprob: -6.954065799713135
    8. '_reduce' → logprob: -7.579065799713135
    9. ' l' → logprob: -8.204066276550293
    10. '```' → logprob: -8.579066276550293

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3260628879070282
    2. '(lambda' → logprob: -1.9510629177093506
    3. '(' → logprob: -2.4510629177093506
    4. ' ,' → logprob: -4.0760626792907715
    5. ' and' → logprob: -4.8260626792907715
    6. '(
' → logprob: -5.7010626792907715
    7. 'lambda' → logprob: -5.8260626792907715
    8. ' (' → logprob: -5.9510626792907715
    9. ' for' → logprob: -6.0760626792907715
    10. '   ' → logprob: -6.0760626792907715

Token 62: ' itertools' (ID: 103178)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6150563359260559
    2. ' lambda' → logprob: -0.8650563359260559
    3. 'operator' → logprob: -4.11505651473999
    4. ' operator' → logprob: -4.24005651473999
    5. '(lambda' → logprob: -6.36505651473999
    6. ' functools' → logprob: -6.36505651473999
    7. ')' → logprob: -6.61505651473999
    8. '   ' → logprob: -7.36505651473999
    9. 'op' → logprob: -8.490056037902832
    10. ' itertools' → logprob: -8.802556037902832

Token 63: '.chain' (ID: 103950)
  Prédit: '.chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.chain' → logprob: -0.0564325712621212
    2. '.acc' → logprob: -3.1814324855804443
    3. '.c' → logprob: -5.181432723999023
    4. '.count' → logprob: -5.556432723999023
    5. '.st' → logprob: -6.431432723999023
    6. '.product' → logprob: -7.931432723999023
    7. '.filter' → logprob: -8.056432723999023
    8. '.reduce' → logprob: -8.306432723999023
    9. ',' → logprob: -8.431432723999023
    10. '.take' → logprob: -8.556432723999023

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07526575028896332
    2. '(' → logprob: -3.575265645980835
    3. ' and' → logprob: -4.200265884399414
    4. '(it' → logprob: -5.200265884399414
    5. '(chain' → logprob: -5.450265884399414
    6. '   ' → logprob: -5.575265884399414
    7. '(
' → logprob: -5.825265884399414
    8. ')' → logprob: -6.200265884399414
    9. ' ,' → logprob: -6.200265884399414
    10. '(range' → logprob: -6.450265884399414

Token 65: ' operator' (ID: 11019)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -1.0786433219909668
    2. 'map' → logprob: -1.5786433219909668
    3. ' itertools' → logprob: -1.8286433219909668
    4. 'operator' → logprob: -2.828643321990967
    5. ' and' → logprob: -2.828643321990967
    6. ' operator' → logprob: -2.953643321990967
    7. ' functools' → logprob: -3.078643321990967
    8. 'it' → logprob: -4.078643321990967
    9. 'enumer' → logprob: -4.828643321990967
    10. 'fun' → logprob: -4.953643321990967

Token 66: '.mul' (ID: 106202)
  Prédit: '.chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.chain' → logprob: -0.3822987377643585
    2. '.mul' → logprob: -1.6322987079620361
    3. '.concat' → logprob: -3.507298707962036
    4. '.filter' → logprob: -3.632298707962036
    5. '.is' → logprob: -4.632298946380615
    6. '.im' → logprob: -5.007298946380615
    7. '.' → logprob: -5.132298946380615
    8. '.operator' → logprob: -5.257298946380615
    9. '.it' → logprob: -5.757298946380615
    10. '.and' → logprob: -5.882298946380615

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.051989853382110596
    2. '):' → logprob: -4.301990032196045
    3. ')' → logprob: -4.926990032196045
    4. '(' → logprob: -4.926990032196045
    5. ' ,' → logprob: -4.926990032196045
    6. '   ' → logprob: -5.301990032196045
    7. '(range' → logprob: -6.051990032196045
    8. ' and' → logprob: -6.551990032196045
    9. '(chain' → logprob: -6.676990032196045
    10. ',
' → logprob: -7.051990032196045

Token 68: ' and' (ID: 326)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7578778862953186
    2. 'it' → logprob: -1.7578778266906738
    3. ')' → logprob: -2.132877826690674
    4. 'operator' → logprob: -3.007877826690674
    5. 'fun' → logprob: -3.507877826690674
    6. 'filter' → logprob: -3.507877826690674
    7. 'map' → logprob: -3.757877826690674
    8. ' range' → logprob: -3.757877826690674
    9. ' itertools' → logprob: -3.882877826690674
    10. 'lambda' → logprob: -4.382877826690674

Token 69: ' unnecessary' (ID: 42963)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3685427904129028
    2. 'it' → logprob: -1.4935427904129028
    3. 'fun' → logprob: -1.7435427904129028
    4. 'operator' → logprob: -2.1185426712036133
    5. ' itertools' → logprob: -2.4935426712036133
    6. 'map' → logprob: -3.4935426712036133
    7. ' range' → logprob: -3.7435426712036133
    8. ' functools' → logprob: -3.9935426712036133
    9. ' operator' → logprob: -4.618542671203613
    10. 'filter' → logprob: -4.868542671203613

Token 70: ' lambda' (ID: 27871)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.16894270479679108
    2. 'filter' → logprob: -2.54394268989563
    3. '(map' → logprob: -4.793942928314209
    4. ' map' → logprob: -4.793942928314209
    5. '(lambda' → logprob: -4.918942928314209
    6. 'operator' → logprob: -5.043942928314209
    7. 'lambda' → logprob: -5.043942928314209
    8. 'it' → logprob: -5.293942928314209
    9. '(re' → logprob: -5.418942928314209
    10. '(' → logprob: -5.418942928314209

Token 71: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7732933163642883
    2. 's' → logprob: -2.0232932567596436
    3. ' ,' → logprob: -2.2732932567596436
    4. '=' → logprob: -2.7732932567596436
    5. ' (' → logprob: -3.1482932567596436
    6. ' =' → logprob: -3.5232932567596436
    7. ')' → logprob: -3.6482932567596436
    8. '(' → logprob: -3.6482932567596436
    9. ':' → logprob: -3.8982932567596436
    10. ' s' → logprob: -4.398293495178223

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7511014938354492
    2. ',' → logprob: -1.5011014938354492
    3. ':' → logprob: -1.6261014938354492
    4. '):' → logprob: -4.126101493835449
    5. ':
' → logprob: -4.376101493835449
    6. '=' → logprob: -4.501101493835449
    7. '):
' → logprob: -4.501101493835449
    8. 's' → logprob: -4.876101493835449
    9. 'def' → logprob: -4.876101493835449
    10. '(' → logprob: -5.001101493835449

Token 73: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7226194143295288
    2. '   ' → logprob: -0.8476194143295288
    3. 'return' (adapté à ' return') → logprob: -2.4726195335388184
    4. ' sequence' → logprob: -8.72261905670166
    5. ' chain' → logprob: -8.84761905670166
    6. ' parts' → logprob: -8.84761905670166
    7. ' seq' → logprob: -8.84761905670166
    8. ' result' → logprob: -9.47261905670166
    9. ' lst' → logprob: -9.47261905670166
    10. ' elements' → logprob: -9.72261905670166

Token 74: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.2016189694404602
    2. 'fun' → logprob: -1.7016189098358154
    3. ' fun' → logprob: -8.576619148254395
    4. 'int' → logprob: -12.701619148254395
    5. ' int' → logprob: -12.826619148254395
    6. ' funct' → logprob: -13.076619148254395
    7. ' (' → logprob: -13.201619148254395
    8. ' ' → logprob: -13.576619148254395
    9. '(fun' → logprob: -14.076619148254395
    10. 'list' → logprob: -14.326619148254395

Token 75: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.000986604136414826
    2. '.' → logprob: -7.000986576080322
    3. ' .' → logprob: -10.00098705291748
    4. '.partial' → logprob: -11.50098705291748
    5. '.chain' → logprob: -12.00098705291748
    6. '.re' → logprob: -12.37598705291748
    7. '.reducer' → logprob: -13.50098705291748
    8. '.groupby' → logprob: -13.50098705291748
    9. '.red' → logprob: -14.12598705291748
    10. '.wrap' → logprob: -14.25098705291748

Token 76: '(
' (ID: 1607)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5281149744987488
    2. '(' → logprob: -1.2781150341033936
    3. '(operator' → logprob: -2.0281150341033936
    4. '(
' → logprob: -9.278115272521973
    5. '((' → logprob: -10.778115272521973
    6. ' (' → logprob: -11.528115272521973
    7. 'operator' → logprob: -12.028115272521973
    8. '(op' → logprob: -12.778115272521973
    9. '(f' → logprob: -13.278115272521973
    10. 'lambda' → logprob: -13.903115272521973

Token 77: '       ' (ID: 309)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.42813777923583984
    2. 'operator' → logprob: -1.4281377792358398
    3. '(lambda' → logprob: -2.67813777923584
    4. ' lambda' → logprob: -4.05313777923584
    5. ' operator' → logprob: -4.55313777923584
    6. '   ' → logprob: -5.05313777923584
    7. '(operator' → logprob: -5.30313777923584
    8. '	operator' → logprob: -8.17813777923584
    9. ' (' → logprob: -9.55313777923584
    10. ' ' → logprob: -9.80313777923584

Token 78: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.33721262216567993
    2. '(lambda' → logprob: -1.5872125625610352
    3. ' lambda' → logprob: -3.087212562561035
    4. 'operator' → logprob: -3.962212562561035
    5. '   ' → logprob: -4.337212562561035
    6. ' operator' → logprob: -6.587212562561035
    7. ' (' → logprob: -7.087212562561035
    8. '(operator' → logprob: -7.212212562561035
    9. '=lambda' → logprob: -8.087212562561035
    10. '(' → logprob: -8.837212562561035

Token 79: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14859095215797424
    2. 'x' → logprob: -2.6485910415649414
    3. ' acc' → logprob: -3.2735910415649414
    4. 'acc' → logprob: -4.398591041564941
    5. ' a' → logprob: -4.523591041564941
    6. 'a' → logprob: -6.273591041564941
    7. ' lambda' → logprob: -6.773591041564941
    8. ' o' → logprob: -7.523591041564941
    9. '(acc' → logprob: -7.773591041564941
    10. 'lambda' → logprob: -7.898591041564941

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002833848411682993
    2. ',x' → logprob: -9.000283241271973
    3. ',y' → logprob: -9.625283241271973
    4. ' ,' → logprob: -10.500283241271973
    5. 'a' → logprob: -11.250283241271973
    6. 'y' → logprob: -11.750283241271973
    7. '_,' → logprob: -11.875283241271973
    8. 'x' → logprob: -12.500283241271973
    9. ',n' → logprob: -12.625283241271973
    10. ',a' → logprob: -12.750283241271973

Token 81: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4742639660835266
    2. 'y' → logprob: -0.9742639660835266
    3. ' ' → logprob: -9.099264144897461
    4. ':' → logprob: -11.474264144897461
    5. 'x' → logprob: -11.849264144897461
    6. 'a' → logprob: -11.849264144897461
    7. '	y' → logprob: -12.036764144897461
    8. '   ' → logprob: -12.349264144897461
    9. '  ' → logprob: -12.536764144897461
    10. 'z' → logprob: -12.724264144897461

Token 82: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003063391661271453
    2. ',' → logprob: -6.253063201904297
    3. ' :' → logprob: -6.878063201904297
    4. ',:' → logprob: -9.753063201904297
    5. '=' → logprob: -11.878063201904297
    6. ':x' → logprob: -11.878063201904297
    7. 'operator' → logprob: -12.003063201904297
    8. '_:' → logprob: -12.503063201904297
    9. 'y' → logprob: -12.628063201904297
    10. 'x' → logprob: -13.128063201904297

Token 83: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3349533677101135
    2. '(x' → logprob: -1.5849533081054688
    3. '(' → logprob: -3.3349533081054688
    4. '(operator' → logprob: -3.3349533081054688
    5. 'x' → logprob: -5.709953308105469
    6. ' x' → logprob: -6.459953308105469
    7. 'operator' → logprob: -6.709953308105469
    8. ' operator' → logprob: -6.834953308105469
    9. '(lambda' → logprob: -7.084953308105469
    10. '(op' → logprob: -8.584953308105469

Token 84: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03247716650366783
    2. ' x' → logprob: -3.6574771404266357
    3. '(x' → logprob: -5.157477378845215
    4. ' (' → logprob: -8.157477378845215
    5. '(' → logprob: -9.407477378845215
    6. ' ' → logprob: -11.407477378845215
    7. '   ' → logprob: -12.157477378845215
    8. 'operator' → logprob: -12.469977378845215
    9. '  ' → logprob: -13.157477378845215
    10. '```' → logprob: -13.532477378845215

Token 85: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4745927155017853
    2. '*' → logprob: -0.9745926856994629
    3. '*y' → logprob: -7.599592685699463
    4. ' ' → logprob: -11.599593162536621
    5. 'y' → logprob: -13.599593162536621
    6. '**' → logprob: -13.974593162536621
    7. '```' → logprob: -14.474593162536621
    8. ' ' → logprob: -15.099593162536621
    9. '*x' → logprob: -15.162093162536621
    10. ' y' → logprob: -15.599593162536621

Token 86: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.34852319955825806
    2. 'y' → logprob: -1.2235231399536133
    3. ' ' → logprob: -10.598523139953613
    4. '(y' → logprob: -10.723523139953613
    5. ' (' → logprob: -10.973523139953613
    6. '(' → logprob: -12.848523139953613
    7. '	y' → logprob: -13.411023139953613
    8. ' ' → logprob: -13.723523139953613
    9. ')y' → logprob: -13.723523139953613
    10. ')' → logprob: -13.723523139953613

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001249281340278685
    2. '%' → logprob: -7.126249313354492
    3. ' %' → logprob: -8.501249313354492
    4. ')%' → logprob: -8.626249313354492
    5. ' )' → logprob: -10.001249313354492
    6. 'a' → logprob: -12.626249313354492
    7. '+' → logprob: -13.126249313354492
    8. '   ' → logprob: -13.376249313354492
    9. '%n' → logprob: -13.376249313354492
    10. '*' → logprob: -13.876249313354492

Token 88: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.12703919410705566
    2. '%' → logprob: -2.1270391941070557
    3. '%n' → logprob: -9.377038955688477
    4. ')' → logprob: -11.627038955688477
    5. ',' → logprob: -12.002038955688477
    6. '%c' → logprob: -13.002038955688477
    7. '%x' → logprob: -13.252038955688477
    8. '%s' → logprob: -13.377038955688477
    9. '%i' → logprob: -13.502038955688477
    10. ' ' → logprob: -13.752038955688477

Token 89: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.018279295414686203
    2. 'mod' → logprob: -4.018279075622559
    3. ' MOD' → logprob: -10.143279075622559
    4. '(mod' → logprob: -10.268279075622559
    5. 'MOD' → logprob: -10.893279075622559
    6. ' ' → logprob: -11.143279075622559
    7. ' ' → logprob: -11.143279075622559
    8. '	mod' → logprob: -12.518279075622559
    9. '_MOD' → logprob: -14.393279075622559
    10. ' мод' → logprob: -14.393279075622559

Token 90: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027230256819166243
    2. ' ,' → logprob: -8.625272750854492
    3. ',
' → logprob: -9.375272750854492
    4. ',

' → logprob: -12.625272750854492
    5. '   ' → logprob: -13.875272750854492
    6. ',
' → logprob: -14.375272750854492
    7. ',[' → logprob: -15.000272750854492
    8. ',list' → logprob: -15.000272750854492
    9. ',int' → logprob: -15.250272750854492
    10. '_,' → logprob: -15.250272750854492

Token 91: '       ' (ID: 309)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.22361209988594055
    2. 'range' → logprob: -1.8486120700836182
    3. ' itertools' → logprob: -3.473612070083618
    4. ' range' → logprob: -5.473612308502197
    5. '   ' → logprob: -6.223612308502197
    6. '(range' → logprob: -6.348612308502197
    7. '(it' → logprob: -6.473612308502197
    8. '[' → logprob: -7.473612308502197
    9. 'iter' → logprob: -7.598612308502197
    10. '[it' → logprob: -8.223611831665039

Token 92: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.10347243398427963
    2. ' itertools' → logprob: -2.3534724712371826
    3. '(it' → logprob: -5.8534722328186035
    4. 'range' → logprob: -9.603472709655762
    5. ' it' → logprob: -9.603472709655762
    6. 'iter' → logprob: -9.978472709655762
    7. '   ' → logprob: -10.353472709655762
    8. 'map' → logprob: -10.603472709655762
    9. ')' → logprob: -10.603472709655762
    10. '(' → logprob: -11.353472709655762

Token 93: '.is' (ID: 3109)
  Prédit: '.chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.chain' → logprob: -0.0013624972198158503
    2. '.' → logprob: -6.626362323760986
    3. ' .' → logprob: -10.751362800598145
    4. '.c' → logprob: -11.376362800598145
    5. '.ch' → logprob: -13.876362800598145
    6. '.groupby' → logprob: -14.126362800598145
    7. '.acc' → logprob: -14.751362800598145
    8. '.concatenate' → logprob: -16.001361846923828
    9. '.arange' → logprob: -16.001361846923828
    10. '.it' → logprob: -16.001361846923828

Token 94: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.000305310997646302
    2. '1' → logprob: -9.50030517578125
    3. '_' → logprob: -9.75030517578125
    4. '{' → logprob: -10.62530517578125
    5. 'lic' → logprob: -10.87530517578125
    6. 'ertools' → logprob: -11.25030517578125
    7. 'lices' → logprob: -11.37530517578125
    8. 'ce' → logprob: -11.37530517578125
    9. 'te' → logprob: -11.75030517578125
    10. 'c' → logprob: -11.87530517578125

Token 95: '(it' (ID: 29445)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.42903193831443787
    2. '(it' → logprob: -1.1790319681167603
    3. '(' → logprob: -3.5540318489074707
    4. '(operator' → logprob: -4.804031848907471
    5. '(iter' → logprob: -5.929031848907471
    6. '(
' → logprob: -7.304031848907471
    7. '(f' → logprob: -7.554031848907471
    8. ')(' → logprob: -9.054032325744629
    9. '(chain' → logprob: -9.179032325744629
    10. '((' → logprob: -9.554032325744629

Token 96: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.021202687174081802
    2. 'er' → logprob: -3.896202802658081
    3. 'ools' → logprob: -7.521202564239502
    4. 'tools' → logprob: -9.52120304107666
    5. 'ert' → logprob: -10.52120304107666
    6. 'erto' → logprob: -12.89620304107666
    7. 'ols' → logprob: -13.14620304107666
    8. '#' → logprob: -13.27120304107666
    9. '```' → logprob: -13.39620304107666
    10. '(' → logprob: -13.64620304107666

Token 97: '.acc' (ID: 70239)
  Prédit: '.chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.chain' → logprob: -0.6016831994056702
    2. '.count' → logprob: -0.8516831994056702
    3. '.acc' → logprob: -3.7266831398010254
    4. '.c' → logprob: -6.976683139801025
    5. '.per' → logprob: -8.851683616638184
    6. '.im' → logprob: -9.601683616638184
    7. '.operator' → logprob: -10.351683616638184
    8. '.product' → logprob: -10.476683616638184
    9. ' .' → logprob: -10.601683616638184
    10. '.' → logprob: -11.101683616638184

Token 98: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.008938945829868317
    2. 'um' → logprob: -5.633938789367676
    3. 'umulator' → logprob: -6.008938789367676
    4. 'er' → logprob: -6.633938789367676
    5. '```' → logprob: -7.633938789367676
    6. 'ertools' → logprob: -8.508938789367676
    7. 'ulator' → logprob: -9.008938789367676
    8. 'ulate' → logprob: -9.133938789367676
    9. 'umul' → logprob: -9.883938789367676
    10. 'mul' → logprob: -9.883938789367676

Token 99: '(it' (ID: 29445)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.14463217556476593
    2. '(it' → logprob: -2.14463210105896
    3. '(' → logprob: -4.644632339477539
    4. '(operator' → logprob: -5.644632339477539
    5. '(
' → logprob: -6.144632339477539
    6. '(iter' → logprob: -7.144632339477539
    7. '(lambda' → logprob: -7.769632339477539
    8. '(map' → logprob: -8.269632339477539
    9. '((' → logprob: -8.394632339477539
    10. 'it' → logprob: -9.019632339477539

Token 100: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.0822276696562767
    2. 'er' → logprob: -2.5822277069091797
    3. '(range' → logprob: -6.45722770690918
    4. 'erm' → logprob: -7.33222770690918
    5. 'erval' → logprob: -8.33222770690918
    6. 'range' → logprob: -8.83222770690918
    7. 'count' → logprob: -8.83222770690918
    8. '(count' → logprob: -8.83222770690918
    9. 'ert' → logprob: -9.95722770690918
    10. 'ermap' → logprob: -9.95722770690918

Token 101: '.c' (ID: 1081)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.04682367667555809
    2. '.chain' → logprob: -3.171823740005493
    3. '.repeat' → logprob: -5.671823501586914
    4. '.c' → logprob: -8.046823501586914
    5. '.acc' → logprob: -11.046823501586914
    6. '.im' → logprob: -11.421823501586914
    7. '.st' → logprob: -11.796823501586914
    8. '.is' → logprob: -12.671823501586914
    9. 'count' → logprob: -12.671823501586914
    10. '```' → logprob: -13.171823501586914

Token 102: 'ycle' (ID: 13317)
  Prédit: 'hain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hain' → logprob: -0.13333438336849213
    2. 'h' → logprob: -2.6333343982696533
    3. 'ycle' → logprob: -3.5083343982696533
    4. 'omb' → logprob: -4.508334159851074
    5. 'ham' → logprob: -5.508334159851074
    6. 'chain' → logprob: -5.633334159851074
    7. 'ount' → logprob: -5.758334159851074
    8. 'hart' → logprob: -7.383334159851074
    9. 'ounter' → logprob: -9.008334159851074
    10. 'om' → logprob: -9.383334159851074

Token 103: '([' (ID: 5194)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.22610460221767426
    2. '([' → logprob: -1.7261046171188354
    3. '((' → logprob: -4.101104736328125
    4. '(a' → logprob: -5.851104736328125
    5. '(it' → logprob: -6.101104736328125
    6. '(iter' → logprob: -6.351104736328125
    7. '(' → logprob: -8.226104736328125
    8. '(map' → logprob: -8.851104736328125
    9. '(([' → logprob: -9.101104736328125
    10. '(operator' → logprob: -9.101104736328125

Token 104: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00013917774776928127
    2. ' a' → logprob: -9.625139236450195
    3. 'n' → logprob: -10.625139236450195
    4. '1' → logprob: -10.625139236450195
    5. 'lambda' → logprob: -12.000139236450195
    6. '   ' → logprob: -12.125139236450195
    7. '2' → logprob: -12.250139236450195
    8. '(a' → logprob: -12.500139236450195
    9. 'i' → logprob: -14.125139236450195
    10. ' ' → logprob: -14.125139236450195

Token 105: '])),' (ID: 176552)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6575032472610474
    2. ' +' → logprob: -1.4075032472610474
    3. '+' → logprob: -1.7825032472610474
    4. '+n' → logprob: -3.157503128051758
    5. ']),' → logprob: -4.907503128051758
    6. '+i' → logprob: -4.907503128051758
    7. '+a' → logprob: -5.282503128051758
    8. ',n' → logprob: -6.282503128051758
    9. ' ,' → logprob: -6.532503128051758
    10. 'a' → logprob: -7.532503128051758

Token 106: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25427013635635376
    2. 'n' → logprob: -1.504270076751709
    3. '1' → logprob: -6.379270076751709
    4. ' ' → logprob: -7.504270076751709
    5. '0' → logprob: -9.629270553588867
    6. '	n' → logprob: -11.254270553588867
    7. '(n' → logprob: -12.754270553588867
    8. '   ' → logprob: -13.254270553588867
    9. ')n' → logprob: -13.379270553588867
    10. '2' → logprob: -13.379270553588867

Token 107: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008168928325176239
    2. ' n' → logprob: -7.250816822052002
    3. '1' → logprob: -9.37581729888916
    4. '0' → logprob: -11.25081729888916
    5. '   ' → logprob: -12.87581729888916
    6. 'int' → logprob: -12.87581729888916
    7. '(n' → logprob: -13.75081729888916
    8. '	n' → logprob: -14.37581729888916
    9. '
' → logprob: -14.87581729888916
    10. ' ' → logprob: -15.00081729888916

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010580566013231874
    2. ' ,' → logprob: -7.376058101654053
    3. ',n' → logprob: -7.751058101654053
    4. 'n' → logprob: -14.876057624816895
    5. '),' → logprob: -15.626057624816895
    6. ',
' → logprob: -15.626057624816895
    7. '0' → logprob: -15.751057624816895
    8. ' n' → logprob: -16.50105857849121
    9. '(n' → logprob: -16.75105857849121
    10. '1' → logprob: -16.87605857849121

Token 109: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05488848686218262
    2. 'n' → logprob: -2.9298884868621826
    3. ' ' → logprob: -12.679888725280762
    4. '	n' → logprob: -14.054888725280762
    5. ')n' → logprob: -14.304888725280762
    6. ')' → logprob: -15.054888725280762
    7. '(n' → logprob: -15.554888725280762
    8. '_n' → logprob: -15.554888725280762
    9. ' ' → logprob: -16.054887771606445
    10. '   ' → logprob: -16.054887771606445

Token 110: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043782223016023636
    2. ' +' → logprob: -3.1687822341918945
    3. '),' → logprob: -7.5437822341918945
    4. '))' → logprob: -8.793782234191895
    5. ')' → logprob: -9.793782234191895
    6. ',' → logprob: -10.918782234191895
    7. ' ),' → logprob: -11.918782234191895
    8. ')),' → logprob: -12.668782234191895
    9. ')))' → logprob: -12.918782234191895
    10. ')+' → logprob: -13.168782234191895

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076065086759626865
    2. ' ' → logprob: -4.882606506347656
    3. '2' → logprob: -15.757606506347656
    4. '   ' → logprob: -16.257606506347656
    5. ')' → logprob: -16.507606506347656
    6. '```' → logprob: -17.507606506347656
    7. '0' → logprob: -18.132606506347656
    8. '...' → logprob: -18.382606506347656
    9. ' ' → logprob: -18.570106506347656
    10. '  ' → logprob: -18.570106506347656

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. '```' → logprob: -15.500014305114746
    4. '   ' → logprob: -15.625014305114746
    5. '2' → logprob: -15.750014305114746
    6. ')' → logprob: -16.50001335144043
    7. 'def' → logprob: -18.12501335144043
    8. '0' → logprob: -18.31251335144043
    9. 'import' → logprob: -18.37501335144043
    10. '  ' → logprob: -18.37501335144043

Token 113: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13433636724948883
    2. '))' → logprob: -2.134336471557617
    3. '),' → logprob: -5.759336471557617
    4. ')))' → logprob: -5.759336471557617
    5. ',' → logprob: -6.884336471557617
    6. '))))' → logprob: -11.509336471557617
    7. ')
' → logprob: -11.634336471557617
    8. ')),' → logprob: -11.759336471557617
    9. ' )' → logprob: -12.134336471557617
    10. '   ' → logprob: -12.134336471557617

Token 114: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5177178382873535
    2. ' a' → logprob: -2.1427178382873535
    3. '       ' → logprob: -2.1427178382873535
    4. ')' → logprob: -2.2677178382873535
    5. '[' → logprob: -4.5177178382873535
    6. '1' → logprob: -4.7677178382873535
    7. '           ' → logprob: -4.7677178382873535
    8. 'n' → logprob: -4.7677178382873535
    9. '   ' → logprob: -4.8927178382873535
    10. ' n' → logprob: -5.5177178382873535

Token 115: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0004844154173042625
    2. ' a' → logprob: -7.750484466552734
    3. '1' → logprob: -9.875484466552734
    4. '   ' → logprob: -13.500484466552734
    5. ' ' → logprob: -14.250484466552734
    6. '	a' → logprob: -15.875484466552734
    7. '  ' → logprob: -16.125484466552734
    8. '(a' → logprob: -17.375484466552734
    9. '    ' → logprob: -17.625484466552734
    10. 'int' → logprob: -18.500484466552734

Token 116: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.12500286102295
    4. '),' → logprob: -14.75000286102295
    5. ' )' → logprob: -15.62500286102295
    6. ')))' → logprob: -16.250003814697266
    7. '))' → logprob: -16.250003814697266
    8. ')return' → logprob: -17.625003814697266
    9. ')...' → logprob: -17.625003814697266
    10. ');' → logprob: -17.750003814697266

Token 117: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ')
' → logprob: -11.50001335144043
    3. '   ' → logprob: -12.87501335144043
    4. ' )' → logprob: -14.75001335144043
    5. ')return' → logprob: -16.87501335144043
    6. '),' → logprob: -17.37501335144043
    7. ')#' → logprob: -17.37501335144043
    8. '))' → logprob: -18.00001335144043
    9. ')`' → logprob: -18.25001335144043
    10. ')

' → logprob: -18.37501335144043

Token 118: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' (adapté à ' )') → logprob: -8.65707261255011e-06
    2. ')
' → logprob: -11.875008583068848
    3. ' )' → logprob: -13.500008583068848
    4. ')return' → logprob: -15.500008583068848
    5. ')

' → logprob: -18.125009536743164
    6. '),' → logprob: -18.375009536743164
    7. '))' → logprob: -18.375009536743164
    8. ')#' → logprob: -18.500009536743164
    9. ' ' → logprob: -18.750009536743164
    10. ')`' → logprob: -19.000009536743164

Token 119: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24775342643260956
    2. '<|end|>' → logprob: -1.622753381729126
    3. '(' → logprob: -4.247753620147705
    4. '
' → logprob: -5.872753620147705
    5. '\n' → logprob: -6.747753620147705
    6. ' ' → logprob: -7.372753620147705
    7. '(n' → logprob: -7.497753620147705
    8. '```' → logprob: -7.622753620147705
    9. '<|end|>' → logprob: -7.872753620147705
    10. '*' → logprob: -8.247753143310547

Token 120: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1269678920507431
    2. 'n' → logprob: -2.1269679069519043
    3. ' isinstance' → logprob: -11.251967430114746
    4. ' ' → logprob: -11.751967430114746
    5. '(n' → logprob: -12.126967430114746
    6. '0' → logprob: -12.126967430114746
    7. ' ' → logprob: -12.626967430114746
    8. ' not' → logprob: -13.876967430114746
    9. '	n' → logprob: -13.876967430114746
    10. ' True' → logprob: -14.251967430114746

Token 121: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08046360313892365
    2. '>=' → logprob: -3.2054636478424072
    3. 'else' → logprob: -3.9554636478424072
    4. ' >' → logprob: -4.705463409423828
    5. ' else' → logprob: -4.955463409423828
    6. '!=' → logprob: -6.955463409423828
    7. ' >=' → logprob: -7.705463409423828
    8. '&gt' → logprob: -9.955463409423828
    9. ' !=' → logprob: -10.955463409423828
    10. '<|end|>' → logprob: -11.080463409423828

Token 122: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16046945750713348
    2. ' ' → logprob: -1.91046941280365
    3. '1' → logprob: -8.535469055175781
    4. 'n' → logprob: -11.035469055175781
    5. 'int' → logprob: -11.535469055175781
    6. ' n' → logprob: -12.035469055175781
    7. '  ' → logprob: -13.035469055175781
    8. ' int' → logprob: -13.285469055175781
    9. '   ' → logprob: -13.410469055175781
    10. 'a' → logprob: -13.785469055175781

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020183324813842773
    2. ' ' → logprob: -6.252018451690674
    3. '1' → logprob: -9.502017974853516
    4. 'int' → logprob: -12.002017974853516
    5. 'n' → logprob: -12.377017974853516
    6. 'a' → logprob: -14.064517974853516
    7. '  ' → logprob: -14.689517974853516
    8. '100' → logprob: -15.064517974853516
    9. '   ' → logprob: -15.127017974853516
    10. ' int' → logprob: -15.439517974853516

Token 124: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.31333184242248535
    2. 'else' → logprob: -1.3133318424224854
    3. ' ' → logprob: -9.938331604003906
    4. '==' → logprob: -11.938331604003906
    5. '    ' → logprob: -13.063331604003906
    6. ' or' → logprob: -13.188331604003906
    7. '  ' → logprob: -13.188331604003906
    8. '	else' → logprob: -13.813331604003906
    9. '[]' → logprob: -14.188331604003906
    10. '0' → logprob: -14.188331604003906

Token 125: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.5212196707725525
    2. 'a' → logprob: -2.6462197303771973
    3. '(' → logprob: -2.8962197303771973
    4. 'fram' → logprob: -2.8962197303771973
    5. '1' → logprob: -3.0212197303771973
    6. '(n' → logprob: -3.2712197303771973
    7. ' functools' → logprob: -3.5212197303771973
    8. '0' → logprob: -3.6462197303771973
    9. '(a' → logprob: -4.021219730377197
    10. 'pow' → logprob: -4.396219730377197

Token 126: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.0142197972163558
    2. '.' → logprob: -4.389219760894775
    3. '<|end|>' → logprob: -7.014219760894775
    4. 'reduce' → logprob: -8.389220237731934
    5. '.partial' → logprob: -8.389220237731934
    6. '.wrap' → logprob: -9.889220237731934
    7. '<|end|>' → logprob: -9.889220237731934
    8. '.operator' → logprob: -10.139220237731934
    9. '_reduce' → logprob: -10.389220237731934
    10. ' .' → logprob: -11.014220237731934

Token 127: '(lambda' (ID: 43341)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.34204408526420593
    2. '(' → logprob: -1.3420441150665283
    3. '<|end|>' → logprob: -4.092043876647949
    4. '(lambda' → logprob: -4.467043876647949
    5. '<|end|>' → logprob: -9.84204387664795
    6. '(operator' → logprob: -10.34204387664795
    7. '(f' → logprob: -10.46704387664795
    8. '(func' → logprob: -10.59204387664795
    9. '(

' → logprob: -11.34204387664795
    10. '(function' → logprob: -12.34204387664795

Token 128: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07020751386880875
    2. 'x' → logprob: -2.6952075958251953
    3. ' lambda' → logprob: -9.445207595825195
    4. ' operator' → logprob: -9.695207595825195
    5. 'lambda' → logprob: -10.195207595825195
    6. '<|end|>' → logprob: -10.695207595825195
    7. 'operator' → logprob: -10.820207595825195
    8. ' (' → logprob: -11.195207595825195
    9. '(x' → logprob: -11.320207595825195
    10. '(lambda' → logprob: -11.445207595825195

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5528934001922607
    2. ' x' → logprob: -0.9278934001922607
    3. 'x' → logprob: -4.17789363861084
    4. ' ,' → logprob: -4.42789363861084
    5. ',x' → logprob: -6.42789363861084
    6. '<|end|>' → logprob: -8.92789363861084
    7. ' ' → logprob: -9.42789363861084
    8. ' y' → logprob: -9.80289363861084
    9. '_,' → logprob: -10.55289363861084
    10. ',y' → logprob: -10.99039363861084

Token 130: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.36221843957901
    2. ' x' → logprob: -1.2372183799743652
    3. ' y' → logprob: -4.987218379974365
    4. 'y' → logprob: -5.237218379974365
    5. 'operator' → logprob: -7.737218379974365
    6. 'lambda' → logprob: -7.987218379974365
    7. ' operator' → logprob: -8.487218856811523
    8. 'f' → logprob: -9.362218856811523
    9. ' lambda' → logprob: -9.737218856811523
    10. '(' → logprob: -9.987218856811523

Token 131: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6368953585624695
    2. ',' → logprob: -0.7618953585624695
    3. ',x' → logprob: -6.261895179748535
    4. ' :' → logprob: -6.761895179748535
    5. ' x' → logprob: -7.511895179748535
    6. 'x' → logprob: -8.511895179748535
    7. ' ,' → logprob: -8.636895179748535
    8. '(x' → logprob: -8.886895179748535
    9. ',y' → logprob: -10.261895179748535
    10. '<|end|>' → logprob: -10.386895179748535

Token 132: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4744180142879486
    2. ' (' → logprob: -0.974418044090271
    3. '(operator' → logprob: -8.724417686462402
    4. '(' → logprob: -9.974417686462402
    5. '((' → logprob: -10.599417686462402
    6. 'x' → logprob: -10.724417686462402
    7. 'operator' → logprob: -11.224417686462402
    8. ' ' → logprob: -11.349417686462402
    9. '(op' → logprob: -11.474417686462402
    10. '   ' → logprob: -11.599417686462402

Token 133: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02199273370206356
    2. '(x' → logprob: -4.2719926834106445
    3. ' x' → logprob: -4.8969926834106445
    4. ' (' → logprob: -8.271992683410645
    5. '(' → logprob: -9.896992683410645
    6. ' ' → logprob: -11.896992683410645
    7. '0' → logprob: -12.521992683410645
    8. ')' → logprob: -13.459492683410645
    9. '
' → logprob: -13.521992683410645
    10. ')x' → logprob: -13.709492683410645

Token 134: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.009194238111376762
    2. '*' → logprob: -4.759194374084473
    3. ',' → logprob: -8.634194374084473
    4. '+' → logprob: -9.009194374084473
    5. ' ' → logprob: -9.134194374084473
    6. ' +' → logprob: -9.259194374084473
    7. ' ,' → logprob: -10.884194374084473
    8. '<|end|>' → logprob: -11.509194374084473
    9. ' *,' → logprob: -11.759194374084473
    10. ' ' → logprob: -12.009194374084473

Token 135: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2852000296115875
    2. ' y' → logprob: -1.4101999998092651
    3. 'x' → logprob: -6.285200119018555
    4. '(y' → logprob: -6.785200119018555
    5. ' (' → logprob: -7.910200119018555
    6. ' x' → logprob: -8.285200119018555
    7. '(x' → logprob: -8.285200119018555
    8. '(' → logprob: -9.035200119018555
    9. '((' → logprob: -11.160200119018555
    10. ' ' → logprob: -11.410200119018555

Token 136: ')' (ID: 8)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11632990092039108
    2. ')' → logprob: -2.8663299083709717
    3. ' +' → logprob: -3.7413299083709717
    4. '%' → logprob: -3.8663299083709717
    5. '+' → logprob: -4.991329669952393
    6. ' )' → logprob: -7.741329669952393
    7. ' ' → logprob: -7.991329669952393
    8. ',' → logprob: -8.36633014678955
    9. ')%' → logprob: -8.49133014678955
    10. ' *' → logprob: -9.36633014678955

Token 137: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03038601018488407
    2. '%' → logprob: -4.030385971069336
    3. ',' → logprob: -4.530385971069336
    4. ' ' → logprob: -7.405385971069336
    5. ' ,' → logprob: -8.405385971069336
    6. ' (' → logprob: -8.780385971069336
    7. ' y' → logprob: -9.405385971069336
    8. ')' → logprob: -9.905385971069336
    9. ' if' → logprob: -10.030385971069336
    10. '(x' → logprob: -10.155385971069336

Token 138: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07973617315292358
    2. ' mod' → logprob: -2.5797362327575684
    3. '(mod' → logprob: -7.329736232757568
    4. 'MOD' → logprob: -9.70473575592041
    5. 'x' → logprob: -10.45473575592041
    6. 'n' → logprob: -10.57973575592041
    7. ' (' → logprob: -11.45473575592041
    8. ' ' → logprob: -11.70473575592041
    9. 'a' → logprob: -12.07973575592041
    10. '	mod' → logprob: -12.20473575592041

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027595835272222757
    2. ' ,' → logprob: -6.6277594566345215
    3. '(range' → logprob: -7.5027594566345215
    4. 'range' → logprob: -8.87775993347168
    5. ',
' → logprob: -9.25275993347168
    6. ' range' → logprob: -9.62775993347168
    7. ' if' → logprob: -9.62775993347168
    8. '(' → logprob: -9.75275993347168
    9. ' itertools' → logprob: -9.75275993347168
    10. ' (' → logprob: -10.00275993347168

Token 140: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011187167838215828
    2. 'it' → logprob: -5.0111870765686035
    3. ' range' → logprob: -5.5111870765686035
    4. '(range' → logprob: -8.636187553405762
    5. '   ' → logprob: -9.011187553405762
    6. 'iter' → logprob: -9.886187553405762
    7. ' itertools' → logprob: -10.761187553405762
    8. '	range' → logprob: -11.636187553405762
    9. 'operator' → logprob: -12.136187553405762
    10. 'map' → logprob: -12.136187553405762

Token 141: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003418991982471198
    2. '(n' → logprob: -8.12534236907959
    3. '1' → logprob: -10.12534236907959
    4. '(a' → logprob: -12.12534236907959
    5. ',' → logprob: -16.250341415405273
    6. 'a' → logprob: -16.500341415405273
    7. ' (' → logprob: -16.750341415405273
    8. ')' → logprob: -17.375341415405273
    9. 'n' → logprob: -17.500341415405273
    10. '```' → logprob: -18.375341415405273

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005089493934065104
    2. ' ' → logprob: -8.500509262084961
    3. '   ' → logprob: -9.250509262084961
    4. '2' → logprob: -9.375509262084961
    5. 'n' → logprob: -9.500509262084961
    6. '(' → logprob: -10.500509262084961
    7. '    ' → logprob: -11.625509262084961
    8. ',' → logprob: -12.375509262084961
    9. 'a' → logprob: -13.000509262084961
    10. ' n' → logprob: -13.625509262084961

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018384624272584915
    2. ',n' → logprob: -4.0183844566345215
    3. ' ,' → logprob: -8.64338493347168
    4. 'n' → logprob: -10.01838493347168
    5. ',
' → logprob: -11.39338493347168
    6. '<|end|>' → logprob: -14.39338493347168
    7. '   ' → logprob: -15.14338493347168
    8. '(n' → logprob: -15.14338493347168
    9. ',int' → logprob: -15.26838493347168
    10. ',

' → logprob: -15.89338493347168

Token 144: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38690075278282166
    2. 'n' → logprob: -1.136900782585144
    3. '(n' → logprob: -11.511900901794434
    4. '<|end|>' → logprob: -11.511900901794434
    5. ' ' → logprob: -12.511900901794434
    6. ')n' → logprob: -12.886900901794434
    7. '	n' → logprob: -13.386900901794434
    8. '_n' → logprob: -14.386900901794434
    9. ')' → logprob: -14.511900901794434
    10. ',n' → logprob: -15.761900901794434

Token 145: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868817985057831
    2. '+' → logprob: -1.1368818283081055
    3. ' +
' → logprob: -12.386881828308105
    4. ' ' → logprob: -13.386881828308105
    5. '+
' → logprob: -13.386881828308105
    6. ')' → logprob: -14.011881828308105
    7. '+n' → logprob: -14.386881828308105
    8. ',' → logprob: -14.761881828308105
    9. ' ' → logprob: -15.261881828308105
    10. ' plus' → logprob: -15.386881828308105

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001510335598140955
    2. ' ' → logprob: -6.501510143280029
    3. 'n' → logprob: -12.126510620117188
    4. ' n' → logprob: -13.501510620117188
    5. ')' → logprob: -15.001510620117188
    6. '(n' → logprob: -15.001510620117188
    7. '```' → logprob: -16.001510620117188
    8. '2' → logprob: -16.251510620117188
    9. '+' → logprob: -16.376510620117188
    10. '   ' → logprob: -16.376510620117188

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -16.500011444091797
    4. '   ' → logprob: -17.875011444091797
    5. '2' → logprob: -17.875011444091797
    6. '+' → logprob: -18.375011444091797
    7. ')' → logprob: -18.500011444091797
    8. '{' → logprob: -18.875011444091797
    9. '
' → logprob: -19.187511444091797
    10. '0' → logprob: -19.437511444091797

Token 148: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0026793447323143482
    2. '))' → logprob: -6.377679347991943
    3. ')' → logprob: -7.752679347991943
    4. ',' → logprob: -8.252678871154785
    5. ' ),' → logprob: -8.252678871154785
    6. ')))' → logprob: -11.502678871154785
    7. ' ' → logprob: -12.252678871154785
    8. '   ' → logprob: -12.752678871154785
    9. ' ,' → logprob: -13.627678871154785
    10. ',),' → logprob: -13.627678871154785

Token 149: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006627569673582911
    2. ' a' → logprob: -7.750662803649902
    3. '1' → logprob: -8.375662803649902
    4. ' ' → logprob: -13.875662803649902
    5. '   ' → logprob: -14.500662803649902
    6. '	a' → logprob: -16.500661849975586
    7. '  ' → logprob: -18.375661849975586
    8. '    ' → logprob: -18.500661849975586
    9. '       ' → logprob: -18.875661849975586
    10. '(a' → logprob: -19.500661849975586

Token 150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044044392416253686
    2. ' )' → logprob: -7.75044059753418
    3. ')
' → logprob: -12.25044059753418
    4. '<|end|>' → logprob: -13.12544059753418
    5. ')return' → logprob: -13.87544059753418
    6. '   ' → logprob: -14.62544059753418
    7. ' ' → logprob: -15.12544059753418
    8. '))' → logprob: -15.62544059753418
    9. ')

' → logprob: -15.62544059753418
    10. '),' → logprob: -15.75044059753418

Token 151: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47926339507102966
    2. '<|end|>' → logprob: -1.729263424873352
    3. ')' → logprob: -1.979263424873352
    4. '(' → logprob: -3.1042633056640625
    5. ':' → logprob: -4.4792633056640625
    6. 'n' → logprob: -6.9792633056640625
    7. ',' → logprob: -6.9792633056640625
    8. '[' → logprob: -7.1042633056640625
    9. '
' → logprob: -7.1042633056640625
    10. '\' → logprob: -7.2292633056640625

Token 152: ' Ex' (ID: 1771)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038811229169368744
    2. '<|end|>' → logprob: -3.288811206817627
    3. ')' → logprob: -8.663811683654785
    4. '(' → logprob: -8.788811683654785
    5. ' )' → logprob: -8.913811683654785
    6. '_' → logprob: -9.663811683654785
    7. '0' → logprob: -9.788811683654785
    8. 'n' → logprob: -9.913811683654785
    9. '<|end|>' → logprob: -10.663811683654785
    10. '#' → logprob: -10.788811683654785

Token 153: 'ponent' (ID: 1758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0513850450515747
    2. '#' → logprob: -1.5513850450515747
    3. 'port' → logprob: -1.8013850450515747
    4. 'plain' → logprob: -2.176384925842285
    5. 'planation' → logprob: -3.176384925842285
    6. 'pl' → logprob: -3.301384925842285
    7. 'ample' → logprob: -4.051384925842285
    8. 'plic' → logprob: -4.801384925842285
    9. 'plore' → logprob: -4.801384925842285
    10. 'p' → logprob: -4.926384925842285

Token 154: 'iation' (ID: 23408)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.623687207698822
    2. '<|end|>' → logprob: -1.8736872673034668
    3. ' ' → logprob: -1.9986872673034668
    4. ')' → logprob: -2.373687267303467
    5. 'iation' → logprob: -3.873687267303467
    6. 'def' → logprob: -3.998687267303467
    7. '=' → logprob: -4.748687267303467
    8. 'i' → logprob: -4.748687267303467
    9. ' def' → logprob: -5.498687267303467
    10. ' =' → logprob: -5.748687267303467

Token 155: ' by' (ID: 656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1118101179599762
    2. '**' → logprob: -2.3618102073669434
    3. '<|end|>' → logprob: -5.111810207366943
    4. '(' → logprob: -6.111810207366943
    5. '_' → logprob: -6.986810207366943
    6. ' def' → logprob: -7.111810207366943
    7. ' by' → logprob: -7.986810207366943
    8. 'import' → logprob: -8.736809730529785
    9. 'by' → logprob: -9.111809730529785
    10. ' **' → logprob: -9.236809730529785

Token 156: ' squ' (ID: 14685)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0036585067864507437
    2. 'mod' → logprob: -6.878658294677734
    3. 'def' → logprob: -7.128658294677734
    4. 'square' → logprob: -7.128658294677734
    5. 'pow' → logprob: -8.128658294677734
    6. 'import' → logprob: -8.378658294677734
    7. 'multip' → logprob: -8.628658294677734
    8. 'sq' → logprob: -8.878658294677734
    9. '0' → logprob: -9.753658294677734
    10. ' squ' → logprob: -10.878658294677734

Token 157: 'aring' (ID: 4115)
  Prédit: 'aring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aring' → logprob: -0.0018387987511232495
    2. 'ared' → logprob: -7.126838684082031
    3. 'ashing' → logprob: -8.501838684082031
    4. 'ally' → logprob: -9.126838684082031
    5. 'aling' → logprob: -9.126838684082031
    6. 'ation' → logprob: -9.376838684082031
    7. 'are' → logprob: -9.876838684082031
    8. 'al' → logprob: -9.876838684082031
    9. 'ares' → logprob: -10.126838684082031
    10. 'a' → logprob: -10.251838684082031

Token 158: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003890854713972658
    2. ' def' → logprob: -7.875389099121094
    3. '
' → logprob: -11.750389099121094
    4. ':def' → logprob: -15.000389099121094
    5. 'ndef' → logprob: -15.875389099121094
    6. '**' → logprob: -15.875389099121094
    7. '```' → logprob: -15.875389099121094
    8. 'de' → logprob: -16.125389099121094
    9. ' 
' → logprob: -16.250389099121094
    10. '\' → logprob: -16.500389099121094

Token 159: ' using' (ID: 2360)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00018363336857873946
    2. ' def' → logprob: -8.625184059143066
    3. '#' → logprob: -12.625184059143066
    4. 'import' → logprob: -14.625184059143066
    5. 'ndef' → logprob: -15.750184059143066
    6. 'de' → logprob: -17.00018310546875
    7. '
' → logprob: -17.12518310546875
    8. ' ' → logprob: -17.37518310546875
    9. ')' → logprob: -17.87518310546875
    10. '```' → logprob: -18.25018310546875

Token 160: ' recursion' (ID: 122185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06472569704055786
    2. 'fun' → logprob: -2.939725637435913
    3. 'pow' → logprob: -5.814725875854492
    4. ' def' → logprob: -6.064725875854492
    5. 'a' → logprob: -6.689725875854492
    6. ' functools' → logprob: -6.939725875854492
    7. 'lambda' → logprob: -7.064725875854492
    8. 'operator' → logprob: -7.564725875854492
    9. 'reduce' → logprob: -8.939725875854492
    10. 'fr' → logprob: -9.689725875854492

Token 161: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.125
    3. '```' → logprob: -21.0
    4. 'de' → logprob: -21.125
    5. ':def' → logprob: -23.0
    6. '
' → logprob: -23.375
    7. 'ndef' → logprob: -23.5
    8. '\' → logprob: -23.875
    9. ')' → logprob: -24.5
    10. '#' → logprob: -24.5

Token 162: ' lamb' (ID: 50348)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2539571523666382
    2. 'operator' → logprob: -3.0039572715759277
    3. 'lambda' → logprob: -3.0039572715759277
    4. 'sys' → logprob: -3.7539572715759277
    5. 'fun' → logprob: -4.003957271575928
    6. 'pow' → logprob: -4.753957271575928
    7. 'bit' → logprob: -4.878957271575928
    8. '#' → logprob: -5.003957271575928
    9. ' operator' → logprob: -5.128957271575928
    10. 'import' → logprob: -5.128957271575928

Token 163: 'das' (ID: 28922)
  Prédit: 'da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.446275919675827
    2. 'b' → logprob: -1.0712759494781494
    3. 'a' → logprob: -4.44627571105957
    4. 'def' → logprob: -5.94627571105957
    5. 'ambda' → logprob: -6.07127571105957
    6. 'd' → logprob: -7.57127571105957
    7. 'das' → logprob: -9.57127571105957
    8. 'dda' → logprob: -10.57127571105957
    9. '```' → logprob: -10.57127571105957
    10. 'uda' → logprob: -11.32127571105957

Token 164: ' wrapped' (ID: 31831)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.24076293408870697
    2. 'def' → logprob: -2.240762948989868
    3. 'exp' → logprob: -2.740762948989868
    4. 'power' → logprob: -3.365762948989868
    5. 'fram' → logprob: -5.615762710571289
    6. 'fast' → logprob: -6.365762710571289
    7. 'fr' → logprob: -6.490762710571289
    8. 'ex' → logprob: -7.615762710571289
    9. 'mod' → logprob: -8.115762710571289
    10. 'expo' → logprob: -8.365762710571289

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4388478994369507
    2. 'def' → logprob: -1.1888478994369507
    3. 'in' → logprob: -3.0638480186462402
    4. 'lambda' → logprob: -7.31384801864624
    5. '=lambda' → logprob: -7.68884801864624
    6. ' def' → logprob: -7.81384801864624
    7. ' as' → logprob: -8.188847541809082
    8. ',' → logprob: -8.313847541809082
    9. ' into' → logprob: -8.438847541809082
    10. '(
' → logprob: -8.563847541809082

Token 166: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.250497579574585
    2. '(lambda' → logprob: -1.375497579574585
    3. 'fun' → logprob: -2.250497579574585
    4. '(' → logprob: -2.375497579574585
    5. 'fr' → logprob: -2.375497579574585
    6. ' functools' → logprob: -3.375497579574585
    7. 'a' → logprob: -3.500497579574585
    8. 'lambda' → logprob: -3.500497579574585
    9. ' (' → logprob: -4.250497817993164
    10. '(fr' → logprob: -4.375497817993164

Token 167: ' list' (ID: 1562)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8257284164428711
    2. '(lambda' → logprob: -1.825728416442871
    3. 'a' → logprob: -2.200728416442871
    4. ' (' → logprob: -2.575728416442871
    5. 'lambda' → logprob: -2.950728416442871
    6. 'n' → logprob: -3.200728416442871
    7. '_' → logprob: -4.075728416442871
    8. ' def' → logprob: -4.325728416442871
    9. '(' → logprob: -4.450728416442871
    10. 'fun' → logprob: -4.700728416442871

Token 168: ' comprehension' (ID: 91423)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3846921920776367
    2. 'exp' → logprob: -1.7596921920776367
    3. 'power' → logprob: -2.0096921920776367
    4. 'def' → logprob: -5.009692192077637
    5. 'ex' → logprob: -5.259692192077637
    6. 'func' → logprob: -8.009692192077637
    7. 'f' → logprob: -8.259692192077637
    8. 'expo' → logprob: -8.384692192077637
    9. '```' → logprob: -9.259692192077637
    10. 'expr' → logprob: -9.509692192077637

Token 169: '
' (ID: 198)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.46236518025398254
    2. 'def' → logprob: -1.8373651504516602
    3. 'exp' → logprob: -1.9623651504516602
    4. 'power' → logprob: -2.71236515045166
    5. 'ex' → logprob: -6.21236515045166
    6. 'f' → logprob: -7.71236515045166
    7. 'fr' → logprob: -7.83736515045166
    8. '[' → logprob: -8.46236515045166
    9. 'func' → logprob: -8.71236515045166
    10. 'result' → logprob: -8.83736515045166

Token 170: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7200644016265869
    2. 'pow' → logprob: -0.8450644016265869
    3. 'exp' → logprob: -3.095064401626587
    4. 'power' → logprob: -3.345064401626587
    5. 'ex' → logprob: -6.595064163208008
    6. 'f' → logprob: -7.720064163208008
    7. '```' → logprob: -7.845064163208008
    8. 'fr' → logprob: -7.970064163208008
    9. 'fram' → logprob: -8.970064163208008
    10. 'result' → logprob: -9.595064163208008

Token 171: ' power' (ID: 3470)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3234843313694
    2. 'mod' → logprob: -1.8234843015670776
    3. ' mod' → logprob: -3.323484420776367
    4. 'exp' → logprob: -3.698484420776367
    5. 'power' → logprob: -3.948484420776367
    6. 'fast' → logprob: -4.948484420776367
    7. 'f' → logprob: -4.948484420776367
    8. ' pow' → logprob: -5.323484420776367
    9. 'fr' → logprob: -5.823484420776367
    10. 'fp' → logprob: -5.948484420776367

Token 172: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016819220036268234
    2. '(a' → logprob: -5.391819000244141
    3. '(' → logprob: -5.641819000244141
    4. '(x' → logprob: -5.766819000244141
    5. '(base' → logprob: -5.766819000244141
    6. '(b' → logprob: -6.641819000244141
    7. '(f' → logprob: -8.39181900024414
    8. '(k' → logprob: -8.64181900024414
    9. ' (' → logprob: -8.76681900024414
    10. '(N' → logprob: -9.39181900024414

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003132976416964084
    2. ' ,' → logprob: -8.250313758850098
    3. '):' → logprob: -11.500313758850098
    4. ',p' → logprob: -11.875313758850098
    5. ',x' → logprob: -12.125313758850098
    6. 'a' → logprob: -12.250313758850098
    7. ',a' → logprob: -12.250313758850098
    8. ',b' → logprob: -12.250313758850098
    9. ',
' → logprob: -12.375313758850098
    10. ',k' → logprob: -12.750313758850098

Token 174: ' r' (ID: 428)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.8917970657348633
    2. 'm' → logprob: -1.1417970657348633
    3. 'x' → logprob: -2.2667970657348633
    4. 'a' → logprob: -2.8917970657348633
    5. ' m' → logprob: -3.2667970657348633
    6. ' x' → logprob: -4.016797065734863
    7. 'k' → logprob: -4.391797065734863
    8. 'b' → logprob: -4.641797065734863
    9. ' mod' → logprob: -4.641797065734863
    10. ' a' → logprob: -5.141797065734863

Token 175: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18038004636764526
    2. '):
' → logprob: -2.05538010597229
    3. ',' → logprob: -3.30538010597229
    4. '):
' → logprob: -9.430379867553711
    5. '):

' → logprob: -9.555379867553711
    6. ')' → logprob: -10.055379867553711
    7. ',
' → logprob: -10.555379867553711
    8. '=' → logprob: -10.930379867553711
    9. ' ):' → logprob: -10.930379867553711
    10. '   ' → logprob: -11.055379867553711

Token 176: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.09725432842969894
    2. ' mod' → logprob: -2.9722542762756348
    3. 'm' → logprob: -3.2222542762756348
    4. ' m' → logprob: -6.472254276275635
    5. 'MOD' → logprob: -10.847254753112793
    6. ' ' → logprob: -11.222254753112793
    7. '   ' → logprob: -11.472254753112793
    8. 'p' → logprob: -12.097254753112793
    9. '_mod' → logprob: -12.722254753112793
    10. '  ' → logprob: -12.972254753112793

Token 177: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.036479402333498
    2. '):
' → logprob: -3.4114794731140137
    3. ',' → logprob: -6.286479473114014
    4. '=' → logprob: -7.286479473114014
    5. '):
' → logprob: -9.536478996276855
    6. ' ):' → logprob: -9.536478996276855
    7. '):

' → logprob: -9.786478996276855
    8. ')' → logprob: -10.036478996276855
    9. ',
' → logprob: -11.661478996276855
    10. '=lambda' → logprob: -11.786478996276855

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40750136971473694
    2. ' return' → logprob: -1.2825013399124146
    3. 'return' → logprob: -2.907501459121704
    4. '[' → logprob: -6.782501220703125
    5. ' (' → logprob: -7.657501220703125
    6. ' [' → logprob: -7.782501220703125
    7. '[(' → logprob: -8.657501220703125
    8. '(lambda' → logprob: -8.907501220703125
    9. '[]' → logprob: -9.907501220703125
    10. '[n' → logprob: -10.032501220703125

Token 179: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26844656467437744
    2. '   ' → logprob: -2.143446445465088
    3. '[(' → logprob: -3.393446445465088
    4. '[' → logprob: -3.393446445465088
    5. ' return' → logprob: -3.393446445465088
    6. ' (' → logprob: -5.018446445465088
    7. ' [' → logprob: -6.393446445465088
    8. ' ' → logprob: -6.643446445465088
    9. 'result' → logprob: -6.643446445465088
    10. '(lambda' → logprob: -7.143446445465088

Token 180: ' (
' (ID: 4112)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6396459937095642
    2. '([' → logprob: -2.264646053314209
    3. '(n' → logprob: -2.389646053314209
    4. '[n' → logprob: -2.514646053314209
    5. '(power' → logprob: -2.764646053314209
    6. '[(' → logprob: -3.889646053314209
    7. '(lambda' → logprob: -3.889646053314209
    8. 'power' → logprob: -4.014646053314209
    9. 'pow' → logprob: -4.139646053314209
    10. '(pow' → logprob: -4.264646053314209

Token 181: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2970358431339264
    2. '(lambda' → logprob: -1.672035813331604
    3. '[(' → logprob: -3.1720359325408936
    4. 'lambda' → logprob: -4.6720356941223145
    5. '[n' → logprob: -5.1720356941223145
    6. '(n' → logprob: -5.9220356941223145
    7. '(' → logprob: -6.4220356941223145
    8. '([' → logprob: -6.5470356941223145
    9. 'power' → logprob: -6.9220356941223145
    10. '(power' → logprob: -7.4220356941223145

Token 182: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5825159549713135
    2. '(lambda' → logprob: -1.0825159549713135
    3. 'lambda' → logprob: -3.0825159549713135
    4. '[(' → logprob: -3.7075159549713135
    5. '[n' → logprob: -4.707515716552734
    6. '(n' → logprob: -5.082515716552734
    7. 'power' → logprob: -5.582515716552734
    8. '(' (adapté à ' (') → logprob: -6.082515716552734
    9. 'n' → logprob: -6.207515716552734
    10. 'pow' → logprob: -6.457515716552734

Token 183: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.2827751636505127
    2. '(lambda' → logprob: -2.0327751636505127
    3. 'pow' → logprob: -2.9077751636505127
    4. 'n' → logprob: -3.5327751636505127
    5. 'r' → logprob: -4.657774925231934
    6. '[' → logprob: -5.282774925231934
    7. '(n' → logprob: -5.282774925231934
    8. '[n' → logprob: -5.782774925231934
    9. '(r' → logprob: -6.032774925231934
    10. '[(' → logprob: -6.282774925231934

Token 184: ' f' (ID: 285)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.34190502762794495
    2. 'x' → logprob: -1.7169049978256226
    3. ' f' → logprob: -2.966905117034912
    4. 'f' → logprob: -2.966905117034912
    5. ' n' → logprob: -5.966905117034912
    6. ' lambda' → logprob: -7.091905117034912
    7. 'n' → logprob: -7.341905117034912
    8. 'a' → logprob: -7.466905117034912
    9. 'lambda' → logprob: -7.466905117034912
    10. ':' → logprob: -7.841905117034912

Token 185: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0067787170410156
    2. 'n' → logprob: -1.1317787170410156
    3. 'f' → logprob: -2.0067787170410156
    4. ',' → logprob: -2.6317787170410156
    5. '(n' → logprob: -2.8817787170410156
    6. 'x' → logprob: -3.8817787170410156
    7. '[n' → logprob: -4.881778717041016
    8. ' n' → logprob: -5.506778717041016
    9. ',n' → logprob: -5.631778717041016
    10. 'lambda' → logprob: -5.881778717041016

Token 186: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.16716986894607544
    2. '[' → logprob: -3.2921698093414307
    3. '(lambda' → logprob: -3.4171698093414307
    4. '(f' → logprob: -3.6671698093414307
    5. 'lambda' → logprob: -3.9171698093414307
    6. ' f' → logprob: -4.16717004776001
    7. '[f' → logprob: -4.54217004776001
    8. ' (' → logprob: -5.79217004776001
    9. '(' → logprob: -6.29217004776001
    10. 'None' → logprob: -6.79217004776001

Token 187: '(f' (ID: 1526)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6073336601257324
    2. 'f' → logprob: -1.8573336601257324
    3. '(f' → logprob: -1.8573336601257324
    4. 'lambda' → logprob: -2.3573336601257324
    5. '=lambda' → logprob: -4.232333660125732
    6. '(n' → logprob: -4.857333660125732
    7. '[' → logprob: -5.107333660125732
    8. ')(' → logprob: -5.232333660125732
    9. ')' → logprob: -5.732333660125732
    10. '[f' → logprob: -5.982333660125732

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05091981589794159
    2. ')(' → logprob: -4.050920009613037
    3. '(lambda' → logprob: -4.300920009613037
    4. ',f' → logprob: -4.800920009613037
    5. 'lambda' → logprob: -6.050920009613037
    6. 'f' → logprob: -6.300920009613037
    7. ')' → logprob: -6.550920009613037
    8. '))' → logprob: -7.175920009613037
    9. '=lambda' → logprob: -7.175920009613037
    10. '(f' → logprob: -7.425920009613037

Token 189: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06915168464183807
    2. 'r' → logprob: -2.9441516399383545
    3. ' n' → logprob: -4.319151878356934
    4. ' r' → logprob: -7.819151878356934
    5. 'lambda' → logprob: -8.444151878356934
    6. '(n' → logprob: -8.819151878356934
    7. ' lambda' → logprob: -10.444151878356934
    8. '(lambda' → logprob: -11.569151878356934
    9. ')' → logprob: -11.819151878356934
    10. ')n' → logprob: -11.944151878356934

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007390928920358419
    2. '//' → logprob: -5.382390975952148
    3. ' //' → logprob: -6.632390975952148
    4. ' ,' → logprob: -6.882390975952148
    5. '>>' → logprob: -8.882390975952148
    6. '-' → logprob: -9.382390975952148
    7. ',r' → logprob: -9.632390975952148
    8. 'r' → logprob: -10.007390975952148
    9. ' >>' → logprob: -10.757390975952148
    10. ')' → logprob: -11.007390975952148

Token 191: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0036004253197461367
    2. ' r' → logprob: -5.628600597381592
    3. ' ' → logprob: -15.878600120544434
    4. '
' → logprob: -16.62860107421875
    5. '	r' → logprob: -17.75360107421875
    6. ',' → logprob: -17.75360107421875
    7. 'n' → logprob: -17.87860107421875
    8. ')' → logprob: -17.87860107421875
    9. 'pow' → logprob: -17.87860107421875
    10. '<|end|>' → logprob: -18.00360107421875

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009276605560444295
    2. ' ,' → logprob: -7.125927448272705
    3. '))' → logprob: -9.125927925109863
    4. ',
' → logprob: -11.875927925109863
    5. ')))' → logprob: -12.875927925109863
    6. ')' → logprob: -13.875927925109863
    7. '-' → logprob: -14.125927925109863
    8. ')):
' → logprob: -14.375927925109863
    9. 'mod' → logprob: -14.750927925109863
    10. ' ))' → logprob: -15.125927925109863

Token 193: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.02325398102402687
    2. ' mod' → logprob: -3.773253917694092
    3. ')' → logprob: -13.64825439453125
    4. '   ' → logprob: -13.77325439453125
    5. '	mod' → logprob: -13.77325439453125
    6. 'm' → logprob: -14.02325439453125
    7. '(mod' → logprob: -14.27325439453125
    8. ' ' → logprob: -14.39825439453125
    9. '           ' → logprob: -14.77325439453125
    10. '
' → logprob: -15.02325439453125

Token 194: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11126011610031128
    2. '))(' → logprob: -3.111260175704956
    3. '))[' → logprob: -3.486260175704956
    4. ')):' → logprob: -3.986260175704956
    5. ')' → logprob: -5.611259937286377
    6. '))
' → logprob: -6.236259937286377
    7. ',' → logprob: -6.486259937286377
    8. ')))' → logprob: -6.611259937286377
    9. ')):
' → logprob: -6.986259937286377
    10. '):' → logprob: -7.361259937286377

Token 195: '(
' (ID: 1607)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.29846876859664917
    2. ')(
' → logprob: -2.298468828201294
    3. ')(' → logprob: -2.798468828201294
    4. ' (' → logprob: -3.673468828201294
    5. '(
' → logprob: -3.923468828201294
    6. '=lambda' → logprob: -4.548468589782715
    7. ')' → logprob: -4.798468589782715
    8. '   ' → logprob: -5.048468589782715
    9. 'lambda' → logprob: -5.048468589782715
    10. '
' → logprob: -5.673468589782715

Token 196: '           ' (ID: 352)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.2946131229400635
    2. ' lambda' → logprob: -1.4196131229400635
    3. '(lambda' → logprob: -4.544612884521484
    4. '       ' → logprob: -6.169612884521484
    5. '   ' → logprob: -8.169612884521484
    6. '    ' → logprob: -8.419612884521484
    7. '=lambda' → logprob: -10.169612884521484
    8. '           ' → logprob: -10.294612884521484
    9. '               ' → logprob: -10.544612884521484
    10. '        ' → logprob: -11.669612884521484

Token 197: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.011101232841610909
    2. ' lambda' → logprob: -5.136101245880127
    3. '(lambda' → logprob: -5.636101245880127
    4. '               ' → logprob: -6.511101245880127
    5. '           ' → logprob: -9.261100769042969
    6. '   ' → logprob: -12.886100769042969
    7. '            ' → logprob: -13.261100769042969
    8. '=lambda' → logprob: -13.386100769042969
    9. '                   ' → logprob: -13.511100769042969
    10. '                           ' → logprob: -14.011100769042969

Token 198: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4748702049255371
    2. 'f' → logprob: -0.9748702049255371
    3. 'g' → logprob: -7.974870204925537
    4. ' self' → logprob: -8.849870681762695
    5. 's' → logprob: -9.224870681762695
    6. 'lambda' → logprob: -9.349870681762695
    7. ' f' → logprob: -10.099870681762695
    8. 'func' → logprob: -10.474870681762695
    9. 'rec' → logprob: -10.474870681762695
    10. 'fn' → logprob: -11.724870681762695

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006920627201907337
    2. 'f' → logprob: -7.625691890716553
    3. 'n' → logprob: -9.125692367553711
    4. 'self' → logprob: -10.625692367553711
    5. ',n' → logprob: -11.125692367553711
    6. 'a' → logprob: -11.125692367553711
    7. 'lambda' → logprob: -11.750692367553711
    8. ',f' → logprob: -11.875692367553711
    9. ' ,' → logprob: -12.250692367553711
    10. 'x' → logprob: -12.375692367553711

Token 200: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.013673171401023865
    2. ' x' → logprob: -4.513673305511475
    3. 'n' → logprob: -6.013673305511475
    4. ' n' → logprob: -8.763672828674316
    5. 'a' → logprob: -11.138672828674316
    6. 'k' → logprob: -13.263672828674316
    7. 'b' → logprob: -13.513672828674316
    8. '   ' → logprob: -14.263672828674316
    9. 'base' → logprob: -14.638672828674316
    10. 'self' → logprob: -14.763672828674316

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036630146205425262
    2. ' ,' → logprob: -5.753663063049316
    3. ',r' → logprob: -8.003663063049316
    4. 'r' → logprob: -9.003663063049316
    5. ',n' → logprob: -11.378663063049316
    6. 'n' → logprob: -12.378663063049316
    7. ' ' → logprob: -13.378663063049316
    8. '<|end|>' → logprob: -13.503663063049316
    9. '  ' → logprob: -13.753663063049316
    10. ' r' → logprob: -13.753663063049316

Token 202: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.015148739330470562
    2. ' r' → logprob: -4.640148639678955
    3. 'n' → logprob: -5.265148639678955
    4. ' n' → logprob: -8.640149116516113
    5. ' ' → logprob: -11.890149116516113
    6. '   ' → logprob: -11.890149116516113
    7. '    ' → logprob: -13.015149116516113
    8. '  ' → logprob: -13.390149116516113
    9. '     ' → logprob: -13.390149116516113
    10. 'pow' → logprob: -13.390149116516113

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004019521293230355
    2. ':' → logprob: -8.750401496887207
    3. ' ,' → logprob: -8.875401496887207
    4. ',
' → logprob: -10.000401496887207
    5. ',n' → logprob: -10.500401496887207
    6. 'n' → logprob: -12.625401496887207
    7. ',self' → logprob: -12.625401496887207
    8. 'r' → logprob: -13.125401496887207
    9. ',f' → logprob: -13.125401496887207
    10. 'self' → logprob: -13.250401496887207

Token 204: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3511151671409607
    2. 'r' → logprob: -3.1011152267456055
    3. ' mod' → logprob: -3.3511152267456055
    4. 'result' → logprob: -3.3511152267456055
    5. 'res' → logprob: -3.4761152267456055
    6. 'n' → logprob: -3.7261152267456055
    7. 'm' → logprob: -3.7261152267456055
    8. ' res' → logprob: -3.9761152267456055
    9. 'acc' → logprob: -3.9761152267456055
    10. 'pow' → logprob: -4.1011152267456055

Token 205: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005489402916282415
    2. ' :' → logprob: -5.255489349365234
    3. ',' → logprob: -8.380489349365234
    4. ':
' → logprob: -10.880489349365234
    5. ',:' → logprob: -12.130489349365234
    6. ',
' → logprob: -14.630489349365234
    7. ' :
' → logprob: -15.130489349365234
    8. '):' → logprob: -15.380489349365234
    9. '   ' → logprob: -15.630489349365234
    10. '       ' → logprob: -15.755489349365234

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23768293857574463
    2. '0' → logprob: -2.612682819366455
    3. '(' → logprob: -2.737682819366455
    4. 'r' → logprob: -3.987682819366455
    5. ' ' → logprob: -4.237682819366455
    6. '(r' → logprob: -4.612682819366455
    7. 'mod' → logprob: -4.737682819366455
    8. 'n' → logprob: -4.987682819366455
    9. '(n' → logprob: -5.362682819366455
    10. ' (' → logprob: -5.737682819366455

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3408606946468353
    2. '(' → logprob: -2.215860605239868
    3. 'r' → logprob: -2.340860605239868
    4. '0' → logprob: -3.590860605239868
    5. '(r' → logprob: -3.840860605239868
    6. 'mod' → logprob: -4.340860843658447
    7. 'n' → logprob: -4.590860843658447
    8. '(n' → logprob: -5.340860843658447
    9. '(mod' → logprob: -5.465860843658447
    10. 'pow' → logprob: -7.215860843658447

Token 208: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38733744621276855
    2. ' if' → logprob: -1.1373374462127686
    3. '            ' → logprob: -8.137337684631348
    4. '           ' → logprob: -9.012337684631348
    5. '          ' → logprob: -10.512337684631348
    6. '               ' → logprob: -12.012337684631348
    7. '        ' → logprob: -12.387337684631348
    8. '0' → logprob: -12.512337684631348
    9. '              ' → logprob: -13.262337684631348
    10. '       ' → logprob: -13.387337684631348

Token 209: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07889077812433243
    2. ' r' → logprob: -2.578890800476074
    3. '(r' → logprob: -13.953890800476074
    4. ' not' → logprob: -15.953890800476074
    5. 'not' → logprob: -17.328889846801758
    6. ' ' → logprob: -17.703889846801758
    7. '_r' → logprob: -18.703889846801758
    8. ' (' → logprob: -18.703889846801758
    9. ' ' → logprob: -18.828889846801758
    10. '[r' → logprob: -18.953889846801758

Token 210: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759894251823425
    2. '==' → logprob: -0.8259894251823425
    3. '<=' → logprob: -10.700989723205566
    4. ' ' → logprob: -11.075989723205566
    5. ' <=' → logprob: -11.700989723205566
    6. '0' → logprob: -13.075989723205566
    7. '=' → logprob: -14.575989723205566
    8. '==
' → logprob: -14.950989723205566
    9. '<' → logprob: -16.45098876953125
    10. '[' → logprob: -16.57598876953125

Token 211: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '۰' → logprob: -17.753599166870117
    4. '<|end|>' → logprob: -17.753599166870117
    5. ' ' → logprob: -17.878599166870117
    6. '   ' → logprob: -18.566099166870117
    7. '```' → logprob: -19.066099166870117
    8. '  ' → logprob: -19.128599166870117
    9. '<|end|>' → logprob: -19.503599166870117
    10. ' ' → logprob: -19.691099166870117

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '۰' → logprob: -17.625158309936523
    4. '```' → logprob: -17.937658309936523
    5. '   ' → logprob: -18.000158309936523
    6. ' ' → logprob: -18.750158309936523
    7. '

' → logprob: -18.750158309936523
    8. '<|end|>' → logprob: -18.875158309936523
    9. '  ' → logprob: -18.937658309936523
    10. ')' → logprob: -18.937658309936523

Token 213: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07890873402357101
    2. 'else' → logprob: -2.578908681869507
    3. '        ' → logprob: -11.578908920288086
    4. '            ' → logprob: -12.703908920288086
    5. '          ' → logprob: -12.828908920288086
    6. '    ' → logprob: -14.078908920288086
    7. '   ' → logprob: -14.328908920288086
    8. '           ' → logprob: -14.453908920288086
    9. '       ' → logprob: -14.703908920288086
    10. ' ' → logprob: -14.703908920288086

Token 214: ' (
' (ID: 4112)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6459300518035889
    2. ' (' → logprob: -1.3959300518035889
    3. '(self' → logprob: -1.8959300518035889
    4. '((' → logprob: -3.145930051803589
    5. '(' → logprob: -4.270930290222168
    6. '(mod' → logprob: -4.395930290222168
    7. '(lambda' → logprob: -5.395930290222168
    8. ' ((' → logprob: -7.020930290222168
    9. '(((' → logprob: -7.645930290222168
    10. '(
' → logprob: -7.770930290222168

Token 215: '               ' (ID: 506)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02142522670328617
    2. ' (' → logprob: -4.271425247192383
    3. '((' → logprob: -5.771425247192383
    4. '(n' → logprob: -5.771425247192383
    5. 'self' → logprob: -7.521425247192383
    6. '(lambda' → logprob: -8.396425247192383
    7. '(' → logprob: -9.521425247192383
    8. '   ' → logprob: -10.271425247192383
    9. ' self' → logprob: -10.271425247192383
    10. ' ((' → logprob: -10.771425247192383

Token 216: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0724857747554779
    2. '(lambda' → logprob: -3.6974856853485107
    3. '((' → logprob: -4.07248592376709
    4. 'self' (adapté à ' self') → logprob: -4.07248592376709
    5. '(n' → logprob: -5.19748592376709
    6. '(' → logprob: -5.69748592376709
    7. 'lambda' → logprob: -7.82248592376709
    8. '(
' → logprob: -8.32248592376709
    9. '[self' → logprob: -8.57248592376709
    10. 'n' → logprob: -8.57248592376709

Token 217: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0023618557024747133
    2. 'self' → logprob: -6.37736177444458
    3. '(' → logprob: -8.252362251281738
    4. ',self' → logprob: -8.877362251281738
    5. '(
' → logprob: -9.127362251281738
    6. ',' → logprob: -9.252362251281738
    7. '(lambda' → logprob: -11.002362251281738
    8. '[self' → logprob: -11.877362251281738
    9. ')(' → logprob: -12.127362251281738
    10. ' self' → logprob: -12.127362251281738

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007877098978497088
    2. ',n' → logprob: -7.625787734985352
    3. 'self' → logprob: -9.250787734985352
    4. ' ,' → logprob: -9.750787734985352
    5. '(n' → logprob: -9.750787734985352
    6. 'n' → logprob: -10.375787734985352
    7. ',self' → logprob: -10.625787734985352
    8. ',
' → logprob: -11.250787734985352
    9. ' n' → logprob: -12.625787734985352
    10. '(self' → logprob: -12.750787734985352

Token 219: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009109867387451231
    2. ' n' → logprob: -7.250910758972168
    3. '(n' → logprob: -8.625910758972168
    4. 'operator' → logprob: -12.125910758972168
    5. ' (' → logprob: -12.875910758972168
    6. ')' → logprob: -12.875910758972168
    7. ')n' → logprob: -13.250910758972168
    8. 'r' → logprob: -13.625910758972168
    9. 'int' → logprob: -13.750910758972168
    10. '   ' → logprob: -13.875910758972168

Token 220: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002765175187960267
    2. '//' → logprob: -6.50276517868042
    3. ' ,' → logprob: -7.87776517868042
    4. '*' → logprob: -8.127764701843262
    5. ' *' → logprob: -8.127764701843262
    6. ' //' → logprob: -9.002764701843262
    7. '*n' → logprob: -10.252764701843262
    8. 'n' → logprob: -10.502764701843262
    9. '>>' → logprob: -10.627764701843262
    10. '-' → logprob: -10.627764701843262

Token 221: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015068859793245792
    2. ' n' → logprob: -6.501506805419922
    3. ' ' → logprob: -13.001506805419922
    4. '2' → logprob: -13.251506805419922
    5. '	n' → logprob: -16.001506805419922
    6. 'self' → logprob: -16.626506805419922
    7. '1' → logprob: -17.001506805419922
    8. ',' → logprob: -17.001506805419922
    9. '(n' → logprob: -17.126506805419922
    10. '   ' → logprob: -17.126506805419922

Token 222: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001111639547161758
    2. ' ,' → logprob: -6.8761115074157715
    3. '%' → logprob: -10.00111198425293
    4. '           ' → logprob: -11.75111198425293
    5. '               ' → logprob: -11.75111198425293
    6. ',
' → logprob: -12.50111198425293
    7. ')' → logprob: -13.00111198425293
    8. '   ' → logprob: -13.00111198425293
    9. ' %' → logprob: -13.37611198425293
    10. '       ' → logprob: -13.62611198425293

Token 223: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00026205103495158255
    2. ' mod' → logprob: -8.250262260437012
    3. 'MOD' → logprob: -14.875262260437012
    4. '(mod' → logprob: -16.500261306762695
    5. '           ' → logprob: -16.750261306762695
    6. '```' → logprob: -16.875261306762695
    7. 'mo' → logprob: -17.250261306762695
    8. '	mod' → logprob: -17.375261306762695
    9. '
' → logprob: -18.000261306762695
    10. ',' → logprob: -18.000261306762695

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009426692849956453
    2. ' ,' → logprob: -7.000942707061768
    3. '               ' → logprob: -11.12594223022461
    4. ',
' → logprob: -12.75094223022461
    5. ',n' → logprob: -12.75094223022461
    6. ',r' → logprob: -13.12594223022461
    7. '           ' → logprob: -13.37594223022461
    8. ',(' → logprob: -13.62594223022461
    9. '                   ' → logprob: -14.25094223022461
    10. '       ' → logprob: -14.50094223022461

Token 225: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.872261317563243e-05
    2. ' r' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.375059127807617
    4. '                           ' → logprob: -16.375059127807617
    5. '                               ' → logprob: -17.375059127807617
    6. '                   ' → logprob: -17.375059127807617
    7. '                                   ' → logprob: -17.500059127807617
    8. '(r' → logprob: -17.875059127807617
    9. '                                       ' → logprob: -18.000059127807617
    10. '                                           ' → logprob: -18.500059127807617

Token 226: ' //' (ID: 602)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.5813840627670288
    2. '//' → logprob: -1.0813840627670288
    3. ' //' → logprob: -2.3313841819763184
    4. ' ' → logprob: -5.706384181976318
    5. ' >>' → logprob: -7.331384181976318
    6. '#' → logprob: -7.581384181976318
    7. ' >>=' → logprob: -10.95638370513916
    8. '//=' → logprob: -10.95638370513916
    9. ' ' → logprob: -11.20638370513916
    10. '0' → logprob: -11.58138370513916

Token 227: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00360019039362669
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -16.62860107421875
    4. '1' → logprob: -16.87860107421875
    5. '    ' → logprob: -18.12860107421875
    6. '```' → logprob: -18.37860107421875
    7. '[' → logprob: -19.00360107421875
    8. ')' → logprob: -19.50360107421875
    9. '  ' → logprob: -19.75360107421875
    10. '0' → logprob: -20.06610107421875

Token 228: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.625045776367188
    4. '1' → logprob: -17.125045776367188
    5. '[' → logprob: -18.125045776367188
    6. '(' → logprob: -18.875045776367188
    7. '  ' → logprob: -19.125045776367188
    8. '    ' → logprob: -19.500045776367188
    9. '
' → logprob: -19.875045776367188
    10. '```' → logprob: -19.875045776367188

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005955664673820138
    2. ' ,' → logprob: -7.500595569610596
    3. ')' → logprob: -10.500595092773438
    4. '%' → logprob: -12.125595092773438
    5. 'mod' → logprob: -12.500595092773438
    6. ',
' → logprob: -12.875595092773438
    7. '           ' → logprob: -14.625595092773438
    8. ' %' → logprob: -14.875595092773438
    9. 'if' → logprob: -15.000595092773438
    10. ' mod' → logprob: -15.000595092773438

Token 230: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011087555438280106
    2. ' mod' → logprob: -4.511087417602539
    3. '(mod' → logprob: -11.011087417602539
    4. '           ' → logprob: -11.261087417602539
    5. '               ' → logprob: -12.886087417602539
    6. '   ' → logprob: -13.511087417602539
    7. '       ' → logprob: -13.511087417602539
    8. '                   ' → logprob: -14.511087417602539
    9. 'MOD' → logprob: -14.511087417602539
    10. '    ' → logprob: -14.761087417602539

Token 231: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035250463406555355
    2. ')
' → logprob: -8.75035285949707
    3. ' )' → logprob: -9.75035285949707
    4. ',' → logprob: -9.87535285949707
    5. ' if' → logprob: -9.87535285949707
    6. 'if' → logprob: -11.12535285949707
    7. '   ' → logprob: -11.62535285949707
    8. '       ' → logprob: -12.50035285949707
    9. '))' → logprob: -13.50035285949707
    10. '               ' → logprob: -13.87535285949707

Token 232: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0812500715255737
    2. '               ' → logprob: -1.4562500715255737
    3. 'if' → logprob: -1.7062500715255737
    4. '*' → logprob: -1.9562500715255737
    5. ' *' → logprob: -3.2062501907348633
    6. ' if' → logprob: -3.3312501907348633
    7. '           ' → logprob: -3.9562501907348633
    8. '                   ' → logprob: -6.456250190734863
    9. '                ' → logprob: -6.581250190734863
    10. '              ' → logprob: -6.956250190734863

Token 233: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0012065422488376498
    2. ' r' → logprob: -6.751206398010254
    3. '(r' → logprob: -10.251206398010254
    4. ' ' → logprob: -14.751206398010254
    5. '	r' → logprob: -15.376206398010254
    6. '   ' → logprob: -15.751206398010254
    7. '
' → logprob: -16.50120735168457
    8. ' (' → logprob: -16.50120735168457
    9. ' ' → logprob: -17.37620735168457
    10. '  ' → logprob: -17.62620735168457

Token 234: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3132675588130951
    2. '%' → logprob: -1.3132675886154175
    3. ' ' → logprob: -12.188267707824707
    4. ' ' → logprob: -14.563267707824707
    5. ' &' → logprob: -16.18826675415039
    6. '&' → logprob: -16.68826675415039
    7. ' %
' → logprob: -17.68826675415039
    8. ')' → logprob: -17.81326675415039
    9. '
' → logprob: -18.93826675415039
    10. '2' → logprob: -18.93826675415039

Token 235: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0699387714266777
    2. ' ' → logprob: -2.6949386596679688
    3. '  ' → logprob: -14.319938659667969
    4. '=' → logprob: -15.069938659667969
    5. '   ' → logprob: -15.069938659667969
    6. '```' → logprob: -15.069938659667969
    7. '<|end|>' → logprob: -16.00743865966797
    8. '==' → logprob: -16.00743865966797
    9. '{' → logprob: -16.44493865966797
    10. '۲' → logprob: -16.44493865966797

Token 236: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014180023572407663
    2. ' ' → logprob: -8.875142097473145
    3. '==' → logprob: -14.250142097473145
    4. '```' → logprob: -14.875142097473145
    5. '0' → logprob: -15.250142097473145
    6. '=' → logprob: -15.750142097473145
    7. '   ' → logprob: -16.500141143798828
    8. '  ' → logprob: -16.750141143798828
    9. '>' → logprob: -17.000141143798828
    10. '{' → logprob: -17.187641143798828

Token 237: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03806869313120842
    2. ' ==' → logprob: -3.2880687713623047
    3. '==
' → logprob: -11.663068771362305
    4. '0' → logprob: -11.913068771362305
    5. ' ' → logprob: -12.413068771362305
    6. '=' → logprob: -12.413068771362305
    7. ')==' → logprob: -13.788068771362305
    8. 'else' → logprob: -13.913068771362305
    9. ']==' → logprob: -15.163068771362305
    10. '===' → logprob: -15.163068771362305

Token 238: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005532711511477828
    2. ' ' → logprob: -7.500553131103516
    3. '1' → logprob: -16.500553131103516
    4. '=' → logprob: -16.875553131103516
    5. '<|end|>' → logprob: -17.625553131103516
    6. '```' → logprob: -18.000553131103516
    7. '   ' → logprob: -18.500553131103516
    8. '  ' → logprob: -18.875553131103516
    9. '[' → logprob: -18.875553131103516
    10. '۰' → logprob: -18.875553131103516

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002557369298301637
    2. ' ' → logprob: -8.375255584716797
    3. '1' → logprob: -10.625255584716797
    4. '2' → logprob: -15.312755584716797
    5. '```' → logprob: -16.000255584716797
    6. '<|end|>' → logprob: -16.000255584716797
    7. '   ' → logprob: -16.562755584716797
    8. '=' → logprob: -17.000255584716797
    9. '۰' → logprob: -17.000255584716797
    10. '  ' → logprob: -17.187755584716797

Token 240: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.03006378747522831
    2. 'else' → logprob: -3.5300638675689697
    3. '               ' → logprob: -8.15506362915039
    4. '                ' → logprob: -10.65506362915039
    5. '            ' → logprob: -13.78006362915039
    6. ' ' → logprob: -13.78006362915039
    7. '              ' → logprob: -16.78006362915039
    8. ')' → logprob: -17.03006362915039
    9. '             ' → logprob: -17.03006362915039
    10. '                    ' → logprob: -17.53006362915039

Token 241: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07940468192100525
    2. 'n' → logprob: -2.704404592514038
    3. ' (' → logprob: -5.079404830932617
    4. ' n' → logprob: -6.079404830932617
    5. '(' → logprob: -7.204404830932617
    6. '               ' → logprob: -9.704404830932617
    7. '(self' → logprob: -10.329404830932617
    8. '                   ' → logprob: -10.454404830932617
    9. '   ' → logprob: -11.579404830932617
    10. '(
' → logprob: -11.579404830932617

Token 242: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.18004395067691803
    2. '*' → logprob: -1.8050439357757568
    3. '*self' → logprob: -9.305044174194336
    4. '(self' → logprob: -9.930044174194336
    5. ' ' → logprob: -10.430044174194336
    6. 'self' → logprob: -10.680044174194336
    7. ')' → logprob: -10.805044174194336
    8. '   ' → logprob: -11.305044174194336
    9. ',' → logprob: -11.305044174194336
    10. ' self' → logprob: -11.680044174194336

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008454650640487671
    2. ' self' → logprob: -4.8834547996521
    3. '(self' → logprob: -7.7584547996521
    4. 'power' → logprob: -7.8834547996521
    5. 'pow' → logprob: -10.258454322814941
    6. ' power' → logprob: -12.383454322814941
    7. '[self' → logprob: -13.133454322814941
    8. ' pow' → logprob: -14.758454322814941
    9. '(power' → logprob: -14.883454322814941
    10. 'n' → logprob: -15.133454322814941

Token 244: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.045823566731997e-05
    2. '(' → logprob: -11.250020027160645
    3. '(
' → logprob: -12.125020027160645
    4. ' (' → logprob: -13.375020027160645
    5. 'self' → logprob: -15.375020027160645
    6. '[self' → logprob: -16.00002098083496
    7. ' self' → logprob: -16.50002098083496
    8. ',self' → logprob: -17.12502098083496
    9. '```' → logprob: -18.75002098083496
    10. '=self' → logprob: -19.00002098083496

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06306937336921692
    2. '(self' → logprob: -2.9380693435668945
    3. ',self' → logprob: -5.0630693435668945
    4. 'self' → logprob: -6.5630693435668945
    5. '(n' → logprob: -8.438069343566895
    6. ',n' → logprob: -9.313069343566895
    7. ')' → logprob: -10.563069343566895
    8. ' self' → logprob: -10.688069343566895
    9. 'n' → logprob: -10.688069343566895
    10. ')(' → logprob: -11.688069343566895

Token 246: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000599976978264749
    2. ' n' → logprob: -7.5005998611450195
    3. '(n' → logprob: -10.25059986114502
    4. ')n' → logprob: -12.25059986114502
    5. 'self' → logprob: -12.37559986114502
    6. ')' → logprob: -13.37559986114502
    7. '<|end|>' → logprob: -14.62559986114502
    8. '(' → logprob: -15.75059986114502
    9. ',' → logprob: -16.125600814819336
    10. ',n' → logprob: -16.125600814819336

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007807838264852762
    2. ' ,' → logprob: -5.257807731628418
    3. ' *' → logprob: -6.507807731628418
    4. ',n' → logprob: -7.257807731628418
    5. '-' → logprob: -9.007807731628418
    6. ' -' → logprob: -9.132807731628418
    7. ' n' → logprob: -9.507807731628418
    8. 'n' → logprob: -10.382807731628418
    9. ' ' → logprob: -11.257807731628418
    10. '*' → logprob: -11.757807731628418

Token 248: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.281485836254433e-05
    2. ' r' → logprob: -9.750092506408691
    3. 'n' → logprob: -10.500092506408691
    4. '(r' → logprob: -12.750092506408691
    5. 'mod' → logprob: -13.375092506408691
    6. '(n' → logprob: -14.000092506408691
    7. '   ' → logprob: -15.250092506408691
    8. '     ' → logprob: -15.250092506408691
    9. '    ' → logprob: -15.250092506408691
    10. '       ' → logprob: -15.500092506408691

Token 249: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4169619381427765
    2. ' -' → logprob: -1.166961908340454
    3. ' //' → logprob: -3.541961908340454
    4. '//' → logprob: -7.416962146759033
    5. ' ' → logprob: -9.791961669921875
    6. ',' → logprob: -11.666961669921875
    7. '1' → logprob: -11.791961669921875
    8. '[' → logprob: -12.916961669921875
    9. '   ' → logprob: -13.291961669921875
    10. '```' → logprob: -13.791961669921875

Token 250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.375059127807617
    4. '<|end|>' → logprob: -17.875059127807617
    5. '```' → logprob: -18.625059127807617
    6. '  ' → logprob: -20.187559127807617
    7. '...' → logprob: -20.312559127807617
    8. '       ' → logprob: -20.687559127807617
    9. ')' → logprob: -21.000059127807617
    10. '           ' → logprob: -21.250059127807617

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '<|end|>' → logprob: -16.375036239624023
    4. '   ' → logprob: -17.000036239624023
    5. '```' → logprob: -17.125036239624023
    6. '  ' → logprob: -18.625036239624023
    7. '...' → logprob: -19.062536239624023
    8. '
' → logprob: -19.562536239624023
    9. '    ' → logprob: -19.687536239624023
    10. ')' → logprob: -19.687536239624023

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05040578171610832
    2. ' %' → logprob: -3.925405740737915
    3. ' ,' → logprob: -3.925405740737915
    4. '%' → logprob: -4.800405979156494
    5. ')' → logprob: -6.675405979156494
    6. '%,' → logprob: -10.175405502319336
    7. ' ' → logprob: -10.675405502319336
    8. '       ' → logprob: -10.675405502319336
    9. ')%' → logprob: -10.800405502319336
    10. '               ' → logprob: -10.800405502319336

Token 253: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0380416102707386
    2. ' mod' → logprob: -3.288041591644287
    3. '(mod' → logprob: -16.163042068481445
    4. '	mod' → logprob: -17.538042068481445
    5. ' ' → logprob: -18.163042068481445
    6. '.mod' → logprob: -19.038042068481445
    7. '```' → logprob: -19.038042068481445
    8. 'MOD' → logprob: -19.413042068481445
    9. ')' → logprob: -19.538042068481445
    10. 'm' → logprob: -19.663042068481445

Token 254: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03182876855134964
    2. ' %' → logprob: -3.7818288803100586
    3. '%' → logprob: -4.906828880310059
    4. ')%' → logprob: -7.406828880310059
    5. ' )' → logprob: -8.281828880310059
    6. ',' → logprob: -8.656828880310059
    7. '   ' → logprob: -10.656828880310059
    8. ' ' → logprob: -11.031828880310059
    9. '```' → logprob: -11.031828880310059
    10. ']' → logprob: -11.531828880310059

Token 255: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8308053612709045
    2. ')' → logprob: -1.2058053016662598
    3. '%' → logprob: -1.3308053016662598
    4. ')%' → logprob: -7.58080530166626
    5. ' )' → logprob: -10.455805778503418
    6. '           ' → logprob: -11.580805778503418
    7. ' ' → logprob: -11.705805778503418
    8. '               ' → logprob: -11.830805778503418
    9. '       ' → logprob: -12.330805778503418
    10. '   ' → logprob: -12.955805778503418

Token 256: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.38688579201698303
    2. 'mod' → logprob: -1.1368857622146606
    3. '(mod' → logprob: -11.261885643005371
    4. ' ' → logprob: -14.636885643005371
    5. '	mod' → logprob: -14.636885643005371
    6. 'MOD' → logprob: -15.136885643005371
    7. ')' → logprob: -15.261885643005371
    8. ' ' → logprob: -16.011886596679688
    9. ' мод' → logprob: -16.511886596679688
    10. ' MOD' → logprob: -17.136886596679688

Token 257: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09553685039281845
    2. '       ' → logprob: -3.470536947250366
    3. '           ' → logprob: -3.595536947250366
    4. '))' → logprob: -3.595536947250366
    5. ')))' → logprob: -6.095536708831787
    6. '   ' → logprob: -6.345536708831787
    7. ')
' → logprob: -6.970536708831787
    8. '               ' → logprob: -9.720537185668945
    9. ')),' → logprob: -10.470537185668945
    10. '),' → logprob: -10.845537185668945

Token 258: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04576955363154411
    2. '       ' → logprob: -3.545769453048706
    3. '))' → logprob: -4.670769691467285
    4. '           ' → logprob: -5.545769691467285
    5. '   ' → logprob: -6.545769691467285
    6. ')))' → logprob: -7.045769691467285
    7. ')
' → logprob: -8.295769691467285
    8. '),' → logprob: -11.045769691467285
    9. '               ' → logprob: -11.295769691467285
    10. ' )' → logprob: -11.670769691467285

Token 259: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019000058993697166
    2. '       ' → logprob: -4.144000053405762
    3. '))' → logprob: -6.144000053405762
    4. '   ' → logprob: -8.019000053405762
    5. ')
' (adapté à ' )
') → logprob: -8.394000053405762
    6. ')))' → logprob: -8.519000053405762
    7. '           ' → logprob: -10.269000053405762
    8. ' )' → logprob: -11.894000053405762
    9. '))))' → logprob: -12.269000053405762
    10. '),' → logprob: -12.644000053405762

Token 260: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5917761325836182
    2. '       ' → logprob: -0.8417761325836182
    3. '))' → logprob: -4.466775894165039
    4. '   ' → logprob: -5.716775894165039
    5. ')))' → logprob: -7.091775894165039
    6. ' )' → logprob: -10.466775894165039
    7. '))))' → logprob: -11.716775894165039
    8. ')}' → logprob: -11.966775894165039
    9. ')[' → logprob: -12.091775894165039
    10. ')
' → logprob: -12.091775894165039

Token 261: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01619952917098999
    2. '   ' → logprob: -4.266199588775635
    3. '))' → logprob: -6.516199588775635
    4. '       ' → logprob: -8.141199111938477
    5. ')
' (adapté à ' )
') → logprob: -8.641199111938477
    6. ')))' → logprob: -9.766199111938477
    7. ' )' → logprob: -11.641199111938477
    8. '  ' → logprob: -12.516199111938477
    9. '),' → logprob: -12.641199111938477
    10. ' ' → logprob: -12.766199111938477

Token 262: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08205340802669525
    2. '   ' → logprob: -2.7070534229278564
    3. ')[' → logprob: -4.707053184509277
    4. '[' → logprob: -6.457053184509277
    5. '       ' → logprob: -8.207053184509277
    6. ')
' → logprob: -8.707053184509277
    7. '  ' → logprob: -8.832053184509277
    8. '),' → logprob: -8.957053184509277
    9. '<|end|>' → logprob: -8.957053184509277
    10. ' )' → logprob: -9.207053184509277

Token 263: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001091162208467722
    2. '   ' → logprob: -7.126091003417969
    3. '<|end|>' → logprob: -8.751091003417969
    4. ' )' → logprob: -10.251091003417969
    5. '[' → logprob: -10.751091003417969
    6. ')[' → logprob: -11.001091003417969
    7. '}' → logprob: -11.126091003417969
    8. 'def' → logprob: -12.126091003417969
    9. ')
' → logprob: -12.251091003417969
    10. '  ' → logprob: -12.501091003417969

Token 264: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35376235842704773
    2. '<|end|>' → logprob: -1.2287623882293701
    3. '[' → logprob: -6.603762149810791
    4. '(' → logprob: -6.728762149810791
    5. ':' → logprob: -7.103762149810791
    6. '
' → logprob: -7.603762149810791
    7. '<|end|>' → logprob: -8.22876262664795
    8. ' ' → logprob: -8.47876262664795
    9. '```' → logprob: -8.60376262664795
    10. '#' → logprob: -8.85376262664795

Token 265: ' Com' (ID: 1390)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017291614785790443
    2. '#' → logprob: -4.26729154586792
    3. 'import' → logprob: -7.01729154586792
    4. ')' → logprob: -7.51729154586792
    5. 'factor' → logprob: -7.89229154586792
    6. '<|end|>' → logprob: -7.89229154586792
    7. ' def' → logprob: -8.892292022705078
    8. '```' → logprob: -9.017292022705078
    9. '(' → logprob: -9.392292022705078
    10. '[' → logprob: -9.392292022705078

Token 266: 'bin' (ID: 11893)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.17087256908416748
    2. 'ment' → logprob: -2.670872688293457
    3. 'pute' → logprob: -3.545872688293457
    4. 'bine' → logprob: -3.920872688293457
    5. 'binations' → logprob: -4.920872688293457
    6. 'bination' → logprob: -5.045872688293457
    7. 'pose' → logprob: -5.045872688293457
    8. 'bin' → logprob: -5.045872688293457
    9. 'ments' → logprob: -5.670872688293457
    10. 'mit' → logprob: -6.170872688293457

Token 267: 'atorial' (ID: 68745)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04562230408191681
    2. 'atorial' → logprob: -3.2956223487854004
    3. ' def' → logprob: -5.6706223487854
    4. '#' → logprob: -5.7956223487854
    5. 'ation' → logprob: -7.4206223487854
    6. 'ator' → logprob: -8.795621871948242
    7. '```' → logprob: -9.545621871948242
    8. '(' → logprob: -9.545621871948242
    9. 'import' → logprob: -9.795621871948242
    10. 'ational' → logprob: -10.920621871948242

Token 268: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008578622946515679
    2. 'import' → logprob: -8.000858306884766
    3. '(n' → logprob: -8.375858306884766
    4. '(' → logprob: -9.375858306884766
    5. '(
' → logprob: -9.500858306884766
    6. ' def' → logprob: -9.625858306884766
    7. '
' → logprob: -10.625858306884766
    8. 'n' → logprob: -10.750858306884766
    9. 'from' → logprob: -11.875858306884766
    10. '(def' → logprob: -13.375858306884766

Token 269: ' modular' (ID: 61198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5141222476959229
    2. 'def' → logprob: -1.0141222476959229
    3. '(n' → logprob: -3.639122247695923
    4. ' n' → logprob: -5.514122009277344
    5. ' def' → logprob: -5.639122009277344
    6. 'import' → logprob: -6.139122009277344
    7. 'k' → logprob: -7.639122009277344
    8. 'a' → logprob: -7.764122009277344
    9. 'r' → logprob: -8.389122009277344
    10. 'nt' → logprob: -8.514122009277344

Token 270: ' inverse' (ID: 53743)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011247373186051846
    2. 'n' → logprob: -7.251124858856201
    3. ' def' → logprob: -8.001124382019043
    4. 'import' → logprob: -10.376124382019043
    5. 'from' → logprob: -11.001124382019043
    6. '(n' → logprob: -11.876124382019043
    7. ' n' → logprob: -11.876124382019043
    8. 'factor' → logprob: -12.001124382019043
    9. 'C' → logprob: -13.001124382019043
    10. 'coeff' → logprob: -13.251124382019043

Token 271: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015014449309092015
    2. '(n' → logprob: -9.375149726867676
    3. ' def' → logprob: -10.375149726867676
    4. '(' → logprob: -11.000149726867676
    5. '(
' → logprob: -11.875149726867676
    6. '
' → logprob: -13.250149726867676
    7. 'n' → logprob: -13.500149726867676
    8. '```' → logprob: -14.000149726867676
    9. '=' → logprob: -14.125149726867676
    10. ',' → logprob: -14.250149726867676

Token 272: ' written' (ID: 7582)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004335291218012571
    2. ' def' → logprob: -5.879335403442383
    3. 'import' → logprob: -7.504335403442383
    4. 'n' → logprob: -8.004335403442383
    5. '#' → logprob: -8.379335403442383
    6. 'lambda' → logprob: -9.129335403442383
    7. '
' → logprob: -10.504335403442383
    8. 'factor' → logprob: -10.629335403442383
    9. ' n' → logprob: -10.754335403442383
    10. '[' → logprob: -10.754335403442383

Token 273: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25955161452293396
    2. '=lambda' → logprob: -2.634551525115967
    3. ' as' → logprob: -3.134551525115967
    4. ' in' → logprob: -3.259551525115967
    5. '=' → logprob: -3.634551525115967
    6. 'in' → logprob: -4.259551525115967
    7. 'lambda' → logprob: -4.759551525115967
    8. 'as' → logprob: -5.634551525115967
    9. '(
' → logprob: -5.884551525115967
    10. '```' → logprob: -6.009551525115967

Token 274: ' a' (ID: 261)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.16669118404388428
    2. 'def' → logprob: -2.291691303253174
    3. 'a' → logprob: -3.916691303253174
    4. '(lambda' → logprob: -4.916691303253174
    5. 'fun' → logprob: -5.291691303253174
    6. 'lam' → logprob: -5.541691303253174
    7. ' lambda' → logprob: -5.791691303253174
    8. '[' → logprob: -5.916691303253174
    9. 'fr' → logprob: -6.291691303253174
    10. ' a' → logprob: -6.416691303253174

Token 275: ' single' (ID: 4590)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.14912952482700348
    2. 'def' → logprob: -2.524129629135132
    3. ' lambda' → logprob: -3.649129629135132
    4. '(lambda' → logprob: -3.774129629135132
    5. 'list' → logprob: -6.024129390716553
    6. '[' → logprob: -6.774129390716553
    7. '=lambda' → logprob: -6.774129390716553
    8. 'fun' → logprob: -6.899129390716553
    9. 'import' → logprob: -7.774129390716553
    10. '[
' → logprob: -7.899129390716553

Token 276: ' expression' (ID: 12973)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3906017243862152
    2. 'def' → logprob: -1.8906017541885376
    3. ' lambda' → logprob: -2.140601634979248
    4. ' line' → logprob: -3.515601634979248
    5. 'line' → logprob: -4.265601634979248
    6. '(lambda' → logprob: -5.390601634979248
    7. '[' → logprob: -6.515601634979248
    8. 'expression' → logprob: -6.515601634979248
    9. '=lambda' → logprob: -7.765601634979248
    10. ' def' → logprob: -8.140602111816406

Token 277: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0030639879405498505
    2. 'n' → logprob: -6.753064155578613
    3. 'comb' → logprob: -6.753064155578613
    4. 'fram' → logprob: -8.878064155578613
    5. 'fr' → logprob: -9.128064155578613
    6. '(n' → logprob: -9.503064155578613
    7. '=' → logprob: -9.628064155578613
    8. 'com' → logprob: -10.003064155578613
    9. 'C' → logprob: -10.253064155578613
    10. 'lambda' → logprob: -10.378064155578613

Token 278: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1782313734292984
    2. 'comb' → logprob: -2.1782314777374268
    3. 'lambda' → logprob: -3.9282314777374268
    4. 'com' → logprob: -4.303231239318848
    5. 'fr' → logprob: -5.303231239318848
    6. 'fram' → logprob: -5.428231239318848
    7. 'n' → logprob: -6.178231239318848
    8. 'c' → logprob: -7.178231239318848
    9. 'fac' → logprob: -7.303231239318848
    10. 'C' → logprob: -7.428231239318848

Token 279: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.35167446732521057
    2. 'n' → logprob: -1.6016744375228882
    3. 'com' → logprob: -2.9766745567321777
    4. ' n' → logprob: -4.601674556732178
    5. 'choose' → logprob: -4.601674556732178
    6. 'C' → logprob: -4.976674556732178
    7. ' comb' → logprob: -5.226674556732178
    8. 'cmb' → logprob: -5.726674556732178
    9. 'c' → logprob: -6.601674556732178
    10. 'fr' → logprob: -6.601674556732178

Token 280: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.107425062713446e-06
    2. 'n' → logprob: -13.000006675720215
    3. '(' → logprob: -13.125006675720215
    4. 'ination' → logprob: -14.250006675720215
    5. '(N' → logprob: -14.250006675720215
    6. '(
' → logprob: -14.750006675720215
    7. 'def' → logprob: -14.750006675720215
    8. ' (' → logprob: -15.625006675720215
    9. '(k' → logprob: -16.00000762939453
    10. '(a' → logprob: -16.12500762939453

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018613664724398404
    2. ' ,' → logprob: -8.7501859664917
    3. ',n' → logprob: -11.5001859664917
    4. ',k' → logprob: -11.5001859664917
    5. ',
' → logprob: -12.3751859664917
    6. 'n' → logprob: -14.7501859664917
    7. '   ' → logprob: -14.7501859664917
    8. '_,' → logprob: -14.7501859664917
    9. 'def' → logprob: -15.1251859664917
    10. 'k' → logprob: -15.3751859664917

Token 282: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11331364512443542
    2. 'r' → logprob: -2.238313674926758
    3. ' k' → logprob: -7.988313674926758
    4. ' r' → logprob: -9.238313674926758
    5. '
' → logprob: -10.363313674926758
    6. 'm' → logprob: -11.988313674926758
    7. '   ' → logprob: -12.363313674926758
    8. '```' → logprob: -12.488313674926758
    9. '
' → logprob: -13.113313674926758
    10. ' ' → logprob: -13.488313674926758

Token 283: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5133925080299377
    2. '):
' → logprob: -1.138392448425293
    3. ',' → logprob: -2.513392448425293
    4. '):
' → logprob: -9.388392448425293
    5. ',
' → logprob: -9.763392448425293
    6. '   ' → logprob: -10.763392448425293
    7. '):

' → logprob: -11.138392448425293
    8. ',n' → logprob: -11.263392448425293
    9. ')' → logprob: -11.513392448425293
    10. ':' → logprob: -12.888392448425293

Token 284: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0033231498673558235
    2. ' mod' → logprob: -5.878323078155518
    3. 'MOD' → logprob: -7.628323078155518
    4. 'm' → logprob: -10.878323554992676
    5. ' MOD' → logprob: -12.003323554992676
    6. '   ' → logprob: -12.378323554992676
    7. ' ' → logprob: -14.503323554992676
    8. '       ' → logprob: -15.128323554992676
    9. 'def' → logprob: -15.128323554992676
    10. '	mod' → logprob: -15.253323554992676

Token 285: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6933226585388184
    2. '):' → logprob: -0.6933226585388184
    3. '):
' → logprob: -8.693323135375977
    4. '):

' → logprob: -12.318323135375977
    5. ')' → logprob: -13.193323135375977
    6. '   ' → logprob: -14.443323135375977
    7. ' ):' → logprob: -14.818323135375977
    8. ' ):
' → logprob: -15.943323135375977
    9. '=' → logprob: -16.443323135375977
    10. '):(' → logprob: -16.568323135375977

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38924744725227356
    2. 'return' → logprob: -1.2642474174499512
    3. ' return' → logprob: -3.264247417449951
    4. 'pow' → logprob: -7.764247417449951
    5. 'fram' → logprob: -8.26424789428711
    6. 'fr' → logprob: -8.38924789428711
    7. ' fram' → logprob: -9.01424789428711
    8. ' ' → logprob: -9.26424789428711
    9. '(' → logprob: -9.63924789428711
    10. ')' → logprob: -9.88924789428711

Token 287: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1359317302703857
    2. 'fram' → logprob: -1.1359317302703857
    3. 'return' (adapté à ' return') → logprob: -1.5109317302703857
    4. 'pow' → logprob: -2.5109317302703857
    5. '(' → logprob: -3.7609317302703857
    6. 'fr' → logprob: -4.885931968688965
    7. 'fun' → logprob: -5.135931968688965
    8. 'power' → logprob: -5.385931968688965
    9. '(fr' → logprob: -5.510931968688965
    10. '(
' → logprob: -6.135931968688965

Token 288: ' (
' (ID: 4112)
  Prédit: 'fram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fram' → logprob: -0.4380635917186737
    2. '0' → logprob: -2.063063621520996
    3. '(' → logprob: -2.438063621520996
    4. '(fr' → logprob: -3.063063621520996
    5. '(f' → logprob: -3.563063621520996
    6. '(
' → logprob: -3.688063621520996
    7. 'fun' → logprob: -4.688063621520996
    8. ' fram' → logprob: -4.688063621520996
    9. 'fr' → logprob: -5.563063621520996
    10. 'pow' → logprob: -5.938063621520996

Token 289: '       ' (ID: 309)
  Prédit: 'fram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fram' → logprob: -0.133006751537323
    2. '0' → logprob: -2.6330068111419678
    3. '(' → logprob: -4.258006572723389
    4. '(fr' → logprob: -4.383006572723389
    5. 'pow' → logprob: -5.133006572723389
    6. ' fram' → logprob: -5.383006572723389
    7. '(f' → logprob: -5.633006572723389
    8. 'fr' → logprob: -5.883006572723389
    9. 'power' → logprob: -6.133006572723389
    10. '1' → logprob: -6.508006572723389

Token 290: ' lambda' (ID: 27871)
  Prédit: 'fram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fram' → logprob: -0.04418354108929634
    2. '0' → logprob: -3.9191834926605225
    3. '(' → logprob: -4.794183731079102
    4. '(fr' → logprob: -5.169183731079102
    5. '(f' → logprob: -5.419183731079102
    6. ' fram' → logprob: -6.294183731079102
    7. 'fr' → logprob: -6.919183731079102
    8. '(
' → logprob: -7.669183731079102
    9. 'fun' → logprob: -8.294183731079102
    10. '1' → logprob: -8.669183731079102

Token 291: ' a' (ID: 261)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07640247046947479
    2. 'n' → logprob: -4.20140266418457
    3. ' f' → logprob: -4.20140266418457
    4. 'a' → logprob: -4.32640266418457
    5. 'fac' → logprob: -4.57640266418457
    6. 'fr' → logprob: -5.45140266418457
    7. 'x' → logprob: -5.82640266418457
    8. ' n' → logprob: -6.20140266418457
    9. 'fact' → logprob: -6.45140266418457
    10. ':' → logprob: -6.45140266418457

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6648591756820679
    2. ':' → logprob: -0.7898591756820679
    3. '=' → logprob: -4.039859294891357
    4. ',f' → logprob: -4.914859294891357
    5. ',a' → logprob: -6.414859294891357
    6. ',n' → logprob: -6.539859294891357
    7. ' :' → logprob: -6.914859294891357
    8. 'a' → logprob: -7.039859294891357
    9. ':[' → logprob: -7.789859294891357
    10. ',b' → logprob: -8.4148588180542

Token 293: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0010174484923481941
    2. 'f' → logprob: -7.8760175704956055
    3. 'k' → logprob: -8.001017570495605
    4. 'n' → logprob: -8.751017570495605
    5. ' b' → logprob: -10.626017570495605
    6. 'r' → logprob: -11.001017570495605
    7. ':' → logprob: -11.251017570495605
    8. 'a' → logprob: -11.251017570495605
    9. 'p' → logprob: -11.251017570495605
    10. 'fr' → logprob: -11.376017570495605

Token 294: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008261834154836833
    2. ',' → logprob: -8.125825881958008
    3. '=' → logprob: -8.125825881958008
    4. ':(' → logprob: -9.000825881958008
    5. ' :' → logprob: -9.875825881958008
    6. 'a' → logprob: -10.625825881958008
    7. ':[' → logprob: -11.500825881958008
    8. ':f' → logprob: -11.500825881958008
    9. ':a' → logprob: -12.250825881958008
    10. '=f' → logprob: -13.250825881958008

Token 295: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05965087562799454
    2. 'a' → logprob: -4.059650897979736
    3. ':' → logprob: -4.309650897979736
    4. 'f' → logprob: -4.809650897979736
    5. 'fr' → logprob: -5.809650897979736
    6. 'p' → logprob: -5.934650897979736
    7. 'fac' → logprob: -6.309650897979736
    8. 'i' → logprob: -6.309650897979736
    9. ' c' → logprob: -6.309650897979736
    10. 'pow' → logprob: -6.809650897979736

Token 296: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000763883872423321
    2. ' :' → logprob: -8.125763893127441
    3. '=' → logprob: -8.500763893127441
    4. 'a' → logprob: -9.125763893127441
    5. ',' → logprob: -9.625763893127441
    6. ':(' → logprob: -10.250763893127441
    7. 'n' → logprob: -11.500763893127441
    8. ':n' → logprob: -11.750763893127441
    9. ':a' → logprob: -11.750763893127441
    10. '=(' → logprob: -11.875763893127441

Token 297: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1672457456588745
    2. 'a' → logprob: -1.7922457456588745
    3. '0' → logprob: -1.9172457456588745
    4. 'power' → logprob: -2.667245864868164
    5. '(a' → logprob: -2.667245864868164
    6. 'fram' → logprob: -3.042245864868164
    7. '(fr' → logprob: -3.167245864868164
    8. 'pow' → logprob: -3.292245864868164
    9. '(f' → logprob: -3.292245864868164
    10. '(power' → logprob: -3.292245864868164

Token 298: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.041542086750268936
    2. 'fram' → logprob: -3.2915420532226562
    3. '(a' → logprob: -6.791542053222656
    4. 'fr' → logprob: -6.916542053222656
    5. '(fr' → logprob: -7.666542053222656
    6. '(' → logprob: -8.666542053222656
    7. 'fun' → logprob: -8.916542053222656
    8. ' a' → logprob: -9.166542053222656
    9. 'fac' → logprob: -9.541542053222656
    10. 'frames' → logprob: -9.666542053222656

Token 299: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.18027155101299286
    2. '*' → logprob: -1.8052715063095093
    3. 'a' → logprob: -8.80527114868164
    4. '=' → logprob: -9.05527114868164
    5. '[' → logprob: -10.05527114868164
    6. ')' → logprob: -10.43027114868164
    7. ':=' → logprob: -10.43027114868164
    8. 'def' → logprob: -10.55527114868164
    9. 'fr' → logprob: -10.93027114868164
    10. 'fac' → logprob: -11.18027114868164

Token 300: ' power' (ID: 3470)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.20613741874694824
    2. 'b' → logprob: -2.4561374187469482
    3. 'power' → logprob: -2.9561374187469482
    4. 'c' → logprob: -3.3311374187469482
    5. ' pow' → logprob: -5.456137657165527
    6. 'fram' → logprob: -5.456137657165527
    7. 'fr' → logprob: -5.956137657165527
    8. 'fun' → logprob: -7.956137657165527
    9. ' power' → logprob: -8.081137657165527
    10. ' b' → logprob: -8.581137657165527

Token 301: '(b' (ID: 3229)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.28470876812934875
    2. '(b' → logprob: -1.4097087383270264
    3. '(a' → logprob: -6.5347089767456055
    4. '(' → logprob: -6.7847089767456055
    5. 'b' → logprob: -8.159708976745605
    6. ')' → logprob: -8.534708976745605
    7. 'c' → logprob: -8.784708976745605
    8. ')(' → logprob: -9.159708976745605
    9. '(n' → logprob: -9.784708976745605
    10. '(k' → logprob: -10.034708976745605

Token 302: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.4087797999382019
    2. '(k' → logprob: -1.5337798595428467
    3. ',' → logprob: -2.9087798595428467
    4. '(n' → logprob: -3.9087798595428467
    5. '(' → logprob: -4.283779621124268
    6. 'c' → logprob: -4.658779621124268
    7. '(mod' → logprob: -4.783779621124268
    8. '(b' → logprob: -5.033779621124268
    9. ',c' → logprob: -6.533779621124268
    10. 'mod' → logprob: -6.783779621124268

Token 303: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.4038441479206085
    2. 'c' → logprob: -1.1538441181182861
    3. '(mod' → logprob: -4.278844356536865
    4. 'MOD' → logprob: -6.528844356536865
    5. ' mod' → logprob: -7.153844356536865
    6. '(c' → logprob: -8.528843879699707
    7. '   ' → logprob: -8.778843879699707
    8. ' c' → logprob: -9.028843879699707
    9. '           ' → logprob: -9.778843879699707
    10. '       ' → logprob: -10.278843879699707

Token 304: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07111922651529312
    2. 'mod' → logprob: -3.5711193084716797
    3. 'MOD' → logprob: -4.07111930847168
    4. ' -' → logprob: -4.19611930847168
    5. ',' → logprob: -5.19611930847168
    6. ' mod' → logprob: -7.07111930847168
    7. ' MOD' → logprob: -7.94611930847168
    8. '(mod' → logprob: -7.94611930847168
    9. '.mod' → logprob: -8.07111930847168
    10. '   ' → logprob: -8.44611930847168

Token 305: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.000008583068848
    3. '```' → logprob: -14.125008583068848
    4. '
' → logprob: -14.375008583068848
    5. '

' → logprob: -15.562508583068848
    6. '-' → logprob: -15.937508583068848
    7. '   ' → logprob: -16.12500762939453
    8. '3' → logprob: -16.75000762939453
    9. '
' → logprob: -17.12500762939453
    10. '  ' → logprob: -17.18750762939453

Token 306: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.875001907348633
    3. '
' → logprob: -14.750001907348633
    4. '```' → logprob: -14.875001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '

' → logprob: -16.687501907348633
    7. '-' → logprob: -16.812501907348633
    8. ''' → logprob: -17.187501907348633
    9. '"' → logprob: -17.437501907348633
    10. '
' → logprob: -17.750001907348633

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033187614753842354
    2. ' ,' → logprob: -6.253318786621094
    3. '%' → logprob: -7.378318786621094
    4. ' %' → logprob: -7.753318786621094
    5. ')' → logprob: -8.378318786621094
    6. '%c' → logprob: -10.628318786621094
    7. '   ' → logprob: -10.878318786621094
    8. ',
' → logprob: -11.128318786621094
    9. '(mod' → logprob: -11.253318786621094
    10. 'mod' → logprob: -12.128318786621094

Token 308: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.000433291686931625
    2. ' mod' → logprob: -7.750433444976807
    3. 'c' → logprob: -13.250432968139648
    4. '   ' → logprob: -15.250432968139648
    5. '(mod' → logprob: -15.375432968139648
    6. '	mod' → logprob: -15.625432968139648
    7. 'MOD' → logprob: -16.25043296813965
    8. '           ' → logprob: -17.00043296813965
    9. '  ' → logprob: -17.12543296813965
    10. '       ' → logprob: -17.75043296813965

Token 309: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6946291327476501
    2. '))' → logprob: -0.9446291327476501
    3. ',' → logprob: -2.194629192352295
    4. '   ' → logprob: -8.694628715515137
    5. ')%' → logprob: -9.194628715515137
    6. 'a' → logprob: -9.944628715515137
    7. ' )' → logprob: -10.194628715515137
    8. ' ,' → logprob: -10.444628715515137
    9. ' ))' → logprob: -10.444628715515137
    10. '%' → logprob: -11.194628715515137

Token 310: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04637071490287781
    2. ' %' → logprob: -3.2963707447052
    3. '%' → logprob: -4.921370506286621
    4. ')%' → logprob: -7.171370506286621
    5. '   ' → logprob: -9.046370506286621
    6. ' )' → logprob: -9.421370506286621
    7. '%c' → logprob: -10.921370506286621
    8. '    ' → logprob: -12.546370506286621
    9. '%s' → logprob: -12.671370506286621
    10. '  ' → logprob: -12.671370506286621

Token 311: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.16615107655525208
    2. 'c' → logprob: -1.9161510467529297
    3. ' power' → logprob: -5.16615104675293
    4. ' c' → logprob: -8.91615104675293
    5. 'pow' → logprob: -9.91615104675293
    6. '(power' → logprob: -11.41615104675293
    7. '   ' → logprob: -13.41615104675293
    8. '  ' → logprob: -13.54115104675293
    9. '%c' → logprob: -13.91615104675293
    10. ')c' → logprob: -14.16615104675293

Token 312: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0018587957601994276
    2. 'c' → logprob: -6.376858711242676
    3. ')c' → logprob: -9.501858711242676
    4. ')' → logprob: -10.251858711242676
    5. ')(' → logprob: -10.876858711242676
    6. '(' → logprob: -11.751858711242676
    7. '   ' → logprob: -12.626858711242676
    8. ' (' → logprob: -13.376858711242676
    9. '©' → logprob: -13.501858711242676
    10. '	c' → logprob: -13.501858711242676

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5861724831629544e-05
    2. ' ,' → logprob: -10.000056266784668
    3. ',
' → logprob: -12.375056266784668
    4. '(mod' → logprob: -12.625056266784668
    5. 'mod' → logprob: -14.125056266784668
    6. '<|end|>' → logprob: -14.250056266784668
    7. ')' → logprob: -15.125056266784668
    8. ' mod' → logprob: -15.500056266784668
    9. ',module' → logprob: -15.625056266784668
    10. '(' → logprob: -15.625056266784668

Token 314: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0006272526225075126
    2. ' mod' → logprob: -8.125627517700195
    3. '(mod' → logprob: -8.125627517700195
    4. 'MOD' → logprob: -10.625627517700195
    5. ')' → logprob: -12.625627517700195
    6. '   ' → logprob: -13.750627517700195
    7. '2' → logprob: -14.125627517700195
    8. '
' → logprob: -14.250627517700195
    9. '  ' → logprob: -14.375627517700195
    10. '           ' → logprob: -14.500627517700195

Token 315: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7988635301589966
    2. ' -' → logprob: -1.1738635301589966
    3. ',' → logprob: -1.4238635301589966
    4. ' ,' → logprob: -8.798863410949707
    5. ',
' → logprob: -11.048863410949707
    6. '   ' → logprob: -11.798863410949707
    7. ' ' → logprob: -11.923863410949707
    8. '  ' → logprob: -12.548863410949707
    9. ',-' → logprob: -12.798863410949707
    10. ')' → logprob: -12.798863410949707

Token 316: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4287741184234619
    2. '2' → logprob: -1.053774118423462
    3. '-' → logprob: -10.553773880004883
    4. ' ' → logprob: -10.553773880004883
    5. ' -' → logprob: -12.553773880004883
    6. '
' → logprob: -12.678773880004883
    7. '   ' → logprob: -13.241273880004883
    8. 'MOD' → logprob: -13.428773880004883
    9. ')' → logprob: -13.491273880004883
    10. 'mod' → logprob: -13.616273880004883

Token 317: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0894087553024292
    2. '2' → logprob: -2.4644088745117188
    3. '-' → logprob: -7.964408874511719
    4. '```' → logprob: -10.714408874511719
    5. '
' → logprob: -10.839408874511719
    6. ' ' → logprob: -11.089408874511719
    7. '(' → logprob: -11.214408874511719
    8. ' -' → logprob: -11.464408874511719
    9. '3' → logprob: -11.964408874511719
    10. '   ' → logprob: -12.339408874511719

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010038702748715878
    2. ' ,' → logprob: -7.001003742218018
    3. ')' → logprob: -10.376004219055176
    4. '(mod' → logprob: -11.001004219055176
    5. ' mod' → logprob: -11.126004219055176
    6. 'mod' → logprob: -11.501004219055176
    7. '<|end|>' → logprob: -11.501004219055176
    8. ',
' → logprob: -12.501004219055176
    9. '[' → logprob: -13.126004219055176
    10. '),' → logprob: -13.376004219055176

Token 319: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.038059163838624954
    2. ' mod' → logprob: -3.2880592346191406
    3. '(mod' → logprob: -11.78805923461914
    4. ')' → logprob: -12.53805923461914
    5. '```' → logprob: -12.66305923461914
    6. '	mod' → logprob: -13.91305923461914
    7. 'MOD' → logprob: -14.28805923461914
    8. '
' → logprob: -14.91305923461914
    9. ',' → logprob: -15.28805923461914
    10. '[' → logprob: -15.53805923461914

Token 320: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008731092675589025
    2. ')%' → logprob: -7.75087308883667
    3. '   ' → logprob: -7.87587308883667
    4. '))' → logprob: -10.875873565673828
    5. ' )' → logprob: -11.000873565673828
    6. '%' → logprob: -11.375873565673828
    7. ' %' → logprob: -11.625873565673828
    8. '       ' → logprob: -13.250873565673828
    9. ')
' → logprob: -13.500873565673828
    10. '  ' → logprob: -13.750873565673828

Token 321: ' %' (ID: 1851)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7830660343170166
    2. '%' → logprob: -1.5330660343170166
    3. ' %' → logprob: -2.0330660343170166
    4. '(a' → logprob: -2.2830660343170166
    5. ')' → logprob: -3.0330660343170166
    6. ')%' → logprob: -3.9080660343170166
    7. '   ' → logprob: -4.9080657958984375
    8. '(' → logprob: -5.2830657958984375
    9. '((' → logprob: -5.4080657958984375
    10. '(
' → logprob: -5.9080657958984375

Token 322: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.000146687583765015
    2. ' mod' → logprob: -9.000146865844727
    3. 'MOD' → logprob: -10.875146865844727
    4. '(mod' → logprob: -12.375146865844727
    5. '	mod' → logprob: -16.750146865844727
    6. '```' → logprob: -17.625146865844727
    7. ' MOD' → logprob: -17.750146865844727
    8. ' ' → logprob: -19.250146865844727
    9. '   ' → logprob: -19.375146865844727
    10. 'modal' → logprob: -19.875146865844727

Token 323: '
' (ID: 198)
  Prédit: ')(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')(
' → logprob: -0.36255186796188354
    2. ')(' → logprob: -1.4875519275665283
    3. '(n' → logprob: -2.7375519275665283
    4. ')' → logprob: -5.362551689147949
    5. '   ' → logprob: -5.362551689147949
    6. '(' → logprob: -6.737551689147949
    7. '(
' → logprob: -6.737551689147949
    8. ' (' → logprob: -6.987551689147949
    9. ' )(' → logprob: -8.61255168914795
    10. ')((' → logprob: -8.98755168914795

Token 324: '   ' (ID: 271)
  Prédit: ')(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(
' → logprob: -1.0184520483016968
    2. '   ' → logprob: -1.2684520483016968
    3. '(n' → logprob: -2.0184521675109863
    4. ')(' → logprob: -2.6434521675109863
    5. ' (' → logprob: -2.8934521675109863
    6. '(
' → logprob: -3.0184521675109863
    7. '(' → logprob: -3.3934521675109863
    8. ')' → logprob: -4.768452167510986
    9. '(f' → logprob: -6.268452167510986
    10. ' (
' → logprob: -6.893452167510986

Token 325: ' )(' (ID: 100233)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05235080048441887
    2. ')(' (adapté à ' )(') → logprob: -3.9273507595062256
    3. '(
' → logprob: -4.177350997924805
    4. '(' → logprob: -4.552350997924805
    5. ')(
' → logprob: -5.427350997924805
    6. '(f' → logprob: -8.052350997924805
    7. '   ' → logprob: -8.177350997924805
    8. ' (' → logprob: -8.552350997924805
    9. ')' → logprob: -8.927350997924805
    10. '((' → logprob: -10.677350997924805

Token 326: 'fram' (ID: 82360)
  Prédit: 'fram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fram' → logprob: -0.02540673315525055
    2. 'fun' → logprob: -3.775406837463379
    3. 'fr' → logprob: -6.650406837463379
    4. ' fram' → logprob: -7.650406837463379
    5. '   ' → logprob: -9.775406837463379
    6. 'frame' → logprob: -9.775406837463379
    7. '(fr' → logprob: -10.025406837463379
    8. 'fac' → logprob: -10.275406837463379
    9. 'fra' → logprob: -10.525406837463379
    10. 'frames' → logprob: -10.775406837463379

Token 327: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -3.5716304410016164e-05
    2. 'mod' → logprob: -10.250035285949707
    3. 'од' → logprob: -16.125036239624023
    4. '(mod' → logprob: -16.125036239624023
    5. 'o' → logprob: -17.500036239624023
    6. '[' → logprob: -18.000036239624023
    7. '(' → logprob: -18.125036239624023
    8. '
' → logprob: -18.250036239624023
    9. '0' → logprob: -18.250036239624023
    10. '{' → logprob: -18.500036239624023

Token 328: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -11.750009536743164
    3. 'n' → logprob: -14.500009536743164
    4. ' (' → logprob: -15.000009536743164
    5. ')(' → logprob: -15.375009536743164
    6. ')' → logprob: -16.375009536743164
    7. '(
' → logprob: -16.625009536743164
    8. ',n' → logprob: -16.875009536743164
    9. ')n' → logprob: -17.250009536743164
    10. '<|end|>' → logprob: -17.375009536743164

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13408589363098145
    2. ',k' → logprob: -2.6340858936309814
    3. '),' → logprob: -3.6340858936309814
    4. ')' → logprob: -4.884085655212402
    5. '(n' → logprob: -5.009085655212402
    6. '   ' → logprob: -5.634085655212402
    7. '(' → logprob: -6.384085655212402
    8. ' ,' → logprob: -6.384085655212402
    9. '(k' → logprob: -6.509085655212402
    10. ')(' → logprob: -7.384085655212402

Token 330: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0031806828919798136
    2. 'MOD' → logprob: -5.753180503845215
    3. ' mod' → logprob: -13.628180503845215
    4. '   ' → logprob: -14.628180503845215
    5. '(mod' → logprob: -15.003180503845215
    6. '```' → logprob: -15.128180503845215
    7. ' MOD' → logprob: -15.628180503845215
    8. '	mod' → logprob: -15.628180503845215
    9. '
' → logprob: -16.50318145751953
    10. 'moder' → logprob: -16.62818145751953

Token 331: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03788471221923828
    2. ',' → logprob: -4.037884712219238
    3. '),
' → logprob: -4.912884712219238
    4. ')' → logprob: -5.537884712219238
    5. '   ' → logprob: -5.662884712219238
    6. '(n' → logprob: -5.787884712219238
    7. ' ' → logprob: -8.662884712219238
    8. ' ),' → logprob: -8.662884712219238
    9. ',k' → logprob: -8.787884712219238
    10. 'k' → logprob: -8.787884712219238

Token 332: ' fram' (ID: 19795)
  Prédit: 'fram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fram' → logprob: -0.00032473751343786716
    2. ' fram' → logprob: -8.250325202941895
    3. 'fr' → logprob: -9.750325202941895
    4. '   ' → logprob: -13.250325202941895
    5. 'frag' → logprob: -13.875325202941895
    6. ' ' → logprob: -15.000325202941895
    7. '    
' → logprob: -15.375325202941895
    8. 'frm' → logprob: -15.625325202941895
    9. '
' → logprob: -15.750325202941895
    10. ' ' → logprob: -15.875325202941895

Token 333: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.0011965400772169232
    2. 'mod' → logprob: -6.751196384429932
    3. '(mod' → logprob: -11.12619686126709
    4. '
' → logprob: -12.37619686126709
    5. '(k' → logprob: -13.12619686126709
    6. '(n' → logprob: -13.37619686126709
    7. 'k' → logprob: -13.87619686126709
    8. '   ' → logprob: -14.62619686126709
    9. '{' → logprob: -14.62619686126709
    10. '(' → logprob: -14.87619686126709

Token 334: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -3.976922744186595e-05
    2. '(' → logprob: -10.875040054321289
    3. 'k' → logprob: -11.250040054321289
    4. '(n' → logprob: -12.250040054321289
    5. ')(' → logprob: -13.000040054321289
    6. ' (' → logprob: -15.250040054321289
    7. '(
' → logprob: -15.375040054321289
    8. ')' → logprob: -16.37504005432129
    9. ' k' → logprob: -17.00004005432129
    10. '((' → logprob: -17.12504005432129

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0043779052793979645
    2. ' ,' → logprob: -5.629377841949463
    3. '(mod' → logprob: -7.254377841949463
    4. ')' → logprob: -10.254378318786621
    5. 'mod' → logprob: -11.504378318786621
    6. '),' → logprob: -12.254378318786621
    7. '   ' → logprob: -12.754378318786621
    8. '```' → logprob: -12.879378318786621
    9. ' mod' → logprob: -13.254378318786621
    10. '(' → logprob: -13.254378318786621

Token 336: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.572941179503687e-05
    2. ' mod' → logprob: -10.000045776367188
    3. 'MOD' → logprob: -15.500045776367188
    4. '	mod' → logprob: -17.125045776367188
    5. '(mod' → logprob: -17.500045776367188
    6. '   ' → logprob: -18.000045776367188
    7. '  ' → logprob: -18.500045776367188
    8. ' ' → logprob: -18.625045776367188
    9. '           ' → logprob: -18.750045776367188
    10. '       ' → logprob: -18.875045776367188

Token 337: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010427596978843212
    2. ' ,' → logprob: -5.135427474975586
    3. '),' → logprob: -5.510427474975586
    4. ')' → logprob: -8.135427474975586
    5. ',
' → logprob: -9.135427474975586
    6. '   ' → logprob: -11.010427474975586
    7. ' ),' → logprob: -12.260427474975586
    8. ',n' → logprob: -12.260427474975586
    9. '       ' → logprob: -13.010427474975586
    10. ')
' → logprob: -13.510427474975586

Token 338: ' fram' (ID: 19795)
  Prédit: 'fram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fram' → logprob: -0.00017064384883269668
    2. 'fr' → logprob: -9.000170707702637
    3. ' fram' → logprob: -10.000170707702637
    4. '   ' → logprob: -14.250170707702637
    5. '  ' → logprob: -15.125170707702637
    6. '
' → logprob: -15.250170707702637
    7. ' ' → logprob: -15.500170707702637
    8. 'frag' → logprob: -15.875170707702637
    9. '```' → logprob: -16.00016975402832
    10. ' ' → logprob: -16.50016975402832

Token 339: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -5.319370302458992e-06
    2. 'mod' → logprob: -12.875005722045898
    3. '(k' → logprob: -13.500005722045898
    4. '(n' → logprob: -15.000005722045898
    5. 'k' → logprob: -15.375005722045898
    6. 'o' → logprob: -15.625005722045898
    7. 'odd' → logprob: -15.625005722045898
    8. '{' → logprob: -16.3750057220459
    9. 'ode' → logprob: -17.0000057220459
    10. 'ob' → logprob: -17.0000057220459

Token 340: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.160334512591362
    2. '(k' → logprob: -1.9103344678878784
    3. '(' → logprob: -9.910334587097168
    4. 'n' → logprob: -10.035334587097168
    5. 'k' → logprob: -11.910334587097168
    6. ' (' → logprob: -12.535334587097168
    7. '((' → logprob: -12.535334587097168
    8. '```' → logprob: -13.910334587097168
    9. ')(' → logprob: -14.160334587097168
    10. '(
' → logprob: -14.285334587097168

Token 341: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.3490293323993683
    2. '-' → logprob: -1.349029302597046
    3. ' -' → logprob: -3.349029302597046
    4. 'k' → logprob: -11.099029541015625
    5. '-
' → logprob: -13.974029541015625
    6. ' ' → logprob: -14.099029541015625
    7. ' k' → logprob: -15.599029541015625
    8. '-K' → logprob: -16.724029541015625
    9. '   ' → logprob: -17.224029541015625
    10. '−' → logprob: -17.349029541015625

Token 342: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.15310683415737e-05
    2. ' k' → logprob: -10.750021934509277
    3. '	k' → logprob: -19.62502098083496
    4. '(k' → logprob: -21.62502098083496
    5. '{k' → logprob: -21.62502098083496
    6. '[k' → logprob: -22.00002098083496
    7. '-k' → logprob: -22.37502098083496
    8. ' к' → logprob: -23.12502098083496
    9. '   ' → logprob: -23.37502098083496
    10. 'kx' → logprob: -23.50002098083496

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000285530521068722
    2. ')' → logprob: -8.625285148620605
    3. ' ,' → logprob: -9.250285148620605
    4. '<|end|>' → logprob: -13.000285148620605
    5. ',
' → logprob: -13.375285148620605
    6. '[' → logprob: -13.375285148620605
    7. '),' → logprob: -13.875285148620605
    8. 'mod' → logprob: -14.375285148620605
    9. ',module' → logprob: -14.500285148620605
    10. '(mod' → logprob: -14.625285148620605

Token 344: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011048289015889168
    2. ' mod' → logprob: -4.511048316955566
    3. '	mod' → logprob: -15.511048316955566
    4. '(mod' → logprob: -15.761048316955566
    5. 'MOD' → logprob: -16.51104736328125
    6. ' ' → logprob: -18.38604736328125
    7. '```' → logprob: -18.76104736328125
    8. '.mod' → logprob: -19.13604736328125
    9. ' MOD' → logprob: -19.26104736328125
    10. '   ' → logprob: -19.38604736328125

Token 345: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. '))' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.625004768371582
    4. ')`' → logprob: -15.375004768371582
    5. ')}' → logprob: -15.750004768371582
    6. ')))' → logprob: -16.625003814697266
    7. ')
' → logprob: -17.000003814697266
    8. ')}}' → logprob: -17.625003814697266
    9. '),' → logprob: -17.750003814697266
    10. ')return' → logprob: -18.250003814697266

Token 346: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: ' Input' (ID: 10090)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24612431228160858
    2. '#' → logprob: -1.871124267578125
    3. ')' → logprob: -3.871124267578125
    4. 'print' → logprob: -4.121124267578125
    5. 'import' → logprob: -5.121124267578125
    6. '<|end|>' → logprob: -5.121124267578125
    7. 'n' → logprob: -5.246124267578125
    8. 'for' → logprob: -5.746124267578125
    9. 'result' → logprob: -6.746124267578125
    10. '```' → logprob: -7.246124267578125

Token 348: ' parsing' (ID: 51039)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14419935643672943
    2. 'for' → logprob: -2.2691993713378906
    3. 'data' → logprob: -3.7691993713378906
    4. 'input' → logprob: -5.769199371337891
    5. 'line' → logprob: -6.769199371337891
    6. '=' → logprob: -7.394199371337891
    7. 'N' → logprob: -7.394199371337891
    8. ' =' → logprob: -7.519199371337891
    9. '(n' → logprob: -8.01919937133789
    10. ' n' → logprob: -8.26919937133789

Token 349: ' using' (ID: 2360)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09616649150848389
    2. 'for' → logprob: -2.8461666107177734
    3. 'input' → logprob: -4.096166610717773
    4. 'data' → logprob: -4.096166610717773
    5. 'def' → logprob: -8.846166610717773
    6. 'line' → logprob: -10.096166610717773
    7. ' for' → logprob: -10.096166610717773
    8. ' n' → logprob: -10.471166610717773
    9. 'inputs' → logprob: -10.971166610717773
    10. 'inp' → logprob: -11.346166610717773

Token 350: ' next' (ID: 2613)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.027092359960079193
    2. 'input' → logprob: -4.027092456817627
    3. 'lambda' → logprob: -5.402092456817627
    4. ' sys' → logprob: -5.777092456817627
    5. 'map' → logprob: -8.277091979980469
    6. ' input' → logprob: -8.402091979980469
    7. '=sys' → logprob: -8.652091979980469
    8. 'for' → logprob: -8.777091979980469
    9. ' lambda' → logprob: -9.777091979980469
    10. 'next' → logprob: -10.027091979980469

Token 351: ' and' (ID: 326)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -1.4007302522659302
    2. 'token' → logprob: -1.9007302522659302
    3. '_input' → logprob: -2.2757301330566406
    4. 'input' → logprob: -2.4007301330566406
    5. '(iter' → logprob: -2.4007301330566406
    6. '(input' → logprob: -2.7757301330566406
    7. '(' → logprob: -3.2757301330566406
    8. 'sys' → logprob: -3.4007301330566406
    9. '(iterator' → logprob: -3.4007301330566406
    10. '_token' → logprob: -3.6507301330566406

Token 352: ' map' (ID: 4014)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2541919946670532
    2. 'iter' → logprob: -1.5041919946670532
    3. ' iter' → logprob: -6.879191875457764
    4. 'map' → logprob: -7.254191875457764
    5. 'input' → logprob: -8.004192352294922
    6. ' sys' → logprob: -9.129192352294922
    7. '(sys' → logprob: -10.629192352294922
    8. 'filter' → logprob: -11.129192352294922
    9. '(iter' → logprob: -11.504192352294922
    10. 'lambda' → logprob: -11.629192352294922

Token 353: ',' (ID: 11)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.36832061409950256
    2. 'input' → logprob: -1.8683205842971802
    3. 'n' → logprob: -3.3683207035064697
    4. 'inputs' → logprob: -3.4933207035064697
    5. 'nums' → logprob: -3.6183207035064697
    6. '(
' → logprob: -3.9933207035064697
    7. 'values' → logprob: -4.993320465087891
    8. 'numbers' → logprob: -5.118320465087891
    9. 'sys' → logprob: -5.618320465087891
    10. 'def' → logprob: -5.743320465087891

Token 354: ' print' (ID: 2123)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6347517967224121
    2. 'data' → logprob: -1.509751796722412
    3. 'lambda' → logprob: -3.134751796722412
    4. 'nums' → logprob: -3.384751796722412
    5. '_' → logprob: -3.634751796722412
    6. 'sys' → logprob: -4.009751796722412
    7. 'for' → logprob: -4.009751796722412
    8. 'line' → logprob: -4.259751796722412
    9. 'input' → logprob: -4.259751796722412
    10. 'tokens' → logprob: -4.509751796722412

Token 355: ' using' (ID: 2360)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.2373923808336258
    2. '(' → logprob: -1.9873924255371094
    3. 'line' → logprob: -4.237392425537109
    4. ' =' → logprob: -4.612392425537109
    5. 'for' → logprob: -4.737392425537109
    6. '(sys' → logprob: -4.987392425537109
    7. 'input' → logprob: -5.112392425537109
    8. 'value' → logprob: -5.862392425537109
    9. '(input' → logprob: -5.862392425537109
    10. 'sys' → logprob: -5.862392425537109

Token 356: ' list' (ID: 1562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015157493180595338
    2. '(print' → logprob: -9.000151634216309
    3. 'sys' → logprob: -10.750151634216309
    4. '```' → logprob: -12.250151634216309
    5. ' print' → logprob: -13.500151634216309
    6. '(sys' → logprob: -15.125151634216309
    7. '(' → logprob: -16.500150680541992
    8. 'next' → logprob: -17.000150680541992
    9. '(
' → logprob: -17.375150680541992
    10. '``' → logprob: -18.375150680541992

Token 357: ' comprehension' (ID: 91423)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8735613822937012
    2. 'input' → logprob: -1.9985613822937012
    3. 'for' → logprob: -2.498561382293701
    4. 'print' → logprob: -2.873561382293701
    5. 'line' → logprob: -2.873561382293701
    6. '(
' → logprob: -3.248561382293701
    7. '_' → logprob: -3.748561382293701
    8. 'inputs' → logprob: -3.748561382293701
    9. '(' → logprob: -3.998561382293701
    10. 'lines' → logprob: -4.123561382293701

Token 358: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1373158693313599
    2. 'data' → logprob: -1.7623158693313599
    3. 'for' → logprob: -2.1373157501220703
    4. 'print' → logprob: -2.8873157501220703
    5. 'inputs' → logprob: -3.0123157501220703
    6. 'nums' → logprob: -3.1373157501220703
    7. '_' → logprob: -3.2623157501220703
    8. '(n' → logprob: -3.6373157501220703
    9. '(
' → logprob: -4.01231575012207
    10. 'line' → logprob: -4.01231575012207

Token 359: ' side' (ID: 4307)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03400733321905136
    2. 'print' → logprob: -3.9090073108673096
    3. '_[' → logprob: -4.534007549285889
    4. '_
' → logprob: -6.909007549285889
    5. '[' → logprob: -7.409007549285889
    6. '_=' → logprob: -7.659007549285889
    7. '[_' → logprob: -8.53400707244873
    8. '_print' → logprob: -9.28400707244873
    9. '(lambda' → logprob: -9.78400707244873
    10. '[
' → logprob: -10.03400707244873

Token 360: ' effects' (ID: 9327)
  Prédit: 'effects'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'effects' → logprob: -0.15040962398052216
    2. 'effect' → logprob: -2.400409698486328
    3. 'ffect' → logprob: -4.150409698486328
    4. '_effect' → logprob: -4.275409698486328
    5. ' effects' → logprob: -4.650409698486328
    6. ' effect' → logprob: -5.900409698486328
    7. '-effect' → logprob: -6.275409698486328
    8. 'ffects' → logprob: -6.400409698486328
    9. '=' → logprob: -6.650409698486328
    10. '-effects' → logprob: -7.400409698486328

Token 361: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.035949945449829
    2. 'data' → logprob: -1.535949945449829
    3. 'input' → logprob: -2.035949945449829
    4. 'for' → logprob: -2.285949945449829
    5. 'print' → logprob: -2.785949945449829
    6. '_' → logprob: -3.410949945449829
    7. 'x' → logprob: -4.16094970703125
    8. 'inputs' → logprob: -4.16094970703125
    9. 'inp' → logprob: -4.28594970703125
    10. 'nums' → logprob: -4.66094970703125

Token 362: 'def' (ID: 1314)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8389488458633423
    2. 'n' → logprob: -0.9639488458633423
    3. 'for' → logprob: -3.0889487266540527
    4. 'input' → logprob: -3.3389487266540527
    5. '[n' → logprob: -3.9639487266540527
    6. 'line' → logprob: -4.588948726654053
    7. 'inputs' → logprob: -4.588948726654053
    8. 'nums' → logprob: -4.713948726654053
    9. '_' → logprob: -5.088948726654053
    10. 'exec' → logprob: -5.213948726654053

Token 363: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.14597971737384796
    2. 'print' → logprob: -2.770979642868042
    3. ' main' → logprob: -3.145979642868042
    4. 'process' → logprob: -4.520979881286621
    5. 'solve' → logprob: -5.395979881286621
    6. 'parse' → logprob: -5.770979881286621
    7. '_' → logprob: -6.270979881286621
    8. 'input' → logprob: -6.270979881286621
    9. ' print' → logprob: -6.770979881286621
    10. ' process' → logprob: -6.770979881286621

Token 364: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12694847583770752
    2. '():
' → logprob: -2.126948356628418
    3. ' ():' → logprob: -11.501948356628418
    4. '()' → logprob: -12.126948356628418
    5. '():
' → logprob: -12.876948356628418
    6. '(argv' → logprob: -14.126948356628418
    7. '(args' → logprob: -14.251948356628418
    8. '():

' → logprob: -14.251948356628418
    9. '(' → logprob: -16.001949310302734
    10. '(n' → logprob: -16.751949310302734

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10969528555870056
    2. 'n' → logprob: -2.4846951961517334
    3. ' n' → logprob: -4.8596954345703125
    4. 'import' → logprob: -4.9846954345703125
    5. 'data' → logprob: -6.4846954345703125
    6. '(n' → logprob: -6.9846954345703125
    7. 'for' → logprob: -7.1096954345703125
    8. ' for' → logprob: -8.359695434570312
    9. 'input' → logprob: -8.359695434570312
    10. 's' → logprob: -8.609695434570312

Token 366: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4068581163883209
    2. 't' → logprob: -1.6568580865859985
    3. '   ' → logprob: -2.531858205795288
    4. ' n' → logprob: -4.156857967376709
    5. ' t' → logprob: -4.656857967376709
    6. 'T' → logprob: -4.656857967376709
    7. 'for' → logprob: -4.781857967376709
    8. 'data' → logprob: -5.281857967376709
    9. 'input' → logprob: -5.281857967376709
    10. 'inputs' → logprob: -5.906857967376709

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02777029015123844
    2. '=' → logprob: -4.152770519256592
    3. ' =' → logprob: -4.527770519256592
    4. ',K' → logprob: -7.402770519256592
    5. ' ,' → logprob: -9.527770042419434
    6. ',Q' → logprob: -9.652770042419434
    7. ',k' → logprob: -10.027770042419434
    8. ' ' → logprob: -11.277770042419434
    9. ',T' → logprob: -11.652770042419434
    10. ',N' → logprob: -11.777770042419434

Token 368: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.019571391865611076
    2. 'M' → logprob: -4.519571304321289
    3. 'Q' → logprob: -5.144571304321289
    4. ' K' → logprob: -6.394571304321289
    5. 'R' → logprob: -7.894571304321289
    6. 'k' → logprob: -8.019571304321289
    7. 'r' → logprob: -8.644571304321289
    8. ' M' → logprob: -10.644571304321289
    9. 'MOD' → logprob: -11.144571304321289
    10. 'A' → logprob: -11.644571304321289

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269347220659256
    2. ' =' → logprob: -2.126934766769409
    3. ',' → logprob: -12.751935005187988
    4. '=sys' → logprob: -12.751935005187988
    5. ' ' → logprob: -15.376935005187988
    6. '=int' → logprob: -15.501935005187988
    7. '=input' → logprob: -15.501935005187988
    8. '=list' → logprob: -16.876934051513672
    9. ')=' → logprob: -17.376934051513672
    10. ' ' → logprob: -17.501934051513672

Token 370: ' (' (ID: 350)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.03804171830415726
    2. ' map' → logprob: -3.288041830062866
    3. 'list' → logprob: -16.038042068481445
    4. '	map' → logprob: -16.913042068481445
    5. ' ' → logprob: -17.038042068481445
    6. '   ' → logprob: -17.163042068481445
    7. '(map' → logprob: -17.663042068481445
    8. '  ' → logprob: -18.163042068481445
    9. '[' → logprob: -18.413042068481445
    10. 'next' → logprob: -19.288042068481445

Token 371: 'lambda' (ID: 35280)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.026362191885709763
    2. 'int' → logprob: -3.776362180709839
    3. '*' → logprob: -5.901362419128418
    4. ' map' → logprob: -7.901362419128418
    5. 'next' → logprob: -13.401362419128418
    6. 'list' → logprob: -14.026362419128418
    7. ' ' → logprob: -14.401362419128418
    8. ')' → logprob: -14.651362419128418
    9. '
' → logprob: -14.776362419128418
    10. '*(' → logprob: -14.901362419128418

Token 372: ' l' (ID: 305)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.07083439826965332
    2. 'int' → logprob: -3.4458343982696533
    3. 'map' → logprob: -4.070834159851074
    4. ':' → logprob: -4.570834159851074
    5. 'iter' → logprob: -5.820834159851074
    6. ' next' → logprob: -6.070834159851074
    7. 'sys' → logprob: -6.445834159851074
    8. 'x' → logprob: -7.695834159851074
    9. 'lambda' → logprob: -7.820834159851074
    10. 'n' → logprob: -8.070834159851074

Token 373: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025004765018820763
    2. ':list' → logprob: -4.650004863739014
    3. 'next' → logprob: -4.900004863739014
    4. ' :' → logprob: -5.650004863739014
    5. '=' → logprob: -6.775004863739014
    6. 'list' → logprob: -7.150004863739014
    7. '=sys' → logprob: -7.525004863739014
    8. '   ' → logprob: -7.900004863739014
    9. '=list' → logprob: -8.150004386901855
    10. ' next' → logprob: -8.525004386901855

Token 374: ' tuple' (ID: 31311)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0026273811236023903
    2. ' next' → logprob: -6.752627372741699
    3. '(next' → logprob: -6.752627372741699
    4. 'int' → logprob: -9.2526273727417
    5. '[next' → logprob: -9.5026273727417
    6. 'list' → logprob: -9.8776273727417
    7. 'tuple' → logprob: -10.6276273727417
    8. 'map' → logprob: -10.6276273727417
    9. 'iter' → logprob: -11.5026273727417
    10. 'l' → logprob: -12.6276273727417

Token 375: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.037450067698955536
    2. 'next' → logprob: -3.537450075149536
    3. '(map' → logprob: -5.162449836730957
    4. 'iter' → logprob: -7.037449836730957
    5. '(next' → logprob: -7.787449836730957
    6. 'int' → logprob: -7.912449836730957
    7. 'l' → logprob: -9.037449836730957
    8. '[next' → logprob: -9.787449836730957
    9. ' map' → logprob: -10.412449836730957
    10. 'it' → logprob: -10.662449836730957

Token 376: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07010826468467712
    2. 'int' → logprob: -2.69510817527771
    3. 'next' → logprob: -9.070108413696289
    4. '   ' → logprob: -11.320108413696289
    5. '(next' → logprob: -11.945108413696289
    6. ' int' → logprob: -12.070108413696289
    7. '(lambda' → logprob: -12.070108413696289
    8. '(' → logprob: -12.445108413696289
    9. '
' → logprob: -12.570108413696289
    10. 'str' → logprob: -13.195108413696289

Token 377: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.2586500644683838
    2. '(next' → logprob: -2.008650064468384
    3. '(iter' → logprob: -3.633650064468384
    4. 'l' → logprob: -4.008649826049805
    5. '(sys' → logprob: -4.008649826049805
    6. 'next' → logprob: -4.383649826049805
    7. ',' → logprob: -5.008649826049805
    8. 'sys' → logprob: -5.883649826049805
    9. 'iter' → logprob: -6.133649826049805
    10. ',l' → logprob: -6.133649826049805

Token 378: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04007768630981445
    2. 'next' → logprob: -3.4150776863098145
    3. 'iter' → logprob: -5.5400776863098145
    4. ' l' → logprob: -7.0400776863098145
    5. 'sys' → logprob: -7.2900776863098145
    6. ' next' → logprob: -7.5400776863098145
    7. '(next' → logprob: -8.915077209472656
    8. 'list' → logprob: -9.290077209472656
    9. 'str' → logprob: -10.290077209472656
    10. ' iter' → logprob: -10.540077209472656

Token 379: '[' (ID: 58)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.03762654587626457
    2. '(input' → logprob: -4.16262674331665
    3. '(next' → logprob: -4.28762674331665
    4. 'sys' → logprob: -5.41262674331665
    5. '()))' → logprob: -7.16262674331665
    6. 'next' → logprob: -7.41262674331665
    7. '(iter' → logprob: -7.66262674331665
    8. '(' → logprob: -7.78762674331665
    9. 'input' → logprob: -8.412626266479492
    10. '))' → logprob: -9.162626266479492

Token 380: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4318252205848694
    2. 'range' → logprob: -1.9318251609802246
    3. 'sys' → logprob: -2.8068251609802246
    4. '1' → logprob: -3.3068251609802246
    5. 'input' → logprob: -3.4318251609802246
    6. '::-' → logprob: -3.9318251609802246
    7. ':' → logprob: -4.306825160980225
    8. '(' → logprob: -4.681825160980225
    9. 'split' → logprob: -4.806825160980225
    10. 'next' → logprob: -5.056825160980225

Token 381: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.12075306475162506
    2. '().' → logprob: -2.495753049850464
    3. ']))' → logprob: -4.745753288269043
    4. '],' → logprob: -5.245753288269043
    5. '])))' → logprob: -5.245753288269043
    6. ':].' → logprob: -5.995753288269043
    7. '.split' → logprob: -6.120753288269043
    8. ':' → logprob: -6.120753288269043
    9. ']' → logprob: -6.870753288269043
    10. ':]' → logprob: -6.870753288269043

Token 382: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.38715860247612
    2. 'split' → logprob: -1.1371586322784424
    3. 'rstrip' → logprob: -8.262158393859863
    4. ' strip' → logprob: -10.762158393859863
    5. ' split' → logprob: -11.887158393859863
    6. 'read' → logprob: -14.262158393859863
    7. '.strip' → logprob: -15.012158393859863
    8. '(strip' → logprob: -16.13715934753418
    9. 'str' → logprob: -16.63715934753418
    10. '(split' → logprob: -16.63715934753418

Token 383: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.4418171455617994e-05
    2. '('\' → logprob: -11.125044822692871
    3. '()' → logprob: -11.500044822692871
    4. '()
' → logprob: -11.625044822692871
    5. '.split' → logprob: -12.625044822692871
    6. '()[' → logprob: -13.500044822692871
    7. '()\' → logprob: -13.875044822692871
    8. 'split' → logprob: -14.125044822692871
    9. ' ().' → logprob: -14.250044822692871
    10. '(' → logprob: -14.750044822692871

Token 384: 'decode' (ID: 44196)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.392824874026701e-05
    2. 'rstrip' → logprob: -10.50003433227539
    3. 'strip' → logprob: -12.37503433227539
    4. ' split' → logprob: -13.25003433227539
    5. '(split' → logprob: -15.00003433227539
    6. 'spl' → logprob: -17.00003433227539
    7. '.split' → logprob: -18.37503433227539
    8. 'decode' → logprob: -19.37503433227539
    9. 'plit' → logprob: -19.87503433227539
    10. 'read' → logprob: -20.12503433227539

Token 385: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03274242952466011
    2. '('' → logprob: -4.032742500305176
    3. '()' → logprob: -5.157742500305176
    4. '()))' → logprob: -6.157742500305176
    5. '(),' → logprob: -6.532742500305176
    6. '())))' → logprob: -6.532742500305176
    7. '()[' → logprob: -6.657742500305176
    8. '(),'' → logprob: -7.032742500305176
    9. '())' → logprob: -7.657742500305176
    10. '()),' → logprob: -8.032742500305176

Token 386: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015872348740231246
    2. ' split' → logprob: -9.250158309936523
    3. 'encode' → logprob: -10.000158309936523
    4. 'strip' → logprob: -11.125158309936523
    5. '(split' → logprob: -13.750158309936523
    6. 'rstrip' → logprob: -13.875158309936523
    7. 'decode' → logprob: -15.875158309936523
    8. 'spl' → logprob: -16.875158309936523
    9. 'utf' → logprob: -17.000158309936523
    10. '.split' → logprob: -17.250158309936523

Token 387: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.2865920960903168
    2. '()' → logprob: -2.2865920066833496
    3. '('' → logprob: -2.2865920066833496
    4. '()))' → logprob: -3.2865920066833496
    5. '())))
' → logprob: -5.28659200668335
    6. ')))' → logprob: -6.03659200668335
    7. '(),' → logprob: -7.66159200668335
    8. '(),'' → logprob: -9.036592483520508
    9. '(','' → logprob: -9.036592483520508
    10. '()
' → logprob: -9.286592483520508

Token 388: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.5821118354797363
    2. '(N' → logprob: -2.0821118354797363
    3. ')' → logprob: -2.3321118354797363
    4. '   ' → logprob: -2.4571118354797363
    5. '(l' → logprob: -3.3321118354797363
    6. '(sys' → logprob: -3.3321118354797363
    7. '(lines' → logprob: -4.207111835479736
    8. '([' → logprob: -4.707111835479736
    9. '(lambda' → logprob: -5.207111835479736
    10. ')(
' → logprob: -5.582111835479736

Token 389: '[' (ID: 58)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.003226910252124071
    2. '[' → logprob: -5.8782267570495605
    3. ' sys' → logprob: -8.378227233886719
    4. '(sys' → logprob: -9.003227233886719
    5. 'list' → logprob: -10.253227233886719
    6. 'iter' → logprob: -11.503227233886719
    7. '[list' → logprob: -12.128227233886719
    8. ' [' → logprob: -12.253227233886719
    9. '=sys' → logprob: -12.378227233886719
    10. '[s' → logprob: -12.878227233886719

Token 390: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00011415231710998341
    2. ' sys' → logprob: -9.750114440917969
    3. 'input' → logprob: -10.125114440917969
    4. 'b' → logprob: -11.250114440917969
    5. 'next' → logprob: -13.750114440917969
    6. 'byte' → logprob: -14.500114440917969
    7. 'line' → logprob: -15.000114440917969
    8. 'x' → logprob: -15.375114440917969
    9. 'bytes' → logprob: -15.625114440917969
    10. '(sys' → logprob: -15.750114440917969

Token 391: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.31329333782196045
    2. 'stdin' → logprob: -1.3132933378219604
    3. '.argv' → logprob: -11.18829345703125
    4. 'argv' → logprob: -11.31329345703125
    5. '(stdin' → logprob: -12.56329345703125
    6. ' stdin' → logprob: -13.68829345703125
    7. '.stdout' → logprob: -15.31329345703125
    8. '_st' → logprob: -15.43829345703125
    9. 'modules' → logprob: -16.06329345703125
    10. '```' → logprob: -16.43829345703125

Token 392: '.buffer' (ID: 48964)
  Prédit: 'buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buffer' → logprob: -0.2626013159751892
    2. '.buffer' → logprob: -1.512601375579834
    3. '.readline' → logprob: -4.762601375579834
    4. 'read' → logprob: -6.262601375579834
    5. '.read' → logprob: -8.887600898742676
    6. '_buffer' → logprob: -11.137600898742676
    7. ' buffer' → logprob: -12.387600898742676
    8. 'Buffer' → logprob: -13.512600898742676
    9. '-buffer' → logprob: -13.512600898742676
    10. 'BUFFER' → logprob: -13.762600898742676

Token 393: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.070975071750581e-05
    2. 'read' → logprob: -11.000030517578125
    3. '.read' → logprob: -11.250030517578125
    4. ' readline' → logprob: -14.500030517578125
    5. '.readlines' → logprob: -14.625030517578125
    6. '.' → logprob: -18.750030517578125
    7. 'sys' → logprob: -19.875030517578125
    8. '```' → logprob: -20.000030517578125
    9. '.buffer' → logprob: -20.125030517578125
    10. 'buffer' → logprob: -20.625030517578125

Token 394: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020860321819782257
    2. '()]' → logprob: -4.145860195159912
    3. '())' → logprob: -6.395860195159912
    4. '])' → logprob: -6.645860195159912
    5. '()])
' → logprob: -7.395860195159912
    6. '(),' → logprob: -7.395860195159912
    7. '(' → logprob: -8.64586067199707
    8. ')])' → logprob: -8.77086067199707
    9. '()],' → logprob: -8.77086067199707
    10. '()[' → logprob: -10.27086067199707

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020691370591521263
    2. '
' → logprob: -6.377068996429443
    3. '    
' → logprob: -8.627069473266602
    4. '<|end|>' → logprob: -9.752069473266602
    5. '[
' → logprob: -10.752069473266602
    6. '[' → logprob: -10.752069473266602
    7. ' for' → logprob: -10.877069473266602
    8. ')' → logprob: -11.252069473266602
    9. '```' → logprob: -11.877069473266602
    10. 'for' → logprob: -12.002069473266602

Token 396: ' _' (ID: 1175)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.736908495426178
    2. '   ' → logprob: -1.4869084358215332
    3. 'result' → logprob: -2.236908435821533
    4. 'print' → logprob: -2.861908435821533
    5. ' for' → logprob: -3.361908435821533
    6. '[' → logprob: -3.611908435821533
    7. 'res' → logprob: -3.861908435821533
    8. 'arr' → logprob: -4.986908435821533
    9. ' res' → logprob: -5.236908435821533
    10. 'ans' → logprob: -5.486908435821533

Token 397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7230514287948608
    2. ' =' → logprob: -0.7230514287948608
    3. '=[' → logprob: -4.72305154800415
    4. 'print' → logprob: -5.09805154800415
    5. 'for' → logprob: -5.47305154800415
    6. 'N' → logprob: -5.72305154800415
    7. 'K' → logprob: -5.72305154800415
    8. 'result' → logprob: -6.59805154800415
    9. 'if' → logprob: -7.72305154800415
    10. 'answer' → logprob: -7.84805154800415

Token 398: ' [
' (ID: 4240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007954503409564495
    2. '[(' → logprob: -5.7579545974731445
    3. 'print' → logprob: -6.7579545974731445
    4. '[
' → logprob: -7.1329545974731445
    5. '[N' → logprob: -7.1329545974731445
    6. '_[' → logprob: -7.5079545974731445
    7. '[K' → logprob: -7.6329545974731445
    8. '[int' → logprob: -8.507954597473145
    9. '[list' → logprob: -9.132954597473145
    10. '[_' → logprob: -9.132954597473145

Token 399: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009263493702746928
    2. '(print' → logprob: -7.500926494598389
    3. '   ' → logprob: -8.00092601776123
    4. ' print' → logprob: -10.50092601776123
    5. '       ' → logprob: -12.00092601776123
    6. '(lambda' → logprob: -13.62592601776123
    7. '           ' → logprob: -14.12592601776123
    8. ' ' → logprob: -14.25092601776123
    9. 'sys' → logprob: -14.37592601776123
    10. '#print' → logprob: -15.50092601776123

Token 400: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00016766376211307943
    2. '(print' → logprob: -8.750167846679688
    3. '(lambda' → logprob: -12.875167846679688
    4. '   ' → logprob: -12.875167846679688
    5. ' print' → logprob: -13.500167846679688
    6. 'sys' → logprob: -14.125167846679688
    7. 'lambda' → logprob: -14.500167846679688
    8. '#print' → logprob: -14.625167846679688
    9. '
' → logprob: -15.250167846679688
    10. '```' → logprob: -16.000167846679688

Token 401: '(
' (ID: 1607)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.14945727586746216
    2. '((' → logprob: -2.7744572162628174
    3. '(
' → logprob: -3.0244572162628174
    4. '(' → logprob: -3.6494572162628174
    5. '(pow' → logprob: -7.6494574546813965
    6. '(((' → logprob: -8.149456977844238
    7. 'comb' → logprob: -8.399456977844238
    8. '(int' → logprob: -8.649456977844238
    9. '(f' → logprob: -8.774456977844238
    10. '('' → logprob: -9.149456977844238

Token 402: '           ' (ID: 352)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.23954464495182037
    2. '(com' → logprob: -1.6145446300506592
    3. '(
' → logprob: -4.989544868469238
    4. '(' → logprob: -5.239544868469238
    5. ' comb' → logprob: -7.364544868469238
    6. '   ' → logprob: -7.739544868469238
    7. '((' → logprob: -7.989544868469238
    8. 'com' → logprob: -8.364544868469238
    9. ' (' → logprob: -9.739544868469238
    10. '"' → logprob: -10.489544868469238

Token 403: ' ((' (ID: 3536)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.029491020366549492
    2. '(' → logprob: -4.529490947723389
    3. '(com' → logprob: -4.779490947723389
    4. '(
' → logprob: -5.154490947723389
    5. ''' → logprob: -6.779490947723389
    6. '((' (adapté à ' ((') → logprob: -7.529490947723389
    7. '"' → logprob: -7.779490947723389
    8. '''' → logprob: -8.779491424560547
    9. '('' → logprob: -8.779491424560547
    10. '1' → logprob: -8.779491424560547

Token 404: 'comb' (ID: 43606)
  Prédit: 'comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.016123520210385323
    2. '(' → logprob: -5.016123294830322
    3. '(com' → logprob: -6.141123294830322
    4. 'pow' → logprob: -6.391123294830322
    5. 'N' → logprob: -6.641123294830322
    6. 'lambda' → logprob: -6.766123294830322
    7. '(N' → logprob: -7.516123294830322
    8. '(i' → logprob: -7.641123294830322
    9. '(lambda' → logprob: -7.641123294830322
    10. '(-' → logprob: -8.64112377166748

Token 405: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.17419707775115967
    2. 'N' → logprob: -2.299197196960449
    3. '(i' → logprob: -2.924197196960449
    4. '(n' → logprob: -6.174197196960449
    5. 'i' → logprob: -6.424197196960449
    6. '(' → logprob: -6.799197196960449
    7. 'n' → logprob: -8.17419719696045
    8. ' (' → logprob: -8.54919719696045
    9. ' N' → logprob: -8.54919719696045
    10. '(K' → logprob: -9.29919719696045

Token 406: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012184909544885159
    2. ',k' → logprob: -5.512185096740723
    3. ',i' → logprob: -5.637185096740723
    4. ' ,' → logprob: -6.262185096740723
    5. ',K' → logprob: -6.637185096740723
    6. ',j' → logprob: -8.637185096740723
    7. 'i' → logprob: -9.012185096740723
    8. '+' → logprob: -9.012185096740723
    9. '-' → logprob: -9.262185096740723
    10. '   ' → logprob: -9.387185096740723

Token 407: ' K' (ID: 658)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2146245539188385
    2. 'K' → logprob: -2.4646246433258057
    3. 'k' → logprob: -2.5896246433258057
    4. '1' → logprob: -3.9646246433258057
    5. 'x' → logprob: -5.839624404907227
    6. ' i' → logprob: -6.089624404907227
    7. 't' → logprob: -6.589624404907227
    8. '   ' → logprob: -7.089624404907227
    9. 'j' → logprob: -7.339624404907227
    10. 'M' → logprob: -7.464624404907227

Token 408: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3809114992618561
    2. '+i' → logprob: -2.0059115886688232
    3. ',' → logprob: -2.3809115886688232
    4. ' +' → logprob: -2.5059115886688232
    5. '+,' → logprob: -5.880911350250244
    6. '+j' → logprob: -6.380911350250244
    7. '+k' → logprob: -6.630911350250244
    8. ' ,' → logprob: -7.005911350250244
    9. '+n' → logprob: -8.630911827087402
    10. '-' → logprob: -8.755911827087402

Token 409: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002327363472431898
    2. 'k' → logprob: -6.7523274421691895
    3. ' i' → logprob: -7.7523274421691895
    4. 'j' → logprob: -8.502326965332031
    5. 'x' → logprob: -8.752326965332031
    6. '1' → logprob: -9.377326965332031
    7. 'l' → logprob: -9.752326965332031
    8. 'r' → logprob: -9.877326965332031
    9. '_' → logprob: -10.752326965332031
    10. 'n' → logprob: -10.877326965332031

Token 410: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027299789711833
    2. 'x' → logprob: -4.152299880981445
    3. 'k' → logprob: -4.777299880981445
    4. 'r' → logprob: -7.152299880981445
    5. '_' → logprob: -8.027299880981445
    6. 'j' → logprob: -8.152299880981445
    7. '_i' → logprob: -8.277299880981445
    8. '_,' → logprob: -8.402299880981445
    9. '_)' → logprob: -8.652299880981445
    10. ' i' → logprob: -9.152299880981445

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03221343830227852
    2. '+' → logprob: -4.40721321105957
    3. '+i' → logprob: -4.90721321105957
    4. ' ,' → logprob: -5.53221321105957
    5. ' +' → logprob: -5.65721321105957
    6. ',i' → logprob: -6.28221321105957
    7. ',k' → logprob: -7.28221321105957
    8. '+k' → logprob: -8.15721321105957
    9. '-' → logprob: -8.40721321105957
    10. '+,' → logprob: -8.53221321105957

Token 412: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005372133571654558
    2. ' i' → logprob: -5.505372047424316
    3. 'k' → logprob: -7.130372047424316
    4. 'x' → logprob: -8.880372047424316
    5. 'r' → logprob: -8.880372047424316
    6. '1' → logprob: -10.255372047424316
    7. 'N' → logprob: -10.630372047424316
    8. 'K' → logprob: -10.880372047424316
    9. 'j' → logprob: -11.005372047424316
    10. '   ' → logprob: -11.255372047424316

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018125097267329693
    2. '+' → logprob: -7.12681245803833
    3. ' ,' → logprob: -7.87681245803833
    4. '-' → logprob: -8.501812934875488
    5. ' +' → logprob: -8.751812934875488
    6. ' -' → logprob: -9.126812934875488
    7. ')' → logprob: -10.376812934875488
    8. '),' → logprob: -10.876812934875488
    9. ',
' → logprob: -11.001812934875488
    10. '%' → logprob: -11.126812934875488

Token 414: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00012582694762386382
    2. ' MOD' → logprob: -9.000125885009766
    3. '           ' → logprob: -13.375125885009766
    4. '   ' → logprob: -15.125125885009766
    5. '       ' → logprob: -16.000125885009766
    6. '               ' → logprob: -16.500125885009766
    7. ' ' → logprob: -16.625125885009766
    8. '         ' → logprob: -16.750125885009766
    9. '    ' → logprob: -17.000125885009766
    10. '
' → logprob: -17.125125885009766

Token 415: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28928568959236145
    2. ')' → logprob: -1.414285659790039
    3. '))' → logprob: -5.539285659790039
    4. ')))' → logprob: -6.539285659790039
    5. '           ' → logprob: -7.414285659790039
    6. ' ,' → logprob: -8.164285659790039
    7. ' -' → logprob: -8.414285659790039
    8. '+' → logprob: -8.539285659790039
    9. '   ' → logprob: -8.664285659790039
    10. ',
' → logprob: -8.789285659790039

Token 416: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22292837500572205
    2. '*' → logprob: -2.222928285598755
    3. ',' → logprob: -2.597928285598755
    4. ')' → logprob: -5.722928524017334
    5. '           ' → logprob: -6.347928524017334
    6. '+' → logprob: -6.597928524017334
    7. ' +' → logprob: -6.722928524017334
    8. ' *
' → logprob: -6.722928524017334
    9. '   ' → logprob: -6.847928524017334
    10. '          ' → logprob: -6.972928524017334

Token 417: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.03724255412817001
    2. 'pow' → logprob: -3.9122426509857178
    3. '(' → logprob: -5.162242412567139
    4. ' comb' → logprob: -6.037242412567139
    5. 'power' → logprob: -6.162242412567139
    6. '(com' → logprob: -6.537242412567139
    7. 'com' → logprob: -6.662242412567139
    8. 'fram' → logprob: -7.037242412567139
    9. 'fr' → logprob: -7.287242412567139
    10. '(i' → logprob: -7.787242412567139

Token 418: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.434377521276474
    2. '(N' → logprob: -1.0593775510787964
    3. 'K' → logprob: -5.934377670288086
    4. 'N' → logprob: -6.684377670288086
    5. '(' → logprob: -7.184377670288086
    6. '((' → logprob: -7.684377670288086
    7. '(i' → logprob: -8.434377670288086
    8. '(
' → logprob: -8.559377670288086
    9. ' (' → logprob: -10.184377670288086
    10. '   ' → logprob: -11.059377670288086

Token 419: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6396317481994629
    2. '(i' → logprob: -1.389631748199463
    3. ' -' → logprob: -2.264631748199463
    4. '(N' → logprob: -2.889631748199463
    5. ',' → logprob: -3.139631748199463
    6. '(' → logprob: -4.389631748199463
    7. ',i' → logprob: -5.889631748199463
    8. 'i' → logprob: -6.389631748199463
    9. '[i' → logprob: -7.264631748199463
    10. '   ' → logprob: -7.639631748199463

Token 420: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029428640380501747
    2. 'N' → logprob: -4.279428482055664
    3. ' i' → logprob: -4.404428482055664
    4. '1' → logprob: -7.404428482055664
    5. 'K' → logprob: -7.654428482055664
    6. '   ' → logprob: -7.904428482055664
    7. ' N' → logprob: -8.029428482055664
    8. ' ' → logprob: -8.029428482055664
    9. '(i' → logprob: -8.904428482055664
    10. '           ' → logprob: -9.279428482055664

Token 421: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05021568760275841
    2. '1' → logprob: -3.050215721130371
    3. ' i' → logprob: -7.050215721130371
    4. 'N' → logprob: -8.175215721130371
    5. '2' → logprob: -9.050215721130371
    6. ' ' → logprob: -9.425215721130371
    7. '   ' → logprob: -9.800215721130371
    8. '(' → logprob: -9.800215721130371
    9. '(i' → logprob: -9.925215721130371
    10. '           ' → logprob: -11.175215721130371

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003580826334655285
    2. ',i' → logprob: -5.7535810470581055
    3. ' ,' → logprob: -8.003581047058105
    4. '   ' → logprob: -11.253581047058105
    5. '+' → logprob: -11.628581047058105
    6. '(i' → logprob: -11.878581047058105
    7. ',k' → logprob: -12.003581047058105
    8. '(' → logprob: -12.128581047058105
    9. ',
' → logprob: -12.628581047058105
    10. 'i' → logprob: -12.628581047058105

Token 423: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02418392337858677
    2. ' i' → logprob: -3.774183988571167
    3. '           ' → logprob: -7.149183750152588
    4. '       ' → logprob: -10.649184226989746
    5. '               ' → logprob: -10.774184226989746
    6. '          ' → logprob: -10.774184226989746
    7. '   ' → logprob: -11.024184226989746
    8. '            ' → logprob: -11.274184226989746
    9. '        ' → logprob: -11.524184226989746
    10. '    ' → logprob: -11.649184226989746

Token 424: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012867827899754047
    2. '-' → logprob: -7.37628698348999
    3. ' -' → logprob: -8.376286506652832
    4. ' ,' → logprob: -8.501286506652832
    5. '+' → logprob: -9.751286506652832
    6. '           ' → logprob: -10.376286506652832
    7. ')' → logprob: -10.376286506652832
    8. ' +' → logprob: -10.876286506652832
    9. '   ' → logprob: -10.876286506652832
    10. '(M' → logprob: -10.876286506652832

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0058908723294734955
    2. '0' → logprob: -5.880890846252441
    3. ' ' → logprob: -6.380890846252441
    4. 'i' → logprob: -7.005890846252441
    5. ')' → logprob: -8.005890846252441
    6. ' i' → logprob: -9.630890846252441
    7. '   ' → logprob: -10.005890846252441
    8. '```' → logprob: -11.880890846252441
    9. '           ' → logprob: -12.380890846252441
    10. '    ' → logprob: -12.505890846252441

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001005630983854644
    2. '0' → logprob: -9.375100135803223
    3. ' ' → logprob: -11.875100135803223
    4. 'i' → logprob: -12.125100135803223
    5. '   ' → logprob: -13.875100135803223
    6. ')' → logprob: -14.125100135803223
    7. '2' → logprob: -14.625100135803223
    8. '(' → logprob: -15.750100135803223
    9. ',' → logprob: -15.875100135803223
    10. '```' → logprob: -16.00010108947754

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036204091156832874
    2. ' ,' → logprob: -8.000362396240234
    3. ')' → logprob: -11.500362396240234
    4. ',
' → logprob: -12.500362396240234
    5. '%' → logprob: -12.875362396240234
    6. '   ' → logprob: -12.875362396240234
    7. '           ' → logprob: -13.500362396240234
    8. ' %' → logprob: -13.500362396240234
    9. '(M' → logprob: -14.000362396240234
    10. '))' → logprob: -14.500362396240234

Token 428: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.002476135268807411
    2. ' MOD' → logprob: -6.002476215362549
    3. '           ' → logprob: -15.87747573852539
    4. '_MOD' → logprob: -17.00247573852539
    5. '               ' → logprob: -17.12747573852539
    6. '    ' → logprob: -17.12747573852539
    7. '            ' → logprob: -17.50247573852539
    8. '   ' → logprob: -17.62747573852539
    9. '                   ' → logprob: -17.62747573852539
    10. '.MOD' → logprob: -17.87747573852539

Token 429: '))' (ID: 915)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1330210417509079
    2. ')' → logprob: -2.133021116256714
    3. '))' → logprob: -6.008020877838135
    4. ' ,' → logprob: -6.008020877838135
    5. ')%' → logprob: -7.633020877838135
    6. '%' → logprob: -8.383021354675293
    7. ' %' → logprob: -8.883021354675293
    8. ' )' → logprob: -8.883021354675293
    9. '   ' → logprob: -9.758021354675293
    10. '       ' → logprob: -10.633021354675293

Token 430: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7926397323608398
    2. ' %' → logprob: -0.9176397323608398
    3. '%' → logprob: -2.04263973236084
    4. ')%' → logprob: -4.16763973236084
    5. ' )' → logprob: -7.04263973236084
    6. '           ' → logprob: -7.66763973236084
    7. '       ' → logprob: -7.79263973236084
    8. '    ' → logprob: -8.41763973236084
    9. '   ' → logprob: -8.41763973236084
    10. '        ' → logprob: -9.04263973236084

Token 431: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.023246755823493004
    2. ' MOD' → logprob: -3.7732467651367188
    3. ')' → logprob: -14.648246765136719
    4. '_MOD' → logprob: -15.898246765136719
    5. '.MOD' → logprob: -16.02324676513672
    6. '   ' → logprob: -16.14824676513672
    7. ' ' → logprob: -16.27324676513672
    8. '           ' → logprob: -16.52324676513672
    9. '```' → logprob: -16.64824676513672
    10. '
' → logprob: -16.77324676513672

Token 432: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2394932359457016
    2. '           ' → logprob: -1.9894932508468628
    3. ',' → logprob: -3.9894931316375732
    4. '       ' → logprob: -4.364493370056152
    5. ' for' → logprob: -4.489493370056152
    6. ')
' → logprob: -4.739493370056152
    7. ' )' → logprob: -5.114493370056152
    8. '          ' → logprob: -6.114493370056152
    9. ')%' → logprob: -6.489493370056152
    10. '               ' → logprob: -6.489493370056152

Token 433: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4952155351638794
    2. ' for' → logprob: -1.3702155351638794
    3. '           ' → logprob: -2.74521541595459
    4. '       ' → logprob: -2.87021541595459
    5. ')' → logprob: -4.99521541595459
    6. ',' → logprob: -5.24521541595459
    7. '   ' → logprob: -6.37021541595459
    8. '          ' → logprob: -7.24521541595459
    9. '         ' → logprob: -8.37021541595459
    10. '        ' → logprob: -8.37021541595459

Token 434: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35088396072387695
    2. 'for' → logprob: -1.350883960723877
    3. ' for' → logprob: -3.600883960723877
    4. '       ' → logprob: -5.100883960723877
    5. ')' → logprob: -6.225883960723877
    6. ',' → logprob: -7.475883960723877
    7. 'if' (adapté à ' if') → logprob: -8.100883483886719
    8. '               ' → logprob: -8.600883483886719
    9. ')
' → logprob: -9.225883483886719
    10. '   ' → logprob: -9.225883483886719

Token 435: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5626256465911865
    2. 'i' → logprob: -1.3126256465911865
    3. '0' → logprob: -2.0626256465911865
    4. ' ' → logprob: -3.6876256465911865
    5. ' i' → logprob: -4.812625885009766
    6. '(i' → logprob: -7.562625885009766
    7. '(' → logprob: -8.437625885009766
    8. ' (' → logprob: -10.437625885009766
    9. 'True' → logprob: -10.437625885009766
    10. '   ' → logprob: -10.812625885009766

Token 436: ' <=' (ID: 5017)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.3362826108932495
    2. '>=' → logprob: -1.3362826108932495
    3. 'else' → logprob: -1.8362826108932495
    4. '<=' → logprob: -2.461282730102539
    5. 'in' → logprob: -2.711282730102539
    6. ' >=' → logprob: -3.086282730102539
    7. '>' → logprob: -3.211282730102539
    8. ' <=' → logprob: -3.461282730102539
    9. ' else' → logprob: -4.211282730102539
    10. ' >' → logprob: -4.836282730102539

Token 437: ' N' (ID: 478)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.23785999417304993
    2. 'N' → logprob: -1.6128599643707275
    3. 'min' → logprob: -4.487860202789307
    4. ' K' → logprob: -7.362860202789307
    5. ' min' → logprob: -8.612859725952148
    6. ' N' → logprob: -9.237859725952148
    7. '0' → logprob: -9.237859725952148
    8. ' ' → logprob: -10.112859725952148
    9. '(N' → logprob: -10.737859725952148
    10. '(min' → logprob: -10.987859725952148

Token 438: ' -' (ID: 533)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07022151350975037
    2. 'else' → logprob: -2.695221424102783
    3. ' and' → logprob: -9.070221900939941
    4. '        ' → logprob: -9.445221900939941
    5. 'and' → logprob: -9.820221900939941
    6. '    ' → logprob: -10.570221900939941
    7. '       ' → logprob: -12.570221900939941
    8. '            ' → logprob: -13.195221900939941
    9. '   ' → logprob: -13.570221900939941
    10. ' ' → logprob: -14.070221900939941

Token 439: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00024882311117835343
    2. ' K' → logprob: -8.375248908996582
    3. ' ' → logprob: -11.625248908996582
    4. '(K' → logprob: -12.500248908996582
    5. '   ' → logprob: -13.500248908996582
    6. '
' → logprob: -13.875248908996582
    7. 'i' → logprob: -14.625248908996582
    8. '(' → logprob: -14.750248908996582
    9. '	K' → logprob: -15.125248908996582
    10. ' (' → logprob: -15.125248908996582

Token 440: ' +' (ID: 659)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06279244273900986
    2. 'else' → logprob: -2.8127925395965576
    3. ' and' → logprob: -7.6877923011779785
    4. 'and' → logprob: -8.187792778015137
    5. '        ' → logprob: -9.812792778015137
    6. '            ' → logprob: -11.437792778015137
    7. '    ' → logprob: -11.562792778015137
    8. '           ' → logprob: -12.562792778015137
    9. '       ' → logprob: -13.437792778015137
    10. ' ' → logprob: -13.437792778015137

Token 441: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024787469301372766
    2. 'i' → logprob: -6.25247859954834
    3. ' ' → logprob: -7.62747859954834
    4. ' i' → logprob: -10.50247859954834
    5. '0' → logprob: -11.12747859954834
    6. '   ' → logprob: -11.62747859954834
    7. '2' → logprob: -13.12747859954834
    8. '(i' → logprob: -13.43997859954834
    9. 'N' → logprob: -13.68997859954834
    10. '```' → logprob: -13.68997859954834

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032283368054777384
    2. 'i' → logprob: -5.753228187561035
    3. ' ' → logprob: -10.878228187561035
    4. '2' → logprob: -11.378228187561035
    5. '0' → logprob: -11.878228187561035
    6. ' i' → logprob: -12.503228187561035
    7. '   ' → logprob: -12.940728187561035
    8. '(i' → logprob: -13.565728187561035
    9. '  ' → logprob: -14.378228187561035
    10. '
' → logprob: -14.440728187561035

Token 443: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2519415020942688
    2. 'else' → logprob: -1.501941442489624
    3. '        ' → logprob: -11.876941680908203
    4. '    ' → logprob: -13.251941680908203
    5. '            ' → logprob: -13.751941680908203
    6. '           ' → logprob: -14.001941680908203
    7. '       ' → logprob: -15.126941680908203
    8. '	else' → logprob: -15.251941680908203
    9. ' ' → logprob: -15.376941680908203
    10. '   ' → logprob: -15.626941680908203

Token 444: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32279735803604126
    2. 'print' → logprob: -1.4477972984313965
    3. 'None' → logprob: -3.6977972984313965
    4. 'break' → logprob: -4.6977972984313965
    5. ' ' → logprob: -5.4477972984313965
    6. ' None' → logprob: -7.4477972984313965
    7. ' print' → logprob: -7.6977972984313965
    8. '(' → logprob: -8.072797775268555
    9. '1' → logprob: -8.197797775268555
    10. 'i' → logprob: -9.447797775268555

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3475693464279175
    2. 'print' → logprob: -1.3475693464279175
    3. 'None' → logprob: -3.722569465637207
    4. 'break' → logprob: -4.722569465637207
    5. ' ' → logprob: -8.597569465637207
    6. '-' → logprob: -9.472569465637207
    7. ' None' → logprob: -9.597569465637207
    8. 'sys' → logprob: -9.972569465637207
    9. '(' → logprob: -10.222569465637207
    10. ' print' → logprob: -10.472569465637207

Token 446: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4538848400115967
    2. ' for' → logprob: -1.0788848400115967
    3. '       ' → logprob: -4.453885078430176
    4. '   ' → logprob: -5.078885078430176
    5. '           ' → logprob: -5.328885078430176
    6. '
' → logprob: -6.703885078430176
    7. ')' → logprob: -7.203885078430176
    8. '    ' → logprob: -9.703885078430176
    9. ')
' → logprob: -10.203885078430176
    10. ' ' → logprob: -10.703885078430176

Token 447: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4806070327758789
    2. 'for' → logprob: -1.230607032775879
    3. '   ' → logprob: -3.105607032775879
    4. '       ' → logprob: -3.230607032775879
    5. '           ' → logprob: -5.730607032775879
    6. '
' → logprob: -7.105607032775879
    7. ')' → logprob: -7.105607032775879
    8. ')
' → logprob: -9.730607032775879
    9. '    ' → logprob: -9.730607032775879
    10. ' ' → logprob: -10.105607032775879

Token 448: ' )
' (ID: 3270)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5177059173583984
    2. 'for' → logprob: -1.0177059173583984
    3. '       ' → logprob: -3.3927059173583984
    4. '   ' → logprob: -4.767705917358398
    5. '
' → logprob: -8.267705917358398
    6. ')' → logprob: -8.642705917358398
    7. '           ' → logprob: -9.517705917358398
    8. '    ' → logprob: -11.017705917358398
    9. ' ' → logprob: -11.392705917358398
    10. ',' → logprob: -11.892705917358398

Token 449: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5049741268157959
    2. 'for' → logprob: -1.129974126815796
    3. '       ' → logprob: -3.004974126815796
    4. '   ' → logprob: -3.754974126815796
    5. '
' → logprob: -8.379974365234375
    6. '	for' → logprob: -9.254974365234375
    7. '    ' → logprob: -9.504974365234375
    8. ' ' → logprob: -10.004974365234375
    9. '           ' → logprob: -11.379974365234375
    10. '     ' → logprob: -11.754974365234375

Token 450: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.135869562625885
    2. ' for' → logprob: -2.3858695030212402
    3. '       ' → logprob: -3.3858695030212402
    4. '   ' → logprob: -6.76086950302124
    5. '
' → logprob: -11.385869979858398
    6. ' ' → logprob: -11.760869979858398
    7. '	for' → logprob: -12.635869979858398
    8. '    ' → logprob: -12.885869979858398
    9. '           ' → logprob: -13.385869979858398
    10. '     ' → logprob: -14.760869979858398

Token 451: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011048054322600365
    2. ' i' → logprob: -4.511047840118408
    3. '_i' → logprob: -16.01104736328125
    4. '	i' → logprob: -16.63604736328125
    5. '   ' → logprob: -17.88604736328125
    6. '`' → logprob: -18.26104736328125
    7. ' ' → logprob: -18.76104736328125
    8. '```' → logprob: -18.88604736328125
    9. 'range' → logprob: -19.01104736328125
    10. ' ' → logprob: -19.01104736328125

Token 452: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04863959923386574
    2. 'in' → logprob: -3.0486395359039307
    3. 'range' → logprob: -10.048639297485352
    4. ' range' → logprob: -12.048639297485352
    5. ' ' → logprob: -13.548639297485352
    6. '
' → logprob: -14.423639297485352
    7. '<|end|>' → logprob: -14.798639297485352
    8. '1' → logprob: -15.548639297485352
    9. 'i' → logprob: -15.923639297485352
    10. '0' → logprob: -16.42363929748535

Token 453: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '(range' → logprob: -16.75020408630371
    4. '	range' → logprob: -19.37520408630371
    5. 'rang' → logprob: -21.25020408630371
    6. '   ' → logprob: -21.37520408630371
    7. 'ran' → logprob: -21.87520408630371
    8. 'list' → logprob: -22.25020408630371
    9. '```' → logprob: -22.25020408630371
    10. 'r' → logprob: -22.37520408630371

Token 454: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.6537622034084052e-05
    2. '(K' → logprob: -11.12502670288086
    3. '1' → logprob: -11.37502670288086
    4. '(
' → logprob: -15.75002670288086
    5. ' (' → logprob: -16.87502670288086
    6. '(N' → logprob: -17.00002670288086
    7. 'K' → logprob: -17.37502670288086
    8. '(k' → logprob: -17.75002670288086
    9. '((' → logprob: -19.37502670288086
    10. '(i' → logprob: -20.00002670288086

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.297462171758525e-05
    2. 'K' → logprob: -10.500033378601074
    3. ' ' → logprob: -12.625033378601074
    4. '0' → logprob: -14.375033378601074
    5. '(' → logprob: -14.500033378601074
    6. '2' → logprob: -14.875033378601074
    7. 'N' → logprob: -15.000033378601074
    8. '   ' → logprob: -15.250033378601074
    9. '```' → logprob: -17.625032424926758
    10. ' K' → logprob: -17.937532424926758

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40273645520210266
    2. '(' → logprob: -1.9027364253997803
    3. '(K' → logprob: -1.9027364253997803
    4. ',K' → logprob: -3.5277364253997803
    5. '(N' → logprob: -6.027736663818359
    6. 'K' → logprob: -7.277736663818359
    7. '1' → logprob: -7.902736663818359
    8. ' ,' → logprob: -8.52773666381836
    9. ',(' → logprob: -10.02773666381836
    10. ',N' → logprob: -10.02773666381836

Token 457: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.030105771496891975
    2. 'N' → logprob: -3.5301058292388916
    3. ' K' → logprob: -8.030105590820312
    4. '   ' → logprob: -11.155105590820312
    5. ' N' → logprob: -11.780105590820312
    6. ' ' → logprob: -12.405105590820312
    7. '  ' → logprob: -14.155105590820312
    8. '    ' → logprob: -14.155105590820312
    9. '       ' → logprob: -14.780105590820312
    10. '     ' → logprob: -15.530105590820312

Token 458: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16023823618888855
    2. ' +' → logprob: -1.910238265991211
    3. '<|end|>' → logprob: -12.910238265991211
    4. '+
' → logprob: -13.160238265991211
    5. '   ' → logprob: -13.535238265991211
    6. ')' → logprob: -13.660238265991211
    7. ',' → logprob: -13.785238265991211
    8. '[' → logprob: -14.035238265991211
    9. 'K' → logprob: -14.035238265991211
    10. '1' → logprob: -14.535238265991211

Token 459: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017487229779362679
    2. '2' → logprob: -6.501748561859131
    3. ' ' → logprob: -8.376749038696289
    4. '+' → logprob: -11.126749038696289
    5. '   ' → logprob: -14.376749038696289
    6. ')' → logprob: -15.376749038696289
    7. 'K' → logprob: -15.626749038696289
    8. ' +' → logprob: -15.751749038696289
    9. '(' → logprob: -16.87674903869629
    10. '  ' → logprob: -16.87674903869629

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2570822238922119
    2. 'K' → logprob: -1.632082223892212
    3. '2' → logprob: -4.257081985473633
    4. 'N' → logprob: -4.757081985473633
    5. '+' → logprob: -5.257081985473633
    6. ' ' → logprob: -6.632081985473633
    7. 'int' → logprob: -7.257081985473633
    8. '(K' → logprob: -8.007081985473633
    9. ' K' → logprob: -8.257081985473633
    10. '(N' → logprob: -8.382081985473633

Token 461: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0333714559674263
    2. ')]' → logprob: -3.5333714485168457
    3. ']' → logprob: -6.033371448516846
    4. '   ' → logprob: -7.033371448516846
    5. ')
' → logprob: -8.908371925354004
    6. ')])' → logprob: -9.283371925354004
    7. '):' → logprob: -10.033371925354004
    8. '<|end|>' → logprob: -11.033371925354004
    9. '       ' → logprob: -11.783371925354004
    10. '])' → logprob: -11.783371925354004

Token 462: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5996512174606323
    2. '   ' → logprob: -0.8496512174606323
    3. '<|end|>' → logprob: -3.849651336669922
    4. ')' → logprob: -6.724651336669922
    5. '<|end|>' → logprob: -8.224651336669922
    6. ']
' → logprob: -8.474651336669922
    7. '
' → logprob: -8.599651336669922
    8. ' ]' → logprob: -9.474651336669922
    9. '}' → logprob: -10.224651336669922
    10. '[
' → logprob: -10.599651336669922

Token 463: ' ]

' (ID: 32229)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06757020205259323
    2. '<|end|>' → logprob: -2.817570209503174
    3. ']' → logprob: -5.692570209503174
    4. '   ' → logprob: -7.067570209503174
    5. ')
' → logprob: -7.317570209503174
    6. '
' → logprob: -8.442569732666016
    7. '```' → logprob: -8.567569732666016
    8. '<|end|>' → logprob: -9.067569732666016
    9. '}' → logprob: -9.567569732666016
    10. '#' → logprob: -10.817569732666016

Token 464: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1428055763244629
    2. '__' → logprob: -2.017805576324463
    3. '_' → logprob: -9.642805099487305
    4. 'name' → logprob: -10.892805099487305
    5. ' ' → logprob: -11.017805099487305
    6. '_name' → logprob: -11.267805099487305
    7. ' ' → logprob: -11.642805099487305
    8. '___' → logprob: -13.517805099487305
    9. ' name' → logprob: -13.642805099487305
    10. ' True' → logprob: -13.642805099487305

Token 466: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2152741700410843
    2. '__' → logprob: -2.0902740955352783
    3. '==' → logprob: -2.7152740955352783
    4. 'name' → logprob: -6.715274333953857
    5. '=="' → logprob: -6.715274333953857
    6. ' __' → logprob: -7.090274333953857
    7. ' =="' → logprob: -9.0902738571167
    8. '=='' → logprob: -9.2152738571167
    9. '_' → logprob: -9.9652738571167
    10. '﻿' → logprob: -10.2152738571167

Token 467: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20695415139198303
    2. '==' → logprob: -1.7069541215896606
    3. ' ==' → logprob: -5.331954002380371
    4. '=="' → logprob: -7.706954002380371
    5. '=='' → logprob: -8.581954002380371
    6. '__.__' → logprob: -10.831954002380371
    7. '===' → logprob: -11.206954002380371
    8. '==
' → logprob: -12.456954002380371
    9. '___' → logprob: -12.706954002380371
    10. '==="' → logprob: -13.206954002380371

Token 468: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.15001294016838074
    2. ' ==' → logprob: -2.525012969970703
    3. '=="' → logprob: -3.150012969970703
    4. '=='' → logprob: -4.650012969970703
    5. '__' → logprob: -5.025012969970703
    6. '===' → logprob: -9.525012969970703
    7. '==="' → logprob: -9.775012969970703
    8. '==='' → logprob: -10.150012969970703
    9. '<|end|>' → logprob: -11.025012969970703
    10. '['' → logprob: -11.650012969970703

Token 469: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5759711265563965
    2. '"' → logprob: -0.8259711265563965
    3. '__' → logprob: -10.950971603393555
    4. ' "__' → logprob: -11.325971603393555
    5. ' '__' → logprob: -13.325971603393555
    6. '"name' → logprob: -15.325971603393555
    7. ''name' → logprob: -15.825971603393555
    8. '('__' → logprob: -17.325971603393555
    9. ''post' → logprob: -17.700971603393555
    10. '("__' → logprob: -17.700971603393555

Token 470: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5852644443511963
    2. '__' → logprob: -0.8352644443511963
    3. ''' → logprob: -5.085264205932617
    4. 'name' → logprob: -5.835264205932617
    5. '"' → logprob: -10.210264205932617
    6. '___' → logprob: -10.585264205932617
    7. '____' → logprob: -10.710264205932617
    8. ' __' → logprob: -10.960264205932617
    9. 'if' → logprob: -10.960264205932617
    10. ''name' → logprob: -11.210264205932617

Token 471: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.030587194487452507
    2. '__' → logprob: -3.6555871963500977
    3. '__":
' → logprob: -6.030587196350098
    4. '():
' → logprob: -6.780587196350098
    5. '__:' → logprob: -7.530587196350098
    6. ':' → logprob: -9.030587196350098
    7. '('__' → logprob: -10.155587196350098
    8. '_' → logprob: -11.530587196350098
    9. '():' → logprob: -11.655587196350098
    10. ':
' → logprob: -12.280587196350098

Token 472: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03781390190124512
    2. '   ' → logprob: -4.037814140319824
    3. '	main' → logprob: -4.287814140319824
    4. ' main' → logprob: -5.162814140319824
    5. ' ' → logprob: -12.287814140319824
    6. '_main' → logprob: -12.662814140319824
    7. '  ' → logprob: -13.412814140319824
    8. '(main' → logprob: -14.037814140319824
    9. '   ' → logprob: -14.662814140319824
    10. '```' → logprob: -15.787814140319824

Token 473: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -20.875
    4. 'import' → logprob: -23.0
    5. '   ' → logprob: -24.875
    6. '(main' → logprob: -25.0
    7. '.main' → logprob: -25.125
    8. 'sys' → logprob: -25.25
    9. '_main' → logprob: -26.125
    10. '```' → logprob: -27.375

Token 474: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 472
Tokens correctement prédits (1ère position, stricte): 156
Tokens correctement prédits (1ère position, avec adaptation): 164
Tokens correctement prédits (top 10): 363
Précision stricte (1ère position): 33.05%
Précision adaptée (1ère position): 34.75%
Précision (top 10): 76.91%
================================================================================
