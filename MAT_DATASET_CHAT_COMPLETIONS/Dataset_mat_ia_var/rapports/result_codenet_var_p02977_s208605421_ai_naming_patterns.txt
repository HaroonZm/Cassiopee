================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_value = int(input())
if input_value <= 2 or input_value == 4:
    print("No")
elif input_value == 3:
    print("Yes")
    for iteration_index in range(5):
        print(iteration_index + 1, iteration_index + 2)
elif input_value % 2 == 0:
    bit_length_value = input_value.bit_length()
    power_of_two_comparison = 2 ** (bit_length_value - 1)
    if input_value == power_of_two_comparison:
        print("No")
    else:
        print("Yes")
        print(1, 2)
        print(2, 3)
        print(3, input_value + 1)
        print(input_value + 1, input_value + 2)
        print(input_value + 2, input_value + 3)
        for loop_index in range(4, input_value):
            print(input_value + 1, loop_index)
            if loop_index % 2 == 0:
                print(loop_index, loop_index + input_value + 1)
            else:
                print(loop_index, loop_index + input_value - 1)
        node_first = 2 ** (bit_length_value - 1)
        node_second = (input_value + 1) - 2 ** (bit_length_value - 1)
        print(node_first, input_value)
        print(node_second, 2 * input_value)
else:
    print("Yes")
    print(1, 2)
    print(2, 3)
    print(3, input_value + 1)
    print(input_value + 1, input_value + 2)
    print(input_value + 2, input_value + 3)
    for loop_index in range(4, input_value + 1):
        print(1, loop_index)
        if loop_index % 2 == 0:
            print(loop_index, loop_index + input_value + 1)
        else:
            print(loop_index, loop_index + input_value - 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41097232699394226
    2. ' input' → logprob: -2.0359723567962646
    3. 'input' → logprob: -2.4109723567962646
    4. '"' → logprob: -2.4109723567962646
    5. ' "' → logprob: -4.6609721183776855
    6. '0' → logprob: -4.9109721183776855
    7. ''' → logprob: -5.2859721183776855
    8. ' '' → logprob: -6.7859721183776855
    9. ' a' → logprob: -7.7859721183776855
    10. '  ' → logprob: -8.160972595214844

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011013990733772516
    2. '(input' → logprob: -7.126101493835449
    3. '```' → logprob: -9.50110149383545
    4. '('' → logprob: -9.62610149383545
    5. '`' → logprob: -10.37610149383545
    6. '(
' → logprob: -10.75110149383545
    7. '[' → logprob: -11.12610149383545
    8. 'input' → logprob: -11.25110149383545
    9. '("("' → logprob: -11.25110149383545
    10. ' (' → logprob: -11.25110149383545

Token 5: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24968037009239197
    2. '(' → logprob: -1.7496803998947144
    3. '())' → logprob: -3.499680280685425
    4. '()' → logprob: -4.124680519104004
    5. '))' → logprob: -8.249680519104004
    6. '")' → logprob: -9.749680519104004
    7. '[' → logprob: -9.874680519104004
    8. '')' → logprob: -10.249680519104004
    9. '(
' → logprob: -10.499680519104004
    10. '(()' → logprob: -10.624680519104004

Token 6: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3975314199924469
    2. 'if' → logprob: -1.5225313901901245
    3. '*' → logprob: -2.522531509399414
    4. '%' → logprob: -4.397531509399414
    5. ' if' → logprob: -5.522531509399414
    6. ')' → logprob: -5.897531509399414
    7. '#' → logprob: -5.897531509399414
    8. '**' → logprob: -6.772531509399414
    9. '```' → logprob: -6.897531509399414
    10. ' ' → logprob: -6.897531509399414

Token 7: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03503655642271042
    2. ' ' → logprob: -3.410036563873291
    3. 'input' → logprob: -6.660036563873291
    4. ' not' → logprob: -10.035036087036133
    5. ' ' → logprob: -10.035036087036133
    6. '_input' → logprob: -12.410036087036133
    7. '(input' → logprob: -12.535036087036133
    8. '  ' → logprob: -12.785036087036133
    9. ' (' → logprob: -12.910036087036133
    10. ' user' → logprob: -13.410036087036133

Token 8: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.043213728815317154
    2. '_' → logprob: -3.1682138442993164
    3. '_val' → logprob: -9.293213844299316
    4. ' _' → logprob: -9.543213844299316
    5. '```' → logprob: -10.918213844299316
    6. '_space' → logprob: -12.168213844299316
    7. '>' → logprob: -12.918213844299316
    8. 'value' → logprob: -13.043213844299316
    9. '_Value' → logprob: -13.043213844299316
    10. ' ' → logprob: -13.043213844299316

Token 9: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10287570208311081
    2. ' ==' → logprob: -3.3528757095336914
    3. ' >=' → logprob: -3.4778757095336914
    4. ' ' → logprob: -4.477875709533691
    5. '>' → logprob: -4.602875709533691
    6. ' <' → logprob: -4.977875709533691
    7. '  ' → logprob: -6.727875709533691
    8. ' !=' → logprob: -7.227875709533691
    9. ' <=' → logprob: -7.352875709533691
    10. '==' → logprob: -8.227875709533691

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001667207689024508
    2. '0' → logprob: -7.126667022705078
    3. '10' → logprob: -7.126667022705078
    4. '100' → logprob: -10.501667022705078
    5. '5' → logprob: -11.126667022705078
    6. '20' → logprob: -12.001667022705078
    7. '50' → logprob: -12.251667022705078
    8. '9' → logprob: -13.751667022705078
    9. '1' → logprob: -14.126667022705078
    10. '99' → logprob: -14.251667022705078

Token 11: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1120912954211235
    2. '0' → logprob: -2.487091302871704
    3. '10' → logprob: -3.862091302871704
    4. '100' → logprob: -6.487091064453125
    5. '50' → logprob: -9.112091064453125
    6. '5' → logprob: -9.362091064453125
    7. '20' → logprob: -9.862091064453125
    8. '1' → logprob: -10.112091064453125
    9. '9' → logprob: -11.487091064453125
    10. '99' → logprob: -12.112091064453125

Token 12: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.580929347255733e-05
    2. ' :' → logprob: -11.500016212463379
    3. ':
' → logprob: -12.875016212463379
    4. '':' → logprob: -13.625016212463379
    5. ':**' → logprob: -14.125016212463379
    6. '':'' → logprob: -15.000016212463379
    7. '):' → logprob: -15.500016212463379
    8. '>:' → logprob: -16.375015258789062
    9. '：' → logprob: -16.750015258789062
    10. ':return' → logprob: -16.750015258789062

Token 13: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0017232499085366726
    2. 'input' → logprob: -6.501723289489746
    3. ' not' → logprob: -8.751723289489746
    4. ' ' → logprob: -9.876723289489746
    5. ' ' → logprob: -12.001723289489746
    6. '	input' → logprob: -13.876723289489746
    7. ' True' → logprob: -14.251723289489746
    8. '  ' → logprob: -14.501723289489746
    9. ' False' → logprob: -14.751723289489746
    10. '<input' → logprob: -15.001723289489746

Token 14: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.000457605579867959
    2. '_' → logprob: -8.000457763671875
    3. '_val' → logprob: -9.250457763671875
    4. '```' → logprob: -11.500457763671875
    5. '_values' → logprob: -12.875457763671875
    6. ' _' → logprob: -13.000457763671875
    7. ''_' → logprob: -13.250457763671875
    8. ')_' → logprob: -13.375457763671875
    9. '_Value' → logprob: -13.625457763671875
    10. 'Value' → logprob: -14.000457763671875

Token 15: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08830714225769043
    2. ' ==' → logprob: -3.2133071422576904
    3. '>' → logprob: -4.2133073806762695
    4. ' >=' → logprob: -4.2133073806762695
    5. ' %' → logprob: -5.0883073806762695
    6. ' ' → logprob: -5.7133073806762695
    7. '%' → logprob: -6.0883073806762695
    8. ' <' → logprob: -6.5883073806762695
    9. '==' → logprob: -7.0883073806762695
    10. ' <=' → logprob: -8.58830738067627

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009069018997251987
    2. '3' → logprob: -4.759068965911865
    3. '4' → logprob: -8.134069442749023
    4. '0' → logprob: -9.509069442749023
    5. '1' → logprob: -10.134069442749023
    6. '  ' → logprob: -11.259069442749023
    7. ' None' → logprob: -11.634069442749023
    8. ' ' → logprob: -12.259069442749023
    9. '10' → logprob: -12.634069442749023
    10. '5' → logprob: -13.196569442749023

Token 17: '4' (ID: 19)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06665311753749847
    2. '3' → logprob: -3.06665301322937
    3. '4' → logprob: -4.316653251647949
    4. '0' → logprob: -6.066653251647949
    5. '5' → logprob: -6.941653251647949
    6. '10' → logprob: -7.566653251647949
    7. '7' → logprob: -8.19165325164795
    8. '1' → logprob: -9.31665325164795
    9. '6' → logprob: -9.94165325164795
    10. '9' → logprob: -9.94165325164795

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.054500666621607e-06
    2. ':**' → logprob: -13.37500286102295
    3. ' :' → logprob: -14.12500286102295
    4. ':
' → logprob: -14.62500286102295
    5. ':return' → logprob: -16.375003814697266
    6. ',:' → logprob: -16.750003814697266
    7. '':'' → logprob: -16.875003814697266
    8. '>:' → logprob: -17.500003814697266
    9. '):' → logprob: -17.500003814697266
    10. ':

' → logprob: -18.000003814697266

Token 19: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015658074989914894
    2. ':
' → logprob: -7.001565933227539
    3. '   ' → logprob: -7.501565933227539
    4. '    ' → logprob: -10.626565933227539
    5. ' :' → logprob: -10.626565933227539
    6. '```' → logprob: -11.001565933227539
    7. ':return' → logprob: -11.626565933227539
    8. ',' → logprob: -12.126565933227539
    9. '<|end|>' → logprob: -13.251565933227539
    10. ':\' → logprob: -13.376565933227539

Token 20: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6446055769920349
    2. ' print' → logprob: -1.0196056365966797
    3. 'print' (adapté à ' print') → logprob: -3.1446056365966797
    4. '\n' → logprob: -4.14460563659668
    5. '    ' → logprob: -4.51960563659668
    6. '    
' → logprob: -4.64460563659668
    7. '```' → logprob: -4.76960563659668
    8. ' 
' → logprob: -5.01960563659668
    9. ' pass' → logprob: -5.14460563659668
    10. ' return' → logprob: -5.89460563659668

Token 21: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023958269506692886
    2. '('' → logprob: -4.648958206176758
    3. '("' → logprob: -4.773958206176758
    4. '("("' → logprob: -5.898958206176758
    5. '()' → logprob: -6.898958206176758
    6. '(True' → logprob: -7.523958206176758
    7. '("")' → logprob: -7.648958206176758
    8. '(input' → logprob: -7.773958206176758
    9. '(False' → logprob: -8.023958206176758
    10. '(-' → logprob: -10.398958206176758

Token 22: 'No' (ID: 3160)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -1.7197265625
    2. 'YES' → logprob: -1.9697265625
    3. 'No' → logprob: -2.3447265625
    4. 'Yes' → logprob: -2.4697265625
    5. '2' → logprob: -2.5947265625
    6. 'Hello' → logprob: -2.7197265625
    7. '1' → logprob: -2.9697265625
    8. '4' → logprob: -3.3447265625
    9. '0' → logprob: -3.4697265625
    10. '-' → logprob: -3.5947265625

Token 23: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.010387360118329525
    2. ')' → logprob: -4.760387420654297
    3. 't' → logprob: -6.510387420654297
    4. '!")' → logprob: -9.385387420654297
    5. ')")' → logprob: -9.885387420654297
    6. 'n' → logprob: -10.260387420654297
    7. 'pe' → logprob: -10.385387420654297
    8. '")
' → logprob: -10.885387420654297
    9. '"' → logprob: -11.260387420654297
    10. ' ")' → logprob: -11.760387420654297

Token 24: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0937155932188034
    2. 'elif' → logprob: -3.2187156677246094
    3. '```' → logprob: -3.4687156677246094
    4. ' else' → logprob: -4.093715667724609
    5. ':' → logprob: -8.09371566772461
    6. '
' → logprob: -8.09371566772461
    7. ' elif' → logprob: -8.46871566772461
    8. '<|end|>' → logprob: -8.59371566772461
    9. ':
' → logprob: -8.71871566772461
    10. '    
' → logprob: -8.71871566772461

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04026376083493233
    2. ' ' → logprob: -3.4152636528015137
    3. 'input' → logprob: -5.040263652801514
    4. ' ' → logprob: -9.415264129638672
    5. ' not' → logprob: -10.665264129638672
    6. '<|end|>' → logprob: -12.290264129638672
    7. '_input' → logprob: -12.665264129638672
    8. '(input' → logprob: -13.165264129638672
    9. '  ' → logprob: -13.290264129638672
    10. ' (' → logprob: -13.415264129638672

Token 26: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0003675133048091084
    2. '_' → logprob: -8.000367164611816
    3. ' _' → logprob: -10.625367164611816
    4. 'value' → logprob: -13.000367164611816
    5. '_val' → logprob: -13.125367164611816
    6. '_VALUE' → logprob: -14.125367164611816
    7. '_values' → logprob: -14.625367164611816
    8. ' ==' → logprob: -14.875367164611816
    9. '-value' → logprob: -15.250367164611816
    10. 'Value' → logprob: -15.250367164611816

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.024243032559752464
    2. ' >' → logprob: -4.399242877960205
    3. ' ' → logprob: -4.899242877960205
    4. ' >=' → logprob: -6.024242877960205
    5. '==' → logprob: -7.149242877960205
    6. ' <=' → logprob: -7.274242877960205
    7. ' %' → logprob: -9.024243354797363
    8. ' in' → logprob: -9.649243354797363
    9. '>' → logprob: -10.149243354797363
    10. ' !=' → logprob: -10.274243354797363

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.252159982919693
    2. '3' → logprob: -1.5021599531173706
    3. '5' → logprob: -9.00216007232666
    4. '1' → logprob: -10.00216007232666
    5. '6' → logprob: -10.62716007232666
    6. '8' → logprob: -12.06466007232666
    7. '7' → logprob: -12.18966007232666
    8. '<|end|>' → logprob: -12.25216007232666
    9. '9' → logprob: -12.43966007232666
    10. '0' → logprob: -12.50216007232666

Token 29: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005125596188008785
    2. ' ' → logprob: -5.755125522613525
    3. '5' → logprob: -6.630125522613525
    4. '1' → logprob: -7.880125522613525
    5. '6' → logprob: -8.880125999450684
    6. '7' → logprob: -10.130125999450684
    7. '8' → logprob: -10.880125999450684
    8. '0' → logprob: -11.005125999450684
    9. '10' → logprob: -11.255125999450684
    10. '9' → logprob: -11.630125999450684

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.968312951968983e-06
    2. ':
' → logprob: -12.250009536743164
    3. ' :' → logprob: -12.250009536743164
    4. '):' → logprob: -15.500009536743164
    5. ':**' → logprob: -16.500009536743164
    6. '   ' → logprob: -16.875009536743164
    7. ' and' → logprob: -17.875009536743164
    8. '():' → logprob: -18.000009536743164
    9. '.' → logprob: -18.625009536743164
    10. '=' → logprob: -18.875009536743164

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014990346506237984
    2. ' print' → logprob: -5.389990329742432
    3. ':' → logprob: -5.889990329742432
    4. '    ' → logprob: -6.014990329742432
    5. '<|end|>' → logprob: -6.514990329742432
    6. '```' → logprob: -7.014990329742432
    7. 'print' → logprob: -7.264990329742432
    8. '    
' → logprob: -7.389990329742432
    9. ' ' → logprob: -8.01499080657959
    10. '       ' → logprob: -8.38999080657959

Token 32: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3971974849700928
    2. '   ' → logprob: -1.6471974849700928
    3. 'print' (adapté à ' print') → logprob: -2.0221974849700928
    4. '    ' → logprob: -6.147197723388672
    5. '	print' → logprob: -9.022197723388672
    6. ' ' → logprob: -9.147197723388672
    7. '```' → logprob: -9.147197723388672
    8. '       ' → logprob: -9.397197723388672
    9. '    
' → logprob: -9.897197723388672
    10. '\n' → logprob: -10.272197723388672

Token 33: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760939717292786
    2. '("' → logprob: -0.8260939717292786
    3. '("("' → logprob: -9.076093673706055
    4. '('' → logprob: -10.951093673706055
    5. '("""' → logprob: -11.576093673706055
    6. '("")' → logprob: -11.826093673706055
    7. '()' → logprob: -13.076093673706055
    8. '(
' → logprob: -13.576093673706055
    9. '(""' → logprob: -15.076093673706055
    10. '(">' → logprob: -15.076093673706055

Token 34: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0029374060686677694
    2. ' Yes' → logprob: -6.627937316894531
    3. '"' → logprob: -7.127937316894531
    4. 'No' → logprob: -8.002937316894531
    5. 'Ye' → logprob: -8.002937316894531
    6. 'YES' → logprob: -10.252937316894531
    7. '")' → logprob: -10.627937316894531
    8. '"""' → logprob: -11.252937316894531
    9. '""' → logprob: -11.377937316894531
    10. 'Y' → logprob: -11.502937316894531

Token 35: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.318681188422488e-05
    2. '")
' → logprob: -11.50001335144043
    3. '"' → logprob: -13.62501335144043
    4. ')' → logprob: -14.00001335144043
    5. ')")' → logprob: -14.37501335144043
    6. '()' → logprob: -16.00001335144043
    7. '!")' → logprob: -16.00001335144043
    8. '("' → logprob: -16.87501335144043
    9. ' ")' → logprob: -17.62501335144043
    10. '")

' → logprob: -18.00001335144043

Token 36: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7218475937843323
    2. 'elif' → logprob: -0.7218475937843323
    3. '<|end|>' → logprob: -3.9718475341796875
    4. '```' → logprob: -5.0968475341796875
    5. ' else' → logprob: -6.0968475341796875
    6. ' elif' → logprob: -7.7218475341796875
    7. ')' → logprob: -8.846847534179688
    8. '<|end|>' → logprob: -9.471847534179688
    9. ':' → logprob: -9.596847534179688
    10. '
' → logprob: -9.596847534179688

Token 37: ' for' (ID: 395)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8512151837348938
    2. 'elif' → logprob: -0.9762151837348938
    3. '<|end|>' → logprob: -1.726215124130249
    4. ' else' → logprob: -4.726215362548828
    5. ')' → logprob: -5.976215362548828
    6. '```' → logprob: -6.226215362548828
    7. ' elif' → logprob: -6.226215362548828
    8. '<|end|>' → logprob: -6.976215362548828
    9. ':' → logprob: -7.351215362548828
    10. '.' → logprob: -7.726215362548828

Token 38: ' iteration' (ID: 43155)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22851166129112244
    2. ' i' → logprob: -1.6035116910934448
    3. ' _' → logprob: -6.103511810302734
    4. ' range' → logprob: -7.853511810302734
    5. '_' → logprob: -7.978511810302734
    6. ' input' → logprob: -10.228511810302734
    7. 'i' → logprob: -10.478511810302734
    8. ' ' → logprob: -10.853511810302734
    9. ' in' → logprob: -11.103511810302734
    10. ' x' → logprob: -12.228511810302734

Token 39: '_index' (ID: 7748)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4526553153991699
    2. ' in' → logprob: -1.07765531539917
    3. '_' → logprob: -4.70265531539917
    4. 'in' → logprob: -5.07765531539917
    5. ' :' → logprob: -5.45265531539917
    6. ':' → logprob: -6.45265531539917
    7. ' i' → logprob: -6.82765531539917
    8. '    ' → logprob: -8.202655792236328
    9. ' _' → logprob: -8.577655792236328
    10. '  ' → logprob: -8.827655792236328

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010832627303898335
    2. 'in' → logprob: -5.010832786560059
    3. ' ' → logprob: -5.510832786560059
    4. ',' → logprob: -10.885832786560059
    5. '_' → logprob: -12.260832786560059
    6. '0' → logprob: -12.260832786560059
    7. ' ' → logprob: -12.385832786560059
    8. ' ,' → logprob: -12.510832786560059
    9. '  ' → logprob: -12.760832786560059
    10. ' i' → logprob: -12.885832786560059

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0003384422743692994
    2. 'range' → logprob: -8.125338554382324
    3. ' ' → logprob: -10.250338554382324
    4. '	range' → logprob: -12.125338554382324
    5. ' ran' → logprob: -13.875338554382324
    6. '  ' → logprob: -15.250338554382324
    7. ' ' → logprob: -16.000337600708008
    8. ' xrange' → logprob: -16.250337600708008
    9. '(range' → logprob: -17.250337600708008
    10. '   ' → logprob: -17.500337600708008

Token 42: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00030400342075154185
    2. ' (' → logprob: -8.750304222106934
    3. '(input' → logprob: -8.875304222106934
    4. '(int' → logprob: -13.375304222106934
    5. '<|end|>' → logprob: -13.625304222106934
    6. '(
' → logprob: -14.000304222106934
    7. '(len' → logprob: -14.625304222106934
    8. '((' → logprob: -14.750304222106934
    9. '('' → logprob: -15.625304222106934
    10. '(`' → logprob: -16.000303268432617

Token 43: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.9415627717971802
    2. 'input' → logprob: -1.1915627717971802
    3. '1' → logprob: -2.3165626525878906
    4. ' input' → logprob: -2.5665626525878906
    5. ' ' → logprob: -3.1915626525878906
    6. '2' → logprob: -3.3165626525878906
    7. '4' → logprob: -3.4415626525878906
    8. '5' → logprob: -4.566562652587891
    9. '0' → logprob: -5.691562652587891
    10. '10' → logprob: -6.066562652587891

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0641801506280899
    2. ' ):' → logprob: -2.8141801357269287
    3. ':' → logprob: -6.939180374145508
    4. ')' → logprob: -7.564180374145508
    5. ' :' → logprob: -8.439180374145508
    6. '+' → logprob: -8.939180374145508
    7. ' )' → logprob: -9.189180374145508
    8. '):
' → logprob: -9.564180374145508
    9. ',' → logprob: -9.939180374145508
    10. '1' → logprob: -10.689180374145508

Token 45: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.48256048560142517
    2. ':' → logprob: -1.2325605154037476
    3. '   ' → logprob: -2.982560396194458
    4. ' ' → logprob: -4.857560634613037
    5. '       ' → logprob: -4.982560634613037
    6. '```' → logprob: -5.107560634613037
    7. '<|end|>' → logprob: -5.357560634613037
    8. '
' → logprob: -5.732560634613037
    9. ' :' → logprob: -5.857560634613037
    10. '     
' → logprob: -6.232560634613037

Token 46: ' print' (ID: 2123)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8446419835090637
    2. '   ' → logprob: -1.594641923904419
    3. ' print' → logprob: -1.594641923904419
    4. 'print' (adapté à ' print') → logprob: -2.969641923904419
    5. ' ' → logprob: -3.469641923904419
    6. '     
' → logprob: -3.969641923904419
    7. ' 
' → logprob: -4.094642162322998
    8. '    
' → logprob: -4.344642162322998
    9. '<|end|>' → logprob: -4.344642162322998
    10. '       ' → logprob: -4.469642162322998

Token 47: '(iter' (ID: 61014)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6289381980895996
    2. '(' → logprob: -1.0039381980895996
    3. '(iter' → logprob: -3.3789381980895996
    4. '("*' → logprob: -3.5039381980895996
    5. '(input' → logprob: -4.5039381980896
    6. '("("' → logprob: -4.8789381980896
    7. '()' → logprob: -5.0039381980896
    8. '("")' → logprob: -5.3789381980896
    9. '("#' → logprob: -6.2539381980896
    10. '('' → logprob: -6.5039381980896

Token 48: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0003107943630311638
    2. '_' → logprob: -9.000310897827148
    3. '   ' → logprob: -9.750310897827148
    4. 'a' → logprob: -10.000310897827148
    5. '_index' → logprob: -10.500310897827148
    6. '_at' → logprob: -11.625310897827148
    7. ' at' → logprob: -12.000310897827148
    8. '```' → logprob: -12.000310897827148
    9. 'atio' → logprob: -12.625310897827148
    10. 'at' → logprob: -12.625310897827148

Token 49: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.004578699823468924
    2. '_' → logprob: -6.004578590393066
    3. ' _' → logprob: -7.129578590393066
    4. '_i' → logprob: -7.754578590393066
    5. ')_' → logprob: -7.754578590393066
    6. '__' → logprob: -8.879578590393066
    7. '_value' → logprob: -9.629578590393066
    8. '_a' → logprob: -10.129578590393066
    9. ')' → logprob: -10.254578590393066
    10. '   ' → logprob: -11.129578590393066

Token 50: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.165027217415627e-05
    2. '   ' → logprob: -11.750021934509277
    3. ')
' → logprob: -12.250021934509277
    4. ' )' → logprob: -13.000021934509277
    5. '+' → logprob: -13.125021934509277
    6. '))' → logprob: -13.500021934509277
    7. ' ' → logprob: -14.250021934509277
    8. '**' → logprob: -14.625021934509277
    9. ')`' → logprob: -15.250021934509277
    10. ')**' → logprob: -15.500021934509277

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014953467063605785
    2. ' ' → logprob: -4.26495361328125
    3. '2' → logprob: -7.88995361328125
    4. ')' → logprob: -8.76495361328125
    5. 'input' → logprob: -9.51495361328125
    6. '3' → logprob: -10.13995361328125
    7. ' input' → logprob: -10.13995361328125
    8. '   ' → logprob: -10.63995361328125
    9. ' )' → logprob: -10.76495361328125
    10. '  ' → logprob: -11.63995361328125

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012183967046439648
    2. ' ' → logprob: -4.637184143066406
    3. '2' → logprob: -6.637184143066406
    4. '3' → logprob: -7.762184143066406
    5. '10' → logprob: -9.012184143066406
    6. '5' → logprob: -9.012184143066406
    7. 'input' → logprob: -9.262184143066406
    8. '4' → logprob: -9.387184143066406
    9. '6' → logprob: -9.512184143066406
    10. '0' → logprob: -9.887184143066406

Token 53: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.135819760151207e-05
    2. ' )' → logprob: -10.50007152557373
    3. '   ' → logprob: -10.87507152557373
    4. ')
' → logprob: -12.00007152557373
    5. '))' → logprob: -12.25007152557373
    6. ',' → logprob: -13.00007152557373
    7. '**' → logprob: -13.25007152557373
    8. '*' → logprob: -13.62507152557373
    9. ')`' → logprob: -13.62507152557373
    10. '")' → logprob: -13.75007152557373

Token 54: ' iteration' (ID: 43155)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6785211563110352
    2. ' end' → logprob: -1.1785211563110352
    3. '"' → logprob: -2.303521156311035
    4. ')' → logprob: -3.553521156311035
    5. ' ' → logprob: -4.428521156311035
    6. '")' → logprob: -4.928521156311035
    7. ' "' → logprob: -4.928521156311035
    8. ' )' → logprob: -5.053521156311035
    9. '   ' → logprob: -5.553521156311035
    10. '",' → logprob: -5.678521156311035

Token 55: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.030138283967971802
    2. '_value' → logprob: -3.5301382541656494
    3. '_' → logprob: -8.90513801574707
    4. 'index' → logprob: -9.40513801574707
    5. ')' → logprob: -10.40513801574707
    6. ')_' → logprob: -11.15513801574707
    7. '_input' → logprob: -11.28013801574707
    8. '```' → logprob: -11.53013801574707
    9. 'er' → logprob: -11.78013801574707
    10. 'Index' → logprob: -11.90513801574707

Token 56: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6244239807128906
    2. ')' → logprob: -1.2494239807128906
    3. '+' → logprob: -2.6244239807128906
    4. ' )' → logprob: -2.8744239807128906
    5. ' ,' → logprob: -4.499423980712891
    6. ' ' → logprob: -4.874423980712891
    7. '   ' → logprob: -5.124423980712891
    8. ',' → logprob: -5.124423980712891
    9. ' *' → logprob: -5.374423980712891
    10. ' -' → logprob: -5.499423980712891

Token 57: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3789992928504944
    2. '1' → logprob: -2.0039992332458496
    3. ' ' → logprob: -2.3789992332458496
    4. '3' → logprob: -3.1289992332458496
    5. '5' → logprob: -4.12899923324585
    6. '4' → logprob: -5.00399923324585
    7. '10' → logprob: -5.12899923324585
    8. '6' → logprob: -5.25399923324585
    9. ')' → logprob: -5.62899923324585
    10. '7' → logprob: -6.00399923324585

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1803770512342453
    2. '1' → logprob: -2.3053770065307617
    3. '3' → logprob: -3.3053770065307617
    4. '5' → logprob: -5.055377006530762
    5. 'input' → logprob: -5.305377006530762
    6. '6' → logprob: -5.680377006530762
    7. '10' → logprob: -5.680377006530762
    8. '4' → logprob: -5.680377006530762
    9. ' ' → logprob: -5.930377006530762
    10. '7' → logprob: -6.430377006530762

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021956947166472673
    2. ' )' → logprob: -6.252195835113525
    3. '   ' → logprob: -8.377195358276367
    4. ',' → logprob: -11.377195358276367
    5. '))' → logprob: -12.252195358276367
    6. ')
' → logprob: -12.502195358276367
    7. ' ' → logprob: -12.627195358276367
    8. '       ' → logprob: -12.752195358276367
    9. '    ' → logprob: -12.877195358276367
    10. ')")' → logprob: -13.627195358276367

Token 60: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20828616619110107
    2. 'elif' → logprob: -2.0832862854003906
    3. ' else' → logprob: -3.3332862854003906
    4. ':' → logprob: -4.208286285400391
    5. '<|end|>' → logprob: -5.458286285400391
    6. '```' → logprob: -5.708286285400391
    7. ' elif' → logprob: -6.458286285400391
    8. '   ' → logprob: -6.958286285400391
    9. ' ' → logprob: -6.958286285400391
    10. 'e' → logprob: -7.708286285400391

Token 61: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.014414873905479908
    2. 'input' → logprob: -4.2644147872924805
    3. ' ' → logprob: -8.38941478729248
    4. '(input' → logprob: -12.63941478729248
    5. ' not' → logprob: -12.76441478729248
    6. ' (' → logprob: -12.88941478729248
    7. '0' → logprob: -13.51441478729248
    8. ' True' → logprob: -13.63941478729248
    9. ' ' → logprob: -13.63941478729248
    10. '_input' → logprob: -13.76441478729248

Token 62: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -13.000003814697266
    3. 'value' → logprob: -14.375003814697266
    4. '_val' → logprob: -15.000003814697266
    5. ' _' → logprob: -15.125003814697266
    6. '_input' → logprob: -16.875003814697266
    7. '_VALUE' → logprob: -17.250003814697266
    8. '_Value' → logprob: -18.250003814697266
    9. '_index' → logprob: -18.500003814697266
    10. '_values' → logprob: -18.500003814697266

Token 63: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03106878511607647
    2. ' >' → logprob: -3.906068801879883
    3. '==' → logprob: -5.406068801879883
    4. ' >=' → logprob: -5.531068801879883
    5. ' ' → logprob: -6.906068801879883
    6. ' <=' → logprob: -7.406068801879883
    7. '>' → logprob: -8.906068801879883
    8. ' <' → logprob: -9.031068801879883
    9. ' !=' → logprob: -9.906068801879883
    10. ' %' → logprob: -10.156068801879883

Token 64: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3938784897327423
    2. '2' → logprob: -1.26887845993042
    3. '3' → logprob: -3.14387845993042
    4. '4' → logprob: -7.14387845993042
    5. '5' → logprob: -8.268878936767578
    6. '7' → logprob: -9.518878936767578
    7. '10' → logprob: -10.143878936767578
    8. '6' → logprob: -10.268878936767578
    9. '<|end|>' → logprob: -10.768878936767578
    10. '8' → logprob: -11.143878936767578

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1281907558441162
    2. '3' → logprob: -2.253190755844116
    3. '4' → logprob: -5.253190994262695
    4. '5' → logprob: -5.253190994262695
    5. '7' → logprob: -6.378190994262695
    6. '10' → logprob: -6.753190994262695
    7. ' ' → logprob: -7.003190994262695
    8. '6' → logprob: -7.378190994262695
    9. '8' → logprob: -9.003190994262695
    10. '12' → logprob: -9.878190994262695

Token 66: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11595419049263
    2. ' !=' → logprob: -2.6159541606903076
    3. '==' → logprob: -3.3659541606903076
    4. '!=' → logprob: -6.740954399108887
    5. ' ' → logprob: -7.365954399108887
    6. ' ' → logprob: -11.615954399108887
    7. '=' → logprob: -11.865954399108887
    8. ' >' → logprob: -12.365954399108887
    9. ' =' → logprob: -12.365954399108887
    10. ':' → logprob: -12.490954399108887

Token 67: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.062387652695178986
    2. '0' → logprob: -2.812387704849243
    3. '1' → logprob: -7.812387466430664
    4. '  ' → logprob: -11.937387466430664
    5. ' ' → logprob: -12.749887466430664
    6. '==' → logprob: -14.124887466430664
    7. '=' → logprob: -14.124887466430664
    8. '	' → logprob: -14.249887466430664
    9. '2' → logprob: -14.562387466430664
    10. '```' → logprob: -14.874887466430664

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07904830574989319
    2. '1' → logprob: -2.7040483951568604
    3. ' ' → logprob: -4.704048156738281
    4. '2' → logprob: -12.016548156738281
    5. '3' → logprob: -13.829048156738281
    6. '  ' → logprob: -14.704048156738281
    7. '   ' → logprob: -14.766548156738281
    8. '```' → logprob: -15.141548156738281
    9. '=' → logprob: -15.204048156738281
    10. ')' → logprob: -15.329048156738281

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.416665640543215e-05
    2. ':
' → logprob: -10.87503433227539
    3. ' :' → logprob: -11.12503433227539
    4. '):' → logprob: -16.50003433227539
    5. ':**' → logprob: -16.62503433227539
    6. ':

' → logprob: -16.75003433227539
    7. ':
' → logprob: -17.12503433227539
    8. ' and' → logprob: -17.75003433227539
    9. '>:' → logprob: -17.75003433227539
    10. ':return' → logprob: -18.37503433227539

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032415243331342936
    2. ':' → logprob: -6.503241539001465
    3. '    
' → logprob: -7.753241539001465
    4. '
' → logprob: -8.003241539001465
    5. '<|end|>' → logprob: -8.003241539001465
    6. ':
' → logprob: -8.628241539001465
    7. ' print' → logprob: -9.003241539001465
    8. ' 
' → logprob: -9.503241539001465
    9. '```' → logprob: -9.628241539001465
    10. '  
' → logprob: -10.253241539001465

Token 71: ' bit' (ID: 3546)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.10777977854013443
    2. '   ' → logprob: -2.9827797412872314
    3. 'print' → logprob: -2.9827797412872314
    4. ' ' → logprob: -8.482779502868652
    5. '    ' → logprob: -9.107779502868652
    6. ':' → logprob: -9.357779502868652
    7. ' n' → logprob: -9.607779502868652
    8. ' 
' → logprob: -9.732779502868652
    9. '	print' → logprob: -9.857779502868652
    10. '```' → logprob: -9.857779502868652

Token 72: '_length' (ID: 11514)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02306400053203106
    2. ' =' → logprob: -5.273064136505127
    3. '_' → logprob: -5.523064136505127
    4. 'print' → logprob: -6.023064136505127
    5. ' ' → logprob: -6.273064136505127
    6. '   ' → logprob: -6.273064136505127
    7. ' s' → logprob: -6.398064136505127
    8. 'set' → logprob: -6.773064136505127
    9. 'es' → logprob: -7.023064136505127
    10. '_count' → logprob: -7.023064136505127

Token 73: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.262594997882843
    2. '()' → logprob: -1.8875949382781982
    3. '=' → logprob: -3.2625949382781982
    4. ' ()' → logprob: -3.6375949382781982
    5. '(' → logprob: -5.012595176696777
    6. ' (' → logprob: -6.012595176696777
    7. '   ' → logprob: -6.762595176696777
    8. ' ' → logprob: -7.012595176696777
    9. ' +=' → logprob: -7.512595176696777
    10. ' -=' → logprob: -7.512595176696777

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002451992128044367
    2. '=' → logprob: -6.1274518966674805
    3. ' ' → logprob: -8.37745189666748
    4. '-' → logprob: -11.75245189666748
    5. ' -=' → logprob: -12.00245189666748
    6. '   ' → logprob: -12.12745189666748
    7. ' -' → logprob: -12.37745189666748
    8. '    ' → logprob: -12.50245189666748
    9. '_' → logprob: -13.37745189666748
    10. ' ' → logprob: -14.00245189666748

Token 75: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4301309883594513
    2. 'input' → logprob: -1.055130958557129
    3. '(input' → logprob: -7.180130958557129
    4. ' (' → logprob: -8.180130958557129
    5. ' ' → logprob: -8.430130958557129
    6. 'int' → logprob: -10.555130958557129
    7. '   ' → logprob: -10.680130958557129
    8. '(' → logprob: -10.930130958557129
    9. 'bin' → logprob: -11.305130958557129
    10. '  ' → logprob: -11.430130958557129

Token 76: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.084206375409849e-05
    2. '_' → logprob: -10.625041007995605
    3. 'value' → logprob: -12.375041007995605
    4. '_bit' → logprob: -12.625041007995605
    5. '_val' → logprob: -12.750041007995605
    6. '```' → logprob: -13.500041007995605
    7. ' _' → logprob: -13.750041007995605
    8. ')_' → logprob: -14.750041007995605
    9. '_values' → logprob: -15.125041007995605
    10. '"_' → logprob: -15.375041007995605

Token 77: '.bit' (ID: 61866)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0818253830075264
    2. '   ' → logprob: -3.4568254947662354
    3. '//' → logprob: -3.8318254947662354
    4. ' ' → logprob: -4.081825256347656
    5. ' -' → logprob: -5.706825256347656
    6. '-' → logprob: -5.956825256347656
    7. '  ' → logprob: -7.206825256347656
    8. '    ' → logprob: -7.331825256347656
    9. ' bit' → logprob: -7.581825256347656
    10. '```' → logprob: -8.331825256347656

Token 78: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.25000286102295
    3. '_l' → logprob: -14.87500286102295
    4. '_width' → logprob: -16.125001907348633
    5. '_count' → logprob: -16.625001907348633
    6. 'length' → logprob: -16.750001907348633
    7. '_le' → logprob: -16.875001907348633
    8. 'ength' → logprob: -17.625001907348633
    9. '_len' → logprob: -17.875001907348633
    10. '_LENGTH' → logprob: -17.875001907348633

Token 79: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009654151508584619
    2. '(' → logprob: -7.125965595245361
    3. ' ()' → logprob: -9.000965118408203
    4. '()
' → logprob: -11.625965118408203
    5. '()+' → logprob: -11.750965118408203
    6. '()>' → logprob: -12.250965118408203
    7. '```' → logprob: -12.500965118408203
    8. '()`' → logprob: -12.750965118408203
    9. '()<' → logprob: -13.500965118408203
    10. '`()' → logprob: -14.000965118408203

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6511268615722656
    2. ':' → logprob: -0.7761268615722656
    3. ':
' → logprob: -4.401126861572266
    4. '
' → logprob: -7.026126861572266
    5. '<|end|>' → logprob: -7.276126861572266
    6. '    
' → logprob: -7.651126861572266
    7. ' and' → logprob: -7.651126861572266
    8. '```' → logprob: -7.776126861572266
    9. ' :' → logprob: -8.026126861572266
    10. '-' → logprob: -8.151126861572266

Token 81: ' power' (ID: 3470)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5564762949943542
    2. '   ' → logprob: -1.056476354598999
    3. ' print' → logprob: -2.681476354598999
    4. 'n' → logprob: -5.43147611618042
    5. ':
' → logprob: -6.55647611618042
    6. ' n' → logprob: -6.80647611618042
    7. '    
' → logprob: -7.93147611618042
    8. ':' → logprob: -8.056476593017578
    9. ' for' → logprob: -8.306476593017578
    10. 'for' → logprob: -8.306476593017578

Token 82: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0685043334960938
    2. '_value' → logprob: -1.0685043334960938
    3. '_val' → logprob: -2.3185043334960938
    4. '_' → logprob: -2.4435043334960938
    5. '_of' → logprob: -2.8185043334960938
    6. ' =' → logprob: -3.8185043334960938
    7. '   ' → logprob: -3.9435043334960938
    8. '2' → logprob: -4.318504333496094
    9. 's' → logprob: -5.943504333496094
    10. '=' → logprob: -6.318504333496094

Token 83: '_two' (ID: 54305)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009353216737508774
    2. '_two' → logprob: -5.384353160858154
    3. '(' → logprob: -6.259353160858154
    4. 'two' → logprob: -6.884353160858154
    5. ' ' → logprob: -7.009353160858154
    6. ' two' → logprob: -7.759353160858154
    7. '_' → logprob: -8.134353637695312
    8. 's' → logprob: -10.259353637695312
    9. '_value' → logprob: -10.634353637695312
    10. '  ' → logprob: -10.759353637695312

Token 84: '_com' (ID: 10828)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02858712151646614
    2. '=' → logprob: -3.7785871028900146
    3. '_value' → logprob: -5.778587341308594
    4. '_' → logprob: -6.528587341308594
    5. 's' → logprob: -8.403587341308594
    6. '_val' → logprob: -8.403587341308594
    7. ' ' → logprob: -8.778587341308594
    8. '(' → logprob: -9.278587341308594
    9. '   ' → logprob: -10.653587341308594
    10. '```' → logprob: -11.778587341308594

Token 85: 'parison' (ID: 80438)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.31787818670272827
    2. 'ing' → logprob: -2.692878246307373
    3. 'p' → logprob: -3.317878246307373
    4. 'pare' → logprob: -3.442878246307373
    5. 'pared' → logprob: -3.817878246307373
    6. 'pleted' → logprob: -3.942878246307373
    7. 'parison' → logprob: -4.192878246307373
    8. '```' → logprob: -4.192878246307373
    9. '=' → logprob: -4.442878246307373
    10. 'puted' → logprob: -4.817878246307373

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0383041575551033
    2. '=' → logprob: -3.288304090499878
    3. ' ' → logprob: -9.038304328918457
    4. '_' → logprob: -10.163304328918457
    5. 's' → logprob: -10.663304328918457
    6. '_value' → logprob: -10.788304328918457
    7. '   ' → logprob: -11.038304328918457
    8. ' ' → logprob: -11.788304328918457
    9. '  ' → logprob: -12.163304328918457
    10. '1' → logprob: -12.538304328918457

Token 87: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0102839469909668
    2. '1' → logprob: -1.2602839469909668
    3. ' ' → logprob: -1.6352839469909668
    4. '(' → logprob: -2.510283946990967
    5. ' (' → logprob: -2.635283946990967
    6. ' bit' → logprob: -6.885283946990967
    7. 'input' → logprob: -6.885283946990967
    8. ' input' → logprob: -7.135283946990967
    9. 'bit' → logprob: -7.510283946990967
    10. 'pow' → logprob: -8.385284423828125

Token 88: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6548627614974976
    2. '2' → logprob: -1.1548627614974976
    3. '(' → logprob: -2.029862880706787
    4. 'input' → logprob: -4.029862880706787
    5. ' ' → logprob: -5.154862880706787
    6. 'bit' → logprob: -5.529862880706787
    7. ' (' → logprob: -5.529862880706787
    8. '(input' → logprob: -6.904862880706787
    9. 'pow' → logprob: -7.904862880706787
    10. '(bit' → logprob: -8.279862403869629

Token 89: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.12755151093006134
    2. ' **' → logprob: -2.127551555633545
    3. '*' → logprob: -7.627551555633545
    4. ' *' → logprob: -9.002551078796387
    5. ' ' → logprob: -12.252551078796387
    6. '***' → logprob: -12.877551078796387
    7. ' <<' → logprob: -13.627551078796387
    8. '<' → logprob: -13.752551078796387
    9. '<<' → logprob: -14.002551078796387
    10. '^' → logprob: -14.502551078796387

Token 90: ' (' (ID: 350)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.1897655725479126
    2. 'bit' → logprob: -2.189765453338623
    3. '(' → logprob: -2.814765453338623
    4. ' (' → logprob: -7.439765453338623
    5. '(b' → logprob: -8.814765930175781
    6. ' bit' → logprob: -9.064765930175781
    7. '(input' → logprob: -10.064765930175781
    8. '((' → logprob: -10.689765930175781
    9. '(power' → logprob: -11.314765930175781
    10. '(int' → logprob: -12.064765930175781

Token 91: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.01082248892635107
    2. ' bit' → logprob: -4.760822296142578
    3. '(bit' → logprob: -6.135822296142578
    4. ' (' → logprob: -10.635822296142578
    5. '(' → logprob: -11.510822296142578
    6. ' ' → logprob: -13.385822296142578
    7. 'b' → logprob: -13.635822296142578
    8. 'input' → logprob: -13.760822296142578
    9. '   ' → logprob: -14.010822296142578
    10. 'bitr' → logprob: -14.260822296142578

Token 92: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00015669701679144055
    2. 'length' → logprob: -8.87515640258789
    3. '_value' → logprob: -12.62515640258789
    4. '_l' → logprob: -12.87515640258789
    5. '-' → logprob: -13.00015640258789
    6. 'ength' → logprob: -13.25015640258789
    7. '_' → logprob: -13.37515640258789
    8. '   ' → logprob: -14.00015640258789
    9. '_size' → logprob: -14.87515640258789
    10. '_len' → logprob: -15.25015640258789

Token 93: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0008210649830289185
    2. '-' → logprob: -7.250821113586426
    3. 'value' → logprob: -9.500821113586426
    4. '-value' → logprob: -11.625821113586426
    5. ')' → logprob: -11.750821113586426
    6. '_' → logprob: -12.500821113586426
    7. 'Value' → logprob: -12.875821113586426
    8. '```' → logprob: -13.000821113586426
    9. '_val' → logprob: -13.250821113586426
    10. ' -' → logprob: -13.375821113586426

Token 94: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.227043017745018
    2. '-' → logprob: -1.6020430326461792
    3. ')' → logprob: -6.477043151855469
    4. ' ' → logprob: -9.852043151855469
    5. ' )' → logprob: -11.102043151855469
    6. '<|end|>' → logprob: -11.227043151855469
    7. ')-' → logprob: -12.977043151855469
    8. '-)' → logprob: -13.352043151855469
    9. '<|end|>' → logprob: -14.102043151855469
    10. '2' → logprob: -14.477043151855469

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010547923855483532
    2. ' ' → logprob: -4.760548114776611
    3. '2' → logprob: -6.260548114776611
    4. '   ' → logprob: -11.010547637939453
    5. '  ' → logprob: -13.198047637939453
    6. ' ' → logprob: -14.823047637939453
    7. '3' → logprob: -15.135547637939453
    8. '```' → logprob: -15.135547637939453
    9. '    ' → logprob: -15.323047637939453
    10. '-' → logprob: -15.448047637939453

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011105949059128761
    2. '2' → logprob: -4.511106014251709
    3. ' ' → logprob: -9.88610553741455
    4. '   ' → logprob: -12.38610553741455
    5. '  ' → logprob: -13.94860553741455
    6. '3' → logprob: -14.76110553741455
    7. '```' → logprob: -14.88610553741455
    8. ')' → logprob: -15.51110553741455
    9. '

' → logprob: -15.57360553741455
    10. '１' → logprob: -15.76110553741455

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006661369930952787
    2. '<|end|>' → logprob: -6.006661415100098
    3. ' )' → logprob: -6.506661415100098
    4. '>=' → logprob: -8.006661415100098
    5. ' >=' → logprob: -8.131661415100098
    6. ' <=' → logprob: -8.131661415100098
    7. ' <' → logprob: -8.256661415100098
    8. '==' → logprob: -8.256661415100098
    9. '<=' → logprob: -8.506661415100098
    10. '+' → logprob: -8.756661415100098

Token 98: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01241758931428194
    2. ':
' → logprob: -5.012417793273926
    3. ' and' → logprob: -5.262417793273926
    4. '   ' → logprob: -8.262417793273926
    5. ' :' → logprob: -9.387417793273926
    6. 'and' → logprob: -9.512417793273926
    7. '<|end|>' → logprob: -10.762417793273926
    8. '):' → logprob: -11.137417793273926
    9. ',' → logprob: -11.262417793273926
    10. ' or' → logprob: -11.887417793273926

Token 99: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05683933198451996
    2. ' print' → logprob: -3.6818392276763916
    3. 'if' (adapté à ' if') → logprob: -3.9318392276763916
    4. '   ' → logprob: -5.181839466094971
    5. ' if' → logprob: -6.056839466094971
    6. ':' → logprob: -7.181839466094971
    7. 'else' → logprob: -7.806839466094971
    8. 'for' → logprob: -8.056838989257812
    9. 'n' → logprob: -8.181838989257812
    10. ':
' → logprob: -8.181838989257812

Token 100: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.525231659412384
    2. 'input' → logprob: -0.900231659412384
    3. ' power' → logprob: -6.650231838226318
    4. 'power' → logprob: -7.275231838226318
    5. ' ' → logprob: -10.27523136138916
    6. '   ' → logprob: -10.77523136138916
    7. '(input' → logprob: -11.15023136138916
    8. ' not' → logprob: -11.90023136138916
    9. 'pow' → logprob: -12.02523136138916
    10. 'bit' → logprob: -12.40023136138916

Token 101: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.318681188422488e-05
    2. 'value' → logprob: -11.37501335144043
    3. '_' → logprob: -13.87501335144043
    4. 'Value' → logprob: -15.75001335144043
    5. '_VALUE' → logprob: -16.25001335144043
    6. '_input' → logprob: -16.62501335144043
    7. '%' → logprob: -17.12501335144043
    8. 'alue' → logprob: -17.37501335144043
    9. '==' → logprob: -17.62501335144043
    10. '_Value' → logprob: -17.62501335144043

Token 102: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20242606103420258
    2. '==' → logprob: -1.7024260759353638
    3. ' !=' → logprob: -7.827425956726074
    4. '>' → logprob: -9.077425956726074
    5. ' ' → logprob: -9.077425956726074
    6. ' >' → logprob: -9.202425956726074
    7. '!=' → logprob: -9.327425956726074
    8. ' <' → logprob: -9.577425956726074
    9. '=' → logprob: -10.077425956726074
    10. '<' → logprob: -10.077425956726074

Token 103: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.10023567825555801
    2. 'power' → logprob: -2.3502357006073
    3. 'pow' → logprob: -11.475235939025879
    4. '2' → logprob: -11.475235939025879
    5. ' ' → logprob: -12.475235939025879
    6. ' pow' → logprob: -13.600235939025879
    7. '    ' → logprob: -14.350235939025879
    8. '   ' → logprob: -14.350235939025879
    9. '(power' → logprob: -14.350235939025879
    10. '1' → logprob: -15.100235939025879

Token 104: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.00010402000043541193
    2. '_' → logprob: -10.250103950500488
    3. ' _' → logprob: -10.750103950500488
    4. '   ' → logprob: -10.875103950500488
    5. 'of' → logprob: -12.125103950500488
    6. '_o' → logprob: -12.750103950500488
    7. '\' → logprob: -13.125103950500488
    8. '_two' → logprob: -13.375103950500488
    9. '_power' → logprob: -13.625103950500488
    10. ' of' → logprob: -13.625103950500488

Token 105: '_two' (ID: 54305)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.5760126113891602
    2. '_two' → logprob: -0.8260126113891602
    3. ' two' → logprob: -10.57601261138916
    4. '-two' → logprob: -10.70101261138916
    5. 'tw' → logprob: -11.45101261138916
    6. '(two' → logprob: -12.82601261138916
    7. '2' → logprob: -13.20101261138916
    8. '.two' → logprob: -13.32601261138916
    9. '_tw' → logprob: -13.57601261138916
    10. '_TWO' → logprob: -13.70101261138916

Token 106: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -4.179569077678025e-05
    2. 'comparison' → logprob: -10.750041961669922
    3. '_' → logprob: -12.125041961669922
    4. ':' → logprob: -12.250041961669922
    5. '_compare' → logprob: -13.125041961669922
    6. '_of' → logprob: -13.125041961669922
    7. 'Comparison' → logprob: -13.875041961669922
    8. '-com' → logprob: -13.875041961669922
    9. '_value' → logprob: -14.125041961669922
    10. '   ' → logprob: -14.500041961669922

Token 107: 'parison' (ID: 80438)
  Prédit: 'parison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parison' → logprob: -0.005178258754312992
    2. 'ar' → logprob: -5.880178451538086
    3. 'par' → logprob: -6.130178451538086
    4. 'paration' → logprob: -8.630178451538086
    5. 'arp' → logprob: -13.255178451538086
    6. 'ison' → logprob: -13.505178451538086
    7. 'pari' → logprob: -13.505178451538086
    8. 'p' → logprob: -13.755178451538086
    9. 'parer' → logprob: -13.755178451538086
    10. 'apar' → logprob: -13.755178451538086

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07897967845201492
    2. ':
' → logprob: -2.578979730606079
    3. '   ' → logprob: -9.9539794921875
    4. '       ' → logprob: -11.3289794921875
    5. ' :' → logprob: -11.3289794921875
    6. ' :
' → logprob: -11.8289794921875
    7. ' and' → logprob: -11.9539794921875
    8. ' or' → logprob: -13.4539794921875
    9. ':
' → logprob: -13.8289794921875
    10. '):
' → logprob: -14.4539794921875

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2097904533147812
    2. ':' → logprob: -1.7097904682159424
    3. ':
' → logprob: -4.834790229797363
    4. '   ' → logprob: -8.084790229797363
    5. 'print' → logprob: -10.709790229797363
    6. ' print' → logprob: -11.084790229797363
    7. '):' → logprob: -11.334790229797363
    8. ' :' → logprob: -12.209790229797363
    9. '):
' → logprob: -12.459790229797363
    10. ',' → logprob: -12.459790229797363

Token 110: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10089565068483353
    2. '   ' → logprob: -2.975895643234253
    3. 'print' (adapté à ' print') → logprob: -3.600895643234253
    4. ' print' → logprob: -4.225895881652832
    5. ':' → logprob: -5.975895881652832
    6. '           ' → logprob: -9.100895881652832
    7. ':
' → logprob: -9.350895881652832
    8. '     ' → logprob: -9.600895881652832
    9. ' for' → logprob: -9.850895881652832
    10. '    ' → logprob: -10.225895881652832

Token 111: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0020227357745170593
    2. '(' → logprob: -6.252022743225098
    3. '("("' → logprob: -9.877022743225098
    4. '(input' → logprob: -10.377022743225098
    5. '('' → logprob: -12.877022743225098
    6. '("")' → logprob: -13.127022743225098
    7. '((' → logprob: -13.127022743225098
    8. '("(' → logprob: -14.002022743225098
    9. '(-' → logprob: -14.127022743225098
    10. '(len' → logprob: -14.377022743225098

Token 112: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.2880934774875641
    2. 'Yes' → logprob: -1.9130934476852417
    3. '"No' → logprob: -2.4130935668945312
    4. '"' → logprob: -4.413093566894531
    5. 'input' → logprob: -7.413093566894531
    6. '("' → logprob: -8.288093566894531
    7. '-' → logprob: -10.163093566894531
    8. '(No' → logprob: -11.163093566894531
    9. '(input' → logprob: -11.288093566894531
    10. 'N' → logprob: -11.413093566894531

Token 113: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.161962628364563
    2. ')' → logprob: -2.1619625091552734
    3. '   ' → logprob: -3.4119625091552734
    4. '")
' → logprob: -7.161962509155273
    5. 'else' → logprob: -8.161962509155273
    6. ')
' → logprob: -8.286962509155273
    7. '')' → logprob: -10.411962509155273
    8. '```' → logprob: -10.536962509155273
    9. ')")' → logprob: -10.786962509155273
    10. '       ' → logprob: -11.286962509155273

Token 114: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05296763405203819
    2. ' else' → logprob: -3.0529675483703613
    3. '   ' → logprob: -5.927967548370361
    4. ':' → logprob: -6.927967548370361
    5. 'elif' → logprob: -7.802967548370361
    6. ':
' → logprob: -8.80296802520752
    7. '<|end|>' → logprob: -9.05296802520752
    8. '	else' → logprob: -10.67796802520752
    9. ')' → logprob: -11.92796802520752
    10. '_else' → logprob: -12.17796802520752

Token 115: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07215088605880737
    2. ' else' → logprob: -2.947150945663452
    3. '   ' → logprob: -4.072150707244873
    4. 'elif' → logprob: -10.322151184082031
    5. '	else' → logprob: -10.572151184082031
    6. '<|end|>' → logprob: -12.072151184082031
    7. ' ' → logprob: -12.572151184082031
    8. ':' → logprob: -12.697151184082031
    9. ')' → logprob: -13.197151184082031
    10. '  ' → logprob: -13.322151184082031

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020339188631623983
    2. ':
' → logprob: -6.252033710479736
    3. '       ' → logprob: -9.377034187316895
    4. '   ' → logprob: -11.252034187316895
    5. ' :' → logprob: -12.377034187316895
    6. ':

' → logprob: -14.252034187316895
    7. '    ' → logprob: -14.252034187316895
    8. '<|end|>' → logprob: -14.502034187316895
    9. ':
' → logprob: -14.752034187316895
    10. ' :
' → logprob: -15.127034187316895

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22995728254318237
    2. ':' → logprob: -2.104957342147827
    3. ':
' → logprob: -2.604957342147827
    4. '   ' → logprob: -4.729957103729248
    5. 'print' → logprob: -7.729957103729248
    6. ' print' → logprob: -8.979957580566406
    7. '):
' → logprob: -9.979957580566406
    8. ' :
' → logprob: -10.354957580566406
    9. '
' → logprob: -10.729957580566406
    10. '<|end|>' → logprob: -10.979957580566406

Token 118: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6401599049568176
    2. ' print' → logprob: -0.7651599049568176
    3. '           ' → logprob: -5.390160083770752
    4. '       ' → logprob: -6.390160083770752
    5. ' for' → logprob: -7.390160083770752
    6. '   ' → logprob: -8.015159606933594
    7. ' ' → logprob: -8.890159606933594
    8. 'for' → logprob: -9.390159606933594
    9. '	print' → logprob: -10.765159606933594
    10. '```' → logprob: -11.140159606933594

Token 119: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03804539144039154
    2. '(' → logprob: -3.2880454063415527
    3. '(
' → logprob: -13.163044929504395
    4. '("("' → logprob: -13.788044929504395
    5. '('' → logprob: -14.038044929504395
    6. '(

' → logprob: -16.41304588317871
    7. '("""' → logprob: -16.78804588317871
    8. '()' → logprob: -17.78804588317871
    9. '(\' → logprob: -17.78804588317871
    10. '("")' → logprob: -17.91304588317871

Token 120: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0002181987656513229
    2. '"' → logprob: -8.625218391418457
    3. 'No' → logprob: -11.000218391418457
    4. 'Ye' → logprob: -11.750218391418457
    5. 'YES' → logprob: -12.375218391418457
    6. ' Yes' → logprob: -12.500218391418457
    7. 'input' → logprob: -13.250218391418457
    8. '“Yes' → logprob: -14.125218391418457
    9. 'yes' → logprob: -14.500218391418457
    10. 'n' → logprob: -14.625218391418457

Token 121: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0486053042113781
    2. '<|end|>' → logprob: -3.17360520362854
    3. ')' → logprob: -5.423605442047119
    4. '
' → logprob: -7.673605442047119
    5. '   ' → logprob: -8.173604965209961
    6. '")' → logprob: -9.298604965209961
    7. '           ' → logprob: -9.548604965209961
    8. '\n' → logprob: -9.798604965209961
    9. '<|end|>' → logprob: -9.798604965209961
    10. ',' → logprob: -9.923604965209961

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012709470465779305
    2. '   ' → logprob: -7.126270771026611
    3. '<|end|>' → logprob: -8.25127124786377
    4. ' for' → logprob: -9.00127124786377
    5. ',' → logprob: -10.75127124786377
    6. '        
' → logprob: -11.00127124786377
    7. '	' → logprob: -11.50127124786377
    8. ' ' → logprob: -12.25127124786377
    9. '           ' → logprob: -12.25127124786377
    10. ' and' → logprob: -13.00127124786377

Token 123: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020450085401535034
    2. '       ' → logprob: -4.895450115203857
    3. 'print' (adapté à ' print') → logprob: -5.145450115203857
    4. ' for' → logprob: -5.270450115203857
    5. 'count' → logprob: -7.520450115203857
    6. 'i' → logprob: -8.2704496383667
    7. 'n' → logprob: -8.5204496383667
    8. '           ' → logprob: -9.2704496383667
    9. 'start' → logprob: -9.6454496383667
    10. 'range' → logprob: -9.6454496383667

Token 124: '(' (ID: 7)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11693914234638214
    2. '(' → logprob: -2.241939067840576
    3. '((' → logprob: -5.866939067840576
    4. '("' → logprob: -7.616939067840576
    5. '(iter' → logprob: -7.866939067840576
    6. 'input' → logprob: -8.991939544677734
    7. '1' → logprob: -9.741939544677734
    8. '(int' → logprob: -10.366939544677734
    9. '(*' → logprob: -10.741939544677734
    10. '2' → logprob: -10.741939544677734

Token 125: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.15557999908924103
    2. '(input' → logprob: -2.4055800437927246
    3. '1' → logprob: -3.0305800437927246
    4. '(' → logprob: -6.030580043792725
    5. '0' → logprob: -6.530580043792725
    6. '2' → logprob: -6.905580043792725
    7. '3' → logprob: -8.030579566955566
    8. '[input' → logprob: -8.780579566955566
    9. '((' → logprob: -10.280579566955566
    10. ' input' → logprob: -10.405579566955566

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045503295958042145
    2. ',input' → logprob: -3.2955033779144287
    3. ')' → logprob: -6.04550313949585
    4. ' ,' → logprob: -6.17050313949585
    5. '0' → logprob: -6.29550313949585
    6. ',end' → logprob: -8.420503616333008
    7. '1' → logprob: -8.545503616333008
    8. 'input' → logprob: -8.670503616333008
    9. '+' → logprob: -9.295503616333008
    10. ',)' → logprob: -9.295503616333008

Token 127: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07363229990005493
    2. '2' → logprob: -2.94863224029541
    3. '1' → logprob: -4.32363224029541
    4. '(input' → logprob: -5.57363224029541
    5. '3' → logprob: -7.32363224029541
    6. ')' → logprob: -7.82363224029541
    7. ',input' → logprob: -8.69863224029541
    8. '[input' → logprob: -8.94863224029541
    9. ' input' → logprob: -9.32363224029541
    10. '0' → logprob: -10.57363224029541

Token 128: '2' (ID: 17)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05418895184993744
    2. '2' → logprob: -3.6791889667510986
    3. '(input' → logprob: -3.6791889667510986
    4. '1' → logprob: -6.4291887283325195
    5. '3' → logprob: -8.30418872833252
    6. ' input' → logprob: -8.92918872833252
    7. '(' → logprob: -9.30418872833252
    8. '[input' → logprob: -9.30418872833252
    9. ',input' → logprob: -10.17918872833252
    10. '<input' → logprob: -11.30418872833252

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08988456428050995
    2. ')
' → logprob: -2.4648845195770264
    3. ' )' → logprob: -7.9648847579956055
    4. ',' → logprob: -8.214884757995605
    5. '   ' → logprob: -9.339884757995605
    6. ' )
' → logprob: -9.589884757995605
    7. '
' → logprob: -10.839884757995605
    8. ')

' → logprob: -10.964884757995605
    9. ')
' → logprob: -11.089884757995605
    10. ' ' → logprob: -11.339884757995605

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01566641964018345
    2. '<|end|>' → logprob: -4.515666484832764
    3. ' for' → logprob: -6.015666484832764
    4. ' ' → logprob: -7.140666484832764
    5. ' else' → logprob: -8.390666007995605
    6. '   ' → logprob: -8.890666007995605
    7. 'else' → logprob: -8.890666007995605
    8. '        ' → logprob: -9.140666007995605
    9. ',' → logprob: -9.265666007995605
    10. 'for' → logprob: -9.515666007995605

Token 131: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009211080614477396
    2. 'else' → logprob: -8.000921249389648
    3. 'for' → logprob: -8.500921249389648
    4. 'elif' → logprob: -9.125921249389648
    5. '3' → logprob: -9.875921249389648
    6. 'print' (adapté à ' print') → logprob: -10.125921249389648
    7. ' for' → logprob: -10.250921249389648
    8. '   ' → logprob: -10.750921249389648
    9. 'input' → logprob: -10.875921249389648
    10. '7' → logprob: -11.250921249389648

Token 132: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8495510220527649
    2. '(input' → logprob: -1.3495509624481201
    3. '(' → logprob: -1.8495509624481201
    4. '1' → logprob: -2.09955096244812
    5. 'input' → logprob: -3.47455096244812
    6. '3' → logprob: -6.224551200866699
    7. ' ' → logprob: -9.7245512008667
    8. '0' → logprob: -10.8495512008667
    9. '(int' → logprob: -10.8495512008667
    10. 'int' → logprob: -10.9745512008667

Token 133: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9540127515792847
    2. '2' → logprob: -1.2040127515792847
    3. 'input' → logprob: -1.2040127515792847
    4. '(input' → logprob: -4.829012870788574
    5. '3' → logprob: -5.329012870788574
    6. '(' → logprob: -6.704012870788574
    7. ' ' → logprob: -8.079012870788574
    8. ' input' → logprob: -9.204012870788574
    9. '4' → logprob: -9.829012870788574
    10. 'int' → logprob: -9.954012870788574

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007184172980487347
    2. '3' → logprob: -5.257184028625488
    3. ' ,' → logprob: -6.382184028625488
    4. ',input' → logprob: -8.632184028625488
    5. ' ' → logprob: -10.132184028625488
    6. ',end' → logprob: -11.382184028625488
    7. '2' → logprob: -11.757184028625488
    8. 'input' → logprob: -12.507184028625488
    9. '(' → logprob: -12.882184028625488
    10. '4' → logprob: -13.132184028625488

Token 135: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02338780276477337
    2. ' ' → logprob: -3.773387908935547
    3. 'input' → logprob: -9.023387908935547
    4. ' input' → logprob: -10.898387908935547
    5. '(input' → logprob: -13.273387908935547
    6. '(' → logprob: -15.148387908935547
    7. '[input' → logprob: -15.398387908935547
    8. ' (' → logprob: -15.648387908935547
    9. '2' → logprob: -15.898387908935547
    10. '   ' → logprob: -16.023387908935547

Token 136: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00022570860164705664
    2. 'input' → logprob: -9.000226020812988
    3. ' ' → logprob: -9.250226020812988
    4. '(' → logprob: -12.875226020812988
    5. '(input' → logprob: -13.000226020812988
    6. ' input' → logprob: -13.875226020812988
    7. '1' → logprob: -16.375225067138672
    8. '[input' → logprob: -16.375225067138672
    9. '  ' → logprob: -17.000225067138672
    10. ' (' → logprob: -17.250225067138672

Token 137: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2519644796848297
    2. ')' → logprob: -1.5019644498825073
    3. '       ' → logprob: -10.626964569091797
    4. '   ' → logprob: -13.001964569091797
    5. ')
' → logprob: -13.001964569091797
    6. ')

' → logprob: -13.376964569091797
    7. '```' → logprob: -13.626964569091797
    8. ' )
' → logprob: -14.251964569091797
    9. ',' → logprob: -14.251964569091797
    10. '')' → logprob: -14.751964569091797

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006400037091225386
    2. '<|end|>' → logprob: -8.250639915466309
    3. '	' → logprob: -9.125639915466309
    4. '   ' → logprob: -9.375639915466309
    5. ' for' → logprob: -9.375639915466309
    6. 'for' → logprob: -9.625639915466309
    7. ',' → logprob: -12.125639915466309
    8. '
' → logprob: -12.500639915466309
    9. '	   ' → logprob: -12.500639915466309
    10. '        
' → logprob: -12.625639915466309

Token 139: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5678297281265259
    2. '3' → logprob: -1.8178297281265259
    3. '       ' → logprob: -1.8178297281265259
    4. 'for' → logprob: -2.8178296089172363
    5. '2' → logprob: -3.1928296089172363
    6. ' print' → logprob: -5.942829608917236
    7. '1' → logprob: -6.317829608917236
    8. ' for' → logprob: -6.567829608917236
    9. 'input' → logprob: -7.692829608917236
    10. '4' → logprob: -7.817829608917236

Token 140: '(' (ID: 7)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3726870119571686
    2. '(' → logprob: -1.2476869821548462
    3. '1' → logprob: -4.122686862945557
    4. '2' → logprob: -5.372686862945557
    5. '(input' → logprob: -5.997686862945557
    6. 'input' → logprob: -7.872686862945557
    7. ' ' → logprob: -9.122687339782715
    8. 'print' → logprob: -9.872687339782715
    9. ' (' → logprob: -10.247687339782715
    10. '```' → logprob: -11.497687339782715

Token 141: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.27190515398979187
    2. '1' → logprob: -1.8969051837921143
    3. '2' → logprob: -2.7719051837921143
    4. 'input' → logprob: -4.021904945373535
    5. ' ' → logprob: -5.771904945373535
    6. '(' → logprob: -5.896904945373535
    7. '(input' → logprob: -6.771904945373535
    8. '"' → logprob: -8.646904945373535
    9. 'end' → logprob: -9.521904945373535
    10. ' input' → logprob: -9.521904945373535

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027598219458013773
    2. ' ,' → logprob: -6.00275993347168
    3. '4' → logprob: -8.62775993347168
    4. ',end' → logprob: -10.00275993347168
    5. '',' → logprob: -11.37775993347168
    6. '`,' → logprob: -11.75275993347168
    7. '2' → logprob: -12.00275993347168
    8. ' ' → logprob: -12.00275993347168
    9. ')' → logprob: -12.00275993347168
    10. ',input' → logprob: -12.62775993347168

Token 143: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4302239418029785
    2. '4' → logprob: -1.0552239418029785
    3. ' input' → logprob: -7.1802239418029785
    4. '1' → logprob: -8.05522346496582
    5. 'input' → logprob: -8.05522346496582
    6. '2' → logprob: -9.68022346496582
    7. '(input' → logprob: -11.05522346496582
    8. ' ' → logprob: -11.43022346496582
    9. ',input' → logprob: -12.30522346496582
    10. ' (' → logprob: -12.43022346496582

Token 144: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.704273118884885e-07
    2. 'value' → logprob: -14.625000953674316
    3. '_' → logprob: -16.375
    4. 'Value' → logprob: -19.25
    5. '_VALUE' → logprob: -19.375
    6. '```' → logprob: -19.75
    7. '_val' → logprob: -20.0
    8. '_Value' → logprob: -20.25
    9. '4' → logprob: -20.625
    10. 'alue' → logprob: -20.75

Token 145: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7175804972648621
    2. ',' → logprob: -1.7175805568695068
    3. '4' → logprob: -2.467580556869507
    4. '-' → logprob: -2.717580556869507
    5. ' )' → logprob: -2.717580556869507
    6. ' ' → logprob: -2.842580556869507
    7. ' ,' → logprob: -3.717580556869507
    8. ' -' → logprob: -3.842580556869507
    9. '1' → logprob: -5.342580318450928
    10. '+' → logprob: -5.967580318450928

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010036318562924862
    2. ')' → logprob: -7.751003742218018
    3. ' ' → logprob: -8.00100326538086
    4. '2' → logprob: -8.75100326538086
    5. '4' → logprob: -10.50100326538086
    6. '   ' → logprob: -11.00100326538086
    7. '  ' → logprob: -11.12600326538086
    8. '"' → logprob: -11.75100326538086
    9. '-' → logprob: -12.75100326538086
    10. '	' → logprob: -13.75100326538086

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2617008400848135e-05
    2. '2' → logprob: -10.750032424926758
    3. ' ' → logprob: -11.500032424926758
    4. '   ' → logprob: -14.750032424926758
    5. '  ' → logprob: -16.000032424926758
    6. ')' → logprob: -16.125032424926758
    7. '-' → logprob: -16.125032424926758
    8. '"' → logprob: -16.875032424926758
    9. '0' → logprob: -17.750032424926758
    10. '3' → logprob: -17.812532424926758

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04895136505365372
    2. ')
' → logprob: -3.0489513874053955
    3. '       ' → logprob: -8.298951148986816
    4. '   ' → logprob: -9.173951148986816
    5. '')' → logprob: -13.298951148986816
    6. ' )' → logprob: -13.298951148986816
    7. ')
' → logprob: -13.298951148986816
    8. '<|end|>' → logprob: -13.798951148986816
    9. '```' → logprob: -14.173951148986816
    10. ' )
' → logprob: -14.423951148986816

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1653415411710739
    2. '<|end|>' → logprob: -1.9153414964675903
    3. '   ' → logprob: -5.540341377258301
    4. ' for' → logprob: -7.915341377258301
    5. '<|end|>' → logprob: -8.7903413772583
    6. 'for' → logprob: -8.9153413772583
    7. '	' → logprob: -9.0403413772583
    8. ' ' → logprob: -9.1653413772583
    9. '    ' → logprob: -9.4153413772583
    10. ')' → logprob: -10.5403413772583

Token 150: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017000067979097366
    2. '       ' → logprob: -4.142000198364258
    3. ' for' → logprob: -8.017000198364258
    4. 'print' (adapté à ' print') → logprob: -8.142000198364258
    5. 'current' → logprob: -8.892000198364258
    6. 'i' → logprob: -9.767000198364258
    7. '4' → logprob: -11.017000198364258
    8. '3' → logprob: -11.017000198364258
    9. 'count' → logprob: -11.017000198364258
    10. 'prev' → logprob: -11.017000198364258

Token 151: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09497739374637604
    2. '(input' → logprob: -2.844977378845215
    3. '3' → logprob: -3.594977378845215
    4. 'input' → logprob: -5.969977378845215
    5. '4' → logprob: -6.594977378845215
    6. '1' → logprob: -6.969977378845215
    7. '2' → logprob: -9.719977378845215
    8. '('' → logprob: -10.719977378845215
    9. '((' → logprob: -10.969977378845215
    10. ' (' → logprob: -11.969977378845215

Token 152: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.2246291337069124e-05
    2. 'value' → logprob: -11.000021934509277
    3. '_' → logprob: -12.250021934509277
    4. '_input' → logprob: -15.125021934509277
    5. '_user' → logprob: -16.000022888183594
    6. 'Value' → logprob: -16.125022888183594
    7. '_val' → logprob: -16.250022888183594
    8. '_VALUE' → logprob: -17.250022888183594
    9. '_Value' → logprob: -17.750022888183594
    10. '```' → logprob: -17.750022888183594

Token 153: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5247517824172974
    2. '-' → logprob: -1.0247517824172974
    3. ' ' → logprob: -3.899751663208008
    4. ' ,' → logprob: -4.024751663208008
    5. ' -' → logprob: -5.024751663208008
    6. ')' → logprob: -6.024751663208008
    7. '4' → logprob: -6.899751663208008
    8. '   ' → logprob: -7.524751663208008
    9. '+' → logprob: -8.649751663208008
    10. '2' → logprob: -9.024751663208008

Token 154: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021612608805298805
    2. '4' → logprob: -4.771612644195557
    3. ' ' → logprob: -4.896612644195557
    4. '1' → logprob: -5.271612644195557
    5. '3' → logprob: -8.146612167358398
    6. '   ' → logprob: -12.021612167358398
    7. '5' → logprob: -12.646612167358398
    8. ')' → logprob: -12.896612167358398
    9. '  ' → logprob: -13.021612167358398
    10. '0' → logprob: -14.021612167358398

Token 155: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02244371548295021
    2. '1' → logprob: -3.8974437713623047
    3. '3' → logprob: -6.772443771362305
    4. '4' → logprob: -7.397443771362305
    5. ' ' → logprob: -8.897443771362305
    6. '   ' → logprob: -13.272443771362305
    7. ')' → logprob: -13.772443771362305
    8. '  ' → logprob: -14.022443771362305
    9. '0' → logprob: -14.147443771362305
    10. '-' → logprob: -14.647443771362305

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012355535291135311
    2. ')' → logprob: -4.887355327606201
    3. ' ,' → logprob: -5.387355327606201
    4. ' ' → logprob: -10.13735580444336
    5. '4' → logprob: -10.63735580444336
    6. '   ' → logprob: -10.76235580444336
    7. ',end' → logprob: -10.76235580444336
    8. '2' → logprob: -11.51235580444336
    9. '-' → logprob: -12.13735580444336
    10. '1' → logprob: -12.26235580444336

Token 157: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0802658200263977
    2. '2' → logprob: -3.330265760421753
    3. '1' → logprob: -3.705265760421753
    4. '4' → logprob: -5.080265998840332
    5. '       ' → logprob: -5.330265998840332
    6. ' input' → logprob: -5.580265998840332
    7. '(input' → logprob: -6.955265998840332
    8. '(' → logprob: -8.205265998840332
    9. '3' → logprob: -8.580265998840332
    10. '   ' → logprob: -8.830265998840332

Token 158: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.005951314233243465
    2. 'value' → logprob: -5.130951404571533
    3. '_input' → logprob: -11.255950927734375
    4. 'input' → logprob: -12.630950927734375
    5. ')' → logprob: -13.505950927734375
    6. 'user' → logprob: -13.630950927734375
    7. '_user' → logprob: -13.755950927734375
    8. ' value' → logprob: -14.130950927734375
    9. 'Value' → logprob: -14.755950927734375
    10. '-value' → logprob: -15.380950927734375

Token 159: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26522353291511536
    2. ')' → logprob: -1.890223503112793
    3. ' +' → logprob: -2.515223503112793
    4. '2' → logprob: -7.390223503112793
    5. '<|end|>' → logprob: -8.140223503112793
    6. '*' → logprob: -9.515223503112793
    7. ' ' → logprob: -10.390223503112793
    8. '+)' → logprob: -11.640223503112793
    9. '//' → logprob: -11.640223503112793
    10. '   ' → logprob: -12.140223503112793

Token 160: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.250015258789062
    3. '3' → logprob: -14.125015258789062
    4. '1' → logprob: -14.500015258789062
    5. ')' → logprob: -14.625015258789062
    6. '4' → logprob: -15.375015258789062
    7. '  ' → logprob: -17.000015258789062
    8. '   ' → logprob: -17.000015258789062
    9. '۲' → logprob: -17.875015258789062
    10. '<|end|>' → logprob: -18.062515258789062

Token 161: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0683535037969705e-05
    2. '4' → logprob: -12.37501049041748
    3. ' ' → logprob: -13.25001049041748
    4. '3' → logprob: -13.37501049041748
    5. '1' → logprob: -14.62501049041748
    6. '224' → logprob: -15.06251049041748
    7. '۲' → logprob: -15.37501049041748
    8. '22' → logprob: -15.75001049041748
    9. '<|end|>' → logprob: -16.312511444091797
    10. '২' → logprob: -16.375011444091797

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02058766968548298
    2. ')
' → logprob: -3.895587682723999
    3. '       ' → logprob: -10.395587921142578
    4. '   ' → logprob: -11.520587921142578
    5. '<|end|>' → logprob: -13.520587921142578
    6. ')

' → logprob: -14.270587921142578
    7. '```' → logprob: -14.395587921142578
    8. ')
' → logprob: -14.770587921142578
    9. '')' → logprob: -15.145587921142578
    10. ' )' → logprob: -15.270587921142578

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05791483819484711
    2. '<|end|>' → logprob: -2.9329147338867188
    3. '   ' → logprob: -6.682914733886719
    4. 'else' → logprob: -7.682914733886719
    5. '\n' → logprob: -8.432914733886719
    6. ')' → logprob: -8.682914733886719
    7. ' ' → logprob: -8.932914733886719
    8. '	' → logprob: -8.932914733886719
    9. '<|end|>' → logprob: -8.932914733886719
    10. 'elif' → logprob: -9.057914733886719

Token 164: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49119818210601807
    2. 'print' (adapté à ' print') → logprob: -1.866198182106018
    3. '       ' → logprob: -1.866198182106018
    4. '3' → logprob: -3.4911980628967285
    5. 'input' → logprob: -3.7411980628967285
    6. 'else' → logprob: -3.9911980628967285
    7. '4' → logprob: -6.6161980628967285
    8. '2' → logprob: -6.6161980628967285
    9. '1' → logprob: -6.9911980628967285
    10. ' for' → logprob: -7.4911980628967285

Token 165: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5552641749382019
    2. '(' → logprob: -1.0552642345428467
    3. '3' → logprob: -3.5552642345428467
    4. '1' → logprob: -3.6802642345428467
    5. 'input' → logprob: -3.8052642345428467
    6. '2' → logprob: -6.680263996124268
    7. '4' → logprob: -7.680263996124268
    8. '   ' → logprob: -9.930264472961426
    9. ' ' → logprob: -10.930264472961426
    10. '((' → logprob: -11.055264472961426

Token 166: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00011391390580683947
    2. '_' → logprob: -9.625113487243652
    3. '_index' → logprob: -10.375113487243652
    4. 'value' → logprob: -11.125113487243652
    5. '_val' → logprob: -14.000113487243652
    6. '+' → logprob: -14.875113487243652
    7. '_input' → logprob: -15.125113487243652
    8. '__' → logprob: -16.87511444091797
    9. 'index' → logprob: -17.00011444091797
    10. ')' → logprob: -17.25011444091797

Token 167: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11016424000263214
    2. ' +' → logprob: -2.860164165496826
    3. ',' → logprob: -3.110164165496826
    4. ' ' → logprob: -6.235164165496826
    5. '2' → logprob: -8.360164642333984
    6. ' ,' → logprob: -8.985164642333984
    7. '-' → logprob: -9.985164642333984
    8. '+,' → logprob: -10.110164642333984
    9. '1' → logprob: -11.110164642333984
    10. ',
' → logprob: -11.985164642333984

Token 168: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14949484169483185
    2. '3' → logprob: -2.3994948863983154
    3. ' ' → logprob: -3.1494948863983154
    4. '1' → logprob: -5.399494647979736
    5. '4' → logprob: -7.399494647979736
    6. '5' → logprob: -10.024495124816895
    7. '   ' → logprob: -11.149495124816895
    8. '6' → logprob: -11.524495124816895
    9. '0' → logprob: -12.336995124816895
    10. '  ' → logprob: -12.649495124816895

Token 169: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010592486942186952
    2. '3' → logprob: -7.501059055328369
    3. '1' → logprob: -8.126059532165527
    4. ' ' → logprob: -8.501059532165527
    5. '   ' → logprob: -12.501059532165527
    6. '4' → logprob: -13.376059532165527
    7. '  ' → logprob: -14.001059532165527
    8. ')' → logprob: -14.376059532165527
    9. '    ' → logprob: -16.00105857849121
    10. '0' → logprob: -16.43855857849121

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028190165758132935
    2. ' ,' → logprob: -6.002819061279297
    3. ')' → logprob: -8.252819061279297
    4. ',input' → logprob: -11.127819061279297
    5. '1' → logprob: -11.252819061279297
    6. ' ' → logprob: -11.627819061279297
    7. ',
' → logprob: -11.752819061279297
    8. '-' → logprob: -11.877819061279297
    9. '4' → logprob: -12.627819061279297
    10. '(' → logprob: -12.627819061279297

Token 171: ' input' (ID: 3422)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010785224847495556
    2. '3' → logprob: -5.010785102844238
    3. '2' → logprob: -5.885785102844238
    4. ' ' → logprob: -7.510785102844238
    5. '4' → logprob: -7.760785102844238
    6. 'input' → logprob: -8.510785102844238
    7. '   ' → logprob: -10.510785102844238
    8. '       ' → logprob: -10.635785102844238
    9. '5' → logprob: -11.260785102844238
    10. '(' → logprob: -11.510785102844238

Token 172: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.01878798007965088
    2. 'value' → logprob: -4.143787860870361
    3. 'input' → logprob: -6.768787860870361
    4. ')' → logprob: -7.393787860870361
    5. '_input' → logprob: -7.643787860870361
    6. '+' → logprob: -8.39378833770752
    7. 'user' → logprob: -9.14378833770752
    8. '<|end|>' → logprob: -10.26878833770752
    9. '4' → logprob: -10.64378833770752
    10. '_' → logprob: -10.64378833770752

Token 173: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5941433310508728
    2. '+' → logprob: -0.8441433310508728
    3. '-' → logprob: -4.219143390655518
    4. ' +' → logprob: -5.844143390655518
    5. ' -' → logprob: -9.09414291381836
    6. '<|end|>' → logprob: -9.59414291381836
    7. '+)' → logprob: -9.71914291381836
    8. ' )' → logprob: -10.34414291381836
    9. '1' → logprob: -10.59414291381836
    10. '*' → logprob: -10.71914291381836

Token 174: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0030485354363918304
    2. '1' → logprob: -6.128048419952393
    3. ' ' → logprob: -7.128048419952393
    4. '4' → logprob: -9.87804889678955
    5. '2' → logprob: -12.12804889678955
    6. '   ' → logprob: -13.81554889678955
    7. '5' → logprob: -14.62804889678955
    8. ')' → logprob: -14.94054889678955
    9. 'input' → logprob: -15.06554889678955
    10. '  ' → logprob: -15.06554889678955

Token 175: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006563199567608535
    2. '4' → logprob: -8.000656127929688
    3. '1' → logprob: -8.125656127929688
    4. ' ' → logprob: -10.750656127929688
    5. ')' → logprob: -13.125656127929688
    6. '2' → logprob: -13.625656127929688
    7. '5' → logprob: -15.375656127929688
    8. '  ' → logprob: -17.313156127929688
    9. '   ' → logprob: -17.500656127929688
    10. '+' → logprob: -18.188156127929688

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031857939902693033
    2. ')
' → logprob: -5.753185749053955
    3. '   ' → logprob: -12.628186225891113
    4. '       ' → logprob: -13.003186225891113
    5. '```' → logprob: -14.378186225891113
    6. ')

' → logprob: -15.503186225891113
    7. '")' → logprob: -15.503186225891113
    8. ')
' → logprob: -15.628186225891113
    9. ')`' → logprob: -15.628186225891113
    10. '`)' → logprob: -15.628186225891113

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5951414108276367
    2. 'elif' → logprob: -2.2201414108276367
    3. '\n' → logprob: -2.3451414108276367
    4. 'else' → logprob: -2.4701414108276367
    5. '<|end|>' → logprob: -2.4701414108276367
    6. 'for' → logprob: -3.5951414108276367
    7. '   ' → logprob: -3.9701414108276367
    8. ' for' → logprob: -4.095141410827637
    9. '
' → logprob: -6.095141410827637
    10. ' else' → logprob: -6.345141410827637

Token 178: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0974566638469696
    2. '       ' → logprob: -2.847456693649292
    3. ' for' → logprob: -3.847456693649292
    4. 'else' → logprob: -4.472456455230713
    5. 'elif' → logprob: -6.347456455230713
    6. 'print' → logprob: -9.222456932067871
    7. '   ' → logprob: -9.472456932067871
    8. '<|end|>' → logprob: -10.347456932067871
    9. ' else' → logprob: -11.097456932067871
    10. 'input' → logprob: -11.097456932067871

Token 179: ' loop' (ID: 11453)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04384954273700714
    2. 'index' → logprob: -3.918849468231201
    3. 'node' → logprob: -4.793849468231201
    4. 'edge' → logprob: -5.293849468231201
    5. 'number' → logprob: -5.918849468231201
    6. 'current' → logprob: -6.543849468231201
    7. 'x' → logprob: -6.543849468231201
    8. 'iteration' → logprob: -7.043849468231201
    9. 'value' → logprob: -7.168849468231201
    10. 'additional' → logprob: -7.543849468231201

Token 180: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.5397152900695801
    2. ' in' → logprob: -1.91471529006958
    3. ' _' → logprob: -2.41471529006958
    4. ' i' → logprob: -2.41471529006958
    5. '_' → logprob: -3.16471529006958
    6. ' ' → logprob: -3.78971529006958
    7. '_variable' → logprob: -4.91471529006958
    8. ' index' → logprob: -5.53971529006958
    9. 'index' → logprob: -5.91471529006958
    10. '_value' → logprob: -6.28971529006958

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008618712425231934
    2. 'in' → logprob: -4.7586188316345215
    3. '6' → logprob: -13.758618354797363
    4. ' ' → logprob: -13.883618354797363
    5. '3' → logprob: -14.508618354797363
    6. '	in' → logprob: -15.008618354797363
    7. '4' → logprob: -15.383618354797363
    8. '7' → logprob: -15.508618354797363
    9. '10' → logprob: -15.758618354797363
    10. 'import' → logprob: -15.883618354797363

Token 182: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '	range' → logprob: -17.250158309936523
    4. '(range' → logprob: -17.625158309936523
    5. '   ' → logprob: -17.875158309936523
    6. ' ' → logprob: -18.250158309936523
    7. '  ' → logprob: -18.750158309936523
    8. '    ' → logprob: -20.750158309936523
    9. '
' → logprob: -21.375158309936523
    10. '3' → logprob: -21.375158309936523

Token 183: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13495692610740662
    2. '4' → logprob: -2.1349568367004395
    3. '3' → logprob: -4.8849568367004395
    4. '1' → logprob: -7.8849568367004395
    5. '(input' → logprob: -10.884957313537598
    6. '2' → logprob: -11.009957313537598
    7. '   ' → logprob: -12.259957313537598
    8. '(
' → logprob: -12.259957313537598
    9. '5' → logprob: -12.384957313537598
    10. ' (' → logprob: -12.634957313537598

Token 184: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0186857208609581
    2. '3' → logprob: -4.143685817718506
    3. '1' → logprob: -6.143685817718506
    4. '2' → logprob: -8.518685340881348
    5. ' ' → logprob: -8.643685340881348
    6. '5' → logprob: -9.393685340881348
    7. '   ' → logprob: -11.018685340881348
    8. '(' → logprob: -11.143685340881348
    9. '0' → logprob: -12.768685340881348
    10. '  ' → logprob: -13.143685340881348

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.394135612528771e-05
    2. ',input' → logprob: -10.125043869018555
    3. ',
' → logprob: -13.250043869018555
    4. ' ,' → logprob: -13.500043869018555
    5. '3' → logprob: -14.750043869018555
    6. ',

' → logprob: -16.625043869018555
    7. 'input' → logprob: -17.250043869018555
    8. '1' → logprob: -17.375043869018555
    9. '4' → logprob: -17.500043869018555
    10. '6' → logprob: -17.875043869018555

Token 186: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014172090217471123
    2. ' input' → logprob: -4.264172077178955
    3. '   ' → logprob: -12.139172554016113
    4. 'int' → logprob: -14.014172554016113
    5. '       ' → logprob: -14.389172554016113
    6. '(input' → logprob: -15.014172554016113
    7. 'output' → logprob: -15.014172554016113
    8. '           ' → logprob: -15.264172554016113
    9. '<input' → logprob: -15.389172554016113
    10. ' ' → logprob: -15.389172554016113

Token 187: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.696889623621246e-06
    2. 'value' → logprob: -12.87500286102295
    3. '_index' → logprob: -17.500001907348633
    4. '_' → logprob: -17.500001907348633
    5. '_VALUE' → logprob: -18.375001907348633
    6. 'alue' → logprob: -19.250001907348633
    7. 'Value' → logprob: -19.375001907348633
    8. '_Value' → logprob: -19.750001907348633
    9. '_val' → logprob: -20.375001907348633
    10. '_user' → logprob: -20.375001907348633

Token 188: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04521473869681358
    2. ' +' → logprob: -3.7952146530151367
    3. '):
' → logprob: -4.670214653015137
    4. '):' → logprob: -4.795214653015137
    5. '-' → logprob: -5.795214653015137
    6. '   ' → logprob: -7.795214653015137
    7. ',' → logprob: -8.670214653015137
    8. ' -' → logprob: -8.670214653015137
    9. ')' → logprob: -8.795214653015137
    10. '       ' → logprob: -9.920214653015137

Token 189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12997135519981384
    2. 'print' → logprob: -3.0049712657928467
    3. ' print' → logprob: -3.5049712657928467
    4. '   ' → logprob: -3.8799712657928467
    5. '       ' → logprob: -4.004971504211426
    6. '	       ' → logprob: -6.004971504211426
    7. '	print' → logprob: -8.879971504211426
    8. '	   ' → logprob: -9.254971504211426
    9. '<|end|>' → logprob: -9.254971504211426
    10. '            
' → logprob: -9.254971504211426

Token 190: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02640817128121853
    2. ' print' → logprob: -3.7764081954956055
    3. '           ' → logprob: -5.9014081954956055
    4. '   ' → logprob: -8.276408195495605
    5. '	print' → logprob: -9.526408195495605
    6. '               ' → logprob: -10.151408195495605
    7. ' ' → logprob: -10.276408195495605
    8. '       ' → logprob: -11.651408195495605
    9. '  ' → logprob: -12.401408195495605
    10. 'if' → logprob: -12.776408195495605

Token 191: '(input' (ID: 10054)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.008192427456378937
    2. '(loop' → logprob: -4.883192539215088
    3. ' loop' → logprob: -7.758192539215088
    4. 'input' → logprob: -8.75819206237793
    5. '(' → logprob: -14.50819206237793
    6. '(input' → logprob: -15.13319206237793
    7. '.loop' → logprob: -15.63319206237793
    8. '1' → logprob: -15.75819206237793
    9. '3' → logprob: -16.13319206237793
    10. '   ' → logprob: -16.50819206237793

Token 192: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.12791870534420013
    2. '_index' → logprob: -2.1279187202453613
    3. 'index' → logprob: -8.002918243408203
    4. '+' → logprob: -8.252918243408203
    5. 'value' → logprob: -8.377918243408203
    6. '_' → logprob: -9.502918243408203
    7. ' +' → logprob: -10.252918243408203
    8. ')' → logprob: -12.127918243408203
    9. '```' → logprob: -12.127918243408203
    10. ' -' → logprob: -12.252918243408203

Token 193: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4452570676803589
    2. '+' → logprob: -1.3202570676803589
    3. ' +' → logprob: -2.6952571868896484
    4. ' ,' → logprob: -4.945257186889648
    5. '-' → logprob: -5.070257186889648
    6. ')' → logprob: -5.570257186889648
    7. ' -' → logprob: -5.695257186889648
    8. ' ' → logprob: -5.945257186889648
    9. '   ' → logprob: -8.070257186889648
    10. '),' → logprob: -8.570257186889648

Token 194: ' ' (ID: 220)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.4298955798149109
    2. '1' → logprob: -1.4298956394195557
    3. '2' → logprob: -3.0548956394195557
    4. ' ' → logprob: -3.3048956394195557
    5. '3' → logprob: -4.554895401000977
    6. ' loop' → logprob: -4.679895401000977
    7. '(loop' → logprob: -5.304895401000977
    8. '  ' → logprob: -7.304895401000977
    9. '   ' → logprob: -7.679895401000977
    10. '
' → logprob: -9.554895401000977

Token 195: '1' (ID: 16)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.0063332910649478436
    2. '1' → logprob: -5.506333351135254
    3. ' loop' → logprob: -7.131333351135254
    4. '(loop' → logprob: -7.506333351135254
    5. '2' → logprob: -7.756333351135254
    6. ' ' → logprob: -8.131333351135254
    7. '   ' → logprob: -9.881333351135254
    8. '  ' → logprob: -10.006333351135254
    9. 'index' → logprob: -10.506333351135254
    10. '3' → logprob: -10.756333351135254

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026271965354681015
    2. ' +' → logprob: -4.276271820068359
    3. '+' → logprob: -4.526271820068359
    4. ' ,' → logprob: -6.776271820068359
    5. ')' → logprob: -10.27627182006836
    6. '           ' → logprob: -12.15127182006836
    7. '),' → logprob: -12.27627182006836
    8. '+,' → logprob: -12.52627182006836
    9. '(loop' → logprob: -12.65127182006836
    10. '-' → logprob: -12.65127182006836

Token 197: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.007723622024059296
    2. ' loop' → logprob: -5.007723808288574
    3. 'input' → logprob: -7.007723808288574
    4. '(loop' → logprob: -9.382723808288574
    5. '           ' → logprob: -11.507723808288574
    6. ' input' → logprob: -13.257723808288574
    7. '   ' → logprob: -13.382723808288574
    8. '       ' → logprob: -14.507723808288574
    9. '1' → logprob: -14.882723808288574
    10. '    ' → logprob: -15.007723808288574

Token 198: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.0802738870552275e-05
    2. 'index' → logprob: -12.12501049041748
    3. ')' → logprob: -12.37501049041748
    4. 'Index' → logprob: -15.25001049041748
    5. '_value' → logprob: -15.62501049041748
    6. '_' → logprob: -15.75001049041748
    7. '_idx' → logprob: -16.125011444091797
    8. ')_' → logprob: -16.250011444091797
    9. '_INDEX' → logprob: -17.125011444091797
    10. '_user' → logprob: -17.125011444091797

Token 199: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6592684388160706
    2. ')' → logprob: -0.9092684388160706
    3. ' +' → logprob: -2.534268379211426
    4. ' )' → logprob: -7.659268379211426
    5. ')
' → logprob: -9.909268379211426
    6. '   ' → logprob: -10.159268379211426
    7. '1' → logprob: -10.534268379211426
    8. ' ' → logprob: -11.409268379211426
    9. '```' → logprob: -12.409268379211426
    10. '+)' → logprob: -12.659268379211426

Token 200: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.3969666361808777
    2. 'input' → logprob: -1.8969666957855225
    3. ' loop' → logprob: -2.1469666957855225
    4. '(loop' → logprob: -3.3969666957855225
    5. ' input' → logprob: -3.7719666957855225
    6. '(input' → logprob: -6.271966457366943
    7. ' (' → logprob: -7.146966457366943
    8. 'iteration' → logprob: -7.521966457366943
    9. 'not' → logprob: -8.646966934204102
    10. '(' → logprob: -8.771966934204102

Token 203: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.843177233240567e-05
    2. 'index' → logprob: -11.375018119812012
    3. '_' → logprob: -13.625018119812012
    4. 'Index' → logprob: -14.000018119812012
    5. '+' → logprob: -14.125018119812012
    6. '_value' → logprob: -14.375018119812012
    7. ' _' → logprob: -14.750018119812012
    8. 'x' → logprob: -14.875018119812012
    9. '```' → logprob: -14.875018119812012
    10. '_input' → logprob: -15.000018119812012

Token 204: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2189721316099167
    2. ' %' → logprob: -2.0939722061157227
    3. '+' → logprob: -2.8439722061157227
    4. '!=' → logprob: -4.968972206115723
    5. ' !=' → logprob: -6.468972206115723
    6. '>' → logprob: -6.468972206115723
    7. '<' → logprob: -6.593972206115723
    8. ' +' → logprob: -6.593972206115723
    9. ' ' → logprob: -7.093972206115723
    10. '-' → logprob: -7.843972206115723

Token 205: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015252856246661395
    2. ' ' → logprob: -9.000152587890625
    3. 'input' → logprob: -11.250152587890625
    4. '4' → logprob: -11.500152587890625
    5. '(input' → logprob: -12.875152587890625
    6. '3' → logprob: -13.750152587890625
    7. '1' → logprob: -14.125152587890625
    8. '10' → logprob: -14.750152587890625
    9. ' input' → logprob: -15.375152587890625
    10. '100' → logprob: -15.750152587890625

Token 206: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021438424300868064
    2. 'input' → logprob: -9.125214576721191
    3. ' ' → logprob: -10.250214576721191
    4. '4' → logprob: -10.375214576721191
    5. '(input' → logprob: -11.375214576721191
    6. '10' → logprob: -11.500214576721191
    7. '1' → logprob: -12.000214576721191
    8. '3' → logprob: -12.375214576721191
    9. '100' → logprob: -12.875214576721191
    10. '20' → logprob: -14.625214576721191

Token 207: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5784199833869934
    2. ' ==' → logprob: -0.8284199833869934
    3. '0' → logprob: -6.203420162200928
    4. '=' → logprob: -8.45341968536377
    5. ' ' → logprob: -9.32841968536377
    6. ' !=' → logprob: -10.20341968536377
    7. '==
' → logprob: -10.32841968536377
    8. '!=' → logprob: -10.45341968536377
    9. ')==' → logprob: -11.45341968536377
    10. '()==' → logprob: -11.82841968536377

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020979750901460648
    2. '1' → logprob: -3.895979642868042
    3. ' ' → logprob: -7.770979881286621
    4. '==' → logprob: -11.645979881286621
    5. ' ==' → logprob: -13.270979881286621
    6. '   ' → logprob: -13.520979881286621
    7. '==
' → logprob: -13.833479881286621
    8. '
' → logprob: -14.395979881286621
    9. '=' → logprob: -14.833479881286621
    10. '2' → logprob: -14.958479881286621

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011115728877484798
    2. '1' → logprob: -4.511115550994873
    3. ' ' → logprob: -9.636116027832031
    4. '   ' → logprob: -14.761116027832031
    5. '```' → logprob: -15.136116027832031
    6. '۰' → logprob: -16.13611602783203
    7. '2' → logprob: -16.26111602783203
    8. '-' → logprob: -16.26111602783203
    9. '  ' → logprob: -16.32361602783203
    10. '000' → logprob: -16.76111602783203

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03214002773165703
    2. ':
' → logprob: -3.657140016555786
    3. '           ' → logprob: -5.782140254974365
    4. '               ' → logprob: -6.157140254974365
    5. '       ' → logprob: -8.782139778137207
    6. '   ' → logprob: -9.157139778137207
    7. ' and' → logprob: -9.282139778137207
    8. ' :' → logprob: -9.407139778137207
    9. ' :
' → logprob: -10.532139778137207
    10. ' or' → logprob: -10.657139778137207

Token 211: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03907575085759163
    2. '           ' → logprob: -3.4140758514404297
    3. ' print' → logprob: -5.91407585144043
    4. 'print' → logprob: -6.16407585144043
    5. '   ' → logprob: -8.66407585144043
    6. '       ' → logprob: -9.41407585144043
    7. '                
' → logprob: -9.41407585144043
    8. '	       ' → logprob: -9.78907585144043
    9. ' ' → logprob: -10.03907585144043
    10. '	print' → logprob: -10.16407585144043

Token 212: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3197374939918518
    2. 'print' (adapté à ' print') → logprob: -1.319737434387207
    3. '               ' → logprob: -5.319737434387207
    4. '                   ' → logprob: -7.069737434387207
    5. '           ' → logprob: -7.944737434387207
    6. '   ' → logprob: -8.444737434387207
    7. ' ' → logprob: -10.069737434387207
    8. '	print' → logprob: -10.319737434387207
    9. '       ' → logprob: -11.194737434387207
    10. ' ' → logprob: -11.819737434387207

Token 213: '(loop' (ID: 146562)
  Prédit: '(loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.07309161126613617
    2. '(input' → logprob: -2.823091506958008
    3. '(' → logprob: -4.698091506958008
    4. 'loop' → logprob: -7.073091506958008
    5. '("' → logprob: -7.448091506958008
    6. '(iter' → logprob: -8.198091506958008
    7. 'input' → logprob: -9.198091506958008
    8. '('' → logprob: -10.573091506958008
    9. '(f' → logprob: -10.823091506958008
    10. '()' → logprob: -10.948091506958008

Token 214: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00012320445966906846
    2. 'index' → logprob: -9.250123023986816
    3. '+' → logprob: -11.375123023986816
    4. '_value' → logprob: -12.250123023986816
    5. '_' → logprob: -12.250123023986816
    6. 'Index' → logprob: -12.875123023986816
    7. ')' → logprob: -14.625123023986816
    8. '__' → logprob: -15.000123023986816
    9. '_INDEX' → logprob: -15.000123023986816
    10. '   ' → logprob: -15.125123023986816

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11983498185873032
    2. '+' → logprob: -2.4948348999023438
    3. ' +' → logprob: -3.9948348999023438
    4. '-' → logprob: -4.869834899902344
    5. ' -' → logprob: -5.994834899902344
    6. ' ,' → logprob: -6.619834899902344
    7. ',input' → logprob: -8.369834899902344
    8. ')' → logprob: -9.619834899902344
    9. ' ' → logprob: -10.119834899902344
    10. '               ' → logprob: -10.244834899902344

Token 216: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.6589589715003967
    2. 'input' → logprob: -0.7839589715003967
    3. ' loop' → logprob: -4.283958911895752
    4. ' input' → logprob: -4.533958911895752
    5. '(loop' → logprob: -7.033958911895752
    6. '   ' → logprob: -8.65895938873291
    7. ' ' → logprob: -8.78395938873291
    8. '  ' → logprob: -9.65895938873291
    9. '(input' → logprob: -10.34645938873291
    10. 'iteration' → logprob: -10.90895938873291

Token 217: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0013083330122753978
    2. 'index' → logprob: -6.876308441162109
    3. '+' → logprob: -8.25130844116211
    4. 'Index' → logprob: -12.50130844116211
    5. '_value' → logprob: -13.12630844116211
    6. ' +' → logprob: -13.25130844116211
    7. '_' → logprob: -14.12630844116211
    8. '1' → logprob: -14.25130844116211
    9. '   ' → logprob: -14.25130844116211
    10. '           ' → logprob: -14.37630844116211

Token 218: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3205747902393341
    2. ' +' → logprob: -1.3205747604370117
    3. ' -' → logprob: -5.570574760437012
    4. '-' → logprob: -5.695574760437012
    5. ' ' → logprob: -9.570574760437012
    6. ')' → logprob: -11.695574760437012
    7. '   ' → logprob: -11.820574760437012
    8. '1' → logprob: -11.820574760437012
    9. ',' → logprob: -12.195574760437012
    10. ' plus' → logprob: -12.695574760437012

Token 219: ' input' (ID: 3422)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0069055212661623955
    2. '2' → logprob: -5.256905555725098
    3. '3' → logprob: -6.881905555725098
    4. ' ' → logprob: -7.381905555725098
    5. '4' → logprob: -11.381905555725098
    6. '   ' → logprob: -11.756905555725098
    7. '  ' → logprob: -13.756905555725098
    8. '5' → logprob: -14.756905555725098
    9. '+' → logprob: -15.569405555725098
    10. '6' → logprob: -16.13190460205078

Token 220: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0007145775598473847
    2. '_index' → logprob: -7.2507147789001465
    3. 'value' → logprob: -12.500714302062988
    4. '_size' → logprob: -15.250714302062988
    5. 'index' → logprob: -15.250714302062988
    6. '_' → logprob: -16.125715255737305
    7. '```' → logprob: -16.375715255737305
    8. 'Value' → logprob: -17.250715255737305
    9. '1' → logprob: -17.625715255737305
    10. '   ' → logprob: -17.750715255737305

Token 221: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27052414417266846
    2. '+' → logprob: -1.7705241441726685
    3. ' +' → logprob: -2.770524024963379
    4. '-' → logprob: -6.395524024963379
    5. ')
' → logprob: -6.895524024963379
    6. ' -' → logprob: -6.895524024963379
    7. ' )' → logprob: -8.645524024963379
    8. '   ' → logprob: -9.270524024963379
    9. '1' → logprob: -10.395524024963379
    10. '2' → logprob: -10.395524024963379

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07238476723432541
    2. '2' → logprob: -2.947384834289551
    3. '3' → logprob: -4.072384834289551
    4. ' ' → logprob: -8.32238483428955
    5. ')' → logprob: -10.44738483428955
    6. '   ' → logprob: -10.57238483428955
    7. '4' → logprob: -11.94738483428955
    8. '  ' → logprob: -13.07238483428955
    9. '-' → logprob: -13.57238483428955
    10. '(' → logprob: -13.57238483428955

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22592933475971222
    2. '2' → logprob: -1.8509293794631958
    3. '3' → logprob: -3.1009292602539062
    4. ' ' → logprob: -9.475929260253906
    5. '4' → logprob: -10.975929260253906
    6. '   ' → logprob: -11.225929260253906
    7. ')' → logprob: -11.350929260253906
    8. '  ' → logprob: -13.100929260253906
    9. '0' → logprob: -13.475929260253906
    10. '(' → logprob: -13.475929260253906

Token 224: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015366430161520839
    2. ')
' → logprob: -6.501536846160889
    3. '               ' → logprob: -11.62653636932373
    4. '       ' → logprob: -11.75153636932373
    5. '           ' → logprob: -11.87653636932373
    6. '   ' → logprob: -12.75153636932373
    7. ' )' → logprob: -13.12653636932373
    8. '                   ' → logprob: -14.50153636932373
    9. '<|end|>' → logprob: -14.50153636932373
    10. '')' → logprob: -14.62653636932373

Token 225: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10882651805877686
    2. ' else' → logprob: -2.8588266372680664
    3. 'elif' → logprob: -3.4838266372680664
    4. '<|end|>' → logprob: -4.733826637268066
    5. '       ' → logprob: -6.233826637268066
    6. ')' → logprob: -6.608826637268066
    7. '           ' → logprob: -6.858826637268066
    8. ' elif' → logprob: -7.358826637268066
    9. '   ' → logprob: -7.983826637268066
    10. ' ' → logprob: -8.483826637268066

Token 227: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30731940269470215
    2. ':' → logprob: -1.6823194026947021
    3. ':
' → logprob: -2.557319402694702
    4. '           ' → logprob: -7.182319641113281
    5. '```' → logprob: -9.557319641113281
    6. '       ' → logprob: -9.807319641113281
    7. '):
' → logprob: -10.057319641113281
    8. '   ' → logprob: -10.182319641113281
    9. '              ' → logprob: -10.682319641113281
    10. '                
' → logprob: -11.057319641113281

Token 228: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00045021495316177607
    2. ' print' → logprob: -8.500450134277344
    3. '           ' → logprob: -8.875450134277344
    4. 'print' → logprob: -10.000450134277344
    5. '       ' → logprob: -11.125450134277344
    6. '                ' → logprob: -11.500450134277344
    7. '   ' → logprob: -11.875450134277344
    8. '                   ' → logprob: -12.125450134277344
    9. '            ' → logprob: -12.125450134277344
    10. '                
' → logprob: -12.125450134277344

Token 229: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015147423837333918
    2. ' print' → logprob: -6.501514911651611
    3. '               ' → logprob: -11.626514434814453
    4. '           ' → logprob: -12.751514434814453
    5. '	print' → logprob: -15.751514434814453
    6. '(print' → logprob: -16.001514434814453
    7. '                   ' → logprob: -16.376514434814453
    8. '```' → logprob: -16.876514434814453
    9. ' ' → logprob: -17.251514434814453
    10. '.print' → logprob: -17.376514434814453

Token 230: '(loop' (ID: 146562)
  Prédit: '(loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -9.750060081481934
    3. '(input' → logprob: -14.500060081481934
    4. 'loop' → logprob: -14.500060081481934
    5. '(
' → logprob: -15.625060081481934
    6. '(lo' → logprob: -16.250059127807617
    7. '(log' → logprob: -17.125059127807617
    8. ' (' → logprob: -17.500059127807617
    9. '("' → logprob: -17.875059127807617
    10. '   ' → logprob: -18.125059127807617

Token 231: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.264322317088954e-05
    2. 'index' → logprob: -10.000052452087402
    3. '
' → logprob: -12.750052452087402
    4. '_' → logprob: -13.750052452087402
    5. '_value' → logprob: -14.000052452087402
    6. '```' → logprob: -14.500052452087402
    7. 'Index' → logprob: -14.875052452087402
    8. '_INDEX' → logprob: -15.000052452087402
    9. ')' → logprob: -15.250052452087402
    10. '[index' → logprob: -15.750052452087402

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000740538293030113
    2. ' ,' → logprob: -7.5007405281066895
    3. '+' → logprob: -9.000741004943848
    4. ' +' → logprob: -10.875741004943848
    5. ',input' → logprob: -11.250741004943848
    6. '(loop' → logprob: -11.375741004943848
    7. ')' → logprob: -11.750741004943848
    8. ' ' → logprob: -12.125741004943848
    9. ' loop' → logprob: -13.000741004943848
    10. ',
' → logprob: -14.000741004943848

Token 233: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.046812865883111954
    2. 'input' → logprob: -3.7968127727508545
    3. ' loop' → logprob: -3.9218127727508545
    4. '(loop' → logprob: -5.796813011169434
    5. ' input' → logprob: -7.921813011169434
    6. ')' → logprob: -9.921813011169434
    7. '1' → logprob: -11.546813011169434
    8. ' ' → logprob: -11.671813011169434
    9. '(input' → logprob: -12.921813011169434
    10. 'iteration' → logprob: -13.046813011169434

Token 234: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0027391354087740183
    2. '_value' → logprob: -6.127738952636719
    3. 'index' → logprob: -7.627738952636719
    4. 'value' → logprob: -10.877738952636719
    5. 'Index' → logprob: -11.127738952636719
    6. '+' → logprob: -11.252738952636719
    7. '```' → logprob: -12.502738952636719
    8. '_' → logprob: -12.752738952636719
    9. '_INDEX' → logprob: -12.877738952636719
    10. '
' → logprob: -13.127738952636719

Token 235: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023252584040164948
    2. ' +' → logprob: -3.773252487182617
    3. ')' → logprob: -12.898252487182617
    4. '<|end|>' → logprob: -13.398252487182617
    5. '+
' → logprob: -13.773252487182617
    6. ',' → logprob: -14.148252487182617
    7. '+,' → logprob: -15.273252487182617
    8. '+)' → logprob: -15.273252487182617
    9. ' ' → logprob: -15.898252487182617
    10. ' +
' → logprob: -16.398252487182617

Token 236: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4017617702484131
    2. '1' → logprob: -1.151761770248413
    3. ' input' → logprob: -4.526762008666992
    4. ' ' → logprob: -6.651762008666992
    5. '3' → logprob: -6.776762008666992
    6. '2' → logprob: -7.401762008666992
    7. '(input' → logprob: -7.651762008666992
    8. '   ' → logprob: -8.651762008666992
    9. ')' → logprob: -8.901762008666992
    10. '4' → logprob: -9.776762008666992

Token 237: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00030852947384119034
    2. 'value' → logprob: -8.625308990478516
    3. '_index' → logprob: -9.125308990478516
    4. '```' → logprob: -11.750308990478516
    5. 'index' → logprob: -12.750308990478516
    6. '+' → logprob: -12.750308990478516
    7. '_size' → logprob: -12.875308990478516
    8. 'Value' → logprob: -14.375308990478516
    9. '_VALUE' → logprob: -14.625308990478516
    10. '_' → logprob: -14.750308990478516

Token 238: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1357956826686859
    2. ')' → logprob: -2.1357955932617188
    3. ' +' → logprob: -4.760795593261719
    4. '<|end|>' → logprob: -9.010795593261719
    5. '2' → logprob: -10.010795593261719
    6. '3' → logprob: -10.635795593261719
    7. '```' → logprob: -11.135795593261719
    8. ')+' → logprob: -11.510795593261719
    9. ')
' → logprob: -11.635795593261719
    10. '+)' → logprob: -11.760795593261719

Token 239: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0603636503219604
    2. '3' → logprob: -1.0603636503219604
    3. '1' → logprob: -1.1853636503219604
    4. '4' → logprob: -6.56036376953125
    5. ' ' → logprob: -8.43536376953125
    6. '-' → logprob: -9.81036376953125
    7. '5' → logprob: -11.81036376953125
    8. '+' → logprob: -12.68536376953125
    9. '   ' → logprob: -13.43536376953125
    10. ' -' → logprob: -13.43536376953125

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7589563727378845
    2. '2' → logprob: -0.8839563727378845
    3. '3' → logprob: -2.1339564323425293
    4. '4' → logprob: -8.633955955505371
    5. '-' → logprob: -9.383955955505371
    6. '+' → logprob: -10.133955955505371
    7. ' ' → logprob: -11.383955955505371
    8. '0' → logprob: -12.008955955505371
    9. '5' → logprob: -12.258955955505371
    10. 'input' → logprob: -13.383955955505371

Token 241: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008291634730994701
    2. ')
' → logprob: -7.125829219818115
    3. '+' → logprob: -11.500828742980957
    4. ' )' → logprob: -11.750828742980957
    5. '<|end|>' → logprob: -13.000828742980957
    6. ' +' → logprob: -13.875828742980957
    7. '```' → logprob: -14.000828742980957
    8. ')

' → logprob: -14.250828742980957
    9. '   ' → logprob: -15.500828742980957
    10. '+)' → logprob: -15.500828742980957

Token 242: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ' node' (ID: 4596)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.18052436411380768
    2. 'elif' → logprob: -2.3055243492126465
    3. 'print' → logprob: -3.0555243492126465
    4. '       ' → logprob: -4.6805243492126465
    5. ' else' → logprob: -5.8055243492126465
    6. '<|end|>' → logprob: -6.1805243492126465
    7. 'for' → logprob: -6.9305243492126465
    8. ')' → logprob: -7.4305243492126465
    9. '```' → logprob: -7.4305243492126465
    10. '   ' → logprob: -7.8055243492126465

Token 244: '_first' (ID: 29347)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2537248134613037
    2. 's' → logprob: -1.2537248134613037
    3. ' =' → logprob: -1.5037248134613037
    4. '_count' → logprob: -1.8787248134613037
    5. '_index' → logprob: -4.253725051879883
    6. '=' → logprob: -5.003725051879883
    7. '1' → logprob: -5.128725051879883
    8. '+' → logprob: -5.628725051879883
    9. '_value' → logprob: -5.628725051879883
    10. ',' → logprob: -5.878725051879883

Token 245: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5525341033935547
    2. '1' → logprob: -1.8025341033935547
    3. ' =' → logprob: -2.0525341033935547
    4. '_' → logprob: -2.6775341033935547
    5. '=' → logprob: -3.6775341033935547
    6. 's' → logprob: -4.177534103393555
    7. '_value' → logprob: -5.677534103393555
    8. '_index' → logprob: -6.177534103393555
    9. '+' → logprob: -6.302534103393555
    10. '2' → logprob: -6.802534103393555

Token 246: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3283611834049225
    2. '1' → logprob: -1.7033611536026
    3. '3' → logprob: -3.3283612728118896
    4. '4' → logprob: -3.7033612728118896
    5. ' input' → logprob: -3.9533612728118896
    6. '2' → logprob: -4.7033610343933105
    7. ' ' → logprob: -5.4533610343933105
    8. '   ' → logprob: -6.7033610343933105
    9. '5' → logprob: -6.8283610343933105
    10. '(input' → logprob: -7.4533610343933105

Token 247: '2' (ID: 17)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2075326293706894
    2. '1' → logprob: -1.9575326442718506
    3. '3' → logprob: -4.2075324058532715
    4. '2' → logprob: -4.2075324058532715
    5. '4' → logprob: -4.5825324058532715
    6. ' input' → logprob: -6.5825324058532715
    7. '(' → logprob: -7.0825324058532715
    8. 'int' → logprob: -7.4575324058532715
    9. ' ' → logprob: -7.5825324058532715
    10. '(input' → logprob: -7.5825324058532715

Token 248: ' **' (ID: 6240)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' (' (ID: 350)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.01456091832369566
    2. '(' → logprob: -4.389560699462891
    3. ' (' → logprob: -7.139560699462891
    4. '(node' → logprob: -7.389560699462891
    5. 'bit' → logprob: -9.76456069946289
    6. '(k' → logprob: -9.76456069946289
    7. '(power' → logprob: -9.76456069946289
    8. '3' → logprob: -9.88956069946289
    9. '4' → logprob: -10.01456069946289
    10. '(bits' → logprob: -10.01456069946289

Token 250: 'bit' (ID: 6516)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.0010910429991781712
    2. 'bit' → logprob: -7.501091003417969
    3. ' (' → logprob: -8.001091003417969
    4. '(' → logprob: -8.876091003417969
    5. '(bits' → logprob: -10.876091003417969
    6. '(b' → logprob: -11.501091003417969
    7. ' bit' → logprob: -11.626091003417969
    8. '((' → logprob: -12.126091003417969
    9. '
' → logprob: -12.751091003417969
    10. '   ' → logprob: -13.126091003417969

Token 251: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00030161935137584805
    2. 'length' → logprob: -8.125301361083984
    3. '-' → logprob: -13.500301361083984
    4. 'ength' → logprob: -13.750301361083984
    5. '_lengths' → logprob: -14.625301361083984
    6. '_index' → logprob: -14.750301361083984
    7. 'Length' → logprob: -15.125301361083984
    8. '_size' → logprob: -15.250301361083984
    9. ')' → logprob: -15.500301361083984
    10. '_le' → logprob: -15.625301361083984

Token 252: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.015036135911941528
    2. '-' → logprob: -4.515036106109619
    3. ' -' → logprob: -6.140036106109619
    4. '_' → logprob: -7.015036106109619
    5. '_length' → logprob: -8.015036582946777
    6. '_index' → logprob: -8.015036582946777
    7. ' _' → logprob: -9.265036582946777
    8. ')' → logprob: -10.015036582946777
    9. ' ' → logprob: -10.390036582946777
    10. '_size' → logprob: -10.890036582946777

Token 253: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22589872777462006
    2. ' -' → logprob: -1.6008987426757812
    3. ')' → logprob: -7.725898742675781
    4. ' ' → logprob: -10.225898742675781
    5. ')-' → logprob: -12.475898742675781
    6. ' )' → logprob: -12.850898742675781
    7. '   ' → logprob: -14.850898742675781
    8. '-)' → logprob: -15.725898742675781
    9. '-
' → logprob: -15.850898742675781
    10. '<|end|>' → logprob: -15.850898742675781

Token 254: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03058754839003086
    2. '1' → logprob: -3.5305874347686768
    3. ' ' → logprob: -7.655587673187256
    4. '3' → logprob: -8.030587196350098
    5. '   ' → logprob: -10.405587196350098
    6. '  ' → logprob: -13.030587196350098
    7. '-' → logprob: -13.343087196350098
    8. '
' → logprob: -13.780587196350098
    9. '4' → logprob: -14.405587196350098
    10. '```' → logprob: -14.843087196350098

Token 255: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01891525648534298
    2. '1' → logprob: -4.018915176391602
    3. '3' → logprob: -7.268915176391602
    4. ' ' → logprob: -10.018915176391602
    5. '   ' → logprob: -11.643915176391602
    6. '
' → logprob: -12.018915176391602
    7. '-' → logprob: -13.081415176391602
    8. '  ' → logprob: -13.456415176391602
    9. '4' → logprob: -13.643915176391602
    10. '```' → logprob: -14.206415176391602

Token 256: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007471516728401184
    2. '+' → logprob: -5.757471561431885
    3. ' )' → logprob: -6.007471561431885
    4. '-' → logprob: -7.007471561431885
    5. ')
' → logprob: -7.882471561431885
    6. ' -' → logprob: -8.382471084594727
    7. ' +' → logprob: -8.757471084594727
    8. '#' → logprob: -10.382471084594727
    9. ')+' → logprob: -10.507471084594727
    10. '<|end|>' → logprob: -10.632471084594727

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39961037039756775
    2. '<|end|>' → logprob: -2.0246102809906006
    3. '+' → logprob: -2.2746102809906006
    4. 'print' → logprob: -3.3996102809906006
    5. '
' → logprob: -3.7746102809906006
    6. ')' → logprob: -4.52461051940918
    7. ' +' → logprob: -5.14961051940918
    8. '   ' → logprob: -5.39961051940918
    9. 'node' → logprob: -6.14961051940918
    10. ',' → logprob: -6.14961051940918

Token 258: ' node' (ID: 4596)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3352716565132141
    2. 'node' (adapté à ' node') → logprob: -1.5852715969085693
    3. 'for' → logprob: -2.5852715969085693
    4. '       ' → logprob: -7.210271835327148
    5. 'while' → logprob: -7.335271835327148
    6. 'if' → logprob: -7.710271835327148
    7. 'next' → logprob: -7.835271835327148
    8. ' for' → logprob: -8.085271835327148
    9. 'start' → logprob: -8.210271835327148
    10. 'current' → logprob: -8.210271835327148

Token 259: '_second' (ID: 67724)
  Prédit: '_first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.06061665341258049
    2. '_' → logprob: -3.6856167316436768
    3. '+' → logprob: -4.310616493225098
    4. '_last' → logprob: -4.810616493225098
    5. '_second' → logprob: -5.310616493225098
    6. '_next' → logprob: -5.935616493225098
    7. '_plus' → logprob: -6.810616493225098
    8. '_index' → logprob: -7.310616493225098
    9. '+=' → logprob: -7.435616493225098
    10. '=' → logprob: -7.560616493225098

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16055971384048462
    2. '=' → logprob: -1.9105596542358398
    3. ' +=' → logprob: -8.78555965423584
    4. '+' → logprob: -9.53555965423584
    5. ' +' → logprob: -9.91055965423584
    6. '+=' → logprob: -10.16055965423584
    7. ',' → logprob: -11.41055965423584
    8. ' ' → logprob: -12.03555965423584
    9. '_' → logprob: -14.03555965423584
    10. '   ' → logprob: -14.16055965423584

Token 261: ' (' (ID: 350)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7639632821083069
    2. 'input' → logprob: -1.388963222503662
    3. '2' → logprob: -1.888963222503662
    4. '3' → logprob: -2.888963222503662
    5. ' node' → logprob: -3.388963222503662
    6. ' input' → logprob: -4.388963222503662
    7. '1' → logprob: -4.513963222503662
    8. ' ' → logprob: -4.763963222503662
    9. '(' → logprob: -5.638963222503662
    10. 'bit' → logprob: -6.263963222503662

Token 262: 'input' (ID: 2586)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2595421373844147
    2. 'input' → logprob: -1.8845421075820923
    3. 'node' → logprob: -3.259542226791382
    4. '1' → logprob: -4.509541988372803
    5. ' ' → logprob: -4.634541988372803
    6. '3' → logprob: -5.259541988372803
    7. 'bit' → logprob: -5.509541988372803
    8. ' input' → logprob: -5.884541988372803
    9. ' node' → logprob: -6.634541988372803
    10. '(' → logprob: -6.884541988372803

Token 263: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00019424250058364123
    2. 'value' → logprob: -8.625194549560547
    3. '_' → logprob: -11.875194549560547
    4. '_input' → logprob: -13.000194549560547
    5. '-' → logprob: -14.000194549560547
    6. 'input' → logprob: -14.125194549560547
    7. '_index' → logprob: -14.250194549560547
    8. 'Value' → logprob: -14.250194549560547
    9. ' -' → logprob: -14.500194549560547
    10. '+' → logprob: -15.500194549560547

Token 264: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.167273998260498
    2. ' +' → logprob: -1.167273998260498
    3. ' //' → logprob: -1.792273998260498
    4. ' -' → logprob: -2.292273998260498
    5. '-' → logprob: -2.917273998260498
    6. '//' → logprob: -3.542273998260498
    7. ')' → logprob: -4.167273998260498
    8. ' ' → logprob: -5.417273998260498
    9. '>>' → logprob: -5.917273998260498
    10. '   ' → logprob: -6.542273998260498

Token 265: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1719391644001007
    2. ' ' → logprob: -2.0469391345977783
    3. '3' → logprob: -4.171939373016357
    4. '2' → logprob: -4.546939373016357
    5. 'node' → logprob: -7.296939373016357
    6. 'bit' → logprob: -7.421939373016357
    7. ' bit' → logprob: -7.796939373016357
    8. ' node' → logprob: -8.1719388961792
    9. '   ' → logprob: -8.4219388961792
    10. '4' → logprob: -8.9219388961792

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.059184372425079346
    2. '3' → logprob: -3.4341843128204346
    3. '2' → logprob: -4.184184551239014
    4. ' ' → logprob: -4.809184551239014
    5. 'node' → logprob: -7.309184551239014
    6. 'bit' → logprob: -7.809184551239014
    7. '   ' → logprob: -8.309184074401855
    8. 'input' → logprob: -9.059184074401855
    9. '4' → logprob: -9.184184074401855
    10. '  ' → logprob: -9.434184074401855

Token 267: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4823847711086273
    2. '+' → logprob: -1.7323848009109497
    3. ' +' → logprob: -1.7323848009109497
    4. ' -' → logprob: -4.35738468170166
    5. '-' → logprob: -4.73238468170166
    6. ' )' → logprob: -5.98238468170166
    7. ' //' → logprob: -6.48238468170166
    8. ',' → logprob: -6.48238468170166
    9. '//' → logprob: -7.60738468170166
    10. '   ' → logprob: -7.98238468170166

Token 268: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6315966248512268
    2. '-' → logprob: -1.381596565246582
    3. ' +' → logprob: -2.256596565246582
    4. ' -' → logprob: -2.381596565246582
    5. '       ' → logprob: -4.756596565246582
    6. '
' → logprob: -5.631596565246582
    7. ',' → logprob: -6.631596565246582
    8. '<|end|>' → logprob: -6.631596565246582
    9. 'print' → logprob: -7.006596565246582
    10. '#' → logprob: -7.256596565246582

Token 269: ' ' (ID: 220)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.10242731869220734
    2. ' node' → logprob: -2.3524272441864014
    3. '1' → logprob: -6.9774274826049805
    4. 'bit' → logprob: -7.9774274826049805
    5. '(node' → logprob: -8.10242748260498
    6. '2' → logprob: -8.35242748260498
    7. 'input' → logprob: -9.10242748260498
    8. '(' → logprob: -9.22742748260498
    9. ' (' → logprob: -9.47742748260498
    10. ' bit' → logprob: -10.22742748260498

Token 270: '2' (ID: 17)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0061264485120773315
    2. ' node' → logprob: -5.381126403808594
    3. '2' → logprob: -7.631126403808594
    4. 'bit' → logprob: -7.631126403808594
    5. '1' → logprob: -8.256126403808594
    6. '(node' → logprob: -8.881126403808594
    7. '(' → logprob: -9.881126403808594
    8. 'input' → logprob: -10.131126403808594
    9. ' ' → logprob: -11.631126403808594
    10. '   ' → logprob: -11.881126403808594

Token 271: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.33700311183929443
    2. '<|end|>' → logprob: -1.8370031118392944
    3. ')' → logprob: -2.712003231048584
    4. ' **' → logprob: -2.962003231048584
    5. '*' → logprob: -5.587003231048584
    6. '+' → logprob: -6.462003231048584
    7. ' +' → logprob: -6.587003231048584
    8. '^' → logprob: -7.712003231048584
    9. ' )' → logprob: -8.587002754211426
    10. ' *' → logprob: -8.712002754211426

Token 272: ' (' (ID: 350)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.0034240162931382656
    2. ' (' → logprob: -5.753424167633057
    3. '(' → logprob: -8.753423690795898
    4. '(node' → logprob: -9.628423690795898
    5. '(bits' → logprob: -11.878423690795898
    6. '(b' → logprob: -12.753423690795898
    7. '(bot' → logprob: -13.003423690795898
    8. ' ' → logprob: -13.628423690795898
    9. '   ' → logprob: -13.878423690795898
    10. '(len' → logprob: -14.128423690795898

Token 273: 'bit' (ID: 6516)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.012710826471447945
    2. ' (' → logprob: -4.387711048126221
    3. 'bit' → logprob: -9.887710571289062
    4. '(bits' → logprob: -10.637710571289062
    5. ' ' → logprob: -10.887710571289062
    6. '(' → logprob: -11.387710571289062
    7. '   ' → logprob: -11.512710571289062
    8. '((' → logprob: -11.637710571289062
    9. ' bit' → logprob: -11.762710571289062
    10. '(bot' → logprob: -11.887710571289062

Token 274: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00026205103495158255
    2. 'length' → logprob: -8.250262260437012
    3. '_lengths' → logprob: -15.000262260437012
    4. '_LENGTH' → logprob: -15.625262260437012
    5. '           ' → logprob: -16.125261306762695
    6. 'Length' → logprob: -16.750261306762695
    7. ' length' → logprob: -17.500261306762695
    8. '_depth' → logprob: -17.625261306762695
    9. 'ength' → logprob: -18.000261306762695
    10. ')' → logprob: -18.000261306762695

Token 275: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.001368453842587769
    2. '_length' → logprob: -7.001368522644043
    3. '-' → logprob: -7.751368522644043
    4. 'value' → logprob: -12.126368522644043
    5. ')' → logprob: -12.251368522644043
    6. '_VALUE' → logprob: -12.376368522644043
    7. '_size' → logprob: -13.126368522644043
    8. '_val' → logprob: -13.251368522644043
    9. '1' → logprob: -13.376368522644043
    10. '_index' → logprob: -13.751368522644043

Token 276: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42955324053764343
    2. ' -' → logprob: -1.0545532703399658
    3. '(-' → logprob: -7.929553031921387
    4. '(' → logprob: -8.804553031921387
    5. ')' → logprob: -8.929553031921387
    6. ' ' → logprob: -9.054553031921387
    7. ' (-' → logprob: -10.804553031921387
    8. '_minus' → logprob: -10.804553031921387
    9. ' (' → logprob: -11.054553031921387
    10. '()-' → logprob: -12.179553031921387

Token 277: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25196707248687744
    2. '1' → logprob: -1.5019670724868774
    3. '3' → logprob: -10.876967430114746
    4. ' ' → logprob: -11.251967430114746
    5. '   ' → logprob: -13.501967430114746
    6. '
' → logprob: -14.064467430114746
    7. '```' → logprob: -14.314467430114746
    8. '0' → logprob: -14.564467430114746
    9. '4' → logprob: -14.751967430114746
    10. '-' → logprob: -15.001967430114746

Token 278: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16034862399101257
    2. '1' → logprob: -1.910348653793335
    3. '3' → logprob: -9.535348892211914
    4. ' ' → logprob: -10.035348892211914
    5. '   ' → logprob: -12.847848892211914
    6. '
' → logprob: -13.660348892211914
    7. '```' → logprob: -13.722848892211914
    8. '           ' → logprob: -14.660348892211914
    9. '4' → logprob: -14.660348892211914
    10. '       ' → logprob: -14.847848892211914

Token 279: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019262558780610561
    2. ')
' → logprob: -6.626926422119141
    3. '+' → logprob: -8.12692642211914
    4. '-' → logprob: -9.12692642211914
    5. ' +' → logprob: -9.37692642211914
    6. ' -' → logprob: -10.25192642211914
    7. ' )' → logprob: -10.37692642211914
    8. '       ' → logprob: -11.25192642211914
    9. '   ' → logprob: -11.25192642211914
    10. '<|end|>' → logprob: -11.75192642211914

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024444198235869408
    2. '<|end|>' → logprob: -4.274444103240967
    3. 'print' → logprob: -5.399444103240967
    4. ')' → logprob: -5.899444103240967
    5. 'if' → logprob: -7.149444103240967
    6. 'elif' → logprob: -7.524444103240967
    7. '
' → logprob: -8.149444580078125
    8. 'else' → logprob: -8.149444580078125
    9. 'node' → logprob: -8.524444580078125
    10. '   ' → logprob: -8.524444580078125

Token 281: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.35201457142829895
    2. '       ' → logprob: -1.2270145416259766
    3. 'if' → logprob: -6.227014541625977
    4. ' print' → logprob: -6.852014541625977
    5. 'for' → logprob: -8.602014541625977
    6. ' if' → logprob: -8.977014541625977
    7. 'while' → logprob: -9.352014541625977
    8. 'node' → logprob: -9.977014541625977
    9. '   ' → logprob: -10.602014541625977
    10. '
' → logprob: -11.102014541625977

Token 282: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.011828606016933918
    2. '(input' → logprob: -4.886828422546387
    3. '(' → logprob: -5.511828422546387
    4. '("' → logprob: -9.761828422546387
    5. 'node' → logprob: -10.136828422546387
    6. '(f' → logprob: -10.511828422546387
    7. '((' → logprob: -11.636828422546387
    8. '(power' → logprob: -11.761828422546387
    9. '(first' → logprob: -12.261828422546387
    10. '1' → logprob: -12.886828422546387

Token 283: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.17990773916244507
    2. '_second' → logprob: -1.8049077987670898
    3. ',' → logprob: -9.30490779876709
    4. ')' → logprob: -10.67990779876709
    5. 'first' → logprob: -11.55490779876709
    6. '_,' → logprob: -11.80490779876709
    7. '_two' → logprob: -12.30490779876709
    8. ',_' → logprob: -12.55490779876709
    9. ' ,' → logprob: -12.80490779876709
    10. ')_' → logprob: -12.80490779876709

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025685220025479794
    2. ' ,' → logprob: -6.87756872177124
    3. ',node' → logprob: -7.37756872177124
    4. '+' → logprob: -7.50256872177124
    5. ' +' → logprob: -8.002568244934082
    6. ',input' → logprob: -11.377568244934082
    7. ')' → logprob: -12.377568244934082
    8. ',
' → logprob: -12.877568244934082
    9. '+,' → logprob: -13.377568244934082
    10. '(node' → logprob: -14.377568244934082

Token 285: ' input' (ID: 3422)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.29024600982666016
    2. ' node' → logprob: -1.6652460098266602
    3. 'input' → logprob: -2.91524600982666
    4. ' input' → logprob: -4.79024600982666
    5. '   ' → logprob: -9.66524600982666
    6. 'user' → logprob: -10.29024600982666
    7. ' ' → logprob: -10.41524600982666
    8. '    ' → logprob: -10.79024600982666
    9. '           ' → logprob: -11.16524600982666
    10. '3' → logprob: -11.16524600982666

Token 286: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00015633940347470343
    2. 'value' → logprob: -9.62515640258789
    3. '_first' → logprob: -10.50015640258789
    4. '_' → logprob: -10.87515640258789
    5. '+' → logprob: -10.87515640258789
    6. '_node' → logprob: -11.75015640258789
    7. '_user' → logprob: -12.12515640258789
    8. '_second' → logprob: -12.87515640258789
    9. '```' → logprob: -13.37515640258789
    10. '_values' → logprob: -13.87515640258789

Token 287: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3177390992641449
    2. ' +' → logprob: -1.3177391290664673
    3. ')' → logprob: -5.442739009857178
    4. ',' → logprob: -10.442739486694336
    5. '   ' → logprob: -10.817739486694336
    6. ' )' → logprob: -11.317739486694336
    7. '_' → logprob: -11.317739486694336
    8. '-' → logprob: -11.442739486694336
    9. '+)' → logprob: -11.442739486694336
    10. '1' → logprob: -11.817739486694336

Token 288: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00880991481244564
    2. '       ' → logprob: -4.758810043334961
    3. ' print' → logprob: -9.258810043334961
    4. 'node' → logprob: -9.633810043334961
    5. 'input' → logprob: -11.008810043334961
    6. 'else' → logprob: -11.508810043334961
    7. '   ' → logprob: -13.508810043334961
    8. 'elif' → logprob: -13.508810043334961
    9. '<|end|>' → logprob: -13.633810043334961
    10. '	print' → logprob: -13.883810043334961

Token 290: '(node' (ID: 13356)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.08834152668714523
    2. '(node' → logprob: -2.963341474533081
    3. 'input' → logprob: -3.588341474533081
    4. '(input' → logprob: -5.58834171295166
    5. '(' → logprob: -7.21334171295166
    6. ' node' → logprob: -8.21334171295166
    7. '1' → logprob: -8.33834171295166
    8. '2' → logprob: -9.21334171295166
    9. '3' → logprob: -9.46334171295166
    10. 'user' → logprob: -10.83834171295166

Token 291: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.800397515296936
    2. '_first' → logprob: -0.925397515296936
    3. '_value' → logprob: -1.925397515296936
    4. '+' → logprob: -5.1753973960876465
    5. ',' → logprob: -6.3003973960876465
    6. '_plus' → logprob: -7.9253973960876465
    7. '_,' → logprob: -8.175397872924805
    8. ' +' → logprob: -8.550397872924805
    9. 'value' → logprob: -9.425397872924805
    10. '```' → logprob: -10.425397872924805

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021080286242067814
    2. ',input' → logprob: -6.377108097076416
    3. ' ,' → logprob: -8.252107620239258
    4. ')' → logprob: -9.377107620239258
    5. '+' → logprob: -10.252107620239258
    6. 'input' → logprob: -11.752107620239258
    7. ' +' → logprob: -12.502107620239258
    8. '   ' → logprob: -13.627107620239258
    9. ',node' → logprob: -13.752107620239258
    10. ',
' → logprob: -13.752107620239258

Token 293: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.43041595816612244
    2. ' input' → logprob: -1.0554159879684448
    3. 'node' → logprob: -7.555416107177734
    4. ' ' → logprob: -8.180416107177734
    5. ' node' → logprob: -8.430416107177734
    6. '1' → logprob: -8.805416107177734
    7. '3' → logprob: -9.055416107177734
    8. '(input' → logprob: -9.055416107177734
    9. '   ' → logprob: -9.930416107177734
    10. '2' → logprob: -9.930416107177734

Token 294: '2' (ID: 17)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004757984541356564
    2. ' input' → logprob: -5.754757881164551
    3. '1' → logprob: -7.254757881164551
    4. '3' → logprob: -8.37975788116455
    5. 'node' → logprob: -8.37975788116455
    6. '2' → logprob: -9.00475788116455
    7. '(input' → logprob: -9.50475788116455
    8. '   ' → logprob: -9.87975788116455
    9. ' ' → logprob: -10.37975788116455
    10. '4' → logprob: -11.00475788116455

Token 295: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008628644980490208
    2. ',' → logprob: -6.383628845214844
    3. ' +' → logprob: -6.383628845214844
    4. '+' → logprob: -6.633628845214844
    5. '3' → logprob: -6.883628845214844
    6. ' )' → logprob: -7.383628845214844
    7. ' ' → logprob: -7.508628845214844
    8. '0' → logprob: -7.758628845214844
    9. '<|end|>' → logprob: -8.008628845214844
    10. ')
' → logprob: -8.508628845214844

Token 296: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2703961730003357
    2. '(input' → logprob: -1.7703962326049805
    3. 'node' → logprob: -3.1453962326049805
    4. ' input' → logprob: -4.1453962326049805
    5. '(node' → logprob: -5.8953962326049805
    6. ' (' → logprob: -6.2703962326049805
    7. '(' → logprob: -6.3953962326049805
    8. ' node' → logprob: -7.0203962326049805
    9. 'bit' → logprob: -9.39539623260498
    10. '2' → logprob: -9.39539623260498

Token 297: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.438573680294212e-06
    2. 'value' → logprob: -12.625005722045898
    3. '_input' → logprob: -13.750005722045898
    4. '_' → logprob: -14.375005722045898
    5. '_index' → logprob: -15.875005722045898
    6. '_user' → logprob: -17.3750057220459
    7. '_val' → logprob: -17.3750057220459
    8. '+' → logprob: -17.3750057220459
    9. '```' → logprob: -17.3750057220459
    10. '_first' → logprob: -17.3750057220459

Token 298: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028934504371136427
    2. '+' → logprob: -9.000288963317871
    3. ')
' → logprob: -9.500288963317871
    4. ' )' → logprob: -9.750288963317871
    5. ' +' → logprob: -10.625288963317871
    6. '   ' → logprob: -12.000288963317871
    7. '       ' → logprob: -14.125288963317871
    8. '-' → logprob: -15.250288963317871
    9. ' -' → logprob: -15.375288963317871
    10. '+)' → logprob: -15.375288963317871

Token 299: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22639256715774536
    2. ':
' → logprob: -1.6013925075531006
    3. '   ' → logprob: -7.47639274597168
    4. ' :
' → logprob: -8.47639274597168
    5. ' :' → logprob: -8.60139274597168
    6. ':

' → logprob: -11.97639274597168
    7. '):
' → logprob: -12.72639274597168
    8. ':
' → logprob: -13.10139274597168
    9. '():
' → logprob: -13.22639274597168
    10. 'print' → logprob: -14.22639274597168

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003634713648352772
    2. 'print' → logprob: -8.00036334991455
    3. ' print' → logprob: -11.00036334991455
    4. '       ' → logprob: -11.62536334991455
    5. '	print' → logprob: -15.00036334991455
    6. '...' → logprob: -15.12536334991455
    7. '```' → logprob: -15.25036334991455
    8. '    
' → logprob: -15.25036334991455
    9. '"' → logprob: -15.75036334991455
    10. ' ' → logprob: -15.87536334991455

Token 302: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2611669600009918
    2. ' print' → logprob: -1.5111669301986694
    3. '   ' → logprob: -4.886167049407959
    4. ' if' → logprob: -7.886167049407959
    5. 'if' → logprob: -8.0111665725708
    6. ' ' → logprob: -8.8861665725708
    7. ' for' → logprob: -9.3861665725708
    8. ' n' → logprob: -9.5111665725708
    9. ' node' → logprob: -9.5111665725708
    10. ' input' → logprob: -9.6361665725708

Token 303: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.20146089792251587
    2. '(' → logprob: -1.701460838317871
    3. '('' → logprob: -10.951460838317871
    4. '("("' → logprob: -10.951460838317871
    5. '("")' → logprob: -12.451460838317871
    6. '("""' → logprob: -12.576460838317871
    7. '(""' → logprob: -13.576460838317871
    8. '(False' → logprob: -14.201460838317871
    9. '(\"' → logprob: -14.451460838317871
    10. '()' → logprob: -14.576460838317871

Token 304: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.11670304834842682
    2. 'No' → logprob: -2.4917030334472656
    3. '"' → logprob: -4.241703033447266
    4. '"No' → logprob: -4.366703033447266
    5. '("' → logprob: -8.741703033447266
    6. '(No' → logprob: -10.741703033447266
    7. '(' → logprob: -11.116703033447266
    8. 'YES' → logprob: -11.241703033447266
    9. '")' → logprob: -11.491703033447266
    10. '“Yes' → logprob: -11.491703033447266

Token 305: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7187257409095764
    2. '")
' → logprob: -1.5937256813049316
    3. '   ' → logprob: -1.9687256813049316
    4. ')' → logprob: -2.2187256813049316
    5. ')
' → logprob: -2.8437256813049316
    6. '       ' → logprob: -6.968725681304932
    7. '<|end|>' → logprob: -6.968725681304932
    8. ' )
' → logprob: -8.46872615814209
    9. ' )' → logprob: -8.96872615814209
    10. '
' → logprob: -9.34372615814209

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056014712899923325
    2. '       ' → logprob: -2.9310147762298584
    3. '<|end|>' → logprob: -7.181014537811279
    4. ' for' → logprob: -9.306015014648438
    5. 'print' → logprob: -9.306015014648438
    6. '```' → logprob: -9.681015014648438
    7. 'for' → logprob: -11.181015014648438
    8. '	print' → logprob: -11.306015014648438
    9. ',' → logprob: -11.431015014648438
    10. '    
' → logprob: -11.431015014648438

Token 307: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.40000513195991516
    2. '   ' → logprob: -1.5250051021575928
    3. ' print' → logprob: -2.4000051021575928
    4. 'for' → logprob: -4.400005340576172
    5. ' for' → logprob: -4.775005340576172
    6. '       ' → logprob: -8.025005340576172
    7. '```' → logprob: -9.150005340576172
    8. ' ' → logprob: -10.150005340576172
    9. '	print' → logprob: -10.900005340576172
    10. '    ' → logprob: -11.525005340576172

Token 308: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6330214142799377
    2. '1' → logprob: -0.7580214142799377
    3. '(input' → logprob: -8.133021354675293
    4. '2' → logprob: -9.633021354675293
    5. '3' → logprob: -10.883021354675293
    6. ' ' → logprob: -11.008021354675293
    7. 'input' → logprob: -11.383021354675293
    8. ' (' → logprob: -12.133021354675293
    9. '   ' → logprob: -12.758021354675293
    10. '4' → logprob: -13.633021354675293

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001008515479043126
    2. '(' → logprob: -7.5010085105896
    3. 'input' → logprob: -8.876008987426758
    4. ' ' → logprob: -9.126008987426758
    5. '2' → logprob: -9.251008987426758
    6. '(input' → logprob: -9.376008987426758
    7. '3' → logprob: -11.501008987426758
    8. '   ' → logprob: -12.501008987426758
    9. ' (' → logprob: -13.563508987426758
    10. '(i' → logprob: -13.751008987426758

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013903543585911393
    2. ' ,' → logprob: -6.62639045715332
    3. '2' → logprob: -9.87639045715332
    4. ' ' → logprob: -12.25139045715332
    5. '1' → logprob: -12.50139045715332
    6. ',
' → logprob: -13.62639045715332
    7. ')' → logprob: -13.75139045715332
    8. '   ' → logprob: -13.87639045715332
    9. '3' → logprob: -14.37639045715332
    10. '4' → logprob: -15.75139045715332

Token 311: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002636653371155262
    2. ' ' → logprob: -6.502636432647705
    3. 'input' → logprob: -7.252636432647705
    4. '3' → logprob: -8.127636909484863
    5. '   ' → logprob: -9.502636909484863
    6. ' input' → logprob: -10.252636909484863
    7. '(input' → logprob: -11.252636909484863
    8. '  ' → logprob: -13.377636909484863
    9. '(' → logprob: -13.627636909484863
    10. '4' → logprob: -13.877636909484863

Token 312: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004330532974563539
    2. '3' → logprob: -8.250432968139648
    3. 'input' → logprob: -9.000432968139648
    4. ' ' → logprob: -10.375432968139648
    5. '(input' → logprob: -11.250432968139648
    6. '   ' → logprob: -13.250432968139648
    7. '(' → logprob: -14.250432968139648
    8. ' input' → logprob: -14.375432968139648
    9. '  ' → logprob: -15.250432968139648
    10. '4' → logprob: -15.375432968139648

Token 313: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3944789469242096
    2. ')' → logprob: -1.1444789171218872
    3. '   ' → logprob: -4.894478797912598
    4. '```' → logprob: -10.019478797912598
    5. ' )
' → logprob: -11.144478797912598
    6. '``' → logprob: -11.269478797912598
    7. ')
' → logprob: -12.144478797912598
    8. ' )' → logprob: -12.894478797912598
    9. ' ' → logprob: -13.019478797912598
    10. '1' → logprob: -13.144478797912598

Token 314: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6479496955871582
    2. '   ' → logprob: -0.7729496955871582
    3. ' print' → logprob: -4.397949695587158
    4. ' ' → logprob: -7.272949695587158
    5. '	print' → logprob: -7.272949695587158
    6. '<|end|>' → logprob: -7.772949695587158
    7. '```' → logprob: -7.897949695587158
    8. '2' → logprob: -8.02294921875
    9. '1' → logprob: -8.27294921875
    10. '       ' → logprob: -9.89794921875

Token 315: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.015183019451797009
    2. '   ' → logprob: -4.265182971954346
    3. ' print' → logprob: -7.140182971954346
    4. '2' → logprob: -8.890183448791504
    5. 'for' → logprob: -10.390183448791504
    6. '3' → logprob: -10.890183448791504
    7. ' ' → logprob: -11.265183448791504
    8. '1' → logprob: -11.515183448791504
    9. '```' → logprob: -12.015183448791504
    10. '	print' → logprob: -12.515183448791504

Token 316: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004716583527624607
    2. '1' → logprob: -5.504716396331787
    3. '(' → logprob: -7.754716396331787
    4. '3' → logprob: -9.004716873168945
    5. 'input' → logprob: -9.879716873168945
    6. ' ' → logprob: -11.004716873168945
    7. '(input' → logprob: -11.754716873168945
    8. '   ' → logprob: -11.879716873168945
    9. 'print' → logprob: -13.879716873168945
    10. ' (' → logprob: -14.504716873168945

Token 317: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009768366580829024
    2. '1' → logprob: -7.125977039337158
    3. '3' → logprob: -9.0009765625
    4. '(' → logprob: -10.6259765625
    5. ' ' → logprob: -11.5009765625
    6. '   ' → logprob: -12.0009765625
    7. 'input' → logprob: -12.0009765625
    8. '(input' → logprob: -14.3134765625
    9. 'import' → logprob: -15.4384765625
    10. '  ' → logprob: -15.4384765625

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01831112802028656
    2. '3' → logprob: -4.018311023712158
    3. ' ,' → logprob: -8.893311500549316
    4. '`,' → logprob: -11.893311500549316
    5. ' ' → logprob: -12.393311500549316
    6. '   ' → logprob: -12.768311500549316
    7. '```' → logprob: -12.768311500549316
    8. ',
' → logprob: -13.268311500549316
    9. ')' → logprob: -13.643311500549316
    10. '4' → logprob: -13.893311500549316

Token 319: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0011767742689698935
    2. ' ' → logprob: -6.751176834106445
    3. 'input' → logprob: -12.251176834106445
    4. '4' → logprob: -14.001176834106445
    5. '(' → logprob: -15.001176834106445
    6. '1' → logprob: -15.376176834106445
    7. ' input' → logprob: -16.001176834106445
    8. '(input' → logprob: -16.001176834106445
    9. '   ' → logprob: -17.001176834106445
    10. ' (' → logprob: -17.126176834106445

Token 320: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.4849443838757e-06
    2. 'input' → logprob: -12.750004768371582
    3. '(' → logprob: -14.375004768371582
    4. ' ' → logprob: -14.625004768371582
    5. '(input' → logprob: -14.625004768371582
    6. '4' → logprob: -17.750003814697266
    7. '1' → logprob: -18.750003814697266
    8. '[input' → logprob: -18.875003814697266
    9. ' input' → logprob: -19.125003814697266
    10. 'output' → logprob: -19.125003814697266

Token 321: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4815693497657776
    2. ')
' → logprob: -1.3565692901611328
    3. '   ' → logprob: -2.106569290161133
    4. '```' → logprob: -5.981569290161133
    5. '``' → logprob: -8.356569290161133
    6. '
' → logprob: -9.356569290161133
    7. '    
' → logprob: -9.856569290161133
    8. '\n' → logprob: -10.356569290161133
    9. 'print' → logprob: -10.856569290161133
    10. '  
' → logprob: -11.856569290161133

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07767734676599503
    2. 'print' → logprob: -3.0776772499084473
    3. '```' → logprob: -4.077677249908447
    4. '\n' → logprob: -6.202677249908447
    5. '<|end|>' → logprob: -6.327677249908447
    6. ' ' → logprob: -6.702677249908447
    7. ' for' → logprob: -6.952677249908447
    8. '``' → logprob: -6.952677249908447
    9. ' print' → logprob: -7.077677249908447
    10. '    
' → logprob: -7.077677249908447

Token 323: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10935349017381668
    2. '3' → logprob: -2.359353542327881
    3. '   ' → logprob: -4.734353542327881
    4. ' print' → logprob: -8.484353065490723
    5. '4' → logprob: -10.109353065490723
    6. 'for' → logprob: -10.359353065490723
    7. '1' → logprob: -11.359353065490723
    8. '2' → logprob: -11.484353065490723
    9. 'input' → logprob: -12.109353065490723
    10. ' ' → logprob: -12.484353065490723

Token 324: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6328086256980896
    2. '3' → logprob: -0.7578086256980896
    3. '1' → logprob: -9.507808685302734
    4. '2' → logprob: -9.507808685302734
    5. ' ' → logprob: -10.507808685302734
    6. ' (' → logprob: -11.257808685302734
    7. '   ' → logprob: -11.632808685302734
    8. '4' → logprob: -12.882808685302734
    9. 'print' → logprob: -13.007808685302734
    10. '(input' → logprob: -13.632808685302734

Token 325: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005381503142416477
    2. '1' → logprob: -5.6303815841674805
    3. 'input' → logprob: -7.0053815841674805
    4. '2' → logprob: -8.13038158416748
    5. '(' → logprob: -8.25538158416748
    6. '(input' → logprob: -8.25538158416748
    7. ' ' → logprob: -10.25538158416748
    8. '4' → logprob: -11.38038158416748
    9. '   ' → logprob: -12.94288158416748
    10. ' input' → logprob: -13.75538158416748

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01285711582750082
    2. ',input' → logprob: -4.512856960296631
    3. '4' → logprob: -6.637856960296631
    4. ' ,' → logprob: -8.012857437133789
    5. 'input' → logprob: -9.012857437133789
    6. ' input' → logprob: -11.637857437133789
    7. '(input' → logprob: -11.637857437133789
    8. '3' → logprob: -11.762857437133789
    9. ')' → logprob: -12.012857437133789
    10. ' ' → logprob: -12.512857437133789

Token 327: ' input' (ID: 3422)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7315104603767395
    2. 'input' → logprob: -0.7315104603767395
    3. ' input' → logprob: -3.6065104007720947
    4. '1' → logprob: -5.106510639190674
    5. ' ' → logprob: -5.481510639190674
    6. '2' → logprob: -9.481510162353516
    7. '(input' → logprob: -9.731510162353516
    8. '5' → logprob: -10.606510162353516
    9. '   ' → logprob: -10.981510162353516
    10. ',input' → logprob: -11.106510162353516

Token 328: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00029923528200015426
    2. 'value' → logprob: -8.125299453735352
    3. '_val' → logprob: -13.125299453735352
    4. '_' → logprob: -14.625299453735352
    5. '+' → logprob: -14.750299453735352
    6. 'valu' → logprob: -16.12529945373535
    7. '4' → logprob: -16.62529945373535
    8. 'val' → logprob: -16.75029945373535
    9. '```' → logprob: -17.00029945373535
    10. 'Value' → logprob: -17.37529945373535

Token 329: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42028409242630005
    2. ',' → logprob: -2.0452840328216553
    3. '4' → logprob: -2.2952840328216553
    4. ' +' → logprob: -2.2952840328216553
    5. ' ,' → logprob: -5.545284271240234
    6. ' ' → logprob: -5.670284271240234
    7. '   ' → logprob: -6.045284271240234
    8. '1' → logprob: -6.920284271240234
    9. '+,' → logprob: -7.045284271240234
    10. ')' → logprob: -7.795284271240234

Token 330: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002277530962601304
    2. '2' → logprob: -6.252277374267578
    3. ' ' → logprob: -8.627277374267578
    4. '4' → logprob: -9.002277374267578
    5. '3' → logprob: -10.002277374267578
    6. '   ' → logprob: -14.377277374267578
    7. '  ' → logprob: -15.502277374267578
    8. '-' → logprob: -16.127277374267578
    9. '```' → logprob: -16.189777374267578
    10. '5' → logprob: -16.252277374267578

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006206889171153307
    2. '2' → logprob: -5.13120698928833
    3. ' ' → logprob: -9.006206512451172
    4. '3' → logprob: -9.131206512451172
    5. '4' → logprob: -10.006206512451172
    6. '   ' → logprob: -14.131206512451172
    7. '-' → logprob: -15.006206512451172
    8. '  ' → logprob: -15.443706512451172
    9. '```' → logprob: -15.506206512451172
    10. '5' → logprob: -15.631206512451172

Token 332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04986099526286125
    2. ')
' → logprob: -3.049860954284668
    3. '   ' → logprob: -6.674860954284668
    4. '```' → logprob: -12.549860954284668
    5. 'print' → logprob: -13.049860954284668
    6. ' )' → logprob: -13.549860954284668
    7. ' ' → logprob: -13.924860954284668
    8. ')
' → logprob: -13.924860954284668
    9. '``' → logprob: -14.799860954284668
    10. ' )
' → logprob: -15.549860954284668

Token 333: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1713874191045761
    2. 'for' → logprob: -2.2963874340057373
    3. '   ' → logprob: -3.4213874340057373
    4. '4' → logprob: -4.796387195587158
    5. '\n' → logprob: -5.421387195587158
    6. ' for' → logprob: -5.796387195587158
    7. '```' → logprob: -6.171387195587158
    8. 'input' → logprob: -6.296387195587158
    9. '3' → logprob: -6.671387195587158
    10. ' ' → logprob: -6.796387195587158

Token 334: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00018375257786829025
    2. '4' → logprob: -9.875184059143066
    3. '   ' → logprob: -10.125184059143066
    4. '3' → logprob: -10.250184059143066
    5. '<|end|>' → logprob: -10.750184059143066
    6. ' print' → logprob: -11.000184059143066
    7. 'for' → logprob: -11.750184059143066
    8. '```' → logprob: -12.625184059143066
    9. '(' → logprob: -13.250184059143066
    10. '(print' → logprob: -13.250184059143066

Token 335: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21337059140205383
    2. '3' → logprob: -1.7133705615997314
    3. '1' → logprob: -4.9633708000183105
    4. '2' → logprob: -5.9633708000183105
    5. '(input' → logprob: -6.3383708000183105
    6. '4' → logprob: -8.088370323181152
    7. '(' → logprob: -8.963370323181152
    8. ' input' → logprob: -10.338370323181152
    9. '   ' → logprob: -10.963370323181152
    10. ' ' → logprob: -11.213370323181152

Token 336: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.682846287731081e-05
    2. 'value' → logprob: -10.000066757202148
    3. '_' → logprob: -11.375066757202148
    4. '+' → logprob: -12.000066757202148
    5. '_val' → logprob: -12.875066757202148
    6. ' +' → logprob: -14.875066757202148
    7. ' _' → logprob: -15.125066757202148
    8. '_user' → logprob: -16.50006675720215
    9. '```' → logprob: -16.50006675720215
    10. '_input' → logprob: -16.75006675720215

Token 337: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07211926579475403
    2. ' +' → logprob: -3.3221192359924316
    3. ',' → logprob: -3.5721192359924316
    4. '1' → logprob: -6.197119235992432
    5. ' ,' → logprob: -6.447119235992432
    6. '+,' → logprob: -6.822119235992432
    7. ' ' → logprob: -8.19711971282959
    8. '   ' → logprob: -8.69711971282959
    9. '2' → logprob: -9.82211971282959
    10. ')' → logprob: -9.82211971282959

Token 338: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02783150225877762
    2. '2' → logprob: -3.902831554412842
    3. ' ' → logprob: -5.027831554412842
    4. '3' → logprob: -7.527831554412842
    5. '   ' → logprob: -9.277831077575684
    6. '4' → logprob: -10.027831077575684
    7. '  ' → logprob: -12.152831077575684
    8. '0' → logprob: -12.527831077575684
    9. '5' → logprob: -12.840331077575684
    10. 'input' → logprob: -12.840331077575684

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021043945103883743
    2. '2' → logprob: -3.8960440158843994
    3. '3' → logprob: -7.77104377746582
    4. ' ' → logprob: -9.89604377746582
    5. '   ' → logprob: -11.77104377746582
    6. '4' → logprob: -11.89604377746582
    7. '
' → logprob: -11.95854377746582
    8. '0' → logprob: -12.95854377746582
    9. '  ' → logprob: -14.39604377746582
    10. '+' → logprob: -14.70854377746582

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028421927709132433
    2. ' ,' → logprob: -8.750284194946289
    3. ')' → logprob: -9.250284194946289
    4. ',
' → logprob: -12.000284194946289
    5. ',end' → logprob: -12.000284194946289
    6. ',input' → logprob: -12.625284194946289
    7. '1' → logprob: -13.000284194946289
    8. '2' → logprob: -13.375284194946289
    9. ' ' → logprob: -13.500284194946289
    10. '`,' → logprob: -13.500284194946289

Token 341: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008117937482893467
    2. '3' → logprob: -5.133118152618408
    3. '4' → logprob: -6.508118152618408
    4. ' input' → logprob: -8.25811767578125
    5. '2' → logprob: -8.38311767578125
    6. '1' → logprob: -8.63311767578125
    7. ' ' → logprob: -11.75811767578125
    8. '(input' → logprob: -12.38311767578125
    9. '   ' → logprob: -12.63311767578125
    10. '5' → logprob: -13.25811767578125

Token 342: '_value' (ID: 6734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.056185003370046616
    2. ' +' → logprob: -3.306185007095337
    3. ')' → logprob: -4.431184768676758
    4. '2' → logprob: -5.556184768676758
    5. 'value' → logprob: -6.806184768676758
    6. '_value' → logprob: -7.931184768676758
    7. '4' → logprob: -8.306184768676758
    8. '```' → logprob: -9.431184768676758
    9. '3' → logprob: -9.806184768676758
    10. '<|end|>' → logprob: -9.931184768676758

Token 343: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0016914885491132736
    2. ' +' → logprob: -6.6266913414001465
    3. '+,' → logprob: -9.126691818237305
    4. ')' → logprob: -9.501691818237305
    5. '+
' → logprob: -9.751691818237305
    6. ',' → logprob: -9.876691818237305
    7. '2' → logprob: -10.126691818237305
    8. '[' → logprob: -11.501691818237305
    9. '-' → logprob: -12.001691818237305
    10. '```' → logprob: -12.751691818237305

Token 344: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004765222780406475
    2. ' ' → logprob: -5.504765033721924
    3. '3' → logprob: -7.379765033721924
    4. '1' → logprob: -10.254765510559082
    5. '4' → logprob: -11.004765510559082
    6. '  ' → logprob: -12.692265510559082
    7. '   ' → logprob: -12.754765510559082
    8. '  
' → logprob: -14.004765510559082
    9. '   
' → logprob: -14.879765510559082
    10. '5' → logprob: -14.942265510559082

Token 345: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015002528380136937
    2. '3' → logprob: -9.000149726867676
    3. ' ' → logprob: -11.500149726867676
    4. '4' → logprob: -11.875149726867676
    5. '1' → logprob: -12.062649726867676
    6. '
' → logprob: -14.625149726867676
    7. '   ' → logprob: -14.750149726867676
    8. '۲' → logprob: -15.187649726867676
    9. '  
' → logprob: -15.250149726867676
    10. '```' → logprob: -15.500149726867676

Token 346: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17240479588508606
    2. ')
' → logprob: -1.9224047660827637
    3. '   ' → logprob: -4.422404766082764
    4. 'print' → logprob: -9.797405242919922
    5. '```' → logprob: -10.922405242919922
    6. '
' → logprob: -12.172405242919922
    7. '       ' → logprob: -12.672405242919922
    8. ' )' → logprob: -12.797405242919922
    9. '``' → logprob: -13.172405242919922
    10. '  ' → logprob: -13.297405242919922

Token 347: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06302438676357269
    2. '   ' → logprob: -2.9380242824554443
    3. 'for' → logprob: -5.563024520874023
    4. '       ' → logprob: -6.438024520874023
    5. '<|end|>' → logprob: -7.063024520874023
    6. 'input' → logprob: -7.438024520874023
    7. '```' → logprob: -7.938024520874023
    8. ' print' → logprob: -7.938024520874023
    9. ' for' → logprob: -8.188024520874023
    10. '    ' → logprob: -9.813024520874023

Token 348: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07585322111845016
    2. 'input' → logprob: -2.700853109359741
    3. '3' → logprob: -5.70085334777832
    4. 'for' → logprob: -6.82585334777832
    5. '4' → logprob: -6.95085334777832
    6. '   ' → logprob: -7.95085334777832
    7. '(input' → logprob: -9.82585334777832
    8. '1' → logprob: -10.07585334777832
    9. '2' → logprob: -10.70085334777832
    10. '(' → logprob: -11.45085334777832

Token 349: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01622614823281765
    2. '(' → logprob: -4.141226291656494
    3. 'input' → logprob: -8.891225814819336
    4. '3' → logprob: -9.891225814819336
    5. '2' → logprob: -13.766225814819336
    6. '4' → logprob: -14.016225814819336
    7. '1' → logprob: -14.641225814819336
    8. '((' → logprob: -14.891225814819336
    9. '[input' → logprob: -15.266225814819336
    10. '(iter' → logprob: -15.766225814819336

Token 350: '_value' (ID: 6734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007008163724094629
    2. ' +' → logprob: -5.132008075714111
    3. '_value' → logprob: -6.882008075714111
    4. 'value' → logprob: -9.88200855255127
    5. 'Value' → logprob: -14.38200855255127
    6. ' value' → logprob: -15.25700855255127
    7. '```' → logprob: -15.50700855255127
    8. '2' → logprob: -16.007007598876953
    9. ',' → logprob: -16.132007598876953
    10. '(' → logprob: -16.257007598876953

Token 351: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20265308022499084
    2. '+' → logprob: -1.7026530504226685
    3. ',' → logprob: -7.202652931213379
    4. '+,' → logprob: -8.077652931213379
    5. '-' → logprob: -9.827652931213379
    6. ' ,' → logprob: -10.077652931213379
    7. ' -' → logprob: -10.327652931213379
    8. '+
' → logprob: -10.827652931213379
    9. ' ' → logprob: -11.077652931213379
    10. ' +
' → logprob: -11.702652931213379

Token 352: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005701907211914659
    2. '1' → logprob: -8.125570297241211
    3. ' ' → logprob: -8.250570297241211
    4. '3' → logprob: -11.500570297241211
    5. '   ' → logprob: -14.375570297241211
    6. 'input' → logprob: -14.500570297241211
    7. '           ' → logprob: -14.875570297241211
    8. '
' → logprob: -15.000570297241211
    9. '       ' → logprob: -15.125570297241211
    10. '     ' → logprob: -15.875570297241211

Token 353: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002556638326495886
    2. '3' → logprob: -6.002556800842285
    3. ' ' → logprob: -10.502556800842285
    4. '1' → logprob: -10.752556800842285
    5. '4' → logprob: -11.252556800842285
    6. '
' → logprob: -12.002556800842285
    7. '   ' → logprob: -12.815056800842285
    8. '۲' → logprob: -14.315056800842285
    9. '	' → logprob: -14.377556800842285
    10. '5' → logprob: -14.377556800842285

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000891332805622369
    2. ',input' → logprob: -7.250891208648682
    3. ' ,' → logprob: -8.75089168548584
    4. ',
' → logprob: -12.00089168548584
    5. ')' → logprob: -12.12589168548584
    6. ',end' → logprob: -12.37589168548584
    7. '   ' → logprob: -13.25089168548584
    8. 'input' → logprob: -14.00089168548584
    9. '1' → logprob: -14.62589168548584
    10. '`,' → logprob: -14.62589168548584

Token 355: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.046474389731884
    2. '1' → logprob: -3.1714744567871094
    3. ' input' → logprob: -6.046474456787109
    4. '3' → logprob: -7.171474456787109
    5. '   ' → logprob: -8.79647445678711
    6. '2' → logprob: -9.29647445678711
    7. ' ' → logprob: -10.04647445678711
    8. '(input' → logprob: -11.17147445678711
    9. '<input' → logprob: -11.54647445678711
    10. '4' → logprob: -12.29647445678711

Token 356: '_value' (ID: 6734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16132614016532898
    2. ' +' → logprob: -1.9113261699676514
    3. ')' → logprob: -7.911325931549072
    4. '1' → logprob: -8.66132640838623
    5. '3' → logprob: -8.91132640838623
    6. '-' → logprob: -9.41132640838623
    7. '4' → logprob: -9.41132640838623
    8. ' ' → logprob: -10.03632640838623
    9. '```' → logprob: -10.16132640838623
    10. '<|end|>' → logprob: -10.28632640838623

Token 357: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08900457620620728
    2. ' +' → logprob: -2.4640045166015625
    3. '-' → logprob: -10.464004516601562
    4. ')' → logprob: -11.589004516601562
    5. '+
' → logprob: -11.964004516601562
    6. ' -' → logprob: -12.214004516601562
    7. '3' → logprob: -12.214004516601562
    8. ' ' → logprob: -12.964004516601562
    9. ' +
' → logprob: -13.339004516601562
    10. '[' → logprob: -14.089004516601562

Token 358: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002547719981521368
    2. ' ' → logprob: -6.002547740936279
    3. '1' → logprob: -9.752547264099121
    4. '4' → logprob: -11.502547264099121
    5. '2' → logprob: -13.252547264099121
    6. '   ' → logprob: -14.377547264099121
    7. '  ' → logprob: -14.377547264099121
    8. '<|end|>' → logprob: -15.002547264099121
    9. '...' → logprob: -16.502548217773438
    10. '5' → logprob: -16.565048217773438

Token 359: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0002558561391197145
    2. ' ' → logprob: -8.375255584716797
    3. '1' → logprob: -10.750255584716797
    4. '4' → logprob: -12.750255584716797
    5. '2' → logprob: -15.250255584716797
    6. '   ' → logprob: -15.375255584716797
    7. '  ' → logprob: -16.437755584716797
    8. '```' → logprob: -16.750255584716797
    9. '۳' → logprob: -16.812755584716797
    10. '  
' → logprob: -17.125255584716797

Token 360: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03157145902514458
    2. '   ' → logprob: -3.656571388244629
    3. ')
' → logprob: -5.281571388244629
    4. '```' → logprob: -9.406571388244629
    5. '       ' → logprob: -10.156571388244629
    6. 'for' → logprob: -11.406571388244629
    7. '
' → logprob: -11.531571388244629
    8. '<|end|>' → logprob: -11.781571388244629
    9. '	' → logprob: -12.406571388244629
    10. ' )' → logprob: -12.656571388244629

Token 361: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03245396539568901
    2. ' for' → logprob: -3.907454013824463
    3. '	for' → logprob: -5.282454013824463
    4. '   ' → logprob: -6.032454013824463
    5. '```' → logprob: -6.032454013824463
    6. 'print' → logprob: -6.657454013824463
    7. '       ' → logprob: -8.157453536987305
    8. '<|end|>' → logprob: -9.282453536987305
    9. '
' → logprob: -9.532453536987305
    10. '    
' → logprob: -9.657453536987305

Token 362: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007299802266061306
    2. 'print' → logprob: -5.132299900054932
    3. ' for' → logprob: -6.757299900054932
    4. '```' → logprob: -9.382299423217773
    5. '<|end|>' → logprob: -10.257299423217773
    6. '   ' → logprob: -10.257299423217773
    7. '	for' → logprob: -10.757299423217773
    8. '    
' → logprob: -12.132299423217773
    9. '       ' → logprob: -12.382299423217773
    10. ')' → logprob: -12.882299423217773

Token 363: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.1785026639699936
    2. ' loop' → logprob: -2.1785025596618652
    3. 'i' → logprob: -3.8035025596618652
    4. ' i' → logprob: -4.428502559661865
    5. 'iteration' → logprob: -5.678502559661865
    6. '_' → logprob: -5.803502559661865
    7. ' iteration' → logprob: -6.303502559661865
    8. 'index' → logprob: -6.303502559661865
    9. 'range' → logprob: -7.053502559661865
    10. 'input' → logprob: -7.178502559661865

Token 364: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00019221604452468455
    2. '_' → logprob: -9.125192642211914
    3. ' _' → logprob: -10.250192642211914
    4. 'index' → logprob: -10.625192642211914
    5. '_i' → logprob: -12.500192642211914
    6. '_in' → logprob: -12.500192642211914
    7. ' in' → logprob: -12.500192642211914
    8. 'in' → logprob: -12.750192642211914
    9. '_idx' → logprob: -12.750192642211914
    10. '_value' → logprob: -13.500192642211914

Token 365: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003195654833689332
    2. 'in' → logprob: -5.753195762634277
    3. ' ' → logprob: -11.378195762634277
    4. '	in' → logprob: -12.878195762634277
    5. 'n' → logprob: -13.628195762634277
    6. ' i' → logprob: -14.003195762634277
    7. '   ' → logprob: -14.628195762634277
    8. ' ' → logprob: -14.878195762634277
    9. ',' → logprob: -15.878195762634277
    10. '  ' → logprob: -16.12819480895996

Token 366: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859191179275513
    2. ' range' → logprob: -3.0485918521881104
    3. ' ' → logprob: -13.298591613769531
    4. '4' → logprob: -13.673591613769531
    5. '	range' → logprob: -14.673591613769531
    6. '3' → logprob: -15.298591613769531
    7. '   ' → logprob: -15.423591613769531
    8. '(range' → logprob: -15.548591613769531
    9. ' in' → logprob: -15.798591613769531
    10. '  ' → logprob: -16.04859161376953

Token 367: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.11314811557531357
    2. '(' → logprob: -2.2381482124328613
    3. '3' → logprob: -8.113147735595703
    4. ' ' → logprob: -11.488147735595703
    5. '   ' → logprob: -11.488147735595703
    6. ' (' → logprob: -12.988147735595703
    7. '(
' → logprob: -13.613147735595703
    8. '5' → logprob: -13.988147735595703
    9. '1' → logprob: -16.175647735595703
    10. 'input' → logprob: -16.175647735595703

Token 368: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.750011444091797
    3. '3' → logprob: -12.875011444091797
    4. '   ' → logprob: -14.875011444091797
    5. '(' → logprob: -15.250011444091797
    6. '5' → logprob: -16.625011444091797
    7. '۴' → logprob: -17.687511444091797
    8. '  ' → logprob: -17.750011444091797
    9. '```' → logprob: -17.875011444091797
    10. '1' → logprob: -18.000011444091797

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001613459608051926
    2. ',input' → logprob: -9.375161170959473
    3. ' ,' → logprob: -9.500161170959473
    4. ',
' → logprob: -14.500161170959473
    5. '   ' → logprob: -14.750161170959473
    6. ',int' → logprob: -16.37516212463379
    7. ',

' → logprob: -16.37516212463379
    8. 'input' → logprob: -16.50016212463379
    9. ')' → logprob: -16.62516212463379
    10. '‌,' → logprob: -16.75016212463379

Token 370: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024901647120714188
    2. ' input' → logprob: -6.002490043640137
    3. '3' → logprob: -12.252490043640137
    4. '   ' → logprob: -12.252490043640137
    5. '4' → logprob: -13.127490043640137
    6. '(input' → logprob: -13.502490043640137
    7. '
' → logprob: -14.877490043640137
    8. '2' → logprob: -15.002490043640137
    9. ' ' → logprob: -15.002490043640137
    10. 'output' → logprob: -15.877490043640137

Token 371: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0005551783833652735
    2. 'value' → logprob: -7.500555038452148
    3. '_' → logprob: -13.750555038452148
    4. '+' → logprob: -14.500555038452148
    5. ')' → logprob: -15.500555038452148
    6. '_val' → logprob: -16.37555503845215
    7. 'Value' → logprob: -16.50055503845215
    8. '_VALUE' → logprob: -16.75055503845215
    9. ' value' → logprob: -17.00055503845215
    10. '-value' → logprob: -17.25055503845215

Token 372: ' +' (ID: 659)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6915622353553772
    2. '):' → logprob: -0.9415622353553772
    3. '+' → logprob: -2.3165621757507324
    4. '   ' → logprob: -4.816562175750732
    5. ':' → logprob: -6.316562175750732
    6. ' +' → logprob: -8.31656265258789
    7. ' ):
' → logprob: -9.19156265258789
    8. ')' → logprob: -9.31656265258789
    9. ':
' → logprob: -9.94156265258789
    10. ',' → logprob: -9.94156265258789

Token 373: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006752623594366014
    2. '2' → logprob: -8.125675201416016
    3. ' ' → logprob: -8.250675201416016
    4. '3' → logprob: -9.125675201416016
    5. '4' → logprob: -12.125675201416016
    6. '   ' → logprob: -13.125675201416016
    7. '
' → logprob: -14.500675201416016
    8. '0' → logprob: -14.813175201416016
    9. ')' → logprob: -15.688175201416016
    10. '```' → logprob: -15.688175201416016

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020435559563338757
    2. '2' → logprob: -6.752043724060059
    3. '3' → logprob: -7.127043724060059
    4. '4' → logprob: -9.627043724060059
    5. ' ' → logprob: -12.877043724060059
    6. '   ' → logprob: -14.252043724060059
    7. '5' → logprob: -14.877043724060059
    8. '
' → logprob: -15.877043724060059
    9. '```' → logprob: -16.127042770385742
    10. '+' → logprob: -17.127042770385742

Token 375: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2832111716270447
    2. '):
' → logprob: -1.5332112312316895
    3. ':' → logprob: -3.5332112312316895
    4. '   ' → logprob: -6.6582112312316895
    5. ':
' → logprob: -8.283210754394531
    6. ')' → logprob: -11.283210754394531
    7. '       ' → logprob: -11.533210754394531
    8. '```' → logprob: -11.783210754394531
    9. '):
' → logprob: -12.158210754394531
    10. ',' → logprob: -12.658210754394531

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025522014126181602
    2. 'print' → logprob: -4.400522232055664
    3. ' print' → logprob: -4.525522232055664
    4. '   ' → logprob: -6.275522232055664
    5. '	print' → logprob: -8.900522232055664
    6. '```' → logprob: -10.775522232055664
    7. '(print' → logprob: -11.275522232055664
    8. '        
' → logprob: -11.650522232055664
    9. ' ' → logprob: -12.025522232055664
    10. '           ' → logprob: -12.525522232055664

Token 377: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6549402475357056
    2. 'print' (adapté à ' print') → logprob: -0.7799402475357056
    3. '       ' → logprob: -3.904940128326416
    4. '   ' → logprob: -6.779940128326416
    5. '           ' → logprob: -8.029940605163574
    6. '```' → logprob: -8.404940605163574
    7. '	print' → logprob: -9.404940605163574
    8. ' ' → logprob: -9.529940605163574
    9. ' ' → logprob: -10.154940605163574
    10. '    ' → logprob: -10.904940605163574

Token 378: '(' (ID: 7)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3439289629459381
    2. 'input' → logprob: -1.3439289331436157
    3. '(' → logprob: -4.468928813934326
    4. '(loop' → logprob: -4.593928813934326
    5. 'loop' → logprob: -4.968928813934326
    6. '1' → logprob: -6.468928813934326
    7. '2' → logprob: -10.093929290771484
    8. '3' → logprob: -10.593929290771484
    9. ' input' → logprob: -11.843929290771484
    10. '(iter' → logprob: -11.843929290771484

Token 379: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0033305182587355375
    2. 'loop' → logprob: -5.753330707550049
    3. '1' → logprob: -9.75333023071289
    4. ' input' → logprob: -9.75333023071289
    5. '(input' → logprob: -11.25333023071289
    6. '   ' → logprob: -11.50333023071289
    7. '2' → logprob: -12.12833023071289
    8. '3' → logprob: -13.62833023071289
    9. ' ' → logprob: -14.12833023071289
    10. 'print' → logprob: -14.37833023071289

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01818026416003704
    2. ' ,' → logprob: -4.0181803703308105
    3. ')' → logprob: -11.518179893493652
    4. '   ' → logprob: -11.893179893493652
    5. '	' → logprob: -12.893179893493652
    6. ' ' → logprob: -13.143179893493652
    7. ',
' → logprob: -13.268179893493652
    8. '    ' → logprob: -13.893179893493652
    9. '+' → logprob: -14.143179893493652
    10. '0' → logprob: -14.143179893493652

Token 381: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.00865286123007536
    2. ' loop' → logprob: -4.758652687072754
    3. 'input' → logprob: -11.133652687072754
    4. '(loop' → logprob: -11.383652687072754
    5. '   ' → logprob: -11.633652687072754
    6. ' ' → logprob: -13.758652687072754
    7. '  ' → logprob: -14.508652687072754
    8. '       ' → logprob: -14.633652687072754
    9. '.loop' → logprob: -15.008652687072754
    10. '    ' → logprob: -15.258652687072754

Token 382: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.500001907348633
    3. ' _' → logprob: -14.750001907348633
    4. 'index' → logprob: -15.125001907348633
    5. ')_' → logprob: -15.750001907348633
    6. '```' → logprob: -15.750001907348633
    7. ')' → logprob: -16.000001907348633
    8. '_idx' → logprob: -16.750001907348633
    9. 'Index' → logprob: -16.750001907348633
    10. '   ' → logprob: -16.750001907348633

Token 383: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005567413289099932
    2. ' +' → logprob: -6.13056755065918
    3. ')
' → logprob: -6.63056755065918
    4. '+' → logprob: -6.63056755065918
    5. ' )' → logprob: -7.25556755065918
    6. '   ' → logprob: -10.88056755065918
    7. ' )
' → logprob: -12.38056755065918
    8. '       ' → logprob: -13.75556755065918
    9. ' ' → logprob: -13.75556755065918
    10. '```' → logprob: -13.88056755065918

Token 384: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8359181880950928
    2. '       ' → logprob: -1.2109181880950928
    3. ' if' → logprob: -1.3359181880950928
    4. 'print' → logprob: -5.585918426513672
    5. '   ' → logprob: -6.710918426513672
    6. '	if' → logprob: -8.335918426513672
    7. ' ' → logprob: -9.085918426513672
    8. '<|end|>' → logprob: -9.335918426513672
    9. 'for' → logprob: -9.710918426513672
    10. ' print' → logprob: -9.835918426513672

Token 386: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.034259408712387085
    2. ' loop' → logprob: -3.40925931930542
    3. '(loop' → logprob: -7.40925931930542
    4. '   ' → logprob: -12.659259796142578
    5. 'input' → logprob: -12.909259796142578
    6. ' ' → logprob: -13.409259796142578
    7. '.loop' → logprob: -15.909259796142578
    8. '  ' → logprob: -15.909259796142578
    9. ' input' → logprob: -16.284259796142578
    10. '(' → logprob: -16.409259796142578

Token 387: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.0206720617134124e-05
    2. 'index' → logprob: -11.62501049041748
    3. 'loop' → logprob: -14.37501049041748
    4. '_' → logprob: -15.37501049041748
    5. 'Index' → logprob: -15.37501049041748
    6. '_loop' → logprob: -16.000009536743164
    7. '```' → logprob: -17.500009536743164
    8. '_INDEX' → logprob: -17.625009536743164
    9. '(loop' → logprob: -17.625009536743164
    10. '_value' → logprob: -17.750009536743164

Token 388: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.016075074672698975
    2. '%' → logprob: -4.141075134277344
    3. ' ' → logprob: -10.141075134277344
    4. ' ' → logprob: -15.141075134277344
    5. ' <=' → logprob: -15.266075134277344
    6. '```' → logprob: -15.266075134277344
    7. ')' → logprob: -15.641075134277344
    8. ' %
' → logprob: -16.141075134277344
    9. '[' → logprob: -16.516075134277344
    10. ',' → logprob: -16.516075134277344

Token 389: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004900033236481249
    2. ' ' → logprob: -7.625490188598633
    3. '3' → logprob: -14.687990188598633
    4. '1' → logprob: -15.187990188598633
    5. '```' → logprob: -15.312990188598633
    6. '4' → logprob: -15.437990188598633
    7. '==' → logprob: -15.812990188598633
    8. '
' → logprob: -16.000490188598633
    9. '   ' → logprob: -16.375490188598633
    10. '...' → logprob: -16.625490188598633

Token 390: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.600714161526412e-05
    2. ' ' → logprob: -9.500076293945312
    3. '3' → logprob: -14.625076293945312
    4. '4' → logprob: -15.375076293945312
    5. '
' → logprob: -16.000076293945312
    6. '```' → logprob: -16.000076293945312
    7. '  ' → logprob: -17.000076293945312
    8. '   ' → logprob: -17.000076293945312
    9. '==' → logprob: -17.687576293945312
    10. '1' → logprob: -18.125076293945312

Token 391: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16025276482105255
    2. '==' → logprob: -1.9102528095245361
    3. ' ' → logprob: -11.660252571105957
    4. '=' → logprob: -11.910252571105957
    5. ' ' → logprob: -13.035252571105957
    6. ')' → logprob: -13.160252571105957
    7. ' !=' → logprob: -13.285252571105957
    8. '==
' → logprob: -13.410252571105957
    9. ')==' → logprob: -13.535252571105957
    10. ' =' → logprob: -13.785252571105957

Token 392: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.313411146402359
    2. ' ' → logprob: -1.3134111166000366
    3. '1' → logprob: -9.438410758972168
    4. '2' → logprob: -9.938410758972168
    5. '==' → logprob: -11.063410758972168
    6. '```' → logprob: -12.813410758972168
    7. ' ==' → logprob: -13.563410758972168
    8. ' ' → logprob: -13.938410758972168
    9. ' 
' → logprob: -15.500910758972168
    10. '   ' → logprob: -15.875910758972168

Token 393: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033939589047804475
    2. '1' → logprob: -8.50033950805664
    3. ' ' → logprob: -9.00033950805664
    4. '==' → logprob: -11.37533950805664
    5. ' ==' → logprob: -14.62533950805664
    6. '2' → logprob: -15.12533950805664
    7. '```' → logprob: -16.25033950805664
    8. '=' → logprob: -16.75033950805664
    9. '==
' → logprob: -17.00033950805664
    10. '
' → logprob: -17.12533950805664

Token 394: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.193587526679039
    2. '           ' → logprob: -2.4435875415802
    3. ':
' → logprob: -2.4435875415802
    4. '               ' → logprob: -6.693587303161621
    5. '       ' → logprob: -7.068587303161621
    6. '<|end|>' → logprob: -9.943587303161621
    7. '   ' → logprob: -10.693587303161621
    8. '):' → logprob: -10.818587303161621
    9. '          ' → logprob: -10.943587303161621
    10. '):
' → logprob: -10.943587303161621

Token 395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2756403982639313
    2. '       ' → logprob: -1.5256403684616089
    3. '               ' → logprob: -4.150640487670898
    4. ' print' → logprob: -5.400640487670898
    5. 'print' → logprob: -5.900640487670898
    6. '   ' → logprob: -8.525640487670898
    7. '        ' → logprob: -10.025640487670898
    8. ' ' → logprob: -10.150640487670898
    9. '```' → logprob: -10.400640487670898
    10. ' ' → logprob: -11.150640487670898

Token 396: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16136255860328674
    2. ' print' → logprob: -1.9113625288009644
    3. '           ' → logprob: -6.911362648010254
    4. '               ' → logprob: -8.911362648010254
    5. '       ' → logprob: -13.286362648010254
    6. '	print' → logprob: -13.286362648010254
    7. '```' → logprob: -14.036362648010254
    8. '   ' → logprob: -14.536362648010254
    9. '(print' → logprob: -14.536362648010254
    10. '            ' → logprob: -14.786362648010254

Token 397: '(loop' (ID: 146562)
  Prédit: '(loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.0015506906202062964
    2. 'loop' → logprob: -6.626550674438477
    3. ' loop' → logprob: -8.501550674438477
    4. ' (' → logprob: -11.376550674438477
    5. '   ' → logprob: -12.001550674438477
    6. '(' → logprob: -13.376550674438477
    7. '1' → logprob: -14.751550674438477
    8. '           ' → logprob: -14.751550674438477
    9. ' ' → logprob: -14.876550674438477
    10. '(input' → logprob: -15.001550674438477

Token 398: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -8.709308167453855e-05
    2. 'index' → logprob: -9.375086784362793
    3. 'Index' → logprob: -14.500086784362793
    4. 'loop' → logprob: -14.500086784362793
    5. '_value' → logprob: -14.625086784362793
    6. '_' → logprob: -16.37508773803711
    7. '_,' → logprob: -16.50008773803711
    8. '   ' → logprob: -16.62508773803711
    9. '_INDEX' → logprob: -16.62508773803711
    10. '__' → logprob: -17.25008773803711

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005751936114393175
    2. ' ,' → logprob: -7.500575065612793
    3. '(loop' → logprob: -11.500575065612793
    4. ',
' → logprob: -12.625575065612793
    5. '+' → logprob: -12.875575065612793
    6. ',input' → logprob: -13.375575065612793
    7. ')' → logprob: -13.625575065612793
    8. '   ' → logprob: -14.250575065612793
    9. ' +' → logprob: -14.250575065612793
    10. ' loop' → logprob: -14.500575065612793

Token 400: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.3508121073246002
    2. ' loop' → logprob: -1.2258120775222778
    3. 'input' → logprob: -6.600811958312988
    4. '(loop' → logprob: -7.475811958312988
    5. ' input' → logprob: -7.975811958312988
    6. ' ' → logprob: -10.475811958312988
    7. '1' → logprob: -10.850811958312988
    8. '   ' → logprob: -10.975811958312988
    9. '2' → logprob: -11.600811958312988
    10. '    ' → logprob: -12.350811958312988

Token 401: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0005582740413956344
    2. '_value' → logprob: -8.375557899475098
    3. '+' → logprob: -8.625557899475098
    4. 'index' → logprob: -9.000557899475098
    5. '_input' → logprob: -11.875557899475098
    6. 'Index' → logprob: -12.625557899475098
    7. ' +' → logprob: -12.625557899475098
    8. '       ' → logprob: -13.875557899475098
    9. '_user' → logprob: -14.000557899475098
    10. 'value' → logprob: -14.125557899475098

Token 402: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4291689991950989
    2. '+' → logprob: -1.054168939590454
    3. '-' → logprob: -8.429168701171875
    4. ' -' → logprob: -8.679168701171875
    5. ',' → logprob: -9.929168701171875
    6. ' ' → logprob: -11.179168701171875
    7. ' ,' → logprob: -11.804168701171875
    8. ' plus' → logprob: -13.054168701171875
    9. '+,' → logprob: -13.429168701171875
    10. '+
' → logprob: -13.679168701171875

Token 403: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01169039960950613
    2. ' input' → logprob: -4.636690616607666
    3. '(input' → logprob: -6.261690616607666
    4. ' (' → logprob: -11.761690139770508
    5. ' ' → logprob: -12.136690139770508
    6. '1' → logprob: -12.636690139770508
    7. '<input' → logprob: -13.011690139770508
    8. '3' → logprob: -13.636690139770508
    9. '   ' → logprob: -13.761690139770508
    10. '[input' → logprob: -13.761690139770508

Token 404: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0015315281925722957
    2. '_' → logprob: -6.501531600952148
    3. ' _' → logprob: -10.876531600952148
    4. 'value' → logprob: -13.126531600952148
    5. '_input' → logprob: -13.126531600952148
    6. '_user' → logprob: -13.626531600952148
    7. '_val' → logprob: -13.626531600952148
    8. '```' → logprob: -14.001531600952148
    9. '_size' → logprob: -14.126531600952148
    10. ')_' → logprob: -14.876531600952148

Token 405: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0877094268798828
    2. ' -' → logprob: -1.4627094268798828
    3. ' +' → logprob: -1.5877094268798828
    4. '-' → logprob: -1.7127094268798828
    5. ')' → logprob: -3.087709426879883
    6. ' ' → logprob: -7.837709426879883
    7. '   ' → logprob: -8.212709426879883
    8. ' )' → logprob: -9.337709426879883
    9. '1' → logprob: -9.837709426879883
    10. '```' → logprob: -10.087709426879883

Token 406: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06921353936195374
    2. '2' → logprob: -2.819213628768921
    3. ' ' → logprob: -4.944213390350342
    4. '3' → logprob: -9.3192138671875
    5. '0' → logprob: -12.6942138671875
    6. '  ' → logprob: -14.1942138671875
    7. '4' → logprob: -14.3192138671875
    8. '  
' → logprob: -15.4442138671875
    9. '```' → logprob: -15.5692138671875
    10. '   ' → logprob: -15.5692138671875

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6342558264732361
    2. '2' → logprob: -0.7592558264732361
    3. '3' → logprob: -6.759255886077881
    4. ' ' → logprob: -7.634255886077881
    5. '0' → logprob: -12.259255409240723
    6. '4' → logprob: -12.884255409240723
    7. '   ' → logprob: -13.134255409240723
    8. '-' → logprob: -13.759255409240723
    9. '```' → logprob: -14.884255409240723
    10. '(' → logprob: -15.134255409240723

Token 408: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010411443654447794
    2. ')
' → logprob: -6.876040935516357
    3. '   ' → logprob: -12.876041412353516
    4. '       ' → logprob: -13.251041412353516
    5. ' )' → logprob: -13.376041412353516
    6. '           ' → logprob: -13.751041412353516
    7. '```' → logprob: -14.501041412353516
    8. ')

' → logprob: -15.251041412353516
    9. '+' → logprob: -15.376041412353516
    10. '               ' → logprob: -16.001041412353516

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.040025234222412
    2. 'else' → logprob: -1.040025234222412
    3. ' else' → logprob: -2.165025234222412
    4. '<|end|>' → logprob: -2.415025234222412
    5. ')' → logprob: -3.040025234222412
    6. '   ' → logprob: -3.665025234222412
    7. '           ' → logprob: -4.915025234222412
    8. '               ' → logprob: -5.915025234222412
    9. '```' → logprob: -6.415025234222412
    10. 'elif' → logprob: -6.790025234222412

Token 410: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4940553307533264
    2. 'else' (adapté à ' else') → logprob: -0.9940553307533264
    3. ' else' → logprob: -3.9940552711486816
    4. '   ' → logprob: -7.744055271148682
    5. '<|end|>' → logprob: -7.744055271148682
    6. '	else' → logprob: -8.61905574798584
    7. '	' → logprob: -9.24405574798584
    8. '```' → logprob: -9.49405574798584
    9. '           ' → logprob: -10.74405574798584
    10. ' ' → logprob: -10.86905574798584

Token 411: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40869811177253723
    2. ':' → logprob: -1.6586980819702148
    3. ':
' → logprob: -2.158698081970215
    4. '       ' → logprob: -3.658698081970215
    5. '               ' → logprob: -6.658698081970215
    6. '```' → logprob: -7.033698081970215
    7. '(print' → logprob: -7.283698081970215
    8. 'print' → logprob: -7.658698081970215
    9. '   ' → logprob: -9.033698081970215
    10. '(
' → logprob: -9.533698081970215

Token 412: '           ' (ID: 352)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5761478543281555
    2. 'print' → logprob: -0.8261478543281555
    3. '(print' → logprob: -8.57614803314209
    4. '```' → logprob: -11.20114803314209
    5. '.print' → logprob: -12.07614803314209
    6. '	print' → logprob: -15.57614803314209
    7. '           ' → logprob: -16.076147079467773
    8. '(' → logprob: -17.451147079467773
    9. '       ' → logprob: -17.576147079467773
    10. '_print' → logprob: -17.576147079467773

Token 413: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.7610454708337784e-05
    2. ' print' → logprob: -10.500027656555176
    3. '```' → logprob: -19.25002670288086
    4. '           ' → logprob: -19.37502670288086
    5. '(print' → logprob: -19.87502670288086
    6. '	print' → logprob: -20.37502670288086
    7. '.print' → logprob: -22.00002670288086
    8. '               ' → logprob: -23.12502670288086
    9. '       ' → logprob: -23.25002670288086
    10. '   ' → logprob: -23.37502670288086

Token 414: '(loop' (ID: 146562)
  Prédit: '(loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -3.583550642360933e-05
    2. '(' → logprob: -10.250036239624023
    3. 'loop' → logprob: -15.500036239624023
    4. '(
' → logprob: -16.000036239624023
    5. '(lo' → logprob: -17.000036239624023
    6. '(l' → logprob: -18.875036239624023
    7. '(lp' → logprob: -19.750036239624023
    8. '(log' → logprob: -20.000036239624023
    9. '(line' → logprob: -20.625036239624023
    10. '(print' → logprob: -20.750036239624023

Token 415: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -8.2994620242971e-06
    2. 'index' → logprob: -11.750008583068848
    3. 'loop' → logprob: -15.875008583068848
    4. 'Index' → logprob: -15.875008583068848
    5. '_value' → logprob: -17.00000762939453
    6. '```' → logprob: -17.37500762939453
    7. '_INDEX' → logprob: -17.50000762939453
    8. '_loop' → logprob: -17.75000762939453
    9. '_' → logprob: -18.62500762939453
    10. '(index' → logprob: -19.00000762939453

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023739055905025452
    2. ' ,' → logprob: -8.375237464904785
    3. ',
' → logprob: -12.375237464904785
    4. '<|end|>' → logprob: -14.125237464904785
    5. ')' → logprob: -14.375237464904785
    6. '   ' → logprob: -15.125237464904785
    7. '`,' → logprob: -15.625237464904785
    8. '           ' → logprob: -15.750237464904785
    9. '',' → logprob: -15.875237464904785
    10. '```' → logprob: -16.12523651123047

Token 417: ' loop' (ID: 11453)
  Prédit: ' loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.22588671743869781
    2. 'loop' → logprob: -1.6008867025375366
    3. '(loop' → logprob: -7.725886821746826
    4. ''' → logprob: -11.350886344909668
    5. ' ' → logprob: -11.600886344909668
    6. '"' → logprob: -12.475886344909668
    7. '.loop' → logprob: -12.850886344909668
    8. '_loop' → logprob: -14.100886344909668
    9. 'space' → logprob: -14.100886344909668
    10. '   ' → logprob: -14.475886344909668

Token 418: '_index' (ID: 7748)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06466412544250488
    2. ' +' → logprob: -3.189664125442505
    3. '_index' → logprob: -4.064663887023926
    4. '_value' → logprob: -6.314663887023926
    5. '_input' → logprob: -6.814663887023926
    6. '_' → logprob: -7.814663887023926
    7. ' ' → logprob: -7.939663887023926
    8. 'index' → logprob: -8.814663887023926
    9. 'input' → logprob: -9.189663887023926
    10. '   ' → logprob: -9.189663887023926

Token 419: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11290375888347626
    2. '+' → logprob: -2.2379038333892822
    3. ',' → logprob: -10.362903594970703
    4. '-' → logprob: -11.237903594970703
    5. ' ' → logprob: -11.237903594970703
    6. ' -' → logprob: -11.487903594970703
    7. ' ,' → logprob: -11.862903594970703
    8. ' +
' → logprob: -13.612903594970703
    9. ')' → logprob: -13.737903594970703
    10. '+
' → logprob: -14.237903594970703

Token 420: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47436830401420593
    2. 'input' → logprob: -0.9743683338165283
    3. '1' → logprob: -8.22436809539795
    4. ' ' → logprob: -10.97436809539795
    5. '2' → logprob: -12.72436809539795
    6. '(input' → logprob: -14.59936809539795
    7. 'space' → logprob: -14.59936809539795
    8. '3' → logprob: -14.59936809539795
    9. '=input' → logprob: -15.09936809539795
    10. '0' → logprob: -15.34936809539795

Token 421: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.7835754988482222e-05
    2. 'value' → logprob: -11.750018119812012
    3. '_input' → logprob: -12.250018119812012
    4. 'input' → logprob: -12.750018119812012
    5. '-' → logprob: -14.000018119812012
    6. '```' → logprob: -14.750018119812012
    7. '_size' → logprob: -14.875018119812012
    8. '+' → logprob: -15.500018119812012
    9. '-value' → logprob: -15.625018119812012
    10. '_' → logprob: -15.625018119812012

Token 422: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20193618535995483
    2. '-' → logprob: -1.7019362449645996
    3. '+' → logprob: -8.076935768127441
    4. ' +' → logprob: -9.201935768127441
    5. ' ' → logprob: -9.576935768127441
    6. ')' → logprob: -10.451935768127441
    7. '<|end|>' → logprob: -12.326935768127441
    8. '```' → logprob: -12.451935768127441
    9. '[' → logprob: -13.576935768127441
    10. '`' → logprob: -14.326935768127441

Token 423: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000282431225059554
    2. ' ' → logprob: -8.250282287597656
    3. '2' → logprob: -11.250282287597656
    4. '3' → logprob: -11.750282287597656
    5. '```' → logprob: -16.750282287597656
    6. '<|end|>' → logprob: -17.125282287597656
    7. '0' → logprob: -17.375282287597656
    8. '4' → logprob: -18.000282287597656
    9. '   ' → logprob: -18.250282287597656
    10. ' -' → logprob: -18.625282287597656

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.032919615507125854
    2. '2' → logprob: -3.6579196453094482
    3. '3' → logprob: -5.032919406890869
    4. ' ' → logprob: -9.532919883728027
    5. '0' → logprob: -12.282919883728027
    6. '4' → logprob: -14.907919883728027
    7. '-' → logprob: -15.282919883728027
    8. '```' → logprob: -16.65791893005371
    9. '   ' → logprob: -16.90791893005371
    10. '<|end|>' → logprob: -17.65791893005371

Token 425: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001417142222635448
    2. ')
' → logprob: -6.62641716003418
    3. '   ' → logprob: -10.00141716003418
    4. '       ' → logprob: -10.62641716003418
    5. '```' → logprob: -11.62641716003418
    6. '<|end|>' → logprob: -12.00141716003418
    7. '`)' → logprob: -13.50141716003418
    8. '()' → logprob: -14.00141716003418
    9. ' )' → logprob: -14.50141716003418
    10. '
' → logprob: -14.75141716003418


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 423
Tokens correctement prédits (1ère position, stricte): 185
Tokens correctement prédits (1ère position, avec adaptation): 204
Tokens correctement prédits (top 10): 383
Précision stricte (1ère position): 43.74%
Précision adaptée (1ère position): 48.23%
Précision (top 10): 90.54%
================================================================================
