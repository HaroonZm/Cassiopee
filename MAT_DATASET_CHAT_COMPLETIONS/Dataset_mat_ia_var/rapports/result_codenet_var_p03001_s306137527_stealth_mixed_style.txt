================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calculate_area_and_center():
    import sys
    W,H,X,Y = [int(i) for i in sys.stdin.readline().split()]
    def area(w,h): return w*h*0.5
    center_flag = 1 if float(W)/2==X and (lambda h,y: h/2==y)(H,Y) else 0
    print(area(W,H), center_flag)

calculate_area_and_center()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calculate' (ID: 17950)
  → Token d'amorce (pas de prédiction)

Token 2: '_area' (ID: 34097)
  → Token d'amorce (pas de prédiction)

Token 3: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006496516056358814
    2. '_' → logprob: -5.631496429443359
    3. '```' → logprob: -6.006496429443359
    4. '<|end|>' → logprob: -8.63149642944336
    5. '("("' → logprob: -10.00649642944336
    6. '_parent' → logprob: -10.13149642944336
    7. '\(' → logprob: -10.38149642944336
    8. ' (' → logprob: -11.00649642944336
    9. '(
' → logprob: -11.00649642944336
    10. '('' → logprob: -11.25649642944336

Token 4: '_center' (ID: 48737)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.033177733421325684
    2. 'per' → logprob: -4.408177852630615
    3. '_volume' → logprob: -4.658177852630615
    4. 'circ' → logprob: -4.908177852630615
    5. 'volume' → logprob: -6.158177852630615
    6. '_c' → logprob: -7.283177852630615
    7. ' perimeter' → logprob: -7.908177852630615
    8. '```' → logprob: -9.408177375793457
    9. 'calculate' → logprob: -9.533177375793457
    10. 'print' → logprob: -10.158177375793457

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08442641794681549
    2. '_' → logprob: -2.5844264030456543
    3. '```' → logprob: -6.209426403045654
    4. '(_:' → logprob: -6.584426403045654
    5. '(_' → logprob: -7.084426403045654
    6. '_:' → logprob: -7.459426403045654
    7. ' (' → logprob: -8.709426879882812
    8. '_(' → logprob: -9.584426879882812
    9. '():' → logprob: -10.084426879882812
    10. '(
' → logprob: -10.334426879882812

Token 6: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8457633852958679
    2. '```' → logprob: -1.8457634449005127
    3. '(' → logprob: -2.2207634449005127
    4. '   ' → logprob: -2.7207634449005127
    5. ':' → logprob: -2.8457634449005127
    6. '\n' → logprob: -2.9707634449005127
    7. ' 
' → logprob: -3.3457634449005127
    8. ''' → logprob: -3.9707634449005127
    9. '<|end|>' → logprob: -4.345763206481934
    10. ' ' → logprob: -4.345763206481934

Token 7: ' import' (ID: 1588)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2758594751358032
    2. '   ' → logprob: -2.2758593559265137
    3. '    ' → logprob: -3.1508593559265137
    4. 'a' → logprob: -4.150859355926514
    5. '(' → logprob: -4.275859355926514
    6. '\' → logprob: -4.400859355926514
    7. '```' → logprob: -4.400859355926514
    8. 'return' → logprob: -5.025859355926514
    9. '(space' → logprob: -5.400859355926514
    10. '<|end|>' → logprob: -5.900859355926514

Token 8: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.016549577936530113
    2. 'math' → logprob: -4.141549587249756
    3. ' numpy' → logprob: -7.641549587249756
    4. ' os' → logprob: -11.016549110412598
    5. 'numpy' → logprob: -11.516549110412598
    6. '_math' → logprob: -12.391549110412598
    7. '```' → logprob: -13.391549110412598
    8. '(math' → logprob: -14.141549110412598
    9. ' matplotlib' → logprob: -14.766549110412598
    10. '`' → logprob: -15.141549110412598

Token 9: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5143406987190247
    2. '```' → logprob: -1.6393406391143799
    3. '\' → logprob: -2.26434063911438
    4. '[' → logprob: -3.63934063911438
    5. '   ' → logprob: -4.264340877532959
    6. 'newline' → logprob: -4.514340877532959
    7. '_' → logprob: -5.014340877532959
    8. '
' → logprob: -5.014340877532959
    9. '\n' → logprob: -5.139340877532959
    10. '    
' → logprob: -5.139340877532959

Token 10: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.4807042181491852
    2. '    
' → logprob: -2.1057043075561523
    3. '\n' → logprob: -2.6057043075561523
    4. '```' → logprob: -3.1057043075561523
    5. '   ' → logprob: -3.2307043075561523
    6. 'newline' → logprob: -3.6057043075561523
    7. '
' → logprob: -4.105704307556152
    8. '<|end|>' → logprob: -4.230704307556152
    9. '    ' → logprob: -4.855704307556152
    10. ' ' → logprob: -5.355704307556152

Token 11: ' W' (ID: 486)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0713015794754028
    2. '\n' → logprob: -1.5713015794754028
    3. '    
' → logprob: -1.9463015794754028
    4. '
' → logprob: -2.6963014602661133
    5. '```' → logprob: -2.6963014602661133
    6. '    ' → logprob: -3.4463014602661133
    7. '   ' → logprob: -3.4463014602661133
    8. ' 
' → logprob: -3.6963014602661133
    9. '     
' → logprob: -4.071301460266113
    10. 'newline' → logprob: -4.196301460266113

Token 12: ',H' (ID: 94400)
  Prédit: 'idth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idth' → logprob: -0.6379715800285339
    2. 'IDTH' → logprob: -1.2629716396331787
    3. ',' → logprob: -2.0129716396331787
    4. '=' → logprob: -3.6379716396331787
    5. ' =' → logprob: -4.2629714012146
    6. '_' → logprob: -5.6379714012146
    7. '   ' → logprob: -5.6379714012146
    8. '.' → logprob: -6.6379714012146
    9. '[' → logprob: -6.7629714012146
    10. 'H' → logprob: -7.3879714012146

Token 13: ',X' (ID: 83943)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5659077763557434
    2. ' =' → logprob: -1.3159077167510986
    3. ',' → logprob: -1.8159077167510986
    4. ' ,' → logprob: -7.065907955169678
    5. ')' → logprob: -8.44090747833252
    6. '   ' → logprob: -9.31590747833252
    7. ' ' → logprob: -11.06590747833252
    8. '<|end|>' → logprob: -11.19090747833252
    9. '    ' → logprob: -12.19090747833252
    10. '  ' → logprob: -12.56590747833252

Token 14: ',Y' (ID: 71464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4776458144187927
    2. ',Y' → logprob: -0.9776458144187927
    3. ',W' → logprob: -6.3526458740234375
    4. ' ,' → logprob: -7.6026458740234375
    5. ',y' → logprob: -8.352645874023438
    6. ',P' → logprob: -8.602645874023438
    7. ',I' → logprob: -8.727645874023438
    8. ',O' → logprob: -9.227645874023438
    9. ',S' → logprob: -9.352645874023438
    10. ',Z' → logprob: -9.727645874023438

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8704352378845215
    2. ' =' → logprob: -1.1204352378845215
    3. ',' → logprob: -1.3704352378845215
    4. ' ,' → logprob: -6.9954352378845215
    5. ')' → logprob: -9.49543571472168
    6. '   ' → logprob: -10.99543571472168
    7. ' ' → logprob: -11.24543571472168
    8. '<|end|>' → logprob: -11.37043571472168
    9. '  ' → logprob: -12.49543571472168
    10. ',W' → logprob: -12.68293571472168

Token 16: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04001685976982117
    2. 'map' → logprob: -3.2900168895721436
    3. ' list' → logprob: -6.5400166511535645
    4. ' [' → logprob: -8.415017127990723
    5. ' sys' → logprob: -9.165017127990723
    6. '[' → logprob: -9.290017127990723
    7. 'list' → logprob: -9.915017127990723
    8. ' ' → logprob: -10.790017127990723
    9. ' input' → logprob: -11.665017127990723
    10. '   ' → logprob: -12.040017127990723

Token 17: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04487219825387001
    2. ' int' → logprob: -3.169872283935547
    3. '*' → logprob: -6.419872283935547
    4. '   ' → logprob: -9.169872283935547
    5. 'float' → logprob: -9.794872283935547
    6. '```' → logprob: -11.169872283935547
    7. ']int' → logprob: -11.294872283935547
    8. ' float' → logprob: -11.544872283935547
    9. '  ' → logprob: -11.669872283935547
    10. ' ' → logprob: -11.919872283935547

Token 18: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4787651300430298
    2. '(i' → logprob: -0.9787651300430298
    3. '(s' → logprob: -6.10376501083374
    4. '(sys' → logprob: -7.60376501083374
    5. '(token' → logprob: -7.85376501083374
    6. ']' → logprob: -7.97876501083374
    7. '()]' → logprob: -8.228765487670898
    8. '(' → logprob: -8.603765487670898
    9. '(item' → logprob: -8.728765487670898
    10. '(n' → logprob: -9.103765487670898

Token 19: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07737882435321808
    2. '()' → logprob: -3.952378749847412
    3. '(x' → logprob: -3.952378749847412
    4. ' for' → logprob: -4.577378749847412
    5. '(sys' → logprob: -4.702378749847412
    6. 'for' → logprob: -5.202378749847412
    7. '())' → logprob: -5.577378749847412
    8. '(input' → logprob: -5.952378749847412
    9. '(' → logprob: -6.327378749847412
    10. '(s' → logprob: -7.077378749847412

Token 20: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.588749885559082
    2. 'for' → logprob: -1.588749885559082
    3. '(sys' → logprob: -1.588749885559082
    4. ')' → logprob: -4.838749885559082
    5. ']' → logprob: -4.963749885559082
    6. '(input' → logprob: -5.213749885559082
    7. '(' → logprob: -5.338749885559082
    8. 'input' → logprob: -6.088749885559082
    9. 'sys' → logprob: -6.338749885559082
    10. '()]' → logprob: -6.713749885559082

Token 21: ' i' (ID: 575)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.003937106113880873
    2. 'sys' → logprob: -5.878937244415283
    3. ' input' → logprob: -7.128937244415283
    4. ' ' → logprob: -9.503936767578125
    5. ' system' → logprob: -9.503936767578125
    6. ' in' → logprob: -9.628936767578125
    7. '=sys' → logprob: -10.503936767578125
    8. 'input' → logprob: -10.628936767578125
    9. ' W' → logprob: -11.378936767578125
    10. '	sys' → logprob: -11.503936767578125

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016087394207715988
    2. 'in' → logprob: -4.891087532043457
    3. '(' → logprob: -6.141087532043457
    4. 'input' → logprob: -6.516087532043457
    5. ' sys' → logprob: -6.766087532043457
    6. ' ' → logprob: -6.891087532043457
    7. ' input' → logprob: -7.016087532043457
    8. 'sys' → logprob: -7.891087532043457
    9. '(sys' → logprob: -8.016087532043457
    10. '=sys' → logprob: -8.266087532043457

Token 23: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5761035680770874
    2. ' sys' → logprob: -0.8261035680770874
    3. 'input' → logprob: -8.951103210449219
    4. ' input' → logprob: -10.576103210449219
    5. '(sys' → logprob: -12.076103210449219
    6. '=sys' → logprob: -13.201103210449219
    7. '	sys' → logprob: -13.951103210449219
    8. ' ' → logprob: -15.576103210449219
    9. '```' → logprob: -16.07610321044922
    10. 'system' → logprob: -16.57610321044922

Token 24: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4782947599887848
    2. '.argv' → logprob: -0.9782947301864624
    3. '.' → logprob: -5.478294849395752
    4. ' .' → logprob: -11.103294372558594
    5. '.readline' → logprob: -12.103294372558594
    6. '._' → logprob: -12.728294372558594
    7. '.stdout' → logprob: -12.728294372558594
    8. '.std' → logprob: -13.603294372558594
    9. 'stdin' → logprob: -14.103294372558594
    10. '.st' → logprob: -14.103294372558594

Token 25: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.717296517104842e-05
    2. '.' → logprob: -10.375057220458984
    3. '.readlines' → logprob: -10.750057220458984
    4. '.read' → logprob: -12.750057220458984
    5. ' .' → logprob: -14.125057220458984
    6. '].' → logprob: -15.125057220458984
    7. ']' → logprob: -15.125057220458984
    8. ' readline' → logprob: -15.250057220458984
    9. 'read' → logprob: -17.625057220458984
    10. '().' → logprob: -18.000057220458984

Token 26: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.029206376522779465
    2. '()' → logprob: -4.029206275939941
    3. '().' → logprob: -4.529206275939941
    4. '())' → logprob: -9.029206275939941
    5. '()].' → logprob: -9.904206275939941
    6. '()][' → logprob: -10.779206275939941
    7. '(' → logprob: -12.904206275939941
    8. '()[' → logprob: -12.904206275939941
    9. ' ()' → logprob: -13.029206275939941
    10. '()]
' → logprob: -13.279206275939941

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6335327625274658
    2. 'strip' → logprob: -0.8835327625274658
    3. 'rstrip' → logprob: -2.883532762527466
    4. ' split' → logprob: -10.758532524108887
    5. ' strip' → logprob: -12.383532524108887
    6. 'read' → logprob: -12.883532524108887
    7. 'rs' → logprob: -14.258532524108887
    8. 'spl' → logprob: -15.383532524108887
    9. ' ' → logprob: -15.633532524108887
    10. '```' → logprob: -16.133533477783203

Token 28: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.023495977744460106
    2. '())' → logprob: -4.148496150970459
    3. '()' → logprob: -5.023496150970459
    4. '(' → logprob: -7.398496150970459
    5. '('' → logprob: -8.6484956741333
    6. ')]' → logprob: -10.6484956741333
    7. ']' → logprob: -11.2734956741333
    8. '()][' → logprob: -12.1484956741333
    9. '()))' → logprob: -12.3984956741333
    10. '()],' → logprob: -12.7734956741333

Token 29: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9238545298576355
    2. '    
' → logprob: -1.5488545894622803
    3. '   ' → logprob: -1.6738545894622803
    4. '\n' → logprob: -2.7988545894622803
    5. ' 
' → logprob: -3.6738545894622803
    6. '   
' → logprob: -3.7988545894622803
    7. '```' → logprob: -3.7988545894622803
    8. '  
' → logprob: -4.423854351043701
    9. 'return' → logprob: -4.923854351043701
    10. '' → logprob: -5.048854351043701

Token 30: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0854133367538452
    2. '\n' → logprob: -1.0854133367538452
    3. 'area' → logprob: -1.9604133367538452
    4. ' 
' → logprob: -2.7104134559631348
    5. ' area' → logprob: -3.9604134559631348
    6. '    
' → logprob: -4.210413455963135
    7. 'return' → logprob: -4.335413455963135
    8. 'a' → logprob: -4.585413455963135
    9. 'n' → logprob: -4.835413455963135
    10. '  
' → logprob: -5.085413455963135

Token 31: ' area' (ID: 3624)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.07564115524291992
    2. ' area' → logprob: -3.45064115524292
    3. ' rectangle' → logprob: -4.32564115524292
    4. '_area' → logprob: -4.95064115524292
    5. ' ' → logprob: -5.32564115524292
    6. ' compute' → logprob: -5.70064115524292
    7. '_' → logprob: -5.95064115524292
    8. ' get' → logprob: -6.70064115524292
    9. ' main' → logprob: -6.95064115524292
    10. ' calc' → logprob: -7.07564115524292

Token 32: '(w' (ID: 7420)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034205157309770584
    2. '_' → logprob: -3.409205198287964
    3. '_area' → logprob: -8.784205436706543
    4. 's' → logprob: -9.659205436706543
    5. '_(' → logprob: -10.159205436706543
    6. ' (' → logprob: -10.284205436706543
    7. '(A' → logprob: -10.659205436706543
    8. '_:' → logprob: -10.659205436706543
    9. '(_' → logprob: -10.784205436706543
    10. '():' → logprob: -11.034205436706543

Token 33: ',h' (ID: 42751)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6533136963844299
    2. ',' → logprob: -0.7783136963844299
    3. ')' → logprob: -4.403313636779785
    4. ' ):' → logprob: -5.903313636779785
    5. ' ,' → logprob: -5.903313636779785
    6. ',w' → logprob: -7.403313636779785
    7. '*' → logprob: -7.528313636779785
    8. ' ' → logprob: -8.153313636779785
    9. '   ' → logprob: -8.278313636779785
    10. ' *' → logprob: -8.403313636779785

Token 34: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004236435634084046
    2. ')' → logprob: -8.125423431396484
    3. ' ):' → logprob: -9.375423431396484
    4. ',' → logprob: -10.500423431396484
    5. '   ' → logprob: -12.625423431396484
    6. '):
' → logprob: -12.625423431396484
    7. ':' → logprob: -13.250423431396484
    8. ' ' → logprob: -13.375423431396484
    9. '),' → logprob: -14.000423431396484
    10. '*' → logprob: -14.250423431396484

Token 35: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2982441782951355
    2. '   ' → logprob: -1.5482442378997803
    3. '<|end|>' → logprob: -3.7982442378997803
    4. '    ' → logprob: -4.298243999481201
    5. ':' → logprob: -5.798243999481201
    6. ' ' → logprob: -6.298243999481201
    7. '\n' → logprob: -7.548243999481201
    8. ':return' → logprob: -7.548243999481201
    9. ' return' → logprob: -7.673243999481201
    10. ' 
' → logprob: -7.923243999481201

Token 36: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.043026361614465714
    2. 'w' → logprob: -3.1680264472961426
    3. ' ' → logprob: -10.668025970458984
    4. '0' → logprob: -13.668025970458984
    5. ' ' → logprob: -15.168025970458984
    6. ' (' → logprob: -15.293025970458984
    7. '1' → logprob: -15.293025970458984
    8. '(w' → logprob: -15.418025970458984
    9. '```' → logprob: -15.418025970458984
    10. '`' → logprob: -15.605525970458984

Token 37: '*h' (ID: 139295)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.281311959028244
    2. ' *' → logprob: -1.4063119888305664
    3. ' ' → logprob: -9.656311988830566
    4. '*h' → logprob: -9.906311988830566
    5. '**' → logprob: -11.031311988830566
    6. '*w' → logprob: -11.531311988830566
    7. ' **' → logprob: -12.531311988830566
    8. ' ' → logprob: -12.781311988830566
    9. '*y' → logprob: -13.406311988830566
    10. '   ' → logprob: -13.906311988830566

Token 38: '*' (ID: 9)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5431658029556274
    2. '   ' → logprob: -1.2931658029556274
    3. '    
' → logprob: -2.168165683746338
    4. '<|end|>' → logprob: -4.293165683746338
    5. '\n' → logprob: -5.668165683746338
    6. '' → logprob: -5.668165683746338
    7. '  
' → logprob: -6.043165683746338
    8. ' 
' → logprob: -6.418165683746338
    9. '
' → logprob: -7.168165683746338
    10. '   
' → logprob: -7.293165683746338

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06332665681838989
    2. ' ' → logprob: -3.438326597213745
    3. '2' → logprob: -4.438326835632324
    4. '.' → logprob: -4.563326835632324
    5. '1' → logprob: -5.063326835632324
    6. ' .' → logprob: -7.688326835632324
    7. '   ' → logprob: -10.438326835632324
    8. '3' → logprob: -10.563326835632324
    9. '4' → logprob: -11.000826835632324
    10. '(' → logprob: -11.313326835632324

Token 40: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.572941179503687e-05
    2. '1' → logprob: -10.875045776367188
    3. ' .' → logprob: -12.125045776367188
    4. '0' → logprob: -12.500045776367188
    5. ' ' → logprob: -12.875045776367188
    6. '.

' → logprob: -13.125045776367188
    7. '.
' → logprob: -13.125045776367188
    8. '+' → logprob: -13.500045776367188
    9. '.)' → logprob: -13.625045776367188
    10. '2' → logprob: -13.750045776367188

Token 41: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.694766489090398e-05
    2. '50' → logprob: -10.625066757202148
    3. '2' → logprob: -10.750066757202148
    4. '25' → logprob: -11.875066757202148
    5. '```' → logprob: -13.187566757202148
    6. '0' → logprob: -13.250066757202148
    7. 'five' → logprob: -13.562566757202148
    8. '+' → logprob: -13.687566757202148
    9. '6' → logprob: -14.375066757202148
    10. ' ' → logprob: -14.375066757202148

Token 42: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30009958148002625
    2. '   ' → logprob: -1.9250996112823486
    3. '\n' → logprob: -3.0500996112823486
    4. '    
' → logprob: -3.1750996112823486
    5. '' → logprob: -5.3000993728637695
    6. ' 
' → logprob: -5.5500993728637695
    7. '
' → logprob: -5.6750993728637695
    8. '  
' → logprob: -6.0500993728637695
    9. '<|end|>' → logprob: -6.1750993728637695
    10. '   
' → logprob: -6.3000993728637695

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9032194018363953
    2. '   ' → logprob: -1.52821946144104
    3. '    
' → logprob: -1.77821946144104
    4. '' → logprob: -2.52821946144104
    5. '\n' → logprob: -2.90321946144104
    6. '  
' → logprob: -4.278219223022461
    7. '\' → logprob: -4.903219223022461
    8. 'return' → logprob: -5.028219223022461
    9. '   
' → logprob: -5.153219223022461
    10. ',
' → logprob: -5.153219223022461

Token 44: ' center' (ID: 6170)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03844581916928291
    2. '    
' → logprob: -4.413445949554443
    3. '\n' → logprob: -5.163445949554443
    4. '   ' → logprob: -5.288445949554443
    5. '
' → logprob: -5.538445949554443
    6. '  
' → logprob: -5.663445949554443
    7. ' 
' → logprob: -5.913445949554443
    8. 'return' → logprob: -6.663445949554443
    9. '' → logprob: -7.538445949554443
    10. '   
' → logprob: -7.663445949554443

Token 45: '_flag' (ID: 25269)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.849082350730896
    2. '_x' → logprob: -1.349082350730896
    3. '_' → logprob: -1.599082350730896
    4. ' =' → logprob: -2.4740824699401855
    5. '=' → logprob: -4.2240824699401855
    6. ' (' → logprob: -5.5990824699401855
    7. 'X' → logprob: -5.5990824699401855
    8. 'x' → logprob: -6.9740824699401855
    9. '(x' → logprob: -7.7240824699401855
    10. '_(' → logprob: -7.8490824699401855

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4345878064632416
    2. '=' → logprob: -1.059587836265564
    3. 's' → logprob: -5.1845879554748535
    4. '_' → logprob: -9.184587478637695
    5. ' ' → logprob: -9.309587478637695
    6. ' ==' → logprob: -10.684587478637695
    7. '  ' → logprob: -11.434587478637695
    8. ')' → logprob: -11.559587478637695
    9. '   ' → logprob: -12.184587478637695
    10. '_=' → logprob: -12.434587478637695

Token 47: ' ' (ID: 220)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6552112102508545
    2. 'False' → logprob: -1.6552112102508545
    3. ' True' → logprob: -2.1552112102508545
    4. ' W' → logprob: -3.0302112102508545
    5. ' (' → logprob: -3.4052112102508545
    6. 'True' → logprob: -3.9052112102508545
    7. '0' → logprob: -4.155211448669434
    8. ' X' → logprob: -4.155211448669434
    9. ' ' → logprob: -4.280211448669434
    10. 'W' → logprob: -5.280211448669434

Token 48: '1' (ID: 16)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.8227384686470032
    2. '(X' → logprob: -1.6977384090423584
    3. 'W' → logprob: -2.0727384090423584
    4. '(W' → logprob: -2.4477384090423584
    5. '1' → logprob: -3.0727384090423584
    6. ' (' → logprob: -3.6977384090423584
    7. 'True' → logprob: -3.6977384090423584
    8. ' X' → logprob: -4.1977386474609375
    9. '0' → logprob: -4.5727386474609375
    10. ' W' → logprob: -4.5727386474609375

Token 49: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37214478850364685
    2. '<|end|>' → logprob: -1.7471448183059692
    3. '
' → logprob: -2.8721446990966797
    4. '    
' → logprob: -3.4971446990966797
    5. '\n' → logprob: -4.12214469909668
    6. '   
' → logprob: -4.87214469909668
    7. '<|end|>' → logprob: -5.37214469909668
    8. ' 
' → logprob: -5.37214469909668
    9. ' ' → logprob: -5.62214469909668
    10. '  
' → logprob: -5.99714469909668

Token 50: ' float' (ID: 4428)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.5331250429153442
    2. ' W' → logprob: -1.6581250429153442
    3. 'X' → logprob: -1.7831250429153442
    4. 'W' → logprob: -4.033124923706055
    5. ' (' → logprob: -4.158124923706055
    6. '(' → logprob: -4.408124923706055
    7. ' ' → logprob: -5.283124923706055
    8. '2' → logprob: -6.033124923706055
    9. '(X' → logprob: -7.158124923706055
    10. '(W' → logprob: -8.783124923706055

Token 51: '(W' (ID: 26031)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.030458394438028336
    2. '(W' → logprob: -3.530458450317383
    3. 'X' → logprob: -8.030458450317383
    4. '(' → logprob: -9.030458450317383
    5. '((' → logprob: -9.155458450317383
    6. '(Y' → logprob: -9.530458450317383
    7. '(w' → logprob: -10.905458450317383
    8. '(x' → logprob: -10.905458450317383
    9. 'W' → logprob: -11.780458450317383
    10. '(H' → logprob: -11.780458450317383

Token 52: ')/' (ID: 11876)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.02196638286113739
    2. ')' → logprob: -4.646966457366943
    3. '*' → logprob: -4.896966457366943
    4. ' /' → logprob: -6.521966457366943
    5. ')==' → logprob: -6.896966457366943
    6. ')/' → logprob: -7.396966457366943
    7. '==' → logprob: -7.521966457366943
    8. '//' → logprob: -8.021965980529785
    9. '-' → logprob: -9.209465980529785
    10. ' ==' → logprob: -9.646965980529785

Token 53: '2' (ID: 17)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6285054683685303
    2. '2' → logprob: -0.8785054683685303
    3. '(' → logprob: -3.3785054683685303
    4. ' ' → logprob: -5.378505706787109
    5. ' H' → logprob: -5.628505706787109
    6. 'X' → logprob: -5.753505706787109
    7. ' (' → logprob: -5.878505706787109
    8. 'w' → logprob: -6.253505706787109
    9. 'h' → logprob: -7.378505706787109
    10. '4' → logprob: -9.25350570678711

Token 54: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23374934494495392
    2. '==' → logprob: -2.2337493896484375
    3. ' >=' → logprob: -2.7337493896484375
    4. ' >' → logprob: -4.3587493896484375
    5. '>=' → logprob: -4.4837493896484375
    6. '>' → logprob: -4.8587493896484375
    7. ' <=' → logprob: -6.2337493896484375
    8. ' ' → logprob: -6.9837493896484375
    9. '=' → logprob: -7.6087493896484375
    10. '<=' → logprob: -7.8587493896484375

Token 55: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.10058404505252838
    2. ' X' → logprob: -2.350584030151367
    3. 'W' → logprob: -8.600584030151367
    4. ' ' → logprob: -9.225584030151367
    5. ' W' → logprob: -9.975584030151367
    6. ' float' → logprob: -10.850584030151367
    7. 'float' → logprob: -11.475584030151367
    8. ' ' → logprob: -11.975584030151367
    9. '	X' → logprob: -12.475584030151367
    10. '>X' → logprob: -12.975584030151367

Token 56: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06337600946426392
    2. ' else' → logprob: -3.063375949859619
    3. 'and' → logprob: -4.313375949859619
    4. 'else' → logprob: -7.063375949859619
    5. ' ' → logprob: -7.813375949859619
    6. ' or' → logprob: -11.438376426696777
    7. '    ' → logprob: -11.563376426696777
    8. ' ' → logprob: -12.563376426696777
    9. '  ' → logprob: -13.563376426696777
    10. '0' → logprob: -13.563376426696777

Token 57: ' (' (ID: 350)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.004174083471298218
    2. 'float' → logprob: -5.50417423248291
    3. ' Y' → logprob: -9.87917423248291
    4. ' int' → logprob: -10.25417423248291
    5. ' ' → logprob: -12.50417423248291
    6. ' ' → logprob: -13.75417423248291
    7. 'int' → logprob: -14.00417423248291
    8. ' bool' → logprob: -14.37917423248291
    9. '	float' → logprob: -14.37917423248291
    10. '=float' → logprob: -14.37917423248291

Token 58: 'lambda' (ID: 35280)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.259231835603714
    2. ' float' → logprob: -1.5092318058013916
    3. 'H' → logprob: -5.884232044219971
    4. 'Y' → logprob: -6.134232044219971
    5. ' Y' → logprob: -6.884232044219971
    6. ')' → logprob: -8.009231567382812
    7. ' H' → logprob: -8.134231567382812
    8. '<|end|>' → logprob: -8.634231567382812
    9. '=float' → logprob: -9.009231567382812
    10. ' ' → logprob: -9.384231567382812

Token 59: ' h' (ID: 312)
  Prédit: ' Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.7491076588630676
    2. ' lambda' → logprob: -0.9991076588630676
    3. ' h' → logprob: -3.374107599258423
    4. ' w' → logprob: -3.624107599258423
    5. ' ' → logprob: -3.749107599258423
    6. 'lambda' → logprob: -3.999107599258423
    7. ' H' → logprob: -4.249107837677002
    8. 'Y' → logprob: -4.249107837677002
    9. ' y' → logprob: -4.499107837677002
    10. 'h' → logprob: -5.624107837677002

Token 60: ',y' (ID: 16103)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19346049427986145
    2. ',h' → logprob: -2.943460464477539
    3. ' :' → logprob: -3.068460464477539
    4. ',' → logprob: -3.193460464477539
    5. '):' → logprob: -4.943460464477539
    6. ' Y' → logprob: -5.443460464477539
    7. ':Y' → logprob: -5.443460464477539
    8. ')' → logprob: -5.568460464477539
    9. ',Y' → logprob: -5.818460464477539
    10. ':h' → logprob: -6.068460464477539

Token 61: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06576968729496002
    2. ' :' → logprob: -3.440769672393799
    3. ':y' → logprob: -3.565769672393799
    4. ' y' → logprob: -6.565769672393799
    5. ':h' → logprob: -7.440769672393799
    6. ':Y' → logprob: -7.690769672393799
    7. 'y' → logprob: -8.565770149230957
    8. ',y' → logprob: -9.190770149230957
    9. ':return' → logprob: -9.190770149230957
    10. ',' → logprob: -9.690770149230957

Token 62: ' h' (ID: 312)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3623245358467102
    2. ' h' → logprob: -2.1123244762420654
    3. 'y' → logprob: -2.3623244762420654
    4. 'h' → logprob: -2.7373244762420654
    5. ' abs' → logprob: -4.4873247146606445
    6. ' (' → logprob: -6.1123247146606445
    7. ' float' → logprob: -6.1123247146606445
    8. 'abs' → logprob: -6.2373247146606445
    9. '(y' → logprob: -6.6123247146606445
    10. '(h' → logprob: -6.9873247146606445

Token 63: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.00935734435915947
    2. ' /' → logprob: -4.759357452392578
    3. '==' → logprob: -8.134357452392578
    4. '//' → logprob: -9.009357452392578
    5. ' y' → logprob: -9.759357452392578
    6. '/y' → logprob: -9.884357452392578
    7. ' ==' → logprob: -10.009357452392578
    8. 'y' → logprob: -10.009357452392578
    9. ' ' → logprob: -10.509357452392578
    10. '>>' → logprob: -11.134357452392578

Token 64: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003648176556453109
    2. ' ' → logprob: -5.628648281097412
    3. '(' → logprob: -10.628647804260254
    4. '4' → logprob: -12.566147804260254
    5. '<|end|>' → logprob: -12.628647804260254
    6. '```' → logprob: -12.753647804260254
    7. '  ' → logprob: -12.816147804260254
    8. ' (' → logprob: -13.003647804260254
    9. '   ' → logprob: -13.316147804260254
    10. ',' → logprob: -14.066147804260254

Token 65: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.434381902217865
    2. ' ==' → logprob: -1.0593819618225098
    3. ')' → logprob: -5.68438196182251
    4. ')==' → logprob: -6.55938196182251
    5. ' )' → logprob: -8.309381484985352
    6. ')y' → logprob: -8.809381484985352
    7. ' y' → logprob: -9.309381484985352
    8. 'y' → logprob: -9.934381484985352
    9. '==(' → logprob: -10.059381484985352
    10. '()==' → logprob: -10.309381484985352

Token 66: 'y' (ID: 88)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.08701802790164948
    2. 'y' → logprob: -2.9620180130004883
    3. ' Y' → logprob: -3.5870180130004883
    4. ' y' → logprob: -5.587018013000488
    5. ' (' → logprob: -10.087018013000488
    6. ')' → logprob: -10.462018013000488
    7. '(y' → logprob: -10.587018013000488
    8. 'float' → logprob: -10.712018013000488
    9. '(' → logprob: -10.962018013000488
    10. 'int' → logprob: -11.337018013000488

Token 67: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.07047639787197113
    2. ')' → logprob: -3.4454762935638428
    3. '(Y' → logprob: -3.4454762935638428
    4. '(H' → logprob: -5.820476531982422
    5. ' )(' → logprob: -7.945476531982422
    6. '):' → logprob: -8.195476531982422
    7. '   ' → logprob: -9.070476531982422
    8. '(' → logprob: -9.320476531982422
    9. ')(
' → logprob: -9.945476531982422
    10. '))(' → logprob: -10.070476531982422

Token 68: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.004715634044259787
    2. 'Y' → logprob: -5.754715442657471
    3. ' H' → logprob: -6.504715442657471
    4. '<|end|>' → logprob: -10.504715919494629
    5. ' Y' → logprob: -12.379715919494629
    6. ',H' → logprob: -13.379715919494629
    7. '(H' → logprob: -13.879715919494629
    8. ')' → logprob: -14.129715919494629
    9. '...' → logprob: -14.129715919494629
    10. ' ' → logprob: -14.254715919494629

Token 69: ',Y' (ID: 71464)
  Prédit: ',Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Y' → logprob: -0.3496108055114746
    2. ',' → logprob: -1.2246108055114746
    3. ' ,' → logprob: -7.724610805511475
    4. ',y' → logprob: -7.974610805511475
    5. 'Y' → logprob: -9.349611282348633
    6. ',X' → logprob: -9.474611282348633
    7. ')' → logprob: -9.599611282348633
    8. ' ' → logprob: -10.224611282348633
    9. '<|end|>' → logprob: -10.974611282348633
    10. ',

' → logprob: -11.349611282348633

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.837811088189483e-05
    2. ' )' → logprob: -10.000068664550781
    3. ' else' → logprob: -11.750068664550781
    4. '   ' → logprob: -11.750068664550781
    5. '))' → logprob: -13.375068664550781
    6. ' ' → logprob: -13.500068664550781
    7. 'else' → logprob: -13.750068664550781
    8. ')
' → logprob: -14.625068664550781
    9. '    ' → logprob: -14.625068664550781
    10. '')' → logprob: -14.750068664550781

Token 71: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.001184276770800352
    2. 'else' → logprob: -6.751184463500977
    3. '    ' → logprob: -11.876184463500977
    4. ' ' → logprob: -12.876184463500977
    5. '	else' → logprob: -13.126184463500977
    6. '   ' → logprob: -13.376184463500977
    7. ' and' → logprob: -15.126184463500977
    8. '<|end|>' → logprob: -16.001184463500977
    9. ' ' → logprob: -16.376184463500977
    10. '  ' → logprob: -16.626184463500977

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05488375201821327
    2. ' ' → logprob: -2.9298837184906006
    3. '   ' → logprob: -14.67988395690918
    4. '    ' → logprob: -15.05488395690918
    5. ' ' → logprob: -15.17988395690918
    6. '1' → logprob: -15.42988395690918
    7. '۰' → logprob: -16.55488395690918
    8. '  ' → logprob: -16.86738395690918
    9. '０' → logprob: -17.05488395690918
    10. '`' → logprob: -17.36738395690918

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003812217037193477
    2. ' ' → logprob: -7.875380992889404
    3. '   ' → logprob: -14.000381469726562
    4. '  ' → logprob: -17.000381469726562
    5. '    ' → logprob: -17.000381469726562
    6. '1' → logprob: -17.187881469726562
    7. '۰' → logprob: -17.437881469726562
    8. '０' → logprob: -17.562881469726562
    9. '`' → logprob: -17.750381469726562
    10. '00' → logprob: -18.000381469726562

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.533616304397583
    2. '   ' → logprob: -0.908616304397583
    3. '    
' → logprob: -5.033616065979004
    4. '<|end|>' → logprob: -6.283616065979004
    5. '\n' → logprob: -6.908616065979004
    6. '
' → logprob: -8.033616065979004
    7. '  
' → logprob: -8.783616065979004
    8. '

' → logprob: -9.283616065979004
    9. ' return' → logprob: -9.408616065979004
    10. ' 
' → logprob: -9.783616065979004

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5241199135780334
    2. '
' → logprob: -1.0241198539733887
    3. '    
' → logprob: -3.6491198539733887
    4. '\n' → logprob: -4.524119853973389
    5. ' return' → logprob: -6.149119853973389
    6. '<|end|>' → logprob: -6.149119853973389
    7. ' 
' → logprob: -6.399119853973389
    8. 'return' → logprob: -6.774119853973389
    9. '' → logprob: -7.149119853973389
    10. '  
' → logprob: -7.274119853973389

Token 76: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01690009981393814
    2. '
' → logprob: -4.891900062561035
    3. '    
' → logprob: -4.891900062561035
    4. 'return' → logprob: -6.766900062561035
    5. 'area' → logprob: -8.141900062561035
    6. ' return' → logprob: -9.641900062561035
    7. '```' → logprob: -9.766900062561035
    8. '\n' → logprob: -9.891900062561035
    9. 'print' (adapté à ' print') → logprob: -10.641900062561035
    10. ' area' → logprob: -11.391900062561035

Token 77: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.15389633178710938
    2. '(' → logprob: -2.0288963317871094
    3. '(int' → logprob: -4.778896331787109
    4. 'area' → logprob: -6.403896331787109
    5. '(W' → logprob: -8.02889633178711
    6. '((' → logprob: -8.40389633178711
    7. ' (' → logprob: -8.65389633178711
    8. ' area' → logprob: -8.77889633178711
    9. 'int' → logprob: -10.27889633178711
    10. '(round' → logprob: -10.65389633178711

Token 78: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.002415014896541834
    2. ')(' → logprob: -6.627415180206299
    3. '(' → logprob: -7.627415180206299
    4. ')' → logprob: -8.00241470336914
    5. ' (' → logprob: -9.37741470336914
    6. ',' → logprob: -9.50241470336914
    7. '(X' → logprob: -10.12741470336914
    8. '((' → logprob: -10.62741470336914
    9. '   ' → logprob: -11.75241470336914
    10. ',W' → logprob: -12.00241470336914

Token 79: ',H' (ID: 94400)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27419760823249817
    2. ',H' → logprob: -1.5241975784301758
    3. ',W' → logprob: -4.399197578430176
    4. ',Y' → logprob: -5.149197578430176
    5. ',X' → logprob: -6.649197578430176
    6. ' ,' → logprob: -6.774197578430176
    7. '   ' → logprob: -7.899197578430176
    8. ',
' → logprob: -9.024197578430176
    9. ',Z' → logprob: -9.024197578430176
    10. ',S' → logprob: -9.649197578430176

Token 80: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0377139076590538
    2. '))' → logprob: -4.162714004516602
    3. ')' → logprob: -4.287714004516602
    4. ',' → logprob: -5.162714004516602
    5. ' ),' → logprob: -6.662714004516602
    6. '),(' → logprob: -8.412714004516602
    7. ')*' → logprob: -8.787714004516602
    8. '),"' → logprob: -9.787714004516602
    9. ')+' → logprob: -10.287714004516602
    10. '))
' → logprob: -10.412714004516602

Token 81: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.47417333722114563
    2. ' center' → logprob: -0.9741733074188232
    3. '(center' → logprob: -10.474173545837402
    4. '"' → logprob: -10.974173545837402
    5. ''' → logprob: -11.474173545837402
    6. ' ' → logprob: -11.849173545837402
    7. ',' → logprob: -11.974173545837402
    8. ')' → logprob: -12.099173545837402
    9. 'end' → logprob: -12.599173545837402
    10. ' end' → logprob: -12.974173545837402

Token 82: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -3.9888433093437925e-05
    2. 'er' → logprob: -11.125040054321289
    3. ' _' → logprob: -12.000040054321289
    4. '_center' → logprob: -12.375040054321289
    5. ')_' → logprob: -12.750040054321289
    6. '_' → logprob: -12.750040054321289
    7. '_f' → logprob: -13.625040054321289
    8. 'flag' → logprob: -13.875040054321289
    9. 'r' → logprob: -14.000040054321289
    10. 't' → logprob: -14.125040054321289

Token 83: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ' )' → logprob: -13.375003814697266
    3. '`)' → logprob: -14.500003814697266
    4. '))' → logprob: -14.625003814697266
    5. ')
' → logprob: -14.750003814697266
    6. ')`' → logprob: -15.750003814697266
    7. '')' → logprob: -16.125003814697266
    8. '   ' → logprob: -16.250003814697266
    9. ')")' → logprob: -17.250003814697266
    10. '```' → logprob: -17.375003814697266

Token 84: 'calculate' (ID: 58453)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.0009278989746235311
    2. '_' → logprob: -7.000927925109863
    3. '_are' → logprob: -11.250927925109863
    4. '_a' → logprob: -13.000927925109863
    5. 'area' → logprob: -15.125927925109863
    6. '_AREA' → logprob: -16.000926971435547
    7. '```' → logprob: -16.125926971435547
    8. '_code' → logprob: -16.250926971435547
    9. '_ar' → logprob: -16.250926971435547
    10. '_angle' → logprob: -16.375926971435547

Token 86: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.0004734486574307084
    2. '_area' → logprob: -8.000473022460938
    3. '_' → logprob: -9.000473022460938
    4. 'and' → logprob: -12.875473022460938
    5. '_AND' → logprob: -13.125473022460938
    6. '```' → logprob: -13.125473022460938
    7. '_or' → logprob: -13.625473022460938
    8. '()' → logprob: -14.375473022460938
    9. '_are' → logprob: -14.375473022460938
    10. '_to' → logprob: -14.875473022460938

Token 87: '_center' (ID: 48737)
  Prédit: '_center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -2.7610454708337784e-05
    2. '_cent' → logprob: -10.750027656555176
    3. '_c' → logprob: -12.625027656555176
    4. 'center' → logprob: -13.375027656555176
    5. '_area' → logprob: -13.750027656555176
    6. '_' → logprob: -16.37502670288086
    7. '_enter' → logprob: -17.50002670288086
    8. '_ce' → logprob: -18.00002670288086
    9. '_CENTER' → logprob: -18.12502670288086
    10. ' center' → logprob: -19.62502670288086

Token 88: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.541112427134067e-05
    2. '(' → logprob: -9.875075340270996
    3. '()
' → logprob: -11.875075340270996
    4. '();' → logprob: -13.000075340270996
    5. ' ()' → logprob: -13.000075340270996
    6. '()`' → logprob: -13.125075340270996
    7. '()<' → logprob: -13.375075340270996
    8. '()

' → logprob: -13.375075340270996
    9. '()]' → logprob: -13.750075340270996
    10. '()\' → logprob: -13.875075340270996


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 63
Précision stricte (1ère position): 41.86%
Précision adaptée (1ère position): 41.86%
Précision (top 10): 73.26%
================================================================================
