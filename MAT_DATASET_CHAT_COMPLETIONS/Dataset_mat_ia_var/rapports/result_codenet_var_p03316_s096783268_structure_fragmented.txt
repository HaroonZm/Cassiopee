================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return input()

def parse_int(value):
    return int(value)

def int_to_str(n):
    return str(n)

def str_to_list(s):
    return list(s)

def list_digits(str_list):
    return [parse_int(char) for char in str_list]

def sum_digits(digits_list):
    total = 0
    for digit in digits_list:
        total += digit
    return total

def is_divisible(n, s):
    return n % s == 0

def print_yes():
    print('Yes')

def print_no():
    print('No')

def main():
    n_str = read_input()
    n = parse_int(n_str)
    s_str = int_to_str(n)
    s_list = str_to_list(s_str)
    digits = list_digits(s_list)
    s = sum_digits(digits)
    if is_divisible(n, s):
        print_yes()
    else:
        print_no()

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.988785445690155
    2. '\' → logprob: -1.2387855052947998
    3. '\n' → logprob: -1.3637855052947998
    4. '   ' → logprob: -3.1137855052948
    5. '    
' → logprob: -4.863785266876221
    6. '
' → logprob: -5.113785266876221
    7. ' 
' → logprob: -5.613785266876221
    8. '``' → logprob: -5.863785266876221
    9. ':' → logprob: -6.113785266876221
    10. ''\' → logprob: -6.613785266876221

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44198349118232727
    2. '```' → logprob: -2.066983461380005
    3. 'return' (adapté à ' return') → logprob: -2.691983461380005
    4. 'input' → logprob: -3.441983461380005
    5. '    ' → logprob: -3.441983461380005
    6. 'r' → logprob: -3.566983461380005
    7. '\' → logprob: -4.191983699798584
    8. 'x' → logprob: -4.316983699798584
    9. '       ' → logprob: -4.691983699798584
    10. '`' → logprob: -5.191983699798584

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21319261193275452
    2. ' input' → logprob: -2.2131927013397217
    3. 'input' → logprob: -3.0881927013397217
    4. '"' → logprob: -3.4631927013397217
    5. ''' → logprob: -5.588192462921143
    6. ' []' → logprob: -7.588192462921143
    7. '  ' → logprob: -7.963192462921143
    8. ' "' → logprob: -8.5881929397583
    9. ' None' → logprob: -9.0881929397583
    10. '(input' → logprob: -9.2131929397583

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013408389640972018
    2. '()' → logprob: -7.376340866088867
    3. ''' → logprob: -8.376340866088867
    4. '"' → logprob: -9.126340866088867
    5. '('' → logprob: -9.376340866088867
    6. '("("' → logprob: -9.501340866088867
    7. '```' → logprob: -9.751340866088867
    8. '(
' → logprob: -10.126340866088867
    9. ' (' → logprob: -11.126340866088867
    10. ')' → logprob: -11.251340866088867

Token 8: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8395724892616272
    2. '(' → logprob: -1.8395724296569824
    3. '
' → logprob: -2.4645724296569824
    4. '```' → logprob: -2.5895724296569824
    5. '()' → logprob: -2.8395724296569824
    6. '<|end|>' → logprob: -3.2145724296569824
    7. '#' → logprob: -3.4645724296569824
    8. 'def' → logprob: -3.5895724296569824
    9. '(
' → logprob: -4.339572429656982
    10. '\' → logprob: -4.464572429656982

Token 9: ' parse' (ID: 8420)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -1.1871564388275146
    2. ' calculate' → logprob: -1.5621564388275146
    3. ' write' → logprob: -1.8121564388275146
    4. ' main' → logprob: -1.9371564388275146
    5. ' read' → logprob: -2.1871564388275146
    6. ' compute' → logprob: -4.437156677246094
    7. ' user' → logprob: -4.562156677246094
    8. ' parse' → logprob: -4.812156677246094
    9. ' print' → logprob: -5.062156677246094
    10. ' validate' → logprob: -5.687156677246094

Token 10: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021266520023345947
    2. '_input' → logprob: -4.146266460418701
    3. '(' → logprob: -5.396266460418701
    4. '_line' → logprob: -8.14626693725586
    5. '_data' → logprob: -9.89626693725586
    6. '_token' → logprob: -10.14626693725586
    7. '_(' → logprob: -10.39626693725586
    8. '_text' → logprob: -10.39626693725586
    9. '_output' → logprob: -10.77126693725586
    10. '(_' → logprob: -10.77126693725586

Token 11: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030470184981822968
    2. 's' → logprob: -4.780470371246338
    3. '()' → logprob: -4.905470371246338
    4. '```' → logprob: -6.780470371246338
    5. 'eger' → logprob: -6.905470371246338
    6. ' (' → logprob: -7.030470371246338
    7. ' ' → logprob: -7.030470371246338
    8. 'ent' → logprob: -7.155470371246338
    9. '(s' → logprob: -7.405470371246338
    10. 'ection' → logprob: -7.530470371246338

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002780511975288391
    2. ')' → logprob: -6.502780437469482
    3. '):
' → logprob: -7.002780437469482
    4. ' ):' → logprob: -8.25278091430664
    5. ':' → logprob: -9.75278091430664
    6. '   ' → logprob: -11.12778091430664
    7. '=' → logprob: -11.62778091430664
    8. ',' → logprob: -11.75278091430664
    9. '):

' → logprob: -12.87778091430664
    10. '):
' → logprob: -13.00278091430664

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05768329277634621
    2. 'int' → logprob: -3.682683229446411
    3. ' int' → logprob: -3.682683229446411
    4. '(int' → logprob: -5.80768346786499
    5. '    ' → logprob: -6.55768346786499
    6. ' return' → logprob: -7.18268346786499
    7. '(' → logprob: -8.682682991027832
    8. '  ' → logprob: -9.307682991027832
    9. ' value' → logprob: -9.682682991027832
    10. 'return' → logprob: -10.182682991027832

Token 14: ' return' (ID: 622)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4320892095565796
    2. '   ' → logprob: -1.3070892095565796
    3. ' return' → logprob: -3.057089328765869
    4. 'int' → logprob: -3.557089328765869
    5. '    ' → logprob: -5.682089328765869
    6. 'return' (adapté à ' return') → logprob: -6.807089328765869
    7. ' ' → logprob: -9.682088851928711
    8. '  ' → logprob: -10.307088851928711
    9. '```' → logprob: -10.557088851928711
    10. ' try' → logprob: -11.307088851928711

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00028183520771563053
    2. 'int' → logprob: -8.250282287597656
    3. ' ' → logprob: -11.000282287597656
    4. '   ' → logprob: -13.125282287597656
    5. '(int' → logprob: -13.875282287597656
    6. ' in' → logprob: -15.375282287597656
    7. '  ' → logprob: -15.750282287597656
    8. '	int' → logprob: -15.875282287597656
    9. '=int' → logprob: -16.250282287597656
    10. '<int' → logprob: -16.375282287597656

Token 16: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.3868764638900757
    2. '(' → logprob: -1.1368764638900757
    3. '('' → logprob: -13.886876106262207
    4. ' (' → logprob: -14.011876106262207
    5. 'value' → logprob: -14.386876106262207
    6. ')value' → logprob: -14.761876106262207
    7. '("("' → logprob: -14.886876106262207
    8. '(`' → logprob: -14.886876106262207
    9. '```' → logprob: -15.011876106262207
    10. '(
' → logprob: -15.386876106262207

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.000000953674316
    3. ' )' → logprob: -16.125
    4. ')))' → logprob: -16.875
    5. ')
' → logprob: -18.125
    6. '())' → logprob: -18.125
    7. '')' → logprob: -19.5
    8. ')`' → logprob: -19.625
    9. '()' → logprob: -19.75
    10. '`)' → logprob: -19.875

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13167643547058105
    2. 'd' → logprob: -2.756676435470581
    3. '\' → logprob: -3.881676435470581
    4. '#' → logprob: -4.13167667388916
    5. '
' → logprob: -5.00667667388916
    6. '<|end|>' → logprob: -5.00667667388916
    7. '\n' → logprob: -5.63167667388916
    8. '

' → logprob: -6.38167667388916
    9. 'n' → logprob: -6.50667667388916
    10. '```' → logprob: -6.63167667388916

Token 19: ' int' (ID: 677)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.30247074365615845
    2. ' calculate' → logprob: -1.9274706840515137
    3. ' sum' → logprob: -3.6774706840515137
    4. ' read' → logprob: -4.052470684051514
    5. ' print' → logprob: -4.302470684051514
    6. ' write' → logprob: -4.552470684051514
    7. ' process' → logprob: -4.677470684051514
    8. ' add' → logprob: -4.677470684051514
    9. ' solve' → logprob: -4.802470684051514
    10. ' compute' → logprob: -4.927470684051514

Token 20: '_to' (ID: 5089)
  Prédit: 'eger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eger' → logprob: -0.12802013754844666
    2. 'er' → logprob: -2.3780200481414795
    3. 'erval' → logprob: -5.628020286560059
    4. 'o' → logprob: -5.628020286560059
    5. '_to' → logprob: -5.878020286560059
    6. '_parse' → logprob: -5.878020286560059
    7. '_val' → logprob: -5.878020286560059
    8. 'ernal' → logprob: -6.003020286560059
    9. '_' → logprob: -6.253020286560059
    10. '_array' → logprob: -7.128020286560059

Token 21: '_str' (ID: 6182)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.08604808151721954
    2. '_' → logprob: -3.086048126220703
    3. '_str' → logprob: -3.336048126220703
    4. ' _' → logprob: -7.461048126220703
    5. '_s' → logprob: -7.586048126220703
    6. ' string' → logprob: -10.836048126220703
    7. '_strings' → logprob: -10.961048126220703
    8. ' ' → logprob: -11.211048126220703
    9. 'string' → logprob: -11.336048126220703
    10. 'String' → logprob: -11.711048126220703

Token 22: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00045926711754873395
    2. '("("' → logprob: -8.875459671020508
    3. '(value' → logprob: -9.250459671020508
    4. '_' → logprob: -9.250459671020508
    5. '("")' → logprob: -10.125459671020508
    6. ' (' → logprob: -11.000459671020508
    7. '()' → logprob: -11.625459671020508
    8. 'def' → logprob: -11.750459671020508
    9. '(a' → logprob: -12.625459671020508
    10. '(user' → logprob: -12.750459671020508

Token 23: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005952148232609034
    2. '):' → logprob: -5.13095235824585
    3. ')t' → logprob: -12.380951881408691
    4. ')a' → logprob: -12.630951881408691
    5. ')n' → logprob: -12.630951881408691
    6. '):
' → logprob: -13.255951881408691
    7. ')e' → logprob: -13.380951881408691
    8. ' )' → logprob: -13.630951881408691
    9. ')**' → logprob: -13.755951881408691
    10. 'eg' → logprob: -14.005951881408691

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01104157604277134
    2. ' return' → logprob: -4.761041641235352
    3. 'return' → logprob: -6.136041641235352
    4. '    ' → logprob: -8.761041641235352
    5. ':return' → logprob: -10.261041641235352
    6. '	return' → logprob: -10.761041641235352
    7. ' ' → logprob: -11.386041641235352
    8. ':' → logprob: -11.761041641235352
    9. ' str' → logprob: -11.886041641235352
    10. ')' → logprob: -12.136041641235352

Token 25: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7100021243095398
    2. '   ' → logprob: -0.9600021243095398
    3. 'return' (adapté à ' return') → logprob: -2.0850021839141846
    4. ' str' → logprob: -6.8350019454956055
    5. 'str' → logprob: -10.210001945495605
    6. '    ' → logprob: -10.960001945495605
    7. ' ' → logprob: -11.210001945495605
    8. '	return' → logprob: -11.710001945495605
    9. '  ' → logprob: -13.085001945495605
    10. '```' → logprob: -13.460001945495605

Token 26: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.0160882156342268
    2. 'str' → logprob: -4.141088008880615
    3. ' ' → logprob: -10.141088485717773
    4. '	str' → logprob: -11.766088485717773
    5. ' f' → logprob: -12.641088485717773
    6. ' ' → logprob: -13.016088485717773
    7. '(str' → logprob: -14.516088485717773
    8. '   ' → logprob: -15.391088485717773
    9. '"' → logprob: -15.641088485717773
    10. '  ' → logprob: -15.891088485717773

Token 27: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3132672905921936
    2. '(' → logprob: -1.3132672309875488
    3. ' (' → logprob: -12.438267707824707
    4. 'n' → logprob: -14.563267707824707
    5. '(
' → logprob: -15.188267707824707
    6. '(nn' → logprob: -15.813267707824707
    7. '("("' → logprob: -16.06326675415039
    8. '(

' → logprob: -16.18826675415039
    9. '(`' → logprob: -16.31326675415039
    10. ' ' → logprob: -16.68826675415039

Token 28: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.250000953674316
    3. '))' → logprob: -15.500000953674316
    4. ' )' → logprob: -16.500001907348633
    5. ')n' → logprob: -16.500001907348633
    6. ')))' → logprob: -17.500001907348633
    7. ')

' → logprob: -17.625001907348633
    8. ')return' → logprob: -18.375001907348633
    9. '}' → logprob: -18.500001907348633
    10. '   ' → logprob: -19.125001907348633

Token 29: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4808310568332672
    2. 'def' → logprob: -0.9808310270309448
    3. '\' → logprob: -6.230831146240234
    4. 'n' → logprob: -6.480831146240234
    5. '#' → logprob: -6.605831146240234
    6. 'a' → logprob: -7.480831146240234
    7. 'de' → logprob: -8.355831146240234
    8. '
' → logprob: -8.480831146240234
    9. '

' → logprob: -8.605831146240234
    10. 'e' → logprob: -9.355831146240234

Token 30: ' str' (ID: 989)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08786823600530624
    2. ' calculate' → logprob: -3.3378682136535645
    3. ' add' → logprob: -3.7128682136535645
    4. ' sum' → logprob: -5.0878682136535645
    5. ' multiply' → logprob: -5.2128682136535645
    6. 'main' → logprob: -5.5878682136535645
    7. ' compute' → logprob: -5.7128682136535645
    8. ' process' → logprob: -7.0878682136535645
    9. 'sum' → logprob: -7.0878682136535645
    10. ' factorial' → logprob: -7.2128682136535645

Token 31: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.12929710745811462
    2. 'ing' → logprob: -3.5042970180511475
    3. '_len' → logprob: -3.5042970180511475
    4. 'ip' → logprob: -3.7542970180511475
    5. '_' → logprob: -3.8792970180511475
    6. '_strip' → logprob: -5.379297256469727
    7. '_ing' → logprob: -6.129297256469727
    8. '_ip' → logprob: -6.254297256469727
    9. 'ips' → logprob: -6.504297256469727
    10. '_concat' → logprob: -6.754297256469727

Token 32: '_list' (ID: 4162)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.005174574442207813
    2. 'int' → logprob: -5.88017463684082
    3. '_str' → logprob: -6.13017463684082
    4. '_' → logprob: -9.00517463684082
    5. '_list' → logprob: -10.88017463684082
    6. 'ing' → logprob: -11.63017463684082
    7. '_lower' → logprob: -12.13017463684082
    8. '_upper' → logprob: -12.13017463684082
    9. '_bytes' → logprob: -12.25517463684082
    10. '_in' → logprob: -12.25517463684082

Token 33: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004334102850407362
    2. '("("' → logprob: -6.004333972930908
    3. '('' → logprob: -6.754333972930908
    4. '(s' → logprob: -8.504334449768066
    5. 's' → logprob: -9.379334449768066
    6. '_' → logprob: -9.629334449768066
    7. ' (' → logprob: -10.129334449768066
    8. '_list' → logprob: -10.629334449768066
    9. '("")' → logprob: -10.629334449768066
    10. '_parent' → logprob: -10.629334449768066

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03809266909956932
    2. ')' → logprob: -3.288092613220215
    3. '():' → logprob: -11.038092613220215
    4. ' ):' → logprob: -11.538092613220215
    5. '[' → logprob: -12.163092613220215
    6. '[]):' → logprob: -12.288092613220215
    7. '):
' → logprob: -12.663092613220215
    8. '(' → logprob: -13.163092613220215
    9. ':' → logprob: -13.288092613220215
    10. 's' → logprob: -13.788092613220215

Token 35: '   ' (ID: 271)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6446968913078308
    2. 'list' → logprob: -0.8946968913078308
    3. 's' → logprob: -3.6446969509124756
    4. '   ' → logprob: -4.0196967124938965
    5. 'return' → logprob: -4.6446967124938965
    6. ' return' → logprob: -5.3946967124938965
    7. '(list' → logprob: -5.6446967124938965
    8. '[]' → logprob: -6.5196967124938965
    9. ' s' → logprob: -6.6446967124938965
    10. '[s' → logprob: -7.2696967124938965

Token 36: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3012925684452057
    2. 'list' → logprob: -1.4262925386428833
    3. 's' → logprob: -4.801292419433594
    4. ' s' → logprob: -5.301292419433594
    5. ' return' → logprob: -5.801292419433594
    6. 'return' (adapté à ' return') → logprob: -6.051292419433594
    7. ' [' → logprob: -7.301292419433594
    8. '[list' → logprob: -8.176292419433594
    9. '[s' → logprob: -8.551292419433594
    10. '[]' → logprob: -9.676292419433594

Token 37: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.05569262430071831
    2. 'list' → logprob: -2.930692672729492
    3. ' s' → logprob: -7.805692672729492
    4. 's' → logprob: -8.680692672729492
    5. '[list' → logprob: -8.930692672729492
    6. ' [' → logprob: -9.555692672729492
    7. '[' → logprob: -11.680692672729492
    8. '[s' → logprob: -11.805692672729492
    9. '(list' → logprob: -12.430692672729492
    10. ' ' → logprob: -12.930692672729492

Token 38: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00043102685594931245
    2. '(' → logprob: -7.750431060791016
    3. 's' → logprob: -15.625431060791016
    4. ' (' → logprob: -15.750431060791016
    5. '((' → logprob: -17.000431060791016
    6. '(str' → logprob: -17.375431060791016
    7. '(ss' → logprob: -17.750431060791016
    8. '(
' → logprob: -19.125431060791016
    9. '(n' → logprob: -19.125431060791016
    10. '("("' → logprob: -19.250431060791016

Token 39: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '())' → logprob: -14.750000953674316
    3. '))' → logprob: -15.875000953674316
    4. ' )' → logprob: -16.375
    5. '()' → logprob: -16.625
    6. ')
' → logprob: -17.25
    7. '[' → logprob: -18.125
    8. ')return' → logprob: -18.125
    9. ')))' → logprob: -18.125
    10. ')s' → logprob: -18.875

Token 40: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027375894133001566
    2. '\' → logprob: -6.877737522125244
    3. '<|end|>' → logprob: -7.627737522125244
    4. '[' → logprob: -8.252737998962402
    5. '#' → logprob: -8.377737998962402
    6. 'a' → logprob: -9.002737998962402
    7. '
' → logprob: -9.127737998962402
    8. 'd' → logprob: -9.252737998962402
    9. '<|end|>' → logprob: -9.752737998962402
    10. '```' → logprob: -9.877737998962402

Token 41: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1372278481721878
    2. ' main' → logprob: -2.762227773666382
    3. ' reverse' → logprob: -4.512228012084961
    4. ' sum' → logprob: -4.637228012084961
    5. ' join' → logprob: -4.762228012084961
    6. ' str' → logprob: -5.387228012084961
    7. '_list' → logprob: -5.512228012084961
    8. ' max' → logprob: -5.637228012084961
    9. 'list' → logprob: -5.637228012084961
    10. ' write' → logprob: -6.012228012084961

Token 42: '_digits' (ID: 108638)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.010439627803862095
    2. '_append' → logprob: -5.135439395904541
    3. '_' → logprob: -5.635439395904541
    4. 'To' → logprob: -8.3854398727417
    5. '_of' → logprob: -8.8854398727417
    6. '_add' → logprob: -9.3854398727417
    7. '_s' → logprob: -10.1354398727417
    8. '(' → logprob: -10.2604398727417
    9. '_concat' → logprob: -10.3854398727417
    10. '_reverse' → logprob: -10.6354398727417

Token 43: '(str' (ID: 7946)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.7832151651382446
    2. '_(' → logprob: -1.2832151651382446
    3. '(' → logprob: -2.158215045928955
    4. '_' → logprob: -2.783215045928955
    5. '(s' → logprob: -3.283215045928955
    6. '_of' → logprob: -3.783215045928955
    7. '(_' → logprob: -5.158215045928955
    8. '(n' → logprob: -5.533215045928955
    9. '(lst' → logprob: -6.033215045928955
    10. '(_)' → logprob: -6.158215045928955

Token 44: '_list' (ID: 4162)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.297695517539978
    2. '_digits' → logprob: -1.547695517539978
    3. ')' → logprob: -4.172695636749268
    4. 's' → logprob: -4.922695636749268
    5. '_ing' → logprob: -5.047695636749268
    6. ')_' → logprob: -5.547695636749268
    7. 'ings' → logprob: -5.672695636749268
    8. '_' → logprob: -5.672695636749268
    9. '_to' → logprob: -6.047695636749268
    10. '_)' → logprob: -6.672695636749268

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01708960346877575
    2. ')' → logprob: -4.142089366912842
    3. '):
' → logprob: -7.142089366912842
    4. ' ):' → logprob: -8.76708984375
    5. '=' → logprob: -10.89208984375
    6. '[]):' → logprob: -10.89208984375
    7. ')=' → logprob: -11.14208984375
    8. '   ' → logprob: -11.76708984375
    9. ')):' → logprob: -11.76708984375
    10. '=[]' → logprob: -12.14208984375

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26627498865127563
    2. '[int' → logprob: -2.641274929046631
    3. '[' → logprob: -2.766274929046631
    4. 'return' → logprob: -3.016274929046631
    5. '[]' → logprob: -4.266274929046631
    6. '(' → logprob: -4.641274929046631
    7. '[:]' → logprob: -4.641274929046631
    8. ' return' → logprob: -5.016274929046631
    9. '[str' → logprob: -6.516274929046631
    10. 'digits' → logprob: -6.641274929046631

Token 47: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10237061977386475
    2. ' return' → logprob: -3.1023707389831543
    3. '   ' → logprob: -3.6023707389831543
    4. '[int' → logprob: -3.8523707389831543
    5. '[' → logprob: -6.227370738983154
    6. '[str' → logprob: -6.477370738983154
    7. '[i' → logprob: -9.477370262145996
    8. '[d' → logprob: -9.852370262145996
    9. '[n' → logprob: -10.477370262145996
    10. ' [' → logprob: -10.852370262145996

Token 48: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.07391431927680969
    2. '[' → logprob: -3.5739142894744873
    3. ' [' → logprob: -3.9489142894744873
    4. '[str' → logprob: -4.448914527893066
    5. '[list' → logprob: -4.448914527893066
    6. '[len' → logprob: -8.698914527893066
    7. '[i' → logprob: -9.073914527893066
    8. '[List' → logprob: -9.823914527893066
    9. '[s' → logprob: -10.323914527893066
    10. '[Int' → logprob: -10.823914527893066

Token 49: 'parse' (ID: 4841)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001872094871941954
    2. ' int' → logprob: -8.625186920166016
    3. '   ' → logprob: -12.250186920166016
    4. '(int' → logprob: -13.750186920166016
    5. 'parse' → logprob: -14.625186920166016
    6. '[int' → logprob: -15.125186920166016
    7. '  ' → logprob: -15.250186920166016
    8. '```' → logprob: -15.750186920166016
    9. '<int' → logprob: -16.000186920166016
    10. '=int' → logprob: -16.125186920166016

Token 50: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -2.5776860184123507e-06
    2. '```' → logprob: -14.75000286102295
    3. '_uint' → logprob: -14.87500286102295
    4. '<int' → logprob: -15.12500286102295
    5. 'int' → logprob: -15.25000286102295
    6. '_in' → logprob: -15.37500286102295
    7. '_' → logprob: -15.37500286102295
    8. '_char' → logprob: -15.50000286102295
    9. '_i' → logprob: -15.62500286102295
    10. ' _' → logprob: -16.000001907348633

Token 51: '(char' (ID: 14823)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8388442993164062
    2. '(d' → logprob: -0.8388442993164062
    3. '(x' → logprob: -2.7138442993164062
    4. '(ch' → logprob: -3.4638442993164062
    5. '(c' → logprob: -3.9638442993164062
    6. '(char' → logprob: -4.838844299316406
    7. '(i' → logprob: -5.088844299316406
    8. '(item' → logprob: -5.713844299316406
    9. '(s' → logprob: -7.463844299316406
    10. '(elem' → logprob: -7.588844299316406

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002387018030276522
    2. '(char' → logprob: -8.500238418579102
    3. ' )' → logprob: -11.625238418579102
    4. '(' → logprob: -12.125238418579102
    5. '   ' → logprob: -12.125238418579102
    6. '(c' → logprob: -12.125238418579102
    7. 'char' → logprob: -13.250238418579102
    8. '(x' → logprob: -13.625238418579102
    9. ' ' → logprob: -13.750238418579102
    10. '))' → logprob: -14.000238418579102

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6982526779174805
    2. ')' → logprob: -1.4482526779174805
    3. '(char' → logprob: -1.5732526779174805
    4. 'for' → logprob: -3.5732526779174805
    5. '(' → logprob: -3.9482526779174805
    6. '(c' → logprob: -4.8232526779174805
    7. ']' → logprob: -6.1982526779174805
    8. 'char' → logprob: -6.8232526779174805
    9. '   ' → logprob: -7.5732526779174805
    10. '(x' → logprob: -7.9482526779174805

Token 54: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.4599291980266571
    2. 'char' → logprob: -1.0849292278289795
    3. ' str' → logprob: -3.9599292278289795
    4. 'str' → logprob: -4.4599289894104
    5. ' ' → logprob: -9.084929466247559
    6. '<char' → logprob: -13.459929466247559
    7. '(char' → logprob: -13.584929466247559
    8. '  ' → logprob: -14.834929466247559
    9. '	char' → logprob: -14.834929466247559
    10. '_char' → logprob: -15.209929466247559

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07122957706451416
    2. 'in' → logprob: -2.8212294578552246
    3. ' ' → logprob: -4.821229457855225
    4. ')' → logprob: -8.196229934692383
    5. '  ' → logprob: -8.321229934692383
    6. 's' → logprob: -8.696229934692383
    7. '_' → logprob: -9.196229934692383
    8. 'char' → logprob: -9.321229934692383
    9. ']' → logprob: -9.696229934692383
    10. '(' → logprob: -10.321229934692383

Token 56: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.25194215774536133
    2. ' str' → logprob: -1.5019421577453613
    3. '(str' → logprob: -12.001941680908203
    4. 's' → logprob: -13.251941680908203
    5. '	str' → logprob: -13.376941680908203
    6. '[str' → logprob: -13.376941680908203
    7. '_str' → logprob: -14.751941680908203
    8. ':str' → logprob: -15.001941680908203
    9. 'stri' → logprob: -15.376941680908203
    10. ' ' → logprob: -15.501941680908203

Token 57: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.491498531133402e-06
    2. '_l' → logprob: -12.875009536743164
    3. '_lst' → logprob: -13.125009536743164
    4. ')' → logprob: -13.625009536743164
    5. '_' → logprob: -14.000009536743164
    6. 's' → logprob: -14.500009536743164
    7. 'ist' → logprob: -14.750009536743164
    8. '[' → logprob: -15.125009536743164
    9. '_)' → logprob: -15.625009536743164
    10. 'List' → logprob: -15.625009536743164

Token 58: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003289655316621065
    2. ')]' → logprob: -6.003289699554443
    3. '])' → logprob: -7.253289699554443
    4. ')' → logprob: -9.253289222717285
    5. '])]' → logprob: -12.003289222717285
    6. ']
' → logprob: -13.378289222717285
    7. ' ]' → logprob: -13.878289222717285
    8. '']' → logprob: -14.753289222717285
    9. '`]' → logprob: -15.128289222717285
    10. ')])' → logprob: -15.378289222717285

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2010393887758255
    2. 'd' → logprob: -2.0760393142700195
    3. '
' → logprob: -4.0760393142700195
    4. '#' → logprob: -4.3260393142700195
    5. '\' → logprob: -4.5760393142700195
    6. 'n' → logprob: -4.8260393142700195
    7. '\n' → logprob: -6.2010393142700195
    8. '```' → logprob: -6.3260393142700195
    9. '[' → logprob: -6.9510393142700195
    10. 'a' → logprob: -7.2010393142700195

Token 60: ' sum' (ID: 4215)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3454422950744629
    2. ' sum' → logprob: -1.720442295074463
    3. ' add' → logprob: -4.095442295074463
    4. ' multiply' → logprob: -4.095442295074463
    5. ' factorial' → logprob: -4.220442295074463
    6. ' count' → logprob: -4.595442295074463
    7. ' calculate' → logprob: -4.595442295074463
    8. ' find' → logprob: -4.845442295074463
    9. ' reverse' → logprob: -5.095442295074463
    10. ' process' → logprob: -5.595442295074463

Token 61: '_digits' (ID: 108638)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5431888103485107
    2. '_' → logprob: -1.0431888103485107
    3. '_digits' → logprob: -2.9181888103485107
    4. '_(' → logprob: -4.91818904876709
    5. '_numbers' → logprob: -6.29318904876709
    6. '(_' → logprob: -6.41818904876709
    7. '(_)' → logprob: -7.54318904876709
    8. '_of' → logprob: -8.41818904876709
    9. '```' → logprob: -8.79318904876709
    10. '_elements' → logprob: -9.04318904876709

Token 62: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003398836823180318
    2. '(str' → logprob: -6.128398895263672
    3. '(n' → logprob: -8.128398895263672
    4. '(s' → logprob: -8.753398895263672
    5. '(d' → logprob: -8.878398895263672
    6. '(num' → logprob: -9.128398895263672
    7. '(numbers' → logprob: -9.378398895263672
    8. '(nums' → logprob: -9.503398895263672
    9. '(a' → logprob: -10.003398895263672
    10. '()' → logprob: -10.003398895263672

Token 63: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.00020985817536711693
    2. 'ig' → logprob: -9.12520980834961
    3. 'igts' → logprob: -10.25020980834961
    4. ')' → logprob: -11.00020980834961
    5. '_' → logprob: -11.12520980834961
    6. '_digits' → logprob: -11.62520980834961
    7. '```' → logprob: -12.00020980834961
    8. 'igs' → logprob: -12.62520980834961
    9. 'i' → logprob: -12.75020980834961
    10. 'igit' → logprob: -12.75020980834961

Token 64: '_list' (ID: 4162)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009084834600798786
    2. ')' → logprob: -7.125908374786377
    3. ' ):' → logprob: -9.875908851623535
    4. '):
' → logprob: -11.000908851623535
    5. '   ' → logprob: -11.125908851623535
    6. ':' → logprob: -12.375908851623535
    7. ' ' → logprob: -12.875908851623535
    8. '_list' → logprob: -12.875908851623535
    9. '[]):' → logprob: -13.125908851623535
    10. '(' → logprob: -13.375908851623535

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001760744140483439
    2. ')' → logprob: -6.376760959625244
    3. ' ):' → logprob: -10.251760482788086
    4. '):
' → logprob: -11.626760482788086
    5. ':' → logprob: -12.501760482788086
    6. '(' → logprob: -13.001760482788086
    7. '   ' → logprob: -13.251760482788086
    8. '(d' → logprob: -13.501760482788086
    9. ']:' → logprob: -13.626760482788086
    10. ' ' → logprob: -13.876760482788086

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14282459020614624
    2. ' return' → logprob: -2.142824649810791
    3. 'return' → logprob: -5.142824649810791
    4. ' sum' → logprob: -5.267824649810791
    5. 'sum' → logprob: -5.892824649810791
    6. '    ' → logprob: -7.017824649810791
    7. ' ' → logprob: -7.892824649810791
    8. 'digits' → logprob: -8.767824172973633
    9. ' =' → logprob: -8.892824172973633
    10. '=' → logprob: -9.017824172973633

Token 67: ' total' (ID: 3609)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1919194608926773
    2. '   ' → logprob: -2.0669195652008057
    3. 'return' → logprob: -3.0669195652008057
    4. ' sum' → logprob: -6.816919326782227
    5. 'sum' → logprob: -7.941919326782227
    6. ' ' → logprob: -11.066919326782227
    7. '    ' → logprob: -11.316919326782227
    8. '```' → logprob: -12.816919326782227
    9. '  ' → logprob: -13.191919326782227
    10. ' `' → logprob: -14.566919326782227

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4291914105415344
    2. '=' → logprob: -1.0541913509368896
    3. '_' → logprob: -8.679191589355469
    4. ' +=' → logprob: -9.054191589355469
    5. ' ' → logprob: -9.554191589355469
    6. '<|end|>' → logprob: -10.054191589355469
    7. ')' → logprob: -10.179191589355469
    8. '<|end|>' → logprob: -11.679191589355469
    9. '   ' → logprob: -11.804191589355469
    10. '=sum' → logprob: -11.929191589355469

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06821823865175247
    2. ' ' → logprob: -3.068218231201172
    3. ' sum' → logprob: -4.068218231201172
    4. 'sum' → logprob: -6.068218231201172
    5. '   ' → logprob: -11.443218231201172
    6. ' ' → logprob: -13.443218231201172
    7. '  ' → logprob: -13.505718231201172
    8. '	sum' → logprob: -14.255718231201172
    9. '(sum' → logprob: -15.505718231201172
    10. 's' → logprob: -15.880718231201172

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0046532186679542065
    2. 'sum' → logprob: -5.379653453826904
    3. ' ' → logprob: -10.754652976989746
    4. ' sum' → logprob: -11.379652976989746
    5. '   ' → logprob: -15.879652976989746
    6. '```' → logprob: -16.754653930664062
    7. 's' → logprob: -17.004653930664062
    8. '	sum' → logprob: -17.442153930664062
    9. '  ' → logprob: -17.504653930664062
    10. '000' → logprob: -17.754653930664062

Token 71: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.718705415725708
    2. '   ' → logprob: -0.968705415725708
    3. 'for' → logprob: -2.218705415725708
    4. '	for' → logprob: -4.718705177307129
    5. '<|end|>' → logprob: -5.093705177307129
    6. '
' → logprob: -5.343705177307129
    7. '    
' → logprob: -6.843705177307129
    8. ' ' → logprob: -6.968705177307129
    9. '<|end|>' → logprob: -7.093705177307129
    10. '    ' → logprob: -7.093705177307129

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19200830161571503
    2. ' for' → logprob: -2.0670082569122314
    3. 'for' → logprob: -4.0670084953308105
    4. ' ' → logprob: -4.4420084953308105
    5. '<|end|>' → logprob: -4.6920084953308105
    6. '
' → logprob: -4.9420084953308105
    7. '	for' → logprob: -7.0670084953308105
    8. '    
' → logprob: -7.6920084953308105
    9. '    ' → logprob: -7.6920084953308105
    10. '<|end|>' → logprob: -8.192008018493652

Token 73: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12128887325525284
    2. 'for' (adapté à ' for') → logprob: -2.371288776397705
    3. '   ' → logprob: -3.871288776397705
    4. '	for' → logprob: -11.121289253234863
    5. ' ' → logprob: -11.746289253234863
    6. '    ' → logprob: -11.996289253234863
    7. '    
' → logprob: -14.246289253234863
    8. '  ' → logprob: -15.871289253234863
    9. '       ' → logprob: -16.246288299560547
    10. ' ' → logprob: -16.746288299560547

Token 74: ' digit' (ID: 19181)
  Prédit: ' digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.30676645040512085
    2. ' d' → logprob: -1.4317665100097656
    3. 'digit' → logprob: -3.8067665100097656
    4. 'd' → logprob: -6.056766510009766
    5. ' ' → logprob: -7.306766510009766
    6. ' i' → logprob: -10.806766510009766
    7. '	d' → logprob: -11.181766510009766
    8. '_digit' → logprob: -12.181766510009766
    9. ' num' → logprob: -12.431766510009766
    10. ' digits' → logprob: -12.681766510009766

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005644705146551132
    2. 'in' → logprob: -5.380644798278809
    3. ' ' → logprob: -7.505644798278809
    4. 's' → logprob: -7.880644798278809
    5. '_' → logprob: -10.130644798278809
    6. '  ' → logprob: -11.130644798278809
    7. '_in' → logprob: -11.380644798278809
    8. '	in' → logprob: -11.380644798278809
    9. 'd' → logprob: -12.630644798278809
    10. ' ' → logprob: -13.255644798278809

Token 76: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.05489898845553398
    2. 'digits' → logprob: -2.929898977279663
    3. '_digits' → logprob: -11.554899215698242
    4. 'Digits' → logprob: -13.054899215698242
    5. '<|end|>' → logprob: -13.304899215698242
    6. ' ' → logprob: -13.679899215698242
    7. 'igits' → logprob: -13.804899215698242
    8. 'd' → logprob: -14.804899215698242
    9. '	d' → logprob: -15.429899215698242
    10. ' d' → logprob: -15.429899215698242

Token 77: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35282278060913086
    2. '_list' → logprob: -1.2278227806091309
    3. 'ts' → logprob: -6.102822780609131
    4. 't' → logprob: -6.727822780609131
    5. 'sts' → logprob: -7.352822780609131
    6. 'st' → logprob: -9.227823257446289
    7. 'List' → logprob: -9.852823257446289
    8. 'list' → logprob: -10.477823257446289
    9. 'ist' → logprob: -10.977823257446289
    10. '_digits' → logprob: -10.977823257446289

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002464121440425515
    2. ':
' → logprob: -6.127464294433594
    3. '+' → logprob: -8.627464294433594
    4. '+:' → logprob: -10.252464294433594
    5. '       ' → logprob: -10.752464294433594
    6. '   ' → logprob: -11.377464294433594
    7. ' :' → logprob: -11.502464294433594
    8. ':return' → logprob: -11.877464294433594
    9. '):' → logprob: -12.627464294433594
    10. '    ' → logprob: -13.252464294433594

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004519127309322357
    2. ' total' → logprob: -6.129518985748291
    3. 'total' → logprob: -6.504518985748291
    4. '        
' → logprob: -8.37951946258545
    5. '   ' → logprob: -8.50451946258545
    6. '    
' → logprob: -8.87951946258545
    7. '
' → logprob: -9.37951946258545
    8. '+' → logprob: -9.75451946258545
    9. '<|end|>' → logprob: -10.87951946258545
    10. '```' → logprob: -11.00451946258545

Token 80: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.1734115034341812
    2. 'total' (adapté à ' total') → logprob: -2.0484116077423096
    3. '       ' → logprob: -3.9234116077423096
    4. '   ' → logprob: -4.6734113693237305
    5. '    ' → logprob: -7.2984113693237305
    6. ' ' → logprob: -8.67341136932373
    7. '        ' → logprob: -9.17341136932373
    8. '	total' → logprob: -10.04841136932373
    9. '           ' → logprob: -10.17341136932373
    10. ' 
' → logprob: -10.92341136932373

Token 81: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07060004025697708
    2. '+=' → logprob: -2.6956000328063965
    3. '+' → logprob: -7.4456000328063965
    4. '=' → logprob: -9.570600509643555
    5. ']+=' → logprob: -13.195600509643555
    6. ' =' → logprob: -13.195600509643555
    7. ' +' → logprob: -13.195600509643555
    8. '+='' → logprob: -13.945600509643555
    9. '<|end|>' → logprob: -14.070600509643555
    10. '+="' → logprob: -14.070600509643555

Token 82: ' digit' (ID: 19181)
  Prédit: ' digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.3868734836578369
    2. 'digit' → logprob: -1.136873483657837
    3. ' ' → logprob: -13.886873245239258
    4. 'd' → logprob: -14.011873245239258
    5. '-digit' → logprob: -15.386873245239258
    6. '_digit' → logprob: -15.511873245239258
    7. '   ' → logprob: -16.886873245239258
    8. ' d' → logprob: -16.886873245239258
    9. '	d' → logprob: -17.136873245239258
    10. '```' → logprob: -17.636873245239258

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017353476956486702
    2. '
' → logprob: -4.142353534698486
    3. 'return' → logprob: -7.142353534698486
    4. ' return' → logprob: -8.392353057861328
    5. '    
' → logprob: -8.642353057861328
    6. '	return' → logprob: -9.767353057861328
    7. '<|end|>' → logprob: -10.517353057861328
    8. '<|end|>' → logprob: -11.517353057861328
    9. ':return' → logprob: -12.392353057861328
    10. '
' → logprob: -12.517353057861328

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017307489179074764
    2. 'return' → logprob: -6.376730918884277
    3. ' return' → logprob: -11.126730918884277
    4. '
' → logprob: -11.626730918884277
    5. '    
' → logprob: -13.251730918884277
    6. '	return' → logprob: -13.376730918884277
    7. '       ' → logprob: -13.626730918884277
    8. ' ' → logprob: -15.876730918884277
    9. '```' → logprob: -16.12672996520996
    10. '  ' → logprob: -16.50172996520996

Token 85: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1617983728647232
    2. '   ' → logprob: -1.911798357963562
    3. ' return' → logprob: -6.536798477172852
    4. ' ' → logprob: -10.036798477172852
    5. '	return' → logprob: -10.036798477172852
    6. '    
' → logprob: -11.786798477172852
    7. '
' → logprob: -11.911798477172852
    8. ':return' → logprob: -11.911798477172852
    9. 'eturn' → logprob: -12.661798477172852
    10. '       ' → logprob: -12.786798477172852

Token 86: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.011048528365790844
    2. 'total' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.636048316955566
    4. '(total' → logprob: -15.511048316955566
    5. '	total' → logprob: -16.636049270629883
    6. ' tota' → logprob: -18.636049270629883
    7. ' totals' → logprob: -18.636049270629883
    8. ' ' → logprob: -18.761049270629883
    9. '$total' → logprob: -19.011049270629883
    10. ' tot' → logprob: -19.011049270629883

Token 87: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.310640811920166
    2. '
' → logprob: -1.435640811920166
    3. '

' → logprob: -4.060640811920166
    4. '<|end|>' → logprob: -4.685640811920166
    5. '\n' → logprob: -7.560640811920166
    6. ' def' → logprob: -7.685640811920166
    7. '```' → logprob: -7.810640811920166
    8. '#' → logprob: -8.435640335083008
    9. '\' → logprob: -8.435640335083008
    10. 'newline' → logprob: -8.435640335083008

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006284964270889759
    2. 'd' → logprob: -5.381285190582275
    3. '\' → logprob: -7.506285190582275
    4. '#' → logprob: -7.756285190582275
    5. '
' → logprob: -8.006284713745117
    6. 'n' → logprob: -9.381284713745117
    7. '```' → logprob: -9.631284713745117
    8. '\n' → logprob: -9.756284713745117
    9. 'a' → logprob: -10.631284713745117
    10. '<|end|>' → logprob: -10.881284713745117

Token 89: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4312765598297119
    2. ' multiply' → logprob: -1.681276559829712
    3. ' factorial' → logprob: -2.806276559829712
    4. ' calculate' → logprob: -3.181276559829712
    5. ' reverse' → logprob: -4.431276321411133
    6. ' ' → logprob: -4.431276321411133
    7. ' product' → logprob: -4.806276321411133
    8. ' is' → logprob: -5.181276321411133
    9. ' double' → logprob: -5.556276321411133
    10. ' compute' → logprob: -5.931276321411133

Token 90: '_div' (ID: 36926)
  Prédit: '_pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.47426101565361023
    2. '_prime' → logprob: -1.4742610454559326
    3. '_even' → logprob: -1.9742610454559326
    4. '_' → logprob: -4.7242608070373535
    5. '_arm' → logprob: -8.224261283874512
    6. '_digit' → logprob: -8.224261283874512
    7. '_div' → logprob: -8.849261283874512
    8. '_valid' → logprob: -9.474261283874512
    9. '_positive' → logprob: -10.349261283874512
    10. '_multiple' → logprob: -10.349261283874512

Token 91: 'isible' (ID: 181386)
  Prédit: 'isible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -6.153795766294934e-06
    2. 'is' → logprob: -12.750005722045898
    3. 'isable' → logprob: -13.250005722045898
    4. '_' → logprob: -14.000005722045898
    5. 'ISIBLE' → logprob: -15.375005722045898
    6. 'isor' → logprob: -16.3750057220459
    7. '_by' → logprob: -16.8750057220459
    8. 'idable' → logprob: -16.8750057220459
    9. 'ide' → logprob: -17.0000057220459
    10. '```' → logprob: -17.1250057220459

Token 92: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1306956708431244
    2. '_by' → logprob: -2.1306955814361572
    3. '_' → logprob: -6.005695819854736
    4. 'by' → logprob: -8.255695343017578
    5. '_(' → logprob: -8.630695343017578
    6. '```' → logprob: -9.130695343017578
    7. ' (' → logprob: -9.255695343017578
    8. '(_' → logprob: -9.380695343017578
    9. '(div' → logprob: -9.380695343017578
    10. '(n' → logprob: -9.505695343017578

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07181432843208313
    2. ',n' → logprob: -3.6968142986297607
    3. '):' → logprob: -4.07181453704834
    4. '(n' → logprob: -4.57181453704834
    5. '_by' → logprob: -5.19681453704834
    6. ')' → logprob: -5.57181453704834
    7. 'by' → logprob: -5.82181453704834
    8. ',num' → logprob: -6.32181453704834
    9. ' ,' → logprob: -6.82181453704834
    10. ' by' → logprob: -7.07181453704834

Token 94: ' s' (ID: 265)
  Prédit: ' divisor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divisor' → logprob: -0.14823539555072784
    2. 'div' → logprob: -2.398235321044922
    3. ' d' → logprob: -3.398235321044922
    4. 'd' → logprob: -4.898235321044922
    5. ' m' → logprob: -6.148235321044922
    6. 'm' → logprob: -6.648235321044922
    7. ' k' → logprob: -6.898235321044922
    8. ' ' → logprob: -7.398235321044922
    9. 'k' → logprob: -8.023235321044922
    10. 'divider' → logprob: -8.898235321044922

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43756285309791565
    2. 'um' → logprob: -1.0625628232955933
    3. '):
' → logprob: -5.312562942504883
    4. ')' → logprob: -6.562562942504883
    5. '_sum' → logprob: -7.062562942504883
    6. '_by' → logprob: -7.937562942504883
    7. '):
' → logprob: -8.062562942504883
    8. 'by' → logprob: -8.437562942504883
    9. '):

' → logprob: -8.562562942504883
    10. ',' → logprob: -9.187562942504883

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004705307073891163
    2. ' return' → logprob: -5.379705429077148
    3. 'return' → logprob: -10.254705429077148
    4. ':' → logprob: -11.004705429077148
    5. '       ' → logprob: -11.629705429077148
    6. '    
' → logprob: -11.629705429077148
    7. '    ' → logprob: -12.504705429077148
    8. ' ' → logprob: -12.879705429077148
    9. '	return' → logprob: -13.254705429077148
    10. ':return' → logprob: -13.379705429077148

Token 97: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1073240414261818
    2. 'return' (adapté à ' return') → logprob: -2.3573241233825684
    3. '   ' → logprob: -5.357324123382568
    4. ' n' → logprob: -6.357324123382568
    5. 'n' → logprob: -7.357324123382568
    6. '    
' → logprob: -13.73232364654541
    7. ' ' → logprob: -14.10732364654541
    8. ' s' → logprob: -14.35732364654541
    9. '	return' → logprob: -14.35732364654541
    10. ' 
' → logprob: -14.35732364654541

Token 98: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07892250269651413
    2. 'n' → logprob: -2.5789225101470947
    3. ' (' → logprob: -11.328922271728516
    4. '(n' → logprob: -11.453922271728516
    5. ' s' → logprob: -12.078922271728516
    6. 's' → logprob: -13.703922271728516
    7. ' ' → logprob: -13.828922271728516
    8. '   ' → logprob: -13.828922271728516
    9. '	n' → logprob: -14.328922271728516
    10. '(' → logprob: -15.203922271728516

Token 99: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3134714365005493
    2. '%' → logprob: -1.3134714365005493
    3. ' ' → logprob: -9.188471794128418
    4. ' ' → logprob: -9.313471794128418
    5. '%s' → logprob: -11.563471794128418
    6. 's' → logprob: -12.188471794128418
    7. '`' → logprob: -15.188471794128418
    8. '```' → logprob: -15.188471794128418
    9. ' s' → logprob: -15.313471794128418
    10. '%d' → logprob: -15.313471794128418

Token 100: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.0126840758603066e-05
    2. ' s' → logprob: -10.125040054321289
    3. ' ' → logprob: -18.62504005432129
    4. '_s' → logprob: -18.87504005432129
    5. '`s' → logprob: -19.25004005432129
    6. '   ' → logprob: -19.37504005432129
    7. '  ' → logprob: -19.75004005432129
    8. '=' → logprob: -19.87504005432129
    9. ''s' → logprob: -20.50004005432129
    10. '	s' → logprob: -20.62504005432129

Token 101: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4741162061691284
    2. '==' → logprob: -0.9741162061691284
    3. '=' → logprob: -10.224116325378418
    4. ' ' → logprob: -13.724116325378418
    5. ' =' → logprob: -14.224116325378418
    6. '===' → logprob: -14.849116325378418
    7. '0' → logprob: -15.349116325378418
    8. ' ' → logprob: -15.474116325378418
    9. '()==' → logprob: -15.724116325378418
    10. ')==' → logprob: -16.5991153717041

Token 102: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. ' ' → logprob: -21.376502990722656
    4. '   ' → logprob: -22.001502990722656
    5. '  ' → logprob: -22.501502990722656
    6. '۰' → logprob: -23.001502990722656
    7. '```' → logprob: -23.626502990722656
    8. '０' → logprob: -24.126502990722656
    9. '00' → logprob: -24.251502990722656
    10. ' ' → logprob: -24.626502990722656

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -20.625
    4. 's' → logprob: -21.0
    5. '```' → logprob: -21.75
    6. '00' → logprob: -22.25
    7. '０' → logprob: -22.375
    8. '   ' → logprob: -22.5
    9. 'zero' → logprob: -23.0
    10. '٠' → logprob: -23.25

Token 104: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20781727135181427
    2. '
' → logprob: -1.9578173160552979
    3. '

' → logprob: -3.332817316055298
    4. '<|end|>' → logprob: -5.582817077636719
    5. '\n' → logprob: -5.957817077636719
    6. '```' → logprob: -7.457817077636719
    7. '\' → logprob: -7.582817077636719
    8. ':' → logprob: -7.832817077636719
    9. '
' → logprob: -7.957817077636719
    10. ':

' → logprob: -8.082817077636719

Token 105: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000958031858317554
    2. '
' → logprob: -8.000958442687988
    3. '<|end|>' → logprob: -8.375958442687988
    4. '\n' → logprob: -9.000958442687988
    5. 'n' → logprob: -9.250958442687988
    6. '

' → logprob: -9.875958442687988
    7. '\' → logprob: -10.125958442687988
    8. '```' → logprob: -10.375958442687988
    9. '#' → logprob: -11.500958442687988
    10. '  
' → logprob: -11.500958442687988

Token 106: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09011836349964142
    2. 'main' → logprob: -2.465118408203125
    3. ' check' → logprob: -7.340118408203125
    4. ' solve' → logprob: -9.340118408203125
    5. 'check' → logprob: -9.340118408203125
    6. ' find' → logprob: -9.840118408203125
    7. ' calculate' → logprob: -9.965118408203125
    8. 'solve' → logprob: -9.965118408203125
    9. ' is' → logprob: -10.090118408203125
    10. 'calculate' → logprob: -10.340118408203125

Token 107: '_yes' (ID: 151898)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001877351081930101
    2. '_' → logprob: -7.376877307891846
    3. '()' → logprob: -7.501877307891846
    4. '("")' → logprob: -8.501877784729004
    5. '("("' → logprob: -9.626877784729004
    6. ' ' → logprob: -10.001877784729004
    7. '(n' → logprob: -10.251877784729004
    8. '('' → logprob: -10.376877784729004
    9. ')' → logprob: -10.501877784729004
    10. ' (' → logprob: -10.626877784729004

Token 108: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.721228368813172e-05
    2. '()
' → logprob: -10.000086784362793
    3. '("' → logprob: -11.625086784362793
    4. '(' → logprob: -11.625086784362793
    5. '()

' → logprob: -12.250086784362793
    6. '()`' → logprob: -12.375086784362793
    7. '()"' → logprob: -12.375086784362793
    8. ' ()' → logprob: -12.500086784362793
    9. '():' → logprob: -13.125086784362793
    10. '():
' → logprob: -14.250086784362793

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026181264547631145
    2. 'print' → logprob: -8.500262260437012
    3. ' print' → logprob: -9.750262260437012
    4. '	print' → logprob: -17.875261306762695
    5. '   ' → logprob: -18.000261306762695
    6. '```' → logprob: -18.125261306762695
    7. '    ' → logprob: -18.875261306762695
    8. '       ' → logprob: -18.875261306762695
    9. '  ' → logprob: -19.375261306762695
    10. ' ' → logprob: -19.375261306762695

Token 110: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.090760431718081e-05
    2. '   ' → logprob: -10.000090599060059
    3. ' print' → logprob: -10.000090599060059
    4. 'pr' → logprob: -17.750091552734375
    5. '```' → logprob: -18.125091552734375
    6. 'prin' → logprob: -18.500091552734375
    7. '	print' → logprob: -19.250091552734375
    8. ' ' → logprob: -21.000091552734375
    9. 'prit' → logprob: -21.375091552734375
    10. 'pri' → logprob: -21.375091552734375

Token 111: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0008502478594891727
    2. '(' → logprob: -7.250850200653076
    3. '('' → logprob: -8.875850677490234
    4. '("("' → logprob: -15.250850677490234
    5. '"' → logprob: -16.375850677490234
    6. ' ("' → logprob: -16.500850677490234
    7. '(
' → logprob: -16.750850677490234
    8. '(True' → logprob: -17.125850677490234
    9. '()' → logprob: -17.375850677490234
    10. '   ' → logprob: -18.375850677490234

Token 112: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.47508180141448975
    2. 'Yes' → logprob: -0.9750818014144897
    3. 'yes' → logprob: -6.975081920623779
    4. 'Y' → logprob: -10.100081443786621
    5. ''' → logprob: -11.850081443786621
    6. '"' → logprob: -12.225081443786621
    7. ' Yes' → logprob: -12.725081443786621
    8. 'YA' → logprob: -12.975081443786621
    9. 'YE' → logprob: -13.100081443786621
    10. 'Ye' → logprob: -13.350081443786621

Token 113: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -1.4378848391061183e-05
    2. '')
' → logprob: -11.250014305114746
    3. ')' → logprob: -14.125014305114746
    4. '')

' → logprob: -15.000014305114746
    5. '")' → logprob: -16.125015258789062
    6. ''' → logprob: -16.125015258789062
    7. '')
' → logprob: -16.750015258789062
    8. '!' → logprob: -16.875015258789062
    9. '()' → logprob: -17.625015258789062
    10. '')"' → logprob: -18.625015258789062

Token 114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002619318547658622
    2. '
' → logprob: -8.250262260437012
    3. '

' → logprob: -15.250262260437012
    4. '```' → logprob: -15.750262260437012
    5. ' def' → logprob: -16.125261306762695
    6. '  
' → logprob: -16.500261306762695
    7. '<|end|>' → logprob: -17.125261306762695
    8. '    
' → logprob: -17.125261306762695
    9. 'ndef' → logprob: -18.125261306762695
    10. '	def' → logprob: -18.500261306762695

Token 115: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001410850090906024
    2. ' print' → logprob: -9.000141143798828
    3. 'def' → logprob: -11.000141143798828
    4. '_print' → logprob: -13.875141143798828
    5. '.print' → logprob: -18.125141143798828
    6. 'pr' → logprob: -18.500141143798828
    7. ' def' → logprob: -18.625141143798828
    8. 'println' → logprob: -20.000141143798828
    9. '(print' → logprob: -20.375141143798828
    10. 'prints' → logprob: -20.500141143798828

Token 116: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -3.500108141452074e-05
    2. '_n' → logprob: -11.500035285949707
    3. '('_' → logprob: -11.500035285949707
    4. '_' → logprob: -11.750035285949707
    5. '_NO' → logprob: -12.750035285949707
    6. '_No' → logprob: -13.000035285949707
    7. 'No' → logprob: -14.875035285949707
    8. '('' → logprob: -15.125035285949707
    9. '_none' → logprob: -15.500035285949707
    10. '_not' → logprob: -15.875035285949707

Token 117: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.069664333248511e-05
    2. '():
' → logprob: -10.875020980834961
    3. ' ():' → logprob: -13.875020980834961
    4. '()' → logprob: -14.250020980834961
    5. '():
' → logprob: -16.87502098083496
    6. '():

' → logprob: -18.75002098083496
    7. ':' → logprob: -18.87502098083496
    8. '(' → logprob: -20.25002098083496
    9. ' ()' → logprob: -21.87502098083496
    10. '()>' → logprob: -22.12502098083496

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008722824975848198
    2. 'print' → logprob: -4.75872278213501
    3. ' print' → logprob: -9.133723258972168
    4. '	print' → logprob: -16.00872230529785
    5. '```' → logprob: -16.00872230529785
    6. '  ' → logprob: -17.88372230529785
    7. ' ' → logprob: -17.88372230529785
    8. '(print' → logprob: -18.00872230529785
    9. '       ' → logprob: -18.25872230529785
    10. '   ' → logprob: -18.75872230529785

Token 119: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.165027217415627e-05
    2. ' print' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.37502098083496
    4. '	print' → logprob: -19.62502098083496
    5. '(print' → logprob: -21.12502098083496
    6. '```' → logprob: -21.37502098083496
    7. 'pass' → logprob: -21.50002098083496
    8. ' ' → logprob: -21.75002098083496
    9. '.print' → logprob: -22.37502098083496
    10. '#print' → logprob: -22.62502098083496

Token 120: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0007295898394659162
    2. '(' → logprob: -7.250729560852051
    3. '()' → logprob: -11.50072956085205
    4. 'No' → logprob: -12.50072956085205
    5. '(No' → logprob: -12.62572956085205
    6. '("' → logprob: -14.12572956085205
    7. '_no' → logprob: -14.37572956085205
    8. ''' → logprob: -15.62572956085205
    9. '('_' → logprob: -15.62572956085205
    10. '(no' → logprob: -15.62572956085205

Token 121: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.8624639324116288e-06
    2. ''' → logprob: -13.250001907348633
    3. '')' → logprob: -19.375001907348633
    4. ' No' → logprob: -19.500001907348633
    5. '"No' → logprob: -21.000001907348633
    6. 'NO' → logprob: -21.625001907348633
    7. '.No' → logprob: -22.500001907348633
    8. '_No' → logprob: -22.750001907348633
    9. 'Yes' → logprob: -23.000001907348633
    10. 'None' → logprob: -23.625001907348633

Token 122: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -7.3458322731312364e-06
    2. ')' → logprob: -12.250007629394531
    3. '')
' → logprob: -13.125007629394531
    4. ''' → logprob: -15.625007629394531
    5. '")' → logprob: -16.00000762939453
    6. '()' → logprob: -16.50000762939453
    7. '')

' → logprob: -16.62500762939453
    8. '')
' → logprob: -19.50000762939453
    9. '')"' → logprob: -19.75000762939453
    10. '```' → logprob: -20.25000762939453

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.392202976712724e-06
    2. 'if' → logprob: -12.125006675720215
    3. 'n' → logprob: -14.125006675720215
    4. ' def' → logprob: -17.1250057220459
    5. '    
' → logprob: -18.7500057220459
    6. 'ndef' → logprob: -19.0000057220459
    7. '  
' → logprob: -19.1250057220459
    8. 'num' → logprob: -19.1250057220459
    9. 'number' → logprob: -19.6250057220459
    10. 's' → logprob: -19.8750057220459

Token 124: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0168678630143404
    2. 'main' → logprob: -4.266867637634277
    3. 'def' → logprob: -6.641867637634277
    4. ' def' → logprob: -7.141867637634277
    5. ' solve' → logprob: -8.641867637634277
    6. '_main' → logprob: -9.016867637634277
    7. ' process' → logprob: -9.141867637634277
    8. ' run' → logprob: -9.641867637634277
    9. ' check' → logprob: -9.766867637634277
    10. 'solve' → logprob: -11.016867637634277

Token 125: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.5928495486150496e-05
    2. ' ():' → logprob: -11.375016212463379
    3. '():
' → logprob: -12.625016212463379
    4. '()' → logprob: -14.125016212463379
    5. '(' → logprob: -15.750016212463379
    6. '_' → logprob: -16.125015258789062
    7. '():
' → logprob: -17.125015258789062
    8. '(:' → logprob: -18.000015258789062
    9. '(":' → logprob: -18.375015258789062
    10. ':' → logprob: -18.500015258789062

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23916254937648773
    2. 'n' → logprob: -1.864162564277649
    3. ' n' → logprob: -3.1141624450683594
    4. 's' → logprob: -4.989162445068359
    5. ' s' → logprob: -5.364162445068359
    6. 'input' → logprob: -7.114162445068359
    7. ' input' → logprob: -7.364162445068359
    8. ' number' → logprob: -9.48916244506836
    9. 'number' → logprob: -9.61416244506836
    10. 'num' → logprob: -10.11416244506836

Token 127: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.10019006580114365
    2. ' n' → logprob: -2.9751901626586914
    3. 's' → logprob: -3.8501901626586914
    4. '   ' → logprob: -4.600190162658691
    5. 'number' → logprob: -5.350190162658691
    6. 'num' → logprob: -6.100190162658691
    7. 'value' → logprob: -6.225190162658691
    8. ' s' → logprob: -6.350190162658691
    9. 'input' → logprob: -7.100190162658691
    10. ' number' → logprob: -7.225190162658691

Token 128: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010947362519800663
    2. '=' → logprob: -4.635947227478027
    3. '_str' → logprob: -6.760947227478027
    4. '_' → logprob: -10.760947227478027
    5. '_input' → logprob: -12.510947227478027
    6. ' ' → logprob: -12.885947227478027
    7. '_string' → logprob: -13.635947227478027
    8. '=int' → logprob: -13.760947227478027
    9. ' ' → logprob: -14.510947227478027
    10. '=input' → logprob: -14.885947227478027

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002187972189858556
    2. '=' → logprob: -6.127188205718994
    3. ' =
' → logprob: -14.252187728881836
    4. ' =)' → logprob: -14.252187728881836
    5. ' ' → logprob: -14.627187728881836
    6. ' ' → logprob: -14.627187728881836
    7. '  ' → logprob: -15.502187728881836
    8. ',' → logprob: -15.627187728881836
    9. '   ' → logprob: -16.127187728881836
    10. ')' → logprob: -16.127187728881836

Token 130: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5759401917457581
    2. 'read' → logprob: -0.8259401917457581
    3. '	read' → logprob: -14.950940132141113
    4. '(read' → logprob: -15.450940132141113
    5. '   ' → logprob: -15.825940132141113
    6. ' ' → logprob: -16.32594108581543
    7. '  ' → logprob: -17.32594108581543
    8. 'input' → logprob: -17.57594108581543
    9. ' input' → logprob: -17.82594108581543
    10. '.read' → logprob: -18.95094108581543

Token 131: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.7385154428193346e-05
    2. '_' → logprob: -10.25003719329834
    3. '_line' → logprob: -14.75003719329834
    4. '()' → logprob: -14.75003719329834
    5. '_output' → logprob: -15.12503719329834
    6. '_in' → logprob: -15.62503719329834
    7. '_str' → logprob: -16.000038146972656
    8. 'input' → logprob: -16.250038146972656
    9. ' _' → logprob: -16.375038146972656
    10. '_inputs' → logprob: -16.625038146972656

Token 132: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.7994282795116305e-05
    2. '()
' → logprob: -10.00004768371582
    3. '()

' → logprob: -13.50004768371582
    4. '().' → logprob: -15.37504768371582
    5. '()`' → logprob: -15.37504768371582
    6. ' ()' → logprob: -15.50004768371582
    7. '())' → logprob: -15.87504768371582
    8. '()"' → logprob: -16.75004768371582
    9. '()\' → logprob: -16.87504768371582
    10. '():' → logprob: -17.00004768371582

Token 133: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5885435342788696
    2. '   ' → logprob: -0.8385435342788696
    3. '
' → logprob: -5.21354341506958
    4. ' n' → logprob: -5.33854341506958
    5. 's' → logprob: -7.21354341506958
    6. '    
' → logprob: -7.58854341506958
    7. '    ' → logprob: -8.088543891906738
    8. ' ' → logprob: -8.713543891906738
    9. '  ' → logprob: -8.838543891906738
    10. 'd' → logprob: -9.838543891906738

Token 134: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.27866238355636597
    2. 'digits' → logprob: -2.0286624431610107
    3. ' digits' → logprob: -2.9036624431610107
    4. ' n' → logprob: -2.9036624431610107
    5. 'digit' → logprob: -7.153662204742432
    6. '   ' → logprob: -7.653662204742432
    7. 'd' → logprob: -8.27866268157959
    8. 's' → logprob: -8.90366268157959
    9. ' digit' → logprob: -9.52866268157959
    10. ' ' → logprob: -9.77866268157959

Token 135: ' =' (ID: 314)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5544980764389038
    2. '_digits' → logprob: -1.3044980764389038
    3. '_str' → logprob: -2.3044981956481934
    4. '_int' → logprob: -3.4294981956481934
    5. ' =' → logprob: -5.054498195648193
    6. '_' → logprob: -5.179498195648193
    7. '_s' → logprob: -6.179498195648193
    8. '_chars' → logprob: -6.304498195648193
    9. '_lst' → logprob: -6.554498195648193
    10. '_val' → logprob: -6.929498195648193

Token 136: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.5235520005226135
    2. ' parse' → logprob: -0.8985520005226135
    3. 'int' → logprob: -8.148551940917969
    4. ' int' → logprob: -9.148551940917969
    5. '	parse' → logprob: -11.523551940917969
    6. '(parse' → logprob: -12.148551940917969
    7. '   ' → logprob: -12.273551940917969
    8. '=parse' → logprob: -12.523551940917969
    9. ' ' → logprob: -12.898551940917969
    10. '  ' → logprob: -13.273551940917969

Token 137: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -3.128163257315464e-07
    2. 'int' → logprob: -15.375
    3. '_' → logprob: -17.625
    4. '_in' → logprob: -17.75
    5. '_uint' → logprob: -19.0
    6. '_str' → logprob: -19.625
    7. '<int' → logprob: -20.0
    8. '_INT' → logprob: -20.875
    9. '_integer' → logprob: -21.125
    10. '_input' → logprob: -21.25

Token 138: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03804987296462059
    2. '(' → logprob: -3.2880499362945557
    3. ' (' → logprob: -12.288049697875977
    4. '(
' → logprob: -12.788049697875977
    5. '("("' → logprob: -14.788049697875977
    6. '(

' → logprob: -14.913049697875977
    7. '('' → logprob: -15.288049697875977
    8. ' ' → logprob: -17.038049697875977
    9. '((' → logprob: -17.288049697875977
    10. '()' → logprob: -17.413049697875977

Token 139: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.2233183042553719e-05
    2. 'str' → logprob: -11.500012397766113
    3. ')' → logprob: -13.875012397766113
    4. '_' → logprob: -14.375012397766113
    5. '_)' → logprob: -16.250011444091797
    6. '(n' → logprob: -16.250011444091797
    7. '   ' → logprob: -16.750011444091797
    8. '```' → logprob: -16.750011444091797
    9. '(str' → logprob: -16.875011444091797
    10. '_STR' → logprob: -16.875011444091797

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018154270946979523
    2. ')
' → logprob: -4.018154144287109
    3. ')n' → logprob: -13.26815414428711
    4. '   ' → logprob: -14.01815414428711
    5. ')
' → logprob: -14.14315414428711
    6. ' )' → logprob: -14.51815414428711
    7. ')

' → logprob: -15.26815414428711
    8. ' ' → logprob: -16.26815414428711
    9. ' )
' → logprob: -16.64315414428711
    10. '))' → logprob: -16.89315414428711

Token 141: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5598818063735962
    2. '   ' → logprob: -1.4348818063735962
    3. ' s' → logprob: -2.3098816871643066
    4. 'digits' → logprob: -3.1848816871643066
    5. ' digits' → logprob: -4.059881687164307
    6. 'd' → logprob: -4.059881687164307
    7. 'digit' → logprob: -5.184881687164307
    8. 'n' → logprob: -5.684881687164307
    9. ' d' → logprob: -6.184881687164307
    10. ' n' → logprob: -7.059881687164307

Token 142: ' s' (ID: 265)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.3357069492340088
    2. 's' (adapté à ' s') → logprob: -1.9607069492340088
    3. ' digits' → logprob: -2.460706949234009
    4. 'n' → logprob: -3.835706949234009
    5. 'digit' → logprob: -3.835706949234009
    6. 'd' → logprob: -5.46070671081543
    7. ' s' → logprob: -5.58570671081543
    8. '   ' → logprob: -5.71070671081543
    9. 'str' → logprob: -5.96070671081543
    10. ' n' → logprob: -7.21070671081543

Token 143: '_str' (ID: 6182)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014201581478119
    2. ' =' → logprob: -1.7014201879501343
    3. '=sum' → logprob: -12.451419830322266
    4. 's' → logprob: -13.701419830322266
    5. '_' → logprob: -13.951419830322266
    6. 'um' → logprob: -15.576419830322266
    7. '=int' → logprob: -15.701419830322266
    8. '=s' → logprob: -16.076419830322266
    9. '_sum' → logprob: -16.201419830322266
    10. ' ' → logprob: -16.326419830322266

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931481957435608
    2. ' =' → logprob: -0.6931481957435608
    3. '_' → logprob: -15.193148612976074
    4. 's' → logprob: -15.568148612976074
    5. ' ' → logprob: -16.068147659301758
    6. ')' → logprob: -16.068147659301758
    7. ',' → logprob: -17.068147659301758
    8. '_=' → logprob: -17.068147659301758
    9. '＝' → logprob: -17.193147659301758
    10. '[' → logprob: -17.693147659301758

Token 145: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3613591194152832
    2. ' str' → logprob: -1.4863591194152832
    3. 'str' → logprob: -1.4863591194152832
    4. ' int' → logprob: -1.7363591194152832
    5. 'sum' → logprob: -2.861359119415283
    6. ' n' → logprob: -3.861359119415283
    7. ' sum' → logprob: -3.861359119415283
    8. 'n' → logprob: -4.361359119415283
    9. ' ' → logprob: -6.236359119415283
    10. 's' → logprob: -8.111358642578125

Token 146: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.981667537620524e-06
    2. 'to' → logprob: -13.625001907348633
    3. ''_' → logprob: -15.875001907348633
    4. 'To' → logprob: -16.000001907348633
    5. '_str' → logprob: -16.125001907348633
    6. '"_' → logprob: -16.500001907348633
    7. '_' → logprob: -17.000001907348633
    8. '```' → logprob: -17.000001907348633
    9. '('_' → logprob: -17.625001907348633
    10. 't' → logprob: -18.000001907348633

Token 147: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -5.848420551046729e-05
    2. 'str' → logprob: -9.7500581741333
    3. '_' → logprob: -15.8750581741333
    4. ' str' → logprob: -18.625059127807617
    5. '_s' → logprob: -18.750059127807617
    6. '_st' → logprob: -18.875059127807617
    7. '_n' → logprob: -19.000059127807617
    8. 's' → logprob: -19.375059127807617
    9. 'n' → logprob: -19.375059127807617
    10. 'Str' → logprob: -19.750059127807617

Token 148: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2711324393749237
    2. '(' → logprob: -2.021132469177246
    3. '(sum' → logprob: -2.271132469177246
    4. '(s' → logprob: -6.521132469177246
    5. '(len' → logprob: -10.021132469177246
    6. '(total' → logprob: -10.146132469177246
    7. '<|end|>' → logprob: -10.146132469177246
    8. '((' → logprob: -10.271132469177246
    9. '('' → logprob: -10.396132469177246
    10. ' (' → logprob: -10.396132469177246

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008315152488648891
    2. ')
' → logprob: -5.508315086364746
    3. '())' → logprob: -6.133315086364746
    4. ' )' → logprob: -7.008315086364746
    5. 'sum' → logprob: -8.258315086364746
    6. '))' → logprob: -8.508315086364746
    7. ')

' → logprob: -8.883315086364746
    8. '()' → logprob: -9.258315086364746
    9. '(' → logprob: -9.508315086364746
    10. '_sum' → logprob: -10.008315086364746

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32142743468284607
    2. 's' → logprob: -1.3214274644851685
    3. ' s' → logprob: -5.321427345275879
    4. ' ' → logprob: -7.196427345275879
    5. '_s' → logprob: -7.196427345275879
    6. 'd' → logprob: -7.446427345275879
    7. '_list' → logprob: -8.321427345275879
    8. ')' → logprob: -8.446427345275879
    9. '_' → logprob: -9.321427345275879
    10. '	s' → logprob: -9.571427345275879

Token 151: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.06737029552459717
    2. ' s' → logprob: -3.0673704147338867
    3. '   ' → logprob: -4.817370414733887
    4. 'str' → logprob: -5.692370414733887
    5. 'd' → logprob: -6.067370414733887
    6. 'digits' → logprob: -6.817370414733887
    7. '_s' → logprob: -7.067370414733887
    8. ' str' → logprob: -7.317370414733887
    9. '_list' → logprob: -7.567370414733887
    10. '_str' → logprob: -7.942370414733887

Token 152: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.005411623045802116
    2. '_digits' → logprob: -5.880411624908447
    3. '_lst' → logprob: -6.755411624908447
    4. '_str' → logprob: -7.005411624908447
    5. '_' → logprob: -8.505411148071289
    6. ' =' → logprob: -8.755411148071289
    7. '_chars' → logprob: -9.880411148071289
    8. '_len' → logprob: -10.630411148071289
    9. '=' → logprob: -10.755411148071289
    10. '_d' → logprob: -10.880411148071289

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05491816624999046
    2. '=' → logprob: -2.929918050765991
    3. 's' → logprob: -10.80491828918457
    4. '<|end|>' → logprob: -12.80491828918457
    5. ')' → logprob: -13.05491828918457
    6. '_' → logprob: -13.05491828918457
    7. ' =)' → logprob: -13.30491828918457
    8. '=str' → logprob: -13.92991828918457
    9. '=[]' → logprob: -14.05491828918457
    10. ' ' → logprob: -14.17991828918457

Token 154: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.25211280584335327
    2. 'str' → logprob: -1.502112865447998
    3. 'list' → logprob: -9.50211238861084
    4. ' list' → logprob: -10.50211238861084
    5. '(str' → logprob: -10.62711238861084
    6. '	str' → logprob: -10.62711238861084
    7. 's' → logprob: -11.12711238861084
    8. '[str' → logprob: -12.50211238861084
    9. '_str' → logprob: -12.75211238861084
    10. ' ' → logprob: -12.75211238861084

Token 155: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -19.5
    3. '_' → logprob: -20.375
    4. '_TO' → logprob: -21.125
    5. '_t' → logprob: -21.25
    6. 'To' → logprob: -21.625
    7. '```' → logprob: -21.75
    8. '##_' → logprob: -22.0
    9. 't' → logprob: -22.125
    10. ''_' → logprob: -22.125

Token 156: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.003249723929911852
    2. 'list' → logprob: -5.753249645233154
    3. 'ist' → logprob: -9.628250122070312
    4. 's' → logprob: -12.628250122070312
    5. 'List' → logprob: -13.503250122070312
    6. 'str' → logprob: -14.753250122070312
    7. 'st' → logprob: -14.753250122070312
    8. 'l' → logprob: -15.378250122070312
    9. 'lst' → logprob: -15.503250122070312
    10. '_str' → logprob: -16.628250122070312

Token 157: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0005552975926548243
    2. '(' → logprob: -7.500555515289307
    3. '(n' → logprob: -13.250555038452148
    4. 's' → logprob: -15.250555038452148
    5. '('' → logprob: -16.25055503845215
    6. ' (' → logprob: -16.37555503845215
    7. '(ss' → logprob: -16.62555503845215
    8. '(
' → logprob: -17.37555503845215
    9. '("("' → logprob: -18.00055503845215
    10. '(str' → logprob: -18.62555503845215

Token 158: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.7372048862162046e-05
    2. ')' → logprob: -11.625027656555176
    3. '_)' → logprob: -11.750027656555176
    4. '_' → logprob: -12.125027656555176
    5. '_s' → logprob: -12.625027656555176
    6. 'str' → logprob: -13.875027656555176
    7. 's' → logprob: -15.500027656555176
    8. ')_' → logprob: -15.500027656555176
    9. '_STR' → logprob: -16.37502670288086
    10. '_list' → logprob: -16.87502670288086

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009577934979461133
    2. ')
' → logprob: -7.00095796585083
    3. '   ' → logprob: -10.375957489013672
    4. '()' → logprob: -11.750957489013672
    5. ' )' → logprob: -12.250957489013672
    6. ' ' → logprob: -14.750957489013672
    7. ']' → logprob: -14.750957489013672
    8. ')s' → logprob: -14.875957489013672
    9. 's' → logprob: -15.500957489013672
    10. '())' → logprob: -16.125957489013672

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16021224856376648
    2. 's' → logprob: -2.285212278366089
    3. 'd' → logprob: -4.03521203994751
    4. 'digits' → logprob: -4.41021203994751
    5. '<|end|>' → logprob: -4.78521203994751
    6. ' digits' → logprob: -6.16021203994751
    7. '_digits' → logprob: -6.28521203994751
    8. ' s' → logprob: -6.78521203994751
    9. ' ' → logprob: -7.03521203994751
    10. ')' → logprob: -7.53521203994751

Token 161: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.23083743453025818
    2. 's' → logprob: -1.9808374643325806
    3. 'd' → logprob: -2.980837345123291
    4. ' digits' → logprob: -4.230837345123291
    5. ' s' → logprob: -6.980837345123291
    6. 'digit' → logprob: -7.105837345123291
    7. '   ' → logprob: -7.730837345123291
    8. ' ' → logprob: -8.35583782196045
    9. '_digits' → logprob: -8.98083782196045
    10. ' d' → logprob: -9.23083782196045

Token 162: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.255205899477005
    2. '_list' → logprob: -1.5052058696746826
    3. ' =' → logprob: -6.505206108093262
    4. '_digits' → logprob: -7.005206108093262
    5. '=' → logprob: -7.630206108093262
    6. '=_' → logprob: -8.630206108093262
    7. '_lists' → logprob: -9.880206108093262
    8. '_s' → logprob: -10.005206108093262
    9. '_lst' → logprob: -10.255206108093262
    10. 's' → logprob: -10.630206108093262

Token 163: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.029751762747764587
    2. 'list' → logprob: -3.529751777648926
    3. ' ' → logprob: -14.279751777648926
    4. ' ' → logprob: -15.279751777648926
    5. '	list' → logprob: -16.15475082397461
    6. '_list' → logprob: -16.40475082397461
    7. '=list' → logprob: -16.77975082397461
    8. 'List' → logprob: -17.52975082397461
    9. '[list' → logprob: -18.65475082397461
    10. ':list' → logprob: -18.77975082397461

Token 164: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0031812789384275675
    2. '_' → logprob: -5.753181457519531
    3. '_digit' → logprob: -13.878181457519531
    4. '_d' → logprob: -14.128181457519531
    5. 'digits' → logprob: -14.128181457519531
    6. 'Digits' → logprob: -15.753181457519531
    7. '_chars' → logprob: -15.878181457519531
    8. ' _' → logprob: -16.00318145751953
    9. ')_' → logprob: -16.37818145751953
    10. '(' → logprob: -16.37818145751953

Token 165: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00022010602697264403
    2. '(' → logprob: -8.50022029876709
    3. ' (' → logprob: -11.12522029876709
    4. '(d' → logprob: -13.75022029876709
    5. '(n' → logprob: -15.50022029876709
    6. '(str' → logprob: -16.500219345092773
    7. '(
' → logprob: -16.750219345092773
    8. '("("' → logprob: -16.750219345092773
    9. '(ss' → logprob: -17.000219345092773
    10. 's' → logprob: -17.000219345092773

Token 166: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1875571544806007e-05
    2. 'list' → logprob: -11.500011444091797
    3. 'ist' → logprob: -14.000011444091797
    4. ')' → logprob: -15.125011444091797
    5. '_' → logprob: -15.125011444091797
    6. 'List' → logprob: -15.750011444091797
    7. '_List' → logprob: -16.750011444091797
    8. '_LIST' → logprob: -17.250011444091797
    9. '_)' → logprob: -18.625011444091797
    10. 's' → logprob: -18.625011444091797

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003602798329666257
    2. ')
' → logprob: -5.628602981567383
    3. '   ' → logprob: -13.503602981567383
    4. ' )' → logprob: -14.503602981567383
    5. ')

' → logprob: -14.878602981567383
    6. ']' → logprob: -15.378602981567383
    7. ')
' → logprob: -15.628602981567383
    8. ' ' → logprob: -16.378602981567383
    9. ')return' → logprob: -17.003602981567383
    10. '),' → logprob: -17.628602981567383

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1439339965581894
    2. 's' → logprob: -2.8939340114593506
    3. ' s' → logprob: -3.2689340114593506
    4. '
' → logprob: -3.5189340114593506
    5. '    
' → logprob: -5.7689337730407715
    6. ' ' → logprob: -5.8939337730407715
    7. '  ' → logprob: -7.1439337730407715
    8. '  
' → logprob: -7.1439337730407715
    9. ' 
' → logprob: -7.2689337730407715
    10. '    ' → logprob: -7.3939337730407715

Token 169: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.7563188076019287
    2. ' s' → logprob: -0.8813188076019287
    3. 'total' → logprob: -3.1313188076019287
    4. 'sum' → logprob: -3.5063188076019287
    5. ' total' → logprob: -3.5063188076019287
    6. ' sum' → logprob: -4.631319046020508
    7. '   ' → logprob: -6.256319046020508
    8. 'digit' → logprob: -7.631319046020508
    9. ' digit' → logprob: -8.506319046020508
    10. ' ' → logprob: -8.881319046020508

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15182532370090485
    2. '=' → logprob: -2.526825428009033
    3. 'um' → logprob: -3.151825428009033
    4. '_' → logprob: -4.151825428009033
    5. '_sum' → logprob: -6.151825428009033
    6. 'sum' → logprob: -9.151824951171875
    7. '=sum' → logprob: -9.276824951171875
    8. '_total' → logprob: -9.651824951171875
    9. '_=' → logprob: -10.901824951171875
    10. '=_' → logprob: -11.401824951171875

Token 171: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5759408473968506
    2. 'sum' → logprob: -0.8259408473968506
    3. '(sum' → logprob: -14.57594108581543
    4. '	sum' → logprob: -14.82594108581543
    5. '
' → logprob: -15.82594108581543
    6. '=sum' → logprob: -15.95094108581543
    7. ' ' → logprob: -16.07594108581543
    8. '   ' → logprob: -16.70094108581543
    9. '_sum' → logprob: -17.20094108581543
    10. '.sum' → logprob: -18.07594108581543

Token 172: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0008074867073446512
    2. '_' → logprob: -7.125807285308838
    3. ' _' → logprob: -14.125807762145996
    4. 'digits' → logprob: -14.750807762145996
    5. '(_' → logprob: -14.875807762145996
    6. '_(' → logprob: -15.000807762145996
    7. '_d' → logprob: -15.750807762145996
    8. '_tokens' → logprob: -15.750807762145996
    9. '(' → logprob: -15.875807762145996
    10. '```' → logprob: -15.875807762145996

Token 173: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.07891149073839188
    2. '(' → logprob: -2.578911542892456
    3. ' (' → logprob: -11.203911781311035
    4. '_digits' → logprob: -12.703911781311035
    5. '(
' → logprob: -12.953911781311035
    6. 'digits' → logprob: -14.328911781311035
    7. '(

' → logprob: -14.703911781311035
    8. '(numbers' → logprob: -15.453911781311035
    9. '<|end|>' → logprob: -15.578911781311035
    10. '(tokens' → logprob: -16.20391082763672

Token 174: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.000283265660982579
    2. 'its' → logprob: -9.000283241271973
    3. 'igts' → logprob: -9.500283241271973
    4. 'digits' → logprob: -9.625283241271973
    5. 'ig' → logprob: -11.250283241271973
    6. '_digits' → logprob: -13.125283241271973
    7. 'g' → logprob: -13.250283241271973
    8. 'ights' → logprob: -14.625283241271973
    9. ')' → logprob: -14.625283241271973
    10. 'igs' → logprob: -15.125283241271973

Token 175: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.612634362885728e-05
    2. ')
' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.875076293945312
    4. ')

' → logprob: -15.125076293945312
    5. ')return' → logprob: -15.500076293945312
    6. '()' → logprob: -15.875076293945312
    7. ' )' → logprob: -16.500076293945312
    8. '))' → logprob: -17.375076293945312
    9. '())' → logprob: -17.625076293945312
    10. ')#' → logprob: -17.625076293945312

Token 176: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003996596205979586
    2. '   ' → logprob: -5.7539963722229
    3. '    
' → logprob: -8.003996849060059
    4. '  
' → logprob: -8.128996849060059
    5. ' 
' → logprob: -9.503996849060059
    6. '<|end|>' → logprob: -9.878996849060059
    7. '
' → logprob: -10.628996849060059
    8. '   
' → logprob: -11.503996849060059
    9. '\n' → logprob: -12.128996849060059
    10. '

' → logprob: -12.128996849060059

Token 177: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19713930785655975
    2. '   ' → logprob: -1.9471392631530762
    3. ' if' → logprob: -3.322139263153076
    4. '
' → logprob: -9.322139739990234
    5. '    
' → logprob: -10.322139739990234
    6. '	if' → logprob: -10.447139739990234
    7. ' ' → logprob: -12.072139739990234
    8. 'print' → logprob: -13.197139739990234
    9. '  
' → logprob: -13.697139739990234
    10. ' 
' → logprob: -13.947139739990234

Token 178: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.005941479001194239
    2. 'is' → logprob: -5.130941390991211
    3. '(is' → logprob: -11.880941390991211
    4. '_' → logprob: -13.005941390991211
    5. ' (' → logprob: -13.380941390991211
    6. ' ' → logprob: -14.755941390991211
    7. '(' → logprob: -14.755941390991211
    8. ' ' → logprob: -15.130941390991211
    9. ' n' → logprob: -15.380941390991211
    10. '_is' → logprob: -15.505941390991211

Token 179: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.750001907348633
    3. 'div' → logprob: -14.250001907348633
    4. '_di' → logprob: -16.750001907348633
    5. '_DIV' → logprob: -17.250001907348633
    6. '<div' → logprob: -17.375001907348633
    7. ' divisible' → logprob: -18.375001907348633
    8. '_d' → logprob: -19.250001907348633
    9. '_dis' → logprob: -19.500001907348633
    10. ' _' → logprob: -19.625001907348633

Token 180: 'isible' (ID: 181386)
  Prédit: 'isible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -2.935296834039036e-06
    2. 'is' → logprob: -13.12500286102295
    3. 'ISIBLE' → logprob: -14.12500286102295
    4. 'isable' → logprob: -15.62500286102295
    5. 'sible' → logprob: -17.375003814697266
    6. 'ible' → logprob: -19.125003814697266
    7. ' is' → logprob: -20.500003814697266
    8. '   ' → logprob: -20.750003814697266
    9. '```' → logprob: -21.000003814697266
    10. 'isi' → logprob: -21.750003814697266

Token 181: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001278534036828205
    2. '(' → logprob: -9.000127792358398
    3. ' (' → logprob: -12.375127792358398
    4. '(
' → logprob: -15.750127792358398
    5. 'n' → logprob: -18.0001277923584
    6. ' ' → logprob: -19.3751277923584
    7. ')' → logprob: -19.6251277923584
    8. '
' → logprob: -20.7501277923584
    9. '(

' → logprob: -21.0001277923584
    10. '((' → logprob: -21.1251277923584

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01258370652794838
    2. ',s' → logprob: -4.5125837326049805
    3. ' ,' → logprob: -6.6375837326049805
    4. 's' → logprob: -8.51258373260498
    5. ',
' → logprob: -11.51258373260498
    6. ' ' → logprob: -12.51258373260498
    7. ' s' → logprob: -12.63758373260498
    8. ',n' → logprob: -12.76258373260498
    9. 'n' → logprob: -14.76258373260498
    10. '(' → logprob: -14.76258373260498

Token 183: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.02324768900871277
    2. 's' → logprob: -3.773247718811035
    3. ' ' → logprob: -13.898247718811035
    4. ')' → logprob: -14.023247718811035
    5. ' ' → logprob: -14.898247718811035
    6. '(s' → logprob: -16.52324676513672
    7. '	s' → logprob: -17.02324676513672
    8. ')s' → logprob: -17.14824676513672
    9. '_s' → logprob: -17.89824676513672
    10. ' 
' → logprob: -18.02324676513672

Token 184: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021676832693628967
    2. '):
' → logprob: -8.500216484069824
    3. ')' → logprob: -11.500216484069824
    4. ':' → logprob: -13.000216484069824
    5. ' ):' → logprob: -14.625216484069824
    6. '):
' → logprob: -16.00021743774414
    7. '):

' → logprob: -16.00021743774414
    8. '():' → logprob: -16.25021743774414
    9. '   ' → logprob: -18.62521743774414
    10. '}:' → logprob: -18.75021743774414

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7713354825973511
    2. '   ' → logprob: -1.146335482597351
    3. 'print' → logprob: -1.646335482597351
    4. ' print' → logprob: -4.396335601806641
    5. '(print' → logprob: -4.521335601806641
    6. '
' → logprob: -6.771335601806641
    7. '()' → logprob: -7.021335601806641
    8. '    
' → logprob: -7.396335601806641
    9. '```' → logprob: -8.02133560180664
    10. '        
' → logprob: -8.52133560180664

Token 186: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.015349856577813625
    2. ' print' → logprob: -4.265349864959717
    3. '   ' → logprob: -7.515349864959717
    4. '       ' → logprob: -7.765349864959717
    5. '
' → logprob: -9.515349388122559
    6. '    
' → logprob: -9.890349388122559
    7. '(print' → logprob: -9.890349388122559
    8. '        
' → logprob: -11.015349388122559
    9. ' 
' → logprob: -11.390349388122559
    10. '	print' → logprob: -11.640349388122559

Token 187: '_yes' (ID: 151898)
  Prédit: '_yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_yes' → logprob: -2.951771421066951e-05
    2. '_' → logprob: -10.500029563903809
    3. '_no' → logprob: -13.875029563903809
    4. '('_' → logprob: -14.375029563903809
    5. '(' → logprob: -15.875029563903809
    6. '_you' → logprob: -16.750028610229492
    7. ''_' → logprob: -16.750028610229492
    8. 'Yes' → logprob: -17.375028610229492
    9. '```' → logprob: -17.625028610229492
    10. 'yes' → logprob: -17.875028610229492

Token 188: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.061998505145311356
    2. '()
' → logprob: -2.8119986057281494
    3. '   ' → logprob: -10.56199836730957
    4. '()

' → logprob: -13.06199836730957
    5. '(' → logprob: -13.68699836730957
    6. 'else' → logprob: -14.56199836730957
    7. ' ()' → logprob: -14.56199836730957
    8. '()\' → logprob: -14.93699836730957
    9. '()
' → logprob: -16.56199836730957
    10. '())' → logprob: -16.81199836730957

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1856357604265213
    2. 'else' → logprob: -1.9356358051300049
    3. ' else' → logprob: -3.685635805130005
    4. '	else' → logprob: -12.310635566711426
    5. '    
' → logprob: -12.435635566711426
    6. '
' → logprob: -14.685635566711426
    7. ' ' → logprob: -14.685635566711426
    8. '```' → logprob: -15.435635566711426
    9. '_else' → logprob: -15.935635566711426
    10. ')' → logprob: -16.060636520385742

Token 190: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5829938054084778
    2. 'else' (adapté à ' else') → logprob: -0.8329938054084778
    3. ' else' → logprob: -4.957993984222412
    4. ' ' → logprob: -13.957993507385254
    5. '	else' → logprob: -14.332993507385254
    6. '```' → logprob: -15.082993507385254
    7. '    
' → logprob: -15.707993507385254
    8. 'e' → logprob: -15.832993507385254
    9. 'els' → logprob: -16.45799446105957
    10. '  ' → logprob: -16.45799446105957

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019445013254880905
    2. ':
' → logprob: -4.394444942474365
    3. '():' → logprob: -5.144444942474365
    4. '():
' → logprob: -7.019444942474365
    5. '()' → logprob: -8.769445419311523
    6. '   ' → logprob: -11.644445419311523
    7. '(' → logprob: -11.644445419311523
    8. '()
' → logprob: -12.894445419311523
    9. '       ' → logprob: -13.019445419311523
    10. ' :
' → logprob: -13.019445419311523

Token 192: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.516404926776886
    2. '       ' → logprob: -1.2664048671722412
    3. '   ' → logprob: -2.516404867172241
    4. ' print' → logprob: -3.266404867172241
    5. '(print' → logprob: -6.01640510559082
    6. '	print' → logprob: -9.39140510559082
    7. '.print' → logprob: -10.89140510559082
    8. '```' → logprob: -11.01640510559082
    9. '
' → logprob: -11.51640510559082
    10. '    
' → logprob: -11.89140510559082

Token 193: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018150178715586662
    2. ' print' → logprob: -4.018150329589844
    3. '(print' → logprob: -15.643150329589844
    4. '   ' → logprob: -16.893150329589844
    5. '       ' → logprob: -17.768150329589844
    6. '	print' → logprob: -18.143150329589844
    7. '.print' → logprob: -18.393150329589844
    8. '_print' → logprob: -19.518150329589844
    9. '```' → logprob: -19.518150329589844
    10. ' ' → logprob: -20.393150329589844

Token 194: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.75
    3. 'no' → logprob: -18.125
    4. '_n' → logprob: -18.25
    5. '```' → logprob: -18.375
    6. '_yes' → logprob: -19.25
    7. '_No' → logprob: -19.375
    8. 'No' → logprob: -19.375
    9. '_NO' → logprob: -19.625
    10. '_none' → logprob: -19.875

Token 195: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07923246175050735
    2. '()
' → logprob: -2.5792324542999268
    3. '()

' → logprob: -8.329232215881348
    4. '()\' → logprob: -9.954232215881348
    5. '(' → logprob: -10.329232215881348
    6. '(
' → logprob: -11.204232215881348
    7. '()`' → logprob: -12.704232215881348
    8. '()
' → logprob: -13.954232215881348
    9. '()<' → logprob: -14.079232215881348
    10. '\' → logprob: -14.829232215881348

Token 196: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017965663224458694
    2. '
' → logprob: -4.392965793609619
    3. 'main' → logprob: -5.892965793609619
    4. '\n' → logprob: -6.017965793609619
    5. '\' → logprob: -9.142965316772461
    6. ' if' → logprob: -10.392965316772461
    7. '```' → logprob: -10.642965316772461
    8. '(
' → logprob: -11.267965316772461
    9. 'n' → logprob: -11.267965316772461
    10. '(main' → logprob: -11.517965316772461

Token 197: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0789058730006218
    2. '(' → logprob: -2.5789058208465576
    3. '()
' → logprob: -12.203906059265137
    4. '(
' → logprob: -12.578906059265137
    5. '();' → logprob: -13.203906059265137
    6. '()`' → logprob: -13.328906059265137
    7. '()

' → logprob: -14.453906059265137
    8. '(

' → logprob: -14.453906059265137
    9. '#' → logprob: -14.703906059265137
    10. '()">' → logprob: -15.203906059265137


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 195
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 106
Tokens correctement prédits (top 10): 177
Précision stricte (1ère position): 48.21%
Précision adaptée (1ère position): 54.36%
Précision (top 10): 90.77%
================================================================================
