================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
s = [1,2,3,4,5,6,7,8,9]

found = False
for i in s:
    if N % i == 0:
        if (N // i) in s:
            print("Yes")
            found = True
            break

if not found:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '`)' → logprob: -9.79057502746582
    10. '(

' → logprob: -9.79057502746582

Token 5: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' =' (ID: 314)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.4148893356323242
    2. 'um' → logprob: -1.4148893356323242
    3. 't' → logprob: -1.9148893356323242
    4. '[' → logprob: -2.039889335632324
    5. '.' → logprob: -2.539889335632324
    6. 'u' → logprob: -2.914889335632324
    7. ' =' → logprob: -3.164889335632324
    8. '=' → logprob: -3.789889335632324
    9. 'trip' → logprob: -4.914889335632324
    10. 'tri' → logprob: -5.789889335632324

Token 7: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0670812726020813
    2. ' input' → logprob: -3.4420812129974365
    3. '""' → logprob: -3.6920812129974365
    4. '''' → logprob: -5.442081451416016
    5. '"' → logprob: -6.567081451416016
    6. '0' → logprob: -7.317081451416016
    7. ''' → logprob: -7.567081451416016
    8. ' ' → logprob: -8.192081451416016
    9. '[]' → logprob: -8.192081451416016
    10. ' ""' → logprob: -9.317081451416016

Token 8: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5907743573188782
    2. 'input' → logprob: -0.8407743573188782
    3. '0' → logprob: -4.3407745361328125
    4. ']' → logprob: -7.5907745361328125
    5. 'list' → logprob: -7.5907745361328125
    6. 'i' → logprob: -9.215774536132812
    7. 'tuple' → logprob: -9.215774536132812
    8. '(int' → logprob: -9.340774536132812
    9. 'str' → logprob: -9.590774536132812
    10. '[]' → logprob: -9.840774536132812

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11567432433366776
    2. ']' → logprob: -2.2406742572784424
    3. ' ]' → logprob: -6.9906744956970215
    4. ')' → logprob: -7.7406744956970215
    5. '+' → logprob: -7.9906744956970215
    6. ' ,' → logprob: -8.115674018859863
    7. ',
' → logprob: -8.240674018859863
    8. ' for' → logprob: -8.990674018859863
    9. ')]' → logprob: -9.240674018859863
    10. '0' → logprob: -9.615674018859863

Token 10: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1657503843307495
    2. '2' → logprob: -2.165750503540039
    3. '0' → logprob: -3.415750503540039
    4. '1' → logprob: -5.915750503540039
    5. '3' → logprob: -7.290750503540039
    6. ' ])' → logprob: -7.540750503540039
    7. ' ]' → logprob: -7.790750503540039
    8. '])' → logprob: -8.165750503540039
    9. ']' → logprob: -8.415750503540039
    10. '4' → logprob: -9.540750503540039

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024194144643843174
    2. ']' → logprob: -6.377419471740723
    3. ' ,' → logprob: -7.752419471740723
    4. '3' → logprob: -9.252419471740723
    5. ')' → logprob: -9.502419471740723
    6. ',
' → logprob: -9.627419471740723
    7. ' ' → logprob: -10.877419471740723
    8. ' ]' → logprob: -10.877419471740723
    9. ',

' → logprob: -13.002419471740723
    10. '   ' → logprob: -13.502419471740723

Token 12: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08895320445299149
    2. ' ' → logprob: -2.4639532566070557
    3. '4' → logprob: -12.088953018188477
    4. ')' → logprob: -13.088953018188477
    5. ']' → logprob: -13.338953018188477
    6. ' ]' → logprob: -13.713953018188477
    7. ' )' → logprob: -14.463953018188477
    8. '0' → logprob: -14.963953018188477
    9. ',' → logprob: -15.088953018188477
    10. '1' → logprob: -15.213953018188477

Token 13: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018626395612955093
    2. ',' → logprob: -4.0186262130737305
    3. ')' → logprob: -8.51862621307373
    4. ')]' → logprob: -9.01862621307373
    5. ' ]' → logprob: -9.14362621307373
    6. '])' → logprob: -10.64362621307373
    7. '`]' → logprob: -11.51862621307373
    8. '']' → logprob: -11.76862621307373
    9. ',
' → logprob: -13.51862621307373
    10. '4' → logprob: -13.51862621307373

Token 14: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0053038387559354305
    2. ' ' → logprob: -5.255303859710693
    3. ']' → logprob: -10.380303382873535
    4. '])' → logprob: -11.380303382873535
    5. ' ])' → logprob: -11.380303382873535
    6. ' ]' → logprob: -11.755303382873535
    7. ')' → logprob: -13.005303382873535
    8. ',' → logprob: -13.505303382873535
    9. ' )' → logprob: -13.755303382873535
    10. ')]' → logprob: -14.255303382873535

Token 15: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03000549040734768
    2. ',' → logprob: -3.53000545501709
    3. ')' → logprob: -9.15500545501709
    4. ' ]' → logprob: -9.53000545501709
    5. ')]' → logprob: -9.90500545501709
    6. '`]' → logprob: -11.65500545501709
    7. '])' → logprob: -11.65500545501709
    8. '']' → logprob: -12.15500545501709
    9. ',
' → logprob: -13.65500545501709
    10. '"]' → logprob: -15.28000545501709

Token 16: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.003093458479270339
    2. ' ' → logprob: -5.878093242645264
    3. ']' → logprob: -8.878093719482422
    4. ')' → logprob: -9.878093719482422
    5. '])' → logprob: -10.003093719482422
    6. ' ])' → logprob: -11.003093719482422
    7. ' ]' → logprob: -11.253093719482422
    8. ' )' → logprob: -11.753093719482422
    9. ')]' → logprob: -12.128093719482422
    10. '])]' → logprob: -12.253093719482422

Token 17: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004166105354670435
    2. ',' → logprob: -7.8754167556762695
    3. ')' → logprob: -11.25041675567627
    4. ' ]' → logprob: -11.25041675567627
    5. '']' → logprob: -12.62541675567627
    6. '])' → logprob: -12.87541675567627
    7. ')]' → logprob: -13.00041675567627
    8. '`]' → logprob: -13.50041675567627
    9. '[' → logprob: -15.62541675567627
    10. '"]' → logprob: -15.87541675567627

Token 18: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.005588395055383444
    2. ' ' → logprob: -5.255588531494141
    3. ')' → logprob: -8.50558853149414
    4. ' )' → logprob: -9.38058853149414
    5. ' ]' → logprob: -10.38058853149414
    6. ')]' → logprob: -11.13058853149414
    7. ']' → logprob: -11.50558853149414
    8. ' ])' → logprob: -12.38058853149414
    9. ')])' → logprob: -12.75558853149414
    10. '])]' → logprob: -13.75558853149414

Token 19: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.659005157416686e-05
    2. ')' → logprob: -10.500066757202148
    3. ',' → logprob: -11.125066757202148
    4. ')]' → logprob: -11.750066757202148
    5. ' ]' → logprob: -11.750066757202148
    6. '])' → logprob: -12.375066757202148
    7. '']' → logprob: -12.875066757202148
    8. '`]' → logprob: -13.625066757202148
    9. '[' → logprob: -15.875066757202148
    10. '"]' → logprob: -16.37506675720215

Token 20: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014216276817023754
    2. ' ' → logprob: -4.264216423034668
    3. '])' → logprob: -10.889216423034668
    4. ']' → logprob: -11.389216423034668
    5. ')' → logprob: -11.889216423034668
    6. ' ])' → logprob: -12.264216423034668
    7. ' ]' → logprob: -12.514216423034668
    8. ' )' → logprob: -12.889216423034668
    9. ')]' → logprob: -14.201716423034668
    10. ',' → logprob: -14.201716423034668

Token 21: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006978094577789307
    2. ',' → logprob: -5.0069780349731445
    3. ')' → logprob: -8.881978034973145
    4. '])' → logprob: -9.381978034973145
    5. ' ]' → logprob: -10.756978034973145
    6. ')]' → logprob: -11.881978034973145
    7. '`]' → logprob: -12.256978034973145
    8. '']' → logprob: -13.131978034973145
    9. ',
' → logprob: -14.256978034973145
    10. '[' → logprob: -14.381978034973145

Token 22: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.003600901924073696
    2. ' ' → logprob: -5.62860107421875
    3. ')' → logprob: -15.37860107421875
    4. ',' → logprob: -15.50360107421875
    5. ' )' → logprob: -16.12860107421875
    6. ' ]' → logprob: -16.12860107421875
    7. ' ,' → logprob: -16.25360107421875
    8. ']' → logprob: -17.00360107421875
    9. ' ])' → logprob: -17.12860107421875
    10. '0' → logprob: -18.12860107421875

Token 23: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015095012495294213
    2. ',' → logprob: -6.751509666442871
    3. ')' → logprob: -8.251509666442871
    4. '])' → logprob: -10.626509666442871
    5. ')]' → logprob: -10.876509666442871
    6. ' ]' → logprob: -10.876509666442871
    7. '']' → logprob: -12.001509666442871
    8. '`]' → logprob: -12.001509666442871
    9. '9' → logprob: -13.501509666442871
    10. '[' → logprob: -14.251509666442871

Token 24: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. ')' → logprob: -16.750335693359375
    4. ',' → logprob: -17.750335693359375
    5. ' )' → logprob: -18.750335693359375
    6. '])' → logprob: -19.250335693359375
    7. ']' → logprob: -19.375335693359375
    8. ' ])' → logprob: -20.250335693359375
    9. '９' → logprob: -20.250335693359375
    10. ')]' → logprob: -20.375335693359375

Token 25: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006838629487901926
    2. ')' → logprob: -5.631838798522949
    3. ',' → logprob: -6.131838798522949
    4. '])' → logprob: -7.006838798522949
    5. ')]' → logprob: -9.38183879852295
    6. '']' → logprob: -10.00683879852295
    7. '`]' → logprob: -11.38183879852295
    8. ' ]' → logprob: -12.38183879852295
    9. ',
' → logprob: -12.75683879852295
    10. '[' → logprob: -13.75683879852295

Token 26: 'found' (ID: 26334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41799214482307434
    2. '[' → logprob: -2.292992115020752
    3. ' for' → logprob: -2.417992115020752
    4. 's' → logprob: -2.667992115020752
    5. '+' → logprob: -3.167992115020752
    6. '*' → logprob: -4.917992115020752
    7. '=' → logprob: -5.042992115020752
    8. ']' → logprob: -5.542992115020752
    9. '```' → logprob: -5.667992115020752
    10. '.' → logprob: -6.042992115020752

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5586873292922974
    2. '_' → logprob: -1.1836873292922974
    3. '=' → logprob: -2.183687210083008
    4. ' ' → logprob: -4.933687210083008
    5. ':' → logprob: -6.558687210083008
    6. ')' → logprob: -9.183687210083008
    7. ',' → logprob: -9.183687210083008
    8. '_=' → logprob: -9.308687210083008
    9. '(' → logprob: -9.808687210083008
    10. 's' → logprob: -9.808687210083008

Token 28: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.03812973573803902
    2. 'False' → logprob: -3.2881298065185547
    3. ' []' → logprob: -10.163129806518555
    4. ' ' → logprob: -10.288129806518555
    5. ' True' → logprob: -11.163129806518555
    6. '[]' → logprob: -14.288129806518555
    7. 'True' → logprob: -15.288129806518555
    8. ' false' → logprob: -15.663129806518555
    9. ' None' → logprob: -15.663129806518555
    10. '_false' → logprob: -16.163129806518555

Token 29: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.738849937915802
    2. '
' → logprob: -1.2388498783111572
    3. '```' → logprob: -2.6138498783111572
    4. ' for' → logprob: -2.7388498783111572
    5. ':' → logprob: -3.1138498783111572
    6. '\n' → logprob: -3.9888498783111572
    7. ' 
' → logprob: -5.113850116729736
    8. '\' → logprob: -5.363850116729736
    9. 'n' → logprob: -5.613850116729736
    10. 'i' → logprob: -5.738850116729736

Token 30: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41638657450675964
    2. ' for' → logprob: -1.416386604309082
    3. '
' → logprob: -3.041386604309082
    4. ':' → logprob: -3.541386604309082
    5. '```' → logprob: -4.166386604309082
    6. '\n' → logprob: -6.291386604309082
    7. '<|end|>' → logprob: -6.791386604309082
    8. ' 
' → logprob: -7.041386604309082
    9. '' → logprob: -8.416386604309082
    10. 'if' → logprob: -8.666386604309082

Token 31: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6345970034599304
    2. ' i' → logprob: -0.7595970034599304
    3. 'i' → logprob: -6.509596824645996
    4. '_' → logprob: -8.384596824645996
    5. ' _' → logprob: -9.009596824645996
    6. '  ' → logprob: -9.009596824645996
    7. ' ‌' → logprob: -11.759596824645996
    8. ' x' → logprob: -12.384596824645996
    9. ' ' → logprob: -12.384596824645996
    10. ' n' → logprob: -12.759596824645996

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012177841737866402
    2. 'in' → logprob: -5.01217794418335
    3. ' ' → logprob: -5.38717794418335
    4. 'n' → logprob: -7.38717794418335
    5. '  ' → logprob: -8.762177467346191
    6. ' i' → logprob: -10.512177467346191
    7. 's' → logprob: -11.262177467346191
    8. ' n' → logprob: -11.262177467346191
    9. 'space' → logprob: -12.137177467346191
    10. '	in' → logprob: -12.137177467346191

Token 33: ' s' (ID: 265)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011200487613677979
    2. ' s' → logprob: -4.636200428009033
    3. 'range' → logprob: -6.636200428009033
    4. 's' → logprob: -9.511200904846191
    5. ' ' → logprob: -10.136200904846191
    6. '(range' → logprob: -13.011200904846191
    7. '	range' → logprob: -13.011200904846191
    8. ')' → logprob: -13.261200904846191
    9. ' xrange' → logprob: -13.386200904846191
    10. '  ' → logprob: -13.386200904846191

Token 34: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.046267155557870865
    2. ':' → logprob: -3.42126727104187
    3. 'in' → logprob: -4.546267032623291
    4. ' :' → logprob: -7.546267032623291
    5. ' if' → logprob: -8.29626750946045
    6. ')' → logprob: -8.29626750946045
    7. '<|end|>' → logprob: -8.54626750946045
    8. ' ' → logprob: -9.04626750946045
    9. '[' → logprob: -9.04626750946045
    10. '   ' → logprob: -9.42126750946045

Token 35: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7820215225219727
    2. '   ' → logprob: -1.2820215225219727
    3. ' ' → logprob: -1.5320215225219727
    4. ' if' → logprob: -3.5320215225219727
    5. '    ' → logprob: -5.032021522521973
    6. ' for' → logprob: -5.532021522521973
    7. ' :' → logprob: -5.657021522521973
    8. '  ' → logprob: -6.032021522521973
    9. '<|end|>' → logprob: -7.032021522521973
    10. ':
' → logprob: -7.282021522521973

Token 36: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17921602725982666
    2. ' if' → logprob: -1.9292160272598267
    3. 'for' → logprob: -4.554215908050537
    4. ' ' → logprob: -5.554215908050537
    5. '   ' → logprob: -5.804215908050537
    6. ' i' → logprob: -7.179215908050537
    7. 'if' (adapté à ' if') → logprob: -7.804215908050537
    8. ' s' → logprob: -9.554216384887695
    9. 's' → logprob: -10.304216384887695
    10. '    ' → logprob: -10.804216384887695

Token 37: ' N' (ID: 478)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04566729813814163
    2. ' N' → logprob: -3.5456674098968506
    3. 'i' → logprob: -4.6706671714782715
    4. ' ' → logprob: -5.1706671714782715
    5. 'N' → logprob: -7.5456671714782715
    6. ' found' → logprob: -9.67066764831543
    7. ' n' → logprob: -10.29566764831543
    8. ' s' → logprob: -10.67066764831543
    9. ' ' → logprob: -10.67066764831543
    10. ' not' → logprob: -11.04566764831543

Token 38: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5318863987922668
    2. '%' → logprob: -1.406886339187622
    3. ' ==' → logprob: -2.156886339187622
    4. '==' → logprob: -3.031886339187622
    5. ' >=' → logprob: -6.156886577606201
    6. '>=' → logprob: -7.531886577606201
    7. '%i' → logprob: -7.906886577606201
    8. '>' → logprob: -8.156886100769043
    9. ' ' → logprob: -9.406886100769043
    10. '=' → logprob: -9.406886100769043

Token 39: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759895443916321
    2. ' i' → logprob: -0.8259895443916321
    3. ' ' → logprob: -10.075989723205566
    4. '	i' → logprob: -12.450989723205566
    5. 's' → logprob: -13.950989723205566
    6. '  ' → logprob: -14.825989723205566
    7. '   ' → logprob: -14.950989723205566
    8. '2' → logprob: -14.950989723205566
    9. '9' → logprob: -15.075989723205566
    10. '6' → logprob: -15.200989723205566

Token 40: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42877572774887085
    2. ' ==' → logprob: -1.0537757873535156
    3. '=' → logprob: -9.928775787353516
    4. '===' → logprob: -11.678775787353516
    5. ' ' → logprob: -11.803775787353516
    6. ' =' → logprob: -12.428775787353516
    7. ')==' → logprob: -13.178775787353516
    8. ' ' → logprob: -14.178775787353516
    9. ')' → logprob: -14.178775787353516
    10. '```' → logprob: -14.428775787353516

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. ' ' → logprob: -18.752805709838867
    4. '۰' → logprob: -19.127805709838867
    5. '  ' → logprob: -19.377805709838867
    6. '   ' → logprob: -19.502805709838867
    7. '=' → logprob: -19.502805709838867
    8. '<|end|>' → logprob: -19.627805709838867
    9. '```' → logprob: -20.252805709838867
    10. 's' → logprob: -20.440305709838867

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '۰' → logprob: -18.125085830688477
    4. '1' → logprob: -18.500085830688477
    5. '০' → logprob: -18.875085830688477
    6. '०' → logprob: -19.125085830688477
    7. '```' → logprob: -19.125085830688477
    8. '０' → logprob: -19.625085830688477
    9. '<|end|>' → logprob: -19.625085830688477
    10. '٠' → logprob: -20.000085830688477

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034583290107548237
    2. ' and' → logprob: -8.250346183776855
    3. ':
' → logprob: -9.875346183776855
    4. 'and' → logprob: -11.000346183776855
    5. ' :' → logprob: -12.125346183776855
    6. '):' → logprob: -12.125346183776855
    7. ':**' → logprob: -12.875346183776855
    8. ' or' → logprob: -13.375346183776855
    9. '   ' → logprob: -15.000346183776855
    10. ':return' → logprob: -15.375346183776855

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023343777284026146
    2. '   ' → logprob: -4.148343563079834
    3. '    ' → logprob: -6.148343563079834
    4. ' ' → logprob: -6.523343563079834
    5. ' found' → logprob: -6.523343563079834
    6. '\n' → logprob: -7.648343563079834
    7. '        
' → logprob: -8.148344039916992
    8. '[' → logprob: -8.273344039916992
    9. '<|end|>' → logprob: -8.398344039916992
    10. '     ' → logprob: -8.898344039916992

Token 45: ' if' (ID: 538)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.18632574379444122
    2. '       ' → logprob: -2.186325788497925
    3. 'found' → logprob: -3.311325788497925
    4. '   ' → logprob: -4.061325550079346
    5. '	found' → logprob: -6.811325550079346
    6. '    ' → logprob: -7.311325550079346
    7. ' 
' → logprob: -7.936325550079346
    8. ' ' → logprob: -7.936325550079346
    9. '(found' → logprob: -8.686326026916504
    10. '```' → logprob: -8.686326026916504

Token 46: ' (' (ID: 350)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5598185062408447
    2. ' not' → logprob: -1.8098185062408447
    3. ' i' → logprob: -1.9348185062408447
    4. ' found' → logprob: -2.9348185062408447
    5. 'N' → logprob: -3.8098185062408447
    6. ' ' → logprob: -3.9348185062408447
    7. 'i' → logprob: -4.684818267822266
    8. ' ' → logprob: -4.934818267822266
    9. ' s' → logprob: -5.434818267822266
    10. 'found' → logprob: -6.309818267822266

Token 47: 'N' (ID: 45)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.1596022993326187
    2. 'N' → logprob: -2.534602403640747
    3. ' not' → logprob: -3.909602403640747
    4. ' i' → logprob: -3.909602403640747
    5. ' found' → logprob: -4.659602165222168
    6. ' s' → logprob: -4.784602165222168
    7. 'i' → logprob: -5.784602165222168
    8. ' ' → logprob: -6.034602165222168
    9. 's' → logprob: -6.284602165222168
    10. 'found' → logprob: -6.909602165222168

Token 48: ' //' (ID: 602)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7396631836891174
    2. ' //' → logprob: -0.9896631836891174
    3. ' ==' → logprob: -2.9896631240844727
    4. ')' → logprob: -3.6146631240844727
    5. ' )' → logprob: -3.8646631240844727
    6. ' %' → logprob: -3.9896631240844727
    7. '==' → logprob: -4.614663124084473
    8. '//' → logprob: -5.864663124084473
    9. ' !=' → logprob: -5.864663124084473
    10. ' /' → logprob: -5.989663124084473

Token 49: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0699697807431221
    2. ' i' → logprob: -2.694969892501831
    3. ' ' → logprob: -11.44497013092041
    4. ')' → logprob: -11.69497013092041
    5. ')i' → logprob: -11.69497013092041
    6. 's' → logprob: -13.19497013092041
    7. '	i' → logprob: -13.56997013092041
    8. '   ' → logprob: -14.19497013092041
    9. '<|end|>' → logprob: -14.81997013092041
    10. '  ' → logprob: -15.19497013092041

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04691478610038757
    2. ' )' → logprob: -3.17191481590271
    3. ')<=' → logprob: -6.671914577484131
    4. ')%' → logprob: -7.046914577484131
    5. ')>=' → logprob: -8.171915054321289
    6. ' <=' → logprob: -8.171915054321289
    7. ')>' → logprob: -8.296915054321289
    8. '<=' → logprob: -8.421915054321289
    9. ')==' → logprob: -8.921915054321289
    10. '>' → logprob: -9.046915054321289

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015545421279966831
    2. 'in' → logprob: -4.76554536819458
    3. ' <=' → logprob: -5.64054536819458
    4. '<=' → logprob: -6.39054536819458
    5. ' not' → logprob: -6.89054536819458
    6. ' ' → logprob: -8.015545845031738
    7. '>' → logprob: -9.515545845031738
    8. ' ==' → logprob: -10.015545845031738
    9. '==' → logprob: -10.140545845031738
    10. ' <' → logprob: -10.265545845031738

Token 52: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.061967797577381134
    2. 's' → logprob: -2.8119678497314453
    3. '{s' → logprob: -16.936967849731445
    4. ' ' → logprob: -17.186967849731445
    5. '[' → logprob: -17.561967849731445
    6. '<|end|>' → logprob: -18.311967849731445
    7. ' [' → logprob: -18.561967849731445
    8. '[s' → logprob: -18.561967849731445
    9. '`s' → logprob: -18.686967849731445
    10. '	s' → logprob: -18.811967849731445

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026317020878195763
    2. ':
' → logprob: -3.6513171195983887
    3. ':
' → logprob: -11.77631664276123
    4. '):' → logprob: -12.40131664276123
    5. ':

' → logprob: -13.40131664276123
    6. ' and' → logprob: -13.65131664276123
    7. '       ' → logprob: -14.15131664276123
    8. '):
' → logprob: -14.40131664276123
    9. ' :' → logprob: -15.15131664276123
    10. ':return' → logprob: -15.77631664276123

Token 54: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0387033186852932
    2. '           ' → logprob: -3.413703203201294
    3. '
' → logprob: -6.163703441619873
    4. ':
' → logprob: -6.913703441619873
    5. ' found' → logprob: -7.663703441619873
    6. '```' → logprob: -7.913703441619873
    7. ':' → logprob: -8.163702964782715
    8. 'found' → logprob: -8.538702964782715
    9. '        
' → logprob: -8.913702964782715
    10. '\n' → logprob: -9.163702964782715

Token 55: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19785688817501068
    2. ' found' → logprob: -2.322856903076172
    3. 'found' → logprob: -2.572856903076172
    4. '   ' → logprob: -6.322856903076172
    5. '	found' → logprob: -6.447856903076172
    6. '           ' → logprob: -7.447856903076172
    7. '
' → logprob: -7.447856903076172
    8. 'Found' → logprob: -8.322856903076172
    9. '(found' → logprob: -9.197856903076172
    10. '        
' → logprob: -9.572856903076172

Token 56: '("' (ID: 568)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.008754258044064045
    2. '(' → logprob: -4.758754253387451
    3. '(N' → logprob: -10.00875473022461
    4. '("' → logprob: -10.00875473022461
    5. '(f' → logprob: -11.00875473022461
    6. '((' → logprob: -11.88375473022461
    7. 'i' → logprob: -11.88375473022461
    8. '(True' → logprob: -12.38375473022461
    9. '('' → logprob: -12.50875473022461
    10. '(s' → logprob: -12.75875473022461

Token 57: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.010091305710375309
    2. 'YES' → logprob: -5.135091304779053
    3. 'yes' → logprob: -6.635091304779053
    4. 'i' → logprob: -7.385091304779053
    5. 'pair' → logprob: -7.385091304779053
    6. 'Possible' → logprob: -7.760091304779053
    7. 'Pair' → logprob: -8.385091781616211
    8. 'Finite' → logprob: -9.010091781616211
    9. '"' → logprob: -9.385091781616211
    10. 'Found' → logprob: -9.510091781616211

Token 58: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3171180784702301
    2. '")
' → logprob: -1.3171180486679077
    3. '")
' → logprob: -5.567118167877197
    4. '"' → logprob: -11.192117691040039
    5. ')' → logprob: -11.817117691040039
    6. '")

' → logprob: -13.567117691040039
    7. ')
' → logprob: -13.567117691040039
    8. '");' → logprob: -14.192117691040039
    9. '```' → logprob: -14.817117691040039
    10. '!")' → logprob: -14.817117691040039

Token 59: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005405236734077334
    2. '       ' → logprob: -7.750540733337402
    3. '<|end|>' → logprob: -9.500540733337402
    4. '
' → logprob: -11.375540733337402
    5. '```' → logprob: -11.750540733337402
    6. '               ' → logprob: -11.750540733337402
    7. '   ' → logprob: -12.375540733337402
    8. '<|end|>' → logprob: -13.625540733337402
    9. '            
' → logprob: -13.750540733337402
    10. '	       ' → logprob: -15.500540733337402

Token 60: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.002529760589823127
    2. '           ' → logprob: -6.627529621124268
    3. ' found' → logprob: -7.252529621124268
    4. '
' → logprob: -8.002530097961426
    5. '   ' → logprob: -9.502530097961426
    6. '	found' → logprob: -10.752530097961426
    7. 'Found' → logprob: -10.877530097961426
    8. '```' → logprob: -11.252530097961426
    9. '            
' → logprob: -11.377530097961426
    10. '    
' → logprob: -11.752530097961426

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02976958453655243
    2. '=' → logprob: -3.5297696590423584
    3. '=True' → logprob: -10.904769897460938
    4. ' ' → logprob: -14.404769897460938
    5. '=False' → logprob: -15.904769897460938
    6. ' =
' → logprob: -16.654769897460938
    7. '=true' → logprob: -18.029769897460938
    8. '   ' → logprob: -18.654769897460938
    9. ' |=' → logprob: -18.654769897460938
    10. ' =)' → logprob: -19.029769897460938

Token 62: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03804149478673935
    2. ' True' → logprob: -3.288041591644287
    3. '=True' → logprob: -16.788042068481445
    4. '(True' → logprob: -16.913042068481445
    5. '   ' → logprob: -20.663042068481445
    6. '.True' → logprob: -21.038042068481445
    7. 'Tr' → logprob: -21.663042068481445
    8. 'TRUE' → logprob: -22.163042068481445
    9. 'true' → logprob: -22.413042068481445
    10. ' Tru' → logprob: -23.038042068481445

Token 63: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004896456957794726
    2. '            
' → logprob: -7.875489711761475
    3. '               ' → logprob: -10.375489234924316
    4. '<|end|>' → logprob: -10.625489234924316
    5. '```' → logprob: -11.875489234924316
    6. '       ' → logprob: -11.875489234924316
    7. '            ' → logprob: -12.125489234924316
    8. 'if' → logprob: -12.125489234924316
    9. ' if' → logprob: -12.375489234924316
    10. ' 
' → logprob: -12.375489234924316

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.416665640543215e-05
    2. '<|end|>' → logprob: -11.37503433227539
    3. '       ' → logprob: -11.87503433227539
    4. '		' → logprob: -12.12503433227539
    5. '            
' → logprob: -12.50003433227539
    6. '               ' → logprob: -12.62503433227539
    7. '   ' → logprob: -14.12503433227539
    8. '	       ' → logprob: -14.62503433227539
    9. 'break' → logprob: -14.87503433227539
    10. '```' → logprob: -15.37503433227539

Token 65: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049338821321725845
    2. 'break' (adapté à ' break') → logprob: -3.0493388175964355
    3. ' break' → logprob: -7.4243388175964355
    4. '       ' → logprob: -9.049339294433594
    5. '   ' → logprob: -11.174339294433594
    6. '	break' → logprob: -11.549339294433594
    7. '```' → logprob: -12.049339294433594
    8. '               ' → logprob: -12.549339294433594
    9. '		' → logprob: -12.924339294433594
    10. '
' → logprob: -14.424339294433594

Token 66: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0027503150049597025
    2. 'else' → logprob: -6.252750396728516
    3. '```' → logprob: -7.252750396728516
    4. '
' → logprob: -9.752750396728516
    5. '``' → logprob: -10.252750396728516
    6. ' if' → logprob: -12.127750396728516
    7. '    
' → logprob: -12.127750396728516
    8. ' 
' → logprob: -13.377750396728516
    9. '        
' → logprob: -13.627750396728516
    10. '`
' → logprob: -13.752750396728516

Token 67: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.994086627149954e-05
    2. 'else' → logprob: -10.000080108642578
    3. '```' → logprob: -10.375080108642578
    4. 'If' → logprob: -13.250080108642578
    5. ' if' → logprob: -14.625080108642578
    6. '``' → logprob: -14.875080108642578
    7. '
' → logprob: -15.125080108642578
    8. 'i' → logprob: -15.750080108642578
    9. 'print' → logprob: -16.250080108642578
    10. '    
' → logprob: -17.000080108642578

Token 68: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0015036711702123284
    2. 'not' → logprob: -6.5015034675598145
    3. ' found' → logprob: -13.626503944396973
    4. ' ' → logprob: -16.251502990722656
    5. ' ' → logprob: -17.251502990722656
    6. ' no' → logprob: -17.751502990722656
    7. '	not' → logprob: -18.001502990722656
    8. 'found' → logprob: -18.376502990722656
    9. '(not' → logprob: -19.626502990722656
    10. '_not' → logprob: -20.751502990722656

Token 69: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.005234121344983578
    2. 'found' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.755233764648438
    4. '	found' → logprob: -16.130233764648438
    5. ' ' → logprob: -16.880233764648438
    6. '_found' → logprob: -17.380233764648438
    7. '(found' → logprob: -18.005233764648438
    8. ' space' → logprob: -19.005233764648438
    9. ' Found' → logprob: -20.130233764648438
    10. 'Found' → logprob: -20.130233764648438

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009756917133927345
    2. ':
' → logprob: -4.634757041931152
    3. ':

' → logprob: -14.259757041931152
    4. ':
' → logprob: -16.259756088256836
    5. '():
' → logprob: -16.634756088256836
    6. ':**' → logprob: -16.884756088256836
    7. '):
' → logprob: -17.759756088256836
    8. ' :' → logprob: -17.759756088256836
    9. ':</' → logprob: -17.884756088256836
    10. ':return' → logprob: -17.884756088256836

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011270275339484215
    2. ' print' → logprob: -4.636270046234131
    3. 'print' → logprob: -6.511270046234131
    4. '	print' → logprob: -11.511270523071289
    5. '```' → logprob: -11.511270523071289
    6. '       ' → logprob: -12.386270523071289
    7. '    ' → logprob: -14.261270523071289
    8. ' ' → logprob: -14.386270523071289
    9. '  ' → logprob: -15.261270523071289
    10. ' prints' → logprob: -15.636270523071289

Token 72: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009115827269852161
    2. ' print' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.750911712646484
    4. '	print' → logprob: -18.500911712646484
    5. '```' → logprob: -18.875911712646484
    6. '.print' → logprob: -20.125911712646484
    7. 'pr' → logprob: -20.250911712646484
    8. ' ' → logprob: -21.750911712646484
    9. 'prit' → logprob: -21.750911712646484
    10. 'Print' → logprob: -22.000911712646484

Token 73: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02325386554002762
    2. '(' → logprob: -3.773253917694092
    3. '("("' → logprob: -12.523253440856934
    4. '('' → logprob: -13.148253440856934
    5. '("")' → logprob: -13.148253440856934
    6. '()' → logprob: -14.773253440856934
    7. '("""' → logprob: -16.52325439453125
    8. '("(' → logprob: -16.64825439453125
    9. '(""' → logprob: -16.89825439453125
    10. ' ("' → logprob: -17.02325439453125

Token 74: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0067170290276408195
    2. '"No' → logprob: -5.006717205047607
    3. '"' → logprob: -14.13171672821045
    4. ' No' → logprob: -14.50671672821045
    5. 'NO' → logprob: -14.88171672821045
    6. '“No' → logprob: -16.506717681884766
    7. '>No' → logprob: -18.631717681884766
    8. '(No' → logprob: -18.881717681884766
    9. 'Yes' → logprob: -19.131717681884766
    10. '_No' → logprob: -19.256717681884766

Token 75: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -5.478889215737581e-05
    2. ')' → logprob: -10.000054359436035
    3. ')")' → logprob: -11.625054359436035
    4. '")
' → logprob: -15.375054359436035
    5. '}")' → logprob: -16.62505531311035
    6. '')' → logprob: -17.62505531311035
    7. '”)' → logprob: -18.75005531311035
    8. '`)' → logprob: -19.12505531311035
    9. '"' → logprob: -19.25005531311035
    10. '"))' → logprob: -19.37505531311035


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 73
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 62
Précision stricte (1ère position): 41.10%
Précision adaptée (1ère position): 43.84%
Précision (top 10): 84.93%
================================================================================
