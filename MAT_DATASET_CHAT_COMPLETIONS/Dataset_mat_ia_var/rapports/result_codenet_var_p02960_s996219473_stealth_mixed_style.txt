================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(1_000_000_000)

def intm1(x): return int(x)-1
II = lambda: int(input())
MI = lambda: map(int, input().split())
def MI1(): return map(intm1, input().split())
LI = lambda : [int(x) for x in input().split()]
def LI1(): return list(map(lambda y: int(y)-1, input().split()))
LLI = lambda n: [LI() for _ in range(n)]
SMI = lambda: input().split()
def SLI(): return list(input())

def printlist(lst, sep=' '):
    for idx, v in enumerate(lst):
        if idx: print(sep, end='')
        print(v, end='')
    print()
INF = float('inf')

def solve():
    MOD, S = 10**9 + 7, SLI()
    length = len(S)
    arr = [ [0]*13 for _ in [0]*(length+1) ]
    arr[0][0] = 1
    mul=1
    for a in range(length):
        ch = S[-(a+1)]
        for b in range(13):
            if ch=='?':
                for dig in range(10):
                    arr[a+1][(dig*mul+b)%13] = (arr[a+1][(dig*mul+b)%13] + arr[a][b]) % MOD
            else:
                num = int(ch)
                arr[a+1][(num*mul+b)%13] = (arr[a+1][(num*mul+b)%13] + arr[a][b]) % MOD
        mul = mul*10%13
    output = arr[-1][5]%MOD
    print(output)

if __name__=='__main__':
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.523948907968588e-05
    2. ' .' → logprob: -11.875035285949707
    3. '.import' → logprob: -12.125035285949707
    4. '.user' → logprob: -12.875035285949707
    5. '.readline' → logprob: -12.875035285949707
    6. '.`' → logprob: -13.125035285949707
    7. '.stdout' → logprob: -13.625035285949707
    8. '[' → logprob: -13.625035285949707
    9. '.exit' → logprob: -13.875035285949707
    10. '​.' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33185532689094543
    2. 'trace' → logprob: -2.831855297088623
    3. '_trace' → logprob: -3.081855297088623
    4. ' _' → logprob: -3.831855297088623
    5. 'ex' → logprob: -4.081855297088623
    6. '_soft' → logprob: -4.081855297088623
    7. '_sys' → logprob: -4.331855297088623
    8. 'default' → logprob: -4.331855297088623
    9. 's' → logprob: -4.456855297088623
    10. '_version' → logprob: -4.581855297088623

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037681119283661246
    2. 'ursive' → logprob: -8.37537670135498
    3. 'urs' → logprob: -10.37537670135498
    4. 'limit' → logprob: -10.62537670135498
    5. 'urf' → logprob: -10.62537670135498
    6. 'ur' → logprob: -10.87537670135498
    7. '_limit' → logprob: -11.25037670135498
    8. '_' → logprob: -11.75037670135498
    9. 'ursor' → logprob: -12.37537670135498
    10. 'ursively' → logprob: -12.75037670135498

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.32502806186676025
    2. '_limit' → logprob: -1.3250280618667603
    3. '_depth' → logprob: -4.575027942657471
    4. 'depth' → logprob: -6.825027942657471
    5. '_' → logprob: -9.325028419494629
    6. 'error' → logprob: -10.325028419494629
    7. ' limit' → logprob: -10.575028419494629
    8. '_limits' → logprob: -10.825028419494629
    9. '_rate' → logprob: -11.075028419494629
    10. '_stack' → logprob: -11.200028419494629

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '(
' → logprob: -11.37502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(

' → logprob: -12.75002384185791
    5. '((' → logprob: -14.50002384185791
    6. '```' → logprob: -14.75002384185791
    7. '("("' → logprob: -14.75002384185791
    8. '('' → logprob: -15.50002384185791
    9. '(.' → logprob: -15.62502384185791
    10. '(
' → logprob: -15.75002384185791

Token 9: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '_' (ID: 62)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7039219737052917
    2. '000' → logprob: -0.8289219737052917
    3. '00' → logprob: -2.7039220333099365
    4. '5' → logprob: -7.078921794891357
    5. '3' → logprob: -7.703921794891357
    6. '6' → logprob: -8.828922271728516
    7. '8' → logprob: -9.578922271728516
    8. '4' → logprob: -9.828922271728516
    9. '05' → logprob: -9.828922271728516
    10. '2' → logprob: -10.078922271728516

Token 11: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3779109716415405
    2. '000' → logprob: -1.2529109716415405
    3. '00' → logprob: -3.62791109085083
    4. '_' → logprob: -6.12791109085083
    5. '2' → logprob: -9.252910614013672
    6. '024' → logprob: -10.377910614013672
    7. '5' → logprob: -10.502910614013672
    8. '048' → logprob: -10.627910614013672
    9. '```' → logprob: -11.252910614013672
    10. '8' → logprob: -11.377910614013672

Token 12: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49557968974113464
    2. ',' → logprob: -1.370579719543457
    3. ')' → logprob: -2.120579719543457
    4. ',_' → logprob: -5.370579719543457
    5. '_,' → logprob: -5.495579719543457
    6. ')_' → logprob: -5.745579719543457
    7. ',)' → logprob: -6.120579719543457
    8. '_)' → logprob: -6.620579719543457
    9. '000' → logprob: -7.995579719543457
    10. ' ,' → logprob: -8.245579719543457

Token 13: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.08331476151943207
    2. '_' → logprob: -2.8333146572113037
    3. ',' → logprob: -4.458314895629883
    4. '0' → logprob: -5.333314895629883
    5. '00' → logprob: -6.958314895629883
    6. ')' → logprob: -7.083314895629883
    7. ',_' → logprob: -7.333314895629883
    8. ',)' → logprob: -7.708314895629883
    9. ' ' → logprob: -7.833314895629883
    10. '_,' → logprob: -8.083314895629883

Token 14: '_' (ID: 62)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -14.000001907348633
    3. '))' → logprob: -14.750001907348633
    4. ' )' → logprob: -15.125001907348633
    5. '`)' → logprob: -17.125001907348633
    6. ')`' → logprob: -17.375001907348633
    7. '0' → logprob: -18.000001907348633
    8. ')

' → logprob: -18.125001907348633
    9. '```' → logprob: -18.500001907348633
    10. '')' → logprob: -18.750001907348633

Token 15: '000' (ID: 1302)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '))' → logprob: -16.125001907348633
    5. ')

' → logprob: -17.750001907348633
    6. '0' → logprob: -18.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. '}' → logprob: -18.375001907348633
    9. ' ' → logprob: -18.625001907348633
    10. '),' → logprob: -19.000001907348633

Token 16: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.75000286102295
    3. '))' → logprob: -14.12500286102295
    4. ')
' → logprob: -15.25000286102295
    5. '`)' → logprob: -15.50000286102295
    6. '0' → logprob: -16.000001907348633
    7. '_' → logprob: -17.125001907348633
    8. '```' → logprob: -17.250001907348633
    9. ')`' → logprob: -17.250001907348633
    10. '[' → logprob: -17.375001907348633

Token 17: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5016759634017944
    2. '(' → logprob: -1.2516759634017944
    3. '
' → logprob: -2.876676082611084
    4. '(
' → logprob: -3.251676082611084
    5. '#' → logprob: -5.126676082611084
    6. '\' → logprob: -6.376676082611084
    7. '```' → logprob: -6.751676082611084
    8. ')
' → logprob: -7.376676082611084
    9. '' → logprob: -7.626676082611084
    10. '\n' → logprob: -7.876676082611084

Token 18: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00910316500812769
    2. '_' → logprob: -5.009103298187256
    3. ' _' → logprob: -7.259103298187256
    4. ' space' → logprob: -7.634103298187256
    5. ' factorial' → logprob: -7.634103298187256
    6. ' f' → logprob: -8.634102821350098
    7. ' ' → logprob: -9.009102821350098
    8. ' my' → logprob: -9.009102821350098
    9. ' main' → logprob: -9.509102821350098
    10. ' dfs' → logprob: -9.759102821350098

Token 19: 'm' (ID: 76)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47672039270401
    2. 'er' → logprob: -1.6017203330993652
    3. 'eger' → logprob: -2.4767203330993652
    4. '_val' → logprob: -2.8517203330993652
    5. '_er' → logprob: -5.351720333099365
    6. ' _' → logprob: -5.476720333099365
    7. '(' → logprob: -5.476720333099365
    8. '_var' → logprob: -5.601720333099365
    9. 'ernal' → logprob: -5.601720333099365
    10. 'erval' → logprob: -5.851720333099365

Token 20: '1' (ID: 16)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.9362678527832031
    2. 'e' → logprob: -1.0612678527832031
    3. 'er' → logprob: -1.4362678527832031
    4. '_e' → logprob: -4.686267852783203
    5. '_er' → logprob: -5.561267852783203
    6. '_' → logprob: -6.061267852783203
    7. '(' → logprob: -6.561267852783203
    8. 'erval' → logprob: -6.811267852783203
    9. '```' → logprob: -7.561267852783203
    10. 'erv' → logprob: -7.686267852783203

Token 21: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.043644268065690994
    2. '_' → logprob: -3.7936441898345947
    3. '(a' → logprob: -5.043644428253174
    4. '(x' → logprob: -5.168644428253174
    5. '(_' → logprob: -5.668644428253174
    6. '(n' → logprob: -6.668644428253174
    7. '_(' → logprob: -7.168644428253174
    8. 'er' → logprob: -7.293644428253174
    9. '(e' → logprob: -8.418643951416016
    10. '('' → logprob: -8.418643951416016

Token 22: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3496110439300537
    2. ')' → logprob: -1.2246110439300537
    3. ',' → logprob: -7.474611282348633
    4. ':' → logprob: -7.849611282348633
    5. '+' → logprob: -9.224611282348633
    6. '_' → logprob: -10.599611282348633
    7. '):
' → logprob: -10.974611282348633
    8. '-' → logprob: -11.099611282348633
    9. ' ):' → logprob: -11.974611282348633
    10. '=' → logprob: -12.349611282348633

Token 23: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.581555962562561
    2. ':' → logprob: -0.831555962562561
    3. ':
' → logprob: -6.0815558433532715
    4. ' ' → logprob: -6.8315558433532715
    5. ':return' → logprob: -7.3315558433532715
    6. '    ' → logprob: -7.7065558433532715
    7. ' if' → logprob: -8.33155632019043
    8. ' return' → logprob: -8.58155632019043
    9. ',' → logprob: -9.20655632019043
    10. '(' → logprob: -9.20655632019043

Token 24: ' int' (ID: 677)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.10060365498065948
    2. 'x' → logprob: -2.7256035804748535
    3. ' ' → logprob: -4.3506035804748535
    4. ' (' → logprob: -5.2256035804748535
    5. ' int' → logprob: -5.7256035804748535
    6. '1' → logprob: -5.9756035804748535
    7. '0' → logprob: -6.3506035804748535
    8. 'int' → logprob: -6.3506035804748535
    9. '(' → logprob: -7.6006035804748535
    10. ' max' → logprob: -7.9756035804748535

Token 25: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1627766191959381
    2. '(x' → logprob: -1.9127765893936157
    3. 'm' → logprob: -6.287776470184326
    4. '(m' → logprob: -8.787776947021484
    5. ' (' → logprob: -8.912776947021484
    6. '((' → logprob: -9.412776947021484
    7. '(
' → logprob: -10.412776947021484
    8. ')' → logprob: -10.412776947021484
    9. '(abs' → logprob: -10.412776947021484
    10. ' ' → logprob: -10.912776947021484

Token 26: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005392124294303358
    2. '**' → logprob: -8.75053882598877
    3. '(' → logprob: -9.50053882598877
    4. '(x' → logprob: -9.62553882598877
    5. ')**' → logprob: -10.12553882598877
    6. '[' → logprob: -10.25053882598877
    7. '))' → logprob: -10.25053882598877
    8. '*' → logprob: -10.37553882598877
    9. '+' → logprob: -10.50053882598877
    10. ' )' → logprob: -11.00053882598877

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003215022850781679
    2. ' ' → logprob: -5.7532148361206055
    3. '2' → logprob: -11.128214836120605
    4. '3' → logprob: -12.628214836120605
    5. '4' → logprob: -12.628214836120605
    6. '0' → logprob: -12.878214836120605
    7. '5' → logprob: -13.253214836120605
    8. '6' → logprob: -13.753214836120605
    9. '9' → logprob: -13.753214836120605
    10. '7' → logprob: -13.878214836120605

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.934734582901001
    2. '(' → logprob: -1.934734582901001
    3. ')' → logprob: -1.934734582901001
    4. '_' → logprob: -2.434734582901001
    5. '*' → logprob: -2.559734582901001
    6. '<|end|>' → logprob: -2.809734582901001
    7. '' → logprob: -3.559734582901001
    8. '\n' → logprob: -3.684734582901001
    9. '\' → logprob: -4.934734344482422
    10. '```' → logprob: -5.309734344482422

Token 29: 'II' (ID: 6013)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1624773740768433
    2. '
' → logprob: -1.6624773740768433
    3. '\n' → logprob: -2.162477493286133
    4. '*' → logprob: -2.287477493286133
    5. '\' → logprob: -2.412477493286133
    6. '' → logprob: -3.162477493286133
    7. ')' → logprob: -3.287477493286133
    8. 'def' → logprob: -3.787477493286133
    9. '(' → logprob: -4.037477493286133
    10. '```' → logprob: -4.412477493286133

Token 30: ' =' (ID: 314)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.06836476176977158
    2. '[' → logprob: -2.8183648586273193
    3. '[]' → logprob: -5.69336462020874
    4. '=' → logprob: -7.44336462020874
    5. '[:]' → logprob: -7.94336462020874
    6. ']' → logprob: -8.693365097045898
    7. '(' → logprob: -8.693365097045898
    8. '_' → logprob: -8.693365097045898
    9. '[I' → logprob: -8.818365097045898
    10. '2' → logprob: -8.818365097045898

Token 31: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2935854196548462
    2. ' []' → logprob: -1.9185854196548462
    3. '[]' → logprob: -2.2935853004455566
    4. ' int' → logprob: -2.2935853004455566
    5. '[int' → logprob: -2.4185853004455566
    6. ' ' → logprob: -2.5435853004455566
    7. ' [' → logprob: -2.5435853004455566
    8. '10' → logprob: -3.4185853004455566
    9. '1' → logprob: -4.043585300445557
    10. '[' → logprob: -4.043585300445557

Token 32: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8403341770172119
    2. ' int' → logprob: -1.340334177017212
    3. 'int' → logprob: -2.090334177017212
    4. 'x' → logprob: -2.715334177017212
    5. ' lambda' → logprob: -2.965334177017212
    6. 'lambda' → logprob: -3.715334177017212
    7. ' input' → logprob: -4.465333938598633
    8. ' str' → logprob: -4.965333938598633
    9. ' s' → logprob: -5.590333938598633
    10. ' ' → logprob: -5.715333938598633

Token 33: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.32042571902275085
    2. 'list' → logprob: -2.3204257488250732
    3. ' int' → logprob: -2.5704257488250732
    4. ' list' → logprob: -3.0704257488250732
    5. ' map' → logprob: -3.8204257488250732
    6. 'map' → logprob: -3.9454257488250732
    7. '[int' → logprob: -4.820425510406494
    8. '[' → logprob: -6.945425510406494
    9. '[]' → logprob: -7.195425510406494
    10. 'input' → logprob: -7.695425510406494

Token 34: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.21008220314979553
    2. '(' → logprob: -1.7100821733474731
    3. '(sys' → logprob: -5.210082054138184
    4. '()' → logprob: -5.835082054138184
    5. '(x' → logprob: -9.335082054138184
    6. 'input' → logprob: -9.835082054138184
    7. '(raw' → logprob: -10.710082054138184
    8. '((' → logprob: -10.710082054138184
    9. '(stdin' → logprob: -11.460082054138184
    10. '(
' → logprob: -11.710082054138184

Token 35: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0017615711549296975
    2. '()' → logprob: -6.376761436462402
    3. '().' → logprob: -10.626761436462402
    4. '()))' → logprob: -11.626761436462402
    5. ' ())' → logprob: -11.626761436462402
    6. '();)' → logprob: -12.251761436462402
    7. ')' → logprob: -12.501761436462402
    8. '())
' → logprob: -12.626761436462402
    9. '()),' → logprob: -13.501761436462402
    10. '());' → logprob: -13.626761436462402

Token 36: 'MI' (ID: 15470)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5236460566520691
    2. 'D' → logprob: -2.273646116256714
    3. '_' → logprob: -2.523646116256714
    4. '()' → logprob: -2.898646116256714
    5. '(' → logprob: -3.273646116256714
    6. 'I' → logprob: -3.773646116256714
    7. 'N' → logprob: -3.773646116256714
    8. 'M' → logprob: -4.523645877838135
    9. '<|end|>' → logprob: -4.523645877838135
    10. '*' → logprob: -4.773645877838135

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.750019371509552
    2. ' =' → logprob: -0.750019371509552
    3. '=lambda' → logprob: -3.3750193119049072
    4. 'N' → logprob: -4.375019550323486
    5. '=int' → logprob: -5.625019550323486
    6. 'I' → logprob: -6.250019550323486
    7. 'lambda' → logprob: -7.625019550323486
    8. 'M' → logprob: -7.750019550323486
    9. 'X' → logprob: -7.875019550323486
    10. '=N' → logprob: -8.375019073486328

Token 38: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.004354633390903473
    2. '(lambda' → logprob: -6.504354476928711
    3. 'map' → logprob: -6.879354476928711
    4. 'list' → logprob: -6.879354476928711
    5. ' lambda' → logprob: -7.379354476928711
    6. '=lambda' → logprob: -9.754354476928711
    7. 'int' → logprob: -10.129354476928711
    8. 'lam' → logprob: -10.129354476928711
    9. 'm' → logprob: -12.254354476928711
    10. 'l' → logprob: -12.504354476928711

Token 39: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029154621064662933
    2. ':list' → logprob: -4.0291547775268555
    3. 'list' → logprob: -5.5291547775268555
    4. ' list' → logprob: -6.2791547775268555
    5. '():' → logprob: -6.7791547775268555
    6. '[]' → logprob: -6.7791547775268555
    7. 'map' → logprob: -7.1541547775268555
    8. ' map' → logprob: -7.4041547775268555
    9. ':int' → logprob: -8.404154777526855
    10. 'int' → logprob: -8.404154777526855

Token 40: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0019910898990929127
    2. ' map' → logprob: -6.751991271972656
    3. 'list' → logprob: -7.126991271972656
    4. 'int' → logprob: -11.751991271972656
    5. 'input' → logprob: -12.876991271972656
    6. '[' → logprob: -13.626991271972656
    7. '(map' → logprob: -13.876991271972656
    8. 'm' → logprob: -14.001991271972656
    9. 'lambda' → logprob: -14.001991271972656
    10. ' list' → logprob: -14.126991271972656

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0052505917847156525
    2. '(' → logprob: -5.255250453948975
    3. 'int' → logprob: -11.755250930786133
    4. '(input' → logprob: -12.005250930786133
    5. '<int' → logprob: -13.630250930786133
    6. '(
' → logprob: -14.505250930786133
    7. ' (' → logprob: -15.130250930786133
    8. '=int' → logprob: -15.380250930786133
    9. '(in' → logprob: -15.755250930786133
    10. '(str' → logprob: -15.880250930786133

Token 42: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0009633887093514204
    2. ' (' → logprob: -7.12596321105957
    3. '(' → logprob: -9.25096321105957
    4. ',input' → logprob: -10.37596321105957
    5. ')' → logprob: -11.62596321105957
    6. 'input' → logprob: -11.75096321105957
    7. ')(' → logprob: -11.87596321105957
    8. '=input' → logprob: -12.75096321105957
    9. ' input' → logprob: -12.87596321105957
    10. '(in' → logprob: -14.37596321105957

Token 43: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023247575387358665
    2. ' input' → logprob: -3.773247480392456
    3. '(input' → logprob: -13.898247718811035
    4. ',input' → logprob: -15.273247718811035
    5. '=input' → logprob: -15.523247718811035
    6. '	input' → logprob: -15.648247718811035
    7. ' ' → logprob: -15.773247718811035
    8. '<input' → logprob: -16.39824676513672
    9. ')' → logprob: -16.52324676513672
    10. '_input' → logprob: -17.02324676513672

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008825227851048112
    2. '()' → logprob: -7.250882625579834
    3. '())' → logprob: -8.750882148742676
    4. '(' → logprob: -12.125882148742676
    5. ' ().' → logprob: -12.250882148742676
    6. ')' → logprob: -12.750882148742676
    7. '.' → logprob: -14.625882148742676
    8. '());' → logprob: -15.750882148742676
    9. '()
' → logprob: -16.375883102416992
    10. ' ()' → logprob: -16.500883102416992

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020687808864749968
    2. 'strip' → logprob: -8.62520694732666
    3. ' split' → logprob: -11.37520694732666
    4. ')' → logprob: -11.62520694732666
    5. 'rstrip' → logprob: -12.37520694732666
    6. 'spl' → logprob: -13.25020694732666
    7. '(split' → logprob: -14.75020694732666
    8. 's' → logprob: -15.25020694732666
    9. 'read' → logprob: -15.62520694732666
    10. ' ' → logprob: -16.500205993652344

Token 46: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0013046413660049438
    2. '()' → logprob: -6.876304626464844
    3. ')' → logprob: -8.376304626464844
    4. '()))' → logprob: -10.751304626464844
    5. '())
' → logprob: -11.126304626464844
    6. '(' → logprob: -13.126304626464844
    7. ' ())' → logprob: -13.251304626464844
    8. '))' → logprob: -14.626304626464844
    9. '();)' → logprob: -14.751304626464844
    10. '())
' → logprob: -15.251304626464844

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27198463678359985
    2. 'D' → logprob: -2.146984577178955
    3. 'N' → logprob: -3.396984577178955
    4. 'S' → logprob: -3.521984577178955
    5. 'M' → logprob: -4.771984577178955
    6. 'DP' → logprob: -5.021984577178955
    7. 'MI' → logprob: -5.146984577178955
    8. '\' → logprob: -5.271984577178955
    9. '_' → logprob: -6.146984577178955
    10. 'A' → logprob: -6.271984577178955

Token 48: ' MI' (ID: 32682)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.012320680543780327
    2. 'main' → logprob: -5.512320518493652
    3. ' input' → logprob: -5.887320518493652
    4. ' ' → logprob: -6.012320518493652
    5. ' solve' → logprob: -7.137320518493652
    6. ' int' → logprob: -8.012320518493652
    7. ' I' → logprob: -8.262320518493652
    8. 'I' → logprob: -8.262320518493652
    9. ' dfs' → logprob: -9.012320518493652
    10. '_main' → logprob: -9.012320518493652

Token 49: '1' (ID: 16)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001093427068553865
    2. '()' → logprob: -7.00109338760376
    3. ' ():' → logprob: -9.251093864440918
    4. '():
' → logprob: -9.626093864440918
    5. '(' → logprob: -11.501093864440918
    6. '):' → logprob: -13.126093864440918
    7. ' ()' → logprob: -13.376093864440918
    8. '_' → logprob: -13.626093864440918
    9. ':' → logprob: -14.126093864440918
    10. '():
' → logprob: -14.501093864440918

Token 50: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.1080467781284824e-05
    2. ' ():' → logprob: -11.125041007995605
    3. '()' → logprob: -11.250041007995605
    4. '():
' → logprob: -11.250041007995605
    5. '():

' → logprob: -16.375041961669922
    6. '(' → logprob: -16.750041961669922
    7. ' ()' → logprob: -17.000041961669922
    8. '):' → logprob: -17.125041961669922
    9. '():
' → logprob: -17.125041961669922
    10. '0' → logprob: -18.250041961669922

Token 51: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07327752560377121
    2. 'return' → logprob: -2.698277473449707
    3. '   ' → logprob: -5.823277473449707
    4. ' ' → logprob: -8.573277473449707
    5. ' ' → logprob: -9.698277473449707
    6. '    ' → logprob: -9.698277473449707
    7. '	return' → logprob: -10.573277473449707
    8. ':return' → logprob: -11.323277473449707
    9. '  ' → logprob: -12.198277473449707
    10. ' list' → logprob: -12.573277473449707

Token 52: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7858335375785828
    2. '[int' → logprob: -1.1608335971832275
    3. '[' → logprob: -2.6608335971832275
    4. 'map' → logprob: -2.9108335971832275
    5. ' list' → logprob: -3.1608335971832275
    6. '[list' → logprob: -3.4108335971832275
    7. ' [' → logprob: -4.410833358764648
    8. '[m' → logprob: -5.035833358764648
    9. ' map' → logprob: -5.535833358764648
    10. 'int' → logprob: -5.535833358764648

Token 53: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008011689060367644
    2. '(lambda' → logprob: -7.875801086425781
    3. 'int' → logprob: -8.500801086425781
    4. '(' → logprob: -8.500801086425781
    5. '<int' → logprob: -11.500801086425781
    6. 'lambda' → logprob: -13.875801086425781
    7. '[int' → logprob: -14.000801086425781
    8. '=int' → logprob: -14.625801086425781
    9. 's' → logprob: -14.750801086425781
    10. ' int' → logprob: -15.000801086425781

Token 54: 'm' (ID: 76)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000510260637383908
    2. ',input' → logprob: -7.625510215759277
    3. '(' → logprob: -11.375510215759277
    4. '(input' → logprob: -11.875510215759277
    5. ' ,' → logprob: -13.125510215759277
    6. 'input' → logprob: -14.125510215759277
    7. ',(' → logprob: -15.125510215759277
    8. '(),' → logprob: -15.500510215759277
    9. ')' → logprob: -16.000511169433594
    10. ' (' → logprob: -16.250511169433594

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '(x' → logprob: -18.625
    3. ' ' → logprob: -19.625
    4. '-' → logprob: -20.625
    5. '１' → logprob: -20.75
    6. 'm' → logprob: -21.25
    7. '_' → logprob: -21.8125
    8. '' → logprob: -22.0625
    9. '१' → logprob: -22.375
    10. '১' → logprob: -22.375

Token 56: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5799846649169922
    2. ',input' → logprob: -1.4549846649169922
    3. ',' → logprob: -1.5799846649169922
    4. 'input' → logprob: -7.329984664916992
    5. ',(' → logprob: -11.829984664916992
    6. 's' → logprob: -11.829984664916992
    7. ' (' → logprob: -11.954984664916992
    8. ' ,' → logprob: -11.954984664916992
    9. '<input' → logprob: -12.329984664916992
    10. '(' → logprob: -12.454984664916992

Token 57: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008620720356702805
    2. ' input' → logprob: -4.758620738983154
    3. '(input' → logprob: -12.633620262145996
    4. ' ' → logprob: -13.383620262145996
    5. '<input' → logprob: -14.758620262145996
    6. 'sys' → logprob: -15.383620262145996
    7. '	input' → logprob: -15.633620262145996
    8. ')' → logprob: -16.258621215820312
    9. '  ' → logprob: -16.258621215820312
    10. ',input' → logprob: -16.383621215820312

Token 58: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.491498531133402e-06
    2. '()' → logprob: -11.625009536743164
    3. ' ().' → logprob: -14.500009536743164
    4. '())' → logprob: -17.500009536743164
    5. '(' → logprob: -18.125009536743164
    6. '()))' → logprob: -19.125009536743164
    7. '().__' → logprob: -19.625009536743164
    8. ' ()' → logprob: -20.750009536743164
    9. '());' → logprob: -21.375009536743164
    10. '()).' → logprob: -21.375009536743164

Token 59: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4617256056226324e-05
    2. ' split' → logprob: -11.625014305114746
    3. 'strip' → logprob: -12.250014305114746
    4. 'rstrip' → logprob: -14.250014305114746
    5. 'spl' → logprob: -15.500014305114746
    6. '(split' → logprob: -18.000015258789062
    7. '.split' → logprob: -19.500015258789062
    8. '_split' → logprob: -19.750015258789062
    9. 'plit' → logprob: -19.875015258789062
    10. '().' → logprob: -20.000015258789062

Token 60: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015581895131617785
    2. '()' → logprob: -7.001558303833008
    3. ')' → logprob: -7.376558303833008
    4. '()))' → logprob: -11.001558303833008
    5. ' ())' → logprob: -13.376558303833008
    6. '))' → logprob: -13.751558303833008
    7. '())
' → logprob: -13.876558303833008
    8. '();)' → logprob: -15.626558303833008
    9. '(' → logprob: -16.376558303833008
    10. '());' → logprob: -17.001558303833008

Token 61: 'LI' (ID: 14313)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016263799741864204
    2. '#' → logprob: -5.891263961791992
    3. 'D' → logprob: -6.641263961791992
    4. 'MI' → logprob: -6.766263961791992
    5. '\' → logprob: -6.891263961791992
    6. 'S' → logprob: -7.016263961791992
    7. ')' → logprob: -7.266263961791992
    8. 'N' → logprob: -7.516263961791992
    9. 'I' → logprob: -7.641263961791992
    10. 'DP' → logprob: -7.766263961791992

Token 62: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.545369029045105
    2. '()' → logprob: -1.670369029045105
    3. ' =' → logprob: -1.795369029045105
    4. 'st' → logprob: -3.6703691482543945
    5. 'n' → logprob: -4.2953691482543945
    6. '1' → logprob: -5.0453691482543945
    7. 'ambda' → logprob: -5.4203691482543945
    8. 'ST' → logprob: -5.5453691482543945
    9. 'mb' → logprob: -5.5453691482543945
    10. '=lambda' → logprob: -6.2953691482543945

Token 63: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.20951643586158752
    2. ' lambda' → logprob: -2.2095165252685547
    3. 'list' → logprob: -2.5845165252685547
    4. ' list' → logprob: -5.584516525268555
    5. '(lambda' → logprob: -9.584516525268555
    6. '=lambda' → logprob: -12.459516525268555
    7. 'lam' → logprob: -12.584516525268555
    8. ' lamb' → logprob: -13.709516525268555
    9. '[]' → logprob: -14.209516525268555
    10. 'l' → logprob: -14.209516525268555

Token 64: ' :' (ID: 712)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6259271502494812
    2. ':' → logprob: -0.8759271502494812
    3. ':list' → logprob: -3.125927209854126
    4. 'list' → logprob: -5.375926971435547
    5. ' :' → logprob: -8.625926971435547
    6. ' input' → logprob: -11.250926971435547
    7. '[list' → logprob: -11.750926971435547
    8. ' ' → logprob: -12.000926971435547
    9. ' lst' → logprob: -12.625926971435547
    10. 'List' → logprob: -12.750926971435547

Token 65: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08281251043081284
    2. ' list' → logprob: -2.582812547683716
    3. '[list' → logprob: -5.582812309265137
    4. '[' → logprob: -9.082812309265137
    5. ' [' → logprob: -10.582812309265137
    6. '[input' → logprob: -11.832812309265137
    7. '[int' → logprob: -13.332812309265137
    8. '[l' → logprob: -13.582812309265137
    9. 'input' → logprob: -14.707812309265137
    10. '	list' → logprob: -14.707812309265137

Token 66: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001733855315251276
    2. ' int' → logprob: -8.750173568725586
    3. 'input' → logprob: -11.500173568725586
    4. '*' → logprob: -13.250173568725586
    5. ']int' → logprob: -14.250173568725586
    6. 'list' → logprob: -14.750173568725586
    7. 'str' → logprob: -15.000173568725586
    8. '<int' → logprob: -15.375173568725586
    9. '(int' → logprob: -15.375173568725586
    10. 'i' → logprob: -15.375173568725586

Token 67: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005985085386782885
    2. '(i' → logprob: -5.130985260009766
    3. '(input' → logprob: -10.630985260009766
    4. '(s' → logprob: -11.255985260009766
    5. '(' → logprob: -11.880985260009766
    6. 'i' → logprob: -12.255985260009766
    7. ']' → logprob: -13.505985260009766
    8. '(e' → logprob: -13.755985260009766
    9. 'x' → logprob: -14.005985260009766
    10. '(a' → logprob: -14.130985260009766

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019102399528492242
    2. 'for' → logprob: -8.875190734863281
    3. '(input' → logprob: -11.250190734863281
    4. 'in' → logprob: -11.500190734863281
    5. '(x' → logprob: -11.625190734863281
    6. 'input' → logprob: -11.750190734863281
    7. ' for' → logprob: -11.875190734863281
    8. '=input' → logprob: -13.375190734863281
    9. ' )' → logprob: -13.875190734863281
    10. 'or' → logprob: -15.125190734863281

Token 69: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5761028528213501
    2. ' for' → logprob: -0.8261028528213501
    3. ')' → logprob: -9.076103210449219
    4. 'in' → logprob: -10.701103210449219
    5. 'input' → logprob: -12.076103210449219
    6. '(input' → logprob: -12.576103210449219
    7. '	for' → logprob: -12.701103210449219
    8. ' in' → logprob: -12.701103210449219
    9. 'or' → logprob: -12.826103210449219
    10. ']' → logprob: -12.951103210449219

Token 70: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5299954414367676
    2. 'input' → logprob: -1.1549954414367676
    3. ' x' → logprob: -2.6549954414367676
    4. 'x' → logprob: -3.6549954414367676
    5. ' in' → logprob: -10.27999496459961
    6. ' ' → logprob: -10.40499496459961
    7. '(x' → logprob: -10.52999496459961
    8. '=input' → logprob: -11.02999496459961
    9. '(input' → logprob: -11.02999496459961
    10. '<input' → logprob: -11.27999496459961

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02326364815235138
    2. 'input' → logprob: -4.523263454437256
    3. '(input' → logprob: -5.148263454437256
    4. 'in' → logprob: -6.148263454437256
    5. ' input' → logprob: -6.148263454437256
    6. '=input' → logprob: -6.773263454437256
    7. '(' → logprob: -7.148263454437256
    8. 's' → logprob: -10.773263931274414
    9. ')' → logprob: -10.898263931274414
    10. ',input' → logprob: -11.273263931274414

Token 72: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868868350982666
    2. ' input' → logprob: -1.1368868350982666
    3. ' sys' → logprob: -11.636886596679688
    4. 'sys' → logprob: -12.011886596679688
    5. '(input' → logprob: -14.886886596679688
    6. ' ' → logprob: -15.386886596679688
    7. '<input' → logprob: -16.386886596679688
    8. '=input' → logprob: -16.511886596679688
    9. '	input' → logprob: -16.886886596679688
    10. '_input' → logprob: -17.886886596679688

Token 73: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06045686826109886
    2. '()' → logprob: -3.3104567527770996
    3. '()]' → logprob: -3.8104567527770996
    4. '()[' → logprob: -10.935457229614258
    5. '()][' → logprob: -12.810457229614258
    6. ' ()' → logprob: -13.435457229614258
    7. '().__' → logprob: -13.810457229614258
    8. '())' → logprob: -13.810457229614258
    9. '(' → logprob: -13.935457229614258
    10. '()].' → logprob: -14.310457229614258

Token 74: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00411959970369935
    2. 'strip' → logprob: -5.504119396209717
    3. 'rstrip' → logprob: -10.129119873046875
    4. ' split' → logprob: -13.629119873046875
    5. 'spl' → logprob: -15.879119873046875
    6. '(split' → logprob: -17.504119873046875
    7. 'plit' → logprob: -17.754119873046875
    8. '.split' → logprob: -18.879119873046875
    9. ' strip' → logprob: -18.879119873046875
    10. ')' → logprob: -19.504119873046875

Token 75: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -1.4498052223643754e-05
    2. ']' → logprob: -11.875014305114746
    3. '()' → logprob: -11.875014305114746
    4. '(' → logprob: -15.500014305114746
    5. ']()' → logprob: -16.250015258789062
    6. '()]
' → logprob: -16.375015258789062
    7. '())' → logprob: -17.500015258789062
    8. ' ()' → logprob: -17.875015258789062
    9. ')]' → logprob: -17.875015258789062
    10. '()],' → logprob: -18.375015258789062

Token 76: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.322936773300171
    2. '#' → logprob: -1.697936773300171
    3. 'n' → logprob: -1.822936773300171
    4. 'N' → logprob: -2.697936773300171
    5. 'D' → logprob: -2.822936773300171
    6. 'd' → logprob: -2.947936773300171
    7. '\' → logprob: -3.572936773300171
    8. 'L' → logprob: -3.572936773300171
    9. 'I' → logprob: -3.822936773300171
    10. 'A' → logprob: -4.19793701171875

Token 77: ' LI' (ID: 14875)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5895988345146179
    2. 'LI' → logprob: -2.2145988941192627
    3. 'int' → logprob: -2.3395988941192627
    4. ' LI' → logprob: -2.3395988941192627
    5. ' int' → logprob: -3.0895988941192627
    6. 'main' → logprob: -3.4645988941192627
    7. ' str' → logprob: -3.8395988941192627
    8. ' input' → logprob: -4.714598655700684
    9. 'str' → logprob: -4.839598655700684
    10. ' MI' → logprob: -4.964598655700684

Token 78: '1' (ID: 16)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01950194500386715
    2. '1' → logprob: -4.14450216293335
    3. '()' → logprob: -5.76950216293335
    4. '(' → logprob: -8.769501686096191
    5. ' ():' → logprob: -9.644501686096191
    6. '_' → logprob: -10.019501686096191
    7. '():
' → logprob: -11.019501686096191
    8. ' ()' → logprob: -11.144501686096191
    9. '(n' → logprob: -11.519501686096191
    10. '()>' → logprob: -12.269501686096191

Token 79: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004058858612552285
    2. '()' → logprob: -8.125406265258789
    3. '(x' → logprob: -9.750406265258789
    4. ' ():' → logprob: -10.000406265258789
    5. '(' → logprob: -12.500406265258789
    6. ' ()' → logprob: -14.125406265258789
    7. '()(' → logprob: -14.250406265258789
    8. '():
' → logprob: -14.250406265258789
    9. '_' → logprob: -15.250406265258789
    10. '()[' → logprob: -17.25040626525879

Token 80: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.01105442550033331
    2. 'return' → logprob: -4.511054515838623
    3. '	return' → logprob: -12.511054039001465
    4. ' ' → logprob: -13.386054039001465
    5. ' ' → logprob: -13.761054039001465
    6. '   ' → logprob: -15.761054039001465
    7. ':return' → logprob: -16.13605499267578
    8. ')return' → logprob: -17.51105499267578
    9. '{return' → logprob: -17.51105499267578
    10. ' 
' → logprob: -17.63605499267578

Token 81: ' list' (ID: 1562)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.20836707949638367
    2. 'list' → logprob: -2.208367109298706
    3. '[list' → logprob: -2.708367109298706
    4. ' [' → logprob: -5.083366870880127
    5. ' list' → logprob: -5.708366870880127
    6. '[' → logprob: -6.583366870880127
    7. '[List' → logprob: -8.583367347717285
    8. 'map' → logprob: -8.583367347717285
    9. '[input' → logprob: -8.833367347717285
    10. '[x' → logprob: -9.958367347717285

Token 82: '(map' (ID: 16946)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.5916815996170044
    2. '(int' → logprob: -0.8416815996170044
    3. '(map' → logprob: -4.341681480407715
    4. 'int' → logprob: -6.091681480407715
    5. '(' → logprob: -8.466681480407715
    6. '<int' → logprob: -9.591681480407715
    7. '(L' → logprob: -10.591681480407715
    8. '(m' → logprob: -11.466681480407715
    9. '[int' → logprob: -11.966681480407715
    10. '(lambda' → logprob: -13.091681480407715

Token 83: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.11996734328568e-05
    2. 'int' → logprob: -10.125041007995605
    3. '<int' → logprob: -15.250041007995605
    4. '(' → logprob: -15.375041007995605
    5. ',int' → logprob: -15.500041007995605
    6. '=int' → logprob: -15.500041007995605
    7. '[int' → logprob: -16.125041961669922
    8. ' int' → logprob: -16.250041961669922
    9. ':int' → logprob: -17.250041961669922
    10. ' (' → logprob: -17.625041961669922

Token 84: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.42811518907546997
    2. 'int' → logprob: -1.1781151294708252
    3. ' x' → logprob: -3.553115129470825
    4. ' int' → logprob: -4.553115367889404
    5. ':int' → logprob: -7.428115367889404
    6. 'z' → logprob: -8.553114891052246
    7. 'y' → logprob: -9.053114891052246
    8. 'a' → logprob: -9.303114891052246
    9. '<int' → logprob: -9.428114891052246
    10. ',int' → logprob: -10.428114891052246

Token 85: ':' (ID: 25)
  Prédit: ':int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':int' → logprob: -0.5502046942710876
    2. ':' → logprob: -1.1752047538757324
    3. 'int' → logprob: -2.3002047538757324
    4. ' int' → logprob: -5.050204753875732
    5. ' :' → logprob: -5.300204753875732
    6. ' y' → logprob: -6.675204753875732
    7. 'y' → logprob: -6.800204753875732
    8. '=int' → logprob: -8.925204277038574
    9. '<int' → logprob: -9.300204277038574
    10. ',int' → logprob: -9.675204277038574

Token 86: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009804255329072475
    2. ' int' → logprob: -4.6348042488098145
    3. '(int' → logprob: -10.634804725646973
    4. '   ' → logprob: -12.259804725646973
    5. ' ' → logprob: -12.384804725646973
    6. '  ' → logprob: -12.509804725646973
    7. 'y' → logprob: -12.884804725646973
    8. '[int' → logprob: -13.134804725646973
    9. 'ord' → logprob: -13.884804725646973
    10. ' y' → logprob: -14.009804725646973

Token 87: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0007363698096014559
    2. 'y' → logprob: -7.250736236572266
    3. '(' → logprob: -11.250736236572266
    4. 'm' → logprob: -11.750736236572266
    5. '(int' → logprob: -12.500736236572266
    6. ' y' → logprob: -14.500736236572266
    7. 'int' → logprob: -14.875736236572266
    8. '(x' → logprob: -15.000736236572266
    9. ')y' → logprob: -15.500736236572266
    10. '	y' → logprob: -15.625736236572266

Token 88: ')-' (ID: 14080)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.2639703154563904
    2. '(x' → logprob: -2.013970375061035
    3. ')-' → logprob: -2.763970375061035
    4. '-' → logprob: -3.638970375061035
    5. 'y' → logprob: -5.013970375061035
    6. ')' → logprob: -6.638970375061035
    7. 'x' → logprob: -7.513970375061035
    8. ' -' → logprob: -7.638970375061035
    9. ' y' → logprob: -10.013970375061035
    10. ')y' → logprob: -10.013970375061035

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -16.250009536743164
    4. '0' → logprob: -18.875009536743164
    5. 'y' → logprob: -19.000009536743164
    6. '   ' → logprob: -19.375009536743164
    7. '2' → logprob: -19.875009536743164
    8. ')' → logprob: -19.875009536743164
    9. '`' → logprob: -20.125009536743164
    10. '  ' → logprob: -20.250009536743164

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005942309740930796
    2. ',input' → logprob: -5.130942344665527
    3. ',x' → logprob: -12.130942344665527
    4. 'input' → logprob: -12.630942344665527
    5. ' ,' → logprob: -12.755942344665527
    6. ',y' → logprob: -15.130942344665527
    7. '))' → logprob: -15.255942344665527
    8. ')' → logprob: -15.505942344665527
    9. ',line' → logprob: -15.505942344665527
    10. '),' → logprob: -15.755942344665527

Token 91: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006716317031532526
    2. ' input' → logprob: -5.006716251373291
    3. '<input' → logprob: -14.63171672821045
    4. ' ' → logprob: -16.256715774536133
    5. '(input' → logprob: -16.256715774536133
    6. '	input' → logprob: -16.381715774536133
    7. ',input' → logprob: -16.631715774536133
    8. '[input' → logprob: -17.006715774536133
    9. 'sys' → logprob: -17.506715774536133
    10. '=input' → logprob: -17.631715774536133

Token 92: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -16.125
    3. '.split' → logprob: -16.5
    4. ' ().' → logprob: -17.0
    5. '()))' → logprob: -18.0
    6. '(' → logprob: -18.375
    7. '().__' → logprob: -18.625
    8. '.' → logprob: -19.0
    9. '.readline' → logprob: -19.5
    10. '))' → logprob: -19.625

Token 93: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.491498531133402e-06
    2. 'strip' → logprob: -11.625009536743164
    3. ' split' → logprob: -14.750009536743164
    4. ')' → logprob: -16.125009536743164
    5. 'rstrip' → logprob: -16.750009536743164
    6. 'read' → logprob: -18.125009536743164
    7. 'spl' → logprob: -18.625009536743164
    8. '(split' → logprob: -18.625009536743164
    9. '.split' → logprob: -19.375009536743164
    10. 'plit' → logprob: -19.500009536743164

Token 94: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5326796770095825
    2. '()))' → logprob: -1.0326796770095825
    3. '()' → logprob: -2.907679557800293
    4. ')' → logprob: -6.282679557800293
    5. '())' → logprob: -7.782679557800293
    6. '(' → logprob: -11.782679557800293
    7. '()));' → logprob: -12.032679557800293
    8. '()))
' → logprob: -12.157679557800293
    9. ')))' → logprob: -12.282679557800293
    10. ' ))' → logprob: -13.407679557800293

Token 95: 'LL' (ID: 7454)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: 'I' (ID: 40)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014627527445554733
    2. 'I' → logprob: -4.514627456665039
    3. ' =' → logprob: -5.764627456665039
    4. 'ambda' → logprob: -8.139627456665039
    5. '=lambda' → logprob: -9.014627456665039
    6. '=[]' → logprob: -11.389627456665039
    7. 'i' → logprob: -12.514627456665039
    8. '>' → logprob: -13.264627456665039
    9. 'A' → logprob: -13.889627456665039
    10. 'def' → logprob: -14.014627456665039

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197356939315796
    2. '=' → logprob: -1.5019736289978027
    3. '=lambda' → logprob: -10.251973152160645
    4. '(' → logprob: -12.876973152160645
    5. ' ' → logprob: -13.126973152160645
    6. '=[]' → logprob: -14.251973152160645
    7. '(lambda' → logprob: -14.376973152160645
    8. '()' → logprob: -14.751973152160645
    9. '>' → logprob: -14.751973152160645
    10. ')' → logprob: -14.751973152160645

Token 98: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.06218905746936798
    2. 'lambda' → logprob: -2.8121891021728516
    3. 'ambda' → logprob: -8.937189102172852
    4. '(lambda' → logprob: -9.812189102172852
    5. '=lambda' → logprob: -10.437189102172852
    6. ' list' → logprob: -13.062189102172852
    7. ' lamb' → logprob: -13.687189102172852
    8. ' ' → logprob: -14.312189102172852
    9. '_lambda' → logprob: -14.687189102172852
    10. 'list' → logprob: -15.187189102172852

Token 99: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5281745791435242
    2. ' :' → logprob: -0.9031745791435242
    3. ':list' → logprob: -5.52817440032959
    4. ' lambda' → logprob: -7.77817440032959
    5. ' list' → logprob: -7.90317440032959
    6. ' ():' → logprob: -9.40317440032959
    7. '():' → logprob: -9.90317440032959
    8. 'lambda' → logprob: -10.15317440032959
    9. ':int' → logprob: -10.52817440032959
    10. '(lambda' → logprob: -11.27817440032959

Token 100: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009572386741638184
    2. ' :' → logprob: -4.759572505950928
    3. ':[' → logprob: -7.009572505950928
    4. ':[[' → logprob: -11.00957202911377
    5. ':list' → logprob: -11.38457202911377
    6. '=' → logprob: -11.88457202911377
    7. '=[' → logprob: -11.88457202911377
    8. '=[]' → logprob: -12.25957202911377
    9. ':[
' → logprob: -13.38457202911377
    10. ':n' → logprob: -13.50957202911377

Token 101: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.2597493827342987
    2. ' [' → logprob: -1.759749412536621
    3. '[int' → logprob: -3.509749412536621
    4. '[' → logprob: -3.759749412536621
    5. '[List' → logprob: -6.009749412536621
    6. '[line' → logprob: -8.134749412536621
    7. '[[' → logprob: -8.384749412536621
    8. '[len' → logprob: -8.509749412536621
    9. ' [[' → logprob: -9.384749412536621
    10. '[n' → logprob: -9.634749412536621

Token 102: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.2560183107852936
    2. 'list' → logprob: -1.5060182809829712
    3. '[' → logprob: -5.756018161773682
    4. ' list' → logprob: -7.506018161773682
    5. '[list' → logprob: -8.75601863861084
    6. ' LI' → logprob: -8.88101863861084
    7. '[List' → logprob: -11.25601863861084
    8. 'List' → logprob: -11.25601863861084
    9. 'li' → logprob: -11.38101863861084
    10. ' [' → logprob: -11.63101863861084

Token 103: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5332478142227046e-05
    2. '()]' → logprob: -11.375015258789062
    3. ' ()' → logprob: -12.625015258789062
    4. '()
' → logprob: -16.125015258789062
    5. 'for' → logprob: -16.250015258789062
    6. '().' → logprob: -16.750015258789062
    7. '()`' → logprob: -17.125015258789062
    8. '(' → logprob: -17.250015258789062
    9. '（）' → logprob: -17.500015258789062
    10. '()>' → logprob: -17.875015258789062

Token 104: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3005288243293762
    2. ' for' → logprob: -1.5505287647247314
    3. '()' → logprob: -3.0505287647247314
    4. ')' → logprob: -9.675528526306152
    5. '	for' → logprob: -10.675528526306152
    6. ']' → logprob: -11.800528526306152
    7. '```' → logprob: -12.425528526306152
    8. ' ' → logprob: -13.550528526306152
    9. ' ' → logprob: -13.925528526306152
    10. '   ' → logprob: -14.300528526306152

Token 105: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26799002289772034
    2. ' range' → logprob: -1.767989993095398
    3. 'range' → logprob: -2.7679901123046875
    4. ' _' → logprob: -6.6429901123046875
    5. '_range' → logprob: -8.892990112304688
    6. 'i' → logprob: -9.517990112304688
    7. '(range' → logprob: -10.017990112304688
    8. ' in' → logprob: -10.642990112304688
    9. '_i' → logprob: -10.892990112304688
    10. 'in' → logprob: -11.892990112304688

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043702125549316406
    2. 'in' → logprob: -3.1687021255493164
    3. 'range' → logprob: -7.418702125549316
    4. ' ' → logprob: -9.918702125549316
    5. ' range' → logprob: -9.918702125549316
    6. '_' → logprob: -13.168702125549316
    7. '  ' → logprob: -14.043702125549316
    8. 'n' → logprob: -14.418702125549316
    9. ' _' → logprob: -15.043702125549316
    10. 'i' → logprob: -16.168701171875

Token 107: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '	range' → logprob: -17.500431060791016
    4. '_' → logprob: -18.375431060791016
    5. '(range' → logprob: -18.375431060791016
    6. '_range' → logprob: -18.625431060791016
    7. 'rang' → logprob: -19.625431060791016
    8. 'r' → logprob: -20.625431060791016
    9. ' ' → logprob: -20.625431060791016
    10. 'ran' → logprob: -21.250431060791016

Token 108: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.68022444692906e-05
    2. '(' → logprob: -10.000046730041504
    3. 'n' → logprob: -13.625046730041504
    4. '(
' → logprob: -17.00004768371582
    5. ' (' → logprob: -17.25004768371582
    6. ' n' → logprob: -17.37504768371582
    7. '	n' → logprob: -18.62504768371582
    8. ')n' → logprob: -19.87504768371582
    9. '((' → logprob: -20.87504768371582
    10. '_n' → logprob: -21.00004768371582

Token 109: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003091254911851138
    2. ']' → logprob: -8.250308990478516
    3. ')' → logprob: -10.000308990478516
    4. '()]' → logprob: -13.625308990478516
    5. ')]
' → logprob: -14.500308990478516
    6. ' )' → logprob: -16.000308990478516
    7. '])' → logprob: -16.125308990478516
    8. '')]' → logprob: -16.250308990478516
    9. ')],' → logprob: -16.625308990478516
    10. '])]' → logprob: -16.750308990478516

Token 110: 'SM' (ID: 12580)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.367682933807373
    2. '#' → logprob: -1.992682933807373
    3. 'n' → logprob: -1.992682933807373
    4. ')' → logprob: -2.367682933807373
    5. '<|end|>' → logprob: -2.742682933807373
    6. ' ' → logprob: -2.867682933807373
    7. '\n' → logprob: -2.992682933807373
    8. '(' → logprob: -3.617682933807373
    9. 'L' → logprob: -3.867682933807373
    10. '```' → logprob: -3.867682933807373

Token 111: 'I' (ID: 40)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4218046963214874
    2. '=' → logprob: -1.421804666519165
    3. 'I' → logprob: -2.796804666519165
    4. 'IN' → logprob: -4.046804904937744
    5. '=input' → logprob: -5.921804904937744
    6. 'S' → logprob: -6.046804904937744
    7. '=lambda' → logprob: -6.046804904937744
    8. '=sys' → logprob: -6.046804904937744
    9. 'ALL' → logprob: -6.171804904937744
    10. 'AP' → logprob: -6.671804904937744

Token 112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05576207861304283
    2. ' =' → logprob: -2.9307620525360107
    3. '=lambda' → logprob: -7.05576229095459
    4. '1' → logprob: -12.43076229095459
    5. 'I' → logprob: -12.55576229095459
    6. 'def' → logprob: -13.55576229095459
    7. 'A' → logprob: -13.55576229095459
    8. 'a' → logprob: -13.80576229095459
    9. '()' → logprob: -13.93076229095459
    10. ')' → logprob: -13.93076229095459

Token 113: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5764882564544678
    2. ' lambda' → logprob: -0.8264882564544678
    3. '(lambda' → logprob: -7.701488494873047
    4. '=lambda' → logprob: -10.451488494873047
    5. 'ambda' → logprob: -10.576488494873047
    6. ' ' → logprob: -11.326488494873047
    7. ' lamb' → logprob: -11.826488494873047
    8. '    ' → logprob: -12.826488494873047
    9. '   ' → logprob: -12.951488494873047
    10. '  ' → logprob: -13.076488494873047

Token 114: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5880046486854553
    2. ':' → logprob: -1.0880045890808105
    3. 'map' → logprob: -2.8380045890808105
    4. ' lambda' → logprob: -3.9630045890808105
    5. 'int' → logprob: -4.0880045890808105
    6. ' map' → logprob: -5.4630045890808105
    7. 'list' → logprob: -5.8380045890808105
    8. '()' → logprob: -5.9630045890808105
    9. '():' → logprob: -6.5880045890808105
    10. '(lambda' → logprob: -7.5880045890808105

Token 115: ' input' (ID: 3422)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.057878017425537
    2. ' map' → logprob: -1.182878017425537
    3. 'map' → logprob: -1.182878017425537
    4. ' set' → logprob: -4.057878017425537
    5. 'sum' → logprob: -4.182878017425537
    6. 'list' → logprob: -6.182878017425537
    7. ' list' → logprob: -6.682878017425537
    8. 'sorted' → logprob: -6.682878017425537
    9. ' sum' → logprob: -6.807878017425537
    10. 'sys' → logprob: -6.807878017425537

Token 116: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009873307310044765
    2. '()' → logprob: -4.634873390197754
    3. '.' → logprob: -9.759873390197754
    4. ' ().' → logprob: -10.259873390197754
    5. '.split' → logprob: -10.884873390197754
    6. ' ()' → logprob: -13.259873390197754
    7. '().__' → logprob: -13.384873390197754
    8. ' .' → logprob: -14.134873390197754
    9. '()
' → logprob: -14.634873390197754
    10. '.s' → logprob: -15.134873390197754

Token 117: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.062373317778110504
    2. 'split' → logprob: -2.812373399734497
    3. 'rstrip' → logprob: -7.812373161315918
    4. ' strip' → logprob: -15.312373161315918
    5. 's' → logprob: -15.812373161315918
    6. 'rs' → logprob: -16.062374114990234
    7. 'spl' → logprob: -16.437374114990234
    8. 'startswith' → logprob: -16.812374114990234
    9. 'rst' → logprob: -16.937374114990234
    10. 'replace' → logprob: -17.062374114990234

Token 118: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011629798245849088
    2. '(' → logprob: -9.500116348266602
    3. '()
' → logprob: -10.250116348266602
    4. '()

' → logprob: -13.000116348266602
    5. '()]' → logprob: -13.625116348266602
    6. '()`' → logprob: -14.375116348266602
    7. '())' → logprob: -14.625116348266602
    8. '()[' → logprob: -15.250116348266602
    9. '()\' → logprob: -15.250116348266602
    10. ' ()' → logprob: -15.375116348266602

Token 119: 'def' (ID: 1314)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.4924360513687134
    2. 'def' → logprob: -1.4924360513687134
    3. 'D' → logprob: -1.6174360513687134
    4. 'N' → logprob: -1.8674360513687134
    5. 'A' → logprob: -3.367435932159424
    6. 'T' → logprob: -3.617435932159424
    7. '#' → logprob: -3.867435932159424
    8. '_' → logprob: -4.242435932159424
    9. 'n' → logprob: -4.367435932159424
    10. 'Q' → logprob: -4.492435932159424

Token 120: ' S' (ID: 336)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6910387277603149
    2. ' S' → logprob: -1.941038727760315
    3. 'main' → logprob: -3.5660386085510254
    4. ' SI' → logprob: -3.5660386085510254
    5. ' MI' → logprob: -3.5660386085510254
    6. ' input' → logprob: -3.6910386085510254
    7. ' SM' → logprob: -3.8160386085510254
    8. 'S' → logprob: -4.066038608551025
    9. 'int' → logprob: -4.066038608551025
    10. ' int' → logprob: -4.316038608551025

Token 121: 'LI' (ID: 14313)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.32598090171813965
    2. 'MI' → logprob: -1.4509809017181396
    3. 'I' → logprob: -3.4509809017181396
    4. '()' → logprob: -5.700981140136719
    5. '():' → logprob: -5.950981140136719
    6. 'plit' → logprob: -7.200981140136719
    7. 'PI' → logprob: -7.450981140136719
    8. 'L' → logprob: -7.700981140136719
    9. 'T' → logprob: -7.950981140136719
    10. 'S' → logprob: -7.950981140136719

Token 122: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.8497312895488e-05
    2. '()' → logprob: -9.875068664550781
    3. ' ():' → logprob: -11.250068664550781
    4. '():
' → logprob: -12.500068664550781
    5. '():

' → logprob: -15.625068664550781
    6. ' ()' → logprob: -16.25006866455078
    7. '():
' → logprob: -18.00006866455078
    8. '()>' → logprob: -18.37506866455078
    9. '=' → logprob: -19.00006866455078
    10. '()*' → logprob: -19.25006866455078

Token 123: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.004027464427053928
    2. 'return' → logprob: -5.754027366638184
    3. '   ' → logprob: -7.129027366638184
    4. '	return' → logprob: -10.629027366638184
    5. ' ' → logprob: -11.129027366638184
    6. ' s' → logprob: -12.629027366638184
    7. ' ' → logprob: -13.004027366638184
    8. '    ' → logprob: -13.254027366638184
    9. '   ' → logprob: -14.879027366638184
    10. '   ' → logprob: -15.004027366638184

Token 124: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3518534004688263
    2. '[input' → logprob: -1.476853370666504
    3. 'input' → logprob: -3.226853370666504
    4. '[list' → logprob: -3.726853370666504
    5. ' list' → logprob: -5.976853370666504
    6. '[str' → logprob: -6.601853370666504
    7. ' input' → logprob: -8.601853370666504
    8. '[' → logprob: -8.851853370666504
    9. 'sys' → logprob: -9.476853370666504
    10. 'str' → logprob: -9.601853370666504

Token 125: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000958031858317554
    2. '(map' → logprob: -7.12595796585083
    3. 'input' → logprob: -9.375958442687988
    4. '(str' → logprob: -10.000958442687988
    5. '(' → logprob: -11.000958442687988
    6. '(S' → logprob: -12.750958442687988
    7. '(s' → logprob: -14.000958442687988
    8. 'map' → logprob: -14.125958442687988
    9. ',input' → logprob: -14.375958442687988
    10. '<input' → logprob: -15.000958442687988

Token 126: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008397786878049374
    2. '().' → logprob: -5.258397579193115
    3. '()' → logprob: -5.758397579193115
    4. '();)' → logprob: -14.133398056030273
    5. ' ())' → logprob: -14.258398056030273
    6. ')' → logprob: -15.008398056030273
    7. '()))' → logprob: -15.133398056030273
    8. '()]' → logprob: -15.758398056030273
    9. '()),' → logprob: -16.133398056030273
    10. '(' → logprob: -16.258398056030273

Token 127: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5439431667327881
    2. 'from' → logprob: -2.043943166732788
    3. 'N' → logprob: -2.668943166732788
    4. 'D' → logprob: -2.668943166732788
    5. '#' → logprob: -3.543943166732788
    6. 'n' → logprob: -3.793943166732788
    7. 'class' → logprob: -3.918943166732788
    8. 'T' → logprob: -4.668943405151367
    9. 'A' → logprob: -4.668943405151367
    10. 'print' → logprob: -5.043943405151367

Token 128: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11557704210281372
    2. ' solve' → logprob: -2.490576982498169
    3. ' dfs' → logprob: -4.740577220916748
    4. 'main' → logprob: -4.740577220916748
    5. 'solve' → logprob: -5.615577220916748
    6. ' factorial' → logprob: -7.115577220916748
    7. ' gcd' → logprob: -7.865577220916748
    8. ' factor' → logprob: -7.990577220916748
    9. ' pow' → logprob: -7.990577220916748
    10. ' ' → logprob: -8.11557674407959

Token 129: 'list' (ID: 2641)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02105036936700344
    2. '()' → logprob: -3.896050453186035
    3. '('' → logprob: -8.771050453186035
    4. '("")' → logprob: -9.021050453186035
    5. '("("' → logprob: -10.521050453186035
    6. '("""' → logprob: -10.646050453186035
    7. '(end' → logprob: -10.896050453186035
    8. '("' → logprob: -11.146050453186035
    9. 'end' → logprob: -11.146050453186035
    10. 's' → logprob: -11.146050453186035

Token 130: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.07476244866847992
    2. '(' → logprob: -2.8247623443603516
    3. '(l' → logprob: -5.074762344360352
    4. '(list' → logprob: -5.699762344360352
    5. '(a' → logprob: -7.199762344360352
    6. '(ls' → logprob: -7.949762344360352
    7. '(arr' → logprob: -8.074762344360352
    8. '(L' → logprob: -8.074762344360352
    9. '(ll' → logprob: -8.199762344360352
    10. '(*' → logprob: -8.574762344360352

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14461649954319
    2. '):' → logprob: -2.0196166038513184
    3. ')' → logprob: -6.894616603851318
    4. '):
' → logprob: -7.894616603851318
    5. '(lst' → logprob: -8.39461612701416
    6. '(' → logprob: -9.64461612701416
    7. ' ,' → logprob: -9.64461612701416
    8. ',l' → logprob: -9.76961612701416
    9. ',list' → logprob: -10.14461612701416
    10. ',List' → logprob: -11.01961612701416

Token 132: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.09036049991846085
    2. ' sep' → logprob: -2.465360403060913
    3. 'end' → logprob: -7.215360641479492
    4. 'separator' → logprob: -8.215360641479492
    5. ' end' → logprob: -8.715360641479492
    6. 'delimiter' → logprob: -9.465360641479492
    7. 'se' → logprob: -10.340360641479492
    8. 'del' → logprob: -10.465360641479492
    9. ' separator' → logprob: -10.590360641479492
    10. 'sp' → logprob: -10.840360641479492

Token 133: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.6319803595542908
    2. '=',' → logprob: -0.8819803595542908
    3. '=",' → logprob: -3.7569804191589355
    4. '=' → logprob: -4.0069804191589355
    5. '="' → logprob: -4.3819804191589355
    6. '=None' → logprob: -7.8819804191589355
    7. '='\' → logprob: -10.506979942321777
    8. '=

' → logprob: -11.506979942321777
    9. '):' → logprob: -11.631979942321777
    10. '=
' → logprob: -12.131979942321777

Token 134: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01832389272749424
    2. ' '' → logprob: -4.26832389831543
    3. '"' → logprob: -6.39332389831543
    4. ' ')' → logprob: -6.89332389831543
    5. '')' → logprob: -7.26832389831543
    6. '',' → logprob: -8.14332389831543
    7. ''\' → logprob: -8.14332389831543
    8. '\n' → logprob: -10.14332389831543
    9. ' ' → logprob: -10.14332389831543
    10. ',' → logprob: -10.51832389831543

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011509887874126434
    2. '):
' → logprob: -5.136509895324707
    3. ')' → logprob: -5.261509895324707
    4. ',' → logprob: -8.636509895324707
    5. 'print' → logprob: -10.261509895324707
    6. '):

' → logprob: -10.261509895324707
    7. ''):' → logprob: -10.386509895324707
    8. '='' → logprob: -10.511509895324707
    9. '):
' → logprob: -10.761509895324707
    10. '=' → logprob: -10.886509895324707

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4819575846195221
    2. 'print' → logprob: -0.9819575548171997
    3. ' print' → logprob: -4.85695743560791
    4. 'for' → logprob: -10.10695743560791
    5. ' for' → logprob: -10.98195743560791
    6. '	print' → logprob: -11.60695743560791
    7. ' ' → logprob: -12.60695743560791
    8. '    
' → logprob: -13.23195743560791
    9. '  ' → logprob: -13.60695743560791
    10. '    ' → logprob: -14.23195743560791

Token 137: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.412610233994201e-05
    2. 'for' (adapté à ' for') → logprob: -9.875094413757324
    3. 'if' → logprob: -10.625094413757324
    4. ' print' → logprob: -11.500094413757324
    5. '   ' → logprob: -11.750094413757324
    6. '    
' → logprob: -16.500093460083008
    7. 'return' → logprob: -17.250093460083008
    8. ' ' → logprob: -17.500093460083008
    9. ' for' → logprob: -17.500093460083008
    10. ' if' → logprob: -18.500093460083008

Token 138: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4082016348838806
    2. ' i' → logprob: -1.4082016944885254
    3. 'x' → logprob: -3.2832016944885254
    4. 'item' → logprob: -3.5332016944885254
    5. ' item' → logprob: -4.533201694488525
    6. ' x' → logprob: -4.908201694488525
    7. 'elem' → logprob: -6.408201694488525
    8. 'e' → logprob: -6.658201694488525
    9. ' elem' → logprob: -7.408201694488525
    10. 'v' → logprob: -7.408201694488525

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012650556862354279
    2. 'in' → logprob: -5.387650489807129
    3. ' in' → logprob: -5.512650489807129
    4. ',item' → logprob: -5.887650489807129
    5. ',l' → logprob: -7.512650489807129
    6. ',in' → logprob: -7.762650489807129
    7. ' ,' → logprob: -9.637650489807129
    8. ',i' → logprob: -10.012650489807129
    9. ',val' → logprob: -10.637650489807129
    10. ',v' → logprob: -10.762650489807129

Token 140: ' v' (ID: 323)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8437889814376831
    2. 'v' → logprob: -1.218788981437683
    3. 'x' → logprob: -2.0937891006469727
    4. 'item' → logprob: -2.7187891006469727
    5. ' val' → logprob: -3.7187891006469727
    6. 'elem' → logprob: -4.093789100646973
    7. 'e' → logprob: -4.343789100646973
    8. 'value' → logprob: -4.468789100646973
    9. 'element' → logprob: -5.218789100646973
    10. ' v' → logprob: -5.343789100646973

Token 141: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5233619213104248
    2. 'in' → logprob: -0.8983619213104248
    3. ' ' → logprob: -9.398362159729004
    4. 'alue' → logprob: -10.023362159729004
    5. ',' → logprob: -11.023362159729004
    6. 'al' → logprob: -11.273362159729004
    7. 'ine' → logprob: -11.398362159729004
    8. 'ariable' → logprob: -11.648362159729004
    9. 'e' → logprob: -12.023362159729004
    10. 'i' → logprob: -12.148362159729004

Token 142: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00861468818038702
    2. ' enumerate' → logprob: -4.758614540100098
    3. 'enum' → logprob: -16.758615493774414
    4. 'en' → logprob: -18.008615493774414
    5. '```' → logprob: -19.258615493774414
    6. '.enumer' → logprob: -19.633615493774414
    7. 'Enumer' → logprob: -19.633615493774414
    8. 'list' → logprob: -19.633615493774414
    9. '
' → logprob: -20.508615493774414
    10. '(en' → logprob: -20.883615493774414

Token 143: '(lst' (ID: 95688)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.5760710835456848
    2. '(lst' → logprob: -0.8260710835456848
    3. ' lst' → logprob: -9.076070785522461
    4. '(' → logprob: -11.326070785522461
    5. 'list' → logprob: -12.826070785522461
    6. '_lst' → logprob: -13.326070785522461
    7. 'enumer' → logprob: -15.201070785522461
    8. 'Lst' → logprob: -15.826070785522461
    9. '.lst' → logprob: -15.826070785522461
    10. '(list' → logprob: -16.07607078552246

Token 144: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013283871114253998
    2. '):
' → logprob: -4.388283729553223
    3. ':' → logprob: -7.638283729553223
    4. ',' → logprob: -8.763283729553223
    5. ' ):' → logprob: -9.263283729553223
    6. ')' → logprob: -10.888283729553223
    7. '):
' → logprob: -11.763283729553223
    8. 'print' → logprob: -11.763283729553223
    9. '():' → logprob: -13.013283729553223
    10. ' ):
' → logprob: -13.888283729553223

Token 145: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9931303262710571
    2. '       ' → logprob: -1.3681303262710571
    3. 'if' → logprob: -1.8681303262710571
    4. ' if' → logprob: -1.8681303262710571
    5. ' print' → logprob: -2.8681302070617676
    6. '   ' → logprob: -4.993130207061768
    7. '    ' → logprob: -6.118130207061768
    8. '        ' → logprob: -9.118130683898926
    9. ':' → logprob: -9.993130683898926
    10. ' sep' → logprob: -10.118130683898926

Token 146: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20580504834651947
    2. 'if' (adapté à ' if') → logprob: -1.7058050632476807
    3. 'end' → logprob: -6.080804824829102
    4. ' if' → logprob: -6.955804824829102
    5. ' print' → logprob: -7.330804824829102
    6. '       ' → logprob: -8.205804824829102
    7. '   ' → logprob: -8.580804824829102
    8. ' end' → logprob: -10.705804824829102
    9. '    ' → logprob: -13.330804824829102
    10. '        ' → logprob: -13.830804824829102

Token 147: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.04337058588862419
    2. 'idx' → logprob: -3.168370485305786
    3. '(idx' → logprob: -8.293370246887207
    4. '	idx' → logprob: -9.293370246887207
    5. ' ' → logprob: -12.168370246887207
    6. ' not' → logprob: -12.168370246887207
    7. '   ' → logprob: -12.293370246887207
    8. '  ' → logprob: -12.668370246887207
    9. 'v' → logprob: -13.168370246887207
    10. 'not' → logprob: -13.293370246887207

Token 148: ':' (ID: 25)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7378025054931641
    2. '!=' → logprob: -0.8628025054931641
    3. '>' → logprob: -2.987802505493164
    4. ' !=' → logprob: -3.987802505493164
    5. ' ==' → logprob: -4.487802505493164
    6. '<len' → logprob: -4.737802505493164
    7. '<' → logprob: -4.862802505493164
    8. ' >' → logprob: -6.862802505493164
    9. ' <' → logprob: -6.987802505493164
    10. ':' → logprob: -7.737802505493164

Token 149: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0316450297832489
    2. ' print' → logprob: -3.5316450595855713
    3. '           ' → logprob: -6.281644821166992
    4. '       ' → logprob: -11.031644821166992
    5. '               ' → logprob: -13.031644821166992
    6. '   ' → logprob: -13.281644821166992
    7. '.print' → logprob: -14.656644821166992
    8. '(print' → logprob: -14.906644821166992
    9. 'sys' → logprob: -15.031644821166992
    10. '	print' → logprob: -15.406644821166992

Token 150: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -6.0629870858974755e-05
    2. '(' → logprob: -9.87506103515625
    3. '(end' → logprob: -12.50006103515625
    4. '('' → logprob: -12.75006103515625
    5. 'sep' → logprob: -13.50006103515625
    6. '(f' → logprob: -14.37506103515625
    7. 'se' → logprob: -15.50006103515625
    8. '(separator' → logprob: -16.12506103515625
    9. '(
' → logprob: -16.37506103515625
    10. '()' → logprob: -16.62506103515625

Token 151: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.60414821645827e-06
    2. ' p' → logprob: -12.500004768371582
    3. 'parator' → logprob: -15.375004768371582
    4. '
' → logprob: -16.250003814697266
    5. '```' → logprob: -16.250003814697266
    6. 'pr' → logprob: -16.750003814697266
    7. 'perator' → logprob: -17.125003814697266
    8. 'PARATOR' → logprob: -17.500003814697266
    9. 'п' → logprob: -17.750003814697266
    10. ''p' → logprob: -17.750003814697266

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04046653211116791
    2. ',end' → logprob: -3.290466547012329
    3. ',v' → logprob: -6.29046630859375
    4. 'end' → logprob: -7.54046630859375
    5. ' ,' → logprob: -10.29046630859375
    6. ' end' → logprob: -14.04046630859375
    7. '+' → logprob: -14.66546630859375
    8. 'v' → logprob: -14.79046630859375
    9. ',n' → logprob: -15.54046630859375
    10. ')' → logprob: -15.54046630859375

Token 153: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00021366903092712164
    2. ' end' → logprob: -8.500213623046875
    3. 'v' → logprob: -11.500213623046875
    4. ',end' → logprob: -17.125213623046875
    5. 'e' → logprob: -17.875213623046875
    6. '(end' → logprob: -18.625213623046875
    7. 'End' → logprob: -19.125213623046875
    8. ',' → logprob: -19.625213623046875
    9. '	end' → logprob: -19.625213623046875
    10. ''end' → logprob: -20.125213623046875

Token 154: '='')
' (ID: 135148)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.0004083891399204731
    2. '='')
' → logprob: -8.250408172607422
    3. ''' → logprob: -9.500408172607422
    4. '=''' → logprob: -10.250408172607422
    5. '=' → logprob: -10.750408172607422
    6. '="' → logprob: -11.625408172607422
    7. ')' → logprob: -13.000408172607422
    8. '''' → logprob: -13.125408172607422
    9. ' '')' → logprob: -14.250408172607422
    10. '('' → logprob: -14.250408172607422

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4778822362422943
    2. 'print' → logprob: -0.9778822660446167
    3. ' print' → logprob: -6.102882385253906
    4. '
' → logprob: -7.102882385253906
    5. 'v' → logprob: -8.227882385253906
    6. '        
' → logprob: -8.977882385253906
    7. '   ' → logprob: -9.727882385253906
    8. '<|end|>' → logprob: -9.727882385253906
    9. ' v' → logprob: -9.852882385253906
    10. '```' → logprob: -10.102882385253906

Token 156: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009246804984286427
    2. ' print' → logprob: -7.000924587249756
    3. '       ' → logprob: -11.250925064086914
    4. '   ' → logprob: -16.375925064086914
    5. '
' → logprob: -16.500925064086914
    6. '	print' → logprob: -17.375925064086914
    7. '```' → logprob: -17.625925064086914
    8. '.print' → logprob: -18.375925064086914
    9. '        
' → logprob: -18.625925064086914
    10. '#print' → logprob: -19.000925064086914

Token 157: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0005605389014817774
    2. '(' → logprob: -7.500560760498047
    3. '(f' → logprob: -12.000560760498047
    4. '(
' → logprob: -14.750560760498047
    5. '(str' → logprob: -15.125560760498047
    6. 'v' → logprob: -15.500560760498047
    7. '()' → logprob: -15.625560760498047
    8. '('' → logprob: -15.875560760498047
    9. '(value' → logprob: -16.125560760498047
    10. ' (' → logprob: -16.625560760498047

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4748719334602356
    2. ',end' → logprob: -1.2248718738555908
    3. ')' → logprob: -2.474871873855591
    4. ' ,' → logprob: -10.099871635437012
    5. 'end' → logprob: -10.974871635437012
    6. ')
' → logprob: -13.599871635437012
    7. '),' → logprob: -13.974871635437012
    8. ' end' → logprob: -14.099871635437012
    9. '   ' → logprob: -14.099871635437012
    10. '<|end|>' → logprob: -14.099871635437012

Token 159: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.003215022850781679
    2. ' end' → logprob: -5.7532148361206055
    3. ')' → logprob: -10.378214836120605
    4. 'sep' → logprob: -12.628214836120605
    5. ''end' → logprob: -13.878214836120605
    6. ',end' → logprob: -14.128214836120605
    7. '   ' → logprob: -15.253214836120605
    8. '(end' → logprob: -15.253214836120605
    9. '''' → logprob: -15.628214836120605
    10. ' ' → logprob: -15.628214836120605

Token 160: '='')
' (ID: 135148)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.003301174147054553
    2. '='')
' → logprob: -5.75330114364624
    3. '=''' → logprob: -9.628301620483398
    4. '=' → logprob: -10.253301620483398
    5. ''' → logprob: -11.253301620483398
    6. '='\' → logprob: -12.003301620483398
    7. ' '')' → logprob: -13.628301620483398
    8. '''' → logprob: -14.128301620483398
    9. '=''
' → logprob: -14.378301620483398
    10. ')' → logprob: -15.003301620483398

Token 161: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6480288505554199
    2. 'print' → logprob: -1.77302885055542
    3. '<|end|>' → logprob: -1.77302885055542
    4. '\n' → logprob: -2.02302885055542
    5. ' print' → logprob: -6.39802885055542
    6. ' 
' → logprob: -6.52302885055542
    7. ')' → logprob: -7.27302885055542
    8. '  
' → logprob: -7.64802885055542
    9. '<|end|>' → logprob: -9.023029327392578
    10. ' ' → logprob: -9.273029327392578

Token 162: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011610999703407288
    2. '\n' → logprob: -4.636610984802246
    3. ' print' → logprob: -6.886610984802246
    4. '
' → logprob: -7.136610984802246
    5. '   ' → logprob: -11.136610984802246
    6. ' 
' → logprob: -11.886610984802246
    7. '    
' → logprob: -12.261610984802246
    8. ')' → logprob: -12.886610984802246
    9. '  
' → logprob: -13.386610984802246
    10. 'n' → logprob: -13.636610984802246

Token 163: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016468366084154695
    2. '(' → logprob: -8.750164985656738
    3. '()
' → logprob: -12.375164985656738
    4. '("")' → logprob: -14.000164985656738
    5. '('' → logprob: -15.000164985656738
    6. '()\' → logprob: -15.500164985656738
    7. '()

' → logprob: -15.625164985656738
    8. '())' → logprob: -16.250164031982422
    9. ' ()' → logprob: -16.500164031982422
    10. '();' → logprob: -16.750164031982422

Token 164: 'INF' (ID: 64358)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022673010826111
    2. '=' → logprob: -2.350226640701294
    3. ')' → logprob: -11.475226402282715
    4. '=int' → logprob: -12.600226402282715
    5. '_' → logprob: -12.975226402282715
    6. ' ' → logprob: -13.850226402282715
    7. ',' → logprob: -14.350226402282715
    8. '=float' → logprob: -14.850226402282715
    9. ' =
' → logprob: -14.975226402282715
    10. ' )' → logprob: -15.100226402282715

Token 166: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.14441263675689697
    2. 'float' → logprob: -2.5194125175476074
    3. ' ' → logprob: -3.0194125175476074
    4. ' float' → logprob: -5.519412517547607
    5. '1' → logprob: -7.144412517547607
    6. 'int' → logprob: -8.144412994384766
    7. '100' → logprob: -10.519412994384766
    8. ' int' → logprob: -12.519412994384766
    9. '9' → logprob: -13.019412994384766
    10. '2' → logprob: -13.019412994384766

Token 167: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.05856352671980858
    2. ''' → logprob: -3.058563470840454
    3. '('' → logprob: -6.058563709259033
    4. '"' → logprob: -7.433563709259033
    5. ''information' → logprob: -7.433563709259033
    6. ''a' → logprob: -7.683563709259033
    7. ''import' → logprob: -7.683563709259033
    8. ''action' → logprob: -7.808563709259033
    9. ''as' → logprob: -7.808563709259033
    10. ''ins' → logprob: -8.058563232421875

Token 168: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.29058605432510376
    2. ''' → logprob: -1.540585994720459
    3. 'inf' → logprob: -3.665585994720459
    4. '"' → logprob: -5.415585994720459
    5. ''int' → logprob: -7.040585994720459
    6. ''information' → logprob: -7.040585994720459
    7. ''import' → logprob: -7.040585994720459
    8. ''ins' → logprob: -7.665585994720459
    9. ''inc' → logprob: -7.665585994720459
    10. ''end' → logprob: -7.790585994720459

Token 169: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.000000953674316
    4. '')' → logprob: -15.375000953674316
    5. '))' → logprob: -17.875001907348633
    6. '),' → logprob: -18.000001907348633
    7. ')

' → logprob: -18.125001907348633
    8. '()' → logprob: -18.125001907348633
    9. ');' → logprob: -19.250001907348633
    10. '())' → logprob: -19.500001907348633

Token 170: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00831290241330862
    2. 'class' → logprob: -5.383312702178955
    3. 'n' → logprob: -6.008312702178955
    4. 'from' → logprob: -7.508312702178955
    5. 'N' → logprob: -8.133313179016113
    6. '#' → logprob: -8.133313179016113
    7. 'import' → logprob: -9.758313179016113
    8. 'T' → logprob: -12.383313179016113
    9. 'D' → logprob: -12.758313179016113
    10. '(n' → logprob: -12.883313179016113

Token 171: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6985180974006653
    2. ' solve' → logprob: -1.5735180377960205
    3. ' dfs' → logprob: -1.8235180377960205
    4. 'solve' → logprob: -2.9485180377960205
    5. 'main' → logprob: -3.0735180377960205
    6. 'dfs' → logprob: -3.5735180377960205
    7. ' factorial' → logprob: -6.6985182762146
    8. ' bfs' → logprob: -7.0735182762146
    9. ' pow' → logprob: -7.6985182762146
    10. ' gcd' → logprob: -7.6985182762146

Token 172: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00015908108616713434
    2. ' ():' → logprob: -8.87515926361084
    3. '()' → logprob: -11.37515926361084
    4. '(' → logprob: -12.25015926361084
    5. '():
' → logprob: -13.00015926361084
    6. '()(' → logprob: -15.00015926361084
    7. '(x' → logprob: -16.000158309936523
    8. '(a' → logprob: -16.250158309936523
    9. '(n' → logprob: -17.000158309936523
    10. ' ()' → logprob: -17.500158309936523

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48347923159599304
    2. ' n' → logprob: -1.2334792613983154
    3. '    ' → logprob: -2.9834792613983154
    4. 'n' → logprob: -3.4834792613983154
    5. ' pass' → logprob: -5.108479022979736
    6. ' ' → logprob: -6.483479022979736
    7. '(n' → logprob: -7.858479022979736
    8. '	n' → logprob: -7.858479022979736
    9. ' input' → logprob: -8.233479499816895
    10. '<|end|>' → logprob: -8.358479499816895

Token 174: ' MOD' (ID: 32868)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37014198303222656
    2. 'N' → logprob: -1.2451419830322266
    3. ' n' → logprob: -4.120141983032227
    4. ' N' → logprob: -5.870141983032227
    5. 'pass' → logprob: -7.495141983032227
    6. ' pass' → logprob: -7.745141983032227
    7. 'Q' → logprob: -8.370141983032227
    8. '   ' → logprob: -8.495141983032227
    9. 'a' → logprob: -8.745141983032227
    10. ' ' → logprob: -9.370141983032227

Token 175: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759550929069519
    2. '=' → logprob: -0.8259550929069519
    3. ',' → logprob: -12.075955390930176
    4. ')' → logprob: -12.075955390930176
    5. '_' → logprob: -13.450955390930176
    6. ' =)' → logprob: -13.825955390930176
    7. '=int' → logprob: -14.575955390930176
    8. ':' → logprob: -14.950955390930176
    9. ' =
' → logprob: -15.075955390930176
    10. '=

' → logprob: -15.700955390930176

Token 176: ' S' (ID: 336)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04872259497642517
    2. ' ' → logprob: -3.298722505569458
    3. '=' → logprob: -5.923722743988037
    4. ' =' → logprob: -6.173722743988037
    5. 'N' → logprob: -6.548722743988037
    6. 'INF' → logprob: -6.923722743988037
    7. '100' → logprob: -7.173722743988037
    8. 'MOD' → logprob: -7.298722743988037
    9. '998' → logprob: -8.298722267150879
    10. 'n' → logprob: -8.423722267150879

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5569900274276733
    2. '=' → logprob: -1.0569900274276733
    3. ',' → logprob: -2.681990146636963
    4. 'IZE' → logprob: -4.806990146636963
    5. 'MOD' → logprob: -7.056990146636963
    6. 'UM' → logprob: -8.056989669799805
    7. 'MAX' → logprob: -8.681989669799805
    8. 'EL' → logprob: -8.931989669799805
    9. 'A' → logprob: -9.181989669799805
    10. 'Z' → logprob: -9.181989669799805

Token 178: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06694482266902924
    2. '998' → logprob: -2.8169448375701904
    3. ' ' → logprob: -6.566944599151611
    4. '1' → logprob: -6.566944599151611
    5. '100' → logprob: -6.691944599151611
    6. 'map' → logprob: -7.441944599151611
    7. 'int' → logprob: -8.81694507598877
    8. 'MOD' → logprob: -10.31694507598877
    9. '999' → logprob: -10.44194507598877
    10. '202' → logprob: -11.19194507598877

Token 179: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10122491419315338
    2. '998' → logprob: -2.601224899291992
    3. '100' → logprob: -4.976224899291992
    4. '1' → logprob: -4.976224899291992
    5. 'map' → logprob: -5.601224899291992
    6. 'int' → logprob: -5.851224899291992
    7. 'MOD' → logprob: -7.726224899291992
    8. 'input' → logprob: -7.851224899291992
    9. '202' → logprob: -8.851224899291992
    10. '123' → logprob: -9.351224899291992

Token 180: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.018614936619997025
    2. '9' → logprob: -4.018614768981934
    3. '0' → logprob: -8.518614768981934
    4. '09' → logprob: -8.643614768981934
    5. '00' → logprob: -10.268614768981934
    6. '000' → logprob: -10.643614768981934
    7. '_' → logprob: -11.393614768981934
    8. ' **' → logprob: -11.518614768981934
    9. '*' → logprob: -12.643614768981934
    10. '```' → logprob: -13.518614768981934

Token 181: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.6240566083070007e-06
    2. '+' → logprob: -14.375001907348633
    3. '8' → logprob: -15.500001907348633
    4. '
' → logprob: -15.625001907348633
    5. '18' → logprob: -15.625001907348633
    6. '09' → logprob: -15.750001907348633
    7. '

' → logprob: -15.875001907348633
    8. '_' → logprob: -16.625001907348633
    9. '10' → logprob: -16.750001907348633
    10. '15' → logprob: -17.000001907348633

Token 182: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009550517424941063
    2. ' +' → logprob: -7.000955104827881
    3. '7' → logprob: -10.125954627990723
    4. '+
' → logprob: -13.000954627990723
    5. '＋' → logprob: -14.250954627990723
    6. 'plus' → logprob: -15.125954627990723
    7. '```' → logprob: -16.12595558166504
    8. ' plus' → logprob: -16.50095558166504
    9. '+

' → logprob: -16.87595558166504
    10. '+=' → logprob: -17.87595558166504

Token 183: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.5
    3. '   ' → logprob: -17.625
    4. '

' → logprob: -18.5
    5. ' ' → logprob: -18.625
    6. '７' → logprob: -18.875
    7. '  ' → logprob: -19.375
    8. '```' → logprob: -19.5
    9. '
' → logprob: -19.75
    10. '9' → logprob: -20.375

Token 184: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '７' → logprob: -17.625
    3. '

' → logprob: -18.0
    4. '   ' → logprob: -18.375
    5. '
' → logprob: -18.375
    6. ' ' → logprob: -18.75
    7. '+' → logprob: -18.875
    8. '07' → logprob: -19.5
    9. '```' → logprob: -19.875
    10. '9' → logprob: -19.875

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001995489466935396
    2. ' ,' → logprob: -6.37699556350708
    3. ',n' → logprob: -9.501995086669922
    4. ',s' → logprob: -9.626995086669922
    5. '=' → logprob: -10.626995086669922
    6. ',input' → logprob: -10.751995086669922
    7. ',S' → logprob: -11.126995086669922
    8. ' =' → logprob: -11.251995086669922
    9. ' ' → logprob: -11.751995086669922
    10. '   ' → logprob: -11.876995086669922

Token 186: ' S' (ID: 336)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.022260455414652824
    2. 'int' → logprob: -3.8972604274749756
    3. ' input' → logprob: -6.897260665893555
    4. 'str' → logprob: -7.897260665893555
    5. 'S' → logprob: -9.397260665893555
    6. '10' → logprob: -9.897260665893555
    7. 'list' → logprob: -10.022260665893555
    8. '1' → logprob: -10.522260665893555
    9. '0' → logprob: -10.647260665893555
    10. 's' → logprob: -10.897260665893555

Token 187: 'LI' (ID: 14313)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6965844631195068
    2. '()' → logprob: -2.196584463119507
    3. '[::-' → logprob: -2.446584463119507
    4. '[' → logprob: -2.571584463119507
    5. '<|end|>' → logprob: -2.821584463119507
    6. '=input' → logprob: -3.321584463119507
    7. '+' → logprob: -3.821584463119507
    8. '[input' → logprob: -4.071584701538086
    9. '.lower' → logprob: -4.446584701538086
    10. ' =' → logprob: -4.446584701538086

Token 188: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.2617008400848135e-05
    2. '()
' → logprob: -10.500032424926758
    3. '())' → logprob: -13.000032424926758
    4. ' ()' → logprob: -13.875032424926758
    5. ')' → logprob: -14.500032424926758
    6. '()"' → logprob: -15.125032424926758
    7. '()`' → logprob: -15.250032424926758
    8. '()

' → logprob: -15.500032424926758
    9. '();' → logprob: -15.750032424926758
    10. '()]' → logprob: -16.000032424926758

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34999826550483704
    2. 'n' → logprob: -1.3499982357025146
    3. '
' → logprob: -4.849998474121094
    4. ')' → logprob: -4.849998474121094
    5. 'N' → logprob: -5.474998474121094
    6. '    
' → logprob: -5.599998474121094
    7. 'dp' → logprob: -6.099998474121094
    8. '()' → logprob: -6.849998474121094
    9. ' n' → logprob: -6.849998474121094
    10. '<|end|>' → logprob: -6.974998474121094

Token 190: ' length' (ID: 5517)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6723269820213318
    2. 'n' → logprob: -1.2973270416259766
    3. 'dp' → logprob: -1.6723270416259766
    4. '   ' → logprob: -4.297327041625977
    5. 'from' → logprob: -5.172327041625977
    6. 'D' → logprob: -6.297327041625977
    7. 'DP' → logprob: -6.672327041625977
    8. 'd' → logprob: -7.422327041625977
    9. ' n' → logprob: -7.547327041625977
    10. ' dp' → logprob: -7.672327041625977

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08923780918121338
    2. '=' → logprob: -2.464237689971924
    3. '=len' → logprob: -8.214238166809082
    4. 's' → logprob: -11.964238166809082
    5. '   ' → logprob: -12.089238166809082
    6. ' ' → logprob: -12.589238166809082
    7. ',' → logprob: -12.714238166809082
    8. '_' → logprob: -12.964238166809082
    9. 'len' → logprob: -13.339238166809082
    10. '=S' → logprob: -14.214238166809082

Token 192: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12911869585514069
    2. ' len' → logprob: -2.1291186809539795
    3. '(len' → logprob: -6.129118919372559
    4. '   ' → logprob: -11.754118919372559
    5. '[len' → logprob: -14.129118919372559
    6. '=len' → logprob: -15.004118919372559
    7. '	len' → logprob: -15.504118919372559
    8. '
' → logprob: -15.504118919372559
    9. ' ' → logprob: -16.004117965698242
    10. '(' → logprob: -16.129117965698242

Token 193: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.125005722045898
    3. '(s' → logprob: -17.2500057220459
    4. 'S' → logprob: -19.3750057220459
    5. '(
' → logprob: -20.3750057220459
    6. ' (' → logprob: -21.6250057220459
    7. 's' → logprob: -21.7500057220459
    8. '(Q' → logprob: -23.0000057220459
    9. '((' → logprob: -23.1250057220459
    10. '(SE' → logprob: -23.1250057220459

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038837024476379156
    2. ')
' → logprob: -8.000388145446777
    3. ' )' → logprob: -10.875388145446777
    4. '   ' → logprob: -11.125388145446777
    5. '())' → logprob: -11.125388145446777
    6. '()' → logprob: -13.125388145446777
    7. '))' → logprob: -14.250388145446777
    8. 'def' → logprob: -14.625388145446777
    9. ' ' → logprob: -15.000388145446777
    10. ')

' → logprob: -15.750388145446777

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10636051744222641
    2. 'dp' → logprob: -2.35636043548584
    3. ' dp' → logprob: -5.73136043548584
    4. 'DP' → logprob: -6.98136043548584
    5. '    
' → logprob: -7.35636043548584
    6. ')' → logprob: -8.60636043548584
    7. '
' → logprob: -8.60636043548584
    8. ' DP' → logprob: -9.10636043548584
    9. 'def' → logprob: -9.23136043548584
    10. 'count' → logprob: -9.48136043548584

Token 196: ' arr' (ID: 1724)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0013709533959627151
    2. 'DP' → logprob: -7.876370906829834
    3. 'from' → logprob: -8.251371383666992
    4. 'cnt' → logprob: -9.126371383666992
    5. 'prev' → logprob: -9.126371383666992
    6. 'ans' → logprob: -9.376371383666992
    7. 'count' → logprob: -9.751371383666992
    8. ' dp' → logprob: -9.876371383666992
    9. 'res' → logprob: -10.126371383666992
    10. 'counts' → logprob: -10.126371383666992

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048739172518253326
    2. '=' → logprob: -3.048739194869995
    3. ',' → logprob: -9.798739433288574
    4. 'ay' → logprob: -11.173739433288574
    5. 'y' → logprob: -11.548739433288574
    6. '=[' → logprob: -11.548739433288574
    7. '[' → logprob: -11.673739433288574
    8. '_' → logprob: -11.798739433288574
    9. 's' → logprob: -11.923739433288574
    10. 'ays' → logprob: -11.923739433288574

Token 198: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004109746310859919
    2. '[[' → logprob: -5.754109859466553
    3. ' [' → logprob: -7.254109859466553
    4. '[length' → logprob: -9.254109382629395
    5. '[-' → logprob: -9.504109382629395
    6. '[len' → logprob: -11.004109382629395
    7. '[S' → logprob: -11.129109382629395
    8. '[int' → logprob: -12.129109382629395
    9. ' [[' → logprob: -12.879109382629395
    10. '[list' → logprob: -13.754109382629395

Token 199: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2933924198150635
    2. '[' → logprob: -1.4183924198150635
    3. 'INF' → logprob: -5.418392181396484
    4. '[[' → logprob: -5.793392181396484
    5. '1' → logprob: -5.918392181396484
    6. ' [' → logprob: -7.668392181396484
    7. '-' → logprob: -8.293392181396484
    8. '[-' → logprob: -8.293392181396484
    9. '[int' → logprob: -8.293392181396484
    10. '{' → logprob: -8.918392181396484

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007487599737942219
    2. '[' → logprob: -5.382487773895264
    3. 'INF' → logprob: -6.507487773895264
    4. '[[' → logprob: -7.257487773895264
    5. 'False' → logprob: -8.757487297058105
    6. ' [' → logprob: -8.757487297058105
    7. 'MOD' → logprob: -9.257487297058105
    8. ' ' → logprob: -9.507487297058105
    9. '-' → logprob: -10.007487297058105
    10. '(' → logprob: -10.257487297058105

Token 201: ']*' (ID: 18579)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.745323121547699
    2. ']' → logprob: -0.870323121547699
    3. ']*' → logprob: -2.2453231811523438
    4. 'for' → logprob: -7.745323181152344
    5. ' for' → logprob: -8.245323181152344
    6. ' ]' → logprob: -12.120323181152344
    7. ']+' → logprob: -12.620323181152344
    8. ',' → logprob: -12.995323181152344
    9. '   ' → logprob: -14.245323181152344
    10. '][' → logprob: -14.370323181152344

Token 202: '13' (ID: 1311)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.2309155464172363
    2. '(length' → logprob: -1.2309155464172363
    3. '(' → logprob: -2.2309155464172363
    4. '27' → logprob: -3.1059155464172363
    5. '11' → logprob: -3.1059155464172363
    6. '3' → logprob: -3.2309155464172363
    7. '13' → logprob: -3.2309155464172363
    8. '2' → logprob: -3.4809155464172363
    9. '10' → logprob: -3.6059155464172363
    10. '4' → logprob: -3.7309155464172363

Token 203: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17977549135684967
    2. 'for' → logprob: -1.8047754764556885
    3. ']' → logprob: -11.17977523803711
    4. ' ' → logprob: -11.80477523803711
    5. '   ' → logprob: -12.67977523803711
    6. ')' → logprob: -13.05477523803711
    7. '	for' → logprob: -13.17977523803711
    8. '
' → logprob: -14.67977523803711
    9. '    ' → logprob: -14.92977523803711
    10. ' ]' → logprob: -14.92977523803711

Token 204: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5936050415039062
    2. '_' → logprob: -0.8436050415039062
    3. 'range' → logprob: -4.718605041503906
    4. ' _' → logprob: -5.093605041503906
    5. '_range' → logprob: -6.468605041503906
    6. ' in' → logprob: -7.093605041503906
    7. 'in' → logprob: -11.093605041503906
    8. ' xrange' → logprob: -11.343605041503906
    9. '(range' → logprob: -11.343605041503906
    10. '	range' → logprob: -12.218605041503906

Token 205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6160278916358948
    2. 'range' → logprob: -1.36602783203125
    3. 'in' → logprob: -1.61602783203125
    4. ' range' → logprob: -5.11602783203125
    5. ' ' → logprob: -9.36602783203125
    6. '  ' → logprob: -11.49102783203125
    7. '_' → logprob: -12.49102783203125
    8. '   ' → logprob: -12.61602783203125
    9. 'length' → logprob: -13.24102783203125
    10. ' _' → logprob: -13.99102783203125

Token 206: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889353483915329
    2. ' range' → logprob: -2.5788934230804443
    3. '(range' → logprob: -12.578893661499023
    4. '_' → logprob: -15.828893661499023
    5. 'in' → logprob: -16.453893661499023
    6. ' ' → logprob: -16.703893661499023
    7. '	range' → logprob: -16.953893661499023
    8. '   ' → logprob: -16.953893661499023
    9. ' in' → logprob: -17.328893661499023
    10. '[' → logprob: -17.828893661499023

Token 207: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024238035082817078
    2. '0' → logprob: -4.024238109588623
    3. ' range' → logprob: -5.274238109588623
    4. 'None' → logprob: -7.149238109588623
    5. '_' → logprob: -8.774237632751465
    6. '(range' → logprob: -13.524237632751465
    7. '[' → logprob: -13.774237632751465
    8. '_range' → logprob: -14.024237632751465
    9. '	range' → logprob: -14.024237632751465
    10. '
' → logprob: -14.149237632751465

Token 208: ']*(' (ID: 92627)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.5025121569633484
    2. 'range' → logprob: -1.3775122165679932
    3. ']' → logprob: -2.252512216567993
    4. '   ' → logprob: -4.252511978149414
    5. 'length' → logprob: -4.502511978149414
    6. 'in' → logprob: -5.502511978149414
    7. '[length' → logprob: -6.127511978149414
    8. ' range' → logprob: -6.752511978149414
    9. ']*(' → logprob: -7.377511978149414
    10. '
' → logprob: -7.502511978149414

Token 209: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0004598631348926574
    2. ' length' → logprob: -8.125459671020508
    3. '(length' → logprob: -8.750459671020508
    4. 'len' → logprob: -12.625459671020508
    5. ' ' → logprob: -14.125459671020508
    6. '   ' → logprob: -14.500459671020508
    7. '[length' → logprob: -15.000459671020508
    8. '	length' → logprob: -15.875459671020508
    9. 'leng' → logprob: -16.250459671020508
    10. '  ' → logprob: -16.375459671020508

Token 210: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003429481526836753
    2. '+' → logprob: -5.878429412841797
    3. ')' → logprob: -7.628429412841797
    4. ')]
' → logprob: -9.503429412841797
    5. ' )' → logprob: -10.503429412841797
    6. '-' → logprob: -11.003429412841797
    7. ']' → logprob: -11.378429412841797
    8. ')]

' → logprob: -13.128429412841797
    9. ')])' → logprob: -13.378429412841797
    10. ')][' → logprob: -14.128429412841797

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003175889723934233
    2. ' ' → logprob: -8.750317573547363
    3. '2' → logprob: -8.875317573547363
    4. '0' → logprob: -12.125317573547363
    5. '10' → logprob: -12.500317573547363
    6. '3' → logprob: -12.750317573547363
    7. '
' → logprob: -13.250317573547363
    8. '5' → logprob: -13.250317573547363
    9. '   ' → logprob: -13.500317573547363
    10. '  ' → logprob: -14.437817573547363

Token 212: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00024822709383443
    2. ')' → logprob: -8.375247955322266
    3. ')]
' → logprob: -11.250247955322266
    4. ']' → logprob: -13.375247955322266
    5. ')])' → logprob: -13.625247955322266
    6. ')]

' → logprob: -14.125247955322266
    7. '))' → logprob: -15.375247955322266
    8. '   ' → logprob: -15.375247955322266
    9. ' )' → logprob: -15.500247955322266
    10. ')]
' → logprob: -15.625247955322266

Token 213: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021601372864097357
    2. ')]' → logprob: -6.37716007232666
    3. ' ]' → logprob: -8.25216007232666
    4. ')' → logprob: -9.00216007232666
    5. '   ' → logprob: -10.00216007232666
    6. ']
' → logprob: -10.50216007232666
    7. '])' → logprob: -15.25216007232666
    8. '()]' → logprob: -15.37716007232666
    9. ' ' → logprob: -15.50216007232666
    10. ' )' → logprob: -16.252161026000977

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3879490792751312
    2. 'arr' → logprob: -1.1379491090774536
    3. 'dp' → logprob: -7.137948989868164
    4. 'for' → logprob: -9.387948989868164
    5. '	arr' → logprob: -9.512948989868164
    6. ' arr' → logprob: -9.887948989868164
    7. '    
' → logprob: -11.387948989868164
    8. '
' → logprob: -11.387948989868164
    9. '<|end|>' → logprob: -11.512948989868164
    10. 'DP' → logprob: -11.637948989868164

Token 215: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -3.4121114822482923e-06
    2. ' arr' → logprob: -13.125003814697266
    3. '_arr' → logprob: -15.000003814697266
    4. '	arr' → logprob: -15.250003814697266
    5. '
' → logprob: -15.375003814697266
    6. '   ' → logprob: -15.750003814697266
    7. '    
' → logprob: -16.625003814697266
    8. '[arr' → logprob: -16.750003814697266
    9. ')' → logprob: -17.000003814697266
    10. '0' → logprob: -17.500003814697266

Token 216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '][' → logprob: -13.62500286102295
    3. '0' → logprob: -14.62500286102295
    4. '```' → logprob: -14.87500286102295
    5. ')[' → logprob: -15.12500286102295
    6. ' [' → logprob: -15.25000286102295
    7. '=' → logprob: -16.250003814697266
    8. '[-' → logprob: -16.750003814697266
    9. '}[' → logprob: -17.125003814697266
    10. '[][' → logprob: -17.375003814697266

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.875021934509277
    3. '1' → logprob: -13.375021934509277
    4. '[' → logprob: -15.000021934509277
    5. 'length' → logprob: -15.437521934509277
    6. '000' → logprob: -16.00002098083496
    7. '00' → logprob: -16.12502098083496
    8. '(' → logprob: -16.93752098083496
    9. '
' → logprob: -16.93752098083496
    10. '   ' → logprob: -17.06252098083496

Token 218: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0014502331614494324
    2. '[' → logprob: -6.626450061798096
    3. ']' → logprob: -9.126450538635254
    4. ' ][' → logprob: -11.501450538635254
    5. '0' → logprob: -13.751450538635254
    6. ')[' → logprob: -14.251450538635254
    7. '
' → logprob: -14.626450538635254
    8. '   ' → logprob: -14.876450538635254
    9. '][-' → logprob: -15.126450538635254
    10. '"][' → logprob: -15.501450538635254

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. '1' → logprob: -10.250035285949707
    3. '(' → logprob: -16.625036239624023
    4. ' ' → logprob: -17.375036239624023
    5. '
' → logprob: -17.375036239624023
    6. '{' → logprob: -18.875036239624023
    7. '[' → logprob: -19.875036239624023
    8. '   ' → logprob: -20.250036239624023
    9. '7' → logprob: -20.625036239624023
    10. '

' → logprob: -20.625036239624023

Token 220: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.225939872208983e-05
    2. ']=' → logprob: -10.500032424926758
    3. ' ]' → logprob: -12.375032424926758
    4. ']+=' → logprob: -15.250032424926758
    5. ']
' → logprob: -16.375032424926758
    6. '=' → logprob: -17.625032424926758
    7. ')' → logprob: -18.250032424926758
    8. ']==' → logprob: -18.875032424926758
    9. '']' → logprob: -20.000032424926758
    10. '[' → logprob: -20.000032424926758

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061968132853507996
    2. ' =' → logprob: -2.8119680881500244
    3. ']=' → logprob: -15.936967849731445
    4. '1' → logprob: -16.561967849731445
    5. ']' → logprob: -16.561967849731445
    6. '=True' → logprob: -16.811967849731445
    7. '[' → logprob: -17.186967849731445
    8. '+=' → logprob: -18.061967849731445
    9. '＝' → logprob: -18.061967849731445
    10. ')=' → logprob: -18.686967849731445

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '１' → logprob: -18.625
    4. '   ' → logprob: -19.5
    5. '۱' → logprob: -20.0
    6. '  ' → logprob: -21.125
    7. '১' → logprob: -21.5
    8. '१' → logprob: -22.125
    9. '{' → logprob: -22.8125
    10. ' ' → logprob: -22.875

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '１' → logprob: -19.25
    4. '۱' → logprob: -20.875
    5. '0' → logprob: -21.25
    6. '   ' → logprob: -21.375
    7. '{' → logprob: -21.5
    8. '১' → logprob: -22.375
    9. '(' → logprob: -22.5
    10. '  ' → logprob: -23.0

Token 224: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009889484383165836
    2. '
' → logprob: -5.134889602661133
    3. '<|end|>' → logprob: -6.259889602661133
    4. '    
' → logprob: -6.634889602661133
    5. ' for' → logprob: -7.759889602661133
    6. 'for' → logprob: -9.134889602661133
    7. '<|end|>' → logprob: -10.009889602661133
    8. '	for' → logprob: -10.384889602661133
    9. ')' → logprob: -10.634889602661133
    10. '  
' → logprob: -11.259889602661133

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18406282365322113
    2. ' for' → logprob: -1.9340628385543823
    3. '<|end|>' → logprob: -4.184062957763672
    4. 'for' → logprob: -5.809062957763672
    5. '    
' → logprob: -6.684062957763672
    6. '	for' → logprob: -6.684062957763672
    7. '
' → logprob: -7.309062957763672
    8. ' ' → logprob: -7.434062957763672
    9. ' 
' → logprob: -7.684062957763672
    10. ',' → logprob: -8.434062957763672

Token 226: ' mul' (ID: 9975)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2595355212688446
    2. ' for' → logprob: -1.509535551071167
    3. '   ' → logprob: -4.884535312652588
    4. '	for' → logprob: -11.384535789489746
    5. '
' → logprob: -13.634535789489746
    6. '    
' → logprob: -13.759535789489746
    7. ' ' → logprob: -14.134535789489746
    8. ' 
' → logprob: -15.634535789489746
    9. 'from' → logprob: -15.759535789489746
    10. '    ' → logprob: -16.38453483581543

Token 227: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37741416692733765
    2. '=' → logprob: -1.3774142265319824
    3. 'iplier' → logprob: -3.1274142265319824
    4. 'tip' → logprob: -4.752414226531982
    5. 't' → logprob: -5.002414226531982
    6. 'plier' → logprob: -6.627414226531982
    7. '   ' → logprob: -7.252414226531982
    8. 'ip' → logprob: -7.627414226531982
    9. 'ti' → logprob: -9.127413749694824
    10. 'p' → logprob: -9.502413749694824

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. ' ' → logprob: -10.875020027160645
    3. '10' → logprob: -14.875020027160645
    4. 'pow' → logprob: -15.500020027160645
    5. '  ' → logprob: -15.875020027160645
    6. '   ' → logprob: -16.37502098083496
    7. '(' → logprob: -16.56252098083496
    8. '100' → logprob: -17.50002098083496
    9. '[' → logprob: -18.00002098083496
    10. '```' → logprob: -18.12502098083496

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13759244978427887
    2. '
' → logprob: -2.2625925540924072
    3. ' for' → logprob: -4.512592315673828
    4. '    
' → logprob: -4.762592315673828
    5. 'for' → logprob: -5.887592315673828
    6. '  
' → logprob: -6.887592315673828
    7. '   
' → logprob: -8.512592315673828
    8. ',' → logprob: -8.637592315673828
    9. ' 
' → logprob: -9.012592315673828
    10. '<|end|>' → logprob: -9.137592315673828

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10122816264629364
    2. '
' → logprob: -2.6012282371520996
    3. ' for' → logprob: -4.3512282371521
    4. 'for' → logprob: -5.4762282371521
    5. '    
' → logprob: -5.8512282371521
    6. '  
' → logprob: -7.3512282371521
    7. ',' → logprob: -7.9762282371521
    8. '<|end|>' → logprob: -7.9762282371521
    9. '   
' → logprob: -9.101227760314941
    10. '\n' → logprob: -9.101227760314941

Token 231: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.043685123324394226
    2. '   ' → logprob: -3.1686851978302
    3. ' for' → logprob: -7.293684959411621
    4. 'from' → logprob: -12.918684959411621
    5. 'reverse' → logprob: -13.793684959411621
    6. 'rev' → logprob: -14.418684959411621
    7. '
' → logprob: -14.918684959411621
    8. '    
' → logprob: -15.043684959411621
    9. ' ' → logprob: -15.293684959411621
    10. '	for' → logprob: -15.418684959411621

Token 232: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08913858234882355
    2. 'i' → logprob: -2.4641385078430176
    3. ' idx' → logprob: -9.214138984680176
    4. 'idx' → logprob: -10.214138984680176
    5. 'pos' → logprob: -11.089138984680176
    6. '_i' → logprob: -11.339138984680176
    7. ' pos' → logprob: -11.464138984680176
    8. ' ' → logprob: -12.339138984680176
    9. '(i' → logprob: -12.339138984680176
    10. '	i' → logprob: -12.839138984680176

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018643008545041084
    2. ',' → logprob: -4.518642902374268
    3. 'in' → logprob: -5.143642902374268
    4. 'i' → logprob: -7.143642902374268
    5. 'idx' → logprob: -7.768642902374268
    6. ' i' → logprob: -8.143643379211426
    7. ' ,' → logprob: -9.643643379211426
    8. '_idx' → logprob: -10.518643379211426
    9. 'range' → logprob: -10.768643379211426
    10. 'x' → logprob: -10.768643379211426

Token 234: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005176951177418232
    2. ' range' → logprob: -5.880177021026611
    3. 're' → logprob: -6.130177021026611
    4. 'S' → logprob: -8.630176544189453
    5. 'enumer' → logprob: -11.880176544189453
    6. ' reversed' → logprob: -13.380176544189453
    7. 'reverse' → logprob: -13.505176544189453
    8. 's' → logprob: -13.880176544189453
    9. ' S' → logprob: -14.005176544189453
    10. '(range' → logprob: -14.505176544189453

Token 235: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.006854142528027296
    2. '(' → logprob: -5.006854057312012
    3. '(len' → logprob: -9.006854057312012
    4. 'length' → logprob: -11.381854057312012
    5. ' (' → logprob: -13.506854057312012
    6. ' length' → logprob: -13.881854057312012
    7. ',length' → logprob: -14.131854057312012
    8. '(l' → logprob: -14.256854057312012
    9. '[length' → logprob: -14.881854057312012
    10. ' ' → logprob: -15.881854057312012

Token 236: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6120506525039673
    2. '):
' → logprob: -1.2370506525039673
    3. '-' → logprob: -2.1120505332946777
    4. '+' → logprob: -3.2370505332946777
    5. ' -' → logprob: -5.862050533294678
    6. ',' → logprob: -6.237050533294678
    7. '   ' → logprob: -6.987050533294678
    8. ' +' → logprob: -7.487050533294678
    9. ',-' → logprob: -7.737050533294678
    10. '):-' → logprob: -8.862051010131836

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014371353900060058
    2. '   ' → logprob: -7.251437187194824
    3. ',' → logprob: -8.126437187194824
    4. ' for' → logprob: -8.501437187194824
    5. ' if' → logprob: -9.751437187194824
    6. 'for' → logprob: -10.376437187194824
    7. '    ' → logprob: -10.876437187194824
    8. '[' → logprob: -10.876437187194824
    9. '<|end|>' → logprob: -11.001437187194824
    10. '#' → logprob: -11.251437187194824

Token 238: ' ch' (ID: 549)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7023911476135254
    2. 'if' → logprob: -1.4523911476135254
    3. '   ' → logprob: -1.7023911476135254
    4. '       ' → logprob: -2.9523911476135254
    5. 'c' → logprob: -3.4523911476135254
    6. 'd' → logprob: -6.327391147613525
    7. 'next' → logprob: -7.827391147613525
    8. ' if' → logprob: -7.952391147613525
    9. 'dp' → logprob: -7.952391147613525
    10. 's' → logprob: -8.077390670776367

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741458594799042
    2. '=' → logprob: -0.9741458892822266
    3. '=S' → logprob: -10.224145889282227
    4. '   ' → logprob: -10.849145889282227
    5. '=s' → logprob: -12.349145889282227
    6. ' ' → logprob: -12.974145889282227
    7. '       ' → logprob: -13.099145889282227
    8. 'd' → logprob: -13.599145889282227
    9. '    ' → logprob: -13.974145889282227
    10. '＝' → logprob: -14.599145889282227

Token 240: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00193280098028481
    2. ' S' → logprob: -6.251932621002197
    3. '   ' → logprob: -12.626933097839355
    4. 'int' → logprob: -14.501933097839355
    5. ' ' → logprob: -15.001933097839355
    6. '  ' → logprob: -17.25193214416504
    7. '	S' → logprob: -17.37693214416504
    8. '
' → logprob: -17.50193214416504
    9. '(S' → logprob: -17.75193214416504
    10. '0' → logprob: -18.00193214416504

Token 241: '[-' (ID: 17503)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0023152378853410482
    2. 'a' → logprob: -6.502315044403076
    3. ' =' → logprob: -7.502315044403076
    4. '=' → logprob: -9.127315521240234
    5. 'if' → logprob: -9.252315521240234
    6. '=a' → logprob: -10.127315521240234
    7. '   ' → logprob: -12.752315521240234
    8. 's' → logprob: -13.127315521240234
    9. '_a' → logprob: -13.377315521240234
    10. '=[' → logprob: -13.877315521240234

Token 242: '(' (ID: 7)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5754705667495728
    2. '(' → logprob: -1.3254705667495728
    3. '1' → logprob: -2.075470447540283
    4. 'a' → logprob: -3.075470447540283
    5. ' (' → logprob: -8.825470924377441
    6. '(length' → logprob: -10.325470924377441
    7. '(len' → logprob: -11.575470924377441
    8. '(m' → logprob: -11.700470924377441
    9. ' ' → logprob: -12.700470924377441
    10. 'length' → logprob: -12.825470924377441

Token 243: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007641222910024226
    2. '(a' → logprob: -7.250763893127441
    3. '1' → logprob: -9.875763893127441
    4. '(' → logprob: -13.500763893127441
    5. ' a' → logprob: -13.750763893127441
    6. ' (' → logprob: -15.500763893127441
    7. '{' → logprob: -16.875764846801758
    8. '[a' → logprob: -16.875764846801758
    9. ')a' → logprob: -17.500764846801758
    10. '   ' → logprob: -17.750764846801758

Token 244: '+' (ID: 10)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014251415617763996
    2. '+' → logprob: -4.264251232147217
    3. 'a' → logprob: -10.514251708984375
    4. ')' → logprob: -11.014251708984375
    5. ' ' → logprob: -11.139251708984375
    6. '   ' → logprob: -11.514251708984375
    7. ')]' → logprob: -12.014251708984375
    8. ')-' → logprob: -12.139251708984375
    9. ' +' → logprob: -12.389251708984375
    10. '  ' → logprob: -13.889251708984375

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. '2' → logprob: -12.625007629394531
    3. ' ' → logprob: -13.000007629394531
    4. 'a' → logprob: -13.625007629394531
    5. '
' → logprob: -15.500007629394531
    6. 'i' → logprob: -16.37500762939453
    7. '   ' → logprob: -16.50000762939453
    8. ')' → logprob: -16.87500762939453
    9. '

' → logprob: -17.37500762939453
    10. '-' → logprob: -18.00000762939453

Token 246: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0025329755153506994
    2. ')]
' → logprob: -6.002532958984375
    3. ')])' → logprob: -10.502532958984375
    4. ' )' → logprob: -11.377532958984375
    5. ')]

' → logprob: -12.377532958984375
    6. '])' → logprob: -12.502532958984375
    7. ')' → logprob: -12.502532958984375
    8. ')]
' → logprob: -13.127532958984375
    9. ']' → logprob: -13.377532958984375
    10. '])]' → logprob: -14.252532958984375

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0043727983720600605
    2. 'for' → logprob: -6.129372596740723
    3. 'if' → logprob: -6.254372596740723
    4. ' if' → logprob: -8.879372596740723
    5. ' for' → logprob: -9.504372596740723
    6. ',' → logprob: -10.879372596740723
    7. '        
' → logprob: -12.254372596740723
    8. '   ' → logprob: -12.254372596740723
    9. '[' → logprob: -12.379372596740723
    10. '
' → logprob: -13.254372596740723

Token 248: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8958501815795898
    2. '       ' → logprob: -1.0208501815795898
    3. 'for' (adapté à ' for') → logprob: -1.5208501815795898
    4. ' if' → logprob: -4.64585018157959
    5. ' for' → logprob: -6.14585018157959
    6. 'next' → logprob: -7.77085018157959
    7. 'new' → logprob: -8.39585018157959
    8. 'dp' → logprob: -8.52085018157959
    9. '[' → logprob: -9.77085018157959
    10. '#' → logprob: -9.77085018157959

Token 249: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1660127639770508
    2. 'j' → logprob: -1.2910127639770508
    3. 'i' → logprob: -1.7910127639770508
    4. 'x' → logprob: -2.041012763977051
    5. 'r' → logprob: -3.666012763977051
    6. 'v' → logprob: -3.791012763977051
    7. 'k' → logprob: -4.041012763977051
    8. 'd' → logprob: -4.916012763977051
    9. 'n' → logprob: -4.916012763977051
    10. 'm' → logprob: -5.291012763977051

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038073163479566574
    2. 'in' → logprob: -3.2880730628967285
    3. ' ' → logprob: -11.413073539733887
    4. 'range' → logprob: -11.538073539733887
    5. ',' → logprob: -12.288073539733887
    6. 'import' → logprob: -13.413073539733887
    7. '[' → logprob: -13.913073539733887
    8. '   ' → logprob: -14.413073539733887
    9. '```' → logprob: -14.663073539733887
    10. 'In' → logprob: -14.663073539733887

Token 251: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.842555426876061e-06
    2. ' range' → logprob: -12.250004768371582
    3. '(range' → logprob: -18.0000057220459
    4. '[' → logprob: -19.6250057220459
    5. '13' → logprob: -19.6250057220459
    6. '(' → logprob: -20.1250057220459
    7. '10' → logprob: -20.5000057220459
    8. '
' → logprob: -20.8750057220459
    9. '12' → logprob: -21.0000057220459
    10. '   ' → logprob: -21.1250057220459

Token 252: '(' (ID: 7)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.126943439245224
    2. '(' → logprob: -2.126943349838257
    3. ' ' → logprob: -12.001943588256836
    4. '12' → logprob: -12.751943588256836
    5. '
' → logprob: -12.751943588256836
    6. '   ' → logprob: -13.376943588256836
    7. '[' → logprob: -14.251943588256836
    8. '=' → logprob: -15.251943588256836
    9. '(
' → logprob: -15.376943588256836
    10. '1' → logprob: -15.626943588256836

Token 253: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.500000953674316
    3. '10' → logprob: -15.500000953674316
    4. '0' → logprob: -16.625
    5. '12' → logprob: -18.25
    6. '1' → logprob: -18.625
    7. '
' → logprob: -19.125
    8. ' ' → logprob: -19.25
    9. ')' → logprob: -19.5
    10. '(M' → logprob: -19.75

Token 254: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4740949273109436
    2. '):' → logprob: -0.9740949273109436
    3. '):
' → logprob: -11.349095344543457
    4. '       ' → logprob: -13.474095344543457
    5. '   ' → logprob: -13.724095344543457
    6. ':' → logprob: -13.849095344543457
    7. '+' → logprob: -14.099095344543457
    8. ']:' → logprob: -14.349095344543457
    9. '):

' → logprob: -15.474095344543457
    10. '():
' → logprob: -15.474095344543457

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00034023032640106976
    2. 'if' → logprob: -8.625340461730957
    3. ' if' → logprob: -9.000340461730957
    4. '	       ' → logprob: -11.625340461730957
    5. '<|end|>' → logprob: -11.750340461730957
    6. ',' → logprob: -12.625340461730957
    7. '       ' → logprob: -12.625340461730957
    8. '               ' → logprob: -12.750340461730957
    9. '#' → logprob: -13.500340461730957
    10. '          ' → logprob: -13.625340461730957

Token 256: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0072028748691082
    2. '           ' → logprob: -6.007203102111816
    3. ' if' → logprob: -6.007203102111816
    4. '               ' → logprob: -6.757203102111816
    5. 'arr' → logprob: -7.007203102111816
    6. 'for' → logprob: -9.632203102111816
    7. 'val' → logprob: -9.882203102111816
    8. 'num' → logprob: -11.007203102111816
    9. 'v' → logprob: -11.757203102111816
    10. 'res' → logprob: -11.882203102111816

Token 257: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.001160696498118341
    2. 'S' → logprob: -7.126160621643066
    3. 'arr' → logprob: -8.126160621643066
    4. ' ch' → logprob: -10.126160621643066
    5. '(ch' → logprob: -11.876160621643066
    6. 'type' → logprob: -12.376160621643066
    7. '   ' → logprob: -12.876160621643066
    8. 'b' → logprob: -13.626160621643066
    9. 'a' → logprob: -13.751160621643066
    10. ' S' → logprob: -14.626160621643066

Token 258: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.2542213201522827
    2. '==' → logprob: -1.5042213201522827
    3. ' ==' → logprob: -6.254221439361572
    4. '=="' → logprob: -8.254220962524414
    5. ''' → logprob: -10.379220962524414
    6. 'in' → logprob: -10.879220962524414
    7. '==
' → logprob: -10.879220962524414
    8. 'isdigit' → logprob: -11.504220962524414
    9. '='' → logprob: -12.004220962524414
    10. '[' → logprob: -12.504220962524414

Token 259: '?' (ID: 30)
  Prédit: ''?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''?' → logprob: -0.03338297829031944
    2. '?' → logprob: -3.5333828926086426
    3. ''' → logprob: -5.658382892608643
    4. '"?' → logprob: -9.4083833694458
    5. '?'' → logprob: -10.2833833694458
    6. ''*' → logprob: -11.5333833694458
    7. '('?' → logprob: -12.2833833694458
    8. ' '?' → logprob: -12.6583833694458
    9. '':' → logprob: -13.5333833694458
    10. '"' → logprob: -13.9083833694458

Token 260: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.7999293208122253
    2. '':' → logprob: -1.0499293804168701
    3. ''' → logprob: -1.7999293804168701
    4. ''or' → logprob: -3.92492938041687
    5. ' or' → logprob: -5.049929141998291
    6. ':' → logprob: -5.299929141998291
    7. ':
' → logprob: -6.424929141998291
    8. ''):
' → logprob: -6.674929141998291
    9. '):
' → logprob: -7.549929141998291
    10. '':
' → logprob: -7.924929141998291

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22116026282310486
    2. 'for' → logprob: -2.0961601734161377
    3. ' for' → logprob: -2.5961601734161377
    4. '           ' → logprob: -7.096160411834717
    5. ',' → logprob: -10.846159934997559
    6. '              ' → logprob: -10.971159934997559
    7. '	for' → logprob: -11.846159934997559
    8. '             ' → logprob: -11.971159934997559
    9. '   ' → logprob: -12.096159934997559
    10. '                
' → logprob: -12.096159934997559

Token 262: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004401986487209797
    2. ' for' → logprob: -6.004402160644531
    3. '               ' → logprob: -6.254402160644531
    4. '                   ' → logprob: -13.504402160644531
    5. '	for' → logprob: -14.504402160644531
    6. '   ' → logprob: -14.629402160644531
    7. '           ' → logprob: -16.25440216064453
    8. ' ' → logprob: -17.25440216064453
    9. 'For' → logprob: -17.62940216064453
    10. '                       ' → logprob: -18.37940216064453

Token 263: ' dig' (ID: 3807)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.094281554222107
    2. 'd' → logprob: -1.219281554222107
    3. 'k' → logprob: -1.469281554222107
    4. 'x' → logprob: -2.7192816734313965
    5. 'i' → logprob: -3.2192816734313965
    6. 'num' → logprob: -4.3442816734313965
    7. 'n' → logprob: -4.8442816734313965
    8. 'v' → logprob: -5.4692816734313965
    9. 'digit' → logprob: -5.4692816734313965
    10. 'dig' → logprob: -6.4692816734313965

Token 264: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22621707618236542
    2. 'it' → logprob: -1.6012170314788818
    3. 'in' → logprob: -7.351217269897461
    4. 't' → logprob: -9.726217269897461
    5. '   ' → logprob: -10.601217269897461
    6. 'i' → logprob: -10.601217269897461
    7. ' ' → logprob: -10.851217269897461
    8. '```' → logprob: -11.601217269897461
    9. '  ' → logprob: -11.976217269897461
    10. 'its' → logprob: -12.226217269897461

Token 265: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -17.375158309936523
    4. '(' → logprob: -18.250158309936523
    5. '10' → logprob: -18.875158309936523
    6. '   ' → logprob: -19.250158309936523
    7. '0' → logprob: -19.875158309936523
    8. '[' → logprob: -20.000158309936523
    9. '	range' → logprob: -20.000158309936523
    10. '
' → logprob: -20.875158309936523

Token 266: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.5577775128767826e-06
    2. '0' → logprob: -12.750005722045898
    3. '(' → logprob: -12.875005722045898
    4. ' ' → logprob: -17.1250057220459
    5. '```' → logprob: -18.2500057220459
    6. '=' → logprob: -18.7500057220459
    7. '{' → logprob: -19.2500057220459
    8. '
' → logprob: -20.6250057220459
    9. '１０' → logprob: -21.0000057220459
    10. '   ' → logprob: -21.0000057220459

Token 267: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -13.875000953674316
    3. ' ' → logprob: -17.500001907348633
    4. '13' → logprob: -17.625001907348633
    5. '```' → logprob: -18.625001907348633
    6. '(' → logprob: -18.750001907348633
    7. ')' → logprob: -20.750001907348633
    8. '   ' → logprob: -21.250001907348633
    9. '１０' → logprob: -21.375001907348633
    10. '
' → logprob: -21.375001907348633

Token 268: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07899896055459976
    2. '):' → logprob: -2.5789990425109863
    3. '):
' → logprob: -9.828998565673828
    4. '                   ' → logprob: -10.203998565673828
    5. '               ' → logprob: -12.203998565673828
    6. '                       ' → logprob: -12.328998565673828
    7. ':' → logprob: -12.578998565673828
    8. ':
' → logprob: -12.703998565673828
    9. '):

' → logprob: -14.203998565673828
    10. ')' → logprob: -14.703998565673828

Token 269: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012445488013327122
    2. '               ' → logprob: -4.887445449829102
    3. '                       ' → logprob: -5.512445449829102
    4. '                    
' → logprob: -9.012445449829102
    5. '                           ' → logprob: -9.387445449829102
    6. '                               ' → logprob: -9.387445449829102
    7. '<|end|>' → logprob: -9.512445449829102
    8. '                ' → logprob: -9.637445449829102
    9. ',' → logprob: -9.762445449829102
    10. ':
' → logprob: -10.262445449829102

Token 270: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.08144833892583847
    2. '                   ' → logprob: -2.8314483165740967
    3. ' arr' → logprob: -4.581448554992676
    4. '                       ' → logprob: -5.206448554992676
    5. 'idx' → logprob: -6.706448554992676
    6. 'n' → logprob: -7.206448554992676
    7. 'next' → logprob: -7.956448554992676
    8. 'new' → logprob: -8.206448554992676
    9. 'nj' → logprob: -8.706448554992676
    10. ' nxt' → logprob: -8.956448554992676

Token 271: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.3557529857498594e-05
    2. '[length' → logprob: -11.62502384185791
    3. '[' → logprob: -12.12502384185791
    4. '[arr' → logprob: -13.37502384185791
    5. '[-' → logprob: -13.62502384185791
    6. 'a' → logprob: -13.75002384185791
    7. '[b' → logprob: -13.75002384185791
    8. '[l' → logprob: -13.87502384185791
    9. '[len' → logprob: -13.87502384185791
    10. '[i' → logprob: -14.50002384185791

Token 272: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0892263650894165
    2. '+' → logprob: -2.464226245880127
    3. ' +' → logprob: -8.339226722717285
    4. ']' → logprob: -10.714226722717285
    5. ' ][' → logprob: -11.839226722717285
    6. '[' → logprob: -12.339226722717285
    7. 'b' → logprob: -12.589226722717285
    8. '+b' → logprob: -13.339226722717285
    9. '"][' → logprob: -13.464226722717285
    10. '+[' → logprob: -13.839226722717285

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1126389130949974
    2. '(d' → logprob: -2.8626389503479004
    3. 'dig' → logprob: -3.7376389503479004
    4. 'b' → logprob: -4.3626389503479
    5. '(b' → logprob: -5.1126389503479
    6. '(' → logprob: -5.3626389503479
    7. 'd' → logprob: -7.1126389503479
    8. 'digit' → logprob: -8.112638473510742
    9. '((' → logprob: -8.487638473510742
    10. ' (' → logprob: -8.487638473510742

Token 274: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0028362537268549204
    2. '[(' → logprob: -5.877836227416992
    3. ']' → logprob: -10.877836227416992
    4. '[' → logprob: -12.252836227416992
    5. ' ][' → logprob: -12.877836227416992
    6. '```' → logprob: -13.752836227416992
    7. 'b' → logprob: -14.752836227416992
    8. ')[' → logprob: -14.752836227416992
    9. '[d' → logprob: -14.877836227416992
    10. '()][' → logprob: -14.877836227416992

Token 275: '(' (ID: 7)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.1478203535079956
    2. '(d' → logprob: -2.147820472717285
    3. '(' → logprob: -3.897820472717285
    4. ' (' → logprob: -8.022820472717285
    5. '((' → logprob: -9.772820472717285
    6. '   ' → logprob: -13.397820472717285
    7. '(B' → logprob: -14.147820472717285
    8. '(j' → logprob: -14.647820472717285
    9. ' ' → logprob: -15.147820472717285
    10. '     ' → logprob: -15.772820472717285

Token 276: 'dig' (ID: 33529)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2657937705516815
    2. 'dig' → logprob: -2.265793800354004
    3. '(b' → logprob: -2.265793800354004
    4. '(d' → logprob: -4.140793800354004
    5. '(' → logprob: -4.640793800354004
    6. 'mul' → logprob: -9.140793800354004
    7. ' (' → logprob: -9.515793800354004
    8. 'digit' → logprob: -9.640793800354004
    9. ' b' → logprob: -10.390793800354004
    10. '10' → logprob: -10.765793800354004

Token 277: '*' (ID: 9)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.29045039415359497
    2. '+b' → logprob: -1.6654503345489502
    3. '*' → logprob: -3.04045033454895
    4. '+' → logprob: -4.290450572967529
    5. 'b' → logprob: -7.290450572967529
    6. ' +' → logprob: -8.290450096130371
    7. '```' → logprob: -8.415450096130371
    8. '   ' → logprob: -9.415450096130371
    9. ' *' → logprob: -9.915450096130371
    10. '[b' → logprob: -10.665450096130371

Token 278: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -3.297462171758525e-05
    2. '(m' → logprob: -10.875033378601074
    3. ' mul' → logprob: -11.250033378601074
    4. '(' → logprob: -15.000033378601074
    5. '   ' → logprob: -16.000032424926758
    6. 'm' → logprob: -16.125032424926758
    7. 'multip' → logprob: -16.125032424926758
    8. '_mul' → logprob: -16.375032424926758
    9. 'pow' → logprob: -16.750032424926758
    10. 'mult' → logprob: -16.750032424926758

Token 279: '+b' (ID: 76609)
  Prédit: '+b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.01607320085167885
    2. '+' → logprob: -4.391073226928711
    3. ' +' → logprob: -5.641073226928711
    4. 'b' → logprob: -12.891073226928711
    5. '%b' → logprob: -13.641073226928711
    6. '+B' → logprob: -14.141073226928711
    7. '   ' → logprob: -14.266073226928711
    8. '+
' → logprob: -14.391073226928711
    9. ' ' → logprob: -14.516073226928711
    10. '%' → logprob: -14.766073226928711

Token 280: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.5759971737861633
    2. ')' → logprob: -0.8259971737861633
    3. ' )' → logprob: -10.075997352600098
    4. '%' → logprob: -11.825997352600098
    5. ')
' → logprob: -12.200997352600098
    6. ')]' → logprob: -14.325997352600098
    7. ')&' → logprob: -14.325997352600098
    8. ']%' → logprob: -14.325997352600098
    9. '）' → logprob: -15.325997352600098
    10. ')#' → logprob: -15.575997352600098

Token 281: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '013' → logprob: -17.125
    4. '```' → logprob: -17.625
    5. '۱۳' → logprob: -19.25
    6. '   ' → logprob: -20.0
    7. '１３' → logprob: -20.125
    8. '123' → logprob: -20.125
    9. ' thirteen' → logprob: -20.25
    10. '113' → logprob: -20.25

Token 282: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12693965435028076
    2. ']+=' → logprob: -2.1269397735595703
    3. ']=' → logprob: -12.12693977355957
    4. ']=(' → logprob: -12.87693977355957
    5. ']+' → logprob: -13.75193977355957
    6. ' ]' → logprob: -14.12693977355957
    7. '+=' → logprob: -14.37693977355957
    8. '```' → logprob: -14.87693977355957
    9. '()]' → logprob: -15.62693977355957
    10. '+]' → logprob: -15.87693977355957

Token 283: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0046686455607414246
    2. '=' → logprob: -5.504668712615967
    3. '=(' → logprob: -8.129668235778809
    4. ' +=' → logprob: -8.754668235778809
    5. ' =' → logprob: -9.629668235778809
    6. ']+=' → logprob: -10.004668235778809
    7. '%=' → logprob: -10.754668235778809
    8. '+=(' → logprob: -12.629668235778809
    9. '```' → logprob: -14.379668235778809
    10. '(' → logprob: -14.379668235778809

Token 284: ' (' (ID: 350)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00017505438881926239
    2. ' (' → logprob: -9.125175476074219
    3. '(' → logprob: -10.000175476074219
    4. '                   ' → logprob: -11.625175476074219
    5. '(ans' → logprob: -12.000175476074219
    6. '                       ' → logprob: -13.125175476074219
    7. '   ' → logprob: -13.750175476074219
    8. '(val' → logprob: -15.250175476074219
    9. '(acc' → logprob: -15.375175476074219
    10. '           ' → logprob: -15.500175476074219

Token 285: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0009641039068810642
    2. '(arr' → logprob: -7.375964164733887
    3. ' arr' → logprob: -8.000964164733887
    4. '	arr' → logprob: -14.250964164733887
    5. '[arr' → logprob: -14.250964164733887
    6. '           ' → logprob: -15.500964164733887
    7. '_arr' → logprob: -16.00096321105957
    8. '$arr' → logprob: -16.25096321105957
    9. ' (' → logprob: -16.50096321105957
    10. '   ' → logprob: -16.50096321105957

Token 286: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00043472214019857347
    2. 'a' → logprob: -7.750434875488281
    3. ' a' → logprob: -12.875434875488281
    4. '[' → logprob: -14.375434875488281
    5. '[arr' → logprob: -15.250434875488281
    6. '	a' → logprob: -15.875434875488281
    7. '#a' → logprob: -16.00043487548828
    8. '(a' → logprob: -16.25043487548828
    9. ')a' → logprob: -16.62543487548828
    10. 's' → logprob: -16.62543487548828

Token 287: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.127333340875339e-06
    2. ' +' → logprob: -12.875003814697266
    3. '[' → logprob: -14.125003814697266
    4. 'a' → logprob: -15.125003814697266
    5. '<|end|>' → logprob: -15.875003814697266
    6. '...' → logprob: -16.375003814697266
    7. 's' → logprob: -16.875003814697266
    8. '][' → logprob: -16.875003814697266
    9. ']+' → logprob: -17.250003814697266
    10. ']' → logprob: -17.250003814697266

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. '+' → logprob: -12.25001049041748
    3. '[' → logprob: -12.25001049041748
    4. ' ' → logprob: -15.12501049041748
    5. '[arr' → logprob: -15.25001049041748
    6. '<|end|>' → logprob: -15.50001049041748
    7. '```' → logprob: -16.000011444091797
    8. 'arr' → logprob: -16.375011444091797
    9. ')' → logprob: -16.500011444091797
    10. '...' → logprob: -16.625011444091797

Token 289: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08897283673286438
    2. '[(' → logprob: -2.588972806930542
    3. '[' → logprob: -5.213973045349121
    4. ')[' → logprob: -5.463973045349121
    5. ']' → logprob: -9.463973045349121
    6. ')' → logprob: -9.963973045349121
    7. ' ][' → logprob: -9.963973045349121
    8. ' ' → logprob: -10.963973045349121
    9. '}[' → logprob: -11.088973045349121
    10. '<|end|>' → logprob: -11.463973045349121

Token 290: '(' (ID: 7)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00012011249782517552
    2. '(ch' → logprob: -9.125120162963867
    3. '((' → logprob: -12.250120162963867
    4. '(' → logprob: -13.250120162963867
    5. '[(' → logprob: -13.500120162963867
    6. ' (' → logprob: -13.750120162963867
    7. '   ' → logprob: -14.375120162963867
    8. '(arr' → logprob: -15.000120162963867
    9. '
' → logprob: -15.625120162963867
    10. '[' → logprob: -15.625120162963867

Token 291: 'dig' (ID: 33529)
  Prédit: 'dig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -2.5107177862082608e-05
    2. 'digit' → logprob: -10.875024795532227
    3. '(d' → logprob: -12.625024795532227
    4. ' dig' → logprob: -13.000024795532227
    5. '(' → logprob: -15.750024795532227
    6. 'digits' → logprob: -16.125024795532227
    7. ' (' → logprob: -16.750024795532227
    8. '   ' → logprob: -16.875024795532227
    9. '           ' → logprob: -17.000024795532227
    10. 'd' → logprob: -17.125024795532227

Token 292: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -5.073596548754722e-05
    2. ' *' → logprob: -10.87505054473877
    3. '<|end|>' → logprob: -12.25005054473877
    4. ')*' → logprob: -12.37505054473877
    5. '*m' → logprob: -12.37505054473877
    6. '
' → logprob: -12.50005054473877
    7. '**' → logprob: -12.87505054473877
    8. ')' → logprob: -12.87505054473877
    9. '*
' → logprob: -13.37505054473877
    10. '```' → logprob: -13.50005054473877

Token 293: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -9.372294698550832e-06
    2. '13' → logprob: -12.125009536743164
    3. 'mult' → logprob: -13.250009536743164
    4. 'mod' → logprob: -14.000009536743164
    5. ' mul' → logprob: -14.625009536743164
    6. 'multip' → logprob: -14.875009536743164
    7. 'mol' → logprob: -15.750009536743164
    8. ' ' → logprob: -16.500009536743164
    9. '_mul' → logprob: -16.625009536743164
    10. '
' → logprob: -16.625009536743164

Token 294: '+b' (ID: 76609)
  Prédit: '+b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.00018732868193183094
    2. 'b' → logprob: -9.625186920166016
    3. '%b' → logprob: -9.625186920166016
    4. '+' → logprob: -10.000186920166016
    5. '[b' → logprob: -12.750186920166016
    6. ' +' → logprob: -13.250186920166016
    7. '][' → logprob: -13.250186920166016
    8. ']+' → logprob: -14.500186920166016
    9. ')b' → logprob: -14.875186920166016
    10. '>b' → logprob: -15.125186920166016

Token 295: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.011125989258289337
    2. ']%' → logprob: -4.5111260414123535
    3. ']' → logprob: -10.386125564575195
    4. ')' → logprob: -10.511125564575195
    5. ')]' → logprob: -11.136125564575195
    6. '%' → logprob: -12.261125564575195
    7. '   ' → logprob: -15.511125564575195
    8. '[' → logprob: -15.761125564575195
    9. '}%' → logprob: -16.386125564575195
    10. '])' → logprob: -16.761125564575195

Token 296: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -12.375009536743164
    3. '   ' → logprob: -13.125009536743164
    4. '```' → logprob: -13.625009536743164
    5. '013' → logprob: -14.375009536743164
    6. '
' → logprob: -14.937509536743164
    7. '[' → logprob: -15.687509536743164
    8. ')' → logprob: -15.937509536743164
    9. '3' → logprob: -15.937509536743164
    10. '131' → logprob: -16.375009536743164

Token 297: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014222390949726105
    2. ']+' → logprob: -4.264222621917725
    3. '+' → logprob: -9.889222145080566
    4. ' ]' → logprob: -12.639222145080566
    5. ']+=' → logprob: -12.889222145080566
    6. ' +' → logprob: -14.264222145080566
    7. '+]' → logprob: -14.514222145080566
    8. ']
' → logprob: -15.514222145080566
    9. ']%' → logprob: -15.514222145080566
    10. '']' → logprob: -15.889222145080566

Token 298: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889209687709808
    2. ' +' → logprob: -2.5788919925689697
    3. '+(' → logprob: -13.95389175415039
    4. '+
' → logprob: -14.32889175415039
    5. '+D' → logprob: -15.57889175415039
    6. '+C' → logprob: -15.82889175415039
    7. '+r' → logprob: -16.45389175415039
    8. '＋' → logprob: -16.57889175415039
    9. '+c' → logprob: -16.82889175415039
    10. '+A' → logprob: -16.82889175415039

Token 299: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0002632430987432599
    2. ' arr' → logprob: -8.250263214111328
    3. '   ' → logprob: -13.875263214111328
    4. '           ' → logprob: -14.375263214111328
    5. '	arr' → logprob: -16.125263214111328
    6. '(arr' → logprob: -16.375263214111328
    7. ' ' → logprob: -16.375263214111328
    8. '               ' → logprob: -16.625263214111328
    9. '  ' → logprob: -16.750263214111328
    10. '
' → logprob: -17.375263214111328

Token 300: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.002476724097505212
    2. 'a' → logprob: -6.002476692199707
    3. ' a' → logprob: -15.002476692199707
    4. '[' → logprob: -15.002476692199707
    5. '[
' → logprob: -15.127476692199707
    6. '```' → logprob: -16.252477645874023
    7. '#a' → logprob: -17.627477645874023
    8. '(a' → logprob: -17.752477645874023
    9. ' [' → logprob: -17.877477645874023
    10. '[b' → logprob: -18.377477645874023

Token 301: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5238056778907776
    2. '[b' → logprob: -1.0238056182861328
    3. '[a' → logprob: -3.273805618286133
    4. '[' → logprob: -4.773805618286133
    5. ']' → logprob: -6.398805618286133
    6. '```' → logprob: -9.398805618286133
    7. '])' → logprob: -9.523805618286133
    8. 'b' → logprob: -10.148805618286133
    9. ')[' → logprob: -10.148805618286133
    10. ' [' → logprob: -10.273805618286133

Token 302: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.080963092041202e-06
    2. ' b' → logprob: -12.250004768371582
    3. '[b' → logprob: -15.250004768371582
    4. ' ' → logprob: -17.6250057220459
    5. '
' → logprob: -18.0000057220459
    6. '   ' → logprob: -18.0000057220459
    7. '(b' → logprob: -18.6250057220459
    8. ']' → logprob: -18.7500057220459
    9. '13' → logprob: -18.7500057220459
    10. '	b' → logprob: -18.8750057220459

Token 303: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -8.65707261255011e-06
    2. ']' → logprob: -12.250008583068848
    3. ')' → logprob: -13.500008583068848
    4. ']%' → logprob: -13.875008583068848
    5. ' ])' → logprob: -14.375008583068848
    6. '   ' → logprob: -15.500008583068848
    7. ''])' → logprob: -15.500008583068848
    8. ']
' → logprob: -15.750008583068848
    9. '))' → logprob: -15.750008583068848
    10. ')%' → logprob: -16.375009536743164

Token 304: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.006790562998503447
    2. ' %' → logprob: -5.006790637969971
    3. ')%' → logprob: -9.756790161132812
    4. ')' → logprob: -11.256790161132812
    5. '%D' → logprob: -13.006790161132812
    6. '%A' → logprob: -14.881790161132812
    7. '%B' → logprob: -15.131790161132812
    8. '%d' → logprob: -15.506790161132812
    9. '%c' → logprob: -15.506790161132812
    10. ']%' → logprob: -15.756790161132812

Token 305: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.128163257315464e-07
    2. ' MOD' → logprob: -15.25
    3. '_MOD' → logprob: -20.0
    4. 'MO' → logprob: -20.625
    5. '.MOD' → logprob: -21.125
    6. '```' → logprob: -22.0
    7. 'MODULE' → logprob: -23.25
    8. '   ' → logprob: -23.625
    9. 'MODE' → logprob: -23.625
    10. 'Mod' → logprob: -24.625

Token 306: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9184646010398865
    2. '       ' → logprob: -1.1684646606445312
    3. '           ' → logprob: -1.2934646606445312
    4. 'else' → logprob: -5.043464660644531
    5. '		' → logprob: -7.168464660644531
    6. '```' → logprob: -7.168464660644531
    7. ' else' → logprob: -7.418464660644531
    8. '    
' → logprob: -7.543464660644531
    9. '\n' → logprob: -7.543464660644531
    10. '	' → logprob: -7.543464660644531

Token 307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5782541632652283
    2. '       ' → logprob: -0.8282541632652283
    3. 'else' → logprob: -6.203254222869873
    4. '
' → logprob: -8.703253746032715
    5. ' else' → logprob: -10.078253746032715
    6. '   ' → logprob: -11.328253746032715
    7. 'elif' → logprob: -11.703253746032715
    8. '```' → logprob: -11.703253746032715
    9. 'm' → logprob: -12.203253746032715
    10. '	       ' → logprob: -12.203253746032715

Token 308: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.031996067613363266
    2. '       ' → logprob: -3.531996011734009
    3. '           ' → logprob: -6.281996250152588
    4. ' else' → logprob: -7.906996250152588
    5. 'elif' → logprob: -13.15699577331543
    6. '   ' → logprob: -13.65699577331543
    7. ')' → logprob: -14.53199577331543
    8. '	else' → logprob: -14.65699577331543
    9. '```' → logprob: -15.03199577331543
    10. '               ' → logprob: -15.40699577331543

Token 309: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2854101061820984
    2. ' arr' → logprob: -2.035410165786743
    3. 'arr' → logprob: -2.160410165786743
    4. '                   ' → logprob: -7.160409927368164
    5. '	arr' → logprob: -7.535409927368164
    6. 'num' → logprob: -8.160409927368164
    7. ':' → logprob: -8.910409927368164
    8. '[arr' → logprob: -9.035409927368164
    9. '           ' → logprob: -9.160409927368164
    10. '   ' → logprob: -9.535409927368164

Token 310: '               ' (ID: 506)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.8909024000167847
    2. 'digit' → logprob: -1.0159024000167847
    3. 'num' → logprob: -2.515902519226074
    4. 'd' → logprob: -2.640902519226074
    5. '               ' → logprob: -3.765902519226074
    6. ' digit' → logprob: -4.390902519226074
    7. '                   ' → logprob: -4.515902519226074
    8. ' arr' → logprob: -4.515902519226074
    9. 'dig' → logprob: -5.265902519226074
    10. ' d' → logprob: -6.015902519226074

Token 311: ' num' (ID: 2269)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0046332841739058495
    2. 'd' → logprob: -6.25463342666626
    3. 'digit' → logprob: -6.50463342666626
    4. ' arr' → logprob: -7.75463342666626
    5. 'num' (adapté à ' num') → logprob: -8.379632949829102
    6. 'dig' → logprob: -8.879632949829102
    7. '   ' → logprob: -9.129632949829102
    8. 'val' → logprob: -9.254632949829102
    9. '           ' → logprob: -10.129632949829102
    10. 'v' → logprob: -10.629632949829102

Token 312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11468033492565155
    2. '=' → logprob: -2.239680290222168
    3. '=int' → logprob: -6.864680290222168
    4. 'ber' → logprob: -7.489680290222168
    5. '=(' → logprob: -8.864680290222168
    6. '=num' → logprob: -10.239680290222168
    7. '=((' → logprob: -11.114680290222168
    8. '  ' → logprob: -11.364680290222168
    9. ' ' → logprob: -11.614680290222168
    10. 'r' → logprob: -12.114680290222168

Token 313: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0382753424346447
    2. ' int' → logprob: -3.2882752418518066
    3. '(int' → logprob: -8.538275718688965
    4. ' (' → logprob: -11.288275718688965
    5. 'ord' → logprob: -11.413275718688965
    6. '   ' → logprob: -11.788275718688965
    7. ' ord' → logprob: -12.663275718688965
    8. '(' → logprob: -14.038275718688965
    9. '[int' → logprob: -14.163275718688965
    10. '(ord' → logprob: -14.288275718688965

Token 314: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.00020985817536711693
    2. 'ch' → logprob: -8.50020980834961
    3. '(' → logprob: -12.00020980834961
    4. '[ch' → logprob: -15.75020980834961
    5. '	ch' → logprob: -17.12520980834961
    6. ',ch' → logprob: -18.12520980834961
    7. ' ch' → logprob: -18.25020980834961
    8. '/ch' → logprob: -19.12520980834961
    9. '(c' → logprob: -19.25020980834961
    10. ' (' → logprob: -19.25020980834961

Token 315: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4746590256690979
    2. ')
' → logprob: -0.9746590256690979
    3. ')*' → logprob: -7.474658966064453
    4. ' )' → logprob: -12.724658966064453
    5. ' )
' → logprob: -12.724658966064453
    6. ')*(' → logprob: -12.974658966064453
    7. ')`
' → logprob: -13.099658966064453
    8. ')
' → logprob: -13.724658966064453
    9. '   ' → logprob: -15.099658966064453
    10. '')' → logprob: -15.224658966064453

Token 316: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019917119294404984
    2. 'arr' → logprob: -4.144917011260986
    3. ' arr' → logprob: -6.394917011260986
    4. '                   ' → logprob: -6.894917011260986
    5. '           ' → logprob: -6.894917011260986
    6. '[arr' → logprob: -9.269917488098145
    7. '	arr' → logprob: -10.894917488098145
    8. '   ' → logprob: -11.144917488098145
    9. '                ' → logprob: -11.894917488098145
    10. '              ' → logprob: -11.894917488098145

Token 317: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.001201658509671688
    2. ' arr' → logprob: -6.751201629638672
    3. '               ' → logprob: -10.751201629638672
    4. '           ' → logprob: -11.876201629638672
    5. 'idx' → logprob: -14.001201629638672
    6. '                   ' → logprob: -14.376201629638672
    7. '	arr' → logprob: -15.251201629638672
    8. 'index' → logprob: -15.376201629638672
    9. 'new' → logprob: -15.626201629638672
    10. '   ' → logprob: -15.626201629638672

Token 318: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.339278580620885e-06
    2. 'a' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.125001907348633
    4. ' a' → logprob: -18.500001907348633
    5. '[' → logprob: -18.875001907348633
    6. ' [' → logprob: -19.500001907348633
    7. '	a' → logprob: -19.750001907348633
    8. '(a' → logprob: -20.500001907348633
    9. '[
' → logprob: -20.750001907348633
    10. '
' → logprob: -20.875001907348633

Token 319: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.45848218582978e-06
    2. ' +' → logprob: -13.00000286102295
    3. '[' → logprob: -16.000001907348633
    4. '+[' → logprob: -17.375001907348633
    5. '][' → logprob: -19.625001907348633
    6. '＋' → logprob: -19.875001907348633
    7. '+
' → logprob: -19.875001907348633
    8. '1' → logprob: -21.500001907348633
    9. '+a' → logprob: -22.375001907348633
    10. '   ' → logprob: -23.000001907348633

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '+' → logprob: -13.62500286102295
    3. '[' → logprob: -14.37500286102295
    4. ' ' → logprob: -14.62500286102295
    5. '   ' → logprob: -16.375001907348633
    6. '```' → logprob: -16.375001907348633
    7. '(' → logprob: -17.562501907348633
    8. '
' → logprob: -17.812501907348633
    9. '][' → logprob: -18.625001907348633
    10. 'a' → logprob: -18.687501907348633

Token 321: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.015947911888360977
    2. '[(' → logprob: -4.2659478187561035
    3. ')[' → logprob: -6.3909478187561035
    4. '[((' → logprob: -9.515948295593262
    5. ']' → logprob: -11.640948295593262
    6. ')' → logprob: -12.015948295593262
    7. ')][' → logprob: -12.640948295593262
    8. ')((' → logprob: -12.640948295593262
    9. '[' → logprob: -12.765948295593262
    10. ' ][' → logprob: -13.140948295593262

Token 322: '(' (ID: 7)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0002882721892092377
    2. ' (' → logprob: -9.000288009643555
    3. '((' → logprob: -9.250288009643555
    4. '(' → logprob: -9.625288009643555
    5. '   ' → logprob: -13.750288009643555
    6. 'num' → logprob: -14.375288009643555
    7. '(n' → logprob: -14.875288009643555
    8. '[num' → logprob: -16.000288009643555
    9. ' ' → logprob: -16.125288009643555
    10. '(nums' → logprob: -16.125288009643555

Token 323: 'num' (ID: 4571)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.003201477462425828
    2. 'num' → logprob: -5.753201484680176
    3. ' (' → logprob: -10.753201484680176
    4. ' num' → logprob: -13.628201484680176
    5. '((' → logprob: -14.878201484680176
    6. '[num' → logprob: -15.003201484680176
    7. '   ' → logprob: -15.753201484680176
    8. ',num' → logprob: -16.25320053100586
    9. '	num' → logprob: -16.75320053100586
    10. '(' → logprob: -17.00320053100586

Token 324: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -9.543733904138207e-05
    2. '*m' → logprob: -9.87509536743164
    3. ' *' → logprob: -10.62509536743164
    4. '**' → logprob: -11.12509536743164
    5. '*self' → logprob: -13.87509536743164
    6. '*object' → logprob: -14.25009536743164
    7. '*pi' → logprob: -15.00009536743164
    8. '*ft' → logprob: -15.00009536743164
    9. '*out' → logprob: -15.00009536743164
    10. '*f' → logprob: -15.12509536743164

Token 325: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -4.4849443838757e-06
    2. ' mul' → logprob: -12.500004768371582
    3. 'mult' → logprob: -15.000004768371582
    4. 'multip' → logprob: -15.000004768371582
    5. 'mod' → logprob: -17.250003814697266
    6. 'mux' → logprob: -17.500003814697266
    7. '_mul' → logprob: -18.125003814697266
    8. 'mu' → logprob: -18.250003814697266
    9. '.mul' → logprob: -18.250003814697266
    10. 'mol' → logprob: -18.625003814697266

Token 326: '+b' (ID: 76609)
  Prédit: '+b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.019182508811354637
    2. '+' → logprob: -4.0191826820373535
    3. ' +' → logprob: -6.8941826820373535
    4. 'b' → logprob: -12.144182205200195
    5. '+
' → logprob: -12.394182205200195
    6. '%b' → logprob: -13.394182205200195
    7. '+B' → logprob: -13.519182205200195
    8. '%' → logprob: -13.644182205200195
    9. ' ' → logprob: -14.269182205200195
    10. ')+' → logprob: -14.519182205200195

Token 327: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.1002098023891449
    2. ')' → logprob: -2.3502097129821777
    3. ' )' → logprob: -13.725210189819336
    4. ']%' → logprob: -13.850210189819336
    5. '%' → logprob: -14.225210189819336
    6. ')]' → logprob: -15.225210189819336
    7. '）' → logprob: -16.725210189819336
    8. ']' → logprob: -17.475210189819336
    9. '%)' → logprob: -17.600210189819336
    10. '+' → logprob: -17.850210189819336

Token 328: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '013' → logprob: -15.000003814697266
    4. '```' → logprob: -15.750003814697266
    5. '131' → logprob: -17.500003814697266
    6. '133' → logprob: -17.687503814697266
    7. '   ' → logprob: -17.875003814697266
    8. '<|end|>' → logprob: -18.062503814697266
    9. '[' → logprob: -18.125003814697266
    10. '3' → logprob: -18.312503814697266

Token 329: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.080963092041202e-06
    2. ']=' → logprob: -12.375004768371582
    3. ' ]' → logprob: -14.375004768371582
    4. '=' → logprob: -15.625004768371582
    5. ']+=' → logprob: -15.875004768371582
    6. ')' → logprob: -18.1250057220459
    7. ']
' → logprob: -18.7500057220459
    8. '']' → logprob: -18.8750057220459
    9. '`]' → logprob: -19.0000057220459
    10. ')]' → logprob: -20.0000057220459

Token 330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00408160500228405
    2. ' =' → logprob: -5.504081726074219
    3. '+=' → logprob: -12.754081726074219
    4. ' +=' → logprob: -16.12908172607422
    5. ']' → logprob: -16.62908172607422
    6. ')' → logprob: -16.87908172607422
    7. ']=' → logprob: -18.37908172607422
    8. '=(' → logprob: -19.25408172607422
    9. '.=' → logprob: -19.62908172607422
    10. '%=' → logprob: -19.87908172607422

Token 331: ' (' (ID: 350)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.07889606058597565
    2. ' (' → logprob: -2.5788960456848145
    3. '(' → logprob: -12.703896522521973
    4. '(ans' → logprob: -12.953896522521973
    5. '   ' → logprob: -14.828896522521973
    6. '[arr' → logprob: -16.203895568847656
    7. ' ' → logprob: -16.328895568847656
    8. '(ord' → logprob: -16.578895568847656
    9. '(acc' → logprob: -16.828895568847656
    10. '  ' → logprob: -17.203895568847656

Token 332: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.018160121515393257
    2. '(arr' → logprob: -4.018160343170166
    3. '[arr' → logprob: -11.768159866333008
    4. ' arr' → logprob: -13.143159866333008
    5. '	arr' → logprob: -15.893159866333008
    6. '$arr' → logprob: -16.018159866333008
    7. '<arr' → logprob: -16.518159866333008
    8. '_arr' → logprob: -16.518159866333008
    9. '-arr' → logprob: -17.143159866333008
    10. '.arr' → logprob: -17.268159866333008

Token 333: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.011059965938329697
    2. 'a' → logprob: -4.511059761047363
    3. ' a' → logprob: -11.511059761047363
    4. '[' → logprob: -14.011059761047363
    5. '   ' → logprob: -15.011059761047363
    6. '```' → logprob: -15.136059761047363
    7. ' ' → logprob: -16.01106071472168
    8. '	a' → logprob: -16.01106071472168
    9. '           ' → logprob: -16.51106071472168
    10. ''a' → logprob: -16.63606071472168

Token 334: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.869639476761222e-05
    2. '[' → logprob: -10.250039100646973
    3. '1' → logprob: -12.750039100646973
    4. '+[' → logprob: -16.125038146972656
    5. '][' → logprob: -16.250038146972656
    6. ' +' → logprob: -16.875038146972656
    7. 'a' → logprob: -17.500038146972656
    8. '```' → logprob: -18.875038146972656
    9. ']+' → logprob: -19.000038146972656
    10. '[a' → logprob: -19.125038146972656

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. '+' → logprob: -12.25001335144043
    3. 'a' → logprob: -12.37501335144043
    4. '[a' → logprob: -13.00001335144043
    5. '```' → logprob: -13.75001335144043
    6. ' ' → logprob: -14.62501335144043
    7. '[' → logprob: -15.12501335144043
    8. 'arr' → logprob: -15.75001335144043
    9. '(a' → logprob: -16.00001335144043
    10. '[arr' → logprob: -17.12501335144043

Token 336: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04604222625494003
    2. '+' → logprob: -3.4210422039031982
    3. '[a' → logprob: -4.546042442321777
    4. '[' → logprob: -7.046042442321777
    5. 'a' → logprob: -8.046042442321777
    6. ' ][' → logprob: -8.671042442321777
    7. ')[' → logprob: -9.421042442321777
    8. '1' → logprob: -9.796042442321777
    9. '           ' → logprob: -10.296042442321777
    10. '   ' → logprob: -10.296042442321777

Token 337: '(' (ID: 7)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.44602832198143005
    2. 'a' → logprob: -1.1960283517837524
    3. '(a' → logprob: -3.446028232574463
    4. '[a' → logprob: -3.821028232574463
    5. '[b' → logprob: -6.321028232574463
    6. '(b' → logprob: -6.821028232574463
    7. 'num' → logprob: -8.071028709411621
    8. '][' → logprob: -9.446028709411621
    9. ' (' → logprob: -9.821028709411621
    10. '   ' → logprob: -9.821028709411621

Token 338: 'num' (ID: 4571)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40219056606292725
    2. 'b' → logprob: -1.1521905660629272
    3. 'num' → logprob: -4.402190685272217
    4. '[a' → logprob: -6.277190685272217
    5. '[b' → logprob: -7.277190685272217
    6. 'ch' → logprob: -8.777190208435059
    7. '][' → logprob: -9.527190208435059
    8. '0' → logprob: -10.652190208435059
    9. '[' → logprob: -11.027190208435059
    10. ']' → logprob: -11.027190208435059

Token 339: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5898576378822327
    2. '*b' → logprob: -1.464857578277588
    3. '][' → logprob: -1.589857578277588
    4. ']*' → logprob: -6.214857578277588
    5. '       ' → logprob: -6.839857578277588
    6. ')][' → logprob: -6.839857578277588
    7. '*m' → logprob: -6.839857578277588
    8. ')*' → logprob: -6.964857578277588
    9. '*a' → logprob: -7.214857578277588
    10. '[b' → logprob: -7.839857578277588

Token 340: 'mul' (ID: 44857)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09004766494035721
    2. 'mul' → logprob: -3.715047597885132
    3. '13' → logprob: -3.965047597885132
    4. 'm' → logprob: -3.965047597885132
    5. 'a' → logprob: -4.840047836303711
    6. '[b' → logprob: -5.090047836303711
    7. '][' → logprob: -5.840047836303711
    8. '1' → logprob: -6.715047836303711
    9. '[m' → logprob: -6.840047836303711
    10. '%' → logprob: -7.340047836303711

Token 341: '+b' (ID: 76609)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.13126714527606964
    2. '+b' → logprob: -2.8812670707702637
    3. '[b' → logprob: -3.1312670707702637
    4. '%b' → logprob: -4.256267070770264
    5. '][' → logprob: -4.881267070770264
    6. '+' → logprob: -8.006267547607422
    7. '13' → logprob: -8.131267547607422
    8. '%' → logprob: -8.756267547607422
    9. ']%' → logprob: -9.006267547607422
    10. ']' → logprob: -9.381267547607422

Token 342: ')%' (ID: 57656)
  Prédit: ']%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']%' → logprob: -0.06583185493946075
    2. ')%' → logprob: -2.9408318996429443
    3. ']' → logprob: -4.565831661224365
    4. '%' → logprob: -7.940831661224365
    5. '][' → logprob: -10.065832138061523
    6. ']+' → logprob: -10.440832138061523
    7. '])' → logprob: -10.940832138061523
    8. ')' → logprob: -11.065832138061523
    9. 'b' → logprob: -11.940832138061523
    10. '[' → logprob: -12.315832138061523

Token 343: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.013262701220810413
    2. 'b' → logprob: -4.513262748718262
    3. 'a' → logprob: -6.763262748718262
    4. '[b' → logprob: -8.388262748718262
    5. '][' → logprob: -8.763262748718262
    6. '[a' → logprob: -8.888262748718262
    7. '3' → logprob: -9.263262748718262
    8. '[' → logprob: -9.388262748718262
    9. '   ' → logprob: -9.763262748718262
    10. ']' → logprob: -9.888262748718262

Token 344: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002336162608116865
    2. '+' → logprob: -6.752336025238037
    3. ']+' → logprob: -6.877336025238037
    4. ' +' → logprob: -9.002336502075195
    5. ' ]' → logprob: -11.752336502075195
    6. '+]' → logprob: -13.877336502075195
    7. ')' → logprob: -14.752336502075195
    8. ']+=' → logprob: -14.752336502075195
    9. '}' → logprob: -15.127336502075195
    10. '```' → logprob: -15.502336502075195

Token 345: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759396553039551
    2. ' +' → logprob: -0.8259396553039551
    3. '+b' → logprob: -17.200939178466797
    4. ')' → logprob: -17.575939178466797
    5. ' ' → logprob: -18.075939178466797
    6. '+[' → logprob: -18.075939178466797
    7. '+
' → logprob: -18.325939178466797
    8. '=' → logprob: -18.325939178466797
    9. '+a' → logprob: -18.575939178466797
    10. '+)' → logprob: -18.575939178466797

Token 346: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.003178544342517853
    2. ' arr' → logprob: -5.753178596496582
    3. '           ' → logprob: -14.503178596496582
    4. '   ' → logprob: -15.753178596496582
    5. '	arr' → logprob: -16.253177642822266
    6. ' ' → logprob: -17.503177642822266
    7. '               ' → logprob: -17.628177642822266
    8. '(arr' → logprob: -18.003177642822266
    9. '       ' → logprob: -18.253177642822266
    10. '$arr' → logprob: -18.628177642822266

Token 347: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.240481914370321e-05
    2. 'a' → logprob: -9.875052452087402
    3. '[' → logprob: -14.875052452087402
    4. '```' → logprob: -15.125052452087402
    5. '][' → logprob: -15.250052452087402
    6. '(a' → logprob: -18.625051498413086
    7. ' a' → logprob: -18.875051498413086
    8. '   ' → logprob: -19.250051498413086
    9. '\[' → logprob: -19.375051498413086
    10. ')[' → logprob: -19.500051498413086

Token 348: '][' (ID: 2696)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.03410031646490097
    2. '][' → logprob: -3.409100294113159
    3. 'a' → logprob: -7.909100532531738
    4. '[' → logprob: -9.784100532531738
    5. '```' → logprob: -11.659100532531738
    6. '[b' → logprob: -11.784100532531738
    7. '   ' → logprob: -12.909100532531738
    8. ']' → logprob: -13.034100532531738
    9. '}[' → logprob: -13.284100532531738
    10. ')[' → logprob: -13.534100532531738

Token 349: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.339278580620885e-06
    2. ' b' → logprob: -13.000001907348633
    3. ')b' → logprob: -17.125001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '[b' → logprob: -19.875001907348633
    6. ')' → logprob: -19.875001907348633
    7. '	b' → logprob: -20.000001907348633
    8. '```' → logprob: -20.250001907348633
    9. ''b' → logprob: -20.500001907348633
    10. '%b' → logprob: -21.500001907348633

Token 350: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013355977134779096
    2. '])' → logprob: -6.626335620880127
    3. ' )' → logprob: -12.001335144042969
    4. ']' → logprob: -13.376335144042969
    5. ')%' → logprob: -14.251335144042969
    6. '   ' → logprob: -15.001335144042969
    7. '`)' → logprob: -15.376335144042969
    8. '）' → logprob: -15.501335144042969
    9. '})' → logprob: -16.12633514404297
    10. '))' → logprob: -16.25133514404297

Token 351: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0889766588807106
    2. ' %' → logprob: -2.4639766216278076
    3. ')' → logprob: -10.713976860046387
    4. ')%' → logprob: -11.713976860046387
    5. ' ' → logprob: -12.463976860046387
    6. '
' → logprob: -14.463976860046387
    7. '```' → logprob: -14.838976860046387
    8. ' ' → logprob: -14.963976860046387
    9. '[' → logprob: -15.213976860046387
    10. ']%' → logprob: -15.588976860046387

Token 352: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.339278580620885e-06
    2. ' MOD' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.125001907348633
    4. '_MOD' → logprob: -20.875001907348633
    5. '.MOD' → logprob: -22.500001907348633
    6. '```' → logprob: -22.500001907348633
    7. 'MO' → logprob: -22.625001907348633
    8. '
' → logprob: -23.250001907348633
    9. ' ' → logprob: -23.500001907348633
    10. '           ' → logprob: -23.875001907348633

Token 353: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.45848218582978e-06
    2. '   ' → logprob: -14.12500286102295
    3. ',' → logprob: -14.50000286102295
    4. 'multip' → logprob: -14.87500286102295
    5. '           ' → logprob: -15.12500286102295
    6. '
' → logprob: -15.37500286102295
    7. '      ' → logprob: -16.125001907348633
    8. '<|end|>' → logprob: -16.625001907348633
    9. 'mul' → logprob: -17.000001907348633
    10. '```' → logprob: -17.125001907348633

Token 354: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39775773882865906
    2. '       ' → logprob: -1.1477577686309814
    3. 'mul' → logprob: -4.897757530212402
    4. '           ' → logprob: -6.522757530212402
    5. '	m' → logprob: -7.772757530212402
    6. '    ' → logprob: -7.897757530212402
    7. ' mul' → logprob: -8.147757530212402
    8. '```' → logprob: -8.272757530212402
    9. '
' → logprob: -8.772757530212402
    10. '	   ' → logprob: -9.397757530212402

Token 355: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' (adapté à ' mul') → logprob: -0.08205724507570267
    2. '   ' → logprob: -2.582057237625122
    3. '       ' → logprob: -5.957057476043701
    4. ' mul' → logprob: -7.707057476043701
    5. 'multip' → logprob: -9.082056999206543
    6. '    ' → logprob: -12.957056999206543
    7. '  ' → logprob: -13.082056999206543
    8. '           ' → logprob: -13.582056999206543
    9. '	m' → logprob: -13.582056999206543
    10. 'mult' → logprob: -13.707056999206543

Token 356: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.31779739260673523
    2. '=' → logprob: -1.3177974224090576
    3. ' =' → logprob: -5.4427971839904785
    4. '=(' → logprob: -8.942797660827637
    5. ' *=' → logprob: -9.692797660827637
    6. '%=' → logprob: -12.942797660827637
    7. '*' → logprob: -13.192797660827637
    8. ' =(' → logprob: -14.567797660827637
    9. '.=' → logprob: -15.317797660827637
    10. '   ' → logprob: -16.06779670715332

Token 357: ' mul' (ID: 9975)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.0325924449716695e-05
    2. 'mul' → logprob: -12.75001049041748
    3. '(mult' → logprob: -12.87501049041748
    4. '(' → logprob: -13.12501049041748
    5. ' (' → logprob: -13.25001049041748
    6. '(mod' → logprob: -14.00001049041748
    7. '(mu' → logprob: -16.500009536743164
    8. '10' → logprob: -16.625009536743164
    9. '   ' → logprob: -17.375009536743164
    10. '(M' → logprob: -18.000009536743164

Token 358: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0006635877070948482
    2. ' *' → logprob: -7.375663757324219
    3. '*(' → logprob: -10.500663757324219
    4. '10' → logprob: -13.000663757324219
    5. '   ' → logprob: -13.125663757324219
    6. '*=' → logprob: -13.625663757324219
    7. '       ' → logprob: -14.375663757324219
    8. '           ' → logprob: -15.000663757324219
    9. '      ' → logprob: -15.125663757324219
    10. '          ' → logprob: -15.250663757324219

Token 359: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -17.0
    3. '(' → logprob: -17.625
    4. '   ' → logprob: -19.25
    5. 'pow' → logprob: -19.625
    6. '１０' → logprob: -19.875
    7. '100' → logprob: -20.125
    8. '```' → logprob: -20.375
    9. '    ' → logprob: -21.25
    10. '{' → logprob: -21.375

Token 360: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0052392068319022655
    2. ' %' → logprob: -5.255239009857178
    3. '13' → logprob: -12.755239486694336
    4. '%d' → logprob: -14.005239486694336
    5. '%i' → logprob: -15.130239486694336
    6. ')%' → logprob: -15.380239486694336
    7. '%s' → logprob: -15.630239486694336
    8. '%b' → logprob: -15.755239486694336
    9. '   ' → logprob: -15.880239486694336
    10. '%
' → logprob: -16.005239486694336

Token 361: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -17.25
    3. '013' → logprob: -17.25
    4. '```' → logprob: -17.875
    5. ' thirteen' → logprob: -19.125
    6. '۱۳' → logprob: -19.375
    7. '十三' → logprob: -19.5
    8. '
' → logprob: -19.75
    9. '   ' → logprob: -19.75
    10. '１３' → logprob: -19.875

Token 362: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005847377236932516
    2. '<|end|>' → logprob: -5.755847454071045
    3. 'print' → logprob: -6.255847454071045
    4. '    
' → logprob: -8.005846977233887
    5. '
' → logprob: -9.005846977233887
    6. '#' → logprob: -10.005846977233887
    7. '#print' → logprob: -10.005846977233887
    8. ')' → logprob: -10.130846977233887
    9. '```' → logprob: -10.380846977233887
    10. ',' → logprob: -11.005846977233887

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007649807259440422
    2. 'print' → logprob: -4.882649898529053
    3. 'return' → logprob: -10.507649421691895
    4. '    
' → logprob: -11.757649421691895
    5. '```' → logprob: -12.882649421691895
    6. '
' → logprob: -13.132649421691895
    7. '<|end|>' → logprob: -13.382649421691895
    8. ' print' → logprob: -14.257649421691895
    9. '       ' → logprob: -14.382649421691895
    10. '#print' → logprob: -15.507649421691895

Token 364: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01818517968058586
    2. '   ' → logprob: -4.018185138702393
    3. ' print' → logprob: -10.89318561553955
    4. '```' → logprob: -11.14318561553955
    5. '#print' → logprob: -13.51818561553955
    6. '	print' → logprob: -14.26818561553955
    7. 'return' → logprob: -16.768184661865234
    8. '``' → logprob: -17.143184661865234
    9. '-print' → logprob: -17.268184661865234
    10. '       ' → logprob: -17.893184661865234

Token 365: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10892371088266373
    2. ' =' → logprob: -2.3589236736297607
    3. '()' → logprob: -5.10892391204834
    4. '(' → logprob: -6.35892391204834
    5. '   ' → logprob: -8.10892391204834
    6. 'print' → logprob: -9.10892391204834
    7. '[' → logprob: -9.10892391204834
    8. '_' → logprob: -9.73392391204834
    9. '=[' → logprob: -10.10892391204834
    10. 's' → logprob: -10.23392391204834

Token 366: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.005234952084720135
    2. ' arr' → logprob: -5.255234718322754
    3. '   ' → logprob: -14.255234718322754
    4. '(arr' → logprob: -14.755234718322754
    5. '	arr' → logprob: -17.00523567199707
    6. 'str' → logprob: -17.75523567199707
    7. 'ans' → logprob: -17.88023567199707
    8. '[arr' → logprob: -18.25523567199707
    9. '$arr' → logprob: -18.25523567199707
    10. '_arr' → logprob: -18.63023567199707

Token 367: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.04363982379436493
    2. '[length' → logprob: -3.168639898300171
    3. '[len' → logprob: -7.418639659881592
    4. '][-' → logprob: -11.16864013671875
    5. 'length' → logprob: -11.79364013671875
    6. '[' → logprob: -11.79364013671875
    7. '   ' → logprob: -13.04364013671875
    8. '```' → logprob: -13.29364013671875
    9. '[:-' → logprob: -13.66864013671875
    10. '(length' → logprob: -13.66864013671875

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. '```' → logprob: -12.50001335144043
    3. ' ' → logprob: -13.00001335144043
    4. '   ' → logprob: -13.00001335144043
    5. '2' → logprob: -13.37501335144043
    6. '``' → logprob: -14.50001335144043
    7. '][' → logprob: -14.62501335144043
    8. '(' → logprob: -15.12501335144043
    9. '[' → logprob: -15.25001335144043
    10. '
' → logprob: -15.25001335144043

Token 369: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10023234039545059
    2. '[' → logprob: -2.3502323627471924
    3. '}[' → logprob: -11.850232124328613
    4. ']' → logprob: -11.850232124328613
    5. '>[' → logprob: -12.975232124328613
    6. ')[' → logprob: -12.975232124328613
    7. '"][' → logprob: -12.975232124328613
    8. ''][' → logprob: -13.975232124328613
    9. '0' → logprob: -14.100232124328613
    10. ' ][' → logprob: -14.350232124328613

Token 370: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.465036105713807e-06
    2. '   ' → logprob: -13.375007629394531
    3. '``' → logprob: -13.375007629394531
    4. '```' → logprob: -14.000007629394531
    5. '
' → logprob: -14.250007629394531
    6. '[' → logprob: -14.625007629394531
    7. '５' → logprob: -14.875007629394531
    8. '"' → logprob: -15.000007629394531
    9. '{' → logprob: -16.00000762939453
    10. '

' → logprob: -16.06250762939453

Token 371: ']%' (ID: 158002)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03820179030299187
    2. ']
' → logprob: -3.2882018089294434
    3. ']%' → logprob: -8.913201332092285
    4. '])' → logprob: -11.788201332092285
    5. '%' → logprob: -11.913201332092285
    6. ' ]' → logprob: -12.163201332092285
    7. ')' → logprob: -13.038201332092285
    8. '])
' → logprob: -13.538201332092285
    9. ']
' → logprob: -13.913201332092285
    10. ' ]
' → logprob: -14.913201332092285

Token 372: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.5776860184123507e-06
    2. ' MOD' → logprob: -13.50000286102295
    3. '(' → logprob: -13.75000286102295
    4. '_MOD' → logprob: -17.250001907348633
    5. '100' → logprob: -17.375001907348633
    6. 'MO' → logprob: -18.750001907348633
    7. '(M' → logprob: -19.375001907348633
    8. '.MOD' → logprob: -19.500001907348633
    9. '10' → logprob: -19.625001907348633
    10. '(Mod' → logprob: -20.750001907348633

Token 373: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005291630979627371
    2. 'print' → logprob: -5.25529146194458
    3. '	print' → logprob: -10.630291938781738
    4. '
' → logprob: -10.880291938781738
    5. ' print' → logprob: -11.630291938781738
    6. '```' → logprob: -12.255291938781738
    7. '    
' → logprob: -13.880291938781738
    8. '       ' → logprob: -17.380290985107422
    9. '   ' → logprob: -17.380290985107422
    10. '#print' → logprob: -17.880290985107422

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011979739181697369
    2. 'print' → logprob: -4.511979579925537
    3. '
' → logprob: -7.261979579925537
    4. '    
' → logprob: -9.386980056762695
    5. '	print' → logprob: -9.511980056762695
    6. ' print' → logprob: -10.386980056762695
    7. '```' → logprob: -10.386980056762695
    8. 'return' → logprob: -12.386980056762695
    9. '<|end|>' → logprob: -13.011980056762695
    10. '	return' → logprob: -13.636980056762695

Token 375: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02987995743751526
    2. '   ' → logprob: -3.5298800468444824
    3. 'return' → logprob: -9.654879570007324
    4. ' print' → logprob: -10.029879570007324
    5. '```' → logprob: -11.279879570007324
    6. '	print' → logprob: -11.904879570007324
    7. '    
' → logprob: -14.404879570007324
    8. ' return' → logprob: -14.904879570007324
    9. '<|end|>' → logprob: -15.154879570007324
    10. '
' → logprob: -15.279879570007324

Token 376: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -7.684157026233152e-05
    2. '(' → logprob: -9.500077247619629
    3. 'output' → logprob: -14.250077247619629
    4. '()' → logprob: -14.500077247619629
    5. ' (' → logprob: -14.625077247619629
    6. '(
' → logprob: -15.750077247619629
    7. '(Output' → logprob: -16.375076293945312
    8. '(input' → logprob: -16.750076293945312
    9. '(outputs' → logprob: -17.750076293945312
    10. '(out' → logprob: -17.875076293945312

Token 377: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -15.75
    3. ' )' → logprob: -18.0
    4. ')`' → logprob: -19.25
    5. '）' → logprob: -19.375
    6. '')' → logprob: -19.5
    7. '   ' → logprob: -19.625
    8. '}' → logprob: -20.0
    9. '`)' → logprob: -20.25
    10. '))' → logprob: -20.25

Token 378: 'if' (ID: 366)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.25751835107803345
    2. '<|end|>' → logprob: -1.6325182914733887
    3. 'if' → logprob: -3.7575182914733887
    4. '```' → logprob: -5.507518291473389
    5. ' solve' → logprob: -6.382518291473389
    6. '#' → logprob: -6.632518291473389
    7. '.solve' → logprob: -7.882518291473389
    8. '
' → logprob: -8.007518768310547
    9. '\' → logprob: -9.382518768310547
    10. '<|end|>' → logprob: -9.507518768310547

Token 379: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01417115144431591
    2. '__' → logprob: -4.264171123504639
    3. 'name' → logprob: -12.014171600341797
    4. ' ' → logprob: -14.389171600341797
    5. '_name' → logprob: -14.639171600341797
    6. ' ' → logprob: -15.764171600341797
    7. 'Name' → logprob: -16.014171600341797
    8. '___' → logprob: -16.139171600341797
    9. ' name' → logprob: -16.264171600341797
    10. '/__' → logprob: -17.764171600341797

Token 380: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10554251819849014
    2. ' ==' → logprob: -2.7305424213409424
    3. ' __' → logprob: -4.3555426597595215
    4. '==' → logprob: -4.3555426597595215
    5. 'name' → logprob: -4.8555426597595215
    6. '=="' → logprob: -7.8555426597595215
    7. '_name' → logprob: -7.9805426597595215
    8. '_' → logprob: -8.855542182922363
    9. '<|end|>' → logprob: -8.980542182922363
    10. '__":
' → logprob: -9.605542182922363

Token 381: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00013500562636181712
    2. '==' → logprob: -9.00013542175293
    3. ' ==' → logprob: -12.25013542175293
    4. '__.__' → logprob: -12.75013542175293
    5. '=="' → logprob: -12.75013542175293
    6. '___' → logprob: -15.62513542175293
    7. '=='' → logprob: -15.75013542175293
    8. '____' → logprob: -15.87513542175293
    9. '__
' → logprob: -15.87513542175293
    10. '__('' → logprob: -16.00013542175293

Token 382: '=='' (ID: 20651)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7299795746803284
    2. ' ==' → logprob: -1.2299795150756836
    3. '==' → logprob: -1.6049795150756836
    4. '=="' → logprob: -3.7299795150756836
    5. '=='' → logprob: -7.104979515075684
    6. '==
' → logprob: -10.229979515075684
    7. ' =="' → logprob: -11.729979515075684
    8. '__.__' → logprob: -12.104979515075684
    9. '_' → logprob: -12.229979515075684
    10. '___' → logprob: -12.479979515075684

Token 383: '__' (ID: 771)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2605285048484802
    2. '"' → logprob: -1.510528564453125
    3. '__' → logprob: -4.760528564453125
    4. ' "__' → logprob: -14.385528564453125
    5. 'main' → logprob: -14.510528564453125
    6. ' '__' → logprob: -15.260528564453125
    7. ' ' → logprob: -17.510528564453125
    8. '   ' → logprob: -17.635528564453125
    9. '_main' → logprob: -17.635528564453125
    10. ''s' → logprob: -17.885528564453125

Token 384: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.60414821645827e-06
    2. ''' → logprob: -13.250004768371582
    3. 'name' → logprob: -13.250004768371582
    4. '"' → logprob: -14.375004768371582
    5. ' main' → logprob: -15.500004768371582
    6. '_main' → logprob: -16.000003814697266
    7. '__' → logprob: -18.625003814697266
    8. '	main' → logprob: -19.000003814697266
    9. 'MAIN' → logprob: -19.000003814697266
    10. ''m' → logprob: -19.125003814697266

Token 385: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.34810277819633484
    2. ':' → logprob: -2.0981028079986572
    3. '__' → logprob: -2.2231028079986572
    4. ':
' → logprob: -3.8481028079986572
    5. '__:' → logprob: -3.8481028079986572
    6. '__":
' → logprob: -3.9731028079986572
    7. '():
' → logprob: -6.723102569580078
    8. '__
' → logprob: -9.848102569580078
    9. '_' → logprob: -9.848102569580078
    10. '```' → logprob: -9.973102569580078

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016506310552358627
    2. 'solve' → logprob: -4.141506195068359
    3. ' solve' → logprob: -8.26650619506836
    4. '```' → logprob: -9.26650619506836
    5. '.solve' → logprob: -9.39150619506836
    6. '    
' → logprob: -11.26650619506836
    7. '<|end|>' → logprob: -11.64150619506836
    8. '	s' → logprob: -12.39150619506836
    9. '>' → logprob: -12.89150619506836
    10. '
' → logprob: -13.01650619506836

Token 387: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' solve' → logprob: -15.125001907348633
    4. 'resolve' → logprob: -18.750001907348633
    5. '.solve' → logprob: -19.500001907348633
    6. 'import' → logprob: -21.875001907348633
    7. 'save' → logprob: -22.250001907348633
    8. '```' → logprob: -22.625001907348633
    9. '  ' → logprob: -23.125001907348633
    10. 'validate' → logprob: -23.875001907348633

Token 388: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 386
Tokens correctement prédits (1ère position, stricte): 172
Tokens correctement prédits (1ère position, avec adaptation): 184
Tokens correctement prédits (top 10): 329
Précision stricte (1ère position): 44.56%
Précision adaptée (1ère position): 47.67%
Précision (top 10): 85.23%
================================================================================
