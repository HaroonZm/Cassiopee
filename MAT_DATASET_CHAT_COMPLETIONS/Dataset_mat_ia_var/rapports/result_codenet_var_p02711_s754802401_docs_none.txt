================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = input()
flag = 0
for i in N:
    if i == '7':
        flag = 1
        print('Yes')
        break
if flag == 0:
    print('No')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032762219198048115
    2. '()' → logprob: -6.878276348114014
    3. '[' → logprob: -7.253276348114014
    4. '(
' → logprob: -7.753276348114014
    5. '.' → logprob: -7.878276348114014
    6. ''' → logprob: -8.128275871276855
    7. '"' → logprob: -8.878275871276855
    8. ')' → logprob: -10.003275871276855
    9. '('' → logprob: -10.128275871276855
    10. '```' → logprob: -10.378275871276855

Token 4: 'flag' (ID: 17665)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.31543344259262085
    2. '+' → logprob: -1.4404335021972656
    3. '=' → logprob: -4.315433502197266
    4. '*' → logprob: -5.315433502197266
    5. '#' → logprob: -5.440433502197266
    6. ')' → logprob: -6.065433502197266
    7. '(' → logprob: -6.440433502197266
    8. '.strip' → logprob: -6.440433502197266
    9. '[' → logprob: -6.690433502197266
    10. '```' → logprob: -7.315433502197266

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.621505081653595
    2. ' =' → logprob: -0.871505081653595
    3. '_' → logprob: -3.12150502204895
    4. ' ' → logprob: -8.371504783630371
    5. '_=' → logprob: -9.371504783630371
    6. ',' → logprob: -10.496504783630371
    7. '[' → logprob: -11.246504783630371
    8. ')' → logprob: -11.246504783630371
    9. ' _' → logprob: -11.371504783630371
    10. 's' → logprob: -11.496504783630371

Token 6: ' ' (ID: 220)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.4627012610435486
    2. 'False' → logprob: -1.4627013206481934
    3. ' True' → logprob: -2.0877013206481934
    4. 'True' → logprob: -4.837701320648193
    5. ' ' → logprob: -5.212701320648193
    6. '0' → logprob: -7.212701320648193
    7. '"' → logprob: -8.337700843811035
    8. ''' → logprob: -8.587700843811035
    9. ' "' → logprob: -9.337700843811035
    10. ' '' → logprob: -9.712700843811035

Token 7: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.11671736091375351
    2. 'True' → logprob: -2.2417173385620117
    3. '0' → logprob: -6.116717338562012
    4. ' False' → logprob: -7.366717338562012
    5. '""' → logprob: -8.241717338562012
    6. ' True' → logprob: -8.366717338562012
    7. '''' → logprob: -8.491717338562012
    8. 'N' → logprob: -9.241717338562012
    9. 'int' → logprob: -9.241717338562012
    10. '1' → logprob: -9.991717338562012

Token 8: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10368909686803818
    2. 'for' → logprob: -3.728689193725586
    3. '\n' → logprob: -3.853689193725586
    4. ' for' → logprob: -3.853689193725586
    5. ' 
' → logprob: -4.603689193725586
    6. ' if' → logprob: -5.353689193725586
    7. 'if' → logprob: -5.478689193725586
    8. '```' → logprob: -5.478689193725586
    9. '<|end|>' → logprob: -5.603689193725586
    10. '' → logprob: -6.478689193725586

Token 9: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5179539322853088
    2. '\n' → logprob: -2.017953872680664
    3. 'if' → logprob: -2.267953872680664
    4. '
' → logprob: -2.392953872680664
    5. ' for' → logprob: -3.517953872680664
    6. '```' → logprob: -4.267953872680664
    7. ' if' → logprob: -4.642953872680664
    8. '' → logprob: -5.017953872680664
    9. 'i' → logprob: -5.517953872680664
    10. '\' → logprob: -5.642953872680664

Token 10: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12310511618852615
    2. '  ' → logprob: -2.248105049133301
    3. ' i' → logprob: -4.623105049133301
    4. 'i' → logprob: -8.7481050491333
    5. ' )' → logprob: -9.8731050491333
    6. ' N' → logprob: -10.1231050491333
    7. ' ‌' → logprob: -10.4981050491333
    8. ')' → logprob: -11.2481050491333
    9. ' ```' → logprob: -11.2481050491333
    10. '```' → logprob: -11.4981050491333

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14120998978614807
    2. 'in' → logprob: -2.3912100791931152
    3. ' ' → logprob: -3.2662100791931152
    4. '  ' → logprob: -7.641210079193115
    5. ')' → logprob: -8.391209602355957
    6. 'space' → logprob: -8.641209602355957
    7. '_' → logprob: -8.766209602355957
    8. ',' → logprob: -9.016209602355957
    9. '(' → logprob: -9.266209602355957
    10. 'range' → logprob: -9.391209602355957

Token 12: ' N' (ID: 478)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01885688677430153
    2. 'range' → logprob: -4.018857002258301
    3. ' ' → logprob: -7.268857002258301
    4. ' N' → logprob: -12.6438570022583
    5. '	range' → logprob: -13.6438570022583
    6. '(range' → logprob: -14.0188570022583
    7. '  ' → logprob: -14.0188570022583
    8. ' xrange' → logprob: -14.2688570022583
    9. ' in' → logprob: -14.3938570022583
    10. '"' → logprob: -14.6438570022583

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5890666842460632
    2. '[' → logprob: -1.089066743850708
    3. ' in' → logprob: -2.839066743850708
    4. '[:]' → logprob: -3.839066743850708
    5. '[:' → logprob: -4.464066505432129
    6. '[]' → logprob: -5.464066505432129
    7. 'in' → logprob: -5.589066505432129
    8. ' :' → logprob: -6.089066505432129
    9. '.' → logprob: -6.464066505432129
    10. ''' → logprob: -6.839066505432129

Token 14: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3400062024593353
    2. '   ' → logprob: -1.8400062322616577
    3. ' ' → logprob: -2.840006113052368
    4. ' if' → logprob: -2.965006113052368
    5. 'if' → logprob: -4.465006351470947
    6. ' :' → logprob: -5.465006351470947
    7. '  ' → logprob: -6.340006351470947
    8. '```' → logprob: -7.340006351470947
    9. '    ' → logprob: -7.965006351470947
    10. ' =' → logprob: -9.090005874633789

Token 15: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2506582736968994
    2. 'if' (adapté à ' if') → logprob: -1.7506582736968994
    3. ' ' → logprob: -3.8756582736968994
    4. '   ' → logprob: -4.25065803527832
    5. 'i' → logprob: -4.75065803527832
    6. ' i' → logprob: -5.87565803527832
    7. '    ' → logprob: -7.62565803527832
    8. '```' → logprob: -8.00065803527832
    9. '  ' → logprob: -8.12565803527832
    10. '_' → logprob: -9.62565803527832

Token 16: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08320803940296173
    2. ' ' → logprob: -2.9582080841064453
    3. 'i' → logprob: -3.7082080841064453
    4. ' not' → logprob: -6.083208084106445
    5. ' int' → logprob: -7.083208084106445
    6. '  ' → logprob: -9.708208084106445
    7. 'int' → logprob: -9.833208084106445
    8. ' '' → logprob: -10.333208084106445
    9. ''' → logprob: -10.458208084106445
    10. '(i' → logprob: -10.958208084106445

Token 17: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6039121150970459
    2. '==' → logprob: -0.8539121150970459
    3. ' in' → logprob: -4.228912353515625
    4. '.is' → logprob: -5.853912353515625
    5. '=='' → logprob: -5.978912353515625
    6. '.' → logprob: -6.103912353515625
    7. '=' → logprob: -6.478912353515625
    8. 'isdigit' → logprob: -6.728912353515625
    9. '=="' → logprob: -7.228912353515625
    10. ' =='' → logprob: -8.228912353515625

Token 18: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1623665690422058
    2. '"' → logprob: -2.0373666286468506
    3. ' '' → logprob: -4.4123663902282715
    4. ' ' → logprob: -6.1623663902282715
    5. ''a' → logprob: -6.4123663902282715
    6. ' "' → logprob: -6.9123663902282715
    7. ''-' → logprob: -7.7873663902282715
    8. ''N' → logprob: -8.03736686706543
    9. ''i' → logprob: -8.53736686706543
    10. 'a' → logprob: -9.03736686706543

Token 19: '7' (ID: 22)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7332632541656494
    2. '4' → logprob: -2.1082632541656494
    3. '-' → logprob: -2.2332632541656494
    4. '7' → logprob: -2.7332632541656494
    5. ' ':' → logprob: -2.9832632541656494
    6. '1' → logprob: -3.6082632541656494
    7. ''' → logprob: -3.7332632541656494
    8. '9' → logprob: -3.8582632541656494
    9. 'a' → logprob: -4.23326301574707
    10. '.' → logprob: -4.23326301574707

Token 20: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.013423381373286247
    2. ''' → logprob: -4.638423442840576
    3. '':
' → logprob: -6.138423442840576
    4. ':' → logprob: -6.888423442840576
    5. '7' → logprob: -9.013422966003418
    6. '':
' → logprob: -9.138422966003418
    7. ' ':' → logprob: -9.388422966003418
    8. '0' → logprob: -9.638422966003418
    9. ' '' → logprob: -10.388422966003418
    10. ''or' → logprob: -11.763422966003418

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002890705829486251
    2. '<|end|>' → logprob: -6.377890586853027
    3. ' flag' → logprob: -7.877890586853027
    4. 'flag' → logprob: -8.127890586853027
    5. '   ' → logprob: -8.377890586853027
    6. ' ' → logprob: -9.377890586853027
    7. '<|end|>' → logprob: -10.377890586853027
    8. '      ' → logprob: -10.377890586853027
    9. '	flag' → logprob: -10.752890586853027
    10. '```' → logprob: -11.127890586853027

Token 22: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.6976518034934998
    2. 'flag' (adapté à ' flag') → logprob: -0.6976518034934998
    3. '       ' → logprob: -6.0726518630981445
    4. '   ' → logprob: -6.5726518630981445
    5. '	flag' → logprob: -7.5726518630981445
    6. '```' → logprob: -9.822651863098145
    7. ' ' → logprob: -9.947651863098145
    8. '_flag' → logprob: -10.197651863098145
    9. '<|end|>' → logprob: -10.572651863098145
    10. '    ' → logprob: -10.697651863098145

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38719668984413147
    2. ' =' → logprob: -1.137196660041809
    3. ' +=' → logprob: -8.38719654083252
    4. '+=' → logprob: -9.26219654083252
    5. ' ' → logprob: -13.13719654083252
    6. '+' → logprob: -15.01219654083252
    7. '=True' → logprob: -16.012197494506836
    8. ' |=' → logprob: -16.137197494506836
    9. '＝' → logprob: -16.262197494506836
    10. ' ==' → logprob: -16.387197494506836

Token 24: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08894513547420502
    2. ' ' → logprob: -2.463945150375366
    3. ' True' → logprob: -12.338945388793945
    4. '   ' → logprob: -14.463945388793945
    5. 'True' → logprob: -14.963945388793945
    6. ' ' → logprob: -15.713945388793945
    7. '    ' → logprob: -15.838945388793945
    8. '7' → logprob: -16.838945388793945
    9. '+' → logprob: -17.276445388793945
    10. '0' → logprob: -17.526445388793945

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020938136731274426
    2. ' ' → logprob: -8.62520980834961
    3. '7' → logprob: -10.50020980834961
    4. 'True' → logprob: -14.37520980834961
    5. '0' → logprob: -14.68770980834961
    6. '   ' → logprob: -15.31270980834961
    7. '+' → logprob: -15.68770980834961
    8. ' True' → logprob: -15.81270980834961
    9. '2' → logprob: -15.87520980834961
    10. '  ' → logprob: -16.37520980834961

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6477928161621094
    2. '       ' → logprob: -1.0227928161621094
    3. ' 
' → logprob: -3.0227928161621094
    4. '        
' → logprob: -3.2727928161621094
    5. '    
' → logprob: -5.522792816162109
    6. '\n' → logprob: -5.522792816162109
    7. '        ' → logprob: -5.522792816162109
    8. 'print' → logprob: -5.772792816162109
    9. '  
' → logprob: -6.022792816162109
    10. '           ' → logprob: -6.147792816162109

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5469991564750671
    2. '
' → logprob: -1.671999216079712
    3. '   ' → logprob: -3.046999216079712
    4. '```' → logprob: -3.296999216079712
    5. '\n' → logprob: -3.421999216079712
    6. 'print' → logprob: -3.796999216079712
    7. '        
' → logprob: -3.921999216079712
    8. '    
' → logprob: -4.046998977661133
    9. ' 
' → logprob: -4.296998977661133
    10. 'if' → logprob: -4.421998977661133

Token 28: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018399098189547658
    2. '   ' → logprob: -9.625184059143066
    3. '        ' → logprob: -10.375184059143066
    4. '	' → logprob: -10.875184059143066
    5. '           ' → logprob: -11.625184059143066
    6. '    ' → logprob: -11.625184059143066
    7. '```' → logprob: -11.750184059143066
    8. '      ' → logprob: -11.875184059143066
    9. '\t' → logprob: -12.000184059143066
    10. '	break' → logprob: -12.375184059143066

Token 29: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.37682443857192993
    2. '('' → logprob: -1.5018243789672852
    3. '(' → logprob: -2.626824378967285
    4. '(i' → logprob: -4.001824378967285
    5. '(True' → logprob: -7.501824378967285
    6. '(":' → logprob: -10.376824378967285
    7. '()' → logprob: -11.126824378967285
    8. '"' → logprob: -11.251824378967285
    9. ' ("' → logprob: -12.126824378967285
    10. '(int' → logprob: -12.251824378967285

Token 30: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.03248777613043785
    2. 'YES' → logprob: -3.5324878692626953
    3. ' Yes' → logprob: -6.532487869262695
    4. 'yes' → logprob: -8.407487869262695
    5. 'True' → logprob: -8.657487869262695
    6. 'Lucky' → logprob: -8.782487869262695
    7. ' yes' → logprob: -9.282487869262695
    8. 'Good' → logprob: -9.407487869262695
    9. 'Boom' → logprob: -9.532487869262695
    10. '777' → logprob: -9.907487869262695

Token 31: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.6896302700042725
    2. '')' → logprob: -1.0646302700042725
    3. '       ' → logprob: -2.0646302700042725
    4. ')' → logprob: -3.9396302700042725
    5. ')
' → logprob: -5.064630508422852
    6. '')
' → logprob: -7.689630508422852
    7. '           ' → logprob: -9.064630508422852
    8. '   ' → logprob: -9.564630508422852
    9. ')')
' → logprob: -11.064630508422852
    10. '")' → logprob: -11.439630508422852

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.558399319241289e-05
    2. '   ' → logprob: -11.250025749206543
    3. '```' → logprob: -12.500025749206543
    4. '<|end|>' → logprob: -12.625025749206543
    5. '	' → logprob: -13.375025749206543
    6. ' ' → logprob: -13.500025749206543
    7. '           ' → logprob: -14.375025749206543
    8. ',' → logprob: -15.000025749206543
    9. '      ' → logprob: -15.250025749206543
    10. '        
' → logprob: -15.875025749206543

Token 33: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.6895233531831764e-05
    2. '   ' → logprob: -11.87502670288086
    3. ' break' → logprob: -12.00002670288086
    4. '	' → logprob: -12.62502670288086
    5. ' ' → logprob: -13.12502670288086
    6. 'break' (adapté à ' break') → logprob: -13.12502670288086
    7. '```' → logprob: -13.37502670288086
    8. '	break' → logprob: -13.62502670288086
    9. '
' → logprob: -14.37502670288086
    10. '      ' → logprob: -14.50002670288086

Token 34: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02525540068745613
    2. 'if' → logprob: -3.7752554416656494
    3. '```' → logprob: -6.65025520324707
    4. '
' → logprob: -8.02525520324707
    5. ' else' → logprob: -8.15025520324707
    6. '<|end|>' → logprob: -10.40025520324707
    7. '    
' → logprob: -10.77525520324707
    8. 'If' → logprob: -11.40025520324707
    9. '  
' → logprob: -12.02525520324707
    10. ' if' → logprob: -12.27525520324707

Token 35: 'if' (ID: 366)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0011089015752077103
    2. 'if' → logprob: -7.2511091232299805
    3. '```' → logprob: -8.25110912322998
    4. ' else' → logprob: -9.00110912322998
    5. '
' → logprob: -12.12610912322998
    6. '    
' → logprob: -12.87610912322998
    7. '  
' → logprob: -13.62610912322998
    8. '``' → logprob: -13.75110912322998
    9. '<|end|>' → logprob: -14.12610912322998
    10. '   ' → logprob: -14.25110912322998

Token 36: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.027747098356485367
    2. ' not' → logprob: -3.65274715423584
    3. 'flag' → logprob: -6.65274715423584
    4. ' ' → logprob: -9.40274715423584
    5. 'not' → logprob: -10.15274715423584
    6. ' ' → logprob: -10.65274715423584
    7. '(flag' → logprob: -12.02774715423584
    8. '	flag' → logprob: -12.77774715423584
    9. '.flag' → logprob: -15.15274715423584
    10. '_flag' → logprob: -15.52774715423584

Token 37: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.055386342108249664
    2. '==' → logprob: -2.9303863048553467
    3. ' !=' → logprob: -7.805386543273926
    4. ':' → logprob: -10.305386543273926
    5. '!=' → logprob: -10.430386543273926
    6. ' ' → logprob: -11.180386543273926
    7. '=' → logprob: -11.930386543273926
    8. ' =' → logprob: -12.180386543273926
    9. 'else' → logprob: -13.930386543273926
    10. ' else' → logprob: -13.930386543273926

Token 38: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06211881712079048
    2. ' ' → logprob: -2.8121187686920166
    3. '1' → logprob: -8.812118530273438
    4. '   ' → logprob: -13.687118530273438
    5. '```' → logprob: -15.562118530273438
    6. '=' → logprob: -15.687118530273438
    7. '  ' → logprob: -15.749618530273438
    8. '==' → logprob: -16.437118530273438
    9. '۰' → logprob: -16.499618530273438
    10. '０' → logprob: -17.062118530273438

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022002172190696
    2. ' ' → logprob: -6.127200126647949
    3. '1' → logprob: -11.25220012664795
    4. '   ' → logprob: -14.75220012664795
    5. '  ' → logprob: -15.12720012664795
    6. '    ' → logprob: -15.87720012664795
    7. '۰' → logprob: -15.87720012664795
    8. '```' → logprob: -16.064701080322266
    9. '０' → logprob: -16.502201080322266
    10. '=' → logprob: -16.502201080322266

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013305948814377189
    2. ':
' → logprob: -6.626330375671387
    3. '   ' → logprob: -12.501330375671387
    4. ' :' → logprob: -14.626330375671387
    5. 'print' → logprob: -15.251330375671387
    6. ':

' → logprob: -16.376331329345703
    7. '):' → logprob: -17.126331329345703
    8. ':
' → logprob: -17.126331329345703
    9. ' :
' → logprob: -17.626331329345703
    10. ':**' → logprob: -17.876331329345703

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05534381419420242
    2. 'print' → logprob: -3.1803438663482666
    3. ' print' → logprob: -4.4303436279296875
    4. '       ' → logprob: -8.680343627929688
    5. '```' → logprob: -8.680343627929688
    6. '	print' → logprob: -11.305343627929688
    7. '``' → logprob: -13.055343627929688
    8. '<|end|>' → logprob: -13.805343627929688
    9. ' ' → logprob: -13.930343627929688
    10. '    ' → logprob: -13.930343627929688

Token 42: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.93710636976175e-05
    2. ' print' → logprob: -9.250099182128906
    3. '   ' → logprob: -12.750099182128906
    4. '	print' → logprob: -15.750099182128906
    5. '```' → logprob: -15.750099182128906
    6. ' ' → logprob: -19.250099182128906
    7. 'Print' → logprob: -19.375099182128906
    8. '.print' → logprob: -21.000099182128906
    9. '  ' → logprob: -21.250099182128906
    10. '``' → logprob: -21.500099182128906

Token 43: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01815216802060604
    2. '(' → logprob: -4.018152236938477
    3. '()' → logprob: -13.768152236938477
    4. '("' → logprob: -13.893152236938477
    5. '(False' → logprob: -16.768152236938477
    6. ' ('' → logprob: -17.018152236938477
    7. '(('' → logprob: -17.393152236938477
    8. '(No' → logprob: -17.518152236938477
    9. '(\'' → logprob: -17.643152236938477
    10. '(None' → logprob: -18.018152236938477

Token 44: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.10022295266389847
    2. ''' → logprob: -2.3502230644226074
    3. '"No' → logprob: -11.47522258758545
    4. ' No' → logprob: -12.97522258758545
    5. '('' → logprob: -12.97522258758545
    6. 'NO' → logprob: -14.85022258758545
    7. '(No' → logprob: -15.22522258758545
    8. '`' → logprob: -16.100223541259766
    9. '')' → logprob: -16.475223541259766
    10. ''N' → logprob: -16.600223541259766

Token 45: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.061970822513103485
    2. ')' → logprob: -2.8119707107543945
    3. '")' → logprob: -13.186970710754395
    4. ''' → logprob: -14.311970710754395
    5. '`)' → logprob: -14.686970710754395
    6. '')
' → logprob: -16.06197166442871
    7. '’)' → logprob: -16.68697166442871
    8. '}')' → logprob: -16.93697166442871
    9. '```' → logprob: -17.31197166442871
    10. ')'' → logprob: -17.68697166442871


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 43
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 48.84%
Précision adaptée (1ère position): 51.16%
Précision (top 10): 90.70%
================================================================================
