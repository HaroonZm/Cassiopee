================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class DivisorGenerator:
    def __init__(self):
        pass
    def __call__(self, num):
        res = set()
        idx = 1
        while idx * idx <= num:
            if num % idx == 0:
                res.add(idx)
                res.add(num // idx)
            idx += 1
        return sorted(list(res))

def f(n):
    def get_d(n):  # Nested function, just for diversity
        return DivisorGenerator()(n)
    r, i = 0, 0
    for d in get_d(n):
        v = n // d - 1
        if v:
            if not n % v - n // v:
                r += v
        i += 1  # Unused var, stylistic
    return r

N=int(input())
print(f(N))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Div' (ID: 12302)
  → Token d'amorce (pas de prédiction)

Token 2: 'isor' (ID: 65473)
  → Token d'amorce (pas de prédiction)

Token 3: 'Generator' (ID: 14802)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46187037229537964
    2. ':' → logprob: -1.0868704319000244
    3. '{' → logprob: -3.4618704319000244
    4. '.' → logprob: -7.336870193481445
    5. '(:' → logprob: -8.336870193481445
    6. '```' → logprob: -9.586870193481445
    7. ' {' → logprob: -9.836870193481445
    8. ' :' → logprob: -9.961870193481445
    9. '():' → logprob: -10.211870193481445
    10. 's' → logprob: -10.336870193481445

Token 4: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3233044743537903
    2. ':' → logprob: -1.3233044147491455
    3. '{' → logprob: -4.823304653167725
    4. '.' → logprob: -6.698304653167725
    5. '(:' → logprob: -7.573304653167725
    6. '():' → logprob: -9.573304176330566
    7. '[' → logprob: -9.948304176330566
    8. '```' → logprob: -10.448304176330566
    9. '({' → logprob: -11.573304176330566
    10. '(
' → logprob: -11.823304176330566

Token 5: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15494106709957123
    2. ':' → logprob: -2.0299410820007324
    3. '```' → logprob: -4.904941082000732
    4. '(
' → logprob: -6.029941082000732
    5. ':
' → logprob: -7.154941082000732
    6. '   ' → logprob: -7.154941082000732
    7. '():' → logprob: -8.404940605163574
    8. ''' → logprob: -9.279940605163574
    9. '.' → logprob: -9.404940605163574
    10. '()' → logprob: -9.654940605163574

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7776579856872559
    2. '```' → logprob: -0.9026579856872559
    3. ':' → logprob: -3.027657985687256
    4. '(' → logprob: -3.277657985687256
    5. '\' → logprob: -4.152657985687256
    6. ''' → logprob: -4.902657985687256
    7. ' ' → logprob: -5.402657985687256
    8. '`' → logprob: -5.652657985687256
    9. '<|end|>' → logprob: -5.652657985687256
    10. '``' → logprob: -6.152657985687256

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12263692915439606
    2. ' __' → logprob: -2.8726370334625244
    3. '__' → logprob: -3.1226370334625244
    4. '  ' → logprob: -5.122636795043945
    5. ''' → logprob: -6.622636795043945
    6. 'generate' → logprob: -6.872636795043945
    7. ' ' → logprob: -6.997636795043945
    8. '_' → logprob: -6.997636795043945
    9. ' generate' → logprob: -7.122636795043945
    10. '"' → logprob: -7.372636795043945

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.429896944202483e-05
    2. ' init' → logprob: -10.250043869018555
    3. '_init' → logprob: -11.750043869018555
    4. 'ini' → logprob: -14.500043869018555
    5. 'in' → logprob: -15.750043869018555
    6. 'iter' → logprob: -16.125043869018555
    7. '	init' → logprob: -16.625043869018555
    8. 'i' → logprob: -16.750043869018555
    9. 'int' → logprob: -16.875043869018555
    10. '_i' → logprob: -17.375043869018555

Token 9: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3369850814342499
    2. '__(' → logprob: -1.7119851112365723
    3. '(self' → logprob: -3.2119851112365723
    4. '__' → logprob: -3.3369851112365723
    5. ' (' → logprob: -4.086985111236572
    6. '<|end|>' → logprob: -5.461985111236572
    7. '_' → logprob: -5.961985111236572
    8. '__(
' → logprob: -5.961985111236572
    9. '__((' → logprob: -7.086985111236572
    10. 'self' → logprob: -7.836985111236572

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01421745028346777
    2. ' self' → logprob: -4.264217376708984
    3. ')' → logprob: -10.514217376708984
    4. '(self' → logprob: -11.264217376708984
    5. ' )' → logprob: -12.514217376708984
    6. ' ' → logprob: -12.514217376708984
    7. '	self' → logprob: -13.514217376708984
    8. ' ' → logprob: -14.264217376708984
    9. '_self' → logprob: -14.389217376708984
    10. '*self' → logprob: -14.389217376708984

Token 11: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09794794023036957
    2. ')' → logprob: -2.972947835922241
    3. '_' → logprob: -4.22294807434082
    4. 'self' → logprob: -5.09794807434082
    5. '):' → logprob: -5.22294807434082
    6. ' ,' → logprob: -5.59794807434082
    7. '(' → logprob: -5.72294807434082
    8. '<|end|>' → logprob: -6.09794807434082
    9. ' )' → logprob: -6.34794807434082
    10. '.' → logprob: -6.34794807434082

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00973188690841198
    2. 'self' → logprob: -5.759731769561768
    3. '(' → logprob: -6.259731769561768
    4. '```' → logprob: -6.884731769561768
    5. '   ' → logprob: -7.384731769561768
    6. '(self' → logprob: -7.634731769561768
    7. '    ' → logprob: -8.009732246398926
    8. '        
' → logprob: -8.134732246398926
    9. '(n' → logprob: -8.384732246398926
    10. '        ' → logprob: -8.759732246398926

Token 13: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7118675708770752
    2. 'self' → logprob: -0.7118675708770752
    3. 'pass' (adapté à ' pass') → logprob: -4.461867332458496
    4. ' self' → logprob: -5.961867332458496
    5. '   ' → logprob: -6.211867332458496
    6. ' pass' → logprob: -7.086867332458496
    7. '<|end|>' → logprob: -7.336867332458496
    8. ' ' → logprob: -8.461867332458496
    9. '```' → logprob: -9.086867332458496
    10. '           ' → logprob: -9.086867332458496

Token 14: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7813332080841064
    2. '\' → logprob: -1.5313332080841064
    3. '\n' → logprob: -2.0313332080841064
    4. ':' → logprob: -2.2813332080841064
    5. '    
' → logprob: -3.7813332080841064
    6. '<|end|>' → logprob: -4.031332969665527
    7. '```' → logprob: -4.031332969665527
    8. '
' → logprob: -4.906332969665527
    9. '    ' → logprob: -5.156332969665527
    10. ' ' → logprob: -5.281332969665527

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07153980433940887
    2. '<|end|>' → logprob: -4.196539878845215
    3. '\' → logprob: -4.446539878845215
    4. ':' → logprob: -4.446539878845215
    5. '    
' → logprob: -4.821539878845215
    6. '\n' → logprob: -4.946539878845215
    7. '
' → logprob: -5.321539878845215
    8. '```' → logprob: -5.321539878845215
    9. ' ' → logprob: -7.071539878845215
    10. '  
' → logprob: -7.571539878845215

Token 16: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026099633425474167
    2. '\' → logprob: -4.151099681854248
    3. '```' → logprob: -5.651099681854248
    4. '\n' → logprob: -6.401099681854248
    5. ' ' → logprob: -7.026099681854248
    6. '    ' → logprob: -7.151099681854248
    7. '    
' → logprob: -7.276099681854248
    8. ' def' → logprob: -7.401099681854248
    9. '       ' → logprob: -7.776099681854248
    10. '  ' → logprob: -8.77609920501709

Token 17: ' __' (ID: 2516)
  Prédit: ' generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.35414332151412964
    2. ' get' → logprob: -1.8541433811187744
    3. ' ' → logprob: -2.7291433811187744
    4. ' find' → logprob: -3.4791433811187744
    5. ' space' → logprob: -4.104143142700195
    6. ' calculate' → logprob: -4.604143142700195
    7. '_' → logprob: -4.854143142700195
    8. ' create' → logprob: -6.104143142700195
    9. ' iterate' → logprob: -6.229143142700195
    10. ' compute' → logprob: -6.729143142700195

Token 18: 'call' (ID: 9925)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.856408536899835e-05
    2. 'i' → logprob: -11.375028610229492
    3. '_init' → logprob: -12.000028610229492
    4. ' init' → logprob: -12.125028610229492
    5. 'call' → logprob: -13.250028610229492
    6. 'iter' → logprob: -13.500028610229492
    7. 'ini' → logprob: -14.000028610229492
    8. '_i' → logprob: -14.375028610229492
    9. '_' → logprob: -14.875028610229492
    10. 'in' → logprob: -15.000028610229492

Token 19: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.660599410533905
    2. '__' → logprob: -0.785599410533905
    3. '(' → logprob: -3.66059947013855
    4. '_' → logprob: -7.035599231719971
    5. '__(
' → logprob: -7.910599231719971
    6. '__((' → logprob: -8.160599708557129
    7. '__('' → logprob: -8.410599708557129
    8. '_(' → logprob: -9.285599708557129
    9. '__(*' → logprob: -11.285599708557129
    10. '(self' → logprob: -11.535599708557129

Token 20: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00476700346916914
    2. ' self' → logprob: -5.379766941070557
    3. 'n' → logprob: -9.004767417907715
    4. ')' → logprob: -11.879767417907715
    5. 'number' → logprob: -11.879767417907715
    6. 's' → logprob: -12.379767417907715
    7. ' n' → logprob: -13.379767417907715
    8. 'x' → logprob: -14.129767417907715
    9. 'num' → logprob: -14.254767417907715
    10. ' ' → logprob: -14.379767417907715

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005165566224604845
    2. '):' → logprob: -6.0051655769348145
    3. ' ,' → logprob: -6.5051655769348145
    4. ')' → logprob: -6.8801655769348145
    5. 'self' → logprob: -9.505165100097656
    6. 's' → logprob: -10.880165100097656
    7. ' ):' → logprob: -10.880165100097656
    8. ' )' → logprob: -11.505165100097656
    9. ' ' → logprob: -12.005165100097656
    10. ':' → logprob: -12.380165100097656

Token 22: ' num' (ID: 2269)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.21314319968223572
    2. 'n' → logprob: -2.0881431102752686
    3. ' number' → logprob: -2.9631431102752686
    4. ' self' → logprob: -4.838143348693848
    5. 'number' → logprob: -5.088143348693848
    6. 'self' → logprob: -6.713143348693848
    7. ' num' → logprob: -7.463143348693848
    8. 'num' → logprob: -9.088143348693848
    9. ' numbers' → logprob: -9.213143348693848
    10. ' )' → logprob: -9.338143348693848

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005579506512731314
    2. ')' → logprob: -5.380579471588135
    3. ':' → logprob: -7.005579471588135
    4. ' ):' → logprob: -11.005579948425293
    5. ',' → logprob: -11.130579948425293
    6. '):
' → logprob: -11.880579948425293
    7. ' :' → logprob: -12.630579948425293
    8. 's' → logprob: -12.880579948425293
    9. '_' → logprob: -12.880579948425293
    10. '=' → logprob: -13.505579948425293

Token 24: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017342928797006607
    2. ' :' → logprob: -4.892343044281006
    3. '       ' → logprob: -5.392343044281006
    4. ':
' → logprob: -5.517343044281006
    5. '    ' → logprob: -7.642343044281006
    6. ' ' → logprob: -9.267342567443848
    7. '   ' → logprob: -9.642342567443848
    8. ':return' → logprob: -9.642342567443848
    9. ' :
' → logprob: -9.767342567443848
    10. '\' → logprob: -10.142342567443848

Token 25: ' res' (ID: 694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0426274538040161
    2. 'd' → logprob: -1.1676274538040161
    3. ' ' → logprob: -2.4176273345947266
    4. 'r' → logprob: -2.9176273345947266
    5. '   ' → logprob: -3.4176273345947266
    6. '    ' → logprob: -3.6676273345947266
    7. ':' → logprob: -3.6676273345947266
    8. '[' → logprob: -3.6676273345947266
    9. 'n' → logprob: -4.167627334594727
    10. 's' → logprob: -4.292627334594727

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27492618560791016
    2. ' =' → logprob: -1.6499261856079102
    3. '.' → logprob: -3.64992618560791
    4. 'u' → logprob: -4.39992618560791
    5. 'ult' → logprob: -5.77492618560791
    6. '[' → logprob: -6.27492618560791
    7. 's' → logprob: -6.39992618560791
    8. 't' → logprob: -7.52492618560791
    9. 'ul' → logprob: -7.77492618560791
    10. '[:]' → logprob: -7.77492618560791

Token 27: ' set' (ID: 920)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0062982309609651566
    2. '[]' → logprob: -5.131298065185547
    3. ' [' → logprob: -8.631298065185547
    4. ' ' → logprob: -8.756298065185547
    5. '[' → logprob: -10.506298065185547
    6. ' set' → logprob: -12.631298065185547
    7. ' []
' → logprob: -13.506298065185547
    8. ' ' → logprob: -15.256298065185547
    9. ' [],' → logprob: -15.381298065185547
    10. ' []

' → logprob: -15.381298065185547

Token 28: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024517537094652653
    2. '()' → logprob: -6.1274518966674805
    3. '([' → logprob: -8.75245189666748
    4. '(range' → logprob: -9.75245189666748
    5. '<|end|>' → logprob: -11.00245189666748
    6. '((' → logprob: -11.75245189666748
    7. '([(' → logprob: -12.50245189666748
    8. '([]' → logprob: -12.50245189666748
    9. ' (' → logprob: -13.00245189666748
    10. '([...' → logprob: -13.12745189666748

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018243711441755295
    2. ':' → logprob: -4.768243789672852
    3. '   ' → logprob: -5.893243789672852
    4. ' ' → logprob: -6.143243789672852
    5. ' for' → logprob: -7.143243789672852
    6. '        
' → logprob: -7.143243789672852
    7. ':
' → logprob: -7.268243789672852
    8. '\' → logprob: -7.768243789672852
    9. '<|end|>' → logprob: -8.018243789672852
    10. ',' → logprob: -8.018243789672852

Token 30: ' idx' (ID: 14016)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28640490770339966
    2. ' ' → logprob: -2.161404848098755
    3. 'for' → logprob: -2.286404848098755
    4. '       ' → logprob: -4.036405086517334
    5. ' 
' → logprob: -5.286405086517334
    6. '   ' → logprob: -5.786405086517334
    7. ' \' → logprob: -7.161405086517334
    8. '\' → logprob: -7.411405086517334
    9. ':' → logprob: -7.411405086517334
    10. '    ' → logprob: -7.661405086517334

Token 31: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8216708898544312
    2. '=' → logprob: -1.3216708898544312
    3. ' =' → logprob: -1.3216708898544312
    4. ',' → logprob: -4.821671009063721
    5. ' in' → logprob: -5.821671009063721
    6. '  ' → logprob: -5.946671009063721
    7. '.' → logprob: -6.071671009063721
    8. '_' → logprob: -6.071671009063721
    9. 'ex' → logprob: -6.196671009063721
    10. ')' → logprob: -6.321671009063721

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06651805341243744
    2. '1' → logprob: -2.8165180683135986
    3. '2' → logprob: -5.4415178298950195
    4. '0' → logprob: -8.81651782989502
    5. ' num' → logprob: -10.06651782989502
    6. ' ' → logprob: -12.12901782989502
    7. 'num' → logprob: -12.12901782989502
    8. ' i' → logprob: -14.56651782989502
    9. ' n' → logprob: -14.62901782989502
    10. '[' → logprob: -14.87901782989502

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14429688453674316
    2. '2' → logprob: -2.019296884536743
    3. ' ' → logprob: -6.769296646118164
    4. '0' → logprob: -7.894296646118164
    5. 'num' → logprob: -9.394296646118164
    6. ' num' → logprob: -12.644296646118164
    7. '```' → logprob: -13.206796646118164
    8. '   ' → logprob: -13.894296646118164
    9. 'i' → logprob: -13.956796646118164
    10. '  ' → logprob: -14.081796646118164

Token 34: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6682419776916504
    2. '<|end|>' → logprob: -1.4182419776916504
    3. ' while' → logprob: -2.0432419776916504
    4. ':' → logprob: -3.2932419776916504
    5. 'while' (adapté à ' while') → logprob: -4.04324197769165
    6. '
' → logprob: -4.54324197769165
    7. ' 
' → logprob: -4.66824197769165
    8. '       ' → logprob: -4.79324197769165
    9. ',' → logprob: -5.16824197769165
    10. ')' → logprob: -5.16824197769165

Token 37: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0002123614540323615
    2. 'idx' → logprob: -8.750212669372559
    3. ' ' → logprob: -10.000212669372559
    4. '(idx' → logprob: -12.250212669372559
    5. '	idx' → logprob: -13.125212669372559
    6. ' ' → logprob: -14.250212669372559
    7. ' num' → logprob: -14.750212669372559
    8. ' (' → logprob: -14.875212669372559
    9. '_idx' → logprob: -16.250211715698242
    10. ' index' → logprob: -17.500211715698242

Token 38: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0021646523382514715
    2. '<=' → logprob: -6.252164840698242
    3. ' ' → logprob: -8.502164840698242
    4. '*' → logprob: -10.877164840698242
    5. ' *' → logprob: -11.752164840698242
    6. ' <' → logprob: -13.627164840698242
    7. '+' → logprob: -14.127164840698242
    8. ' **' → logprob: -14.127164840698242
    9. ' ≤' → logprob: -14.252164840698242
    10. ' <<=' → logprob: -14.252164840698242

Token 39: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0012073767138645053
    2. ' idx' → logprob: -6.75120735168457
    3. '	idx' → logprob: -11.25120735168457
    4. 'id' → logprob: -11.87620735168457
    5. ' ' → logprob: -12.00120735168457
    6. '2' → logprob: -12.75120735168457
    7. 'num' → logprob: -13.00120735168457
    8. '_idx' → logprob: -13.12620735168457
    9. '1' → logprob: -13.62620735168457
    10. '  ' → logprob: -14.37620735168457

Token 40: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0012618985492736101
    2. '<=' → logprob: -6.7512617111206055
    3. ' <' → logprob: -10.001261711120605
    4. ' ' → logprob: -10.751261711120605
    5. '<|end|>' → logprob: -10.876261711120605
    6. ' ≤' → logprob: -13.501261711120605
    7. ' <<=' → logprob: -13.876261711120605
    8. ' <=",' → logprob: -14.001261711120605
    9. '<' → logprob: -14.126261711120605
    10. ' ' → logprob: -14.876261711120605

Token 41: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.2254214733839035
    2. 'num' → logprob: -1.60042142868042
    3. '	num' → logprob: -12.475421905517578
    4. '<num' → logprob: -13.475421905517578
    5. ' ' → logprob: -13.600421905517578
    6. ' ' → logprob: -13.725421905517578
    7. '(num' → logprob: -14.975421905517578
    8. '[num' → logprob: -15.600421905517578
    9. ',num' → logprob: -15.850421905517578
    10. '$num' → logprob: -15.850421905517578

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000340945553034544
    2. ' :' → logprob: -8.250341415405273
    3. ':
' → logprob: -10.000341415405273
    4. '):' → logprob: -10.875341415405273
    5. ' and' → logprob: -11.625341415405273
    6. '<|end|>' → logprob: -13.125341415405273
    7. ':**' → logprob: -13.250341415405273
    8. ':

' → logprob: -15.000341415405273
    9. '<|end|>' → logprob: -15.125341415405273
    10. ':return' → logprob: -15.125341415405273

Token 43: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019686005543917418
    2. ':
' → logprob: -7.0019683837890625
    3. ' :' → logprob: -7.8769683837890625
    4. '           ' → logprob: -8.001968383789062
    5. '):' → logprob: -8.626968383789062
    6. '       ' → logprob: -9.001968383789062
    7. ' ' → logprob: -12.126968383789062
    8. '   ' → logprob: -12.501968383789062
    9. '        ' → logprob: -12.626968383789062
    10. ')' → logprob: -12.876968383789062

Token 44: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28499582409858704
    2. ' ' → logprob: -1.9099957942962646
    3. '           ' → logprob: -2.9099957942962646
    4. '            ' → logprob: -4.159996032714844
    5. ' :' → logprob: -4.409996032714844
    6. ':
' → logprob: -5.284996032714844
    7. '   ' → logprob: -6.409996032714844
    8. ' if' → logprob: -6.409996032714844
    9. '    ' → logprob: -6.534996032714844
    10. '       ' → logprob: -6.659996032714844

Token 45: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.0019253022037446499
    2. 'num' → logprob: -6.376925468444824
    3. ' (' → logprob: -9.251925468444824
    4. ' ' → logprob: -9.751925468444824
    5. '(num' → logprob: -10.251925468444824
    6. ' ' → logprob: -10.501925468444824
    7. '	num' → logprob: -12.751925468444824
    8. '<num' → logprob: -14.001925468444824
    9. ' nums' → logprob: -14.376925468444824
    10. '(' → logprob: -14.376925468444824

Token 46: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0027342629618942738
    2. '%' → logprob: -6.377734184265137
    3. ' ' → logprob: -6.877734184265137
    4. ' ' → logprob: -14.252734184265137
    5. '<|end|>' → logprob: -15.627734184265137
    6. ' %#' → logprob: -16.752735137939453
    7. ' %
' → logprob: -17.127735137939453
    8. '%i' → logprob: -17.127735137939453
    9. '  ' → logprob: -17.502735137939453
    10. ' %=' → logprob: -17.627735137939453

Token 47: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0487654022872448
    2. 'idx' → logprob: -3.0487654209136963
    3. '	idx' → logprob: -8.923765182495117
    4. ' ' → logprob: -10.173765182495117
    5. '[idx' → logprob: -13.048765182495117
    6. '(idx' → logprob: -13.548765182495117
    7. '<|end|>' → logprob: -13.548765182495117
    8. '_idx' → logprob: -14.048765182495117
    9. ' ' → logprob: -14.673765182495117
    10. '.idx' → logprob: -15.673765182495117

Token 48: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07892361283302307
    2. '==' → logprob: -2.5789237022399902
    3. ' ' → logprob: -11.078923225402832
    4. '=' → logprob: -11.578923225402832
    5. ')==' → logprob: -12.078923225402832
    6. '===' → logprob: -13.953923225402832
    7. ' ' → logprob: -14.328923225402832
    8. ' =' → logprob: -14.578923225402832
    9. ']==' → logprob: -14.953923225402832
    10. ')' → logprob: -15.078923225402832

Token 49: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38687199354171753
    2. ' ' → logprob: -1.1368720531463623
    3. ' ' → logprob: -14.261872291564941
    4. '<|end|>' → logprob: -15.386872291564941
    5. '  ' → logprob: -16.636871337890625
    6. '```' → logprob: -17.386871337890625
    7. ' ' → logprob: -17.886871337890625
    8. '۰' → logprob: -18.199371337890625
    9. '   ' → logprob: -18.886871337890625
    10. '<|end|>' → logprob: -19.449371337890625

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '۰' → logprob: -17.626325607299805
    4. '  ' → logprob: -17.813825607299805
    5. '   ' → logprob: -18.313825607299805
    6. ' ' → logprob: -18.563825607299805
    7. ' ' → logprob: -18.626325607299805
    8. '

' → logprob: -18.626325607299805
    9. '٠' → logprob: -19.001325607299805
    10. '```' → logprob: -19.251325607299805

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015157493180595338
    2. ':
' → logprob: -9.250151634216309
    3. '):' → logprob: -10.000151634216309
    4. ' :' → logprob: -12.375151634216309
    5. '           ' → logprob: -12.875151634216309
    6. '               ' → logprob: -13.875151634216309
    7. ',' → logprob: -14.875151634216309
    8. ')' → logprob: -15.125151634216309
    9. ':**' → logprob: -15.125151634216309
    10. ':return' → logprob: -15.125151634216309

Token 52: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037044736091047525
    2. '           ' → logprob: -6.37870454788208
    3. ' ' → logprob: -7.12870454788208
    4. '                ' → logprob: -7.75370454788208
    5. '                
' → logprob: -8.503704071044922
    6. ')' → logprob: -9.128704071044922
    7. '              ' → logprob: -9.128704071044922
    8. '            ' → logprob: -9.253704071044922
    9. ':' → logprob: -9.878704071044922
    10. '<|end|>' → logprob: -10.003704071044922

Token 53: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.06952328979969025
    2. 'res' (adapté à ' res') → logprob: -2.819523334503174
    3. '               ' → logprob: -5.444523334503174
    4. '                ' → logprob: -6.694523334503174
    5. '                   ' → logprob: -6.944523334503174
    6. ' ' → logprob: -7.944523334503174
    7. '           ' → logprob: -8.569522857666016
    8. ' ' → logprob: -8.694522857666016
    9. ' 
' → logprob: -8.944522857666016
    10. '            ' → logprob: -9.069522857666016

Token 54: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5761720538139343
    2. '.add' → logprob: -0.8261720538139343
    3. '.update' → logprob: -8.951171875
    4. ' .' → logprob: -9.201171875
    5. '.Add' → logprob: -14.451171875
    6. 'add' → logprob: -14.951171875
    7. '   ' → logprob: -15.451171875
    8. '.ad' → logprob: -15.701171875
    9. ' add' → logprob: -15.951171875
    10. '.append' → logprob: -15.951171875

Token 55: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.003179259831085801
    2. '(' → logprob: -5.75317907333374
    3. '(index' → logprob: -14.753179550170898
    4. '(
' → logprob: -15.003179550170898
    5. ' idx' → logprob: -15.003179550170898
    6. 'idx' → logprob: -15.003179550170898
    7. ' (' → logprob: -15.878179550170898
    8. '	idx' → logprob: -16.8781795501709
    9. '(i' → logprob: -17.2531795501709
    10. '(

' → logprob: -17.3781795501709

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5779321193695068
    2. ')
' → logprob: -0.8279321193695068
    3. '               ' → logprob: -6.827932357788086
    4. ')
' → logprob: -7.077932357788086
    5. '           ' → logprob: -10.327932357788086
    6. ')

' → logprob: -10.827932357788086
    7. '                   ' → logprob: -12.577932357788086
    8. ' )
' → logprob: -12.577932357788086
    9. ' )' → logprob: -13.952932357788086
    10. ')

' → logprob: -14.577932357788086

Token 57: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024559596553444862
    2. '                
' → logprob: -3.774559497833252
    3. '                ' → logprob: -7.774559497833252
    4. '            
' → logprob: -8.52455997467041
    5. '    
' → logprob: -8.89955997467041
    6. '               
' → logprob: -8.89955997467041
    7. '           ' → logprob: -9.64955997467041
    8. ' 
' → logprob: -9.77455997467041
    9. '
' → logprob: -9.89955997467041
    10. '                 
' → logprob: -10.02455997467041

Token 58: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.18109165132045746
    2. ' res' → logprob: -1.8060916662216187
    3. ' if' → logprob: -6.931091785430908
    4. '               ' → logprob: -8.55609130859375
    5. 'if' → logprob: -8.93109130859375
    6. '                   ' → logprob: -10.55609130859375
    7. ' ' → logprob: -12.30609130859375
    8. '(res' → logprob: -13.18109130859375
    9. '                ' → logprob: -13.43109130859375
    10. '           ' → logprob: -13.55609130859375

Token 59: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12437503784894943
    2. '.add' → logprob: -2.374375104904175
    3. '.update' → logprob: -3.874375104904175
    4. '.extend' → logprob: -6.624374866485596
    5. '.union' → logprob: -6.624374866485596
    6. ' .' → logprob: -8.499375343322754
    7. '.setdefault' → logprob: -8.874375343322754
    8. '".' → logprob: -11.124375343322754
    9. '.append' → logprob: -11.124375343322754
    10. '>.' → logprob: -11.249375343322754

Token 60: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.10156454145908356
    2. '(' → logprob: -2.351564645767212
    3. ' num' → logprob: -6.726564407348633
    4. 'num' → logprob: -8.976564407348633
    5. ' (' → logprob: -10.601564407348633
    6. '/' → logprob: -12.976564407348633
    7. '(
' → logprob: -13.476564407348633
    8. '	num' → logprob: -14.101564407348633
    9. ' ' → logprob: -14.351564407348633
    10. '<num' → logprob: -14.476564407348633

Token 61: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2812325954437256
    2. '//' → logprob: -1.4062325954437256
    3. '/' → logprob: -10.656232833862305
    4. ' ' → logprob: -10.656232833862305
    5. ' /' → logprob: -11.156232833862305
    6. ' ' → logprob: -11.156232833862305
    7. ' idx' → logprob: -13.406232833862305
    8. '[idx' → logprob: -13.531232833862305
    9. '   ' → logprob: -13.781232833862305
    10. ')' → logprob: -14.281232833862305

Token 62: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.014166681095957756
    2. ' idx' → logprob: -4.264166831970215
    3. '	idx' → logprob: -12.889166831970215
    4. '(idx' → logprob: -15.264166831970215
    5. '[idx' → logprob: -16.0141658782959
    6. ' ' → logprob: -16.0141658782959
    7. '_idx' → logprob: -16.3891658782959
    8. '   ' → logprob: -17.1391658782959
    9. '.idx' → logprob: -18.7641658782959
    10. 'Idx' → logprob: -18.8891658782959

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030852947384119034
    2. '           ' → logprob: -8.375308990478516
    3. ')
' → logprob: -9.500308990478516
    4. '       ' → logprob: -13.875308990478516
    5. ' )' → logprob: -14.125308990478516
    6. '               ' → logprob: -14.250308990478516
    7. ')

' → logprob: -15.625308990478516
    8. '),' → logprob: -15.875308990478516
    9. ')
' → logprob: -15.875308990478516
    10. ')`' → logprob: -16.250308990478516

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008661605417728424
    2. '
' → logprob: -5.00866174697876
    3. '            
' → logprob: -6.88366174697876
    4. 'idx' → logprob: -7.25866174697876
    5. '       ' → logprob: -9.758661270141602
    6. '    
' → logprob: -10.258661270141602
    7. '\n' → logprob: -10.508661270141602
    8. '               ' → logprob: -10.633661270141602
    9. '   ' → logprob: -11.383661270141602
    10. '```' → logprob: -11.508661270141602

Token 65: ' idx' (ID: 14016)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06223946437239647
    2. 'idx' (adapté à ' idx') → logprob: -3.312239408493042
    3. '
' → logprob: -4.062239646911621
    4. '            
' → logprob: -5.687239646911621
    5. '       ' → logprob: -6.937239646911621
    6. '\n' → logprob: -7.437239646911621
    7. '   ' → logprob: -7.687239646911621
    8. '    
' → logprob: -7.937239646911621
    9. ' idx' → logprob: -8.187239646911621
    10. '               ' → logprob: -8.437239646911621

Token 66: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.24136939644813538
    2. '+' → logprob: -1.741369366645813
    3. ' +=' → logprob: -3.2413694858551025
    4. '++' → logprob: -9.991369247436523
    5. ' +' → logprob: -12.741369247436523
    6. '+="' → logprob: -13.116369247436523
    7. '1' → logprob: -13.116369247436523
    8. ' ' → logprob: -13.741369247436523
    9. '+='' → logprob: -13.741369247436523
    10. '+++' → logprob: -13.991369247436523

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.000123977661133
    4. '```' → logprob: -19.000123977661133
    5. ' ' → logprob: -20.625123977661133
    6. '１' → logprob: -20.875123977661133
    7. '    ' → logprob: -21.000123977661133
    8. '2' → logprob: -21.000123977661133
    9. '  ' → logprob: -21.250123977661133
    10. '0' → logprob: -21.875123977661133

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.6250057220459
    4. '```' → logprob: -17.8750057220459
    5. '  ' → logprob: -18.8750057220459
    6. '１' → logprob: -20.3125057220459
    7. '       ' → logprob: -20.5625057220459
    8. '
' → logprob: -20.6250057220459
    9. '2' → logprob: -21.0000057220459
    10. '۱' → logprob: -21.1250057220459

Token 69: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015461008064448833
    2. '
' → logprob: -4.515460968017578
    3. 'return' → logprob: -6.140460968017578
    4. ' return' → logprob: -6.890460968017578
    5. '   ' → logprob: -7.015460968017578
    6. '        
' → logprob: -8.515460968017578
    7. ' ' → logprob: -10.265460968017578
    8. '    
' → logprob: -10.765460968017578
    9. '	return' → logprob: -11.140460968017578
    10. ' 
' → logprob: -11.640460968017578

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011957593262195587
    2. '
' → logprob: -4.51195764541626
    3. 'return' → logprob: -8.011957168579102
    4. '        
' → logprob: -8.011957168579102
    5. '   ' → logprob: -9.136957168579102
    6. ' return' → logprob: -9.386957168579102
    7. '    
' → logprob: -11.261957168579102
    8. ' ' → logprob: -11.761957168579102
    9. '
' → logprob: -12.011957168579102
    10. '```' → logprob: -12.386957168579102

Token 71: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.257097989320755
    2. '       ' → logprob: -1.5070979595184326
    3. ' return' → logprob: -5.382098197937012
    4. '
' → logprob: -7.882098197937012
    5. '   ' → logprob: -8.757098197937012
    6. ' ' → logprob: -11.132098197937012
    7. '	return' → logprob: -12.507098197937012
    8. '```' → logprob: -13.507098197937012
    9. ':return' → logprob: -14.382098197937012
    10. '        
' → logprob: -14.632098197937012

Token 72: ' sorted' (ID: 20099)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.22950224578380585
    2. 'res' → logprob: -1.6045022010803223
    3. ' list' → logprob: -6.354502201080322
    4. ' sorted' → logprob: -6.354502201080322
    5. 'sorted' → logprob: -7.979502201080322
    6. ' ' → logprob: -8.97950267791748
    7. 'list' → logprob: -9.10450267791748
    8. '   ' → logprob: -11.35450267791748
    9. '	res' → logprob: -12.60450267791748
    10. ' ' → logprob: -13.35450267791748

Token 73: '(list' (ID: 13116)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.018151935189962387
    2. '(' → logprob: -4.018151760101318
    3. ' (' → logprob: -13.768152236938477
    4. '(
' → logprob: -14.893152236938477
    5. '(list' → logprob: -16.018152236938477
    6. '(re' → logprob: -16.143152236938477
    7. 'res' → logprob: -16.393152236938477
    8. '(rest' → logprob: -16.643152236938477
    9. '((' → logprob: -16.893152236938477
    10. '(

' → logprob: -17.393152236938477

Token 74: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0005551783833652735
    2. '(' → logprob: -7.500555038452148
    3. ')' → logprob: -13.375555038452148
    4. 'res' → logprob: -15.000555038452148
    5. '	res' → logprob: -15.750555038452148
    6. ' (' → logprob: -16.00055503845215
    7. ')(' → logprob: -16.87555503845215
    8. '=res' → logprob: -17.12555503845215
    9. '(
' → logprob: -17.25055503845215
    10. '$res' → logprob: -18.62555503845215

Token 75: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07889606058597565
    2. ')' → logprob: -2.5788960456848145
    3. ')))' → logprob: -12.453896522521973
    4. '))
' → logprob: -13.953896522521973
    5. ' ))' → logprob: -14.953896522521973
    6. '()))' → logprob: -15.203896522521973
    7. '])' → logprob: -15.453896522521973
    8. ')
' → logprob: -15.703896522521973
    9. '),' → logprob: -16.328895568847656
    10. ' )' → logprob: -16.453895568847656

Token 76: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4214609861373901
    2. '<|end|>' → logprob: -1.5464609861373901
    3. '#' → logprob: -1.7964609861373901
    4. '
' → logprob: -2.0464611053466797
    5. '[' → logprob: -2.5464611053466797
    6. '```' → logprob: -3.4214611053466797
    7. ':' → logprob: -3.7964611053466797
    8. 'd' → logprob: -3.7964611053466797
    9. ')' → logprob: -4.04646110534668
    10. '\n' → logprob: -4.42146110534668

Token 77: ' f' (ID: 285)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3322882652282715
    2. ' generate' → logprob: -2.7072882652282715
    3. ' gcd' → logprob: -2.9572882652282715
    4. ' ' → logprob: -3.2072882652282715
    5. ' get' → logprob: -3.5822882652282715
    6. ' test' → logprob: -4.0822882652282715
    7. ' factorial' → logprob: -4.0822882652282715
    8. ' prime' → logprob: -4.3322882652282715
    9. ' divisor' → logprob: -4.7072882652282715
    10. ' factor' → logprob: -4.8322882652282715

Token 78: '(n' (ID: 2406)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.12860478460788727
    2. 'act' → logprob: -2.7536048889160156
    3. 'acto' → logprob: -3.7536048889160156
    4. 'ib' → logprob: -5.003604888916016
    5. 'or' → logprob: -5.128604888916016
    6. 'ac' → logprob: -5.378604888916016
    7. 'unc' → logprob: -6.128604888916016
    8. 'unction' → logprob: -6.128604888916016
    9. '(' → logprob: -6.128604888916016
    10. 'ibonacci' → logprob: -6.503604888916016

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02042567729949951
    2. ')' → logprob: -4.020425796508789
    3. ',' → logprob: -6.270425796508789
    4. ':' → logprob: -8.270425796508789
    5. '):
' → logprob: -10.020425796508789
    6. ' ):' → logprob: -10.645425796508789
    7. 'a' → logprob: -11.895425796508789
    8. '1' → logprob: -11.895425796508789
    9. 'e' → logprob: -12.520425796508789
    10. '_' → logprob: -12.520425796508789

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03741711005568504
    2. '    ' → logprob: -4.287416934967041
    3. 'd' → logprob: -4.912416934967041
    4. ' 
' → logprob: -5.912416934967041
    5. '    
' → logprob: -6.287416934967041
    6. ' return' → logprob: -6.287416934967041
    7. '
' → logprob: -6.412416934967041
    8. ' ' → logprob: -6.412416934967041
    9. ':' → logprob: -7.412416934967041
    10. 'r' → logprob: -7.537416934967041

Token 81: ' def' (ID: 1056)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.7475389242172241
    2. 'dg' → logprob: -1.8725389242172241
    3. 'g' → logprob: -1.9975389242172241
    4. 'return' → logprob: -2.2475390434265137
    5. 'gen' → logprob: -3.3725390434265137
    6. 'd' → logprob: -3.3725390434265137
    7. 'for' → logprob: -4.122539043426514
    8. 'generator' → logprob: -4.622539043426514
    9. 'result' → logprob: -4.747539043426514
    10. 'if' → logprob: -4.747539043426514

Token 82: ' get' (ID: 717)
  Prédit: ' inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inner' → logprob: -0.6201515793800354
    2. ' factorial' → logprob: -1.6201515197753906
    3. ' g' → logprob: -2.1201515197753906
    4. ' helper' → logprob: -2.8701515197753906
    5. ' factor' → logprob: -4.245151519775391
    6. 'g' → logprob: -4.245151519775391
    7. 'inner' → logprob: -4.370151519775391
    8. ' generator' → logprob: -4.995151519775391
    9. 'factor' → logprob: -5.370151519775391
    10. ' gen' → logprob: -5.370151519775391

Token 83: '_d' (ID: 1565)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.14226731657981873
    2. '_' → logprob: -2.1422672271728516
    3. '_max' → logprob: -6.142267227172852
    4. '_s' → logprob: -6.142267227172852
    5. '_f' → logprob: -6.267267227172852
    6. '_pr' → logprob: -6.767267227172852
    7. '_factor' → logprob: -6.767267227172852
    8. '_d' → logprob: -7.017267227172852
    9. '_prime' → logprob: -7.017267227172852
    10. '_m' → logprob: -7.392267227172852

Token 84: '(n' (ID: 2406)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.14929258823394775
    2. 'ivs' → logprob: -2.274292469024658
    3. 'ivid' → logprob: -4.024292469024658
    4. 'ivi' → logprob: -5.149292469024658
    5. 'e' → logprob: -5.399292469024658
    6. 'i' → logprob: -6.649292469024658
    7. '```' → logprob: -6.649292469024658
    8. 'ef' → logprob: -7.336792469024658
    9. 'ividu' → logprob: -7.649292469024658
    10. 'ivind' → logprob: -8.211792945861816

Token 85: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0602286159992218
    2. ')' → logprob: -2.9352285861968994
    3. 'iv' → logprob: -5.8102288246154785
    4. ',' → logprob: -7.5602288246154785
    5. '):
' → logprob: -7.9352288246154785
    6. 'um' → logprob: -8.43522834777832
    7. '):

' → logprob: -8.93522834777832
    8. 'e' → logprob: -9.06022834777832
    9. 'umerator' → logprob: -9.56022834777832
    10. '-' → logprob: -9.68522834777832

Token 86: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12193141132593155
    2. '<|end|>' → logprob: -2.246931314468384
    3. 'return' → logprob: -5.621931552886963
    4. ' ' → logprob: -6.496931552886963
    5. '   ' → logprob: -6.496931552886963
    6. ' return' → logprob: -7.121931552886963
    7. '	' → logprob: -8.121931076049805
    8. '        
' → logprob: -8.496931076049805
    9. '    ' → logprob: -9.121931076049805
    10. '	   ' → logprob: -9.246931076049805

Token 87: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007590060587972403
    2. 'return' → logprob: -5.132590293884277
    3. '<|end|>' → logprob: -6.882590293884277
    4. '   ' → logprob: -8.507590293884277
    5. ' return' → logprob: -9.382590293884277
    6. 'if' → logprob: -9.757590293884277
    7. '        
' → logprob: -10.132590293884277
    8. '
' → logprob: -10.382590293884277
    9. 'for' → logprob: -10.507590293884277
    10. 'd' → logprob: -10.507590293884277

Token 88: ' Nested' (ID: 120284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05383894219994545
    2. '   ' → logprob: -3.4288389682769775
    3. '    ' → logprob: -5.178838729858398
    4. 'return' → logprob: -5.428838729858398
    5. ' ' → logprob: -6.178838729858398
    6. '<|end|>' → logprob: -6.303838729858398
    7. ' return' → logprob: -6.428838729858398
    8. '        ' → logprob: -7.178838729858398
    9. '           ' → logprob: -7.553838729858398
    10. '  ' → logprob: -7.678838729858398

Token 89: ' function' (ID: 1114)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1484630107879639
    2. 'def' → logprob: -1.2734630107879639
    3. ' def' → logprob: -1.8984630107879639
    4. '_div' → logprob: -2.398463010787964
    5. '_generator' → logprob: -3.148463010787964
    6. 'div' → logprob: -3.273463010787964
    7. '       ' → logprob: -4.273463249206543
    8. ' ' → logprob: -4.398463249206543
    9. '_d' → logprob: -4.523463249206543
    10. 'Div' → logprob: -4.898463249206543

Token 90: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7309018969535828
    2. '<|end|>' → logprob: -0.7309018969535828
    3. '   ' → logprob: -3.8559019565582275
    4. '<|end|>' → logprob: -5.105901718139648
    5. '
' → logprob: -5.980901718139648
    6. ' ' → logprob: -5.980901718139648
    7. ':' → logprob: -6.230901718139648
    8. '    ' → logprob: -7.855901718139648
    9. ':return' → logprob: -7.855901718139648
    10. ' return' → logprob: -8.230901718139648

Token 91: ' just' (ID: 1327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31368115544319153
    2. 'return' → logprob: -1.5636811256408691
    3. ' return' → logprob: -3.188681125640869
    4. '   ' → logprob: -5.188681125640869
    5. 'div' → logprob: -5.188681125640869
    6. 'd' → logprob: -6.063681125640869
    7. 'def' → logprob: -7.188681125640869
    8. '    ' → logprob: -7.688681125640869
    9. 'if' → logprob: -7.688681125640869
    10. ' div' → logprob: -7.938681125640869

Token 92: ' for' (ID: 395)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9954782724380493
    2. 'like' → logprob: -2.1204781532287598
    3. ' like' → logprob: -2.1204781532287598
    4. ' a' → logprob: -2.2454781532287598
    5. 'to' → logprob: -2.2454781532287598
    6. 'return' → logprob: -2.3704781532287598
    7. ' to' → logprob: -2.3704781532287598
    8. ' return' → logprob: -2.4954781532287598
    9. ' an' → logprob: -3.6204781532287598
    10. ' returning' → logprob: -4.12047815322876

Token 93: ' diversity' (ID: 28955)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.0676047801971436
    2. ' readability' → logprob: -2.1926047801971436
    3. ' clarity' → logprob: -2.4426047801971436
    4. ' d' → logprob: -2.9426047801971436
    5. ' i' → logprob: -3.0676047801971436
    6. 'd' → logprob: -3.3176047801971436
    7. ' demonstration' → logprob: -3.4426047801971436
    8. ' completeness' → logprob: -3.5676047801971436
    9. '   ' → logprob: -3.8176047801971436
    10. ' ' → logprob: -3.9426047801971436

Token 94: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24734236299991608
    2. '<|end|>' → logprob: -1.7473423480987549
    3. ':' → logprob: -4.122342586517334
    4. '   ' → logprob: -4.497342586517334
    5. ' ' → logprob: -5.372342586517334
    6. '<|end|>' → logprob: -6.122342586517334
    7. '        
' → logprob: -6.247342586517334
    8. '    ' → logprob: -6.747342586517334
    9. ')' → logprob: -6.872342586517334
    10. ':
' → logprob: -7.122342586517334

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012139255413785577
    2. '        
' → logprob: -7.876214027404785
    3. '   ' → logprob: -8.251214027404785
    4. 'd' → logprob: -9.001214027404785
    5. 'return' → logprob: -9.001214027404785
    6. '    
' → logprob: -9.626214027404785
    7. ' return' → logprob: -9.626214027404785
    8. '<|end|>' → logprob: -9.876214027404785
    9. '
' → logprob: -11.001214027404785
    10. '    ' → logprob: -11.126214027404785

Token 96: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6936139464378357
    2. 'return' (adapté à ' return') → logprob: -1.0686140060424805
    3. '       ' → logprob: -2.5686140060424805
    4. ' dg' → logprob: -4.3186140060424805
    5. ' res' → logprob: -4.4436140060424805
    6. 'dg' → logprob: -4.5686140060424805
    7. '           ' → logprob: -4.6936140060424805
    8. 'd' → logprob: -4.9436140060424805
    9. 'res' → logprob: -5.0686140060424805
    10. '   ' → logprob: -5.3186140060424805

Token 97: ' Div' (ID: 12302)
  Prédit: ' Div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Div' → logprob: -0.7019196152687073
    2. 'Div' → logprob: -0.7019196152687073
    3. '[' → logprob: -5.5769195556640625
    4. ' [' → logprob: -5.9519195556640625
    5. ' set' → logprob: -7.4519195556640625
    6. 'set' → logprob: -7.5769195556640625
    7. ' divisor' → logprob: -8.451919555664062
    8. ' n' → logprob: -8.826919555664062
    9. '{' → logprob: -8.951919555664062
    10. ' ' → logprob: -8.951919555664062

Token 98: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.0014909347519278526
    2. 'is' → logprob: -6.626491069793701
    3. 'or' → logprob: -8.876490592956543
    4. 'issor' → logprob: -12.251490592956543
    5. 'iso' → logprob: -12.376490592956543
    6. 'itor' → logprob: -12.751490592956543
    7. 's' → logprob: -13.376490592956543
    8. 'iser' → logprob: -13.751490592956543
    9. 'isible' → logprob: -13.751490592956543
    10. 'visor' → logprob: -14.001490592956543

Token 99: 'Generator' (ID: 14802)
  Prédit: 'Generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Generator' → logprob: -2.2200749754119897e-06
    2. ' Generator' → logprob: -14.125001907348633
    3. '   ' → logprob: -15.250001907348633
    4. 'generator' → logprob: -15.250001907348633
    5. '       ' → logprob: -15.375001907348633
    6. '_generator' → logprob: -15.500001907348633
    7. 'ator' → logprob: -16.125001907348633
    8. 'enerator' → logprob: -16.125001907348633
    9. 'Gen' → logprob: -16.375001907348633
    10. 'ogen' → logprob: -16.875001907348633

Token 100: '()(' (ID: 63375)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1798592507839203
    2. '()(' → logprob: -1.8048592805862427
    3. '().__' → logprob: -9.804859161376953
    4. '(' → logprob: -10.804859161376953
    5. ' ()' → logprob: -11.179859161376953
    6. '()
' → logprob: -12.054859161376953
    7. '`()' → logprob: -12.054859161376953
    8. '()`' → logprob: -12.804859161376953
    9. ']()' → logprob: -13.304859161376953
    10. '()<' → logprob: -13.804859161376953

Token 101: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008615988306701183
    2. ' n' → logprob: -4.758615970611572
    3. ')n' → logprob: -13.63361644744873
    4. 'num' → logprob: -16.008615493774414
    5. '	n' → logprob: -16.383615493774414
    6. '(n' → logprob: -16.883615493774414
    7. ')' → logprob: -17.258615493774414
    8. '   ' → logprob: -18.633615493774414
    9. ' ' → logprob: -19.758615493774414
    10. ',n' → logprob: -20.133615493774414

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ' )' → logprob: -12.500005722045898
    3. ')
' → logprob: -14.000005722045898
    4. '))' → logprob: -14.625005722045898
    5. ')n' → logprob: -16.6250057220459
    6. ')return' → logprob: -17.1250057220459
    7. '   ' → logprob: -17.7500057220459
    8. ' ' → logprob: -17.8750057220459
    9. ')

' → logprob: -17.8750057220459
    10. ')))' → logprob: -18.5000057220459

Token 103: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12440051138401031
    2. '   ' → logprob: -2.7494006156921387
    3. '<|end|>' → logprob: -3.8744006156921387
    4. '       ' → logprob: -4.124400615692139
    5. '    
' → logprob: -4.999400615692139
    6. 'return' → logprob: -5.499400615692139
    7. '        
' → logprob: -6.374400615692139
    8. ' return' → logprob: -6.499400615692139
    9. ' 
' → logprob: -7.874400615692139
    10. '  
' → logprob: -8.12440013885498

Token 104: ' r' (ID: 428)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1464259773492813
    2. '   ' → logprob: -2.14642596244812
    3. '    
' → logprob: -4.896426200866699
    4. 'return' → logprob: -5.271426200866699
    5. 'd' → logprob: -6.146426200866699
    6. ' return' → logprob: -6.521426200866699
    7. '  
' → logprob: -6.771426200866699
    8. '<|end|>' → logprob: -7.771426200866699
    9. '       ' → logprob: -8.1464262008667
    10. '   
' → logprob: -8.2714262008667

Token 105: ',' (ID: 11)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.03007582388818264
    2. 'eturn' → logprob: -3.530075788497925
    3. ' =' → logprob: -9.030076026916504
    4. 'esu' → logprob: -9.655076026916504
    5. 'et' → logprob: -10.155076026916504
    6. '   ' → logprob: -10.405076026916504
    7. ' ' → logprob: -11.530076026916504
    8. 'ef' → logprob: -11.655076026916504
    9. '  ' → logprob: -11.655076026916504
    10. 'e' → logprob: -12.030076026916504

Token 106: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8487830758094788
    2. ' d' → logprob: -1.223783016204834
    3. ' res' → logprob: -2.973783016204834
    4. ' l' → logprob: -3.223783016204834
    5. 'd' → logprob: -3.598783016204834
    6. ' g' → logprob: -3.973783016204834
    7. ' c' → logprob: -3.973783016204834
    8. 's' → logprob: -4.098783016204834
    9. ' ans' → logprob: -4.348783016204834
    10. 'res' → logprob: -5.098783016204834

Token 107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47504180669784546
    2. ' =' → logprob: -0.9750418066978455
    3. 'n' → logprob: -7.10004186630249
    4. 'nt' → logprob: -9.725041389465332
    5. ',' → logprob: -10.850041389465332
    6. 'nd' → logprob: -11.350041389465332
    7. ' ' → logprob: -11.350041389465332
    8. '=n' → logprob: -11.350041389465332
    9. 'f' → logprob: -11.975041389465332
    10. 'x' → logprob: -12.725041389465332

Token 108: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48777520656585693
    2. '0' → logprob: -1.112775206565857
    3. '1' → logprob: -3.1127753257751465
    4. ' n' → logprob: -4.4877753257751465
    5. 'n' → logprob: -6.6127753257751465
    6. '2' → logprob: -9.737774848937988
    7. ' (' → logprob: -10.112774848937988
    8. '
' → logprob: -10.737774848937988
    9. '  ' → logprob: -10.737774848937988
    10. '<|end|>' → logprob: -11.175274848937988

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.709682047367096
    2. '1' → logprob: -0.709682047367096
    3. 'n' → logprob: -4.709681987762451
    4. ' ' → logprob: -5.209681987762451
    5. '2' → logprob: -6.584681987762451
    6. ' n' → logprob: -7.959681987762451
    7. '   ' → logprob: -9.95968246459961
    8. '(' → logprob: -10.45968246459961
    9. '(n' → logprob: -10.70968246459961
    10. '[' → logprob: -11.20968246459961

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02299981191754341
    2. '<|end|>' → logprob: -4.2729997634887695
    3. '
' → logprob: -6.0229997634887695
    4. ' ,' → logprob: -6.5229997634887695
    5. '<|end|>' → logprob: -6.5229997634887695
    6. ' ' → logprob: -6.8979997634887695
    7. 'for' → logprob: -7.3979997634887695
    8. ' for' → logprob: -7.7729997634887695
    9. '1' → logprob: -7.8979997634887695
    10. '   ' → logprob: -8.39799976348877

Token 111: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3980119824409485
    2. '1' → logprob: -1.1480119228363037
    3. ' n' → logprob: -4.898012161254883
    4. '0' → logprob: -6.023012161254883
    5. 'n' → logprob: -7.148012161254883
    6. '2' → logprob: -7.898012161254883
    7. ' i' → logprob: -11.523012161254883
    8. '    ' → logprob: -12.023012161254883
    9. '   ' → logprob: -12.523012161254883
    10. '10' → logprob: -12.648012161254883

Token 112: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012385673820972443
    2. '0' → logprob: -5.137385845184326
    3. ' ' → logprob: -5.637385845184326
    4. 'n' → logprob: -6.512385845184326
    5. '2' → logprob: -6.637385845184326
    6. ' n' → logprob: -10.012385368347168
    7. '10' → logprob: -12.012385368347168
    8. '   ' → logprob: -12.637385368347168
    9. 'i' → logprob: -12.762385368347168
    10. '3' → logprob: -12.824885368347168

Token 113: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3896741271018982
    2. ' while' → logprob: -1.639674186706543
    3. '   ' → logprob: -2.389674186706543
    4. 'while' → logprob: -4.264674186706543
    5. ' 
' → logprob: -4.639674186706543
    6. '<|end|>' → logprob: -5.264674186706543
    7. ' ' → logprob: -6.264674186706543
    8. '	while' → logprob: -6.514674186706543
    9. '    
' → logprob: -7.139674186706543
    10. '\n' → logprob: -7.264674186706543

Token 115: ' for' (ID: 395)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.17541348934173584
    2. 'while' → logprob: -1.9254134893417358
    3. ' i' → logprob: -4.925413608551025
    4. ' n' → logprob: -5.800413608551025
    5. 'i' → logprob: -6.300413608551025
    6. ' for' → logprob: -6.675413608551025
    7. '   ' → logprob: -7.300413608551025
    8. 'n' → logprob: -7.425413608551025
    9. 'for' (adapté à ' for') → logprob: -8.175413131713867
    10. '
' → logprob: -10.925413131713867

Token 116: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.022176630795001984
    2. ' _' → logprob: -4.397176742553711
    3. ' n' → logprob: -5.772176742553711
    4. ' num' → logprob: -6.397176742553711
    5. 'i' → logprob: -6.522176742553711
    6. ' range' → logprob: -6.647176742553711
    7. ' x' → logprob: -7.522176742553711
    8. '_' → logprob: -7.647176742553711
    9. ' ' → logprob: -8.022176742553711
    10. ' idx' → logprob: -8.147176742553711

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0053534130565822124
    2. 'in' → logprob: -5.3803534507751465
    3. ' ' → logprob: -8.255352973937988
    4. 's' → logprob: -8.380352973937988
    5. ',' → logprob: -9.630352973937988
    6. 'e' → logprob: -10.255352973937988
    7. 'd' → logprob: -10.755352973937988
    8. 'ef' → logprob: -10.880352973937988
    9. 'ex' → logprob: -11.005352973937988
    10. '  ' → logprob: -11.380352973937988

Token 118: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.06174670532345772
    2. 'get' → logprob: -2.936746597290039
    3. ' range' → logprob: -5.061746597290039
    4. 'range' → logprob: -7.686746597290039
    5. '[get' → logprob: -10.686746597290039
    6. '(get' → logprob: -11.311746597290039
    7. ' f' → logprob: -12.686746597290039
    8. '   ' → logprob: -12.811746597290039
    9. '	get' → logprob: -13.436746597290039
    10. 'f' → logprob: -13.811746597290039

Token 119: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -7.493430894101039e-05
    2. '_' → logprob: -9.875075340270996
    3. '(' → logprob: -11.625075340270996
    4. '(n' → logprob: -13.125075340270996
    5. '_(' → logprob: -13.250075340270996
    6. ' ' → logprob: -13.625075340270996
    7. '(d' → logprob: -13.750075340270996
    8. 'd' → logprob: -14.000075340270996
    9. '_f' → logprob: -14.000075340270996
    10. '_s' → logprob: -14.125075340270996

Token 120: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00011403311509639025
    2. '(' → logprob: -9.250114440917969
    3. ')(' → logprob: -11.875114440917969
    4. ' (' → logprob: -12.625114440917969
    5. 's' → logprob: -13.125114440917969
    6. ')' → logprob: -13.625114440917969
    7. 'n' → logprob: -14.250114440917969
    8. ' ' → logprob: -14.500114440917969
    9. '((' → logprob: -14.625114440917969
    10. '(i' → logprob: -14.750114440917969

Token 121: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020161917433142662
    2. '()' → logprob: -4.645162105560303
    3. '():' → logprob: -4.895162105560303
    4. ')' → logprob: -6.395162105560303
    5. '(' → logprob: -7.645162105560303
    6. '):
' → logprob: -8.270161628723145
    7. '(n' → logprob: -8.520161628723145
    8. ' ):' → logprob: -9.145161628723145
    9. '()):
' → logprob: -10.770161628723145
    10. '(i' → logprob: -11.020161628723145

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029562439769506454
    2. ':' → logprob: -3.654562473297119
    3. '<|end|>' → logprob: -6.904562473297119
    4. '
' → logprob: -7.154562473297119
    5. ':
' → logprob: -7.404562473297119
    6. ',' → logprob: -8.904561996459961
    7. '   ' → logprob: -8.904561996459961
    8. '0' → logprob: -9.279561996459961
    9. '        
' → logprob: -9.404561996459961
    10. '<|end|>' → logprob: -9.654561996459961

Token 123: ' v' (ID: 323)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.202992558479309
    2. ' i' → logprob: -1.327992558479309
    3. '       ' → logprob: -1.577992558479309
    4. ' ' → logprob: -2.5779924392700195
    5. ' r' → logprob: -3.3279924392700195
    6. '    ' → logprob: -3.4529924392700195
    7. 'if' → logprob: -3.4529924392700195
    8. '        ' → logprob: -3.7029924392700195
    9. '   ' → logprob: -4.8279924392700195
    10. 'r' → logprob: -5.0779924392700195

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27398252487182617
    2. '=' → logprob: -1.5239825248718262
    3. 'al' → logprob: -4.148982524871826
    4. '   ' → logprob: -5.898982524871826
    5. 'alue' → logprob: -7.398982524871826
    6. 'alid' → logprob: -7.398982524871826
    7. ' +=' → logprob: -7.773982524871826
    8. '+=' → logprob: -7.773982524871826
    9. 'a' → logprob: -8.523983001708984
    10. ' ' → logprob: -8.523983001708984

Token 125: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17038369178771973
    2. 'n' → logprob: -2.4203836917877197
    3. ' d' → logprob: -2.9203836917877197
    4. 'd' → logprob: -4.795383453369141
    5. ' (' → logprob: -6.170383453369141
    6. ' f' → logprob: -6.545383453369141
    7. ' ' → logprob: -6.920383453369141
    8. 'f' → logprob: -8.67038345336914
    9. ' i' → logprob: -8.67038345336914
    10. '   ' → logprob: -8.79538345336914

Token 126: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.11948924511671066
    2. '//' → logprob: -2.2444891929626465
    3. ' %' → logprob: -5.4944891929626465
    4. '%' → logprob: -7.2444891929626465
    5. 'd' → logprob: -7.8694891929626465
    6. '/d' → logprob: -7.9944891929626465
    7. ' ' → logprob: -8.244489669799805
    8. ' /' → logprob: -8.494489669799805
    9. '%d' → logprob: -8.494489669799805
    10. ' d' → logprob: -8.744489669799805

Token 127: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0046235607005655766
    2. ' d' → logprob: -5.3796234130859375
    3. ' ' → logprob: -12.754623413085938
    4. '   ' → logprob: -15.379623413085938
    5. '       ' → logprob: -15.754623413085938
    6. '  ' → logprob: -16.254623413085938
    7. '	d' → logprob: -16.754623413085938
    8. ' ' → logprob: -17.004623413085938
    9. '<|end|>' → logprob: -18.254623413085938
    10. '
' → logprob: -18.754623413085938

Token 128: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059837162494659424
    2. '+' → logprob: -3.3098371028900146
    3. '-' → logprob: -4.559837341308594
    4. '       ' → logprob: -5.684837341308594
    5. 'if' → logprob: -6.434837341308594
    6. '**' → logprob: -6.684837341308594
    7. '        
' → logprob: -7.434837341308594
    8. ' +' → logprob: -7.559837341308594
    9. '
' → logprob: -7.684837341308594
    10. '*' → logprob: -8.309837341308594

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14548595249652863
    2. 'd' → logprob: -2.0204858779907227
    3. ' ' → logprob: -7.270485877990723
    4. 'n' → logprob: -7.395485877990723
    5. ' d' → logprob: -7.770485877990723
    6. '(d' → logprob: -7.770485877990723
    7. 'f' → logprob: -8.520485877990723
    8. '(' → logprob: -9.145485877990723
    9. '(n' → logprob: -9.145485877990723
    10. 'i' → logprob: -9.520485877990723

Token 130: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12342759966850281
    2. '1' → logprob: -2.623427629470825
    3. 'i' → logprob: -3.623427629470825
    4. 'v' → logprob: -5.373427391052246
    5. '0' → logprob: -5.623427391052246
    6. 'f' → logprob: -5.748427391052246
    7. 'get' → logprob: -5.873427391052246
    8. 'n' → logprob: -6.498427391052246
    9. ' d' → logprob: -7.748427391052246
    10. '(i' → logprob: -8.998427391052246

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07063470035791397
    2. '       ' → logprob: -2.820634603500366
    3. '<|end|>' → logprob: -4.945634841918945
    4. '
' → logprob: -7.320634841918945
    5. '<|end|>' → logprob: -7.695634841918945
    6. '        
' → logprob: -9.070634841918945
    7. ' 
' → logprob: -9.820634841918945
    8. ',' → logprob: -9.945634841918945
    9. ')' → logprob: -9.945634841918945
    10. ' if' → logprob: -10.695634841918945

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08698928356170654
    2. '
' → logprob: -2.586989402770996
    3. '<|end|>' → logprob: -5.086989402770996
    4. ',' → logprob: -7.961989402770996
    5. '        
' → logprob: -7.961989402770996
    6. '<|end|>' → logprob: -8.086989402770996
    7. '
' → logprob: -8.711989402770996
    8. ' if' → logprob: -8.711989402770996
    9. ' 
' → logprob: -9.211989402770996
    10. ')' → logprob: -9.586989402770996

Token 133: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6250976920127869
    2. '       ' → logprob: -0.8750976920127869
    3. 'r' → logprob: -3.8750977516174316
    4. 'if' (adapté à ' if') → logprob: -4.625097751617432
    5. ' if' → logprob: -4.750097751617432
    6. '
' → logprob: -5.375097751617432
    7. ' r' → logprob: -7.250097751617432
    8. '        
' → logprob: -7.750097751617432
    9. ',' → logprob: -8.000097274780273
    10. 'i' → logprob: -8.125097274780273

Token 134: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5300420522689819
    2. 'v' → logprob: -1.030042052268982
    3. ' d' → logprob: -3.4050421714782715
    4. 'd' → logprob: -3.9050421714782715
    5. ' i' → logprob: -8.030041694641113
    6. ' n' → logprob: -8.405041694641113
    7. 'n' → logprob: -9.030041694641113
    8. ' ' → logprob: -9.530041694641113
    9. ' (' → logprob: -9.530041694641113
    10. 'i' → logprob: -10.030041694641113

Token 135: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.2948728799819946
    2. ' >' → logprob: -1.6698728799819946
    3. ' <=' → logprob: -2.044872760772705
    4. ' >=' → logprob: -2.294872760772705
    5. ' ==' → logprob: -2.419872760772705
    6. '<=' → logprob: -2.794872760772705
    7. '>=' → logprob: -2.919872760772705
    8. '==' → logprob: -2.919872760772705
    9. ' <' → logprob: -3.419872760772705
    10. '<' → logprob: -4.419872760772705

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7062895894050598
    2. ':' → logprob: -1.081289529800415
    3. ':
' → logprob: -1.831289529800415
    4. ' and' → logprob: -5.456289768218994
    5. '       ' → logprob: -7.331289768218994
    6. ' :' → logprob: -7.706289768218994
    7. ' :
' → logprob: -7.831289768218994
    8. '<|end|>' → logprob: -8.331289291381836
    9. '               ' → logprob: -8.831289291381836
    10. ',' → logprob: -9.081289291381836

Token 137: ' if' (ID: 538)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.15904931724071503
    2. 'r' → logprob: -2.0340492725372314
    3. '           ' → logprob: -4.6590495109558105
    4. ' i' → logprob: -5.5340495109558105
    5. 'i' → logprob: -6.7840495109558105
    6. '               ' → logprob: -6.9090495109558105
    7. '       ' → logprob: -8.784049034118652
    8. '   ' → logprob: -9.409049034118652
    9. '            ' → logprob: -9.409049034118652
    10. ' for' → logprob: -9.784049034118652

Token 138: ' not' (ID: 625)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.9540097117424011
    2. ' n' → logprob: -1.454009771347046
    3. ' d' → logprob: -2.204009771347046
    4. 'v' → logprob: -2.704009771347046
    5. ' i' → logprob: -3.204009771347046
    6. 'n' → logprob: -3.204009771347046
    7. ' (' → logprob: -3.204009771347046
    8. 'd' → logprob: -3.329009771347046
    9. ' r' → logprob: -3.954009771347046
    10. 'r' → logprob: -4.829009532928467

Token 139: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.397512674331665
    2. '(v' → logprob: -1.522512674331665
    3. 'v' → logprob: -1.897512674331665
    4. ' (' → logprob: -2.397512674331665
    5. '(i' → logprob: -2.897512674331665
    6. '(r' → logprob: -3.022512674331665
    7. ' v' → logprob: -3.022512674331665
    8. ' r' → logprob: -3.147512674331665
    9. '(n' → logprob: -3.897512674331665
    10. 'd' → logprob: -4.147512435913086

Token 140: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31445059180259705
    2. '%' → logprob: -1.3144506216049194
    3. ' ' → logprob: -7.564450740814209
    4. '%d' → logprob: -8.31445026397705
    5. '%i' → logprob: -8.31445026397705
    6. '%s' → logprob: -9.31445026397705
    7. '%c' → logprob: -11.43945026397705
    8. '%e' → logprob: -11.62695026397705
    9. '%x' → logprob: -11.68945026397705
    10. '%n' → logprob: -12.06445026397705

Token 141: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3160003423690796
    2. 'd' → logprob: -1.3160003423690796
    3. '(v' → logprob: -6.941000461578369
    4. ' d' → logprob: -7.566000461578369
    5. '(d' → logprob: -7.566000461578369
    6. ' v' → logprob: -7.566000461578369
    7. '(' → logprob: -9.690999984741211
    8. ' (' → logprob: -10.065999984741211
    9. '   ' → logprob: -10.815999984741211
    10. 'n' → logprob: -10.815999984741211

Token 142: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028442882001399994
    2. '==' → logprob: -3.653442859649658
    3. ' ==' → logprob: -6.278442859649658
    4. ':
' → logprob: -9.403443336486816
    5. ' :' → logprob: -9.653443336486816
    6. '=' → logprob: -9.903443336486816
    7. ' and' → logprob: -10.153443336486816
    8. '):' → logprob: -11.528443336486816
    9. ':**' → logprob: -12.778443336486816
    10. '!=' → logprob: -13.528443336486816

Token 143: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20442645251750946
    2. ' ' → logprob: -2.3294265270233154
    3. 'v' → logprob: -3.9544265270233154
    4. '0' → logprob: -4.204426288604736
    5. '=' → logprob: -4.204426288604736
    6. ' v' → logprob: -4.579426288604736
    7. ' (' → logprob: -5.329426288604736
    8. ' n' → logprob: -5.329426288604736
    9. 'd' → logprob: -5.454426288604736
    10. 'n' → logprob: -5.954426288604736

Token 144: ' //' (ID: 602)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5236842632293701
    2. '%' → logprob: -0.8986842632293701
    3. ' ' → logprob: -8.27368450164795
    4. '%d' → logprob: -9.27368450164795
    5. '//' → logprob: -10.27368450164795
    6. '%s' → logprob: -10.89868450164795
    7. '<|end|>' → logprob: -10.89868450164795
    8. '%x' → logprob: -11.02368450164795
    9. '%i' → logprob: -11.02368450164795
    10. '1' → logprob: -11.52368450164795

Token 145: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0463004969060421
    2. 'd' → logprob: -3.5463004112243652
    3. ' v' → logprob: -4.296300411224365
    4. ' d' → logprob: -5.921300411224365
    5. ' ' → logprob: -10.046300888061523
    6. '/v' → logprob: -10.796300888061523
    7. 'div' → logprob: -11.296300888061523
    8. '	v' → logprob: -11.921300888061523
    9. 'n' → logprob: -12.171300888061523
    10. ' ' → logprob: -12.671300888061523

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08629579842090607
    2. ' ==' → logprob: -3.2112958431243896
    3. '==' → logprob: -3.3362958431243896
    4. ':
' → logprob: -5.2112956047058105
    5. ' :' → logprob: -7.0862956047058105
    6. '):' → logprob: -8.711296081542969
    7. ' ' → logprob: -10.086296081542969
    8. ':

' → logprob: -10.336296081542969
    9. ' !=' → logprob: -10.336296081542969
    10. '=' → logprob: -10.586296081542969

Token 147: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008578285574913025
    2. ':' → logprob: -5.883578300476074
    3. '           ' → logprob: -5.883578300476074
    4. ':
' → logprob: -6.258578300476074
    5. '              ' → logprob: -7.883578300476074
    6. ' return' → logprob: -9.133578300476074
    7. ',' → logprob: -9.758578300476074
    8. '):
' → logprob: -9.883578300476074
    9. ' :' → logprob: -10.133578300476074
    10. '       ' → logprob: -10.133578300476074

Token 148: ' r' (ID: 428)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8847400546073914
    2. ' r' → logprob: -1.8847401142120361
    3. '               ' → logprob: -2.259740114212036
    4. ' i' → logprob: -2.509740114212036
    5. '           ' → logprob: -2.509740114212036
    6. ' return' → logprob: -2.759740114212036
    7. 'r' (adapté à ' r') → logprob: -3.259740114212036
    8. ' continue' → logprob: -4.134739875793457
    9. 'return' → logprob: -4.259739875793457
    10. '   ' → logprob: -4.884739875793457

Token 149: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0018445169553160667
    2. '+=' → logprob: -6.37684440612793
    3. ' ' → logprob: -9.25184440612793
    4. '+' → logprob: -10.75184440612793
    5. ' +' → logprob: -11.50184440612793
    6. ' =' → logprob: -11.62684440612793
    7. ' -=' → logprob: -13.37684440612793
    8. ' |=' → logprob: -13.50184440612793
    9. ' ^=' → logprob: -13.75184440612793
    10. '<|end|>' → logprob: -14.62684440612793

Token 150: ' v' (ID: 323)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8618856072425842
    2. 'd' → logprob: -1.6118855476379395
    3. 'v' → logprob: -1.8618855476379395
    4. 'i' → logprob: -2.2368855476379395
    5. 'n' → logprob: -2.9868855476379395
    6. ' d' → logprob: -3.9868855476379395
    7. ' ' → logprob: -4.6118855476379395
    8. ' v' → logprob: -4.8618855476379395
    9. ' i' → logprob: -4.9868855476379395
    10. ' n' → logprob: -4.9868855476379395

Token 151: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1620185375213623
    2. '           ' → logprob: -1.5370185375213623
    3. '               ' → logprob: -1.7870185375213623
    4. '
' → logprob: -1.9120185375213623
    5. '   ' → logprob: -1.9120185375213623
    6. '
' → logprob: -6.037018775939941
    7. ' ' → logprob: -6.537018775939941
    8. ',' → logprob: -6.787018775939941
    9. 'return' → logprob: -7.162018775939941
    10. '                   ' → logprob: -7.787018775939941

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45866525173187256
    2. '           ' → logprob: -1.0836652517318726
    3. '               ' → logprob: -3.708665370941162
    4. '   ' → logprob: -5.583665370941162
    5. '<|end|>' → logprob: -7.458665370941162
    6. '<|end|>' → logprob: -9.333664894104004
    7. ',' → logprob: -9.458664894104004
    8. '        
' → logprob: -9.458664894104004
    9. '        ' → logprob: -9.583664894104004
    10. ' ' → logprob: -10.083664894104004

Token 153: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29364585876464844
    2. '       ' → logprob: -1.4186458587646484
    3. ' return' → logprob: -4.793645858764648
    4. 'return' → logprob: -5.668645858764648
    5. '           ' → logprob: -8.293645858764648
    6. ' i' → logprob: -9.043645858764648
    7. ' ' → logprob: -9.418645858764648
    8. ',' → logprob: -10.168645858764648
    9. '    ' → logprob: -10.418645858764648
    10. '	return' → logprob: -10.543645858764648

Token 154: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7737395167350769
    2. '+=' → logprob: -0.7737395167350769
    3. '+' → logprob: -2.6487395763397217
    4. '++' → logprob: -5.398739337921143
    5. '=' → logprob: -7.398739337921143
    6. '<|end|>' → logprob: -8.0237398147583
    7. 'd' → logprob: -8.1487398147583
    8. '1' → logprob: -8.2737398147583
    9. ' ' → logprob: -8.8987398147583
    10. ' +' → logprob: -8.8987398147583

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2254941463470459
    2. ' ' → logprob: -1.600494146347046
    3. 'd' → logprob: -9.850494384765625
    4. ' d' → logprob: -10.850494384765625
    5. 'v' → logprob: -12.850494384765625
    6. '0' → logprob: -13.600494384765625
    7. ' ' → logprob: -13.600494384765625
    8. ' v' → logprob: -13.725494384765625
    9. '   ' → logprob: -14.975494384765625
    10. 'len' → logprob: -14.975494384765625

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008698907913640141
    2. ' ' → logprob: -7.1258697509765625
    3. 'd' → logprob: -9.875869750976562
    4. 'v' → logprob: -11.875869750976562
    5. 'len' → logprob: -13.375869750976562
    6. '0' → logprob: -13.750869750976562
    7. 'r' → logprob: -13.750869750976562
    8. '   ' → logprob: -14.563369750976562
    9. ' d' → logprob: -14.688369750976562
    10. '2' → logprob: -14.938369750976562

Token 157: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7738267183303833
    2. '<|end|>' → logprob: -1.1488267183303833
    3. '   ' → logprob: -1.6488267183303833
    4. ' ' → logprob: -5.023826599121094
    5. '<|end|>' → logprob: -5.148826599121094
    6. ',' → logprob: -5.148826599121094
    7. '
' → logprob: -5.273826599121094
    8. ' return' → logprob: -6.023826599121094
    9. '    ' → logprob: -7.273826599121094
    10. '        ' → logprob: -7.523826599121094

Token 158: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2871584892272949
    2. '       ' → logprob: -1.662158489227295
    3. '<|end|>' → logprob: -2.912158489227295
    4. ',' → logprob: -6.287158489227295
    5. ' ' → logprob: -7.037158489227295
    6. 'return' → logprob: -7.287158489227295
    7. ' return' → logprob: -7.412158489227295
    8. '<|end|>' → logprob: -7.912158489227295
    9. '
' → logprob: -8.162158966064453
    10. ':return' → logprob: -9.412158966064453

Token 159: ' Un' (ID: 1367)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.09055335074663162
    2. 'necessary' → logprob: -3.0905532836914062
    3. 'finished' → logprob: -4.965553283691406
    4. 'clear' → logprob: -5.340553283691406
    5. 'related' → logprob: -5.465553283691406
    6. 'def' → logprob: -5.590553283691406
    7. '```' → logprob: -5.715553283691406
    8. 'til' → logprob: -6.215553283691406
    9. 'reachable' → logprob: -6.215553283691406
    10. 'defined' → logprob: -6.340553283691406

Token 161: ' var' (ID: 972)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1424635499715805
    2. '
' → logprob: -2.517463445663452
    3. '<|end|>' → logprob: -3.892463445663452
    4. '       ' → logprob: -4.892463684082031
    5. ' return' → logprob: -5.267463684082031
    6. '	return' → logprob: -5.392463684082031
    7. 'return' → logprob: -5.642463684082031
    8. ',' → logprob: -5.767463684082031
    9. '    
' → logprob: -6.267463684082031
    10. ' ' → logprob: -6.267463684082031

Token 163: ' stylist' (ID: 87902)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4762154817581177
    2. 'i' → logprob: -1.7262154817581177
    3. ' but' → logprob: -1.8512154817581177
    4. ' ' → logprob: -4.601215362548828
    5. '   ' → logprob: -4.601215362548828
    6. '    ' → logprob: -5.101215362548828
    7. ' not' → logprob: -5.476215362548828
    8. 'but' → logprob: -5.476215362548828
    9. '       ' → logprob: -6.601215362548828
    10. ' continue' → logprob: -7.101215362548828

Token 164: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.38688334822654724
    2. 'ically' → logprob: -1.1368833780288696
    3. '   ' → logprob: -12.636883735656738
    4. 'c' → logprob: -12.636883735656738
    5. 'ical' → logprob: -13.261883735656738
    6. 'icamente' → logprob: -14.011883735656738
    7. 'icz' → logprob: -14.386883735656738
    8. 'ics' → logprob: -14.511883735656738
    9. 'def' → logprob: -14.886883735656738
    10. ' ' → logprob: -14.886883735656738

Token 165: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6663793921470642
    2. '
' → logprob: -1.291379451751709
    3. '<|end|>' → logprob: -1.666379451751709
    4. ' return' → logprob: -4.666379451751709
    5. 'return' → logprob: -5.166379451751709
    6. '	return' → logprob: -5.541379451751709
    7. '<|end|>' → logprob: -6.541379451751709
    8. '       ' → logprob: -7.666379451751709
    9. ' ' → logprob: -8.04137897491455
    10. '    
' → logprob: -8.29137897491455

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007038827985525131
    2. '       ' → logprob: -5.382038593292236
    3. ' return' → logprob: -6.757038593292236
    4. 'return' → logprob: -7.507038593292236
    5. '<|end|>' → logprob: -7.507038593292236
    6. '	return' → logprob: -9.382039070129395
    7. '
' → logprob: -10.882039070129395
    8. ',' → logprob: -11.257039070129395
    9. ' ' → logprob: -11.882039070129395
    10. '    
' → logprob: -12.132039070129395

Token 167: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6048136353492737
    2. '   ' → logprob: -1.104813575744629
    3. ' return' → logprob: -2.104813575744629
    4. '	return' → logprob: -7.479813575744629
    5. '
' → logprob: -9.854813575744629
    6. ' ' → logprob: -10.729813575744629
    7. '<|end|>' → logprob: -11.729813575744629
    8. ':return' → logprob: -11.854813575744629
    9. '    
' → logprob: -12.104813575744629
    10. '       ' → logprob: -12.229813575744629

Token 168: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3868716359138489
    2. ' r' → logprob: -1.136871576309204
    3. ' ' → logprob: -15.261871337890625
    4. '0' → logprob: -16.136871337890625
    5. '	r' → logprob: -16.636871337890625
    6. '(r' → logprob: -17.011871337890625
    7. ' ' → logprob: -17.261871337890625
    8. 'f' → logprob: -18.261871337890625
    9. '   ' → logprob: -18.386871337890625
    10. '_r' → logprob: -18.886871337890625

Token 169: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.517220675945282
    2. '(' → logprob: -1.3922207355499268
    3. '<|end|>' → logprob: -2.3922207355499268
    4. '[' → logprob: -3.5172207355499268
    5. '#' → logprob: -4.517220497131348
    6. ':' → logprob: -5.017220497131348
    7. '_' → logprob: -5.267220497131348
    8. 'n' → logprob: -6.267220497131348
    9. ' ' → logprob: -6.267220497131348
    10. '
' → logprob: -6.517220497131348

Token 171: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0620565265417099
    2. '=' → logprob: -2.812056541442871
    3. ' ' → logprob: -10.062056541442871
    4. 'UM' → logprob: -10.937056541442871
    5. 'um' → logprob: -11.687056541442871
    6. '   ' → logprob: -11.812056541442871
    7. '=int' → logprob: -12.562056541442871
    8. '  ' → logprob: -12.812056541442871
    9. ' =
' → logprob: -13.687056541442871
    10. 'umber' → logprob: -13.937056541442871

Token 172: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0025818434078246355
    2. '(' → logprob: -6.00258207321167
    3. 'input' → logprob: -9.252581596374512
    4. '()' → logprob: -12.127581596374512
    5. '(
' → logprob: -13.627581596374512
    6. ' (' → logprob: -13.627581596374512
    7. '=input' → logprob: -14.002581596374512
    8. ' ' → logprob: -14.502581596374512
    9. ' input' → logprob: -14.877581596374512
    10. '('' → logprob: -15.002581596374512

Token 173: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07905679196119308
    2. '()' → logprob: -2.579056739807129
    3. '(' → logprob: -9.454056739807129
    4. ')' → logprob: -10.954056739807129
    5. '();)' → logprob: -11.079056739807129
    6. '("' → logprob: -11.579056739807129
    7. '()))' → logprob: -11.829056739807129
    8. '().' → logprob: -11.954056739807129
    9. '());' → logprob: -11.954056739807129
    10. '()>' → logprob: -11.954056739807129

Token 174: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. 'for' → logprob: -16.75
    3. ' print' → logprob: -17.125
    4. 'result' → logprob: -17.125
    5. '```' → logprob: -17.375
    6. 'pr' → logprob: -17.5
    7. '
' → logprob: -17.75
    8. 'r' → logprob: -19.375
    9. 'def' → logprob: -20.25
    10. 's' → logprob: -20.375

Token 175: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00015860427811276168
    2. '(' → logprob: -8.750158309936523
    3. '((' → logprob: -16.625158309936523
    4. 'f' → logprob: -17.000158309936523
    5. ' (' → logprob: -18.125158309936523
    6. '(
' → logprob: -18.125158309936523
    7. '(s' → logprob: -19.125158309936523
    8. '(F' → logprob: -19.500158309936523
    9. '(max' → logprob: -19.750158309936523
    10. '()' → logprob: -19.750158309936523

Token 176: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -5.872261317563243e-05
    2. '(' → logprob: -9.750059127807617
    3. ')(' → logprob: -15.625059127807617
    4. ' (' → logprob: -15.875059127807617
    5. '((' → logprob: -16.625059127807617
    6. ')' → logprob: -16.750059127807617
    7. '(n' → logprob: -16.875059127807617
    8. '(
' → logprob: -18.625059127807617
    9. '```' → logprob: -19.375059127807617
    10. 'N' → logprob: -19.625059127807617

Token 177: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07898012548685074
    2. ')' → logprob: -2.5789802074432373
    3. '())' → logprob: -9.953980445861816
    4. '()))' → logprob: -10.203980445861816
    5. ')))' → logprob: -12.578980445861816
    6. '(' → logprob: -13.953980445861816
    7. '()' → logprob: -14.203980445861816
    8. '))
' → logprob: -14.953980445861816
    9. ' ))' → logprob: -15.578980445861816
    10. ')
' → logprob: -16.8289794921875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 175
Tokens correctement prédits (1ère position, stricte): 66
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 130
Précision stricte (1ère position): 37.71%
Précision adaptée (1ère position): 39.43%
Précision (top 10): 74.29%
================================================================================
