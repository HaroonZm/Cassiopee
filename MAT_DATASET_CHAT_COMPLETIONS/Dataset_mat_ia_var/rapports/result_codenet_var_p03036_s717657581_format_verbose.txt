================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
growth_rate, offset, initial_population = map(int, input().split())

current_population = initial_population

for iteration_number in range(10):

    current_population = growth_rate * current_population - offset

    print(current_population)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'growth' (ID: 132185)
  → Token d'amorce (pas de prédiction)

Token 1: '_rate' (ID: 20477)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' offset' (ID: 8985)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3187445104122162
    2. '_' → logprob: -2.068744421005249
    3. ' =' → logprob: -2.943744421005249
    4. ')' → logprob: -4.568744659423828
    5. '_percentage' → logprob: -4.693744659423828
    6. '_growth' → logprob: -4.693744659423828
    7. ',' → logprob: -4.818744659423828
    8. ' _' → logprob: -4.943744659423828
    9. '_max' → logprob: -5.068744659423828
    10. '_percent' → logprob: -5.193744659423828

Token 4: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06346841156482697
    2. '_' → logprob: -3.3134684562683105
    3. '*' → logprob: -4.0634684562683105
    4. ' =' → logprob: -5.4384684562683105
    5. ',' → logprob: -6.0634684562683105
    6. ')' → logprob: -7.5634684562683105
    7. '```' → logprob: -8.563467979431152
    8. '+' → logprob: -8.688467979431152
    9. '**' → logprob: -9.063467979431152
    10. ':' → logprob: -10.313467979431152

Token 5: ' initial' (ID: 4871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014963795430958271
    2. ',' → logprob: -4.889963626861572
    3. ' =' → logprob: -5.889963626861572
    4. ')' → logprob: -6.139963626861572
    5. '*' → logprob: -6.264963626861572
    6. '_' → logprob: -8.63996410369873
    7. ':' → logprob: -9.01496410369873
    8. '**' → logprob: -10.13996410369873
    9. '```' → logprob: -10.26496410369873
    10. ' ' → logprob: -10.76496410369873

Token 6: '_population' (ID: 197327)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09617861360311508
    2. '_' → logprob: -2.4711785316467285
    3. ' =' → logprob: -5.8461785316467285
    4. '*' → logprob: -6.4711785316467285
    5. ')' → logprob: -6.9711785316467285
    6. ',' → logprob: -7.0961785316467285
    7. '```' → logprob: -7.2211785316467285
    8. ':' → logprob: -9.096179008483887
    9. '+' → logprob: -10.346179008483887
    10. '**' → logprob: -10.596179008483887

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01405303180217743
    2. '*' → logprob: -4.639052867889404
    3. ' =' → logprob: -6.264052867889404
    4. ',' → logprob: -6.639052867889404
    5. ')' → logprob: -7.639052867889404
    6. '_' → logprob: -7.889052867889404
    7. '+' → logprob: -9.514053344726562
    8. '**' → logprob: -9.889053344726562
    9. '```' → logprob: -10.139053344726562
    10. '(' → logprob: -11.139053344726562

Token 8: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2931974530220032
    2. '0' → logprob: -1.4181973934173584
    3. '1' → logprob: -4.6681976318359375
    4. ' [' → logprob: -6.6681976318359375
    5. ' map' → logprob: -7.9181976318359375
    6. '[' → logprob: -8.293197631835938
    7. 'map' → logprob: -9.043197631835938
    8. ' growth' → logprob: -9.043197631835938
    9. ' np' → logprob: -9.418197631835938
    10. ' population' → logprob: -9.543197631835938

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.9856888055801392
    2. '(lambda' → logprob: -0.9856888055801392
    3. '(' → logprob: -2.1106886863708496
    4. '<|end|>' → logprob: -2.3606886863708496
    5. '(str' → logprob: -4.48568868637085
    6. 'int' → logprob: -4.98568868637085
    7. '[int' → logprob: -5.36068868637085
    8. '```' → logprob: -5.36068868637085
    9. '<|end|>' → logprob: -5.98568868637085
    10. 'lambda' → logprob: -6.11068868637085

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05610239505767822
    2. ')' → logprob: -3.0561022758483887
    3. '(' → logprob: -5.431102275848389
    4. 'input' → logprob: -6.681102275848389
    5. '(user' → logprob: -6.681102275848389
    6. '(raw' → logprob: -9.306102752685547
    7. '<|end|>' → logprob: -9.556102752685547
    8. '('' → logprob: -9.806102752685547
    9. '```' → logprob: -10.181102752685547
    10. ',input' → logprob: -10.181102752685547

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029761141166090965
    2. ' input' → logprob: -3.5297610759735107
    3. '(input' → logprob: -11.90476131439209
    4. 'range' → logprob: -13.02976131439209
    5. ')' → logprob: -15.02976131439209
    6. '```' → logprob: -15.02976131439209
    7. 'data' → logprob: -15.52976131439209
    8. ',input' → logprob: -15.65476131439209
    9. '[input' → logprob: -15.90476131439209
    10. 'list' → logprob: -16.029760360717773

Token 12: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3991612195968628
    2. ')' → logprob: -2.2741613388061523
    3. '())' → logprob: -2.7741613388061523
    4. '(token' → logprob: -2.8991613388061523
    5. '()' → logprob: -3.7741613388061523
    6. '<|end|>' → logprob: -4.149161338806152
    7. '```' → logprob: -4.899161338806152
    8. '('' → logprob: -4.899161338806152
    9. '(()' → logprob: -5.024161338806152
    10. '<|end|>' → logprob: -5.149161338806152

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00027230256819166243
    2. 'strip' → logprob: -8.250272750854492
    3. 'rstrip' → logprob: -12.000272750854492
    4. ' split' → logprob: -12.625272750854492
    5. '(split' → logprob: -13.750272750854492
    6. 'spl' → logprob: -15.375272750854492
    7. '```' → logprob: -15.625272750854492
    8. 'startswith' → logprob: -16.000272750854492
    9. 'read' → logprob: -16.875272750854492
    10. 'replace' → logprob: -18.375272750854492

Token 14: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47486114501953125
    2. '())' → logprob: -1.0998611450195312
    3. '(' → logprob: -3.3498611450195312
    4. '()' → logprob: -5.224861145019531
    5. '('' → logprob: -5.849861145019531
    6. '))' → logprob: -7.474861145019531
    7. '`)' → logprob: -8.849861145019531
    8. '```' → logprob: -9.099861145019531
    9. '(','' → logprob: -9.224861145019531
    10. ')(' → logprob: -9.349861145019531

Token 15: 'current' (ID: 5804)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.966018557548523
    2. '*' → logprob: -1.841018557548523
    3. ')' → logprob: -1.966018557548523
    4. '#' → logprob: -2.5910186767578125
    5. ',' → logprob: -2.7160186767578125
    6. '**' → logprob: -3.2160186767578125
    7. '```' → logprob: -3.5910186767578125
    8. '.' → logprob: -3.8410186767578125
    9. '<|end|>' → logprob: -4.3410186767578125
    10. ':' → logprob: -4.3410186767578125

Token 16: '_population' (ID: 197327)
  Prédit: '_population'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_population' → logprob: -0.3238430619239807
    2. '_' → logprob: -1.323843002319336
    3. '_growth' → logprob: -5.198843002319336
    4. '_value' → logprob: -5.948843002319336
    5. '_space' → logprob: -6.823843002319336
    6. '_pop' → logprob: -7.448843002319336
    7. '_year' → logprob: -9.198843002319336
    8. ' _' → logprob: -9.323843002319336
    9. '_time' → logprob: -9.448843002319336
    10. '_rate' → logprob: -9.698843002319336

Token 17: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8913372755050659
    2. ' =' → logprob: -1.141337275505066
    3. ' *=' → logprob: -2.1413373947143555
    4. '=' → logprob: -2.6413373947143555
    5. '+=' → logprob: -3.3913373947143555
    6. '*' → logprob: -3.7663373947143555
    7. '+' → logprob: -4.7663373947143555
    8. ' ' → logprob: -5.0163373947143555
    9. ' *' → logprob: -5.3913373947143555
    10. '*=' → logprob: -6.0163373947143555

Token 18: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.38742971420288086
    2. 'initial' → logprob: -1.1374297142028809
    3. ' growth' → logprob: -8.887430191040039
    4. 'int' → logprob: -9.262430191040039
    5. ' current' → logprob: -9.387430191040039
    6. ' int' → logprob: -9.762430191040039
    7. 'growth' → logprob: -9.887430191040039
    8. 'current' → logprob: -10.012430191040039
    9. '(initial' → logprob: -10.137430191040039
    10. 'offset' → logprob: -10.637430191040039

Token 19: '_population' (ID: 197327)
  Prédit: '_population'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_population' → logprob: -0.023490389809012413
    2. '_' → logprob: -3.7734904289245605
    3. '_pop' → logprob: -8.523489952087402
    4. '_p' → logprob: -10.148489952087402
    5. '_growth' → logprob: -12.273489952087402
    6. ' _' → logprob: -14.148489952087402
    7. 'Population' → logprob: -14.898489952087402
    8. '_space' → logprob: -14.898489952087402
    9. 'population' → logprob: -15.773489952087402
    10. ' population' → logprob: -16.02349090576172

Token 20: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31707528233528137
    2. '*' → logprob: -2.067075252532959
    3. '<|end|>' → logprob: -2.067075252532959
    4. ' +' → logprob: -4.942075252532959
    5. '+
' → logprob: -5.942075252532959
    6. '<|end|>' → logprob: -6.067075252532959
    7. ',' → logprob: -6.567075252532959
    8. ' *' → logprob: -6.942075252532959
    9. ' ' → logprob: -7.192075252532959
    10. '```' → logprob: -7.442075252532959

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7463150024414062
    2. 'while' → logprob: -1.6213150024414062
    3. ' for' → logprob: -1.7463150024414062
    4. ' while' → logprob: -2.4963150024414062
    5. '```' → logprob: -2.8713150024414062
    6. '
' → logprob: -5.246315002441406
    7. ',' → logprob: -6.246315002441406
    8. '*' → logprob: -6.496315002441406
    9. '`' → logprob: -6.871315002441406
    10. '+' → logprob: -7.246315002441406

Token 22: ' iteration' (ID: 43155)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1407243013381958
    2. ' year' → logprob: -2.7657241821289062
    3. ' _' → logprob: -2.8907241821289062
    4. ' ' → logprob: -4.640724182128906
    5. '_' → logprob: -5.890724182128906
    6. ' t' → logprob: -8.765724182128906
    7. ' day' → logprob: -10.015724182128906
    8. ' ' → logprob: -10.390724182128906
    9. ' step' → logprob: -10.765724182128906
    10. ' population' → logprob: -10.765724182128906

Token 23: '_number' (ID: 11733)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14468622207641602
    2. 'in' → logprob: -2.019686222076416
    3. ' ' → logprob: -7.019686222076416
    4. '_' → logprob: -7.644686222076416
    5. '_in' → logprob: -8.269685745239258
    6. '<|end|>' → logprob: -9.144685745239258
    7. '  ' → logprob: -9.894685745239258
    8. '_token' → logprob: -10.144685745239258
    9. '   ' → logprob: -10.769685745239258
    10. '```' → logprob: -10.894685745239258

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009015853516757488
    2. 'in' → logprob: -4.759016036987305
    3. ' ' → logprob: -8.134016036987305
    4. '+' → logprob: -10.384016036987305
    5. '<|end|>' → logprob: -10.384016036987305
    6. '  ' → logprob: -11.384016036987305
    7. ',' → logprob: -11.759016036987305
    8. ' ,' → logprob: -11.884016036987305
    9. '1' → logprob: -12.884016036987305
    10. 'In' → logprob: -13.509016036987305

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029819458723068237
    2. 'range' → logprob: -3.5298194885253906
    3. ' ' → logprob: -9.65481948852539
    4. '	range' → logprob: -12.77981948852539
    5. ' xrange' → logprob: -14.40481948852539
    6. '  ' → logprob: -14.65481948852539
    7. '(range' → logprob: -14.65481948852539
    8. '<|end|>' → logprob: -15.65481948852539
    9. '_range' → logprob: -16.15481948852539
    10. '```' → logprob: -16.40481948852539

Token 26: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.347765181795694e-05
    2. '(current' → logprob: -10.625053405761719
    3. ' (' → logprob: -11.250053405761719
    4. '(len' → logprob: -11.375053405761719
    5. '(
' → logprob: -13.000053405761719
    6. '(n' → logprob: -14.375053405761719
    7. '(iter' → logprob: -14.500053405761719
    8. '(initial' → logprob: -15.500053405761719
    9. '(start' → logprob: -15.625053405761719
    10. '(

' → logprob: -15.875053405761719

Token 27: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8941313028335571
    2. '100' → logprob: -0.8941313028335571
    3. '10' → logprob: -2.0191311836242676
    4. 'offset' → logprob: -3.2691311836242676
    5. '50' → logprob: -5.894131183624268
    6. 'growth' → logprob: -6.019131183624268
    7. '0' → logprob: -6.519131183624268
    8. 'current' → logprob: -7.019131183624268
    9. '20' → logprob: -7.019131183624268
    10. '11' → logprob: -7.394131183624268

Token 28: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029021166265010834
    2. ' ):' → logprob: -6.377902030944824
    3. ')' → logprob: -7.002902030944824
    4. '+' → logprob: -8.752902030944824
    5. ':' → logprob: -9.377902030944824
    6. '):
' → logprob: -10.627902030944824
    7. ',' → logprob: -11.627902030944824
    8. ' )' → logprob: -12.252902030944824
    9. '**' → logprob: -12.627902030944824
    10. ' +' → logprob: -13.877902030944824

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8912980556488037
    2. ' current' → logprob: -1.5162980556488037
    3. ':' → logprob: -2.0162980556488037
    4. 'current' → logprob: -2.1412980556488037
    5. ' :' → logprob: -3.2662980556488037
    6. '    ' → logprob: -3.2662980556488037
    7. ' :
' → logprob: -4.141298294067383
    8. '```' → logprob: -4.641298294067383
    9. ':
' → logprob: -5.141298294067383
    10. '     
' → logprob: -6.141298294067383

Token 30: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.0748092383146286
    2. 'current' (adapté à ' current') → logprob: -2.6998093128204346
    3. '   ' → logprob: -5.6998090744018555
    4. ' print' → logprob: -7.3248090744018555
    5. '```' → logprob: -8.324809074401855
    6. 'print' → logprob: -8.574809074401855
    7. ' growth' → logprob: -8.949809074401855
    8. ' population' → logprob: -9.699809074401855
    9. '    
' → logprob: -10.074809074401855
    10. '    ' → logprob: -10.324809074401855

Token 31: '_population' (ID: 197327)
  Prédit: '_population'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_population' → logprob: -0.0006077215657569468
    2. '_pop' → logprob: -8.25060749053955
    3. '_growth' → logprob: -8.37560749053955
    4. '_' → logprob: -9.12560749053955
    5. ' _' → logprob: -12.50060749053955
    6. '_p' → logprob: -14.12560749053955
    7. '_density' → logprob: -15.00060749053955
    8. 'Population' → logprob: -15.25060749053955
    9. '_space' → logprob: -15.37560749053955
    10. '_s' → logprob: -15.87560749053955

Token 32: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.7866902351379395
    2. ' +=' → logprob: -0.9116902351379395
    3. '=' → logprob: -3.0366902351379395
    4. '+=' → logprob: -3.0366902351379395
    5. '*=' → logprob: -3.6616902351379395
    6. ' =' → logprob: -3.9116902351379395
    7. '*' → logprob: -7.5366902351379395
    8. ' ' → logprob: -8.786689758300781
    9. '   ' → logprob: -8.786689758300781
    10. '    ' → logprob: -9.161689758300781

Token 33: ' growth' (ID: 8266)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.48412269353866577
    2. 'current' → logprob: -0.9841226935386658
    3. 'int' → logprob: -4.9841227531433105
    4. ' int' → logprob: -5.8591227531433105
    5. '(current' → logprob: -8.984122276306152
    6. '(int' → logprob: -9.984122276306152
    7. '   ' → logprob: -9.984122276306152
    8. ' (' → logprob: -10.609122276306152
    9. 'round' → logprob: -11.109122276306152
    10. ' ' → logprob: -11.609122276306152

Token 34: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -11.87501049041748
    3. ' _' → logprob: -13.12501049041748
    4. '_r' → logprob: -15.00001049041748
    5. '_ratio' → logprob: -15.25001049041748
    6. '_factor' → logprob: -15.62501049041748
    7. '_token' → logprob: -15.87501049041748
    8. '_code' → logprob: -16.375009536743164
    9. '_rates' → logprob: -16.750009536743164
    10. '_growth' → logprob: -16.875009536743164

Token 35: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14288422465324402
    2. '*' → logprob: -2.0178842544555664
    3. '+' → logprob: -9.392884254455566
    4. ' +' → logprob: -9.767884254455566
    5. ' ' → logprob: -10.017884254455566
    6. '   ' → logprob: -12.142884254455566
    7. '/' → logprob: -12.392884254455566
    8. '**' → logprob: -12.642884254455566
    9. '<|end|>' → logprob: -13.017884254455566
    10. ' /' → logprob: -14.017884254455566

Token 36: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10021130740642548
    2. ' current' → logprob: -2.3502113819122314
    3. '(current' → logprob: -12.850211143493652
    4. ' ' → logprob: -14.225211143493652
    5. '$current' → logprob: -15.225211143493652
    6. 'urrent' → logprob: -15.600211143493652
    7. '	current' → logprob: -15.600211143493652
    8. '   ' → logprob: -15.725211143493652
    9. ' (' → logprob: -16.22521209716797
    10. '_current' → logprob: -16.47521209716797

Token 37: '_population' (ID: 197327)
  Prédit: '_population'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_population' → logprob: -1.4974866644479334e-05
    2. '_pop' → logprob: -11.250015258789062
    3. '_' → logprob: -13.250015258789062
    4. 'population' → logprob: -17.000015258789062
    5. 'Population' → logprob: -17.125015258789062
    6. '_p' → logprob: -17.125015258789062
    7. '_growth' → logprob: -17.500015258789062
    8. ' _' → logprob: -18.500015258789062
    9. '_period' → logprob: -19.750015258789062
    10. '_per' → logprob: -20.375015258789062

Token 38: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760065913200378
    2. ' +' → logprob: -0.8260065913200378
    3. ' -' → logprob: -9.826006889343262
    4. '-' → logprob: -11.701006889343262
    5. ' ' → logprob: -13.326006889343262
    6. '+
' → logprob: -13.951006889343262
    7. ' plus' → logprob: -14.201006889343262
    8. ' +
' → logprob: -14.326006889343262
    9. 'plus' → logprob: -15.326006889343262
    10. '＋' → logprob: -15.951006889343262

Token 39: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.28167134523391724
    2. ' offset' → logprob: -1.4066712856292725
    3. ' current' → logprob: -8.156671524047852
    4. 'current' → logprob: -9.156671524047852
    5. 'off' → logprob: -9.656671524047852
    6. '(offset' → logprob: -10.531671524047852
    7. '	offset' → logprob: -11.781671524047852
    8. 'growth' → logprob: -11.906671524047852
    9. 'offs' → logprob: -12.531671524047852
    10. ' ' → logprob: -12.781671524047852

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05540495365858078
    2. '<|end|>' → logprob: -3.4304049015045166
    3. '\n' → logprob: -4.930405139923096
    4. 'print' → logprob: -5.680405139923096
    5. ' 
' → logprob: -6.180405139923096
    6. '    
' → logprob: -6.555405139923096
    7. '```' → logprob: -6.555405139923096
    8. '
' → logprob: -6.805405139923096
    9. '  
' → logprob: -6.930405139923096
    10. 'current' → logprob: -7.180405139923096

Token 41: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24893927574157715
    2. '<|end|>' → logprob: -1.8739392757415771
    3. 'print' → logprob: -3.248939275741577
    4. '\n' → logprob: -5.248939514160156
    5. ' ' → logprob: -5.623939514160156
    6. '   ' → logprob: -5.873939514160156
    7. '```' → logprob: -5.873939514160156
    8. ' if' → logprob: -6.123939514160156
    9. '  
' → logprob: -6.373939514160156
    10. 'current' → logprob: -6.373939514160156

Token 42: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.27493342757225037
    2. '   ' → logprob: -2.024933338165283
    3. ' print' → logprob: -2.774933338165283
    4. ' if' → logprob: -4.024933338165283
    5. '
' → logprob: -4.399933338165283
    6. '<|end|>' → logprob: -5.399933338165283
    7. '    
' → logprob: -5.524933338165283
    8. '\n' → logprob: -6.149933338165283
    9. '    ' → logprob: -6.649933338165283
    10. '\' → logprob: -7.274933338165283

Token 43: '(current' (ID: 15023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5761494636535645
    2. '(current' → logprob: -0.8261494636535645
    3. '(f' → logprob: -9.826148986816406
    4. 'current' → logprob: -10.201148986816406
    5. '("("' → logprob: -10.201148986816406
    6. '('' → logprob: -10.451148986816406
    7. '()' → logprob: -10.826148986816406
    8. '((' → logprob: -10.951148986816406
    9. '(cur' → logprob: -12.076148986816406
    10. ' (' → logprob: -13.326148986816406

Token 44: '_population' (ID: 197327)
  Prédit: '_population'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_population' → logprob: -3.547789674485102e-05
    2. '_pop' → logprob: -10.375035285949707
    3. '_' → logprob: -12.875035285949707
    4. '_p' → logprob: -15.000035285949707
    5. ')_' → logprob: -15.000035285949707
    6. 'Population' → logprob: -15.125035285949707
    7. '_growth' → logprob: -16.000036239624023
    8. ' _' → logprob: -16.125036239624023
    9. '_)' → logprob: -16.125036239624023
    10. ')' → logprob: -16.375036239624023

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.875000953674316
    3. '`)' → logprob: -15.750000953674316
    4. ')
' → logprob: -16.25
    5. ')`' → logprob: -16.625
    6. '))' → logprob: -17.25
    7. '')' → logprob: -17.75
    8. '()' → logprob: -17.875
    9. '```' → logprob: -18.75
    10. '#' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 43
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 39.53%
Précision adaptée (1ère position): 41.86%
Précision (top 10): 69.77%
================================================================================
