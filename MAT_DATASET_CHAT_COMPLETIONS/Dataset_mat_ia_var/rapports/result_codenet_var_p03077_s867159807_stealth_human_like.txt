================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

# nombre de personnes à faire passer
n = int(input())
# stocke la capacité de chaque transport
capa = []
for i in range(5):
    val = int(input())  # lecture "manuelle"
    capa.append(val)

# Cherche le goulet d'étranglement
minc = capa[0]
for j in range(5):
    if capa[j] < minc:
        minc = capa[j]

# calcule le nombre d'étapes (pas sûr, à vérifier)
tmp = n / minc
if n % minc != 0:
    tmp += 1

res = int(tmp + 4)  # 5-1 == 4, je suppose

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00236007128842175
    2. '```' → logprob: -7.252359867095947
    3. '\n' → logprob: -7.502359867095947
    4. '\' → logprob: -7.877359867095947
    5. 'import' → logprob: -8.002360343933105
    6. '<|end|>' → logprob: -9.252360343933105
    7. '.pi' → logprob: -10.127360343933105
    8. 'a' → logprob: -11.002360343933105
    9. '.e' → logprob: -11.127360343933105
    10. '<|end|>' → logprob: -11.127360343933105

Token 4: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2532905638217926
    2. ' Calculate' → logprob: -3.1282906532287598
    3. ' def' → logprob: -3.7532906532287598
    4. ' factorial' → logprob: -3.8782906532287598
    5. ' calculates' → logprob: -4.00329065322876
    6. ' calculate' → logprob: -4.00329065322876
    7. 'Calculate' → logprob: -4.37829065322876
    8. ' space' → logprob: -4.75329065322876
    9. ' area' → logprob: -4.75329065322876
    10. ' is' → logprob: -5.12829065322876

Token 5: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2744017243385315
    2. 's' → logprob: -2.1494016647338867
    3. ' =' → logprob: -2.5244016647338867
    4. '=' → logprob: -3.5244016647338867
    5. ' ' → logprob: -5.399401664733887
    6. '_s' → logprob: -5.524401664733887
    7. '_de' → logprob: -6.649401664733887
    8. '_space' → logprob: -6.899401664733887
    9. '.' → logprob: -7.524401664733887
    10. 'es' → logprob: -7.649401664733887

Token 6: ' personnes' (ID: 20203)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9346359968185425
    2. '_' → logprob: -1.5596359968185425
    3. 's' → logprob: -2.434636116027832
    4. 'places' → logprob: -2.434636116027832
    5. ' places' → logprob: -2.684636116027832
    6. 'spaces' → logprob: -3.184636116027832
    7. ' spaces' → logprob: -3.934636116027832
    8. ' espaces' → logprob: -4.434636116027832
    9. 'd' → logprob: -4.684636116027832
    10. 'space' → logprob: -5.059636116027832

Token 7: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.346108078956604
    2. '_' → logprob: -2.0961079597473145
    3. '=' → logprob: -2.7211079597473145
    4. 's' → logprob: -2.8461079597473145
    5. ' ' → logprob: -3.8461079597473145
    6. '_s' → logprob: -5.0961079597473145
    7. '_total' → logprob: -5.7211079597473145
    8. ')' → logprob: -6.0961079597473145
    9. '_max' → logprob: -6.3461079597473145
    10. '_=' → logprob: -6.4711079597473145

Token 8: ' faire' (ID: 8119)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -2.245802879333496
    2. 'placer' → logprob: -2.620802879333496
    3. 'aj' → logprob: -2.745802879333496
    4. 'import' → logprob: -2.995802879333496
    5. 'sim' → logprob: -2.995802879333496
    6. 'part' → logprob: -2.995802879333496
    7. '```' → logprob: -2.995802879333496
    8. 'inv' → logprob: -3.120802879333496
    9. 'prendre' → logprob: -3.120802879333496
    10. 'prés' → logprob: -3.120802879333496

Token 9: ' passer' (ID: 27727)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3201318979263306
    2. ' ' → logprob: -1.6951318979263306
    3. 'un' → logprob: -2.195131778717041
    4. ' une' → logprob: -2.445131778717041
    5. 'particip' → logprob: -3.070131778717041
    6. ' l' → logprob: -3.195131778717041
    7. ' la' → logprob: -3.195131778717041
    8. 'une' → logprob: -3.320131778717041
    9. ' un' → logprob: -3.570131778717041
    10. ' participer' → logprob: -3.945131778717041

Token 10: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3575543463230133
    2. '_' → logprob: -2.8575544357299805
    3. 's' → logprob: -2.9825544357299805
    4. ',' → logprob: -3.7325544357299805
    5. ' :' → logprob: -3.7325544357299805
    6. ':' → logprob: -3.8575544357299805
    7. ' =' → logprob: -3.8575544357299805
    8. ' au' → logprob: -4.3575544357299805
    9. ' test' → logprob: -4.3575544357299805
    10. ' la' → logprob: -4.4825544357299805

Token 11: 'n' (ID: 77)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.020685076713562
    2. 'n' → logprob: -1.520685076713562
    3. ' =' → logprob: -1.520685076713562
    4. '_' → logprob: -2.2706851959228516
    5. '=' → logprob: -4.020685195922852
    6. ' n' → logprob: -4.395685195922852
    7. 's' → logprob: -4.395685195922852
    8. 'pass' → logprob: -4.645685195922852
    9. 'p' → logprob: -5.145685195922852
    10. 'person' → logprob: -5.270685195922852

Token 12: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06898802518844604
    2. ' =' → logprob: -2.943988084793091
    3. '=' → logprob: -5.818987846374512
    4. '_space' → logprob: -5.818987846374512
    5. ' _' → logprob: -5.818987846374512
    6. ' ' → logprob: -6.068987846374512
    7. '_people' → logprob: -7.443987846374512
    8. '_person' → logprob: -7.818987846374512
    9. '.' → logprob: -8.068987846374512
    10. '_pass' → logprob: -8.318987846374512

Token 13: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005005567334592342
    2. '10' → logprob: -5.505005359649658
    3. '20' → logprob: -7.880005359649658
    4. '5' → logprob: -8.380005836486816
    5. '0' → logprob: -9.130005836486816
    6. '3' → logprob: -9.505005836486816
    7. '1' → logprob: -10.630005836486816
    8. '50' → logprob: -11.005005836486816
    9. '100' → logprob: -11.130005836486816
    10. '4' → logprob: -11.130005836486816

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006982714403420687
    2. '(input' → logprob: -5.006982803344727
    3. '()' → logprob: -9.131982803344727
    4. ' (' → logprob: -9.506982803344727
    5. '('' → logprob: -11.006982803344727
    6. '(n' → logprob: -11.131982803344727
    7. '(user' → logprob: -11.506982803344727
    8. '(`' → logprob: -11.756982803344727
    9. '(
' → logprob: -12.631982803344727
    10. '(s' → logprob: -12.756982803344727

Token 15: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021630216389894485
    2. '()' → logprob: -3.89663028717041
    3. '('' → logprob: -8.14663028717041
    4. ')' → logprob: -8.27163028717041
    5. '(
' → logprob: -8.64663028717041
    6. '())' → logprob: -8.89663028717041
    7. '("("' → logprob: -9.39663028717041
    8. '("")' → logprob: -10.14663028717041
    9. '(

' → logprob: -10.52163028717041
    10. '(""))' → logprob: -10.64663028717041

Token 16: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7296213507652283
    2. 's' → logprob: -1.729621410369873
    3. ' ' → logprob: -2.729621410369873
    4. ')' → logprob: -2.854621410369873
    5. 'person' → logprob: -3.354621410369873
    6. 'm' → logprob: -3.604621410369873
    7. '\n' → logprob: -3.854621410369873
    8. '\' → logprob: -3.979621410369873
    9. ',' → logprob: -4.229621410369873
    10. 'people' → logprob: -4.354621410369873

Token 17: ' stock' (ID: 6546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5192736983299255
    2. ' for' → logprob: -1.5192737579345703
    3. ' nombre' → logprob: -4.01927375793457
    4. ' nombres' → logprob: -4.01927375793457
    5. ' personnes' → logprob: -4.26927375793457
    6. 'nombre' → logprob: -4.39427375793457
    7. ' temps' → logprob: -4.51927375793457
    8. 'person' → logprob: -4.51927375793457
    9. ' m' → logprob: -4.76927375793457
    10. ' ages' → logprob: -4.89427375793457

Token 18: 'e' (ID: 68)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.023873424157500267
    2. 'é' → logprob: -4.273873329162598
    3. 'er' → logprob: -4.773873329162598
    4. 'ée' → logprob: -7.398873329162598
    5. 'e' → logprob: -8.398873329162598
    6. '_' → logprob: -8.898873329162598
    7. ' =' → logprob: -9.898873329162598
    8. '=' → logprob: -9.898873329162598
    9. 'ages' → logprob: -10.273873329162598
    10. '_age' → logprob: -10.273873329162598

Token 19: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0654260516166687
    2. ' ' → logprob: -3.3154261112213135
    3. ' =' → logprob: -4.440425872802734
    4. 'r' → logprob: -5.440425872802734
    5. 's' → logprob: -5.440425872802734
    6. 'e' → logprob: -6.690425872802734
    7. '=' → logprob: -7.315425872802734
    8. '_le' → logprob: -7.315425872802734
    9. ' _' → logprob: -7.690425872802734
    10. ' des' → logprob: -7.815425872802734

Token 20: ' capacité' (ID: 62575)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.3970181345939636
    2. 'liste' → logprob: -2.2720181941986084
    3. ' ' → logprob: -2.3970181941986084
    4. 's' → logprob: -2.7720181941986084
    5. ' quantité' → logprob: -4.147017955780029
    6. '  ' → logprob: -5.522017955780029
    7. ' durée' → logprob: -5.647017955780029
    8. ' 

' → logprob: -5.897017955780029
    9. 'distance' → logprob: -6.209517955780029
    10. ' list' → logprob: -6.209517955780029

Token 21: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.160179853439331
    2. ' d' → logprob: -1.535179853439331
    3. '_' → logprob: -2.160179853439331
    4. ' des' → logprob: -2.785179853439331
    5. ' maximale' → logprob: -2.785179853439331
    6. '_max' → logprob: -3.160179853439331
    7. 'des' → logprob: -3.535179853439331
    8. 'max' → logprob: -3.660179853439331
    9. 'd' → logprob: -3.785179853439331
    10. 'de' → logprob: -3.910179853439331

Token 22: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.2519185245037079
    2. 'transport' → logprob: -2.3769185543060303
    3. ' transport' → logprob: -2.7519185543060303
    4. 'cha' → logprob: -3.7519185543060303
    5. ' each' → logprob: -5.001918315887451
    6. 'ch' → logprob: -5.001918315887451
    7. ' la' → logprob: -5.376918315887451
    8. 'each' → logprob: -5.501918315887451
    9. ' passage' → logprob: -6.001918315887451
    10. 's' → logprob: -6.001918315887451

Token 23: ' transport' (ID: 7704)
  Prédit: ' personne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' personne' → logprob: -0.43505385518074036
    2. 'person' → logprob: -1.810053825378418
    3. ' pont' → logprob: -2.810053825378418
    4. ' transport' → logprob: -3.185053825378418
    5. ' groupe' → logprob: -4.185053825378418
    6. 'transport' → logprob: -4.310053825378418
    7. ' bus' → logprob: -4.685053825378418
    8. ' bateau' → logprob: -4.810053825378418
    9. ' ferry' → logprob: -5.310053825378418
    10. ' person' → logprob: -5.560053825378418

Token 24: '
' (ID: 198)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.7203975319862366
    2. 's' → logprob: -0.8453975319862366
    3. '_' → logprob: -3.970397472381592
    4. 'transport' → logprob: -4.345397472381592
    5. ' ' → logprob: -4.470397472381592
    6. 'cap' → logprob: -4.720397472381592
    7. 'capacity' → logprob: -4.970397472381592
    8. '_cap' → logprob: -4.970397472381592
    9. '_transport' → logprob: -5.970397472381592
    10. ' capacities' → logprob: -6.345397472381592

Token 25: 'c' (ID: 66)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.04854966327548027
    2. ' transports' → logprob: -3.6735496520996094
    3. 'trans' → logprob: -4.923549652099609
    4. ' capacities' → logprob: -5.173549652099609
    5. 'cap' → logprob: -6.173549652099609
    6. 'transport' → logprob: -6.173549652099609
    7. ' capac' → logprob: -6.423549652099609
    8. 'capacity' → logprob: -6.923549652099609
    9. ' transport' → logprob: -7.048549652099609
    10. 'caps' → logprob: -8.29854965209961

Token 26: 'apa' (ID: 7063)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.01892063207924366
    2. 'a' → logprob: -4.643920421600342
    3. ' =' → logprob: -5.893920421600342
    4. '_' → logprob: -6.018920421600342
    5. 'aps' → logprob: -7.268920421600342
    6. 'apa' → logprob: -7.393920421600342
    7. '=' → logprob: -7.643920421600342
    8. '_cap' → logprob: -7.893920421600342
    9. 's' → logprob: -8.5189208984375
    10. 'cap' → logprob: -8.6439208984375

Token 27: ' =' (ID: 314)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.48564228415489197
    2. 'c' → logprob: -0.9856423139572144
    3. 'cities' → logprob: -4.985642433166504
    4. 'cit' → logprob: -6.985642433166504
    5. 'ci' → logprob: -6.985642433166504
    6. 'cidade' → logprob: -7.110642433166504
    7. '_c' → logprob: -7.610642433166504
    8. '_' → logprob: -8.110642433166504
    9. '_city' → logprob: -8.360642433166504
    10. 's' → logprob: -8.610642433166504

Token 28: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.13819709420204163
    2. ' []' → logprob: -3.013197183609009
    3. '[' → logprob: -3.138197183609009
    4. 'list' → logprob: -3.638197183609009
    5. '[int' → logprob: -5.01319694519043
    6. '[list' → logprob: -6.63819694519043
    7. ' [' → logprob: -6.88819694519043
    8. ' list' → logprob: -7.13819694519043
    9. '{}' → logprob: -8.13819694519043
    10. '[input' → logprob: -10.26319694519043

Token 29: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03447169065475464
    2. '<|end|>' → logprob: -4.15947151184082
    3. ' for' → logprob: -4.40947151184082
    4. '
' → logprob: -6.28447151184082
    5. '[' → logprob: -6.90947151184082
    6. 'n' → logprob: -7.15947151184082
    7. '<|end|>' → logprob: -7.53447151184082
    8. '#' → logprob: -7.53447151184082
    9. ')' → logprob: -8.03447151184082
    10. 'c' → logprob: -8.40947151184082

Token 30: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7702575922012329
    2. ' ' → logprob: -1.020257592201233
    3. ' i' → logprob: -1.770257592201233
    4. '_' → logprob: -5.145257472991943
    5. '  ' → logprob: -8.395257949829102
    6. 'i' → logprob: -9.020257949829102
    7. ' ' → logprob: -9.395257949829102
    8. '_i' → logprob: -10.895257949829102
    9. ' ‌' → logprob: -11.520257949829102
    10. ' range' → logprob: -12.395257949829102

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03595538064837456
    2. 'in' → logprob: -3.4109554290771484
    3. ' ' → logprob: -6.285955429077148
    4. 'n' → logprob: -7.910955429077148
    5. '_' → logprob: -10.285955429077148
    6. '  ' → logprob: -10.785955429077148
    7. ' n' → logprob: -11.410955429077148
    8. 'range' → logprob: -12.660955429077148
    9. '	in' → logprob: -13.785955429077148
    10. 's' → logprob: -13.910955429077148

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0008302362984977663
    2. 'range' → logprob: -7.250830173492432
    3. ' ' → logprob: -9.12583065032959
    4. '	range' → logprob: -12.25083065032959
    5. '  ' → logprob: -12.75083065032959
    6. ' ran' → logprob: -13.75083065032959
    7. ' ' → logprob: -14.50083065032959
    8. ' ra' → logprob: -14.87583065032959
    9. ' xrange' → logprob: -15.37583065032959
    10. '```' → logprob: -15.50083065032959

Token 33: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28574690222740173
    2. '(n' → logprob: -1.4107469320297241
    3. ' (' → logprob: -5.410747051239014
    4. '(
' → logprob: -9.660746574401855
    5. '(len' → logprob: -11.410746574401855
    6. '(s' → logprob: -11.535746574401855
    7. '(

' → logprob: -11.910746574401855
    8. '(int' → logprob: -12.035746574401855
    9. ' n' → logprob: -12.660746574401855
    10. ' ' → logprob: -12.910746574401855

Token 34: '5' (ID: 20)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31426602602005005
    2. 'n' → logprob: -1.3142659664154053
    3. ' ' → logprob: -8.189266204833984
    4. '10' → logprob: -8.814266204833984
    5. ')' → logprob: -8.939266204833984
    6. ')n' → logprob: -9.314266204833984
    7. '4' → logprob: -9.439266204833984
    8. ' )' → logprob: -9.689266204833984
    9. '3' → logprob: -9.939266204833984
    10. '0' → logprob: -10.189266204833984

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0610925629734993
    2. ' ):' → logprob: -3.3110926151275635
    3. ')' → logprob: -3.9360926151275635
    4. ':' → logprob: -5.936092376708984
    5. ' )' → logprob: -8.311092376708984
    6. ' :' → logprob: -8.561092376708984
    7. '):
' → logprob: -9.311092376708984
    8. '6' → logprob: -10.686092376708984
    9. ' ' → logprob: -11.311092376708984
    10. '+' → logprob: -11.686092376708984

Token 36: '   ' (ID: 271)
  Prédit: ' capa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capa' → logprob: -0.2015959620475769
    2. ' ' → logprob: -2.2015960216522217
    3. '   ' → logprob: -3.8265960216522217
    4. ' 
' → logprob: -4.201595783233643
    5. 'c' → logprob: -4.451595783233643
    6. '    ' → logprob: -4.826595783233643
    7. ' c' → logprob: -4.951595783233643
    8. '    
' → logprob: -6.201595783233643
    9. '	c' → logprob: -6.576595783233643
    10. '     
' → logprob: -6.826595783233643

Token 37: ' val' (ID: 1459)
  Prédit: ' capa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' capa' → logprob: -0.35117030143737793
    2. 'c' → logprob: -1.226170301437378
    3. 'capac' → logprob: -7.351170539855957
    4. ' capas' → logprob: -7.476170539855957
    5. 'cap' → logprob: -7.851170539855957
    6. '   ' → logprob: -7.976170539855957
    7. ' ' → logprob: -8.601170539855957
    8. ' c' → logprob: -8.976170539855957
    9. ' capac' → logprob: -9.476170539855957
    10. '```' → logprob: -9.476170539855957

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01322234608232975
    2. '=' → logprob: -4.3882222175598145
    3. 'ue' → logprob: -8.013222694396973
    4. 'eur' → logprob: -8.138222694396973
    5. '=int' → logprob: -9.888222694396973
    6. 'e' → logprob: -11.263222694396973
    7. 'or' → logprob: -11.513222694396973
    8. 'uer' → logprob: -12.763222694396973
    9. '   ' → logprob: -13.138222694396973
    10. 'u' → logprob: -13.138222694396973

Token 39: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759525299072266
    2. ' int' → logprob: -0.8259525299072266
    3. ' ' → logprob: -12.075952529907227
    4. '   ' → logprob: -13.325952529907227
    5. '	int' → logprob: -13.450952529907227
    6. '=int' → logprob: -13.450952529907227
    7. '[int' → logprob: -14.075952529907227
    8. '  ' → logprob: -14.325952529907227
    9. '(int' → logprob: -14.450952529907227
    10. '<int' → logprob: -14.575952529907227

Token 40: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -11.375012397766113
    3. '=input' → logprob: -15.625012397766113
    4. ' (' → logprob: -15.625012397766113
    5. 'input' → logprob: -15.875012397766113
    6. '()' → logprob: -16.375011444091797
    7. '<input' → logprob: -18.125011444091797
    8. ' input' → logprob: -18.500011444091797
    9. ',input' → logprob: -18.750011444091797
    10. '(
' → logprob: -19.125011444091797

Token 41: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.029780693352222443
    2. '()' → logprob: -3.529780626296997
    3. ')' → logprob: -11.154780387878418
    4. '())
' → logprob: -11.529780387878418
    5. ' ())' → logprob: -13.154780387878418
    6. '()
' → logprob: -13.779780387878418
    7. '();)' → logprob: -13.904780387878418
    8. '(' → logprob: -13.904780387878418
    9. '())

' → logprob: -15.029780387878418
    10. '()))' → logprob: -15.279780387878418

Token 42: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4578992128372192
    2. ' 
' → logprob: -1.8328992128372192
    3. '<|end|>' → logprob: -2.0828990936279297
    4. '	c' → logprob: -2.2078990936279297
    5. '   ' → logprob: -2.4578990936279297
    6. ')' → logprob: -2.5828990936279297
    7. '    
' → logprob: -2.7078990936279297
    8. ' capa' → logprob: -2.7078990936279297
    9. '
' → logprob: -3.2078990936279297
    10. ' ' → logprob: -5.08289909362793

Token 43: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2800898551940918
    2. ')' → logprob: -2.155089855194092
    3. ')
' → logprob: -3.030089855194092
    4. '   ' → logprob: -3.155089855194092
    5. ')c' → logprob: -3.530089855194092
    6. '
' → logprob: -6.030089855194092
    7. '    
' → logprob: -6.655089855194092
    8. ' capa' → logprob: -7.030089855194092
    9. '	c' → logprob: -7.030089855194092
    10. 'cap' → logprob: -8.03009033203125

Token 44: ' lecture' (ID: 31993)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08170730620622635
    2. ' capa' → logprob: -2.581707239151001
    3. '   ' → logprob: -6.83170747756958
    4. 'cap' → logprob: -7.95670747756958
    5. ' ' → logprob: -8.206707000732422
    6. 'capac' → logprob: -8.331707000732422
    7. ' capas' → logprob: -8.581707000732422
    8. '	c' → logprob: -8.831707000732422
    9. ' c' → logprob: -9.331707000732422
    10. '  ' → logprob: -9.331707000732422

Token 45: ' "' (ID: 392)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18461264669895172
    2. ')' → logprob: -1.9346126317977905
    3. '())' → logprob: -4.68461275100708
    4. ' )' → logprob: -5.18461275100708
    5. '(' → logprob: -5.30961275100708
    6. '<|end|>' → logprob: -6.30961275100708
    7. '()
' → logprob: -7.30961275100708
    8. ' ' → logprob: -7.55961275100708
    9. ' ()' → logprob: -7.93461275100708
    10. '  ' → logprob: -8.809612274169922

Token 46: 'man' (ID: 2309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36473122239112854
    2. ')' → logprob: -1.8647311925888062
    3. 'capac' → logprob: -2.4897313117980957
    4. '(cap' → logprob: -4.489731311798096
    5. '(' → logprob: -4.739731311798096
    6. 'cap' → logprob: -4.989731311798096
    7. 'de' → logprob: -5.114731311798096
    8. ' de' → logprob: -5.239731311798096
    9. 'val' → logprob: -5.239731311798096
    10. ' )' → logprob: -5.364731311798096

Token 47: 'uelle' (ID: 18079)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -1.3867027759552002
    2. 'uelle' → logprob: -1.7617027759552002
    3. 'que' → logprob: -2.2617027759552
    4. 'uellement' → logprob: -2.3867027759552
    5. 'd' → logprob: -3.1367027759552
    6. 'u' → logprob: -3.2617027759552
    7. 't' → logprob: -3.3867027759552
    8. 'ge' → logprob: -3.3867027759552
    9. 'qu' → logprob: -3.8867027759552
    10. 'ager' → logprob: -4.011702537536621

Token 48: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.559851348400116
    2. '"' → logprob: -1.8098514080047607
    3. '")' → logprob: -2.5598514080047607
    4. ')"' → logprob: -2.5598514080047607
    5. ' )' → logprob: -3.3098514080047607
    6. ' de' → logprob: -3.5598514080047607
    7. ' des' → logprob: -3.6848514080047607
    8. ' ")' → logprob: -4.934851169586182
    9. ' "' → logprob: -5.309851169586182
    10. ' du' → logprob: -5.684851169586182

Token 49: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3716503381729126
    2. '   ' → logprob: -1.9966503381729126
    3. '
' → logprob: -2.496650218963623
    4. ' capa' → logprob: -3.371650218963623
    5. ')' → logprob: -3.996650218963623
    6. '	c' → logprob: -4.621650218963623
    7. '    
' → logprob: -4.871650218963623
    8. '<|end|>' → logprob: -5.121650218963623
    9. ')c' → logprob: -5.746650218963623
    10. ' 
' → logprob: -6.121650218963623

Token 50: ' capa' (ID: 70254)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2776385247707367
    2. ' capa' → logprob: -1.527638554573059
    3. '   ' → logprob: -3.7776384353637695
    4. ' ' → logprob: -7.4026384353637695
    5. ' capas' → logprob: -7.6526384353637695
    6. '	c' → logprob: -7.9026384353637695
    7. 'capac' → logprob: -8.52763843536377
    8. ' c' → logprob: -8.52763843536377
    9. 'cap' → logprob: -8.77763843536377
    10. '  ' → logprob: -9.52763843536377

Token 51: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2519482672214508
    2. '.' → logprob: -1.5019482374191284
    3. ' .' → logprob: -11.751948356628418
    4. '.app' → logprob: -12.001948356628418
    5. 'append' → logprob: -13.751948356628418
    6. '.ap' → logprob: -13.876948356628418
    7. '.push' → logprob: -14.376948356628418
    8. '.Append' → logprob: -14.376948356628418
    9. '.add' → logprob: -14.501948356628418
    10. '.extend' → logprob: -14.626948356628418

Token 52: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.12693998217582703
    2. '(' → logprob: -2.1269400119781494
    3. ' (' → logprob: -11.75193977355957
    4. '(
' → logprob: -13.50193977355957
    5. '((' → logprob: -14.25193977355957
    6. '(valor' → logprob: -14.75193977355957
    7. '(

' → logprob: -15.00193977355957
    8. '(value' → logprob: -15.12693977355957
    9. '()' → logprob: -15.37693977355957
    10. '(math' → logprob: -16.00193977355957

Token 53: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. '))' → logprob: -13.87500286102295
    3. ')
' → logprob: -14.00000286102295
    4. ' )' → logprob: -14.75000286102295
    5. '`)' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '')' → logprob: -17.750001907348633
    8. ')}' → logprob: -17.750001907348633
    9. ')))' → logprob: -17.875001907348633
    10. '),' → logprob: -17.875001907348633

Token 54: '#' (ID: 2)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.33517012000083923
    2. '#' → logprob: -1.9601701498031616
    3. 'c' → logprob: -3.210170030593872
    4. '
' → logprob: -4.210170269012451
    5. 'cap' → logprob: -4.335170269012451
    6. 'capac' → logprob: -4.460170269012451
    7. 's' → logprob: -4.585170269012451
    8. 'max' → logprob: -4.585170269012451
    9. 'result' → logprob: -4.835170269012451
    10. 'remaining' → logprob: -5.210170269012451

Token 55: ' Cher' (ID: 48756)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3482242822647095
    2. '#' → logprob: -2.09822416305542
    3. 'c' → logprob: -3.34822416305542
    4. 'cap' → logprob: -3.84822416305542
    5. 'capac' → logprob: -4.09822416305542
    6. 's' → logprob: -4.47322416305542
    7. 'result' → logprob: -4.47322416305542
    8. 'max' → logprob: -4.59822416305542
    9. ' total' → logprob: -4.59822416305542
    10. 'def' → logprob: -4.59822416305542

Token 56: 'che' (ID: 926)
  Prédit: 'cher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.05417269468307495
    2. 'r' → logprob: -3.0541727542877197
    3. 'rch' → logprob: -5.304172515869141
    4. 'che' → logprob: -8.67917251586914
    5. 'er' → logprob: -8.92917251586914
    6. '#' → logprob: -8.92917251586914
    7. 'ch' → logprob: -9.42917251586914
    8. 're' → logprob: -10.17917251586914
    9. 'cker' → logprob: -11.17917251586914
    10. 'rc' → logprob: -11.67917251586914

Token 57: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3600459694862366
    2. ' ' → logprob: -2.110045909881592
    3. ' la' → logprob: -2.735045909881592
    4. 'r' → logprob: -3.110045909881592
    5. '_' → logprob: -3.735045909881592
    6. ' le' → logprob: -4.110045909881592
    7. ' l' → logprob: -4.985045909881592
    8. ' s' → logprob: -5.610045909881592
    9. 'es' → logprob: -5.985045909881592
    10. 'a' → logprob: -6.110045909881592

Token 58: ' gou' (ID: 40659)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.2233966588973999
    2. ' minimum' → logprob: -2.5983967781066895
    3. 'nombre' → logprob: -2.7233967781066895
    4. 'minimum' → logprob: -4.0983967781066895
    5. ' transport' → logprob: -4.2233967781066895
    6. 'min' → logprob: -5.4733967781066895
    7. ' nb' → logprob: -5.9733967781066895
    8. ' ' → logprob: -6.0983967781066895
    9. ' maximum' → logprob: -6.3483967781066895
    10. ' min' → logprob: -6.3483967781066895

Token 59: 'let' (ID: 1347)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.44626349210739136
    2. 'ver' → logprob: -2.071263551712036
    3. 'l' → logprob: -2.696263551712036
    4. 'let' → logprob: -3.321263551712036
    5. 'ff' → logprob: -3.321263551712036
    6. 'f' → logprob: -3.821263551712036
    7. 'v' → logprob: -3.946263551712036
    8. 'r' → logprob: -4.446263313293457
    9. 'p' → logprob: -4.571263313293457
    10. 'lf' → logprob: -4.946263313293457

Token 60: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1502436399459839
    2. ' d' → logprob: -2.0252437591552734
    3. 's' → logprob: -5.150243759155273
    4. '#' → logprob: -7.525243759155273
    5. ' ' → logprob: -8.275243759155273
    6. '_' → logprob: -8.525243759155273
    7. 'de' → logprob: -8.900243759155273
    8. '```' → logprob: -9.150243759155273
    9. '_d' → logprob: -9.650243759155273
    10. '  ' → logprob: -9.775243759155273

Token 61: ''é' (ID: 12728)
  Prédit: 'etr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etr' → logprob: -0.29624226689338684
    2. 'étr' → logprob: -1.5462422370910645
    3. 'etri' → logprob: -3.9212422370910645
    4. 'tr' → logprob: -4.5462422370910645
    5. ''é' → logprob: -5.2962422370910645
    6. 'et' → logprob: -6.4212422370910645
    7. 'etra' → logprob: -6.7962422370910645
    8. '```' → logprob: -7.0462422370910645
    9. 'etras' → logprob: -7.6712422370910645
    10. '`' → logprob: -7.7962422370910645

Token 62: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.00023691373644396663
    2. 't' → logprob: -9.750236511230469
    3. 'tran' → logprob: -9.750236511230469
    4. 'trau' → logprob: -10.250236511230469
    5. 'étr' → logprob: -10.625236511230469
    6. '<tr' → logprob: -11.375236511230469
    7. 'tra' → logprob: -11.625236511230469
    8. '```' → logprob: -11.875236511230469
    9. '(tr' → logprob: -12.500236511230469
    10. 'tau' → logprob: -12.625236511230469

Token 63: 'ang' (ID: 516)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.0177536029368639
    2. 'ang' → logprob: -4.642753601074219
    3. 'oui' → logprob: -5.892753601074219
    4. 'au' → logprob: -7.017753601074219
    5. 'out' → logprob: -7.142753601074219
    6. 'ouille' → logprob: -7.892753601074219
    7. 'ouc' → logprob: -8.017753601074219
    8. 'oul' → logprob: -8.017753601074219
    9. 'reau' → logprob: -8.017753601074219
    10. 'oute' → logprob: -8.267753601074219

Token 64: 'lement' (ID: 1254)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.5760715007781982
    2. 'ce' → logprob: -1.5760715007781982
    3. 'le' → logprob: -2.0760715007781982
    4. 'ent' → logprob: -3.8260715007781982
    5. 'et' → logprob: -3.8260715007781982
    6. 't' → logprob: -4.451071739196777
    7. 'e' → logprob: -4.576071739196777
    8. 'lace' → logprob: -4.951071739196777
    9. 'ace' → logprob: -5.451071739196777
    10. 'acement' → logprob: -5.576071739196777

Token 65: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0745443105697632
    2. '_' → logprob: -1.1995443105697632
    3. 'b' → logprob: -2.9495444297790527
    4. 'capac' → logprob: -3.1995444297790527
    5. 'max' → logprob: -3.3245444297790527
    6. '=' → logprob: -3.3245444297790527
    7. 'n' → logprob: -3.5745444297790527
    8. 'capacity' → logprob: -3.6995444297790527
    9. 's' → logprob: -3.8245444297790527
    10. 'm' → logprob: -3.8245444297790527

Token 66: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.4909602403640747
    2. 'b' → logprob: -2.115960121154785
    3. '=' → logprob: -2.240960121154785
    4. 'min' → logprob: -2.490960121154785
    5. 'cap' → logprob: -2.740960121154785
    6. 'capac' → logprob: -2.865960121154785
    7. ':' → logprob: -2.990960121154785
    8. 's' → logprob: -3.115960121154785
    9. 'n' → logprob: -3.240960121154785
    10. 'g' → logprob: -3.365960121154785

Token 67: 'c' (ID: 66)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003352736122906208
    2. '_cap' → logprob: -6.378352642059326
    3. '_c' → logprob: -6.628352642059326
    4. '_capacity' → logprob: -8.378353118896484
    5. '_=' → logprob: -10.003353118896484
    6. '_val' → logprob: -10.503353118896484
    7. '=' → logprob: -12.878353118896484
    8. '_caps' → logprob: -12.878353118896484
    9. '_idx' → logprob: -13.003353118896484
    10. '(' → logprob: -13.128353118896484

Token 68: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28352847695350647
    2. 'ap' → logprob: -1.783528447151184
    3. '=' → logprob: -3.4085285663604736
    4. 'a' → logprob: -3.5335285663604736
    5. '_=' → logprob: -4.9085283279418945
    6. ' =' → logprob: -5.0335283279418945
    7. 'apa' → logprob: -6.9085283279418945
    8. 'e' → logprob: -7.6585283279418945
    9. '_a' → logprob: -8.283528327941895
    10. '=_' → logprob: -9.033528327941895

Token 69: ' capa' (ID: 70254)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.847527265548706
    2. 'min' → logprob: -0.972527265548706
    3. 'c' → logprob: -1.847527265548706
    4. ' math' → logprob: -4.097527503967285
    5. 'math' → logprob: -4.847527503967285
    6. ' capa' → logprob: -4.972527503967285
    7. ' float' → logprob: -6.972527503967285
    8. 'float' → logprob: -7.222527503967285
    9. 'cap' → logprob: -7.472527503967285
    10. ' c' → logprob: -7.722527503967285

Token 70: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14859846234321594
    2. '[:]' → logprob: -2.2735984325408936
    3. '.copy' → logprob: -3.6485984325408936
    4. '.' → logprob: -5.148598670959473
    5. '[min' → logprob: -6.023598670959473
    6. '.min' → logprob: -7.648598670959473
    7. '_min' → logprob: -9.523598670959473
    8. '[]' → logprob: -10.023598670959473
    9. '```' → logprob: -10.148598670959473
    10. '[i' → logprob: -10.148598670959473

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011045700375689194
    2. ' ' → logprob: -9.125110626220703
    3. ']' → logprob: -13.750110626220703
    4. ')' → logprob: -16.125110626220703
    5. '])' → logprob: -16.937610626220703
    6. '   ' → logprob: -17.375110626220703
    7. 'i' → logprob: -17.562610626220703
    8. ':' → logprob: -17.625110626220703
    9. '۰' → logprob: -18.000110626220703
    10. '1' → logprob: -18.250110626220703

Token 72: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016442760825157166
    2. ' )' → logprob: -4.266442775726318
    3. '])' → logprob: -6.391442775726318
    4. ')
' → logprob: -8.01644229888916
    5. ']' → logprob: -8.51644229888916
    6. ' )
' → logprob: -10.89144229888916
    7. ' ])' → logprob: -11.26644229888916
    8. ')]' → logprob: -11.76644229888916
    9. '）' → logprob: -12.39144229888916
    10. '')' → logprob: -12.64144229888916

Token 73: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00031377444975078106
    2. ' for' → logprob: -8.500313758850098
    3. '
' → logprob: -9.125313758850098
    4. '<|end|>' → logprob: -14.875313758850098
    5. '```' → logprob: -15.250313758850098
    6. ' 
' → logprob: -15.875313758850098
    7. '' → logprob: -15.875313758850098
    8. '.' → logprob: -15.875313758850098
    9. '.for' → logprob: -16.750314712524414
    10. '

' → logprob: -16.875314712524414

Token 74: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0015089125372469425
    2. ' c' → logprob: -7.376508712768555
    3. ' capa' → logprob: -8.126508712768555
    4. 'i' → logprob: -8.376508712768555
    5. ' ' → logprob: -9.001508712768555
    6. ' cap' → logprob: -9.126508712768555
    7. ' j' → logprob: -10.251508712768555
    8. ' val' → logprob: -10.501508712768555
    9. '	i' → logprob: -10.876508712768555
    10. ' x' → logprob: -11.001508712768555

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033942583948373795
    2. 'in' → logprob: -3.408942699432373
    3. ' ' → logprob: -8.158942222595215
    4. '  ' → logprob: -12.908942222595215
    5. ' i' → logprob: -13.033942222595215
    6. '   ' → logprob: -13.908942222595215
    7. '	in' → logprob: -14.283942222595215
    8. '+' → logprob: -14.533942222595215
    9. ')' → logprob: -14.908942222595215
    10. ',' → logprob: -15.096442222595215

Token 76: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015080781886354089
    2. ' capa' → logprob: -6.7515082359313965
    3. 'range' → logprob: -8.126507759094238
    4. ' ' → logprob: -10.751507759094238
    5. ' capacity' → logprob: -12.501507759094238
    6. '	range' → logprob: -12.626507759094238
    7. ' capas' → logprob: -13.126507759094238
    8. '  ' → logprob: -13.126507759094238
    9. '   ' → logprob: -13.751507759094238
    10. 'c' → logprob: -13.751507759094238

Token 77: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. ' (' → logprob: -14.625000953674316
    3. '(
' → logprob: -15.500000953674316
    4. '(len' → logprob: -15.875000953674316
    5. '1' → logprob: -17.0
    6. ' ' → logprob: -18.75
    7. '(

' → logprob: -20.0
    8. '()' → logprob: -21.375
    9. '5' → logprob: -21.625
    10. 'len' → logprob: -22.0

Token 78: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06225122883915901
    2. '5' → logprob: -2.812251329421997
    3. ' ' → logprob: -8.312251091003418
    4. 'len' → logprob: -10.312251091003418
    5. '   ' → logprob: -12.562251091003418
    6. ' len' → logprob: -14.187251091003418
    7. '  ' → logprob: -16.062252044677734
    8. '```' → logprob: -16.062252044677734
    9. '0' → logprob: -16.187252044677734
    10. '(' → logprob: -16.687252044677734

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014592852676287293
    2. ' ):' → logprob: -6.626459121704102
    3. '):
' → logprob: -9.251459121704102
    4. ')' → logprob: -10.251459121704102
    5. '+' → logprob: -14.001459121704102
    6. ':' → logprob: -14.626459121704102
    7. ']:' → logprob: -15.376459121704102
    8. '):
' → logprob: -15.751459121704102
    9. ' ):
' → logprob: -15.751459121704102
    10. ' )' → logprob: -16.2514591217041

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17560482025146484
    2. ' if' → logprob: -1.9256048202514648
    3. 'if' → logprob: -5.300604820251465
    4. ':' → logprob: -5.300604820251465
    5. ' ' → logprob: -6.175604820251465
    6. '<|end|>' → logprob: -7.300604820251465
    7. '    ' → logprob: -7.550604820251465
    8. '	if' → logprob: -7.925604820251465
    9. '    
' → logprob: -7.925604820251465
    10. '  ' → logprob: -8.050604820251465

Token 81: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13176526129245758
    2. 'if' (adapté à ' if') → logprob: -2.381765365600586
    3. '   ' → logprob: -3.506765365600586
    4. ' ' → logprob: -7.506765365600586
    5. '    ' → logprob: -8.006765365600586
    6. ':' → logprob: -9.256765365600586
    7. '	if' → logprob: -10.256765365600586
    8. '  ' → logprob: -10.506765365600586
    9. '```' → logprob: -11.756765365600586
    10. '    
' → logprob: -12.381765365600586

Token 82: ' capa' (ID: 70254)
  Prédit: ' capa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capa' → logprob: -0.0015274790348485112
    2. 'c' → logprob: -6.501527309417725
    3. ' capas' → logprob: -11.001527786254883
    4. ' ' → logprob: -12.501527786254883
    5. '   ' → logprob: -13.126527786254883
    6. '	c' → logprob: -13.751527786254883
    7. ' min' → logprob: -15.376527786254883
    8. ' cama' → logprob: -15.626527786254883
    9. '(c' → logprob: -15.626527786254883
    10. '  ' → logprob: -15.751527786254883

Token 83: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -11.750008583068848
    3. '[i' → logprob: -14.750008583068848
    4. ' [' → logprob: -15.250008583068848
    5. '[min' → logprob: -17.25000762939453
    6. ' <' → logprob: -18.25000762939453
    7. 'j' → logprob: -18.50000762939453
    8. '[
' → logprob: -19.00000762939453
    9. '<' → logprob: -19.87500762939453
    10. ' ' → logprob: -20.25000762939453

Token 84: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.055578842759132385
    2. '<' → logprob: -2.9305789470672607
    3. ' ' → logprob: -7.305578708648682
    4. ')' → logprob: -12.43057918548584
    5. '[' → logprob: -13.05557918548584
    6. '<m' → logprob: -13.05557918548584
    7. '<n' → logprob: -13.43057918548584
    8. '<num' → logprob: -13.43057918548584
    9. '<int' → logprob: -13.68057918548584
    10. '   ' → logprob: -13.68057918548584

Token 85: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4287968575954437
    2. '<' → logprob: -1.0537968873977661
    3. ' ' → logprob: -9.303796768188477
    4. '<m' → logprob: -13.803796768188477
    5. 'min' → logprob: -13.928796768188477
    6. '<num' → logprob: -14.803796768188477
    7. '<n' → logprob: -14.803796768188477
    8. ' min' → logprob: -15.053796768188477
    9. '<int' → logprob: -15.178796768188477
    10. ' ' → logprob: -15.303796768188477

Token 86: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07889319956302643
    2. ' min' → logprob: -2.5788931846618652
    3. '	min' → logprob: -13.578893661499023
    4. ' ' → logprob: -14.078893661499023
    5. 'm' → logprob: -15.078893661499023
    6. '=min' → logprob: -15.453893661499023
    7. '(min' → logprob: -15.703893661499023
    8. ' ' → logprob: -16.078893661499023
    9. ' minic' → logprob: -16.203893661499023
    10. ':min' → logprob: -16.453893661499023

Token 87: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.7697225252486533e-06
    2. 'min' → logprob: -12.875003814697266
    3. 'с' → logprob: -14.625003814697266
    4. '   ' → logprob: -16.000003814697266
    5. '(min' → logprob: -16.125003814697266
    6. 'm' → logprob: -16.375003814697266
    7. '```' → logprob: -16.562503814697266
    8. 'ic' → logprob: -16.812503814697266
    9. '_c' → logprob: -16.937503814697266
    10. 'cap' → logprob: -17.187503814697266

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010829445673152804
    2. ':
' → logprob: -7.376082897186279
    3. ' :' → logprob: -7.876082897186279
    4. '):' → logprob: -10.126083374023438
    5. ':min' → logprob: -11.001083374023438
    6. '   ' → logprob: -11.626083374023438
    7. ' :
' → logprob: -12.501083374023438
    8. 'min' → logprob: -13.376083374023438
    9. '=' → logprob: -14.251083374023438
    10. '):
' → logprob: -14.626083374023438

Token 89: '       ' (ID: 309)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5391010642051697
    2. 'min' → logprob: -1.5391011238098145
    3. '   ' → logprob: -1.7891011238098145
    4. '       ' → logprob: -3.5391011238098145
    5. '    ' → logprob: -6.1641011238098145
    6. '	min' → logprob: -6.9141011238098145
    7. '    
' → logprob: -7.1641011238098145
    8. '_min' → logprob: -7.2891011238098145
    9. '        
' → logprob: -8.164100646972656
    10. ' ' → logprob: -8.414100646972656

Token 90: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.043117374181747437
    2. 'min' (adapté à ' min') → logprob: -3.1681172847747803
    3. '   ' → logprob: -9.91811752319336
    4. '	min' → logprob: -10.66811752319336
    5. ' 
' → logprob: -12.04311752319336
    6. '    ' → logprob: -12.04311752319336
    7. 'm' → logprob: -12.16811752319336
    8. 'c' → logprob: -12.16811752319336
    9. '_min' → logprob: -12.66811752319336
    10. '
' → logprob: -12.79311752319336

Token 91: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -13.000003814697266
    3. 'с' → logprob: -14.750003814697266
    4. '       ' → logprob: -15.875003814697266
    5. '    ' → logprob: -16.000003814697266
    6. '=' → logprob: -16.250003814697266
    7. '```' → logprob: -16.250003814697266
    8. 'j' → logprob: -16.625003814697266
    9. '	c' → logprob: -16.625003814697266
    10. 'cap' → logprob: -16.812503814697266

Token 92: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25195223093032837
    2. ' =' → logprob: -1.5019521713256836
    3. '=c' → logprob: -11.376952171325684
    4. 'c' → logprob: -11.876952171325684
    5. '=j' → logprob: -12.751952171325684
    6. '   ' → logprob: -14.876952171325684
    7. ' ' → logprob: -15.251952171325684
    8. '=
' → logprob: -15.501952171325684
    9. '=

' → logprob: -15.501952171325684
    10. '＝' → logprob: -15.876952171325684

Token 93: ' capa' (ID: 70254)
  Prédit: ' capa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capa' → logprob: -0.47414037585258484
    2. 'c' → logprob: -0.9741404056549072
    3. ' capas' → logprob: -10.099140167236328
    4. ' ' → logprob: -11.599140167236328
    5. 'cap' → logprob: -12.724140167236328
    6. '	c' → logprob: -12.974140167236328
    7. ' c' → logprob: -13.474140167236328
    8. 'cape' → logprob: -13.599140167236328
    9. ' ' → logprob: -13.974140167236328
    10. 'j' → logprob: -14.099140167236328

Token 94: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00038074489566497505
    2. '[' → logprob: -7.875380516052246
    3. '[c' → logprob: -15.250380516052246
    4. 'j' → logprob: -15.750380516052246
    5. '```' → logprob: -16.125381469726562
    6. ' [' → logprob: -16.375381469726562
    7. '[i' → logprob: -17.000381469726562
    8. '[
' → logprob: -17.125381469726562
    9. '[val' → logprob: -18.000381469726562
    10. '[js' → logprob: -18.000381469726562

Token 95: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010552640073001385
    2. ')' → logprob: -4.885552406311035
    3. '}' → logprob: -6.510552406311035
    4. '[j' → logprob: -7.385552406311035
    5. '<|end|>' → logprob: -7.510552406311035
    6. '   ' → logprob: -9.010552406311035
    7. ' ]' → logprob: -9.635552406311035
    8. 'j' → logprob: -10.760552406311035
    9. '[' → logprob: -10.760552406311035
    10. '])' → logprob: -11.135552406311035

Token 96: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02402309700846672
    2. '#' → logprob: -4.024023056030273
    3. 'n' → logprob: -6.274023056030273
    4. ')' → logprob: -6.399023056030273
    5. '*' → logprob: -7.274023056030273
    6. ' print' → logprob: -8.274023056030273
    7. '+' → logprob: -8.774023056030273
    8. 'min' → logprob: -8.774023056030273
    9. 'p' → logprob: -9.149023056030273
    10. 'max' → logprob: -9.149023056030273

Token 97: ' calc' (ID: 25691)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16047483682632446
    2. '#' → logprob: -3.1604747772216797
    3. 'result' → logprob: -3.6604747772216797
    4. 'nb' → logprob: -3.9104747772216797
    5. 'max' → logprob: -4.66047477722168
    6. 'res' → logprob: -5.03547477722168
    7. 'nombre' → logprob: -5.03547477722168
    8. 'min' → logprob: -5.28547477722168
    9. 'if' → logprob: -5.41047477722168
    10. 'import' → logprob: -5.41047477722168

Token 98: 'ule' (ID: 1601)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.8417980670928955
    2. 'ult' → logprob: -2.2167980670928955
    3. 'ulation' → logprob: -2.2167980670928955
    4. 'ule' → logprob: -2.3417980670928955
    5. 'import' → logprob: -2.5917980670928955
    6. 'ulated' → logprob: -2.7167980670928955
    7. 'ulate' → logprob: -2.8417980670928955
    8. '#' → logprob: -3.7167980670928955
    9. 'uler' → logprob: -3.7167980670928955
    10. 'cul' → logprob: -3.7167980670928955

Token 99: ' le' (ID: 505)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.1633142232894897
    2. ' le' → logprob: -1.2883142232894897
    3. ' nb' → logprob: -2.6633143424987793
    4. 'import' → logprob: -2.7883143424987793
    5. 'nombre' → logprob: -2.9133143424987793
    6. '(' → logprob: -3.6633143424987793
    7. ' result' → logprob: -3.6633143424987793
    8. 'le' → logprob: -3.7883143424987793
    9. 'result' → logprob: -4.038314342498779
    10. ' math' → logprob: -4.163314342498779

Token 100: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.15367461740970612
    2. ' nombre' → logprob: -2.028674602508545
    3. 'temps' → logprob: -5.153674602508545
    4. 'nb' → logprob: -6.528674602508545
    5. 'transport' → logprob: -6.903674602508545
    6. 'max' → logprob: -7.528674602508545
    7. 'result' → logprob: -7.778674602508545
    8. 'import' → logprob: -8.278675079345703
    9. ' temps' → logprob: -8.653675079345703
    10. ' transport' → logprob: -8.653675079345703

Token 101: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.26461300253868103
    2. ' de' → logprob: -1.8896130323410034
    3. '_de' → logprob: -2.889612913131714
    4. 'd' → logprob: -4.514613151550293
    5. '_' → logprob: -5.014613151550293
    6. ' d' → logprob: -6.389613151550293
    7. 'total' → logprob: -6.639613151550293
    8. '_transport' → logprob: -7.264613151550293
    9. '_pass' → logprob: -7.389613151550293
    10. '_d' → logprob: -7.639613151550293

Token 102: ''ét' (ID: 23771)
  Prédit: '_pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pass' → logprob: -0.9921066164970398
    2. '_' → logprob: -2.1171066761016846
    3. '_tr' → logprob: -2.3671066761016846
    4. 'pass' → logprob: -2.7421066761016846
    5. '```' → logprob: -3.3671066761016846
    6. 'voy' → logprob: -3.4921066761016846
    7. 'de' → logprob: -3.6171066761016846
    8. 'tr' → logprob: -3.7421066761016846
    9. '_transport' → logprob: -4.1171064376831055
    10. 'person' → logprob: -4.2421064376831055

Token 103: 'apes' (ID: 11864)
  Prédit: 'apes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apes' → logprob: -0.015070419758558273
    2. 'ap' → logprob: -5.01507043838501
    3. 'ape' → logprob: -5.51507043838501
    4. 'ages' → logprob: -7.14007043838501
    5. '   ' → logprob: -7.39007043838501
    6. '```' → logprob: -7.51507043838501
    7. 'a' → logprob: -7.95257043838501
    8. 'app' → logprob: -9.077569961547852
    9. '#' → logprob: -9.140069961547852
    10. 'udiantes' → logprob: -9.202569961547852

Token 104: ' (' (ID: 350)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.5958975553512573
    2. 'steps' → logprob: -0.8458975553512573
    3. 'import' → logprob: -4.220897674560547
    4. 'print' → logprob: -7.220897674560547
    5. 'e' → logprob: -7.345897674560547
    6. 'step' → logprob: -7.470897674560547
    7. 'result' → logprob: -7.595897674560547
    8. 't' → logprob: -7.720897674560547
    9. 'n' → logprob: -7.845897674560547
    10. 'ans' → logprob: -8.345897674560547

Token 105: 'pas' (ID: 21122)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.38290345668792725
    2. 'steps' → logprob: -1.6329034566879272
    3. 'n' → logprob: -3.132903575897217
    4. '(math' → logprob: -3.382903575897217
    5. '(n' → logprob: -4.382903575897217
    6. ' math' → logprob: -5.132903575897217
    7. 'et' → logprob: -5.257903575897217
    8. ' (' → logprob: -5.257903575897217
    9. ')' → logprob: -5.632903575897217
    10. ' steps' → logprob: -5.882903575897217

Token 106: ' sûr' (ID: 46415)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9026585221290588
    2. ')' → logprob: -1.527658462524414
    3. ' ' → logprob: -2.527658462524414
    4. '=' → logprob: -2.777658462524414
    5. ' nécessaires' → logprob: -3.027658462524414
    6. '   ' → logprob: -3.152658462524414
    7. '_' → logprob: -3.152658462524414
    8. 's' → logprob: -3.402658462524414
    9. ' )' → logprob: -4.277658462524414
    10. '  ' → logprob: -4.402658462524414

Token 107: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04311292618513107
    2. ' )' → logprob: -3.6681129932403564
    3. ' nécessaires' → logprob: -6.168112754821777
    4. 'import' → logprob: -6.418112754821777
    5. ' =' → logprob: -6.668112754821777
    6. 'd' → logprob: -6.668112754821777
    7. ' d' → logprob: -6.918112754821777
    8. ')
' → logprob: -6.918112754821777
    9. ' nécessaire' → logprob: -7.043112754821777
    10. 'pour' → logprob: -7.043112754821777

Token 108: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44532510638237
    2. 'math' → logprob: -2.3203251361846924
    3. 'n' → logprob: -3.0703251361846924
    4. '=' → logprob: -3.1953251361846924
    5. 'steps' → logprob: -3.1953251361846924
    6. '#' → logprob: -3.6953251361846924
    7. ' math' → logprob: -4.195324897766113
    8. 'import' → logprob: -4.945324897766113
    9. '")' → logprob: -5.070324897766113
    10. ' )' → logprob: -5.070324897766113

Token 109: ' vérifier' (ID: 93671)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6996495723724365
    2. '+' → logprob: -2.1996495723724365
    3. '1' → logprob: -2.1996495723724365
    4. 'part' → logprob: -2.3246495723724365
    5. ' math' → logprob: -3.3246495723724365
    6. '#' → logprob: -3.4496495723724365
    7. 'import' → logprob: -3.9496495723724365
    8. 'contin' → logprob: -4.074649810791016
    9. ')' → logprob: -4.949649810791016
    10. '100' → logprob: -5.074649810791016

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0669662281870842
    2. ' )' → logprob: -3.4419662952423096
    3. ')
' → logprob: -4.1919660568237305
    4. '+' → logprob: -5.1919660568237305
    5. 'import' → logprob: -5.4419660568237305
    6. ' )
' → logprob: -6.3169660568237305
    7. 'n' → logprob: -6.5669660568237305
    8. '*' → logprob: -6.9419660568237305
    9. '#' → logprob: -7.4419660568237305
    10. ')n' → logprob: -7.8169660568237305

Token 111: 'tmp' (ID: 11669)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.10214172303676605
    2. 'et' → logprob: -3.1021416187286377
    3. '
' → logprob: -3.9771416187286377
    4. 'import' → logprob: -5.227141857147217
    5. 'pas' → logprob: -5.602141857147217
    6. 'n' → logprob: -5.727141857147217
    7. 'nb' → logprob: -5.727141857147217
    8. '\n' → logprob: -5.852141857147217
    9. ' steps' → logprob: -6.227141857147217
    10. 'result' → logprob: -6.227141857147217

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6165521144866943
    2. '_' → logprob: -1.2415521144866943
    3. '_steps' → logprob: -2.6165521144866943
    4. '=' → logprob: -2.8665521144866943
    5. 's' → logprob: -3.9915521144866943
    6. 'steps' → logprob: -5.491552352905273
    7. 'es' → logprob: -5.866552352905273
    8. ' ' → logprob: -5.866552352905273
    9. '_s' → logprob: -6.116552352905273
    10. ' _' → logprob: -6.616552352905273

Token 113: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.30950337648391724
    2. 'math' → logprob: -1.5595033168792725
    3. ' math' → logprob: -3.5595033168792725
    4. ' n' → logprob: -4.559503555297852
    5. '(n' → logprob: -4.559503555297852
    6. '(math' → logprob: -5.434503555297852
    7. ' (' → logprob: -7.184503555297852
    8. 'int' → logprob: -7.434503555297852
    9. '(' → logprob: -8.559503555297852
    10. '-' → logprob: -8.934503555297852

Token 114: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.07439523935317993
    2. ' ' → logprob: -3.824395179748535
    3. ' /' → logprob: -4.074395179748535
    4. '//' → logprob: -4.199395179748535
    5. '+' → logprob: -5.324395179748535
    6. 'min' → logprob: -5.824395179748535
    7. ' +' → logprob: -5.949395179748535
    8. '/' → logprob: -6.199395179748535
    9. ' min' → logprob: -6.824395179748535
    10. ' #' → logprob: -7.199395179748535

Token 115: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0010586526477709413
    2. ' min' → logprob: -6.876058578491211
    3. 'float' → logprob: -10.751058578491211
    4. 'math' → logprob: -13.751058578491211
    5. ' float' → logprob: -14.251058578491211
    6. 'max' → logprob: -14.376058578491211
    7. ' ' → logprob: -14.501058578491211
    8. '(min' → logprob: -14.876058578491211
    9. 'm' → logprob: -15.126058578491211
    10. '   ' → logprob: -15.751058578491211

Token 116: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.7697225252486533e-06
    2. ' c' → logprob: -14.375003814697266
    3. 'с' → logprob: -14.500003814697266
    4. ' ' → logprob: -14.625003814697266
    5. '```' → logprob: -14.875003814697266
    6. '   ' → logprob: -15.125003814697266
    7. 'min' → logprob: -15.375003814697266
    8. 'count' → logprob: -16.062503814697266
    9. '  ' → logprob: -16.125003814697266
    10. '1' → logprob: -16.187503814697266

Token 117: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14114819467067719
    2. 'import' → logprob: -2.391148090362549
    3. '\n' → logprob: -4.891148090362549
    4. '#' → logprob: -4.891148090362549
    5. 'n' → logprob: -5.516148090362549
    6. 'math' → logprob: -5.516148090362549
    7. ')' → logprob: -5.766148090362549
    8. '+' → logprob: -5.891148090362549
    9. 'tmp' → logprob: -5.891148090362549
    10. '' → logprob: -7.016148090362549

Token 118: 'if' (ID: 366)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.39541953802108765
    2. '
' → logprob: -1.7704195976257324
    3. '#' → logprob: -2.8954195976257324
    4. 'n' → logprob: -3.8954195976257324
    5. 'if' → logprob: -4.020419597625732
    6. '\n' → logprob: -4.645419597625732
    7. 'result' → logprob: -4.645419597625732
    8. 'steps' → logprob: -4.770419597625732
    9. 'tmp' → logprob: -5.020419597625732
    10. 'int' → logprob: -5.395419597625732

Token 119: ' n' (ID: 297)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.06582705676555634
    2. ' n' → logprob: -3.3158271312713623
    3. 'tmp' → logprob: -3.9408271312713623
    4. ' math' → logprob: -5.940826892852783
    5. ' int' → logprob: -6.315826892852783
    6. 'n' → logprob: -6.565826892852783
    7. '(tmp' → logprob: -6.815826892852783
    8. ' (' → logprob: -7.565826892852783
    9. ' ' → logprob: -8.190827369689941
    10. 'int' → logprob: -9.690827369689941

Token 120: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6328299045562744
    2. ' %' → logprob: -0.7578299045562744
    3. '>' → logprob: -9.382829666137695
    4. ' ' → logprob: -10.507829666137695
    5. ' /' → logprob: -11.257829666137695
    6. '<=' → logprob: -11.257829666137695
    7. '%n' → logprob: -11.257829666137695
    8. '/' → logprob: -11.257829666137695
    9. ' >' → logprob: -11.382829666137695
    10. ' <=' → logprob: -11.507829666137695

Token 121: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16022716462612152
    2. ' min' → logprob: -1.9102271795272827
    3. ' ' → logprob: -13.160226821899414
    4. '	min' → logprob: -14.410226821899414
    5. '(min' → logprob: -15.285226821899414
    6. ' minic' → logprob: -16.660226821899414
    7. 'c' → logprob: -16.910226821899414
    8. 'm' → logprob: -17.535226821899414
    9. '[min' → logprob: -17.535226821899414
    10. '  ' → logprob: -17.910226821899414

Token 122: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010723850573413074
    2. 'in' → logprob: -9.250106811523438
    3. '   ' → logprob: -12.125106811523438
    4. 'min' → logprob: -12.750106811523438
    5. 'inc' → logprob: -14.125106811523438
    6. '(min' → logprob: -15.000106811523438
    7. ' ' → logprob: -15.250106811523438
    8. '  ' → logprob: -15.375106811523438
    9. 'ic' → logprob: -15.500106811523438
    10. '_c' → logprob: -15.875106811523438

Token 123: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0993315726518631
    2. ' !=' → logprob: -2.5993316173553467
    3. '>' → logprob: -4.099331378936768
    4. '==' → logprob: -5.849331378936768
    5. ':' → logprob: -7.974331378936768
    6. ' >' → logprob: -8.224331855773926
    7. ' ==' → logprob: -9.599331855773926
    8. '=' → logprob: -10.224331855773926
    9. '!==' → logprob: -10.599331855773926
    10. '()!=' → logprob: -11.974331855773926

Token 124: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.753177642822266
    4. '  ' → logprob: -17.003177642822266
    5. ' ' → logprob: -18.253177642822266
    6. '=' → logprob: -18.253177642822266
    7. '۰' → logprob: -18.878177642822266
    8. '  ' → logprob: -19.378177642822266
    9. '    ' → logprob: -19.440677642822266
    10. '	' → logprob: -19.565677642822266

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.50007438659668
    4. '  ' → logprob: -18.25007438659668
    5. '۰' → logprob: -19.18757438659668
    6. '  ' → logprob: -19.18757438659668
    7. '=' → logprob: -19.31257438659668
    8. '00' → logprob: -19.62507438659668
    9. '    ' → logprob: -19.81257438659668
    10. ' ' → logprob: -19.81257438659668

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0048942966386675835
    2. ':
' → logprob: -5.379894256591797
    3. ' :' → logprob: -8.254894256591797
    4. ' :
' → logprob: -11.754894256591797
    5. '):' → logprob: -12.879894256591797
    6. 'tmp' → logprob: -14.504894256591797
    7. ':
' → logprob: -14.629894256591797
    8. '):
' → logprob: -14.754894256591797
    9. ':

' → logprob: -15.004894256591797
    10. '=' → logprob: -15.629894256591797

Token 127: '   ' (ID: 271)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.16315419971942902
    2. '   ' → logprob: -2.038154125213623
    3. ' tmp' → logprob: -4.163154125213623
    4. '
' → logprob: -5.788154125213623
    5. '	tmp' → logprob: -7.038154125213623
    6. ' ' → logprob: -8.038154602050781
    7. '    
' → logprob: -9.163154602050781
    8. '  ' → logprob: -9.788154602050781
    9. 'temp' → logprob: -10.038154602050781
    10. 'steps' → logprob: -10.163154602050781

Token 128: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.014806539751589298
    2. ' tmp' → logprob: -4.264806747436523
    3. '1' → logprob: -8.139806747436523
    4. '   ' → logprob: -8.389806747436523
    5. ' ' → logprob: -10.389806747436523
    6. '	tmp' → logprob: -10.764806747436523
    7. 'steps' → logprob: -11.014806747436523
    8. 'n' → logprob: -11.764806747436523
    9. '$tmp' → logprob: -12.014806747436523
    10. '  ' → logprob: -12.014806747436523

Token 129: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38157662749290466
    2. '=' → logprob: -1.881576657295227
    3. ' +=' → logprob: -1.881576657295227
    4. ' =' → logprob: -4.3815765380859375
    5. ']+=' → logprob: -12.881576538085938
    6. '   ' → logprob: -13.131576538085938
    7. '+' → logprob: -13.381576538085938
    8. ' ' → logprob: -13.506576538085938
    9. '=int' → logprob: -13.506576538085938
    10. '.=' → logprob: -14.381576538085938

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.25020408630371
    4. '  ' → logprob: -17.62520408630371
    5. 'math' → logprob: -17.81270408630371
    6. 'int' → logprob: -18.25020408630371
    7. ' ' → logprob: -19.12520408630371
    8. ' math' → logprob: -19.31270408630371
    9. '+' → logprob: -19.37520408630371
    10. '    ' → logprob: -19.81270408630371

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.750045776367188
    4. 'int' → logprob: -16.750045776367188
    5. '  ' → logprob: -16.875045776367188
    6. '-' → logprob: -17.125045776367188
    7. '+' → logprob: -18.375045776367188
    8. '
' → logprob: -18.625045776367188
    9. '0' → logprob: -18.875045776367188
    10. 'tmp' → logprob: -18.875045776367188

Token 132: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10857629776000977
    2. 'steps' → logprob: -2.9835762977600098
    3. 'et' → logprob: -3.9835762977600098
    4. '#' → logprob: -4.60857629776001
    5. 'result' → logprob: -4.85857629776001
    6. 'pas' → logprob: -5.48357629776001
    7. 'n' → logprob: -5.85857629776001
    8. 'tmp' → logprob: -6.23357629776001
    9. 'nb' → logprob: -6.35857629776001
    10. 'ans' → logprob: -6.73357629776001

Token 133: 'res' (ID: 430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15470191836357117
    2. 'result' → logprob: -2.6547019481658936
    3. 'steps' → logprob: -3.5297019481658936
    4. 'et' → logprob: -4.0297017097473145
    5. '#' → logprob: -4.5297017097473145
    6. 'n' → logprob: -5.5297017097473145
    7. 'res' → logprob: -6.4047017097473145
    8. 'tmp' → logprob: -6.4047017097473145
    9. 'nombre' → logprob: -6.5297017097473145
    10. 'pas' → logprob: -6.6547017097473145

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3050503730773926
    2. '=' → logprob: -1.4300503730773926
    3. 'ult' → logprob: -4.180050373077393
    4. 'ults' → logprob: -5.180050373077393
    5. 'ultat' → logprob: -6.430050373077393
    6. 'u' → logprob: -8.180049896240234
    7. '_' → logprob: -8.305049896240234
    8. ' ' → logprob: -9.055049896240234
    9. 's' → logprob: -9.180049896240234
    10. 't' → logprob: -9.430049896240234

Token 135: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2559320032596588
    2. 'int' → logprob: -1.5059319734573364
    3. ' tmp' → logprob: -5.755931854248047
    4. 'tmp' → logprob: -7.255931854248047
    5. ' math' → logprob: -9.130931854248047
    6. 'math' → logprob: -11.380931854248047
    7. ' ' → logprob: -13.005931854248047
    8. '(int' → logprob: -13.380931854248047
    9. ' ' → logprob: -14.505931854248047
    10. '	int' → logprob: -15.380931854248047

Token 136: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -7.576873758807778e-05
    2. '(' → logprob: -9.500075340270996
    3. 'tmp' → logprob: -14.500075340270996
    4. '(temp' → logprob: -15.250075340270996
    5. '(t' → logprob: -17.500076293945312
    6. '(
' → logprob: -17.875076293945312
    7. '/tmp' → logprob: -18.000076293945312
    8. ' (' → logprob: -18.375076293945312
    9. ' tmp' → logprob: -18.500076293945312
    10. '$tmp' → logprob: -18.750076293945312

Token 137: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. ')
' → logprob: -10.750027656555176
    3. ' )' → logprob: -12.250027656555176
    4. '*' → logprob: -15.250027656555176
    5. ')#' → logprob: -15.250027656555176
    6. '#' → logprob: -16.62502670288086
    7. ')return' → logprob: -16.75002670288086
    8. '+' → logprob: -16.87502670288086
    9. '))' → logprob: -17.00002670288086
    10. '),' → logprob: -17.00002670288086

Token 138: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2443038672208786
    2. ' ' → logprob: -1.619303822517395
    3. '1' → logprob: -3.9943039417266846
    4. '.' → logprob: -9.244303703308105
    5. ' math' → logprob: -9.869303703308105
    6. ')' → logprob: -9.994303703308105
    7. ' -' → logprob: -11.119303703308105
    8. '-' → logprob: -11.119303703308105
    9. '  ' → logprob: -11.119303703308105
    10. 'res' → logprob: -11.244303703308105

Token 139: '4' (ID: 19)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30054938793182373
    2. '1' → logprob: -1.9255493879318237
    3. ' ' → logprob: -2.1755495071411133
    4. ')' → logprob: -9.800549507141113
    5. '-' → logprob: -10.050549507141113
    6. ' -' → logprob: -10.675549507141113
    7. ' math' → logprob: -10.800549507141113
    8. '.' → logprob: -10.925549507141113
    9. 'math' → logprob: -11.050549507141113
    10. '   ' → logprob: -11.050549507141113

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.451116051815916e-05
    2. ')
' → logprob: -11.250024795532227
    3. ' )' → logprob: -11.500024795532227
    4. '*' → logprob: -14.750024795532227
    5. '))' → logprob: -15.250024795532227
    6. ')

' → logprob: -16.375024795532227
    7. ')#' → logprob: -16.375024795532227
    8. '+' → logprob: -16.500024795532227
    9. ')`' → logprob: -16.500024795532227
    10. '*)' → logprob: -16.875024795532227

Token 141: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003968097735196352
    2. ' print' → logprob: -6.128968238830566
    3. '
' → logprob: -6.753968238830566
    4. '<|end|>' → logprob: -7.503968238830566
    5. '```' → logprob: -10.378968238830566
    6. ')' → logprob: -11.378968238830566
    7. '#' → logprob: -11.628968238830566
    8. '.print' → logprob: -12.503968238830566
    9. '#print' → logprob: -13.003968238830566
    10. '(print' → logprob: -13.128968238830566

Token 142: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011905835708603263
    2. ')' → logprob: -7.001190662384033
    3. ' print' → logprob: -8.626190185546875
    4. '<|end|>' → logprob: -9.501190185546875
    5. '
' → logprob: -11.501190185546875
    6. '#' → logprob: -12.001190185546875
    7. '```' → logprob: -12.376190185546875
    8. '#print' → logprob: -13.251190185546875
    9. '(print' → logprob: -13.876190185546875
    10. ')
' → logprob: -14.376190185546875

Token 143: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25225168466567993
    2. ' print' → logprob: -1.5022516250610352
    3. '
' → logprob: -8.502251625061035
    4. ')' → logprob: -9.502251625061035
    5. ' 
' → logprob: -11.502251625061035
    6. '.print' → logprob: -11.627251625061035
    7. ' ' → logprob: -11.877251625061035
    8. '(print' → logprob: -12.252251625061035
    9. '<|end|>' → logprob: -12.752251625061035
    10. '#print' → logprob: -12.877251625061035

Token 144: '5' (ID: 20)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.856408536899835e-05
    2. ' print' → logprob: -10.500028610229492
    3. '#print' → logprob: -14.875028610229492
    4. ')' → logprob: -15.625028610229492
    5. '
' → logprob: -15.750028610229492
    6. '#' → logprob: -15.875028610229492
    7. '```' → logprob: -16.625028610229492
    8. '(print' → logprob: -18.125028610229492
    9. '+' → logprob: -19.000028610229492
    10. '.print' → logprob: -19.125028610229492

Token 145: '-' (ID: 12)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00022272850037552416
    2. ' print' → logprob: -8.500223159790039
    3. '
' → logprob: -11.000223159790039
    4. '```' → logprob: -14.500223159790039
    5. '(print' → logprob: -14.625223159790039
    6. '.print' → logprob: -14.750223159790039
    7. '#print' → logprob: -15.000223159790039
    8. '#' → logprob: -15.625223159790039
    9. '-print' → logprob: -15.750223159790039
    10. '+' → logprob: -15.875223159790039

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -14.500000953674316
    4. 'min' → logprob: -17.000001907348633
    5. 'import' → logprob: -18.125001907348633
    6. 'n' → logprob: -18.125001907348633
    7. '```' → logprob: -18.375001907348633
    8. '.' → logprob: -18.625001907348633
    9. '2' → logprob: -18.625001907348633
    10. '#' → logprob: -19.000001907348633

Token 147: ' ==' (ID: 951)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006500058807432652
    2. '
' → logprob: -7.375649929046631
    3. ' print' → logprob: -10.875650405883789
    4. '```' → logprob: -13.125650405883789
    5. '
' → logprob: -13.875650405883789
    6. '#print' → logprob: -14.500650405883789
    7. '#' → logprob: -14.625650405883789
    8. '.print' → logprob: -15.750650405883789
    9. '<|end|>' → logprob: -16.00065040588379
    10. '(print' → logprob: -16.37565040588379

Token 148: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.11353129148483276
    2. ' ' → logprob: -2.6135313510894775
    3. '1' → logprob: -3.8635313510894775
    4. '5' → logprob: -4.613531112670898
    5. '0' → logprob: -5.988531112670898
    6. '```' → logprob: -8.238531112670898
    7. '<|end|>' → logprob: -9.613531112670898
    8. ')' → logprob: -9.738531112670898
    9. '9' → logprob: -9.988531112670898
    10. '#' → logprob: -10.488531112670898

Token 149: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.04334786534309387
    2. '5' → logprob: -3.5433478355407715
    3. ' ' → logprob: -4.5433478355407715
    4. '1' → logprob: -6.0433478355407715
    5. '0' → logprob: -7.9183478355407715
    6. '```' → logprob: -9.79334831237793
    7. '<|end|>' → logprob: -10.41834831237793
    8. '9' → logprob: -11.29334831237793
    9. '#' → logprob: -12.16834831237793
    10. ')' → logprob: -12.16834831237793

Token 150: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00035906085395254195
    2. '
' → logprob: -8.000359535217285
    3. ' print' → logprob: -10.750359535217285
    4. '```' → logprob: -13.750359535217285
    5. '
' → logprob: -14.625359535217285
    6. '#print' → logprob: -15.250359535217285
    7. '#' → logprob: -15.500359535217285
    8. ')
' → logprob: -16.75035858154297
    9. '<|end|>' → logprob: -17.00035858154297
    10. '.print' → logprob: -17.25035858154297

Token 151: ' je' (ID: 1264)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.253713218029588e-05
    2. ' print' → logprob: -9.750062942504883
    3. '
' → logprob: -12.500062942504883
    4. '#print' → logprob: -15.375062942504883
    5. '#' → logprob: -16.125062942504883
    6. '
' → logprob: -16.250062942504883
    7. '```' → logprob: -18.000062942504883
    8. '  
' → logprob: -20.125062942504883
    9. ' 
' → logprob: -20.125062942504883
    10. '(print' → logprob: -20.875062942504883

Token 152: ' suppose' (ID: 35968)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5554322600364685
    2. '#' → logprob: -1.8054323196411133
    3. '+' → logprob: -2.1804323196411133
    4. ' print' → logprob: -2.3054323196411133
    5. ')' → logprob: -3.1804323196411133
    6. ' #' → logprob: -6.305432319641113
    7. ' continue' → logprob: -6.555432319641113
    8. 's' → logprob: -6.805432319641113
    9. 'continue' → logprob: -7.680432319641113
    10. ' ' → logprob: -7.805432319641113

Token 153: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.057743949990254e-05
    2. ' print' → logprob: -11.500020980834961
    3. '
' → logprob: -11.625020980834961
    4. '```' → logprob: -14.250020980834961
    5. '#print' → logprob: -15.000020980834961
    6. '#' → logprob: -15.625020980834961
    7. '<|end|>' → logprob: -16.87502098083496
    8. '
' → logprob: -17.12502098083496
    9. ')
' → logprob: -17.50002098083496
    10. ')' → logprob: -17.50002098083496

Token 154: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.36574100604048e-06
    2. '
' → logprob: -13.000004768371582
    3. ' print' → logprob: -13.125004768371582
    4. '#print' → logprob: -17.500003814697266
    5. '(print' → logprob: -18.375003814697266
    6. '```' → logprob: -18.500003814697266
    7. '.print' → logprob: -19.125003814697266
    8. '#' → logprob: -19.375003814697266
    9. 'prin' → logprob: -19.625003814697266
    10. '<|end|>' → logprob: -19.875003814697266

Token 155: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16023488342761993
    2. '(res' → logprob: -1.9102349281311035
    3. '()' → logprob: -11.910234451293945
    4. ' (' → logprob: -13.410234451293945
    5. '('' → logprob: -13.785234451293945
    6. '(
' → logprob: -14.910234451293945
    7. '("' → logprob: -15.035234451293945
    8. 'res' → logprob: -15.285234451293945
    9. '((' → logprob: -15.285234451293945
    10. '(`' → logprob: -16.160234451293945

Token 156: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.500000953674316
    3. ')`' → logprob: -15.625000953674316
    4. ' )' → logprob: -16.0
    5. ')
' → logprob: -18.25
    6. ')}' → logprob: -19.25
    7. ')**' → logprob: -19.25
    8. ')#' → logprob: -19.75
    9. '),' → logprob: -19.875
    10. '(' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 154
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 99
Précision stricte (1ère position): 27.92%
Précision adaptée (1ère position): 28.57%
Précision (top 10): 64.29%
================================================================================
