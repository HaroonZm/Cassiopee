================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import combinations

N, D = map(int, input().split())
X = [list(map(int, input().split())) for _ in range(N)]

cnt = 0
for a, b in combinations(X, 2):
    dist = 0
    for i in range(D):
        dist += (a[i] - b[i]) ** 2
    if dist ** 0.5 % 1 == 0:
        cnt += 1
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' combinations' (ID: 43835)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2794735431671143
    2. 'product' → logprob: -1.5294735431671143
    3. 'per' → logprob: -1.6544735431671143
    4. 'com' → logprob: -1.9044735431671143
    5. ' permutations' → logprob: -2.7794735431671143
    6. ' product' → logprob: -3.5294735431671143
    7. 'cycle' → logprob: -3.6544735431671143
    8. 'chain' → logprob: -4.654473304748535
    9. 'group' → logprob: -4.654473304748535
    10. ' cycle' → logprob: -4.904473304748535

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -9.2576454335358e-05
    2. '\(' → logprob: -10.375092506408691
    3. '```' → logprob: -11.000092506408691
    4. '`' → logprob: -11.000092506408691
    5. '()' → logprob: -12.000092506408691
    6. ''' → logprob: -12.125092506408691
    7. '(
' → logprob: -12.250092506408691
    8. '((' → logprob: -13.375092506408691
    9. ' (' → logprob: -13.750092506408691
    10. '(**' → logprob: -13.875092506408691

Token 5: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -6.349075556499884e-05
    2. '(
' → logprob: -10.5000638961792
    3. '\(' → logprob: -11.2500638961792
    4. '.' → logprob: -12.1250638961792
    5. '()' → logprob: -12.6250638961792
    6. ':' → logprob: -13.1250638961792
    7. '```' → logprob: -13.2500638961792
    8. 'def' → logprob: -13.2500638961792
    9. 'a' → logprob: -13.7500638961792
    10. ',' → logprob: -13.7500638961792

Token 6: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0091710090637207
    2. '=' → logprob: -1.2591710090637207
    3. ' =' → logprob: -1.5091710090637207
    4. ',' → logprob: -2.8841710090637207
    5. ')' → logprob: -3.2591710090637207
    6. '_' → logprob: -4.009171009063721
    7. '.' → logprob: -5.009171009063721
    8. '  ' → logprob: -6.009171009063721
    9. ' )' → logprob: -6.259171009063721
    10. '[' → logprob: -6.384171009063721

Token 7: ' D' (ID: 415)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.05707129091024399
    2. 'K' → logprob: -2.9320712089538574
    3. ' ' → logprob: -6.932071208953857
    4. ' M' → logprob: -7.182071208953857
    5. ' k' → logprob: -8.057071685791016
    6. 'k' → logprob: -9.682071685791016
    7. 'M' → logprob: -9.932071685791016
    8. '  ' → logprob: -12.057071685791016
    9. '    ' → logprob: -12.807071685791016
    10. ' T' → logprob: -13.182071685791016

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12844586372375488
    2. '=' → logprob: -2.128445863723755
    3. ',' → logprob: -6.503445625305176
    4. ' ,' → logprob: -12.253445625305176
    5. ' ' → logprob: -12.378445625305176
    6. ')' → logprob: -12.503445625305176
    7. '<|end|>' → logprob: -13.378445625305176
    8. '=input' → logprob: -14.253445625305176
    9. '=int' → logprob: -14.628445625305176
    10. 'space' → logprob: -14.753445625305176

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1023687869310379
    2. 'map' → logprob: -2.3523688316345215
    3. ' ' → logprob: -6.4773688316345215
    4. ' int' → logprob: -8.602368354797363
    5. 'int' → logprob: -8.977368354797363
    6. '5' → logprob: -8.977368354797363
    7. '10' → logprob: -9.352368354797363
    8. ' input' → logprob: -10.602368354797363
    9. 'input' → logprob: -10.727368354797363
    10. ' list' → logprob: -11.477368354797363

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7035911679267883
    2. '(int' → logprob: -0.7035911679267883
    3. '(str' → logprob: -4.953591346740723
    4. '(input' → logprob: -6.203591346740723
    5. '(lambda' → logprob: -7.328591346740723
    6. '()' → logprob: -8.203591346740723
    7. 'int' → logprob: -9.078591346740723
    8. 'input' → logprob: -9.078591346740723
    9. '(eval' → logprob: -11.078591346740723
    10. '(`' → logprob: -11.203591346740723

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39124205708503723
    2. ')' → logprob: -1.7662420272827148
    3. '(' → logprob: -2.516242027282715
    4. '(input' → logprob: -3.266242027282715
    5. 'input' → logprob: -4.141242027282715
    6. ',input' → logprob: -4.391242027282715
    7. '```' → logprob: -6.516242027282715
    8. ' ,' → logprob: -7.266242027282715
    9. '<|end|>' → logprob: -7.891242027282715
    10. '`' → logprob: -8.016242027282715

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022716462612152
    2. ' input' → logprob: -1.9102271795272827
    3. '(input' → logprob: -13.285226821899414
    4. ')' → logprob: -13.910226821899414
    5. ',input' → logprob: -15.035226821899414
    6. '=input' → logprob: -16.160226821899414
    7. ' ' → logprob: -17.785226821899414
    8. '	input' → logprob: -17.910226821899414
    9. '<input' → logprob: -18.535226821899414
    10. '```' → logprob: -18.535226821899414

Token 13: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.11060448735952377
    2. '())' → logprob: -2.4856045246124268
    3. ')' → logprob: -4.235604286193848
    4. '()' → logprob: -5.110604286193848
    5. '(' → logprob: -7.235604286193848
    6. '.readline' → logprob: -9.860604286193848
    7. '('' → logprob: -10.360604286193848
    8. '());' → logprob: -11.110604286193848
    9. '`)' → logprob: -11.360604286193848
    10. '')' → logprob: -11.610604286193848

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00319993169978261
    2. 'strip' → logprob: -5.753200054168701
    3. 'rstrip' → logprob: -10.878199577331543
    4. ' split' → logprob: -13.253199577331543
    5. 'read' → logprob: -13.753199577331543
    6. ')' → logprob: -14.878199577331543
    7. '(split' → logprob: -16.00320053100586
    8. 'spl' → logprob: -16.62820053100586
    9. '```' → logprob: -17.25320053100586
    10. 'startswith' → logprob: -18.50320053100586

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.054003406316041946
    2. '))' → logprob: -3.1790034770965576
    3. '())' → logprob: -4.5540032386779785
    4. '()' → logprob: -8.054003715515137
    5. '()))' → logprob: -9.929003715515137
    6. '`)' → logprob: -11.554003715515137
    7. '),' → logprob: -11.554003715515137
    8. ')))' → logprob: -12.054003715515137
    9. ')`' → logprob: -12.054003715515137
    10. '(' → logprob: -12.179003715515137

Token 16: 'X' (ID: 55)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.7941422462463379
    2. 'numbers' → logprob: -1.419142246246338
    3. 'data' → logprob: -2.544142246246338
    4. 'A' → logprob: -2.919142246246338
    5. 'lst' → logprob: -3.544142246246338
    6. 'points' → logprob: -3.669142246246338
    7. 'array' → logprob: -3.669142246246338
    8. 'nums' → logprob: -3.919142246246338
    9. 'a' → logprob: -4.044142246246338
    10. ' numbers' → logprob: -4.294142246246338

Token 17: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10045143961906433
    2. ' =' → logprob: -2.6004514694213867
    3. '[i' → logprob: -5.100451469421387
    4. '[' → logprob: -5.225451469421387
    5. '=' → logprob: -5.850451469421387
    6. '_list' → logprob: -6.600451469421387
    7. ' ' → logprob: -6.975451469421387
    8. '_values' → logprob: -6.975451469421387
    9. ')' → logprob: -7.600451469421387
    10. '_' → logprob: -7.600451469421387

Token 18: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44798293709754944
    2. '[list' → logprob: -1.572982907295227
    3. ' [' → logprob: -2.6979830265045166
    4. '[]' → logprob: -3.3229830265045166
    5. ' []' → logprob: -3.4479830265045166
    6. '[int' → logprob: -4.3229827880859375
    7. 'list' → logprob: -5.8229827880859375
    8. ' list' → logprob: -7.0729827880859375
    9. '[input' → logprob: -7.4479827880859375
    10. '[List' → logprob: -7.6979827880859375

Token 19: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08266403526067734
    2. 'int' → logprob: -2.8326640129089355
    3. 'map' → logprob: -4.4576640129089355
    4. ' list' → logprob: -4.8326640129089355
    5. 'tuple' → logprob: -7.2076640129089355
    6. ' int' → logprob: -9.582664489746094
    7. ' map' → logprob: -10.082664489746094
    8. '[int' → logprob: -10.582664489746094
    9. '[]' → logprob: -10.707664489746094
    10. ' tuple' → logprob: -11.207664489746094

Token 20: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.5332478142227046e-05
    2. 'map' → logprob: -11.750015258789062
    3. '(' → logprob: -11.875015258789062
    4. '()' → logprob: -15.750015258789062
    5. '(range' → logprob: -16.500015258789062
    6. '(input' → logprob: -16.750015258789062
    7. '(int' → logprob: -16.875015258789062
    8. '	map' → logprob: -17.125015258789062
    9. ' map' → logprob: -17.750015258789062
    10. '(tuple' → logprob: -18.625015258789062

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00027611342375166714
    2. 'int' → logprob: -9.000276565551758
    3. '(' → logprob: -9.500276565551758
    4. '[int' → logprob: -10.625276565551758
    5. ',int' → logprob: -10.750276565551758
    6. '<int' → logprob: -11.000276565551758
    7. ']int' → logprob: -12.000276565551758
    8. '=int' → logprob: -13.000276565551758
    9. '(input' → logprob: -13.125276565551758
    10. '```' → logprob: -13.875276565551758

Token 22: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6699633598327637
    2. ',' → logprob: -0.7949633598327637
    3. '(input' → logprob: -3.7949633598327637
    4. 'input' → logprob: -4.294963359832764
    5. ' ,' → logprob: -8.419963836669922
    6. '```' → logprob: -9.169963836669922
    7. ' input' → logprob: -9.294963836669922
    8. '(' → logprob: -9.669963836669922
    9. '=input' → logprob: -10.419963836669922
    10. ',int' → logprob: -11.669963836669922

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014165159314870834
    2. ' input' → logprob: -4.264164924621582
    3. '(input' → logprob: -13.514164924621582
    4. ',input' → logprob: -15.514164924621582
    5. ' ' → logprob: -16.7641658782959
    6. '=input' → logprob: -17.5141658782959
    7. ')' → logprob: -17.7641658782959
    8. '	input' → logprob: -17.7641658782959
    9. '<input' → logprob: -18.1391658782959
    10. '_input' → logprob: -18.3891658782959

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.2200749754119897e-06
    2. '()' → logprob: -13.750001907348633
    3. ' ().' → logprob: -14.375001907348633
    4. '.' → logprob: -16.375001907348633
    5. ' .' → logprob: -16.750001907348633
    6. '()))' → logprob: -16.875001907348633
    7. ')' → logprob: -17.000001907348633
    8. '.readline' → logprob: -17.125001907348633
    9. '().__' → logprob: -17.125001907348633
    10. '()-' → logprob: -17.625001907348633

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. 'strip' → logprob: -14.000001907348633
    3. 'rstrip' → logprob: -14.750001907348633
    4. ' split' → logprob: -15.375001907348633
    5. '(split' → logprob: -15.875001907348633
    6. 'spl' → logprob: -17.000001907348633
    7. 'read' → logprob: -18.125001907348633
    8. '.split' → logprob: -18.250001907348633
    9. 's' → logprob: -19.250001907348633
    10. 'plit' → logprob: -19.375001907348633

Token 26: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02334272861480713
    2. '))' → logprob: -3.8983426094055176
    3. '()' → logprob: -6.648342609405518
    4. '().' → logprob: -7.023342609405518
    5. '())' → logprob: -7.773342609405518
    6. '())))' → logprob: -8.898343086242676
    7. '()))
' → logprob: -11.273343086242676
    8. ')))' → logprob: -11.273343086242676
    9. '())).' → logprob: -11.773343086242676
    10. ')' → logprob: -11.898343086242676

Token 27: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014311464503407478
    2. '())' → logprob: -5.13931131362915
    3. ')]' → logprob: -5.76431131362915
    4. 'for' → logprob: -5.76431131362915
    5. '()' → logprob: -6.88931131362915
    6. ' for' → logprob: -7.88931131362915
    7. ']' → logprob: -8.639311790466309
    8. '(' → logprob: -8.639311790466309
    9. '))' → logprob: -8.889311790466309
    10. ' )' → logprob: -10.014311790466309

Token 28: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03695594519376755
    2. ' range' → logprob: -3.4119558334350586
    3. 'range' → logprob: -6.286955833435059
    4. ' _' → logprob: -7.036955833435059
    5. ' in' → logprob: -8.411955833435059
    6. '(range' → logprob: -8.911955833435059
    7. '_range' → logprob: -9.161955833435059
    8. ' i' → logprob: -10.036955833435059
    9. '_i' → logprob: -10.786955833435059
    10. '(' → logprob: -11.286955833435059

Token 29: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26037588715553284
    2. ' range' → logprob: -2.1353759765625
    3. ' in' → logprob: -2.2603759765625
    4. 'in' → logprob: -5.0103759765625
    5. '(range' → logprob: -10.3853759765625
    6. '	range' → logprob: -11.6353759765625
    7. ' ' → logprob: -12.3853759765625
    8. '_range' → logprob: -12.5103759765625
    9. '```' → logprob: -12.8853759765625
    10. '_' → logprob: -13.2603759765625

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019298245897516608
    2. ' range' → logprob: -6.251929759979248
    3. '(range' → logprob: -14.126930236816406
    4. ' ' → logprob: -15.376930236816406
    5. '[' → logprob: -16.376930236816406
    6. '	range' → logprob: -16.376930236816406
    7. '```' → logprob: -16.751930236816406
    8. 'rang' → logprob: -16.876930236816406
    9. 'r' → logprob: -17.376930236816406
    10. '   ' → logprob: -17.501930236816406

Token 31: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003843173326458782
    2. '(' → logprob: -7.875384330749512
    3. 'N' → logprob: -12.750384330749512
    4. '(n' → logprob: -13.875384330749512
    5. ')' → logprob: -15.375384330749512
    6. '(
' → logprob: -16.250383377075195
    7. '(D' → logprob: -17.750383377075195
    8. '(M' → logprob: -18.000383377075195
    9. '	N' → logprob: -18.125383377075195
    10. ' (' → logprob: -18.250383377075195

Token 32: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002407282590866089
    2. ')' → logprob: -9.125240325927734
    3. ')])' → logprob: -9.625240325927734
    4. ']' → logprob: -10.125240325927734
    5. '])]' → logprob: -10.875240325927734
    6. '])' → logprob: -12.750240325927734
    7. '))' → logprob: -13.625240325927734
    8. ' )' → logprob: -13.750240325927734
    9. ')],' → logprob: -14.125240325927734
    10. ')][' → logprob: -15.375240325927734

Token 33: 'cnt' (ID: 33160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.012193855829536915
    2. 'cnt' → logprob: -5.76219367980957
    3. 'answer' → logprob: -5.88719367980957
    4. 'result' → logprob: -6.13719367980957
    5. 'ans' → logprob: -6.26219367980957
    6. 'valid' → logprob: -6.51219367980957
    7. '```' → logprob: -8.51219367980957
    8. 'c' → logprob: -9.26219367980957
    9. 'counter' → logprob: -9.26219367980957
    10. 'for' → logprob: -9.38719367980957

Token 34: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35484397411346436
    2. ' =' → logprob: -1.7298439741134644
    3. '=' → logprob: -2.229844093322754
    4. ' +=' → logprob: -5.104844093322754
    5. ' (' → logprob: -5.479844093322754
    6. ' ' → logprob: -5.854844093322754
    7. '_' → logprob: -7.729844093322754
    8. '+' → logprob: -9.854844093322754
    9. '_space' → logprob: -10.229844093322754
    10. 'space' → logprob: -10.354844093322754

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. 'sum' → logprob: -16.750911712646484
    4. '1' → logprob: -18.000911712646484
    5. ' ' → logprob: -18.750911712646484
    6. ' sum' → logprob: -19.000911712646484
    7. '   ' → logprob: -19.375911712646484
    8. 'com' → logprob: -19.375911712646484
    9. '０' → logprob: -19.625911712646484
    10. '```' → logprob: -19.625911712646484

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. 'sum' → logprob: -15.625011444091797
    4. 'len' → logprob: -16.875011444091797
    5. '1' → logprob: -16.875011444091797
    6. '2' → logprob: -17.000011444091797
    7. '3' → logprob: -18.125011444091797
    8. '4' → logprob: -18.250011444091797
    9. 'int' → logprob: -18.500011444091797
    10. 'com' → logprob: -18.625011444091797

Token 37: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17945903539657593
    2. '
' → logprob: -1.9294590950012207
    3. ' for' → logprob: -4.179459095001221
    4. '\n' → logprob: -5.804459095001221
    5. ' 
' → logprob: -8.179458618164062
    6. '' → logprob: -8.304458618164062
    7. '  
' → logprob: -9.304458618164062
    8. '
' → logprob: -9.929458618164062
    9. '<|end|>' → logprob: -10.679458618164062
    10. '\' → logprob: -11.179458618164062

Token 38: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001310719089815393
    2. ' for' → logprob: -9.000130653381348
    3. '```' → logprob: -12.250130653381348
    4. '
' → logprob: -13.375130653381348
    5. '\n' → logprob: -14.625130653381348
    6. '' → logprob: -15.125130653381348
    7. '``' → logprob: -15.250130653381348
    8. '  
' → logprob: -16.250131607055664
    9. '`' → logprob: -16.250131607055664
    10. ' ' → logprob: -17.000131607055664

Token 39: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0904364585876465
    2. ' comb' → logprob: -1.2154364585876465
    3. 'i' → logprob: -1.4654364585876465
    4. ' c' → logprob: -3.4654364585876465
    5. ' combo' → logprob: -3.4654364585876465
    6. 'combo' → logprob: -4.3404364585876465
    7. 'comb' → logprob: -4.4654364585876465
    8. ' points' → logprob: -4.4654364585876465
    9. 'a' → logprob: -4.7154364585876465
    10. 'c' → logprob: -5.0904364585876465

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43925490975379944
    2. ' in' → logprob: -1.064254879951477
    3. ',b' → logprob: -5.3142547607421875
    4. 'in' → logprob: -5.3142547607421875
    5. ' ,' → logprob: -8.564254760742188
    6. ',_' → logprob: -9.064254760742188
    7. 'b' → logprob: -9.689254760742188
    8. 'a' → logprob: -9.939254760742188
    9. ' i' → logprob: -10.064254760742188
    10. ',a' → logprob: -10.064254760742188

Token 41: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00029637437546625733
    2. ' b' → logprob: -8.125296592712402
    3. 'a' → logprob: -15.125296592712402
    4. '<|end|>' → logprob: -16.000295639038086
    5. ' ' → logprob: -19.125295639038086
    6. ',b' → logprob: -19.750295639038086
    7. '<|end|>' → logprob: -19.875295639038086
    8. '>b' → logprob: -20.000295639038086
    9. ')b' → logprob: -20.125295639038086
    10. '*b' → logprob: -20.750295639038086

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07889936864376068
    2. 'in' → logprob: -2.578899383544922
    3. ')' → logprob: -12.203899383544922
    4. ',' → logprob: -13.453899383544922
    5. ' ' → logprob: -13.703899383544922
    6. 's' → logprob: -14.828899383544922
    7. '```' → logprob: -15.203899383544922
    8. 'a' → logprob: -15.328899383544922
    9. 'n' → logprob: -15.953899383544922
    10. 'In' → logprob: -16.203899383544922

Token 43: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.005242771934717894
    2. ' combinations' → logprob: -5.255242824554443
    3. '(com' → logprob: -12.630242347717285
    4. ' com' → logprob: -12.755242347717285
    5. 'comb' → logprob: -13.005242347717285
    6. '	com' → logprob: -15.880242347717285
    7. '```' → logprob: -16.2552433013916
    8. '=com' → logprob: -16.5052433013916
    9. ' ' → logprob: -16.7552433013916
    10. '_com' → logprob: -17.0052433013916

Token 44: '(X' (ID: 17061)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0005601812736131251
    2. '(X' → logprob: -7.500560283660889
    3. '(' → logprob: -12.62555980682373
    4. ' (' → logprob: -13.62555980682373
    5. '(r' → logprob: -13.75055980682373
    6. ' range' → logprob: -14.50055980682373
    7. '((' → logprob: -15.12555980682373
    8. '(R' → logprob: -15.25055980682373
    9. 'range' → logprob: -15.25055980682373
    10. '(N' → logprob: -15.75055980682373

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001628956088097766
    2. ' ,' → logprob: -8.875163078308105
    3. '2' → logprob: -10.875163078308105
    4. '(),' → logprob: -13.250163078308105
    5. '```' → logprob: -14.375163078308105
    6. '`,' → logprob: -14.500163078308105
    7. '，' → logprob: -14.625163078308105
    8. '),' → logprob: -15.375163078308105
    9. '

' → logprob: -16.12516212463379
    10. ')' → logprob: -16.50016212463379

Token 46: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.048587825149297714
    2. ' ' → logprob: -3.0485877990722656
    3. ')' → logprob: -16.423587799072266
    4. ' ' → logprob: -16.548587799072266
    5. '２' → logprob: -16.673587799072266
    6. '  ' → logprob: -17.173587799072266
    7. ' two' → logprob: -17.298587799072266
    8. '```' → logprob: -18.236087799072266
    9. '۲' → logprob: -18.236087799072266
    10. 'range' → logprob: -18.611087799072266

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. 'range' → logprob: -14.875431060791016
    4. '２' → logprob: -17.250431060791016
    5. ' range' → logprob: -17.625431060791016
    6. '  ' → logprob: -18.250431060791016
    7. ' ' → logprob: -18.500431060791016
    8. '   ' → logprob: -18.750431060791016
    9. '۲' → logprob: -18.937931060791016
    10. ')' → logprob: -19.250431060791016

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.6087021473795176e-05
    2. '):
' → logprob: -10.250045776367188
    3. ')' → logprob: -12.250045776367188
    4. ':' → logprob: -12.250045776367188
    5. ' ):' → logprob: -14.125045776367188
    6. '):
' → logprob: -15.750045776367188
    7. '():' → logprob: -16.625045776367188
    8. '}:' → logprob: -16.625045776367188
    9. ']:' → logprob: -18.125045776367188
    10. '>:' → logprob: -18.250045776367188

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04582510143518448
    2. '    
' → logprob: -4.045825004577637
    3. ' 
' → logprob: -4.670825004577637
    4. '
' → logprob: -5.545825004577637
    5. '  
' → logprob: -5.670825004577637
    6. ' ' → logprob: -5.670825004577637
    7. '```' → logprob: -6.795825004577637
    8. '    ' → logprob: -6.920825004577637
    9. '   
' → logprob: -6.920825004577637
    10. '  ' → logprob: -7.045825004577637

Token 50: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16615521907806396
    2. '
' → logprob: -3.1661553382873535
    3. '    
' → logprob: -3.2911553382873535
    4. ' 
' → logprob: -4.0411553382873535
    5. '       ' → logprob: -4.5411553382873535
    6. 'import' → logprob: -5.0411553382873535
    7. '```' → logprob: -5.0411553382873535
    8. ' if' → logprob: -5.4161553382873535
    9. '    ' → logprob: -5.5411553382873535
    10. 'd' → logprob: -6.2911553382873535

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2537079155445099
    2. '=' → logprob: -1.5037078857421875
    3. '2' → logprob: -7.1287078857421875
    4. 'ance' → logprob: -8.003707885742188
    5. '_squared' → logprob: -8.503707885742188
    6. '_' → logprob: -8.628707885742188
    7. '_sq' → logprob: -8.628707885742188
    8. ' ' → logprob: -10.753707885742188
    9. '_square' → logprob: -10.753707885742188
    10. '   ' → logprob: -11.628707885742188

Token 52: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.34639790654182434
    2. '0' → logprob: -1.346397876739502
    3. ' sum' → logprob: -3.471397876739502
    4. ' ' → logprob: -6.596397876739502
    5. '   ' → logprob: -9.34639835357666
    6. '(sum' → logprob: -9.97139835357666
    7. 'int' → logprob: -11.97139835357666
    8. '(' → logprob: -11.97139835357666
    9. '	sum' → logprob: -12.72139835357666
    10. '  ' → logprob: -13.22139835357666

Token 53: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.038101620972156525
    2. '0' → logprob: -3.2881016731262207
    3. ' sum' → logprob: -10.038101196289062
    4. '(sum' → logprob: -11.663101196289062
    5. ' ' → logprob: -12.538101196289062
    6. '   ' → logprob: -13.538101196289062
    7. '1' → logprob: -13.663101196289062
    8. '(' → logprob: -14.538101196289062
    9. 'sqrt' → logprob: -15.163101196289062
    10. '	sum' → logprob: -15.663101196289062

Token 54: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001972053898498416
    2. 'for' → logprob: -6.876972198486328
    3. ' for' → logprob: -7.876972198486328
    4. '<|end|>' → logprob: -8.626972198486328
    5. '       ' → logprob: -9.126972198486328
    6. '    
' → logprob: -9.376972198486328
    7. ',' → logprob: -10.251972198486328
    8. ')' → logprob: -10.376972198486328
    9. '(' → logprob: -10.501972198486328
    10. '    ' → logprob: -11.001972198486328

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010793721303343773
    2. 'for' → logprob: -7.376079559326172
    3. ' for' → logprob: -7.751079559326172
    4. '<|end|>' → logprob: -12.001079559326172
    5. '	for' → logprob: -12.376079559326172
    6. '
' → logprob: -13.001079559326172
    7. '    
' → logprob: -13.126079559326172
    8. ' ' → logprob: -13.251079559326172
    9. '   ' → logprob: -13.376079559326172
    10. '       ' → logprob: -13.751079559326172

Token 56: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.021340975537896156
    2. ' for' → logprob: -3.89634108543396
    3. '   ' → logprob: -7.146340847015381
    4. '	for' → logprob: -11.646341323852539
    5. '```' → logprob: -14.646341323852539
    6. '\t' → logprob: -14.771341323852539
    7. '    
' → logprob: -15.021341323852539
    8. '  ' → logprob: -15.021341323852539
    9. '
' → logprob: -15.646341323852539
    10. '    ' → logprob: -15.896341323852539

Token 57: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5794624090194702
    2. 'x' → logprob: -0.8294624090194702
    3. '(x' → logprob: -7.07946252822876
    4. ' i' → logprob: -7.32946252822876
    5. 'p' → logprob: -7.45446252822876
    6. 'c' → logprob: -7.57946252822876
    7. 'a' → logprob: -7.70446252822876
    8. 'xi' → logprob: -8.204462051391602
    9. ' x' → logprob: -9.704462051391602
    10. '(i' → logprob: -10.079462051391602

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005991247948259115
    2. 'in' → logprob: -5.130991458892822
    3. ',' → logprob: -10.380990982055664
    4. 'range' → logprob: -11.005990982055664
    5. '	in' → logprob: -12.255990982055664
    6. '   ' → logprob: -12.505990982055664
    7. ' range' → logprob: -12.755990982055664
    8. ' ' → logprob: -13.505990982055664
    9. '  ' → logprob: -14.255990982055664
    10. '    ' → logprob: -14.630990982055664

Token 59: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163628220558167
    2. ' range' → logprob: -4.264163494110107
    3. '	range' → logprob: -17.139163970947266
    4. 'r' → logprob: -18.264163970947266
    5. 'a' → logprob: -18.889163970947266
    6. ' ' → logprob: -20.014163970947266
    7. 'rang' → logprob: -20.139163970947266
    8. '(range' → logprob: -20.139163970947266
    9. 'ran' → logprob: -20.639163970947266
    10. 'ra' → logprob: -20.889163970947266

Token 60: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0010674663353711367
    2. '(len' → logprob: -7.126067638397217
    3. '(' → logprob: -9.126067161560059
    4. 'D' → logprob: -9.501067161560059
    5. 'len' → logprob: -9.501067161560059
    6. '(d' → logprob: -12.751067161560059
    7. '	D' → logprob: -14.501067161560059
    8. '   ' → logprob: -15.126067161560059
    9. '<D' → logprob: -15.626067161560059
    10. ' (' → logprob: -15.876067161560059

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006012929603457451
    2. '):
' → logprob: -5.131012916564941
    3. '   ' → logprob: -10.256012916564941
    4. ':' → logprob: -10.631012916564941
    5. ')' → logprob: -11.506012916564941
    6. ' ):' → logprob: -11.506012916564941
    7. '):
' → logprob: -12.881012916564941
    8. '       ' → logprob: -14.381012916564941
    9. ' ' → logprob: -15.131012916564941
    10. '  ' → logprob: -15.256012916564941

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03191813826560974
    2. 'dist' → logprob: -3.5319180488586426
    3. ' dist' → logprob: -6.281918048858643
    4. '   ' → logprob: -8.7819185256958
    5. '      ' → logprob: -10.5319185256958
    6. '	dist' → logprob: -10.5319185256958
    7. '(dist' → logprob: -10.9069185256958
    8. '        
' → logprob: -11.1569185256958
    9. '           ' → logprob: -11.6569185256958
    10. ',' → logprob: -12.2819185256958

Token 63: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.008640097454190254
    2. ' dist' → logprob: -5.133640289306641
    3. '       ' → logprob: -6.133640289306641
    4. '   ' → logprob: -7.633640289306641
    5. '	dist' → logprob: -10.13364028930664
    6. '_dist' → logprob: -12.13364028930664
    7. 'diff' → logprob: -12.88364028930664
    8. 'd' → logprob: -13.13364028930664
    9. '(dist' → logprob: -13.63364028930664
    10. '           ' → logprob: -13.88364028930664

Token 64: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0371282696723938
    2. ' +=' → logprob: -3.787128210067749
    3. '+=(' → logprob: -4.287128448486328
    4. '   ' → logprob: -11.287128448486328
    5. ']+=' → logprob: -11.412128448486328
    6. '=' → logprob: -11.537128448486328
    7. '+' → logprob: -11.912128448486328
    8. '```' → logprob: -14.162128448486328
    9. '	' → logprob: -14.412128448486328
    10. '+='' → logprob: -14.912128448486328

Token 65: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.003012291854247451
    2. ' (' → logprob: -6.503012180328369
    3. '(abs' → logprob: -6.753012180328369
    4. '   ' → logprob: -8.128012657165527
    5. '(b' → logprob: -10.878012657165527
    6. '(ab' → logprob: -11.628012657165527
    7. '(A' → logprob: -11.878012657165527
    8. '(' → logprob: -12.378012657165527
    9. '((' → logprob: -12.628012657165527
    10. '(ax' → logprob: -14.128012657165527

Token 66: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.697387966094539e-05
    2. 'b' → logprob: -9.875086784362793
    3. '(a' → logprob: -10.500086784362793
    4. ' a' → logprob: -11.875086784362793
    5. '	a' → logprob: -14.375086784362793
    6. ')a' → logprob: -15.500086784362793
    7. '[a' → logprob: -16.75008773803711
    8. '(' → logprob: -17.25008773803711
    9. '_a' → logprob: -17.37508773803711
    10. '(b' → logprob: -17.37508773803711

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[I' → logprob: -14.875000953674316
    3. '[' → logprob: -15.000000953674316
    4. 'i' → logprob: -15.250000953674316
    5. ' [' → logprob: -18.750001907348633
    6. '[
' → logprob: -19.500001907348633
    7. 'import' → logprob: -19.875001907348633
    8. '```' → logprob: -20.000001907348633
    9. '[a' → logprob: -20.250001907348633
    10. '(i' → logprob: -20.750001907348633

Token 68: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11306241154670715
    2. ' -' → logprob: -2.2380623817443848
    3. '-b' → logprob: -8.363062858581543
    4. ')' → logprob: -12.613062858581543
    5. ']' → logprob: -13.738062858581543
    6. ' ' → logprob: -13.988062858581543
    7. '   ' → logprob: -14.613062858581543
    8. ' ' → logprob: -15.238062858581543
    9. '	' → logprob: -15.738062858581543
    10. '-)' → logprob: -16.238061904907227

Token 69: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.169644296169281
    2. ' -' → logprob: -1.9196443557739258
    3. '-b' → logprob: -4.669644355773926
    4. '   ' → logprob: -16.54464340209961
    5. '  ' → logprob: -16.66964340209961
    6. ' ' → logprob: -16.79464340209961
    7. '−' → logprob: -17.16964340209961
    8. ' b' → logprob: -17.91964340209961
    9. 'b' → logprob: -18.29464340209961
    10. ' ' → logprob: -19.04464340209961

Token 70: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00861528143286705
    2. ' b' → logprob: -4.758615493774414
    3. '<|end|>' → logprob: -14.633615493774414
    4. ')b' → logprob: -15.758615493774414
    5. '   ' → logprob: -16.383615493774414
    6. '	b' → logprob: -16.633615493774414
    7. ' ' → logprob: -17.383615493774414
    8. '  ' → logprob: -18.508615493774414
    9. '>b' → logprob: -18.508615493774414
    10. '    ' → logprob: -19.133615493774414

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.555654105497524e-05
    2. '[' → logprob: -9.50009536743164
    3. '[I' → logprob: -11.00009536743164
    4. '][' → logprob: -13.12509536743164
    5. 'i' → logprob: -14.62509536743164
    6. ')' → logprob: -14.62509536743164
    7. ')[' → logprob: -14.75009536743164
    8. '[j' → logprob: -15.25009536743164
    9. ']' → logprob: -15.62509536743164
    10. '```' → logprob: -16.50009536743164

Token 72: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18040890991687775
    2. ')**' → logprob: -1.8054089546203613
    3. '])' → logprob: -7.680408954620361
    4. '）' → logprob: -9.680408477783203
    5. '`)' → logprob: -9.805408477783203
    6. ' )' → logprob: -10.805408477783203
    7. '))' → logprob: -11.055408477783203
    8. '**)' → logprob: -11.305408477783203
    9. '   ' → logprob: -11.680408477783203
    10. '")' → logprob: -11.930408477783203

Token 73: ' **' (ID: 6240)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03876708820462227
    2. '**' → logprob: -3.288767099380493
    3. ')**' → logprob: -8.413766860961914
    4. ')' → logprob: -8.788766860961914
    5. '```' → logprob: -8.788766860961914
    6. ' ' → logprob: -8.913766860961914
    7. '*' → logprob: -10.163766860961914
    8. ' **' → logprob: -11.538766860961914
    9. ']' → logprob: -11.538766860961914
    10. '>' → logprob: -12.913766860961914

Token 74: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003364158037584275
    2. ' ' → logprob: -8.000336647033691
    3. '۲' → logprob: -15.250336647033691
    4. '```' → logprob: -15.375336647033691
    5. '   ' → logprob: -16.000335693359375
    6. '２' → logprob: -16.000335693359375
    7. '  ' → logprob: -16.687835693359375
    8. ' ' → logprob: -16.812835693359375
    9. '٢' → logprob: -17.250335693359375
    10. '²' → logprob: -17.750335693359375

Token 75: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -16.625009536743164
    4. '²' → logprob: -17.312509536743164
    5. '۲' → logprob: -17.375009536743164
    6. '２' → logprob: -17.375009536743164
    7. '1' → logprob: -17.750009536743164
    8. '​' → logprob: -18.375009536743164
    9. '२' → logprob: -18.625009536743164
    10. '   ' → logprob: -18.875009536743164

Token 76: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3306010067462921
    2. '
' → logprob: -1.3306009769439697
    3. '    
' → logprob: -4.705601215362549
    4. '  
' → logprob: -5.455601215362549
    5. '
' → logprob: -6.830601215362549
    6. 'if' → logprob: -7.080601215362549
    7. '   
' → logprob: -7.955601215362549
    8. ' ' → logprob: -7.955601215362549
    9. '  ' → logprob: -8.45560073852539
    10. ')' → logprob: -8.58060073852539

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023429835215210915
    2. 'if' → logprob: -4.023429870605469
    3. ' if' → logprob: -6.273429870605469
    4. ' ' → logprob: -6.648429870605469
    5. 'import' → logprob: -7.398429870605469
    6. '
' → logprob: -7.523429870605469
    7. ')' → logprob: -8.398429870605469
    8. '    
' → logprob: -8.898429870605469
    9. '  
' → logprob: -8.898429870605469
    10. '  ' → logprob: -9.273429870605469

Token 78: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2624092400074005
    2. '   ' → logprob: -2.012409210205078
    3. ' if' → logprob: -2.512409210205078
    4. 'import' → logprob: -4.262409210205078
    5. 'from' → logprob: -6.637409210205078
    6. 'cnt' → logprob: -8.512409210205078
    7. ' from' → logprob: -9.387409210205078
    8. ' ' → logprob: -9.387409210205078
    9. '```' → logprob: -9.637409210205078
    10. '  ' → logprob: -10.137409210205078

Token 79: ' dist' (ID: 3601)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09158942848443985
    2. ' int' → logprob: -2.8415894508361816
    3. 'dist' → logprob: -4.091589450836182
    4. '(int' → logprob: -4.591589450836182
    5. ' dist' → logprob: -6.591589450836182
    6. '(dist' → logprob: -7.341589450836182
    7. 'pow' → logprob: -9.091588973999023
    8. ' (' → logprob: -9.591588973999023
    9. '(' → logprob: -9.966588973999023
    10. 'round' → logprob: -10.341588973999023

Token 80: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.017319856211543083
    2. '==' → logprob: -4.267319679260254
    3. ' **' → logprob: -6.642319679260254
    4. '%' → logprob: -6.767319679260254
    5. ' %' → logprob: -8.267319679260254
    6. ' ==' → logprob: -8.392319679260254
    7. '>' → logprob: -9.892319679260254
    8. '>=' → logprob: -10.142319679260254
    9. '***' → logprob: -10.267319679260254
    10. '%s' → logprob: -10.392319679260254

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0702022910118103
    2. '(' → logprob: -2.695202350616455
    3. ' ' → logprob: -8.945201873779297
    4. '.' → logprob: -9.445201873779297
    5. ' (' → logprob: -10.195201873779297
    6. '1' → logprob: -11.195201873779297
    7. '{' → logprob: -12.820201873779297
    8. ' ' → logprob: -14.445201873779297
    9. '   ' → logprob: -15.132701873779297
    10. '```' → logprob: -15.195201873779297

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.226051926612854
    2. '(' → logprob: -1.601051926612854
    3. '.' → logprob: -7.4760518074035645
    4. '1' → logprob: -10.726052284240723
    5. '{' → logprob: -10.726052284240723
    6. ' ' → logprob: -11.476052284240723
    7. ' (' → logprob: -11.726052284240723
    8. '-' → logprob: -14.101052284240723
    9. '```' → logprob: -14.226052284240723
    10. '(.' → logprob: -14.476052284240723

Token 83: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.4192871175473556e-05
    2. '0' → logprob: -10.500054359436035
    3. '```' → logprob: -11.625054359436035
    4. '1' → logprob: -12.750054359436035
    5. '5' → logprob: -12.750054359436035
    6. '`.' → logprob: -13.125054359436035
    7. '<|end|>' → logprob: -13.125054359436035
    8. '   ' → logprob: -13.500054359436035
    9. ' .' → logprob: -13.625054359436035
    10. '(' → logprob: -14.125054359436035

Token 84: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.3080716346157715e-05
    2. '.' → logprob: -11.375022888183594
    3. '```' → logprob: -11.875022888183594
    4. '2' → logprob: -13.875022888183594
    5. '25' → logprob: -13.875022888183594
    6. '   ' → logprob: -14.875022888183594
    7. '0' → logprob: -15.000022888183594
    8. '4' → logprob: -15.625022888183594
    9. '05' → logprob: -15.687522888183594
    10. 'to' → logprob: -15.750022888183594

Token 85: ' %' (ID: 1851)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.6272100806236267
    2. '%' → logprob: -1.2522101402282715
    3. '.' → logprob: -2.3772101402282715
    4. '==' → logprob: -2.7522101402282715
    5. 'is' → logprob: -4.6272101402282715
    6. ' %' → logprob: -4.8772101402282715
    7. ' ==' → logprob: -6.2522101402282715
    8. '%=' → logprob: -6.7522101402282715
    9. '%.' → logprob: -7.0022101402282715
    10. ').' → logprob: -7.3772101402282715

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043460296001285315
    2. ' ' → logprob: -7.750434398651123
    3. '2' → logprob: -13.125434875488281
    4. '  ' → logprob: -14.500434875488281
    5. '```' → logprob: -15.000434875488281
    6. '==' → logprob: -15.250434875488281
    7. ' ' → logprob: -15.250434875488281
    8. '   ' → logprob: -15.250434875488281
    9. '=' → logprob: -16.37543487548828
    10. ' ==' → logprob: -16.75043487548828

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -15.250004768371582
    4. 'int' → logprob: -16.3750057220459
    5. '  ' → logprob: -17.0000057220459
    6. '   ' → logprob: -17.0000057220459
    7. '```' → logprob: -17.1250057220459
    8. '１' → logprob: -18.5000057220459
    9. '10' → logprob: -18.7500057220459
    10. '=' → logprob: -19.1250057220459

Token 88: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12790422141551971
    2. ' ==' → logprob: -2.127904176712036
    3. '=' → logprob: -7.002904415130615
    4. ' =' → logprob: -10.752903938293457
    5. ')==' → logprob: -11.627903938293457
    6. '0' → logprob: -11.877903938293457
    7. ' ' → logprob: -11.877903938293457
    8. '()==' → logprob: -11.877903938293457
    9. '===' → logprob: -12.127903938293457
    10. '==
' → logprob: -12.502903938293457

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009757270105183125
    2. ' ' → logprob: -4.634757041931152
    3. '00' → logprob: -14.384757041931152
    4. '  ' → logprob: -15.884757041931152
    5. '000' → logprob: -16.32225799560547
    6. '   ' → logprob: -16.57225799560547
    7. ' ' → logprob: -16.63475799560547
    8. '=' → logprob: -17.19725799560547
    9. '۰' → logprob: -17.63475799560547
    10. '    ' → logprob: -17.75975799560547

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '  ' → logprob: -19.00009536743164
    4. '```' → logprob: -19.12509536743164
    5. '   ' → logprob: -19.25009536743164
    6. '00' → logprob: -19.50009536743164
    7. '۰' → logprob: -19.62509536743164
    8. '０' → logprob: -19.75009536743164
    9. '٠' → logprob: -20.12509536743164
    10. 'o' → logprob: -20.31259536743164

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00154533376917243
    2. ':
' → logprob: -6.501545429229736
    3. '   ' → logprob: -10.501544952392578
    4. ' :' → logprob: -11.751544952392578
    5. '       ' → logprob: -12.251544952392578
    6. '):' → logprob: -13.626544952392578
    7. '：' → logprob: -14.626544952392578
    8. ':
' → logprob: -14.876544952392578
    9. ' :
' → logprob: -15.501544952392578
    10. '):
' → logprob: -16.251544952392578

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002022974193096161
    2. '   ' → logprob: -6.377022743225098
    3. ' cnt' → logprob: -8.627022743225098
    4. 'cnt' → logprob: -9.627022743225098
    5. '	   ' → logprob: -10.752022743225098
    6. '	cnt' → logprob: -10.752022743225098
    7. '    ' → logprob: -12.127022743225098
    8. '      ' → logprob: -12.127022743225098
    9. '     ' → logprob: -12.377022743225098
    10. '           ' → logprob: -12.502022743225098

Token 93: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.2858389914035797
    2. ' cnt' → logprob: -1.5358389616012573
    3. '       ' → logprob: -3.660839080810547
    4. '   ' → logprob: -4.910839080810547
    5. '	cnt' → logprob: -8.535839080810547
    6. '           ' → logprob: -10.660839080810547
    7. '    ' → logprob: -11.535839080810547
    8. '(cnt' → logprob: -11.785839080810547
    9. '[cnt' → logprob: -11.785839080810547
    10. '_cnt' → logprob: -12.285839080810547

Token 94: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20149745047092438
    2. '+=' → logprob: -1.7014974355697632
    3. '+' → logprob: -9.451497077941895
    4. '=' → logprob: -13.451497077941895
    5. ' +' → logprob: -13.701497077941895
    6. '+='' → logprob: -13.951497077941895
    7. ']+=' → logprob: -14.326497077941895
    8. '+="' → logprob: -14.451497077941895
    9. '   ' → logprob: -15.076497077941895
    10. '    ' → logprob: -15.826497077941895

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '１' → logprob: -18.37500762939453
    4. '   ' → logprob: -18.62500762939453
    5. '```' → logprob: -20.12500762939453
    6. '۱' → logprob: -20.31250762939453
    7. '<|end|>' → logprob: -20.43750762939453
    8. '2' → logprob: -20.56250762939453
    9. '+' → logprob: -20.62500762939453
    10. '0' → logprob: -20.75000762939453

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '１' → logprob: -17.75
    4. '<|end|>' → logprob: -18.25
    5. '```' → logprob: -19.1875
    6. '۱' → logprob: -19.3125
    7. '१' → logprob: -19.6875
    8. '১' → logprob: -19.875
    9. 'int' → logprob: -20.375
    10. 'a' → logprob: -20.4375

Token 97: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.44443862256594e-05
    2. '
' → logprob: -9.750064849853516
    3. ' print' → logprob: -12.125064849853516
    4. '  
' → logprob: -15.500064849853516
    5. ' 
' → logprob: -16.125064849853516
    6. '```' → logprob: -16.250064849853516
    7. '
' → logprob: -16.375064849853516
    8. '    
' → logprob: -16.625064849853516
    9. ')
' → logprob: -16.875064849853516
    10. '

' → logprob: -17.000064849853516

Token 98: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.015305552864447e-05
    2. '
' → logprob: -9.750060081481934
    3. ')
' → logprob: -14.500060081481934
    4. ' print' → logprob: -14.500060081481934
    5. '  
' → logprob: -15.250060081481934
    6. ')' → logprob: -15.750060081481934
    7. '```' → logprob: -16.00006103515625
    8. '    
' → logprob: -16.25006103515625
    9. '
' → logprob: -16.62506103515625
    10. '        
' → logprob: -17.00006103515625

Token 99: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.4741035997867584
    2. '(' → logprob: -0.974103569984436
    3. '(count' → logprob: -10.849103927612305
    4. '(
' → logprob: -13.474103927612305
    5. 'cnt' → logprob: -13.599103927612305
    6. '()' → logprob: -13.849103927612305
    7. ' (' → logprob: -14.099103927612305
    8. '(counter' → logprob: -14.224103927612305
    9. '('' → logprob: -14.474103927612305
    10. '(len' → logprob: -14.599103927612305

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')
' → logprob: -17.5
    4. ')`' → logprob: -17.75
    5. '))' → logprob: -18.625
    6. '`)' → logprob: -19.75
    7. '')' → logprob: -19.75
    8. ')}' → logprob: -19.875
    9. '）' → logprob: -19.875
    10. '),' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 98
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 88
Précision stricte (1ère position): 40.82%
Précision adaptée (1ère position): 44.90%
Précision (top 10): 89.80%
================================================================================
