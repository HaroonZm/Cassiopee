================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np
from scipy.sparse.csgraph import dijkstra
from scipy.sparse import csr_matrix

def main():
    """
    Main function to read input, build the graph representation of the grid,
    compute the shortest path from the top-left to the bottom-right cell,
    and print the minimum number of color changes required.
    """
    # Read grid dimensions from input
    H, W = map(int, input().split())
    
    # Read the grid itself, each element is a string representing a row
    s = []
    for _ in range(H):
        s.append(input())
    
    def co_num(h, w):
        """
        Convert grid coordinates (h, w) into a unique vertex number for graph representation.
        
        Args:
            h (int): Row index of the cell (0-based).
            w (int): Column index of the cell (0-based).
        
        Returns:
            int: Unique number representing the cell at (h, w).
        """
        return h * W + w
    
    # Lists to store the row indices, column indices, and distances for the sparse adjacency matrix
    row = []
    col = []
    dist = []
    
    # Build the adjacency matrix by adding edges between adjacent cells (down and right directions)
    for h in range(H):
        for w in range(W):
            # Add an edge to the cell below (if it exists)
            if h != H - 1:
                row.append(co_num(h, w))
                col.append(co_num(h + 1, w))
                # Edge cost is 0 if the symbols are the same, else 1 (color change)
                dist.append(0 if s[h+1][w] == s[h][w] else 1)
            # Add an edge to the right cell (if it exists)
            if w != W - 1:
                row.append(co_num(h, w))
                col.append(co_num(h, w + 1))
                # Edge cost is 0 if the symbols are the same, else 1 (color change)
                dist.append(0 if s[h][w+1] == s[h][w] else 1)
    
    # Build a sparse adjacency matrix for the graph (directed, from each cell to its right and down neighbors)
    adjacency_matrix = csr_matrix((dist, (row, col)), shape=[H * W, H * W])
    
    # Run Dijkstra's algorithm to find the shortest path from the start (top-left cell) to the end (bottom-right cell)
    # The cost here is the minimal number of color changes along any path from start to goal
    d = int(dijkstra(adjacency_matrix, directed=True, indices=0)[H * W - 1])
    
    # Determine the number of color changes required based on the starting and ending cell type
    # A color change corresponds to moving from '.' to '#' or vice versa
    if s[0][0] == '.' and s[-1][-1] == '.':
        # If both start and goal are '.', the total number of transitions halves the edge cost
        print(d // 2)
    else:
        # If either or both ends are '#', an additional transition is counted
        print(d // 2 + 1)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0017729965038597584
    2. ' ' → logprob: -6.876772880554199
    3. ' numpy' → logprob: -7.501772880554199
    4. 'np' → logprob: -8.6267728805542
    5. ' ' → logprob: -12.3767728805542
    6. 'numpy' → logprob: -13.7517728805542
    7. ' nd' → logprob: -14.3767728805542
    8. ' n' → logprob: -14.7517728805542
    9. '_numpy' → logprob: -15.0017728805542
    10. '```' → logprob: -15.0017728805542

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.037481639534235
    2. '\n' → logprob: -4.162481784820557
    3. 'newline' → logprob: -4.537481784820557
    4. '\' → logprob: -5.412481784820557
    5. '```' → logprob: -6.287481784820557
    6. 'import' → logprob: -6.537481784820557
    7. '<|end|>' → logprob: -6.537481784820557
    8. '.import' → logprob: -8.662481307983398
    9. '<|end|>' → logprob: -8.662481307983398
    10. '.e' → logprob: -8.912481307983398

Token 5: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6920679807662964
    2. 'newline' → logprob: -1.6920679807662964
    3. '```' → logprob: -2.067068099975586
    4. '.' → logprob: -2.817068099975586
    5. 'import' → logprob: -3.067068099975586
    6. '\' → logprob: -3.317068099975586
    7. '
' → logprob: -3.817068099975586
    8. '<|end|>' → logprob: -5.192068099975586
    9. 'np' → logprob: -5.942068099975586
    10. '[' → logprob: -5.942068099975586

Token 6: ' scipy' (ID: 68933)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.17839805781841278
    2. ' pandas' → logprob: -2.3033981323242188
    3. 'sk' → logprob: -3.4283981323242188
    4. ' scipy' → logprob: -3.6783981323242188
    5. ' tensorflow' → logprob: -5.678398132324219
    6. 'sc' → logprob: -7.053398132324219
    7. 'p' → logprob: -8.053398132324219
    8. ' keras' → logprob: -8.053398132324219
    9. ' matplotlib' → logprob: -8.178398132324219
    10. ' math' → logprob: -9.053398132324219

Token 7: '.s' (ID: 640)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5117200613021851
    2. '.linalg' → logprob: -1.511720061302185
    3. '.optimize' → logprob: -2.1367201805114746
    4. ' import' → logprob: -3.6367201805114746
    5. '.stats' → logprob: -4.636720180511475
    6. '.interpolate' → logprob: -4.886720180511475
    7. '.signal' → logprob: -5.011720180511475
    8. ' .' → logprob: -5.511720180511475
    9. 'import' → logprob: -5.636720180511475
    10. '.integr' → logprob: -6.636720180511475

Token 8: 'parse' (ID: 4841)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1307870149612427
    2. 'pc' → logprob: -1.6307870149612427
    3. 'pt' → logprob: -2.255786895751953
    4. 'patial' → logprob: -2.255786895751953
    5. 'c' → logprob: -2.380786895751953
    6. 'pecial' → logprob: -3.005786895751953
    7. 'pi' → logprob: -3.380786895751953
    8. 'ci' → logprob: -3.505786895751953
    9. 'pat' → logprob: -4.130786895751953
    10. 'parse' → logprob: -4.255786895751953

Token 9: '.cs' (ID: 37596)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4616751968860626
    2. 'import' → logprob: -1.0866751670837402
    3. '.' → logprob: -3.7116751670837402
    4. '.linalg' → logprob: -4.96167516708374
    5. '.c' → logprob: -7.83667516708374
    6. '	import' → logprob: -8.711675643920898
    7. '.import' → logprob: -9.086675643920898
    8. '._' → logprob: -9.961675643920898
    9. '_import' → logprob: -9.961675643920898
    10. ' ' → logprob: -10.086675643920898

Token 10: 'graph' (ID: 7978)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02379903756082058
    2. 'c' → logprob: -4.273798942565918
    3. 'graph' → logprob: -4.898798942565918
    4. 'rc' → logprob: -6.773798942565918
    5. 'raph' → logprob: -8.398798942565918
    6. 'ci' → logprob: -9.273798942565918
    7. 'cr' → logprob: -9.398798942565918
    8. 'rt' → logprob: -9.648798942565918
    9. 'parse' → logprob: -9.898798942565918
    10. '```' → logprob: -9.898798942565918

Token 11: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3942900598049164
    2. ' import' → logprob: -1.1442900896072388
    3. '.' → logprob: -5.019289970397949
    4. '.import' → logprob: -7.769289970397949
    5. '._' → logprob: -8.64428997039795
    6. '_import' → logprob: -10.14428997039795
    7. '.im' → logprob: -10.39428997039795
    8. '```' → logprob: -10.76928997039795
    9. ' ' → logprob: -11.01928997039795
    10. '_' → logprob: -11.14428997039795

Token 12: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0048867464065552
    2. 'connected' → logprob: -1.5048867464065552
    3. '_d' → logprob: -2.0048866271972656
    4. 'short' → logprob: -2.3798866271972656
    5. '_short' → logprob: -2.5048866271972656
    6. ' shortest' → logprob: -3.5048866271972656
    7. '_connected' → logprob: -3.8798866271972656
    8. 'bread' → logprob: -4.254886627197266
    9. '_depth' → logprob: -5.004886627197266
    10. 'lap' → logprob: -5.254886627197266

Token 13: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0027265367098152637
    2. 'ijk' → logprob: -6.3777265548706055
    3. 'jik' → logprob: -7.2527265548706055
    4. 'eep' → logprob: -9.002726554870605
    5. 'j' → logprob: -9.377726554870605
    6. 'irected' → logprob: -10.752726554870605
    7. 'ense' → logprob: -11.377726554870605
    8. 'e' → logprob: -11.377726554870605
    9. 'ijks' → logprob: -11.377726554870605
    10. '_' → logprob: -11.502726554870605

Token 14: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04977932944893837
    2. '\n' → logprob: -3.6747794151306152
    3. '(
' → logprob: -4.299779415130615
    4. '(

' → logprob: -6.424779415130615
    5. '```' → logprob: -6.424779415130615
    6. '\' → logprob: -6.799779415130615
    7. 'newline' → logprob: -6.924779415130615
    8. '\(' → logprob: -6.924779415130615
    9. '(n' → logprob: -7.174779415130615
    10. '
' → logprob: -7.674779415130615

Token 15: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18744684755802155
    2. '```' → logprob: -3.4374468326568604
    3. '\n' → logprob: -3.5624468326568604
    4. '

' → logprob: -3.6874468326568604
    5. '(
' → logprob: -3.8124468326568604
    6. '(

' → logprob: -4.0624470710754395
    7. '
' → logprob: -4.1874470710754395
    8. '\' → logprob: -4.4374470710754395
    9. 'def' → logprob: -5.0624470710754395
    10. 'import' → logprob: -5.9374470710754395

Token 16: ' scipy' (ID: 68933)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.734615683555603
    2. ' scipy' → logprob: -0.859615683555603
    3. ' network' → logprob: -3.1096158027648926
    4. 'sk' → logprob: -3.1096158027648926
    5. 'network' → logprob: -5.859615802764893
    6. 'sc' → logprob: -5.859615802764893
    7. ' collections' → logprob: -6.609615802764893
    8. ' numpy' → logprob: -8.359615325927734
    9. ' sk' → logprob: -8.859615325927734
    10. ' ' → logprob: -9.734615325927734

Token 17: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.24187317490577698
    2. '.' → logprob: -1.7418731451034546
    3. '.linalg' → logprob: -3.741873264312744
    4. '.optimize' → logprob: -4.241873264312744
    5. ' .' → logprob: -7.491873264312744
    6. '.interpolate' → logprob: -8.116872787475586
    7. ' import' → logprob: -8.366872787475586
    8. 'import' → logprob: -9.491872787475586
    9. '.signal' → logprob: -9.491872787475586
    10. '.stats' → logprob: -9.741872787475586

Token 18: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.03816795349121094
    2. 'patial' → logprob: -3.288167953491211
    3. 'p' → logprob: -9.913167953491211
    4. 'pare' → logprob: -10.538167953491211
    5. 'par' → logprob: -10.663167953491211
    6. 'pat' → logprob: -11.163167953491211
    7. 'pecial' → logprob: -12.038167953491211
    8. 'ignal' → logprob: -13.663167953491211
    9. 'parsed' → logprob: -13.663167953491211
    10. 'pa' → logprob: -14.288167953491211

Token 19: ' import' (ID: 1588)
  Prédit: '.linalg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.linalg' → logprob: -0.3504841923713684
    2. '.cs' → logprob: -1.3504841327667236
    3. ' import' → logprob: -3.9754841327667236
    4. '.c' → logprob: -4.725484371185303
    5. 'import' → logprob: -4.975484371185303
    6. ' .' → logprob: -7.475484371185303
    7. '.' → logprob: -7.475484371185303
    8. 'cs' → logprob: -8.350483894348145
    9. '.s' → logprob: -8.975483894348145
    10. '.import' → logprob: -9.475483894348145

Token 20: ' csr' (ID: 162927)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.5308601260185242
    2. ' csr' → logprob: -0.9058601260185242
    3. 'c' → logprob: -5.65585994720459
    4. 'cs' → logprob: -6.40585994720459
    5. ' c' → logprob: -7.40585994720459
    6. '```' → logprob: -7.65585994720459
    7. ' co' → logprob: -7.65585994720459
    8. 'co' → logprob: -8.03085994720459
    9. ' cs' → logprob: -8.53085994720459
    10. ' lil' → logprob: -8.90585994720459

Token 21: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.00041732576210051775
    2. 'matrix' → logprob: -8.125417709350586
    3. '_mat' → logprob: -9.375417709350586
    4. 'mat' → logprob: -10.375417709350586
    5. ' matrix' → logprob: -13.125417709350586
    6. 'Matrix' → logprob: -14.125417709350586
    7. 'm' → logprob: -14.500417709350586
    8. '_m' → logprob: -14.500417709350586
    9. '_' → logprob: -14.875417709350586
    10. '_array' → logprob: -15.125417709350586

Token 22: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0355474948883057
    2. '\n' → logprob: -1.1605474948883057
    3. '

' → logprob: -1.6605474948883057
    4. '(' → logprob: -3.2855474948883057
    5. 'import' → logprob: -3.5355474948883057
    6. 'x' → logprob: -4.285547256469727
    7. '
' → logprob: -4.410547256469727
    8. 'data' → logprob: -5.035547256469727
    9. '\' → logprob: -5.285547256469727
    10. 'n' → logprob: -5.410547256469727

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8569812178611755
    2. 'n' → logprob: -1.9819812774658203
    3. '\' → logprob: -2.6069812774658203
    4. 'x' → logprob: -2.7319812774658203
    5. '#' → logprob: -2.9819812774658203
    6. '\n' → logprob: -3.1069812774658203
    7. '(' → logprob: -3.3569812774658203
    8. 'd' → logprob: -3.8569812774658203
    9. '```' → logprob: -3.8569812774658203
    10. 'a' → logprob: -3.9819812774658203

Token 24: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006441680248826742
    2. ' shortest' → logprob: -5.256441593170166
    3. ' find' → logprob: -7.631441593170166
    4. ' d' → logprob: -8.631442070007324
    5. ' space' → logprob: -9.006442070007324
    6. ' calculate' → logprob: -9.381442070007324
    7. ' create' → logprob: -9.631442070007324
    8. ' a' → logprob: -10.006442070007324
    9. ' c' → logprob: -10.506442070007324
    10. '_' → logprob: -10.506442070007324

Token 25: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002569289645180106
    2. '_' → logprob: -9.000256538391113
    3. ' (' → logprob: -9.500256538391113
    4. ':' → logprob: -11.750256538391113
    5. '("("' → logprob: -11.750256538391113
    6. '(
' → logprob: -12.125256538391113
    7. '```' → logprob: -12.250256538391113
    8. ')' → logprob: -12.500256538391113
    9. '<|end|>' → logprob: -12.500256538391113
    10. '('' → logprob: -12.750256538391113

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043576713651418686
    2. '    ' → logprob: -4.043576717376709
    3. ' ' → logprob: -4.668576717376709
    4. '\' → logprob: -4.793576717376709
    5. '    
' → logprob: -6.293576717376709
    6. 'n' → logprob: -7.168576717376709
    7. '[' → logprob: -7.293576717376709
    8. ' 
' → logprob: -7.418576717376709
    9. '(n' → logprob: -7.418576717376709
    10. '```' → logprob: -7.668576717376709

Token 27: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5247547626495361
    2. 'matrix' → logprob: -1.8997547626495361
    3. ' ' → logprob: -2.024754762649536
    4. 'graph' → logprob: -2.149754762649536
    5. '   ' → logprob: -2.399754762649536
    6. ' matrix' → logprob: -2.774754762649536
    7. ' n' → logprob: -2.774754762649536
    8. '    ' → logprob: -3.774754762649536
    9. 'grid' → logprob: -3.899754762649536
    10. ' grid' → logprob: -4.274754524230957

Token 28: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1431388854980469
    2. 'n' → logprob: -1.6431388854980469
    3. 'G' → logprob: -2.268138885498047
    4. '   ' → logprob: -2.893138885498047
    5. 'A' → logprob: -3.393138885498047
    6. 'graph' → logprob: -3.393138885498047
    7. 'I' → logprob: -3.643138885498047
    8. 'matrix' → logprob: -3.643138885498047
    9. 'D' → logprob: -4.018138885498047
    10. 'T' → logprob: -4.268138885498047

Token 29: ' Main' (ID: 7956)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.30245956778526306
    2. 'Find' → logprob: -2.552459478378296
    3. 'Compute' → logprob: -2.927459478378296
    4. 'Calcul' → logprob: -4.177459716796875
    5. ' Calculate' → logprob: -4.427459716796875
    6. 'Given' → logprob: -4.677459716796875
    7. 'Returns' → logprob: -4.802459716796875
    8. 'Return' → logprob: -4.927459716796875
    9. 'Implement' → logprob: -4.927459716796875
    10. 'D' → logprob: -5.052459716796875

Token 30: ' function' (ID: 1114)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1864190548658371
    2. '()' → logprob: -1.9364190101623535
    3. ' function' → logprob: -3.8114190101623535
    4. ' ()' → logprob: -7.3114190101623535
    5. '   ' → logprob: -7.5614190101623535
    6. ' ():' → logprob: -7.6864190101623535
    7. 'def' → logprob: -7.9364190101623535
    8. '_' → logprob: -7.9364190101623535
    9. ' code' → logprob: -8.061419486999512
    10. '():
' → logprob: -9.061419486999512

Token 31: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16630634665489197
    2. ' to' → logprob: -2.666306257247925
    3. 'def' → logprob: -3.416306257247925
    4. ':' → logprob: -4.041306495666504
    5. '():' → logprob: -4.416306495666504
    6. '```' → logprob: -5.041306495666504
    7. '()' → logprob: -5.541306495666504
    8. '
' → logprob: -6.541306495666504
    9. '<|end|>' → logprob: -6.541306495666504
    10. ' for' → logprob: -6.666306495666504

Token 32: ' read' (ID: 1729)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.3664047420024872
    2. ' calculate' → logprob: -1.7414047718048096
    3. 'compute' → logprob: -3.6164047718048096
    4. ' solve' → logprob: -3.7414047718048096
    5. ' find' → logprob: -3.8664047718048096
    6. ' run' → logprob: -4.6164045333862305
    7. 'calculate' → logprob: -4.7414045333862305
    8. ' perform' → logprob: -5.1164045333862305
    9. ' load' → logprob: -5.2414045333862305
    10. ' process' → logprob: -5.7414045333862305

Token 33: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.32707998156547546
    2. ' the' → logprob: -1.9520800113677979
    3. ' ' → logprob: -2.702080011367798
    4. ' graph' → logprob: -3.702080011367798
    5. ' data' → logprob: -3.827080011367798
    6. ' a' → logprob: -4.827079772949219
    7. ' and' → logprob: -5.452079772949219
    8. 'input' → logprob: -5.952079772949219
    9. ' an' → logprob: -6.202079772949219
    10. ' user' → logprob: -6.452079772949219

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5066101551055908
    2. '   ' → logprob: -1.2566101551055908
    3. ' and' → logprob: -2.256610155105591
    4. ' ,' → logprob: -5.506609916687012
    5. '```' → logprob: -6.381609916687012
    6. '    ' → logprob: -7.631609916687012
    7. ')' → logprob: -8.131609916687012
    8. '()' → logprob: -8.506609916687012
    9. ' lines' → logprob: -8.631609916687012
    10. 'and' → logprob: -8.881609916687012

Token 35: ' build' (ID: 3024)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.41048285365104675
    2. ' process' → logprob: -1.6604828834533691
    3. ' calculate' → logprob: -2.285482883453369
    4. 'compute' → logprob: -4.410482883453369
    5. ' find' → logprob: -5.160482883453369
    6. ' solve' → logprob: -5.285482883453369
    7. 'process' → logprob: -5.410482883453369
    8. ' parse' → logprob: -5.910482883453369
    9. ' build' → logprob: -5.910482883453369
    10. 'calculate' → logprob: -6.035482883453369

Token 36: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.49557000398635864
    2. ' graph' → logprob: -1.6205699443817139
    3. ' a' → logprob: -1.7455699443817139
    4. 'the' → logprob: -5.245570182800293
    5. ' and' → logprob: -5.370570182800293
    6. ' adjacency' → logprob: -5.495570182800293
    7. 'graph' → logprob: -6.495570182800293
    8. ' an' → logprob: -6.620570182800293
    9. '   ' → logprob: -7.745570182800293
    10. ' graphs' → logprob: -7.995570182800293

Token 37: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.052087508141994476
    2. 'graph' → logprob: -3.5520875453948975
    3. ' adjacency' → logprob: -3.9270875453948975
    4. '   ' → logprob: -7.677087306976318
    5. ' matrix' → logprob: -7.802087306976318
    6. ' distance' → logprob: -7.802087306976318
    7. 'adj' → logprob: -8.177087783813477
    8. 'distance' → logprob: -8.302087783813477
    9. ' weighted' → logprob: -9.052087783813477
    10. 'matrix' → logprob: -10.114587783813477

Token 38: ' representation' (ID: 22311)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02806137502193451
    2. '   ' → logprob: -4.278061389923096
    3. ' and' → logprob: -4.653061389923096
    4. ' ,' → logprob: -5.903061389923096
    5. 'and' → logprob: -7.278061389923096
    6. '```' → logprob: -7.278061389923096
    7. '    ' → logprob: -9.653060913085938
    8. '``' → logprob: -11.153060913085938
    9. ')' → logprob: -11.403060913085938
    10. ',and' → logprob: -11.778060913085938

Token 39: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09784989804029465
    2. '   ' → logprob: -2.4728498458862305
    3. ' and' → logprob: -5.7228498458862305
    4. ' ,' → logprob: -5.9728498458862305
    5. '    ' → logprob: -6.2228498458862305
    6. '```' → logprob: -7.5978498458862305
    7. 'and' → logprob: -7.8478498458862305
    8. ' of' → logprob: -9.72284984588623
    9. '``' → logprob: -11.22284984588623
    10. '       ' → logprob: -11.34784984588623

Token 40: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.023301847279071808
    2. ' a' → logprob: -4.52330207824707
    3. 'the' → logprob: -4.77330207824707
    4. ' cities' → logprob: -6.02330207824707
    5. ' city' → logprob: -7.89830207824707
    6. 'a' → logprob: -8.02330207824707
    7. ' roads' → logprob: -9.27330207824707
    8. ' flight' → logprob: -9.77330207824707
    9. ' airports' → logprob: -9.89830207824707
    10. ' bus' → logprob: -10.02330207824707

Token 41: ' grid' (ID: 10586)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.42586269974708557
    2. 'graph' → logprob: -2.0508627891540527
    3. ' city' → logprob: -3.1758627891540527
    4. ' network' → logprob: -3.4258627891540527
    5. ' problem' → logprob: -3.6758627891540527
    6. ' maze' → logprob: -4.050862789154053
    7. 'city' → logprob: -4.175862789154053
    8. 'problem' → logprob: -4.300862789154053
    9. 'network' → logprob: -5.175862789154053
    10. ' input' → logprob: -5.238362789154053

Token 42: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04007149860262871
    2. '   ' → logprob: -3.790071487426758
    3. ' and' → logprob: -4.290071487426758
    4. ' ,' → logprob: -6.415071487426758
    5. 'and' → logprob: -6.915071487426758
    6. '```' → logprob: -8.915071487426758
    7. '    ' → logprob: -9.165071487426758
    8. ' of' → logprob: -10.915071487426758
    9. ' with' → logprob: -11.415071487426758
    10. '.' → logprob: -11.415071487426758

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1794922947883606
    2. '    ' → logprob: -1.9294922351837158
    3. ' and' → logprob: -4.054492473602295
    4. ' ' → logprob: -8.054491996765137
    5. ' to' → logprob: -8.304491996765137
    6. 'and' → logprob: -8.679491996765137
    7. ',' → logprob: -8.929491996765137
    8. ' continue' → logprob: -8.929491996765137
    9. '  ' → logprob: -9.054491996765137
    10. '     ' → logprob: -9.554491996765137

Token 44: ' compute' (ID: 23864)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05246686562895775
    2. 'and' → logprob: -3.177466869354248
    3. '   ' → logprob: -5.177466869354248
    4. ' compute' → logprob: -6.052466869354248
    5. '    ' → logprob: -7.177466869354248
    6. 'compute' (adapté à ' compute') → logprob: -8.42746639251709
    7. ' calculate' → logprob: -8.67746639251709
    8. ' process' → logprob: -9.17746639251709
    9. ' find' → logprob: -10.55246639251709
    10. ' a' → logprob: -10.80246639251709

Token 45: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.10481283068656921
    2. ' shortest' → logprob: -2.3548128604888916
    3. 'the' → logprob: -5.6048126220703125
    4. ' distances' → logprob: -7.6048126220703125
    5. ' all' → logprob: -8.729812622070312
    6. 'short' → logprob: -9.229812622070312
    7. ' minimal' → logprob: -10.229812622070312
    8. ' short' → logprob: -10.604812622070312
    9. ' paths' → logprob: -10.729812622070312
    10. '   ' → logprob: -10.729812622070312

Token 46: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.04147804528474808
    2. 'short' → logprob: -4.041478157043457
    3. ' minimum' → logprob: -4.541478157043457
    4. 'minimum' → logprob: -5.041478157043457
    5. ' minimal' → logprob: -5.291478157043457
    6. 'minimal' → logprob: -7.916478157043457
    7. ' short' → logprob: -9.166478157043457
    8. 'least' → logprob: -9.791478157043457
    9. ' distances' → logprob: -10.291478157043457
    10. ' longest' → logprob: -10.541478157043457

Token 47: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.03375496715307236
    2. ' paths' → logprob: -3.65875506401062
    3. '_path' → logprob: -5.408754825592041
    4. 'path' → logprob: -6.158754825592041
    5. '_paths' → logprob: -7.658754825592041
    6. ' distances' → logprob: -8.9087553024292
    7. 'paths' → logprob: -9.4087553024292
    8. ' distance' → logprob: -9.4087553024292
    9. '_' → logprob: -10.9087553024292
    10. 'distance' → logprob: -11.9087553024292

Token 48: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4594646394252777
    2. ' from' → logprob: -1.2094646692276
    3. ',' → logprob: -3.0844645500183105
    4. 'from' → logprob: -4.5844645500183105
    5. ' and' → logprob: -5.2094645500183105
    6. ' to' → logprob: -6.0844645500183105
    7. ' between' → logprob: -6.3344645500183105
    8. ' ,' → logprob: -6.9594645500183105
    9. ' using' → logprob: -7.3344645500183105
    10. ' distances' → logprob: -7.5844645500183105

Token 49: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2948082685470581
    2. ' start' → logprob: -2.1698083877563477
    3. ' (' → logprob: -2.5448083877563477
    4. 'the' → logprob: -4.044808387756348
    5. 'start' → logprob: -4.419808387756348
    6. ' a' → logprob: -4.419808387756348
    7. '(' → logprob: -4.669808387756348
    8. ' source' → logprob: -5.919808387756348
    9. '(start' → logprob: -6.044808387756348
    10. ' ' → logprob: -6.294808387756348

Token 50: ' top' (ID: 2344)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.5472399592399597
    2. 'start' → logprob: -1.1722400188446045
    3. ' top' → logprob: -3.0472400188446045
    4. ' source' → logprob: -3.9222400188446045
    5. ' starting' → logprob: -4.172239780426025
    6. 'top' → logprob: -4.797239780426025
    7. 'source' → logprob: -4.922239780426025
    8. 'starting' → logprob: -5.422239780426025
    9. ' bottom' → logprob: -6.297239780426025
    10. ' entrance' → logprob: -6.672239780426025

Token 51: '-left' (ID: 17007)
  Prédit: '-left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-left' → logprob: -0.21689662337303162
    2. ' left' → logprob: -2.3418965339660645
    3. ' to' → logprob: -2.4668965339660645
    4. '-' → logprob: -4.4668965339660645
    5. ' -' → logprob: -6.7168965339660645
    6. 'left' → logprob: -6.9668965339660645
    7. '_left' → logprob: -8.841897010803223
    8. '   ' → logprob: -9.341897010803223
    9. ' corner' → logprob: -10.716897010803223
    10. ' of' → logprob: -10.841897010803223

Token 52: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7008633017539978
    2. ' corner' → logprob: -0.9508633017539978
    3. ' cell' → logprob: -2.4508633613586426
    4. 'corner' → logprob: -3.7008633613586426
    5. 'cell' → logprob: -5.950863361358643
    6. ' ' → logprob: -6.325863361358643
    7. 'to' → logprob: -6.450863361358643
    8. ' node' → logprob: -8.450862884521484
    9. '   ' → logprob: -9.200862884521484
    10. ')' → logprob: -10.388362884521484

Token 53: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.09538698941469193
    2. ' bottom' → logprob: -2.8453869819641113
    3. 'the' → logprob: -3.4703869819641113
    4. 'bottom' → logprob: -6.345386981964111
    5. ' ' → logprob: -13.22038745880127
    6. ' down' → logprob: -14.34538745880127
    7. '<|end|>' → logprob: -14.47038745880127
    8. '   ' → logprob: -14.53288745880127
    9. 'down' → logprob: -14.72038745880127
    10. '_bottom' → logprob: -14.78288745880127

Token 54: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.07889485359191895
    2. 'bottom' → logprob: -2.578894853591919
    3. 'top' → logprob: -13.70389461517334
    4. '<|end|>' → logprob: -13.82889461517334
    5. ' top' → logprob: -14.70389461517334
    6. '```' → logprob: -15.20389461517334
    7. ' ' → logprob: -15.20389461517334
    8. ' given' → logprob: -15.32889461517334
    9. '_bottom' → logprob: -15.32889461517334
    10. '<|end|>' → logprob: -15.45389461517334

Token 55: '-right' (ID: 14810)
  Prédit: '-right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-right' → logprob: -0.0006756199873052537
    2. 'right' → logprob: -8.250675201416016
    3. '-' → logprob: -8.375675201416016
    4. '-left' → logprob: -9.125675201416016
    5. '   ' → logprob: -10.375675201416016
    6. ' -' → logprob: -10.625675201416016
    7. ' right' → logprob: -11.000675201416016
    8. '_right' → logprob: -14.250675201416016
    9. '	right' → logprob: -14.375675201416016
    10. ' ' → logprob: -14.750675201416016

Token 56: ' cell' (ID: 4206)
  Prédit: ' corner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' corner' → logprob: -0.04439543932676315
    2. 'corner' → logprob: -3.6693954467773438
    3. ' cell' → logprob: -4.294395446777344
    4. ' node' → logprob: -6.794395446777344
    5. '   ' → logprob: -7.044395446777344
    6. ')' → logprob: -7.169395446777344
    7. ' )' → logprob: -7.669395446777344
    8. '_corner' → logprob: -8.419395446777344
    9. ',' → logprob: -8.544395446777344
    10. ' ' → logprob: -8.919395446777344

Token 57: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20500756800174713
    2. '   ' → logprob: -1.705007553100586
    3. '.' → logprob: -6.705007553100586
    4. ' ,' → logprob: -6.705007553100586
    5. ' to' → logprob: -7.830007553100586
    6. ')' → logprob: -8.830007553100586
    7. '    ' → logprob: -8.955007553100586
    8. '```' → logprob: -9.080007553100586
    9. ' and' → logprob: -9.330007553100586
    10. ',
' → logprob: -9.580007553100586

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10549768060445786
    2. '    ' → logprob: -2.4804975986480713
    3. ' and' → logprob: -4.23049783706665
    4. ' to' → logprob: -7.60549783706665
    5. ' ' → logprob: -8.355497360229492
    6. ',' → logprob: -8.480497360229492
    7. ''' → logprob: -8.730497360229492
    8. 'and' → logprob: -8.980497360229492
    9. '```' → logprob: -8.980497360229492
    10. '"' → logprob: -9.105497360229492

Token 59: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39306777715682983
    2. ' and' → logprob: -1.2680678367614746
    3. 'and' (adapté à ' and') → logprob: -3.2680678367614746
    4. '    ' → logprob: -5.393067836761475
    5. ' using' → logprob: -8.143067359924316
    6. ' then' → logprob: -8.643067359924316
    7. '  ' → logprob: -9.143067359924316
    8. ' return' → logprob: -9.643067359924316
    9. ' ' → logprob: -9.893067359924316
    10. ' to' → logprob: -10.018067359924316

Token 60: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.03765593469142914
    2. ' return' → logprob: -3.662655830383301
    3. '   ' → logprob: -5.162655830383301
    4. 'print' → logprob: -5.662655830383301
    5. ' output' → logprob: -6.412655830383301
    6. ' compute' → logprob: -8.6626558303833
    7. 'return' → logprob: -8.7876558303833
    8. '    ' → logprob: -9.2876558303833
    9. 'output' → logprob: -11.5376558303833
    10. ' provide' → logprob: -12.5376558303833

Token 61: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.22697198390960693
    2. '(' → logprob: -2.3519721031188965
    3. 'the' → logprob: -2.3519721031188965
    4. '("' → logprob: -4.4769721031188965
    5. '('' → logprob: -7.2269721031188965
    6. ' ' → logprob: -8.851971626281738
    7. '()' → logprob: -8.976971626281738
    8. '   ' → logprob: -9.601971626281738
    9. '"' → logprob: -9.726971626281738
    10. ' out' → logprob: -10.101971626281738

Token 62: ' minimum' (ID: 11085)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.6674557328224182
    2. ' minimum' → logprob: -1.6674556732177734
    3. ' result' → logprob: -1.9174556732177734
    4. ' shortest' → logprob: -2.6674556732177734
    5. 'minimum' → logprob: -3.9174556732177734
    6. ' cost' → logprob: -3.9174556732177734
    7. ' total' → logprob: -4.292455673217773
    8. ' distance' → logprob: -5.167455673217773
    9. 'minimal' → logprob: -5.167455673217773
    10. 'result' → logprob: -5.417455673217773

Token 63: ' number' (ID: 2086)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.037298936396837234
    2. ' distance' → logprob: -3.9122989177703857
    3. 'cost' → logprob: -4.787299156188965
    4. ' path' → logprob: -5.537299156188965
    5. '_cost' → logprob: -7.287299156188965
    6. ' energy' → logprob: -7.412299156188965
    7. ' space' → logprob: -7.662299156188965
    8. 'distance' → logprob: -7.662299156188965
    9. ' risk' → logprob: -8.037299156188965
    10. ' time' → logprob: -8.162299156188965

Token 64: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.4739774167537689
    2. ' of' → logprob: -1.0989774465560913
    3. '_of' → logprob: -3.4739773273468018
    4. '	of' → logprob: -6.098977565765381
    5. '<|end|>' → logprob: -6.223977565765381
    6. '```' → logprob: -6.973977565765381
    7. ')' → logprob: -6.973977565765381
    8. 'ic' → logprob: -7.098977565765381
    9. ' ' → logprob: -7.223977565765381
    10. '_remaining' → logprob: -7.598977565765381

Token 65: ' color' (ID: 3089)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.4421289265155792
    2. 'steps' → logprob: -1.4421288967132568
    3. ' moves' → logprob: -2.567128896713257
    4. 'moves' → logprob: -3.817128896713257
    5. ' spaces' → logprob: -5.317129135131836
    6. ' turns' → logprob: -5.567129135131836
    7. ' cells' → logprob: -5.817129135131836
    8. 'spaces' → logprob: -6.442129135131836
    9. ' ' → logprob: -6.879629135131836
    10. ' walls' → logprob: -7.254629135131836

Token 66: ' changes' (ID: 6629)
  Prédit: ' changes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changes' → logprob: -0.3126346468925476
    2. 's' → logprob: -1.4376347064971924
    3. ' s' → logprob: -4.562634468078613
    4. ' ' → logprob: -4.812634468078613
    5. ' change' → logprob: -5.937634468078613
    6. '_changes' → logprob: -6.062634468078613
    7. 'changes' → logprob: -6.312634468078613
    8. '_' → logprob: -6.687634468078613
    9. ' transitions' → logprob: -6.937634468078613
    10. 'd' → logprob: -7.062634468078613

Token 67: ' required' (ID: 3759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06436605751514435
    2. '.' → logprob: -3.439366102218628
    3. '```' → logprob: -5.189365863800049
    4. '\n' → logprob: -5.314365863800049
    5. ':' → logprob: -5.689365863800049
    6. '\' → logprob: -5.814365863800049
    7. ' ' → logprob: -5.814365863800049
    8. '(' → logprob: -6.564365863800049
    9. ',' → logprob: -6.689365863800049
    10. '    
' → logprob: -6.939365863800049

Token 68: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7523069977760315
    2. ')' → logprob: -1.3773069381713867
    3. '.' → logprob: -1.3773069381713867
    4. ' to' → logprob: -5.502306938171387
    5. ').' → logprob: -5.627306938171387
    6. '```' → logprob: -5.627306938171387
    7. ':' → logprob: -6.002306938171387
    8. ' for' → logprob: -6.127306938171387
    9. '):' → logprob: -6.127306938171387
    10. ',' → logprob: -6.502306938171387

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039775390177965164
    2. '"""' → logprob: -3.2897753715515137
    3. '"""
' → logprob: -7.414775371551514
    4. '```' → logprob: -7.539775371551514
    5. '""' → logprob: -8.914775848388672
    6. '"' → logprob: -9.164775848388672
    7. ' """' → logprob: -9.289775848388672
    8. '`' → logprob: -9.914775848388672
    9. '    ' → logprob: -9.914775848388672
    10. '    
' → logprob: -10.164775848388672

Token 70: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41625577211380005
    2. '"""' → logprob: -1.1662557125091553
    3. '```' → logprob: -3.7912557125091553
    4. '"""
' (adapté à ' """
') → logprob: -6.041255950927734
    5. '
' → logprob: -6.541255950927734
    6. '""' → logprob: -7.291255950927734
    7. '    
' → logprob: -8.041255950927734
    8. '"' → logprob: -8.041255950927734
    9. ' """' → logprob: -8.166255950927734
    10. '`' → logprob: -8.791255950927734

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016941361129283905
    2. 'n' → logprob: -4.641941547393799
    3. '    
' → logprob: -5.766941547393799
    4. 'import' → logprob: -6.516941547393799
    5. 'input' → logprob: -7.641941547393799
    6. '
' → logprob: -7.641941547393799
    7. '```' → logprob: -7.891941547393799
    8. 'newline' → logprob: -8.39194107055664
    9. '#' → logprob: -8.64194107055664
    10. '    ' → logprob: -8.89194107055664

Token 72: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5549399256706238
    2. ' n' → logprob: -1.0549399852752686
    3. '   ' → logprob: -2.6799399852752686
    4. ' grid' → logprob: -6.1799397468566895
    5. ' import' → logprob: -6.3049397468566895
    6. 'import' → logprob: -6.6799397468566895
    7. '#' (adapté à ' #') → logprob: -7.0549397468566895
    8. ' N' → logprob: -7.1799397468566895
    9. ' #' → logprob: -7.3049397468566895
    10. 'N' → logprob: -7.6799397468566895

Token 73: ' Read' (ID: 5405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5144672393798828
    2. ' n' → logprob: -1.7644672393798828
    3. '   ' → logprob: -2.139467239379883
    4. ' rows' → logprob: -3.639467239379883
    5. 'rows' → logprob: -4.014467239379883
    6. 'N' → logprob: -4.514467239379883
    7. ' N' → logprob: -4.639467239379883
    8. 'r' → logprob: -4.889467239379883
    9. ' H' → logprob: -5.264467239379883
    10. 'm' → logprob: -5.514467239379883

Token 74: ' grid' (ID: 10586)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7929766178131104
    2. '(' → logprob: -1.9179766178131104
    3. '   ' → logprob: -1.9179766178131104
    4. ' n' → logprob: -2.5429766178131104
    5. ' line' → logprob: -3.1679766178131104
    6. 'input' → logprob: -3.5429766178131104
    7. ' lines' → logprob: -3.6679766178131104
    8. ' ' → logprob: -4.292976379394531
    9. 'n' → logprob: -4.417976379394531
    10. ' the' → logprob: -4.667976379394531

Token 75: ' dimensions' (ID: 23995)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3154826760292053
    2. '()' → logprob: -1.5654826164245605
    3. 'n' → logprob: -3.0654826164245605
    4. '```' → logprob: -5.0654826164245605
    5. '(n' → logprob: -6.1904826164245605
    6. '(' → logprob: -6.3154826164245605
    7. '[' → logprob: -6.8154826164245605
    8. 'rows' → logprob: -7.6904826164245605
    9. '[]' → logprob: -7.9404826164245605
    10. 'data' → logprob: -8.065483093261719

Token 76: ' from' (ID: 591)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.41429412364959717
    2. '   ' → logprob: -1.1642941236495972
    3. '(n' → logprob: -4.164294242858887
    4. ' n' → logprob: -5.664294242858887
    5. '```' → logprob: -5.914294242858887
    6. '    
' → logprob: -6.789294242858887
    7. '\n' → logprob: -7.164294242858887
    8. '
' → logprob: -7.164294242858887
    9. '[n' → logprob: -7.664294242858887
    10. 'newline' → logprob: -8.539294242858887

Token 77: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.004637910984456539
    2. 'input' → logprob: -5.379637718200684
    3. ' the' → logprob: -11.254637718200684
    4. '=input' → logprob: -12.879637718200684
    5. ' stdin' → logprob: -14.379637718200684
    6. 'the' → logprob: -15.004637718200684
    7. 'stdin' → logprob: -15.254637718200684
    8. '_input' → logprob: -16.004638671875
    9. ' user' → logprob: -16.129638671875
    10. ' a' → logprob: -16.254638671875

Token 78: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9356974959373474
    2. '   ' → logprob: -0.9356974959373474
    3. '(n' → logprob: -1.8106975555419922
    4. '\n' → logprob: -4.060697555541992
    5. '
' → logprob: -4.310697555541992
    6. '    
' → logprob: -5.060697555541992
    7. '(' → logprob: -5.810697555541992
    8. '\' → logprob: -6.060697555541992
    9. '```' → logprob: -6.185697555541992
    10. '()' → logprob: -6.810697555541992

Token 79: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4803392291069031
    2. '   ' → logprob: -0.9803392291069031
    3. ' n' → logprob: -5.730339050292969
    4. ' rows' → logprob: -7.105339050292969
    5. 'rows' → logprob: -7.230339050292969
    6. '(n' → logprob: -7.480339050292969
    7. '
' → logprob: -8.605339050292969
    8. '    
' → logprob: -8.980339050292969
    9. ' lines' → logprob: -9.230339050292969
    10. 'r' → logprob: -9.605339050292969

Token 80: ' H' (ID: 487)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.36069631576538086
    2. ' h' → logprob: -1.8606963157653809
    3. 'n' → logprob: -2.485696315765381
    4. '   ' → logprob: -3.610696315765381
    5. ' H' → logprob: -3.735696315765381
    6. ' rows' → logprob: -4.860696315765381
    7. 'h' → logprob: -6.485696315765381
    8. ' r' → logprob: -7.110696315765381
    9. ' height' → logprob: -7.235696315765381
    10. 'H' (adapté à ' H') → logprob: -7.360696315765381

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013790446100756526
    2. ' ,' → logprob: -6.626379013061523
    3. '=' → logprob: -10.751379013061523
    4. ' =' → logprob: -10.876379013061523
    5. ',H' → logprob: -13.001379013061523
    6. ',int' → logprob: -13.126379013061523
    7. ',n' → logprob: -13.251379013061523
    8. ',h' → logprob: -14.001379013061523
    9. ',input' → logprob: -14.376379013061523
    10. ',num' → logprob: -14.501379013061523

Token 82: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.201456218957901
    2. 'W' → logprob: -1.7014561891555786
    3. ' ' → logprob: -10.451456069946289
    4. 'I' → logprob: -11.826456069946289
    5. 'w' → logprob: -12.701456069946289
    6. ' I' → logprob: -13.326456069946289
    7. ' w' → logprob: -13.701456069946289
    8. '  ' → logprob: -15.201456069946289
    9. ' ' → logprob: -15.701456069946289
    10. '   ' → logprob: -16.20145606994629

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894839882850647
    2. '=' → logprob: -2.4639484882354736
    3. '=input' → logprob: -12.463948249816895
    4. ',' → logprob: -12.838948249816895
    5. ')' → logprob: -14.463948249816895
    6. '=int' → logprob: -14.588948249816895
    7. ' ' → logprob: -14.963948249816895
    8. '=line' → logprob: -15.963948249816895
    9. ' =
' → logprob: -16.08894920349121
    10. '<|end|>' → logprob: -16.33894920349121

Token 84: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.002022258937358856
    2. 'map' → logprob: -6.2520222663879395
    3. ' list' → logprob: -9.877021789550781
    4. ' ' → logprob: -10.377021789550781
    5. ' ' → logprob: -12.627021789550781
    6. ' [' → logprob: -12.752021789550781
    7. ' input' → logprob: -13.127021789550781
    8. '	map' → logprob: -13.502021789550781
    9. ' tuple' → logprob: -14.502021789550781
    10. '[' → logprob: -15.002021789550781

Token 85: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6396013498306274
    2. '(input' → logprob: -1.1396013498306274
    3. '(' → logprob: -1.8896013498306274
    4. '(str' → logprob: -6.639601230621338
    5. '(list' → logprob: -10.014601707458496
    6. 'input' → logprob: -10.639601707458496
    7. '(map' → logprob: -11.264601707458496
    8. ' (' → logprob: -11.764601707458496
    9. '(eval' → logprob: -12.139601707458496
    10. 'int' → logprob: -12.389601707458496

Token 86: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010468644089996815
    2. '(' → logprob: -5.260468482971191
    3. 'input' → logprob: -5.760468482971191
    4. ')' → logprob: -6.635468482971191
    5. ',input' → logprob: -7.385468482971191
    6. ',' → logprob: -9.260468482971191
    7. ' input' → logprob: -10.510468482971191
    8. ')(' → logprob: -12.010468482971191
    9. '=input' → logprob: -12.760468482971191
    10. ' (' → logprob: -12.885468482971191

Token 87: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12693755328655243
    2. 'input' → logprob: -2.1269376277923584
    3. ')' → logprob: -12.001937866210938
    4. '(input' → logprob: -12.751937866210938
    5. ' )' → logprob: -15.251937866210938
    6. ' ' → logprob: -16.501937866210938
    7. ',input' → logprob: -16.626937866210938
    8. '	input' → logprob: -16.751937866210938
    9. '=input' → logprob: -16.876937866210938
    10. '_input' → logprob: -18.376937866210938

Token 88: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011352078057825565
    2. '()' → logprob: -4.511352062225342
    3. '())' → logprob: -8.1363525390625
    4. '(' → logprob: -12.1363525390625
    5. ')' → logprob: -13.6363525390625
    6. ' ().' → logprob: -14.0113525390625
    7. '()
' → logprob: -14.5113525390625
    8. '()[' → logprob: -14.8863525390625
    9. '()))' → logprob: -14.8863525390625
    10. '());' → logprob: -15.0113525390625

Token 89: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020711649267468601
    2. 'strip' → logprob: -8.50020694732666
    3. ' split' → logprob: -13.62520694732666
    4. 'rstrip' → logprob: -13.75020694732666
    5. '(split' → logprob: -14.37520694732666
    6. 'spl' → logprob: -14.50020694732666
    7. '().' → logprob: -15.37520694732666
    8. '()' → logprob: -17.250207901000977
    9. 's' → logprob: -17.875207901000977
    10. '_split' → logprob: -18.250207901000977

Token 90: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11081920564174652
    2. '())' → logprob: -2.360819101333618
    3. '()' → logprob: -4.985819339752197
    4. '))' → logprob: -6.110819339752197
    5. '(' → logprob: -6.985819339752197
    6. '('' → logprob: -7.735819339752197
    7. '()))' → logprob: -10.485818862915039
    8. ')
' → logprob: -11.360818862915039
    9. '())
' → logprob: -11.360818862915039
    10. ')`' → logprob: -11.360818862915039

Token 91: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2217361181974411
    2. '\n' → logprob: -2.221736192703247
    3. '
' → logprob: -3.971736192703247
    4. '```' → logprob: -3.971736192703247
    5. '    
' → logprob: -4.096735954284668
    6. '\' → logprob: -4.096735954284668
    7. '  
' → logprob: -5.471735954284668
    8. '   
' → logprob: -6.221735954284668
    9. ' ' → logprob: -6.221735954284668
    10. ')' → logprob: -6.596735954284668

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47224360704421997
    2. 'grid' → logprob: -1.3472435474395752
    3. ' grid' → logprob: -2.347243547439575
    4. 'colors' → logprob: -4.472243785858154
    5. '#' → logprob: -5.597243785858154
    6. ' colors' → logprob: -6.222243785858154
    7. 'graph' → logprob: -6.222243785858154
    8. '    
' → logprob: -7.597243785858154
    9. ' graph' → logprob: -8.597243309020996
    10. '```' → logprob: -8.722243309020996

Token 93: ' #' (ID: 1069)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.009486420080065727
    2. 'colors' → logprob: -4.759486198425293
    3. '#' (adapté à ' #') → logprob: -8.759486198425293
    4. ' grid' → logprob: -8.759486198425293
    5. 'graph' → logprob: -9.009486198425293
    6. 'board' → logprob: -9.134486198425293
    7. 'color' → logprob: -9.134486198425293
    8. 'S' → logprob: -9.884486198425293
    9. 'C' → logprob: -10.509486198425293
    10. 'rows' → logprob: -10.759486198425293

Token 94: ' Read' (ID: 5405)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.21356135606765747
    2. 'colors' → logprob: -2.3385612964630127
    3. ' grid' → logprob: -2.5885612964630127
    4. ' colors' → logprob: -4.838561534881592
    5. '#' → logprob: -5.338561534881592
    6. 'color' → logprob: -5.463561534881592
    7. 'lines' → logprob: -7.963561534881592
    8. ' color' → logprob: -7.963561534881592
    9. 'graph' → logprob: -8.088561058044434
    10. 'rows' → logprob: -8.088561058044434

Token 95: ' the' (ID: 290)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.6007114052772522
    2. '()' → logprob: -2.2257113456726074
    3. 'colors' → logprob: -2.4757113456726074
    4. '(' → logprob: -2.6007113456726074
    5. ' the' → logprob: -2.6007113456726074
    6. 'grid' → logprob: -2.7257113456726074
    7. ' colors' → logprob: -3.9757113456726074
    8. '(grid' → logprob: -4.975711345672607
    9. 'color' → logprob: -5.600711345672607
    10. '   ' → logprob: -5.850711345672607

Token 96: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.16353559494018555
    2. 'grid' → logprob: -1.9135355949401855
    3. 'colors' → logprob: -6.2885355949401855
    4. ' colors' → logprob: -7.1635355949401855
    5. 'color' → logprob: -7.9135355949401855
    6. ' color' → logprob: -8.538536071777344
    7. '_grid' → logprob: -9.788536071777344
    8. '_colors' → logprob: -11.538536071777344
    9. '   ' → logprob: -12.288536071777344
    10. '(grid' → logprob: -12.538536071777344

Token 97: ' itself' (ID: 8807)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053639207035303116
    2. 'grid' → logprob: -3.0536391735076904
    3. ' grid' → logprob: -5.4286394119262695
    4. 'colors' → logprob: -8.67863941192627
    5. '(grid' → logprob: -9.05363941192627
    6. '_grid' → logprob: -9.30363941192627
    7. '
' → logprob: -9.80363941192627
    8. '    
' → logprob: -10.67863941192627
    9. '.grid' → logprob: -10.92863941192627
    10. 'Grid' → logprob: -10.92863941192627

Token 98: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03305664286017418
    2. 'grid' → logprob: -3.5330567359924316
    3. ' grid' → logprob: -6.158056735992432
    4. '
' → logprob: -7.658056735992432
    5. '    
' → logprob: -9.283056259155273
    6. '(grid' → logprob: -9.283056259155273
    7. '_grid' → logprob: -9.658056259155273
    8. ' lines' → logprob: -10.158056259155273
    9. '    ' → logprob: -10.158056259155273
    10. 'rows' → logprob: -10.408056259155273

Token 99: ' each' (ID: 2454)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.044159941375255585
    2. 'grid' → logprob: -3.2941598892211914
    3. ' colors' → logprob: -5.669159889221191
    4. 'colors' → logprob: -6.794159889221191
    5. '   ' → logprob: -8.044159889221191
    6. ' color' → logprob: -8.294159889221191
    7. ' lines' → logprob: -8.419159889221191
    8. '[' → logprob: -9.419159889221191
    9. ' np' → logprob: -9.419159889221191
    10. ' graph' → logprob: -9.794159889221191

Token 100: ' element' (ID: 3577)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.3450409173965454
    2. 'row' → logprob: -1.4700409173965454
    3. ' row' → logprob: -1.7200409173965454
    4. 'line' → logprob: -2.345040798187256
    5. ' grid' → logprob: -3.095040798187256
    6. 'color' → logprob: -3.345040798187256
    7. ' color' → logprob: -3.720040798187256
    8. ' cell' → logprob: -3.845040798187256
    9. '[' → logprob: -4.345040798187256
    10. '()' → logprob: -4.595040798187256

Token 101: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10230885446071625
    2. '=' → logprob: -2.477308750152588
    3. ' is' → logprob: -4.477308750152588
    4. '   ' → logprob: -7.102308750152588
    5. '[' → logprob: -8.727309226989746
    6. ' in' → logprob: -9.102309226989746
    7. ')' → logprob: -9.102309226989746
    8. '.' → logprob: -9.352309226989746
    9. '    ' → logprob: -9.477309226989746
    10. '_' → logprob: -9.477309226989746

Token 102: ' a' (ID: 261)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.32177305221557617
    2. 'input' → logprob: -1.3217730522155762
    3. ' list' → logprob: -5.196773052215576
    4. 'list' → logprob: -6.571773052215576
    5. ' a' → logprob: -6.821773052215576
    6. 'a' → logprob: -9.196773529052734
    7. ' ' → logprob: -9.196773529052734
    8. '=input' → logprob: -10.196773529052734
    9. '(input' → logprob: -10.321773529052734
    10. 'str' → logprob: -10.321773529052734

Token 103: ' string' (ID: 1621)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.41837039589881897
    2. 'list' → logprob: -2.293370485305786
    3. 'string' → logprob: -2.793370485305786
    4. ' string' → logprob: -3.043370485305786
    5. ' color' → logprob: -3.043370485305786
    6. 'str' → logprob: -3.293370485305786
    7. 'color' → logprob: -3.918370485305786
    8. ' str' → logprob: -5.043370246887207
    9. ' line' → logprob: -5.168370246887207
    10. ' space' → logprob: -5.668370246887207

Token 104: ' representing' (ID: 25389)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09698062390089035
    2. '()
' → logprob: -3.346980571746826
    3. ' =' → logprob: -3.721980571746826
    4. '   ' → logprob: -3.846980571746826
    5. '(' → logprob: -5.721980571746826
    6. 's' → logprob: -6.221980571746826
    7. '=' → logprob: -6.721980571746826
    8. '(
' → logprob: -7.221980571746826
    9. '[]' → logprob: -7.346980571746826
    10. '[' → logprob: -7.721980571746826

Token 105: ' a' (ID: 261)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1467234194278717
    2. ' input' → logprob: -2.146723508834839
    3. ' the' → logprob: -4.77172327041626
    4. '(input' → logprob: -5.02172327041626
    5. 'the' → logprob: -6.52172327041626
    6. '(' → logprob: -6.89672327041626
    7. 'color' → logprob: -7.52172327041626
    8. ' a' → logprob: -7.89672327041626
    9. ')' → logprob: -8.146723747253418
    10. '()' → logprob: -8.771723747253418

Token 106: ' row' (ID: 5225)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.5035095810890198
    2. ' color' → logprob: -1.253509521484375
    3. 'row' → logprob: -2.628509521484375
    4. ' row' → logprob: -4.128509521484375
    5. 'cell' → logprob: -4.503509521484375
    6. ' cell' → logprob: -5.378509521484375
    7. 'single' → logprob: -6.878509521484375
    8. 'line' → logprob: -7.128509521484375
    9. ' single' → logprob: -7.253509521484375
    10. ' line' → logprob: -7.378509521484375

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005609492771327496
    2. 'grid' → logprob: -5.380609512329102
    3. '[' → logprob: -8.755609512329102
    4. '
' → logprob: -9.005609512329102
    5. ' grid' → logprob: -9.130609512329102
    6. 'rows' → logprob: -9.255609512329102
    7. ',' → logprob: -9.380609512329102
    8. '(grid' → logprob: -9.505609512329102
    9. '    
' → logprob: -10.005609512329102
    10. '(' → logprob: -10.255609512329102

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017246855422854424
    2. 'grid' → logprob: -4.142246723175049
    3. ' grid' → logprob: -6.767246723175049
    4. '    ' → logprob: -11.017247200012207
    5. 'rows' → logprob: -11.517247200012207
    6. '    
' → logprob: -11.642247200012207
    7. 'for' → logprob: -12.892247200012207
    8. '  ' → logprob: -13.017247200012207
    9. '	grid' → logprob: -13.017247200012207
    10. ' for' → logprob: -13.267247200012207

Token 109: ' s' (ID: 265)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.3502977192401886
    2. ' grid' → logprob: -1.2252976894378662
    3. '   ' → logprob: -6.850297927856445
    4. 'graph' → logprob: -7.850297927856445
    5. 'colors' → logprob: -9.350297927856445
    6. 'G' → logprob: -10.100297927856445
    7. ' G' → logprob: -10.100297927856445
    8. 'board' → logprob: -10.225297927856445
    9. 'S' → logprob: -10.725297927856445
    10. ' graph' → logprob: -10.725297927856445

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4870853126049042
    2. 'rid' → logprob: -1.2370853424072266
    3. 's' → logprob: -2.8620853424072266
    4. '_grid' → logprob: -4.237085342407227
    5. 'r' → logprob: -4.862085342407227
    6. '=' → logprob: -4.987085342407227
    7. '_rows' → logprob: -5.737085342407227
    8. '_' → logprob: -6.487085342407227
    9. 'rows' → logprob: -6.737085342407227
    10. '_r' → logprob: -6.737085342407227

Token 111: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22004231810569763
    2. ' [' → logprob: -1.97004234790802
    3. '[input' → logprob: -2.9700422286987305
    4. '[s' → logprob: -5.9700422286987305
    5. '[np' → logprob: -6.0950422286987305
    6. '[int' → logprob: -7.4700422286987305
    7. '[str' → logprob: -7.5950422286987305
    8. '[list' → logprob: -7.8450422286987305
    9. '[array' → logprob: -9.34504222869873
    10. '[line' → logprob: -10.09504222869873

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018635522574186325
    2. ' for' → logprob: -4.5186357498168945
    3. 'for' → logprob: -4.8936357498168945
    4. '	for' → logprob: -10.393635749816895
    5. '       ' → logprob: -11.393635749816895
    6. ' ' → logprob: -12.018635749816895
    7. '    
' → logprob: -12.393635749816895
    8. '    ' → logprob: -12.768635749816895
    9. '[' → logprob: -12.893635749816895
    10. '_' → logprob: -13.268635749816895

Token 113: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1618887186050415
    2. ' for' → logprob: -1.9118887186050415
    3. '   ' → logprob: -6.411888599395752
    4. '	for' → logprob: -11.03688907623291
    5. '
' → logprob: -13.16188907623291
    6. ' ' → logprob: -14.03688907623291
    7. '    
' → logprob: -14.28688907623291
    8. ' 
' → logprob: -14.91188907623291
    9. '    ' → logprob: -15.03688907623291
    10. '_' → logprob: -15.28688907623291

Token 114: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014254705980420113
    2. ' _' → logprob: -4.264254570007324
    3. ' range' → logprob: -9.764254570007324
    4. ' i' → logprob: -11.139254570007324
    5. ' in' → logprob: -11.889254570007324
    6. 'range' → logprob: -12.264254570007324
    7. ' ' → logprob: -12.764254570007324
    8. 'i' → logprob: -13.264254570007324
    9. '_i' → logprob: -13.264254570007324
    10. ' ' → logprob: -14.389254570007324

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.40108156204223633
    2. 'in' → logprob: -1.2760815620422363
    3. 'range' → logprob: -3.2760815620422363
    4. ' range' → logprob: -4.401081562042236
    5. '(' → logprob: -7.526081562042236
    6. ' ' → logprob: -8.401081085205078
    7. '   ' → logprob: -8.776081085205078
    8. '  ' → logprob: -9.276081085205078
    9. '_' → logprob: -10.276081085205078
    10. ')' → logprob: -10.276081085205078

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003362966235727072
    2. ' range' → logprob: -8.000336647033691
    3. '(range' → logprob: -15.375336647033691
    4. '```' → logprob: -16.250335693359375
    5. '	range' → logprob: -16.500335693359375
    6. '[' → logprob: -16.875335693359375
    7. '   ' → logprob: -16.875335693359375
    8. ')' → logprob: -16.875335693359375
    9. 'input' → logprob: -16.875335693359375
    10. 's' → logprob: -17.500335693359375

Token 117: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0025904078502207994
    2. '(' → logprob: -6.002590179443359
    3. ' (' → logprob: -9.25259017944336
    4. ' H' → logprob: -11.37759017944336
    5. 'H' → logprob: -13.00259017944336
    6. '(W' → logprob: -13.50259017944336
    7. '(int' → logprob: -13.62759017944336
    8. '(
' → logprob: -13.75259017944336
    9. '(range' → logprob: -14.00259017944336
    10. '   ' → logprob: -15.75259017944336

Token 118: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22884587943553925
    2. '):' → logprob: -1.6038458347320557
    3. ')' → logprob: -5.853846073150635
    4. '   ' → logprob: -8.228845596313477
    5. '):
' → logprob: -8.478845596313477
    6. ' ):
' → logprob: -9.978845596313477
    7. ' ):' → logprob: -11.353845596313477
    8. ')
' → logprob: -11.478845596313477
    9. '):

' → logprob: -12.728845596313477
    10. ':
' → logprob: -12.853845596313477

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013169643469154835
    2. ' s' → logprob: -4.888169765472412
    3. '   ' → logprob: -5.638169765472412
    4. 's' → logprob: -6.638169765472412
    5. '    ' → logprob: -7.388169765472412
    6. '      ' → logprob: -11.388169288635254
    7. '     ' → logprob: -11.388169288635254
    8. ' ' → logprob: -11.513169288635254
    9. '        ' → logprob: -11.638169288635254
    10. '    ' → logprob: -12.638169288635254

Token 120: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3870134651660919
    2. 's' (adapté à ' s') → logprob: -1.1370134353637695
    3. '   ' → logprob: -9.26201343536377
    4. ' row' → logprob: -10.51201343536377
    5. ' input' → logprob: -11.76201343536377
    6. 'input' → logprob: -12.26201343536377
    7. 'row' → logprob: -12.26201343536377
    8. '    ' → logprob: -14.13701343536377
    9. '	s' → logprob: -14.38701343536377
    10. ' ' → logprob: -14.88701343536377

Token 121: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011777279432862997
    2. '.' → logprob: -6.751177787780762
    3. '.app' → logprob: -12.251177787780762
    4. '.ap' → logprob: -13.501177787780762
    5. ' .' → logprob: -13.876177787780762
    6. 'append' → logprob: -16.251176834106445
    7. '=' → logprob: -16.751176834106445
    8. '.=' → logprob: -16.751176834106445
    9. ' +=' → logprob: -17.501176834106445
    10. 'input' → logprob: -17.626176834106445

Token 122: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000695515947882086
    2. '(' → logprob: -7.500695705413818
    3. '(list' → logprob: -9.00069522857666
    4. 'input' → logprob: -11.00069522857666
    5. '(str' → logprob: -13.00069522857666
    6. '(
' → logprob: -16.500696182250977
    7. ' input' → logprob: -17.000696182250977
    8. 'list' → logprob: -17.125696182250977
    9. ' (' → logprob: -17.375696182250977
    10. '(tuple' → logprob: -17.875696182250977

Token 123: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10632248222827911
    2. '()' → logprob: -2.3563225269317627
    3. '().' → logprob: -5.106322288513184
    4. '()))' → logprob: -11.231322288513184
    5. '();)' → logprob: -11.231322288513184
    6. '());' → logprob: -12.606322288513184
    7. ')' → logprob: -12.856322288513184
    8. ' ())' → logprob: -13.231322288513184
    9. '()>' → logprob: -14.356322288513184
    10. '(' → logprob: -14.481322288513184

Token 124: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3195614516735077
    2. '    
' → logprob: -1.56956148147583
    3. '
' → logprob: -3.19456148147583
    4. '    ' → logprob: -5.06956148147583
    5. '   
' → logprob: -5.56956148147583
    6. '#' → logprob: -5.69456148147583
    7. '```' → logprob: -5.81956148147583
    8. '  
' → logprob: -6.19456148147583
    9. ' 
' → logprob: -6.19456148147583
    10. '  ' → logprob: -7.19456148147583

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17383207380771637
    2. '#' → logprob: -1.9238320589065552
    3. ' #' → logprob: -5.298831939697266
    4. 'graph' → logprob: -5.548831939697266
    5. '    
' → logprob: -6.048831939697266
    6. ' graph' → logprob: -7.923831939697266
    7. 'adj' → logprob: -7.923831939697266
    8. '```' → logprob: -8.048831939697266
    9. 'import' → logprob: -8.298831939697266
    10. '
' → logprob: -8.548831939697266

Token 126: ' def' (ID: 1056)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08011167496442795
    2. 'graph' → logprob: -3.4551117420196533
    3. 'n' → logprob: -3.9551117420196533
    4. 'size' → logprob: -4.830111503601074
    5. 'adj' → logprob: -5.080111503601074
    6. '   ' → logprob: -5.705111503601074
    7. 'N' → logprob: -6.080111503601074
    8. 'edges' → logprob: -6.330111503601074
    9. 'num' → logprob: -7.080111503601074
    10. 'data' → logprob: -7.580111503601074

Token 127: ' co' (ID: 1407)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.9330677390098572
    2. ' get' → logprob: -1.308067798614502
    3. ' index' → logprob: -2.683067798614502
    4. ' encode' → logprob: -2.808067798614502
    5. ' neighbors' → logprob: -3.308067798614502
    6. ' color' → logprob: -3.683067798614502
    7. ' node' → logprob: -3.808067798614502
    8. ' create' → logprob: -3.933067798614502
    9. ' valid' → logprob: -4.183067798614502
    10. ' cell' → logprob: -4.558067798614502

Token 128: '_num' (ID: 9834)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.1367785930633545
    2. 'ords' → logprob: -2.7617785930633545
    3. 'n' → logprob: -3.7617785930633545
    4. 'de' → logprob: -4.386778831481934
    5. 'unt' → logprob: -4.886778831481934
    6. 'ordinate' → logprob: -5.011778831481934
    7. 'lor' → logprob: -6.136778831481934
    8. 'mp' → logprob: -6.261778831481934
    9. 'nv' → logprob: -6.511778831481934
    10. 'ordinates' → logprob: -6.761778831481934

Token 129: '(h' (ID: 8120)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7610813975334167
    2. 'rd' → logprob: -1.2610814571380615
    3. 'de' → logprob: -2.1360814571380615
    4. '()' → logprob: -3.1360814571380615
    5. 'd' → logprob: -4.011081218719482
    6. 'ord' → logprob: -4.386081218719482
    7. '():' → logprob: -4.511081218719482
    8. 'ordinate' → logprob: -4.511081218719482
    9. 'def' → logprob: -4.636081218719482
    10. '(' → logprob: -5.011081218719482

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08469642698764801
    2. 'ex' → logprob: -2.7096965312957764
    3. ' ,' → logprob: -5.209696292877197
    4. 'x' → logprob: -5.459696292877197
    5. ')' → logprob: -7.084696292877197
    6. 'w' → logprob: -7.334696292877197
    7. '   ' → logprob: -7.334696292877197
    8. 'dx' → logprob: -7.459696292877197
    9. '):
' → logprob: -7.584696292877197
    10. ',h' → logprob: -7.584696292877197

Token 131: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0052360063418745995
    2. ' w' → logprob: -5.2552361488342285
    3. '   ' → logprob: -14.25523567199707
    4. ' ' → logprob: -14.75523567199707
    5. 'W' → logprob: -15.50523567199707
    6. ')' → logprob: -15.63023567199707
    7. '
' → logprob: -16.13023567199707
    8. 'j' → logprob: -16.63023567199707
    9. 'c' → logprob: -16.75523567199707
    10. '	w' → logprob: -16.88023567199707

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003037724643945694
    2. ')' → logprob: -6.128037929534912
    3. '):
' → logprob: -7.128037929534912
    4. ',' → logprob: -10.253037452697754
    5. ' ):' → logprob: -11.503037452697754
    6. '):
' → logprob: -14.128037452697754
    7. '   ' → logprob: -14.378037452697754
    8. ':' → logprob: -14.753037452697754
    9. '_' → logprob: -14.878037452697754
    10. ')：' → logprob: -14.878037452697754

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03268197178840637
    2. ':' → logprob: -4.157681941986084
    3. '   ' → logprob: -4.532681941986084
    4. ' return' → logprob: -5.782681941986084
    5. 'return' → logprob: -7.282681941986084
    6. '(' → logprob: -7.782681941986084
    7. ':
' → logprob: -7.907681941986084
    8. ' ' → logprob: -8.157682418823242
    9. '#' → logprob: -8.782682418823242
    10. '    ' → logprob: -9.282682418823242

Token 134: ' """
' (ID: 7037)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22792857885360718
    2. 'return' → logprob: -1.727928638458252
    3. ' h' → logprob: -3.977928638458252
    4. 'h' → logprob: -5.102928638458252
    5. ' H' → logprob: -7.727928638458252
    6. ' ' → logprob: -8.102928161621094
    7. '   ' → logprob: -8.102928161621094
    8. 'H' → logprob: -8.727928161621094
    9. '       ' → logprob: -9.977928161621094
    10. '    ' → logprob: -9.977928161621094

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06379391998052597
    2. 'return' → logprob: -3.813793897628784
    3. '   ' → logprob: -3.938793897628784
    4. ' return' → logprob: -3.938793897628784
    5. '#' → logprob: -7.938794136047363
    6. '           ' → logprob: -8.688794136047363
    7. ' #' → logprob: -9.563794136047363
    8. '    ' → logprob: -10.063794136047363
    9. '"""' → logprob: -10.188794136047363
    10. '      ' → logprob: -10.813794136047363

Token 136: ' Convert' (ID: 15629)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9909480214118958
    2. '       ' → logprob: -1.240947961807251
    3. 'return' → logprob: -1.615947961807251
    4. '   ' → logprob: -1.990947961807251
    5. '    ' → logprob: -6.49094820022583
    6. '#' → logprob: -7.49094820022583
    7. '"""' → logprob: -7.61594820022583
    8. '           ' → logprob: -7.99094820022583
    9. 'Return' → logprob: -8.365947723388672
    10. '        ' → logprob: -8.365947723388672

Token 137: ' grid' (ID: 10586)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.526300311088562
    2. ' h' → logprob: -0.901300311088562
    3. '(h' → logprob: -5.901300430297852
    4. ' (' → logprob: -8.776300430297852
    5. '_h' → logprob: -9.276300430297852
    6. 'w' → logprob: -10.026300430297852
    7. '[h' → logprob: -10.026300430297852
    8. '(' → logprob: -11.401300430297852
    9. 'row' → logprob: -11.401300430297852
    10. 'coordinates' → logprob: -11.776300430297852

Token 138: ' coordinates' (ID: 27933)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.8852435350418091
    2. ' coordinates' → logprob: -1.135243535041809
    3. '[h' → logprob: -2.1352434158325195
    4. ' position' → logprob: -2.3852434158325195
    5. ' cell' → logprob: -3.8852434158325195
    6. 'indices' → logprob: -5.5102434158325195
    7. 'coordinates' → logprob: -5.5102434158325195
    8. ' positions' → logprob: -5.6352434158325195
    9. ',' → logprob: -5.6352434158325195
    10. '   ' → logprob: -5.6352434158325195

Token 139: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6275554299354553
    2. ' to' → logprob: -1.0025553703308105
    3. ' into' → logprob: -3.1275553703308105
    4. 'to' → logprob: -3.6275553703308105
    5. '(h' → logprob: -3.6275553703308105
    6. ',' → logprob: -7.2525553703308105
    7. '   ' → logprob: -7.5025553703308105
    8. 'into' → logprob: -7.6275553703308105
    9. '(int' → logprob: -9.127555847167969
    10. ' ' → logprob: -9.252555847167969

Token 140: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0030587539076805115
    2. ' h' → logprob: -5.878058910369873
    3. ')' → logprob: -8.628058433532715
    4. ',' → logprob: -9.753058433532715
    5. ',h' → logprob: -11.753058433532715
    6. '_h' → logprob: -12.878058433532715
    7. '	h' → logprob: -13.378058433532715
    8. '   ' → logprob: -13.503058433532715
    9. '
' → logprob: -13.628058433532715
    10. '(h' → logprob: -14.503058433532715

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030269217677414417
    2. ',w' → logprob: -8.7503023147583
    3. ' ,' → logprob: -9.0003023147583
    4. '   ' → logprob: -11.5003023147583
    5. ' *' → logprob: -13.0003023147583
    6. ')' → logprob: -13.8753023147583
    7. ',
' → logprob: -14.0003023147583
    8. ' ' → logprob: -14.1253023147583
    9. '*' → logprob: -14.1253023147583
    10. '‌,' → logprob: -14.3753023147583

Token 142: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5759394764900208
    2. 'w' → logprob: -0.8259394764900208
    3. ' ' → logprob: -17.700939178466797
    4. ' ' → logprob: -19.200939178466797
    5. '   ' → logprob: -19.450939178466797
    6. ',w' → logprob: -19.575939178466797
    7. ',' → logprob: -19.700939178466797
    8. ')' → logprob: -20.075939178466797
    9. '	w' → logprob: -20.700939178466797
    10. '  ' → logprob: -21.325939178466797

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006422612932510674
    2. '):' → logprob: -8.125641822814941
    3. ' )' → logprob: -9.000641822814941
    4. ',' → logprob: -9.000641822814941
    5. '):
' → logprob: -9.750641822814941
    6. '   ' → logprob: -10.625641822814941
    7. ')
' → logprob: -11.750641822814941
    8. ' ' → logprob: -13.750641822814941
    9. '),' → logprob: -13.750641822814941
    10. ',)' → logprob: -13.875641822814941

Token 144: ' into' (ID: 1511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10656307637691498
    2. ' to' → logprob: -2.731563091278076
    3. ' into' → logprob: -3.731563091278076
    4. ' )' → logprob: -5.231563091278076
    5. 'to' → logprob: -5.356563091278076
    6. '   ' → logprob: -7.731563091278076
    7. 'into' → logprob: -7.856563091278076
    8. ',' → logprob: -8.106562614440918
    9. '):' → logprob: -8.106562614440918
    10. '    ' → logprob: -9.106562614440918

Token 145: ' a' (ID: 261)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01836075820028782
    2. ' h' → logprob: -4.018360614776611
    3. 'H' → logprob: -8.51836109161377
    4. ' H' → logprob: -11.51836109161377
    5. 'w' → logprob: -15.14336109161377
    6. '   ' → logprob: -15.76836109161377
    7. '_h' → logprob: -15.89336109161377
    8. 'int' → logprob: -16.268360137939453
    9. '0' → logprob: -16.393360137939453
    10. '(h' → logprob: -16.518360137939453

Token 146: ' unique' (ID: 5746)
  Prédit: ' single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.1519652158021927
    2. ' unique' → logprob: -2.6519651412963867
    3. 'single' → logprob: -3.1519651412963867
    4. ' node' → logprob: -4.151965141296387
    5. 'node' → logprob: -5.276965141296387
    6. 'unique' → logprob: -5.526965141296387
    7. ' h' → logprob: -7.526965141296387
    8. ' linear' → logprob: -7.651965141296387
    9. 'n' → logprob: -8.026965141296387
    10. ' cell' → logprob: -8.151965141296387

Token 147: ' vertex' (ID: 25363)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.3628104329109192
    2. 'node' → logprob: -1.6128103733062744
    3. ' number' → logprob: -3.2378103733062744
    4. 'number' → logprob: -3.6128103733062744
    5. 'index' → logprob: -4.4878106117248535
    6. ' single' → logprob: -4.7378106117248535
    7. ' index' → logprob: -4.8628106117248535
    8. ')' → logprob: -5.9878106117248535
    9. ' integer' → logprob: -6.3628106117248535
    10. 'single' → logprob: -6.3628106117248535

Token 148: ' number' (ID: 2086)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.15536050498485565
    2. ' index' → logprob: -3.030360460281372
    3. ' id' → logprob: -3.155360460281372
    4. '_' → logprob: -4.030360698699951
    5. 'id' → logprob: -4.780360698699951
    6. 'index' → logprob: -5.155360698699951
    7. '_index' → logprob: -5.280360698699951
    8. ')' → logprob: -5.655360698699951
    9. '   ' → logprob: -5.780360698699951
    10. ' ' → logprob: -6.030360698699951

Token 149: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4498607814311981
    2. '       ' → logprob: -1.0748608112335205
    3. ':' → logprob: -4.449860572814941
    4. '(' → logprob: -5.949860572814941
    5. ' (' → logprob: -6.699860572814941
    6. '           ' → logprob: -7.074860572814941
    7. ',' → logprob: -7.449860572814941
    8. ' for' → logprob: -7.574860572814941
    9. '(h' → logprob: -7.574860572814941
    10. '    ' → logprob: -7.824860572814941

Token 150: ' graph' (ID: 7465)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2696993947029114
    2. ' h' → logprob: -2.2696993350982666
    3. 'the' → logprob: -2.3946993350982666
    4. ' H' → logprob: -3.8946993350982666
    5. 'h' → logprob: -5.519699573516846
    6. ' indexing' → logprob: -5.769699573516846
    7. '   ' → logprob: -5.894699573516846
    8. ' a' → logprob: -6.019699573516846
    9. 'H' → logprob: -6.394699573516846
    10. 'w' → logprob: -7.019699573516846

Token 151: ' representation' (ID: 22311)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3600256145000458
    2. ')' → logprob: -1.6100256443023682
    3. ' coordinates' → logprob: -3.485025644302368
    4. '       ' → logprob: -4.610025405883789
    5. ':' → logprob: -4.860025405883789
    6. '_id' → logprob: -4.985025405883789
    7. ' representation' → logprob: -5.735025405883789
    8. ' mapping' → logprob: -5.735025405883789
    9. ',' → logprob: -5.860025405883789
    10. ' position' → logprob: -5.985025405883789

Token 152: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16442881524562836
    2. ':' → logprob: -3.0394287109375
    3. '):' → logprob: -3.0394287109375
    4. '       ' → logprob: -3.9144287109375
    5. ')' → logprob: -3.9144287109375
    6. '(h' → logprob: -5.0394287109375
    7. '):
' → logprob: -5.6644287109375
    8. ',' → logprob: -5.9144287109375
    9. '(n' → logprob: -6.2894287109375
    10. ':
' → logprob: -8.1644287109375

Token 153: '        
' (ID: 3564)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7204204797744751
    2. '   ' → logprob: -1.095420479774475
    3. '       ' → logprob: -2.7204203605651855
    4. ' 
' → logprob: -3.4704203605651855
    5. ')' → logprob: -3.8454203605651855
    6. '    
' → logprob: -3.8454203605651855
    7. ' ' → logprob: -4.0954203605651855
    8. '  
' → logprob: -5.3454203605651855
    9. '        
' → logprob: -5.4704203605651855
    10. '    ' → logprob: -6.0954203605651855

Token 154: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16333159804344177
    2. ')' → logprob: -2.0383315086364746
    3. '       ' → logprob: -4.038331508636475
    4. ' ' → logprob: -6.913331508636475
    5. '    
' → logprob: -7.788331508636475
    6. '<|end|>' → logprob: -8.163331985473633
    7. '\n' → logprob: -8.413331985473633
    8. '    ' → logprob: -8.663331985473633
    9. '  
' → logprob: -9.163331985473633
    10. ' )' → logprob: -9.163331985473633

Token 155: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3436879813671112
    2. 'return' → logprob: -1.9686880111694336
    3. ' return' → logprob: -1.9686880111694336
    4. '   ' → logprob: -4.468688011169434
    5. '           ' → logprob: -9.718688011169434
    6. '
' → logprob: -11.343688011169434
    7. '```' → logprob: -11.468688011169434
    8. '	return' → logprob: -11.718688011169434
    9. ')' → logprob: -12.718688011169434
    10. '    ' → logprob: -12.718688011169434

Token 156: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16537943482398987
    2. '   ' → logprob: -2.415379524230957
    3. ':' → logprob: -3.540379524230957
    4. '):' → logprob: -3.915379524230957
    5. ')' → logprob: -4.915379524230957
    6. '(h' → logprob: -5.415379524230957
    7. ' (' → logprob: -6.915379524230957
    8. '):
' → logprob: -8.415379524230957
    9. '[' → logprob: -8.540379524230957
    10. '(' → logprob: -8.665379524230957

Token 157: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009567185305058956
    2. '   ' → logprob: -5.8845672607421875
    3. '        ' → logprob: -6.0095672607421875
    4. '           ' → logprob: -6.1345672607421875
    5. ' h' → logprob: -7.0095672607421875
    6. '    ' → logprob: -7.3845672607421875
    7. ' ' → logprob: -9.009567260742188
    8. '      ' → logprob: -9.134567260742188
    9. 'h' → logprob: -9.759567260742188
    10. '        
' → logprob: -10.009567260742188

Token 158: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.006072656717151403
    2. '   ' → logprob: -5.256072521209717
    3. ' h' → logprob: -7.381072521209717
    4. '       ' → logprob: -8.506072998046875
    5. '           ' → logprob: -11.631072998046875
    6. '	h' → logprob: -12.756072998046875
    7. ' ' → logprob: -15.006072998046875
    8. '  ' → logprob: -15.131072998046875
    9. 'int' → logprob: -15.131072998046875
    10. '
' → logprob: -15.131072998046875

Token 159: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004404720850288868
    2. ' ,' → logprob: -6.004404544830322
    3. '   ' → logprob: -6.504404544830322
    4. ':' → logprob: -8.75440502166748
    5. ',int' → logprob: -8.87940502166748
    6. '):' → logprob: -10.37940502166748
    7. ':int' → logprob: -10.62940502166748
    8. ',
' → logprob: -11.50440502166748
    9. '       ' → logprob: -11.62940502166748
    10. '    ' → logprob: -11.75440502166748

Token 160: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0020534314680844545
    2. ',' → logprob: -6.752053260803223
    3. ' int' → logprob: -7.252053260803223
    4. ',int' → logprob: -9.252053260803223
    5. ':int' → logprob: -10.002053260803223
    6. ')' → logprob: -10.877053260803223
    7. '):' → logprob: -12.002053260803223
    8. ':' → logprob: -12.627053260803223
    9. '[int' → logprob: -13.127053260803223
    10. '   ' → logprob: -14.002053260803223

Token 161: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003179465711582452
    2. '   ' → logprob: -8.500317573547363
    3. ' ,' → logprob: -9.750317573547363
    4. ',int' → logprob: -10.750317573547363
    5. ')' → logprob: -11.500317573547363
    6. '),' → logprob: -11.625317573547363
    7. '):' → logprob: -11.750317573547363
    8. ',
' → logprob: -12.375317573547363
    9. ',h' → logprob: -14.000317573547363
    10. '       ' → logprob: -14.125317573547363

Token 162: ' Row' (ID: 18215)
  Prédit: ' The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' The' → logprob: -0.8029389381408691
    2. '           ' → logprob: -1.1779389381408691
    3. 'The' → logprob: -2.552938938140869
    4. '            ' → logprob: -2.802938938140869
    5. ' int' → logprob: -3.927938938140869
    6. ' grid' → logprob: -4.052938938140869
    7. ' row' → logprob: -4.427938938140869
    8. 'int' → logprob: -4.552938938140869
    9. ' Grid' → logprob: -4.802938938140869
    10. ' h' → logprob: -5.302938938140869

Token 163: ' index' (ID: 3472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23722828924655914
    2. '   ' → logprob: -1.987228274345398
    3. ' coordinate' → logprob: -3.8622283935546875
    4. ')' → logprob: -4.2372283935546875
    5. ' index' → logprob: -4.4872283935546875
    6. '           ' → logprob: -4.4872283935546875
    7. '       ' → logprob: -5.1122283935546875
    8. 'index' → logprob: -5.9872283935546875
    9. '
' → logprob: -6.2372283935546875
    10. ' ,' → logprob: -6.3622283935546875

Token 164: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2615646719932556
    2. ',' → logprob: -1.8865647315979004
    3. ')' → logprob: -3.3865647315979004
    4. '       ' → logprob: -3.5115647315979004
    5. '<|end|>' → logprob: -5.3865647315979
    6. ',
' → logprob: -6.0115647315979
    7. '           ' → logprob: -6.3865647315979
    8. '
' → logprob: -6.7615647315979
    9. ' ' → logprob: -7.0115647315979
    10. '    
' → logprob: -7.1365647315979

Token 165: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15274718403816223
    2. 'the' → logprob: -2.02774715423584
    3. ')' → logprob: -4.90274715423584
    4. '<|end|>' → logprob: -6.15274715423584
    5. ' grid' → logprob: -8.65274715423584
    6. ' h' → logprob: -9.77774715423584
    7. ' row' → logprob: -10.27774715423584
    8. 'row' → logprob: -10.27774715423584
    9. ' )' → logprob: -10.52774715423584
    10. '<|end|>' → logprob: -10.90274715423584

Token 166: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.6003193259239197
    2. ' grid' → logprob: -0.9753193259239197
    3. ' vertex' → logprob: -3.1003193855285645
    4. 'cell' → logprob: -3.9753193855285645
    5. 'grid' → logprob: -5.7253193855285645
    6. ' node' → logprob: -5.9753193855285645
    7. 'vertex' → logprob: -6.2253193855285645
    8. ' current' → logprob: -6.4753193855285645
    9. ')' → logprob: -8.850318908691406
    10. ' row' → logprob: -8.975318908691406

Token 167: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8813113570213318
    2. '   ' → logprob: -1.0063114166259766
    3. ',' → logprob: -2.0063114166259766
    4. ',
' → logprob: -3.0063114166259766
    5. ')
' → logprob: -4.131311416625977
    6. '       ' → logprob: -4.256311416625977
    7. '           ' → logprob: -5.756311416625977
    8. '
' → logprob: -6.756311416625977
    9. '),' → logprob: -7.506311416625977
    10. ')\' → logprob: -8.506311416625977

Token 168: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17369019985198975
    2. '           ' → logprob: -1.9236901998519897
    3. ')
' → logprob: -5.673690319061279
    4. '0' → logprob: -5.673690319061279
    5. '   ' → logprob: -6.423690319061279
    6. '       ' → logprob: -6.423690319061279
    7. ' )' → logprob: -7.298690319061279
    8. '),' → logprob: -7.548690319061279
    9. '               ' → logprob: -7.548690319061279
    10. ',' → logprob: -7.923690319061279

Token 169: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.15701866149902344
    2. 'based' → logprob: -2.5320186614990234
    3. '-index' → logprob: -3.2820186614990234
    4. ')' → logprob: -4.407018661499023
    5. ' <=' → logprob: -5.032018661499023
    6. '   ' → logprob: -5.657018661499023
    7. '<=' → logprob: -6.282018661499023
    8. ' based' → logprob: -6.657018661499023
    9. ',' → logprob: -7.032018661499023
    10. 'Based' → logprob: -7.657018661499023

Token 170: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5762332081794739
    2. ')
' → logprob: -0.8262332081794739
    3. '   ' → logprob: -9.45123291015625
    4. ',' → logprob: -9.70123291015625
    5. ').' → logprob: -9.70123291015625
    6. ')
' → logprob: -10.95123291015625
    7. ' )
' → logprob: -11.32623291015625
    8. '):
' → logprob: -11.70123291015625
    9. ')

' → logprob: -11.70123291015625
    10. '),' → logprob: -12.07623291015625

Token 171: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5260027647018433
    2. '   ' → logprob: -1.5260027647018433
    3. ')' → logprob: -2.651002883911133
    4. ' ' → logprob: -3.276002883911133
    5. '<|end|>' → logprob: -3.401002883911133
    6. '           ' → logprob: -4.276002883911133
    7. '    ' → logprob: -4.276002883911133
    8. '```' → logprob: -5.026002883911133
    9. ' 
' → logprob: -6.276002883911133
    10. ' )' → logprob: -6.526002883911133

Token 172: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.024157507345080376
    2. ' w' → logprob: -3.7741575241088867
    3. '           ' → logprob: -7.024157524108887
    4. '   ' → logprob: -11.399157524108887
    5. '       ' → logprob: -12.524157524108887
    6. '            ' → logprob: -13.149157524108887
    7. ' ' → logprob: -13.399157524108887
    8. ' ' → logprob: -14.149157524108887
    9. '               ' → logprob: -14.649157524108887
    10. '    ' → logprob: -14.899157524108887

Token 173: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23894882202148438
    2. ':' → logprob: -1.8639488220214844
    3. '(int' → logprob: -4.113948822021484
    4. ':int' → logprob: -4.363948822021484
    5. ' (' → logprob: -4.738948822021484
    6. '   ' → logprob: -5.113948822021484
    7. ')' → logprob: -5.113948822021484
    8. '):
' → logprob: -5.738948822021484
    9. 'int' → logprob: -6.238948822021484
    10. '[int' → logprob: -7.363948822021484

Token 174: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00029637437546625733
    2. ' int' → logprob: -8.125296592712402
    3. '(int' → logprob: -15.500296592712402
    4. '[int' → logprob: -16.625295639038086
    5. ')' → logprob: -17.625295639038086
    6. ':int' → logprob: -17.875295639038086
    7. '=int' → logprob: -18.000295639038086
    8. '<int' → logprob: -18.625295639038086
    9. '   ' → logprob: -19.375295639038086
    10. ']int' → logprob: -20.000295639038086

Token 175: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014353657141327858
    2. 'int' → logprob: -5.2643537521362305
    3. ':' → logprob: -5.7643537521362305
    4. '   ' → logprob: -6.0143537521362305
    5. '):
' → logprob: -6.5143537521362305
    6. ':int' → logprob: -6.8893537521362305
    7. ')' → logprob: -7.7643537521362305
    8. '[int' → logprob: -8.63935375213623
    9. '(int' → logprob: -8.88935375213623
    10. ',' → logprob: -9.63935375213623

Token 176: ' Column' (ID: 17426)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023256193846464157
    2. ' int' → logprob: -3.773256301879883
    3. '   ' → logprob: -11.523256301879883
    4. '(int' → logprob: -15.273256301879883
    5. '       ' → logprob: -15.398256301879883
    6. '           ' → logprob: -15.648256301879883
    7. '
' → logprob: -16.398256301879883
    8. '[int' → logprob: -16.773256301879883
    9. ':int' → logprob: -17.023256301879883
    10. ' ' → logprob: -17.023256301879883

Token 177: ' index' (ID: 3472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7035751938819885
    2. '):' → logprob: -1.8285751342773438
    3. '):
' → logprob: -2.2035751342773438
    4. '+' → logprob: -2.4535751342773438
    5. ' +' → logprob: -2.5785751342773438
    6. '       ' → logprob: -3.2035751342773438
    7. ',' → logprob: -4.203575134277344
    8. ')' → logprob: -5.953575134277344
    9. ' ' → logprob: -6.328575134277344
    10. '  ' → logprob: -6.703575134277344

Token 178: ' of' (ID: 328)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04651796445250511
    2. '):
' → logprob: -3.796517848968506
    3. '   ' → logprob: -4.671517848968506
    4. '       ' → logprob: -4.796517848968506
    5. ')' → logprob: -5.421517848968506
    6. '=' → logprob: -8.296518325805664
    7. '           ' → logprob: -8.421518325805664
    8. ',' → logprob: -9.171518325805664
    9. '               ' → logprob: -9.671518325805664
    10. ' ):' → logprob: -9.671518325805664

Token 179: ' the' (ID: 290)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0195480585098267
    2. ' the' → logprob: -1.3945480585098267
    3. ' s' → logprob: -1.7695480585098267
    4. 'the' → logprob: -2.144547939300537
    5. 's' → logprob: -2.644547939300537
    6. 'int' → logprob: -4.644547939300537
    7. ' grid' → logprob: -4.644547939300537
    8. ' )' → logprob: -6.144547939300537
    9. ')
' → logprob: -6.644547939300537
    10. ' int' → logprob: -6.769547939300537

Token 180: ' cell' (ID: 4206)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.3964500427246094
    2. 'grid' → logprob: -2.0214500427246094
    3. 'cell' → logprob: -2.2714500427246094
    4. ' cell' → logprob: -2.7714500427246094
    5. 's' → logprob: -4.646450042724609
    6. ')' → logprob: -4.646450042724609
    7. ' s' → logprob: -5.521450042724609
    8. 'int' → logprob: -6.521450042724609
    9. ' ' → logprob: -7.146450042724609
    10. '   ' → logprob: -7.146450042724609

Token 181: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2286277562379837
    2. '   ' → logprob: -2.1036276817321777
    3. '):
' → logprob: -2.8536276817321777
    4. ')' → logprob: -3.7286276817321777
    5. '       ' → logprob: -7.478627681732178
    6. '):

' → logprob: -10.353628158569336
    7. '),' → logprob: -11.103628158569336
    8. ' ):' → logprob: -11.228628158569336
    9. ')
' → logprob: -11.353628158569336
    10. ' ' → logprob: -11.353628158569336

Token 182: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4993022680282593
    2. ')' → logprob: -1.2493022680282593
    3. '0' → logprob: -2.624302387237549
    4. '):' → logprob: -4.499302387237549
    5. '   ' → logprob: -4.999302387237549
    6. ' int' → logprob: -5.124302387237549
    7. ')
' → logprob: -5.499302387237549
    8. '):
' → logprob: -5.749302387237549
    9. ' ' → logprob: -7.249302387237549
    10. '1' → logprob: -7.874302387237549

Token 183: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4629969894886017
    2. '   ' → logprob: -1.5879969596862793
    3. '):' → logprob: -2.2129969596862793
    4. ')-' → logprob: -3.5879969596862793
    5. ')+' → logprob: -3.8379969596862793
    6. '):
' → logprob: -5.462996959686279
    7. '+' → logprob: -6.462996959686279
    8. ')*' → logprob: -8.462997436523438
    9. '-level' → logprob: -8.712997436523438
    10. ')
' → logprob: -8.712997436523438

Token 184: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02304455079138279
    2. '):' → logprob: -4.023044586181641
    3. '):
' → logprob: -5.398044586181641
    4. '   ' → logprob: -8.52304458618164
    5. ')
' → logprob: -9.02304458618164
    6. '),' → logprob: -11.39804458618164
    7. '):

' → logprob: -12.02304458618164
    8. '       ' → logprob: -12.52304458618164
    9. ' )' → logprob: -12.77304458618164
    10. ').' → logprob: -12.77304458618164

Token 185: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6451433897018433
    2. '   ' → logprob: -0.8951433897018433
    3. ')' → logprob: -3.395143508911133
    4. '```' → logprob: -4.395143508911133
    5. '\n' → logprob: -5.020143508911133
    6. '<|end|>' → logprob: -5.395143508911133
    7. '    
' → logprob: -6.270143508911133
    8. ' ' → logprob: -6.645143508911133
    9. '    ' → logprob: -6.645143508911133
    10. '           ' → logprob: -7.645143508911133

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012998805614188313
    2. '   ' → logprob: -6.751299858093262
    3. ')' → logprob: -9.876299858093262
    4. '           ' → logprob: -10.126299858093262
    5. '```' → logprob: -10.626299858093262
    6. '        
' → logprob: -13.126299858093262
    7. ' return' → logprob: -13.626299858093262
    8. '        ' → logprob: -13.626299858093262
    9. '"""
' → logprob: -13.626299858093262
    10. '"""' → logprob: -14.001299858093262

Token 187: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7191515564918518
    2. 'Returns' (adapté à ' Returns') → logprob: -0.7191515564918518
    3. '   ' → logprob: -4.719151496887207
    4. 'returns' → logprob: -4.969151496887207
    5. 'Return' → logprob: -5.844151496887207
    6. '"""
' → logprob: -5.969151496887207
    7. '       ' → logprob: -5.969151496887207
    8. '"""' → logprob: -7.469151496887207
    9. '           ' → logprob: -7.969151496887207
    10. '```' → logprob: -8.094151496887207

Token 188: ':
' (ID: 734)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.4323047995567322
    2. ' (' → logprob: -1.057304859161377
    3. 'h' → logprob: -6.932304859161377
    4. '(h' → logprob: -6.932304859161377
    5. ' H' → logprob: -7.182304859161377
    6. '(' → logprob: -7.807304859161377
    7. ')' → logprob: -9.057304382324219
    8. ' )' → logprob: -9.557304382324219
    9. ' ' → logprob: -9.557304382324219
    10. '   ' → logprob: -9.932304382324219

Token 189: '           ' (ID: 352)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.02729816548526287
    2. 'h' → logprob: -4.0272979736328125
    3. '       ' → logprob: -4.7772979736328125
    4. ' H' → logprob: -8.652297973632812
    5. '        ' → logprob: -9.027297973632812
    6. '   ' → logprob: -9.027297973632812
    7. ' return' → logprob: -10.152297973632812
    8. ' ' → logprob: -10.277297973632812
    9. ' (' → logprob: -10.277297973632812
    10. '           ' → logprob: -10.402297973632812

Token 190: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.13013799488544464
    2. 'h' → logprob: -2.1301379203796387
    3. ' int' → logprob: -5.880137920379639
    4. ' h' → logprob: -8.005138397216797
    5. '   ' → logprob: -10.755138397216797
    6. 'w' → logprob: -10.880138397216797
    7. '       ' → logprob: -11.005138397216797
    8. '(int' → logprob: -12.255138397216797
    9. '           ' → logprob: -12.755138397216797
    10. 'H' → logprob: -12.880138397216797

Token 191: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7785231471061707
    2. ' (' → logprob: -2.0285232067108154
    3. ':' → logprob: -2.1535232067108154
    4. ')' → logprob: -2.2785232067108154
    5. '(h' → logprob: -2.5285232067108154
    6. ' h' → logprob: -3.2785232067108154
    7. '       ' → logprob: -3.6535232067108154
    8. '   ' → logprob: -3.7785232067108154
    9. ' ):' → logprob: -5.028522968292236
    10. ' )' → logprob: -5.903522968292236

Token 192: ' Unique' (ID: 42417)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2016109824180603
    2. ' h' → logprob: -1.701611042022705
    3. ' return' → logprob: -9.451610565185547
    4. '   ' → logprob: -9.701610565185547
    5. 'return' → logprob: -10.201610565185547
    6. 'w' → logprob: -12.326610565185547
    7. ' w' → logprob: -12.701610565185547
    8. '```' → logprob: -13.076610565185547
    9. '       ' → logprob: -13.201610565185547
    10. ' ' → logprob: -13.576610565185547

Token 193: ' number' (ID: 2086)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.05832190066576004
    2. 'h' → logprob: -3.433321952819824
    3. ' number' → logprob: -4.308321952819824
    4. '   ' → logprob: -5.183321952819824
    5. ' (' → logprob: -6.308321952819824
    6. ' vertex' → logprob: -7.183321952819824
    7. 'number' → logprob: -7.308321952819824
    8. '(h' → logprob: -7.558321952819824
    9. ' H' → logprob: -8.558321952819824
    10. ' ' → logprob: -8.558321952819824

Token 194: ' representing' (ID: 25389)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.14069820940494537
    2. '   ' → logprob: -2.390698194503784
    3. 'h' → logprob: -3.765698194503784
    4. ' =' → logprob: -4.640698432922363
    5. '       ' → logprob: -6.265698432922363
    6. ' (' → logprob: -6.515698432922363
    7. '(h' → logprob: -7.015698432922363
    8. '=' → logprob: -7.390698432922363
    9. ':' → logprob: -7.765698432922363
    10. ' ' → logprob: -8.140698432922363

Token 195: ' the' (ID: 290)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.34995222091674805
    2. 'h' → logprob: -1.224952220916748
    3. ' the' → logprob: -7.099952220916748
    4. '   ' → logprob: -7.599952220916748
    5. 'the' → logprob: -9.099952697753906
    6. '       ' → logprob: -10.849952697753906
    7. '           ' → logprob: -11.224952697753906
    8. ' ' → logprob: -11.974952697753906
    9. 'w' → logprob: -12.099952697753906
    10. '    ' → logprob: -12.349952697753906

Token 196: ' cell' (ID: 4206)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.21088945865631104
    2. ' h' → logprob: -1.710889458656311
    3. 'vertex' → logprob: -5.7108893394470215
    4. ' vertex' → logprob: -5.8358893394470215
    5. 'cell' → logprob: -6.3358893394470215
    6. ' cell' → logprob: -7.2108893394470215
    7. 'node' → logprob: -9.08588981628418
    8. 'position' → logprob: -9.08588981628418
    9. ' node' → logprob: -9.21088981628418
    10. ' position' → logprob: -9.33588981628418

Token 197: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5907508134841919
    2. '(h' → logprob: -1.590750813484192
    3. '       ' → logprob: -1.840750813484192
    4. ')' → logprob: -3.2157506942749023
    5. '(' → logprob: -4.090750694274902
    6. ' =' → logprob: -4.965750694274902
    7. '           ' → logprob: -5.090750694274902
    8. ' (' → logprob: -5.965750694274902
    9. '=' → logprob: -6.215750694274902
    10. ':' → logprob: -6.590750694274902

Token 198: ' (' (ID: 350)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.009904945269227028
    2. 'h' → logprob: -4.884904861450195
    3. ' the' → logprob: -6.259904861450195
    4. '   ' → logprob: -9.134904861450195
    5. '```' → logprob: -9.259904861450195
    6. 'the' → logprob: -9.384904861450195
    7. '(h' → logprob: -10.259904861450195
    8. ' (' → logprob: -10.759904861450195
    9. ')' → logprob: -11.509904861450195
    10. '       ' → logprob: -11.759904861450195

Token 199: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.028825514018535614
    2. ' h' → logprob: -3.653825521469116
    3. ')' → logprob: -6.028825283050537
    4. '   ' → logprob: -9.528825759887695
    5. ',' → logprob: -11.278825759887695
    6. ' )' → logprob: -11.653825759887695
    7. '),' → logprob: -11.653825759887695
    8. '	h' → logprob: -13.153825759887695
    9. ' ' → logprob: -13.278825759887695
    10. ',h' → logprob: -13.278825759887695

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00219118339009583
    2. '   ' → logprob: -6.627191066741943
    3. ')' → logprob: -8.127191543579102
    4. ' ,' → logprob: -8.627191543579102
    5. ',w' → logprob: -8.627191543579102
    6. ' *' → logprob: -9.877191543579102
    7. '),' → logprob: -10.002191543579102
    8. '*' → logprob: -10.252191543579102
    9. ',h' → logprob: -10.627191543579102
    10. ' ' → logprob: -10.752191543579102

Token 201: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.1426943689584732
    2. 'w' → logprob: -2.0176944732666016
    3. ' ' → logprob: -11.017694473266602
    4. '   ' → logprob: -13.267694473266602
    5. ')' → logprob: -15.267694473266602
    6. '    ' → logprob: -15.517694473266602
    7. ' ' → logprob: -15.892694473266602
    8. '  ' → logprob: -16.1426944732666
    9. '	w' → logprob: -16.1426944732666
    10. '<|end|>' → logprob: -16.3926944732666

Token 202: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005550591740757227
    2. '   ' → logprob: -7.750555038452148
    3. ')
' → logprob: -9.750555038452148
    4. '       ' → logprob: -10.625555038452148
    5. '):' → logprob: -11.500555038452148
    6. ').' → logprob: -11.625555038452148
    7. ')`' → logprob: -11.750555038452148
    8. ' )' → logprob: -12.000555038452148
    9. ')**' → logprob: -13.000555038452148
    10. '))' → logprob: -13.125555038452148

Token 203: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8370873332023621
    2. '       ' → logprob: -1.2120873928070068
    3. ')' → logprob: -1.3370873928070068
    4. ' return' → logprob: -6.462087154388428
    5. ' )' → logprob: -6.587087154388428
    6. ' 
' → logprob: -6.712087154388428
    7. '    
' → logprob: -7.587087154388428
    8. '    ' → logprob: -7.962087154388428
    9. 'return' → logprob: -7.962087154388428
    10. ' ' → logprob: -8.087087631225586

Token 204: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6411734819412231
    2. '   ' → logprob: -0.7661734819412231
    3. ')' → logprob: -5.141173362731934
    4. ' return' → logprob: -6.266173362731934
    5. 'return' → logprob: -8.016173362731934
    6. '    ' → logprob: -8.891173362731934
    7. '    
' → logprob: -10.141173362731934
    8. '           ' → logprob: -10.516173362731934
    9. '):
' → logprob: -10.641173362731934
    10. '  ' → logprob: -10.766173362731934

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037206229753792286
    2. '   ' → logprob: -6.128720760345459
    3. ' return' → logprob: -6.753720760345459
    4. 'return' → logprob: -8.0037202835083
    5. '	' → logprob: -11.5037202835083
    6. '	return' → logprob: -12.2537202835083
    7. '           ' → logprob: -12.5037202835083
    8. '    ' → logprob: -12.7537202835083
    9. '        
' → logprob: -13.3787202835083
    10. '      ' → logprob: -13.3787202835083

Token 206: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1680152267217636
    2. '       ' → logprob: -2.418015241622925
    3. ' return' → logprob: -3.418015241622925
    4. '   ' → logprob: -3.418015241622925
    5. '	return' → logprob: -12.668015480041504
    6. ' ' → logprob: -14.418015480041504
    7. '           ' → logprob: -14.793015480041504
    8. '    ' → logprob: -14.918015480041504
    9. '```' → logprob: -15.043015480041504
    10. '{return' → logprob: -15.543015480041504

Token 207: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.061970487236976624
    2. ' h' → logprob: -2.8119704723358154
    3. '   ' → logprob: -13.061970710754395
    4. 'H' → logprob: -14.811970710754395
    5. '	h' → logprob: -15.436970710754395
    6. '```' → logprob: -17.061969757080078
    7. '(h' → logprob: -17.311969757080078
    8. ' H' → logprob: -17.436969757080078
    9. '"h' → logprob: -17.436969757080078
    10. ' ' → logprob: -17.561969757080078

Token 208: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6326121091842651
    2. ' *' → logprob: -0.7576121091842651
    3. ' ' → logprob: -11.882612228393555
    4. '   ' → logprob: -12.882612228393555
    5. ' ' → logprob: -13.507612228393555
    6. '*w' → logprob: -14.882612228393555
    7. '**' → logprob: -15.007612228393555
    8. '*(' → logprob: -15.257612228393555
    9. ' **' → logprob: -15.507612228393555
    10. '	' → logprob: -15.757612228393555

Token 209: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.009757975116372108
    2. ' W' → logprob: -4.634757995605469
    3. '(W' → logprob: -14.134757995605469
    4. '   ' → logprob: -14.134757995605469
    5. '	W' → logprob: -15.259757995605469
    6. ' ' → logprob: -16.25975799560547
    7. '_W' → logprob: -16.75975799560547
    8. '```' → logprob: -17.00975799560547
    9. '`' → logprob: -17.13475799560547
    10. '<W' → logprob: -17.63475799560547

Token 210: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.201422318816185
    2. ' +' → logprob: -1.7014223337173462
    3. '+w' → logprob: -11.826422691345215
    4. ' plus' → logprob: -14.826422691345215
    5. '+
' → logprob: -15.076422691345215
    6. ' ' → logprob: -15.701422691345215
    7. '+k' → logprob: -15.826422691345215
    8. ')' → logprob: -16.2014217376709
    9. '+h' → logprob: -16.4514217376709
    10. '+r' → logprob: -16.7014217376709

Token 211: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0024756586644798517
    2. ' w' → logprob: -6.002475738525391
    3. '(w' → logprob: -19.00247573852539
    4. 'W' → logprob: -19.25247573852539
    5. '   ' → logprob: -19.25247573852539
    6. '	w' → logprob: -20.00247573852539
    7. '1' → logprob: -20.37747573852539
    8. ' ' → logprob: -20.62747573852539
    9. '_w' → logprob: -20.87747573852539
    10. '```' → logprob: -21.75247573852539

Token 212: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6218857169151306
    2. '    
' → logprob: -1.1218857765197754
    3. '   ' → logprob: -2.1218857765197754
    4. '  
' → logprob: -5.496885776519775
    5. '<|end|>' → logprob: -5.621885776519775
    6. '\n' → logprob: -5.746885776519775
    7. ')' → logprob: -6.496885776519775
    8. '   
' → logprob: -6.746885776519775
    9. ' 
' → logprob: -7.246885776519775
    10. 'edges' → logprob: -7.996885776519775

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014327568002045155
    2. 'edges' → logprob: -5.264327526092529
    3. '    
' → logprob: -5.639327526092529
    4. 'graph' → logprob: -6.264327526092529
    5. '#' → logprob: -6.639327526092529
    6. 'neighbors' → logprob: -6.764327526092529
    7. 'adj' → logprob: -7.639327526092529
    8. 'inf' → logprob: -9.514328002929688
    9. ' edges' → logprob: -9.639328002929688
    10. '
' → logprob: -9.889328002929688

Token 214: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.34114089608192444
    2. 'adj' → logprob: -2.5911409854888916
    3. 'graph' → logprob: -2.9661409854888916
    4. 'INF' → logprob: -3.0911409854888916
    5. 'edges' → logprob: -3.2161409854888916
    6. '   ' → logprob: -3.8411409854888916
    7. 'dist' → logprob: -4.2161407470703125
    8. 'n' → logprob: -4.9661407470703125
    9. 'inf' → logprob: -5.2161407470703125
    10. 'cost' → logprob: -5.4661407470703125

Token 215: ' Lists' (ID: 66255)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5374118089675903
    2. 'num' → logprob: -2.287411689758301
    3. 'n' → logprob: -2.537411689758301
    4. 'graph' → logprob: -2.787411689758301
    5. 'edges' → logprob: -2.787411689758301
    6. 'adj' → logprob: -3.412411689758301
    7. 'N' → logprob: -4.162411689758301
    8. 'size' → logprob: -4.162411689758301
    9. 'INF' → logprob: -4.412411689758301
    10. 'vertices' → logprob: -5.287411689758301

Token 216: ' to' (ID: 316)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.016669750213623
    2. '_vertices' → logprob: -1.516669750213623
    3. ' =' → logprob: -2.641669750213623
    4. '_nodes' → logprob: -2.766669750213623
    5. '_h' → logprob: -3.016669750213623
    6. '_neighbors' → logprob: -3.766669750213623
    7. '_of' → logprob: -3.766669750213623
    8. '_rows' → logprob: -3.891669750213623
    9. 'of' → logprob: -4.016669750213623
    10. '   ' → logprob: -4.141669750213623

Token 217: ' store' (ID: 4897)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.7549877166748047
    2. 'build' → logprob: -1.6299877166748047
    3. '[],' → logprob: -1.7549877166748047
    4. '[]' → logprob: -2.7549877166748047
    5. 'rows' → logprob: -3.6299877166748047
    6. 'construct' → logprob: -4.254987716674805
    7. 'edges' → logprob: -4.254987716674805
    8. ' store' → logprob: -4.379987716674805
    9. 'vertices' → logprob: -5.129987716674805
    10. 'represent' → logprob: -5.504987716674805

Token 218: ' the' (ID: 290)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.6079868078231812
    2. 'edges' → logprob: -0.8579868078231812
    3. 'row' → logprob: -3.8579869270324707
    4. 'data' → logprob: -4.982986927032471
    5. ' edges' → logprob: -5.982986927032471
    6. 'edge' → logprob: -7.482986927032471
    7. ' rows' → logprob: -8.857986450195312
    8. 'vertices' → logprob: -9.107986450195312
    9. 'from' → logprob: -10.357986450195312
    10. 'graph' → logprob: -10.482986450195312

Token 219: ' row' (ID: 5225)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.18184730410575867
    2. 'row' → logprob: -1.931847333908081
    3. 'edges' → logprob: -3.931847333908081
    4. 'data' → logprob: -6.681847095489502
    5. 'from' → logprob: -7.681847095489502
    6. 'edge' → logprob: -11.43184757232666
    7. 'import' → logprob: -11.55684757232666
    8. '   ' → logprob: -11.80684757232666
    9. 'vertices' → logprob: -11.80684757232666
    10. ' rows' → logprob: -12.05684757232666

Token 220: ' indices' (ID: 30378)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.8074596524238586
    2. 'ind' → logprob: -1.9324595928192139
    3. 'indices' → logprob: -1.9324595928192139
    4. '_ind' → logprob: -2.432459592819214
    5. '_inds' → logprob: -2.557459592819214
    6. 's' → logprob: -3.182459592819214
    7. ',' → logprob: -3.557459592819214
    8. '_idxs' → logprob: -4.932459831237793
    9. 'inds' → logprob: -5.182459831237793
    10. '[]' → logprob: -5.682459831237793

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1011003702878952
    2. 'rows' → logprob: -2.601100444793701
    3. '   ' → logprob: -5.101100444793701
    4. 'and' → logprob: -5.351100444793701
    5. 'row' → logprob: -5.601100444793701
    6. ',row' → logprob: -5.976100444793701
    7. 'indices' → logprob: -6.101100444793701
    8. ' and' → logprob: -7.351100444793701
    9. 'edges' → logprob: -7.476100444793701
    10. ' ,' → logprob: -8.351099967956543

Token 222: ' column' (ID: 6000)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.17928607761859894
    2. ' col' → logprob: -2.304286003112793
    3. 'cols' → logprob: -3.179286003112793
    4. 'data' → logprob: -4.554286003112793
    5. ' cols' → logprob: -4.679286003112793
    6. ' data' → logprob: -5.929286003112793
    7. '   ' → logprob: -9.179286003112793
    8. 'columns' → logprob: -10.304286003112793
    9. ' columns' → logprob: -10.929286003112793
    10. 'column' → logprob: -10.929286003112793

Token 223: ' indices' (ID: 30378)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6143600940704346
    2. '_indices' → logprob: -1.4893600940704346
    3. 'indices' → logprob: -1.7393600940704346
    4. ',' → logprob: -3.8643600940704346
    5. '_ind' → logprob: -4.3643598556518555
    6. 'ind' → logprob: -4.4893598556518555
    7. '_inds' → logprob: -5.2393598556518555
    8. ' indices' → logprob: -6.2393598556518555
    9. '   ' → logprob: -6.2393598556518555
    10. '_idxs' → logprob: -7.3643598556518555

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013160702073946595
    2. 'and' → logprob: -7.501316070556641
    3. ' ,' → logprob: -8.50131607055664
    4. ',row' → logprob: -8.75131607055664
    5. 'rows' → logprob: -9.25131607055664
    6. ',and' → logprob: -9.62631607055664
    7. ' and' → logprob: -9.75131607055664
    8. '   ' → logprob: -10.00131607055664
    9. ',
' → logprob: -10.75131607055664
    10. '_,' → logprob: -10.87631607055664

Token 225: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6906269788742065
    2. 'data' → logprob: -1.3156269788742065
    3. 'and' → logprob: -1.6906269788742065
    4. ' data' → logprob: -3.440627098083496
    5. 'weights' → logprob: -5.315627098083496
    6. 'values' → logprob: -5.565627098083496
    7. '   ' → logprob: -5.690627098083496
    8. ' weights' → logprob: -7.690627098083496
    9. '#' → logprob: -7.815627098083496
    10. ' values' → logprob: -8.565627098083496

Token 226: ' distances' (ID: 48294)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.01762547716498375
    2. ' data' → logprob: -4.142625331878662
    3. 'weights' → logprob: -6.517625331878662
    4. ' weights' → logprob: -9.76762580871582
    5. '   ' → logprob: -11.01762580871582
    6. 'values' → logprob: -11.01762580871582
    7. 'weight' → logprob: -12.14262580871582
    8. 'cost' → logprob: -12.51762580871582
    9. 'dat' → logprob: -12.64262580871582
    10. 'd' → logprob: -13.14262580871582

Token 227: ' for' (ID: 395)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.6190974712371826
    2. 'row' → logprob: -1.6190974712371826
    3. ',' → logprob: -1.8690974712371826
    4. ' rows' → logprob: -2.6190974712371826
    5. ' row' → logprob: -4.369097709655762
    6. 'r' → logprob: -4.869097709655762
    7. ' ,' → logprob: -5.244097709655762
    8. '   ' → logprob: -5.994097709655762
    9. ',row' → logprob: -6.369097709655762
    10. 'edges' → logprob: -6.869097709655762

Token 228: ' the' (ID: 290)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.18629595637321472
    2. 'edges' → logprob: -2.561295986175537
    3. ' edges' → logprob: -3.186295986175537
    4. ' rows' → logprob: -3.686295986175537
    5. 'row' → logprob: -4.061295986175537
    6. 'data' → logprob: -5.061295986175537
    7. 'the' → logprob: -7.186295986175537
    8. 'graph' → logprob: -7.561295986175537
    9. ' data' → logprob: -7.686295986175537
    10. ' row' → logprob: -7.811295986175537

Token 229: ' sparse' (ID: 70531)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.3555335998535156
    2. 'rows' → logprob: -1.8555335998535156
    3. ' edges' → logprob: -2.2305335998535156
    4. 'graph' → logprob: -3.4805335998535156
    5. ' rows' → logprob: -6.230533599853516
    6. ' graph' → logprob: -6.730533599853516
    7. 'row' → logprob: -7.105533599853516
    8. 'data' → logprob: -8.480533599853516
    9. 'csr' → logprob: -9.105533599853516
    10. 'edge' → logprob: -9.355533599853516

Token 230: ' adjacency' (ID: 177015)
  Prédit: '_rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.7257940769195557
    2. 'rows' → logprob: -1.4757940769195557
    3. 'matrix' → logprob: -2.1007940769195557
    4. '_matrix' → logprob: -2.9757940769195557
    5. ' rows' → logprob: -3.2257940769195557
    6. ' matrix' → logprob: -3.7257940769195557
    7. ' matrices' → logprob: -4.225793838500977
    8. '_edges' → logprob: -4.600793838500977
    9. '_row' → logprob: -4.975793838500977
    10. '<|end|>' → logprob: -5.225793838500977

Token 231: ' matrix' (ID: 12248)
  Prédit: '_matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.6338599920272827
    2. 'matrix' → logprob: -2.0088601112365723
    3. '_rows' → logprob: -2.1338601112365723
    4. '_list' → logprob: -2.5088601112365723
    5. ' matrix' → logprob: -2.8838601112365723
    6. '_lists' → logprob: -2.8838601112365723
    7. ' matrices' → logprob: -5.133860111236572
    8. ' lists' → logprob: -5.258860111236572
    9. '_row' → logprob: -5.758860111236572
    10. '_mat' → logprob: -6.008860111236572

Token 232: '
' (ID: 198)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.7107587456703186
    2. 'rows' → logprob: -0.7107587456703186
    3. ' rows' → logprob: -4.835758686065674
    4. ' row' → logprob: -5.710758686065674
    5. 'r' → logprob: -6.210758686065674
    6. '   ' → logprob: -6.710758686065674
    7. ',' → logprob: -6.835758686065674
    8. 'I' → logprob: -7.835758686065674
    9. 'edges' → logprob: -8.335759162902832
    10. 'rs' → logprob: -8.585759162902832

Token 233: '   ' (ID: 271)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.358250230550766
    2. 'rows' → logprob: -1.2332502603530884
    3. 'r' → logprob: -5.358250141143799
    4. '   ' → logprob: -5.858250141143799
    5. ' row' → logprob: -7.108250141143799
    6. ' rows' → logprob: -7.233250141143799
    7. 'rs' → logprob: -8.983250617980957
    8. 'edges' → logprob: -9.233250617980957
    9. 'I' → logprob: -9.608250617980957
    10. 'rr' → logprob: -9.858250617980957

Token 234: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.6355978846549988
    2. 'rows' → logprob: -0.7605978846549988
    3. 'edges' → logprob: -6.1355977058410645
    4. ' rows' → logprob: -8.385598182678223
    5. ' row' → logprob: -8.760598182678223
    6. 'from' → logprob: -8.885598182678223
    7. 'r' → logprob: -9.635598182678223
    8. '   ' → logprob: -9.760598182678223
    9. 'graph' → logprob: -9.760598182678223
    10. 'edge' → logprob: -10.135598182678223

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1954907178878784
    2. 's' → logprob: -1.1954907178878784
    3. '_' → logprob: -1.8204907178878784
    4. '_indices' → logprob: -2.320490837097168
    5. ' =' → logprob: -2.570490837097168
    6. ',' → logprob: -3.195490837097168
    7. '=[]' → logprob: -5.070490837097168
    8. '_idxs' → logprob: -5.945490837097168
    9. '_rows' → logprob: -6.445490837097168
    10. '_inds' → logprob: -6.695490837097168

Token 236: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0005840110243298113
    2. '[]
' → logprob: -7.500584125518799
    3. '[' → logprob: -10.50058364868164
    4. '[]

' → logprob: -12.87558364868164
    5. '[]}' → logprob: -14.25058364868164
    6. ' []' → logprob: -15.75058364868164
    7. '[],' → logprob: -16.12558364868164
    8. '[]>' → logprob: -17.00058364868164
    9. '=[]' → logprob: -17.25058364868164
    10. '[])' → logprob: -17.50058364868164

Token 237: '   ' (ID: 271)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.16125857830047607
    2. ' col' → logprob: -1.911258578300476
    3. ',' → logprob: -7.036258697509766
    4. ',col' → logprob: -9.536258697509766
    5. 'column' → logprob: -9.661258697509766
    6. ' ,' → logprob: -11.786258697509766
    7. 'cols' → logprob: -12.286258697509766
    8. ' column' → logprob: -13.411258697509766
    9. '	col' → logprob: -13.911258697509766
    10. '[col' → logprob: -13.911258697509766

Token 238: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' (adapté à ' col') → logprob: -0.00014048899174667895
    2. ' col' → logprob: -8.875140190124512
    3. 'column' → logprob: -14.375140190124512
    4. 'cols' → logprob: -17.375141143798828
    5. '	col' → logprob: -17.750141143798828
    6. '.col' → logprob: -18.500141143798828
    7. 'colm' → logprob: -19.000141143798828
    8. '_col' → logprob: -19.625141143798828
    9. '[col' → logprob: -20.125141143798828
    10. '```' → logprob: -20.500141143798828

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11694200336933136
    2. ' =' → logprob: -2.2419419288635254
    3. '=[]' → logprob: -5.866941928863525
    4. ',' → logprob: -7.366941928863525
    5. '[]' → logprob: -8.741942405700684
    6. '<|end|>' → logprob: -8.741942405700684
    7. '   ' → logprob: -9.366942405700684
    8. ')' → logprob: -9.366942405700684
    9. ']' → logprob: -9.866942405700684
    10. '[' → logprob: -10.741942405700684

Token 240: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -9.710618905955926e-05
    2. ' []' → logprob: -9.375097274780273
    3. '[]
' → logprob: -11.625097274780273
    4. '[' → logprob: -13.250097274780273
    5. '[]}' → logprob: -13.875097274780273
    6. '[]

' → logprob: -15.375097274780273
    7. '=[]' → logprob: -15.750097274780273
    8. '[])' → logprob: -15.875097274780273
    9. '([]' → logprob: -17.000097274780273
    10. '[],' → logprob: -17.875097274780273

Token 241: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4762711822986603
    2. 'data' → logprob: -1.101271152496338
    3. ' dist' → logprob: -3.976271152496338
    4. '   ' → logprob: -4.351271152496338
    5. ' data' → logprob: -4.476271152496338
    6. 'weight' → logprob: -6.476271152496338
    7. 'distance' → logprob: -6.601271152496338
    8. 'cost' → logprob: -8.726271629333496
    9. ' distance' → logprob: -9.351271629333496
    10. ' weight' → logprob: -9.476271629333496

Token 242: ' dist' (ID: 3601)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.23556426167488098
    2. 'dist' (adapté à ' dist') → logprob: -1.6105642318725586
    3. 'weight' → logprob: -5.235564231872559
    4. 'cost' → logprob: -5.860564231872559
    5. 'distance' → logprob: -6.360564231872559
    6. 'd' → logprob: -9.735564231872559
    7. 'weights' → logprob: -10.485564231872559
    8. 'dat' → logprob: -10.610564231872559
    9. '   ' → logprob: -11.110564231872559
    10. ' data' → logprob: -11.110564231872559

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029810892418026924
    2. ' =' → logprob: -3.529810905456543
    3. '=[]' → logprob: -10.029810905456543
    4. '[:]' → logprob: -12.404810905456543
    5. '[]' → logprob: -12.654810905456543
    6. '[' → logprob: -12.779810905456543
    7. '.append' → logprob: -13.529810905456543
    8. ',' → logprob: -13.654810905456543
    9. 's' → logprob: -13.779810905456543
    10. ']' → logprob: -14.279810905456543

Token 244: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -8.613945101387799e-05
    2. '[' → logprob: -9.750085830688477
    3. '[]
' → logprob: -11.375085830688477
    4. ' []' → logprob: -11.500085830688477
    5. '[])' → logprob: -13.000085830688477
    6. '[]

' → logprob: -13.000085830688477
    7. '[]}' → logprob: -13.625085830688477
    8. '0' → logprob: -15.125085830688477
    9. '[],' → logprob: -16.875085830688477
    10. '[:]' → logprob: -17.125085830688477

Token 245: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05975654348731041
    2. 'for' → logprob: -3.6847565174102783
    3. ' for' → logprob: -3.8097565174102783
    4. '    
' → logprob: -5.184756755828857
    5. '
' → logprob: -6.059756755828857
    6. '#' → logprob: -6.434756755828857
    7. ' directions' → logprob: -7.309756755828857
    8. 'dire' → logprob: -8.9347562789917
    9. 'neighbors' → logprob: -9.0597562789917
    10. '```' → logprob: -9.8097562789917

Token 246: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1000220775604248
    2. '   ' → logprob: -1.7250220775604248
    3. ' directions' → logprob: -1.7250220775604248
    4. ' for' → logprob: -1.8500220775604248
    5. 'dire' → logprob: -1.9750220775604248
    6. '#' → logprob: -4.350022315979004
    7. 'dirs' → logprob: -6.975022315979004
    8. ' #' → logprob: -8.350022315979004
    9. 'neighbors' → logprob: -8.725022315979004
    10. 'moves' → logprob: -9.225022315979004

Token 247: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06567613780498505
    2. 'dire' → logprob: -2.815676212310791
    3. '#' (adapté à ' #') → logprob: -5.940676212310791
    4. 'dirs' → logprob: -7.440676212310791
    5. 'dx' → logprob: -8.815675735473633
    6. '   ' → logprob: -9.315675735473633
    7. 'DIR' → logprob: -9.815675735473633
    8. 'D' → logprob: -10.315675735473633
    9. 'moves' → logprob: -10.315675735473633
    10. 'neighbors' → logprob: -10.565675735473633

Token 248: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0777483731508255
    2. 'dire' → logprob: -2.7027482986450195
    3. '#' → logprob: -5.0777482986450195
    4. 'dirs' → logprob: -7.4527482986450195
    5. 'moves' → logprob: -8.20274829864502
    6. 'dx' → logprob: -8.57774829864502
    7. 'def' → logprob: -9.32774829864502
    8. '   ' → logprob: -9.32774829864502
    9. 'For' → logprob: -9.82774829864502
    10. ' for' → logprob: -9.82774829864502

Token 249: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4692589044570923
    2. 'for' → logprob: -1.8442589044570923
    3. ' the' → logprob: -1.9692589044570923
    4. '<|end|>' → logprob: -3.8442587852478027
    5. ' graph' → logprob: -4.594258785247803
    6. '   ' → logprob: -4.594258785247803
    7. '#' → logprob: -4.844258785247803
    8. 'the' → logprob: -4.969258785247803
    9. ' #' → logprob: -5.219258785247803
    10. ' ' → logprob: -5.469258785247803

Token 250: ' adjacency' (ID: 177015)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.18897147476673126
    2. ' graph' → logprob: -1.8139715194702148
    3. 'edges' → logprob: -5.813971519470215
    4. 'adj' → logprob: -5.938971519470215
    5. ' edges' → logprob: -6.563971519470215
    6. ' adjacency' → logprob: -6.813971519470215
    7. 'for' → logprob: -7.813971519470215
    8. 'grid' → logprob: -8.438971519470215
    9. 'neighbors' → logprob: -9.563971519470215
    10. ' for' → logprob: -9.563971519470215

Token 251: ' matrix' (ID: 12248)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.811481773853302
    2. ' list' → logprob: -1.3114817142486572
    3. ' matrix' → logprob: -1.5614817142486572
    4. 'list' → logprob: -3.4364817142486572
    5. 'matrix' → logprob: -3.8114817142486572
    6. '_list' → logprob: -4.186481952667236
    7. '_matrix' → logprob: -5.936481952667236
    8. '   ' → logprob: -6.561481952667236
    9. '_lists' → logprob: -7.186481952667236
    10. ' matrices' → logprob: -7.686481952667236

Token 252: ' by' (ID: 656)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22083696722984314
    2. '   ' → logprob: -2.095836877822876
    3. 'for' → logprob: -2.595836877822876
    4. '
' → logprob: -8.220836639404297
    5. '    
' → logprob: -8.345836639404297
    6. '	for' → logprob: -10.345836639404297
    7. '<|end|>' → logprob: -11.220836639404297
    8. ',' → logprob: -11.470836639404297
    9. '    ' → logprob: -11.970836639404297
    10. '#' → logprob: -11.970836639404297

Token 253: ' adding' (ID: 12673)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42403531074523926
    2. ' for' → logprob: -1.1740353107452393
    3. ' iter' → logprob: -3.4240353107452393
    4. ' connecting' → logprob: -7.04903507232666
    5. ' considering' → logprob: -7.54903507232666
    6. 'iter' → logprob: -7.67403507232666
    7. ')' → logprob: -8.42403507232666
    8. '#' → logprob: -8.54903507232666
    9. 'For' → logprob: -8.79903507232666
    10. 'connecting' → logprob: -8.79903507232666

Token 254: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.005274191964417696
    2. 'edges' → logprob: -5.380274295806885
    3. '_edges' → logprob: -7.630274295806885
    4. ' for' → logprob: -10.505273818969727
    5. ' the' → logprob: -10.755273818969727
    6. ' neighbors' → logprob: -11.005273818969727
    7. 'for' → logprob: -11.255273818969727
    8. 'neighbors' → logprob: -11.255273818969727
    9. 'Edges' → logprob: -11.505273818969727
    10. ' all' → logprob: -11.505273818969727

Token 255: ' between' (ID: 2870)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10804153978824615
    2. 'for' → logprob: -2.608041524887085
    3. '   ' → logprob: -3.608041524887085
    4. '<|end|>' → logprob: -7.233041763305664
    5. ',' → logprob: -8.108041763305664
    6. '	for' → logprob: -8.608041763305664
    7. ' in' → logprob: -9.233041763305664
    8. ' with' → logprob: -9.983041763305664
    9. '#' → logprob: -10.358041763305664
    10. ' between' → logprob: -10.483041763305664

Token 256: ' adjacent' (ID: 39069)
  Prédit: ' adjacent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacent' → logprob: -0.2145843654870987
    2. 'adj' → logprob: -1.8395843505859375
    3. ' cells' → logprob: -3.8395843505859375
    4. ' neighboring' → logprob: -5.2145843505859375
    5. 'neighbor' → logprob: -5.9645843505859375
    6. 'cells' → logprob: -6.5895843505859375
    7. ' vertices' → logprob: -6.5895843505859375
    8. ' nodes' → logprob: -7.8395843505859375
    9. 'neighbors' → logprob: -8.214584350585938
    10. ' each' → logprob: -8.339584350585938

Token 257: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.05277292802929878
    2. 'cells' → logprob: -3.0527729988098145
    3. ' vertices' → logprob: -6.0527729988098145
    4. ' nodes' → logprob: -6.5527729988098145
    5. 'vertices' → logprob: -8.427772521972656
    6. 'nodes' → logprob: -9.177772521972656
    7. '_cells' → logprob: -10.552772521972656
    8. '   ' → logprob: -11.302772521972656
    9. ' ' → logprob: -11.927772521972656
    10. ')' → logprob: -11.927772521972656

Token 258: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4895140528678894
    2. '   ' → logprob: -1.2395141124725342
    3. 'for' → logprob: -2.364514112472534
    4. '
' → logprob: -6.239513874053955
    5. '    
' → logprob: -6.989513874053955
    6. ',' → logprob: -8.239514350891113
    7. '	for' → logprob: -9.114514350891113
    8. ' in' → logprob: -9.989514350891113
    9. ':' → logprob: -10.114514350891113
    10. '#' → logprob: -10.239514350891113

Token 259: 'down' (ID: 4653)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1404028981924057
    2. ' vertically' → logprob: -3.5154027938842773
    3. ' cells' → logprob: -3.6404027938842773
    4. ' in' → logprob: -3.8904027938842773
    5. 'h' → logprob: -4.390402793884277
    6. ' h' → logprob: -4.515402793884277
    7. ' )' → logprob: -4.640402793884277
    8. ' for' → logprob: -5.890402793884277
    9. ' horizontally' → logprob: -5.890402793884277
    10. ',' → logprob: -6.015402793884277

Token 260: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8154427409172058
    2. 'and' → logprob: -0.9404427409172058
    3. ',' → logprob: -2.4404428005218506
    4. ')' → logprob: -2.6904428005218506
    5. '   ' → logprob: -4.5654425621032715
    6. '),' → logprob: -7.8154425621032715
    7. 'or' → logprob: -8.44044303894043
    8. ' ,' → logprob: -8.44044303894043
    9. ' )' → logprob: -8.44044303894043
    10. '<|end|>' → logprob: -8.81544303894043

Token 261: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2519555985927582
    2. ' right' → logprob: -1.5019556283950806
    3. 'up' → logprob: -11.62695598602295
    4. '   ' → logprob: -12.37695598602295
    5. '	right' → logprob: -13.00195598602295
    6. ' up' → logprob: -13.25195598602295
    7. ' ' → logprob: -13.25195598602295
    8. 'left' → logprob: -13.50195598602295
    9. ',right' → logprob: -13.62695598602295
    10. 'Right' → logprob: -13.75195598602295

Token 262: ' directions' (ID: 24921)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029300961643457413
    2. '   ' → logprob: -3.7793009281158447
    3. ',' → logprob: -6.279301166534424
    4. ' for' → logprob: -6.529301166534424
    5. ')
' → logprob: -7.279301166534424
    6. 'for' → logprob: -7.404301166534424
    7. '),' → logprob: -7.404301166534424
    8. ' and' → logprob: -9.029300689697266
    9. '):' → logprob: -9.154300689697266
    10. ').' → logprob: -9.279300689697266

Token 263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011430807411670685
    2. '   ' → logprob: -5.386430740356445
    3. ' for' → logprob: -5.386430740356445
    4. ',' → logprob: -7.261430740356445
    5. '):' → logprob: -7.261430740356445
    6. 'for' → logprob: -7.511430740356445
    7. ' )' → logprob: -9.261430740356445
    8. ').' → logprob: -9.636430740356445
    9. ')
' → logprob: -10.136430740356445
    10. '),' → logprob: -11.011430740356445

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032729621976614
    2. ' for' → logprob: -3.7827296257019043
    3. 'for' → logprob: -5.032729625701904
    4. '    
' → logprob: -6.032729625701904
    5. '
' → logprob: -7.657729625701904
    6. '  
' → logprob: -11.657729148864746
    7. ',' → logprob: -11.907729148864746
    8. '	for' → logprob: -11.907729148864746
    9. '```' → logprob: -11.907729148864746
    10. '   
' → logprob: -12.157729148864746

Token 265: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.504601240158081
    2. ' for' → logprob: -1.004601240158081
    3. '   ' → logprob: -3.504601240158081
    4. '	for' → logprob: -13.50460147857666
    5. '    
' → logprob: -13.75460147857666
    6. ' ' → logprob: -13.75460147857666
    7. '```' → logprob: -15.25460147857666
    8. '    ' → logprob: -15.75460147857666
    9. '  ' → logprob: -15.87960147857666
    10. '
' → logprob: -16.129600524902344

Token 266: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6386469602584839
    2. ' h' → logprob: -0.7636469602584839
    3. 'i' → logprob: -5.638647079467773
    4. ' i' → logprob: -6.013647079467773
    5. '	h' → logprob: -12.138647079467773
    6. ' ' → logprob: -12.263647079467773
    7. '_h' → logprob: -12.263647079467773
    8. '   ' → logprob: -12.638647079467773
    9. 'H' → logprob: -13.388647079467773
    10. '0' → logprob: -13.638647079467773

Token 267: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005823683459311724
    2. 'in' → logprob: -5.505823612213135
    3. ' ' → logprob: -6.380823612213135
    4. '+' → logprob: -11.130824089050293
    5. '0' → logprob: -11.755824089050293
    6. ',' → logprob: -12.005824089050293
    7. '	in' → logprob: -12.505824089050293
    8. '   ' → logprob: -12.755824089050293
    9. ' h' → logprob: -12.880824089050293
    10. '1' → logprob: -13.005824089050293

Token 268: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196891888976097
    2. ' range' → logprob: -2.8119688034057617
    3. '0' → logprob: -13.811968803405762
    4. '(range' → logprob: -15.811968803405762
    5. '	range' → logprob: -16.311969757080078
    6. ' ' → logprob: -16.811969757080078
    7. '   ' → logprob: -18.311969757080078
    8. ')' → logprob: -18.811969757080078
    9. ' xrange' → logprob: -18.811969757080078
    10. '[' → logprob: -18.936969757080078

Token 269: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0005532711511477828
    2. '(' → logprob: -7.500553131103516
    3. 'H' → logprob: -15.500553131103516
    4. '(
' → logprob: -16.250553131103516
    5. '(h' → logprob: -17.625553131103516
    6. ' (' → logprob: -17.625553131103516
    7. '(len' → logprob: -18.125553131103516
    8. ' H' → logprob: -18.375553131103516
    9. '	H' → logprob: -19.375553131103516
    10. '   ' → logprob: -19.500553131103516

Token 270: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5253820419311523
    2. '):
' → logprob: -0.9003820419311523
    3. '   ' → logprob: -7.150382041931152
    4. '-' → logprob: -7.275382041931152
    5. '+' → logprob: -8.025382041931152
    6. ')' → logprob: -8.275382041931152
    7. ' -' → logprob: -9.400382041931152
    8. ' ' → logprob: -10.400382041931152
    9. ' ):' → logprob: -10.775382041931152
    10. '):
' → logprob: -11.025382041931152

Token 271: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3971655070781708
    2. ' for' → logprob: -1.1471655368804932
    3. 'for' → logprob: -4.647165298461914
    4. '       ' → logprob: -7.522165298461914
    5. '	for' → logprob: -9.772165298461914
    6. ' ' → logprob: -10.397165298461914
    7. '    ' → logprob: -11.397165298461914
    8. '  ' → logprob: -12.397165298461914
    9. '    
' → logprob: -13.022165298461914
    10. '   ' → logprob: -13.147165298461914

Token 272: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20412372052669525
    2. ' for' → logprob: -1.7041237354278564
    3. '   ' → logprob: -5.954123497009277
    4. '       ' → logprob: -9.329123497009277
    5. '           ' → logprob: -11.079123497009277
    6. ' ' → logprob: -12.579123497009277
    7. '	for' → logprob: -13.579123497009277
    8. '    ' → logprob: -14.079123497009277
    9. ' range' → logprob: -15.079123497009277
    10. 'w' → logprob: -15.079123497009277

Token 273: ' w' (ID: 286)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.014118727296590805
    2. 'W' → logprob: -4.889118671417236
    3. ' w' → logprob: -5.139118671417236
    4. 'w' → logprob: -7.764118671417236
    5. ' range' → logprob: -9.139119148254395
    6. ' ' → logprob: -10.014119148254395
    7. '    ' → logprob: -10.514119148254395
    8. '   ' → logprob: -11.514119148254395
    9. '(W' → logprob: -12.514119148254395
    10. ' (' → logprob: -12.764119148254395

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010700895451009274
    2. 'in' → logprob: -4.885700702667236
    3. ' ' → logprob: -6.510700702667236
    4. '+' → logprob: -6.760700702667236
    5. '    ' → logprob: -9.135701179504395
    6. '   ' → logprob: -9.260701179504395
    7. '0' → logprob: -9.885701179504395
    8. '        ' → logprob: -10.135701179504395
    9. '1' → logprob: -10.260701179504395
    10. ' +' → logprob: -10.385701179504395

Token 275: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759468674659729
    2. 'range' → logprob: -0.8259468674659729
    3. '(range' → logprob: -12.075946807861328
    4. ' W' → logprob: -14.575946807861328
    5. ' ' → logprob: -15.075946807861328
    6. 'W' → logprob: -15.075946807861328
    7. '(' → logprob: -15.325946807861328
    8. '   ' → logprob: -15.575946807861328
    9. '(W' → logprob: -16.575946807861328
    10. '0' → logprob: -16.700946807861328

Token 276: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.10249178111553192
    2. '(H' → logprob: -2.352491855621338
    3. '(' → logprob: -6.102491855621338
    4. 'W' → logprob: -10.35249137878418
    5. '(
' → logprob: -11.97749137878418
    6. '   ' → logprob: -12.97749137878418
    7. 'H' → logprob: -13.22749137878418
    8. ')' → logprob: -14.35249137878418
    9. '       ' → logprob: -14.72749137878418
    10. ' (' → logprob: -14.85249137878418

Token 277: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2659037113189697
    2. '):' → logprob: -1.6409037113189697
    3. '+' → logprob: -3.2659037113189697
    4. ' +' → logprob: -7.515903472900391
    5. '   ' → logprob: -8.01590347290039
    6. ')' → logprob: -8.51590347290039
    7. '-' → logprob: -8.51590347290039
    8. '       ' → logprob: -9.14090347290039
    9. '):
' → logprob: -9.51590347290039
    10. ' ):
' → logprob: -11.14090347290039

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008888727985322475
    2. '       ' → logprob: -4.7588887214660645
    3. ' if' → logprob: -8.508889198303223
    4. 'if' → logprob: -10.883889198303223
    5. ',' → logprob: -11.508889198303223
    6. '               ' → logprob: -11.633889198303223
    7. '	       ' → logprob: -11.633889198303223
    8. '   ' → logprob: -12.133889198303223
    9. '#' → logprob: -12.133889198303223
    10. '		' → logprob: -13.008889198303223

Token 279: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04635387286543846
    2. '           ' → logprob: -3.671353816986084
    3. ' if' → logprob: -4.046353816986084
    4. '#' (adapté à ' #') → logprob: -6.546353816986084
    5. 'current' → logprob: -7.921353816986084
    6. '               ' → logprob: -8.796354293823242
    7. '   ' → logprob: -8.921354293823242
    8. 'curr' → logprob: -9.421354293823242
    9. 'for' → logprob: -9.796354293823242
    10. 'v' → logprob: -9.921354293823242

Token 280: ' Add' (ID: 4063)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0175397377461195
    2. '#' → logprob: -4.2675395011901855
    3. ' if' → logprob: -6.2675395011901855
    4. '           ' → logprob: -6.8925395011901855
    5. 'current' → logprob: -8.767539978027344
    6. 'for' → logprob: -8.892539978027344
    7. 'If' → logprob: -9.517539978027344
    8. '               ' → logprob: -10.267539978027344
    9. ' #' → logprob: -11.267539978027344
    10. 'curr' → logprob: -11.267539978027344

Token 281: ' an' (ID: 448)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.252907395362854
    2. '_edges' → logprob: -2.8779072761535645
    3. 'edges' → logprob: -3.1279072761535645
    4. ' if' → logprob: -3.2529072761535645
    5. 'if' → logprob: -4.1279072761535645
    6. '#' → logprob: -4.8779072761535645
    7. 'down' → logprob: -5.1279072761535645
    8. 'h' → logprob: -5.2529072761535645
    9. '1' → logprob: -5.5029072761535645
    10. ' an' → logprob: -5.6279072761535645

Token 282: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.024641944095492363
    2. 'edge' → logprob: -3.774641990661621
    3. '_edge' → logprob: -7.149641990661621
    4. ' if' → logprob: -8.899641990661621
    5. 'if' → logprob: -9.524641990661621
    6. 'd' → logprob: -10.274641990661621
    7. '_' → logprob: -10.399641990661621
    8. ' edges' → logprob: -10.524641990661621
    9. '   ' → logprob: -10.649641990661621
    10. ' ' → logprob: -10.774641990661621

Token 283: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.40301454067230225
    2. 'to' → logprob: -2.278014659881592
    3. ' if' → logprob: -2.528014659881592
    4. ' for' → logprob: -3.153014659881592
    5. 'from' → logprob: -3.278014659881592
    6. ' from' → logprob: -3.403014659881592
    7. '           ' → logprob: -4.153014659881592
    8. 'if' → logprob: -5.528014659881592
    9. 'for' → logprob: -5.528014659881592
    10. ',' → logprob: -6.653014659881592

Token 284: ' the' (ID: 290)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.49525928497314453
    2. '(h' → logprob: -1.7452592849731445
    3. ' h' → logprob: -1.9952592849731445
    4. ' the' → logprob: -3.7452592849731445
    5. 'w' → logprob: -3.8702592849731445
    6. 'the' → logprob: -4.3702592849731445
    7. '[h' → logprob: -5.1202592849731445
    8. ' (' → logprob: -5.3702592849731445
    9. 'down' → logprob: -5.9952592849731445
    10. 'if' → logprob: -6.4952592849731445

Token 285: ' cell' (ID: 4206)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.9659479856491089
    2. 'right' → logprob: -1.2159479856491089
    3. 'neighbor' → logprob: -2.4659481048583984
    4. 'h' → logprob: -2.5909481048583984
    5. 'if' → logprob: -2.8409481048583984
    6. ' right' → logprob: -3.3409481048583984
    7. ' down' → logprob: -4.215948104858398
    8. ' neighbor' → logprob: -4.465948104858398
    9. 'w' → logprob: -4.715948104858398
    10. 'row' → logprob: -5.090948104858398

Token 286: ' below' (ID: 4895)
  Prédit: ' below'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' below' → logprob: -0.05606745183467865
    2. 'below' → logprob: -3.93106746673584
    3. ' on' → logprob: -4.05606746673584
    4. '(h' → logprob: -5.18106746673584
    5. '           ' → logprob: -5.68106746673584
    6. ' at' → logprob: -5.80606746673584
    7. ' (' → logprob: -6.30606746673584
    8. 'down' → logprob: -6.55606746673584
    9. ' to' → logprob: -7.05606746673584
    10. 'h' → logprob: -8.05606746673584

Token 287: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3214927911758423
    2. '           ' → logprob: -1.3214927911758423
    3. 'if' → logprob: -5.071492671966553
    4. ',' → logprob: -6.446492671966553
    5. ' (' → logprob: -9.571493148803711
    6. '       ' → logprob: -9.821493148803711
    7. '               ' → logprob: -10.196493148803711
    8. '   ' → logprob: -10.196493148803711
    9. '		' → logprob: -10.571493148803711
    10. '	if' → logprob: -10.696493148803711

Token 288: 'if' (ID: 366)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07568337023258209
    2. ' h' → logprob: -3.700683355331421
    3. 'if' → logprob: -3.825683355331421
    4. ' if' → logprob: -3.950683355331421
    5. ')' → logprob: -5.95068359375
    6. ',' → logprob: -6.32568359375
    7. '(h' → logprob: -6.57568359375
    8. '   ' → logprob: -7.82568359375
    9. '),' → logprob: -8.07568359375
    10. ' (' → logprob: -8.70068359375

Token 289: ' it' (ID: 480)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2811760902404785
    2. ' h' → logprob: -1.4061760902404785
    3. ')' → logprob: -12.15617561340332
    4. ' not' → logprob: -12.15617561340332
    5. '   ' → logprob: -12.65617561340332
    6. '(h' → logprob: -12.78117561340332
    7. '	h' → logprob: -12.90617561340332
    8. '_h' → logprob: -12.90617561340332
    9. '```' → logprob: -14.03117561340332
    10. 'w' → logprob: -14.40617561340332

Token 290: ' exists' (ID: 13031)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2875498831272125
    2. '+' → logprob: -2.0375499725341797
    3. ' exists' → logprob: -2.6625499725341797
    4. '<' → logprob: -4.03754997253418
    5. 'h' → logprob: -5.16254997253418
    6. ' +' → logprob: -5.41254997253418
    7. 's' → logprob: -5.41254997253418
    8. 'w' → logprob: -5.53754997253418
    9. '<h' → logprob: -5.78754997253418
    10. ' is' → logprob: -5.91254997253418

Token 291: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10424868762493134
    2. '):
' → logprob: -3.6042487621307373
    3. ' and' → logprob: -3.7292487621307373
    4. '):' → logprob: -3.9792487621307373
    5. '           ' → logprob: -4.104248523712158
    6. ')
' → logprob: -4.854248523712158
    7. ' if' → logprob: -5.729248523712158
    8. 'if' → logprob: -7.729248523712158
    9. ',' → logprob: -7.854248523712158
    10. '       ' → logprob: -8.854249000549316

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09383249282836914
    2. ' if' → logprob: -2.468832492828369
    3. '       ' → logprob: -5.718832492828369
    4. '               ' → logprob: -7.843832492828369
    5. 'if' → logprob: -8.218832015991211
    6. '   ' → logprob: -8.343832015991211
    7. ',' → logprob: -8.593832015991211
    8. '            
' → logprob: -8.718832015991211
    9. '```' → logprob: -9.468832015991211
    10. '<|end|>' → logprob: -9.968832015991211

Token 293: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20846551656723022
    2. ' if' → logprob: -1.708465576171875
    3. '           ' → logprob: -4.958465576171875
    4. '               ' → logprob: -13.708465576171875
    5. '   ' → logprob: -13.958465576171875
    6. '       ' → logprob: -13.958465576171875
    7. '```' → logprob: -15.458465576171875
    8. '            
' → logprob: -15.583465576171875
    9. '            ' → logprob: -15.833465576171875
    10. 'If' → logprob: -16.833465576171875

Token 294: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.048593275249004364
    2. 'h' → logprob: -3.048593282699585
    3. '	h' → logprob: -12.798593521118164
    4. '(h' → logprob: -13.423593521118164
    5. ' ' → logprob: -14.673593521118164
    6. '   ' → logprob: -14.923593521118164
    7. ' (' → logprob: -15.298593521118164
    8. '    ' → logprob: -15.548593521118164
    9. '_h' → logprob: -15.798593521118164
    10. '<h' → logprob: -16.048593521118164

Token 295: ' !=' (ID: 1666)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47279688715934753
    2. ' +' → logprob: -1.22279691696167
    3. ' <' → logprob: -2.59779691696167
    4. '<' → logprob: -4.84779691696167
    5. ' ' → logprob: -10.847796440124512
    6. ' ' → logprob: -11.222796440124512
    7. '   ' → logprob: -12.347796440124512
    8. '0' → logprob: -12.597796440124512
    9. '[' → logprob: -13.347796440124512
    10. '<n' → logprob: -13.597796440124512

Token 296: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04859986528754234
    2. ' H' → logprob: -3.0485999584198
    3. '0' → logprob: -12.298600196838379
    4. '   ' → logprob: -12.798600196838379
    5. '	H' → logprob: -12.923600196838379
    6. ' ' → logprob: -13.423600196838379
    7. '(H' → logprob: -14.298600196838379
    8. '  ' → logprob: -15.923600196838379
    9. '<H' → logprob: -16.423599243164062
    10. '           ' → logprob: -16.673599243164062

Token 297: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010057319886982441
    2. ' -' → logprob: -4.63505744934082
    3. '1' → logprob: -8.13505744934082
    4. ' ' → logprob: -12.63505744934082
    5. '   ' → logprob: -12.63505744934082
    6. '       ' → logprob: -14.51005744934082
    7. '```' → logprob: -15.13505744934082
    8. '           ' → logprob: -15.38505744934082
    9. '−' → logprob: -15.76005744934082
    10. '  ' → logprob: -16.63505744934082

Token 298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.87501335144043
    4. '```' → logprob: -17.50001335144043
    5. '
' → logprob: -19.00001335144043
    6. '  ' → logprob: -19.25001335144043
    7. '۱' → logprob: -20.37501335144043
    8. '１' → logprob: -20.43751335144043
    9. '    ' → logprob: -20.62501335144043
    10. '2' → logprob: -20.68751335144043

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.250019073486328
    4. '```' → logprob: -16.812519073486328
    5. '  ' → logprob: -17.250019073486328
    6. '2' → logprob: -18.312519073486328
    7. '
' → logprob: -18.312519073486328
    8. '    ' → logprob: -18.562519073486328
    9. '       ' → logprob: -18.625019073486328
    10. '-' → logprob: -18.937519073486328

Token 300: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1089206114411354
    2. ':
' → logprob: -2.3589205741882324
    3. ' and' → logprob: -5.233920574188232
    4. '):' → logprob: -6.483920574188232
    5. '):
' → logprob: -6.608920574188232
    6. '           ' → logprob: -8.60892105102539
    7. ')' → logprob: -9.10892105102539
    8. ',' → logprob: -10.10892105102539
    9. 'and' → logprob: -10.10892105102539
    10. '               ' → logprob: -10.60892105102539

Token 301: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6240217089653015
    2. ':
' → logprob: -1.3740217685699463
    3. ':' → logprob: -2.6240217685699463
    4. ' and' → logprob: -2.8740217685699463
    5. ',' → logprob: -3.3740217685699463
    6. '           ' → logprob: -4.874021530151367
    7. ' :
' → logprob: -4.874021530151367
    8. '[row' → logprob: -5.249021530151367
    9. '                
' → logprob: -5.249021530151367
    10. ' ' → logprob: -5.374021530151367

Token 302: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.3547745645046234
    2. 'cost' → logprob: -2.1047744750976562
    3. ' row' → logprob: -2.6047744750976562
    4. ' cost' → logprob: -2.9797744750976562
    5. 'weight' → logprob: -3.7297744750976562
    6. '                   ' → logprob: -4.604774475097656
    7. ' weight' → logprob: -5.854774475097656
    8. 'color' → logprob: -5.979774475097656
    9. '               ' → logprob: -6.354774475097656
    10. 'c' → logprob: -6.479774475097656

Token 303: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031917323358356953
    2. '.' → logprob: -5.753191947937012
    3. '.extend' → logprob: -12.128191947937012
    4. 'append' → logprob: -12.253191947937012
    5. ' .' → logprob: -12.753191947937012
    6. ').' → logprob: -15.253191947937012
    7. '].' → logprob: -15.378191947937012
    8. '.app' → logprob: -15.753191947937012
    9. '.ap' → logprob: -16.378190994262695
    10. '.Append' → logprob: -16.503190994262695

Token 304: '(co' (ID: 41772)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.0031970853451639414
    2. ' co' → logprob: -5.753197193145752
    3. '   ' → logprob: -11.128196716308594
    4. '(co' → logprob: -12.378196716308594
    5. '               ' → logprob: -15.628196716308594
    6. '           ' → logprob: -16.628196716308594
    7. ' ' → logprob: -17.003196716308594
    8. '```' → logprob: -17.128196716308594
    9. '       ' → logprob: -17.503196716308594
    10. '                   ' → logprob: -17.753196716308594

Token 305: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -5.550411151489243e-05
    2. 'w' → logprob: -10.875055313110352
    3. '_number' → logprob: -10.875055313110352
    4. '_' → logprob: -12.000055313110352
    5. '_n' → logprob: -12.375055313110352
    6. 'num' → logprob: -13.375055313110352
    7. 's' → logprob: -13.875055313110352
    8. '_row' → logprob: -14.125055313110352
    9. ' _' → logprob: -14.625055313110352
    10. '_NUM' → logprob: -14.750055313110352

Token 306: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00017004783148877323
    2. '(' → logprob: -9.75016975402832
    3. ')' → logprob: -9.87516975402832
    4. ')(' → logprob: -10.12516975402832
    5. 'h' → logprob: -11.00016975402832
    6. ' (' → logprob: -13.37516975402832
    7. ',h' → logprob: -14.00016975402832
    8. '(H' → logprob: -15.25016975402832
    9. '(
' → logprob: -15.75016975402832
    10. '/h' → logprob: -16.12516975402832

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3294656276702881
    2. '+' → logprob: -1.454465627670288
    3. ' +' → logprob: -3.579465627670288
    4. ',w' → logprob: -4.454465866088867
    5. ' ,' → logprob: -5.204465866088867
    6. '   ' → logprob: -6.954465866088867
    7. ' ' → logprob: -7.454465866088867
    8. ',h' → logprob: -8.454465866088867
    9. ')' → logprob: -9.829465866088867
    10. '+w' → logprob: -10.079465866088867

Token 308: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00021605310030281544
    2. ' w' → logprob: -8.500216484069824
    3. '   ' → logprob: -12.375216484069824
    4. '0' → logprob: -12.375216484069824
    5. '1' → logprob: -13.875216484069824
    6. '(w' → logprob: -14.500216484069824
    7. '	w' → logprob: -14.875216484069824
    8. '    ' → logprob: -14.875216484069824
    9. ' ' → logprob: -15.250216484069824
    10. ')' → logprob: -15.250216484069824

Token 309: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.030136777088046074
    2. '))
' → logprob: -4.155136585235596
    3. ')' → logprob: -4.280136585235596
    4. ' ))' → logprob: -9.905137062072754
    5. '),' → logprob: -10.780137062072754
    6. '+' → logprob: -10.780137062072754
    7. ')
' → logprob: -11.030137062072754
    8. '))

' → logprob: -11.405137062072754
    9. '   ' → logprob: -11.780137062072754
    10. ' ))
' → logprob: -11.905137062072754

Token 310: '               ' (ID: 506)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.05367502570152283
    2. ' col' → logprob: -3.4286749362945557
    3. ')
' → logprob: -4.178675174713135
    4. ')' → logprob: -5.803675174713135
    5. '               ' → logprob: -6.928675174713135
    6. ',' → logprob: -8.553674697875977
    7. ',col' → logprob: -8.803674697875977
    8. '[col' → logprob: -9.803674697875977
    9. '),' → logprob: -10.053674697875977
    10. 'row' → logprob: -11.303674697875977

Token 311: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' (adapté à ' col') → logprob: -4.320199877838604e-07
    2. ' col' → logprob: -14.75
    3. 'column' → logprob: -20.5
    4. '   ' → logprob: -21.0
    5. '	col' → logprob: -21.25
    6. 'co' → logprob: -21.625
    7. '.col' → logprob: -22.125
    8. 'colm' → logprob: -22.25
    9. 'coln' → logprob: -22.5
    10. 'coll' → logprob: -22.625

Token 312: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02060787007212639
    2. '.' → logprob: -3.8956079483032227
    3. ' .' → logprob: -10.395607948303223
    4. ').' → logprob: -10.520607948303223
    5. '<|end|>' → logprob: -12.895607948303223
    6. '.app' → logprob: -13.145607948303223
    7. '().' → logprob: -14.020607948303223
    8. '.extend' → logprob: -14.395607948303223
    9. 'append' → logprob: -14.520607948303223
    10. '.Append' → logprob: -14.520607948303223

Token 313: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.04861268773674965
    2. 'co' → logprob: -3.048612594604492
    3. ' co' → logprob: -10.673612594604492
    4. '/co' → logprob: -14.048612594604492
    5. '(
' → logprob: -14.423612594604492
    6. '_co' → logprob: -15.298612594604492
    7. '(c' → logprob: -15.923612594604492
    8. '(' → logprob: -16.298612594604492
    9. ' (' → logprob: -16.298612594604492
    10. '   ' → logprob: -16.673612594604492

Token 314: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -4.1080467781284824e-05
    2. 'num' → logprob: -10.250041007995605
    3. 'Num' → logprob: -12.375041007995605
    4. 'w' → logprob: -14.375041007995605
    5. '(h' → logprob: -15.500041007995605
    6. 'um' → logprob: -16.000041961669922
    7. '_NUM' → logprob: -16.000041961669922
    8. '(_' → logprob: -16.625041961669922
    9. '(w' → logprob: -17.000041961669922
    10. 'm' → logprob: -17.000041961669922

Token 315: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0002619318547658622
    2. 'h' → logprob: -8.250262260437012
    3. '(' → logprob: -14.250262260437012
    4. '((' → logprob: -17.375261306762695
    5. '[h' → logprob: -17.500261306762695
    6. ' h' → logprob: -18.375261306762695
    7. ')' → logprob: -18.625261306762695
    8. '(
' → logprob: -18.625261306762695
    9. '```' → logprob: -18.625261306762695
    10. ' (' → logprob: -18.750261306762695

Token 316: ' +' (ID: 659)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00835972186177969
    2. '+' → logprob: -5.508359909057617
    3. 'h' → logprob: -6.258359909057617
    4. '(' → logprob: -6.508359909057617
    5. ' +' → logprob: -7.133359909057617
    6. '+h' → logprob: -10.508359909057617
    7. ' (' → logprob: -11.008359909057617
    8. ' h' → logprob: -12.008359909057617
    9. '1' → logprob: -12.758359909057617
    10. ')' → logprob: -12.758359909057617

Token 317: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008564929477870464
    2. ' ' → logprob: -5.0085649490356445
    3. 'w' → logprob: -6.3835649490356445
    4. ' w' → logprob: -8.883564949035645
    5. '   ' → logprob: -12.008564949035645
    6. 'h' → logprob: -12.883564949035645
    7. ',' → logprob: -13.008564949035645
    8. ')' → logprob: -13.133564949035645
    9. ' ,' → logprob: -13.508564949035645
    10. '<|end|>' → logprob: -13.758564949035645

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.000018119812012
    3. 'w' → logprob: -14.250018119812012
    4. '   ' → logprob: -15.250018119812012
    5. '0' → logprob: -18.000017166137695
    6. '
' → logprob: -18.250017166137695
    7. '```' → logprob: -18.500017166137695
    8. '       ' → logprob: -19.000017166137695
    9. '2' → logprob: -19.500017166137695
    10. ' w' → logprob: -19.625017166137695

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000624514592345804
    2. ' ,' → logprob: -8.125624656677246
    3. ',w' → logprob: -8.125624656677246
    4. ',h' → logprob: -10.500624656677246
    5. ',v' → logprob: -14.250624656677246
    6. ',j' → logprob: -14.250624656677246
    7. ',n' → logprob: -14.625624656677246
    8. ',
' → logprob: -14.625624656677246
    9. ' ' → logprob: -14.875624656677246
    10. '(' → logprob: -15.125624656677246

Token 320: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.008614926598966122
    2. ' w' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.633614540100098
    4. '	w' → logprob: -16.133615493774414
    5. 'W' → logprob: -16.758615493774414
    6. ' ' → logprob: -17.008615493774414
    7. '    ' → logprob: -17.758615493774414
    8. '0' → logprob: -18.133615493774414
    9. '       ' → logprob: -18.383615493774414
    10. '(w' → logprob: -18.383615493774414

Token 321: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22477270662784576
    2. '))' → logprob: -1.8497726917266846
    3. '))
' → logprob: -3.3497726917266846
    4. ')
' → logprob: -4.724772930145264
    5. '               ' → logprob: -10.349772453308105
    6. '))
' → logprob: -11.849772453308105
    7. ')
' → logprob: -12.849772453308105
    8. '))

' → logprob: -12.974772453308105
    9. ' )' → logprob: -13.099772453308105
    10. ')}' → logprob: -13.099772453308105

Token 322: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036205046344548464
    2. '                
' → logprob: -6.253620624542236
    3. 'dist' → logprob: -7.128620624542236
    4. '                ' → logprob: -7.378620624542236
    5. ',' → logprob: -9.753620147705078
    6. '           ' → logprob: -10.128620147705078
    7. '              ' → logprob: -10.628620147705078
    8. 'distance' → logprob: -10.628620147705078
    9. '                   ' → logprob: -10.878620147705078
    10. ')' → logprob: -10.878620147705078

Token 323: ' #' (ID: 1069)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8387963771820068
    2. 'dist' → logprob: -1.2137963771820068
    3. '0' → logprob: -1.3387963771820068
    4. '               ' → logprob: -5.963796615600586
    5. ' dist' → logprob: -6.213796615600586
    6. ' ' → logprob: -6.338796615600586
    7. '                   ' → logprob: -7.713796615600586
    8. '   ' → logprob: -8.088796615600586
    9. 'int' → logprob: -8.213796615600586
    10. '(' → logprob: -8.338796615600586

Token 324: ' Edge' (ID: 16396)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04403446614742279
    2. '1' → logprob: -3.419034481048584
    3. '0' → logprob: -5.294034481048584
    4. ' dist' → logprob: -5.419034481048584
    5. 'int' → logprob: -8.044034004211426
    6. ' ' → logprob: -8.544034004211426
    7. '   ' → logprob: -9.044034004211426
    8. '(' → logprob: -9.544034004211426
    9. '(dist' → logprob: -9.794034004211426
    10. 'if' → logprob: -10.419034004211426

Token 325: ' cost' (ID: 3097)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5999926328659058
    2. 'dist' → logprob: -1.0999926328659058
    3. '_dist' → logprob: -3.3499927520751953
    4. 'cost' → logprob: -3.5999927520751953
    5. 'weight' → logprob: -3.9749927520751953
    6. '_cost' → logprob: -4.224992752075195
    7. 'append' → logprob: -4.724992752075195
    8. '_weight' → logprob: -4.849992752075195
    9. '=' → logprob: -6.599992752075195
    10. 'distance' → logprob: -7.224992752075195

Token 326: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.336154580116272
    2. '.append' → logprob: -1.836154580116272
    3. '=' → logprob: -2.5861544609069824
    4. '0' → logprob: -3.9611544609069824
    5. ' ' → logprob: -4.211154460906982
    6. '               ' → logprob: -4.836154460906982
    7. '1' → logprob: -5.461154460906982
    8. '                ' → logprob: -6.961154460906982
    9. 'append' → logprob: -7.211154460906982
    10. '.' → logprob: -7.586154460906982

Token 327: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2478911280632019
    2. '0' → logprob: -1.8728911876678467
    3. ' ' → logprob: -3.1228911876678467
    4. 'int' → logprob: -4.372890949249268
    5. ' int' → logprob: -4.747890949249268
    6. '   ' → logprob: -8.872891426086426
    7. '(' → logprob: -8.872891426086426
    8. ' (' → logprob: -9.122891426086426
    9. 's' → logprob: -9.747891426086426
    10. '               ' → logprob: -10.247891426086426

Token 328: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1779693067073822
    2. '0' → logprob: -1.9279693365097046
    3. 'int' → logprob: -4.427969455718994
    4. ' ' → logprob: -5.427969455718994
    5. ' int' → logprob: -7.427969455718994
    6. 's' → logprob: -8.177968978881836
    7. '(' → logprob: -8.927968978881836
    8. '   ' → logprob: -8.927968978881836
    9. '(int' → logprob: -10.302968978881836
    10. 'dist' → logprob: -10.927968978881836

Token 329: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5759441256523132
    2. ' if' → logprob: -0.8259441256523132
    3. '               ' → logprob: -12.575943946838379
    4. '                ' → logprob: -14.700943946838379
    5. '                   ' → logprob: -15.450943946838379
    6. '                               ' → logprob: -16.075944900512695
    7. ' ' → logprob: -16.325944900512695
    8. '                           ' → logprob: -16.450944900512695
    9. '   ' → logprob: -16.575944900512695
    10. '0' → logprob: -16.950944900512695

Token 330: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006718809716403484
    2. ' s' → logprob: -5.006718635559082
    3. '(s' → logprob: -13.131718635559082
    4. '   ' → logprob: -14.256718635559082
    5. '`s' → logprob: -15.756718635559082
    6. ''s' → logprob: -16.1317195892334
    7. '[s' → logprob: -16.2567195892334
    8. '	s' → logprob: -16.2567195892334
    9. ' ' → logprob: -16.6317195892334
    10. '```' → logprob: -17.0067195892334

Token 331: ' symbols' (ID: 29502)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04046962410211563
    2. 'colors' → logprob: -3.9154696464538574
    3. ' s' → logprob: -4.665469646453857
    4. 'color' → logprob: -5.040469646453857
    5. ' colors' → logprob: -6.165469646453857
    6. 'current' → logprob: -7.415469646453857
    7. ' color' → logprob: -7.665469646453857
    8. 'same' → logprob: -8.7904691696167
    9. 'cell' → logprob: -8.9154691696167
    10. ' current' → logprob: -9.0404691696167

Token 332: ' are' (ID: 553)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0319827795028687
    2. '[h' → logprob: -1.1569827795028687
    3. ' at' → logprob: -2.031982898712158
    4. ' are' → logprob: -2.156982898712158
    5. 'at' → logprob: -3.781982898712158
    6. 'are' → logprob: -3.906982898712158
    7. '[s' → logprob: -4.156982898712158
    8. ' match' → logprob: -4.781982898712158
    9. ' s' → logprob: -5.156982898712158
    10. 'match' → logprob: -5.906982898712158

Token 333: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.14469654858112335
    2. ' the' → logprob: -2.0196964740753174
    3. 'same' → logprob: -6.5196967124938965
    4. 's' → logprob: -8.269696235656738
    5. ' identical' → logprob: -8.644696235656738
    6. ' same' → logprob: -10.144696235656738
    7. ' equal' → logprob: -10.519696235656738
    8. 'equal' → logprob: -10.644696235656738
    9. 'ident' → logprob: -11.644696235656738
    10. ' s' → logprob: -11.769696235656738

Token 334: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.25195056200027466
    2. ' same' → logprob: -1.5019505023956299
    3. '_same' → logprob: -12.25195026397705
    4. 's' → logprob: -13.12695026397705
    5. '.same' → logprob: -13.12695026397705
    6. ' ' → logprob: -13.25195026397705
    7. 'Same' → logprob: -13.37695026397705
    8. 'the' → logprob: -13.50195026397705
    9. '<|end|>' → logprob: -14.00195026397705
    10. 'equal' → logprob: -14.12695026397705

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6960132718086243
    2. ' else' → logprob: -1.0710132122039795
    3. 'else' → logprob: -1.9460132122039795
    4. '               ' → logprob: -5.196013450622559
    5. ' or' → logprob: -5.446013450622559
    6. ' and' → logprob: -6.071013450622559
    7. 'and' → logprob: -7.071013450622559
    8. ' ' → logprob: -7.196013450622559
    9. '                ' → logprob: -7.446013450622559
    10. '                   ' → logprob: -8.196013450622559

Token 336: ' else' (ID: 1203)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024746723473072052
    2. ' ' → logprob: -4.024746894836426
    3. ' else' → logprob: -5.774746894836426
    4. 'else' → logprob: -6.149746894836426
    5. '0' → logprob: -7.024746894836426
    6. '               ' → logprob: -8.524746894836426
    7. '                   ' → logprob: -9.774746894836426
    8. '                ' → logprob: -9.899746894836426
    9. '                    ' → logprob: -10.899746894836426
    10. '```' → logprob: -11.149746894836426

Token 337: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04305719956755638
    2. ' ' → logprob: -3.1680572032928467
    3. '   ' → logprob: -10.043057441711426
    4. '               ' → logprob: -12.918057441711426
    5. '  ' → logprob: -13.043057441711426
    6. '```' → logprob: -13.168057441711426
    7. ' ' → logprob: -13.543057441711426
    8. '                   ' → logprob: -13.668057441711426
    9. '0' → logprob: -13.980557441711426
    10. '           ' → logprob: -14.105557441711426

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.221884101862088e-05
    2. ' ' → logprob: -9.375092506408691
    3. '   ' → logprob: -12.500092506408691
    4. '+' → logprob: -13.750092506408691
    5. '
' → logprob: -14.500092506408691
    6. '```' → logprob: -14.875092506408691
    7. 'cost' → logprob: -15.312592506408691
    8. '  ' → logprob: -15.500092506408691
    9. 'row' → logprob: -16.062591552734375
    10. '`' → logprob: -16.062591552734375

Token 339: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3753846287727356
    2. ',' → logprob: -2.000384569168091
    3. 'if' → logprob: -2.250384569168091
    4. '               ' → logprob: -3.125384569168091
    5. 'dist' → logprob: -4.50038480758667
    6. ')' → logprob: -4.87538480758667
    7. '<|end|>' → logprob: -5.62538480758667
    8. ',
' → logprob: -6.75038480758667
    9. '           ' → logprob: -7.37538480758667
    10. '.' → logprob: -7.75038480758667

Token 340: 'color' (ID: 4991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052895497530698776
    2. ' )' → logprob: -3.6778955459594727
    3. '1' → logprob: -4.302895545959473
    4. ')
' → logprob: -4.802895545959473
    5. ' )
' → logprob: -6.552895545959473
    6. '0' → logprob: -7.052895545959473
    7. ' if' → logprob: -7.302895545959473
    8. ' ' → logprob: -7.302895545959473
    9. 'int' → logprob: -8.427895545959473
    10. '```' → logprob: -9.052895545959473

Token 341: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.15151084959506989
    2. ')' → logprob: -2.7765109539031982
    3. '_change' → logprob: -3.1515109539031982
    4. 'change' → logprob: -3.4015109539031982
    5. ' changes' → logprob: -7.776510715484619
    6. '-change' → logprob: -7.776510715484619
    7. ')
' → logprob: -8.276511192321777
    8. ' )' → logprob: -8.526511192321777
    9. '_changes' → logprob: -8.651511192321777
    10. '   ' → logprob: -8.651511192321777

Token 342: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016084164381027222
    2. ')
' → logprob: -6.501608371734619
    3. '               ' → logprob: -9.876608848571777
    4. '           ' → logprob: -11.251608848571777
    5. ' )' → logprob: -11.251608848571777
    6. '                   ' → logprob: -12.001608848571777
    7. ' if' → logprob: -12.251608848571777
    8. '<|end|>' → logprob: -12.501608848571777
    9. 'if' → logprob: -13.376608848571777
    10. '')' → logprob: -13.501608848571777

Token 343: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.19582267105579376
    2. '0' → logprob: -2.3208227157592773
    3. ' dist' → logprob: -3.1958227157592773
    4. '1' → logprob: -3.5708227157592773
    5. ' ' → logprob: -4.820822715759277
    6. 'int' → logprob: -6.445822715759277
    7. ' int' → logprob: -8.070822715759277
    8. '   ' → logprob: -8.195822715759277
    9. '               ' → logprob: -9.320822715759277
    10. '(' → logprob: -9.320822715759277

Token 345: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001929228543303907
    2. '.' → logprob: -6.25192928314209
    3. ' .' → logprob: -14.87692928314209
    4. '.app' → logprob: -16.126928329467773
    5. ').' → logprob: -17.001928329467773
    6. '.extend' → logprob: -17.001928329467773
    7. '.push' → logprob: -17.376928329467773
    8. '.add' → logprob: -18.126928329467773
    9. '.ap' → logprob: -18.626928329467773
    10. ')' → logprob: -19.126928329467773

Token 346: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231437683105469
    2. '1' → logprob: -1.2731437683105469
    3. '(' → logprob: -2.398143768310547
    4. '(int' → logprob: -4.273143768310547
    5. 'int' → logprob: -4.523143768310547
    6. ' ' → logprob: -4.773143768310547
    7. ' int' → logprob: -5.898143768310547
    8. '(s' → logprob: -8.273143768310547
    9. '   ' → logprob: -8.648143768310547
    10. ' (' → logprob: -10.023143768310547

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.554627537727356
    2. '1' → logprob: -1.054627537727356
    3. ' ' → logprob: -3.4296274185180664
    4. 'int' → logprob: -3.4296274185180664
    5. ' int' → logprob: -4.429627418518066
    6. 's' → logprob: -8.054627418518066
    7. '(int' → logprob: -8.929627418518066
    8. '   ' → logprob: -9.554627418518066
    9. '(' → logprob: -9.929627418518066
    10. ' s' → logprob: -10.179627418518066

Token 348: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03818148747086525
    2. 'if' → logprob: -3.2881815433502197
    3. ')' → logprob: -8.91318130493164
    4. '           ' → logprob: -13.53818130493164
    5. '   ' → logprob: -13.53818130493164
    6. '               ' → logprob: -14.28818130493164
    7. ')
' → logprob: -14.53818130493164
    8. ' ' → logprob: -15.28818130493164
    9. '+' → logprob: -15.41318130493164
    10. '	if' → logprob: -15.41318130493164

Token 349: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001093841710826382
    2. ' s' → logprob: -9.125109672546387
    3. '(s' → logprob: -15.000109672546387
    4. '   ' → logprob: -16.62510871887207
    5. '[s' → logprob: -18.37510871887207
    6. '{s' → logprob: -18.87510871887207
    7. '`s' → logprob: -19.00010871887207
    8. '               ' → logprob: -19.25010871887207
    9. '           ' → logprob: -19.50010871887207
    10. '	s' → logprob: -19.50010871887207

Token 350: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -9.088346359931165e-07
    2. 'h' → logprob: -14.000000953674316
    3. '[' → logprob: -17.375
    4. '```' → logprob: -18.5
    5. '   ' → logprob: -19.0
    6. '[w' → logprob: -19.375
    7. '[y' → logprob: -19.625
    8. '[s' → logprob: -19.875
    9. ')[' → logprob: -19.875
    10. '[
' → logprob: -20.25

Token 351: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -8.280175097752362e-05
    2. ']' → logprob: -9.875082969665527
    3. '[h' → logprob: -11.125082969665527
    4. '[w' → logprob: -12.000082969665527
    5. ']==' → logprob: -12.125082969665527
    6. ' ][' → logprob: -13.250082969665527
    7. '[' → logprob: -14.375082969665527
    8. '"][' → logprob: -14.625082969665527
    9. '==' → logprob: -14.625082969665527
    10. ']][' → logprob: -15.000082969665527

Token 352: '1' (ID: 16)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.16387565433979034
    2. '][' → logprob: -2.4138755798339844
    3. '1' → logprob: -2.7888755798339844
    4. ' w' → logprob: -9.788875579833984
    5. ']' → logprob: -10.163875579833984
    6. '```' → logprob: -10.538875579833984
    7. ' ' → logprob: -11.038875579833984
    8. '   ' → logprob: -11.413875579833984
    9. '+' → logprob: -11.788875579833984
    10. '"][' → logprob: -11.913875579833984

Token 353: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019933474250137806
    2. '[h' → logprob: -6.501993179321289
    3. '[w' → logprob: -8.126993179321289
    4. '[' → logprob: -9.626993179321289
    5. ']' → logprob: -9.751993179321289
    6. '"][' → logprob: -11.251993179321289
    7. ''][' → logprob: -11.376993179321289
    8. 'w' → logprob: -11.626993179321289
    9. '==' → logprob: -11.751993179321289
    10. '```' → logprob: -12.251993179321289

Token 354: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.630610641877865e-06
    2. ' w' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.5000057220459
    4. '[w' → logprob: -16.5000057220459
    5. '	w' → logprob: -17.3750057220459
    6. '(w' → logprob: -17.5000057220459
    7. 'W' → logprob: -17.6250057220459
    8. '<w' → logprob: -17.6250057220459
    9. '_w' → logprob: -18.0000057220459
    10. ''w' → logprob: -18.2500057220459

Token 355: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20155270397663116
    2. ']==' → logprob: -1.7015527486801147
    3. ' ]' → logprob: -9.451552391052246
    4. '==' → logprob: -10.201552391052246
    5. '']' → logprob: -11.701552391052246
    6. '']==' → logprob: -12.076552391052246
    7. '[' → logprob: -13.076552391052246
    8. ' ==' → logprob: -13.451552391052246
    9. '"]' → logprob: -13.576552391052246
    10. ']!=' → logprob: -13.951552391052246

Token 356: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20184238255023956
    2. ' ==' → logprob: -1.7018424272537231
    3. ']==' → logprob: -7.951842308044434
    4. ')==' → logprob: -10.451842308044434
    5. '==
' → logprob: -10.826842308044434
    6. ')' → logprob: -11.701842308044434
    7. ']' → logprob: -11.826842308044434
    8. '[' → logprob: -12.076842308044434
    9. '===' → logprob: -13.701842308044434
    10. '=' → logprob: -13.701842308044434

Token 357: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005544631858356297
    2. ' s' → logprob: -7.50055456161499
    3. '   ' → logprob: -14.375554084777832
    4. ' ' → logprob: -15.000554084777832
    5. ''s' → logprob: -16.50055503845215
    6. '	s' → logprob: -16.50055503845215
    7. '  ' → logprob: -17.00055503845215
    8. '           ' → logprob: -17.25055503845215
    9. ' ' → logprob: -17.25055503845215
    10. '       ' → logprob: -17.50055503845215

Token 358: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -2.7968066206085496e-05
    2. 'h' → logprob: -10.500027656555176
    3. '```' → logprob: -15.625027656555176
    4. '[' → logprob: -16.750028610229492
    5. '][' → logprob: -16.750028610229492
    6. '[s' → logprob: -18.375028610229492
    7. '   ' → logprob: -18.625028610229492
    8. '[
' → logprob: -18.750028610229492
    9. 's' → logprob: -19.375028610229492
    10. '[w' → logprob: -19.375028610229492

Token 359: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.621933451038785e-05
    2. '[h' → logprob: -10.375056266784668
    3. ']' → logprob: -10.750056266784668
    4. ' ][' → logprob: -13.250056266784668
    5. 'h' → logprob: -14.250056266784668
    6. ']][' → logprob: -15.250056266784668
    7. '   ' → logprob: -15.500056266784668
    8. '[' → logprob: -15.875056266784668
    9. ' ' → logprob: -16.25005531311035
    10. '```' → logprob: -16.50005531311035

Token 360: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.463036435074173e-05
    2. ' w' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.125024795532227
    4. '	w' → logprob: -16.625024795532227
    5. ' ' → logprob: -17.500024795532227
    6. '[w' → logprob: -17.875024795532227
    7. '```' → logprob: -18.625024795532227
    8. '_w' → logprob: -18.625024795532227
    9. ',w' → logprob: -18.750024795532227
    10. '    ' → logprob: -18.875024795532227

Token 361: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001281779957935214
    2. 'else' → logprob: -6.75128173828125
    3. ' else' → logprob: -9.37628173828125
    4. ' ]' → logprob: -11.25128173828125
    5. ')' → logprob: -12.12628173828125
    6. '']' → logprob: -12.37628173828125
    7. '])' → logprob: -14.00128173828125
    8. ']
' → logprob: -14.00128173828125
    9. '"]' → logprob: -14.87628173828125
    10. ']+' → logprob: -15.12628173828125

Token 362: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16022971272468567
    2. 'else' → logprob: -1.9102296829223633
    3. '	else' → logprob: -12.910229682922363
    4. ')' → logprob: -13.410229682922363
    5. '               ' → logprob: -15.535229682922363
    6. ' ' → logprob: -15.660229682922363
    7. '           ' → logprob: -15.785229682922363
    8. '[]' → logprob: -15.785229682922363
    9. '```' → logprob: -15.910229682922363
    10. '1' → logprob: -16.03523063659668

Token 363: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000804745068307966
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -15.625804901123047
    4. ' ' → logprob: -17.750804901123047
    5. '```' → logprob: -18.000804901123047
    6. '`' → logprob: -18.250804901123047
    7. '  ' → logprob: -19.000804901123047
    8. ')' → logprob: -19.188304901123047
    9. '
' → logprob: -19.250804901123047
    10. '0' → logprob: -19.375804901123047

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.75000762939453
    4. '```' → logprob: -19.00000762939453
    5. '
' → logprob: -19.50000762939453
    6. '`' → logprob: -19.50000762939453
    7. ')' → logprob: -20.18750762939453
    8. '  ' → logprob: -20.31250762939453
    9. '0' → logprob: -20.81250762939453
    10. ' ' → logprob: -21.06250762939453

Token 365: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017111169872805476
    2. ')
' → logprob: -6.376710891723633
    3. ' )' → logprob: -12.751710891723633
    4. '           ' → logprob: -13.126710891723633
    5. '   ' → logprob: -13.626710891723633
    6. '               ' → logprob: -13.751710891723633
    7. '))' → logprob: -14.626710891723633
    8. ')
' → logprob: -14.751710891723633
    9. '       ' → logprob: -15.126710891723633
    10. '),' → logprob: -15.376710891723633

Token 366: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5020602941513062
    2. '
' → logprob: -1.2520602941513062
    3. '           ' → logprob: -2.2520604133605957
    4. ')
' → logprob: -7.002060413360596
    5. 'row' → logprob: -7.377060413360596
    6. '                
' → logprob: -7.502060413360596
    7. ')' → logprob: -7.752060413360596
    8. '            
' → logprob: -8.252059936523438
    9. '   ' → logprob: -8.627059936523438
    10. '```' → logprob: -9.002059936523438

Token 367: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13110174238681793
    2. '
' → logprob: -2.1311018466949463
    3. '            
' → logprob: -5.881101608276367
    4. '       ' → logprob: -7.756101608276367
    5. 'row' → logprob: -8.006101608276367
    6. '               ' → logprob: -9.256101608276367
    7. '   ' → logprob: -9.381101608276367
    8. '          ' → logprob: -9.506101608276367
    9. 'if' → logprob: -9.631101608276367
    10. '  
' → logprob: -10.006101608276367

Token 368: ' Add' (ID: 4063)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01377052627503872
    2. ' if' → logprob: -4.388770580291748
    3. '           ' → logprob: -6.888770580291748
    4. 'Add' → logprob: -9.13877010345459
    5. '#' → logprob: -9.38877010345459
    6. '       ' → logprob: -11.38877010345459
    7. 'If' → logprob: -11.38877010345459
    8. ' Add' → logprob: -11.38877010345459
    9. '   ' → logprob: -12.01377010345459
    10. '
' → logprob: -13.13877010345459

Token 369: ' an' (ID: 448)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.0789378210902214
    2. 'row' → logprob: -2.9539377689361572
    3. ' col' → logprob: -4.703938007354736
    4. '(row' → logprob: -4.953938007354736
    5. ' an' → logprob: -5.578938007354736
    6. '(' → logprob: -6.328938007354736
    7. ' (' → logprob: -6.953938007354736
    8. '(
' → logprob: -7.453938007354736
    9. ' (
' → logprob: -8.328937530517578
    10. ' a' → logprob: -9.328937530517578

Token 370: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.6933817863464355
    2. 'edge' → logprob: -0.6933817863464355
    3. '_edge' → logprob: -8.443382263183594
    4. ' ' → logprob: -12.068382263183594
    5. 'row' → logprob: -12.568382263183594
    6. 'e' → logprob: -13.068382263183594
    7. '_' → logprob: -13.193382263183594
    8. '(edge' → logprob: -13.318382263183594
    9. '=edge' → logprob: -14.068382263183594
    10. 'space' → logprob: -14.193382263183594

Token 371: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10079724341630936
    2. ' to' → logprob: -2.350797176361084
    3. '           ' → logprob: -7.850797176361084
    4. 'row' → logprob: -9.475797653198242
    5. '               ' → logprob: -9.725797653198242
    6. '(row' → logprob: -11.100797653198242
    7. '_to' → logprob: -11.350797653198242
    8. 'for' → logprob: -11.975797653198242
    9. '   ' → logprob: -12.100797653198242
    10. '            ' → logprob: -12.350797653198242

Token 372: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.0980282574892044
    2. 'row' → logprob: -2.9730281829833984
    3. ' the' → logprob: -3.3480281829833984
    4. '(row' → logprob: -5.348028182983398
    5. 'col' → logprob: -7.098028182983398
    6. 'co' → logprob: -7.473028182983398
    7. ' row' → logprob: -7.598028182983398
    8. '(co' → logprob: -8.348028182983398
    9. '(' → logprob: -9.723028182983398
    10. ' co' → logprob: -9.973028182983398

Token 373: ' right' (ID: 1849)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.007723622024059296
    2. ' cell' → logprob: -5.257723808288574
    3. 'co' → logprob: -6.257723808288574
    4. 'col' → logprob: -8.507723808288574
    5. 'row' → logprob: -8.757723808288574
    6. '(h' → logprob: -9.007723808288574
    7. '(cell' → logprob: -10.507723808288574
    8. '(w' → logprob: -10.882723808288574
    9. 'w' → logprob: -11.382723808288574
    10. 'right' → logprob: -11.757723808288574

Token 374: ' cell' (ID: 4206)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004227508790791035
    2. '           ' → logprob: -5.504227638244629
    3. 'append' → logprob: -9.254227638244629
    4. '.' → logprob: -10.754227638244629
    5. 'row' → logprob: -11.379227638244629
    6. '(row' → logprob: -12.254227638244629
    7. '               ' → logprob: -12.504227638244629
    8. '       ' → logprob: -12.504227638244629
    9. '          ' → logprob: -12.504227638244629
    10. '   ' → logprob: -14.379227638244629

Token 375: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014771291753277183
    2. 'if' → logprob: -7.876477241516113
    3. '               ' → logprob: -8.626477241516113
    4. '       ' → logprob: -8.751477241516113
    5. ' if' → logprob: -8.751477241516113
    6. '.append' → logprob: -8.751477241516113
    7. '          ' → logprob: -9.376477241516113
    8. 'row' → logprob: -9.501477241516113
    9. '   ' → logprob: -9.876477241516113
    10. '[
' → logprob: -10.251477241516113

Token 376: 'if' (ID: 366)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2418391853570938
    2. 'if' → logprob: -1.9918391704559326
    3. '           ' → logprob: -3.1168391704559326
    4. ')' → logprob: -4.616839408874512
    5. ' w' → logprob: -4.866839408874512
    6. 'row' → logprob: -4.866839408874512
    7. ' if' → logprob: -5.491839408874512
    8. 'h' → logprob: -5.991839408874512
    9. '               ' → logprob: -7.616839408874512
    10. '(w' → logprob: -8.491839408874512

Token 377: ' it' (ID: 480)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.632607638835907
    2. ' w' → logprob: -0.757607638835907
    3. '(w' → logprob: -12.507607460021973
    4. '   ' → logprob: -13.382607460021973
    5. '<w' → logprob: -14.382607460021973
    6. '	w' → logprob: -14.507607460021973
    7. ' ' → logprob: -14.757607460021973
    8. 'not' → logprob: -14.882607460021973
    9. ' not' → logprob: -15.007607460021973
    10. 'W' → logprob: -15.132607460021973

Token 378: ' exists' (ID: 13031)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.16449080407619476
    2. ' !=' → logprob: -1.914490818977356
    3. 'w' → logprob: -5.539490699768066
    4. 'exists' → logprob: -9.164490699768066
    5. '<w' → logprob: -9.789490699768066
    6. '!=(' → logprob: -10.164490699768066
    7. 'is' → logprob: -10.664490699768066
    8. ')!=' → logprob: -10.789490699768066
    9. '<' → logprob: -11.164490699768066
    10. '!==' → logprob: -11.289490699768066

Token 379: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05599994212388992
    2. ')' → logprob: -3.055999994277954
    3. '               ' → logprob: -5.555999755859375
    4. ')
' → logprob: -5.805999755859375
    5. '<|end|>' → logprob: -8.930999755859375
    6. '):
' → logprob: -9.180999755859375
    7. '       ' → logprob: -9.555999755859375
    8. ',' → logprob: -9.930999755859375
    9. '```' → logprob: -10.055999755859375
    10. '          ' → logprob: -10.430999755859375

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04968041554093361
    2. '               ' → logprob: -3.049680471420288
    3. '```' → logprob: -7.299680233001709
    4. 'row' → logprob: -8.549680709838867
    5. '       ' → logprob: -9.549680709838867
    6. '   ' → logprob: -10.674680709838867
    7. '            
' → logprob: -11.049680709838867
    8. '[' → logprob: -11.049680709838867
    9. '            ' → logprob: -11.174680709838867
    10. '                   ' → logprob: -11.174680709838867

Token 381: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0898752212524414
    2. 'row' → logprob: -1.2148752212524414
    3. ' if' → logprob: -2.2148752212524414
    4. 'if' (adapté à ' if') → logprob: -2.2148752212524414
    5. 'w' → logprob: -2.5898752212524414
    6. ' row' → logprob: -3.9648752212524414
    7. ' w' → logprob: -4.464875221252441
    8. '[' → logprob: -4.589875221252441
    9. '               ' → logprob: -4.964875221252441
    10. 'for' → logprob: -5.589875221252441

Token 382: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.2270682007074356
    2. 'w' → logprob: -1.6020681858062744
    3. ' h' → logprob: -7.1020684242248535
    4. 'h' → logprob: -7.1020684242248535
    5. '(w' → logprob: -12.727067947387695
    6. ' ' → logprob: -13.852067947387695
    7. '	w' → logprob: -13.977067947387695
    8. '   ' → logprob: -14.102067947387695
    9. '<w' → logprob: -14.977067947387695
    10. '_w' → logprob: -15.227067947387695

Token 383: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.16033349931240082
    2. '!=' → logprob: -1.910333514213562
    3. '<' → logprob: -9.660333633422852
    4. ' <' → logprob: -11.160333633422852
    5. '!=(' → logprob: -11.285333633422852
    6. '()!=' → logprob: -12.160333633422852
    7. '+' → logprob: -12.160333633422852
    8. '<|end|>' → logprob: -13.535333633422852
    9. ' ' → logprob: -13.785333633422852
    10. ' ' → logprob: -14.035333633422852

Token 384: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0006272526225075126
    2. ' W' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.000627517700195
    4. '	W' → logprob: -16.250627517700195
    5. '(W' → logprob: -16.875627517700195
    6. ' ' → logprob: -17.000627517700195
    7. '<W' → logprob: -17.375627517700195
    8. '           ' → logprob: -17.625627517700195
    9. '  ' → logprob: -18.000627517700195
    10. '0' → logprob: -18.250627517700195

Token 385: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38690292835235596
    2. '-' → logprob: -1.136902928352356
    3. '1' → logprob: -10.636902809143066
    4. ' ' → logprob: -12.011902809143066
    5. '+' → logprob: -15.011902809143066
    6. '−' → logprob: -15.011902809143066
    7. '   ' → logprob: -15.261902809143066
    8. 'w' → logprob: -16.136903762817383
    9. '```' → logprob: -16.574403762817383
    10. '–' → logprob: -16.636903762817383

Token 386: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -15.875035285949707
    4. '   ' → logprob: -17.000036239624023
    5. '-' → logprob: -17.125036239624023
    6. '<|end|>' → logprob: -18.875036239624023
    7. '  ' → logprob: -19.375036239624023
    8. '۱' → logprob: -19.500036239624023
    9. '１' → logprob: -19.812536239624023
    10. '           ' → logprob: -19.937536239624023

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -14.87501335144043
    4. '```' → logprob: -15.81251335144043
    5. '-' → logprob: -17.62501335144043
    6. '2' → logprob: -17.68751335144043
    7. '  ' → logprob: -17.75001335144043
    8. '１' → logprob: -18.00001335144043
    9. '
' → logprob: -18.18751335144043
    10. '`' → logprob: -18.31251335144043

Token 388: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055835917592048645
    2. ':
' → logprob: -2.9308359622955322
    3. '           ' → logprob: -8.180835723876953
    4. '):
' → logprob: -8.305835723876953
    5. '               ' → logprob: -8.555835723876953
    6. '):' → logprob: -8.805835723876953
    7. ',' → logprob: -10.805835723876953
    8. ')' → logprob: -11.055835723876953
    9. '       ' → logprob: -11.555835723876953
    10. 'row' → logprob: -11.805835723876953

Token 389: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017559412866830826
    2. 'row' → logprob: -4.14255952835083
    3. '```' → logprob: -7.39255952835083
    4. '           ' → logprob: -7.51755952835083
    5. ' row' → logprob: -8.892559051513672
    6. '                   ' → logprob: -9.892559051513672
    7. '   ' → logprob: -10.017559051513672
    8. '       ' → logprob: -10.392559051513672
    9. '              ' → logprob: -10.392559051513672
    10. '             ' → logprob: -10.892559051513672

Token 390: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.0009402852156199515
    2. ' row' → logprob: -7.000940322875977
    3. '               ' → logprob: -10.625940322875977
    4. '```' → logprob: -12.875940322875977
    5. '           ' → logprob: -13.500940322875977
    6. '                   ' → logprob: -15.500940322875977
    7. '	row' → logprob: -16.000940322875977
    8. '[row' → logprob: -16.500940322875977
    9. '   ' → logprob: -16.500940322875977
    10. 'rown' → logprob: -17.250940322875977

Token 391: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016063073417171836
    2. '.' → logprob: -8.750160217285156
    3. '.app' → logprob: -13.625160217285156
    4. ' .' → logprob: -14.500160217285156
    5. 'append' → logprob: -15.250160217285156
    6. '.ap' → logprob: -16.625160217285156
    7. '.add' → logprob: -17.000160217285156
    8. ').' → logprob: -17.500160217285156
    9. 'app' → logprob: -17.875160217285156
    10. '.setdefault' → logprob: -17.875160217285156

Token 392: '(co' (ID: 41772)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.006715967319905758
    2. '(co' → logprob: -5.006715774536133
    3. ' co' → logprob: -14.381715774536133
    4. '/co' → logprob: -17.756715774536133
    5. '_co' → logprob: -18.881715774536133
    6. 'coe' → logprob: -20.256715774536133
    7. '.co' → logprob: -20.506715774536133
    8. '-co' → logprob: -20.506715774536133
    9. 'Co' → logprob: -20.756715774536133
    10. 'coil' → logprob: -21.381715774536133

Token 393: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -2.129266067640856e-05
    2. 'num' → logprob: -11.000020980834961
    3. 'Num' → logprob: -12.500020980834961
    4. '_NUM' → logprob: -15.500020980834961
    5. '_number' → logprob: -16.25002098083496
    6. 'w' → logprob: -16.87502098083496
    7. '-num' → logprob: -16.87502098083496
    8. '(_' → logprob: -16.87502098083496
    9. 'um' → logprob: -17.12502098083496
    10. '```' → logprob: -17.12502098083496

Token 394: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.875003814697266
    3. 'h' → logprob: -14.125003814697266
    4. ' (' → logprob: -16.625003814697266
    5. ')' → logprob: -18.250003814697266
    6. '(
' → logprob: -19.000003814697266
    7. ')(' → logprob: -19.750003814697266
    8. '(H' → logprob: -20.500003814697266
    9. '(w' → logprob: -20.875003814697266
    10. '   ' → logprob: -20.875003814697266

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023302430287003517
    2. ',w' → logprob: -3.7733023166656494
    3. ' ,' → logprob: -10.27330207824707
    4. 'w' → logprob: -11.27330207824707
    5. ',h' → logprob: -11.77330207824707
    6. '),' → logprob: -14.64830207824707
    7. ' ' → logprob: -15.27330207824707
    8. ',
' → logprob: -15.39830207824707
    9. ')' → logprob: -15.39830207824707
    10. ',j' → logprob: -16.14830207824707

Token 396: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0013271415373310447
    2. ' w' → logprob: -6.626327037811279
    3. ',w' → logprob: -14.376327514648438
    4. ',' → logprob: -15.126327514648438
    5. '	w' → logprob: -15.626327514648438
    6. '   ' → logprob: -16.001327514648438
    7. ' ' → logprob: -17.251327514648438
    8. 'W' → logprob: -17.501327514648438
    9. '(w' → logprob: -17.501327514648438
    10. '[w' → logprob: -17.626327514648438

Token 397: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.055376749485731125
    2. '))
' → logprob: -3.3053767681121826
    3. ')' → logprob: -4.1803765296936035
    4. '+' → logprob: -6.4303765296936035
    5. '   ' → logprob: -9.055377006530762
    6. '),' → logprob: -9.430377006530762
    7. ' ))' → logprob: -10.555377006530762
    8. ' ' → logprob: -11.430377006530762
    9. '))
' → logprob: -11.680377006530762
    10. ')
' → logprob: -11.805377006530762

Token 398: '               ' (ID: 506)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.054938703775405884
    2. '               ' → logprob: -3.054938793182373
    3. ' col' → logprob: -5.929938793182373
    4. '(col' → logprob: -6.554938793182373
    5. ',col' → logprob: -6.679938793182373
    6. ',' → logprob: -8.054938316345215
    7. '[col' → logprob: -8.554938316345215
    8. '.append' → logprob: -8.929938316345215
    9. 'co' → logprob: -9.179938316345215
    10. '_col' → logprob: -9.304938316345215

Token 399: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' (adapté à ' col') → logprob: -2.7729658540920354e-05
    2. 'co' → logprob: -10.500027656555176
    3. ' col' → logprob: -15.875027656555176
    4. '```' → logprob: -21.625028610229492
    5. 'row' → logprob: -21.875028610229492
    6. '[col' → logprob: -22.625028610229492
    7. '(col' → logprob: -22.875028610229492
    8. 'com' → logprob: -23.250028610229492
    9. '	col' → logprob: -23.375028610229492
    10. 'colon' → logprob: -23.500028610229492

Token 400: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004362718027550727
    2. '.' → logprob: -7.750436305999756
    3. ' .' → logprob: -13.000435829162598
    4. 'append' → logprob: -13.750435829162598
    5. '(co' → logprob: -13.750435829162598
    6. '<|end|>' → logprob: -14.750435829162598
    7. '(col' → logprob: -16.000436782836914
    8. ').' → logprob: -16.000436782836914
    9. '.Append' → logprob: -16.250436782836914
    10. '().' → logprob: -16.625436782836914

Token 401: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -3.225939872208983e-05
    2. 'co' → logprob: -10.375032424926758
    3. '(' → logprob: -14.125032424926758
    4. ' co' → logprob: -16.750032424926758
    5. '(
' → logprob: -17.250032424926758
    6. '(c' → logprob: -17.500032424926758
    7. '/co' → logprob: -17.750032424926758
    8. '```' → logprob: -18.375032424926758
    9. '((' → logprob: -18.500032424926758
    10. '(col' → logprob: -18.750032424926758

Token 402: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.5213274309644476e-05
    2. 'num' → logprob: -11.250015258789062
    3. 'Num' → logprob: -13.125015258789062
    4. '(num' → logprob: -16.375015258789062
    5. '_NUM' → logprob: -16.875015258789062
    6. '-num' → logprob: -18.250015258789062
    7. '_number' → logprob: -18.375015258789062
    8. 'um' → logprob: -18.625015258789062
    9. '(' → logprob: -19.000015258789062
    10. '_nums' → logprob: -19.000015258789062

Token 403: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.759734732331708e-05
    2. '(co' → logprob: -11.625017166137695
    3. 'h' → logprob: -11.875017166137695
    4. '(' → logprob: -13.500017166137695
    5. 's' → logprob: -16.000017166137695
    6. 'co' → logprob: -16.125017166137695
    7. '```' → logprob: -17.750017166137695
    8. '[h' → logprob: -17.875017166137695
    9. ' (' → logprob: -18.125017166137695
    10. ')' → logprob: -18.625017166137695

Token 404: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0003091254911851138
    2. 'h' → logprob: -8.375308990478516
    3. '(' → logprob: -10.375308990478516
    4. '[h' → logprob: -10.625308990478516
    5. ',h' → logprob: -11.875308990478516
    6. ',' → logprob: -12.250308990478516
    7. '(w' → logprob: -12.375308990478516
    8. 'w' → logprob: -13.000308990478516
    9. 's' → logprob: -13.375308990478516
    10. ' (' → logprob: -13.625308990478516

Token 405: ' w' (ID: 286)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01420182641595602
    2. 'w' → logprob: -4.264201641082764
    3. ' h' → logprob: -10.639202117919922
    4. '(h' → logprob: -11.514202117919922
    5. 'co' → logprob: -12.764202117919922
    6. ' w' → logprob: -14.639202117919922
    7. '(w' → logprob: -14.889202117919922
    8. '+' → logprob: -15.514202117919922
    9. ')' → logprob: -15.639202117919922
    10. '   ' → logprob: -15.889202117919922

Token 406: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11282933503389359
    2. ' +' → logprob: -2.2378294467926025
    3. '   ' → logprob: -13.237829208374023
    4. '[' → logprob: -13.987829208374023
    5. '+
' → logprob: -13.987829208374023
    6. ' ' → logprob: -14.487829208374023
    7. 'w' → logprob: -14.612829208374023
    8. ')' → logprob: -14.862829208374023
    9. '+w' → logprob: -14.862829208374023
    10. '1' → logprob: -15.112829208374023

Token 407: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'w' → logprob: -15.875005722045898
    4. '+' → logprob: -16.0000057220459
    5. '   ' → logprob: -17.5000057220459
    6. ')' → logprob: -17.8125057220459
    7. '```' → logprob: -18.2500057220459
    8. '2' → logprob: -19.4375057220459
    9. '１' → logprob: -19.6250057220459
    10. '0' → logprob: -19.7500057220459

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.750003814697266
    4. '```' → logprob: -16.750003814697266
    5. ')' → logprob: -17.500003814697266
    6. '+' → logprob: -18.062503814697266
    7. '
' → logprob: -18.312503814697266
    8. '  ' → logprob: -19.500003814697266
    9. '0' → logprob: -20.437503814697266
    10. '-' → logprob: -20.500003814697266

Token 409: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06995810568332672
    2. ')
' → logprob: -2.694958209991455
    3. '               ' → logprob: -11.444957733154297
    4. ')
' → logprob: -12.319957733154297
    5. ')

' → logprob: -12.819957733154297
    6. ' )' → logprob: -13.819957733154297
    7. '),' → logprob: -14.444957733154297
    8. '))' → logprob: -14.819957733154297
    9. '           ' → logprob: -14.944957733154297
    10. '   ' → logprob: -14.944957733154297

Token 410: '               ' (ID: 506)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20215515792369843
    2. '               ' → logprob: -1.7021551132202148
    3. ' dist' → logprob: -7.827155113220215
    4. '```' → logprob: -8.827155113220215
    5. '	dist' → logprob: -9.077155113220215
    6. '           ' → logprob: -11.077155113220215
    7. '			' → logprob: -11.452155113220215
    8. '              ' → logprob: -11.452155113220215
    9. '                ' → logprob: -11.952155113220215
    10. '.dist' → logprob: -12.077155113220215

Token 411: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.173704271830502e-06
    2. ' dist' → logprob: -13.00000286102295
    3. '               ' → logprob: -14.25000286102295
    4. '0' → logprob: -15.37500286102295
    5. '```' → logprob: -20.250003814697266
    6. '	dist' → logprob: -21.000003814697266
    7. '   ' → logprob: -21.125003814697266
    8. 'Dist' → logprob: -21.375003814697266
    9. '                   ' → logprob: -22.000003814697266
    10. '                
' → logprob: -22.500003814697266

Token 412: ' Edge' (ID: 16396)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1472419600977446e-06
    2. ' dist' → logprob: -13.750000953674316
    3. '               ' → logprob: -18.500001907348633
    4. 'Dist' → logprob: -21.750001907348633
    5. '	dist' → logprob: -21.750001907348633
    6. '
' → logprob: -21.875001907348633
    7. 'd' → logprob: -22.375001907348633
    8. '```' → logprob: -22.500001907348633
    9. '           ' → logprob: -22.750001907348633
    10. 'diff' → logprob: -22.875001907348633

Token 413: ' cost' (ID: 3097)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0027022813446819782
    2. '.' → logprob: -6.002702236175537
    3. 'append' → logprob: -8.502702713012695
    4. 'cost' → logprob: -11.377702713012695
    5. 'dist' → logprob: -12.127702713012695
    6. ' .' → logprob: -13.127702713012695
    7. '.extend' → logprob: -13.502702713012695
    8. '_cost' → logprob: -13.752702713012695
    9. 's' → logprob: -15.002702713012695
    10. '_append' → logprob: -15.002702713012695

Token 414: ' is' (ID: 382)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015073629328981042
    2. '.' → logprob: -6.50150728225708
    3. 'append' → logprob: -12.751507759094238
    4. '=' → logprob: -13.751507759094238
    5. ' .' → logprob: -14.001507759094238
    6. '.app' → logprob: -16.751506805419922
    7. '.extend' → logprob: -17.001506805419922
    8. 's' → logprob: -17.501506805419922
    9. ' =' → logprob: -17.626506805419922
    10. '.=' → logprob: -17.876506805419922

Token 415: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012091610115021467
    2. ' ' → logprob: -7.001209259033203
    3. '1' → logprob: -8.126209259033203
    4. '(' → logprob: -13.626209259033203
    5. 'dist' → logprob: -14.501209259033203
    6. '   ' → logprob: -16.501209259033203
    7. ' (' → logprob: -16.626209259033203
    8. '```' → logprob: -17.251209259033203
    9. ' dist' → logprob: -17.751209259033203
    10. '  ' → logprob: -18.188709259033203

Token 416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.727905979962088e-05
    2. '1' → logprob: -10.12504768371582
    3. ' ' → logprob: -12.37504768371582
    4. '(' → logprob: -13.25004768371582
    5. 'dist' → logprob: -13.87504768371582
    6. '```' → logprob: -17.00004768371582
    7. '   ' → logprob: -17.12504768371582
    8. '(dist' → logprob: -18.25004768371582
    9. '[' → logprob: -19.00004768371582
    10. ' dist' → logprob: -19.06254768371582

Token 417: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10020828247070312
    2. 'if' → logprob: -2.350208282470703
    3. ')' → logprob: -14.100208282470703
    4. ',' → logprob: -14.975208282470703
    5. '               ' → logprob: -15.100208282470703
    6. ' ' → logprob: -16.725208282470703
    7. 'If' → logprob: -17.350208282470703
    8. '.' → logprob: -17.475208282470703
    9. '   ' → logprob: -17.850208282470703
    10. '	if' → logprob: -17.850208282470703

Token 418: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004629484377801418
    2. ' s' → logprob: -5.379629611968994
    3. '(s' → logprob: -12.129629135131836
    4. '0' → logprob: -14.254629135131836
    5. ''s' → logprob: -14.504629135131836
    6. '```' → logprob: -14.504629135131836
    7. ' ' → logprob: -14.754629135131836
    8. '   ' → logprob: -15.004629135131836
    9. '`s' → logprob: -15.004629135131836
    10. 'the' → logprob: -15.254629135131836

Token 419: ' symbols' (ID: 29502)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018157318234443665
    2. ' s' → logprob: -4.018157482147217
    3. 'dist' → logprob: -13.018157005310059
    4. '[s' → logprob: -13.893157005310059
    5. '(s' → logprob: -14.268157005310059
    6. ' ' → logprob: -14.393157005310059
    7. 'symbols' → logprob: -14.768157005310059
    8. ' dist' → logprob: -14.893157005310059
    9. '`s' → logprob: -14.893157005310059
    10. ''s' → logprob: -15.143157005310059

Token 420: ' are' (ID: 553)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.2335505187511444
    2. '[h' → logprob: -1.6085505485534668
    3. '==' → logprob: -5.733550548553467
    4. ' are' → logprob: -6.233550548553467
    5. '[' → logprob: -6.483550548553467
    6. 's' → logprob: -7.358550548553467
    7. ' ==' → logprob: -7.858550548553467
    8. ' s' → logprob: -8.733550071716309
    9. 'are' → logprob: -9.483550071716309
    10. ' [' → logprob: -9.733550071716309

Token 421: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.22168511152267456
    2. 's' → logprob: -1.9716851711273193
    3. ' the' → logprob: -2.9716851711273193
    4. ' s' → logprob: -4.97168493270874
    5. 'same' → logprob: -6.59668493270874
    6. ' same' → logprob: -9.971685409545898
    7. 'different' → logprob: -10.971685409545898
    8. 'equal' → logprob: -11.346685409545898
    9. ' equal' → logprob: -12.096685409545898
    10. ' different' → logprob: -12.846685409545898

Token 422: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.004215759225189686
    2. 's' → logprob: -6.129215717315674
    3. ' same' → logprob: -6.254215717315674
    4. 'different' → logprob: -9.379216194152832
    5. '[s' → logprob: -11.754216194152832
    6. 'Same' → logprob: -12.504216194152832
    7. ' s' → logprob: -13.004216194152832
    8. 'w' → logprob: -13.254216194152832
    9. '_same' → logprob: -13.254216194152832
    10. 'sam' → logprob: -13.254216194152832

Token 423: ',' (ID: 11)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7574158310890198
    2. ' if' → logprob: -1.132415771484375
    3. 'else' → logprob: -1.632415771484375
    4. 'if' → logprob: -4.507415771484375
    5. '               ' → logprob: -6.632415771484375
    6. ',' → logprob: -7.257415771484375
    7. ')' → logprob: -9.132415771484375
    8. '[' → logprob: -9.507415771484375
    9. 'elif' → logprob: -10.007415771484375
    10. '.' → logprob: -10.257415771484375

Token 424: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3873800039291382
    2. 'else' → logprob: -1.1373800039291382
    3. '1' → logprob: -7.637380123138428
    4. ' ' → logprob: -11.13737964630127
    5. '0' → logprob: -12.38737964630127
    6. '               ' → logprob: -12.38737964630127
    7. '```' → logprob: -12.88737964630127
    8. ' 
' → logprob: -15.88737964630127
    9. '                ' → logprob: -16.012380599975586
    10. ' dist' → logprob: -16.137380599975586

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029751179739832878
    2. ' ' → logprob: -3.5297510623931885
    3. '```' → logprob: -15.52975082397461
    4. '0' → logprob: -15.77975082397461
    5. ' ' → logprob: -15.77975082397461
    6. '   ' → logprob: -16.34225082397461
    7. ')' → logprob: -17.46725082397461
    8. '`' → logprob: -18.27975082397461
    9. ' 
' → logprob: -18.34225082397461
    10. '' → logprob: -18.46725082397461

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -16.625001907348633
    4. '0' → logprob: -19.875001907348633
    5. '
' → logprob: -20.500001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '`' → logprob: -21.125001907348633
    8. '' → logprob: -21.625001907348633
    9. ')' → logprob: -21.812501907348633
    10. '１' → logprob: -22.062501907348633

Token 427: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24555984139442444
    2. 'dist' → logprob: -2.2455599308013916
    3. '.append' → logprob: -2.8705599308013916
    4. ')' → logprob: -3.1205599308013916
    5. '.' → logprob: -5.6205596923828125
    6. '.dist' → logprob: -5.7455596923828125
    7. ' dist' → logprob: -6.9955596923828125
    8. '           ' → logprob: -7.2455596923828125
    9. '(dist' → logprob: -7.2455596923828125
    10. ',' → logprob: -7.6205596923828125

Token 428: 'color' (ID: 4991)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4579942226409912
    2. ')' → logprob: -1.8329942226409912
    3. 'dist' → logprob: -1.9579942226409912
    4. 's' → logprob: -2.957994222640991
    5. 'color' → logprob: -5.20799446105957
    6. 'else' → logprob: -5.20799446105957
    7. '0' → logprob: -7.20799446105957
    8. ' ' → logprob: -7.45799446105957
    9. '```' → logprob: -7.58299446105957
    10. ' dist' → logprob: -7.83299446105957

Token 429: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.7545521855354309
    2. ' change' → logprob: -0.8795521855354309
    3. '_change' → logprob: -2.754552125930786
    4. ')' → logprob: -3.754552125930786
    5. 'append' → logprob: -4.254552364349365
    6. ' changes' → logprob: -5.254552364349365
    7. ' append' → logprob: -5.879552364349365
    8. '_changes' → logprob: -6.129552364349365
    9. 'changes' → logprob: -6.379552364349365
    10. '.append' → logprob: -7.004552364349365

Token 430: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005678066518157721
    2. '               ' → logprob: -7.87556791305542
    3. ')
' → logprob: -8.625567436218262
    4. '           ' → logprob: -12.625567436218262
    5. ' )' → logprob: -12.750567436218262
    6. '              ' → logprob: -15.000567436218262
    7. '),' → logprob: -15.125567436218262
    8. '))' → logprob: -15.625567436218262
    9. '                   ' → logprob: -15.750567436218262
    10. '       ' → logprob: -15.875567436218262

Token 431: '               ' (ID: 506)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.021273290738463402
    2. '               ' → logprob: -4.021273136138916
    3. ' dist' → logprob: -5.771273136138916
    4. '	dist' → logprob: -14.271273612976074
    5. '```' → logprob: -14.521273612976074
    6. '                   ' → logprob: -14.521273612976074
    7. '           ' → logprob: -15.146273612976074
    8. '   ' → logprob: -15.521273612976074
    9. '              ' → logprob: -15.896273612976074
    10. '(dist' → logprob: -16.021272659301758

Token 432: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -7.612634362885728e-05
    2. '0' → logprob: -9.875076293945312
    3. ' dist' → logprob: -10.625076293945312
    4. '1' → logprob: -15.500076293945312
    5. '               ' → logprob: -16.500076293945312
    6. '   ' → logprob: -18.250076293945312
    7. '           ' → logprob: -18.500076293945312
    8. ' ' → logprob: -18.625076293945312
    9. 'Dist' → logprob: -19.750076293945312
    10. '	dist' → logprob: -19.875076293945312

Token 433: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003377270477358252
    2. '.' → logprob: -8.000337600708008
    3. '.app' → logprob: -13.375337600708008
    4. '.extend' → logprob: -14.750337600708008
    5. ').' → logprob: -16.000337600708008
    6. '.add' → logprob: -16.250337600708008
    7. 'append' → logprob: -17.125337600708008
    8. '.push' → logprob: -17.500337600708008
    9. ' .' → logprob: -17.625337600708008
    10. '.Append' → logprob: -17.875337600708008

Token 434: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519807815551758
    2. '(' → logprob: -1.5019807815551758
    3. '1' → logprob: -10.501980781555176
    4. ' ' → logprob: -10.876980781555176
    5. ' (' → logprob: -12.626980781555176
    6. '(
' → logprob: -14.001980781555176
    7. '   ' → logprob: -14.126980781555176
    8. 'int' → logprob: -16.12697982788086
    9. '(int' → logprob: -16.50197982788086
    10. '((' → logprob: -16.87697982788086

Token 435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004715450922958553
    2. '1' → logprob: -7.750471591949463
    3. ' ' → logprob: -10.125471115112305
    4. '   ' → logprob: -15.250471115112305
    5. '(' → logprob: -15.500471115112305
    6. 'int' → logprob: -16.125471115112305
    7. '```' → logprob: -17.375471115112305
    8. '  ' → logprob: -17.937971115112305
    9. '`' → logprob: -18.812971115112305
    10. '
' → logprob: -19.062971115112305

Token 436: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.038054682314395905
    2. 'if' → logprob: -3.2880547046661377
    3. ')' → logprob: -11.288054466247559
    4. '<|end|>' → logprob: -14.913054466247559
    5. '),' → logprob: -16.163055419921875
    6. '	if' → logprob: -16.413055419921875
    7. 'If' → logprob: -16.663055419921875
    8. ' ' → logprob: -16.788055419921875
    9. 'else' → logprob: -16.788055419921875
    10. ' else' → logprob: -17.038055419921875

Token 437: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06196914613246918
    2. ' s' → logprob: -2.811969041824341
    3. '(s' → logprob: -14.186968803405762
    4. '   ' → logprob: -15.561968803405762
    5. ' ' → logprob: -15.561968803405762
    6. ''s' → logprob: -15.686968803405762
    7. '_s' → logprob: -17.061969757080078
    8. '{s' → logprob: -17.186969757080078
    9. '    ' → logprob: -17.311969757080078
    10. '	s' → logprob: -17.561969757080078

Token 438: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -3.4121114822482923e-06
    2. 'h' → logprob: -12.625003814697266
    3. '[' → logprob: -17.875003814697266
    4. '```' → logprob: -18.250003814697266
    5. '[s' → logprob: -18.875003814697266
    6. ' [' → logprob: -18.875003814697266
    7. '[w' → logprob: -18.875003814697266
    8. '<h' → logprob: -19.250003814697266
    9. '(h' → logprob: -19.250003814697266
    10. '[
' → logprob: -19.500003814697266

Token 439: '][' (ID: 2696)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.1131608858704567
    2. '][' → logprob: -2.2381608486175537
    3. '   ' → logprob: -9.363161087036133
    4. '[' → logprob: -9.863161087036133
    5. ' [' → logprob: -9.863161087036133
    6. ' ][' → logprob: -9.988161087036133
    7. 'h' → logprob: -10.488161087036133
    8. '[w' → logprob: -10.863161087036133
    9. ']' → logprob: -11.238161087036133
    10. ' ' → logprob: -11.488161087036133

Token 440: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -7.226628895296017e-06
    2. ' w' → logprob: -12.625007629394531
    3. '   ' → logprob: -13.125007629394531
    4. '[w' → logprob: -14.000007629394531
    5. '(w' → logprob: -14.500007629394531
    6. '       ' → logprob: -16.25000762939453
    7. ' ' → logprob: -16.37500762939453
    8. ''w' → logprob: -16.87500762939453
    9. '    ' → logprob: -17.12500762939453
    10. '           ' → logprob: -17.25000762939453

Token 441: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1587185114622116
    2. ']' → logprob: -2.5337185859680176
    3. '[w' → logprob: -3.4087185859680176
    4. '][' → logprob: -3.6587185859680176
    5. ']==' → logprob: -5.533718585968018
    6. '[' → logprob: -6.408718585968018
    7. 'w' → logprob: -6.533718585968018
    8. ' +' → logprob: -7.533718585968018
    9. '==' → logprob: -7.908718585968018
    10. '+w' → logprob: -8.53371810913086

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.11996734328568e-05
    2. ']' → logprob: -10.625041007995605
    3. ' ' → logprob: -11.125041007995605
    4. 'w' → logprob: -13.875041007995605
    5. '```' → logprob: -14.625041007995605
    6. '   ' → logprob: -15.250041007995605
    7. '+' → logprob: -16.125041961669922
    8. ''' → logprob: -16.125041961669922
    9. '"' → logprob: -16.750041961669922
    10. ']==' → logprob: -16.812541961669922

Token 443: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031838975846767426
    2. ']==' → logprob: -5.753183841705322
    3. ' ]' → logprob: -12.62818431854248
    4. '][' → logprob: -13.87818431854248
    5. '==' → logprob: -14.00318431854248
    6. '[' → logprob: -14.62818431854248
    7. '']' → logprob: -15.62818431854248
    8. ']
' → logprob: -15.75318431854248
    9. ']=='' → logprob: -16.628183364868164
    10. '   ' → logprob: -16.878183364868164

Token 444: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12800827622413635
    2. ' ==' → logprob: -2.1280083656311035
    3. ']==' → logprob: -7.1280083656311035
    4. ']' → logprob: -8.378007888793945
    5. '[' → logprob: -11.003007888793945
    6. '!=' → logprob: -11.378007888793945
    7. ' ' → logprob: -12.003007888793945
    8. '==
' → logprob: -12.628007888793945
    9. ')==' → logprob: -13.128007888793945
    10. ' !=' → logprob: -13.378007888793945

Token 445: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0036012595519423485
    2. ' s' → logprob: -5.62860107421875
    3. '(s' → logprob: -15.25360107421875
    4. '   ' → logprob: -15.37860107421875
    5. '[s' → logprob: -15.62860107421875
    6. ''s' → logprob: -16.37860107421875
    7. ' ' → logprob: -16.50360107421875
    8. '_s' → logprob: -16.62860107421875
    9. '	s' → logprob: -17.25360107421875
    10. '           ' → logprob: -17.37860107421875

Token 446: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.00022153646568767726
    2. 's' → logprob: -8.875221252441406
    3. '[w' → logprob: -9.500221252441406
    4. '[s' → logprob: -12.250221252441406
    5. '[' → logprob: -14.375221252441406
    6. 'h' → logprob: -14.750221252441406
    7. '][' → logprob: -15.000221252441406
    8. '```' → logprob: -15.625221252441406
    9. '[[' → logprob: -16.375221252441406
    10. '[
' → logprob: -16.750221252441406

Token 447: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03890812397003174
    2. '[h' → logprob: -3.538908004760742
    3. '[w' → logprob: -4.788908004760742
    4. '[' → logprob: -8.663908004760742
    5. 'w' → logprob: -8.788908004760742
    6. ']' → logprob: -9.288908004760742
    7. ']][' → logprob: -9.663908004760742
    8. 'h' → logprob: -9.788908004760742
    9. '   ' → logprob: -10.538908004760742
    10. 's' → logprob: -10.538908004760742

Token 448: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0002529952325858176
    2. '[w' → logprob: -8.625252723693848
    3. 'h' → logprob: -10.125252723693848
    4. '[h' → logprob: -10.625252723693848
    5. 's' → logprob: -12.375252723693848
    6. ' w' → logprob: -12.375252723693848
    7. 'v' → logprob: -15.375252723693848
    8. ''w' → logprob: -16.000253677368164
    9. '0' → logprob: -16.750253677368164
    10. '```' → logprob: -17.250253677368164

Token 449: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6945326924324036
    2. 'else' → logprob: -0.6945326924324036
    3. ']' → logprob: -6.819532871246338
    4. ')' → logprob: -8.19453239440918
    5. 's' → logprob: -12.81953239440918
    6. '	else' → logprob: -13.06953239440918
    7. '```' → logprob: -13.31953239440918
    8. '])' → logprob: -13.56953239440918
    9. ' ' → logprob: -13.81953239440918
    10. ' ]' → logprob: -13.94453239440918

Token 450: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5759413838386536
    2. 'else' → logprob: -0.8259413838386536
    3. '	else' → logprob: -13.95094108581543
    4. ')' → logprob: -14.57594108581543
    5. '```' → logprob: -16.07594108581543
    6. '               ' → logprob: -16.32594108581543
    7. '<|end|>' → logprob: -16.82594108581543
    8. '_else' → logprob: -16.82594108581543
    9. '            ' → logprob: -17.32594108581543
    10. '           ' → logprob: -17.45094108581543

Token 451: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -17.12670135498047
    4. '0' → logprob: -18.00170135498047
    5. '```' → logprob: -18.12670135498047
    6. ')' → logprob: -18.93920135498047
    7. ' ' → logprob: -19.31420135498047
    8. '`' → logprob: -19.68920135498047
    9. '
' → logprob: -20.06420135498047
    10. '  ' → logprob: -20.50170135498047

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -18.375001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '0' → logprob: -20.625001907348633
    6. '`' → logprob: -21.000001907348633
    7. '
' → logprob: -21.250001907348633
    8. ')' → logprob: -21.625001907348633
    9. '<|end|>' → logprob: -21.812501907348633
    10. '  ' → logprob: -22.437501907348633

Token 453: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004450892156455666
    2. ')
' → logprob: -7.7504448890686035
    3. '           ' → logprob: -12.250445365905762
    4. '               ' → logprob: -12.625445365905762
    5. ' )' → logprob: -12.875445365905762
    6. '   ' → logprob: -13.250445365905762
    7. '       ' → logprob: -14.000445365905762
    8. ')

' → logprob: -14.375445365905762
    9. ')
' → logprob: -16.250444412231445
    10. '))' → logprob: -16.625444412231445

Token 454: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07927563041448593
    2. 'graph' → logprob: -2.704275608062744
    3. 'adj' → logprob: -5.704275608062744
    4. 'matrix' → logprob: -6.079275608062744
    5. '```' → logprob: -6.579275608062744
    6. 'A' → logprob: -7.454275608062744
    7. 'G' → logprob: -7.829275608062744
    8. '#' → logprob: -8.204276084899902
    9. 'g' → logprob: -8.954276084899902
    10. '
' → logprob: -8.954276084899902

Token 455: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2619544267654419
    2. '   ' → logprob: -1.511954426765442
    3. 'adj' → logprob: -5.136954307556152
    4. '#' → logprob: -6.511954307556152
    5. 'matrix' → logprob: -6.761954307556152
    6. 'G' → logprob: -7.886954307556152
    7. 'edges' → logprob: -8.011954307556152
    8. 'num' → logprob: -8.636954307556152
    9. 'g' → logprob: -8.886954307556152
    10. 'A' → logprob: -9.136954307556152

Token 456: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3374112844467163
    2. 'adj' → logprob: -1.8374112844467163
    3. 'num' → logprob: -3.087411403656006
    4. '   ' → logprob: -3.587411403656006
    5. '#' (adapté à ' #') → logprob: -3.837411403656006
    6. 'n' → logprob: -4.462411403656006
    7. 'G' → logprob: -4.712411403656006
    8. 'g' → logprob: -5.712411403656006
    9. 'size' → logprob: -5.712411403656006
    10. 'edges' → logprob: -5.837411403656006

Token 457: ' Build' (ID: 10885)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.23114390671253204
    2. 'adj' → logprob: -1.9811439514160156
    3. 'g' → logprob: -3.9811439514160156
    4. 'n' → logprob: -4.231143951416016
    5. 'G' → logprob: -4.356143951416016
    6. '#' → logprob: -4.481143951416016
    7. 'num' → logprob: -5.606143951416016
    8. 'edges' → logprob: -5.731143951416016
    9. 'N' → logprob: -6.606143951416016
    10. 'A' → logprob: -7.481143951416016

Token 458: ' a' (ID: 261)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.710366427898407
    2. 'csr' → logprob: -1.4603664875030518
    3. 'adj' → logprob: -1.8353664875030518
    4. ' csr' → logprob: -3.0853664875030518
    5. ' graph' → logprob: -3.3353664875030518
    6. 'a' → logprob: -4.460366249084473
    7. 'matrix' → logprob: -5.460366249084473
    8. ' a' → logprob: -5.835366249084473
    9. 'g' → logprob: -6.085366249084473
    10. ' adj' → logprob: -6.085366249084473

Token 459: ' sparse' (ID: 70531)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.3065132796764374
    2. 'graph' → logprob: -1.5565133094787598
    3. 'matrix' → logprob: -3.1815133094787598
    4. 's' → logprob: -5.93151330947876
    5. ' csr' → logprob: -5.93151330947876
    6. 'n' → logprob: -6.18151330947876
    7. 'adj' → logprob: -6.30651330947876
    8. ' graph' → logprob: -6.55651330947876
    9. ' matrix' → logprob: -8.931512832641602
    10. 'g' → logprob: -9.056512832641602

Token 460: ' adjacency' (ID: 177015)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.1217598170042038
    2. 'adj' → logprob: -2.8717598915100098
    3. ' matrix' → logprob: -3.7467598915100098
    4. '_matrix' → logprob: -3.7467598915100098
    5. ' adjacency' → logprob: -5.37175989151001
    6. 'graph' → logprob: -5.87175989151001
    7. '_adj' → logprob: -6.24675989151001
    8. 'mat' → logprob: -7.87175989151001
    9. 'csr' → logprob: -7.99675989151001
    10. '_ad' → logprob: -8.121759414672852

Token 461: ' matrix' (ID: 12248)
  Prédit: '_matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.27538248896598816
    2. 'matrix' → logprob: -1.7753825187683105
    3. ' matrix' → logprob: -2.6503825187683105
    4. '_' → logprob: -7.5253825187683105
    5. '_mat' → logprob: -9.900382041931152
    6. 'm' → logprob: -10.525382041931152
    7. 'mat' → logprob: -10.525382041931152
    8. '_c' → logprob: -11.775382041931152
    9. '_m' → logprob: -12.275382041931152
    10. 'csr' → logprob: -12.400382041931152

Token 462: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.611483097076416
    2. '   ' → logprob: -1.986483097076416
    3. 'A' → logprob: -2.111483097076416
    4. '=' → logprob: -2.736483097076416
    5. 'graph' → logprob: -2.861483097076416
    6. 'G' → logprob: -3.486483097076416
    7. 'adj' → logprob: -3.861483097076416
    8. ' graph' → logprob: -4.861483097076416
    9. 'matrix' → logprob: -4.986483097076416
    10. 'n' → logprob: -6.486483097076416

Token 463: ' the' (ID: 290)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.010997599922120571
    2. ' csr' → logprob: -4.635997772216797
    3. 'n' → logprob: -7.260997772216797
    4. 'graph' → logprob: -8.510997772216797
    5. 'num' → logprob: -8.635997772216797
    6. 'cs' → logprob: -9.385997772216797
    7. '   ' → logprob: -11.385997772216797
    8. 'the' → logprob: -11.510997772216797
    9. 'N' → logprob: -11.760997772216797
    10. ' n' → logprob: -11.885997772216797

Token 464: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03993886336684227
    2. 'csr' → logprob: -3.2899389266967773
    3. ' graph' → logprob: -6.914938926696777
    4. 'n' → logprob: -8.164938926696777
    5. 'adj' → logprob: -8.914938926696777
    6. 'G' → logprob: -8.914938926696777
    7. 'g' → logprob: -9.539938926696777
    8. 'V' → logprob: -9.664938926696777
    9. 'matrix' → logprob: -9.914938926696777
    10. 'Graph' → logprob: -10.039938926696777

Token 465: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.619778037071228
    2. 'A' → logprob: -1.244778037071228
    3. 'adj' → logprob: -2.3697781562805176
    4. 'graph' → logprob: -2.8697781562805176
    5. 'matrix' → logprob: -4.369778156280518
    6. ' graph' → logprob: -5.869778156280518
    7. 'n' → logprob: -6.119778156280518
    8. 'G' → logprob: -6.244778156280518
    9. 'mat' → logprob: -6.744778156280518
    10. ' adj' → logprob: -7.744778156280518

Token 466: 'direct' (ID: 37135)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.1581437736749649
    2. '(n' → logprob: -3.4081437587738037
    3. 'n' → logprob: -3.5331437587738037
    4. 'V' → logprob: -4.033143997192383
    5. 'adj' → logprob: -4.408143997192383
    6. 'num' → logprob: -4.533143997192383
    7. ' csr' → logprob: -4.533143997192383
    8. 'graph' → logprob: -4.658143997192383
    9. 'N' → logprob: -5.158143997192383
    10. '   ' → logprob: -5.533143997192383

Token 467: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.005956529639661312
    2. 'ion' → logprob: -5.130956649780273
    3. '=' → logprob: -11.005956649780273
    4. 'ions' → logprob: -11.755956649780273
    5. ' =' → logprob: -14.130956649780273
    6. 'ioned' → logprob: -14.880956649780273
    7. 'ional' → logprob: -15.255956649780273
    8. '   ' → logprob: -15.380956649780273
    9. 'graph' → logprob: -15.505956649780273
    10. 'on' → logprob: -15.505956649780273

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25469771027565
    2. ')' → logprob: -1.5046976804733276
    3. '),' → logprob: -6.504697799682617
    4. ' ,' → logprob: -7.754697799682617
    5. '):' → logprob: -8.754697799682617
    6. ',n' → logprob: -9.379697799682617
    7. ',row' → logprob: -9.504697799682617
    8. ')
' → logprob: -9.629697799682617
    9. ',
' → logprob: -9.879697799682617
    10. ',)' → logprob: -10.004697799682617

Token 469: ' from' (ID: 591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.05553464591503143
    2. 'num' → logprob: -3.805534601211548
    3. ' shape' → logprob: -4.055534839630127
    4. 'n' → logprob: -4.555534839630127
    5. 'size' → logprob: -6.555534839630127
    6. '   ' → logprob: -6.680534839630127
    7. 'N' → logprob: -7.930534839630127
    8. 'dtype' → logprob: -8.180534362792969
    9. 'H' → logprob: -8.305534362792969
    10. ' n' → logprob: -9.055534362792969

Token 470: ' each' (ID: 2454)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.07464563101530075
    2. ' row' → logprob: -4.199645519256592
    3. '=' → logprob: -4.574645519256592
    4. 'co' → logprob: -4.699645519256592
    5. '=row' → logprob: -4.699645519256592
    6. ',row' → logprob: -5.449645519256592
    7. ' scipy' → logprob: -5.574645519256592
    8. '_row' → logprob: -5.574645519256592
    9. ' co' → logprob: -5.699645519256592
    10. ')' → logprob: -6.074645519256592

Token 471: ' cell' (ID: 4206)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.5849651098251343
    2. ' row' → logprob: -1.9599651098251343
    3. 'node' → logprob: -2.459965229034424
    4. 'row' → logprob: -2.834965229034424
    5. ' cell' → logprob: -2.834965229034424
    6. ' vertex' → logprob: -2.834965229034424
    7. 'vertex' → logprob: -3.959965229034424
    8. 'cell' → logprob: -4.584965229034424
    9. '_vertex' → logprob: -5.209965229034424
    10. ' ,' → logprob: -7.459965229034424

Token 472: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03186294436454773
    2. ' to' → logprob: -4.281862735748291
    3. 'to' → logprob: -4.656862735748291
    4. ' ,' → logprob: -5.531862735748291
    5. ')' → logprob: -6.031862735748291
    6. ',to' → logprob: -6.906862735748291
    7. ',row' → logprob: -8.53186321258545
    8. '),' → logprob: -8.78186321258545
    9. ',
' → logprob: -8.90686321258545
    10. '```' → logprob: -9.65686321258545

Token 473: ' its' (ID: 1617)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.2162548005580902
    2. 'col' → logprob: -2.091254711151123
    3. 'its' → logprob: -4.216254711151123
    4. ' its' → logprob: -4.216254711151123
    5. 'the' → logprob: -4.591254711151123
    6. 'neighbors' → logprob: -4.591254711151123
    7. 'adj' → logprob: -4.716254711151123
    8. 'neighbor' → logprob: -5.466254711151123
    9. 'each' → logprob: -5.966254711151123
    10. ' row' → logprob: -6.341254711151123

Token 474: ' right' (ID: 1849)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.43997159600257874
    2. 'neighbor' → logprob: -1.5649715662002563
    3. 'adj' → logprob: -2.064971685409546
    4. 'down' → logprob: -4.064971446990967
    5. 'right' → logprob: -6.689971446990967
    6. ' neighbors' → logprob: -6.939971446990967
    7. ' neighbor' → logprob: -8.064971923828125
    8. '```' → logprob: -9.314971923828125
    9. ' adjacent' → logprob: -10.189971923828125
    10. '   ' → logprob: -10.189971923828125

Token 475: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09536901116371155
    2. 'and' → logprob: -3.0953691005706787
    3. ',' → logprob: -3.9703691005706787
    4. '+' → logprob: -3.9703691005706787
    5. ' and' → logprob: -5.7203688621521
    6. '   ' → logprob: -6.3453688621521
    7. '),' → logprob: -7.0953688621521
    8. 'or' → logprob: -7.2203688621521
    9. 'neighbor' → logprob: -7.8453688621521
    10. ' or' → logprob: -8.970369338989258

Token 476: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.00012308525037951767
    2. 'below' → logprob: -9.875123023986816
    3. 'bottom' → logprob: -10.000123023986816
    4. ' down' → logprob: -10.625123023986816
    5. '下' → logprob: -13.750123023986816
    6. '_down' → logprob: -15.375123023986816
    7. 'next' → logprob: -15.500123023986816
    8. 'neighbor' → logprob: -16.000123977661133
    9. 'lower' → logprob: -16.750123977661133
    10. '
' → logprob: -17.250123977661133

Token 477: ' neighbors' (ID: 31655)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028585273772478104
    2. 'neighbors' → logprob: -4.028585433959961
    3. '),' → logprob: -6.278585433959961
    4. ',' → logprob: -6.278585433959961
    5. ' neighbors' → logprob: -6.403585433959961
    6. '   ' → logprob: -6.403585433959961
    7. 'neighbor' → logprob: -6.528585433959961
    8. ' neighbor' → logprob: -8.278585433959961
    9. ' )' → logprob: -8.403585433959961
    10. '_neighbors' → logprob: -8.403585433959961

Token 478: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11229023337364197
    2. ',' → logprob: -2.362290143966675
    3. ')
' → logprob: -4.487290382385254
    4. '),' → logprob: -7.612290382385254
    5. ',
' → logprob: -8.987290382385254
    6. '   ' → logprob: -10.737290382385254
    7. ' ,' → logprob: -10.862290382385254
    8. ')
' → logprob: -10.987290382385254
    9. ').' → logprob: -11.487290382385254
    10. ',)' → logprob: -11.612290382385254

Token 479: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.47099101543426514
    2. '   ' → logprob: -1.5959910154342651
    3. 'A' → logprob: -2.0959911346435547
    4. 'adj' → logprob: -3.2209911346435547
    5. 'G' → logprob: -4.970991134643555
    6. 'matrix' → logprob: -6.470991134643555
    7. ' graph' → logprob: -7.970991134643555
    8. 'mat' → logprob: -8.095991134643555
    9. 'g' → logprob: -8.470991134643555
    10. '```' → logprob: -8.970991134643555

Token 480: ' adjacency' (ID: 177015)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.19069983065128326
    2. 'adj' → logprob: -2.315699815750122
    3. '   ' → logprob: -3.315699815750122
    4. 'G' → logprob: -4.065700054168701
    5. 'A' → logprob: -4.440700054168701
    6. ' graph' → logprob: -4.815700054168701
    7. 'mat' → logprob: -7.440700054168701
    8. 'g' → logprob: -8.315699577331543
    9. ' adj' → logprob: -8.565699577331543
    10. 'matrix' → logprob: -8.565699577331543

Token 481: '_matrix' (ID: 23431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09515246748924255
    2. ' =' → logprob: -2.4701523780822754
    3. '_matrix' → logprob: -5.095152378082275
    4. 'matrix' → logprob: -10.845152854919434
    5. '_mat' → logprob: -11.345152854919434
    6. '=np' → logprob: -11.470152854919434
    7. 's' → logprob: -12.595152854919434
    8. '=_' → logprob: -12.845152854919434
    9. '=
' → logprob: -12.970152854919434
    10. '=s' → logprob: -13.095152854919434

Token 482: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408220171928406
    2. '=' → logprob: -0.9740822315216064
    3. '=np' → logprob: -13.849081993103027
    4. '=c' → logprob: -13.849081993103027
    5. ')' → logprob: -14.599081993103027
    6. '=s' → logprob: -14.974081993103027
    7. ' ' → logprob: -15.099081993103027
    8. ',' → logprob: -15.224081993103027
    9. '   ' → logprob: -15.224081993103027
    10. ' ' → logprob: -15.474081993103027

Token 483: ' csr' (ID: 162927)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.004082793369889259
    2. ' csr' → logprob: -5.504082679748535
    3. '   ' → logprob: -12.754082679748535
    4. 'cs' → logprob: -14.629082679748535
    5. '```' → logprob: -15.004082679748535
    6. 'np' → logprob: -16.00408363342285
    7. 'c' → logprob: -16.12908363342285
    8. 'CSR' → logprob: -16.37908363342285
    9. ' ' → logprob: -17.00408363342285
    10. 'csv' → logprob: -17.12908363342285

Token 484: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -3.292907877039397e-06
    2. 'matrix' → logprob: -12.75000286102295
    3. '_mat' → logprob: -16.250003814697266
    4. '_MATRIX' → logprob: -16.250003814697266
    5. 'Matrix' → logprob: -17.000003814697266
    6. '_m' → logprob: -17.500003814697266
    7. ' _' → logprob: -17.750003814697266
    8. '_vector' → logprob: -18.000003814697266
    9. '_' → logprob: -18.000003814697266
    10. '_array' → logprob: -18.125003814697266

Token 485: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0011870148591697216
    2. '(' → logprob: -7.001186847686768
    3. '(([' → logprob: -8.251187324523926
    4. '(
' → logprob: -11.251187324523926
    5. '([' → logprob: -14.376187324523926
    6. '(({' → logprob: -15.126187324523926
    7. '(('' → logprob: -15.751187324523926
    8. ' ((' → logprob: -15.751187324523926
    9. '(row' → logprob: -16.50118637084961
    10. '(((' → logprob: -16.87618637084961

Token 486: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.976922744186595e-05
    2. '(dist' → logprob: -10.250040054321289
    3. 'np' → logprob: -13.250040054321289
    4. ' dist' → logprob: -13.250040054321289
    5. '   ' → logprob: -14.250040054321289
    6. '	dist' → logprob: -17.00004005432129
    7. '(np' → logprob: -19.37504005432129
    8. 'Dist' → logprob: -21.00004005432129
    9. '_dist' → logprob: -21.50004005432129
    10. '[' → logprob: -21.62504005432129

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036211006809026003
    2. ',(' → logprob: -5.7536211013793945
    3. ' ,' → logprob: -7.7536211013793945
    4. '(' → logprob: -12.253621101379395
    5. ',
' → logprob: -12.878621101379395
    6. '),' → logprob: -13.753621101379395
    7. ' (' → logprob: -13.753621101379395
    8. ',row' → logprob: -13.878621101379395
    9. '((' → logprob: -14.503621101379395
    10. '),(' → logprob: -14.628621101379395

Token 488: ' (' (ID: 350)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -5.200166469876422e-06
    2. ' (' → logprob: -12.250004768371582
    3. '(rows' → logprob: -16.2500057220459
    4. '   ' → logprob: -16.2500057220459
    5. '(np' → logprob: -16.5000057220459
    6. '[row' → logprob: -17.5000057220459
    7. '(Row' → logprob: -17.6250057220459
    8. 'row' → logprob: -18.2500057220459
    9. ',row' → logprob: -18.5000057220459
    10. '(' → logprob: -18.5000057220459

Token 489: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -4.961759259458631e-06
    2. '(row' → logprob: -12.875004768371582
    3. ' row' → logprob: -13.000004768371582
    4. '[row' → logprob: -18.2500057220459
    5. '   ' → logprob: -20.0000057220459
    6. 'np' → logprob: -21.1250057220459
    7. 'rows' → logprob: -21.1250057220459
    8. '	row' → logprob: -21.5000057220459
    9. '
' → logprob: -21.6250057220459
    10. '(' → logprob: -22.2500057220459

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034153475426137447
    2. ',col' → logprob: -5.753415584564209
    3. ' ,' → logprob: -8.62841510772705
    4. ',row' → logprob: -10.50341510772705
    5. ',
' → logprob: -11.25341510772705
    6. ',column' → logprob: -11.37841510772705
    7. 'col' → logprob: -13.75341510772705
    8. ',c' → logprob: -13.87841510772705
    9. ' col' → logprob: -14.37841510772705
    10. ',

' → logprob: -14.50341510772705

Token 491: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.029750604182481766
    2. ' col' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.77975082397461
    4. '	col' → logprob: -17.27975082397461
    5. 'column' → logprob: -17.77975082397461
    6. '   ' → logprob: -18.27975082397461
    7. '(col' → logprob: -18.65475082397461
    8. '[col' → logprob: -18.77975082397461
    9. 'coll' → logprob: -18.90475082397461
    10. 'coln' → logprob: -18.90475082397461

Token 492: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.5361157059669495
    2. '))' → logprob: -1.0361156463623047
    3. '),' → logprob: -2.9111156463623047
    4. ')))' → logprob: -5.286115646362305
    5. ')' → logprob: -7.411115646362305
    6. ',' → logprob: -10.411115646362305
    7. ')),
' → logprob: -10.661115646362305
    8. '))),' → logprob: -12.161115646362305
    9. ' ' → logprob: -13.036115646362305
    10. ' ))' → logprob: -13.286115646362305

Token 493: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.4671289622783661
    2. '(shape' → logprob: -1.4671289920806885
    3. '(H' → logprob: -1.9671289920806885
    4. ' (' → logprob: -6.842128753662109
    5. ' shape' → logprob: -7.342128753662109
    6. '(' → logprob: -7.717128753662109
    7. '((' → logprob: -8.96712875366211
    8. '(h' → logprob: -9.09212875366211
    9. '(dtype' → logprob: -9.21712875366211
    10. '   ' → logprob: -9.46712875366211

Token 494: '=[' (ID: 13370)
  Prédit: '=('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.002465310040861368
    2. '(H' → logprob: -6.50246524810791
    3. '(' → logprob: -7.12746524810791
    4. '((' → logprob: -9.12746524810791
    5. '=' → logprob: -10.12746524810791
    6. ' (' → logprob: -12.25246524810791
    7. '=((' → logprob: -12.87746524810791
    8. ')' → logprob: -13.12746524810791
    9. '(n' → logprob: -14.37746524810791
    10. '(N' → logprob: -15.00246524810791

Token 495: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.1008713702030946e-06
    2. ' H' → logprob: -13.250001907348633
    3. '(H' → logprob: -15.250001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '	H' → logprob: -20.000001907348633
    6. 'Hx' → logprob: -20.750001907348633
    7. '_H' → logprob: -21.375001907348633
    8. ',H' → logprob: -21.500001907348633
    9. '(' → logprob: -21.625001907348633
    10. ' ' → logprob: -21.625001907348633

Token 496: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011751551181077957
    2. ',' → logprob: -4.636751651763916
    3. ' *' → logprob: -6.261751651763916
    4. ',W' → logprob: -9.886751174926758
    5. 'W' → logprob: -10.886751174926758
    6. '*,' → logprob: -11.886751174926758
    7. ' ,' → logprob: -12.261751174926758
    8. '*w' → logprob: -13.136751174926758
    9. ' ' → logprob: -14.386751174926758
    10. ' W' → logprob: -14.511751174926758

Token 497: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.005234002135694027
    2. ' W' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.380233764648438
    4. '   ' → logprob: -17.005233764648438
    5. ',W' → logprob: -17.630233764648438
    6. ',' → logprob: -18.755233764648438
    7. '	W' → logprob: -18.880233764648438
    8. '*' → logprob: -20.005233764648438
    9. '  ' → logprob: -20.130233764648438
    10. 'w' → logprob: -21.005233764648438

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1557283111615106e-05
    2. ',H' → logprob: -11.000041961669922
    3. ' ,' → logprob: -11.375041961669922
    4. ',W' → logprob: -11.875041961669922
    5. ',
' → logprob: -12.125041961669922
    6. '<|end|>' → logprob: -15.250041961669922
    7. ')' → logprob: -15.875041961669922
    8. ',

' → logprob: -16.000041961669922
    9. ')],' → logprob: -16.875041961669922
    10. ',
' → logprob: -17.000041961669922

Token 499: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.006740119773894548
    2. ' H' → logprob: -5.006740093231201
    3. 'W' → logprob: -10.63174057006836
    4. '   ' → logprob: -15.13174057006836
    5. ' ' → logprob: -15.88174057006836
    6. ' W' → logprob: -15.88174057006836
    7. '	H' → logprob: -17.88174057006836
    8. '  ' → logprob: -18.00674057006836
    9. '    ' → logprob: -19.50674057006836
    10. '(H' → logprob: -19.88174057006836

Token 500: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.010052595287561417
    2. ' *' → logprob: -4.635052680969238
    3. 'W' → logprob: -8.135052680969238
    4. ' W' → logprob: -13.635052680969238
    5. ',' → logprob: -13.885052680969238
    6. ' ' → logprob: -14.260052680969238
    7. '   ' → logprob: -15.510052680969238
    8. ')' → logprob: -16.260051727294922
    9. '*
' → logprob: -16.260051727294922
    10. '*,' → logprob: -16.885051727294922

Token 501: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -2.8206473871250637e-05
    2. ' W' → logprob: -10.500028610229492
    3. ' ' → logprob: -15.125028610229492
    4. '	W' → logprob: -16.937528610229492
    5. 'w' → logprob: -17.250028610229492
    6. '   ' → logprob: -17.375028610229492
    7. '```' → logprob: -17.375028610229492
    8. '(W' → logprob: -18.062528610229492
    9. '<W' → logprob: -18.062528610229492
    10. '_W' → logprob: -18.125028610229492

Token 502: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -8.244413766078651e-05
    2. ')' → logprob: -10.000082015991211
    3. ')])' → logprob: -10.500082015991211
    4. ' ])' → logprob: -12.750082015991211
    5. '])
' → logprob: -13.375082015991211
    6. ')]' → logprob: -13.500082015991211
    7. '],' → logprob: -13.750082015991211
    8. '))' → logprob: -14.125082015991211
    9. '])]' → logprob: -14.750082015991211
    10. ']))' → logprob: -14.875082015991211

Token 503: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2714962363243103
    2. 'dist' → logprob: -1.771496295928955
    3. 'distance' → logprob: -3.646496295928955
    4. 'cost' → logprob: -4.021496295928955
    5. '```' → logprob: -4.646496295928955
    6. 'result' → logprob: -4.771496295928955
    7. 'start' → logprob: -5.771496295928955
    8. '    
' → logprob: -8.271495819091797
    9. 'graph' → logprob: -8.271495819091797
    10. 'd' → logprob: -8.396495819091797

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.259702205657959
    2. 'dist' → logprob: -1.509702205657959
    3. 'cost' → logprob: -6.009702205657959
    4. 'distance' → logprob: -6.009702205657959
    5. 'start' → logprob: -6.259702205657959
    6. '```' → logprob: -8.009702682495117
    7. '#' → logprob: -8.384702682495117
    8. 'd' → logprob: -8.759702682495117
    9. 'result' → logprob: -9.384702682495117
    10. 'source' → logprob: -10.259702682495117

Token 505: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01768450066447258
    2. 'cost' → logprob: -5.142684459686279
    3. '#' (adapté à ' #') → logprob: -5.267684459686279
    4. 'start' → logprob: -5.642684459686279
    5. 'distance' → logprob: -5.892684459686279
    6. '   ' → logprob: -9.517684936523438
    7. 'd' → logprob: -9.517684936523438
    8. '```' → logprob: -10.767684936523438
    9. 'result' → logprob: -11.392684936523438
    10. 'length' → logprob: -11.392684936523438

Token 506: ' Run' (ID: 14581)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09703537821769714
    2. 'cost' → logprob: -3.0970354080200195
    3. 'distance' → logprob: -3.7220354080200195
    4. 'start' → logprob: -4.5970354080200195
    5. '#' → logprob: -4.8470354080200195
    6. 'd' → logprob: -5.7220354080200195
    7. 'result' → logprob: -6.8470354080200195
    8. 'min' → logprob: -7.9720354080200195
    9. 'D' → logprob: -9.09703540802002
    10. 'length' → logprob: -9.34703540802002

Token 507: ' D' (ID: 415)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09063305705785751
    2. 'dist' → logprob: -2.4656331539154053
    3. 'distance' → logprob: -7.715632915496826
    4. 'result' → logprob: -7.965632915496826
    5. ' d' → logprob: -8.090633392333984
    6. 'short' → logprob: -8.465633392333984
    7. 'cost' → logprob: -8.965633392333984
    8. '```' → logprob: -9.715633392333984
    9. ' dist' → logprob: -9.965633392333984
    10. 'D' → logprob: -10.090633392333984

Token 508: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -4.4894986785948277e-05
    2. 'ijk' → logprob: -10.125044822692871
    3. 'ij' → logprob: -12.500044822692871
    4. 'jik' → logprob: -14.625044822692871
    5. 'ijkl' → logprob: -15.250044822692871
    6. 'ik' → logprob: -16.250045776367188
    7. 'ijks' → logprob: -16.375045776367188
    8. 'jk' → logprob: -17.125045776367188
    9. 'j' → logprob: -17.375045776367188
    10. '```' → logprob: -17.625045776367188

Token 509: ''s' (ID: 885)
  Prédit: '(ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ad' → logprob: -0.018524127081036568
    2. '(' → logprob: -4.393524169921875
    3. 'adj' → logprob: -6.268524169921875
    4. '(dist' → logprob: -6.768524169921875
    5. '(distance' → logprob: -7.518524169921875
    6. '(adj' → logprob: -7.518524169921875
    7. '(
' → logprob: -7.893524169921875
    8. '(graph' → logprob: -8.018524169921875
    9. '_ad' → logprob: -8.768524169921875
    10. 'dist' → logprob: -8.768524169921875

Token 510: ' algorithm' (ID: 22184)
  Prédit: 'algorithm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'algorithm' → logprob: -0.0030892977956682444
    2. '_algorithm' → logprob: -6.503089427947998
    3. ' algorithm' → logprob: -6.628089427947998
    4. 'short' → logprob: -8.75308895111084
    5. '_short' → logprob: -10.00308895111084
    6. 'function' → logprob: -11.75308895111084
    7. 'algo' → logprob: -11.75308895111084
    8. 'Algorithm' → logprob: -11.87808895111084
    9. ' shortest' → logprob: -12.25308895111084
    10. 'distance' → logprob: -12.37808895111084

Token 511: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22172380983829498
    2. '   ' → logprob: -1.9717237949371338
    3. 'distance' → logprob: -4.221724033355713
    4. 'result' → logprob: -4.221724033355713
    5. ',' → logprob: -4.721724033355713
    6. '(dist' → logprob: -4.846724033355713
    7. 'cost' → logprob: -5.096724033355713
    8. '(distance' → logprob: -6.346724033355713
    9. ' distances' → logprob: -7.346724033355713
    10. '```' → logprob: -7.471724033355713

Token 512: ' find' (ID: 1646)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.45751532912254333
    2. 'compute' → logprob: -1.8325153589248657
    3. ' compute' → logprob: -2.332515239715576
    4. 'd' → logprob: -3.082515239715576
    5. ' find' → logprob: -3.957515239715576
    6. 'calculate' → logprob: -4.082515239715576
    7. 'find' → logprob: -4.207515239715576
    8. ' distances' → logprob: -5.582515239715576
    9. ' calculate' → logprob: -6.082515239715576
    10. 'distance' → logprob: -6.332515239715576

Token 513: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.20328190922737122
    2. 'dist' → logprob: -1.8282818794250488
    3. ' the' → logprob: -4.328281879425049
    4. 'short' → logprob: -4.953281879425049
    5. 'd' → logprob: -6.328281879425049
    6. ' shortest' → logprob: -7.203281879425049
    7. ' distances' → logprob: -8.828282356262207
    8. '(dist' → logprob: -9.203282356262207
    9. '(' → logprob: -9.828282356262207
    10. 'distance' → logprob: -10.578282356262207

Token 514: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.1841042935848236
    2. ' shortest' → logprob: -2.0591042041778564
    3. 'dist' → logprob: -3.6841042041778564
    4. 'minimum' → logprob: -4.8091044425964355
    5. 'd' → logprob: -5.4341044425964355
    6. 'distance' → logprob: -6.0591044425964355
    7. 'lowest' → logprob: -8.934103965759277
    8. 'minimal' → logprob: -8.934103965759277
    9. 'min' → logprob: -9.184103965759277
    10. ' distances' → logprob: -10.059103965759277

Token 515: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0631382167339325
    2. 'path' → logprob: -2.813138246536255
    3. ' path' → logprob: -6.813138008117676
    4. '_paths' → logprob: -10.063138008117676
    5. '_distance' → logprob: -11.313138008117676
    6. 'distance' → logprob: -12.313138008117676
    7. 'paths' → logprob: -12.563138008117676
    8. '_dist' → logprob: -12.688138008117676
    9. '```' → logprob: -13.813138008117676
    10. '_' → logprob: -14.188138008117676

Token 516: ' from' (ID: 591)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2156822234392166
    2. 'distance' → logprob: -2.8406822681427
    3. '   ' → logprob: -3.2156822681427
    4. 'cost' → logprob: -3.3406822681427
    5. ',' → logprob: -4.090682029724121
    6. 'result' → logprob: -4.215682029724121
    7. '_,' → logprob: -4.465682029724121
    8. 'from' → logprob: -4.965682029724121
    9. '(dist' → logprob: -6.090682029724121
    10. ' distances' → logprob: -6.590682029724121

Token 517: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005186012131161988
    2. ' ' → logprob: -7.750518798828125
    3. 'co' → logprob: -9.625518798828125
    4. 'node' → logprob: -11.875518798828125
    5. 'source' → logprob: -12.000518798828125
    6. 'start' → logprob: -12.250518798828125
    7. 'the' → logprob: -13.625518798828125
    8. 'vertex' → logprob: -13.750518798828125
    9. ' co' → logprob: -14.250518798828125
    10. ' node' → logprob: -14.750518798828125

Token 518: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07666241377592087
    2. 'start' → logprob: -2.951662302017212
    3. 'top' → logprob: -4.826662540435791
    4. 'source' → logprob: -5.076662540435791
    5. 'node' → logprob: -5.701662540435791
    6. 'vertex' → logprob: -6.076662540435791
    7. 'co' → logprob: -6.951662540435791
    8. '(' → logprob: -8.201662063598633
    9. ' start' → logprob: -8.826662063598633
    10. ' ' → logprob: -9.326662063598633

Token 519: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49661388993263245
    2. '=' → logprob: -1.87161386013031
    3. '(' → logprob: -2.7466139793395996
    4. 'vertex' → logprob: -3.1216139793395996
    5. 'to' → logprob: -3.2466139793395996
    6. '_vertex' → logprob: -3.4966139793395996
    7. ' =' → logprob: -4.7466139793396
    8. ' to' → logprob: -4.7466139793396
    9. '0' → logprob: -4.9966139793396
    10. ' ,' → logprob: -5.4966139793396

Token 520: 'top' (ID: 8169)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008259449969045818
    2. 'co' → logprob: -7.125825881958008
    3. ' ' → logprob: -11.000825881958008
    4. ' co' → logprob: -13.375825881958008
    5. '```' → logprob: -14.000825881958008
    6. ')' → logprob: -14.750825881958008
    7. '(' → logprob: -14.750825881958008
    8. '00' → logprob: -14.875825881958008
    9. '(co' → logprob: -15.000825881958008
    10. '=' → logprob: -15.500825881958008

Token 521: '-left' (ID: 17007)
  Prédit: '-left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-left' → logprob: -0.014245775528252125
    2. '_left' → logprob: -4.264245986938477
    3. '0' → logprob: -10.264245986938477
    4. 'left' → logprob: -10.889245986938477
    5. '-' → logprob: -11.514245986938477
    6. ' left' → logprob: -12.389245986938477
    7. 'Left' → logprob: -12.389245986938477
    8. ' -' → logprob: -12.639245986938477
    9. '_LEFT' → logprob: -12.764245986938477
    10. '[' → logprob: -13.514245986938477

Token 522: ' cell' (ID: 4206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06330461800098419
    2. ' cell' → logprob: -4.438304424285889
    3. ' to' → logprob: -4.563304424285889
    4. '(' → logprob: -4.563304424285889
    5. ' )' → logprob: -4.938304424285889
    6. 'cell' → logprob: -5.188304424285889
    7. ' (' → logprob: -5.438304424285889
    8. 'to' → logprob: -5.563304424285889
    9. '0' → logprob: -6.313304424285889
    10. 'vertex' → logprob: -6.438304424285889

Token 523: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2300139218568802
    2. ')' → logprob: -1.6050139665603638
    3. '(' → logprob: -6.230013847351074
    4. '0' → logprob: -6.355013847351074
    5. '),' → logprob: -7.980013847351074
    6. ',)' → logprob: -8.230013847351074
    7. ' ,' → logprob: -9.230013847351074
    8. ' (' → logprob: -10.230013847351074
    9. 'to' → logprob: -10.480013847351074
    10. '   ' → logprob: -10.855013847351074

Token 524: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3779531717300415
    2. '   ' → logprob: -1.6279531717300415
    3. 'distance' → logprob: -3.377953052520752
    4. 'cost' → logprob: -4.127953052520752
    5. '_,' → logprob: -4.127953052520752
    6. ' to' → logprob: -4.252953052520752
    7. 'dist' → logprob: -4.502953052520752
    8. 'to' → logprob: -4.752953052520752
    9. '```' → logprob: -5.502953052520752
    10. 'result' → logprob: -5.627953052520752

Token 525: ' the' (ID: 290)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.401161253452301
    2. ' co' → logprob: -1.1511611938476562
    3. 'the' → logprob: -4.776161193847656
    4. ' the' → logprob: -5.276161193847656
    5. '(co' → logprob: -8.276161193847656
    6. 'end' → logprob: -8.901161193847656
    7. 'H' → logprob: -9.651161193847656
    8. ' H' → logprob: -9.901161193847656
    9. '(H' → logprob: -10.401161193847656
    10. '0' → logprob: -10.526161193847656

Token 526: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.06148992478847504
    2. 'bottom' → logprob: -3.1864898204803467
    3. ' end' → logprob: -4.561490058898926
    4. 'last' → logprob: -5.186490058898926
    5. ' bottom' → logprob: -7.061490058898926
    6. 'target' → logprob: -7.436490058898926
    7. 'goal' → logprob: -7.686490058898926
    8. '(H' → logprob: -8.311490058898926
    9. '(end' → logprob: -9.561490058898926
    10. ' last' → logprob: -10.811490058898926

Token 527: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9726539850234985
    2. ',' → logprob: -0.9726539850234985
    3. '_,' → logprob: -1.8476539850234985
    4. '   ' → logprob: -3.722653865814209
    5. '=' → logprob: -4.472653865814209
    6. ' =' → logprob: -4.597653865814209
    7. ' (' → logprob: -5.222653865814209
    8. 'distance' → logprob: -5.222653865814209
    9. '```' → logprob: -5.472653865814209
    10. '=(' → logprob: -5.847653865814209

Token 528: 'bottom' (ID: 29677)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.09568440914154053
    2. 'bottom' → logprob: -2.72068452835083
    3. ' H' → logprob: -4.09568452835083
    4. '(H' → logprob: -5.34568452835083
    5. ' bottom' → logprob: -5.72068452835083
    6. 'last' → logprob: -7.72068452835083
    7. ')' → logprob: -8.970684051513672
    8. 'end' → logprob: -11.095684051513672
    9. 'co' → logprob: -11.220684051513672
    10. '0' → logprob: -11.220684051513672

Token 529: '-right' (ID: 14810)
  Prédit: '-right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-right' → logprob: -0.16195796430110931
    2. '_right' → logprob: -1.9119579792022705
    3. '-' → logprob: -7.286957740783691
    4. '-left' → logprob: -7.786957740783691
    5. '_left' → logprob: -8.036957740783691
    6. 'right' → logprob: -8.911957740783691
    7. '_RIGHT' → logprob: -9.161957740783691
    8. '   ' → logprob: -10.536957740783691
    9. ' -' → logprob: -11.036957740783691
    10. '_Right' → logprob: -11.911957740783691

Token 530: ' cell' (ID: 4206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4577724039554596
    2. 'cell' → logprob: -1.2077723741531372
    3. ' cell' → logprob: -3.0827724933624268
    4. '),' → logprob: -4.832772254943848
    5. '_cell' → logprob: -5.457772254943848
    6. ',' → logprob: -5.832772254943848
    7. ' )' → logprob: -5.957772254943848
    8. 'vertex' → logprob: -6.707772254943848
    9. 'corner' → logprob: -7.582772254943848
    10. ')
' → logprob: -7.957772254943848

Token 531: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3374937176704407
    2. ',' → logprob: -1.462493658065796
    3. ')
' → logprob: -3.087493658065796
    4. '   ' → logprob: -4.837493896484375
    5. ',
' → logprob: -7.712493896484375
    6. ').' → logprob: -8.712493896484375
    7. ',)' → logprob: -8.837493896484375
    8. '),' → logprob: -8.962493896484375
    9. ')
' → logprob: -9.837493896484375
    10. 'start' → logprob: -9.962493896484375

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48240476846694946
    2. 'dist' → logprob: -1.1074047088623047
    3. 'cost' → logprob: -3.9824047088623047
    4. 'distance' → logprob: -3.9824047088623047
    5. 'result' → logprob: -5.232404708862305
    6. '```' → logprob: -5.482404708862305
    7. 'd' → logprob: -6.732404708862305
    8. ',' → logprob: -7.232404708862305
    9. ' distances' → logprob: -7.357404708862305
    10. ' dist' → logprob: -7.607404708862305

Token 533: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07412464916706085
    2. 'cost' → logprob: -2.824124574661255
    3. 'distance' → logprob: -5.199124813079834
    4. 'result' → logprob: -5.199124813079834
    5. 'min' → logprob: -8.199124336242676
    6. 'res' → logprob: -8.199124336242676
    7. 'd' → logprob: -8.324124336242676
    8. '   ' → logprob: -9.199124336242676
    9. 'short' → logprob: -10.074124336242676
    10. ' dist' → logprob: -10.324124336242676

Token 534: ' The' (ID: 623)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008373082615435123
    2. 'cost' → logprob: -5.008373260498047
    3. 'distance' → logprob: -6.758373260498047
    4. 'result' → logprob: -8.633373260498047
    5. 'd' → logprob: -9.383373260498047
    6. 'min' → logprob: -9.508373260498047
    7. '   ' → logprob: -10.008373260498047
    8. 'start' → logprob: -10.258373260498047
    9. ' dist' → logprob: -10.883373260498047
    10. 'length' → logprob: -10.883373260498047

Token 535: ' cost' (ID: 3097)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1300484985113144
    2. 'start' → logprob: -3.1300485134124756
    3. 'distance' → logprob: -3.7550485134124756
    4. 'source' → logprob: -4.0050482749938965
    5. 'result' → logprob: -4.1300482749938965
    6. 'cost' → logprob: -4.7550482749938965
    7. 'target' → logprob: -5.6300482749938965
    8. '_,' → logprob: -6.0050482749938965
    9. 'path' → logprob: -6.1300482749938965
    10. 'd' → logprob: -6.8800482749938965

Token 536: ' here' (ID: 2105)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8979909420013428
    2. ',' → logprob: -1.2729909420013428
    3. '_matrix' → logprob: -1.3979909420013428
    4. 'matrix' → logprob: -4.022991180419922
    5. 'from' → logprob: -4.272991180419922
    6. 's' → logprob: -4.397991180419922
    7. ' =' → logprob: -4.522991180419922
    8. 'is' → logprob: -6.397991180419922
    9. '_array' → logprob: -6.522991180419922
    10. '_,' → logprob: -6.897991180419922

Token 537: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20216955244541168
    2. 'rep' → logprob: -2.45216965675354
    3. ' represents' → logprob: -3.20216965675354
    4. ' =' → logprob: -3.82716965675354
    5. ' is' → logprob: -4.452169418334961
    6. 'is' → logprob: -4.577169418334961
    7. ')' → logprob: -5.077169418334961
    8. ',' → logprob: -6.327169418334961
    9. 'matrix' → logprob: -6.827169418334961
    10. '   ' → logprob: -7.452169418334961

Token 538: ' the' (ID: 290)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008889438584446907
    2. 'the' → logprob: -5.508889675140381
    3. 'dist' → logprob: -6.008889675140381
    4. ' d' → logprob: -6.633889675140381
    5. 'distance' → logprob: -7.883889675140381
    6. '   ' → logprob: -8.383889198303223
    7. 'minimal' → logprob: -9.633889198303223
    8. 'short' → logprob: -9.758889198303223
    9. 'min' → logprob: -10.008889198303223
    10. 'cost' → logprob: -10.258889198303223

Token 539: ' minimal' (ID: 19957)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.9607954621315002
    2. 'distance' → logprob: -1.2107954025268555
    3. 'd' → logprob: -1.5857954025268555
    4. 'number' → logprob: -3.4607954025268555
    5. 'minimal' → logprob: -3.4607954025268555
    6. 'short' → logprob: -3.9607954025268555
    7. 'color' → logprob: -4.8357954025268555
    8. 'cost' → logprob: -4.8357954025268555
    9. ' d' → logprob: -5.4607954025268555
    10. 'dist' → logprob: -5.8357954025268555

Token 540: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.548575758934021
    2. 'number' → logprob: -0.923575758934021
    3. 'color' → logprob: -4.7985758781433105
    4. 'distance' → logprob: -4.9235758781433105
    5. '_number' → logprob: -6.1735758781433105
    6. ' color' → logprob: -6.2985758781433105
    7. ' distance' → logprob: -6.4235758781433105
    8. 'path' → logprob: -7.2985758781433105
    9. 'change' → logprob: -7.4235758781433105
    10. ' path' → logprob: -7.9235758781433105

Token 541: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5550745129585266
    2. '_of' → logprob: -1.0550744533538818
    3. ' of' → logprob: -2.680074453353882
    4. '_changes' → logprob: -5.430074691772461
    5. ' ' → logprob: -6.805074691772461
    6. '_path' → logprob: -6.930074691772461
    7. '   ' → logprob: -6.930074691772461
    8. '_' → logprob: -7.680074691772461
    9. '_change' → logprob: -7.680074691772461
    10. ')' → logprob: -9.305074691772461

Token 542: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0011046138824895024
    2. ' color' → logprob: -6.876104831695557
    3. 'changes' → logprob: -9.751104354858398
    4. 'edges' → logprob: -12.501104354858398
    5. 'colors' → logprob: -12.626104354858398
    6. 'cost' → logprob: -14.251104354858398
    7. ' changes' → logprob: -14.376104354858398
    8. 'edge' → logprob: -14.751104354858398
    9. '	color' → logprob: -14.751104354858398
    10. '0' → logprob: -15.001104354858398

Token 543: ' changes' (ID: 6629)
  Prédit: 'changes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changes' → logprob: -0.6218516826629639
    2. ' changes' → logprob: -0.8718516826629639
    3. '_changes' → logprob: -3.121851682662964
    4. '_' → logprob: -7.996851921081543
    5. '_change' → logprob: -8.871851921081543
    6. 'change' → logprob: -9.121851921081543
    7. ' ' → logprob: -9.496851921081543
    8. ' _' → logprob: -9.996851921081543
    9. ' change' → logprob: -11.371851921081543
    10. '   ' → logprob: -11.746851921081543

Token 544: ' along' (ID: 4251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3632102608680725
    2. ',' → logprob: -1.8632102012634277
    3. ',
' → logprob: -3.2382102012634277
    4. 'result' → logprob: -3.3632102012634277
    5. ')
' → logprob: -3.8632102012634277
    6. 'cost' → logprob: -3.8632102012634277
    7. ')' → logprob: -4.613210201263428
    8. 'distance' → logprob: -4.863210201263428
    9. 'start' → logprob: -5.863210201263428
    10. 'dist' → logprob: -6.113210201263428

Token 545: ' any' (ID: 1062)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.11290163546800613
    2. ' the' → logprob: -2.2379016876220703
    3. 'path' → logprob: -10.36290168762207
    4. 'edges' → logprob: -11.61290168762207
    5. 'that' → logprob: -11.73790168762207
    6. ' edges' → logprob: -12.11290168762207
    7. 'paths' → logprob: -12.36290168762207
    8. 's' → logprob: -12.36290168762207
    9. 'with' → logprob: -12.61290168762207
    10. ' that' → logprob: -12.98790168762207

Token 546: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.34894147515296936
    2. ' path' → logprob: -1.223941445350647
    3. ' valid' → logprob: -8.848941802978516
    4. 'valid' → logprob: -8.848941802978516
    5. 'possible' → logprob: -9.098941802978516
    6. 'short' → logprob: -10.473941802978516
    7. '   ' → logprob: -10.723941802978516
    8. ' shortest' → logprob: -10.848941802978516
    9. ' possible' → logprob: -11.973941802978516
    10. ' ' → logprob: -11.973941802978516

Token 547: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05205832049250603
    2. ',' → logprob: -3.552058219909668
    3. ',
' → logprob: -5.302058219909668
    4. 'result' → logprob: -5.302058219909668
    5. 'dist' → logprob: -6.177058219909668
    6. 'distance' → logprob: -6.177058219909668
    7. 'cost' → logprob: -6.302058219909668
    8. '
' → logprob: -6.302058219909668
    9. '    
' → logprob: -6.927058219909668
    10. ')
' → logprob: -7.052058219909668

Token 548: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5915349721908569
    2. '(' → logprob: -0.8415349721908569
    3. 'the' → logprob: -5.3415350914001465
    4. 'co' → logprob: -5.4665350914001465
    5. ' (' → logprob: -5.5915350914001465
    6. ' ' → logprob: -7.3415350914001465
    7. 'start' → logprob: -7.3415350914001465
    8. ' the' → logprob: -7.5915350914001465
    9. 'vertex' → logprob: -7.7165350914001465
    10. 'node' → logprob: -8.841534614562988

Token 549: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18516387045383453
    2. ' to' → logprob: -2.560163974761963
    3. 'to' → logprob: -2.685163974761963
    4. '   ' → logprob: -4.435163974761963
    5. ' ,' → logprob: -5.435163974761963
    6. '_,' → logprob: -6.310163974761963
    7. ',to' → logprob: -6.435163974761963
    8. '(' → logprob: -7.060163974761963
    9. ')' → logprob: -7.560163974761963
    10. ' =' → logprob: -7.685163974761963

Token 550: ' goal' (ID: 8583)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5771521329879761
    2. 'the' → logprob: -1.202152132987976
    3. ' the' → logprob: -2.3271522521972656
    4. ' end' → logprob: -3.9521522521972656
    5. '(' → logprob: -4.952152252197266
    6. 'goal' → logprob: -5.827152252197266
    7. 'bottom' → logprob: -5.952152252197266
    8. 'top' → logprob: -6.452152252197266
    9. '0' → logprob: -6.702152252197266
    10. 'finish' → logprob: -6.827152252197266

Token 551: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07681642472743988
    2. 'dist' → logprob: -3.3268163204193115
    3. ',' → logprob: -4.201816558837891
    4. 'cost' → logprob: -4.826816558837891
    5. 'distance' → logprob: -4.951816558837891
    6. ')
' → logprob: -6.451816558837891
    7. 'result' → logprob: -6.576816558837891
    8. ')' → logprob: -6.826816558837891
    9. '    
' → logprob: -7.576816558837891
    10. '```' → logprob: -7.576816558837891

Token 552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10349167138338089
    2. 'dist' → logprob: -2.72849178314209
    3. 'cost' → logprob: -4.72849178314209
    4. 'result' → logprob: -4.85349178314209
    5. 'distance' → logprob: -5.22849178314209
    6. '```' → logprob: -6.22849178314209
    7. 'd' → logprob: -6.35349178314209
    8. ' dist' → logprob: -6.60349178314209
    9. '
' → logprob: -6.72849178314209
    10. ' distances' → logprob: -6.85349178314209

Token 553: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0592777356505394
    2. 'cost' → logprob: -3.0592777729034424
    3. 'distance' → logprob: -5.309277534484863
    4. '   ' → logprob: -5.309277534484863
    5. 'd' (adapté à ' d') → logprob: -8.309277534484863
    6. 'result' → logprob: -8.559277534484863
    7. ' dist' → logprob: -9.559277534484863
    8. 'start' → logprob: -9.934277534484863
    9. ' distances' → logprob: -10.309277534484863
    10. 'min' → logprob: -10.434277534484863

Token 554: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.5362149477005005
    2. ',' → logprob: -1.9112149477005005
    3. 'ists' → logprob: -2.411214828491211
    4. 'ijkstra' → logprob: -2.536214828491211
    5. 'istance' → logprob: -2.661214828491211
    6. '_result' → logprob: -4.911214828491211
    7. '_,' → logprob: -5.161214828491211
    8. ' =' → logprob: -5.911214828491211
    9. 'result' → logprob: -6.536214828491211
    10. '_' → logprob: -6.661214828491211

Token 555: ' int' (ID: 677)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47482070326805115
    2. ' d' → logprob: -0.9748207330703735
    3. 'ijkstra' → logprob: -7.224820613861084
    4. '   ' → logprob: -12.474821090698242
    5. '	d' → logprob: -13.224821090698242
    6. '(d' → logprob: -13.474821090698242
    7. 'ijk' → logprob: -13.724821090698242
    8. 'ij' → logprob: -13.849821090698242
    9. ' ' → logprob: -13.849821090698242
    10. '=d' → logprob: -14.474821090698242

Token 556: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.045099887996912
    2. 'ijkstra' → logprob: -3.170099973678589
    3. '(' → logprob: -6.54509973526001
    4. 'd' → logprob: -7.79509973526001
    5. 'istance' → logprob: -10.045100212097168
    6. '(np' → logprob: -10.045100212097168
    7. '(
' → logprob: -11.170100212097168
    8. 'ist' → logprob: -11.420100212097168
    9. ')' → logprob: -11.545100212097168
    10. 's' → logprob: -11.920100212097168

Token 557: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -1.1756367712223437e-05
    2. 'ijk' → logprob: -12.000011444091797
    3. 'ij' → logprob: -12.875011444091797
    4. 'ist' → logprob: -14.125011444091797
    5. 'istance' → logprob: -14.500011444091797
    6. '[i' → logprob: -14.625011444091797
    7. 'ijkl' → logprob: -15.000011444091797
    8. '[' → logprob: -15.875011444091797
    9. 'i' → logprob: -15.875011444091797
    10. '(d' → logprob: -16.000011444091797

Token 558: '(ad' (ID: 36787)
  Prédit: '(ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ad' → logprob: -0.0007318547577597201
    2. '(' → logprob: -8.000731468200684
    3. '(
' → logprob: -9.000731468200684
    4. '(adj' → logprob: -9.375731468200684
    5. ')' → logprob: -10.000731468200684
    6. ')(' → logprob: -10.125731468200684
    7. '(cs' → logprob: -10.250731468200684
    8. '(c' → logprob: -10.500731468200684
    9. '```' → logprob: -11.250731468200684
    10. ' (' → logprob: -11.625731468200684

Token 559: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -7.553032628493384e-05
    2. 'acency' → logprob: -9.500075340270996
    3. 'Jac' → logprob: -15.125075340270996
    4. 'j' → logprob: -15.375075340270996
    5. ' jac' → logprob: -16.625076293945312
    6. 'ja' → logprob: -20.625076293945312
    7. '(' → logprob: -20.875076293945312
    8. 'just' → logprob: -21.375076293945312
    9. 'ij' → logprob: -21.375076293945312
    10. '(j' → logprob: -21.375076293945312

Token 560: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.005736560095101595
    2. 'acy' → logprob: -5.380736351013184
    3. 'acency' → logprob: -6.880736351013184
    4. 'ancy' → logprob: -10.255736351013184
    5. 'ENCY' → logprob: -11.005736351013184
    6. '#' → logprob: -12.005736351013184
    7. 'y' → logprob: -12.755736351013184
    8. 'ac' → logprob: -13.005736351013184
    9. 'r' → logprob: -13.005736351013184
    10. 'encv' → logprob: -13.130736351013184

Token 561: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -9.507972572464496e-05
    2. 'matrix' → logprob: -9.87509536743164
    3. '_,' → logprob: -10.50009536743164
    4. '(ad' → logprob: -12.00009536743164
    5. '_' → logprob: -13.75009536743164
    6. '_m' → logprob: -13.75009536743164
    7. ')' → logprob: -13.87509536743164
    8. ',' → logprob: -14.12509536743164
    9. '_graph' → logprob: -14.12509536743164
    10. ',_' → logprob: -14.50009536743164

Token 562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07767877727746964
    2. '(' → logprob: -3.702678680419922
    3. ',(' → logprob: -3.952678680419922
    4. ',start' → logprob: -4.577678680419922
    5. ' ,' → logprob: -5.077678680419922
    6. ',
' → logprob: -5.702678680419922
    7. '(indices' → logprob: -5.827678680419922
    8. '(start' → logprob: -5.952678680419922
    9. ',[' → logprob: -7.202678680419922
    10. ',d' → logprob: -7.577678680419922

Token 563: ' directed' (ID: 23699)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.004877688828855753
    2. 'return' → logprob: -5.87987756729126
    3. 'ind' → logprob: -6.87987756729126
    4. 'indexes' → logprob: -8.004878044128418
    5. ' indices' → logprob: -8.629878044128418
    6. '```' → logprob: -9.004878044128418
    7. 'direct' → logprob: -9.129878044128418
    8. 'index' → logprob: -9.504878044128418
    9. '   ' → logprob: -9.754878044128418
    10. '0' → logprob: -9.754878044128418

Token 564: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0004909569397568703
    2. '=' → logprob: -7.625491142272949
    3. '=False' → logprob: -12.87549114227295
    4. 'True' → logprob: -15.62549114227295
    5. ' =' → logprob: -16.250490188598633
    6. ',' → logprob: -16.500490188598633
    7. '=
' → logprob: -17.500490188598633
    8. 's' → logprob: -18.125490188598633
    9. '```' → logprob: -18.125490188598633
    10. '=T' → logprob: -18.375490188598633

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003472633252386004
    2. ' ,' → logprob: -9.125347137451172
    3. ',start' → logprob: -9.125347137451172
    4. ',
' → logprob: -9.500347137451172
    5. '   ' → logprob: -10.875347137451172
    6. '),' → logprob: -12.125347137451172
    7. ',s' → logprob: -12.625347137451172
    8. '[' → logprob: -12.875347137451172
    9. '=' → logprob: -13.250347137451172
    10. 's' → logprob: -13.250347137451172

Token 566: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.0014784404775127769
    2. 'indexes' → logprob: -7.251478672027588
    3. 'return' → logprob: -8.37647819519043
    4. ' indices' → logprob: -8.37647819519043
    5. '   ' → logprob: -8.62647819519043
    6. 'un' → logprob: -9.87647819519043
    7. 'index' → logprob: -11.00147819519043
    8. 'ind' → logprob: -11.12647819519043
    9. ' ' → logprob: -11.50147819519043
    10. 'sources' → logprob: -11.75147819519043

Token 567: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012408251641318202
    2. '0' → logprob: -7.1262407302856445
    3. '=[' → logprob: -8.126240730285645
    4. '=(' → logprob: -9.376240730285645
    5. '(' → logprob: -10.376240730285645
    6. '=np' → logprob: -11.001240730285645
    7. '[' → logprob: -13.126240730285645
    8. ')' → logprob: -14.001240730285645
    9. '<|end|>' → logprob: -14.001240730285645
    10. ' =' → logprob: -14.376240730285645

Token 568: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020465273410081863
    2. '[' → logprob: -4.02046537399292
    3. 'co' → logprob: -6.14546537399292
    4. '=' → logprob: -9.395464897155762
    5. ' ' → logprob: -9.895464897155762
    6. ' co' → logprob: -11.145464897155762
    7. ' [' → logprob: -11.645464897155762
    8. '(' → logprob: -13.270464897155762
    9. 'np' → logprob: -13.395464897155762
    10. ')' → logprob: -13.582964897155762

Token 569: ')[' (ID: 13637)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07136865705251694
    2. ')[' → logprob: -3.44636869430542
    3. '))' → logprob: -3.57136869430542
    4. ').' → logprob: -5.44636869430542
    5. ')' → logprob: -5.57136869430542
    6. '   ' → logprob: -8.571368217468262
    7. ')))' → logprob: -8.696368217468262
    8. ',
' → logprob: -9.571368217468262
    9. '),' → logprob: -9.696368217468262
    10. '))[' → logprob: -9.821368217468262

Token 570: 'H' (ID: 39)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.0014180884463712573
    2. '-co' → logprob: -7.751418113708496
    3. '-' → logprob: -8.126418113708496
    4. 'H' → logprob: -8.126418113708496
    5. ' co' → logprob: -8.126418113708496
    6. '(co' → logprob: -10.126418113708496
    7. '-H' → logprob: -10.251418113708496
    8. '[' → logprob: -11.126418113708496
    9. '   ' → logprob: -12.376418113708496
    10. '[-' → logprob: -13.501418113708496

Token 571: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.009797999635338783
    2. ' *' → logprob: -4.634798049926758
    3. '   ' → logprob: -11.884798049926758
    4. '*K' → logprob: -12.009798049926758
    5. '*num' → logprob: -12.384798049926758
    6. ' ' → logprob: -12.384798049926758
    7. '**' → logprob: -12.759798049926758
    8. ' ' → logprob: -13.009798049926758
    9. '*w' → logprob: -13.134798049926758
    10. '*(' → logprob: -13.259798049926758

Token 572: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -5.764977686339989e-05
    2. ' W' → logprob: -9.875057220458984
    3. '*' → logprob: -12.125057220458984
    4. '   ' → logprob: -15.000057220458984
    5. ' ' → logprob: -16.125057220458984
    6. '(W' → logprob: -16.250057220458984
    7. '**' → logprob: -16.375057220458984
    8. '(' → logprob: -17.000057220458984
    9. '  ' → logprob: -17.375057220458984
    10. ')' → logprob: -17.375057220458984

Token 573: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008618712425231934
    2. ' -' → logprob: -4.7586188316345215
    3. ' ' → logprob: -13.008618354797363
    4. '1' → logprob: -14.008618354797363
    5. '−' → logprob: -14.883618354797363
    6. '–' → logprob: -15.383618354797363
    7. '   ' → logprob: -16.13361930847168
    8. '`' → logprob: -16.63361930847168
    9. ' ' → logprob: -17.13361930847168
    10. '  ' → logprob: -17.25861930847168

Token 574: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -16.250001907348633
    4. '   ' → logprob: -17.250001907348633
    5. ')' → logprob: -18.500001907348633
    6. '2' → logprob: -18.812501907348633
    7. '<|end|>' → logprob: -18.875001907348633
    8. '
' → logprob: -19.000001907348633
    9. '`' → logprob: -19.687501907348633
    10. '  ' → logprob: -20.000001907348633

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -17.500001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '
' → logprob: -19.375001907348633
    6. '<|end|>' → logprob: -19.750001907348633
    7. '2' → logprob: -19.875001907348633
    8. ')' → logprob: -20.000001907348633
    9. '`' → logprob: -20.687501907348633
    10. '۱' → logprob: -20.937501907348633

Token 576: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0724896490573883
    2. ')' → logprob: -2.6974897384643555
    3. ']' → logprob: -6.5724897384643555
    4. ')])' → logprob: -7.3224897384643555
    5. '])
' → logprob: -8.572489738464355
    6. ')]' → logprob: -9.322489738464355
    7. ' ])' → logprob: -9.447489738464355
    8. ')
' → logprob: -9.947489738464355
    9. ']))' → logprob: -10.697489738464355
    10. '))' → logprob: -11.197489738464355

Token 577: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6386235952377319
    2. '
' → logprob: -0.8886235952377319
    3. 'print' → logprob: -2.8886237144470215
    4. '    
' → logprob: -5.3886237144470215
    5. '```' → logprob: -7.8886237144470215
    6. ' print' → logprob: -9.638623237609863
    7. '
' → logprob: -9.763623237609863
    8. 'if' → logprob: -11.138623237609863
    9. '  
' → logprob: -11.763623237609863
    10. ')
' → logprob: -12.513623237609863

Token 578: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5920599102973938
    2. '   ' → logprob: -0.8420599102973938
    3. '
' → logprob: -4.717060089111328
    4. '    
' → logprob: -5.592060089111328
    5. '```' → logprob: -5.842060089111328
    6. 'if' → logprob: -8.217060089111328
    7. ' print' → logprob: -9.842060089111328
    8. 'return' → logprob: -9.842060089111328
    9. '  
' → logprob: -11.092060089111328
    10. '``' → logprob: -11.717060089111328

Token 579: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012582069030031562
    2. '   ' → logprob: -6.751258373260498
    3. '
' → logprob: -9.75125789642334
    4. ' print' → logprob: -11.00125789642334
    5. '```' → logprob: -11.87625789642334
    6. 'if' → logprob: -12.12625789642334
    7. '    
' → logprob: -14.75125789642334
    8. 'return' → logprob: -16.626258850097656
    9. '	print' → logprob: -16.751258850097656
    10. '#print' → logprob: -16.876258850097656

Token 580: ' Determine' (ID: 57076)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011570196511456743
    2. ' print' → logprob: -10.125115394592285
    3. 'if' → logprob: -10.625115394592285
    4. 'result' → logprob: -11.000115394592285
    5. '#' → logprob: -11.125115394592285
    6. '   ' → logprob: -12.000115394592285
    7. 'return' → logprob: -13.125115394592285
    8. 'd' → logprob: -13.625115394592285
    9. 'min' → logprob: -13.625115394592285
    10. '#print' → logprob: -13.625115394592285

Token 581: ' the' (ID: 290)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38510194420814514
    2. 'print' → logprob: -1.2601019144058228
    3. '(d' → logprob: -4.635101795196533
    4. 'result' → logprob: -4.885101795196533
    5. '(min' → logprob: -5.385101795196533
    6. 'min' → logprob: -5.635101795196533
    7. 'if' → logprob: -5.635101795196533
    8. 'minimum' → logprob: -6.510101795196533
    9. 'd' → logprob: -6.635101795196533
    10. '0' → logprob: -7.010101795196533

Token 582: ' number' (ID: 2086)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21457791328430176
    2. 'result' → logprob: -2.0895779132843018
    3. 'minimum' → logprob: -3.4645779132843018
    4. 'answer' → logprob: -3.9645779132843018
    5. 'min' → logprob: -4.089577674865723
    6. '#' → logprob: -6.964577674865723
    7. 'ans' → logprob: -7.839577674865723
    8. 'max' → logprob: -7.964577674865723
    9. 'cost' → logprob: -8.714577674865723
    10. 'minimal' → logprob: -8.714577674865723

Token 583: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.02750183828175068
    2. '_of' → logprob: -4.027502059936523
    3. ' of' → logprob: -4.777502059936523
    4. '   ' → logprob: -8.277502059936523
    5. '(' → logprob: -8.902502059936523
    6. 'print' → logprob: -8.902502059936523
    7. ' ' → logprob: -9.777502059936523
    8. '_' → logprob: -9.902502059936523
    9. '0' → logprob: -10.027502059936523
    10. '=' → logprob: -10.527502059936523

Token 584: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.10783799737691879
    2. 'print' → logprob: -2.3578379154205322
    3. 'changes' → logprob: -4.982838153839111
    4. '#' → logprob: -8.982837677001953
    5. 'paint' → logprob: -9.107837677001953
    6. ' color' → logprob: -9.232837677001953
    7. 'cells' → logprob: -9.357837677001953
    8. 'steps' → logprob: -9.982837677001953
    9. 'colors' → logprob: -10.232837677001953
    10. 'prints' → logprob: -10.482837677001953

Token 585: ' changes' (ID: 6629)
  Prédit: 'changes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changes' → logprob: -0.27251559495925903
    2. '_changes' → logprob: -1.5225155353546143
    3. ' changes' → logprob: -3.8975155353546143
    4. 'change' → logprob: -10.397515296936035
    5. '_' → logprob: -10.897515296936035
    6. '_change' → logprob: -11.147515296936035
    7. ' ' → logprob: -12.397515296936035
    8. '_ch' → logprob: -12.522515296936035
    9. 's' → logprob: -13.147515296936035
    10. 'switch' → logprob: -13.272515296936035

Token 586: ' required' (ID: 3759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16165649890899658
    2. 'if' → logprob: -2.411656379699707
    3. '   ' → logprob: -3.661656379699707
    4. '+' → logprob: -4.161656379699707
    5. 'result' → logprob: -4.536656379699707
    6. 'changes' → logprob: -5.911656379699707
    7. 'needed' → logprob: -6.661656379699707
    8. 'answer' → logprob: -7.286656379699707
    9. ' if' → logprob: -7.536656379699707
    10. 'required' → logprob: -7.661656379699707

Token 587: ' based' (ID: 4122)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19685238599777222
    2. 'if' → logprob: -1.821852445602417
    3. '   ' → logprob: -5.071852207183838
    4. 'result' → logprob: -5.696852207183838
    5. '+' → logprob: -5.946852207183838
    6. '
' → logprob: -6.071852207183838
    7. ' if' → logprob: -7.571852207183838
    8. '+
' → logprob: -7.696852207183838
    9. 'answer' → logprob: -8.071852684020996
    10. 'changes' → logprob: -8.071852684020996

Token 588: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.018503889441490173
    2. ' on' → logprob: -4.018503665924072
    3. 'to' → logprob: -9.14350414276123
    4. '   ' → logprob: -9.26850414276123
    5. ' to' → logprob: -10.26850414276123
    6. '+' → logprob: -10.39350414276123
    7. '```' → logprob: -10.51850414276123
    8. ')' → logprob: -11.26850414276123
    9. '=' → logprob: -11.51850414276123
    10. '<|end|>' → logprob: -12.51850414276123

Token 589: ' the' (ID: 290)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.19693100452423096
    2. 's' → logprob: -2.1969308853149414
    3. ' d' → logprob: -3.5719308853149414
    4. 'the' → logprob: -3.6969308853149414
    5. ' the' → logprob: -5.071930885314941
    6. ' s' → logprob: -5.696930885314941
    7. '0' → logprob: -6.196930885314941
    8. '1' → logprob: -7.446930885314941
    9. 'min' → logprob: -7.571930885314941
    10. ' ' → logprob: -8.196930885314941

Token 590: ' starting' (ID: 8601)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005210752133280039
    2. 's' → logprob: -6.005210876464844
    3. 'minimum' → logprob: -7.130210876464844
    4. 'distance' → logprob: -7.505210876464844
    5. ' d' → logprob: -8.255210876464844
    6. '0' → logprob: -8.380210876464844
    7. 'min' → logprob: -8.505210876464844
    8. 'path' → logprob: -8.755210876464844
    9. 'print' → logprob: -9.380210876464844
    10. 'value' → logprob: -9.380210876464844

Token 591: ' and' (ID: 326)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.9617800712585449
    2. 'symbol' → logprob: -1.336780071258545
    3. 'color' → logprob: -1.836780071258545
    4. ' cell' → logprob: -2.086780071258545
    5. ' color' → logprob: -3.836780071258545
    6. ' symbol' → logprob: -4.086780071258545
    7. 'point' → logprob: -4.461780071258545
    8. 'node' → logprob: -5.586780071258545
    9. 'character' → logprob: -5.586780071258545
    10. ' and' → logprob: -6.336780071258545

Token 592: ' ending' (ID: 22013)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.004096327815204859
    2. ' ending' → logprob: -5.504096508026123
    3. 'final' → logprob: -11.629096031188965
    4. 'target' → logprob: -11.879096031188965
    5. 'goal' → logprob: -13.504096031188965
    6. 'Ending' → logprob: -15.504096031188965
    7. 'fin' → logprob: -15.879096031188965
    8. 'destination' → logprob: -16.12909698486328
    9. '#' → logprob: -16.50409698486328
    10. '-ending' → logprob: -16.87909698486328

Token 593: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.3351666331291199
    2. ' cell' → logprob: -2.2101666927337646
    3. 'color' → logprob: -2.7101666927337646
    4. 'cells' → logprob: -2.9601666927337646
    5. 'symbol' → logprob: -3.8351666927337646
    6. ' cells' → logprob: -4.3351664543151855
    7. 'colors' → logprob: -5.0851664543151855
    8. 'node' → logprob: -5.5851664543151855
    9. 'point' → logprob: -5.7101664543151855
    10. ' color' → logprob: -5.8351664543151855

Token 594: ' type' (ID: 1490)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03535535931587219
    2. 'print' → logprob: -3.78535532951355
    3. '+' → logprob: -5.410355567932129
    4. 'result' → logprob: -5.910355567932129
    5. '
' → logprob: -6.910355567932129
    6. 'change' → logprob: -6.910355567932129
    7. '+
' → logprob: -7.410355567932129
    8. 'changes' → logprob: -7.660355567932129
    9. 'answer' → logprob: -7.660355567932129
    10. ' if' → logprob: -8.035355567932129

Token 595: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0776481106877327
    2. 'print' → logprob: -3.702648162841797
    3. 'result' → logprob: -3.827648162841797
    4. '+' → logprob: -4.827648162841797
    5. 'change' → logprob: -5.327648162841797
    6. '   ' → logprob: -5.452648162841797
    7. '
' → logprob: -5.577648162841797
    8. 'answer' → logprob: -5.827648162841797
    9. '+
' → logprob: -5.952648162841797
    10. ' if' → logprob: -7.702648162841797

Token 596: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4068216383457184
    2. 'print' → logprob: -2.0318217277526855
    3. '   ' → logprob: -2.1568217277526855
    4. 'answer' → logprob: -3.4068217277526855
    5. 'result' → logprob: -3.9068217277526855
    6. 'change' → logprob: -4.2818217277526855
    7. 'changes' → logprob: -4.6568217277526855
    8. 'ans' → logprob: -5.4068217277526855
    9. 'res' → logprob: -5.9068217277526855
    10. '
' → logprob: -6.2818217277526855

Token 597: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6656592488288879
    2. 'if' → logprob: -0.7906592488288879
    3. '   ' → logprob: -3.790659189224243
    4. 'result' → logprob: -5.165659427642822
    5. 'change' → logprob: -6.790659427642822
    6. 'answer' → logprob: -7.165659427642822
    7. ' if' → logprob: -7.290659427642822
    8. 'changes' → logprob: -7.415659427642822
    9. '```' → logprob: -8.665658950805664
    10. ' print' → logprob: -8.790658950805664

Token 598: ' A' (ID: 355)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1975725144147873
    2. 'if' → logprob: -1.8225724697113037
    3. 'result' → logprob: -4.947572708129883
    4. '   ' → logprob: -5.697572708129883
    5. 'changes' → logprob: -6.197572708129883
    6. 'ans' → logprob: -6.697572708129883
    7. 'answer' → logprob: -6.822572708129883
    8. 'color' → logprob: -7.197572708129883
    9. 'change' → logprob: -7.322572708129883
    10. 'cost' → logprob: -7.322572708129883

Token 599: ' color' (ID: 3089)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3838098645210266
    2. 'print' → logprob: -1.5088098049163818
    3. ' if' → logprob: -3.258809804916382
    4. '   ' → logprob: -3.883809804916382
    5. 'dd' → logprob: -4.633810043334961
    6. 'd' → logprob: -5.383810043334961
    7. '
' → logprob: -5.508810043334961
    8. 'result' → logprob: -5.758810043334961
    9. 'change' → logprob: -5.883810043334961
    10. ' =' → logprob: -6.133810043334961

Token 600: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.15517912805080414
    2. 'change' → logprob: -2.030179023742676
    3. '_change' → logprob: -4.530179023742676
    4. ' changes' → logprob: -7.030179023742676
    5. '_changes' → logprob: -9.030179023742676
    6. ' if' → logprob: -9.155179023742676
    7. ' ' → logprob: -9.280179023742676
    8. '_' → logprob: -9.405179023742676
    9. 'changes' → logprob: -9.530179023742676
    10. ' difference' → logprob: -9.780179023742676

Token 601: ' corresponds' (ID: 66938)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6349170207977295
    2. ' is' → logprob: -1.6349170207977295
    3. ' occurs' → logprob: -2.0099170207977295
    4. '=' → logprob: -2.2599170207977295
    5. ' if' → logprob: -2.3849170207977295
    6. 'if' → logprob: -2.5099170207977295
    7. '+' → logprob: -3.1349170207977295
    8. '   ' → logprob: -3.2599170207977295
    9. ' +=' → logprob: -3.2599170207977295
    10. ' ' → logprob: -4.384917259216309

Token 602: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08930779993534088
    2. 'to' → logprob: -2.4643077850341797
    3. '+' → logprob: -8.71430778503418
    4. '=' → logprob: -10.21430778503418
    5. ' +=' → logprob: -10.21430778503418
    6. '   ' → logprob: -10.33930778503418
    7. ' =' → logprob: -10.58930778503418
    8. ' if' → logprob: -11.08930778503418
    9. '_to' → logprob: -11.21430778503418
    10. '+=' → logprob: -11.21430778503418

Token 603: ' moving' (ID: 10067)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09147640317678452
    2. '1' → logprob: -2.8414764404296875
    3. '0' → logprob: -4.3414764404296875
    4. ' d' → logprob: -4.7164764404296875
    5. 'max' → logprob: -5.9664764404296875
    6. '(d' → logprob: -6.7164764404296875
    7. 's' → logprob: -6.8414764404296875
    8. ' ' → logprob: -7.3414764404296875
    9. '+' → logprob: -8.091476440429688
    10. '(' → logprob: -8.091476440429688

Token 604: ' from' (ID: 591)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3891913592815399
    2. '+' → logprob: -1.2641913890838623
    3. 'from' → logprob: -4.389191150665283
    4. ' d' → logprob: -4.764191150665283
    5. ' if' → logprob: -5.264191150665283
    6. ' from' → logprob: -5.514191150665283
    7. 'd' → logprob: -5.764191150665283
    8. ' to' → logprob: -6.264191150665283
    9. ' ' → logprob: -6.764191150665283
    10. 'if' → logprob: -7.139191150665283

Token 605: ' '.'' (ID: 64762)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.37660279870033264
    2. 'a' → logprob: -2.0016028881073
    3. ''' → logprob: -3.0016028881073
    4. ' one' → logprob: -3.2516028881073
    5. 's' → logprob: -3.7516028881073
    6. ''.' → logprob: -4.126602649688721
    7. ''s' → logprob: -4.251602649688721
    8. '0' → logprob: -4.501602649688721
    9. ''a' → logprob: -5.001602649688721
    10. ' a' → logprob: -5.251602649688721

Token 606: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07898661494255066
    2. 'to' → logprob: -2.578986644744873
    3. ')' → logprob: -10.203986167907715
    4. ' ' → logprob: -10.953986167907715
    5. ''' → logprob: -11.203986167907715
    6. '.' → logprob: -11.703986167907715
    7. ' if' → logprob: -12.703986167907715
    8. 's' → logprob: -12.953986167907715
    9. '    ' → logprob: -13.078986167907715
    10. ' '' → logprob: -13.203986167907715

Token 607: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0010007746750488877
    2. ''' → logprob: -7.251000881195068
    3. ''*' → logprob: -8.37600040435791
    4. ''a' → logprob: -10.50100040435791
    5. ' '#'' → logprob: -11.50100040435791
    6. '"#' → logprob: -12.25100040435791
    7. ''x' → logprob: -12.37600040435791
    8. ''\' → logprob: -12.50100040435791
    9. ''.' → logprob: -13.87600040435791
    10. '('#' → logprob: -14.00100040435791

Token 608: ' or' (ID: 503)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5827944874763489
    2. '   ' → logprob: -1.332794427871704
    3. 'if' → logprob: -1.957794427871704
    4. ' or' → logprob: -3.582794427871704
    5. 'print' → logprob: -5.957794666290283
    6. '
' → logprob: -6.207794666290283
    7. 'or' → logprob: -7.082794666290283
    8. ',' → logprob: -7.457794666290283
    9. ' and' → logprob: -7.832794666290283
    10. '    
' → logprob: -7.957794666290283

Token 609: ' vice' (ID: 22625)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.23978450894355774
    2. 'from' → logprob: -1.6147844791412354
    3. ' '#'' → logprob: -5.4897847175598145
    4. 'vice' → logprob: -5.4897847175598145
    5. ''' → logprob: -5.7397847175598145
    6. ' vice' → logprob: -6.1147847175598145
    7. ' from' → logprob: -8.614784240722656
    8. '"#' → logprob: -9.239784240722656
    9. ' '#' → logprob: -9.239784240722656
    10. '('#' → logprob: -9.364784240722656

Token 610: ' versa' (ID: 74153)
  Prédit: 'versa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versa' → logprob: -0.06029393523931503
    2. ' versa' → logprob: -2.9352939128875732
    3. '   ' → logprob: -5.810294151306152
    4. '```' → logprob: -6.685294151306152
    5. 'to' → logprob: -7.435294151306152
    6. 'vers' → logprob: -8.685294151306152
    7. '       ' → logprob: -8.935294151306152
    8. '``' → logprob: -9.435294151306152
    9. 's' → logprob: -11.060294151306152
    10. 'vert' → logprob: -11.060294151306152

Token 611: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08081848919391632
    2. 'if' → logprob: -2.9558184146881104
    3. '
' → logprob: -4.0808186531066895
    4. 'print' → logprob: -5.5808186531066895
    5. 'result' → logprob: -6.4558186531066895
    6. '    
' → logprob: -6.8308186531066895
    7. 'change' → logprob: -6.9558186531066895
    8. ' if' → logprob: -7.3308186531066895
    9. 'color' → logprob: -8.830818176269531
    10. '```' → logprob: -9.080818176269531

Token 612: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9368143677711487
    2. 'if' → logprob: -1.186814308166504
    3. '   ' → logprob: -1.561814308166504
    4. 'result' → logprob: -3.311814308166504
    5. 'answer' → logprob: -3.936814308166504
    6. 'change' → logprob: -4.436814308166504
    7. 'changes' → logprob: -4.436814308166504
    8. 'res' → logprob: -5.686814308166504
    9. 'ans' → logprob: -5.936814308166504
    10. '```' → logprob: -6.061814308166504

Token 613: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4430578351020813
    2. 'if' (adapté à ' if') → logprob: -1.8180577754974365
    3. '   ' → logprob: -2.1930577754974365
    4. 'changes' → logprob: -3.9430577754974365
    5. 'result' → logprob: -4.068058013916016
    6. 'change' → logprob: -4.068058013916016
    7. 'color' → logprob: -4.568058013916016
    8. 'answer' → logprob: -4.943058013916016
    9. 'ans' → logprob: -5.068058013916016
    10. 'cost' → logprob: -5.943058013916016

Token 614: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014817225746810436
    2. ' s' → logprob: -4.264817237854004
    3. 'd' → logprob: -7.514817237854004
    4. ' ' → logprob: -10.389817237854004
    5. '   ' → logprob: -10.389817237854004
    6. ' d' → logprob: -10.639817237854004
    7. '(s' → logprob: -11.264817237854004
    8. '  ' → logprob: -13.139817237854004
    9. '(' → logprob: -13.577317237854004
    10. '	s' → logprob: -13.827317237854004

Token 615: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003422567679081112
    2. '0' → logprob: -8.00034236907959
    3. 's' → logprob: -13.00034236907959
    4. ' ' → logprob: -13.62534236907959
    5. '```' → logprob: -13.75034236907959
    6. '#' → logprob: -14.75034236907959
    7. '   ' → logprob: -15.25034236907959
    8. '1' → logprob: -15.37534236907959
    9. ' [' → logprob: -15.75034236907959
    10. '[s' → logprob: -15.87534236907959

Token 616: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6776029699249193e-05
    2. ' ' → logprob: -10.87502670288086
    3. '[' → logprob: -12.12502670288086
    4. 'H' → logprob: -13.87502670288086
    5. '   ' → logprob: -14.81252670288086
    6. '
' → logprob: -15.56252670288086
    7. '```' → logprob: -15.75002670288086
    8. '#' → logprob: -15.81252670288086
    9. '1' → logprob: -16.00002670288086
    10. 's' → logprob: -16.62502670288086

Token 617: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02632816508412361
    2. '[' → logprob: -3.6513280868530273
    3. '0' → logprob: -11.526328086853027
    4. ' ][' → logprob: -11.776328086853027
    5. '   ' → logprob: -12.526328086853027
    6. ']' → logprob: -12.901328086853027
    7. '```' → logprob: -14.026328086853027
    8. ' ' → logprob: -14.526328086853027
    9. '#' → logprob: -14.526328086853027
    10. ' [' → logprob: -15.151328086853027

Token 618: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -18.500001907348633
    4. '1' → logprob: -18.750001907348633
    5. '00' → logprob: -18.875001907348633
    6. '[' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '۰' → logprob: -20.125001907348633
    9. '][' → logprob: -20.250001907348633
    10. '000' → logprob: -21.312501907348633

Token 619: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008808614686131477
    2. ']==' → logprob: -4.883808612823486
    3. '==' → logprob: -6.883808612823486
    4. ']=='' → logprob: -9.633809089660645
    5. ']!=' → logprob: -9.883809089660645
    6. ' ]' → logprob: -10.383809089660645
    7. ' ==' → logprob: -11.383809089660645
    8. '']' → logprob: -12.008809089660645
    9. '[' → logprob: -12.508809089660645
    10. '!=' → logprob: -12.508809089660645

Token 620: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03936242684721947
    2. '!=' → logprob: -3.4143624305725098
    3. ' ==' → logprob: -5.41436243057251
    4. '=='' → logprob: -7.66436243057251
    5. '=' → logprob: -7.78936243057251
    6. ' !=' → logprob: -8.289361953735352
    7. '[' → logprob: -10.664361953735352
    8. '==
' → logprob: -10.664361953735352
    9. ']==' → logprob: -11.539361953735352
    10. '=="' → logprob: -11.664361953735352

Token 621: ' '.'' (ID: 64762)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.2932222783565521
    2. ''.' → logprob: -1.4182223081588745
    3. '"#' → logprob: -5.168222427368164
    4. 's' → logprob: -5.293222427368164
    5. ''' → logprob: -7.418222427368164
    6. '".' → logprob: -8.043222427368164
    7. '"."' → logprob: -8.793222427368164
    8. ' '#'' → logprob: -9.543222427368164
    9. '"' → logprob: -10.918222427368164
    10. ''*' → logprob: -11.043222427368164

Token 622: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.578963577747345
    2. 'and' → logprob: -0.828963577747345
    3. '==' → logprob: -6.328963756561279
    4. ':' → logprob: -7.703963756561279
    5. ' ==' → logprob: -8.328963279724121
    6. ' '#'' → logprob: -9.453963279724121
    7. '=' → logprob: -9.578963279724121
    8. ' ' → logprob: -9.578963279724121
    9. ''#' → logprob: -9.828963279724121
    10. '#' → logprob: -9.828963279724121

Token 623: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001765382126905024
    2. ' s' → logprob: -6.376765251159668
    3. '   ' → logprob: -10.876765251159668
    4. 'd' → logprob: -10.876765251159668
    5. '(' → logprob: -12.126765251159668
    6. ' ' → logprob: -12.876765251159668
    7. '(s' → logprob: -12.876765251159668
    8. '  ' → logprob: -13.126765251159668
    9. ' (' → logprob: -13.126765251159668
    10. ''#' → logprob: -13.501765251159668

Token 624: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2113979209971149e-05
    2. '[-' → logprob: -11.375012397766113
    3. 'H' → logprob: -14.500012397766113
    4. '[
' → logprob: -16.375011444091797
    5. ' [' → logprob: -17.375011444091797
    6. '
' → logprob: -18.375011444091797
    7. '   ' → logprob: -18.375011444091797
    8. ' ' → logprob: -18.750011444091797
    9. '(H' → logprob: -18.875011444091797
    10. '```' → logprob: -19.000011444091797

Token 625: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. '-' → logprob: -10.750022888183594
    3. ' ' → logprob: -14.500022888183594
    4. ' -' → logprob: -15.250022888183594
    5. '   ' → logprob: -15.875022888183594
    6. '```' → logprob: -16.000022888183594
    7. 'H' → logprob: -16.125022888183594
    8. '
' → logprob: -16.500022888183594
    9. '[-' → logprob: -16.500022888183594
    10. '１' → logprob: -17.187522888183594

Token 626: '][-' (ID: 162298)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07062415033578873
    2. '][-' → logprob: -2.6956241130828857
    3. '[' → logprob: -7.820624351501465
    4. '[-' → logprob: -8.570624351501465
    5. ']' → logprob: -9.570624351501465
    6. '-' → logprob: -12.445624351501465
    7. ']][' → logprob: -12.570624351501465
    8. ' ][' → logprob: -12.570624351501465
    9. '0' → logprob: -12.695624351501465
    10. '][]' → logprob: -12.820624351501465

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -12.375009536743164
    3. ']' → logprob: -12.500009536743164
    4. '#' → logprob: -15.062509536743164
    5. '']' → logprob: -15.562509536743164
    6. '`]' → logprob: -16.437509536743164
    7. '```' → logprob: -16.875009536743164
    8. '   ' → logprob: -16.937509536743164
    9. ''' → logprob: -17.000009536743164
    10. '(' → logprob: -17.125009536743164

Token 628: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.035529203712940216
    2. ']==' → logprob: -3.410529136657715
    3. '==' → logprob: -7.035529136657715
    4. '']' → logprob: -7.785529136657715
    5. ']=='' → logprob: -7.785529136657715
    6. ']!=' → logprob: -9.660529136657715
    7. ' ]' → logprob: -10.410529136657715
    8. ' ==' → logprob: -10.785529136657715
    9. '']==' → logprob: -11.285529136657715
    10. '[' → logprob: -11.535529136657715

Token 629: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006228933110833168
    2. ' ==' → logprob: -5.131228923797607
    3. '=='' → logprob: -8.881229400634766
    4. '=' → logprob: -9.506229400634766
    5. '==
' → logprob: -9.881229400634766
    6. '!=' → logprob: -10.506229400634766
    7. '[' → logprob: -13.131229400634766
    8. '===' → logprob: -13.631229400634766
    9. '=="' → logprob: -13.881229400634766
    10. ']==' → logprob: -13.881229400634766

Token 630: ' '.' (ID: 12662)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.4333716630935669
    2. ''.' → logprob: -1.058371663093567
    3. ' '#' → logprob: -6.058371543884277
    4. ''' → logprob: -6.933371543884277
    5. ' '#'' → logprob: -8.183371543884277
    6. ' '.'' → logprob: -8.308371543884277
    7. ''*' → logprob: -8.558371543884277
    8. '"#' → logprob: -8.808371543884277
    9. ' '.' → logprob: -8.808371543884277
    10. ''/' → logprob: -9.808371543884277

Token 631: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20339933037757874
    2. ':' → logprob: -1.7033993005752563
    3. '):
' → logprob: -7.578399181365967
    4. '   ' → logprob: -7.578399181365967
    5. ' or' → logprob: -7.703399181365967
    6. ' :
' → logprob: -8.828399658203125
    7. ':
' → logprob: -9.078399658203125
    8. ' and' → logprob: -9.328399658203125
    9. ' :' → logprob: -10.328399658203125
    10. ')' → logprob: -10.453399658203125

Token 632: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051546912640333176
    2. 'print' → logprob: -3.801546812057495
    3. '       ' → logprob: -3.801546812057495
    4. 'd' → logprob: -6.551547050476074
    5. ':' → logprob: -6.676547050476074
    6. ':
' → logprob: -6.801547050476074
    7. ' print' → logprob: -7.051547050476074
    8. ' and' → logprob: -8.176547050476074
    9. ' d' → logprob: -8.676547050476074
    10. '
' → logprob: -9.676547050476074

Token 633: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03465168923139572
    2. 'd' → logprob: -3.409651756286621
    3. 'if' → logprob: -8.159651756286621
    4. 'result' → logprob: -8.284651756286621
    5. 'color' → logprob: -9.159651756286621
    6. '   ' → logprob: -9.409651756286621
    7. 'answer' → logprob: -9.534651756286621
    8. 'pass' → logprob: -9.784651756286621
    9. 'cost' → logprob: -10.534651756286621
    10. 'max' → logprob: -11.159651756286621

Token 634: ' If' (ID: 1843)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07061826437711716
    2. 'd' → logprob: -2.695618152618408
    3. 'max' → logprob: -8.320618629455566
    4. 'if' → logprob: -8.445618629455566
    5. 'result' → logprob: -9.570618629455566
    6. '   ' → logprob: -10.695618629455566
    7. 'answer' → logprob: -10.820618629455566
    8. 'pass' → logprob: -10.945618629455566
    9. ' print' → logprob: -11.070618629455566
    10. 'color' → logprob: -11.195618629455566

Token 635: ' both' (ID: 2973)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002674822462722659
    2. 's' → logprob: -6.3776750564575195
    3. ' d' → logprob: -7.0026750564575195
    4. '0' → logprob: -11.00267505645752
    5. ' s' → logprob: -11.25267505645752
    6. 'row' → logprob: -12.25267505645752
    7. '   ' → logprob: -12.50267505645752
    8. 'not' → logprob: -12.50267505645752
    9. ' ' → logprob: -12.62767505645752
    10. '1' → logprob: -12.75267505645752

Token 636: ' start' (ID: 1604)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004400801844894886
    2. ' s' → logprob: -5.879400730133057
    3. 'row' → logprob: -8.004401206970215
    4. '0' → logprob: -8.379401206970215
    5. 'd' → logprob: -8.379401206970215
    6. '==' → logprob: -8.379401206970215
    7. '[' → logprob: -8.629401206970215
    8. '.' → logprob: -9.629401206970215
    9. ' ==' → logprob: -9.879401206970215
    10. '#' → logprob: -9.879401206970215

Token 637: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.21496373414993286
    2. '==' → logprob: -2.089963674545288
    3. ' and' → logprob: -2.839963674545288
    4. 's' → logprob: -5.214963912963867
    5. ' ==' → logprob: -5.714963912963867
    6. '.' → logprob: -6.839963912963867
    7. 'or' → logprob: -6.964963912963867
    8. '[' → logprob: -9.089963912963867
    9. '=' → logprob: -9.089963912963867
    10. ' or' → logprob: -9.464963912963867

Token 638: ' goal' (ID: 8583)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00022964231902733445
    2. 's' → logprob: -8.625229835510254
    3. ' end' → logprob: -10.000229835510254
    4. '#' → logprob: -12.500229835510254
    5. 'stop' → logprob: -15.375229835510254
    6. 'start' → logprob: -15.625229835510254
    7. ' s' → logprob: -16.375228881835938
    8. '.' → logprob: -16.500228881835938
    9. '[end' → logprob: -16.750228881835938
    10. '   ' → logprob: -17.000228881835938

Token 639: ' are' (ID: 553)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.15143620967865
    2. ' are' → logprob: -1.52643620967865
    3. 'are' → logprob: -1.65143620967865
    4. '.' → logprob: -2.1514363288879395
    5. 's' → logprob: -2.4014363288879395
    6. ' ==' → logprob: -3.5264363288879395
    7. 'cells' → logprob: -4.2764363288879395
    8. 'cell' → logprob: -5.2764363288879395
    9. ' cells' → logprob: -6.1514363288879395
    10. '[' → logprob: -6.1514363288879395

Token 640: ' '.',' (ID: 110580)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.03640550374984741
    2. '.' → logprob: -3.661405563354492
    3. ' '.'' → logprob: -5.036405563354492
    4. ''#' → logprob: -6.661405563354492
    5. 'the' → logprob: -6.786405563354492
    6. 'same' → logprob: -8.286405563354492
    7. ' '.',' → logprob: -8.661405563354492
    8. '('.')' → logprob: -9.161405563354492
    9. ' the' → logprob: -9.411405563354492
    10. ''' → logprob: -9.911405563354492

Token 641: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5319348573684692
    2. 'd' → logprob: -0.9069348573684692
    3. '   ' → logprob: -5.03193473815918
    4. 'result' → logprob: -7.53193473815918
    5. ' print' → logprob: -7.53193473815918
    6. 'if' → logprob: -7.65693473815918
    7. ' d' → logprob: -8.53193473815918
    8. 'pass' → logprob: -9.28193473815918
    9. 'answer' → logprob: -9.40693473815918
    10. 'color' → logprob: -9.65693473815918

Token 642: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1417466551065445
    2. 'd' → logprob: -3.016746759414673
    3. 'result' → logprob: -3.141746759414673
    4. 'answer' → logprob: -3.641746759414673
    5. 'color' → logprob: -5.766746520996094
    6. 'minimum' → logprob: -6.016746520996094
    7. 'final' → logprob: -6.391746520996094
    8. 'cost' → logprob: -6.516746520996094
    9. 'change' → logprob: -7.266746520996094
    10. ' print' → logprob: -7.516746520996094

Token 643: ' number' (ID: 2086)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10232564806938171
    2. 'color' → logprob: -2.602325677871704
    3. 'number' → logprob: -4.602325439453125
    4. ' d' → logprob: -5.352325439453125
    5. 'cost' → logprob: -5.852325439453125
    6. 'changes' → logprob: -6.477325439453125
    7. ' color' → logprob: -6.602325439453125
    8. ' number' → logprob: -7.727325439453125
    9. 'print' → logprob: -7.727325439453125
    10. '#' → logprob: -7.852325439453125

Token 644: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.17742697894573212
    2. ' of' → logprob: -1.9274269342422485
    3. '   ' → logprob: -4.802426815032959
    4. '=' → logprob: -5.302426815032959
    5. '_of' → logprob: -6.552426815032959
    6. ' =' → logprob: -7.177426815032959
    7. 'changes' → logprob: -8.177427291870117
    8. 'change' → logprob: -8.302427291870117
    9. ' is' → logprob: -8.427427291870117
    10. 'is' → logprob: -8.927427291870117

Token 645: ' transitions' (ID: 59824)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5510961413383484
    2. 'color' → logprob: -0.9260961413383484
    3. 'changes' → logprob: -4.676095962524414
    4. '(d' → logprob: -5.051095962524414
    5. ' color' → logprob: -5.676095962524414
    6. ' d' → logprob: -5.676095962524414
    7. '(' → logprob: -6.426095962524414
    8. 'max' → logprob: -7.051095962524414
    9. '(color' → logprob: -7.176095962524414
    10. ' (' → logprob: -8.301095962524414

Token 646: ' halves' (ID: 149071)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5877892971038818
    2. ' =' → logprob: -1.7127892971038818
    3. 'd' → logprob: -1.9627892971038818
    4. ' is' → logprob: -3.087789297103882
    5. 'is' → logprob: -3.212789297103882
    6. '   ' → logprob: -3.587789297103882
    7. ' d' → logprob: -5.962789535522461
    8. '//' → logprob: -6.462789535522461
    9. '#' → logprob: -6.837789535522461
    10. 'should' → logprob: -7.212789535522461

Token 647: ' the' (ID: 290)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33636435866355896
    2. '//' → logprob: -2.211364269256592
    3. '   ' → logprob: -2.836364269256592
    4. ' //' → logprob: -3.336364269256592
    5. ' d' → logprob: -3.711364269256592
    6. '()' → logprob: -4.586364269256592
    7. ',' → logprob: -4.711364269256592
    8. '*' → logprob: -5.336364269256592
    9. '=' → logprob: -5.461364269256592
    10. '       ' → logprob: -5.586364269256592

Token 648: ' edge' (ID: 11165)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4369184672832489
    2. 'distance' → logprob: -2.1869184970855713
    3. 'color' → logprob: -2.6869184970855713
    4. 'number' → logprob: -2.9369184970855713
    5. ' d' → logprob: -3.6869184970855713
    6. 'change' → logprob: -3.9369184970855713
    7. 'cost' → logprob: -4.061918258666992
    8. ' number' → logprob: -4.436918258666992
    9. 'value' → logprob: -4.686918258666992
    10. ' color' → logprob: -5.061918258666992

Token 649: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4549237787723541
    2. ' cost' → logprob: -1.4549237489700317
    3. 'count' → logprob: -3.0799238681793213
    4. ' count' → logprob: -4.204923629760742
    5. 'weight' → logprob: -4.329923629760742
    6. 's' → logprob: -4.704923629760742
    7. 'distance' → logprob: -4.954923629760742
    8. 'weights' → logprob: -5.079923629760742
    9. 'dist' → logprob: -5.329923629760742
    10. ' weight' → logprob: -5.329923629760742

Token 650: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7548329830169678
    2. '//' → logprob: -1.3798329830169678
    3. ' //' → logprob: -1.3798329830169678
    4. '       ' → logprob: -5.129833221435547
    5. ',' → logprob: -5.629833221435547
    6. ' ' → logprob: -5.754833221435547
    7. '=' → logprob: -5.754833221435547
    8. ' =' → logprob: -6.379833221435547
    9. 'div' → logprob: -6.379833221435547
    10. 'd' → logprob: -6.754833221435547

Token 651: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3628312051296234
    2. '   ' → logprob: -1.6128312349319458
    3. '=' → logprob: -2.6128311157226562
    4. '       ' → logprob: -4.237831115722656
    5. 'd' → logprob: -4.362831115722656
    6. ' //' → logprob: -6.612831115722656
    7. ' d' → logprob: -7.237831115722656
    8. ' +=' → logprob: -7.487831115722656
    9. '//' → logprob: -7.612831115722656
    10. ',' → logprob: -7.612831115722656

Token 652: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.045813485980033875
    2. 'd' → logprob: -3.17081356048584
    3. '   ' → logprob: -5.92081356048584
    4. ' print' → logprob: -9.42081356048584
    5. '       ' → logprob: -10.79581356048584
    6. ' d' → logprob: -11.42081356048584
    7. '```' → logprob: -12.17081356048584
    8. 'result' → logprob: -13.17081356048584
    9. '``' → logprob: -13.67081356048584
    10. '(d' → logprob: -13.92081356048584

Token 653: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.06485150754451752
    2. '((' → logprob: -3.0648515224456787
    3. '(' → logprob: -4.4398512840271
    4. 'd' → logprob: -6.0648512840271
    5. '(max' → logprob: -6.4398512840271
    6. ' (' → logprob: -8.314851760864258
    7. 'max' → logprob: -10.064851760864258
    8. '
' → logprob: -10.314851760864258
    9. '(int' → logprob: -10.564851760864258
    10. '(
' → logprob: -11.689851760864258

Token 654: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6377843618392944
    2. '//' → logprob: -0.7627843618392944
    3. ')' → logprob: -5.512784481048584
    4. ' ' → logprob: -8.012784004211426
    5. '+' → logprob: -8.137784004211426
    6. '   ' → logprob: -8.262784004211426
    7. ' +' → logprob: -10.012784004211426
    8. ')//' → logprob: -10.012784004211426
    9. '`' → logprob: -10.262784004211426
    10. '    ' → logprob: -10.887784004211426

Token 655: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.668304245569743e-05
    2. ' ' → logprob: -10.000046730041504
    3. '1' → logprob: -14.125046730041504
    4. '3' → logprob: -15.625046730041504
    5. '２' → logprob: -15.875046730041504
    6. '   ' → logprob: -16.125045776367188
    7. '4' → logprob: -16.875045776367188
    8. '  ' → logprob: -17.375045776367188
    9. '{' → logprob: -17.750045776367188
    10. '	' → logprob: -18.250045776367188

Token 656: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.50000286102295
    3. '1' → logprob: -14.62500286102295
    4. '4' → logprob: -15.12500286102295
    5. '２' → logprob: -15.75000286102295
    6. '   ' → logprob: -17.000001907348633
    7. '{' → logprob: -17.250001907348633
    8. '
' → logprob: -17.375001907348633
    9. '(' → logprob: -17.937501907348633
    10. '```' → logprob: -18.250001907348633

Token 657: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6933974027633667
    2. ')
' → logprob: -0.6933974027633667
    3. '+' → logprob: -8.943397521972656
    4. '   ' → logprob: -9.443397521972656
    5. ')
' → logprob: -10.443397521972656
    6. ' )
' → logprob: -12.693397521972656
    7. ' )' → logprob: -13.193397521972656
    8. ' +' → logprob: -13.693397521972656
    9. ')

' → logprob: -13.693397521972656
    10. 'else' → logprob: -13.818397521972656

Token 658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5453799366950989
    2. 'else' → logprob: -1.045379877090454
    3. 'elif' → logprob: -2.795379877090454
    4. ' else' → logprob: -5.295380115509033
    5. ')' → logprob: -6.670380115509033
    6. '<|end|>' → logprob: -6.920380115509033
    7. ' elif' → logprob: -8.920379638671875
    8. '	else' → logprob: -9.170379638671875
    9. '    
' → logprob: -9.420379638671875
    10. '	elif' → logprob: -9.920379638671875

Token 659: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04941190034151077
    2. 'elif' → logprob: -3.0494120121002197
    3. ' else' → logprob: -7.174411773681641
    4. '   ' → logprob: -9.92441177368164
    5. ' elif' → logprob: -11.67441177368164
    6. '	else' → logprob: -15.42441177368164
    7. '	elif' → logprob: -15.92441177368164
    8. '```' → logprob: -16.04941177368164
    9. ')' → logprob: -16.29941177368164
    10. 'elseif' → logprob: -16.42441177368164

Token 660: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6227062344551086
    2. '       ' → logprob: -1.1227061748504639
    3. ':' → logprob: -1.9977061748504639
    4. '   ' → logprob: -6.122706413269043
    5. 'print' → logprob: -8.997706413269043
    6. '      ' → logprob: -10.372706413269043
    7. '):
' → logprob: -11.122706413269043
    8. '           ' → logprob: -11.122706413269043
    9. ':
' → logprob: -11.247706413269043
    10. ' :
' → logprob: -11.247706413269043

Token 661: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5765916109085083
    2. '       ' → logprob: -0.8265916109085083
    3. '   ' → logprob: -7.451591491699219
    4. ' print' → logprob: -9.576591491699219
    5. '```' → logprob: -14.201591491699219
    6. '           ' → logprob: -14.701591491699219
    7. ' ' → logprob: -15.076591491699219
    8. '     ' → logprob: -15.201591491699219
    9. '	print' → logprob: -15.326591491699219
    10. '      ' → logprob: -16.70159149169922

Token 662: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.173704271830502e-06
    2. ' print' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.50000286102295
    4. '       ' → logprob: -18.625003814697266
    5. '```' → logprob: -19.625003814697266
    6. '	print' → logprob: -20.125003814697266
    7. '1' → logprob: -22.250003814697266
    8. 'printf' → logprob: -22.375003814697266
    9. '#print' → logprob: -22.500003814697266
    10. ' ' → logprob: -22.500003814697266

Token 663: ' If' (ID: 1843)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.3199920178740285e-05
    2. ' print' → logprob: -11.250022888183594
    3. '       ' → logprob: -11.625022888183594
    4. '   ' → logprob: -13.750022888183594
    5. '```' → logprob: -15.625022888183594
    6. '           ' → logprob: -18.000022888183594
    7. '	print' → logprob: -20.250022888183594
    8. '``' → logprob: -20.375022888183594
    9. ' ' → logprob: -20.500022888183594
    10. '#print' → logprob: -20.750022888183594

Token 664: ' either' (ID: 4784)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0931159183382988
    2. 'd' → logprob: -2.71811580657959
    3. ' s' → logprob: -4.21811580657959
    4. 'not' → logprob: -5.59311580657959
    5. ' not' → logprob: -5.96811580657959
    6. ' d' → logprob: -6.59311580657959
    7. '   ' → logprob: -9.09311580657959
    8. ' ' → logprob: -9.46811580657959
    9. '(' → logprob: -9.46811580657959
    10. 'print' → logprob: -9.59311580657959

Token 665: ' or' (ID: 503)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05514856055378914
    2. ' s' → logprob: -2.9301486015319824
    3. 'd' → logprob: -9.055148124694824
    4. '(' → logprob: -10.680148124694824
    5. '   ' → logprob: -11.055148124694824
    6. 'start' → logprob: -11.180148124694824
    7. '(s' → logprob: -11.305148124694824
    8. ' d' → logprob: -11.305148124694824
    9. ' the' → logprob: -11.555148124694824
    10. ' (' → logprob: -11.680148124694824

Token 666: ' both' (ID: 2973)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3596813380718231
    2. ' s' → logprob: -1.2346813678741455
    3. ' not' → logprob: -5.484681129455566
    4. 'd' → logprob: -5.734681129455566
    5. 'not' → logprob: -6.609681129455566
    6. ' d' → logprob: -6.984681129455566
    7. '(s' → logprob: -7.234681129455566
    8. '   ' → logprob: -8.734681129455566
    9. ' (' → logprob: -9.109681129455566
    10. '(' → logprob: -9.109681129455566

Token 667: ' ends' (ID: 17095)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11387388408184052
    2. ' are' → logprob: -2.7388739585876465
    3. 'are' → logprob: -4.6138739585876465
    4. 'of' → logprob: -4.6138739585876465
    5. ' s' → logprob: -4.9888739585876465
    6. 'print' → logprob: -5.8638739585876465
    7. ' of' → logprob: -6.3638739585876465
    8. '       ' → logprob: -6.4888739585876465
    9. 'start' → logprob: -6.4888739585876465
    10. '   ' → logprob: -6.6138739585876465

Token 668: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.8062564134597778
    2. 'print' → logprob: -1.3062564134597778
    3. '==' → logprob: -2.0562562942504883
    4. ' print' → logprob: -2.8062562942504883
    5. 's' → logprob: -3.6812562942504883
    6. 'are' → logprob: -3.9312562942504883
    7. ' ==' → logprob: -4.431256294250488
    8. ' have' → logprob: -4.556256294250488
    9. ' s' → logprob: -5.056256294250488
    10. ' !=' → logprob: -5.556256294250488

Token 669: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.04481873661279678
    2. 'not' → logprob: -4.169818878173828
    3. ' '#'' → logprob: -4.169818878173828
    4. 'different' → logprob: -5.044818878173828
    5. ' '#' → logprob: -6.044818878173828
    6. ''' → logprob: -6.669818878173828
    7. ''.' → logprob: -7.044818878173828
    8. ' not' → logprob: -7.169818878173828
    9. '('#' → logprob: -7.919818878173828
    10. '#' → logprob: -8.544818878173828

Token 670: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2427425980567932
    2. ' or' → logprob: -2.2427425384521484
    3. ':
' → logprob: -3.2427425384521484
    4. '       ' → logprob: -3.3677425384521484
    5. ' ,' → logprob: -4.117742538452148
    6. ':' → logprob: -5.117742538452148
    7. 'print' → logprob: -5.617742538452148
    8. ',
' → logprob: -5.742742538452148
    9. ' print' → logprob: -6.242742538452148
    10. '           ' → logprob: -6.617742538452148

Token 671: ' an' (ID: 448)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06359740346670151
    2. ' print' → logprob: -2.8135974407196045
    3. '       ' → logprob: -6.438597202301025
    4. '           ' → logprob: -11.063597679138184
    5. '   ' → logprob: -11.313597679138184
    6. '```' → logprob: -13.563597679138184
    7. '        ' → logprob: -15.688597679138184
    8. '    ' → logprob: -15.813597679138184
    9. '	print' → logprob: -16.313596725463867
    10. ' ' → logprob: -16.563596725463867

Token 672: ' additional' (ID: 6623)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -1.2798190116882324
    2. 'd' → logprob: -1.5298190116882324
    3. 'print' → logprob: -1.5298190116882324
    4. 'additional' → logprob: -1.6548190116882324
    5. 'adjust' → logprob: -3.2798190116882324
    6. ' extra' → logprob: -4.154819011688232
    7. ' additional' → logprob: -4.779819011688232
    8. 'offset' → logprob: -5.029819011688232
    9. 'else' → logprob: -5.029819011688232
    10. 'increment' → logprob: -5.779819011688232

Token 673: ' transition' (ID: 14463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03317738324403763
    2. '+' → logprob: -4.283177375793457
    3. ' ' → logprob: -4.283177375793457
    4. ' +' → logprob: -5.408177375793457
    5. 'print' → logprob: -8.158177375793457
    6. ' print' → logprob: -9.283177375793457
    7. '```' → logprob: -9.908177375793457
    8. '`' → logprob: -10.283177375793457
    9. 'd' → logprob: -10.658177375793457
    10. ' one' → logprob: -11.783177375793457

Token 674: ' is' (ID: 382)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.663764238357544
    2. '+' → logprob: -0.913764238357544
    3. ' is' → logprob: -3.913764238357544
    4. '=' → logprob: -4.038763999938965
    5. '+=' → logprob: -4.538763999938965
    6. '1' → logprob: -4.663763999938965
    7. 'is' → logprob: -4.663763999938965
    8. ' print' → logprob: -5.038763999938965
    9. '   ' → logprob: -5.663763999938965
    10. ' +=' → logprob: -5.913763999938965

Token 675: ' counted' (ID: 60500)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7738280296325684
    2. 'd' → logprob: -1.5238280296325684
    3. ' d' → logprob: -2.3988280296325684
    4. ' added' → logprob: -2.3988280296325684
    5. 'added' → logprob: -2.8988280296325684
    6. ' ' → logprob: -3.5238280296325684
    7. 'print' → logprob: -4.148828029632568
    8. 'needed' → logprob: -4.273828029632568
    9. ' needed' → logprob: -5.148828029632568
    10. 'required' → logprob: -5.148828029632568

Token 676: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5135635733604431
    2. '+' → logprob: -1.263563632965088
    3. ',' → logprob: -2.388563632965088
    4. '   ' → logprob: -4.513563632965088
    5. '       ' → logprob: -4.888563632965088
    6. ' print' → logprob: -5.763563632965088
    7. '+
' → logprob: -7.013563632965088
    8. '=' → logprob: -7.138563632965088
    9. ' +' → logprob: -7.138563632965088
    10. '
' → logprob: -7.138563632965088

Token 677: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01688169315457344
    2. 'print' → logprob: -4.641881465911865
    3. '+' → logprob: -5.266881465911865
    4. '   ' → logprob: -6.641881465911865
    5. '```' → logprob: -8.266881942749023
    6. ' print' → logprob: -8.641881942749023
    7. '           ' → logprob: -10.141881942749023
    8. ' +' → logprob: -10.141881942749023
    9. '	' → logprob: -10.266881942749023
    10. '	print' → logprob: -11.266881942749023

Token 678: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004330532974563539
    2. ' print' → logprob: -7.750432968139648
    3. '       ' → logprob: -13.000432968139648
    4. '   ' → logprob: -16.37543296813965
    5. '```' → logprob: -16.50043296813965
    6. '``' → logprob: -18.87543296813965
    7. '	print' → logprob: -19.25043296813965
    8. '
' → logprob: -19.37543296813965
    9. '           ' → logprob: -20.12543296813965
    10. '`' → logprob: -20.12543296813965

Token 679: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.001242017257027328
    2. '((' → logprob: -6.876242160797119
    3. '(' → logprob: -9.501241683959961
    4. ' (' → logprob: -9.501241683959961
    5. 'd' → logprob: -9.751241683959961
    6. '(max' → logprob: -14.376241683959961
    7. '   ' → logprob: -15.751241683959961
    8. ' d' → logprob: -16.00124168395996
    9. '
' → logprob: -16.50124168395996
    10. ' ' → logprob: -16.62624168395996

Token 680: ' //' (ID: 602)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1498496532440186
    2. '+' → logprob: -1.2748496532440186
    3. ' //' → logprob: -1.3998496532440186
    4. '//' → logprob: -1.8998496532440186
    5. ')' → logprob: -5.024849891662598
    6. '   ' → logprob: -7.899849891662598
    7. ' ' → logprob: -8.024849891662598
    8. '1' → logprob: -8.899849891662598
    9. ' ' → logprob: -10.649849891662598
    10. ')
' → logprob: -10.774849891662598

Token 681: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -9.500075340270996
    3. '1' → logprob: -15.000075340270996
    4. '   ' → logprob: -17.625076293945312
    5. '20' → logprob: -18.375076293945312
    6. '```' → logprob: -18.375076293945312
    7. '２' → logprob: -18.562576293945312
    8. '22' → logprob: -18.625076293945312
    9. '212' → logprob: -18.937576293945312
    10. '200' → logprob: -19.062576293945312

Token 682: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.500005722045898
    3. '1' → logprob: -13.500005722045898
    4. '```' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.4375057220459
    6. '２' → logprob: -18.1250057220459
    7. '
' → logprob: -18.6250057220459
    8. '22' → logprob: -18.8125057220459
    9. '  ' → logprob: -18.9375057220459
    10. '3' → logprob: -19.3750057220459

Token 683: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006733965128660202
    2. ' +' → logprob: -5.0067338943481445
    3. ')' → logprob: -11.006733894348145
    4. '+)' → logprob: -13.631733894348145
    5. '+
' → logprob: -14.381733894348145
    6. '   ' → logprob: -16.25673484802246
    7. ')+' → logprob: -17.00673484802246
    8. '＋' → logprob: -17.38173484802246
    9. ' plus' → logprob: -18.63173484802246
    10. '1' → logprob: -18.88173484802246

Token 684: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.875005722045898
    3. '(' → logprob: -13.125005722045898
    4. 's' → logprob: -14.750005722045898
    5. '((' → logprob: -16.5000057220459
    6. '(s' → logprob: -16.6250057220459
    7. '0' → logprob: -16.6250057220459
    8. 'int' → logprob: -17.2500057220459
    9. ' (' → logprob: -17.3750057220459
    10. 'd' → logprob: -17.7500057220459

Token 685: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.011373155459296e-05
    2. '(' → logprob: -10.625030517578125
    3. 's' → logprob: -13.375030517578125
    4. ' ' → logprob: -13.625030517578125
    5. '(s' → logprob: -13.750030517578125
    6. '((' → logprob: -14.250030517578125
    7. 'int' → logprob: -15.125030517578125
    8. '(int' → logprob: -15.250030517578125
    9. '(d' → logprob: -15.500030517578125
    10. ' (' → logprob: -15.875030517578125

Token 686: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.250003814697266
    4. '))' → logprob: -17.625003814697266
    5. '())' → logprob: -17.875003814697266
    6. '```' → logprob: -18.125003814697266
    7. ')#' → logprob: -18.750003814697266
    8. '`)' → logprob: -18.875003814697266
    9. '')' → logprob: -19.000003814697266
    10. ')`' → logprob: -19.125003814697266

Token 687: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 688: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07304408401250839
    2. '__' → logprob: -2.6980440616607666
    3. '_' → logprob: -5.948044300079346
    4. ' _' → logprob: -7.823044300079346
    5. ' ' → logprob: -10.323043823242188
    6. ' main' → logprob: -11.448043823242188
    7. '()' → logprob: -11.698043823242188
    8. ''' → logprob: -11.948043823242188
    9. 'if' → logprob: -12.448043823242188
    10. '___' → logprob: -12.448043823242188

Token 689: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03106578253209591
    2. ' ==' → logprob: -4.031065940856934
    3. '==' → logprob: -4.406065940856934
    4. ' __' → logprob: -7.531065940856934
    5. '=="' → logprob: -9.781065940856934
    6. '=='' → logprob: -11.781065940856934
    7. '=' → logprob: -12.656065940856934
    8. 'if' → logprob: -12.656065940856934
    9. '[' → logprob: -12.781065940856934
    10. '```' → logprob: -13.156065940856934

Token 690: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.994086627149954e-05
    2. '__.__' → logprob: -9.500080108642578
    3. '__["' → logprob: -13.875080108642578
    4. '==' → logprob: -14.125080108642578
    5. '__('' → logprob: -14.125080108642578
    6. '__.' → logprob: -14.375080108642578
    7. '___' → logprob: -14.375080108642578
    8. '____' → logprob: -14.875080108642578
    9. '__[' → logprob: -15.625080108642578
    10. '__("' → logprob: -15.875080108642578

Token 691: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007047475315630436
    2. '==' → logprob: -5.257047653198242
    3. ' ==' → logprob: -6.382047653198242
    4. '=="' → logprob: -9.257047653198242
    5. '=='' → logprob: -11.882047653198242
    6. '__.__' → logprob: -12.382047653198242
    7. '__["' → logprob: -12.882047653198242
    8. '"' → logprob: -13.257047653198242
    9. '__":
' → logprob: -13.507047653198242
    10. '_' → logprob: -13.507047653198242

Token 692: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10023287683725357
    2. ''' → logprob: -2.3502328395843506
    3. '__' → logprob: -10.60023307800293
    4. ' "__' → logprob: -13.60023307800293
    5. ' '__' → logprob: -16.47523307800293
    6. ''"' → logprob: -18.10023307800293
    7. '`' → logprob: -18.10023307800293
    8. '"name' → logprob: -18.35023307800293
    9. '   ' → logprob: -18.97523307800293
    10. '"_' → logprob: -19.10023307800293

Token 693: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.7292167184641585e-05
    2. '__' → logprob: -10.750057220458984
    3. 'name' → logprob: -10.750057220458984
    4. '"' → logprob: -11.250057220458984
    5. ''' → logprob: -13.625057220458984
    6. ' main' → logprob: -16.125057220458984
    7. '_main' → logprob: -16.875057220458984
    8. 'built' → logprob: -18.500057220458984
    9. '"name' → logprob: -19.375057220458984
    10. 'file' → logprob: -19.375057220458984

Token 694: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.2828884422779083
    2. '__' → logprob: -1.407888412475586
    3. '__':
' → logprob: -6.657888412475586
    4. '__:' → logprob: -8.407888412475586
    5. '__["' → logprob: -9.782888412475586
    6. '__.' → logprob: -9.782888412475586
    7. '__.__' → logprob: -10.657888412475586
    8. '():
' → logprob: -10.907888412475586
    9. '.' → logprob: -11.407888412475586
    10. '_' → logprob: -11.532888412475586

Token 695: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006601683329790831
    2. ' main' → logprob: -5.256601810455322
    3. '	main' → logprob: -6.631601810455322
    4. '   ' → logprob: -10.006601333618164
    5. '_main' → logprob: -13.131601333618164
    6. '__' → logprob: -14.006601333618164
    7. '(main' → logprob: -15.006601333618164
    8. '.main' → logprob: -15.756601333618164
    9. '    
' → logprob: -16.631601333618164
    10. 'Main' → logprob: -16.756601333618164

Token 696: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.5048530030981055e-06
    2. ' main' → logprob: -13.500001907348633
    3. '	main' → logprob: -17.625001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '_main' → logprob: -21.125001907348633
    6. '(main' → logprob: -21.375001907348633
    7. '.main' → logprob: -21.625001907348633
    8. 'import' → logprob: -21.750001907348633
    9. 'Main' → logprob: -22.500001907348633
    10. 'mainwindow' → logprob: -25.625001907348633

Token 697: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 695
Tokens correctement prédits (1ère position, stricte): 209
Tokens correctement prédits (1ère position, avec adaptation): 230
Tokens correctement prédits (top 10): 505
Précision stricte (1ère position): 30.07%
Précision adaptée (1ère position): 33.09%
Précision (top 10): 72.66%
================================================================================
