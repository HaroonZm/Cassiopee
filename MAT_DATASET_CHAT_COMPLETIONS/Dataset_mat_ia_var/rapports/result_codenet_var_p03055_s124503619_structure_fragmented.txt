================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from heapq import heapify, heappop, heappush

def read_input():
    return sys.stdin.readline().rstrip()

def read_int():
    return int(read_input())

def read_int_list():
    return list(map(int, read_input().split()))

def create_graph(node_count):
    return [[] for _ in range(node_count + 1)]

def connect_nodes(graph, u, v):
    graph[u].append(v)
    graph[v].append(u)

def initialize_distances(size, value):
    return [value] * size

def set_start_distance(distances, start):
    distances[start] = 0

def create_priority_queue(start):
    return [(0, start)]

def should_continue(distances, current, dist):
    return distances[current] < dist

def calculate_next_distance(dist):
    return dist + 1

def update_distance_if_shorter(distances, queue, neighbor, new_dist):
    if distances[neighbor] > new_dist:
        distances[neighbor] = new_dist
        heappush(queue, (new_dist, neighbor))

def process_neighbors(graph, distances, queue, current, dist):
    for neighbor in graph[current]:
        new_dist = calculate_next_distance(dist)
        update_distance_if_shorter(distances, queue, neighbor, new_dist)

def dijkstra_process(graph, node_count, start):
    INF = 10 ** 15
    distances = initialize_distances(node_count + 1, INF)
    set_start_distance(distances, start)
    queue = create_priority_queue(start)
    while queue:
        dist, current = heappop(queue)
        if should_continue(distances, current, dist):
            continue
        process_neighbors(graph, distances, queue, current, dist)
    return distances

def sort_distances_with_indices(distances):
    return sorted([(x, i) for i, x in enumerate(distances)], reverse=True)

def get_second_far_node(sorted_distances):
    return sorted_distances[1][1]

def find_diameter(distances):
    return max(distances[1:]) + 1

def calculate_bl(diameter):
    return diameter % 3 != 2

def print_result(bl):
    print('First' if bl else 'Second')

def main():
    N = read_int()
    graph = create_graph(N)
    def read_and_connect(_):
        a, b = read_int_list()
        connect_nodes(graph, a, b)
    for _ in range(N-1):
        read_and_connect(_)
    first_dist = dijkstra_process(graph, N, 1)
    sorted_dist = sort_distances_with_indices(first_dist)
    new_root = get_second_far_node(sorted_dist)
    second_dist = dijkstra_process(graph, N, new_root)
    diameter = find_diameter(second_dist)
    bl = calculate_bl(diameter)
    print_result(bl)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6405164003372192
    2. '.' → logprob: -0.8905164003372192
    3. 'import' → logprob: -4.01551628112793
    4. 'newline' → logprob: -4.26551628112793
    5. '\' → logprob: -4.76551628112793
    6. '<|end|>' → logprob: -5.01551628112793
    7. '```' → logprob: -5.39051628112793
    8. '
' → logprob: -5.76551628112793
    9. '<|end|>' → logprob: -6.51551628112793
    10. '' → logprob: -6.51551628112793

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.009566015563905239
    2. 'os' → logprob: -5.259565830230713
    3. ' collections' → logprob: -7.009565830230713
    4. ' ' → logprob: -7.134565830230713
    5. ' math' → logprob: -7.384565830230713
    6. ' pathlib' → logprob: -7.634565830230713
    7. ' Py' → logprob: -8.509566307067871
    8. ' typing' → logprob: -8.759566307067871
    9. 'collections' → logprob: -8.759566307067871
    10. ' ' → logprob: -9.009566307067871

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.082895273109898e-05
    2. 'import' → logprob: -10.500030517578125
    3. 'queue' → logprob: -12.750030517578125
    4. ' import' → logprob: -15.500030517578125
    5. 'ify' → logprob: -17.250030517578125
    6. 'i' → logprob: -17.875030517578125
    7. ' queue' → logprob: -18.625030517578125
    8. 'ql' → logprob: -18.750030517578125
    9. 'dict' → logprob: -18.750030517578125
    10. 'lib' → logprob: -19.250030517578125

Token 6: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0032267908100038767
    2. 'import' → logprob: -5.7532267570495605
    3. ' ' → logprob: -10.003227233886719
    4. '	import' → logprob: -13.378227233886719
    5. ' im' → logprob: -13.753227233886719
    6. ' impor' → logprob: -15.503227233886719
    7. '_import' → logprob: -15.628227233886719
    8. '.' → logprob: -16.25322723388672
    9. '-import' → logprob: -16.62822723388672
    10. ' space' → logprob: -16.62822723388672

Token 7: ' heap' (ID: 37237)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.3889737129211426
    2. 'he' → logprob: -1.1389737129211426
    3. 'heap' → logprob: -6.638973712921143
    4. ' n' → logprob: -7.763973712921143
    5. ' heap' → logprob: -9.263973236083984
    6. 'nl' → logprob: -9.263973236083984
    7. 'merge' → logprob: -10.138973236083984
    8. 'n' → logprob: -10.138973236083984
    9. 'import' → logprob: -10.263973236083984
    10. ' ' → logprob: -10.388973236083984

Token 8: 'ify' (ID: 1985)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1832779347896576
    2. 'ify' → logprob: -1.93327796459198
    3. 'p' → logprob: -5.0582780838012695
    4. 'push' → logprob: -5.0582780838012695
    5. 's' → logprob: -5.6832780838012695
    6. 'u' → logprob: -6.3082780838012695
    7. 'f' → logprob: -6.4332780838012695
    8. 'i' → logprob: -8.05827808380127
    9. 'Push' → logprob: -8.18327808380127
    10. '.' → logprob: -8.18327808380127

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02948952466249466
    2. 'import' → logprob: -4.154489517211914
    3. ',
' → logprob: -4.904489517211914
    4. '\n' → logprob: -6.154489517211914
    5. '\' → logprob: -6.279489517211914
    6. '```' → logprob: -6.904489517211914
    7. '`' → logprob: -8.654489517211914
    8. '
' → logprob: -8.654489517211914
    9. '' → logprob: -9.654489517211914
    10. '  
' → logprob: -9.779489517211914

Token 10: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.07928003370761871
    2. ' he' → logprob: -2.579280138015747
    3. '.he' → logprob: -8.204279899597168
    4. 'heap' → logprob: -9.329279899597168
    5. '```' → logprob: -11.204279899597168
    6. '_he' → logprob: -12.579279899597168
    7. 'nl' → logprob: -13.079279899597168
    8. 'merge' → logprob: -13.079279899597168
    9. ' ' → logprob: -13.454279899597168
    10. ' heap' → logprob: -13.454279899597168

Token 11: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0002647927321959287
    2. 'ap' → logprob: -8.250265121459961
    3. 'a' → logprob: -12.625265121459961
    4. 'appen' → logprob: -15.625265121459961
    5. 'aps' → logprob: -16.62526512145996
    6. 'apps' → logprob: -18.00026512145996
    7. 'appa' → logprob: -18.37526512145996
    8. 'ап' → logprob: -18.62526512145996
    9. 'append' → logprob: -18.62526512145996
    10. '[' → logprob: -19.00026512145996

Token 12: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.9160102712921798e-05
    2. 'op' → logprob: -10.625029563903809
    3. 'us' → logprob: -12.250029563903809
    4. 'u' → logprob: -17.500028610229492
    5. 'USH' → logprob: -18.625028610229492
    6. '   ' → logprob: -18.875028610229492
    7. '

' → logprob: -19.000028610229492
    8. '```' → logprob: -19.125028610229492
    9. '[' → logprob: -19.250028610229492
    10. 'usch' → logprob: -19.375028610229492

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9118168950080872
    2. '\n' → logprob: -1.2868168354034424
    3. 'import' → logprob: -2.1618168354034424
    4. '
' → logprob: -2.4118168354034424
    5. '```' → logprob: -2.9118168354034424
    6. '\' → logprob: -3.2868168354034424
    7. '

' → logprob: -4.7868170738220215
    8. ',
' → logprob: -4.9118170738220215
    9. '' → logprob: -5.5368170738220215
    10. '`' → logprob: -6.4118170738220215

Token 14: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.11482105404138565
    2. ' he' → logprob: -2.239820957183838
    3. 'heap' → logprob: -6.239820957183838
    4. ' heap' → logprob: -10.364821434020996
    5. '```' → logprob: -11.614821434020996
    6. '.he' → logprob: -12.989821434020996
    7. ' ' → logprob: -13.739821434020996
    8. 'hep' → logprob: -14.114821434020996
    9. '-he' → logprob: -15.239821434020996
    10. 'hev' → logprob: -15.489821434020996

Token 15: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0009151478880085051
    2. 'ap' → logprob: -7.000915050506592
    3. 'a' → logprob: -13.12591552734375
    4. 'ап' → logprob: -14.50091552734375
    5. 'appen' → logprob: -14.62591552734375
    6. 'append' → logprob: -15.50091552734375
    7. 'APP' → logprob: -16.37591552734375
    8. 'appe' → logprob: -16.50091552734375
    9. 'appa' → logprob: -16.62591552734375
    10. 'apput' → logprob: -17.00091552734375

Token 16: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.7697225252486533e-06
    2. 'us' → logprob: -12.875003814697266
    3. 'sh' → logprob: -14.125003814697266
    4. 'u' → logprob: -15.250003814697266
    5. 'USH' → logprob: -16.875003814697266
    6. 'ut' → logprob: -18.125003814697266
    7. '
' → logprob: -18.750003814697266
    8. '

' → logprob: -18.875003814697266
    9. '   ' → logprob: -19.000003814697266
    10. ' ush' → logprob: -19.250003814697266

Token 17: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5490375757217407
    2. '

' → logprob: -1.1740375757217407
    3. '\n' → logprob: -2.424037456512451
    4. '```' → logprob: -4.424037456512451
    5. '\' → logprob: -5.424037456512451
    6. '' → logprob: -6.174037456512451
    7. 'def' → logprob: -6.299037456512451
    8. '(' → logprob: -6.674037456512451
    9. '


' → logprob: -7.299037456512451
    10. '(
' → logprob: -7.424037456512451

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.055744368582963943
    2. '\' → logprob: -3.8057444095611572
    3. '
' → logprob: -4.430744171142578
    4. '```' → logprob: -4.805744171142578
    5. 'class' → logprob: -5.305744171142578
    6. '\n' → logprob: -6.305744171142578
    7. 'import' → logprob: -6.555744171142578
    8. '#' → logprob: -7.055744171142578
    9. '`' → logprob: -7.055744171142578
    10. '' → logprob: -7.305744171142578

Token 19: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09760762751102448
    2. ' main' → logprob: -3.9726076126098633
    3. ' find' → logprob: -4.222607612609863
    4. ' d' → logprob: -4.347607612609863
    5. ' process' → logprob: -4.472607612609863
    6. ' solve' → logprob: -4.722607612609863
    7. ' a' → logprob: -5.347607612609863
    8. ' calculate' → logprob: -5.722607612609863
    9. ' shortest' → logprob: -5.972607612609863
    10. ' merge' → logprob: -6.097607612609863

Token 20: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4829154312610626
    2. '_' → logprob: -1.1079154014587402
    3. '_line' → logprob: -2.9829154014587402
    4. '_input' → logprob: -7.73291540145874
    5. '_token' → logprob: -8.607915878295898
    6. '(_' → logprob: -9.107915878295898
    7. '_data' → logprob: -9.232915878295898
    8. '_parent' → logprob: -9.232915878295898
    9. '_file' → logprob: -9.357915878295898
    10. ')' → logprob: -9.482915878295898

Token 21: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001627217628993094
    2. '():' → logprob: -7.626627445220947
    3. '_' → logprob: -7.751627445220947
    4. '```' → logprob: -8.626626968383789
    5. '("("' → logprob: -8.876626968383789
    6. '()' → logprob: -10.001626968383789
    7. '_parent' → logprob: -10.001626968383789
    8. ' (' → logprob: -10.501626968383789
    9. '(`' → logprob: -10.751626968383789
    10. '(_' → logprob: -11.001626968383789

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09646377712488174
    2. '\n' → logprob: -3.596463680267334
    3. '\' → logprob: -3.721463680267334
    4. '(' → logprob: -3.971463680267334
    5. '```' → logprob: -5.096463680267334
    6. '    
' → logprob: -5.221463680267334
    7. '    ' → logprob: -6.096463680267334
    8. 'newline' → logprob: -6.721463680267334
    9. ' ' → logprob: -6.971463680267334
    10. '<|end|>' → logprob: -7.096463680267334

Token 23: ' return' (ID: 622)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.2344868183135986
    2. '   ' → logprob: -1.4844868183135986
    3. ' return' → logprob: -1.4844868183135986
    4. ' lines' → logprob: -2.3594868183135986
    5. ' data' → logprob: -2.8594868183135986
    6. 'data' → logprob: -2.9844868183135986
    7. 'return' (adapté à ' return') → logprob: -3.7344868183135986
    8. ' input' → logprob: -4.4844865798950195
    9. 'line' → logprob: -4.9844865798950195
    10. 'input' → logprob: -6.1094865798950195

Token 24: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0430319607257843
    2. ' list' → logprob: -3.293031930923462
    3. ' ' → logprob: -6.168032169342041
    4. 'sys' → logprob: -6.793032169342041
    5. ' map' → logprob: -7.043032169342041
    6. 'list' → logprob: -8.168031692504883
    7. ' [' → logprob: -8.293031692504883
    8. ' []' → logprob: -8.918031692504883
    9. '[' → logprob: -9.418031692504883
    10. ' input' → logprob: -9.793031692504883

Token 25: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.015788694843649864
    2. '.' → logprob: -4.265788555145264
    3. '.argv' → logprob: -6.515788555145264
    4. '.stdout' → logprob: -9.765789031982422
    5. ' .' → logprob: -10.015789031982422
    6. '.std' → logprob: -10.515789031982422
    7. '.readline' → logprob: -11.640789031982422
    8. '.input' → logprob: -13.265789031982422
    9. '.st' → logprob: -13.765789031982422
    10. ' stdin' → logprob: -14.265789031982422

Token 26: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04814530909061432
    2. '.' → logprob: -3.298145294189453
    3. '.read' → logprob: -4.673145294189453
    4. '.readlines' → logprob: -7.423145294189453
    5. 'read' → logprob: -9.923145294189453
    6. '()' → logprob: -10.923145294189453
    7. '().' → logprob: -11.048145294189453
    8. ' readline' → logprob: -11.673145294189453
    9. '```' → logprob: -12.173145294189453
    10. '.Read' → logprob: -12.298145294189453

Token 27: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20162442326545715
    2. '().' → logprob: -1.7016243934631348
    3. '(' → logprob: -9.201624870300293
    4. ' ()' → logprob: -9.951624870300293
    5. '()

' → logprob: -11.326624870300293
    6. '()\' → logprob: -11.326624870300293
    7. '()
' → logprob: -11.701624870300293
    8. ')' → logprob: -11.826624870300293
    9. '()(' → logprob: -12.076624870300293
    10. '())' → logprob: -12.201624870300293

Token 28: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0002615742268972099
    2. 'rstrip' → logprob: -8.250261306762695
    3. ' strip' → logprob: -16.250261306762695
    4. 'read' → logprob: -16.625261306762695
    5. '_strip' → logprob: -17.750261306762695
    6. 'decode' → logprob: -19.125261306762695
    7. 'split' → logprob: -20.000261306762695
    8. '-strip' → logprob: -20.250261306762695
    9. 'str' → logprob: -20.625261306762695
    10. 'Strip' → logprob: -21.250261306762695

Token 29: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3139010965824127
    2. '(' → logprob: -1.3139010667800903
    3. '(
' → logprob: -8.6889009475708
    4. '()\' → logprob: -8.6889009475708
    5. '()
' → logprob: -8.9389009475708
    6. '(\' → logprob: -10.3139009475708
    7. '()

' → logprob: -10.6889009475708
    8. ' ()' → logprob: -10.6889009475708
    9. '\n' → logprob: -10.9389009475708
    10. '\(' → logprob: -11.3139009475708

Token 30: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02285545878112316
    2. 'd' → logprob: -3.897855520248413
    3. '
' → logprob: -6.272855281829834
    4. '\' → logprob: -8.522855758666992
    5. 'de' → logprob: -9.397855758666992
    6. 'class' → logprob: -9.897855758666992
    7. '#' → logprob: -10.397855758666992
    8. '

' → logprob: -11.272855758666992
    9. '```' → logprob: -11.397855758666992
    10. 'n' → logprob: -11.772855758666992

Token 31: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06786731630563736
    2. ' solve' → logprob: -3.4428672790527344
    3. ' process' → logprob: -3.6928672790527344
    4. ' build' → logprob: -6.442867279052734
    5. ' calculate' → logprob: -6.817867279052734
    6. ' parse' → logprob: -6.817867279052734
    7. ' find' → logprob: -7.192867279052734
    8. ' add' → logprob: -7.442867279052734
    9. ' push' → logprob: -7.942867279052734
    10. ' create' → logprob: -8.067867279052734

Token 32: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.06741208583116531
    2. '_line' → logprob: -3.3174121379852295
    3. '_' → logprob: -3.6924121379852295
    4. '_list' → logprob: -6.81741189956665
    5. 'int' → logprob: -7.19241189956665
    6. '_input' → logprob: -7.56741189956665
    7. '_integer' → logprob: -7.94241189956665
    8. '_array' → logprob: -8.067412376403809
    9. '_in' → logprob: -8.817412376403809
    10. '_n' → logprob: -8.817412376403809

Token 33: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006876522093079984
    2. ' ()' → logprob: -7.750687599182129
    3. 's' → logprob: -10.500687599182129
    4. '(' → logprob: -10.500687599182129
    5. '`()' → logprob: -10.500687599182129
    6. '（）' → logprob: -10.625687599182129
    7. '()]' → logprob: -10.875687599182129
    8. '():' → logprob: -11.125687599182129
    9. '[]' → logprob: -11.250687599182129
    10. ']()' → logprob: -11.500687599182129

Token 34: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023345986381173134
    2. ' ()' → logprob: -4.398345947265625
    3. '   ' → logprob: -4.773345947265625
    4. 'int' → logprob: -6.398345947265625
    5. '(int' → logprob: -9.023345947265625
    6. '(' → logprob: -9.273345947265625
    7. '  ' → logprob: -9.273345947265625
    8. ' ' → logprob: -9.773345947265625
    9. ')' → logprob: -10.023345947265625
    10. '()
' → logprob: -10.273345947265625

Token 35: ' return' (ID: 622)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.034289367496967316
    2. 'int' → logprob: -3.5342893600463867
    3. ' return' → logprob: -5.409289360046387
    4. 'return' (adapté à ' return') → logprob: -10.784289360046387
    5. ' map' → logprob: -11.784289360046387
    6. ' ' → logprob: -12.034289360046387
    7. '(int' → logprob: -12.159289360046387
    8. '   ' → logprob: -12.284289360046387
    9. '=int' → logprob: -12.659289360046387
    10. ' i' → logprob: -12.784289360046387

Token 36: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.018341094255447388
    2. 'int' → logprob: -4.018341064453125
    3. '(int' → logprob: -8.643341064453125
    4. ' ' → logprob: -11.393341064453125
    5. '(' → logprob: -14.018341064453125
    6. ' ' → logprob: -14.393341064453125
    7. '	int' → logprob: -14.643341064453125
    8. '=int' → logprob: -15.018341064453125
    9. '<int' → logprob: -15.268341064453125
    10. '  ' → logprob: -15.268341064453125

Token 37: '(read' (ID: 45738)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4762616753578186
    2. '(read' → logprob: -0.9762616753578186
    3. '(sys' → logprob: -6.226261615753174
    4. 'read' → logprob: -8.976262092590332
    5. '()' → logprob: -10.226262092590332
    6. ' (' → logprob: -11.476262092590332
    7. '(
' → logprob: -11.476262092590332
    8. '(Read' → logprob: -12.851262092590332
    9. '(

' → logprob: -12.976262092590332
    10. '(input' → logprob: -12.976262092590332

Token 38: '_input' (ID: 12507)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.6617201566696167
    2. '_input' → logprob: -1.4117201566696167
    3. '_int' → logprob: -1.9117201566696167
    4. '_' → logprob: -2.4117202758789062
    5. '_token' → logprob: -6.911720275878906
    6. '_char' → logprob: -7.536720275878906
    7. '_str' → logprob: -8.036720275878906
    8. '_in' → logprob: -8.661720275878906
    9. '_word' → logprob: -8.911720275878906
    10. '_string' → logprob: -9.286720275878906

Token 39: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.029988130554556847
    2. '()' → logprob: -3.5299880504608154
    3. ')' → logprob: -8.529988288879395
    4. '()))' → logprob: -11.279988288879395
    5. ' ())' → logprob: -11.904988288879395
    6. '())
' → logprob: -12.029988288879395
    7. '(' → logprob: -12.404988288879395
    8. '()]' → logprob: -12.904988288879395
    9. '()
' → logprob: -13.154988288879395
    10. '();)' → logprob: -13.654988288879395

Token 40: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000356199947418645
    2. 'class' → logprob: -8.500356674194336
    3. '\' → logprob: -9.125356674194336
    4. '
' → logprob: -11.375356674194336
    5. 'd' → logprob: -11.750356674194336
    6. '

' → logprob: -12.000356674194336
    7. 'n' → logprob: -12.000356674194336
    8. '#' → logprob: -12.375356674194336
    9. '```' → logprob: -13.000356674194336
    10. '\n' → logprob: -13.125356674194336

Token 41: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.029500631615519524
    2. 'read' → logprob: -3.654500722885132
    3. ' main' → logprob: -5.904500484466553
    4. '_' → logprob: -8.904500961303711
    5. '_read' → logprob: -9.029500961303711
    6. ' solve' → logprob: -9.654500961303711
    7. ' process' → logprob: -10.279500961303711
    8. '	read' → logprob: -10.529500961303711
    9. 'main' → logprob: -11.154500961303711
    10. ' write' → logprob: -11.529500961303711

Token 42: '_int' (ID: 12285)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.025843625888228416
    2. '_int' → logprob: -4.150843620300293
    3. '_line' → logprob: -5.025843620300293
    4. '_' → logprob: -6.650843620300293
    5. '_tuple' → logprob: -7.025843620300293
    6. '_array' → logprob: -7.900843620300293
    7. '_lst' → logprob: -8.275843620300293
    8. '_str' → logprob: -8.650843620300293
    9. 's' → logprob: -9.525843620300293
    10. '_float' → logprob: -10.025843620300293

Token 43: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.4497040808200836
    2. 's' → logprob: -1.4497040510177612
    3. '_array' → logprob: -2.074704170227051
    4. '_line' → logprob: -6.949704170227051
    5. '_lst' → logprob: -8.32470417022705
    6. 'list' → logprob: -8.57470417022705
    7. '()' → logprob: -8.82470417022705
    8. '_' → logprob: -9.07470417022705
    9. '_s' → logprob: -9.32470417022705
    10. '_arr' → logprob: -9.82470417022705

Token 44: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02169485203921795
    2. '()' → logprob: -3.8966948986053467
    3. '(' → logprob: -6.896694660186768
    4. '():
' → logprob: -9.771695137023926
    5. ' ()' → logprob: -11.021695137023926
    6. '()>' → logprob: -11.021695137023926
    7. '()">' → logprob: -11.021695137023926
    8. '():

' → logprob: -12.021695137023926
    9. ' ():' → logprob: -12.021695137023926
    10. '()?>' → logprob: -13.271695137023926

Token 45: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.25332111120224
    2. '()' → logprob: -1.5033211708068848
    3. ' ()' → logprob: -7.003321170806885
    4. '():
' → logprob: -8.503320693969727
    5. ' ():' → logprob: -9.128320693969727
    6. '(' → logprob: -9.378320693969727
    7. '()[' → logprob: -10.378320693969727
    8. '().' → logprob: -10.503320693969727
    9. '()>' → logprob: -12.253320693969727
    10. '   ' → logprob: -12.753320693969727

Token 46: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7128453254699707
    2. ' list' → logprob: -1.0878453254699707
    3. 'return' (adapté à ' return') → logprob: -2.2128453254699707
    4. ' return' → logprob: -2.8378453254699707
    5. '   ' → logprob: -6.087845325469971
    6. 'map' → logprob: -6.712845325469971
    7. ' map' → logprob: -6.837845325469971
    8. ' ' → logprob: -8.462844848632812
    9. '(list' → logprob: -10.087844848632812
    10. '  ' → logprob: -10.587844848632812

Token 47: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5764656066894531
    2. 'list' → logprob: -0.8264656066894531
    3. '[list' → logprob: -7.576465606689453
    4. '[' → logprob: -11.451465606689453
    5. ' [' → logprob: -13.576465606689453
    6. '(list' → logprob: -13.701465606689453
    7. '	list' → logprob: -15.201465606689453
    8. ' ' → logprob: -16.451465606689453
    9. 'map' → logprob: -16.576465606689453
    10. '=list' → logprob: -16.701465606689453

Token 48: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3319353759288788
    2. '(map' → logprob: -1.8319354057312012
    3. '(read' → logprob: -2.206935405731201
    4. '(eval' → logprob: -5.331935405731201
    5. '(range' → logprob: -5.956935405731201
    6. '(int' → logprob: -6.206935405731201
    7. '(sys' → logprob: -7.831935405731201
    8. '(list' → logprob: -8.081934928894043
    9. '(parse' → logprob: -8.206934928894043
    10. '(return' → logprob: -8.206934928894043

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00016873658751137555
    2. 'int' → logprob: -9.125168800354004
    3. '(' → logprob: -10.000168800354004
    4. '<int' → logprob: -11.875168800354004
    5. ',int' → logprob: -13.000168800354004
    6. ')' → logprob: -13.375168800354004
    7. '=int' → logprob: -13.750168800354004
    8. ' int' → logprob: -14.250168800354004
    9. '[int' → logprob: -14.750168800354004
    10. '```' → logprob: -15.000168800354004

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48523643612861633
    2. '(read' → logprob: -0.985236406326294
    3. '(' → logprob: -4.735236644744873
    4. 'read' → logprob: -6.610236644744873
    5. ' ,' → logprob: -7.860236644744873
    6. ')' → logprob: -8.985236167907715
    7. ',(' → logprob: -9.485236167907715
    8. '),' → logprob: -9.485236167907715
    9. ',input' → logprob: -9.610236167907715
    10. '))' → logprob: -10.110236167907715

Token 51: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.005235648714005947
    2. ' read' → logprob: -5.25523567199707
    3. '	read' → logprob: -13.75523567199707
    4. '(read' → logprob: -14.50523567199707
    5. '   ' → logprob: -16.13023567199707
    6. 'input' → logprob: -17.13023567199707
    7. ' ' → logprob: -17.25523567199707
    8. 'str' → logprob: -18.00523567199707
    9. '
' → logprob: -18.13023567199707
    10. ' readline' → logprob: -18.63023567199707

Token 52: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0017840604996308684
    2. '_int' → logprob: -6.376783847808838
    3. '_' → logprob: -9.751784324645996
    4. 'input' → logprob: -11.376784324645996
    5. 'int' → logprob: -12.001784324645996
    6. '_in' → logprob: -12.876784324645996
    7. '_list' → logprob: -14.126784324645996
    8. '_lambda' → logprob: -15.251784324645996
    9. '_str' → logprob: -15.376784324645996
    10. '(input' → logprob: -15.376784324645996

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005016815848648548
    2. '))' → logprob: -8.37550163269043
    3. '()))' → logprob: -8.62550163269043
    4. '()' → logprob: -9.75050163269043
    5. ')' → logprob: -11.00050163269043
    6. '.' → logprob: -12.37550163269043
    7. ' ().' → logprob: -12.75050163269043
    8. '.split' → logprob: -13.00050163269043
    9. '())' → logprob: -13.12550163269043
    10. '(' → logprob: -13.50050163269043

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.960946772480384e-05
    2. 'strip' → logprob: -9.250099182128906
    3. ' split' → logprob: -13.125099182128906
    4. 'rstrip' → logprob: -13.750099182128906
    5. '(split' → logprob: -15.125099182128906
    6. '.split' → logprob: -17.125099182128906
    7. 's' → logprob: -17.500099182128906
    8. 'spl' → logprob: -17.625099182128906
    9. ')' → logprob: -19.250099182128906
    10. '().' → logprob: -19.375099182128906

Token 55: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.48033571243286133
    2. '()))' → logprob: -0.9803357124328613
    3. '()' → logprob: -5.105335712432861
    4. '())' → logprob: -9.480335235595703
    5. '(' → logprob: -10.230335235595703
    6. ')' → logprob: -10.355335235595703
    7. ')))' → logprob: -11.230335235595703
    8. '()))
' → logprob: -11.480335235595703
    9. ' ))' → logprob: -12.980335235595703
    10. '()));' → logprob: -13.730335235595703

Token 56: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010682986117899418
    2. 'd' → logprob: -5.135683059692383
    3. 'class' → logprob: -5.385683059692383
    4. '
' → logprob: -9.510683059692383
    5. 'de' → logprob: -10.135683059692383
    6. '\' → logprob: -11.135683059692383
    7. '#' → logprob: -11.260683059692383
    8. '```' → logprob: -12.135683059692383
    9. '

' → logprob: -12.260683059692383
    10. 'n' → logprob: -12.760683059692383

Token 57: ' create' (ID: 2501)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.018649697303772
    2. ' main' → logprob: -1.393649697303772
    3. ' solve' → logprob: -2.1436495780944824
    4. 'solve' → logprob: -2.5186495780944824
    5. 'd' → logprob: -2.8936495780944824
    6. 'main' → logprob: -3.2686495780944824
    7. ' process' → logprob: -3.7686495780944824
    8. 'process' → logprob: -4.643649578094482
    9. ' is' → logprob: -4.768649578094482
    10. ' find' → logprob: -4.893649578094482

Token 58: '_graph' (ID: 33441)
  Prédit: '_heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.5010085105895996
    2. '_p' → logprob: -1.3760085105895996
    3. '_' → logprob: -2.1260085105895996
    4. '_priority' → logprob: -4.6260085105896
    5. '_queue' → logprob: -5.1260085105896
    6. '_min' → logprob: -5.8760085105896
    7. '_max' → logprob: -6.2510085105896
    8. '_array' → logprob: -8.001008987426758
    9. ' _' → logprob: -9.001008987426758
    10. '_graph' → logprob: -9.376008987426758

Token 59: '(node' (ID: 13356)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003724303562194109
    2. '_' → logprob: -5.878724098205566
    3. '("("' → logprob: -8.628724098205566
    4. ' (' → logprob: -9.253724098205566
    5. '(_' → logprob: -9.253724098205566
    6. '(node' → logprob: -9.503724098205566
    7. '_(' → logprob: -9.628724098205566
    8. '(nodes' → logprob: -10.253724098205566
    9. '(_)' → logprob: -10.253724098205566
    10. '```' → logprob: -10.253724098205566

Token 60: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001099491841159761
    2. '_count' → logprob: -7.001099586486816
    3. '_s' → logprob: -9.126099586486816
    4. '_list' → logprob: -10.251099586486816
    5. '):' → logprob: -10.876099586486816
    6. ')_' → logprob: -12.001099586486816
    7. '_' → logprob: -12.001099586486816
    8. ')' → logprob: -12.501099586486816
    9. '_counts' → logprob: -12.876099586486816
    10. ',' → logprob: -14.001099586486816

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027289114892482758
    2. ',' → logprob: -3.6522891521453857
    3. ')' → logprob: -7.277288913726807
    4. ' ):' → logprob: -8.777289390563965
    5. '):
' → logprob: -9.027289390563965
    6. ':' → logprob: -11.527289390563965
    7. ' ,' → logprob: -12.402289390563965
    8. '=' → logprob: -13.527289390563965
    9. ',n' → logprob: -13.652289390563965
    10. ' )' → logprob: -14.464789390563965

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032378386822529137
    2. '    ' → logprob: -9.000324249267578
    3. '    
' → logprob: -9.625324249267578
    4. ' return' → logprob: -9.875324249267578
    5. ' graph' → logprob: -10.750324249267578
    6. '	graph' → logprob: -11.625324249267578
    7. 'graph' → logprob: -11.750324249267578
    8. '	return' → logprob: -12.000324249267578
    9. '   ' → logprob: -12.000324249267578
    10. '```' → logprob: -12.000324249267578

Token 63: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0323818922042847
    2. 'graph' → logprob: -1.0323818922042847
    3. ' graph' → logprob: -1.9073818922042847
    4. ' {}' → logprob: -2.907382011413574
    5. '{}' → logprob: -3.032382011413574
    6. ' return' → logprob: -4.532382011413574
    7. ' {' → logprob: -4.657382011413574
    8. '{' → logprob: -5.407382011413574
    9. ' defaultdict' → logprob: -5.657382011413574
    10. '	graph' → logprob: -5.907382011413574

Token 64: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37718504667282104
    2. ' [[]' → logprob: -1.6271851062774658
    3. '{' → logprob: -2.252185106277466
    4. ' {' → logprob: -4.502184867858887
    5. ' [' → logprob: -7.377184867858887
    6. '{}' → logprob: -7.627184867858887
    7. ' [{}' → logprob: -8.752184867858887
    8. '[]' → logprob: -9.752184867858887
    9. '[{' → logprob: -9.877184867858887
    10. '   ' → logprob: -10.502184867858887

Token 65: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38732725381851196
    2. ' for' → logprob: -1.1373271942138672
    3. ')' → logprob: -8.012327194213867
    4. ']' → logprob: -9.262327194213867
    5. '   ' → logprob: -11.387327194213867
    6. ' ' → logprob: -11.762327194213867
    7. '	for' → logprob: -12.137327194213867
    8. '()' → logprob: -13.512327194213867
    9. ',' → logprob: -13.762327194213867
    10. '```' → logprob: -13.887327194213867

Token 66: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2160096913576126
    2. ' _' → logprob: -1.7160097360610962
    3. 'range' → logprob: -4.966009616851807
    4. ' range' → logprob: -5.091009616851807
    5. ' ' → logprob: -7.591009616851807
    6. '_range' → logprob: -7.716009616851807
    7. ' in' → logprob: -8.716010093688965
    8. '(range' → logprob: -8.966010093688965
    9. '_in' → logprob: -9.966010093688965
    10. '_node' → logprob: -10.841010093688965

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01544821634888649
    2. 'in' → logprob: -4.265448093414307
    3. 'range' → logprob: -6.765448093414307
    4. ' ' → logprob: -9.015448570251465
    5. ' range' → logprob: -11.890448570251465
    6. ' _' → logprob: -14.140448570251465
    7. '  ' → logprob: -14.515448570251465
    8. '_' → logprob: -14.765448570251465
    9. 'i' → logprob: -15.640448570251465
    10. 'n' → logprob: -16.01544761657715

Token 68: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004079112783074379
    2. ' range' → logprob: -5.504079341888428
    3. '(range' → logprob: -15.37907886505127
    4. '	range' → logprob: -15.62907886505127
    5. '   ' → logprob: -16.004079818725586
    6. ' ' → logprob: -16.129079818725586
    7. '  ' → logprob: -16.629079818725586
    8. ')' → logprob: -18.754079818725586
    9. ' in' → logprob: -18.879079818725586
    10. '_range' → logprob: -19.004079818725586

Token 69: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -9.662937372922897e-05
    2. '(' → logprob: -9.250096321105957
    3. '(n' → logprob: -14.625096321105957
    4. 'node' → logprob: -18.250097274780273
    5. '(
' → logprob: -18.750097274780273
    6. '(Node' → logprob: -18.875097274780273
    7. ' (' → logprob: -19.125097274780273
    8. '(nodes' → logprob: -19.500097274780273
    9. ',node' → logprob: -19.625097274780273
    10. '(N' → logprob: -19.875097274780273

Token 70: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.27099974633893e-05
    2. 's' → logprob: -11.625012397766113
    3. 'count' → logprob: -12.750012397766113
    4. '_counts' → logprob: -15.000012397766113
    5. ')_' → logprob: -15.250012397766113
    6. '_s' → logprob: -16.75001335144043
    7. ' _' → logprob: -17.50001335144043
    8. '_' → logprob: -17.50001335144043
    9. '_cnt' → logprob: -17.75001335144043
    10. '_c' → logprob: -17.75001335144043

Token 71: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.392202976712724e-06
    2. ' )' → logprob: -12.750006675720215
    3. ')' → logprob: -13.750006675720215
    4. ']' → logprob: -14.000006675720215
    5. ')]
' → logprob: -14.125006675720215
    6. '   ' → logprob: -14.875006675720215
    7. '+' → logprob: -16.7500057220459
    8. ' ' → logprob: -16.8750057220459
    9. ')],' → logprob: -17.0000057220459
    10. '))' → logprob: -17.1250057220459

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019291093340143561
    2. ' ' → logprob: -6.25192928314209
    3. '2' → logprob: -15.12692928314209
    4. '   ' → logprob: -15.37692928314209
    5. '```' → logprob: -16.751928329467773
    6. ')' → logprob: -17.126928329467773
    7. '(' → logprob: -17.376928329467773
    8. '0' → logprob: -17.876928329467773
    9. '  ' → logprob: -18.314428329467773
    10. '１' → logprob: -19.251928329467773

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '2' → logprob: -16.250001907348633
    4. '0' → logprob: -18.500001907348633
    5. '```' → logprob: -18.750001907348633
    6. ')' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '１' → logprob: -20.000001907348633
    9. '۱' → logprob: -20.875001907348633
    10. '
' → logprob: -21.312501907348633

Token 74: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0349753201007843
    2. ']' → logprob: -3.534975290298462
    3. ')' → logprob: -5.284975528717041
    4. '])' → logprob: -9.034975051879883
    5. ')])' → logprob: -11.284975051879883
    6. '])]' → logprob: -11.534975051879883
    7. ')],' → logprob: -14.409975051879883
    8. ' ]' → logprob: -15.034975051879883
    9. '`]' → logprob: -15.034975051879883
    10. '   ' → logprob: -15.159975051879883

Token 75: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01697627454996109
    2. '
' → logprob: -4.266976356506348
    3. '

' → logprob: -5.891976356506348
    4. '
' → logprob: -10.891976356506348
    5. '```' → logprob: -11.516976356506348
    6. '\' → logprob: -12.016976356506348
    7. 'ndef' → logprob: -12.766976356506348
    8. 'de' → logprob: -12.891976356506348
    9. ' def' → logprob: -13.141976356506348
    10. 'd' → logprob: -13.641976356506348

Token 76: ' connect' (ID: 4837)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6471666097640991
    2. ' add' → logprob: -0.7721666097640991
    3. 'd' → logprob: -4.522166728973389
    4. 'add' → logprob: -6.147166728973389
    5. '_add' → logprob: -8.14716625213623
    6. ' ' → logprob: -8.27216625213623
    7. ' bfs' → logprob: -8.89716625213623
    8. ' addedge' → logprob: -9.14716625213623
    9. ' dfs' → logprob: -9.14716625213623
    10. '_' → logprob: -9.27216625213623

Token 77: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.04223450645804405
    2. '_' → logprob: -3.917234420776367
    3. '_graph' → logprob: -4.042234420776367
    4. '(' → logprob: -6.542234420776367
    5. '_edges' → logprob: -7.417234420776367
    6. '(node' → logprob: -7.417234420776367
    7. '(nodes' → logprob: -7.792234420776367
    8. '(graph' → logprob: -8.292234420776367
    9. '_(' → logprob: -8.667234420776367
    10. '```' → logprob: -9.417234420776367

Token 78: '(graph' (ID: 51300)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20392249524593353
    2. '(node' → logprob: -1.8289225101470947
    3. '(nodes' → logprob: -4.078922271728516
    4. '(a' → logprob: -5.828922271728516
    5. '(n' → logprob: -5.953922271728516
    6. '(parent' → logprob: -7.578922271728516
    7. '(_' → logprob: -8.953922271728516
    8. '(sender' → logprob: -9.203922271728516
    9. ' (' → logprob: -9.203922271728516
    10. '(Node' → logprob: -9.328922271728516

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.268254896393046e-05
    2. ',node' → logprob: -10.000082969665527
    3. ' ,' → logprob: -10.250082969665527
    4. ',n' → logprob: -14.375082969665527
    5. '(graph' → logprob: -14.750082969665527
    6. '):' → logprob: -14.875082969665527
    7. '(node' → logprob: -15.750082969665527
    8. ',u' → logprob: -15.875082969665527
    9. '   ' → logprob: -16.37508201599121
    10. ',a' → logprob: -16.87508201599121

Token 80: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.13613459467887878
    2. ' u' → logprob: -2.886134624481201
    3. 'a' → logprob: -3.136134624481201
    4. 'from' → logprob: -4.511134624481201
    5. 'node' → logprob: -4.761134624481201
    6. ' node' → logprob: -5.386134624481201
    7. ' a' → logprob: -6.511134624481201
    8. ' from' → logprob: -7.136134624481201
    9. 'frm' → logprob: -7.636134624481201
    10. 'src' → logprob: -7.761134624481201

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017231269157491624
    2. ' ,' → logprob: -8.75017261505127
    3. ',u' → logprob: -11.62517261505127
    4. ')' → logprob: -13.87517261505127
    5. ',n' → logprob: -13.87517261505127
    6. ',
' → logprob: -14.62517261505127
    7. '‌,' → logprob: -14.75017261505127
    8. 'u' → logprob: -15.37517261505127
    9. '),' → logprob: -15.37517261505127
    10. ',v' → logprob: -15.50017261505127

Token 82: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.693148672580719
    2. ' v' → logprob: -0.693148672580719
    3. '	v' → logprob: -14.318148612976074
    4. ' ' → logprob: -15.068148612976074
    5. 'u' → logprob: -16.19314956665039
    6. '```' → logprob: -16.81814956665039
    7. ',v' → logprob: -17.19314956665039
    8. ')v' → logprob: -17.19314956665039
    9. 'graph' → logprob: -17.31814956665039
    10. 'd' → logprob: -17.44314956665039

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5234453678131104
    2. ',' → logprob: -0.8984453678131104
    3. ')' → logprob: -8.773445129394531
    4. '):
' → logprob: -8.898445129394531
    5. ' ):' → logprob: -11.398445129394531
    6. '   ' → logprob: -11.898445129394531
    7. ' ,' → logprob: -12.398445129394531
    8. '),' → logprob: -13.648445129394531
    9. '):
' → logprob: -13.773445129394531
    10. ':' → logprob: -13.898445129394531

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06133566051721573
    2. ' graph' → logprob: -3.561335563659668
    3. 'graph' → logprob: -4.186335563659668
    4. '	graph' → logprob: -4.186335563659668
    5. '(graph' → logprob: -7.686335563659668
    6. '.graph' → logprob: -9.186335563659668
    7. '_graph' → logprob: -10.186335563659668
    8. '```' → logprob: -10.436335563659668
    9. '[' → logprob: -11.436335563659668
    10. 'raph' → logprob: -11.686335563659668

Token 85: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.5375465154647827
    2. ' graph' → logprob: -0.9125465154647827
    3. '	graph' → logprob: -4.787546634674072
    4. '   ' → logprob: -5.162546634674072
    5. '(graph' → logprob: -8.912546157836914
    6. '.graph' → logprob: -9.787546157836914
    7. '_graph' → logprob: -10.162546157836914
    8. '    
' → logprob: -12.162546157836914
    9. 'raph' → logprob: -12.662546157836914
    10. ' 
' → logprob: -12.787546157836914

Token 86: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.750004768371582
    3. '[v' → logprob: -13.250004768371582
    4. '[user' → logprob: -18.125003814697266
    5. '```' → logprob: -18.750003814697266
    6. '[node' → logprob: -19.250003814697266
    7. '   ' → logprob: -19.750003814697266
    8. '[int' → logprob: -20.000003814697266
    9. '][' → logprob: -20.250003814697266
    10. ')[' → logprob: -20.250003814697266

Token 87: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.2352385965641588e-05
    2. ']' → logprob: -12.250012397766113
    3. '.' → logprob: -12.625012397766113
    4. '.append' → logprob: -12.875012397766113
    5. ' ].' → logprob: -14.125012397766113
    6. ').' → logprob: -14.250012397766113
    7. '[u' → logprob: -17.000011444091797
    8. '[' → logprob: -17.000011444091797
    9. 'append' → logprob: -17.000011444091797
    10. '   ' → logprob: -17.500011444091797

Token 88: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. ' append' → logprob: -13.875000953674316
    3. 'appen' → logprob: -16.250001907348633
    4. 'push' → logprob: -16.375001907348633
    5. '.append' → logprob: -17.125001907348633
    6. 'app' → logprob: -18.125001907348633
    7. 'add' → logprob: -18.875001907348633
    8. 'Append' → logprob: -19.000001907348633
    9. '	append' → logprob: -19.000001907348633
    10. '```' → logprob: -19.250001907348633

Token 89: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0019343505846336484
    2. '((' → logprob: -6.50193452835083
    3. '(' → logprob: -7.75193452835083
    4. 'v' → logprob: -13.251934051513672
    5. '(
' → logprob: -15.876934051513672
    6. '(u' → logprob: -17.126934051513672
    7. ' (' → logprob: -17.501934051513672
    8. '([' → logprob: -18.501934051513672
    9. '(('' → logprob: -18.751934051513672
    10. ')v' → logprob: -18.751934051513672

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.500108141452074e-05
    2. ' )' → logprob: -10.500035285949707
    3. ')
' → logprob: -12.250035285949707
    4. ',' → logprob: -13.500035285949707
    5. '),' → logprob: -15.000035285949707
    6. ',)' → logprob: -16.00003433227539
    7. '   ' → logprob: -16.62503433227539
    8. ')return' → logprob: -16.62503433227539
    9. ')#' → logprob: -16.62503433227539
    10. ')

' → logprob: -16.75003433227539

Token 91: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.1048143282532692
    2. ' graph' → logprob: -2.354814291000366
    3. '	graph' → logprob: -5.854814529418945
    4. '(graph' → logprob: -7.354814529418945
    5. '   ' → logprob: -7.604814529418945
    6. '
' → logprob: -8.479814529418945
    7. '_graph' → logprob: -8.979814529418945
    8. '.graph' → logprob: -9.479814529418945
    9. ' ' → logprob: -10.229814529418945
    10. 'raph' → logprob: -10.604814529418945

Token 93: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0009359975229017437
    2. '[u' → logprob: -7.500936031341553
    3. '[' → logprob: -7.875936031341553
    4. 'v' → logprob: -13.625935554504395
    5. '[s' → logprob: -13.625935554504395
    6. '```' → logprob: -16.00093650817871
    7. '[V' → logprob: -16.25093650817871
    8. '	v' → logprob: -16.37593650817871
    9. '][' → logprob: -16.87593650817871
    10. '[z' → logprob: -16.87593650817871

Token 94: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9349915981292725
    2. ')' → logprob: -1.0599915981292725
    3. '].' → logprob: -1.6849915981292725
    4. ').' → logprob: -2.9349915981292725
    5. '])' → logprob: -4.309991836547852
    6. '<|end|>' → logprob: -5.184991836547852
    7. ')]' → logprob: -5.809991836547852
    8. '][]' → logprob: -9.809991836547852
    9. ']()' → logprob: -10.059991836547852
    10. ')])' → logprob: -10.309991836547852

Token 95: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. ' append' → logprob: -14.000000953674316
    3. 'appen' → logprob: -16.000001907348633
    4. '.append' → logprob: -16.125001907348633
    5. '	append' → logprob: -16.875001907348633
    6. 'app' → logprob: -17.250001907348633
    7. '_append' → logprob: -20.000001907348633
    8. '```' → logprob: -20.250001907348633
    9. 'u' → logprob: -20.750001907348633
    10. 'add' → logprob: -21.000001907348633

Token 96: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.2519603967666626
    2. '(' → logprob: -1.5019603967666626
    3. '(
' → logprob: -11.501960754394531
    4. 'u' → logprob: -11.626960754394531
    5. '('' → logprob: -12.251960754394531
    6. ' (' → logprob: -12.876960754394531
    7. '(v' → logprob: -13.126960754394531
    8. ')' → logprob: -14.126960754394531
    9. '(

' → logprob: -14.501960754394531
    10. '	u' → logprob: -15.126960754394531

Token 97: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.576873758807778e-05
    2. ')
' → logprob: -9.500075340270996
    3. ' )' → logprob: -14.625075340270996
    4. ')

' → logprob: -15.625075340270996
    5. '   ' → logprob: -16.125076293945312
    6. ')return' → logprob: -16.750076293945312
    7. '<|end|>' → logprob: -16.875076293945312
    8. '),' → logprob: -17.625076293945312
    9. '))' → logprob: -18.000076293945312
    10. '```' → logprob: -18.125076293945312

Token 98: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01436387374997139
    2. '
' → logprob: -4.264363765716553
    3. '

' → logprob: -8.764364242553711
    4. '```' → logprob: -11.139364242553711
    5. '\' → logprob: -11.264364242553711
    6. '
' → logprob: -12.014364242553711
    7. '#' → logprob: -12.889364242553711
    8. '<|end|>' → logprob: -13.514364242553711
    9. '  
' → logprob: -13.889364242553711
    10. ' def' → logprob: -14.139364242553711

Token 99: ' initialize' (ID: 18400)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6256879568099976
    2. 'd' → logprob: -0.8756879568099976
    3. ' bfs' → logprob: -3.750688076019287
    4. 'b' → logprob: -4.375688076019287
    5. ' shortest' → logprob: -5.750688076019287
    6. 'dfs' → logprob: -5.875688076019287
    7. ' dfs' → logprob: -5.875688076019287
    8. ' prim' → logprob: -6.625688076019287
    9. ' find' → logprob: -7.625688076019287
    10. 'prim' → logprob: -7.750688076019287

Token 100: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.6415636539459229
    2. '(graph' → logprob: -1.8915636539459229
    3. '(' → logprob: -2.266563653945923
    4. '_distance' → logprob: -2.641563653945923
    5. '_graph' → logprob: -2.891563653945923
    6. '_' → logprob: -3.016563653945923
    7. '_heap' → logprob: -4.391563415527344
    8. '(dist' → logprob: -4.891563415527344
    9. '(heap' → logprob: -5.141563415527344
    10. '_d' → logprob: -6.016563415527344

Token 101: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.12695835530757904
    2. 'ance' → logprob: -2.1269583702087402
    3. '```' → logprob: -11.501957893371582
    4. '(graph' → logprob: -11.626957893371582
    5. '(' → logprob: -12.876957893371582
    6. '()' → logprob: -13.376957893371582
    7. 'rance' → logprob: -13.626957893371582
    8. '_graph' → logprob: -14.251957893371582
    9. 'ANCES' → logprob: -14.376957893371582
    10. 'r' → logprob: -14.376957893371582

Token 102: '(size' (ID: 15192)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.12466522306203842
    2. '(graph' → logprob: -2.4996652603149414
    3. '(' → logprob: -3.3746652603149414
    4. '(n' → logprob: -8.124665260314941
    5. '(dist' → logprob: -8.874665260314941
    6. '():' → logprob: -8.874665260314941
    7. '(size' → logprob: -9.499665260314941
    8. ' (' → logprob: -10.124665260314941
    9. '(nodes' → logprob: -10.249665260314941
    10. '(num' → logprob: -10.374665260314941

Token 103: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014678422594442964
    2. '):
' → logprob: -7.001467704772949
    3. ' ):' → logprob: -7.876467704772949
    4. ',' → logprob: -9.25146770477295
    5. ')' → logprob: -9.62646770477295
    6. '():' → logprob: -12.37646770477295
    7. '):
' → logprob: -12.62646770477295
    8. '(size' → logprob: -13.12646770477295
    9. ',size' → logprob: -13.87646770477295
    10. '   ' → logprob: -14.25146770477295

Token 104: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.20645156502723694
    2. 'inf' → logprob: -2.581451654434204
    3. ' inf' → logprob: -3.331451654434204
    4. 'value' → logprob: -3.831451654434204
    5. ' INF' → logprob: -3.956451654434204
    6. 'INF' → logprob: -4.456451416015625
    7. ' default' → logprob: -4.581451416015625
    8. ' initial' → logprob: -4.831451416015625
    9. 'default' → logprob: -6.581451416015625
    10. 'initial' → logprob: -6.706451416015625

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0055652824230492115
    2. '=' → logprob: -5.880565166473389
    3. '):
' → logprob: -6.005565166473389
    4. ' ):' → logprob: -8.380565643310547
    5. '(value' → logprob: -11.005565643310547
    6. ')' → logprob: -11.130565643310547
    7. '(' → logprob: -11.130565643310547
    8. ',' → logprob: -12.255565643310547
    9. ' =' → logprob: -13.005565643310547
    10. '):
' → logprob: -13.505565643310547

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24943505227565765
    2. ' [' → logprob: -1.6244350671768188
    3. '[size' → logprob: -4.124434947967529
    4. '[value' → logprob: -5.499434947967529
    5. '[' → logprob: -5.749434947967529
    6. '=[' → logprob: -9.624435424804688
    7. ' =' → logprob: -9.749435424804688
    8. '(size' → logprob: -10.624435424804688
    9. '[node' → logprob: -11.124435424804688
    10. '[
' → logprob: -11.374435424804688

Token 107: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8428774476051331
    2. '   ' → logprob: -0.9678774476051331
    3. '[value' → logprob: -1.8428773880004883
    4. '[' → logprob: -3.9678773880004883
    5. 'return' (adapté à ' return') → logprob: -5.092877388000488
    6. ' return' → logprob: -5.217877388000488
    7. '[size' → logprob: -7.842877388000488
    8. '[val' → logprob: -8.967877388000488
    9. '[
' → logprob: -9.967877388000488
    10. '[node' → logprob: -10.217877388000488

Token 108: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2620847821235657
    2. '[value' → logprob: -1.512084722518921
    3. '[' → logprob: -4.6370849609375
    4. '[node' → logprob: -8.8870849609375
    5. '[val' → logprob: -9.0120849609375
    6. '[size' → logprob: -9.8870849609375
    7. '[int' → logprob: -10.7620849609375
    8. '[name' → logprob: -11.5120849609375
    9. '[number' → logprob: -12.0120849609375
    10. '   ' → logprob: -12.0120849609375

Token 109: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.00030733743915334344
    2. 'float' → logprob: -8.250307083129883
    3. ' value' → logprob: -10.125307083129883
    4. '   ' → logprob: -12.375307083129883
    5. '"value' → logprob: -15.000307083129883
    6. '(value' → logprob: -15.375307083129883
    7. ')value' → logprob: -15.500307083129883
    8. '	value' → logprob: -16.000307083129883
    9. ''value' → logprob: -16.000307083129883
    10. 'int' → logprob: -16.250307083129883

Token 110: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01666869968175888
    2. ' for' → logprob: -4.391668796539307
    3. ' ]' → logprob: -5.641668796539307
    4. ']*' → logprob: -7.766668796539307
    5. 'for' → logprob: -9.141668319702148
    6. ']*(' → logprob: -9.641668319702148
    7. '   ' → logprob: -12.891668319702148
    8. ' ' → logprob: -13.391668319702148
    9. ')' → logprob: -14.391668319702148
    10. '	for' → logprob: -14.516668319702148

Token 111: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6958821415901184
    2. ' *' → logprob: -0.6958821415901184
    3. ' ' → logprob: -6.320882320404053
    4. '<|end|>' → logprob: -7.445882320404053
    5. ')' → logprob: -9.570881843566895
    6. '[size' → logprob: -10.070881843566895
    7. '(size' → logprob: -10.195881843566895
    8. '*(' → logprob: -10.320881843566895
    9. ' for' → logprob: -10.445881843566895
    10. ']' → logprob: -10.445881843566895

Token 112: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.052473656833171844
    2. 'size' → logprob: -3.552473545074463
    3. '(size' → logprob: -3.802473545074463
    4. ' (' → logprob: -8.802474021911621
    5. '(' → logprob: -14.177474021911621
    6. '<size' → logprob: -16.427473068237305
    7. '	size' → logprob: -16.427473068237305
    8. ' ' → logprob: -16.552473068237305
    9. '_size' → logprob: -16.927473068237305
    10. ',size' → logprob: -16.927473068237305

Token 113: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.056537896394729614
    2. '
' → logprob: -3.5565378665924072
    3. '<|end|>' → logprob: -3.8065378665924072
    4. '

' → logprob: -6.556538105010986
    5. '```' → logprob: -6.681538105010986
    6. '<|end|>' → logprob: -7.556538105010986
    7. '\' → logprob: -8.556537628173828
    8. '_' → logprob: -8.681537628173828
    9. '#' → logprob: -8.931537628173828
    10. '0' → logprob: -9.556537628173828

Token 115: ' set' (ID: 920)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2060072273015976
    2. 'd' → logprob: -1.7060072422027588
    3. ' find' → logprob: -6.45600700378418
    4. ' main' → logprob: -7.45600700378418
    5. ' shortest' → logprob: -8.08100700378418
    6. ' run' → logprob: -8.45600700378418
    7. ' bfs' → logprob: -8.58100700378418
    8. ' ' → logprob: -8.70600700378418
    9. 'find' → logprob: -8.70600700378418
    10. 'main' → logprob: -8.83100700378418

Token 116: '_start' (ID: 10949)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.33166739344596863
    2. '_distance' → logprob: -1.456667423248291
    3. '_' → logprob: -3.456667423248291
    4. 'dist' → logprob: -4.706667423248291
    5. '_start' → logprob: -6.706667423248291
    6. '_parent' → logprob: -6.831667423248291
    7. '_par' → logprob: -7.331667423248291
    8. '_max' → logprob: -7.331667423248291
    9. '_initial' → logprob: -7.581667423248291
    10. '_up' → logprob: -7.831667423248291

Token 117: '_distance' (ID: 45537)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.02807285264134407
    2. '_distance' → logprob: -3.6530728340148926
    3. 'ing' → logprob: -7.278072834014893
    4. '_node' → logprob: -8.02807331085205
    5. '_' → logprob: -8.52807331085205
    6. 'dist' → logprob: -8.90307331085205
    7. '_point' → logprob: -9.27807331085205
    8. '(dist' → logprob: -9.65307331085205
    9. '_start' → logprob: -9.90307331085205
    10. '_positions' → logprob: -10.27807331085205

Token 118: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.008018963038921356
    2. '(distance' → logprob: -4.883018970489502
    3. '(' → logprob: -7.883018970489502
    4. '(start' → logprob: -11.008018493652344
    5. '(size' → logprob: -12.383018493652344
    6. ' (' → logprob: -12.508018493652344
    7. 'dist' → logprob: -12.633018493652344
    8. '(dis' → logprob: -12.758018493652344
    9. ' distances' → logprob: -13.133018493652344
    10. '(d' → logprob: -14.758018493652344

Token 119: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -6.511406809295295e-06
    2. 'ance' → logprob: -12.250006675720215
    3. '[' → logprob: -13.500006675720215
    4. '   ' → logprob: -16.0000057220459
    5. 'ANCES' → logprob: -16.7500057220459
    6. '[start' → logprob: -18.2500057220459
    7. '
' → logprob: -18.2500057220459
    8. 'anc' → logprob: -18.2500057220459
    9. '```' → logprob: -18.7500057220459
    10. ' ances' → logprob: -19.0000057220459

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00474007660523057
    2. '[' → logprob: -5.879740238189697
    3. '(' → logprob: -7.504740238189697
    4. '(dist' → logprob: -7.629740238189697
    5. ',start' → logprob: -8.004739761352539
    6. '(start' → logprob: -8.754739761352539
    7. ' ,' → logprob: -9.129739761352539
    8. ')' → logprob: -9.254739761352539
    9. '[start' → logprob: -9.629739761352539
    10. 'dist' → logprob: -10.754739761352539

Token 121: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.36640721559524536
    2. 'index' → logprob: -1.3664071559906006
    3. ' start' → logprob: -3.2414071559906006
    4. ' index' → logprob: -4.61640739440918
    5. 'node' → logprob: -6.24140739440918
    6. ' node' → logprob: -7.36640739440918
    7. '0' → logprob: -9.86640739440918
    8. 'idx' → logprob: -9.86640739440918
    9. ' ' → logprob: -10.74140739440918
    10. ' idx' → logprob: -10.86640739440918

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28784090280532837
    2. ',' → logprob: -2.0378408432006836
    3. '):
' → logprob: -2.9128408432006836
    4. '_node' → logprob: -3.9128408432006836
    5. '_index' → logprob: -3.9128408432006836
    6. ']:' → logprob: -4.412840843200684
    7. '_' → logprob: -5.037840843200684
    8. '_idx' → logprob: -6.287840843200684
    9. ']' → logprob: -6.537840843200684
    10. ')' → logprob: -6.662840843200684

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0750858411192894
    2. 'dist' → logprob: -2.9500858783721924
    3. ' distances' → logprob: -4.325085639953613
    4. ' dist' → logprob: -5.825085639953613
    5. '	dist' → logprob: -6.700085639953613
    6. '[start' → logprob: -7.325085639953613
    7. '    
' → logprob: -7.825085639953613
    8. '_dist' → logprob: -7.950085639953613
    9. '
' → logprob: -8.200085639953613
    10. '[' → logprob: -8.200085639953613

Token 124: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00026991849881596863
    2. '   ' → logprob: -8.625269889831543
    3. ' distances' → logprob: -9.375269889831543
    4. '	dist' → logprob: -13.000269889831543
    5. ' dist' → logprob: -13.750269889831543
    6. '_dist' → logprob: -14.125269889831543
    7. '(dist' → logprob: -14.750269889831543
    8. '.dist' → logprob: -14.875269889831543
    9. '```' → logprob: -14.875269889831543
    10. '
' → logprob: -16.00027084350586

Token 125: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -1.4974866644479334e-05
    2. '[' → logprob: -11.125015258789062
    3. '[end' → logprob: -16.375015258789062
    4. 'start' → logprob: -17.500015258789062
    5. '=start' → logprob: -18.125015258789062
    6. ' [' → logprob: -18.375015258789062
    7. '[
' → logprob: -18.500015258789062
    8. '[s' → logprob: -18.500015258789062
    9. '```' → logprob: -18.750015258789062
    10. '\[' → logprob: -19.375015258789062

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00044830769184045494
    2. ' ]' → logprob: -7.875448226928711
    3. ']=' → logprob: -9.625448226928711
    4. '=' → logprob: -14.000448226928711
    5. '[' → logprob: -14.250448226928711
    6. ']
' → logprob: -16.00044822692871
    7. ')' → logprob: -16.00044822692871
    8. '-' → logprob: -16.37544822692871
    9. '`]' → logprob: -16.62544822692871
    10. ']==' → logprob: -16.87544822692871

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006723540835082531
    2. ' =' → logprob: -5.006723403930664
    3. '[' → logprob: -12.006723403930664
    4. ']' → logprob: -13.881723403930664
    5. ']=' → logprob: -14.756723403930664
    6. '=

' → logprob: -15.256723403930664
    7. ')' → logprob: -16.006723403930664
    8. '=
' → logprob: -16.381723403930664
    9. ')=' → logprob: -16.506723403930664
    10. '.=' → logprob: -16.881723403930664

Token 128: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.375
    4. '۰' → logprob: -20.375
    5. ' ' → logprob: -21.625
    6. '```' → logprob: -22.0
    7. '  ' → logprob: -22.375
    8. '０' → logprob: -22.625
    9. '00' → logprob: -22.875
    10. '1' → logprob: -23.0

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -18.5
    4. '1' → logprob: -19.0
    5. '```' → logprob: -19.0
    6. '-' → logprob: -19.5
    7. '０' → logprob: -20.1875
    8. '   ' → logprob: -20.25
    9. '00' → logprob: -20.75
    10. '000' → logprob: -20.8125

Token 130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003681313246488571
    2. '
' → logprob: -5.628681182861328
    3. '```' → logprob: -10.378681182861328
    4. '<|end|>' → logprob: -10.628681182861328
    5. '#' → logprob: -12.003681182861328
    6. '

' → logprob: -12.128681182861328
    7. '\' → logprob: -12.628681182861328
    8. 'de' → logprob: -13.253681182861328
    9. ' def' → logprob: -13.503681182861328
    10. '
' → logprob: -13.628681182861328

Token 132: ' create' (ID: 2501)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2714056372642517
    2. 'd' → logprob: -1.6464056968688965
    3. 'def' → logprob: -3.2714056968688965
    4. ' def' → logprob: -6.0214056968688965
    5. ' find' → logprob: -6.5214056968688965
    6. ' add' → logprob: -7.8964056968688965
    7. ' shortest' → logprob: -8.146405220031738
    8. ' main' → logprob: -8.271405220031738
    9. '```' → logprob: -8.396405220031738
    10. 'find' → logprob: -8.521405220031738

Token 133: '_priority' (ID: 93448)
  Prédit: '_priority'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_priority' → logprob: -0.232645183801651
    2. '_p' → logprob: -2.107645273208618
    3. '_heap' → logprob: -3.232645273208618
    4. '_min' → logprob: -3.482645273208618
    5. '_' → logprob: -4.982645034790039
    6. '_queue' → logprob: -4.982645034790039
    7. 'priority' → logprob: -6.982645034790039
    8. '_prior' → logprob: -7.732645034790039
    9. '```' → logprob: -8.857645034790039
    10. '_empty' → logprob: -9.232645034790039

Token 134: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.005921570118516684
    2. '_' → logprob: -5.880921363830566
    3. ' queue' → logprob: -6.255921363830566
    4. 'queue' → logprob: -7.130921363830566
    5. ' _' → logprob: -8.380921363830566
    6. ' ' → logprob: -10.005921363830566
    7. '_heap' → logprob: -10.255921363830566
    8. '_list' → logprob: -10.630921363830566
    9. '(queue' → logprob: -11.005921363830566
    10. '_q' → logprob: -11.630921363830566

Token 135: '(start' (ID: 20008)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000418040988733992
    2. ' ():' → logprob: -8.250417709350586
    3. '():
' → logprob: -9.125417709350586
    4. '()' → logprob: -10.000417709350586
    5. '(' → logprob: -13.375417709350586
    6. ' ()' → logprob: -14.500417709350586
    7. ':' → logprob: -15.375417709350586
    8. '():

' → logprob: -15.625417709350586
    9. '():
' → logprob: -16.750417709350586
    10. '[]' → logprob: -18.000417709350586

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09037193655967712
    2. '):
' → logprob: -2.46537184715271
    3. ' ):' → logprob: -7.590372085571289
    4. ')' → logprob: -7.715372085571289
    5. ',' → logprob: -8.840372085571289
    6. '=[]' → logprob: -9.465372085571289
    7. '):
' → logprob: -9.590372085571289
    8. '=' → logprob: -9.715372085571289
    9. ' ):
' → logprob: -9.965372085571289
    10. '_list' → logprob: -10.715372085571289

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.268563449382782
    2. '[' → logprob: -1.5185635089874268
    3. '[(' → logprob: -4.893563270568848
    4. ' [' → logprob: -5.018563270568848
    5. '[
' → logprob: -7.143563270568848
    6. '[start' → logprob: -7.393563270568848
    7. ' [(' → logprob: -8.518563270568848
    8. '[]' → logprob: -8.643563270568848
    9. 'return' → logprob: -9.768563270568848
    10. '[data' → logprob: -9.893563270568848

Token 138: ' return' (ID: 622)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.005159631837159395
    2. '[' → logprob: -5.880159854888916
    3. ' [(' → logprob: -6.505159854888916
    4. 'return' (adapté à ' return') → logprob: -8.130159378051758
    5. '[]' → logprob: -8.255159378051758
    6. '   ' → logprob: -8.505159378051758
    7. ' [' → logprob: -10.380159378051758
    8. ' return' → logprob: -11.005159378051758
    9. 'heap' → logprob: -11.130159378051758
    10. '[start' → logprob: -11.380159378051758

Token 139: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0007150543970055878
    2. ' [(' → logprob: -7.250715255737305
    3. '[' → logprob: -12.500715255737305
    4. '[]' → logprob: -13.875715255737305
    5. '[((' → logprob: -15.250715255737305
    6. '[[' → logprob: -16.000715255737305
    7. '([(' → logprob: -16.375715255737305
    8. ' [' → logprob: -16.625715255737305
    9. ' ' → logprob: -18.000715255737305
    10. '[
' → logprob: -18.250715255737305

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.138441237155348e-05
    2. ' ' → logprob: -9.375091552734375
    3. 'start' → logprob: -12.500091552734375
    4. '(' → logprob: -14.000091552734375
    5. ')' → logprob: -14.125091552734375
    6. '   ' → logprob: -14.625091552734375
    7. '  ' → logprob: -16.000091552734375
    8. ',' → logprob: -16.125091552734375
    9. '```' → logprob: -16.125091552734375
    10. '(start' → logprob: -16.437591552734375

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003930192324332893
    2. ',start' → logprob: -7.875392913818359
    3. ' ,' → logprob: -12.00039291381836
    4. ',
' → logprob: -12.25039291381836
    5. '[start' → logprob: -14.00039291381836
    6. 'start' → logprob: -14.75039291381836
    7. ',

' → logprob: -15.12539291381836
    8. '(start' → logprob: -16.25039291381836
    9. '```' → logprob: -16.37539291381836
    10. '‌,' → logprob: -16.75039291381836

Token 142: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20141461491584778
    2. ' start' → logprob: -1.7014145851135254
    3. '[start' → logprob: -14.576415061950684
    4. ' ' → logprob: -15.076415061950684
    5. '```' → logprob: -15.951415061950684
    6. '
' → logprob: -16.576414108276367
    7. '0' → logprob: -16.701414108276367
    8. '	start' → logprob: -16.701414108276367
    9. '(start' → logprob: -16.826414108276367
    10. '=start' → logprob: -17.076414108276367

Token 143: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.889424836728722e-05
    2. ')' → logprob: -9.375099182128906
    3. ' )' → logprob: -11.750099182128906
    4. ')]
' → logprob: -12.500099182128906
    5. ']' → logprob: -13.625099182128906
    6. '),' → logprob: -14.750099182128906
    7. ',' → logprob: -16.000099182128906
    8. ')]

' → logprob: -16.125099182128906
    9. ')][' → logprob: -16.250099182128906
    10. '')]' → logprob: -16.500099182128906

Token 144: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.7385154428193346e-05
    2. '<|end|>' → logprob: -10.75003719329834
    3. '```' → logprob: -11.50003719329834
    4. ')' → logprob: -12.50003719329834
    5. ']' → logprob: -14.50003719329834
    6. ' def' → logprob: -14.87503719329834
    7. '
' → logprob: -15.12503719329834
    8. 'import' → logprob: -15.50003719329834
    9. '#' → logprob: -15.87503719329834
    10. ':def' → logprob: -16.000038146972656

Token 145: ' should' (ID: 1757)
  Prédit: ' pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pop' → logprob: -1.1188526153564453
    2. ' d' → logprob: -1.3688526153564453
    3. 'pop' → logprob: -1.6188526153564453
    4. ' push' → logprob: -2.1188526153564453
    5. 'push' → logprob: -3.8688526153564453
    6. ' process' → logprob: -3.9938526153564453
    7. 'd' → logprob: -4.243852615356445
    8. 'process' → logprob: -4.493852615356445
    9. ' extract' → logprob: -4.493852615356445
    10. ' update' → logprob: -5.618852615356445

Token 146: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.34960535168647766
    2. '_push' → logprob: -1.8496053218841553
    3. '_pop' → logprob: -2.4746053218841553
    4. '_stop' → logprob: -3.8496053218841553
    5. '_process' → logprob: -4.474605560302734
    6. '_update' → logprob: -4.724605560302734
    7. '_expand' → logprob: -5.724605560302734
    8. '_pro' → logprob: -6.224605560302734
    9. '_visit' → logprob: -6.224605560302734
    10. '_add' → logprob: -6.974605560302734

Token 147: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.587398111820221
    2. '(distance' → logprob: -1.3373980522155762
    3. '(' → logprob: -2.837398052215576
    4. '(priority' → logprob: -2.962398052215576
    5. '(queue' → logprob: -3.712398052215576
    6. '(current' → logprob: -3.837398052215576
    7. '(heap' → logprob: -4.337398052215576
    8. '():' → logprob: -5.712398052215576
    9. ' (' → logprob: -6.087398052215576
    10. '(p' → logprob: -6.212398052215576

Token 148: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.002370297210291028
    2. 'ance' → logprob: -6.252370357513428
    3. '   ' → logprob: -8.87736988067627
    4. '[' → logprob: -9.12736988067627
    5. ')' → logprob: -9.50236988067627
    6. ',' → logprob: -10.75236988067627
    7. 'e' → logprob: -11.12736988067627
    8. '>' → logprob: -11.87736988067627
    9. ']' → logprob: -12.12736988067627
    10. 'anc' → logprob: -12.37736988067627

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002465582510922104
    2. ' ,' → logprob: -9.37524700164795
    3. ',u' → logprob: -10.50024700164795
    4. ',current' → logprob: -10.50024700164795
    5. '[node' → logprob: -10.62524700164795
    6. '[u' → logprob: -10.75024700164795
    7. '[current' → logprob: -10.75024700164795
    8. ',node' → logprob: -11.00024700164795
    9. 'current' → logprob: -12.12524700164795
    10. '[' → logprob: -12.62524700164795

Token 150: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.512932300567627
    2. ' current' → logprob: -1.637932300567627
    3. 'node' → logprob: -2.262932300567627
    4. ' node' → logprob: -3.012932300567627
    5. 'u' → logprob: -3.512932300567627
    6. 'visited' → logprob: -4.887932300567627
    7. ' u' → logprob: -5.387932300567627
    8. 'index' → logprob: -5.512932300567627
    9. 'neighbor' → logprob: -6.262932300567627
    10. 'queue' → logprob: -6.887932300567627

Token 151: ',' (ID: 11)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.8199100494384766
    2. ',' → logprob: -1.6949100494384766
    3. '):' → logprob: -2.1949100494384766
    4. '_dist' → logprob: -2.3199100494384766
    5. '_node' → logprob: -2.5699100494384766
    6. '[' → logprob: -3.5699100494384766
    7. ')' → logprob: -3.8199100494384766
    8. '):
' → logprob: -4.194910049438477
    9. '_cost' → logprob: -4.694910049438477
    10. ')>' → logprob: -5.444910049438477

Token 152: ' dist' (ID: 3601)
  Prédit: ' neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.8518359065055847
    2. 'neighbor' → logprob: -1.6018359661102295
    3. ' next' → logprob: -2.4768359661102295
    4. ' new' → logprob: -2.6018359661102295
    5. ' visited' → logprob: -3.2268359661102295
    6. 'visited' → logprob: -3.4768359661102295
    7. ' neighbors' → logprob: -3.6018359661102295
    8. 'next' → logprob: -3.7268359661102295
    9. ' distances' → logprob: -3.9768359661102295
    10. ' distance' → logprob: -4.35183572769165

Token 153: '):
' (ID: 1883)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.5803552269935608
    2. '[current' → logprob: -1.580355167388916
    3. ')' → logprob: -1.705355167388916
    4. ',' → logprob: -4.080355167388916
    5. '):
' → logprob: -4.080355167388916
    6. 'current' → logprob: -5.330355167388916
    7. ']' → logprob: -5.705355167388916
    8. '[cur' → logprob: -5.955355167388916
    9. '   ' → logprob: -6.830355167388916
    10. '[u' → logprob: -6.955355167388916

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19259501993656158
    2. ':' → logprob: -2.9425950050354004
    3. '[' → logprob: -3.5675950050354004
    4. ' >' → logprob: -3.8175950050354004
    5. ' and' → logprob: -3.9425950050354004
    6. '>' → logprob: -4.8175950050354
    7. ' >=' → logprob: -4.8175950050354
    8. ' <=' → logprob: -4.8175950050354
    9. ' return' → logprob: -5.4425950050354
    10. ' if' → logprob: -5.5675950050354

Token 155: ' return' (ID: 622)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5968700051307678
    2. ' return' → logprob: -1.971869945526123
    3. 'return' (adapté à ' return') → logprob: -2.096869945526123
    4. ' dist' → logprob: -2.346869945526123
    5. '   ' → logprob: -2.471869945526123
    6. ' current' → logprob: -6.221869945526123
    7. ' if' → logprob: -6.846869945526123
    8. 'current' → logprob: -6.846869945526123
    9. ' and' → logprob: -7.221869945526123
    10. '[' → logprob: -7.346869945526123

Token 156: ' distances' (ID: 48294)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7173396348953247
    2. 'dist' → logprob: -0.7173396348953247
    3. ' distances' → logprob: -3.842339515686035
    4. '   ' → logprob: -6.592339515686035
    5. ' current' → logprob: -7.592339515686035
    6. '(dist' → logprob: -8.467339515686035
    7. '	dist' → logprob: -8.592339515686035
    8. 'current' → logprob: -9.592339515686035
    9. 'distance' → logprob: -10.717339515686035
    10. '_dist' → logprob: -11.529839515686035

Token 157: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.00015109812375158072
    2. 'current' → logprob: -9.125150680541992
    3. '[' → logprob: -10.375150680541992
    4. '[cur' → logprob: -12.000150680541992
    5. ' current' → logprob: -12.875150680541992
    6. '[curr' → logprob: -13.750150680541992
    7. '[c' → logprob: -14.500150680541992
    8. '```' → logprob: -15.250150680541992
    9. ' [' → logprob: -15.625150680541992
    10. '[
' → logprob: -16.875150680541992

Token 158: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.02133047580718994
    2. ' >' → logprob: -4.3963303565979
    3. ']' → logprob: -5.0213303565979
    4. ']>' → logprob: -6.2713303565979
    5. '[' → logprob: -8.396330833435059
    6. '>=' → logprob: -11.271330833435059
    7. ' ]' → logprob: -11.771330833435059
    8. '>[' → logprob: -12.271330833435059
    9. '```' → logprob: -12.521330833435059
    10. ']>=' → logprob: -12.521330833435059

Token 159: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1427169144153595
    2. ' >' → logprob: -2.017716884613037
    3. ' ' → logprob: -11.267717361450195
    4. '>=' → logprob: -11.892717361450195
    5. '[' → logprob: -13.267717361450195
    6. '<' → logprob: -13.642717361450195
    7. '">' → logprob: -13.642717361450195
    8. '<=' → logprob: -13.705217361450195
    9. '()>' → logprob: -13.830217361450195
    10. ')>' → logprob: -13.892717361450195

Token 160: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10052873194217682
    2. ' dist' → logprob: -2.3505287170410156
    3. '=' → logprob: -8.350528717041016
    4. '0' → logprob: -9.600528717041016
    5. '	dist' → logprob: -11.975528717041016
    6. ' ' → logprob: -12.350528717041016
    7. 'd' → logprob: -13.725528717041016
    8. ' =' → logprob: -13.850528717041016
    9. '(dist' → logprob: -14.225528717041016
    10. 'inf' → logprob: -14.600528717041016

Token 161: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0394449420273304
    2. '<|end|>' → logprob: -3.289444923400879
    3. 'and' → logprob: -8.164444923400879
    4. '<|end|>' → logprob: -8.414444923400879
    5. ':' → logprob: -8.789444923400879
    6. '#' → logprob: -8.789444923400879
    7. ' and' → logprob: -8.914444923400879
    8. '```' → logprob: -9.664444923400879
    9. 'False' → logprob: -9.914444923400879
    10. '
' → logprob: -9.914444923400879

Token 162: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0699872374534607
    2. 'def' → logprob: -2.8199872970581055
    3. '<|end|>' → logprob: -5.5699872970581055
    4. '[' → logprob: -7.0699872970581055
    5. ':return' → logprob: -7.1949872970581055
    6. ')' → logprob: -7.1949872970581055
    7. ':def' → logprob: -7.9449872970581055
    8. '#' → logprob: -8.944987297058105
    9. '.' → logprob: -8.944987297058105
    10. '<|end|>' → logprob: -9.194987297058105

Token 163: ' calculate' (ID: 17950)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08566485345363617
    2. 'd' → logprob: -2.835664749145508
    3. 'update' → logprob: -4.835664749145508
    4. ' d' → logprob: -5.335664749145508
    5. ' def' → logprob: -5.710664749145508
    6. 'process' → logprob: -6.210664749145508
    7. 'run' → logprob: -6.835664749145508
    8. '
' → logprob: -7.585664749145508
    9. ' update' → logprob: -7.585664749145508
    10. 'calculate' → logprob: -7.710664749145508

Token 164: '_next' (ID: 25436)
  Prédit: '_short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -0.8430546522140503
    2. '_next' → logprob: -1.8430546522140503
    3. '_path' → logprob: -1.9680546522140503
    4. '_dist' → logprob: -2.46805477142334
    5. '_distance' → logprob: -2.71805477142334
    6. '_new' → logprob: -3.21805477142334
    7. '_min' → logprob: -3.71805477142334
    8. '_paths' → logprob: -4.34305477142334
    9. '_total' → logprob: -4.96805477142334
    10. '_d' → logprob: -5.46805477142334

Token 165: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.13908760249614716
    2. '_dist' → logprob: -2.764087677001953
    3. '_step' → logprob: -3.889087677001953
    4. '_node' → logprob: -4.139087677001953
    5. '_token' → logprob: -4.264087677001953
    6. '_' → logprob: -5.264087677001953
    7. '_cost' → logprob: -6.389087677001953
    8. '_neighbors' → logprob: -6.389087677001953
    9. '_edge' → logprob: -6.514087677001953
    10. '_nodes' → logprob: -6.639087677001953

Token 166: '(dist' (ID: 78981)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25092217326164246
    2. '(current' → logprob: -1.6259222030639648
    3. '(dist' → logprob: -4.875922203063965
    4. ' (' → logprob: -5.250922203063965
    5. '(distance' → logprob: -5.250922203063965
    6. '(prev' → logprob: -6.125922203063965
    7. '(node' → logprob: -6.500922203063965
    8. '(previous' → logprob: -7.375922203063965
    9. '(parent' → logprob: -7.875922203063965
    10. '(curr' → logprob: -8.125922203063965

Token 167: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019979635253548622
    2. 'ance' → logprob: -4.519979476928711
    3. 'ances' → logprob: -5.519979476928711
    4. ',current' → logprob: -6.394979476928711
    5. ')' → logprob: -6.769979476928711
    6. 'current' → logprob: -6.894979476928711
    7. ' ,' → logprob: -8.394979476928711
    8. '   ' → logprob: -8.644979476928711
    9. 's' → logprob: -9.019979476928711
    10. 'anc' → logprob: -9.394979476928711

Token 168: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5768033862113953
    2. ' +' → logprob: -0.8268033862113953
    3. ' +
' → logprob: -8.076803207397461
    4. '   ' → logprob: -8.576803207397461
    5. ' ' → logprob: -8.701803207397461
    6. '+
' → logprob: -9.076803207397461
    7. '<|end|>' → logprob: -10.826803207397461
    8. '    ' → logprob: -11.576803207397461
    9. '=' → logprob: -11.951803207397461
    10. ')' → logprob: -11.951803207397461

Token 169: ' return' (ID: 622)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08265645802021027
    2. ' dist' → logprob: -2.5826563835144043
    3. 'return' (adapté à ' return') → logprob: -5.832656383514404
    4. ' return' → logprob: -7.957656383514404
    5. '+' → logprob: -8.082656860351562
    6. '   ' → logprob: -9.207656860351562
    7. ' +' → logprob: -10.832656860351562
    8. '
' → logprob: -11.082656860351562
    9. '_dist' → logprob: -11.207656860351562
    10. '	dist' → logprob: -12.207656860351562

Token 170: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20141547918319702
    2. ' dist' → logprob: -1.7014155387878418
    3. '	dist' → logprob: -14.201415061950684
    4. '_dist' → logprob: -14.451415061950684
    5. '   ' → logprob: -14.576415061950684
    6. '(dist' → logprob: -15.076415061950684
    7. 'd' → logprob: -16.451416015625
    8. '
' → logprob: -17.451416015625
    9. ' ' → logprob: -17.701416015625
    10. ' ' → logprob: -17.951416015625

Token 171: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931754350662231
    2. ' +' → logprob: -0.6931754350662231
    3. '1' → logprob: -11.443175315856934
    4. ' +
' → logprob: -11.818175315856934
    5. ' ' → logprob: -12.818175315856934
    6. ' plus' → logprob: -13.193175315856934
    7. '+
' → logprob: -13.818175315856934
    8. '2' → logprob: -14.068175315856934
    9. ' ' → logprob: -14.193175315856934
    10. '<|end|>' → logprob: -15.068175315856934

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016444525681436062
    2. ' ' → logprob: -8.750164031982422
    3. '  ' → logprob: -13.937664031982422
    4. '```' → logprob: -13.937664031982422
    5. '10' → logprob: -14.125164031982422
    6. '6' → logprob: -14.500164031982422
    7. '   ' → logprob: -14.562664031982422
    8. '
' → logprob: -15.062664031982422
    9. 'cost' → logprob: -15.375164031982422
    10. '2' → logprob: -15.375164031982422

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2617008400848135e-05
    2. ' ' → logprob: -10.750032424926758
    3. '```' → logprob: -12.625032424926758
    4. '
' → logprob: -13.625032424926758
    5. '   ' → logprob: -14.000032424926758
    6. '6' → logprob: -14.500032424926758
    7. '

' → logprob: -14.625032424926758
    8. '0' → logprob: -14.937532424926758
    9. '  ' → logprob: -15.125032424926758
    10. 'current' → logprob: -15.312532424926758

Token 174: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013710202649235725
    2. '
' → logprob: -4.888710021972656
    3. '<|end|>' → logprob: -5.138710021972656
    4. '<|end|>' → logprob: -9.638710021972656
    5. '

' → logprob: -9.763710021972656
    6. '```' → logprob: -10.513710021972656
    7. ' def' → logprob: -11.013710021972656
    8. '#' → logprob: -11.638710021972656
    9. '  
' → logprob: -12.138710021972656
    10. '\' → logprob: -12.138710021972656

Token 175: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0037595860194414854
    2. 'd' → logprob: -6.378759384155273
    3. '
' → logprob: -7.128759384155273
    4. '<|end|>' → logprob: -7.628759384155273
    5. '#' → logprob: -8.253759384155273
    6. '```' → logprob: -9.253759384155273
    7. ':' → logprob: -9.378759384155273
    8. ':def' → logprob: -10.003759384155273
    9. '\' → logprob: -10.253759384155273
    10. 'de' → logprob: -10.378759384155273

Token 176: ' update' (ID: 4027)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7787744998931885
    2. 'd' → logprob: -1.5287744998931885
    3. ' bfs' → logprob: -2.4037744998931885
    4. ' d' → logprob: -2.7787744998931885
    5. 'def' → logprob: -2.9037744998931885
    6. ' find' → logprob: -2.9037744998931885
    7. 'find' → logprob: -3.2787744998931885
    8. 'short' → logprob: -5.278774261474609
    9. ' shortest' → logprob: -5.653774261474609
    10. 'main' → logprob: -6.403774261474609

Token 177: '_distance' (ID: 45537)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.10393877327442169
    2. '_distance' → logprob: -2.3539388179779053
    3. 'dist' → logprob: -6.228938579559326
    4. '_' → logprob: -6.978938579559326
    5. 'def' → logprob: -8.603939056396484
    6. '_queue' → logprob: -9.728939056396484
    7. '(dist' → logprob: -9.728939056396484
    8. '_d' → logprob: -9.853939056396484
    9. '```' → logprob: -10.228939056396484
    10. 'distance' → logprob: -10.228939056396484

Token 178: '_if' (ID: 25821)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.01028247270733118
    2. '(' → logprob: -4.635282516479492
    3. '(distance' → logprob: -7.760282516479492
    4. 's' → logprob: -10.010282516479492
    5. '(dis' → logprob: -11.635282516479492
    6. '(s' → logprob: -11.760282516479492
    7. '_dist' → logprob: -11.885282516479492
    8. ' (' → logprob: -11.885282516479492
    9. '(def' → logprob: -12.135282516479492
    10. 'dist' → logprob: -12.510282516479492

Token 179: '_short' (ID: 40379)
  Prédit: '_lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -1.1664985418319702
    2. '_short' → logprob: -1.4164985418319702
    3. '_b' → logprob: -1.6664985418319702
    4. '_less' → logprob: -2.4164986610412598
    5. '_sm' → logprob: -2.6664986610412598
    6. '_needed' → logprob: -2.9164986610412598
    7. '_' → logprob: -4.04149866104126
    8. 'short' → logprob: -4.41649866104126
    9. ' shorter' → logprob: -5.54149866104126
    10. 'sm' → logprob: -6.04149866104126

Token 180: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00043007321073673666
    2. 'est' → logprob: -7.875430107116699
    3. 'erer' → logprob: -10.5004301071167
    4. 'ter' → logprob: -11.1254301071167
    5. '   ' → logprob: -13.8754301071167
    6. '```' → logprob: -14.0004301071167
    7. 'ester' → logprob: -14.1254301071167
    8. 'e' → logprob: -14.3754301071167
    9. 'def' → logprob: -14.6254301071167
    10. ' er' → logprob: -14.6254301071167

Token 181: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.002221272327005863
    2. '(' → logprob: -6.25222110748291
    3. '(distance' → logprob: -8.25222110748291
    4. '(dis' → logprob: -11.25222110748291
    5. '(current' → logprob: -12.12722110748291
    6. '(graph' → logprob: -12.37722110748291
    7. '(def' → logprob: -12.87722110748291
    8. ' (' → logprob: -13.00222110748291
    9. '(
' → logprob: -13.62722110748291
    10. '(d' → logprob: -13.87722110748291

Token 182: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0006035494152456522
    2. ',' → logprob: -8.250603675842285
    3. 'ance' → logprob: -8.375603675842285
    4. 's' → logprob: -10.375603675842285
    5. '   ' → logprob: -10.500603675842285
    6. ')' → logprob: -10.625603675842285
    7. '```' → logprob: -12.000603675842285
    8. 'r' → logprob: -12.125603675842285
    9. 'anc' → logprob: -12.500603675842285
    10. 'es' → logprob: -12.875603675842285

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.745069499127567e-05
    2. ',current' → logprob: -9.37508773803711
    3. '[current' → logprob: -13.62508773803711
    4. ' ,' → logprob: -14.12508773803711
    5. 'current' → logprob: -15.25008773803711
    6. '(current' → logprob: -16.12508773803711
    7. ',
' → logprob: -16.25008773803711
    8. '   ' → logprob: -16.37508773803711
    9. ',node' → logprob: -16.50008773803711
    10. '‌,' → logprob: -18.12508773803711

Token 184: ' queue' (ID: 13661)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.9540401101112366
    2. 'node' → logprob: -1.4540400505065918
    3. 'next' → logprob: -1.9540400505065918
    4. ' node' → logprob: -2.454040050506592
    5. ' neighbor' → logprob: -2.704040050506592
    6. ' next' → logprob: -3.329040050506592
    7. 'current' → logprob: -3.829040050506592
    8. ' current' → logprob: -4.329040050506592
    9. 'new' → logprob: -4.954040050506592
    10. ' new' → logprob: -6.079040050506592

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.618001053633634e-05
    2. ',current' → logprob: -11.000025749206543
    3. ' ,' → logprob: -12.000025749206543
    4. ',node' → logprob: -14.125025749206543
    5. ',
' → logprob: -14.500025749206543
    6. 'current' → logprob: -14.500025749206543
    7. '‌,' → logprob: -15.250025749206543
    8. '   ' → logprob: -15.625025749206543
    9. 's' → logprob: -16.00002670288086
    10. '_,' → logprob: -16.00002670288086

Token 186: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.5477005839347839
    2. 'next' → logprob: -1.7977006435394287
    3. ' neighbor' → logprob: -2.2977006435394287
    4. ' next' → logprob: -2.5477006435394287
    5. 'node' → logprob: -3.4227006435394287
    6. ' node' → logprob: -4.54770040512085
    7. '   ' → logprob: -4.67270040512085
    8. 'new' → logprob: -5.29770040512085
    9. 'v' → logprob: -5.67270040512085
    10. '```' → logprob: -5.92270040512085

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.840432565193623e-05
    2. ' ,' → logprob: -9.500088691711426
    3. ',current' → logprob: -12.875088691711426
    4. '):' → logprob: -13.000088691711426
    5. ',
' → logprob: -13.250088691711426
    6. '_,' → logprob: -13.875088691711426
    7. '):
' → logprob: -13.875088691711426
    8. 's' → logprob: -14.000088691711426
    9. ',node' → logprob: -14.750088691711426
    10. '‌,' → logprob: -14.875088691711426

Token 188: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.5615220069885254
    2. 'next' → logprob: -1.5615220069885254
    3. ' new' → logprob: -1.6865220069885254
    4. ' next' → logprob: -1.8115220069885254
    5. 'dist' → logprob: -2.5615220069885254
    6. 'current' → logprob: -2.8115220069885254
    7. 'calculate' → logprob: -3.3115220069885254
    8. ' current' → logprob: -3.5615220069885254
    9. ' dist' → logprob: -3.9365220069885254
    10. 'curr' → logprob: -5.686522006988525

Token 189: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0016323324525728822
    2. '_distance' → logprob: -6.501632213592529
    3. 'dist' → logprob: -9.126632690429688
    4. 'Dist' → logprob: -10.876632690429688
    5. '_' → logprob: -13.876632690429688
    6. '_d' → logprob: -14.001632690429688
    7. '	dist' → logprob: -15.876632690429688
    8. '_DIST' → logprob: -16.001632690429688
    9. ' dist' → logprob: -16.501632690429688
    10. 'd' → logprob: -16.626632690429688

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07017316669225693
    2. '):
' → logprob: -2.6951732635498047
    3. '):

' → logprob: -8.820173263549805
    4. '):
' → logprob: -10.320173263549805
    5. 'ance' → logprob: -10.570173263549805
    6. ' ):' → logprob: -11.320173263549805
    7. ')' → logprob: -11.820173263549805
    8. '   ' → logprob: -12.695173263549805
    9. ' ' → logprob: -13.320173263549805
    10. ':' → logprob: -13.695173263549805

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01970674656331539
    2. ' if' → logprob: -4.644706726074219
    3. 'if' → logprob: -5.144706726074219
    4. ':' → logprob: -5.644706726074219
    5. '<|end|>' → logprob: -8.144706726074219
    6. ',' → logprob: -9.519706726074219
    7. '	if' → logprob: -10.144706726074219
    8. ')' → logprob: -10.519706726074219
    9. '  ' → logprob: -11.019706726074219
    10. ':
' → logprob: -11.144706726074219

Token 192: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04402568191289902
    2. '   ' → logprob: -3.6690256595611572
    3. ' if' → logprob: -4.044025897979736
    4. '```' → logprob: -10.294025421142578
    5. 'current' → logprob: -12.544025421142578
    6. '
' → logprob: -13.669025421142578
    7. '    
' → logprob: -13.669025421142578
    8. '	if' → logprob: -14.044025421142578
    9. '``' → logprob: -14.794025421142578
    10. ' current' → logprob: -15.169025421142578

Token 193: ' distances' (ID: 48294)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5740941762924194
    2. ' distances' → logprob: -0.9490941762924194
    3. 'new' → logprob: -3.074094295501709
    4. 'dist' → logprob: -5.699094295501709
    5. ' ' → logprob: -10.57409381866455
    6. ' dist' → logprob: -10.69909381866455
    7. '   ' → logprob: -10.82409381866455
    8. '	new' → logprob: -10.94909381866455
    9. '    ' → logprob: -12.32409381866455
    10. 'Distances' → logprob: -12.32409381866455

Token 194: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.000000953674316
    3. 'neighbor' → logprob: -16.0
    4. '[
' → logprob: -16.5
    5. '[next' → logprob: -17.625
    6. '```' → logprob: -17.75
    7. '
' → logprob: -18.25
    8. '[node' → logprob: -18.625
    9. '[n' → logprob: -19.125
    10. ',' → logprob: -19.375

Token 195: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.06219062954187393
    2. '[' → logprob: -2.812190532684326
    3. 'ne' → logprob: -9.437191009521484
    4. ' neighbor' → logprob: -9.562191009521484
    5. ']' → logprob: -10.437191009521484
    6. '][' → logprob: -11.187191009521484
    7. '_neighbor' → logprob: -11.562191009521484
    8. 'ighbor' → logprob: -11.687191009521484
    9. 'neighbors' → logprob: -12.687191009521484
    10. '
' → logprob: -12.687191009521484

Token 196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2986457347869873
    2. '>' → logprob: -1.5486457347869873
    3. ' >' → logprob: -3.7986457347869873
    4. ']>' → logprob: -3.7986457347869873
    5. ' ]' → logprob: -7.173645973205566
    6. '>]' → logprob: -10.923645973205566
    7. '">' → logprob: -11.548645973205566
    8. '[' → logprob: -11.548645973205566
    9. '']' → logprob: -11.923645973205566
    10. '```' → logprob: -12.548645973205566

Token 197: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.020545978099107742
    2. ' >' → logprob: -3.8955459594726562
    3. '```' → logprob: -13.395545959472656
    4. '   ' → logprob: -14.770545959472656
    5. '>

' → logprob: -15.020545959472656
    6. '">' → logprob: -15.020545959472656
    7. '>
' → logprob: -15.145545959472656
    8. ' ' → logprob: -15.395545959472656
    9. '>`' → logprob: -15.395545959472656
    10. '()>' → logprob: -15.520545959472656

Token 198: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.38687169551849365
    2. 'new' → logprob: -1.1368716955184937
    3. '	new' → logprob: -14.636871337890625
    4. ')new' → logprob: -16.761871337890625
    5. ' ' → logprob: -17.261871337890625
    6. '[new' → logprob: -17.386871337890625
    7. '_new' → logprob: -17.636871337890625
    8. '   ' → logprob: -17.761871337890625
    9. '(new' → logprob: -18.011871337890625
    10. '新' → logprob: -18.511871337890625

Token 199: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -12.750004768371582
    3. '_d' → logprob: -13.625004768371582
    4. 'dist' → logprob: -14.500004768371582
    5. '	dist' → logprob: -16.6250057220459
    6. '_dis' → logprob: -17.1250057220459
    7. 'd' → logprob: -18.5000057220459
    8. ' _' → logprob: -18.5000057220459
    9. ' dist' → logprob: -18.6250057220459
    10. '_di' → logprob: -19.1250057220459

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007628869265317917
    2. ':
' → logprob: -4.882628917694092
    3. '):' → logprob: -11.507628440856934
    4. ' :' → logprob: -12.632628440856934
    5. '):
' → logprob: -12.757628440856934
    6. ':

' → logprob: -13.132628440856934
    7. '<|end|>' → logprob: -13.882628440856934
    8. ' and' → logprob: -14.257628440856934
    9. ':return' → logprob: -14.382628440856934
    10. ':def' → logprob: -14.507628440856934

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11876469105482101
    2. '<|end|>' → logprob: -2.493764638900757
    3. ':' → logprob: -3.868764638900757
    4. '   ' → logprob: -6.118764877319336
    5. '):' → logprob: -6.368764877319336
    6. ')' → logprob: -6.618764877319336
    7. ':
' → logprob: -6.743764877319336
    8. '):
' → logprob: -7.243764877319336
    9. '<|end|>' → logprob: -7.493764877319336
    10. '```' → logprob: -8.743764877319336

Token 202: ' distances' (ID: 48294)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3401266932487488
    2. ' distances' → logprob: -2.0901267528533936
    3. '           ' → logprob: -2.2151267528533936
    4. 'dist' → logprob: -2.9651267528533936
    5. '   ' → logprob: -5.8401265144348145
    6. ' dist' → logprob: -7.9651265144348145
    7. '	dist' → logprob: -8.965126991271973
    8. '
' → logprob: -9.090126991271973
    9. '```' → logprob: -9.215126991271973
    10. '_dist' → logprob: -9.715126991271973

Token 203: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.875000953674316
    3. '[
' → logprob: -15.875000953674316
    4. '][' → logprob: -16.5
    5. ' [' → logprob: -17.125
    6. ']' → logprob: -17.5
    7. '<|end|>' → logprob: -17.75
    8. '       ' → logprob: -18.0
    9. '[next' → logprob: -18.0
    10. '[node' → logprob: -18.0

Token 204: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -2.3319124011322856e-05
    2. ' neighbor' → logprob: -10.750022888183594
    3. '_neighbor' → logprob: -14.375022888183594
    4. '
' → logprob: -14.625022888183594
    5. 'ne' → logprob: -14.875022888183594
    6. '[' → logprob: -14.875022888183594
    7. 'ighbor' → logprob: -16.375022888183594
    8. 'neighbors' → logprob: -18.000022888183594
    9. ']' → logprob: -18.125022888183594
    10. '```' → logprob: -18.875022888183594

Token 205: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008941899868659675
    2. '=' → logprob: -7.875894069671631
    3. ']=' → logprob: -8.125894546508789
    4. ' ]' → logprob: -9.125894546508789
    5. ' =' → logprob: -9.125894546508789
    6. ')' → logprob: -15.250894546508789
    7. 's' → logprob: -16.87589454650879
    8. ',' → logprob: -17.00089454650879
    9. '   ' → logprob: -17.12589454650879
    10. '<|end|>' → logprob: -17.37589454650879

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. ' =
' → logprob: -15.600207328796387
    4. ']' → logprob: -15.725207328796387
    5. ']=' → logprob: -16.60020637512207
    6. '<|end|>' → logprob: -16.60020637512207
    7. ',' → logprob: -16.97520637512207
    8. ' ' → logprob: -16.97520637512207
    9. '＝' → logprob: -17.47520637512207
    10. '=
' → logprob: -17.72520637512207

Token 207: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.20141343772411346
    2. 'new' → logprob: -1.7014133930206299
    3. '	new' → logprob: -16.201414108276367
    4. '_new' → logprob: -17.576414108276367
    5. ' ' → logprob: -17.701414108276367
    6. '```' → logprob: -18.076414108276367
    7. ')new' → logprob: -18.576414108276367
    8. '[new' → logprob: -18.951414108276367
    9. ' ' → logprob: -19.576414108276367
    10. '
' → logprob: -20.076414108276367

Token 208: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -9.722539834911004e-05
    2. 'dist' → logprob: -9.500097274780273
    3. 'ist' → logprob: -10.750097274780273
    4. ' dist' → logprob: -14.875097274780273
    5. '_d' → logprob: -15.875097274780273
    6. '_' → logprob: -15.875097274780273
    7. '	dist' → logprob: -15.875097274780273
    8. '_diff' → logprob: -17.625097274780273
    9. '_DIST' → logprob: -17.875097274780273
    10. '.dist' → logprob: -17.875097274780273

Token 209: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45438411831855774
    2. '
' → logprob: -1.0793840885162354
    3. '<|end|>' → logprob: -4.2043843269348145
    4. ',' → logprob: -5.5793843269348145
    5. '        
' → logprob: -6.0793843269348145
    6. ',
' → logprob: -6.4543843269348145
    7. 'he' → logprob: -6.7043843269348145
    8. ' he' → logprob: -7.2043843269348145
    9. '
' → logprob: -8.329383850097656
    10. '  
' → logprob: -8.954383850097656

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005950896302238107
    2. ' he' → logprob: -7.7505950927734375
    3. 'he' → logprob: -8.750595092773438
    4. ',' → logprob: -13.625595092773438
    5. '   ' → logprob: -13.625595092773438
    6. '```' → logprob: -13.625595092773438
    7. '	' → logprob: -14.500595092773438
    8. '      ' → logprob: -15.000595092773438
    9. '
' → logprob: -15.125595092773438
    10. '               ' → logprob: -15.375595092773438

Token 211: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.3868754208087921
    2. 'he' (adapté à ' he') → logprob: -1.1368753910064697
    3. '   ' → logprob: -12.51187515258789
    4. 'heap' → logprob: -15.63687515258789
    5. '```' → logprob: -15.88687515258789
    6. '_he' → logprob: -16.26187515258789
    7. ' ' → logprob: -16.38687515258789
    8. '.he' → logprob: -17.13687515258789
    9. ' heap' → logprob: -17.38687515258789
    10. '       ' → logprob: -17.51187515258789

Token 212: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.1008713702030946e-06
    2. 'ap' → logprob: -13.375001907348633
    3. ' app' → logprob: -14.750001907348633
    4. 'a' → logprob: -16.625001907348633
    5. '	app' → logprob: -18.625001907348633
    6. 'appt' → logprob: -18.625001907348633
    7. 'apput' → logprob: -18.750001907348633
    8. 'append' → logprob: -19.250001907348633
    9. 'App' → logprob: -19.750001907348633
    10. 'ап' → logprob: -19.875001907348633

Token 213: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.531315314830863e-06
    2. 'push' → logprob: -12.625003814697266
    3. 'u' → logprob: -16.875003814697266
    4. 'e' → logprob: -17.000003814697266
    5. 'us' → logprob: -17.500003814697266
    6. 'app' → logprob: -17.625003814697266
    7. 'op' → logprob: -18.375003814697266
    8. 'p' → logprob: -18.625003814697266
    9. '```' → logprob: -19.500003814697266
    10. 'he' → logprob: -19.625003814697266

Token 214: '(queue' (ID: 72316)
  Prédit: '(queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -4.084206375409849e-05
    2. '(' → logprob: -10.125041007995605
    3. '(heap' → logprob: -14.375041007995605
    4. '(q' → logprob: -16.87504005432129
    5. ' (' → logprob: -17.00004005432129
    6. '(query' → logprob: -17.62504005432129
    7. '(
' → logprob: -17.87504005432129
    8. '(stack' → logprob: -18.37504005432129
    9. 'queue' → logprob: -19.00004005432129
    10. '(menu' → logprob: -19.75004005432129

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002858727937564254
    2. '(' → logprob: -6.127858638763428
    3. ' ,' → logprob: -8.127859115600586
    4. ',(' → logprob: -9.002859115600586
    5. '((' → logprob: -9.127859115600586
    6. ' (' → logprob: -9.252859115600586
    7. '(queue' → logprob: -10.627859115600586
    8. ')' → logprob: -10.877859115600586
    9. ' (,' → logprob: -13.002859115600586
    10. ',
' → logprob: -13.377859115600586

Token 216: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.5795189738273621
    2. ' (' → logprob: -1.0795190334320068
    3. '(' → logprob: -2.579519033432007
    4. '(ne' → logprob: -3.829519033432007
    5. '(n' → logprob: -6.079518795013428
    6. '(next' → logprob: -8.579519271850586
    7. '(current' → logprob: -10.829519271850586
    8. '(New' → logprob: -11.204519271850586
    9. ')' → logprob: -12.204519271850586
    10. '((' → logprob: -12.829519271850586

Token 217: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -9.627176768844947e-05
    2. ' new' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.50009536743164
    4. '_new' → logprob: -17.62509536743164
    5. ')new' → logprob: -18.25009536743164
    6. '
' → logprob: -18.37509536743164
    7. '```' → logprob: -18.37509536743164
    8. '	new' → logprob: -19.50009536743164
    9. '  ' → logprob: -21.00009536743164
    10. 'next' → logprob: -21.00009536743164

Token 218: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0003912311512976885
    2. 'dist' → logprob: -7.875391006469727
    3. 'w' → logprob: -11.875391006469727
    4. 'ew' → logprob: -13.500391006469727
    5. '_diff' → logprob: -13.875391006469727
    6. '_d' → logprob: -14.250391006469727
    7. '_' → logprob: -14.875391006469727
    8. ' dist' → logprob: -16.000391006469727
    9. '	dist' → logprob: -16.125391006469727
    10. '_DIST' → logprob: -16.625391006469727

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ' ,' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -16.125
    4. ',
' → logprob: -16.25
    5. '‌,' → logprob: -17.0
    6. ',n' → logprob: -17.375
    7. ',

' → logprob: -17.75
    8. ')' → logprob: -19.25
    9. ',v' → logprob: -19.25
    10. ',node' → logprob: -19.375

Token 220: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.5759426951408386
    2. 'neighbor' → logprob: -0.8259426951408386
    3. ' neighbour' → logprob: -13.450942993164062
    4. 'ne' → logprob: -14.325942993164062
    5. '_neighbor' → logprob: -15.325942993164062
    6. '
' → logprob: -15.575942993164062
    7. '   ' → logprob: -15.825942993164062
    8. 'neighbors' → logprob: -15.950942993164062
    9. '    ' → logprob: -16.200942993164062
    10. ' ' → logprob: -16.575942993164062

Token 221: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16028708219528198
    2. '))' → logprob: -1.9102871417999268
    3. ')
' → logprob: -9.785286903381348
    4. '))
' → logprob: -12.160286903381348
    5. ')))' → logprob: -14.410286903381348
    6. ' )' → logprob: -15.035286903381348
    7. '   ' → logprob: -15.910286903381348
    8. '       ' → logprob: -16.285287857055664
    9. ')}' → logprob: -16.285287857055664
    10. ' ))' → logprob: -16.285287857055664

Token 222: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004689226043410599
    2. '
' → logprob: -7.750468730926514
    3. '<|end|>' → logprob: -10.750469207763672
    4. '```' → logprob: -11.625469207763672
    5. '

' → logprob: -12.875469207763672
    6. ' def' → logprob: -12.875469207763672
    7. '#' → logprob: -15.125469207763672
    8. '  
' → logprob: -15.125469207763672
    9. ':def' → logprob: -15.125469207763672
    10. '<|end|>' → logprob: -15.250469207763672

Token 223: ' process' (ID: 2273)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8493107557296753
    2. 'def' → logprob: -1.5993107557296753
    3. ' d' → logprob: -1.9743107557296753
    4. 'b' → logprob: -2.224310874938965
    5. ' bfs' → logprob: -2.974310874938965
    6. ' find' → logprob: -3.349310874938965
    7. 'find' → logprob: -4.349310874938965
    8. ' def' → logprob: -4.474310874938965
    9. 'main' → logprob: -5.849310874938965
    10. 'short' → logprob: -5.974310874938965

Token 224: '_neighbors' (ID: 142549)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.8701066374778748
    2. '(queue' → logprob: -1.6201066970825195
    3. '_' → logprob: -2.3701066970825195
    4. '(' → logprob: -2.3701066970825195
    5. '_nodes' → logprob: -2.7451066970825195
    6. '_graph' → logprob: -2.8701066970825195
    7. '(graph' → logprob: -3.2451066970825195
    8. '_node' → logprob: -4.8701066970825195
    9. '_neighbors' → logprob: -4.8701066970825195
    10. '_(' → logprob: -5.1201066970825195

Token 225: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.003749486757442355
    2. '(node' → logprob: -6.253749370574951
    3. '(current' → logprob: -7.003749370574951
    4. '(dist' → logprob: -7.503749370574951
    5. ' (' → logprob: -8.50374984741211
    6. '(' → logprob: -9.62874984741211
    7. '(queue' → logprob: -10.37874984741211
    8. '(distance' → logprob: -10.50374984741211
    9. '(ne' → logprob: -11.12874984741211
    10. '(line' → logprob: -12.37874984741211

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6696149840718135e-05
    2. ',node' → logprob: -10.625056266784668
    3. ',current' → logprob: -11.375056266784668
    4. ' ,' → logprob: -11.500056266784668
    5. '[node' → logprob: -12.125056266784668
    6. '[current' → logprob: -13.125056266784668
    7. '[' → logprob: -13.875056266784668
    8. ',
' → logprob: -14.000056266784668
    9. '   ' → logprob: -14.625056266784668
    10. '[],' → logprob: -16.000057220458984

Token 227: ' distances' (ID: 48294)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.0126055479049683
    2. ' node' → logprob: -1.3876055479049683
    3. 'current' → logprob: -1.8876055479049683
    4. ' current' → logprob: -2.387605667114258
    5. ' distances' → logprob: -2.512605667114258
    6. 'dist' → logprob: -3.137605667114258
    7. 'queue' → logprob: -4.887605667114258
    8. 'graph' → logprob: -5.262605667114258
    9. ' graph' → logprob: -6.262605667114258
    10. ' queue' → logprob: -6.262605667114258

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025657136575318873
    2. ' ,' → logprob: -8.750256538391113
    3. ',current' → logprob: -9.625256538391113
    4. '   ' → logprob: -11.500256538391113
    5. '[current' → logprob: -11.625256538391113
    6. ',
' → logprob: -11.875256538391113
    7. ',node' → logprob: -13.000256538391113
    8. '[' → logprob: -13.500256538391113
    9. '[node' → logprob: -14.500256538391113
    10. 'current' → logprob: -15.000256538391113

Token 229: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.06439276784658432
    2. ' queue' → logprob: -2.9393928050994873
    3. 'current' → logprob: -4.939392566680908
    4. 'node' → logprob: -6.939392566680908
    5. ' current' → logprob: -7.314392566680908
    6. 'graph' → logprob: -7.939392566680908
    7. 'neighbor' → logprob: -9.314393043518066
    8. ' node' → logprob: -9.564393043518066
    9. 'u' → logprob: -10.064393043518066
    10. ' graph' → logprob: -10.439393043518066

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.0259150157216936e-05
    2. ' ,' → logprob: -10.37505054473877
    3. ',current' → logprob: -11.12505054473877
    4. '   ' → logprob: -13.12505054473877
    5. ',node' → logprob: -13.62505054473877
    6. 'current' → logprob: -15.12505054473877
    7. ',
' → logprob: -15.62505054473877
    8. '[current' → logprob: -15.87505054473877
    9. ' current' → logprob: -16.250049591064453
    10. '[],' → logprob: -16.625049591064453

Token 231: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5417139530181885
    2. ' current' → logprob: -1.1667139530181885
    3. 'node' → logprob: -2.6667139530181885
    4. ' node' → logprob: -3.2917139530181885
    5. 'u' → logprob: -10.04171371459961
    6. 'neighbor' → logprob: -10.29171371459961
    7. ' u' → logprob: -10.41671371459961
    8. '   ' → logprob: -10.66671371459961
    9. 'curr' → logprob: -10.91671371459961
    10. ' neighbor' → logprob: -11.29171371459961

Token 232: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6508351564407349
    2. '):
' → logprob: -0.7758351564407349
    3. ',' → logprob: -4.025835037231445
    4. '   ' → logprob: -9.775835037231445
    5. ' ):' → logprob: -9.900835037231445
    6. '):
' → logprob: -10.025835037231445
    7. '):

' → logprob: -10.525835037231445
    8. ' ):
' → logprob: -10.775835037231445
    9. ' ' → logprob: -12.275835037231445
    10. ')' → logprob: -12.400835037231445

Token 233: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6944560408592224
    2. ' dist' → logprob: -1.6944561004638672
    3. 'neighbors' → logprob: -1.9444561004638672
    4. ' neighbors' → logprob: -2.194456100463867
    5. 'neighbor' → logprob: -3.944456100463867
    6. 'graph' → logprob: -4.569456100463867
    7. ' neighbor' → logprob: -4.694456100463867
    8. ')' → logprob: -5.069456100463867
    9. ' graph' → logprob: -5.194456100463867
    10. '):' → logprob: -6.444456100463867

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5234830975532532
    2. '):
' → logprob: -0.8984830975532532
    3. '   ' → logprob: -8.398483276367188
    4. '):
' → logprob: -9.648483276367188
    5. ',' → logprob: -9.898483276367188
    6. '):

' → logprob: -12.148483276367188
    7. ')' → logprob: -12.648483276367188
    8. ':' → logprob: -12.773483276367188
    9. ' ):' → logprob: -13.148483276367188
    10. ' ' → logprob: -13.273483276367188

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01194003690034151
    2. 'for' → logprob: -4.636940002441406
    3. ' for' → logprob: -6.136940002441406
    4. '	for' → logprob: -11.011940002441406
    5. '   ' → logprob: -13.761940002441406
    6. '    
' → logprob: -14.136940002441406
    7. 'neighbors' → logprob: -14.386940002441406
    8. '```' → logprob: -14.636940002441406
    9. '  ' → logprob: -14.761940002441406
    10. ',' → logprob: -16.136940002441406

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016227908432483673
    2. ' for' → logprob: -4.516227722167969
    3. '   ' → logprob: -5.266227722167969
    4. '	for' → logprob: -13.016227722167969
    5. 'neighbors' → logprob: -14.141227722167969
    6. ' ' → logprob: -15.141227722167969
    7. '```' → logprob: -15.891227722167969
    8. '  ' → logprob: -15.891227722167969
    9. '
' → logprob: -16.26622772216797
    10. ' neighbors' → logprob: -16.39122772216797

Token 237: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.07890003174543381
    2. ' neighbor' → logprob: -2.578900098800659
    3. 'ne' → logprob: -12.453900337219238
    4. '_neighbor' → logprob: -12.953900337219238
    5. '   ' → logprob: -13.453900337219238
    6. 'nei' → logprob: -14.453900337219238
    7. '```' → logprob: -14.453900337219238
    8. 'neighbors' → logprob: -14.453900337219238
    9. 'next' → logprob: -15.578900337219238
    10. ' neighbour' → logprob: -15.578900337219238

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04308231920003891
    2. 'in' → logprob: -3.1680822372436523
    3. ' ' → logprob: -10.293082237243652
    4. '	in' → logprob: -10.418082237243652
    5. '   ' → logprob: -11.543082237243652
    6. '  ' → logprob: -12.418082237243652
    7. ',' → logprob: -12.918082237243652
    8. '    ' → logprob: -14.668082237243652
    9. '_in' → logprob: -14.918082237243652
    10. '<|end|>' → logprob: -15.043082237243652

Token 239: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.006722471676766872
    2. ' graph' → logprob: -5.006722450256348
    3. '(graph' → logprob: -12.131722450256348
    4. '	graph' → logprob: -13.381722450256348
    5. 'raph' → logprob: -15.506722450256348
    6. 'graphql' → logprob: -17.631723403930664
    7. '_graph' → logprob: -17.881723403930664
    8. '.graph' → logprob: -18.756723403930664
    9. '   ' → logprob: -18.756723403930664
    10. ' ' → logprob: -20.006723403930664

Token 240: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.375000953674316
    3. '[cur' → logprob: -15.625000953674316
    4. 'current' → logprob: -16.000001907348633
    5. '```' → logprob: -16.625001907348633
    6. ' [' → logprob: -17.250001907348633
    7. ',current' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.250001907348633
    9. '[curr' → logprob: -18.250001907348633
    10. '][' → logprob: -18.625001907348633

Token 241: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0006242761737667024
    2. ']:
' → logprob: -7.500624179840088
    3. ']' → logprob: -9.750624656677246
    4. ' ]' → logprob: -12.250624656677246
    5. ']:
' → logprob: -12.250624656677246
    6. '):' → logprob: -13.625624656677246
    7. ']):' → logprob: -14.625624656677246
    8. '']:' → logprob: -14.875624656677246
    9. ']:

' → logprob: -15.250624656677246
    10. '"]:' → logprob: -15.375624656677246

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007789151277393103
    2. ' new' → logprob: -6.007789134979248
    3. 'update' → logprob: -6.757789134979248
    4. ' if' → logprob: -6.757789134979248
    5. 'new' → logprob: -7.007789134979248
    6. '
' → logprob: -7.257789134979248
    7. ' update' → logprob: -7.507789134979248
    8. 'if' → logprob: -7.507789134979248
    9. 'next' → logprob: -9.507789611816406
    10. '```' → logprob: -9.757789611816406

Token 243: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7994558215141296
    2. 'new' (adapté à ' new') → logprob: -1.0494558811187744
    3. '       ' → logprob: -1.7994558811187744
    4. 'next' → logprob: -4.549455642700195
    5. ' if' → logprob: -4.799455642700195
    6. 'if' → logprob: -5.049455642700195
    7. ' next' → logprob: -5.299455642700195
    8. '   ' → logprob: -6.299455642700195
    9. '```' → logprob: -6.924455642700195
    10. '
' → logprob: -7.299455642700195

Token 244: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.000605337496381253
    2. '_' → logprob: -7.50060510635376
    3. '_d' → logprob: -10.250605583190918
    4. '_distance' → logprob: -11.875605583190918
    5. 'dist' → logprob: -12.125605583190918
    6. '_dis' → logprob: -14.125605583190918
    7. '_new' → logprob: -14.250605583190918
    8. ' _' → logprob: -14.375605583190918
    9. '_diff' → logprob: -14.625605583190918
    10. '```' → logprob: -14.750605583190918

Token 245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692968547344208
    2. ' =' → logprob: -2.126929759979248
    3. ' ' → logprob: -14.62692928314209
    4. ')' → logprob: -14.62692928314209
    5. ',' → logprob: -16.126930236816406
    6. '=int' → logprob: -16.501930236816406
    7. '=create' → logprob: -16.751930236816406
    8. '=

' → logprob: -17.001930236816406
    9. '＝' → logprob: -17.251930236816406
    10. '   ' → logprob: -17.251930236816406

Token 246: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.47414809465408325
    2. ' calculate' → logprob: -0.9741480946540833
    3. ' dist' → logprob: -9.97414779663086
    4. '   ' → logprob: -11.22414779663086
    5. 'dist' → logprob: -11.72414779663086
    6. 'calc' → logprob: -13.59914779663086
    7. 'cal' → logprob: -14.72414779663086
    8. ' ' → logprob: -15.47414779663086
    9. ' calc' → logprob: -15.47414779663086
    10. '.calculate' → logprob: -15.72414779663086

Token 247: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -5.676981345459353e-06
    2. 'next' → logprob: -12.125005722045898
    3. '_' → logprob: -16.5000057220459
    4. '```' → logprob: -17.1250057220459
    5. ' next' → logprob: -17.7500057220459
    6. '_NEXT' → logprob: -18.2500057220459
    7. '_distance' → logprob: -18.3750057220459
    8. 'Next' → logprob: -18.6250057220459
    9. '(next' → logprob: -19.0000057220459
    10. '_new' → logprob: -19.2500057220459

Token 248: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.00021057340200059116
    2. 'distance' → logprob: -9.250210762023926
    3. '_next' → logprob: -9.250210762023926
    4. '_dist' → logprob: -11.125210762023926
    5. '(distance' → logprob: -13.500210762023926
    6. '_' → logprob: -14.375210762023926
    7. 'Distance' → logprob: -14.375210762023926
    8. '```' → logprob: -14.625210762023926
    9. 'next' → logprob: -16.12520980834961
    10. '_DISTANCE' → logprob: -16.25020980834961

Token 249: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0067170290276408195
    2. '(' → logprob: -5.006717205047607
    3. '(
' → logprob: -14.25671672821045
    4. ' (' → logprob: -14.50671672821045
    5. '(distance' → logprob: -15.38171672821045
    6. 'dist' → logprob: -16.256717681884766
    7. '(div' → logprob: -16.506717681884766
    8. '(

' → logprob: -16.881717681884766
    9. '(diff' → logprob: -17.131717681884766
    10. '(dis' → logprob: -17.381717681884766

Token 250: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16024473309516907
    2. ')
' → logprob: -1.9102447032928467
    3. ')
' → logprob: -10.910244941711426
    4. ')

' → logprob: -14.160244941711426
    5. ' )' → logprob: -14.285244941711426
    6. '   ' → logprob: -14.660244941711426
    7. ' )
' → logprob: -14.785244941711426
    8. ')`
' → logprob: -16.16024398803711
    9. ')`' → logprob: -17.53524398803711
    10. '),' → logprob: -17.78524398803711

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014606256037950516
    2. 'update' → logprob: -4.514606475830078
    3. ' update' → logprob: -5.764606475830078
    4. '
' → logprob: -8.139606475830078
    5. '(update' → logprob: -10.014606475830078
    6. '.update' → logprob: -10.389606475830078
    7. '        
' → logprob: -10.764606475830078
    8. '   ' → logprob: -11.514606475830078
    9. '	update' → logprob: -12.014606475830078
    10. ',' → logprob: -13.264606475830078

Token 252: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.11447761952877045
    2. ' update' → logprob: -2.6144776344299316
    3. '       ' → logprob: -3.3644776344299316
    4. 'if' → logprob: -8.239477157592773
    5. ' if' → logprob: -9.989477157592773
    6. '
' → logprob: -10.239477157592773
    7. '   ' → logprob: -11.114477157592773
    8. '	update' → logprob: -11.739477157592773
    9. '.update' → logprob: -12.239477157592773
    10. '        
' → logprob: -13.114477157592773

Token 253: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.5332478142227046e-05
    2. 'distance' → logprob: -11.125015258789062
    3. '_dist' → logprob: -14.750015258789062
    4. 'Distance' → logprob: -16.500015258789062
    5. '_DISTANCE' → logprob: -16.750015258789062
    6. '_' → logprob: -17.875015258789062
    7. ' distance' → logprob: -18.375015258789062
    8. 'dist' → logprob: -18.375015258789062
    9. '```' → logprob: -20.625015258789062
    10. '距离' → logprob: -20.625015258789062

Token 254: '_if' (ID: 25821)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.004640880040824413
    2. '_if' → logprob: -5.379641056060791
    3. 'distance' → logprob: -11.379640579223633
    4. '_dist' → logprob: -12.254640579223633
    5. 'if' → logprob: -13.379640579223633
    6. '```' → logprob: -13.629640579223633
    7. '(distance' → logprob: -15.004640579223633
    8. '_' → logprob: -15.254640579223633
    9. '_time' → logprob: -16.004640579223633
    10. 'If' → logprob: -16.379640579223633

Token 255: '_short' (ID: 40379)
  Prédit: '_short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -0.2521818280220032
    2. 'short' → logprob: -1.5021817684173584
    3. 'Short' → logprob: -8.627182006835938
    4. '(short' → logprob: -10.502182006835938
    5. ' shorter' → logprob: -11.252182006835938
    6. 'hort' → logprob: -11.502182006835938
    7. '```' → logprob: -11.877182006835938
    8. '_sh' → logprob: -12.252182006835938
    9. 'ort' → logprob: -13.252182006835938
    10. '_SHORT' → logprob: -13.377182006835938

Token 256: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.226031094789505
    2. 'ter' → logprob: -1.6010310649871826
    3. 'orter' → logprob: -8.476031303405762
    4. 'rer' → logprob: -8.601031303405762
    5. 'ort' → logprob: -9.101031303405762
    6. '```' → logprob: -10.726031303405762
    7. 'ert' → logprob: -11.726031303405762
    8. 'ener' → logprob: -11.726031303405762
    9. 'erer' → logprob: -11.726031303405762
    10. 'ner' → logprob: -12.101031303405762

Token 257: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.00000286102295
    3. '(distance' → logprob: -15.50000286102295
    4. ' (' → logprob: -15.62500286102295
    5. '(
' → logprob: -18.250001907348633
    6. '(dis' → logprob: -18.250001907348633
    7. '(d' → logprob: -18.750001907348633
    8. 'dist' → logprob: -20.125001907348633
    9. '(div' → logprob: -20.375001907348633
    10. '```' → logprob: -21.000001907348633

Token 258: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.000003814697266
    3. 's' → logprob: -15.375003814697266
    4. 'aces' → logprob: -15.500003814697266
    5. 'stances' → logprob: -15.625003814697266
    6. '(dist' → logprob: -15.750003814697266
    7. 'ANCES' → logprob: -16.375003814697266
    8. 'ance' → logprob: -16.375003814697266
    9. 'es' → logprob: -16.500003814697266
    10. ',' → logprob: -16.500003814697266

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022985834628343582
    2. '(queue' → logprob: -4.147985935211182
    3. '(graph' → logprob: -5.022985935211182
    4. '(' → logprob: -8.522985458374023
    5. ' ,' → logprob: -9.772985458374023
    6. ',
' → logprob: -10.147985458374023
    7. ')' → logprob: -10.647985458374023
    8. '```' → logprob: -12.272985458374023
    9. '(
' → logprob: -12.647985458374023
    10. ',(' → logprob: -12.647985458374023

Token 260: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.038044244050979614
    2. ' queue' → logprob: -3.2880442142486572
    3. '(queue' → logprob: -13.663043975830078
    4. 'que' → logprob: -14.288043975830078
    5. '	queue' → logprob: -14.413043975830078
    6. ' que' → logprob: -16.038043975830078
    7. '.queue' → logprob: -16.038043975830078
    8. '
' → logprob: -16.663043975830078
    9. '   ' → logprob: -17.038043975830078
    10. ' ' → logprob: -17.163043975830078

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3856492842023727e-06
    2. ',
' → logprob: -13.750000953674316
    3. ' ,' → logprob: -15.375000953674316
    4. ',n' → logprob: -18.250001907348633
    5. '```' → logprob: -18.625001907348633
    6. ',current' → logprob: -18.625001907348633
    7. ',

' → logprob: -18.750001907348633
    8. ',new' → logprob: -19.000001907348633
    9. ',node' → logprob: -19.125001907348633
    10. ')' → logprob: -19.375001907348633

Token 262: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.008615161292254925
    2. ' neighbor' → logprob: -4.758615016937256
    3. 'ne' → logprob: -15.758615493774414
    4. '   ' → logprob: -16.258615493774414
    5. 'neighbors' → logprob: -16.258615493774414
    6. '_neighbor' → logprob: -16.508615493774414
    7. '
' → logprob: -16.508615493774414
    8. '```' → logprob: -17.633615493774414
    9. 'ighbor' → logprob: -18.133615493774414
    10. 'Neighbor' → logprob: -18.383615493774414

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000556843588128686
    2. ',new' → logprob: -7.500556945800781
    3. ' ,' → logprob: -13.125556945800781
    4. 'new' → logprob: -13.625556945800781
    5. ',
' → logprob: -15.125556945800781
    6. ',n' → logprob: -15.750556945800781
    7. ' new' → logprob: -17.75055694580078
    8. '```' → logprob: -18.37555694580078
    9. ',current' → logprob: -18.50055694580078
    10. ',

' → logprob: -18.75055694580078

Token 264: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004078401252627373
    2. ' new' → logprob: -5.504078388214111
    3. '	new' → logprob: -18.629077911376953
    4. '   ' → logprob: -18.879077911376953
    5. '```' → logprob: -19.504077911376953
    6. ')new' → logprob: -20.254077911376953
    7. ' ' → logprob: -21.254077911376953
    8. '_new' → logprob: -21.379077911376953
    9. '[new' → logprob: -21.754077911376953
    10. '(new' → logprob: -21.879077911376953

Token 265: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0003812217037193477
    2. 'ist' → logprob: -8.125381469726562
    3. 'dist' → logprob: -9.375381469726562
    4. '	dist' → logprob: -16.500381469726562
    5. '_d' → logprob: -16.875381469726562
    6. 'w' → logprob: -17.125381469726562
    7. '_' → logprob: -17.375381469726562
    8. 'ew' → logprob: -17.625381469726562
    9. '-dist' → logprob: -17.875381469726562
    10. 'Dist' → logprob: -17.875381469726562

Token 266: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.704065213445574e-05
    2. ')
' → logprob: -10.625046730041504
    3. ' )' → logprob: -11.000046730041504
    4. ')

' → logprob: -12.750046730041504
    5. '<|end|>' → logprob: -14.125046730041504
    6. 'def' → logprob: -14.500046730041504
    7. '   ' → logprob: -14.750046730041504
    8. ')return' → logprob: -15.000046730041504
    9. '())' → logprob: -15.125046730041504
    10. '       ' → logprob: -15.750046730041504

Token 267: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016596943140029907
    2. '<|end|>' → logprob: -4.141596794128418
    3. '
' → logprob: -8.016596794128418
    4. '<|end|>' → logprob: -9.266596794128418
    5. '```' → logprob: -9.766596794128418
    6. ')' → logprob: -10.891596794128418
    7. ' def' → logprob: -11.641596794128418
    8. '#' → logprob: -12.016596794128418
    9. '    
' → logprob: -12.266596794128418
    10. 'ndef' → logprob: -12.516596794128418

Token 268: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11791376769542694
    2. ' def' → logprob: -2.3679137229919434
    3. 'd' → logprob: -4.492913722991943
    4. ' d' → logprob: -5.367913722991943
    5. ' find' → logprob: -7.617913722991943
    6. 'find' → logprob: -8.242914199829102
    7. ' process' → logprob: -8.867914199829102
    8. '
' → logprob: -9.117914199829102
    9. 'process' → logprob: -9.367914199829102
    10. ' bfs' → logprob: -9.367914199829102

Token 269: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0025245302822440863
    2. 'ijk' → logprob: -6.002524375915527
    3. 'ij' → logprob: -10.752524375915527
    4. 'jik' → logprob: -10.752524375915527
    5. 'ef' → logprob: -12.377524375915527
    6. 'i' → logprob: -14.627524375915527
    7. 'ijks' → logprob: -14.627524375915527
    8. 'ijs' → logprob: -15.502524375915527
    9. 'ijkl' → logprob: -15.627524375915527
    10. 'jk' → logprob: -15.752524375915527

Token 270: '_process' (ID: 25444)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.07146167755126953
    2. '(' → logprob: -2.6964616775512695
    3. '(node' → logprob: -7.1964616775512695
    4. '(queue' → logprob: -7.5714616775512695
    5. '(start' → logprob: -9.07146167755127
    6. '():' → logprob: -9.94646167755127
    7. '(nodes' → logprob: -11.32146167755127
    8. '(Graph' → logprob: -11.57146167755127
    9. '(root' → logprob: -11.82146167755127
    10. '_graph' → logprob: -11.94646167755127

Token 271: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.12696599960327148
    2. '(queue' → logprob: -2.3769659996032715
    3. '(' → logprob: -4.5019659996032715
    4. ' (' → logprob: -4.5019659996032715
    5. '(node' → logprob: -5.8769659996032715
    6. '(dist' → logprob: -7.6269659996032715
    7. '():' → logprob: -8.00196647644043
    8. '(start' → logprob: -8.87696647644043
    9. '(distance' → logprob: -9.25196647644043
    10. '()' → logprob: -9.75196647644043

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4894986785948277e-05
    2. ' ,' → logprob: -10.125044822692871
    3. ',
' → logprob: -12.750044822692871
    4. '):' → logprob: -14.750044822692871
    5. ',start' → logprob: -14.875044822692871
    6. ',d' → logprob: -15.125044822692871
    7. ',node' → logprob: -15.125044822692871
    8. ',current' → logprob: -16.000045776367188
    9. '‌,' → logprob: -16.125045776367188
    10. ',size' → logprob: -16.250045776367188

Token 273: ' node' (ID: 4596)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.32930928468704224
    2. 'dist' → logprob: -1.5793092250823975
    3. ' start' → logprob: -2.9543092250823975
    4. ' distances' → logprob: -3.8293092250823975
    5. 'node' → logprob: -8.454309463500977
    6. ' dist' → logprob: -8.954309463500977
    7. 'queue' → logprob: -9.704309463500977
    8. 'source' → logprob: -9.954309463500977
    9. ' node' → logprob: -10.329309463500977
    10. '   ' → logprob: -10.704309463500977

Token 274: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0009276605560444295
    2. 's' → logprob: -7.375927448272705
    3. 'count' → logprob: -8.625927925109863
    4. ',' → logprob: -9.250927925109863
    5. 'ount' → logprob: -11.500927925109863
    6. '_counts' → logprob: -12.000927925109863
    7. ',_' → logprob: -12.500927925109863
    8. ',count' → logprob: -13.000927925109863
    9. '):
' → logprob: -14.375927925109863
    10. '):' → logprob: -15.125927925109863

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001093841710826382
    2. '):' → logprob: -9.625109672546387
    3. ' ,' → logprob: -10.375109672546387
    4. ',start' → logprob: -11.625109672546387
    5. ',
' → logprob: -13.250109672546387
    6. '):
' → logprob: -14.750109672546387
    7. '   ' → logprob: -15.000109672546387
    8. ',current' → logprob: -16.00010871887207
    9. ',d' → logprob: -16.25010871887207
    10. ')' → logprob: -16.25010871887207

Token 276: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05131953954696655
    2. ' start' → logprob: -3.0513195991516113
    3. 'dist' → logprob: -6.051319599151611
    4. ' distances' → logprob: -8.176319122314453
    5. 'queue' → logprob: -10.551319122314453
    6. '   ' → logprob: -11.426319122314453
    7. ' dist' → logprob: -11.676319122314453
    8. ' ' → logprob: -11.926319122314453
    9. '	start' → logprob: -12.176319122314453
    10. 'source' → logprob: -12.176319122314453

Token 277: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012709063477814198
    2. '):' → logprob: -4.387709140777588
    3. '):
' → logprob: -8.76270866394043
    4. ' ,' → logprob: -10.88770866394043
    5. ',start' → logprob: -11.38770866394043
    6. ',
' → logprob: -12.51270866394043
    7. ')' → logprob: -12.76270866394043
    8. '   ' → logprob: -13.26270866394043
    9. '):
' → logprob: -13.88770866394043
    10. ' ):' → logprob: -14.26270866394043

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01825471594929695
    2. 'dist' → logprob: -4.01825475692749
    3. '```' → logprob: -9.893254280090332
    4. ' distances' → logprob: -10.518254280090332
    5. '	dist' → logprob: -11.143254280090332
    6. ' dist' → logprob: -12.018254280090332
    7. '   ' → logprob: -12.768254280090332
    8. '    
' → logprob: -14.393254280090332
    9. '  ' → logprob: -14.393254280090332
    10. '(dist' → logprob: -14.518254280090332

Token 279: ' INF' (ID: 69196)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.2855416066013277e-05
    2. '   ' → logprob: -10.625032424926758
    3. ' distances' → logprob: -11.750032424926758
    4. ' dist' → logprob: -15.125032424926758
    5. 'import' → logprob: -15.125032424926758
    6. '	dist' → logprob: -16.125032424926758
    7. 'distance' → logprob: -17.125032424926758
    8. 'inf' → logprob: -19.125032424926758
    9. '_dist' → logprob: -19.250032424926758
    10. '  ' → logprob: -19.500032424926758

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007607697509229183
    2. '=' → logprob: -4.882607460021973
    3. '   ' → logprob: -13.632607460021973
    4. ',' → logprob: -15.382607460021973
    5. '  ' → logprob: -16.75760841369629
    6. '=int' → logprob: -16.75760841369629
    7. ' ' → logprob: -16.88260841369629
    8. '```' → logprob: -17.50760841369629
    9. 'INF' → logprob: -17.88260841369629
    10. '_' → logprob: -17.88260841369629

Token 281: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05537697672843933
    2. 'float' → logprob: -3.0553770065307617
    3. 'int' → logprob: -5.305377006530762
    4. ' float' → logprob: -6.805377006530762
    5. ' ' → logprob: -7.555377006530762
    6. 'node' → logprob: -9.555377006530762
    7. '1' → logprob: -9.805377006530762
    8. ' int' → logprob: -10.430377006530762
    9. 'sys' → logprob: -11.805377006530762
    10. '100' → logprob: -12.555377006530762

Token 282: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2571846544742584
    2. 'float' → logprob: -1.507184624671936
    3. 'int' → logprob: -5.2571845054626465
    4. '1' → logprob: -11.132184982299805
    5. 'sys' → logprob: -11.382184982299805
    6. ' float' → logprob: -12.507184982299805
    7. '100' → logprob: -13.382184982299805
    8. ' ' → logprob: -15.382184982299805
    9. '999' → logprob: -16.382184982299805
    10. '(float' → logprob: -17.007184982299805

Token 283: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.004106423351913691
    2. '**' → logprob: -5.504106521606445
    3. '7' → logprob: -11.254106521606445
    4. '10' → logprob: -11.504106521606445
    5. '18' → logprob: -12.879106521606445
    6. '15' → logprob: -14.129106521606445
    7. '8' → logprob: -14.379106521606445
    8. '09' → logprob: -14.754106521606445
    9. '12' → logprob: -14.879106521606445
    10. '99' → logprob: -16.379106521606445

Token 284: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.001395711093209684
    2. '15' → logprob: -6.7513957023620605
    3. '18' → logprob: -8.626396179199219
    4. '10' → logprob: -10.251396179199219
    5. '12' → logprob: -12.126396179199219
    6. '7' → logprob: -12.376396179199219
    7. '14' → logprob: -15.001396179199219
    8. '16' → logprob: -15.001396179199219
    9. '13' → logprob: -16.12639617919922
    10. ' ' → logprob: -16.87639617919922

Token 285: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0032169262412935495
    2. '15' → logprob: -5.878216743469238
    3. '18' → logprob: -8.003216743469238
    4. '10' → logprob: -10.253216743469238
    5. '12' → logprob: -10.503216743469238
    6. '7' → logprob: -11.378216743469238
    7. '14' → logprob: -13.378216743469238
    8. '16' → logprob: -14.253216743469238
    9. '13' → logprob: -14.503216743469238
    10. '17' → logprob: -15.753216743469238

Token 286: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17496106028556824
    2. 'dist' → logprob: -1.9249610900878906
    3. ' distances' → logprob: -4.674961090087891
    4. '
' → logprob: -6.049961090087891
    5. '    
' → logprob: -6.174961090087891
    6. ' dist' → logprob: -8.17496109008789
    7. '	dist' → logprob: -8.17496109008789
    8. '_dist' → logprob: -9.04996109008789
    9. 'distance' → logprob: -10.42496109008789
    10. '   ' → logprob: -10.54996109008789

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14867891371250153
    2. 'dist' → logprob: -2.02367901802063
    3. ' distances' → logprob: -5.398678779602051
    4. '    
' → logprob: -7.648678779602051
    5. '	dist' → logprob: -8.02367877960205
    6. ' dist' → logprob: -8.14867877960205
    7. '_dist' → logprob: -9.02367877960205
    8. '
' → logprob: -9.27367877960205
    9. '   ' → logprob: -10.27367877960205
    10. 'Distances' → logprob: -11.14867877960205

Token 288: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0005788889247924089
    2. ' distances' → logprob: -7.500578880310059
    3. '   ' → logprob: -11.250578880310059
    4. ' dist' → logprob: -11.375578880310059
    5. 'distance' → logprob: -13.875578880310059
    6. '	dist' → logprob: -15.250578880310059
    7. '
' → logprob: -16.375579833984375
    8. '    
' → logprob: -17.375579833984375
    9. '  ' → logprob: -17.375579833984375
    10. ' ' → logprob: -17.500579833984375

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014138251543045
    2. ' =' → logprob: -1.701413869857788
    3. ',' → logprob: -14.701414108276367
    4. '=create' → logprob: -16.701414108276367
    5. ' ' → logprob: -17.701414108276367
    6. '```' → logprob: -17.951414108276367
    7. '＝' → logprob: -18.076414108276367
    8. '   ' → logprob: -18.076414108276367
    9. '=
' → logprob: -18.451414108276367
    10. '=

' → logprob: -18.451414108276367

Token 290: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.0025896925944834948
    2. ' initialize' → logprob: -6.002589702606201
    3. '[' → logprob: -9.252589225769043
    4. ' [' → logprob: -11.752589225769043
    5. '   ' → logprob: -12.002589225769043
    6. '[in' → logprob: -13.252589225769043
    7. '	initialize' → logprob: -13.252589225769043
    8. '.initialize' → logprob: -15.002589225769043
    9. '_initialize' → logprob: -15.877589225769043
    10. 'initialized' → logprob: -16.25259017944336

Token 291: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00015812745550647378
    2. 'dist' → logprob: -9.000158309936523
    3. '_' → logprob: -10.500158309936523
    4. '(dist' → logprob: -12.250158309936523
    5. '(' → logprob: -14.375158309936523
    6. '(node' → logprob: -14.500158309936523
    7. 's' → logprob: -15.000158309936523
    8. '_(' → logprob: -15.125158309936523
    9. '```' → logprob: -16.125158309936523
    10. '_d' → logprob: -16.375158309936523

Token 292: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0013499957276508212
    2. '(dist' → logprob: -6.876349925994873
    3. 'dist' → logprob: -8.626350402832031
    4. '_dist' → logprob: -10.251350402832031
    5. 'aces' → logprob: -10.876350402832031
    6. 'ces' → logprob: -11.001350402832031
    7. 'ist' → logprob: -11.126350402832031
    8. '(graph' → logprob: -11.251350402832031
    9. '(' → logprob: -11.376350402832031
    10. 'es' → logprob: -11.876350402832031

Token 293: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.747814349073451e-05
    2. '(' → logprob: -11.125017166137695
    3. 'node' → logprob: -14.125017166137695
    4. '(
' → logprob: -14.250017166137695
    5. '((' → logprob: -15.000017166137695
    6. ' (' → logprob: -15.125017166137695
    7. '=node' → logprob: -15.500017166137695
    8. '(n' → logprob: -15.625017166137695
    9. '[node' → logprob: -15.750017166137695
    10. '(graph' → logprob: -16.375017166137695

Token 294: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.4121114822482923e-06
    2. 'count' → logprob: -12.750003814697266
    3. '_counts' → logprob: -15.375003814697266
    4. 'ount' → logprob: -16.000003814697266
    5. '_COUNT' → logprob: -16.500003814697266
    6. 's' → logprob: -16.750003814697266
    7. '=' → logprob: -18.000003814697266
    8. '
' → logprob: -18.625003814697266
    9. '_' → logprob: -18.875003814697266
    10. '_c' → logprob: -19.000003814697266

Token 295: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18499408662319183
    2. ',' → logprob: -2.0599939823150635
    3. ' +' → logprob: -3.1849939823150635
    4. ' ,' → logprob: -10.434993743896484
    5. ',
' → logprob: -11.559993743896484
    6. 'import' → logprob: -12.309993743896484
    7. '   ' → logprob: -12.809993743896484
    8. '+,' → logprob: -12.809993743896484
    9. '```' → logprob: -13.059993743896484
    10. '=' → logprob: -13.434993743896484

Token 296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004900033236481249
    2. '2' → logprob: -7.875490188598633
    3. ' ' → logprob: -9.125490188598633
    4. '   ' → logprob: -14.125490188598633
    5. '
' → logprob: -16.375490188598633
    6. '  ' → logprob: -17.000490188598633
    7. '```' → logprob: -17.250490188598633
    8. '7' → logprob: -17.750490188598633
    9. '

' → logprob: -18.250490188598633
    10. ')' → logprob: -18.687990188598633

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.037835580878891e-05
    2. '2' → logprob: -10.25005054473877
    3. ' ' → logprob: -11.25005054473877
    4. '   ' → logprob: -14.37505054473877
    5. '
' → logprob: -14.50005054473877
    6. '```' → logprob: -15.81255054473877
    7. '7' → logprob: -16.125049591064453
    8. '6' → logprob: -16.500049591064453
    9. '

' → logprob: -16.687549591064453
    10. '１' → logprob: -16.875049591064453

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ' ,' → logprob: -11.750009536743164
    3. ',
' → logprob: -13.250009536743164
    4. '   ' → logprob: -16.250009536743164
    5. ',

' → logprob: -16.625009536743164
    6. '‌,' → logprob: -17.375009536743164
    7. '```' → logprob: -19.000009536743164
    8. ',I' → logprob: -19.375009536743164
    9. ',int' → logprob: -19.500009536743164
    10. 'import' → logprob: -19.500009536743164

Token 299: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.011048289015889168
    2. ' INF' → logprob: -4.511048316955566
    3. '_INF' → logprob: -15.261048316955566
    4. '   ' → logprob: -15.886048316955566
    5. 'inf' → logprob: -17.26104736328125
    6. '-INF' → logprob: -17.26104736328125
    7. 'IN' → logprob: -18.13604736328125
    8. ')' → logprob: -18.13604736328125
    9. ' ' → logprob: -18.76104736328125
    10. 'Inf' → logprob: -19.01104736328125

Token 300: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760798454284668
    2. ')
' → logprob: -0.8260798454284668
    3. '   ' → logprob: -9.451080322265625
    4. ')
' → logprob: -10.576080322265625
    5. ')

' → logprob: -11.076080322265625
    6. ' )
' → logprob: -11.576080322265625
    7. ' )' → logprob: -12.201080322265625
    8. '
' → logprob: -12.326080322265625
    9. ',' → logprob: -14.201080322265625
    10. ' ' → logprob: -14.451080322265625

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11499598622322083
    2. 'queue' → logprob: -2.2399959564208984
    3. ' queue' → logprob: -6.364995956420898
    4. '   ' → logprob: -8.864995956420898
    5. '	queue' → logprob: -8.989995956420898
    6. '```' → logprob: -9.239995956420898
    7. '
' → logprob: -9.864995956420898
    8. '    
' → logprob: -11.114995956420898
    9. '  ' → logprob: -12.739995956420898
    10. '    ' → logprob: -12.864995956420898

Token 302: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.0002214172709500417
    2. '   ' → logprob: -8.875221252441406
    3. ' set' → logprob: -10.000221252441406
    4. 'dist' → logprob: -11.000221252441406
    5. 'start' → logprob: -11.500221252441406
    6. 'queue' → logprob: -11.750221252441406
    7. 'create' → logprob: -15.125221252441406
    8. '  ' → logprob: -15.125221252441406
    9. '	set' → logprob: -15.375221252441406
    10. '
' → logprob: -15.875221252441406

Token 303: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00011415231710998341
    2. 'start' → logprob: -9.125114440917969
    3. 'dist' → logprob: -13.125114440917969
    4. '_dist' → logprob: -13.125114440917969
    5. '_' → logprob: -14.125114440917969
    6. '_distance' → logprob: -15.250114440917969
    7. 'distance' → logprob: -17.37511444091797
    8. '```' → logprob: -17.37511444091797
    9. ' start' → logprob: -17.75011444091797
    10. '(start' → logprob: -17.87511444091797

Token 304: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -3.464347173576243e-05
    2. '_dist' → logprob: -10.50003433227539
    3. 'distance' → logprob: -11.87503433227539
    4. 'dist' → logprob: -17.50003433227539
    5. 'Distance' → logprob: -18.00003433227539
    6. '```' → logprob: -18.12503433227539
    7. '_DISTANCE' → logprob: -18.12503433227539
    8. '_' → logprob: -18.25003433227539
    9. '_start' → logprob: -18.62503433227539
    10. ' distance' → logprob: -19.62503433227539

Token 305: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -5.512236498361744e-07
    2. 'dist' → logprob: -15.375000953674316
    3. '(distance' → logprob: -15.625000953674316
    4. ' (' → logprob: -15.875000953674316
    5. '(' → logprob: -19.75
    6. ' distances' → logprob: -19.75
    7. '	dist' → logprob: -20.125
    8. '(def' → logprob: -20.25
    9. '(
' → logprob: -20.25
    10. '(div' → logprob: -20.5

Token 306: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0005417120410129428
    2. '(dist' → logprob: -8.375541687011719
    3. 'dist' → logprob: -8.875541687011719
    4. '[' → logprob: -9.250541687011719
    5. 'stances' → logprob: -10.625541687011719
    6. '   ' → logprob: -11.000541687011719
    7. '=' → logprob: -12.000541687011719
    8. ',' → logprob: -12.625541687011719
    9. '_dist' → logprob: -12.625541687011719
    10. '(' → logprob: -12.750541687011719

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20862895250320435
    2. '(start' → logprob: -1.9586288928985596
    3. ',start' → logprob: -3.0836288928985596
    4. 'start' → logprob: -6.833629131317139
    5. ' ,' → logprob: -8.33362865447998
    6. ')' → logprob: -10.08362865447998
    7. '(' → logprob: -10.70862865447998
    8. ',
' → logprob: -10.95862865447998
    9. '[start' → logprob: -11.08362865447998
    10. '=start' → logprob: -11.70862865447998

Token 308: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.061968810856342316
    2. ' start' → logprob: -2.8119688034057617
    3. '[start' → logprob: -15.186968803405762
    4. ')' → logprob: -15.186968803405762
    5. '(start' → logprob: -15.311968803405762
    6. ' ' → logprob: -16.061969757080078
    7. '   ' → logprob: -16.561969757080078
    8. '	start' → logprob: -17.061969757080078
    9. '=start' → logprob: -17.061969757080078
    10. '
' → logprob: -17.311969757080078

Token 309: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020333228167146444
    2. '
' → logprob: -6.252033233642578
    3. ')' → logprob: -10.752033233642578
    4. ' queue' → logprob: -10.877033233642578
    5. 'queue' → logprob: -11.127033233642578
    6. '    
' → logprob: -11.127033233642578
    7. '	queue' → logprob: -11.252033233642578
    8. '(queue' → logprob: -11.627033233642578
    9. ',' → logprob: -11.877033233642578
    10. ')
' → logprob: -13.002033233642578

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05854565650224686
    2. 'queue' → logprob: -2.9335455894470215
    3. ' queue' → logprob: -5.6835455894470215
    4. '```' → logprob: -8.68354606628418
    5. '
' → logprob: -9.80854606628418
    6. '	queue' → logprob: -11.30854606628418
    7. '   ' → logprob: -12.05854606628418
    8. '``' → logprob: -12.68354606628418
    9. '    
' → logprob: -12.93354606628418
    10. '  ' → logprob: -13.18354606628418

Token 311: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.005112203303724527
    2. '   ' → logprob: -5.380112171173096
    3. 'priority' → logprob: -8.755112648010254
    4. ' queue' → logprob: -8.880112648010254
    5. '```' → logprob: -8.880112648010254
    6. '
' → logprob: -10.130112648010254
    7. 'pq' → logprob: -12.380112648010254
    8. '``' → logprob: -12.630112648010254
    9. '	queue' → logprob: -13.005112648010254
    10. '    
' → logprob: -13.255112648010254

Token 312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868725001811981
    2. '=' → logprob: -1.1368725299835205
    3. '=create' → logprob: -14.636872291564941
    4. ',' → logprob: -15.011872291564941
    5. '＝' → logprob: -15.761872291564941
    6. '=[]' → logprob: -16.136873245239258
    7. ')' → logprob: -16.511873245239258
    8. '   ' → logprob: -16.636873245239258
    9. '  ' → logprob: -17.011873245239258
    10. '=
' → logprob: -17.261873245239258

Token 313: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.05569600686430931
    2. ' create' → logprob: -3.3056960105895996
    3. '[(' → logprob: -4.0556960105896
    4. ' [(' → logprob: -8.680695533752441
    5. '(create' → logprob: -13.180695533752441
    6. '   ' → logprob: -13.805695533752441
    7. '.create' → logprob: -13.805695533752441
    8. '```' → logprob: -14.430695533752441
    9. '	create' → logprob: -14.555695533752441
    10. '=create' → logprob: -15.055695533752441

Token 314: '_priority' (ID: 93448)
  Prédit: '_priority'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_priority' → logprob: -0.001330360071733594
    2. 'priority' → logprob: -6.626330375671387
    3. '_' → logprob: -13.126330375671387
    4. '_prior' → logprob: -14.126330375671387
    5. '[(' → logprob: -14.626330375671387
    6. ' priority' → logprob: -15.376330375671387
    7. '_PRIORITY' → logprob: -15.501330375671387
    8. 'Priority' → logprob: -15.626330375671387
    9. 'riority' → logprob: -15.626330375671387
    10. '```' → logprob: -15.626330375671387

Token 315: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -8.65707261255011e-06
    2. 'queue' → logprob: -12.125008583068848
    3. 'Queue' → logprob: -14.000008583068848
    4. '_' → logprob: -14.750008583068848
    5. ' queue' → logprob: -14.750008583068848
    6. '```' → logprob: -15.000008583068848
    7. '[(' → logprob: -15.125008583068848
    8. '(queue' → logprob: -15.750008583068848
    9. '(' → logprob: -15.875008583068848
    10. '_QUEUE' → logprob: -16.125009536743164

Token 316: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -8.08944896562025e-05
    2. '(' → logprob: -9.625081062316895
    3. 'start' → logprob: -11.625081062316895
    4. ' (' → logprob: -12.250081062316895
    5. '(
' → logprob: -15.125081062316895
    6. '(end' → logprob: -15.125081062316895
    7. ',start' → logprob: -15.500081062316895
    8. '[start' → logprob: -16.250080108642578
    9. '((' → logprob: -16.500080108642578
    10. ' start' → logprob: -16.875080108642578

Token 317: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014358828775584698
    2. ')
' → logprob: -8.875144004821777
    3. ' )' → logprob: -13.000144004821777
    4. '   ' → logprob: -14.125144004821777
    5. ')

' → logprob: -15.125144004821777
    6. ',' → logprob: -15.875144004821777
    7. ')
' → logprob: -16.75014305114746
    8. ' ' → logprob: -16.75014305114746
    9. '
' → logprob: -17.00014305114746
    10. '))' → logprob: -17.00014305114746

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3140990436077118
    2. '	while' → logprob: -1.9390990734100342
    3. 'while' → logprob: -2.814099073410034
    4. '
' → logprob: -3.314099073410034
    5. ' while' → logprob: -3.689099073410034
    6. '    
' → logprob: -5.814098834991455
    7. '```' → logprob: -7.189098834991455
    8. '	
' → logprob: -8.064099311828613
    9. '<|end|>' → logprob: -9.689099311828613
    10. '  
' → logprob: -10.064099311828613

Token 319: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.020642559975385666
    2. '   ' → logprob: -4.1456427574157715
    3. ' while' → logprob: -5.6456427574157715
    4. '
' → logprob: -7.0206427574157715
    5. '	while' → logprob: -9.020642280578613
    6. '```' → logprob: -10.395642280578613
    7. '    
' → logprob: -11.270642280578613
    8. '  ' → logprob: -13.395642280578613
    9. 'he' → logprob: -13.895642280578613
    10. 'While' → logprob: -14.020642280578613

Token 320: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.386879563331604
    2. 'queue' → logprob: -1.136879563331604
    3. '(queue' → logprob: -12.011879920959473
    4. '	queue' → logprob: -13.011879920959473
    5. 'que' → logprob: -16.636878967285156
    6. ' len' → logprob: -16.886878967285156
    7. ' que' → logprob: -17.011878967285156
    8. 'len' → logprob: -17.011878967285156
    9. '.queue' → logprob: -17.136878967285156
    10. ' ' → logprob: -17.636878967285156

Token 321: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010784220648929477
    2. ':
' → logprob: -6.8760786056518555
    3. '):' → logprob: -10.751078605651855
    4. ' and' → logprob: -10.876078605651855
    5. 'and' → logprob: -13.001078605651855
    6. '):
' → logprob: -14.376078605651855
    7. ',' → logprob: -14.626078605651855
    8. ':
' → logprob: -14.751078605651855
    9. ':**' → logprob: -15.126078605651855
    10. ':not' → logprob: -15.126078605651855

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056831445544958115
    2. ',' → logprob: -2.9318313598632812
    3. '(dist' → logprob: -7.306831359863281
    4. ' (' → logprob: -7.806831359863281
    5. 'dist' → logprob: -8.431831359863281
    6. ' ,' → logprob: -8.431831359863281
    7. '(' → logprob: -9.181831359863281
    8. '   ' → logprob: -9.306831359863281
    9. ',(' → logprob: -9.806831359863281
    10. ' dist' → logprob: -10.181831359863281

Token 323: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.10444360971450806
    2. ' dist' → logprob: -2.3544435501098633
    3. '       ' → logprob: -5.604443550109863
    4. '(dist' → logprob: -9.104443550109863
    5. '_dist' → logprob: -9.479443550109863
    6. 'current' → logprob: -9.479443550109863
    7. '           ' → logprob: -9.604443550109863
    8. '```' → logprob: -9.729443550109863
    9. ' current' → logprob: -9.979443550109863
    10. '	dist' → logprob: -10.104443550109863

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011129142512800172
    2. ',current' → logprob: -9.12511157989502
    3. ' ,' → logprob: -13.62511157989502
    4. ',
' → logprob: -15.25011157989502
    5. '‌,' → logprob: -15.25011157989502
    6. 'current' → logprob: -15.75011157989502
    7. ',node' → logprob: -15.87511157989502
    8. ',c' → logprob: -16.375110626220703
    9. ',next' → logprob: -17.250110626220703
    10. '<|end|>' → logprob: -17.500110626220703

Token 325: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.014164102263748646
    2. ' current' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.389163970947266
    4. 'node' → logprob: -15.764163970947266
    5. '
' → logprob: -16.139163970947266
    6. '	current' → logprob: -17.014163970947266
    7. 'curr' → logprob: -17.264163970947266
    8. 'cur' → logprob: -17.639163970947266
    9. 'u' → logprob: -18.014163970947266
    10. '$current' → logprob: -18.889163970947266

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489379167556763
    2. '=' → logprob: -2.929893732070923
    3. '   ' → logprob: -11.679893493652344
    4. ')' → logprob: -13.054893493652344
    5. '	' → logprob: -15.179893493652344
    6. ')=' → logprob: -15.804893493652344
    7. ' =
' → logprob: -16.054893493652344
    8. ',' → logprob: -16.304893493652344
    9. ' ' → logprob: -16.429893493652344
    10. '       ' → logprob: -16.804893493652344

Token 327: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.011048054322600365
    2. ' he' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.26104736328125
    4. 'heap' → logprob: -16.51104736328125
    5. '
' → logprob: -18.13604736328125
    6. '.he' → logprob: -18.51104736328125
    7. ' ' → logprob: -18.76104736328125
    8. '    ' → logprob: -19.01104736328125
    9. '_he' → logprob: -19.38604736328125
    10. '  ' → logprob: -19.88604736328125

Token 328: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.0206720617134124e-05
    2. 'pp' → logprob: -11.87501049041748
    3. ' app' → logprob: -12.87501049041748
    4. 'ap' → logprob: -15.75001049041748
    5. 'p' → logprob: -15.87501049041748
    6. 'a' → logprob: -16.500009536743164
    7. '```' → logprob: -16.750009536743164
    8. '[' → logprob: -17.000009536743164
    9. '
' → logprob: -17.375009536743164
    10. '   ' → logprob: -17.500009536743164

Token 329: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -2.339278580620885e-06
    2. 'pop' → logprob: -13.750001907348633
    3. 'p' → logprob: -14.250001907348633
    4. '   ' → logprob: -15.875001907348633
    5. 'o' → logprob: -16.000001907348633
    6. 'оп' → logprob: -16.000001907348633
    7. 'ush' → logprob: -16.750001907348633
    8. '```' → logprob: -17.000001907348633
    9. ' op' → logprob: -17.250001907348633
    10. '[' → logprob: -17.625001907348633

Token 330: '(queue' (ID: 72316)
  Prédit: '(queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -1.1398757123970427e-05
    2. '(' → logprob: -11.625011444091797
    3. 'queue' → logprob: -13.000011444091797
    4. ' queue' → logprob: -16.625011444091797
    5. '	queue' → logprob: -17.500011444091797
    6. ' (' → logprob: -17.500011444091797
    7. '(
' → logprob: -17.750011444091797
    8. '(query' → logprob: -17.875011444091797
    9. '```' → logprob: -18.750011444091797
    10. ')' → logprob: -19.250011444091797

Token 331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019517067121341825
    2. ')
' → logprob: -6.251951694488525
    3. '       ' → logprob: -10.876952171325684
    4. ')

' → logprob: -13.876952171325684
    5. ')
' → logprob: -14.001952171325684
    6. '   ' → logprob: -14.126952171325684
    7. ' )' → logprob: -14.501952171325684
    8. '<|end|>' → logprob: -15.251952171325684
    9. '),' → logprob: -15.501952171325684
    10. '):
' → logprob: -15.626952171325684

Token 332: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.005151391029358
    2. '       ' → logprob: -1.255151391029358
    3. '<|end|>' → logprob: -1.255151391029358
    4. ' if' → logprob: -3.3801512718200684
    5. '   ' → logprob: -4.505151271820068
    6. '  
' → logprob: -5.005151271820068
    7. ' 
' → logprob: -5.380151271820068
    8. '        
' → logprob: -6.255151271820068
    9. '    
' → logprob: -6.880151271820068
    10. ' ' → logprob: -7.130151271820068

Token 333: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6351476311683655
    2. ' if' → logprob: -0.8851476311683655
    3. '       ' → logprob: -2.8851475715637207
    4. '
' → logprob: -6.760147571563721
    5. '   ' → logprob: -8.635148048400879
    6. '        
' → logprob: -8.885148048400879
    7. ' 
' → logprob: -9.635148048400879
    8. '	if' → logprob: -9.760148048400879
    9. '        ' → logprob: -11.385148048400879
    10. '    ' → logprob: -12.135148048400879

Token 334: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.1605546474456787
    2. ' should' → logprob: -1.9105546474456787
    3. '   ' → logprob: -8.160554885864258
    4. ' not' → logprob: -10.160554885864258
    5. 'not' → logprob: -12.910554885864258
    6. ' distances' → logprob: -13.535554885864258
    7. '_should' → logprob: -14.410554885864258
    8. '.should' → logprob: -14.535554885864258
    9. '    ' → logprob: -14.785554885864258
    10. '
' → logprob: -15.160554885864258

Token 335: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -8.77627644513268e-06
    2. 'continue' → logprob: -12.000008583068848
    3. 'Continue' → logprob: -13.875008583068848
    4. '_return' → logprob: -14.875008583068848
    5. '_cont' → logprob: -15.125008583068848
    6. '_' → logprob: -15.375008583068848
    7. '_not' → logprob: -15.875008583068848
    8. '_should' → logprob: -15.875008583068848
    9. 'not' → logprob: -16.125009536743164
    10. ' continue' → logprob: -16.125009536743164

Token 336: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.00018387178715784103
    2. '(' → logprob: -8.875184059143066
    3. ' (' → logprob: -10.250184059143066
    4. '(distance' → logprob: -12.625184059143066
    5. ' distances' → logprob: -12.875184059143066
    6. 'dist' → logprob: -13.000184059143066
    7. '```' → logprob: -16.00018310546875
    8. ')' → logprob: -16.12518310546875
    9. '(
' → logprob: -16.25018310546875
    10. '(dis' → logprob: -16.50018310546875

Token 337: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.002601460786536336
    2. ',' → logprob: -6.002601623535156
    3. 's' → logprob: -9.752601623535156
    4. '```' → logprob: -11.002601623535156
    5. '   ' → logprob: -11.502601623535156
    6. '>' → logprob: -11.627601623535156
    7. 'ANCES' → logprob: -12.252601623535156
    8. '[' → logprob: -12.752601623535156
    9. 'anc' → logprob: -12.752601623535156
    10. ' ,' → logprob: -12.752601623535156

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07503319531679153
    2. '[current' → logprob: -2.825033187866211
    3. ',current' → logprob: -4.450033187866211
    4. '[' → logprob: -7.450033187866211
    5. ' ,' → logprob: -7.700033187866211
    6. ',
' → logprob: -8.950033187866211
    7. '```' → logprob: -10.575033187866211
    8. '   ' → logprob: -10.825033187866211
    9. ',[' → logprob: -10.950033187866211
    10. ')' → logprob: -10.950033187866211

Token 339: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.008616581559181213
    2. ' current' → logprob: -4.7586164474487305
    3. '
' → logprob: -13.50861644744873
    4. '	current' → logprob: -15.50861644744873
    5. 'urrent' → logprob: -16.258617401123047
    6. '   ' → logprob: -16.258617401123047
    7. '[current' → logprob: -16.508617401123047
    8. '(current' → logprob: -16.508617401123047
    9. '
' → logprob: -17.133617401123047
    10. ',current' → logprob: -17.258617401123047

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2603901015827432e-05
    2. ' ,' → logprob: -10.750022888183594
    3. ',
' → logprob: -13.875022888183594
    4. ',

' → logprob: -17.000022888183594
    5. ')' → logprob: -17.125022888183594
    6. ',d' → logprob: -17.250022888183594
    7. '_,' → logprob: -18.375022888183594
    8. 'dist' → logprob: -19.000022888183594
    9. ' ' → logprob: -19.000022888183594
    10. '>' → logprob: -19.125022888183594

Token 341: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0002613358374219388
    2. ' dist' → logprob: -8.250261306762695
    3. '	dist' → logprob: -17.500261306762695
    4. '(dist' → logprob: -19.250261306762695
    5. '   ' → logprob: -19.750261306762695
    6. '
' → logprob: -19.750261306762695
    7. '```' → logprob: -19.875261306762695
    8. 'Dist' → logprob: -20.875261306762695
    9. 'dis' → logprob: -21.000261306762695
    10. '_dist' → logprob: -21.250261306762695

Token 342: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31191980838775635
    2. ':' → logprob: -1.5619198083877563
    3. '):
' → logprob: -3.061919689178467
    4. '       ' → logprob: -5.061919689178467
    5. ':
' → logprob: -5.561919689178467
    6. '   ' → logprob: -7.811919689178467
    7. '           ' → logprob: -8.061920166015625
    8. ')' → logprob: -8.061920166015625
    9. '==' → logprob: -9.061920166015625
    10. 'continue' → logprob: -10.936920166015625

Token 343: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07129961997270584
    2. ' continue' → logprob: -3.3212995529174805
    3. 'continue' → logprob: -3.4462995529174805
    4. '       ' → logprob: -7.3212995529174805
    5. '	continue' → logprob: -9.57129955291748
    6. '		' → logprob: -10.07129955291748
    7. '_continue' → logprob: -10.57129955291748
    8. '```' → logprob: -11.19629955291748
    9. '	       ' → logprob: -11.44629955291748
    10. '               ' → logprob: -11.94629955291748

Token 344: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.02657313644886017
    2. '           ' → logprob: -4.276573181152344
    3. '       ' → logprob: -4.526573181152344
    4. ' continue' → logprob: -6.901573181152344
    5. '               ' → logprob: -7.901573181152344
    6. '   ' → logprob: -9.526573181152344
    7. '	continue' → logprob: -10.526573181152344
    8. '_continue' → logprob: -10.651573181152344
    9. '```' → logprob: -11.276573181152344
    10. 'contin' → logprob: -14.151573181152344

Token 345: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005524366861209273
    2. '<|end|>' → logprob: -7.875552654266357
    3. '        
' → logprob: -9.0005521774292
    4. '        ' → logprob: -11.0005521774292
    5. ' for' → logprob: -11.7505521774292
    6. ',' → logprob: -12.0005521774292
    7. '      ' → logprob: -12.3755521774292
    8. 'for' → logprob: -12.6255521774292
    9. '   ' → logprob: -13.1255521774292
    10. '<|end|>' → logprob: -13.3755521774292

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.244413766078651e-05
    2. '<|end|>' → logprob: -10.500082015991211
    3. '        
' → logprob: -10.750082015991211
    4. 'for' → logprob: -11.250082015991211
    5. 'process' → logprob: -12.125082015991211
    6. '   ' → logprob: -12.125082015991211
    7. ' for' → logprob: -12.625082015991211
    8. '      ' → logprob: -13.750082015991211
    9. '        ' → logprob: -14.000082015991211
    10. '           ' → logprob: -14.375082015991211

Token 347: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.07283850759267807
    2. ' process' → logprob: -3.447838544845581
    3. '       ' → logprob: -3.572838544845581
    4. '   ' → logprob: -4.572838306427002
    5. '        
' → logprob: -11.57283878326416
    6. '	process' → logprob: -11.57283878326416
    7. '
' → logprob: -11.94783878326416
    8. '.process' → logprob: -13.94783878326416
    9. '    
' → logprob: -14.69783878326416
    10. '(process' → logprob: -14.82283878326416

Token 348: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.00011021859245374799
    2. 'neighbors' → logprob: -9.125110626220703
    3. '_' → logprob: -14.875110626220703
    4. '_ne' → logprob: -14.875110626220703
    5. '```' → logprob: -15.250110626220703
    6. '(graph' → logprob: -15.375110626220703
    7. '_nodes' → logprob: -17.250110626220703
    8. 's' → logprob: -17.750110626220703
    9. 'Neighbors' → logprob: -17.875110626220703
    10. '(' → logprob: -18.250110626220703

Token 349: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. ' (' → logprob: -16.750003814697266
    4. 'graph' → logprob: -17.500003814697266
    5. '(grammar' → logprob: -17.875003814697266
    6. '(gr' → logprob: -18.000003814697266
    7. '(Graph' → logprob: -18.000003814697266
    8. '(game' → logprob: -18.375003814697266
    9. '(
' → logprob: -18.375003814697266
    10. '```' → logprob: -19.500003814697266

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001426346570951864
    2. ' ,' → logprob: -8.875143051147461
    3. ',
' → logprob: -13.000143051147461
    4. '(dist' → logprob: -16.12514305114746
    5. ',d' → logprob: -16.37514305114746
    6. ')' → logprob: -16.37514305114746
    7. '```' → logprob: -17.37514305114746
    8. '
' → logprob: -17.62514305114746
    9. '),' → logprob: -17.62514305114746
    10. '[' → logprob: -17.62514305114746

Token 351: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.003181994194164872
    2. ' distances' → logprob: -5.7531819343566895
    3. ' dist' → logprob: -13.128182411193848
    4. 'distance' → logprob: -14.003182411193848
    5. '.dist' → logprob: -14.753182411193848
    6. '	dist' → logprob: -15.003182411193848
    7. '(dist' → logprob: -15.128182411193848
    8. '_dist' → logprob: -15.628182411193848
    9. '
' → logprob: -16.37818145751953
    10. '   ' → logprob: -16.50318145751953

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008267794037237763
    2. ',current' → logprob: -7.125826835632324
    3. ' ,' → logprob: -11.250826835632324
    4. 'current' → logprob: -12.375826835632324
    5. ',
' → logprob: -12.875826835632324
    6. ' current' → logprob: -13.625826835632324
    7. '[current' → logprob: -14.000826835632324
    8. '```' → logprob: -15.500826835632324
    9. '   ' → logprob: -15.875826835632324
    10. '(current' → logprob: -16.125825881958008

Token 353: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.002476016292348504
    2. ' queue' → logprob: -6.002476215362549
    3. '   ' → logprob: -16.75247573852539
    4. 'current' → logprob: -16.75247573852539
    5. '	queue' → logprob: -17.00247573852539
    6. ' ' → logprob: -17.12747573852539
    7. '
' → logprob: -17.25247573852539
    8. 'que' → logprob: -17.50247573852539
    9. '(queue' → logprob: -18.37747573852539
    10. '```' → logprob: -18.50247573852539

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006083175539970398
    2. ',current' → logprob: -7.500608444213867
    3. 'current' → logprob: -10.125608444213867
    4. ' ,' → logprob: -11.375608444213867
    5. ' current' → logprob: -12.875608444213867
    6. ',
' → logprob: -14.000608444213867
    7. '(current' → logprob: -15.375608444213867
    8. '[current' → logprob: -15.375608444213867
    9. '   ' → logprob: -16.625608444213867
    10. 'Current' → logprob: -17.125608444213867

Token 355: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00861468818038702
    2. ' current' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.508615493774414
    4. '
' → logprob: -17.258615493774414
    5. '[current' → logprob: -17.508615493774414
    6. '(current' → logprob: -17.883615493774414
    7. '	current' → logprob: -18.008615493774414
    8. '$current' → logprob: -18.633615493774414
    9. '```' → logprob: -18.883615493774414
    10. 'urrent' → logprob: -19.008615493774414

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012475410767365247
    2. ' ,' → logprob: -9.00012493133545
    3. ',
' → logprob: -14.12512493133545
    4. ',d' → logprob: -15.62512493133545
    5. '```' → logprob: -15.75012493133545
    6. '   ' → logprob: -16.250123977661133
    7. 'dist' → logprob: -16.875123977661133
    8. '`,' → logprob: -18.625123977661133
    9. ')' → logprob: -18.625123977661133
    10. ' ' → logprob: -19.125123977661133

Token 357: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0019287518225610256
    2. ' dist' → logprob: -6.251928806304932
    3. '	dist' → logprob: -16.501928329467773
    4. '   ' → logprob: -16.876928329467773
    5. '(dist' → logprob: -18.751928329467773
    6. ' ' → logprob: -19.126928329467773
    7. 'd' → logprob: -19.251928329467773
    8. 'Dist' → logprob: -19.501928329467773
    9. '```' → logprob: -19.626928329467773
    10. '_dist' → logprob: -20.001928329467773

Token 358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00588566018268466
    2. ')
' → logprob: -5.255885601043701
    3. '   ' → logprob: -7.630885601043701
    4. ')return' → logprob: -8.75588607788086
    5. ')

' → logprob: -12.38088607788086
    6. ' )' → logprob: -13.25588607788086
    7. '
' → logprob: -14.25588607788086
    8. ')
' → logprob: -14.50588607788086
    9. '<|end|>' → logprob: -15.00588607788086
    10. 'return' → logprob: -15.50588607788086

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004305500478949398
    2. 'return' → logprob: -7.875430583953857
    3. ' return' → logprob: -10.0004301071167
    4. '<|end|>' → logprob: -12.7504301071167
    5. '	return' → logprob: -14.2504301071167
    6. '       ' → logprob: -14.7504301071167
    7. '  ' → logprob: -15.8754301071167
    8. '{return' → logprob: -15.8754301071167
    9. ':return' → logprob: -16.000431060791016
    10. '[' → logprob: -16.125431060791016

Token 360: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2531004846096039
    2. '   ' → logprob: -1.5031005144119263
    3. ' return' → logprob: -6.753100395202637
    4. '	return' → logprob: -13.253100395202637
    5. ' ' → logprob: -14.128100395202637
    6. '  ' → logprob: -15.128100395202637
    7. 'def' → logprob: -15.503100395202637
    8. '```' → logprob: -16.503101348876953
    9. '<|end|>' → logprob: -16.628101348876953
    10. '       ' → logprob: -17.003101348876953

Token 361: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00071553117595613
    2. ' distances' → logprob: -7.250715732574463
    3. ' dist' → logprob: -12.500715255737305
    4. '(dist' → logprob: -13.375715255737305
    5. '	dist' → logprob: -15.125715255737305
    6. '_dist' → logprob: -16.750715255737305
    7. 'distance' → logprob: -17.000715255737305
    8. '   ' → logprob: -17.750715255737305
    9. '.dist' → logprob: -18.375715255737305
    10. '[' → logprob: -18.875715255737305

Token 362: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6375402212142944
    2. '<|end|>' → logprob: -0.7625402212142944
    3. '```' → logprob: -5.512540340423584
    4. '#' → logprob: -8.012539863586426
    5. '<|end|>' → logprob: -8.637539863586426
    6. '
' → logprob: -8.887539863586426
    7. ')' → logprob: -9.762539863586426
    8. 'graph' → logprob: -10.262539863586426
    9. 'import' → logprob: -10.387539863586426
    10. '[' → logprob: -11.012539863586426

Token 363: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09646399319171906
    2. '<|end|>' → logprob: -2.846463918685913
    3. '```' → logprob: -4.096464157104492
    4. '#' → logprob: -4.096464157104492
    5. ')' → logprob: -8.221464157104492
    6. '[' → logprob: -9.846464157104492
    7. '<|end|>' → logprob: -9.971464157104492
    8. '[]' → logprob: -10.221464157104492
    9. '(' → logprob: -10.471464157104492
    10. '0' → logprob: -10.846464157104492

Token 364: ' sort' (ID: 4506)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04992914944887161
    2. ' main' → logprob: -3.049929141998291
    3. 'find' → logprob: -7.174929141998291
    4. 'b' → logprob: -8.17492961883545
    5. ' find' → logprob: -9.17492961883545
    6. 'solve' → logprob: -9.54992961883545
    7. 'count' → logprob: -10.42492961883545
    8. 'read' → logprob: -10.54992961883545
    9. ' bfs' → logprob: -10.67492961883545
    10. ' solve' → logprob: -11.54992961883545

Token 365: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.8262292146682739
    2. '(dist' → logprob: -1.576229214668274
    3. 'def' → logprob: -2.0762290954589844
    4. '_nodes' → logprob: -2.4512290954589844
    5. 'dist' → logprob: -2.8262290954589844
    6. '(' → logprob: -3.5762290954589844
    7. '_' → logprob: -4.201229095458984
    8. '_edges' → logprob: -5.076229095458984
    9. '(nodes' → logprob: -5.076229095458984
    10. '_neighbors' → logprob: -5.076229095458984

Token 366: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -6.098748053773306e-05
    2. 'ance' → logprob: -9.75006103515625
    3. '   ' → logprob: -14.50006103515625
    4. 'ancies' → logprob: -14.75006103515625
    5. '```' → logprob: -14.87506103515625
    6. 'anc' → logprob: -15.00006103515625
    7. 'ANCES' → logprob: -15.37506103515625
    8. '(' → logprob: -15.50006103515625
    9. 'aces' → logprob: -16.50006103515625
    10. '_' → logprob: -16.62506103515625

Token 367: '_with' (ID: 14161)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0002631238894537091
    2. '(' → logprob: -8.500263214111328
    3. '(distance' → logprob: -10.250263214111328
    4. '(def' → logprob: -12.000263214111328
    5. '(d' → logprob: -12.000263214111328
    6. '(lst' → logprob: -13.000263214111328
    7. '(sorted' → logprob: -13.125263214111328
    8. '(div' → logprob: -13.500263214111328
    9. ' (' → logprob: -13.750263214111328
    10. '():' → logprob: -13.875263214111328

Token 368: '_indices' (ID: 43508)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.0461690425872803
    2. 'indices' → logprob: -1.0461690425872803
    3. 'enumer' → logprob: -1.6711690425872803
    4. 'indexes' → logprob: -2.2961690425872803
    5. '_indices' → logprob: -5.546169281005859
    6. 'original' → logprob: -6.796169281005859
    7. '_indexes' → logprob: -7.296169281005859
    8. 'range' → logprob: -7.296169281005859
    9. '_index' → logprob: -7.796169281005859
    10. 'count' → logprob: -7.921169281005859

Token 369: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.004558173008263111
    2. '(arr' → logprob: -5.504558086395264
    3. '(lst' → logprob: -8.504558563232422
    4. '(distance' → logprob: -8.504558563232422
    5. '(' → logprob: -10.254558563232422
    6. '(array' → logprob: -11.004558563232422
    7. '(d' → logprob: -11.504558563232422
    8. '(data' → logprob: -13.004558563232422
    9. '(def' → logprob: -13.504558563232422
    10. '(list' → logprob: -13.504558563232422

Token 370: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -1.3782830137643032e-05
    2. ')' → logprob: -12.00001335144043
    3. ',' → logprob: -12.87501335144043
    4. '   ' → logprob: -13.50001335144043
    5. '=' → logprob: -14.00001335144043
    6. '```' → logprob: -14.25001335144043
    7. 'ance' → logprob: -14.37501335144043
    8. ' =' → logprob: -14.75001335144043
    9. 'ANCES' → logprob: -14.75001335144043
    10. 'aces' → logprob: -15.75001335144043

Token 371: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06203076243400574
    2. '):
' → logprob: -2.812030792236328
    3. ')' → logprob: -10.437030792236328
    4. '):
' → logprob: -10.687030792236328
    5. ' ):' → logprob: -11.937030792236328
    6. '):

' → logprob: -13.312030792236328
    7. '   ' → logprob: -13.687030792236328
    8. ',' → logprob: -14.562030792236328
    9. '():' → logprob: -15.437030792236328
    10. ' ):
' → logprob: -15.437030792236328

Token 372: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4782828688621521
    2. '   ' → logprob: -0.9782828688621521
    3. ' return' → logprob: -5.478282928466797
    4. 'def' → logprob: -11.353282928466797
    5. 'sorted' → logprob: -12.478282928466797
    6. '	return' → logprob: -13.603282928466797
    7. 'enumer' → logprob: -13.728282928466797
    8. '  ' → logprob: -13.728282928466797
    9. '    ' → logprob: -14.728282928466797
    10. 'indexed' → logprob: -14.728282928466797

Token 373: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001985140610486269
    2. '   ' → logprob: -6.7519850730896
    3. ' return' → logprob: -7.2519850730896
    4. 'indexed' → logprob: -9.376985549926758
    5. 'enumer' → logprob: -11.126985549926758
    6. 'def' → logprob: -12.751985549926758
    7. 'sorted' → logprob: -12.876985549926758
    8. ' indexed' → logprob: -14.876985549926758
    9. 'dist' → logprob: -15.376985549926758
    10. '
' → logprob: -15.876985549926758

Token 374: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0007879483746364713
    2. ' sorted' → logprob: -7.250787734985352
    3. 'list' → logprob: -9.500787734985352
    4. '[(' → logprob: -13.375787734985352
    5. 'enumer' → logprob: -14.250787734985352
    6. '(sorted' → logprob: -14.250787734985352
    7. '   ' → logprob: -15.625787734985352
    8. ' list' → logprob: -16.12578773498535
    9. '[' → logprob: -17.00078773498535
    10. '.sorted' → logprob: -18.00078773498535

Token 375: '([(' (ID: 156282)
  Prédit: '(en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(en' → logprob: -0.21894875168800354
    2. '((' → logprob: -2.2189488410949707
    3. '([(' → logprob: -2.4689488410949707
    4. '(' → logprob: -6.093948841094971
    5. '(((' → logprob: -7.218948841094971
    6. '(
' → logprob: -8.718948364257812
    7. 'enumer' → logprob: -10.343948364257812
    8. '[(' → logprob: -10.718948364257812
    9. '(zip' → logprob: -11.093948364257812
    10. '(range' → logprob: -11.843948364257812

Token 376: 'x' (ID: 87)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12230881303548813
    2. 'd' → logprob: -2.2473087310791016
    3. 'i' → logprob: -4.997308731079102
    4. 'distance' → logprob: -6.622308731079102
    5. 'idx' → logprob: -6.747308731079102
    6. 'index' → logprob: -8.747308731079102
    7. ' dist' → logprob: -11.372308731079102
    8. '
' → logprob: -12.872308731079102
    9. 'value' → logprob: -13.997308731079102
    10. '-dist' → logprob: -14.247308731079102

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4743053615093231
    2. ',i' → logprob: -0.9743053913116455
    3. 'i' → logprob: -9.349305152893066
    4. ',index' → logprob: -9.349305152893066
    5. '[i' → logprob: -10.849305152893066
    6. ' ,' → logprob: -10.974305152893066
    7. 'idx' → logprob: -11.849305152893066
    8. '[' → logprob: -12.724305152893066
    9. 'x' → logprob: -13.724305152893066
    10. ' i' → logprob: -14.099305152893066

Token 378: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00028016636497341096
    2. 'idx' → logprob: -8.250280380249023
    3. ' i' → logprob: -11.000280380249023
    4. 'index' → logprob: -14.125280380249023
    5. '
' → logprob: -14.625280380249023
    6. ')i' → logprob: -15.500280380249023
    7. '-i' → logprob: -15.750280380249023
    8. ' idx' → logprob: -15.750280380249023
    9. '```' → logprob: -16.125280380249023
    10. ')' → logprob: -16.250280380249023

Token 379: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.849109119386412e-06
    2. 'ex' → logprob: -12.500009536743164
    3. ')
' → logprob: -12.625009536743164
    4. ' )' → logprob: -13.125009536743164
    5. ')]' → logprob: -15.000009536743164
    6. 'x' → logprob: -15.875009536743164
    7. 'dx' → logprob: -16.625009536743164
    8. ',' → logprob: -16.875009536743164
    9. ',)' → logprob: -16.875009536743164
    10. '
' → logprob: -17.375009536743164

Token 380: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04923204332590103
    2. 'for' → logprob: -3.049232006072998
    3. ')' → logprob: -7.674232006072998
    4. ',' → logprob: -9.049232482910156
    5. ' in' → logprob: -10.424232482910156
    6. '   ' → logprob: -10.549232482910156
    7. ' ' → logprob: -12.674232482910156
    8. '
' → logprob: -13.799232482910156
    9. '    ' → logprob: -14.424232482910156
    10. 'in' → logprob: -14.674232482910156

Token 381: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014164221473038197
    2. ' i' → logprob: -4.264164447784424
    3. ',' → logprob: -15.264163970947266
    4. '(i' → logprob: -15.639163970947266
    5. ' ' → logprob: -16.264163970947266
    6. '	i' → logprob: -16.514163970947266
    7. ' (' → logprob: -16.639163970947266
    8. '  ' → logprob: -17.639163970947266
    9. ',i' → logprob: -17.639163970947266
    10. '
' → logprob: -17.764163970947266

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019788339268416166
    2. 'in' → logprob: -6.751978874206543
    3. ',x' → logprob: -7.751978874206543
    4. ' in' → logprob: -8.001978874206543
    5. ' ,' → logprob: -10.376978874206543
    6. ',
' → logprob: -12.751978874206543
    7. '<|end|>' → logprob: -12.751978874206543
    8. ',in' → logprob: -13.876978874206543
    9. ',n' → logprob: -14.126978874206543
    10. ',e' → logprob: -14.376978874206543

Token 383: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00043353010551072657
    2. ' x' → logprob: -7.750433444976807
    3. 'enumer' → logprob: -12.875433921813965
    4. '(x' → logprob: -16.25043296813965
    5. ' enumerate' → logprob: -17.00043296813965
    6. ',x' → logprob: -17.25043296813965
    7. ' in' → logprob: -17.87543296813965
    8. 'in' → logprob: -18.00043296813965
    9. ',' → logprob: -18.12543296813965
    10. '
' → logprob: -18.62543296813965

Token 384: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38687965273857117
    2. ' in' → logprob: -1.1368796825408936
    3. ',' → logprob: -12.886879920959473
    4. 'import' → logprob: -13.136879920959473
    5. ')' → logprob: -13.636879920959473
    6. ' ' → logprob: -14.386879920959473
    7. 'enumer' → logprob: -14.511879920959473
    8. 'inthe' → logprob: -15.136879920959473
    9. '<|end|>' → logprob: -15.136879920959473
    10. '
' → logprob: -15.636879920959473

Token 385: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00317783304490149
    2. ' enumerate' → logprob: -5.753177642822266
    3. '```' → logprob: -16.378177642822266
    4. 'enum' → logprob: -17.128177642822266
    5. '
' → logprob: -17.253177642822266
    6. 'en' → logprob: -17.878177642822266
    7. 'enqueue' → logprob: -19.128177642822266
    8. 'in' → logprob: -19.753177642822266
    9. 'range' → logprob: -20.128177642822266
    10. '

' → logprob: -20.253177642822266

Token 386: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -6.153795766294934e-06
    2. 'dist' → logprob: -12.125005722045898
    3. '(distance' → logprob: -15.250005722045898
    4. '(en' → logprob: -15.875005722045898
    5. '(' → logprob: -16.0000057220459
    6. ' (' → logprob: -17.1250057220459
    7. '	dist' → logprob: -17.1250057220459
    8. '(d' → logprob: -17.2500057220459
    9. ' distances' → logprob: -18.3750057220459
    10. '(
' → logprob: -19.2500057220459

Token 387: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0004963174578733742
    2. 'es' → logprob: -7.6254963874816895
    3. '(' → logprob: -13.125495910644531
    4. 's' → logprob: -13.500495910644531
    5. 'aces' → logprob: -13.500495910644531
    6. '(dist' → logprob: -13.625495910644531
    7. 'ces' → logprob: -14.250495910644531
    8. 'stances' → logprob: -14.625495910644531
    9. 'ues' → logprob: -15.500495910644531
    10. ')' → logprob: -15.875495910644531

Token 388: ')],' (ID: 60559)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.4910569190979004
    2. ')' → logprob: -0.9910569190979004
    3. ' if' → logprob: -4.2410569190979
    4. ')],' → logprob: -6.3660569190979
    5. ')]' → logprob: -8.241056442260742
    6. 'if' → logprob: -8.616056442260742
    7. ' )' → logprob: -8.741056442260742
    8. '])' → logprob: -10.116056442260742
    9. '   ' → logprob: -11.116056442260742
    10. ')])
' → logprob: -11.241056442260742

Token 389: ' reverse' (ID: 18199)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.006773634348064661
    2. ' key' → logprob: -5.006773471832275
    3. 'reverse' → logprob: -10.006773948669434
    4. '1' → logprob: -11.256773948669434
    5. ' reverse' → logprob: -16.506772994995117
    6. '(key' → logprob: -17.006772994995117
    7. '   ' → logprob: -18.131772994995117
    8. 'lambda' → logprob: -18.131772994995117
    9. '	key' → logprob: -18.131772994995117
    10. '
' → logprob: -18.506772994995117

Token 390: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0007179115782491863
    2. '=' → logprob: -7.250718116760254
    3. '(True' → logprob: -13.000718116760254
    4. '=lambda' → logprob: -13.000718116760254
    5. '=False' → logprob: -13.500718116760254
    6. '())' → logprob: -14.500718116760254
    7. '()' → logprob: -14.500718116760254
    8. '=(' → logprob: -14.625718116760254
    9. '(' → logprob: -15.250718116760254
    10. '(),' → logprob: -16.000717163085938

Token 391: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.500000953674316
    4. '))' → logprob: -15.500000953674316
    5. '   ' → logprob: -16.5
    6. '())' → logprob: -17.875
    7. ')}' → logprob: -18.375
    8. '),' → logprob: -18.75
    9. ')return' → logprob: -19.25
    10. ' ' → logprob: -19.25

Token 392: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.036065541207790375
    2. '<|end|>' → logprob: -3.5360655784606934
    3. '```' → logprob: -5.661065578460693
    4. '#' → logprob: -7.161065578460693
    5. '[' → logprob: -7.911065578460693
    6. '<|end|>' → logprob: -8.036065101623535
    7. '(' → logprob: -8.286065101623535
    8. '
' → logprob: -8.411065101623535
    9. 'for' → logprob: -8.536065101623535
    10. 'data' → logprob: -9.161065101623535

Token 393: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5373718738555908
    2. 'def' → logprob: -1.4123718738555908
    3. 'find' → logprob: -2.287371873855591
    4. 'read' → logprob: -2.912371873855591
    5. 'max' → logprob: -5.412371635437012
    6. 'calculate' → logprob: -5.912371635437012
    7. 'get' → logprob: -6.287371635437012
    8. 'process' → logprob: -7.037371635437012
    9. ' main' → logprob: -7.037371635437012
    10. 'count' → logprob: -7.162371635437012

Token 394: '_second' (ID: 67724)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.24439509212970734
    2. 'max' → logprob: -1.869395136833191
    3. '_long' → logprob: -4.2443952560424805
    4. '_m' → logprob: -4.4943952560424805
    5. '_best' → logprob: -4.9943952560424805
    6. '_top' → logprob: -5.2443952560424805
    7. '_sorted' → logprob: -5.3693952560424805
    8. 'def' → logprob: -5.3693952560424805
    9. '_dist' → logprob: -6.1193952560424805
    10. '_start' → logprob: -6.3693952560424805

Token 395: '_far' (ID: 170374)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.42181915044784546
    2. '_l' → logprob: -1.1718192100524902
    3. '_long' → logprob: -4.54681921005249
    4. '_m' → logprob: -5.17181921005249
    5. '_' → logprob: -5.79681921005249
    6. '_f' → logprob: -5.79681921005249
    7. '_min' → logprob: -5.79681921005249
    8. 'max' → logprob: -5.92181921005249
    9. '_best' → logprob: -6.04681921005249
    10. '_short' → logprob: -6.92181921005249

Token 396: '_node' (ID: 11390)
  Prédit: 'thest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'thest' → logprob: -0.367695152759552
    2. 'est' → logprob: -1.2426950931549072
    3. 'test' → logprob: -4.742695331573486
    4. 'gest' → logprob: -5.117695331573486
    5. '```' → logprob: -5.992695331573486
    6. 'th' → logprob: -7.742695331573486
    7. '   ' → logprob: -8.492694854736328
    8. 'dest' → logprob: -8.617694854736328
    9. '
' → logprob: -8.992694854736328
    10. 'mest' → logprob: -9.117694854736328

Token 397: '(sorted' (ID: 92488)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.005160462576895952
    2. '(' → logprob: -5.505160331726074
    3. '(distance' → logprob: -7.380160331726074
    4. '(def' → logprob: -8.630160331726074
    5. '():' → logprob: -8.755160331726074
    6. ' (' → logprob: -10.005160331726074
    7. '(depth' → logprob: -11.005160331726074
    8. '(sorted' → logprob: -11.255160331726074
    9. '(indices' → logprob: -11.755160331726074
    10. '(dis' → logprob: -12.005160331726074

Token 398: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.04314282909035683
    2. '_' → logprob: -4.543142795562744
    3. '(dist' → logprob: -4.793142795562744
    4. '_nodes' → logprob: -5.043142795562744
    5. ')_' → logprob: -5.293142795562744
    6. '(_' → logprob: -5.418142795562744
    7. '(' → logprob: -6.293142795562744
    8. ')' → logprob: -6.543142795562744
    9. 'dist' → logprob: -6.668142795562744
    10. '_)' → logprob: -7.668142795562744

Token 399: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -4.0484450437361374e-05
    2. 'ance' → logprob: -11.250040054321289
    3. '[' → logprob: -12.125040054321289
    4. 'es' → logprob: -12.625040054321289
    5. 'aces' → logprob: -13.000040054321289
    6. 'ces' → logprob: -13.000040054321289
    7. 'ices' → logprob: -13.125040054321289
    8. '_list' → logprob: -13.250040054321289
    9. '
' → logprob: -13.375040054321289
    10. '```' → logprob: -13.375040054321289

Token 400: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2053624391555786
    2. '):
' → logprob: -1.7053624391555786
    3. '(dist' → logprob: -5.830362319946289
    4. '):
' → logprob: -7.830362319946289
    5. ' ):' → logprob: -8.455362319946289
    6. ',' → logprob: -9.205362319946289
    7. ')' → logprob: -9.455362319946289
    8. '):

' → logprob: -9.705362319946289
    9. '(sorted' → logprob: -10.205362319946289
    10. ' ):
' → logprob: -10.455362319946289

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002098752884194255
    2. 'return' → logprob: -6.252098560333252
    3. '_,' → logprob: -9.37709903717041
    4. ' return' → logprob: -9.87709903717041
    5. '```' → logprob: -11.12709903717041
    6. '    
' → logprob: -12.75209903717041
    7. 'for' → logprob: -13.12709903717041
    8. '`' → logprob: -13.25209903717041
    9. '
' → logprob: -13.37709903717041
    10. 'sorted' → logprob: -13.50209903717041

Token 402: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.021818026900291443
    2. '   ' → logprob: -4.021818161010742
    3. 'for' → logprob: -5.896818161010742
    4. '_,' → logprob: -7.896818161010742
    5. '
' → logprob: -8.021818161010742
    6. ' return' → logprob: -9.271818161010742
    7. 'if' → logprob: -9.896818161010742
    8. 'second' → logprob: -11.146818161010742
    9. '```' → logprob: -11.146818161010742
    10. '    
' → logprob: -11.646818161010742

Token 403: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.16022737324237823
    2. 'sorted' → logprob: -1.9102274179458618
    3. '(sorted' → logprob: -12.78522777557373
    4. '.sorted' → logprob: -15.66022777557373
    5. '   ' → logprob: -16.410226821899414
    6. '_sorted' → logprob: -16.410226821899414
    7. ' None' → logprob: -17.035226821899414
    8. ' next' → logprob: -17.410226821899414
    9. 'next' → logprob: -18.410226821899414
    10. 'orted' → logprob: -18.660226821899414

Token 404: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0001422770437784493
    2. 'dist' → logprob: -9.000142097473145
    3. '[' → logprob: -11.250142097473145
    4. '[-' → logprob: -12.500142097473145
    5. '_' → logprob: -14.250142097473145
    6. '[_' → logprob: -14.500142097473145
    7. '	dist' → logprob: -15.250142097473145
    8. '```' → logprob: -15.375142097473145
    9. '_distance' → logprob: -16.25014305114746
    10. '.dist' → logprob: -16.37514305114746

Token 405: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0007442336063832045
    2. 'es' → logprob: -8.250743865966797
    3. 'ist' → logprob: -8.875743865966797
    4. '_dist' → logprob: -9.125743865966797
    5. 'ates' → logprob: -9.375743865966797
    6. '[' → logprob: -9.500743865966797
    7. 'dist' → logprob: -9.750743865966797
    8. 'est' → logprob: -12.250743865966797
    9. 'aces' → logprob: -13.125743865966797
    10. ' distances' → logprob: -13.375743865966797

Token 406: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.8087270038668066e-05
    2. '1' → logprob: -10.625027656555176
    3. '```' → logprob: -14.000027656555176
    4. '
' → logprob: -14.250027656555176
    5. '2' → logprob: -14.375027656555176
    6. ' [' → logprob: -14.500027656555176
    7. '[-' → logprob: -15.000027656555176
    8. 'def' → logprob: -15.125027656555176
    9. '[
' → logprob: -15.500027656555176
    10. '\[' → logprob: -16.875028610229492

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. '0' → logprob: -12.50001049041748
    3. ' ' → logprob: -13.12501049041748
    4. '2' → logprob: -13.25001049041748
    5. '
' → logprob: -13.87501049041748
    6. '-' → logprob: -14.25001049041748
    7. '[' → logprob: -14.81251049041748
    8. '```' → logprob: -15.62501049041748
    9. '   ' → logprob: -16.187509536743164
    10. '...' → logprob: -16.250009536743164

Token 408: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.0629870858974755e-05
    2. ']' → logprob: -9.75006103515625
    3. '[' → logprob: -13.50006103515625
    4. ' ][' → logprob: -14.50006103515625
    5. '][-' → logprob: -15.75006103515625
    6. ']][' → logprob: -17.12506103515625
    7. ']
' → logprob: -17.62506103515625
    8. '()][' → logprob: -17.75006103515625
    9. '1' → logprob: -18.00006103515625
    10. ')][' → logprob: -18.00006103515625

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -14.000001907348633
    3. '
' → logprob: -14.500001907348633
    4. '```' → logprob: -16.750001907348633
    5. '::-' → logprob: -17.125001907348633
    6. 'index' → logprob: -17.625001907348633
    7. ' ' → logprob: -17.875001907348633
    8. '

' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.187501907348633
    10. 'i' → logprob: -18.312501907348633

Token 410: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.751746746478602e-05
    2. '}' → logprob: -10.50004768371582
    3. ']' → logprob: -11.00004768371582
    4. ' )' → logprob: -13.62504768371582
    5. '<|end|>' → logprob: -13.75004768371582
    6. ')]' → logprob: -15.12504768371582
    7. ')}' → logprob: -15.37504768371582
    8. ')
' → logprob: -15.50004768371582
    9. '）' → logprob: -16.00004768371582
    10. '))' → logprob: -17.25004768371582

Token 411: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00046391604701057076
    2. '<|end|>' → logprob: -7.875463962554932
    3. '#' → logprob: -10.000463485717773
    4. '```' → logprob: -10.875463485717773
    5. 'start' → logprob: -12.375463485717773
    6. '<|end|>' → logprob: -12.750463485717773
    7. 'print' → logprob: -12.750463485717773
    8. '
' → logprob: -13.125463485717773
    9. ')' → logprob: -13.750463485717773
    10. 'graph' → logprob: -14.000463485717773

Token 412: ' find' (ID: 1646)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19399891793727875
    2. 'main' → logprob: -1.94399893283844
    3. ' find' → logprob: -4.31899881362915
    4. 'def' → logprob: -4.81899881362915
    5. ' read' → logprob: -5.81899881362915
    6. ' def' → logprob: -6.19399881362915
    7. 'read' → logprob: -6.44399881362915
    8. 'find' → logprob: -6.56899881362915
    9. ' get' → logprob: -6.69399881362915
    10. ' d' → logprob: -6.94399881362915

Token 413: '_d' (ID: 1565)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.32456737756729126
    2. '_long' → logprob: -1.9495673179626465
    3. '_second' → logprob: -3.3245673179626465
    4. '_best' → logprob: -3.4495673179626465
    5. '_max' → logprob: -3.5745673179626465
    6. '_start' → logprob: -4.6995673179626465
    7. '_d' → logprob: -5.0745673179626465
    8. '_' → logprob: -5.0745673179626465
    9. '_m' → logprob: -5.3245673179626465
    10. '_far' → logprob: -6.0745673179626465

Token 414: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.16611695289611816
    2. 'iam' → logprob: -2.166116952896118
    3. 'istance' → logprob: -4.291116714477539
    4. 'ist' → logprob: -4.666116714477539
    5. 'e' → logprob: -5.291116714477539
    6. 'eep' → logprob: -5.666116714477539
    7. 'ef' → logprob: -6.416116714477539
    8. 'iamond' → logprob: -6.916116714477539
    9. 'i' → logprob: -7.291116714477539
    10. 'ijkstra' → logprob: -7.291116714477539

Token 415: '(dist' (ID: 78981)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.002381238155066967
    2. '(node' → logprob: -7.002381324768066
    3. ' (' → logprob: -7.377381324768066
    4. '(' → logprob: -7.752381324768066
    5. '(Graph' → logprob: -9.377381324768066
    6. '(nodes' → logprob: -9.752381324768066
    7. '(tree' → logprob: -9.752381324768066
    8. '_(' → logprob: -10.127381324768066
    9. 'def' → logprob: -10.252381324768066
    10. '```' → logprob: -10.877381324768066

Token 416: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0009393315413035452
    2. 'ance' → logprob: -7.00093936920166
    3. ')' → logprob: -11.00093936920166
    4. 'graph' → logprob: -12.62593936920166
    5. '_graph' → logprob: -13.00093936920166
    6. '(graph' → logprob: -13.12593936920166
    7. '```' → logprob: -13.87593936920166
    8. 'ANCES' → logprob: -14.62593936920166
    9. 'def' → logprob: -14.75093936920166
    10. 'ancies' → logprob: -15.37593936920166

Token 417: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008434568881057203
    2. '):
' → logprob: -7.125843524932861
    3. ')' → logprob: -10.250843048095703
    4. ' ):' → logprob: -13.375843048095703
    5. ',' → logprob: -13.625843048095703
    6. '):
' → logprob: -14.750843048095703
    7. '):

' → logprob: -15.625843048095703
    8. ':' → logprob: -16.625843048095703
    9. '   ' → logprob: -16.625843048095703
    10. '[]):' → logprob: -17.000843048095703

Token 418: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4287055432796478
    2. '   ' → logprob: -1.4287055730819702
    3. 'max' → logprob: -2.5537054538726807
    4. ' return' → logprob: -3.9287054538726807
    5. 'dist' → logprob: -5.55370569229126
    6. 'def' → logprob: -5.67870569229126
    7. 'sorted' → logprob: -6.30370569229126
    8. ' max' → logprob: -6.92870569229126
    9. '```' → logprob: -7.17870569229126
    10. 'distance' → logprob: -8.928705215454102

Token 419: ' return' (ID: 622)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4759577512741089
    2. 'return' (adapté à ' return') → logprob: -0.9759577512741089
    3. 'dist' → logprob: -6.975957870483398
    4. '   ' → logprob: -7.850957870483398
    5. 'maximum' → logprob: -8.225957870483398
    6. 'sorted' → logprob: -8.975957870483398
    7. 'def' → logprob: -9.725957870483398
    8. ' max' → logprob: -10.350957870483398
    9. ' return' → logprob: -10.475957870483398
    10. 'distance' → logprob: -10.725957870483398

Token 420: ' max' (ID: 2999)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00938793271780014
    2. ' distances' → logprob: -5.134387969970703
    3. 'max' → logprob: -5.884387969970703
    4. ' dist' → logprob: -7.634387969970703
    5. ' max' → logprob: -8.884387969970703
    6. 'sorted' → logprob: -11.259387969970703
    7. 'distance' → logprob: -11.634387969970703
    8. '_dist' → logprob: -11.884387969970703
    9. '(dist' → logprob: -12.384387969970703
    10. 'next' → logprob: -12.759387969970703

Token 421: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0005863950937055051
    2. 'dist' → logprob: -7.50058650970459
    3. '([' → logprob: -11.00058650970459
    4. '(distance' → logprob: -11.37558650970459
    5. '(d' → logprob: -13.12558650970459
    6. '((' → logprob: -13.37558650970459
    7. '([(' → logprob: -14.12558650970459
    8. '(' → logprob: -15.25058650970459
    9. '_dist' → logprob: -15.50058650970459
    10. '(x' → logprob: -16.250585556030273

Token 422: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -1.688212614681106e-05
    2. 's' → logprob: -11.375017166137695
    3. '(dist' → logprob: -13.875017166137695
    4. 'dist' → logprob: -14.000017166137695
    5. 'ist' → logprob: -14.625017166137695
    6. 'anc' → logprob: -14.625017166137695
    7. 'ANCES' → logprob: -14.750017166137695
    8. '[' → logprob: -14.750017166137695
    9. ')' → logprob: -14.875017166137695
    10. '_dist' → logprob: -14.875017166137695

Token 423: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.849109119386412e-06
    2. '[' → logprob: -12.375009536743164
    3. ')-' → logprob: -13.125009536743164
    4. ' )' → logprob: -13.250009536743164
    5. ')
' → logprob: -13.750009536743164
    6. '<|end|>' → logprob: -14.875009536743164
    7. 'def' → logprob: -16.250009536743164
    8. '())' → logprob: -16.500009536743164
    9. '))' → logprob: -16.500009536743164
    10. '),' → logprob: -17.000009536743164

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07498056441545486
    2. '])' → logprob: -2.6999804973602295
    3. ')' → logprob: -5.449980735778809
    4. ':' → logprob: -7.824980735778809
    5. '2' → logprob: -8.949980735778809
    6. '])-' → logprob: -9.699980735778809
    7. '[' → logprob: -10.199980735778809
    8. ':-' → logprob: -11.324980735778809
    9. '),' → logprob: -11.449980735778809
    10. ' ' → logprob: -11.574980735778809

Token 425: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22006641328334808
    2. ')' → logprob: -1.7200664281845093
    3. '[' → logprob: -4.595066547393799
    4. ':)' → logprob: -4.970066547393799
    5. '])' → logprob: -6.845066547393799
    6. '),' → logprob: -9.09506607055664
    7. ')])' → logprob: -9.22006607055664
    8. ':])
' → logprob: -10.22006607055664
    9. ':]' → logprob: -10.34506607055664
    10. ':],' → logprob: -10.84506607055664

Token 426: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00021796036162413657
    2. ')' → logprob: -8.500218391418457
    3. ' ])' → logprob: -11.500218391418457
    4. '])
' → logprob: -13.375218391418457
    5. ']' → logprob: -14.125218391418457
    6. ')])' → logprob: -14.375218391418457
    7. '],' → logprob: -14.875218391418457
    8. ']))' → logprob: -16.12521743774414
    9. '])]' → logprob: -16.12521743774414
    10. '))' → logprob: -16.12521743774414

Token 427: ' +' (ID: 659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014220185112208128
    2. '<|end|>' → logprob: -6.876421928405762
    3. '```' → logprob: -8.376421928405762
    4. '#' → logprob: -9.001421928405762
    5. '
' → logprob: -11.626421928405762
    6. 'if' → logprob: -11.626421928405762
    7. ')' → logprob: -12.126421928405762
    8. '<|end|>' → logprob: -12.876421928405762
    9. '.' → logprob: -13.251421928405762
    10. ' def' → logprob: -13.876421928405762

Token 428: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02633211947977543
    2. ' ' → logprob: -3.651332139968872
    3. '2' → logprob: -11.776331901550293
    4. '0' → logprob: -11.776331901550293
    5. 'max' → logprob: -12.401331901550293
    6. ' max' → logprob: -12.651331901550293
    7. '-' → logprob: -12.776331901550293
    8. ' -' → logprob: -13.401331901550293
    9. '  ' → logprob: -13.651331901550293
    10. ' ' → logprob: -13.901331901550293

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020051265601068735
    2. 'max' → logprob: -6.252005100250244
    3. '0' → logprob: -11.002005577087402
    4. '10' → logprob: -11.127005577087402
    5. ' ' → logprob: -11.377005577087402
    6. '2' → logprob: -11.627005577087402
    7. '-' → logprob: -12.127005577087402
    8. '5' → logprob: -12.252005577087402
    9. '(max' → logprob: -12.377005577087402
    10. '(' → logprob: -12.752005577087402

Token 430: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000591278774663806
    2. '<|end|>' → logprob: -7.500591278076172
    3. '```' → logprob: -11.000591278076172
    4. '#' → logprob: -11.375591278076172
    5. '
' → logprob: -12.500591278076172
    6. 'if' → logprob: -12.875591278076172
    7. '<|end|>' → logprob: -13.625591278076172
    8. 'ndef' → logprob: -14.625591278076172
    9. 'import' → logprob: -14.625591278076172
    10. ')' → logprob: -15.000591278076172

Token 431: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001557355048134923
    2. '#' → logprob: -7.126557350158691
    3. '<|end|>' → logprob: -7.751557350158691
    4. 'if' → logprob: -8.751557350158691
    5. '```' → logprob: -9.251557350158691
    6. 'graph' → logprob: -10.501557350158691
    7. 'import' → logprob: -11.376557350158691
    8. 'node' → logprob: -12.126557350158691
    9. '...' → logprob: -12.626557350158691
    10. 'print' → logprob: -12.626557350158691

Token 432: ' calculate' (ID: 17950)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.9914539456367493
    2. ' main' → logprob: -1.2414538860321045
    3. 'def' → logprob: -1.6164538860321045
    4. 'find' → logprob: -2.7414538860321045
    5. ' find' → logprob: -2.9914538860321045
    6. ' def' → logprob: -4.616454124450684
    7. 'read' → logprob: -5.366454124450684
    8. 'b' → logprob: -6.116454124450684
    9. 'calculate' → logprob: -6.116454124450684
    10. ' bfs' → logprob: -6.741454124450684

Token 433: '_bl' (ID: 25835)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.5550336241722107
    2. 'diam' → logprob: -0.9300336241722107
    3. '_max' → logprob: -4.6800336837768555
    4. 'max' → logprob: -5.0550336837768555
    5. '_tree' → logprob: -5.5550336837768555
    6. 'd' → logprob: -6.4300336837768555
    7. '_distance' → logprob: -6.9300336837768555
    8. '_graph' → logprob: -7.1800336837768555
    9. 'tree' → logprob: -7.1800336837768555
    10. 'graph' → logprob: -7.3050336837768555

Token 434: '(d' (ID: 2572)
  Prédit: 'oom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oom' → logprob: -0.6644658446311951
    2. 'ack' → logprob: -1.0394659042358398
    3. 'ength' → logprob: -3.53946590423584
    4. 'en' → logprob: -3.66446590423584
    5. 'ock' → logprob: -3.91446590423584
    6. 'end' → logprob: -4.28946590423584
    7. 'ur' → logprob: -4.66446590423584
    8. 'oad' → logprob: -5.16446590423584
    9. 'def' → logprob: -6.03946590423584
    10. 'e' → logprob: -6.16446590423584

Token 435: 'iameter' (ID: 157684)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.06438181549310684
    2. '(dist' → logprob: -3.5643818378448486
    3. 'dist' → logprob: -3.9393818378448486
    4. ')' → logprob: -5.3143815994262695
    5. '):' → logprob: -5.5643815994262695
    6. 'istance' → logprob: -6.5643815994262695
    7. '_dist' → logprob: -6.6893815994262695
    8. '(' → logprob: -6.6893815994262695
    9. 'ists' → logprob: -7.6893815994262695
    10. ',' → logprob: -8.06438159942627

Token 436: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5798118114471436
    2. '):' → logprob: -0.8298118114471436
    3. '):
' → logprob: -5.829812049865723
    4. ')' → logprob: -7.454812049865723
    5. ' ,' → logprob: -9.829812049865723
    6. ' ):' → logprob: -9.829812049865723
    7. '_' → logprob: -10.329812049865723
    8. ',
' → logprob: -10.579812049865723
    9. ',d' → logprob: -10.579812049865723
    10. '_,' → logprob: -10.954812049865723

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18016453087329865
    2. ' return' → logprob: -1.9301645755767822
    3. ' =' → logprob: -4.930164337158203
    4. 'return' → logprob: -5.055164337158203
    5. '=' → logprob: -5.680164337158203
    6. ' diameter' → logprob: -7.180164337158203
    7. ' ' → logprob: -8.180164337158203
    8. 'bl' → logprob: -8.180164337158203
    9. ' /' → logprob: -8.680164337158203
    10. 'def' → logprob: -8.805164337158203

Token 438: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08786583691835403
    2. ' return' → logprob: -3.0878658294677734
    3. '   ' → logprob: -3.5878658294677734
    4. 'diam' → logprob: -5.212865829467773
    5. '(d' → logprob: -5.712865829467773
    6. ' (' → logprob: -7.212865829467773
    7. 'bl' → logprob: -7.462865829467773
    8. '(bl' → logprob: -8.337865829467773
    9. ' diameter' → logprob: -9.337865829467773
    10. 'def' → logprob: -9.837865829467773

Token 439: ' diameter' (ID: 32514)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.6137337684631348
    2. 'diam' → logprob: -0.8637337684631348
    3. ' diameter' → logprob: -4.238733768463135
    4. ' (' → logprob: -4.238733768463135
    5. '(' → logprob: -5.488733768463135
    6. '(max' → logprob: -7.613733768463135
    7. '1' → logprob: -7.738733768463135
    8. '(int' → logprob: -7.988733768463135
    9. '2' → logprob: -7.988733768463135
    10. '((' → logprob: -8.176233291625977

Token 440: ' %' (ID: 1851)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1911765336990356
    2. ' +' → logprob: -1.3161765336990356
    3. ' *' → logprob: -2.066176414489746
    4. ' //' → logprob: -2.441176414489746
    5. '<|end|>' → logprob: -2.941176414489746
    6. '()' → logprob: -3.191176414489746
    7. '
' → logprob: -3.441176414489746
    8. ' -' → logprob: -3.816176414489746
    9. '+' → logprob: -3.941176414489746
    10. '*' → logprob: -4.441176414489746

Token 441: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001023162854835391
    2. '3' → logprob: -7.751023292541504
    3. '10' → logprob: -8.376023292541504
    4. '(' → logprob: -9.126023292541504
    5. '100' → logprob: -9.501023292541504
    6. ' ' → logprob: -10.126023292541504
    7. '998' → logprob: -10.251023292541504
    8. '4' → logprob: -10.376023292541504
    9. '1' → logprob: -11.001023292541504
    10. '7' → logprob: -11.376023292541504

Token 442: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00028815300902351737
    2. '3' → logprob: -9.250288009643555
    3. '(' → logprob: -9.875288009643555
    4. '10' → logprob: -10.000288009643555
    5. '100' → logprob: -10.125288009643555
    6. '1' → logprob: -10.750288009643555
    7. '4' → logprob: -11.250288009643555
    8. '
' → logprob: -13.000288009643555
    9. '998' → logprob: -13.000288009643555
    10. 'k' → logprob: -13.125288009643555

Token 443: ' !=' (ID: 1666)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12908412516117096
    2. '<|end|>' → logprob: -2.1290841102600098
    3. '
' → logprob: -6.62908411026001
    4. '```' → logprob: -7.87908411026001
    5. '#' → logprob: -8.379084587097168
    6. ')' → logprob: -9.254084587097168
    7. '<|end|>' → logprob: -9.629084587097168
    8. '[' → logprob: -11.754084587097168
    9. ' def' → logprob: -11.879084587097168
    10. '

' → logprob: -11.879084587097168

Token 444: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003676324849948287
    2. '1' → logprob: -8.500367164611816
    3. ' ' → logprob: -8.750367164611816
    4. '2' → logprob: -12.375367164611816
    5. '012' → logprob: -14.625367164611816
    6. '=' → logprob: -15.125367164611816
    7. '۰' → logprob: -15.687867164611816
    8. '```' → logprob: -15.875367164611816
    9. '01' → logprob: -16.125368118286133
    10. '
' → logprob: -16.687868118286133

Token 445: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00766364810988307
    2. '1' → logprob: -4.882663726806641
    3. '2' → logprob: -10.13266372680664
    4. ' ' → logprob: -11.63266372680664
    5. '```' → logprob: -11.88266372680664
    6. '
' → logprob: -15.19516372680664
    7. '-' → logprob: -15.44516372680664
    8. '``' → logprob: -15.88266372680664
    9. '۰' → logprob: -16.50766372680664
    10. '０' → logprob: -16.63266372680664

Token 446: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1170390397310257
    2. '<|end|>' → logprob: -2.2420389652252197
    3. '#' → logprob: -6.367039203643799
    4. '```' → logprob: -6.742039203643799
    5. '
' → logprob: -6.992039203643799
    6. '<|end|>' → logprob: -8.86703872680664
    7. ')' → logprob: -8.86703872680664
    8. '%' → logprob: -11.11703872680664
    9. ' def' → logprob: -11.11703872680664
    10. '[' → logprob: -11.24203872680664

Token 447: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012278526090085506
    2. '<|end|>' → logprob: -4.5122785568237305
    3. '#' → logprob: -7.1372785568237305
    4. '<|end|>' → logprob: -9.01227855682373
    5. '
' → logprob: -9.51227855682373
    6. '```' → logprob: -9.51227855682373
    7. ')' → logprob: -9.88727855682373
    8. '.' → logprob: -10.51227855682373
    9. ' def' → logprob: -11.01227855682373
    10. '\n' → logprob: -11.88727855682373

Token 448: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6331884860992432
    2. 'def' → logprob: -1.3831884860992432
    3. 'main' → logprob: -2.258188486099243
    4. ' def' → logprob: -2.383188486099243
    5. ' find' → logprob: -5.258188247680664
    6. ' calculate' → logprob: -5.383188247680664
    7. 'calculate' → logprob: -5.758188247680664
    8. ' solve' → logprob: -6.883188247680664
    9. 'find' → logprob: -7.008188247680664
    10. ' read' → logprob: -7.133188247680664

Token 449: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37439221143722534
    2. '()' → logprob: -1.4993922710418701
    3. '("_' → logprob: -2.99939227104187
    4. '("' → logprob: -4.124392032623291
    5. '("")' → logprob: -4.999392032623291
    6. '_result' → logprob: -5.624392032623291
    7. '('_' → logprob: -6.124392032623291
    8. '('' → logprob: -6.374392032623291
    9. '_results' → logprob: -6.624392032623291
    10. '_' → logprob: -6.624392032623291

Token 450: '(bl' (ID: 110427)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39459216594696045
    2. '(' → logprob: -1.2695921659469604
    3. '("' → logprob: -4.01959228515625
    4. '(bl' → logprob: -4.51959228515625
    5. '('' → logprob: -4.64459228515625
    6. '("("' → logprob: -6.01959228515625
    7. '("")' → logprob: -6.39459228515625
    8. '(()' → logprob: -7.76959228515625
    9. '():' → logprob: -7.76959228515625
    10. '(result' → logprob: -8.14459228515625

Token 451: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04246452450752258
    2. ',' → logprob: -3.4174644947052
    3. '):' → logprob: -4.792464733123779
    4. '):
' → logprob: -8.292464256286621
    5. ')
' → logprob: -9.167464256286621
    6. '(' → logprob: -9.917464256286621
    7. '))' → logprob: -10.792464256286621
    8. ',)' → logprob: -11.417464256286621
    9. ',
' → logprob: -11.792464256286621
    10. '),' → logprob: -12.292464256286621

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19330154359340668
    2. 'print' → logprob: -1.8183015584945679
    3. ' print' → logprob: -4.943301677703857
    4. 'if' → logprob: -5.193301677703857
    5. ' if' → logprob: -7.193301677703857
    6. '```' → logprob: -11.5683012008667
    7. 'def' → logprob: -11.6933012008667
    8. '    
' → logprob: -12.5683012008667
    9. ',' → logprob: -13.3183012008667
    10. '
' → logprob: -13.4433012008667

Token 453: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.698698704596609e-05
    2. 'if' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.375097274780273
    4. ' print' → logprob: -15.125097274780273
    5. '```' → logprob: -19.000097274780273
    6. 'pr' → logprob: -19.750097274780273
    7. ' if' → logprob: -20.250097274780273
    8. '
' → logprob: -20.625097274780273
    9. '    
' → logprob: -20.625097274780273
    10. 'result' → logprob: -21.875097274780273

Token 454: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6385151743888855
    2. '(bl' → logprob: -0.8885151743888855
    3. '('' → logprob: -3.7635152339935303
    4. '(' → logprob: -3.8885152339935303
    5. '(bool' → logprob: -4.763514995574951
    6. '(int' → logprob: -5.263514995574951
    7. '(True' → logprob: -6.763514995574951
    8. 'bl' → logprob: -7.263514995574951
    9. '"' → logprob: -7.638514995574951
    10. 'int' → logprob: -8.13851547241211

Token 455: 'First' (ID: 7127)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5009154677391052
    2. 'A' → logprob: -2.25091552734375
    3. 'Sn' → logprob: -2.50091552734375
    4. 'F' → logprob: -3.00091552734375
    5. 'Bob' → logprob: -3.12591552734375
    6. 'Yes' → logprob: -3.50091552734375
    7. 'First' → logprob: -4.12591552734375
    8. 'Bl' → logprob: -4.37591552734375
    9. 'Second' → logprob: -4.50091552734375
    10. 'No' → logprob: -4.75091552734375

Token 456: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010747362859547138
    2. '')' → logprob: -4.63574743270874
    3. 'Player' → logprob: -7.88574743270874
    4. ' Player' → logprob: -8.010746955871582
    5. 'A' → logprob: -9.510746955871582
    6. ' '' → logprob: -9.760746955871582
    7. '')
' → logprob: -10.635746955871582
    8. '"' → logprob: -10.760746955871582
    9. ''A' → logprob: -10.760746955871582
    10. '\n' → logprob: -11.510746955871582

Token 457: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41360902786254883
    2. ' if' → logprob: -1.2886090278625488
    3. ''' → logprob: -2.788609027862549
    4. ')' → logprob: -6.663609027862549
    5. '"' → logprob: -9.16360855102539
    6. ' '' → logprob: -9.28860855102539
    7. '()' → logprob: -10.53860855102539
    8. ' ' → logprob: -10.66360855102539
    9. 'i' → logprob: -11.28860855102539
    10. '')' → logprob: -12.16360855102539

Token 458: ' bl' (ID: 1162)
  Prédit: ' bl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bl' → logprob: -0.25200319290161133
    2. 'bl' → logprob: -1.5020031929016113
    3. ' not' → logprob: -9.752002716064453
    4. 'not' → logprob: -11.127002716064453
    5. '(bl' → logprob: -13.877002716064453
    6. ' ' → logprob: -16.377002716064453
    7. 'b' → logprob: -16.627002716064453
    8. '_bl' → logprob: -17.127002716064453
    9. ' blo' → logprob: -17.377002716064453
    10. ' ' → logprob: -18.252002716064453

Token 459: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.008615399710834026
    2. 'else' → logprob: -4.758615493774414
    3. '	else' → logprob: -14.883615493774414
    4. ' ' → logprob: -15.008615493774414
    5. '==' → logprob: -16.383615493774414
    6. '    ' → logprob: -17.633615493774414
    7. '```' → logprob: -17.633615493774414
    8. ' els' → logprob: -18.258615493774414
    9. '   ' → logprob: -18.883615493774414
    10. '        ' → logprob: -18.883615493774414

Token 460: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00016992862219922245
    2. ' '' → logprob: -8.87516975402832
    3. '"' → logprob: -11.50016975402832
    4. '   ' → logprob: -12.25016975402832
    5. '
' → logprob: -12.50016975402832
    6. 'Second' → logprob: -12.62516975402832
    7. '('' → logprob: -12.75016975402832
    8. ''S' → logprob: -13.37516975402832
    9. ' Second' → logprob: -14.25016975402832
    10. ' ' → logprob: -14.25016975402832

Token 461: 'Second' (ID: 17422)
  Prédit: 'Second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Second' → logprob: -0.0015286672860383987
    2. ''' → logprob: -6.501528739929199
    3. '"' → logprob: -11.2515287399292
    4. ' Second' → logprob: -11.3765287399292
    5. ''D' → logprob: -14.1265287399292
    6. '_second' → logprob: -15.2515287399292
    7. 'second' → logprob: -15.3765287399292
    8. ''S' → logprob: -15.5015287399292
    9. 'First' → logprob: -15.8765287399292
    10. 'Third' → logprob: -16.501527786254883

Token 462: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00019269285257905722
    2. ')' → logprob: -8.625192642211914
    3. '')
' → logprob: -11.625192642211914
    4. '")' → logprob: -12.875192642211914
    5. 'Second' → logprob: -14.125192642211914
    6. ''' → logprob: -15.125192642211914
    7. '')

' → logprob: -16.125192642211914
    8. 'First' → logprob: -16.375192642211914
    9. '')
' → logprob: -16.375192642211914
    10. ' Second' → logprob: -16.875192642211914

Token 463: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027959682047367096
    2. 'if' → logprob: -6.877796173095703
    3. '```' → logprob: -7.502796173095703
    4. '#' → logprob: -8.002796173095703
    5. 'n' → logprob: -8.002796173095703
    6. 'graph' → logprob: -8.127796173095703
    7. '<|end|>' → logprob: -8.627796173095703
    8. 'import' → logprob: -10.002796173095703
    9. 'node' → logprob: -12.002796173095703
    10. 'u' → logprob: -12.252796173095703

Token 464: ' main' (ID: 2758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7339507341384888
    2. 'main' → logprob: -0.7339507341384888
    3. ' main' → logprob: -3.233950614929199
    4. ' def' → logprob: -7.483950614929199
    5. '__' → logprob: -11.3589506149292
    6. 'solve' → logprob: -13.4839506149292
    7. 'if' → logprob: -13.7339506149292
    8. '
' → logprob: -13.7339506149292
    9. '_main' → logprob: -13.9839506149292
    10. '```' → logprob: -14.4839506149292

Token 465: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.1557283111615106e-05
    2. '():
' → logprob: -10.500041961669922
    3. ' ():' → logprob: -11.250041961669922
    4. '()' → logprob: -14.000041961669922
    5. '():
' → logprob: -16.000041961669922
    6. '(' → logprob: -17.375041961669922
    7. '_' → logprob: -17.875041961669922
    8. '():

' → logprob: -18.750041961669922
    9. 'def' → logprob: -19.125041961669922
    10. ':' → logprob: -19.500041961669922

Token 466: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3927678167819977
    2. '   ' → logprob: -1.6427677869796753
    3. 'node' → logprob: -2.517767906188965
    4. ' n' → logprob: -3.392767906188965
    5. ' node' → logprob: -4.142767906188965
    6. 'N' → logprob: -7.142767906188965
    7. ' N' → logprob: -8.642767906188965
    8. 'import' → logprob: -8.767767906188965
    9. '	n' → logprob: -10.267767906188965
    10. '	node' → logprob: -11.267767906188965

Token 467: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44367435574531555
    2. 'node' → logprob: -1.4436743259429932
    3. 'N' (adapté à ' N') → logprob: -2.943674325942993
    4. '   ' → logprob: -3.068674325942993
    5. ' n' → logprob: -4.443674564361572
    6. ' node' → logprob: -4.693674564361572
    7. ' N' → logprob: -6.568674564361572
    8. 't' → logprob: -7.693674564361572
    9. 'num' → logprob: -9.443674087524414
    10. 'T' → logprob: -9.693674087524414

Token 468: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07019206136465073
    2. ',' → logprob: -2.8201920986175537
    3. '=' → logprob: -4.820191860198975
    4. ' ,' → logprob: -9.695192337036133
    5. '=int' → logprob: -9.820192337036133
    6. ',N' → logprob: -13.195192337036133
    7. ',int' → logprob: -13.195192337036133
    8. '  ' → logprob: -13.320192337036133
    9. ',n' → logprob: -14.070192337036133
    10. ',K' → logprob: -14.445192337036133

Token 469: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.47444841265678406
    2. 'read' → logprob: -0.9744484424591064
    3. ' int' → logprob: -8.474448204040527
    4. 'int' → logprob: -8.724448204040527
    5. '	read' → logprob: -16.724449157714844
    6. '(read' → logprob: -18.349449157714844
    7. ' ' → logprob: -18.599449157714844
    8. '_read' → logprob: -19.099449157714844
    9. '  ' → logprob: -19.974449157714844
    10. '.read' → logprob: -20.599449157714844

Token 470: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -1.6240566083070007e-06
    2. 'int' → logprob: -14.250001907348633
    3. '_input' → logprob: -14.375001907348633
    4. '_in' → logprob: -15.625001907348633
    5. '_line' → logprob: -16.250001907348633
    6. '_' → logprob: -17.625001907348633
    7. '()' → logprob: -18.750001907348633
    8. '_integer' → logprob: -19.125001907348633
    9. '```' → logprob: -19.250001907348633
    10. '_INT' → logprob: -19.375001907348633

Token 471: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0789082944393158
    2. '()
' → logprob: -2.5789082050323486
    3. '()
' → logprob: -10.95390796661377
    4. '()\' → logprob: -14.45390796661377
    5. '()

' → logprob: -15.82890796661377
    6. '())' → logprob: -15.95390796661377
    7. '()<' → logprob: -16.203908920288086
    8. '()`' → logprob: -16.453908920288086
    9. 'def' → logprob: -16.703908920288086
    10. ' ()' → logprob: -17.078908920288086

Token 472: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.049537140876054764
    2. '   ' → logprob: -4.049537181854248
    3. ' graph' → logprob: -4.174537181854248
    4. '	graph' → logprob: -4.174537181854248
    5. '
' → logprob: -9.79953670501709
    6. '(graph' → logprob: -10.79953670501709
    7. '```' → logprob: -11.29953670501709
    8. '    
' → logprob: -11.29953670501709
    9. '_graph' → logprob: -11.67453670501709
    10. '.graph' → logprob: -12.42453670501709

Token 473: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.003683093935251236
    2. ' graph' → logprob: -5.628683090209961
    3. 'edges' → logprob: -10.128683090209961
    4. '   ' → logprob: -10.378683090209961
    5. '	graph' → logprob: -12.378683090209961
    6. 'g' → logprob: -12.628683090209961
    7. ' edges' → logprob: -13.253683090209961
    8. 'G' → logprob: -14.503683090209961
    9. '```' → logprob: -15.253683090209961
    10. 'graphs' → logprob: -15.378683090209961

Token 474: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016036128625273705
    2. '=' → logprob: -4.141036033630371
    3. ',' → logprob: -13.516036033630371
    4. '=create' → logprob: -15.141036033630371
    5. ' ' → logprob: -16.141036987304688
    6. '   ' → logprob: -17.141036987304688
    7. ')' → logprob: -17.516036987304688
    8. ' =
' → logprob: -17.641036987304688
    9. '```' → logprob: -17.766036987304688
    10. '[' → logprob: -18.016036987304688

Token 475: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.07889066636562347
    2. ' create' → logprob: -2.578890562057495
    3. '(create' → logprob: -14.203890800476074
    4. '=create' → logprob: -15.953890800476074
    5. '   ' → logprob: -16.203889846801758
    6. '.create' → logprob: -18.203889846801758
    7. '	create' → logprob: -18.328889846801758
    8. '_create' → logprob: -19.078889846801758
    9. ':create' → logprob: -20.203889846801758
    10. ' ' → logprob: -21.078889846801758

Token 476: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.3306015716807451e-05
    2. '(graph' → logprob: -11.62501335144043
    3. 'graph' → logprob: -12.37501335144043
    4. '_' → logprob: -18.00001335144043
    5. '_GRAPH' → logprob: -18.50001335144043
    6. '_gr' → logprob: -18.87501335144043
    7. '```' → logprob: -19.00001335144043
    8. '(' → logprob: -19.12501335144043
    9. 'Graph' → logprob: -19.12501335144043
    10. '	graph' → logprob: -19.12501335144043

Token 477: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.750003814697266
    3. 'N' → logprob: -13.750003814697266
    4. ' (' → logprob: -17.250003814697266
    5. '((' → logprob: -19.375003814697266
    6. '```' → logprob: -19.750003814697266
    7. '(
' → logprob: -19.875003814697266
    8. '   ' → logprob: -20.250003814697266
    9. '=N' → logprob: -20.625003814697266
    10. '	N' → logprob: -20.750003814697266

Token 478: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10026684403419495
    2. ')
' → logprob: -2.350266933441162
    3. ')
' → logprob: -10.100266456604004
    4. ')

' → logprob: -10.975266456604004
    5. ' )' → logprob: -13.850266456604004
    6. ')`
' → logprob: -15.225266456604004
    7. ' )
' → logprob: -15.350266456604004
    8. '),' → logprob: -16.35026741027832
    9. ')`' → logprob: -16.47526741027832
    10. '   ' → logprob: -16.85026741027832

Token 479: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0023693470284342766
    2. ' for' → logprob: -6.252369403839111
    3. '   ' → logprob: -7.752369403839111
    4. '
' → logprob: -12.002368927001953
    5. '	for' → logprob: -13.002368927001953
    6. '```' → logprob: -13.002368927001953
    7. '    
' → logprob: -15.377368927001953
    8. 'import' → logprob: -18.002368927001953
    9. '  ' → logprob: -18.002368927001953
    10. '<|end|>' → logprob: -18.377368927001953

Token 480: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00030709904967807233
    2. ' for' → logprob: -8.250307083129883
    3. '
' → logprob: -10.000307083129883
    4. '   ' → logprob: -15.500307083129883
    5. '[' → logprob: -16.625307083129883
    6. '```' → logprob: -16.625307083129883
    7. 'import' → logprob: -16.750307083129883
    8. '    
' → logprob: -16.875307083129883
    9. '	for' → logprob: -18.250307083129883
    10. ' 
' → logprob: -18.375307083129883

Token 481: ' read' (ID: 1729)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5044422149658203
    2. 'or' → logprob: -1.6294422149658203
    3. ' for' → logprob: -2.3794422149658203
    4. 'f' → logprob: -2.5044422149658203
    5. ' connect' → logprob: -4.62944221496582
    6. 'connect' → logprob: -5.62944221496582
    7. ' read' → logprob: -6.25444221496582
    8. ' f' → logprob: -6.62944221496582
    9. 'n' → logprob: -6.87944221496582
    10. '
' → logprob: -7.00444221496582

Token 482: '_and' (ID: 18645)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.47671544551849365
    2. '_' → logprob: -1.7267154455184937
    3. '_nodes' → logprob: -2.976715564727783
    4. 'int' → logprob: -3.101715564727783
    5. 'for' → logprob: -3.226715564727783
    6. '_edges' → logprob: -3.351715564727783
    7. '_connections' → logprob: -5.351715564727783
    8. '_lines' → logprob: -5.476715564727783
    9. 'def' → logprob: -5.851715564727783
    10. '()' → logprob: -6.476715564727783

Token 483: '_connect' (ID: 32485)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.00018625585653353482
    2. '_connect' → logprob: -10.1251859664917
    3. 'for' → logprob: -10.3751859664917
    4. '
' → logprob: -10.6251859664917
    5. 'process' → logprob: -10.6251859664917
    6. ' connect' → logprob: -10.7501859664917
    7. 'build' → logprob: -12.0001859664917
    8. 'fill' → logprob: -12.3751859664917
    9. 'write' → logprob: -12.3751859664917
    10. 'def' → logprob: -12.7501859664917

Token 484: '(_' (ID: 4963)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.2631355822086334
    2. '():
' → logprob: -2.3881356716156006
    3. '(N' → logprob: -2.8881356716156006
    4. '()' → logprob: -3.6381356716156006
    5. '():' → logprob: -3.6381356716156006
    6. '()
' → logprob: -5.1381354331970215
    7. '(' → logprob: -5.6381354331970215
    8. '(line' → logprob: -5.7631354331970215
    9. '   ' → logprob: -5.8881354331970215
    10. '_lines' → logprob: -6.1381354331970215

Token 485: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14871230721473694
    2. '):
' → logprob: -2.023712396621704
    3. ':' → logprob: -5.648712158203125
    4. '  ' → logprob: -7.273712158203125
    5. ' ):' → logprob: -7.398712158203125
    6. ' in' → logprob: -8.523712158203125
    7. '():' → logprob: -9.023712158203125
    8. '=' → logprob: -9.273712158203125
    9. 'range' → logprob: -9.273712158203125
    10. ')' → logprob: -9.273712158203125

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03319491818547249
    2. ' u' → logprob: -4.2831950187683105
    3. '   ' → logprob: -4.4081950187683105
    4. 'u' → logprob: -5.5331950187683105
    5. ' for' → logprob: -6.5331950187683105
    6. ',u' → logprob: -8.033194541931152
    7. ',' → logprob: -8.283194541931152
    8. ':' → logprob: -9.283194541931152
    9. '    
' → logprob: -9.408194541931152
    10. '    ' → logprob: -9.658194541931152

Token 487: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.045155253261327744
    2. '   ' → logprob: -3.2951552867889404
    3. 'uv' → logprob: -5.670155048370361
    4. ' u' → logprob: -6.045155048370361
    5. 'a' (adapté à ' a') → logprob: -8.17015552520752
    6. '       ' → logprob: -8.54515552520752
    7. 'line' → logprob: -8.67015552520752
    8. 'uvw' → logprob: -9.04515552520752
    9. '	u' → logprob: -9.54515552520752
    10. 'args' → logprob: -9.67015552520752

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07172589749097824
    2. ',b' → logprob: -2.696725845336914
    3. ',v' → logprob: -6.571725845336914
    4. ' ,' → logprob: -8.946725845336914
    5. 'b' → logprob: -9.196725845336914
    6. ',a' → logprob: -9.696725845336914
    7. ',n' → logprob: -10.446725845336914
    8. ' =' → logprob: -10.696725845336914
    9. '=' → logprob: -11.446725845336914
    10. 'nd' → logprob: -11.571725845336914

Token 489: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1602301150560379
    2. ' b' → logprob: -1.9102301597595215
    3. ' ' → logprob: -12.910229682922363
    4. '=' → logprob: -14.410229682922363
    5. ' =' → logprob: -14.660229682922363
    6. '_' → logprob: -14.660229682922363
    7. ' 
' → logprob: -14.910229682922363
    8. '   ' → logprob: -15.035229682922363
    9. '    ' → logprob: -15.535229682922363
    10. 'a' → logprob: -15.535229682922363

Token 490: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251949280500412
    2. ' =' → logprob: -1.5019493103027344
    3. '   ' → logprob: -11.501949310302734
    4. ',' → logprob: -12.126949310302734
    5. '	' → logprob: -13.251949310302734
    6. '    ' → logprob: -13.876949310302734
    7. ' ' → logprob: -14.626949310302734
    8. '=
' → logprob: -14.876949310302734
    9. '       ' → logprob: -15.376949310302734
    10. '  ' → logprob: -15.376949310302734

Token 491: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.011052536778151989
    2. ' read' → logprob: -4.51105260848999
    3. 'map' → logprob: -12.386052131652832
    4. ' map' → logprob: -14.636052131652832
    5. '	read' → logprob: -16.26105308532715
    6. ' ' → logprob: -17.51105308532715
    7. '   ' → logprob: -18.26105308532715
    8. '  ' → logprob: -18.38605308532715
    9. 'tuple' → logprob: -19.88605308532715
    10. '_read' → logprob: -20.26105308532715

Token 492: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -3.214019307051785e-05
    2. 'int' → logprob: -10.875032424926758
    3. '_input' → logprob: -11.625032424926758
    4. '_' → logprob: -13.000032424926758
    5. '_line' → logprob: -14.375032424926758
    6. '_in' → logprob: -15.750032424926758
    7. '
' → logprob: -15.875032424926758
    8. '_uint' → logprob: -16.000032424926758
    9. 'space' → logprob: -16.250032424926758
    10. '()' → logprob: -16.250032424926758

Token 493: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.10086643695831299
    2. '()' → logprob: -2.3508663177490234
    3. '(),' → logprob: -7.725866317749023
    4. '()
' → logprob: -8.850866317749023
    5. '_' → logprob: -10.350866317749023
    6. 'list' → logprob: -11.350866317749023
    7. '();' → logprob: -12.100866317749023
    8. 'List' → logprob: -12.350866317749023
    9. '_pair' → logprob: -12.350866317749023
    10. '()-' → logprob: -12.725866317749023

Token 494: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4749087691307068
    2. '()
' → logprob: -0.9749087691307068
    3. '();' → logprob: -7.224908828735352
    4. '()
' → logprob: -9.474908828735352
    5. '()

' → logprob: -11.349908828735352
    6. 'def' → logprob: -12.349908828735352
    7. '():
' → logprob: -13.349908828735352
    8. '()`' → logprob: -13.599908828735352
    9. ')' → logprob: -13.724908828735352
    10. '(' → logprob: -13.724908828735352

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2762244641780853
    2. '   ' → logprob: -1.5262244939804077
    3. '	connect' → logprob: -4.276224613189697
    4. 'connect' → logprob: -4.651224613189697
    5. '
' → logprob: -8.526224136352539
    6. ' connect' → logprob: -8.651224136352539
    7. '    
' → logprob: -9.526224136352539
    8. '        
' → logprob: -10.026224136352539
    9. '.connect' → logprob: -11.526224136352539
    10. '(connect' → logprob: -12.026224136352539

Token 496: ' connect' (ID: 4837)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' (adapté à ' connect') → logprob: -0.0016113892197608948
    2. ' connect' → logprob: -6.501611232757568
    3. '   ' → logprob: -9.251611709594727
    4. '	connect' → logprob: -11.501611709594727
    5. '
' → logprob: -13.626611709594727
    6. 'graph' → logprob: -13.876611709594727
    7. '       ' → logprob: -14.501611709594727
    8. '.connect' → logprob: -16.501611709594727
    9. '(connect' → logprob: -16.626611709594727
    10. '    
' → logprob: -16.876611709594727

Token 497: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.625000953674316
    3. '(_' → logprob: -15.750000953674316
    4. '_graph' → logprob: -16.625
    5. '(graph' → logprob: -16.75
    6. '(nodes' → logprob: -17.25
    7. ' _' → logprob: -17.625
    8. 'nodes' → logprob: -17.625
    9. '_(' → logprob: -17.875
    10. '_n' → logprob: -17.875

Token 498: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. 'graph' → logprob: -16.500001907348633
    4. '(
' → logprob: -16.500001907348633
    5. '	graph' → logprob: -17.125001907348633
    6. ' (' → logprob: -17.250001907348633
    7. '(gr' → logprob: -18.625001907348633
    8. ' graph' → logprob: -19.000001907348633
    9. '(Graph' → logprob: -19.375001907348633
    10. '(game' → logprob: -19.625001907348633

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018225563690066338
    2. ',a' → logprob: -4.01822566986084
    3. 'a' → logprob: -10.14322566986084
    4. ' ,' → logprob: -10.89322566986084
    5. '(a' → logprob: -11.76822566986084
    6. '(graph' → logprob: -12.01822566986084
    7. ',
' → logprob: -13.89322566986084
    8. '   ' → logprob: -14.39322566986084
    9. 'graph' → logprob: -14.51822566986084
    10. ',g' → logprob: -15.26822566986084

Token 500: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001170460251159966
    2. ' a' → logprob: -6.751170635223389
    3. ')a' → logprob: -16.126171112060547
    4. '	a' → logprob: -16.501171112060547
    5. '#a' → logprob: -18.376171112060547
    6. '   ' → logprob: -18.626171112060547
    7. '_a' → logprob: -18.626171112060547
    8. ',a' → logprob: -19.001171112060547
    9. '(a' → logprob: -19.001171112060547
    10. '>a' → logprob: -19.126171112060547

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009504489600658417
    2. ',b' → logprob: -5.009504318237305
    3. ' ,' → logprob: -5.884504318237305
    4. 'b' → logprob: -13.259504318237305
    5. '   ' → logprob: -14.384504318237305
    6. ',a' → logprob: -15.509504318237305
    7. ' ' → logprob: -16.634504318237305
    8. ',v' → logprob: -16.759504318237305
    9. ',
' → logprob: -16.884504318237305
    10. 'a' → logprob: -16.884504318237305

Token 502: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1602243334054947
    2. ' b' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.28522491455078
    4. ')b' → logprob: -17.16022491455078
    5. ' ' → logprob: -17.66022491455078
    6. '    ' → logprob: -17.66022491455078
    7. '   ' → logprob: -17.78522491455078
    8. '	b' → logprob: -18.28522491455078
    9. '  ' → logprob: -19.03522491455078
    10. '>b' → logprob: -20.16022491455078

Token 503: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ')
' → logprob: -11.250015258789062
    3. ' )' → logprob: -13.625015258789062
    4. '   ' → logprob: -14.375015258789062
    5. ')

' → logprob: -15.375015258789062
    6. ')return' → logprob: -16.125015258789062
    7. '))' → logprob: -17.375015258789062
    8. '),' → logprob: -17.500015258789062
    9. ')n' → logprob: -17.625015258789062
    10. '       ' → logprob: -18.000015258789062

Token 504: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8830824494361877
    2. '   ' → logprob: -1.383082389831543
    3. ' for' → logprob: -1.383082389831543
    4. '
' → logprob: -3.008082389831543
    5. 'read' → logprob: -3.633082389831543
    6. '    
' → logprob: -5.633082389831543
    7. ' read' → logprob: -6.383082389831543
    8. '  
' → logprob: -7.008082389831543
    9. ' 
' → logprob: -7.258082389831543
    10. '	for' → logprob: -7.758082389831543

Token 505: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1006431132555008
    2. ' for' → logprob: -2.3506431579589844
    3. '   ' → logprob: -8.100643157958984
    4. 'list' → logprob: -9.600643157958984
    5. ' list' → logprob: -10.475643157958984
    6. '
' → logprob: -11.225643157958984
    7. 'from' → logprob: -11.725643157958984
    8. '    
' → logprob: -11.725643157958984
    9. '[' → logprob: -12.350643157958984
    10. ' [' → logprob: -14.100643157958984

Token 506: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6934567093849182
    2. ' _' → logprob: -0.6934567093849182
    3. ' i' → logprob: -8.193456649780273
    4. ' ' → logprob: -11.068456649780273
    5. ' ' → logprob: -12.318456649780273
    6. 'range' → logprob: -12.443456649780273
    7. 'i' → logprob: -12.568456649780273
    8. ' range' → logprob: -12.568456649780273
    9. ' in' → logprob: -14.193456649780273
    10. '_range' → logprob: -14.318456649780273

Token 507: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759906768798828
    2. ' in' → logprob: -0.8259906768798828
    3. ' ' → logprob: -10.700990676879883
    4. '_' → logprob: -11.075990676879883
    5. 'range' → logprob: -11.575990676879883
    6. '  ' → logprob: -13.950990676879883
    7. ' _' → logprob: -13.950990676879883
    8. '_in' → logprob: -14.450990676879883
    9. 'n' → logprob: -14.825990676879883
    10. 'i' → logprob: -15.200990676879883

Token 508: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009117019944824278
    2. ' range' → logprob: -7.000911712646484
    3. '(range' → logprob: -15.625911712646484
    4. '	range' → logprob: -16.875911712646484
    5. 'ange' → logprob: -18.625911712646484
    6. 'rang' → logprob: -18.750911712646484
    7. '.range' → logprob: -19.250911712646484
    8. ' ' → logprob: -19.625911712646484
    9. 'Range' → logprob: -20.000911712646484
    10. 'ran' → logprob: -20.250911712646484

Token 509: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -5.7053759519476444e-05
    2. '(' → logprob: -10.000057220458984
    3. 'N' → logprob: -11.500057220458984
    4. ' (' → logprob: -13.750057220458984
    5. ' N' → logprob: -15.125057220458984
    6. '(
' → logprob: -16.500057220458984
    7. '(n' → logprob: -16.875057220458984
    8. '	N' → logprob: -18.250057220458984
    9. '   ' → logprob: -19.375057220458984
    10. ' ' → logprob: -19.750057220458984

Token 510: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5760199427604675
    2. '-' → logprob: -0.8260199427604675
    3. ' ' → logprob: -10.076020240783691
    4. '1' → logprob: -11.326020240783691
    5. '   ' → logprob: -11.576020240783691
    6. ')' → logprob: -11.826020240783691
    7. '  ' → logprob: -13.076020240783691
    8. ' -
' → logprob: -13.451020240783691
    9. ' ' → logprob: -13.826020240783691
    10. '()-' → logprob: -14.201020240783691

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. ')' → logprob: -16.250085830688477
    4. '<|end|>' → logprob: -17.000085830688477
    5. '   ' → logprob: -17.375085830688477
    6. '2' → logprob: -17.500085830688477
    7. '```' → logprob: -18.000085830688477
    8. '  ' → logprob: -18.250085830688477
    9. '0' → logprob: -18.375085830688477
    10. '
' → logprob: -18.750085830688477

Token 512: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038634736090898514
    2. '):
' → logprob: -3.413634777069092
    3. ')' → logprob: -5.663634777069092
    4. ':' → logprob: -7.413634777069092
    5. '   ' → logprob: -8.288634300231934
    6. '():' → logprob: -8.538634300231934
    7. ' ):' → logprob: -8.913634300231934
    8. '<|end|>' → logprob: -9.163634300231934
    9. '():
' → logprob: -9.538634300231934
    10. ',' → logprob: -9.788634300231934

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22095796465873718
    2. ' read' → logprob: -2.0959579944610596
    3. 'read' → logprob: -2.5959579944610596
    4. '	read' → logprob: -7.8459577560424805
    5. '
' → logprob: -8.72095775604248
    6. '   ' → logprob: -9.47095775604248
    7. '(read' → logprob: -10.47095775604248
    8. '        
' → logprob: -11.59595775604248
    9. '	' → logprob: -11.72095775604248
    10. '    
' → logprob: -12.22095775604248

Token 514: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' (adapté à ' read') → logprob: -0.01459861733019352
    2. ' read' → logprob: -4.264598846435547
    3. '   ' → logprob: -7.889598846435547
    4. '       ' → logprob: -9.764598846435547
    5. '	read' → logprob: -13.014598846435547
    6. '
' → logprob: -15.264598846435547
    7. ' ' → logprob: -15.889598846435547
    8. '  ' → logprob: -16.014598846435547
    9. '    ' → logprob: -16.889598846435547
    10. '    
' → logprob: -17.139598846435547

Token 515: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.00010783452307805419
    2. '_int' → logprob: -9.250107765197754
    3. 'int' → logprob: -12.125107765197754
    4. 'and' → logprob: -12.500107765197754
    5. '_' → logprob: -13.625107765197754
    6. ' and' → logprob: -15.125107765197754
    7. '
' → logprob: -15.625107765197754
    8. '_input' → logprob: -15.875107765197754
    9. '_AND' → logprob: -16.37510871887207
    10. '```' → logprob: -16.50010871887207

Token 516: '_connect' (ID: 32485)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -5.288163083605468e-05
    2. '_connect' → logprob: -9.875052452087402
    3. ' connect' → logprob: -13.625052452087402
    4. '
' → logprob: -16.87505340576172
    5. '	connect' → logprob: -17.00005340576172
    6. '(connect' → logprob: -18.50005340576172
    7. '.connect' → logprob: -19.00005340576172
    8. '-connect' → logprob: -19.25005340576172
    9. ' ' → logprob: -19.50005340576172
    10. 'conn' → logprob: -19.87505340576172

Token 517: '(_' (ID: 4963)
  Prédit: '(_)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_)' → logprob: -0.18369071185588837
    2. '(_' → logprob: -2.1836907863616943
    3. '(' → logprob: -2.9336907863616943
    4. '_' → logprob: -6.683690547943115
    5. '()' → logprob: -7.683690547943115
    6. '(None' → logprob: -8.558691024780273
    7. '((' → logprob: -10.058691024780273
    8. '(i' → logprob: -11.433691024780273
    9. '(_,' → logprob: -11.933691024780273
    10. ' (_)' → logprob: -12.808691024780273

Token 518: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. ')
' → logprob: -10.250035285949707
    3. ')

' → logprob: -15.250035285949707
    4. ' )' → logprob: -17.125036239624023
    5. ')
' → logprob: -18.250036239624023
    6. '())' → logprob: -18.250036239624023
    7. '),' → logprob: -18.375036239624023
    8. ')}' → logprob: -18.750036239624023
    9. '))' → logprob: -19.000036239624023
    10. ')return' → logprob: -19.000036239624023

Token 519: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00928907934576273
    2. 'dist' → logprob: -5.259289264678955
    3. '    
' → logprob: -6.634289264678955
    4. '<|end|>' → logprob: -7.134289264678955
    5. ' distances' → logprob: -7.509289264678955
    6. '
' → logprob: -7.634289264678955
    7. '```' → logprob: -8.259288787841797
    8. 'distance' → logprob: -8.509288787841797
    9. ' dist' → logprob: -8.509288787841797
    10. 'd' → logprob: -10.009288787841797

Token 520: ' first' (ID: 1577)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0027699286583811045
    2. 'start' → logprob: -6.127769947052002
    3. ' distances' → logprob: -8.627769470214844
    4. '   ' → logprob: -8.877769470214844
    5. 'first' (adapté à ' first') → logprob: -9.502769470214844
    6. ' dist' → logprob: -9.502769470214844
    7. 'distance' → logprob: -9.752769470214844
    8. 'd' → logprob: -11.252769470214844
    9. 'def' → logprob: -11.377769470214844
    10. ' start' → logprob: -12.377769470214844

Token 521: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.02885505184531212
    2. '_node' → logprob: -3.653855085372925
    3. '_d' → logprob: -6.778854846954346
    4. '_distance' → logprob: -7.028854846954346
    5. '_nodes' → logprob: -8.903855323791504
    6. '_start' → logprob: -9.528855323791504
    7. '_player' → logprob: -9.653855323791504
    8. '_bl' → logprob: -9.653855323791504
    9. '_point' → logprob: -10.653855323791504
    10. 'dist' → logprob: -10.778855323791504

Token 522: ' =' (ID: 314)
  Prédit: 'ances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.00010795372509164736
    2. ' =' → logprob: -10.000107765197754
    3. ',' → logprob: -10.875107765197754
    4. 'ance' → logprob: -11.125107765197754
    5. '=' → logprob: -11.250107765197754
    6. 'r' → logprob: -11.500107765197754
    7. 's' → logprob: -13.500107765197754
    8. '   ' → logprob: -13.750107765197754
    9. 'ANCES' → logprob: -14.125107765197754
    10. '_' → logprob: -14.125107765197754

Token 523: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16049645841121674
    2. ' d' → logprob: -1.910496473312378
    3. '   ' → logprob: -8.410496711730957
    4. ' ' → logprob: -10.910496711730957
    5. '  ' → logprob: -11.285496711730957
    6. '[d' → logprob: -12.535496711730957
    7. '	d' → logprob: -12.785496711730957
    8. 'dist' → logprob: -13.285496711730957
    9. ' distances' → logprob: -13.535496711730957
    10. '[' → logprob: -13.660496711730957

Token 524: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0001793457195162773
    2. 'ijk' → logprob: -8.750179290771484
    3. 'ij' → logprob: -11.000179290771484
    4. '```' → logprob: -13.750179290771484
    5. 'i' → logprob: -14.250179290771484
    6. 'j' → logprob: -14.375179290771484
    7. 'jik' → logprob: -14.625179290771484
    8. 'ijkl' → logprob: -15.500179290771484
    9. 'ijks' → logprob: -15.625179290771484
    10. 'jk' → logprob: -16.125179290771484

Token 525: '_process' (ID: 25444)
  Prédit: '_process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_process' → logprob: 0.0
    2. 'process' → logprob: -16.75
    3. '`' → logprob: -18.375
    4. '```' → logprob: -18.875
    5. '_' → logprob: -19.0
    6. 'Process' → logprob: -19.0
    7. '_Process' → logprob: -19.25
    8. '_processing' → logprob: -19.625
    9. '_processed' → logprob: -20.0
    10. 'rocess' → logprob: -20.25

Token 526: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -1.9361264946837764e-07
    2. 'graph' → logprob: -16.875
    3. '(' → logprob: -17.625
    4. '	graph' → logprob: -19.25
    5. '(game' → logprob: -19.75
    6. '(gr' → logprob: -20.0
    7. '(Graph' → logprob: -20.0
    8. ' (' → logprob: -20.0
    9. '(
' → logprob: -20.125
    10. '```' → logprob: -20.375

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010150644229725003
    2. '(N' → logprob: -7.2510151863098145
    3. ',N' → logprob: -8.751014709472656
    4. ' ,' → logprob: -9.126014709472656
    5. '(graph' → logprob: -10.251014709472656
    6. '(' → logprob: -13.876014709472656
    7. '```' → logprob: -14.626014709472656
    8. ',
' → logprob: -14.626014709472656
    9. ',n' → logprob: -15.876014709472656
    10. ' (' → logprob: -16.126014709472656

Token 528: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.688212614681106e-05
    2. ' N' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -17.125017166137695
    4. '	N' → logprob: -18.000017166137695
    5. ')' → logprob: -19.000017166137695
    6. '>N' → logprob: -19.125017166137695
    7. '   ' → logprob: -19.250017166137695
    8. '(N' → logprob: -20.125017166137695
    9. 'len' → logprob: -20.125017166137695
    10. '<N' → logprob: -20.375017166137695

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015562419139314443
    2. ' ,' → logprob: -9.125155448913574
    3. ',N' → logprob: -10.750155448913574
    4. '1' → logprob: -11.000155448913574
    5. '   ' → logprob: -13.000155448913574
    6. 'N' → logprob: -13.125155448913574
    7. ')' → logprob: -14.375155448913574
    8. '2' → logprob: -14.375155448913574
    9. ' ' → logprob: -14.625155448913574
    10. ' N' → logprob: -15.000155448913574

Token 530: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023226479243021458
    2. ' ' → logprob: -8.375232696533203
    3. '   ' → logprob: -14.000232696533203
    4. 'first' → logprob: -14.875232696533203
    5. 'start' → logprob: -16.000232696533203
    6. '  ' → logprob: -16.375232696533203
    7. 'N' → logprob: -16.687732696533203
    8. ' first' → logprob: -16.687732696533203
    9. '    ' → logprob: -17.125232696533203
    10. '
' → logprob: -17.750232696533203

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.875008583068848
    3. 'N' → logprob: -14.125008583068848
    4. 'first' → logprob: -15.250008583068848
    5. '   ' → logprob: -15.500008583068848
    6. 'start' → logprob: -16.125009536743164
    7. '0' → logprob: -16.937509536743164
    8. '１' → logprob: -17.187509536743164
    9. '2' → logprob: -17.250009536743164
    10. 'find' → logprob: -17.687509536743164

Token 532: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038360210601240396
    2. ')
' → logprob: -7.875383377075195
    3. ' )' → logprob: -12.750383377075195
    4. ')
' → logprob: -14.500383377075195
    5. ')

' → logprob: -16.000383377075195
    6. '   ' → logprob: -17.875383377075195
    7. ')#' → logprob: -18.000383377075195
    8. '),' → logprob: -18.500383377075195
    9. ')`' → logprob: -18.500383377075195
    10. ')[' → logprob: -18.875383377075195

Token 533: '   ' (ID: 271)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.17308680713176727
    2. '   ' → logprob: -2.1730868816375732
    3. ' second' → logprob: -3.2980868816375732
    4. 'sorted' → logprob: -5.423086643218994
    5. 'last' → logprob: -7.048086643218994
    6. 'first' → logprob: -7.173086643218994
    7. 'max' → logprob: -7.798086643218994
    8. '	second' → logprob: -7.923086643218994
    9. 'far' → logprob: -8.423087120056152
    10. ' sorted' → logprob: -8.423087120056152

Token 534: ' sorted' (ID: 20099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.08127129822969437
    2. 'first' → logprob: -3.3312714099884033
    3. 'f' → logprob: -4.956271171569824
    4. 'far' → logprob: -4.956271171569824
    5. 'fur' → logprob: -5.081271171569824
    6. 'node' → logprob: -5.206271171569824
    7. 'max' → logprob: -5.331271171569824
    8. 'last' → logprob: -5.581271171569824
    9. 'sorted' (adapté à ' sorted') → logprob: -5.956271171569824
    10. 'sec' → logprob: -6.456271171569824

Token 535: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0003550079127307981
    2. 'dist' → logprob: -8.250354766845703
    3. '_first' → logprob: -10.000354766845703
    4. 'first' → logprob: -10.375354766845703
    5. '(first' → logprob: -12.375354766845703
    6. '_' → logprob: -12.625354766845703
    7. '_d' → logprob: -12.875354766845703
    8. '=' → logprob: -13.000354766845703
    9. '_sorted' → logprob: -13.875354766845703
    10. '(dist' → logprob: -14.125354766845703

Token 536: ' =' (ID: 314)
  Prédit: 'ances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0003290288441348821
    2. ' =' → logprob: -8.62532901763916
    3. 's' → logprob: -9.62532901763916
    4. '=' → logprob: -10.37532901763916
    5. '_dist' → logprob: -10.37532901763916
    6. '   ' → logprob: -12.37532901763916
    7. 'es' → logprob: -12.37532901763916
    8. 'dist' → logprob: -12.75032901763916
    9. '_' → logprob: -12.87532901763916
    10. '```' → logprob: -13.12532901763916

Token 537: ' sort' (ID: 4506)
  Prédit: ' sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.6931613087654114
    2. 'sort' → logprob: -0.6931613087654114
    3. ' sorted' → logprob: -11.693161010742188
    4. 'sorted' → logprob: -12.568161010742188
    5. '(sort' → logprob: -13.443161010742188
    6. '	sort' → logprob: -15.318161010742188
    7. ' ' → logprob: -15.568161010742188
    8. '_sort' → logprob: -15.693161010742188
    9. '.sort' → logprob: -15.818161010742188
    10. '   ' → logprob: -16.568161010742188

Token 538: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -5.796184723294573e-06
    2. 'dist' → logprob: -12.125005722045898
    3. '(dist' → logprob: -16.0000057220459
    4. 'Distances' → logprob: -16.6250057220459
    5. '_distance' → logprob: -17.5000057220459
    6. 'first' → logprob: -17.5000057220459
    7. ' distances' → logprob: -17.7500057220459
    8. '(_' → logprob: -18.0000057220459
    9. '(first' → logprob: -18.2500057220459
    10. 's' → logprob: -18.2500057220459

Token 539: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.023455806076526642
    2. '_dist' → logprob: -3.773455858230591
    3. 'dist' → logprob: -8.523455619812012
    4. 'ance' → logprob: -12.023455619812012
    5. '(dist' → logprob: -13.523455619812012
    6. 'ist' → logprob: -14.023455619812012
    7. 'es' → logprob: -14.148455619812012
    8. 'ences' → logprob: -14.273455619812012
    9. ' distances' → logprob: -14.273455619812012
    10. 'aces' → logprob: -15.023455619812012

Token 540: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0017048174049705267
    2. 'with' → logprob: -6.376704692840576
    3. 'With' → logprob: -13.501705169677734
    4. 's' → logprob: -15.876705169677734
    5. '(with' → logprob: -15.876705169677734
    6. '_WITH' → logprob: -15.876705169677734
    7. '_' → logprob: -16.001705169677734
    8. '=' → logprob: -16.126705169677734
    9. ' with' → logprob: -16.126705169677734
    10. '```' → logprob: -16.251705169677734

Token 541: '_indices' (ID: 43508)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -2.117345684382599e-05
    2. '_indices' → logprob: -10.875020980834961
    3. '(indices' → logprob: -14.000020980834961
    4. 'index' → logprob: -14.375020980834961
    5. 'indexes' → logprob: -14.375020980834961
    6. ' indices' → logprob: -15.750020980834961
    7. 'Indices' → logprob: -17.75002098083496
    8. '```' → logprob: -18.25002098083496
    9. '"indices' → logprob: -18.50002098083496
    10. 'import' → logprob: -18.87502098083496

Token 542: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -5.991464786347933e-05
    2. '_with' → logprob: -10.625060081481934
    3. 'first' → logprob: -10.875060081481934
    4. '(' → logprob: -11.750060081481934
    5. '(with' → logprob: -12.000060081481934
    6. 'with' → logprob: -13.750060081481934
    7. '_first' → logprob: -14.375060081481934
    8. '[first' → logprob: -15.125060081481934
    9. '=' → logprob: -15.625060081481934
    10. ' (' → logprob: -15.875060081481934

Token 543: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0033933715894818306
    2. 'dist' → logprob: -5.753393173217773
    3. '(first' → logprob: -9.003393173217773
    4. '(' → logprob: -11.003393173217773
    5. '```' → logprob: -11.003393173217773
    6. 'first' → logprob: -11.378393173217773
    7. '
' → logprob: -11.503393173217773
    8. '(sorted' → logprob: -11.753393173217773
    9. ')' → logprob: -11.878393173217773
    10. 'Dist' → logprob: -12.628393173217773

Token 544: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038983117789030075
    2. ')
' → logprob: -3.538983106613159
    3. '   ' → logprob: -4.788983345031738
    4. '()' → logprob: -7.413983345031738
    5. '()
' → logprob: -8.913983345031738
    6. '[' → logprob: -10.038983345031738
    7. '())' → logprob: -10.163983345031738
    8. '())
' → logprob: -11.538983345031738
    9. ' )' → logprob: -12.038983345031738
    10. ' ' → logprob: -12.038983345031738

Token 545: '   ' (ID: 271)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.43969088792800903
    2. 'f' → logprob: -1.8146908283233643
    3. '   ' → logprob: -1.9396908283233643
    4. ' second' → logprob: -3.9396908283233643
    5. 'far' → logprob: -4.939691066741943
    6. 'u' → logprob: -5.314691066741943
    7. ' far' → logprob: -5.439691066741943
    8. 'last' → logprob: -5.564691066741943
    9. 'fur' → logprob: -5.564691066741943
    10. 'node' → logprob: -6.439691066741943

Token 546: ' new' (ID: 620)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.022852662950754166
    2. 'fur' → logprob: -5.147852897644043
    3. 'f' → logprob: -5.272852897644043
    4. 'far' → logprob: -5.522852897644043
    5. 'start' → logprob: -6.272852897644043
    6. 'first' → logprob: -7.022852897644043
    7. 'u' → logprob: -7.147852897644043
    8. 'node' → logprob: -7.272852897644043
    9. 'end' → logprob: -7.772852897644043
    10. 'last' → logprob: -7.772852897644043

Token 547: '_root' (ID: 29989)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.10605865716934204
    2. 'start' → logprob: -2.3560585975646973
    3. '_dist' → logprob: -5.356058597564697
    4. 'dist' → logprob: -7.231058597564697
    5. '_node' → logprob: -8.231059074401855
    6. ' start' → logprob: -10.106059074401855
    7. '_' → logprob: -10.481059074401855
    8. 'node' → logprob: -11.231059074401855
    9. '_distance' → logprob: -11.606059074401855
    10. '_point' → logprob: -11.731059074401855

Token 548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693148672580719
    2. ' =' → logprob: -0.693148672580719
    3. ',' → logprob: -14.193148612976074
    4. ' ' → logprob: -15.443148612976074
    5. '_' → logprob: -16.06814956665039
    6. '＝' → logprob: -16.31814956665039
    7. '=int' → logprob: -16.94314956665039
    8. '_idx' → logprob: -17.06814956665039
    9. ' ' → logprob: -17.44314956665039
    10. '=_' → logprob: -17.81814956665039

Token 549: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.07889287173748016
    2. ' get' → logprob: -2.578892946243286
    3. '   ' → logprob: -12.953892707824707
    4. 'sorted' → logprob: -14.578892707824707
    5. ' sorted' → logprob: -15.953892707824707
    6. '	get' → logprob: -16.328893661499023
    7. ' ' → logprob: -17.703893661499023
    8. '  ' → logprob: -18.078893661499023
    9. '(get' → logprob: -18.078893661499023
    10. '
' → logprob: -18.078893661499023

Token 550: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.011296318843960762
    2. 'second' → logprob: -4.511296272277832
    3. 'sorted' → logprob: -8.511296272277832
    4. '_sorted' → logprob: -10.011296272277832
    5. ' second' → logprob: -14.136296272277832
    6. 'Second' → logprob: -14.886296272277832
    7. '(sorted' → logprob: -15.511296272277832
    8. '```' → logprob: -15.761296272277832
    9. '(second' → logprob: -15.761296272277832
    10. '	second' → logprob: -16.01129722595215

Token 551: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.0008821651572361588
    2. 'far' → logprob: -7.375882148742676
    3. 'sorted' → logprob: -8.625882148742676
    4. '_f' → logprob: -11.375882148742676
    5. '(sorted' → logprob: -11.375882148742676
    6. '`' → logprob: -12.125882148742676
    7. '_sorted' → logprob: -12.125882148742676
    8. '```' → logprob: -12.125882148742676
    9. '_dist' → logprob: -12.250882148742676
    10. '_second' → logprob: -12.375882148742676

Token 552: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00023643692838959396
    2. 'node' → logprob: -8.375236511230469
    3. 'sorted' → logprob: -13.500236511230469
    4. 'Node' → logprob: -13.875236511230469
    5. '   ' → logprob: -14.250236511230469
    6. ' node' → logprob: -14.375236511230469
    7. '(sorted' → logprob: -14.500236511230469
    8. 'd' → logprob: -14.625236511230469
    9. 'e' → logprob: -15.000236511230469
    10. '```' → logprob: -15.375236511230469

Token 553: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -1.9361264946837764e-07
    2. 'sorted' → logprob: -15.875
    3. '(sort' → logprob: -16.875
    4. '(' → logprob: -18.625
    5. ' (' → logprob: -18.875
    6. '```' → logprob: -18.875
    7. '(filtered' → logprob: -19.5
    8. '(parsed' → logprob: -19.875
    9. '_sorted' → logprob: -20.0
    10. '(saved' → logprob: -20.125

Token 554: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0013389317318797112
    2. 'ist' → logprob: -6.751338958740234
    3. 'dist' → logprob: -8.751338958740234
    4. 'sorted' → logprob: -12.376338958740234
    5. 'st' → logprob: -12.751338958740234
    6. '(dist' → logprob: -14.126338958740234
    7. 't' → logprob: -14.251338958740234
    8. 'd' → logprob: -15.126338958740234
    9. '_st' → logprob: -15.251338958740234
    10. '	dist' → logprob: -15.376338958740234

Token 555: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006825604941695929
    2. ')
' → logprob: -5.3818254470825195
    3. '   ' → logprob: -6.1318254470825195
    4. '(graph' → logprob: -11.50682544708252
    5. '(' → logprob: -11.75682544708252
    6. ' )' → logprob: -13.13182544708252
    7. ')
' → logprob: -13.13182544708252
    8. ')

' → logprob: -13.63182544708252
    9. '(first' → logprob: -14.13182544708252
    10. ',' → logprob: -14.38182544708252

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6478552222251892
    2. 'second' → logprob: -0.7728552222251892
    3. ' second' → logprob: -4.397855281829834
    4. '	second' → logprob: -6.397855281829834
    5. '
' → logprob: -7.272855281829834
    6. '_second' → logprob: -9.022854804992676
    7. '```' → logprob: -9.022854804992676
    8. 'new' → logprob: -9.897854804992676
    9. 'final' → logprob: -10.272854804992676
    10. '    
' → logprob: -10.272854804992676

Token 557: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' (adapté à ' second') → logprob: -0.0014880775706842542
    2. ' second' → logprob: -7.001488208770752
    3. '   ' → logprob: -7.751488208770752
    4. 'sec' → logprob: -9.376487731933594
    5. 'new' → logprob: -10.751487731933594
    6. 'se' → logprob: -11.126487731933594
    7. '
' → logprob: -12.376487731933594
    8. '	second' → logprob: -12.376487731933594
    9. 'first' → logprob: -12.501487731933594
    10. 'dist' → logprob: -13.001487731933594

Token 558: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.3902033970225602e-05
    2. 'dist' → logprob: -11.500014305114746
    3. '_distance' → logprob: -13.625014305114746
    4. '_d' → logprob: -13.875014305114746
    5. '_' → logprob: -14.250014305114746
    6. '_diff' → logprob: -16.25001335144043
    7. '_dis' → logprob: -16.25001335144043
    8. '_first' → logprob: -16.50001335144043
    9. '_def' → logprob: -16.62501335144043
    10. ' _' → logprob: -16.62501335144043

Token 559: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407710552215576
    2. ' =' → logprob: -0.9740771055221558
    3. '_' → logprob: -17.099077224731445
    4. ' ' → logprob: -17.474077224731445
    5. ',' → logprob: -17.724077224731445
    6. '＝' → logprob: -17.974077224731445
    7. ' ' → logprob: -18.224077224731445
    8. '=d' → logprob: -18.724077224731445
    9. 's' → logprob: -18.849077224731445
    10. '=create' → logprob: -19.599077224731445

Token 560: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5759543180465698
    2. 'd' → logprob: -0.8259543180465698
    3. '   ' → logprob: -11.20095443725586
    4. '	d' → logprob: -14.20095443725586
    5. ' ' → logprob: -15.32595443725586
    6. '(d' → logprob: -16.45095443725586
    7. ' ' → logprob: -16.45095443725586
    8. '_d' → logprob: -17.07595443725586
    9. ' д' → logprob: -17.57595443725586
    10. '.d' → logprob: -17.70095443725586

Token 561: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -5.200166469876422e-06
    2. 'ijk' → logprob: -12.625004768371582
    3. 'ij' → logprob: -13.375004768371582
    4. 'jik' → logprob: -16.8750057220459
    5. 'j' → logprob: -17.0000057220459
    6. 'i' → logprob: -17.7500057220459
    7. 'jk' → logprob: -17.8750057220459
    8. 's' → logprob: -18.0000057220459
    9. 'ijkl' → logprob: -18.1250057220459
    10. 'ji' → logprob: -18.2500057220459

Token 562: '_process' (ID: 25444)
  Prédit: '_process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_process' → logprob: -1.4974866644479334e-05
    2. 'process' → logprob: -11.125015258789062
    3. 'Process' → logprob: -16.375015258789062
    4. ' process' → logprob: -19.250015258789062
    5. '_Process' → logprob: -19.375015258789062
    6. '(process' → logprob: -19.875015258789062
    7. '(graph' → logprob: -20.375015258789062
    8. '_PROCESS' → logprob: -21.375015258789062
    9. 'rocess' → logprob: -21.500015258789062
    10. ' Process' → logprob: -21.625015258789062

Token 563: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -6.704273118884885e-07
    2. 'graph' → logprob: -14.625000953674316
    3. '(' → logprob: -15.750000953674316
    4. '(
' → logprob: -17.5
    5. '	graph' → logprob: -17.625
    6. '(grammar' → logprob: -17.875
    7. '```' → logprob: -18.125
    8. '(gr' → logprob: -18.75
    9. ' graph' → logprob: -19.125
    10. '(game' → logprob: -19.375

Token 564: ',' (ID: 11)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.07890014350414276
    2. ',' → logprob: -2.578900098800659
    3. 'graph' → logprob: -12.828900337219238
    4. ' ,' → logprob: -13.078900337219238
    5. '   ' → logprob: -13.203900337219238
    6. '	graph' → logprob: -13.703900337219238
    7. '(' → logprob: -14.078900337219238
    8. ' graph' → logprob: -14.203900337219238
    9. ',
' → logprob: -14.953900337219238
    10. ')' → logprob: -14.953900337219238

Token 565: ' N' (ID: 478)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.25194862484931946
    2. ' graph' → logprob: -1.501948595046997
    3. '(graph' → logprob: -11.001948356628418
    4. '	graph' → logprob: -12.751948356628418
    5. '_graph' → logprob: -18.001949310302734
    6. '   ' → logprob: -18.376949310302734
    7. 'raph' → logprob: -18.501949310302734
    8. 'graphql' → logprob: -18.626949310302734
    9. '.graph' → logprob: -18.751949310302734
    10. 'Graph' → logprob: -19.501949310302734

Token 566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001439459010725841
    2. '(graph' → logprob: -8.875144004821777
    3. 'graph' → logprob: -13.500144004821777
    4. ' ,' → logprob: -13.500144004821777
    5. '   ' → logprob: -13.750144004821777
    6. ' graph' → logprob: -15.625144004821777
    7. '(' → logprob: -16.75014305114746
    8. ',
' → logprob: -16.87514305114746
    9. '	graph' → logprob: -17.12514305114746
    10. '=' → logprob: -18.62514305114746

Token 567: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.47408074140548706
    2. ' new' → logprob: -0.9740807414054871
    3. 'graph' → logprob: -12.974081039428711
    4. ' graph' → logprob: -13.599081039428711
    5. '	new' → logprob: -16.09908103942871
    6. ')new' → logprob: -16.84908103942871
    7. '   ' → logprob: -17.34908103942871
    8. '[new' → logprob: -17.72408103942871
    9. '(new' → logprob: -17.97408103942871
    10. '$new' → logprob: -18.97408103942871

Token 568: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -1.700132997939363e-05
    2. 'root' → logprob: -11.000017166137695
    3. 'oot' → logprob: -15.500017166137695
    4. '_' → logprob: -18.000017166137695
    5. ' root' → logprob: -18.250017166137695
    6. '_ro' → logprob: -18.750017166137695
    7. 'o' → logprob: -18.875017166137695
    8. '_ROOT' → logprob: -19.125017166137695
    9. 'Root' → logprob: -19.750017166137695
    10. '(root' → logprob: -20.625017166137695

Token 569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47502604126930237
    2. ')
' → logprob: -0.97502601146698
    3. '   ' → logprob: -6.9750261306762695
    4. ')
' → logprob: -11.35002613067627
    5. ')

' → logprob: -14.60002613067627
    6. ' )
' → logprob: -14.85002613067627
    7. ' )' → logprob: -15.22502613067627
    8. ' ' → logprob: -15.47502613067627
    9. '
' → logprob: -15.60002613067627
    10. '  ' → logprob: -16.100025177001953

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01172610092908144
    2. 'diam' → logprob: -4.511725902557373
    3. 'bl' → logprob: -7.761725902557373
    4. ' diameter' → logprob: -9.261726379394531
    5. '
' → logprob: -9.386726379394531
    6. '```' → logprob: -10.511726379394531
    7. 'd' → logprob: -11.636726379394531
    8. 'sorted' → logprob: -11.886726379394531
    9. ' diam' → logprob: -12.261726379394531
    10. '    
' → logprob: -12.261726379394531

Token 571: ' diameter' (ID: 32514)
  Prédit: 'diam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diam' → logprob: -0.0349285826086998
    2. 'bl' → logprob: -3.409928560256958
    3. 'sorted' → logprob: -7.284928798675537
    4. '   ' → logprob: -8.659928321838379
    5. 'dia' → logprob: -8.909928321838379
    6. 'd' → logprob: -9.534928321838379
    7. 'print' → logprob: -9.784928321838379
    8. ' diameter' → logprob: -10.159928321838379
    9. 'di' → logprob: -10.534928321838379
    10. 'result' → logprob: -10.909928321838379

Token 572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197071075439453
    2. ' =' → logprob: -2.8119707107543945
    3. '_' → logprob: -13.311970710754395
    4. ')' → logprob: -15.436970710754395
    5. ',' → logprob: -15.436970710754395
    6. ' ' → logprob: -15.811970710754395
    7. '＝' → logprob: -15.811970710754395
    8. '_=' → logprob: -16.061969757080078
    9. '=max' → logprob: -16.186969757080078
    10. ' ' → logprob: -16.311969757080078

Token 573: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.001930301426909864
    2. ' find' → logprob: -6.251930236816406
    3. 'max' → logprob: -13.501930236816406
    4. '(find' → logprob: -15.376930236816406
    5. '	find' → logprob: -16.501930236816406
    6. ' max' → logprob: -17.251930236816406
    7. '   ' → logprob: -17.626930236816406
    8. '=find' → logprob: -17.751930236816406
    9. '
' → logprob: -18.626930236816406
    10. ' ' → logprob: -19.251930236816406

Token 574: '_d' (ID: 1565)
  Prédit: '(second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(second' → logprob: -0.12223939597606659
    2. '_d' → logprob: -3.372239351272583
    3. 'diam' → logprob: -3.372239351272583
    4. 'second' → logprob: -3.622239351272583
    5. '(d' → logprob: -4.247239589691162
    6. '_second' → logprob: -5.872239589691162
    7. '_distance' → logprob: -6.872239589691162
    8. '(distance' → logprob: -7.497239589691162
    9. 'd' → logprob: -7.747239589691162
    10. 'distance' → logprob: -8.622239112854004

Token 575: 'iameter' (ID: 157684)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.36375972628593445
    2. 'second' → logprob: -1.4887597560882568
    3. 'istance' → logprob: -2.863759756088257
    4. 'iameter' → logprob: -4.238759517669678
    5. 'st' → logprob: -5.488759517669678
    6. 'diam' → logprob: -6.363759517669678
    7. 'stances' → logprob: -6.988759517669678
    8. 'dist' → logprob: -7.613759517669678
    9. 'stance' → logprob: -9.113759994506836
    10. '(second' → logprob: -9.238759994506836

Token 576: '(second' (ID: 78627)
  Prédit: '(second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(second' → logprob: -0.06265954673290253
    2. 'second' → logprob: -2.812659502029419
    3. '(d' → logprob: -7.312659740447998
    4. '(' → logprob: -11.56265926361084
    5. '(distance' → logprob: -12.31265926361084
    6. ' second' → logprob: -12.93765926361084
    7. '	second' → logprob: -12.93765926361084
    8. '=' → logprob: -12.93765926361084
    9. ' =' → logprob: -13.68765926361084
    10. '_second' → logprob: -13.81265926361084

Token 577: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.003744263667613268
    2. 'second' → logprob: -6.503744125366211
    3. '(second' → logprob: -6.878744125366211
    4. 'dist' → logprob: -6.878744125366211
    5. ')' → logprob: -9.128744125366211
    6. ' second' → logprob: -10.753744125366211
    7. '_second' → logprob: -10.878744125366211
    8. '(dist' → logprob: -11.003744125366211
    9. '   ' → logprob: -12.753744125366211
    10. '	dist' → logprob: -12.878744125366211

Token 578: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00823500007390976
    2. ')
' → logprob: -5.383234977722168
    3. '   ' → logprob: -5.633234977722168
    4. '()' → logprob: -10.633234977722168
    5. '())' → logprob: -13.008234977722168
    6. ' )' → logprob: -14.008234977722168
    7. ')
' → logprob: -14.008234977722168
    8. '()
' → logprob: -14.383234977722168
    9. ')

' → logprob: -14.633234977722168
    10. ' ' → logprob: -14.883234977722168

Token 579: '   ' (ID: 271)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.31933170557022095
    2. '   ' → logprob: -1.3193316459655762
    3. ' bl' → logprob: -5.319331645965576
    4. '
' → logprob: -6.944331645965576
    5. '```' → logprob: -8.819332122802734
    6. '_bl' → logprob: -11.444332122802734
    7. '    
' → logprob: -11.444332122802734
    8. '``' → logprob: -11.944332122802734
    9. '
' → logprob: -13.069332122802734
    10. '(bl' → logprob: -13.194332122802734

Token 580: ' bl' (ID: 1162)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' (adapté à ' bl') → logprob: -0.005533266346901655
    2. ' bl' → logprob: -5.255533218383789
    3. '   ' → logprob: -8.130533218383789
    4. '_bl' → logprob: -12.505533218383789
    5. '
' → logprob: -14.380533218383789
    6. '```' → logprob: -15.130533218383789
    7. 'BL' → logprob: -16.13053321838379
    8. '(bl' → logprob: -16.38053321838379
    9. 'b' → logprob: -16.63053321838379
    10. 'blur' → logprob: -16.63053321838379

Token 581: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234475247561932
    2. '=' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.005234718322754
    4. '_' → logprob: -15.130234718322754
    5. ' ' → logprob: -16.880233764648438
    6. ' =)' → logprob: -17.630233764648438
    7. ' =(' → logprob: -18.005233764648438
    8. ' =
' → logprob: -18.130233764648438
    9. '  ' → logprob: -18.380233764648438
    10. '＝' → logprob: -18.755233764648438

Token 582: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0009114635176956654
    2. ' calculate' → logprob: -7.000911235809326
    3. 'not' → logprob: -19.500911712646484
    4. 'cal' → logprob: -20.875911712646484
    5. 'calc' → logprob: -21.000911712646484
    6. '.calculate' → logprob: -21.500911712646484
    7. ' not' → logprob: -21.875911712646484
    8. 'calcul' → logprob: -22.000911712646484
    9. '   ' → logprob: -22.750911712646484
    10. 'c' → logprob: -23.625911712646484

Token 583: '_bl' (ID: 25835)
  Prédit: '_bl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bl' → logprob: -9.088346359931165e-07
    2. '_b' → logprob: -14.375000953674316
    3. 'bl' → logprob: -15.750000953674316
    4. '(bl' → logprob: -16.625
    5. '_bloc' → logprob: -17.75
    6. '_ble' → logprob: -19.5
    7. '_' → logprob: -20.625
    8. '_block' → logprob: -20.875
    9. '_BL' → logprob: -20.875
    10. '```' → logprob: -21.375

Token 584: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.250004768371582
    3. 'diam' → logprob: -15.875004768371582
    4. '(di' → logprob: -17.2500057220459
    5. ' (' → logprob: -19.0000057220459
    6. '(
' → logprob: -19.1250057220459
    7. '(de' → logprob: -19.5000057220459
    8. '(dim' → logprob: -20.8750057220459
    9. '(b' → logprob: -21.0000057220459
    10. '(def' → logprob: -21.1250057220459

Token 585: 'iameter' (ID: 157684)
  Prédit: 'iameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iameter' → logprob: -0.004342291038483381
    2. 'am' → logprob: -6.129342079162598
    3. 'iam' → logprob: -6.879342079162598
    4. 'i' → logprob: -7.129342079162598
    5. 'diam' → logprob: -8.254342079162598
    6. 'ir' → logprob: -11.004342079162598
    7. '(i' → logprob: -11.254342079162598
    8. 'imeter' → logprob: -11.629342079162598
    9. ' diameter' → logprob: -12.379342079162598
    10. 'iamond' → logprob: -12.504342079162598

Token 586: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006976079195737839
    2. ')
' → logprob: -5.006976127624512
    3. '   ' → logprob: -8.256976127624512
    4. ')
' → logprob: -14.631976127624512
    5. ' )' → logprob: -15.131976127624512
    6. ')

' → logprob: -15.256976127624512
    7. ' ' → logprob: -15.881976127624512
    8. '),' → logprob: -17.381975173950195
    9. ' ' → logprob: -17.881975173950195
    10. ')`' → logprob: -18.006975173950195

Token 587: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033505987375974655
    2. 'print' → logprob: -3.533505916595459
    3. '
' → logprob: -5.658505916595459
    4. '	print' → logprob: -9.158506393432617
    5. ' print' → logprob: -9.158506393432617
    6. '(print' → logprob: -10.533506393432617
    7. '    
' → logprob: -10.908506393432617
    8. '```' → logprob: -13.408506393432617
    9. '   ' → logprob: -14.283506393432617
    10. '
' → logprob: -14.533506393432617

Token 588: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00027849749312736094
    2. '   ' → logprob: -8.50027847290039
    3. ' print' → logprob: -9.50027847290039
    4. '	print' → logprob: -15.75027847290039
    5. ' ' → logprob: -18.75027847290039
    6. '  ' → logprob: -19.25027847290039
    7. '
' → logprob: -19.75027847290039
    8. '```' → logprob: -19.87527847290039
    9. '(print' → logprob: -20.37527847290039
    10. '.print' → logprob: -20.62527847290039

Token 589: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.0280383548888494e-06
    2. 'result' → logprob: -14.875000953674316
    3. '_' → logprob: -15.250000953674316
    4. '(' → logprob: -16.375001907348633
    5. '(_' → logprob: -16.500001907348633
    6. '('_' → logprob: -16.625001907348633
    7. 'Result' → logprob: -17.125001907348633
    8. '_results' → logprob: -17.250001907348633
    9. '_Result' → logprob: -17.875001907348633
    10. '_RESULT' → logprob: -18.250001907348633

Token 590: '(bl' (ID: 110427)
  Prédit: '(bl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bl' → logprob: -1.9361264946837764e-07
    2. '(br' → logprob: -16.5
    3. '(' → logprob: -16.75
    4. '(blank' → logprob: -18.0
    5. 'bl' → logprob: -19.0
    6. '(blob' → logprob: -19.75
    7. '(b' → logprob: -20.125
    8. ' (' → logprob: -20.375
    9. '(be' → logprob: -22.0
    10. ' bl' → logprob: -23.0

Token 591: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. '())' → logprob: -12.375007629394531
    3. '()' → logprob: -13.625007629394531
    4. ')
' → logprob: -13.875007629394531
    5. ' )' → logprob: -14.125007629394531
    6. ')`' → logprob: -15.750007629394531
    7. '))' → logprob: -15.875007629394531
    8. ')

' → logprob: -18.12500762939453
    9. ')#' → logprob: -18.50000762939453
    10. '(' → logprob: -18.62500762939453

Token 592: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00011749001714633778
    2. '```' → logprob: -9.375117301940918
    3. '
' → logprob: -11.000117301940918
    4. ' if' → logprob: -11.375117301940918
    5. 'main' → logprob: -12.875117301940918
    6. '    
' → logprob: -14.625117301940918
    7. '<|end|>' → logprob: -14.875117301940918
    8. '  
' → logprob: -14.875117301940918
    9. '#' → logprob: -15.125117301940918
    10. '``' → logprob: -16.000118255615234

Token 593: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 591
Tokens correctement prédits (1ère position, stricte): 276
Tokens correctement prédits (1ère position, avec adaptation): 300
Tokens correctement prédits (top 10): 528
Précision stricte (1ère position): 46.70%
Précision adaptée (1ère position): 50.76%
Précision (top 10): 89.34%
================================================================================
