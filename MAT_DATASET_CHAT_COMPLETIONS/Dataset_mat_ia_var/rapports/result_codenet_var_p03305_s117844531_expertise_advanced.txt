================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from heapq import heappush, heappop
from collections import defaultdict

class Dijkstra:
    """高効率なダイクストラ法実装。隣接リストにdefaultdictを利用。"""

    __slots__ = ('_G', '_V', '_E')

    def __init__(self, V):
        self._V = V
        self._E = 0
        self._G = defaultdict(list)

    @property
    def V(self): return self._V

    @property
    def E(self): return self._E

    def add(self, u, v, cost):
        self._G[u].append((v, cost))
        self._E += 1

    def shortest_path(self, start):
        dist = [float('inf')] * self._V
        dist[start] = 0
        hq = [(0, start)]
        visited = [False] * self._V
        while hq:
            cost, v = heappop(hq)
            if visited[v]: continue
            visited[v] = True
            for to, w in self._G[v]:
                if dist[to] > cost + w:
                    dist[to] = cost + w
                    heappush(hq, (dist[to], to))
        return dist

n, m, s, t = map(int, input().split())
yen = Dijkstra(n)
snuke = Dijkstra(n)
for _ in range(m):
    u, v, a, b = map(int, input().split())
    u -= 1; v -= 1
    yen.add(u, v, a); yen.add(v, u, a)
    snuke.add(u, v, b); snuke.add(v, u, b)

s -= 1; t -= 1
yen_dist = yen.shortest_path(s)
snuke_dist = snuke.shortest_path(t)

answer = []
min_cost = float('inf')
for y, s in zip(reversed(yen_dist), reversed(snuke_dist)):
    min_cost = min(min_cost, y + s)
    answer.append(min_cost)

offset = 10 ** 15
for v in reversed(answer):
    print(offset - v)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06490714102983475
    2. 'import' → logprob: -2.8149070739746094
    3. ' import' → logprob: -5.939907073974609
    4. '.import' → logprob: -8.68990707397461
    5. '(' → logprob: -10.68990707397461
    6. '.he' → logprob: -11.06490707397461
    7. 'i' → logprob: -11.43990707397461
    8. ' .' → logprob: -11.56490707397461
    9. '.im' → logprob: -11.81490707397461
    10. '.n' → logprob: -11.81490707397461

Token 4: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.28024300932884216
    2. ' he' → logprob: -1.5302430391311646
    3. 'heap' → logprob: -3.655242919921875
    4. 'nl' → logprob: -6.655242919921875
    5. ' n' → logprob: -7.780242919921875
    6. ' heap' → logprob: -9.155242919921875
    7. 'n' → logprob: -9.405242919921875
    8. 'merge' → logprob: -9.655242919921875
    9. '`' → logprob: -10.280242919921875
    10. '```' → logprob: -10.280242919921875

Token 5: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.03823668137192726
    2. 'ap' → logprob: -3.288236618041992
    3. 'a' → logprob: -8.663236618041992
    4. 'apl' → logprob: -11.538236618041992
    5. 'aps' → logprob: -12.538236618041992
    6. 'q' → logprob: -12.663236618041992
    7. 'aq' → logprob: -13.538236618041992
    8. 'n' → logprob: -13.663236618041992
    9. 'appen' → logprob: -14.038236618041992
    10. 'ап' → logprob: -14.413236618041992

Token 6: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0016206686850637197
    2. 'op' → logprob: -6.626620769500732
    3. 'us' → logprob: -8.376620292663574
    4. 'u' → logprob: -9.751620292663574
    5. 'o' → logprob: -12.126620292663574
    6. '```' → logprob: -15.001620292663574
    7. 'opleft' → logprob: -15.501620292663574
    8. '[' → logprob: -16.75162124633789
    9. 'uf' → logprob: -16.87662124633789
    10. 'push' → logprob: -17.25162124633789

Token 7: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007171963807195425
    2. 'he' → logprob: -8.375717163085938
    3. ',' → logprob: -8.500717163085938
    4. '\(' → logprob: -9.125717163085938
    5. '(heap' → logprob: -9.250717163085938
    6. ' (' → logprob: -10.375717163085938
    7. '```' → logprob: -10.875717163085938
    8. '(
' → logprob: -11.250717163085938
    9. 'import' → logprob: -12.750717163085938
    10. ',(' → logprob: -13.375717163085938

Token 8: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.5769598484039307
    2. 'he' → logprob: -0.8269598484039307
    3. 'heap' → logprob: -6.951959609985352
    4. ' heap' → logprob: -9.826959609985352
    5. ' ' → logprob: -12.576959609985352
    6. '.he' → logprob: -12.951959609985352
    7. '```' → logprob: -13.451959609985352
    8. 'pop' → logprob: -14.576959609985352
    9. '_he' → logprob: -14.576959609985352
    10. 'hep' → logprob: -15.076959609985352

Token 9: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.002476724097505212
    2. 'ap' → logprob: -6.002476692199707
    3. 'a' → logprob: -14.627476692199707
    4. 'e' → logprob: -15.877476692199707
    5. 'appen' → logprob: -15.877476692199707
    6. 'apl' → logprob: -16.002477645874023
    7. 'ап' → logprob: -16.877477645874023
    8. 'appe' → logprob: -17.002477645874023
    9. 'apply' → logprob: -17.627477645874023
    10. 'APP' → logprob: -17.877477645874023

Token 10: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0067208209075033665
    2. 'ush' → logprob: -5.006721019744873
    3. 'o' → logprob: -13.006720542907715
    4. 'pop' → logprob: -13.756720542907715
    5. 'opl' → logprob: -14.006720542907715
    6. 'opp' → logprob: -14.131720542907715
    7. 'opleft' → logprob: -15.256720542907715
    8. 'opf' → logprob: -16.75672149658203
    9. 'ope' → logprob: -17.63172149658203
    10. 'opr' → logprob: -17.63172149658203

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016837897419463843
    2. '\(' → logprob: -9.625168800354004
    3. '[' → logprob: -10.750168800354004
    4. '(
' → logprob: -11.125168800354004
    5. ' (' → logprob: -11.125168800354004
    6. 'def' → logprob: -11.625168800354004
    7. '\' → logprob: -11.750168800354004
    8. ' ' → logprob: -12.000168800354004
    9. '\[' → logprob: -12.250168800354004
    10. 'd' → logprob: -12.375168800354004

Token 12: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001905200770124793
    2. 'def' → logprob: -7.5019049644470215
    3. '(
' → logprob: -7.7519049644470215
    4. 'd' → logprob: -8.25190544128418
    5. 'he' → logprob: -9.12690544128418
    6. '\' → logprob: -9.37690544128418
    7. 'a' → logprob: -9.50190544128418
    8. 'heap' → logprob: -9.62690544128418
    9. '[' → logprob: -9.75190544128418
    10. '(heap' → logprob: -9.87690544128418

Token 13: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.06278393417596817
    2. 'collections' → logprob: -3.18778395652771
    3. ' math' → logprob: -4.562783718109131
    4. ' queue' → logprob: -5.437783718109131
    5. ' itertools' → logprob: -5.437783718109131
    6. 'queue' → logprob: -8.937784194946289
    7. 'math' → logprob: -9.187784194946289
    8. ' heap' → logprob: -10.062784194946289
    9. ' sys' → logprob: -10.312784194946289
    10. ' threading' → logprob: -10.312784194946289

Token 14: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.301538348197937
    2. 'import' → logprob: -1.551538348197937
    3. ' import' → logprob: -3.0515384674072266
    4. '.import' → logprob: -7.176538467407227
    5. '```' → logprob: -8.801538467407227
    6. ' ' → logprob: -9.426538467407227
    7. '	import' → logprob: -10.051538467407227
    8. '.Counter' → logprob: -10.301538467407227
    9. ' .' → logprob: -11.301538467407227
    10. '_import' → logprob: -12.176538467407227

Token 15: ' defaultdict' (ID: 107098)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.8695448040962219
    2. 'deque' → logprob: -1.1195447444915771
    3. ' defaultdict' → logprob: -1.3695447444915771
    4. 'default' → logprob: -8.619544982910156
    5. 'de' → logprob: -10.869544982910156
    6. '```' → logprob: -13.119544982910156
    7. ' named' → logprob: -13.619544982910156
    8. ' de' → logprob: -13.744544982910156
    9. ' Counter' → logprob: -13.994544982910156
    10. 'named' → logprob: -14.369544982910156

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039729103446006775
    2. 'def' → logprob: -4.289729118347168
    3. '' → logprob: -5.539729118347168
    4. 'd' → logprob: -5.539729118347168
    5. '

' → logprob: -5.789729118347168
    6. '\' → logprob: -6.289729118347168
    7. '\n' → logprob: -6.289729118347168
    8. '
' → logprob: -6.414729118347168
    9. '`
' → logprob: -6.539729118347168
    10. '(' → logprob: -6.664729118347168

Token 17: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14893172681331635
    2. 'd' → logprob: -2.3989317417144775
    3. '
' → logprob: -4.523931503295898
    4. 'default' → logprob: -4.648931503295898
    5. 'heap' → logprob: -4.648931503295898
    6. 'class' → logprob: -4.898931503295898
    7. '`' → logprob: -5.898931503295898
    8. '' → logprob: -6.773931503295898
    9. '`
' → logprob: -7.148931503295898
    10. '```' → logprob: -7.148931503295898

Token 18: ' D' (ID: 415)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028541946783661842
    2. ' Priority' → logprob: -3.7785420417785645
    3. ' My' → logprob: -6.4035420417785645
    4. ' Heap' → logprob: -6.4035420417785645
    5. ' Trie' → logprob: -7.0285420417785645
    6. ' Min' → logprob: -8.278541564941406
    7. ' Multi' → logprob: -9.153541564941406
    8. ' A' → logprob: -9.153541564941406
    9. ' Graph' → logprob: -9.278541564941406
    10. ' ' → logprob: -9.903541564941406

Token 19: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.003698058659210801
    2. 'ijk' → logprob: -6.128697872161865
    3. 'i' → logprob: -6.628697872161865
    4. 'ij' → logprob: -9.753698348999023
    5. 'I' → logprob: -9.753698348999023
    6. '   ' → logprob: -10.628698348999023
    7. 'Graph' → logprob: -10.628698348999023
    8. 'J' → logprob: -12.128698348999023
    9. 'jik' → logprob: -12.753698348999023
    10. 'S' → logprob: -12.753698348999023

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012328575365245342
    2. '(' → logprob: -5.262328624725342
    3. '():' → logprob: -5.762328624725342
    4. '(:' → logprob: -6.262328624725342
    5. 'Colon' → logprob: -7.262328624725342
    6. '```' → logprob: -7.762328624725342
    7. ':**' → logprob: -8.387328147888184
    8. '(":' → logprob: -9.012328147888184
    9. 'Solver' → logprob: -10.137328147888184
    10. '{' → logprob: -10.262328147888184

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13107790052890778
    2. ' def' → logprob: -2.756078004837036
    3. ' ' → logprob: -4.131077766418457
    4. ':' → logprob: -4.131077766418457
    5. '    ' → logprob: -4.256077766418457
    6. '    
' → logprob: -5.506077766418457
    7. '```' → logprob: -6.506077766418457
    8. '<|end|>' → logprob: -6.506077766418457
    9. 'def' → logprob: -6.631077766418457
    10. '  ' → logprob: -7.131077766418457

Token 22: ' """' (ID: 9280)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.01530289277434349
    2. 'def' → logprob: -4.640302658081055
    3. '   ' → logprob: -5.515302658081055
    4. ' ' → logprob: -7.265302658081055
    5. '    ' → logprob: -7.765302658081055
    6. '    
' → logprob: -8.765302658081055
    7. ' 
' → logprob: -9.390302658081055
    8. '     
' → logprob: -10.265302658081055
    9. '	def' → logprob: -10.765302658081055
    10. '   
' → logprob: -11.265302658081055

Token 23: '高' (ID: 5319)
  Prédit: ' Implements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Implements' → logprob: -1.3300063610076904
    2. ' """' → logprob: -1.5800063610076904
    3. 'Shortest' → logprob: -1.8300063610076904
    4. ' Short' → logprob: -2.9550063610076904
    5. 'A' → logprob: -3.2050063610076904
    6. ' Single' → logprob: -3.3300063610076904
    7. ' Implementation' → logprob: -3.4550063610076904
    8. 'Implement' → logprob: -3.5800063610076904
    9. ' implements' → logprob: -3.8300063610076904
    10. ' Implement' → logprob: -3.9550063610076904

Token 24: '効' (ID: 132226)
  Prédit: '速'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '速' → logprob: -0.12202881276607513
    2. '精' → logprob: -2.9970288276672363
    3. '效' → logprob: -3.1220288276672363
    4. '   ' → logprob: -5.497028827667236
    5. '度' → logprob: -5.622028827667236
    6. '性能' → logprob: -5.747028827667236
    7. '级' → logprob: -5.997028827667236
    8. '阶' → logprob: -5.997028827667236
    9. ' ' → logprob: -6.997028827667236
    10. '  ' → logprob: -7.622028827667236

Token 25: '率' (ID: 19493)
  Prédit: '率'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '率' → logprob: -0.03878875449299812
    2. '```' → logprob: -3.4137887954711914
    3. '能' → logprob: -6.038788795471191
    4. '``' → logprob: -6.538788795471191
    5. '度' → logprob: -8.038788795471191
    6. '' → logprob: -8.913788795471191
    7. '__' → logprob: -9.038788795471191
    8. '果' → logprob: -10.038788795471191
    9. '' → logprob: -10.038788795471191
    10. '

' → logprob: -10.413788795471191

Token 26: 'な' (ID: 5784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.469085693359375
    2. ' な' → logprob: -1.719085693359375
    3. ' shortest' → logprob: -1.969085693359375
    4. ' の' → logprob: -2.219085693359375
    5. 'な' → logprob: -2.344085693359375
    6. ' を' → logprob: -3.094085693359375
    7. ' algorithm' → logprob: -3.719085693359375
    8. ' priority' → logprob: -3.844085693359375
    9. ' path' → logprob: -3.969085693359375
    10. ' implementation' → logprob: -4.344085693359375

Token 27: 'ダ' (ID: 27903)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4433126449584961
    2. '最' → logprob: -1.818312644958496
    3. ' 最' → logprob: -2.068312644958496
    4. '経' → logprob: -3.568312644958496
    5. '単' → logprob: -4.068312644958496
    6. '   ' → logprob: -5.318312644958496
    7. 'グ' → logprob: -5.818312644958496
    8. ' \xe8\xb7' → logprob: -5.943312644958496
    9. '  ' → logprob: -6.318312644958496
    10. '実' → logprob: -6.568312644958496

Token 28: 'イク' (ID: 105182)
  Prédit: 'イク'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'イク' → logprob: -0.28600817918777466
    2. 'イ' → logprob: -1.4110081195831299
    3. 'ijkstra' → logprob: -5.536008358001709
    4. 'jik' → logprob: -7.911008358001709
    5. 'ijk' → logprob: -8.91100788116455
    6. 'グ' → logprob: -9.53600788116455
    7. 'ー' → logprob: -9.66100788116455
    8. 'ィ' → logprob: -10.28600788116455
    9. 'イス' → logprob: -10.53600788116455
    10. '   ' → logprob: -10.78600788116455

Token 29: 'スト' (ID: 38236)
  Prédit: 'スト'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'スト' → logprob: -0.09883731603622437
    2. 'ス' → logprob: -2.723837375640869
    3. 'stra' → logprob: -4.348837375640869
    4. '스트' → logprob: -4.723837375640869
    5. '斯' → logprob: -5.848837375640869
    6. '```' → logprob: -6.348837375640869
    7. 'スタ' → logprob: -8.098836898803711
    8. '``' → logprob: -8.348836898803711
    9. 'str' → logprob: -8.473836898803711
    10. 'st' → logprob: -8.723836898803711

Token 30: 'ラ' (ID: 8547)
  Prédit: 'ラ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ラ' → logprob: -0.0008327359100803733
    2. 'ラス' → logprob: -7.875832557678223
    3. 'ラー' → logprob: -8.500832557678223
    4. '라' → logprob: -9.875832557678223
    5. '```' → logprob: -9.875832557678223
    6. '_' → logprob: -10.750832557678223
    7. '拉' → logprob: -11.000832557678223
    8. '"""' → logprob: -11.000832557678223
    9. 'ラム' → logprob: -11.250832557678223
    10. ''''' → logprob: -11.625832557678223

Token 31: '法' (ID: 5625)
  Prédit: '法'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '法' → logprob: -0.25628724694252014
    2. 'アル' → logprob: -1.7562872171401978
    3. 'Algorithm' → logprob: -4.381287097930908
    4. ' ア' → logprob: -4.506287097930908
    5. '```' → logprob: -4.756287097930908
    6. ' ' → logprob: -5.256287097930908
    7. 'algorithm' → logprob: -5.381287097930908
    8. '   ' → logprob: -5.631287097930908
    9. ' algorithm' → logprob: -5.881287097930908
    10. '算法' → logprob: -6.506287097930908

Token 32: '実' (ID: 38048)
  Prédit: 'で'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'で' → logprob: -1.0620520114898682
    2. 'を' → logprob: -1.4370520114898682
    3. '   ' → logprob: -1.8120520114898682
    4. 'の' → logprob: -2.062052011489868
    5. ' ' → logprob: -3.312052011489868
    6. 'によ' → logprob: -3.312052011489868
    7. '(' → logprob: -4.437051773071289
    8. '```' → logprob: -4.812051773071289
    9. ' for' → logprob: -5.062051773071289
    10. ':' → logprob: -5.437051773071289

Token 33: '装' (ID: 17137)
  Prédit: '装'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '装' → logprob: -0.0004375830467324704
    2. '現' → logprob: -7.7504377365112305
    3. '行' → logprob: -12.50043773651123
    4. '践' → logprob: -13.12543773651123
    5. '```' → logprob: -14.62543773651123
    6. '施' → logprob: -14.75043773651123
    7. '裝' → logprob: -15.50043773651123
    8. '験' → logprob: -17.500436782836914
    9. '현' → logprob: -17.500436782836914
    10. '现' → logprob: -18.625436782836914

Token 34: '。' (ID: 788)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031961895525455475
    2. ' ' → logprob: -4.156961917877197
    3. '```' → logprob: -5.156961917877197
    4. '
' → logprob: -5.656961917877197
    5. ':' → logprob: -6.406961917877197
    6. 'の' → logprob: -6.781961917877197
    7. '  ' → logprob: -7.031961917877197
    8. 'を' → logprob: -7.906961917877197
    9. '(' → logprob: -8.031961441040039
    10. ' for' → logprob: -8.781961441040039

Token 35: '�' (ID: 11676)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5972076058387756
    2. '```' → logprob: -0.8472076058387756
    3. '   ' → logprob: -4.472207546234131
    4. '"""
' → logprob: -5.097207546234131
    5. '`' → logprob: -6.472207546234131
    6. '"' → logprob: -7.722207546234131
    7. '``' → logprob: -8.222208023071289
    8. ' """' → logprob: -8.347208023071289
    9. '
' → logprob: -8.347208023071289
    10. '\n' → logprob: -8.597208023071289

Token 36: '�' (ID: 96)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5102359652519226
    2. ' """' → logprob: -2.2602360248565674
    3. 'を' → logprob: -2.3852360248565674
    4. '```' → logprob: -3.5102360248565674
    5. 'の' → logprob: -3.6352360248565674
    6. 'で' → logprob: -3.7602360248565674
    7. 'ー' → logprob: -4.010235786437988
    8. '"""
' → logprob: -4.135235786437988
    9. '。' → logprob: -4.135235786437988
    10. '*' → logprob: -4.760235786437988

Token 37: '接' (ID: 9878)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15112647414207458
    2. ' """' → logprob: -2.1511263847351074
    3. ' """
' → logprob: -4.401126384735107
    4. '"""' → logprob: -5.526126384735107
    5. '```' → logprob: -6.776126384735107
    6. '   ' → logprob: -7.276126384735107
    7. ' ```' → logprob: -7.276126384735107
    8. 'を' → logprob: -7.401126384735107
    9. '  ' → logprob: -7.776126384735107
    10. 'の' → logprob: -7.776126384735107

Token 38: 'リ' (ID: 9007)
  Prédit: 'グ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'グ' → logprob: -2.1538729667663574
    2. '```' → logprob: -2.1538729667663574
    3. 'な' → logprob: -2.2788729667663574
    4. '続' → logprob: -2.7788729667663574
    5. '法' → logprob: -2.7788729667663574
    6. 'で' → logprob: -2.9038729667663574
    7. 'を' → logprob: -3.0288729667663574
    8. 'ション' → logprob: -3.1538729667663574
    9. 'の' → logprob: -3.4038729667663574
    10. '経' → logprob: -3.4038729667663574

Token 39: 'スト' (ID: 38236)
  Prédit: 'ッ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ッ' → logprob: -1.341477394104004
    2. 'ョ' → logprob: -1.341477394104004
    3. 'ス' → logprob: -1.841477394104004
    4. 'ー' → logprob: -2.591477394104004
    5. 'ク' → logprob: -2.966477394104004
    6. 'スト' → logprob: -3.091477394104004
    7. 'ン' → logprob: -3.591477394104004
    8. '�' → logprob: -3.966477394104004
    9. '続' → logprob: -3.966477394104004
    10. '��' → logprob: -4.591477394104004

Token 40: 'に' (ID: 5280)
  Prédit: 'で'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'で' → logprob: -1.3153963088989258
    2. 'を' → logprob: -1.4403963088989258
    3. 'の' → logprob: -1.8153963088989258
    4. ' ' → logprob: -2.315396308898926
    5. 'によ' → logprob: -2.440396308898926
    6. '"""' → logprob: -2.940396308898926
    7. ' を' → logprob: -3.565396308898926
    8. ' の' → logprob: -4.440396308898926
    9. ' """' → logprob: -4.440396308898926
    10. 'に' → logprob: -4.940396308898926

Token 41: 'default' (ID: 4211)
  Prédit: '対応'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '対応' → logprob: -0.4543705880641937
    2. 'よ' → logprob: -1.5793706178665161
    3. '基' → logprob: -2.5793704986572266
    4. '対' → logprob: -3.7043704986572266
    5. 'な' → logprob: -4.329370498657227
    6. 'より' → logprob: -5.204370498657227
    7. '使' → logprob: -5.329370498657227
    8. 'を' → logprob: -5.329370498657227
    9. '用' → logprob: -5.704370498657227
    10. 'お' → logprob: -6.079370498657227

Token 42: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.004404363222420216
    2. ' dict' → logprob: -5.879404544830322
    3. '辞' → logprob: -7.129404544830322
    4. '_' → logprob: -7.879404544830322
    5. '(dict' → logprob: -10.129404067993164
    6. 'を' → logprob: -10.254404067993164
    7. 'd' → logprob: -10.254404067993164
    8. 'dic' → logprob: -10.379404067993164
    9. '値' → logprob: -10.379404067993164
    10. '�' → logprob: -10.379404067993164

Token 43: 'を' (ID: 7277)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.3539174199104309
    2. 'を' → logprob: -1.8539173603057861
    3. '(' → logprob: -2.353917360305786
    4. '(list' → logprob: -4.478917598724365
    5. 'で' → logprob: -4.978917598724365
    6. '(dict' → logprob: -5.228917598724365
    7. 'が' → logprob: -5.353917598724365
    8. '（' → logprob: -5.728917598724365
    9. 'の' → logprob: -5.853917598724365
    10. ' を' → logprob: -6.353917598724365

Token 44: '利用' (ID: 68132)
  Prédit: '使'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '使' → logprob: -0.9695834517478943
    2. '用' → logprob: -1.344583511352539
    3. '使用' → logprob: -1.719583511352539
    4. ')' → logprob: -2.969583511352539
    5. '利用' → logprob: -3.094583511352539
    6. 'して' → logprob: -4.094583511352539
    7. '()' → logprob: -4.594583511352539
    8. '）' → logprob: -4.844583511352539
    9. 'した' → logprob: -4.969583511352539
    10. 'from' → logprob: -4.969583511352539

Token 45: '。' (ID: 788)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7824245691299438
    2. 'を' → logprob: -1.4074245691299438
    3. 'で' → logprob: -1.9074245691299438
    4. '```' → logprob: -2.6574244499206543
    5. '。' → logprob: -4.532424449920654
    6. ')' → logprob: -4.657424449920654
    7. '}' → logprob: -4.782424449920654
    8. 'の' → logprob: -5.032424449920654
    9. 'として' → logprob: -5.157424449920654
    10. '）' → logprob: -5.157424449920654

Token 46: '"""

' (ID: 34508)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.07129251211881638
    2. '```' → logprob: -2.8212924003601074
    3. ' """' → logprob: -5.571292400360107
    4. '   ' → logprob: -6.196292400360107
    5. '"' → logprob: -7.321292400360107
    6. '"""
' → logprob: -7.696292400360107
    7. 'を' → logprob: -8.196292877197266
    8. '`' → logprob: -8.446292877197266
    9. ' ' → logprob: -8.446292877197266
    10. '）' → logprob: -8.446292877197266

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09037868678569794
    2. '    
' → logprob: -3.465378761291504
    3. 'def' → logprob: -3.715378761291504
    4. ' def' → logprob: -4.090378761291504
    5. '
' → logprob: -4.340378761291504
    6. ' ' → logprob: -7.840378761291504
    7. '    ' → logprob: -8.965378761291504
    8. ' 
' → logprob: -9.340378761291504
    9. '   
' → logprob: -9.340378761291504
    10. '	def' → logprob: -9.590378761291504

Token 48: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31484413146972656
    2. ' def' → logprob: -1.3148441314697266
    3. '   ' → logprob: -6.564844131469727
    4. 'de' → logprob: -8.814844131469727
    5. ' de' → logprob: -11.689844131469727
    6. '
' → logprob: -12.314844131469727
    7. ' ' → logprob: -12.939844131469727
    8. '    
' → logprob: -13.439844131469727
    9. '```' → logprob: -13.939844131469727
    10. 'default' → logprob: -14.314844131469727

Token 49: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.349523663520813
    2. 'slots' → logprob: -1.224523663520813
    3. 'graph' → logprob: -8.099523544311523
    4. 'heap' → logprob: -8.724523544311523
    5. 'def' → logprob: -8.849523544311523
    6. 'in' → logprob: -8.974523544311523
    7. '_init' → logprob: -9.599523544311523
    8. 'slot' → logprob: -9.974523544311523
    9. '_slots' → logprob: -10.224523544311523
    10. 'INIT' → logprob: -10.599523544311523

Token 50: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03879253938794136
    2. ' =' → logprob: -3.913792610168457
    3. '=' → logprob: -4.038792610168457
    4. '=['' → logprob: -8.288792610168457
    5. '__[' → logprob: -9.788792610168457
    6. '___' → logprob: -10.288792610168457
    7. '＝' → logprob: -10.413792610168457
    8. '__('' → logprob: -10.663792610168457
    9. '__["' → logprob: -11.538792610168457
    10. '_' → logprob: -11.663792610168457

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023859571665525436
    2. '=' → logprob: -3.7738595008850098
    3. ' =[' → logprob: -8.148859977722168
    4. '=['' → logprob: -8.523859977722168
    5. '[' → logprob: -10.398859977722168
    6. ' ' → logprob: -10.398859977722168
    7. '(' → logprob: -10.773859977722168
    8. ' (' → logprob: -11.898859977722168
    9. '=[' → logprob: -12.023859977722168
    10. '['' → logprob: -12.273859977722168

Token 52: ' ('' (ID: 9906)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -1.0637835264205933
    2. '["' → logprob: -1.9387835264205933
    3. '['_' → logprob: -1.9387835264205933
    4. ''' → logprob: -2.313783645629883
    5. '('_' → logprob: -2.688783645629883
    6. '["_' → logprob: -2.813783645629883
    7. '[' → logprob: -4.063783645629883
    8. ' ['' → logprob: -4.063783645629883
    9. '{"' → logprob: -4.438783645629883
    10. '"' → logprob: -4.438783645629883

Token 53: '_' (ID: 62)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.05636463314294815
    2. '_graph' → logprob: -4.4313645362854
    3. 'adj' → logprob: -4.4313645362854
    4. 'g' → logprob: -4.9313645362854
    5. 'G' → logprob: -5.1813645362854
    6. 'dist' → logprob: -5.4313645362854
    7. 'edges' → logprob: -5.5563645362854
    8. 'n' → logprob: -5.8063645362854
    9. 'V' → logprob: -6.3063645362854
    10. ' graph' → logprob: -7.0563645362854

Token 54: 'G' (ID: 38)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06198202446103096
    2. 'dist' → logprob: -3.8119819164276123
    3. 'g' → logprob: -4.311982154846191
    4. 'adj' → logprob: -4.936982154846191
    5. 'edges' → logprob: -5.186982154846191
    6. 'n' → logprob: -5.436982154846191
    7. 'G' → logprob: -5.811982154846191
    8. 'V' → logprob: -6.311982154846191
    9. 'heap' → logprob: -8.186982154846191
    10. 'N' → logprob: -8.311982154846191

Token 55: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.2633993327617645
    2. '')' → logprob: -1.513399362564087
    3. '','' → logprob: -4.888399124145508
    4. ''' → logprob: -6.388399124145508
    5. 'raph' → logprob: -7.013399124145508
    6. ',' → logprob: -7.138399124145508
    7. ','' → logprob: -9.138399124145508
    8. '',"' → logprob: -9.388399124145508
    9. '_' → logprob: -9.763399124145508
    10. ',_' → logprob: -10.138399124145508

Token 56: ' '_' (ID: 20523)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.45520663261413574
    2. ''s' → logprob: -2.4552066326141357
    3. ''' → logprob: -2.7052066326141357
    4. ' '_' → logprob: -3.5802066326141357
    5. ' _' → logprob: -3.7052066326141357
    6. '_' → logprob: -3.7052066326141357
    7. ' distances' → logprob: -3.8302066326141357
    8. 'dist' → logprob: -4.330206871032715
    9. ')' → logprob: -4.830206871032715
    10. 'distance' → logprob: -4.955206871032715

Token 57: 'V' (ID: 53)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.49528709053993225
    2. 'V' → logprob: -2.2452871799468994
    3. 'n' → logprob: -2.2452871799468994
    4. 'start' → logprob: -3.4952871799468994
    5. 'd' → logprob: -3.7452871799468994
    6. 'N' → logprob: -4.12028694152832
    7. 'src' → logprob: -4.24528694152832
    8. 'source' → logprob: -4.37028694152832
    9. 'cost' → logprob: -4.49528694152832
    10. 'h' → logprob: -4.74528694152832

Token 58: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2558424770832062
    2. '',' → logprob: -1.5058424472808838
    3. ',' → logprob: -6.130842685699463
    4. ''' → logprob: -7.130842685699463
    5. ')' → logprob: -7.255842685699463
    6. '_' → logprob: -9.255842208862305
    7. ','' → logprob: -10.505842208862305
    8. '','' → logprob: -10.505842208862305
    9. ' ')' → logprob: -10.505842208862305
    10. '(',' → logprob: -11.880842208862305

Token 59: ' '_' (ID: 20523)
  Prédit: ' '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '_' → logprob: -0.6520156860351562
    2. ''_' → logprob: -1.6520156860351562
    3. ''' → logprob: -1.9020156860351562
    4. ' '' → logprob: -2.0270156860351562
    5. ''s' → logprob: -6.777015686035156
    6. ')' → logprob: -7.277015686035156
    7. ''S' → logprob: -7.402015686035156
    8. '_' → logprob: -7.839515686035156
    9. ''D' → logprob: -8.339515686035156
    10. ''E' → logprob: -8.402015686035156

Token 60: 'E' (ID: 36)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6634660363197327
    2. 'E' → logprob: -1.538465976715088
    3. 'd' → logprob: -2.663465976715088
    4. 'source' → logprob: -3.538465976715088
    5. 'start' → logprob: -3.663465976715088
    6. 'prev' → logprob: -3.913465976715088
    7. 'src' → logprob: -4.538465976715088
    8. 'cost' → logprob: -4.663465976715088
    9. 'inf' → logprob: -4.663465976715088
    10. 'dis' → logprob: -4.788465976715088

Token 61: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.07527835667133331
    2. '',' → logprob: -2.9502782821655273
    3. ')' → logprob: -4.075278282165527
    4. ',' → logprob: -5.950278282165527
    5. ''' → logprob: -7.825278282165527
    6. '_' → logprob: -9.075278282165527
    7. '）' → logprob: -10.700278282165527
    8. '','' → logprob: -11.325278282165527
    9. '')
' → logprob: -11.325278282165527
    10. ','' → logprob: -11.950278282165527

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12155884504318237
    2. '   ' → logprob: -2.371558904647827
    3. 'def' → logprob: -4.621558666229248
    4. ' def' → logprob: -4.746558666229248
    5. '    
' → logprob: -6.496558666229248
    6. '\n' → logprob: -8.246559143066406
    7. '	def' → logprob: -8.746559143066406
    8. '
' → logprob: -8.871559143066406
    9. '

' → logprob: -8.996559143066406
    10. ' ' → logprob: -9.121559143066406

Token 63: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.043706588447093964
    2. ' def' → logprob: -3.1687066555023193
    3. '   ' → logprob: -7.29370641708374
    4. 'de' → logprob: -11.168706893920898
    5. '
' → logprob: -11.918706893920898
    6. '	def' → logprob: -13.418706893920898
    7. '    
' → logprob: -13.543706893920898
    8. 'd' → logprob: -14.293706893920898
    9. '__' → logprob: -14.418706893920898
    10. ' ' → logprob: -14.543706893920898

Token 64: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.001550332992337644
    2. ' def' → logprob: -7.001550197601318
    3. '_init' → logprob: -8.626550674438477
    4. ' _' → logprob: -8.751550674438477
    5. ' init' → logprob: -8.876550674438477
    6. '__' → logprob: -9.251550674438477
    7. ' ' → logprob: -10.501550674438477
    8. 'def' → logprob: -11.001550674438477
    9. 'init' → logprob: -11.251550674438477
    10. '_' → logprob: -12.876550674438477

Token 65: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0280383548888494e-06
    2. 'slots' → logprob: -14.000000953674316
    3. ' init' → logprob: -16.250001907348633
    4. '_init' → logprob: -17.750001907348633
    5. 'ini' → logprob: -19.750001907348633
    6. 'new' → logprob: -20.125001907348633
    7. 'inite' → logprob: -20.750001907348633
    8. '	init' → logprob: -20.875001907348633
    9. 'slot' → logprob: -20.875001907348633
    10. '.init' → logprob: -21.375001907348633

Token 66: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3649306297302246
    2. '(self' → logprob: -2.3649306297302246
    3. '__(' → logprob: -2.3649306297302246
    4. ' (' → logprob: -2.4899306297302246
    5. '<|end|>' → logprob: -3.9899306297302246
    6. 'self' → logprob: -5.739930629730225
    7. ')(' → logprob: -5.864930629730225
    8. ' ' → logprob: -6.114930629730225
    9. '__(
' → logprob: -6.364930629730225
    10. '<|end|>' → logprob: -6.739930629730225

Token 67: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013290488859638572
    2. ' self' → logprob: -6.626328945159912
    3. ' ' → logprob: -13.87632942199707
    4. '   ' → logprob: -14.25132942199707
    5. '(self' → logprob: -14.87632942199707
    6. '	self' → logprob: -15.12632942199707
    7. '       ' → logprob: -15.50132942199707
    8. 's' → logprob: -15.75132942199707
    9. '
' → logprob: -15.87632942199707
    10. '_self' → logprob: -16.00132942199707

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43254682421684265
    2. '(self' → logprob: -1.557546854019165
    3. '(' → logprob: -2.432546854019165
    4. ' ,' → logprob: -3.557546854019165
    5. ' (' → logprob: -4.807546615600586
    6. 'self' → logprob: -4.807546615600586
    7. ')(' → logprob: -6.057546615600586
    8. ' self' → logprob: -6.182546615600586
    9. ')' → logprob: -7.182546615600586
    10. ',self' → logprob: -7.307546615600586

Token 69: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.1462591588497162
    2. 'self' → logprob: -2.646259069442749
    3. ' V' → logprob: -3.771259069442749
    4. 'n' → logprob: -3.896259069442749
    5. ' self' → logprob: -4.771259307861328
    6. 'G' → logprob: -5.646259307861328
    7. 'graph' → logprob: -5.896259307861328
    8. '   ' → logprob: -6.021259307861328
    9. ' n' → logprob: -6.271259307861328
    10. 'num' → logprob: -7.146259307861328

Token 70: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1620076447725296
    2. '):' → logprob: -1.9120076894760132
    3. ' ):' → logprob: -7.162007808685303
    4. ')' → logprob: -7.537007808685303
    5. ':' → logprob: -7.787007808685303
    6. ' ,' → logprob: -10.162007331848145
    7. '=' → logprob: -12.287007331848145
    8. ' )' → logprob: -12.537007331848145
    9. '   ' → logprob: -12.787007331848145
    10. ' :' → logprob: -13.662007331848145

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0606793537735939
    2. '   ' → logprob: -3.8106794357299805
    3. '<|end|>' → logprob: -4.8106794357299805
    4. '    
' → logprob: -5.0606794357299805
    5. '        
' → logprob: -5.1856794357299805
    6. ' 
' → logprob: -5.6856794357299805
    7. 'self' → logprob: -5.6856794357299805
    8. '
' → logprob: -5.8106794357299805
    9. ' self' → logprob: -6.5606794357299805
    10. '    ' → logprob: -6.9356794357299805

Token 72: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.41854867339134216
    2. 'self' (adapté à ' self') → logprob: -1.1685487031936646
    3. '       ' → logprob: -3.543548583984375
    4. '	self' → logprob: -6.918548583984375
    5. '   ' → logprob: -7.918548583984375
    6. ' ' → logprob: -7.918548583984375
    7. ' ' → logprob: -8.543548583984375
    8. '	' → logprob: -9.293548583984375
    9. '        ' → logprob: -10.043548583984375
    10. '        
' → logprob: -10.293548583984375

Token 73: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0028778647538274527
    2. '.' → logprob: -6.002877712249756
    3. ' .' → logprob: -7.877877712249756
    4. ' ' → logprob: -11.127878189086914
    5. '.V' → logprob: -13.252878189086914
    6. ')._' → logprob: -13.377878189086914
    7. '.G' → logprob: -13.502878189086914
    8. '.__' → logprob: -14.377878189086914
    9. ']._' → logprob: -14.377878189086914
    10. ' _' → logprob: -15.002878189086914

Token 74: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0017033906187862158
    2. 'G' → logprob: -6.376703262329102
    3. '_V' → logprob: -14.376703262329102
    4. ' V' → logprob: -14.626703262329102
    5. '_G' → logprob: -16.7517032623291
    6. '	V' → logprob: -17.2517032623291
    7. '

' → logprob: -17.8767032623291
    8. '
' → logprob: -18.0017032623291
    9. '-V' → logprob: -18.0017032623291
    10. '   ' → logprob: -18.1267032623291

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03364742547273636
    2. '=' → logprob: -3.4086475372314453
    3. '＝' → logprob: -14.658647537231445
    4. ' ' → logprob: -14.783647537231445
    5. ',' → logprob: -14.783647537231445
    6. ')' → logprob: -15.408647537231445
    7. ' =)' → logprob: -15.908647537231445
    8. ' =
' → logprob: -16.408647537231445
    9. '    ' → logprob: -16.908647537231445
    10. '   ' → logprob: -17.658647537231445

Token 76: ' V' (ID: 631)
  Prédit: ' V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.011052536778151989
    2. 'V' → logprob: -4.51105260848999
    3. ' ' → logprob: -13.136052131652832
    4. '	V' → logprob: -13.136052131652832
    5. ' int' → logprob: -14.886052131652832
    6. '    ' → logprob: -15.636052131652832
    7. 'int' → logprob: -15.761052131652832
    8. ' ' → logprob: -16.76105308532715
    9. '   ' → logprob: -17.88605308532715
    10. '  ' → logprob: -18.01105308532715

Token 77: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1090579703450203
    2. '<|end|>' → logprob: -2.859057903289795
    3. '       ' → logprob: -3.109057903289795
    4. '<|end|>' → logprob: -7.734057903289795
    5. 'self' → logprob: -7.984057903289795
    6. '        ' → logprob: -8.859058380126953
    7. ' ' → logprob: -9.234058380126953
    8. ' 
' → logprob: -9.359058380126953
    9. '        
' → logprob: -9.484058380126953
    10. ')' → logprob: -10.484058380126953

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007372708059847355
    2. '
' → logprob: -5.007372856140137
    3. 'self' → logprob: -7.507372856140137
    4. ' self' → logprob: -9.757372856140137
    5. '<|end|>' → logprob: -11.382372856140137
    6. ',' → logprob: -11.507372856140137
    7. '   ' → logprob: -11.882372856140137
    8. ' ' → logprob: -12.382372856140137
    9. '        
' → logprob: -12.382372856140137
    10. '
' → logprob: -12.882372856140137

Token 79: ' self' (ID: 1051)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.5149539709091187
    2. 'self' (adapté à ' self') → logprob: -1.0149539709091187
    3. '[' → logprob: -4.014954090118408
    4. '{}' → logprob: -5.139954090118408
    5. '{' → logprob: -5.639954090118408
    6. ' self' → logprob: -5.764954090118408
    7. ' defaultdict' → logprob: -6.139954090118408
    8. '{}
' → logprob: -6.389954090118408
    9. '[]' → logprob: -6.889954090118408
    10. '[]
' → logprob: -7.014954090118408

Token 80: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.2233183042553719e-05
    2. ' .' → logprob: -11.875012397766113
    3. ']._' → logprob: -13.125012397766113
    4. ')._' → logprob: -13.125012397766113
    5. '.' → logprob: -13.875012397766113
    6. '._
' → logprob: -16.125011444091797
    7. '.__' → logprob: -16.500011444091797
    8. '."_' → logprob: -17.625011444091797
    9. '.​' → logprob: -17.875011444091797
    10. '.'_' → logprob: -17.875011444091797

Token 81: 'E' (ID: 36)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -3.4121114822482923e-06
    2. 'E' → logprob: -12.750003814697266
    3. '_G' → logprob: -15.125003814697266
    4. ' G' → logprob: -15.250003814697266
    5. 'Ｇ' → logprob: -17.125003814697266
    6. '
' → logprob: -18.250003814697266
    7. '	G' → logprob: -18.500003814697266
    8. '﻿' → logprob: -19.500003814697266
    9. '  ' → logprob: -19.625003814697266
    10. '​' → logprob: -19.687503814697266

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026364266872406
    2. '=' → logprob: -1.9102636575698853
    3. '=[]' → logprob: -11.160264015197754
    4. ' ' → logprob: -11.285264015197754
    5. '={}' → logprob: -11.660264015197754
    6. '＝' → logprob: -13.535264015197754
    7. '[]' → logprob: -14.910264015197754
    8. '  ' → logprob: -15.160264015197754
    9. '[' → logprob: -15.410264015197754
    10. '   ' → logprob: -15.410264015197754

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10392437130212784
    2. 'default' → logprob: -2.85392427444458
    3. '[]' → logprob: -3.47892427444458
    4. ' ' → logprob: -4.85392427444458
    5. '{}' → logprob: -6.47892427444458
    6. ' defaultdict' → logprob: -7.47892427444458
    7. '[' → logprob: -8.478924751281738
    8. ' []' → logprob: -9.603924751281738
    9. '{' → logprob: -11.103924751281738
    10. '"default' → logprob: -11.978924751281738

Token 84: '0' (ID: 15)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.6187455058097839
    2. '0' → logprob: -0.8687455058097839
    3. '[]' → logprob: -3.2437455654144287
    4. ' ' → logprob: -6.49374532699585
    5. '{}' → logprob: -6.99374532699585
    6. ' defaultdict' → logprob: -8.618745803833008
    7. '[' → logprob: -8.993745803833008
    8. 'def' → logprob: -10.118745803833008
    9. ' []' → logprob: -10.243745803833008
    10. ''default' → logprob: -11.118745803833008

Token 85: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38736772537231445
    2. '       ' → logprob: -1.1373677253723145
    3. '<|end|>' → logprob: -8.137367248535156
    4. 'self' → logprob: -9.512367248535156
    5. ' 
' → logprob: -10.637367248535156
    6. '   ' → logprob: -10.637367248535156
    7. '
' → logprob: -10.887367248535156
    8. ' ' → logprob: -11.012367248535156
    9. '        
' → logprob: -11.262367248535156
    10. ' self' → logprob: -12.012367248535156

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1804121881723404
    2. '
' → logprob: -1.8054121732711792
    3. 'self' → logprob: -7.930412292480469
    4. '        
' → logprob: -9.805412292480469
    5. '<|end|>' → logprob: -9.805412292480469
    6. '   ' → logprob: -10.055412292480469
    7. ' self' → logprob: -10.305412292480469
    8. ' 
' → logprob: -10.430412292480469
    9. '
' → logprob: -10.930412292480469
    10. ' ' → logprob: -11.180412292480469

Token 87: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.39300620555877686
    2. ' self' → logprob: -1.2680062055587769
    3. '       ' → logprob: -3.1430063247680664
    4. '   ' → logprob: -8.393006324768066
    5. ' ' → logprob: -9.018006324768066
    6. '	self' → logprob: -10.518006324768066
    7. '    ' → logprob: -11.768006324768066
    8. '      ' → logprob: -12.018006324768066
    9. '     ' → logprob: -12.018006324768066
    10. '        ' → logprob: -12.393006324768066

Token 88: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0002655079588294029
    2. ' .' → logprob: -8.500265121459961
    3. '.' → logprob: -10.000265121459961
    4. '_' → logprob: -12.250265121459961
    5. ' ' → logprob: -12.625265121459961
    6. '_G' → logprob: -13.250265121459961
    7. ')._' → logprob: -13.625265121459961
    8. '   ' → logprob: -13.750265121459961
    9. '.G' → logprob: -13.875265121459961
    10. ']._' → logprob: -14.000265121459961

Token 89: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -9.088346359931165e-07
    2. ' G' → logprob: -15.000000953674316
    3. '_G' → logprob: -15.250000953674316
    4. 'from' → logprob: -16.25
    5. 'Ｇ' → logprob: -16.875
    6. '	G' → logprob: -18.0
    7. 'import' → logprob: -18.375
    8. 'default' → logprob: -18.625
    9. '<G' → logprob: -18.6875
    10. '  ' → logprob: -19.1875

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489165335893631
    2. '=' → logprob: -2.929891586303711
    3. ' defaultdict' → logprob: -12.179891586303711
    4. ' ' → logprob: -12.554891586303711
    5. '＝' → logprob: -15.429891586303711
    6. '[' → logprob: -15.679891586303711
    7. '={}' → logprob: -16.05489158630371
    8. ' =)' → logprob: -16.92989158630371
    9. 'default' → logprob: -17.17989158630371
    10. ')' → logprob: -17.30489158630371

Token 91: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.06200163811445236
    2. ' defaultdict' → logprob: -2.8120017051696777
    3. ' default' → logprob: -10.43700122833252
    4. '.default' → logprob: -13.68700122833252
    5. '(default' → logprob: -13.93700122833252
    6. '"default' → logprob: -13.93700122833252
    7. ''default' → logprob: -14.56200122833252
    8. '	default' → logprob: -14.56200122833252
    9. '   ' → logprob: -15.81200122833252
    10. 'Default' → logprob: -16.312002182006836

Token 92: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.020759211853146553
    2. '(' → logprob: -4.020759105682373
    3. '(lambda' → logprob: -6.520759105682373
    4. '(dict' → logprob: -6.895759105682373
    5. '(
' → logprob: -9.270759582519531
    6. 'list' → logprob: -10.645759582519531
    7. ' (' → logprob: -14.270759582519531
    8. '(

' → logprob: -14.270759582519531
    9. '(tuple' → logprob: -14.770759582519531
    10. '（' → logprob: -14.895759582519531

Token 93: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ' )' → logprob: -11.625009536743164
    3. ')
' → logprob: -15.750009536743164
    4. '))' → logprob: -16.500009536743164
    5. ' ' → logprob: -16.625009536743164
    6. '()' → logprob: -16.875009536743164
    7. '}' → logprob: -17.000009536743164
    8. '       ' → logprob: -17.125009536743164
    9. ')}}' → logprob: -17.125009536743164
    10. '   ' → logprob: -17.250009536743164

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2539673447608948
    2. '<|end|>' → logprob: -1.75396728515625
    3. '   ' → logprob: -3.50396728515625
    4. '    
' → logprob: -4.75396728515625
    5. ' 
' → logprob: -5.00396728515625
    6. '  
' → logprob: -6.00396728515625
    7. '<|end|>' → logprob: -6.37896728515625
    8. ' ' → logprob: -8.12896728515625
    9. '   
' → logprob: -8.25396728515625
    10. ')' → logprob: -8.37896728515625

Token 95: ' @' (ID: 759)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37711337208747864
    2. '   ' → logprob: -1.7521133422851562
    3. 'def' → logprob: -2.1271133422851562
    4. '    
' → logprob: -5.252113342285156
    5. ' def' → logprob: -5.627113342285156
    6. ' 
' → logprob: -5.627113342285156
    7. ' ' → logprob: -5.627113342285156
    8. ')' → logprob: -5.877113342285156
    9. '  
' → logprob: -6.752113342285156
    10. '   
' → logprob: -8.252113342285156

Token 96: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.16772666573524475
    2. 'staticmethod' → logprob: -1.9177266359329224
    3. 'classmethod' → logprob: -4.917726516723633
    4. 'dat' → logprob: -9.417726516723633
    5. 'l' → logprob: -10.167726516723633
    6. 'pro' → logprob: -11.542726516723633
    7. 'cache' → logprob: -12.292726516723633
    8. 'static' → logprob: -12.542726516723633
    9. 'param' → logprob: -12.667726516723633
    10. 'ti' → logprob: -12.917726516723633

Token 97: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024907607585191727
    2. '
' → logprob: -6.252490997314453
    3. '   ' → logprob: -8.127490997314453
    4. ' def' → logprob: -8.502490997314453
    5. '<|end|>' → logprob: -10.377490997314453
    6. '\' → logprob: -11.752490997314453
    7. '<|end|>' → logprob: -11.877490997314453
    8. 'de' → logprob: -12.127490997314453
    9. '	def' → logprob: -12.252490997314453
    10. '_def' → logprob: -13.627490997314453

Token 98: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007904945872724056
    2. '
' → logprob: -4.882905006408691
    3. '   ' → logprob: -8.757905006408691
    4. ' def' → logprob: -9.257905006408691
    5. '<|end|>' → logprob: -11.007905006408691
    6. '    
' → logprob: -11.632905006408691
    7. '\' → logprob: -12.382905006408691
    8. '	def' → logprob: -12.507905006408691
    9. '<|end|>' → logprob: -12.507905006408691
    10. '  
' → logprob: -13.257905006408691

Token 99: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00012797261297237128
    2. ' def' → logprob: -9.625127792358398
    3. '
' → logprob: -9.750127792358398
    4. '   ' → logprob: -13.625127792358398
    5. 'de' → logprob: -13.875127792358398
    6. 'V' → logprob: -14.625127792358398
    7. '    
' → logprob: -15.000127792358398
    8. '	def' → logprob: -15.750127792358398
    9. ':def' → logprob: -16.0001277923584
    10. '

' → logprob: -16.1251277923584

Token 100: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.524420440196991
    2. ' V' → logprob: -1.1494204998016357
    3. 'G' → logprob: -3.7744204998016357
    4. 'E' → logprob: -3.8994204998016357
    5. '_V' → logprob: -4.149420261383057
    6. ' G' → logprob: -4.774420261383057
    7. ' E' → logprob: -5.274420261383057
    8. ' ' → logprob: -5.899420261383057
    9. ' _' → logprob: -6.024420261383057
    10. ' graph' → logprob: -6.149420261383057

Token 101: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5152140259742737
    2. 'def' → logprob: -1.515213966369629
    3. ')' → logprob: -2.640213966369629
    4. '(' → logprob: -3.140213966369629
    5. '(self' → logprob: -3.890213966369629
    6. '<|end|>' → logprob: -4.015213966369629
    7. '<|end|>' → logprob: -4.765213966369629
    8. 'self' → logprob: -5.265213966369629
    9. '   ' → logprob: -5.390213966369629
    10. ' def' → logprob: -5.640213966369629

Token 102: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035855893045663834
    2. ')' → logprob: -3.410856008529663
    3. '):
' → logprob: -6.160855770111084
    4. 'self' → logprob: -10.285856246948242
    5. ' ):' → logprob: -10.910856246948242
    6. '):

' → logprob: -11.285856246948242
    7. '():' → logprob: -11.910856246948242
    8. '   ' → logprob: -12.410856246948242
    9. ':' → logprob: -12.535856246948242
    10. ')：' → logprob: -12.910856246948242

Token 103: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6282000541687012
    2. ' 
' → logprob: -1.7532000541687012
    3. '   ' → logprob: -2.503200054168701
    4. '    
' → logprob: -2.878200054168701
    5. '<|end|>' → logprob: -3.253200054168701
    6. 'return' → logprob: -3.503200054168701
    7. '        
' → logprob: -3.878200054168701
    8. ' return' → logprob: -4.003200054168701
    9. ' ' → logprob: -4.128200054168701
    10. '    ' → logprob: -4.253200054168701

Token 104: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.014166799373924732
    2. 'self' → logprob: -4.264166831970215
    3. ' ' → logprob: -13.014166831970215
    4. ' ' → logprob: -14.139166831970215
    5. '_self' → logprob: -15.139166831970215
    6. '	self' → logprob: -16.5141658782959
    7. ' _' → logprob: -18.8891658782959
    8. ' sel' → logprob: -19.2641658782959
    9. '(self' → logprob: -19.5141658782959
    10. '    ' → logprob: -19.5141658782959

Token 105: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0012222514487802982
    2. '.' → logprob: -6.876222133636475
    3. ' .' → logprob: -8.626222610473633
    4. '_' → logprob: -12.001222610473633
    5. '.__' → logprob: -13.876222610473633
    6. '.​' → logprob: -14.501222610473633
    7. '．' → logprob: -14.751222610473633
    8. ' ' → logprob: -14.876222610473633
    9. '.V' → logprob: -15.001222610473633
    10. '

' → logprob: -15.501222610473633

Token 106: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.1472419600977446e-06
    2. '_V' → logprob: -14.125000953674316
    3. ' V' → logprob: -15.875000953674316
    4. 'G' → logprob: -16.000001907348633
    5. 'VNode' → logprob: -16.875001907348633
    6. '	V' → logprob: -17.375001907348633
    7. '<V' → logprob: -18.625001907348633
    8. '(V' → logprob: -19.375001907348633
    9. 'Vpc' → logprob: -19.625001907348633
    10. '-V' → logprob: -19.625001907348633

Token 107: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10475926101207733
    2. '<|end|>' → logprob: -2.4797592163085938
    3. '

' → logprob: -4.729759216308594
    4. '   ' → logprob: -5.854759216308594
    5. '<|end|>' → logprob: -6.604759216308594
    6. '    
' → logprob: -7.104759216308594
    7. '\n' → logprob: -7.729759216308594
    8. '@property' → logprob: -7.854759216308594
    9. '
    
' → logprob: -8.229759216308594
    10. 'newline' → logprob: -8.354759216308594

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2562423348426819
    2. '<|end|>' → logprob: -2.006242275238037
    3. '
' → logprob: -2.881242275238037
    4. '    
' → logprob: -4.006242275238037
    5. '<|end|>' → logprob: -4.881242275238037
    6. ' ' → logprob: -5.381242275238037
    7. '  ' → logprob: -6.631242275238037
    8. '    ' → logprob: -6.756242275238037
    9. ' 
' → logprob: -7.631242275238037
    10. '  
' → logprob: -7.881242275238037

Token 109: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11492404341697693
    2. '   ' → logprob: -2.3649239540100098
    3. ' def' → logprob: -4.48992395401001
    4. '@' (adapté à ' @') → logprob: -6.36492395401001
    5. '@property' → logprob: -6.86492395401001
    6. ' ' → logprob: -7.98992395401001
    7. 'E' → logprob: -9.489924430847168
    8. '    
' → logprob: -10.114924430847168
    9. ' @' → logprob: -10.239924430847168
    10. '  ' → logprob: -10.489924430847168

Token 110: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -1.3856492842023727e-06
    2. '@property' → logprob: -14.250000953674316
    3. ' property' → logprob: -15.250000953674316
    4. 'V' → logprob: -15.375000953674316
    5. 'staticmethod' → logprob: -15.875000953674316
    6. 'E' → logprob: -16.000001907348633
    7. 'classmethod' → logprob: -17.125001907348633
    8. '_property' → logprob: -17.375001907348633
    9. '.property' → logprob: -18.000001907348633
    10. 'proper' → logprob: -18.125001907348633

Token 111: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20310825109481812
    2. ' def' → logprob: -1.703108310699463
    3. '
' → logprob: -6.828108310699463
    4. '   ' → logprob: -7.453108310699463
    5. '<|end|>' → logprob: -11.453107833862305
    6. '	def' → logprob: -11.578107833862305
    7. '<|end|>' → logprob: -12.828107833862305
    8. '    
' → logprob: -13.078107833862305
    9. '
' → logprob: -13.578107833862305
    10. ' ' → logprob: -13.578107833862305

Token 112: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04329204931855202
    2. ' def' → logprob: -3.1682920455932617
    3. '   ' → logprob: -8.168292045593262
    4. ' ' → logprob: -12.418292045593262
    5. '	def' → logprob: -12.793292045593262
    6. '
' → logprob: -13.918292045593262
    7. '  ' → logprob: -15.043292045593262
    8. '_def' → logprob: -15.168292045593262
    9. ':def' → logprob: -15.293292045593262
    10. '(' → logprob: -15.418292045593262

Token 113: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01282570231705904
    2. ' def' → logprob: -4.3878254890441895
    3. '   ' → logprob: -8.262825965881348
    4. 'E' → logprob: -9.887825965881348
    5. ' ' → logprob: -12.512825965881348
    6. ' E' → logprob: -13.512825965881348
    7. '  ' → logprob: -13.637825965881348
    8. '	def' → logprob: -14.512825965881348
    9. '
' → logprob: -15.887825965881348
    10. 'Def' → logprob: -16.51282501220703

Token 114: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.009867293760180473
    2. ' E' → logprob: -4.634867191314697
    3. '_E' → logprob: -9.259867668151855
    4. '   ' → logprob: -11.759867668151855
    5. ' ' → logprob: -12.759867668151855
    6. '  ' → logprob: -13.634867668151855
    7. '	E' → logprob: -13.759867668151855
    8. '
' → logprob: -13.759867668151855
    9. ' _' → logprob: -14.259867668151855
    10. 'def' → logprob: -15.134867668151855

Token 115: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004601015243679285
    2. '(' → logprob: -8.625459671020508
    3. '(s' → logprob: -8.625459671020508
    4. 'def' → logprob: -10.375459671020508
    5. ' (' → logprob: -11.000459671020508
    6. '   ' → logprob: -11.125459671020508
    7. ' ' → logprob: -11.125459671020508
    8. 'self' → logprob: -11.250459671020508
    9. ' self' → logprob: -12.625459671020508
    10. 's' → logprob: -13.500459671020508

Token 116: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013365629129111767
    2. ')' → logprob: -4.388365745544434
    3. '   ' → logprob: -8.263365745544434
    4. ' ):' → logprob: -8.513365745544434
    5. ':' → logprob: -8.638365745544434
    6. '):
' → logprob: -9.263365745544434
    7. ' ' → logprob: -10.138365745544434
    8. '():' → logprob: -10.888365745544434
    9. ');' → logprob: -11.763365745544434
    10. ':return' → logprob: -11.763365745544434

Token 117: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0005159787251614034
    2. ' ' → logprob: -8.750515937805176
    3. ' 
' → logprob: -8.875515937805176
    4. ' ' → logprob: -9.125515937805176
    5. 'return' → logprob: -9.250515937805176
    6. '
' → logprob: -12.500515937805176
    7. '    ' → logprob: -13.000515937805176
    8. ':return' → logprob: -13.500515937805176
    9. '   ' → logprob: -13.750515937805176
    10. '	return' → logprob: -13.875515937805176

Token 118: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04865935444831848
    2. 'self' → logprob: -3.048659324645996
    3. '_self' → logprob: -9.798659324645996
    4. ' ' → logprob: -12.173659324645996
    5. ' _' → logprob: -12.298659324645996
    6. ' ' → logprob: -13.173659324645996
    7. '(self' → logprob: -13.423659324645996
    8. '	self' → logprob: -13.548659324645996
    9. '_' → logprob: -13.673659324645996
    10. ' s' → logprob: -14.673659324645996

Token 119: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.005613049957901239
    2. '_' → logprob: -5.630612850189209
    3. '_E' → logprob: -6.380612850189209
    4. '.' → logprob: -8.380613327026367
    5. '_.' → logprob: -9.630613327026367
    6. ' _' → logprob: -12.005613327026367
    7. '_EOL' → logprob: -12.005613327026367
    8. '_V' → logprob: -13.380613327026367
    9. '.E' → logprob: -13.630613327026367
    10. '->_' → logprob: -13.630613327026367

Token 120: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -5.512236498361744e-07
    2. 'V' → logprob: -15.375000953674316
    3. '_E' → logprob: -15.500000953674316
    4. ' E' → logprob: -16.625
    5. 'Ｅ' → logprob: -19.125
    6. '	E' → logprob: -19.375
    7. 'Е' → logprob: -19.5
    8. 'G' → logprob: -20.0
    9. '-E' → logprob: -21.25
    10. ' ' → logprob: -21.375

Token 121: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.663752555847168
    2. '   ' → logprob: -1.038752555847168
    3. '    
' → logprob: -2.288752555847168
    4. 'def' → logprob: -3.663752555847168
    5. '<|end|>' → logprob: -6.288752555847168
    6. '        
' → logprob: -7.788752555847168
    7. '

' → logprob: -7.913752555847168
    8. '  
' → logprob: -8.163752555847168
    9. '<|end|>' → logprob: -8.163752555847168
    10. '```' → logprob: -8.288752555847168

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16360269486904144
    2. 'def' → logprob: -2.663602590560913
    3. '    
' → logprob: -2.663602590560913
    4. '
' → logprob: -4.663602828979492
    5. '        
' → logprob: -7.288602828979492
    6. '<|end|>' → logprob: -7.538602828979492
    7. ' def' → logprob: -8.538602828979492
    8. '  
' → logprob: -8.538602828979492
    9. ' 
' → logprob: -8.913602828979492
    10. '    ' → logprob: -9.163602828979492

Token 123: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000599976978264749
    2. ' def' → logprob: -7.7505998611450195
    3. '   ' → logprob: -8.87559986114502
    4. '
' → logprob: -10.62559986114502
    5. '    
' → logprob: -13.25059986114502
    6. 'de' → logprob: -13.25059986114502
    7. ' ' → logprob: -14.62559986114502
    8. '```' → logprob: -15.00059986114502
    9. '	def' → logprob: -15.12559986114502
    10. 'd' → logprob: -15.87559986114502

Token 124: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.020626557990908623
    2. 'add' → logprob: -4.145626544952393
    3. ' def' → logprob: -5.645626544952393
    4. '_add' → logprob: -7.770626544952393
    5. ' ' → logprob: -8.64562702178955
    6. 'def' → logprob: -8.77062702178955
    7. ' addedge' → logprob: -9.27062702178955
    8. '.add' → logprob: -10.27062702178955
    9. '   ' → logprob: -10.52062702178955
    10. ' ad' → logprob: -10.64562702178955

Token 125: '(self' (ID: 2402)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0005035852082073689
    2. '_' → logprob: -7.6255035400390625
    3. '_edges' → logprob: -12.750503540039062
    4. '_vertex' → logprob: -12.875503540039062
    5. '_e' → logprob: -13.250503540039062
    6. ' ' → logprob: -13.625503540039062
    7. 'edge' → logprob: -13.625503540039062
    8. '_node' → logprob: -14.000503540039062
    9. '_ed' → logprob: -14.125503540039062
    10. '_path' → logprob: -14.125503540039062

Token 126: ',' (ID: 11)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.7215567827224731
    2. 'dge' → logprob: -0.8465567827224731
    3. '_' → logprob: -2.8465566635131836
    4. 'd' → logprob: -3.7215566635131836
    5. 'g' → logprob: -6.846556663513184
    6. ')_' → logprob: -7.221556663513184
    7. 'edge' → logprob: -8.346556663513184
    8. 'rror' → logprob: -9.221556663513184
    9. '_vertex' → logprob: -9.471556663513184
    10. ')' → logprob: -9.471556663513184

Token 127: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2020915448665619
    2. ' u' → logprob: -2.2020914554595947
    3. 's' → logprob: -3.7020914554595947
    4. 'fr' → logprob: -4.202091693878174
    5. 'frm' → logprob: -4.827091693878174
    6. 'v' → logprob: -5.202091693878174
    7. ' s' → logprob: -5.202091693878174
    8. ' fr' → logprob: -5.827091693878174
    9. ')' → logprob: -6.202091693878174
    10. 'f' → logprob: -6.327091693878174

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5451681974809617e-05
    2. ' ,' → logprob: -11.125015258789062
    3. ',u' → logprob: -14.875015258789062
    4. ',v' → logprob: -16.500015258789062
    5. ',
' → logprob: -16.625015258789062
    6. '，' → logprob: -16.750015258789062
    7. '‌,' → logprob: -17.250015258789062
    8. ',int' → logprob: -17.625015258789062
    9. '、' → logprob: -18.625015258789062
    10. 'u' → logprob: -18.750015258789062

Token 129: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.25193166732788086
    2. ' v' → logprob: -1.5019316673278809
    3. 'w' → logprob: -13.876932144165039
    4. ' ' → logprob: -14.001932144165039
    5. '	v' → logprob: -16.00193214416504
    6. ')v' → logprob: -16.00193214416504
    7. ' w' → logprob: -16.25193214416504
    8. 'vv' → logprob: -16.50193214416504
    9. ',v' → logprob: -16.75193214416504
    10. ')' → logprob: -16.87693214416504

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.702754474943504e-05
    2. ' ,' → logprob: -10.25003719329834
    3. ')' → logprob: -14.25003719329834
    4. '‌,' → logprob: -15.25003719329834
    5. '，' → logprob: -15.87503719329834
    6. ',
' → logprob: -16.250036239624023
    7. ',length' → logprob: -16.375036239624023
    8. ',w' → logprob: -17.000036239624023
    9. ',v' → logprob: -17.125036239624023
    10. '),' → logprob: -17.375036239624023

Token 131: ' cost' (ID: 3097)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.09553013741970062
    2. ' w' → logprob: -2.8455300331115723
    3. 'weight' → logprob: -3.7205300331115723
    4. 'cost' → logprob: -4.845530033111572
    5. ' cost' → logprob: -7.970530033111572
    6. ' weight' → logprob: -8.09553050994873
    7. 'c' → logprob: -9.09553050994873
    8. '   ' → logprob: -9.97053050994873
    9. ' ' → logprob: -10.47053050994873
    10. '    ' → logprob: -10.84553050994873

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004472608212381601
    2. ')' → logprob: -5.504472732543945
    3. '=' → logprob: -8.379472732543945
    4. ',' → logprob: -9.254472732543945
    5. ' ):' → logprob: -9.879472732543945
    6. '):
' → logprob: -12.129472732543945
    7. ':' → logprob: -12.504472732543945
    8. ')：' → logprob: -12.629472732543945
    9. '=None' → logprob: -13.129472732543945
    10. ' ' → logprob: -14.254472732543945

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03091808781027794
    2. ':' → logprob: -3.9059181213378906
    3. '):' → logprob: -4.905918121337891
    4. ')' → logprob: -7.030918121337891
    5. '):
' → logprob: -7.155918121337891
    6. '   ' → logprob: -7.655918121337891
    7. '
' → logprob: -7.905918121337891
    8. ',' → logprob: -9.03091812133789
    9. '        
' → logprob: -9.15591812133789
    10. ':
' → logprob: -9.40591812133789

Token 134: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030259961262345314
    2. 'self' (adapté à ' self') → logprob: -3.905259847640991
    3. ' self' → logprob: -4.65526008605957
    4. ')' → logprob: -9.28026008605957
    5. '   ' → logprob: -10.28026008605957
    6. '	self' → logprob: -11.28026008605957
    7. '      ' → logprob: -12.28026008605957
    8. ' ' → logprob: -13.03026008605957
    9. '	' → logprob: -13.78026008605957
    10. ' ' → logprob: -13.78026008605957

Token 135: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.741137283621356e-05
    2. ' .' → logprob: -10.250057220458984
    3. '.' → logprob: -10.875057220458984
    4. ')._' → logprob: -14.000057220458984
    5. '   ' → logprob: -14.250057220458984
    6. ' ' → logprob: -14.500057220458984
    7. ']._' → logprob: -14.625057220458984
    8. '	' → logprob: -15.500057220458984
    9. '       ' → logprob: -16.500057220458984
    10. '_' → logprob: -16.500057220458984

Token 136: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.7432603272027336e-06
    2. '_G' → logprob: -14.000001907348633
    3. ' G' → logprob: -14.750001907348633
    4. 'E' → logprob: -15.125001907348633
    5. 'Ｇ' → logprob: -16.875001907348633
    6. '	G' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.500001907348633
    8. '.G' → logprob: -18.875001907348633
    9. '
' → logprob: -18.875001907348633
    10. '  ' → logprob: -19.062501907348633

Token 137: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.5213274309644476e-05
    2. '[' → logprob: -11.125015258789062
    3. ' [' → logprob: -15.625015258789062
    4. '[v' → logprob: -16.125015258789062
    5. 'u' → logprob: -17.250015258789062
    6. '
' → logprob: -17.625015258789062
    7. '```' → logprob: -17.750015258789062
    8. '   ' → logprob: -17.750015258789062
    9. '

' → logprob: -17.875015258789062
    10. ')[' → logprob: -18.500015258789062

Token 138: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.130605086684227
    2. ').' → logprob: -2.1306049823760986
    3. '.append' → logprob: -5.880605220794678
    4. ']' → logprob: -7.380605220794678
    5. ')' → logprob: -9.25560474395752
    6. '   ' → logprob: -10.00560474395752
    7. ',' → logprob: -10.13060474395752
    8. '.' → logprob: -10.13060474395752
    9. '}.' → logprob: -11.50560474395752
    10. ' ].' → logprob: -11.88060474395752

Token 139: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.723352049040841e-06
    2. 'he' → logprob: -12.625004768371582
    3. '.append' → logprob: -14.250004768371582
    4. 'app' → logprob: -14.625004768371582
    5. ' append' → logprob: -15.750004768371582
    6. 'ap' → logprob: -17.875003814697266
    7. 'appen' → logprob: -18.500003814697266
    8. ' he' → logprob: -19.250003814697266
    9. 'appe' → logprob: -20.125003814697266
    10. 'push' → logprob: -20.125003814697266

Token 140: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004147257190197706
    2. '(' → logprob: -5.504147052764893
    3. '(v' → logprob: -9.62914752960205
    4. '([' → logprob: -13.37914752960205
    5. '(
' → logprob: -14.12914752960205
    6. ' (' → logprob: -15.12914752960205
    7. '<|end|>' → logprob: -15.62914752960205
    8. '(('' → logprob: -16.629146575927734
    9. '
' → logprob: -17.129146575927734
    10. '({'' → logprob: -17.754146575927734

Token 141: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0003121056070085615
    2. ' v' → logprob: -8.125311851501465
    3. 'cost' → logprob: -11.125311851501465
    4. ' cost' → logprob: -13.875311851501465
    5. '   ' → logprob: -16.25031280517578
    6. '
' → logprob: -16.50031280517578
    7. ')v' → logprob: -16.50031280517578
    8. '	v' → logprob: -16.62531280517578
    9. '    ' → logprob: -17.00031280517578
    10. 'vj' → logprob: -18.12531280517578

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004023097571916878
    2. ' ,' → logprob: -8.250402450561523
    3. ',c' → logprob: -8.875402450561523
    4. ',
' → logprob: -13.875402450561523
    5. '，' → logprob: -16.375402450561523
    6. 'cost' → logprob: -17.000402450561523
    7. '(cost' → logprob: -17.000402450561523
    8. ',

' → logprob: -17.375402450561523
    9. ' cost' → logprob: -17.500402450561523
    10. '、' → logprob: -17.750402450561523

Token 143: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.16022585332393646
    2. 'cost' → logprob: -1.9102258682250977
    3. '(cost' → logprob: -14.410225868225098
    4. '_cost' → logprob: -15.285225868225098
    5. ' ' → logprob: -15.410225868225098
    6. ' kost' → logprob: -15.535225868225098
    7. 'c' → logprob: -16.03522491455078
    8. 'Cost' → logprob: -16.66022491455078
    9. '-cost' → logprob: -17.16022491455078
    10. ' costo' → logprob: -17.28522491455078

Token 144: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16071686148643494
    2. '))' → logprob: -1.9107168912887573
    3. ')
' → logprob: -7.910717010498047
    4. '))
' → logprob: -9.035717010498047
    5. ' )' → logprob: -13.410717010498047
    6. '       ' → logprob: -13.410717010498047
    7. '),' → logprob: -14.285717010498047
    8. ')))' → logprob: -14.785717010498047
    9. ')}' → logprob: -14.785717010498047
    10. ',' → logprob: -14.910717010498047

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1875571544806007e-05
    2. ')' → logprob: -12.750011444091797
    3. '   ' → logprob: -12.875011444091797
    4. ',' → logprob: -13.125011444091797
    5. 'self' → logprob: -13.625011444091797
    6. '
' → logprob: -14.000011444091797
    7. ' self' → logprob: -14.125011444091797
    8. '           ' → logprob: -15.000011444091797
    9. '<|end|>' → logprob: -15.125011444091797
    10. '	' → logprob: -15.375011444091797

Token 146: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002671376569196582
    2. ' self' → logprob: -6.502671241760254
    3. '       ' → logprob: -6.752671241760254
    4. '	self' → logprob: -14.752671241760254
    5. '
' → logprob: -16.50267219543457
    6. '   ' → logprob: -16.62767219543457
    7. ' ' → logprob: -17.62767219543457
    8. 's' → logprob: -19.00267219543457
    9. '(self' → logprob: -19.37767219543457
    10. '	' → logprob: -19.75267219543457

Token 147: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.246537173457909e-06
    2. ']._' → logprob: -13.250003814697266
    3. '.' → logprob: -13.875003814697266
    4. ')._' → logprob: -14.000003814697266
    5. ' .' → logprob: -14.875003814697266
    6. '_' → logprob: -15.875003814697266
    7. '._
' → logprob: -16.500003814697266
    8. '->_' → logprob: -17.625003814697266
    9. '."_' → logprob: -17.875003814697266
    10. '
' → logprob: -17.875003814697266

Token 148: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.0280383548888494e-06
    2. ' E' → logprob: -14.000000953674316
    3. '_E' → logprob: -16.000001907348633
    4. 'Ｅ' → logprob: -18.250001907348633
    5. 'Е' → logprob: -19.125001907348633
    6. '	E' → logprob: -19.125001907348633
    7. ' ' → logprob: -19.625001907348633
    8. '>E' → logprob: -19.750001907348633
    9. 'e' → logprob: -19.875001907348633
    10. '
' → logprob: -19.875001907348633

Token 149: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759409070014954
    2. ' +=' → logprob: -0.8259409070014954
    3. '+' → logprob: -14.20094108581543
    4. ']+=' → logprob: -14.32594108581543
    5. ' ' → logprob: -16.95094108581543
    6. '+='' → logprob: -17.07594108581543
    7. '+=(' → logprob: -17.45094108581543
    8. '+="' → logprob: -17.82594108581543
    9. ' +' → logprob: -18.20094108581543
    10. '=' → logprob: -18.70094108581543

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -19.251502990722656
    4. '１' → logprob: -20.001502990722656
    5. ' ' → logprob: -20.376502990722656
    6. '```' → logprob: -22.126502990722656
    7. '  ' → logprob: -22.876502990722656
    8. '<|end|>' → logprob: -23.376502990722656
    9. '
' → logprob: -23.751502990722656
    10. '۱' → logprob: -23.876502990722656

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '１' → logprob: -22.5
    4. '```' → logprob: -23.375
    5. '   ' → logprob: -24.5
    6. '<|end|>' → logprob: -26.5
    7. '۱' → logprob: -27.0
    8. '-' → logprob: -27.125
    9. '+' → logprob: -27.25
    10. '0' → logprob: -27.5

Token 152: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.608588457107544
    2. '   ' → logprob: -0.983588457107544
    3. '<|end|>' → logprob: -3.358588457107544
    4. 'def' (adapté à ' def') → logprob: -3.858588457107544
    5. '\n' → logprob: -4.608588218688965
    6. ' ' → logprob: -5.358588218688965
    7. '    
' → logprob: -5.733588218688965
    8. ' def' → logprob: -6.358588218688965
    9. '<|end|>' → logprob: -6.483588218688965
    10. ' 
' → logprob: -6.608588218688965

Token 155: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.415788471698761
    2. ' d' → logprob: -1.6657884120941162
    3. ' def' → logprob: -2.290788412094116
    4. ' dist' → logprob: -4.540788650512695
    5. 'short' → logprob: -5.040788650512695
    6. ' solve' → logprob: -5.165788650512695
    7. 'd' → logprob: -5.415788650512695
    8. 'def' → logprob: -5.790788650512695
    9. ' run' → logprob: -5.915788650512695
    10. '
' → logprob: -6.040788650512695

Token 156: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.014186070300638676
    2. '_paths' → logprob: -4.264185905456543
    3. 'path' → logprob: -11.764185905456543
    4. '(self' → logprob: -12.389185905456543
    5. '_pat' → logprob: -12.514185905456543
    6. '_' → logprob: -13.264185905456543
    7. '_dist' → logprob: -13.639185905456543
    8. 'paths' → logprob: -14.139185905456543
    9. '_distance' → logprob: -14.389185905456543
    10. '\' → logprob: -14.514185905456543

Token 157: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.906711546937004e-05
    2. '(s' → logprob: -10.625048637390137
    3. '(' → logprob: -11.000048637390137
    4. ' (' → logprob: -12.500048637390137
    5. 's' → logprob: -13.375048637390137
    6. '   ' → logprob: -14.375048637390137
    7. 'self' → logprob: -14.500048637390137
    8. 'from' → logprob: -14.875048637390137
    9. '(sel' → logprob: -15.000048637390137
    10. '(
' → logprob: -15.250048637390137

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017064384883269668
    2. 'self' → logprob: -9.375170707702637
    3. ' ,' → logprob: -9.875170707702637
    4. ',self' → logprob: -11.375170707702637
    5. ',start' → logprob: -11.875170707702637
    6. ',s' → logprob: -12.250170707702637
    7. 's' → logprob: -12.500170707702637
    8. ',
' → logprob: -12.875170707702637
    9. 'from' → logprob: -14.250170707702637
    10. '_,' → logprob: -14.250170707702637

Token 159: ' start' (ID: 1604)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.027560757473111153
    2. 'start' → logprob: -4.152560710906982
    3. ' s' → logprob: -5.027560710906982
    4. 'src' → logprob: -5.527560710906982
    5. ' start' → logprob: -8.15256118774414
    6. 'source' → logprob: -8.15256118774414
    7. 'self' → logprob: -8.52756118774414
    8. ' ' → logprob: -10.02756118774414
    9. '
' → logprob: -10.65256118774414
    10. ' src' → logprob: -11.02756118774414

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1276521235704422
    2. ',' → logprob: -2.127652168273926
    3. ')' → logprob: -7.752652168273926
    4. '):
' → logprob: -8.502652168273926
    5. 'self' → logprob: -10.252652168273926
    6. ' ):' → logprob: -10.627652168273926
    7. '   ' → logprob: -11.877652168273926
    8. ')：' → logprob: -12.252652168273926
    9. '(self' → logprob: -12.377652168273926
    10. ' ' → logprob: -12.752652168273926

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02380380593240261
    2. 'dist' → logprob: -3.7738037109375
    3. ' distances' → logprob: -7.8988037109375
    4. ' dist' → logprob: -9.5238037109375
    5. 'distance' → logprob: -10.7738037109375
    6. '        
' → logprob: -11.0238037109375
    7. '_dist' → logprob: -11.2738037109375
    8. '	dist' → logprob: -11.2738037109375
    9. 'Dist' → logprob: -11.5238037109375
    10. '      ' → logprob: -11.8988037109375

Token 162: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.04455653950572014
    2. '       ' → logprob: -3.4195566177368164
    3. ' dist' → logprob: -5.669556617736816
    4. 'import' → logprob: -5.669556617736816
    5. 'INF' → logprob: -6.044556617736816
    6. 'd' → logprob: -7.669556617736816
    7. 'inf' → logprob: -7.669556617736816
    8. ' INF' → logprob: -9.169556617736816
    9. '
' → logprob: -9.669556617736816
    10. '   ' → logprob: -9.794556617736816

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05492730811238289
    2. '=' → logprob: -2.929927349090576
    3. '   ' → logprob: -10.679926872253418
    4. ' ' → logprob: -11.679926872253418
    5. ',' → logprob: -11.929926872253418
    6. 's' → logprob: -13.054926872253418
    7. '＝' → logprob: -13.429926872253418
    8. ')' → logprob: -13.679926872253418
    9. '  ' → logprob: -14.304926872253418
    10. '_' → logprob: -15.304926872253418

Token 164: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6177428364753723
    2. '[' → logprob: -0.8677428364753723
    3. '[self' → logprob: -3.7427427768707275
    4. '{' → logprob: -4.492743015289307
    5. '[min' → logprob: -6.742743015289307
    6. '[int' → logprob: -6.992743015289307
    7. '[start' → logprob: -7.242743015289307
    8. '[class' → logprob: -7.742743015289307
    9. '[node' → logprob: -7.992743015289307
    10. '[value' → logprob: -8.242742538452148

Token 165: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00012558852904476225
    2. ' float' → logprob: -9.000125885009766
    3. '10' → logprob: -13.250125885009766
    4. '(float' → logprob: -16.250125885009766
    5. '1' → logprob: -17.000125885009766
    6. '   ' → logprob: -17.125125885009766
    7. 'flo' → logprob: -17.750125885009766
    8. 'inf' → logprob: -17.875125885009766
    9. '	float' → logprob: -17.875125885009766
    10. ' ' → logprob: -18.125125885009766

Token 166: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.0921942703134846e-05
    2. '("' → logprob: -11.87501049041748
    3. '(' → logprob: -12.62501049041748
    4. ''' → logprob: -15.37501049041748
    5. ''in' → logprob: -15.37501049041748
    6. ']' → logprob: -16.875011444091797
    7. ' ('' → logprob: -16.875011444091797
    8. 'inf' → logprob: -17.250011444091797
    9. '(
' → logprob: -18.500011444091797
    10. '(in' → logprob: -18.750011444091797

Token 167: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -3.128163257315464e-07
    2. 'in' → logprob: -16.0
    3. 'INF' → logprob: -17.0
    4. ' inf' → logprob: -17.375
    5. '_inf' → logprob: -17.625
    6. 'info' → logprob: -18.25
    7. 'Inf' → logprob: -18.875
    8. ''in' → logprob: -19.125
    9. '')' → logprob: -19.375
    10. '-inf' → logprob: -19.875

Token 168: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.00554998591542244
    2. ')]' → logprob: -5.380549907684326
    3. ']' → logprob: -7.505549907684326
    4. '')' → logprob: -8.380550384521484
    5. ''),' → logprob: -9.255550384521484
    6. ')' → logprob: -10.255550384521484
    7. '")]' → logprob: -12.130550384521484
    8. ' '' → logprob: -12.130550384521484
    9. ''' → logprob: -12.505550384521484
    10. '']' → logprob: -13.255550384521484

Token 169: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32405877113342285
    2. ']' → logprob: -1.3240587711334229
    3. 'for' → logprob: -4.949058532714844
    4. ']*' → logprob: -6.199058532714844
    5. ',' → logprob: -7.324058532714844
    6. ' ]' → logprob: -7.949058532714844
    7. ')' → logprob: -8.074058532714844
    8. ' *' → logprob: -10.074058532714844
    9. ' ' → logprob: -10.074058532714844
    10. '
' → logprob: -10.199058532714844

Token 170: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019418458687141538
    2. ' self' → logprob: -6.251941680908203
    3. '(self' → logprob: -11.251941680908203
    4. '       ' → logprob: -15.501941680908203
    5. '
' → logprob: -17.876941680908203
    6. '	self' → logprob: -18.251941680908203
    7. '   ' → logprob: -19.251941680908203
    8. '           ' → logprob: -19.501941680908203
    9. 'Self' → logprob: -19.751941680908203
    10. '[self' → logprob: -19.751941680908203

Token 171: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0048812502063810825
    2. '.V' → logprob: -5.379881381988525
    3. '_V' → logprob: -8.379880905151367
    4. '   ' → logprob: -11.129880905151367
    5. '.' → logprob: -11.379880905151367
    6. ' .' → logprob: -13.004880905151367
    7. ' ' → logprob: -13.754880905151367
    8. '       ' → logprob: -14.004880905151367
    9. '	V' → logprob: -15.254880905151367
    10. ' _' → logprob: -15.504880905151367

Token 172: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -3.128163257315464e-07
    2. ' V' → logprob: -15.875
    3. '_V' → logprob: -16.375
    4. '
' → logprob: -17.625
    5. '```' → logprob: -18.5
    6. '	V' → logprob: -18.625
    7. '(V' → logprob: -19.25
    8. '   ' → logprob: -19.25
    9. ')V' → logprob: -19.5
    10. 'В' → logprob: -19.875

Token 173: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0073832361958920956
    2. 'dist' → logprob: -5.882383346557617
    3. '
' → logprob: -6.007383346557617
    4. '       ' → logprob: -6.507383346557617
    5. '<|end|>' → logprob: -8.132383346557617
    6. ' 
' → logprob: -9.132383346557617
    7. ' dist' → logprob: -9.507383346557617
    8. '        
' → logprob: -10.257383346557617
    9. '' → logprob: -10.507383346557617
    10. '        ' → logprob: -11.507383346557617

Token 174: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7222022414207458
    2. 'dist' → logprob: -1.4722023010253906
    3. '<|end|>' → logprob: -1.7222023010253906
    4. '       ' → logprob: -2.4722023010253906
    5. ' dist' → logprob: -4.597202301025391
    6. '<|end|>' → logprob: -5.847202301025391
    7. '        
' → logprob: -6.347202301025391
    8. ' 
' → logprob: -6.472202301025391
    9. '	dist' → logprob: -6.472202301025391
    10. ')' → logprob: -6.847202301025391

Token 175: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.020627493038773537
    2. ' dist' → logprob: -3.895627498626709
    3. '   ' → logprob: -10.14562702178955
    4. '       ' → logprob: -10.77062702178955
    5. '	dist' → logprob: -11.14562702178955
    6. '
' → logprob: -12.64562702178955
    7. 'start' → logprob: -12.89562702178955
    8. '        
' → logprob: -13.89562702178955
    9. '    
' → logprob: -14.27062702178955
    10. ' ' → logprob: -14.27062702178955

Token 176: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00018161057960242033
    2. '[' → logprob: -8.625181198120117
    3. '[end' → logprob: -13.750181198120117
    4. '[s' → logprob: -15.250181198120117
    5. '[int' → logprob: -16.500181198120117
    6. '[src' → logprob: -16.500181198120117
    7. ' [' → logprob: -16.500181198120117
    8. '[
' → logprob: -16.625181198120117
    9. '```' → logprob: -16.750181198120117
    10. 'start' → logprob: -17.000181198120117

Token 177: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00028576893964782357
    2. ' ]' → logprob: -8.250286102294922
    3. ']=' → logprob: -10.625286102294922
    4. '=' → logprob: -16.125286102294922
    5. ' =' → logprob: -17.875286102294922
    6. '']' → logprob: -18.000286102294922
    7. '`]' → logprob: -18.125286102294922
    8. '[' → logprob: -18.625286102294922
    9. ')' → logprob: -18.625286102294922
    10. ' ' → logprob: -18.625286102294922

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021119564771652
    2. '=' → logprob: -2.3502111434936523
    3. ']' → logprob: -13.100211143493652
    4. ')' → logprob: -14.475211143493652
    5. ']=' → logprob: -14.975211143493652
    6. '＝' → logprob: -15.100211143493652
    7. '[' → logprob: -15.225211143493652
    8. ' ' → logprob: -15.225211143493652
    9. ',' → logprob: -15.600211143493652
    10. ' =)' → logprob: -15.850211143493652

Token 179: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '０' → logprob: -20.000030517578125
    4. '۰' → logprob: -21.250030517578125
    5. '   ' → logprob: -21.875030517578125
    6. ' ' → logprob: -22.125030517578125
    7. '00' → logprob: -23.375030517578125
    8. '  ' → logprob: -23.750030517578125
    9. ' ' → logprob: -24.125030517578125
    10. '```' → logprob: -24.375030517578125

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '０' → logprob: -18.750001907348633
    4. '۰' → logprob: -20.750001907348633
    5. '   ' → logprob: -21.625001907348633
    6. '00' → logprob: -21.875001907348633
    7. '000' → logprob: -22.625001907348633
    8. '  ' → logprob: -23.500001907348633
    9. '```' → logprob: -23.625001907348633
    10. ' ' → logprob: -23.875001907348633

Token 181: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06361272186040878
    2. '       ' → logprob: -2.813612699508667
    3. '
' → logprob: -6.938612937927246
    4. '        
' → logprob: -8.563612937927246
    5. '' → logprob: -8.688612937927246
    6. '   ' → logprob: -10.313612937927246
    7. 'heap' → logprob: -10.313612937927246
    8. '<|end|>' → logprob: -10.313612937927246
    9. '    
' → logprob: -10.438612937927246
    10. '  
' → logprob: -10.563612937927246

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11457893252372742
    2. '
' → logprob: -2.23957896232605
    3. '        
' → logprob: -7.364578723907471
    4. '   ' → logprob: -7.864578723907471
    5. '
' → logprob: -8.364579200744629
    6. 'pq' → logprob: -9.114579200744629
    7. 'heap' → logprob: -9.364579200744629
    8. '    
' → logprob: -9.614579200744629
    9. '' → logprob: -9.864579200744629
    10. ' heap' → logprob: -10.739579200744629

Token 183: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.21884752810001373
    2. 'pq' → logprob: -2.7188475131988525
    3. 'queue' → logprob: -3.3438475131988525
    4. 'que' → logprob: -3.4688475131988525
    5. 'heap' → logprob: -3.7188475131988525
    6. 'q' → logprob: -3.8438475131988525
    7. '   ' → logprob: -4.718847751617432
    8. '       ' → logprob: -5.343847751617432
    9. 'h' (adapté à ' h') → logprob: -5.968847751617432
    10. '
' → logprob: -6.593847751617432

Token 184: 'q' (ID: 80)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3021422028541565
    2. ' =' → logprob: -1.5521421432495117
    3. '=' → logprob: -3.1771421432495117
    4. '   ' → logprob: -5.802142143249512
    5. 'q' → logprob: -6.552142143249512
    6. '=[]' → logprob: -6.802142143249512
    7. '=[' → logprob: -7.302142143249512
    8. '       ' → logprob: -7.802142143249512
    9. '=[]
' → logprob: -8.302142143249512
    10. '[' → logprob: -9.552142143249512

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05030364915728569
    2. '=' → logprob: -3.3003036975860596
    3. '.' → logprob: -5.4253034591674805
    4. '.push' → logprob: -6.0503034591674805
    5. '.append' → logprob: -6.0503034591674805
    6. ',' → logprob: -6.3003034591674805
    7. '       ' → logprob: -8.05030345916748
    8. ')' → logprob: -8.80030345916748
    9. ' ' → logprob: -9.30030345916748
    10. '   ' → logprob: -9.30030345916748

Token 186: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.10050328820943832
    2. '[]' → logprob: -2.3505032062530518
    3. ' [(' → logprob: -8.475502967834473
    4. '[' → logprob: -10.350502967834473
    5. '[]
' → logprob: -10.350502967834473
    6. ' []' → logprob: -10.725502967834473
    7. '[((' → logprob: -13.975502967834473
    8. '[
' → logprob: -14.975502967834473
    9. '[],' → logprob: -15.350502967834473
    10. '[]

' → logprob: -15.350502967834473

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. 'dist' → logprob: -16.750003814697266
    4. '(' → logprob: -17.125003814697266
    5. 'start' → logprob: -18.250003814697266
    6. '   ' → logprob: -19.125003814697266
    7. ')' → logprob: -19.125003814697266
    8. '
' → logprob: -19.625003814697266
    9. '０' → logprob: -20.125003814697266
    10. '۰' → logprob: -20.250003814697266

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010341187007725239
    2. ',start' → logprob: -6.876034259796143
    3. ' ,' → logprob: -14.251033782958984
    4. ',
' → logprob: -16.001033782958984
    5. ',user' → logprob: -16.001033782958984
    6. 'start' → logprob: -16.126033782958984
    7. ',end' → logprob: -17.126033782958984
    8. ',int' → logprob: -17.376033782958984
    9. '[start' → logprob: -17.376033782958984
    10. '<|end|>' → logprob: -17.626033782958984

Token 189: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.020544691011309624
    2. ' start' → logprob: -3.8955447673797607
    3. '[start' → logprob: -14.02054500579834
    4. ' ' → logprob: -14.14554500579834
    5. '0' → logprob: -15.14554500579834
    6. '
' → logprob: -15.89554500579834
    7. '=start' → logprob: -16.020544052124023
    8. '<|end|>' → logprob: -16.270544052124023
    9. '(start' → logprob: -16.395544052124023
    10. '_start' → logprob: -16.395544052124023

Token 190: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0015514022670686245
    2. ')' → logprob: -6.501551628112793
    3. ')]
' → logprob: -10.501551628112793
    4. ']' → logprob: -11.251551628112793
    5. ' )' → logprob: -12.376551628112793
    6. ')
' → logprob: -14.001551628112793
    7. '))' → logprob: -14.126551628112793
    8. '),' → logprob: -14.501551628112793
    9. ')]
' → logprob: -14.626551628112793
    10. ')])' → logprob: -14.876551628112793

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05328402668237686
    2. 'while' → logprob: -3.053283929824829
    3. ' while' → logprob: -5.553284168243408
    4. '   ' → logprob: -7.553284168243408
    5. '	while' → logprob: -8.55328369140625
    6. '
' → logprob: -9.67828369140625
    7. '        
' → logprob: -10.80328369140625
    8. '    
' → logprob: -12.80328369140625
    9. '<|end|>' → logprob: -13.30328369140625
    10. '      ' → logprob: -14.17828369140625

Token 192: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0007697248365730047
    2. ' while' → logprob: -7.75076961517334
    3. '       ' → logprob: -8.00076961517334
    4. '	while' → logprob: -13.50076961517334
    5. 'visited' (adapté à ' visited') → logprob: -13.75076961517334
    6. '        
' → logprob: -14.50076961517334
    7. '
' → logprob: -14.75076961517334
    8. '   ' → logprob: -15.62576961517334
    9. 'While' → logprob: -16.625770568847656
    10. 'wh' → logprob: -17.375770568847656

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018156616017222404
    2. '=' → logprob: -4.0181565284729
    3. ' ' → logprob: -12.393157005310059
    4. '=set' → logprob: -13.143157005310059
    5. '   ' → logprob: -15.768157005310059
    6. ',' → logprob: -15.768157005310059
    7. ')' → logprob: -16.143156051635742
    8. '  ' → logprob: -16.143156051635742
    9. '=[]' → logprob: -16.768156051635742
    10. ' =
' → logprob: -17.268156051635742

Token 194: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6474984288215637
    2. '[' → logprob: -0.8974984288215637
    3. ' set' → logprob: -3.147498369216919
    4. ' [' → logprob: -3.647498369216919
    5. '{' → logprob: -10.14749813079834
    6. '=set' → logprob: -13.39749813079834
    7. '(set' → logprob: -13.77249813079834
    8. '	set' → logprob: -15.52249813079834
    9. ' {' → logprob: -15.64749813079834
    10. '{}' → logprob: -15.77249813079834

Token 195: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.935296834039036e-06
    2. ' False' → logprob: -12.75000286102295
    3. '0' → logprob: -20.125003814697266
    4. '(False' → logprob: -21.625003814697266
    5. 'false' → logprob: -24.000003814697266
    6. '=False' → logprob: -24.625003814697266
    7. '   ' → logprob: -25.000003814697266
    8. 'True' → logprob: -25.125003814697266
    9. 'F' → logprob: -25.500003814697266
    10. '.False' → logprob: -26.000003814697266

Token 196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016587569552939385
    2. ']*' → logprob: -8.875165939331055
    3. ' ]' → logprob: -11.125165939331055
    4. ')' → logprob: -11.500165939331055
    5. ' for' → logprob: -14.375165939331055
    6. ',' → logprob: -15.375165939331055
    7. ')]' → logprob: -15.875165939331055
    8. ']*(' → logprob: -16.500165939331055
    9. '   ' → logprob: -16.625165939331055
    10. 'for' → logprob: -16.750165939331055

Token 197: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.487468957901001
    2. ' *' → logprob: -1.862468957901001
    3. ')' → logprob: -2.987468957901001
    4. '<|end|>' → logprob: -3.237468957901001
    5. ']' → logprob: -3.362468957901001
    6. '*' → logprob: -3.737468957901001
    7. ' for' → logprob: -3.737468957901001
    8. '[' → logprob: -3.737468957901001
    9. '       ' → logprob: -5.237468719482422
    10. ' 
' → logprob: -5.362468719482422

Token 198: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011061026714742184
    2. ' self' → logprob: -4.511061191558838
    3. '       ' → logprob: -11.26106071472168
    4. '(self' → logprob: -15.38606071472168
    5. '           ' → logprob: -16.38606071472168
    6. '   ' → logprob: -16.76106071472168
    7. '	self' → logprob: -17.88606071472168
    8. '
' → logprob: -19.26106071472168
    9. ' ' → logprob: -19.38606071472168
    10. '               ' → logprob: -19.51106071472168

Token 199: '._' (ID: 2697)
  Prédit: '_V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_V' → logprob: -0.20170490443706512
    2. '._' → logprob: -1.7017048597335815
    3. '.V' → logprob: -8.451704978942871
    4. '   ' → logprob: -9.826704978942871
    5. '       ' → logprob: -10.826704978942871
    6. '.' → logprob: -13.451704978942871
    7. ' _' → logprob: -14.826704978942871
    8. ' .' → logprob: -15.576704978942871
    9. 'self' → logprob: -15.576704978942871
    10. 'V' → logprob: -15.576704978942871

Token 200: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -3.128163257315464e-07
    2. ' V' → logprob: -15.875
    3. '_V' → logprob: -16.5
    4. '	V' → logprob: -17.25
    5. '
' → logprob: -17.75
    6. 'v' → logprob: -17.75
    7. 'В' → logprob: -18.375
    8. '```' → logprob: -19.0625
    9. '<V' → logprob: -19.375
    10. '   ' → logprob: -19.375

Token 201: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0025596146006137133
    2. '       ' → logprob: -7.377559661865234
    3. 'while' → logprob: -7.502559661865234
    4. '    
' → logprob: -7.752559661865234
    5. ' while' → logprob: -7.752559661865234
    6. '
' → logprob: -9.252559661865234
    7. '   ' → logprob: -9.252559661865234
    8. '	while' → logprob: -9.252559661865234
    9. '        
' → logprob: -10.002559661865234
    10. ' 
' → logprob: -10.002559661865234

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41189447045326233
    2. '
' → logprob: -1.16189444065094
    3. ' while' → logprob: -4.53689432144165
    4. 'while' → logprob: -5.03689432144165
    5. '<|end|>' → logprob: -5.53689432144165
    6. '	while' → logprob: -6.53689432144165
    7. '        
' → logprob: -7.41189432144165
    8. ')' → logprob: -7.66189432144165
    9. '   ' → logprob: -7.91189432144165
    10. '    
' → logprob: -8.536894798278809

Token 203: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.03522854298353195
    2. ' while' → logprob: -3.7852284908294678
    3. '       ' → logprob: -4.535228729248047
    4. '	while' → logprob: -7.660228729248047
    5. '
' → logprob: -8.160228729248047
    6. '   ' → logprob: -8.160228729248047
    7. ')' → logprob: -9.410228729248047
    8. '        
' → logprob: -10.785228729248047
    9. '    
' → logprob: -11.285228729248047
    10. 'wh' → logprob: -12.160228729248047

Token 204: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.20150035619735718
    2. 'hq' → logprob: -1.701500415802002
    3. '(h' → logprob: -10.326499938964844
    4. '	h' → logprob: -10.451499938964844
    5. 'h' → logprob: -11.076499938964844
    6. ' len' → logprob: -11.826499938964844
    7. 'len' → logprob: -14.076499938964844
    8. '_h' → logprob: -14.576499938964844
    9. '
' → logprob: -14.951499938964844
    10. '[h' → logprob: -15.076499938964844

Token 205: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -14.50000286102295
    3. 'hq' → logprob: -15.00000286102295
    4. 'qh' → logprob: -15.12500286102295
    5. 'cq' → logprob: -15.37500286102295
    6. 'qc' → logprob: -15.50000286102295
    7. '_q' → logprob: -15.87500286102295
    8. '   ' → logprob: -16.125001907348633
    9. '

' → logprob: -16.250001907348633
    10. 'sq' → logprob: -16.375001907348633

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003855093673337251
    2. ':
' → logprob: -8.375385284423828
    3. '):' → logprob: -9.000385284423828
    4. ',' → logprob: -10.875385284423828
    5. ' and' → logprob: -12.875385284423828
    6. '[' → logprob: -13.375385284423828
    7. 'and' → logprob: -13.500385284423828
    8. '):
' → logprob: -13.625385284423828
    9. '>:' → logprob: -13.750385284423828
    10. ':**' → logprob: -13.750385284423828

Token 207: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8573276400566101
    2. '           ' → logprob: -0.8573276400566101
    3. '       ' → logprob: -2.107327699661255
    4. ')' → logprob: -4.107327461242676
    5. '        ' → logprob: -5.357327461242676
    6. ' ,' → logprob: -6.107327461242676
    7. ':' → logprob: -7.107327461242676
    8. '   ' → logprob: -7.357327461242676
    9. '               ' → logprob: -7.482327461242676
    10. '
' → logprob: -7.482327461242676

Token 208: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.13749250769615173
    2. 'd' → logprob: -2.3874924182891846
    3. 'dist' → logprob: -3.8874924182891846
    4. 'c' → logprob: -4.762492656707764
    5. ' cost' → logprob: -5.887492656707764
    6. 'cur' → logprob: -6.012492656707764
    7. ' d' → logprob: -6.887492656707764
    8. '   ' → logprob: -7.637492656707764
    9. ' dist' → logprob: -8.762492179870605
    10. '_,' → logprob: -9.012492179870605

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.941850526549388e-06
    2. ' ,' → logprob: -12.750007629394531
    3. ',
' → logprob: -13.375007629394531
    4. ',u' → logprob: -13.625007629394531
    5. ',current' → logprob: -14.375007629394531
    6. ',c' → logprob: -14.500007629394531
    7. '_,' → logprob: -14.625007629394531
    8. ',node' → logprob: -15.750007629394531
    9. ',v' → logprob: -16.37500762939453
    10. ',n' → logprob: -16.50000762939453

Token 210: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.011708663776516914
    2. ' u' → logprob: -4.511708736419678
    3. 'v' → logprob: -7.386708736419678
    4. 'node' → logprob: -10.76170825958252
    5. 'pos' → logprob: -11.63670825958252
    6. '```' → logprob: -12.63670825958252
    7. ' v' → logprob: -13.01170825958252
    8. 'cur' → logprob: -13.26170825958252
    9. '   ' → logprob: -13.63670825958252
    10. ' node' → logprob: -14.13670825958252

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. ')' → logprob: -14.62692928314209
    4. ' =
' → logprob: -15.25192928314209
    5. '=
' → logprob: -15.87692928314209
    6. ')=' → logprob: -16.001930236816406
    7. '＝' → logprob: -16.251930236816406
    8. ' ' → logprob: -16.501930236816406
    9. '=v' → logprob: -16.626930236816406
    10. '   ' → logprob: -16.876930236816406

Token 212: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.03804401680827141
    2. ' he' → logprob: -3.288043975830078
    3. 'heap' → logprob: -13.413043975830078
    4. 'h' → logprob: -14.288043975830078
    5. '   ' → logprob: -16.538043975830078
    6. '.he' → logprob: -16.663043975830078
    7. 'ha' → logprob: -16.788043975830078
    8. '_he' → logprob: -16.913043975830078
    9. 'heme' → logprob: -17.163043975830078
    10. ' ' → logprob: -17.413043975830078

Token 213: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00011045700375689194
    2. 'ap' → logprob: -9.250110626220703
    3. 'a' → logprob: -11.375110626220703
    4. 'q' → logprob: -13.625110626220703
    5. ' app' → logprob: -14.875110626220703
    6. '```' → logprob: -15.375110626220703
    7. 'pp' → logprob: -16.125110626220703
    8. '
' → logprob: -16.375110626220703
    9. 'appe' → logprob: -16.375110626220703
    10. 'pop' → logprob: -16.500110626220703

Token 214: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -5.319370302458992e-06
    2. 'pop' → logprob: -12.500005722045898
    3. 'o' → logprob: -13.875005722045898
    4. '	op' → logprob: -16.2500057220459
    5. 'оп' → logprob: -16.2500057220459
    6. 'opf' → logprob: -16.8750057220459
    7. 'app' → logprob: -17.0000057220459
    8. '```' → logprob: -17.1250057220459
    9. 'p' → logprob: -17.2500057220459
    10. ' op' → logprob: -17.3750057220459

Token 215: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.2524021157296374e-05
    2. '(' → logprob: -9.875052452087402
    3. '(
' → logprob: -14.375052452087402
    4. '(q' → logprob: -15.625052452087402
    5. ' (' → logprob: -15.875052452087402
    6. '(heap' → logprob: -16.12505340576172
    7. ',h' → logprob: -17.37505340576172
    8. '(n' → logprob: -17.37505340576172
    9. ')' → logprob: -17.75005340576172
    10. 'h' → logprob: -18.00005340576172

Token 216: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'Q' → logprob: -15.625
    3. ')' → logprob: -17.25
    4. '
' → logprob: -17.5
    5. 'p' → logprob: -18.375
    6. '[' → logprob: -18.375
    7. 'sq' → logprob: -18.5
    8. '_q' → logprob: -18.625
    9. 'qs' → logprob: -18.875
    10. '	q' → logprob: -19.0

Token 217: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5094070477061905e-05
    2. ')
' → logprob: -11.125015258789062
    3. '           ' → logprob: -15.875015258789062
    4. ' )' → logprob: -16.500015258789062
    5. ')

' → logprob: -17.500015258789062
    6. ')
' → logprob: -17.875015258789062
    7. ')v' → logprob: -18.000015258789062
    8. ')`' → logprob: -18.375015258789062
    9. '),' → logprob: -18.750015258789062
    10. '       ' → logprob: -19.375015258789062

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3948778212070465
    2. '<|end|>' → logprob: -1.8948777914047241
    3. '
' → logprob: -2.0198779106140137
    4. ' 
' → logprob: -4.269877910614014
    5. '       ' → logprob: -4.519877910614014
    6. ' if' → logprob: -5.519877910614014
    7. '            
' → logprob: -5.519877910614014
    8. ' ' → logprob: -5.894877910614014
    9. ')' → logprob: -6.269877910614014
    10. 'if' → logprob: -6.644877910614014

Token 219: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4425184726715088
    2. ' if' → logprob: -1.1925184726715088
    3. '           ' → logprob: -2.942518472671509
    4. '            
' → logprob: -7.31751823425293
    5. ' 
' → logprob: -8.06751823425293
    6. '
' → logprob: -8.31751823425293
    7. '            ' → logprob: -9.06751823425293
    8. '               ' → logprob: -11.44251823425293
    9. '       ' → logprob: -11.56751823425293
    10. '    ' → logprob: -12.06751823425293

Token 220: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.07889033854007721
    2. ' visited' → logprob: -2.578890323638916
    3. 'vis' → logprob: -16.203889846801758
    4. '   ' → logprob: -16.203889846801758
    5. 'v' → logprob: -16.328889846801758
    6. 'vist' → logprob: -16.703889846801758
    7. 'visit' → logprob: -16.953889846801758
    8. 'not' → logprob: -17.203889846801758
    9. 'visi' → logprob: -17.328889846801758
    10. ' ' → logprob: -17.578889846801758

Token 221: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. 'v' → logprob: -16.125
    4. ' v' → logprob: -19.25
    5. ' [' → logprob: -19.75
    6. '[V' → logprob: -20.0
    7. '	v' → logprob: -20.125
    8. '[u' → logprob: -21.375
    9. '[
' → logprob: -21.5
    10. ')v' → logprob: -21.625

Token 222: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6944846510887146
    2. '):' → logprob: -0.6944846510887146
    3. ')' → logprob: -7.569484710693359
    4. ']:' → logprob: -7.694484710693359
    5. '):
' → logprob: -8.94448471069336
    6. ':
' → logprob: -9.06948471069336
    7. ' or' → logprob: -9.56948471069336
    8. '==' → logprob: -11.44448471069336
    9. 'or' → logprob: -11.81948471069336
    10. '}:' → logprob: -12.31948471069336

Token 223: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.17000360786914825
    2. '               ' → logprob: -2.670003652572632
    3. ' continue' → logprob: -2.920003652572632
    4. '           ' → logprob: -3.420003652572632
    5. '	continue' → logprob: -8.295003890991211
    6. '_continue' → logprob: -8.795003890991211
    7. '   ' → logprob: -11.545003890991211
    8. 'Continue' → logprob: -11.545003890991211
    9. '	           ' → logprob: -12.295003890991211
    10. '                   ' → logprob: -12.545003890991211

Token 224: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10346877574920654
    2. '
' → logprob: -2.603468894958496
    3. '            
' → logprob: -4.978468894958496
    4. ' visited' → logprob: -5.228468894958496
    5. '\n' → logprob: -5.728468894958496
    6. 'visited' → logprob: -5.853468894958496
    7. '<|end|>' → logprob: -6.478468894958496
    8. '       ' → logprob: -6.728468894958496
    9. ' 
' → logprob: -6.853468894958496
    10. '  
' → logprob: -8.103468894958496

Token 225: '           ' (ID: 352)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.048516035079956
    2. '
' → logprob: -1.173516035079956
    3. ' visited' → logprob: -1.798516035079956
    4. ' 
' → logprob: -2.673516035079956
    5. '           ' → logprob: -2.923516035079956
    6. '            
' → logprob: -3.423516035079956
    7. '<|end|>' → logprob: -4.673516273498535
    8. '       ' → logprob: -6.048516273498535
    9. '  
' → logprob: -6.548516273498535
    10. '    
' → logprob: -6.798516273498535

Token 226: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.02210468426346779
    2. ' visited' → logprob: -4.147104740142822
    3. '           ' → logprob: -5.147104740142822
    4. '       ' → logprob: -8.522104263305664
    5. '   ' → logprob: -10.397104263305664
    6. '            
' → logprob: -12.647104263305664
    7. '
' → logprob: -13.772104263305664
    8. '         ' → logprob: -14.522104263305664
    9. 'Visited' → logprob: -15.272104263305664
    10. '               ' → logprob: -15.772104263305664

Token 227: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.643152740551159e-05
    2. '[' → logprob: -10.250036239624023
    3. '```' → logprob: -14.250036239624023
    4. 'v' → logprob: -16.250036239624023
    5. '[val' → logprob: -16.625036239624023
    6. '[u' → logprob: -16.875036239624023
    7. '[V' → logprob: -17.250036239624023
    8. '[var' → logprob: -17.500036239624023
    9. '][' → logprob: -17.500036239624023
    10. ')[' → logprob: -17.625036239624023

Token 228: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012892624363303185
    2. ']=' → logprob: -9.000128746032715
    3. '=' → logprob: -12.250128746032715
    4. ' ]' → logprob: -14.750128746032715
    5. ')' → logprob: -16.25012969970703
    6. ']
' → logprob: -16.25012969970703
    7. '[' → logprob: -17.00012969970703
    8. ' =' → logprob: -17.50012969970703
    9. '=True' → logprob: -18.25012969970703
    10. 's' → logprob: -18.87512969970703

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4743141233921051
    2. '=' → logprob: -0.9743140935897827
    3. '=True' → logprob: -8.349313735961914
    4. ' =
' → logprob: -15.599313735961914
    5. ')' → logprob: -16.099313735961914
    6. '=
' → logprob: -16.599313735961914
    7. ']' → logprob: -16.599313735961914
    8. ' True' → logprob: -16.849313735961914
    9. 'True' → logprob: -17.099313735961914
    10. '＝' → logprob: -17.224313735961914

Token 230: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '1' → logprob: -19.626928329467773
    4. '(True' → logprob: -20.376928329467773
    5. '=True' → logprob: -21.876928329467773
    6. ' ' → logprob: -23.251928329467773
    7. 'true' → logprob: -23.501928329467773
    8. 'Tr' → logprob: -23.876928329467773
    9. 'False' → logprob: -24.001928329467773
    10. '   ' → logprob: -24.251928329467773

Token 231: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30924686789512634
    2. '<|end|>' → logprob: -1.4342468976974487
    3. ' for' → logprob: -4.184247016906738
    4. '       ' → logprob: -4.934247016906738
    5. 'for' → logprob: -6.309247016906738
    6. '
' → logprob: -6.309247016906738
    7. '            
' → logprob: -7.809247016906738
    8. '   ' → logprob: -7.809247016906738
    9. '<|end|>' → logprob: -7.809247016906738
    10. ')' → logprob: -9.809247016906738

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5376914739608765
    2. '       ' → logprob: -1.2876914739608765
    3. ' for' → logprob: -2.662691593170166
    4. 'for' → logprob: -2.662691593170166
    5. '   ' → logprob: -8.162691116333008
    6. '<|end|>' → logprob: -9.662691116333008
    7. '        
' → logprob: -10.037691116333008
    8. '            
' → logprob: -10.537691116333008
    9. '
' → logprob: -10.787691116333008
    10. '        ' → logprob: -11.537691116333008

Token 233: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0040931240655481815
    2. ' for' → logprob: -5.504093170166016
    3. '           ' → logprob: -11.379093170166016
    4. '       ' → logprob: -13.004093170166016
    5. '   ' → logprob: -14.004093170166016
    6. '	for' → logprob: -16.629093170166016
    7. 'if' → logprob: -17.754093170166016
    8. '
' → logprob: -18.004093170166016
    9. '            
' → logprob: -19.129093170166016
    10. '```' → logprob: -19.129093170166016

Token 234: ' to' (ID: 316)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2080267071723938
    2. 'to' → logprob: -1.958026647567749
    3. 'nv' → logprob: -3.458026647567749
    4. 'u' → logprob: -4.583026885986328
    5. '(to' → logprob: -6.708026885986328
    6. 'n' → logprob: -7.208026885986328
    7. 'nx' → logprob: -7.333026885986328
    8. '(u' → logprob: -7.583026885986328
    9. ' w' → logprob: -7.708026885986328
    10. '(w' → logprob: -7.833026885986328

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.162282367469743e-05
    2. ',v' → logprob: -9.875091552734375
    3. ' ,' → logprob: -10.250091552734375
    4. '_,' → logprob: -13.750091552734375
    5. '‌,' → logprob: -13.875091552734375
    6. '<|end|>' → logprob: -14.750091552734375
    7. ',val' → logprob: -14.875091552734375
    8. ',
' → logprob: -15.250091552734375
    9. 'v' → logprob: -15.250091552734375
    10. ',next' → logprob: -15.500091552734375

Token 236: ' w' (ID: 286)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6712762117385864
    2. 'w' → logprob: -1.7962762117385864
    3. 'cost' → logprob: -1.7962762117385864
    4. 'weight' → logprob: -2.796276092529297
    5. ' c' → logprob: -3.046276092529297
    6. 'cc' → logprob: -3.421276092529297
    7. ' cost' → logprob: -5.171276092529297
    8. ' w' → logprob: -5.171276092529297
    9. 'nc' → logprob: -7.046276092529297
    10. ' weight' → logprob: -7.171276092529297

Token 237: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04309498891234398
    2. 'in' → logprob: -3.1680948734283447
    3. ' ' → logprob: -9.668094635009766
    4. ',' → logprob: -10.918094635009766
    5. 'e' → logprob: -12.543094635009766
    6. '  ' → logprob: -12.918094635009766
    7. 'i' → logprob: -13.543094635009766
    8. '	in' → logprob: -13.668094635009766
    9. '   ' → logprob: -14.043094635009766
    10. '_in' → logprob: -14.418094635009766

Token 238: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975442260503769
    2. ' self' → logprob: -3.529754400253296
    3. ' ' → logprob: -13.279754638671875
    4. '(self' → logprob: -14.154754638671875
    5. '	self' → logprob: -14.654754638671875
    6. 'elf' → logprob: -15.654754638671875
    7. '   ' → logprob: -15.654754638671875
    8. '  ' → logprob: -15.779754638671875
    9. '[self' → logprob: -15.779754638671875
    10. '    ' → logprob: -16.654754638671875

Token 239: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.5764468312263489
    2. '_G' → logprob: -0.8264468312263489
    3. ' _' → logprob: -8.576446533203125
    4. '.G' → logprob: -8.701446533203125
    5. '.' → logprob: -10.701446533203125
    6. '   ' → logprob: -10.701446533203125
    7. '       ' → logprob: -11.451446533203125
    8. ' ' → logprob: -11.576446533203125
    9. '```' → logprob: -11.701446533203125
    10. '_g' → logprob: -11.826446533203125

Token 240: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.2664456789934775e-06
    2. ' G' → logprob: -14.750000953674316
    3. 'cost' → logprob: -16.125001907348633
    4. 'Ｇ' → logprob: -16.250001907348633
    5. '
' → logprob: -16.500001907348633
    6. ' ' → logprob: -16.625001907348633
    7. '   ' → logprob: -16.625001907348633
    8. '_G' → logprob: -17.000001907348633
    9. 'V' → logprob: -17.312501907348633
    10. '    ' → logprob: -17.625001907348633

Token 241: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -8.2994620242971e-06
    2. 'v' → logprob: -11.750008583068848
    3. '[' → logprob: -15.375008583068848
    4. '(v' → logprob: -16.50000762939453
    5. ' [' → logprob: -17.50000762939453
    6. '[u' → logprob: -18.12500762939453
    7. ' v' → logprob: -19.12500762939453
    8. '[val' → logprob: -19.37500762939453
    9. '[V' → logprob: -19.50000762939453
    10. '[c' → logprob: -19.62500762939453

Token 242: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.44421812891960144
    2. ']:' → logprob: -1.0692181587219238
    3. ':' → logprob: -4.194218158721924
    4. '}:' → logprob: -9.319217681884766
    5. '():' → logprob: -9.569217681884766
    6. '>:' → logprob: -9.819217681884766
    7. '):
' → logprob: -10.694217681884766
    8. '       ' → logprob: -10.819217681884766
    9. ']' → logprob: -11.069217681884766
    10. '）：' → logprob: -11.319217681884766

Token 243: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025759633630514145
    2. '           ' → logprob: -4.150759696960449
    3. '<|end|>' → logprob: -5.525759696960449
    4. ' ' → logprob: -6.275759696960449
    5. '                ' → logprob: -6.900759696960449
    6. '                
' → logprob: -7.150759696960449
    7. ' 
' → logprob: -7.275759696960449
    8. ' if' → logprob: -7.900759696960449
    9. '            
' → logprob: -8.40075969696045
    10. '
' → logprob: -8.77575969696045

Token 244: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06382770836353302
    2. 'if' (adapté à ' if') → logprob: -3.1888277530670166
    3. ' new' → logprob: -4.8138275146484375
    4. '                   ' → logprob: -5.0638275146484375
    5. ' nd' → logprob: -5.9388275146484375
    6. '               ' → logprob: -6.1888275146484375
    7. 'new' → logprob: -6.8138275146484375
    8. '   ' → logprob: -9.563827514648438
    9. '           ' → logprob: -9.813827514648438
    10. ' next' → logprob: -10.188827514648438

Token 245: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.49673929810523987
    2. ' dist' → logprob: -0.9967392683029175
    3. ' not' → logprob: -4.246739387512207
    4. 'not' → logprob: -4.871739387512207
    5. 'cost' → logprob: -8.996739387512207
    6. '   ' → logprob: -9.371739387512207
    7. ' cost' → logprob: -9.746739387512207
    8. 'visited' → logprob: -9.996739387512207
    9. ' ' → logprob: -10.121739387512207
    10. '	dist' → logprob: -10.496739387512207

Token 246: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.0017054134514182806
    2. '[v' → logprob: -6.376705646514893
    3. 'to' → logprob: -13.501705169677734
    4. '[u' → logprob: -14.126705169677734
    5. '(to' → logprob: -15.751705169677734
    6. '[' → logprob: -15.876705169677734
    7. '[w' → logprob: -16.251705169677734
    8. '               ' → logprob: -16.501705169677734
    9. '[t' → logprob: -16.501705169677734
    10. ' [' → logprob: -16.501705169677734

Token 247: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04860009253025055
    2. ' >' → logprob: -3.048600196838379
    3. '[' → logprob: -12.673600196838379
    4. ']' → logprob: -12.798600196838379
    5. '">' → logprob: -13.548600196838379
    6. ']>' → logprob: -13.673600196838379
    7. '＞' → logprob: -13.798600196838379
    8. ' ' → logprob: -13.798600196838379
    9. ')' → logprob: -15.048600196838379
    10. '()>' → logprob: -15.048600196838379

Token 248: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.004621303640305996
    2. ' >' → logprob: -5.379621505737305
    3. '＞' → logprob: -15.004621505737305
    4. '">' → logprob: -15.504621505737305
    5. '()>' → logprob: -16.004621505737305
    6. '>w' → logprob: -16.504621505737305
    7. '>

' → logprob: -16.879621505737305
    8. '>null' → logprob: -17.004621505737305
    9. '>`' → logprob: -17.129621505737305
    10. '>
' → logprob: -17.254621505737305

Token 249: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.22659359872341156
    2. ' cost' → logprob: -1.7265936136245728
    3. 'dist' → logprob: -3.976593494415283
    4. ' dist' → logprob: -5.101593494415283
    5. '(cost' → logprob: -11.726593971252441
    6. '   ' → logprob: -12.476593971252441
    7. '_cost' → logprob: -12.476593971252441
    8. ' ' → logprob: -12.601593971252441
    9. 'Cost' → logprob: -12.976593971252441
    10. '.cost' → logprob: -13.789093971252441

Token 250: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04878311604261398
    2. '+' → logprob: -3.04878306388855
    3. '+w' → logprob: -8.548783302307129
    4. '＋' → logprob: -14.173783302307129
    5. ' ' → logprob: -14.923783302307129
    6. ' ' → logprob: -15.173783302307129
    7. ' +
' → logprob: -15.423783302307129
    8. '+c' → logprob: -15.548783302307129
    9. ' plus' → logprob: -16.048782348632812
    10. '+k' → logprob: -16.923782348632812

Token 251: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1269284337759018
    2. ' w' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.751928329467773
    4. '	w' → logprob: -16.251928329467773
    5. '   ' → logprob: -16.626928329467773
    6. ' ' → logprob: -16.876928329467773
    7. '
' → logprob: -17.501928329467773
    8. '    ' → logprob: -17.751928329467773
    9. '  ' → logprob: -18.876928329467773
    10. '_w' → logprob: -19.001928329467773

Token 252: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31337055563926697
    2. ':
' → logprob: -1.3133705854415894
    3. ' :
' → logprob: -10.313370704650879
    4. '):
' → logprob: -10.563370704650879
    5. ':
' → logprob: -11.063370704650879
    6. '                   ' → logprob: -11.813370704650879
    7. ' :' → logprob: -11.813370704650879
    8. '               ' → logprob: -11.938370704650879
    9. ':

' → logprob: -12.563370704650879
    10. '):' → logprob: -13.063370704650879

Token 253: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4673978388309479
    2. ':' → logprob: -1.0923978090286255
    3. '               ' → logprob: -4.217397689819336
    4. ':
' → logprob: -4.592397689819336
    5. '                    ' → logprob: -5.967397689819336
    6. '                    
' → logprob: -6.467397689819336
    7. '                ' → logprob: -6.592397689819336
    8. '                       ' → logprob: -6.592397689819336
    9. '<|end|>' → logprob: -6.592397689819336
    10. '):
' → logprob: -6.967397689819336

Token 254: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7044057250022888
    2. 'dist' (adapté à ' dist') → logprob: -0.7044057250022888
    3. '                   ' → logprob: -5.079405784606934
    4. '                    ' → logprob: -5.579405784606934
    5. '_dist' → logprob: -8.454405784606934
    6. ' 
' → logprob: -8.454405784606934
    7. '                    
' → logprob: -9.079405784606934
    8. '
' → logprob: -9.204405784606934
    9. ' ' → logprob: -9.329405784606934
    10. '                       ' → logprob: -9.454405784606934

Token 255: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.375001907348633
    3. 'to' → logprob: -15.125001907348633
    4. '=' → logprob: -16.750001907348633
    5. '[from' → logprob: -16.750001907348633
    6. '[
' → logprob: -17.000001907348633
    7. '(to' → logprob: -18.000001907348633
    8. ' [' → logprob: -18.500001907348633
    9. '_to' → logprob: -18.625001907348633
    10. '[token' → logprob: -18.750001907348633

Token 256: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890025526285172
    2. '=' → logprob: -2.5789003372192383
    3. ']' → logprob: -11.578900337219238
    4. ']=' → logprob: -14.828900337219238
    5. '＝' → logprob: -15.328900337219238
    6. ' =
' → logprob: -15.453900337219238
    7. ' ' → logprob: -15.953900337219238
    8. ',' → logprob: -16.453899383544922
    9. ')' → logprob: -16.453899383544922
    10. '   ' → logprob: -17.453899383544922

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751179739832878
    2. '=' → logprob: -3.5297510623931885
    3. ' =
' → logprob: -15.15475082397461
    4. '＝' → logprob: -15.52975082397461
    5. ',' → logprob: -16.52975082397461
    6. ' ' → logprob: -16.65475082397461
    7. '[' → logprob: -17.65475082397461
    8. ']' → logprob: -18.15475082397461
    9. '                   ' → logprob: -18.40475082397461
    10. '    ' → logprob: -18.40475082397461

Token 258: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.029751643538475037
    2. 'cost' → logprob: -3.5297515392303467
    3. '(cost' → logprob: -14.029751777648926
    4. 'Cost' → logprob: -15.654751777648926
    5. '_cost' → logprob: -16.02975082397461
    6. ' kost' → logprob: -16.90475082397461
    7. ' ' → logprob: -17.77975082397461
    8. '.cost' → logprob: -18.27975082397461
    9. '    ' → logprob: -18.77975082397461
    10. '```' → logprob: -18.90475082397461

Token 259: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14358149468898773
    2. '+' → logprob: -2.0185813903808594
    3. '+w' → logprob: -7.018581390380859
    4. ' w' → logprob: -13.14358139038086
    5. ' ' → logprob: -13.64358139038086
    6. '+c' → logprob: -13.76858139038086
    7. ' +
' → logprob: -13.89358139038086
    8. 'w' → logprob: -14.14358139038086
    9. '                   ' → logprob: -14.26858139038086
    10. '[' → logprob: -14.26858139038086

Token 260: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3872738182544708
    2. ' w' → logprob: -1.1372737884521484
    3. 'cost' → logprob: -8.137273788452148
    4. ' cost' → logprob: -9.387273788452148
    5. 'v' → logprob: -11.137273788452148
    6. '_w' → logprob: -13.137273788452148
    7. '+w' → logprob: -13.762273788452148
    8. 'W' → logprob: -14.012273788452148
    9. ' ' → logprob: -14.137273788452148
    10. 'to' → logprob: -14.137273788452148

Token 261: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -2.4868770196917467e-05
    2. '           ' → logprob: -11.500024795532227
    3. '               ' → logprob: -12.125024795532227
    4. ' he' → logprob: -12.500024795532227
    5. 'he' → logprob: -13.375024795532227
    6. '       ' → logprob: -13.500024795532227
    7. '                  ' → logprob: -14.375024795532227
    8. '                    
' → logprob: -14.375024795532227
    9. '				' → logprob: -14.625024795532227
    10. '                    ' → logprob: -14.750024795532227

Token 262: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02779150754213333
    2. 'he' → logprob: -3.6527915000915527
    3. ' he' → logprob: -6.527791500091553
    4. '               ' → logprob: -11.277791976928711
    5. '                  ' → logprob: -12.402791976928711
    6. '           ' → logprob: -12.777791976928711
    7. '                       ' → logprob: -13.152791976928711
    8. '                    ' → logprob: -13.277791976928711
    9. '   ' → logprob: -13.402791976928711
    10. '				' → logprob: -13.527791976928711

Token 263: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -1.5048530030981055e-06
    2. ' he' → logprob: -13.500001907348633
    3. '                   ' → logprob: -17.125001907348633
    4. '               ' → logprob: -21.250001907348633
    5. '           ' → logprob: -22.125001907348633
    6. '                  ' → logprob: -22.625001907348633
    7. '                       ' → logprob: -22.750001907348633
    8. '   ' → logprob: -22.875001907348633
    9. 'heap' → logprob: -22.875001907348633
    10. '                           ' → logprob: -24.000001907348633

Token 264: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -9.253090865968261e-06
    2. 'ap' → logprob: -11.625009536743164
    3. ' app' → logprob: -16.250009536743164
    4. 'a' → logprob: -16.750009536743164
    5. 'ап' → logprob: -18.000009536743164
    6. '```' → logprob: -18.375009536743164
    7. 'aps' → logprob: -18.500009536743164
    8. '	app' → logprob: -18.625009536743164
    9. 'pp' → logprob: -19.250009536743164
    10. '   ' → logprob: -19.625009536743164

Token 265: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.723352049040841e-06
    2. 'sh' → logprob: -12.625004768371582
    3. 'push' → logprob: -13.625004768371582
    4. '   ' → logprob: -16.625003814697266
    5. '```' → logprob: -17.875003814697266
    6. 'u' → logprob: -18.625003814697266
    7. ' push' → logprob: -19.500003814697266
    8. 'Push' → logprob: -19.625003814697266
    9. 'USH' → logprob: -19.875003814697266
    10. 'op' → logprob: -20.375003814697266

Token 266: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.125001907348633
    3. ' (' → logprob: -15.750001907348633
    4. '(q' → logprob: -16.375001907348633
    5. '(
' → logprob: -17.500001907348633
    6. ',h' → logprob: -18.875001907348633
    7. 'h' → logprob: -19.375001907348633
    8. '((' → logprob: -19.375001907348633
    9. '(s' → logprob: -20.375001907348633
    10. '(n' → logprob: -20.375001907348633

Token 267: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.896309739408025e-07
    2. 'Q' → logprob: -15.875000953674316
    3. '	q' → logprob: -16.25
    4. '```' → logprob: -16.375
    5. ' q' → logprob: -16.625
    6. 'v' → logprob: -16.75
    7. '[q' → logprob: -17.0
    8. 'p' → logprob: -17.375
    9. '(q' → logprob: -17.5
    10. '
' → logprob: -17.625

Token 268: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.12118634581565857
    2. ',' → logprob: -2.2461862564086914
    3. ' (' → logprob: -5.121186256408691
    4. '(' → logprob: -6.496186256408691
    5. ',(' → logprob: -8.246186256408691
    6. '(q' → logprob: -8.371186256408691
    7. '((' → logprob: -9.121186256408691
    8. ' ,' → logprob: -9.121186256408691
    9. ')' → logprob: -9.996186256408691
    10. ',h' → logprob: -10.496186256408691

Token 269: ' (' (ID: 350)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.07327020913362503
    2. ' (' → logprob: -2.823270320892334
    3. '(' → logprob: -4.573270320892334
    4. '(dist' → logprob: -7.198270320892334
    5. '(c' → logprob: -8.948269844055176
    6. '(to' → logprob: -11.323269844055176
    7. '(distance' → logprob: -11.948269844055176
    8. '(co' → logprob: -12.698269844055176
    9. '(ct' → logprob: -12.823269844055176
    10. '((' → logprob: -12.823269844055176

Token 270: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -9.591415437171236e-05
    2. ' dist' → logprob: -9.375096321105957
    3. '(dist' → logprob: -11.875096321105957
    4. 'cost' → logprob: -12.625096321105957
    5. '                   ' → logprob: -14.750096321105957
    6. '	dist' → logprob: -16.50009536743164
    7. '                           ' → logprob: -17.00009536743164
    8. '               ' → logprob: -17.37509536743164
    9. '                       ' → logprob: -17.50009536743164
    10. 'distance' → logprob: -17.87509536743164

Token 271: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -3.380904672667384e-05
    2. 'to' → logprob: -10.375033378601074
    3. ',to' → logprob: -13.375033378601074
    4. '(to' → logprob: -14.125033378601074
    5. ' to' → logprob: -16.75003433227539
    6. ',' → logprob: -17.00003433227539
    7. '	to' → logprob: -17.25003433227539
    8. '```' → logprob: -18.00003433227539
    9. '
' → logprob: -18.25003433227539
    10. '[' → logprob: -19.12503433227539

Token 272: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.438573680294212e-06
    2. ' ,' → logprob: -12.750005722045898
    3. '],' → logprob: -13.625005722045898
    4. '),' → logprob: -14.250005722045898
    5. ',
' → logprob: -15.750005722045898
    6. '‌,' → logprob: -16.2500057220459
    7. ',to' → logprob: -16.7500057220459
    8. ')' → logprob: -16.7500057220459
    9. ',v' → logprob: -16.7500057220459
    10. '<|end|>' → logprob: -17.2500057220459

Token 273: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.004078401252627373
    2. ' to' → logprob: -5.504078388214111
    3. '[to' → logprob: -18.504077911376953
    4. '	to' → logprob: -19.379077911376953
    5. ' ' → logprob: -19.879077911376953
    6. '(to' → logprob: -20.629077911376953
    7. '               ' → logprob: -20.629077911376953
    8. 'toc' → logprob: -21.129077911376953
    9. '   ' → logprob: -21.504077911376953
    10. ',to' → logprob: -21.629077911376953

Token 274: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2521214187145233
    2. ')' → logprob: -1.5021214485168457
    3. '))
' → logprob: -9.002120971679688
    4. ')
' → logprob: -9.627120971679688
    5. ')))' → logprob: -13.627120971679688
    6. ' ))' → logprob: -13.877120971679688
    7. ' )' → logprob: -15.127120971679688
    8. '       ' → logprob: -15.502120971679688
    9. ')}' → logprob: -16.002120971679688
    10. '           ' → logprob: -16.127120971679688

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007035273592919111
    2. 'return' → logprob: -5.257035255432129
    3. ' return' → logprob: -7.007035255432129
    4. '<|end|>' → logprob: -7.382035255432129
    5. '
' → logprob: -8.507035255432129
    6. '   ' → logprob: -11.132035255432129
    7. '	return' → logprob: -11.507035255432129
    8. '        
' → logprob: -11.632035255432129
    9. '      ' → logprob: -12.132035255432129
    10. ')' → logprob: -12.382035255432129

Token 276: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08514124155044556
    2. '       ' → logprob: -2.585141181945801
    3. ' return' → logprob: -5.085141181945801
    4. '   ' → logprob: -10.3351411819458
    5. '	return' → logprob: -12.3351411819458
    6. '        
' → logprob: -13.2101411819458
    7. ' ' → logprob: -13.7101411819458
    8. ':return' → logprob: -14.2101411819458
    9. 'ret' → logprob: -14.4601411819458
    10. '
' → logprob: -14.4601411819458

Token 277: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02324547804892063
    2. ' dist' → logprob: -3.7732455730438232
    3. '	dist' → logprob: -16.773244857788086
    4. '(dist' → logprob: -16.898244857788086
    5. '_dist' → logprob: -20.773244857788086
    6. '.dist' → logprob: -21.523244857788086
    7. 'diff' → logprob: -21.773244857788086
    8. '   ' → logprob: -21.773244857788086
    9. 'dis' → logprob: -22.398244857788086
    10. 'd' → logprob: -22.898244857788086

Token 278: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6052500605583191
    2. ',' → logprob: -1.2302501201629639
    3. '=' → logprob: -2.355250120162964
    4. ' ' → logprob: -3.480250120162964
    5. '<|end|>' → logprob: -3.855250120162964
    6. '.' → logprob: -5.480249881744385
    7. ')' → logprob: -5.980249881744385
    8. 'u' → logprob: -5.980249881744385
    9. '  ' → logprob: -6.855249881744385
    10. '#' → logprob: -7.605249881744385

Token 281: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00815624836832285
    2. ' m' → logprob: -5.2581562995910645
    3. 'k' → logprob: -5.8831562995910645
    4. 'q' → logprob: -9.383155822753906
    5. ' k' → logprob: -10.258155822753906
    6. 's' → logprob: -12.383155822753906
    7. ' q' → logprob: -13.383155822753906
    8. 'd' → logprob: -13.633155822753906
    9. 'a' → logprob: -14.008155822753906
    10. 'n' → logprob: -14.383155822753906

Token 282: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042528048157691956
    2. '=' → logprob: -3.2925281524658203
    3. ',' → logprob: -5.41752815246582
    4. ' ,' → logprob: -10.54252815246582
    5. ' ' → logprob: -12.04252815246582
    6. '<|end|>' → logprob: -13.29252815246582
    7. ' =
' → logprob: -13.66752815246582
    8. '=input' → logprob: -14.79252815246582
    9. ' =",' → logprob: -14.91752815246582
    10. ' =)' → logprob: -15.16752815246582

Token 283: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01690361462533474
    2. 'k' → logprob: -4.766903400421143
    3. 'q' → logprob: -5.266903400421143
    4. 'start' → logprob: -6.016903400421143
    5. 't' → logprob: -8.6419038772583
    6. ' s' → logprob: -9.0169038772583
    7. 'x' → logprob: -9.0169038772583
    8. '_' → logprob: -9.5169038772583
    9. 'r' → logprob: -9.7669038772583
    10. 'p' → logprob: -10.1419038772583

Token 284: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02328554540872574
    2. ' =' → logprob: -3.7732856273651123
    3. ',' → logprob: -10.148285865783691
    4. '=input' → logprob: -14.773285865783691
    5. '＝' → logprob: -15.273285865783691
    6. '=int' → logprob: -15.898285865783691
    7. '=
' → logprob: -16.648284912109375
    8. ' ' → logprob: -17.273284912109375
    9. '=

' → logprob: -17.273284912109375
    10. '=n' → logprob: -17.648284912109375

Token 285: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0004957250785082579
    2. '_' → logprob: -8.125495910644531
    3. '_t' → logprob: -9.750495910644531
    4. '_=' → logprob: -10.125495910644531
    5. 'd' → logprob: -10.250495910644531
    6. '=' → logprob: -10.875495910644531
    7. 'g' → logprob: -11.125495910644531
    8. ' =' → logprob: -11.375495910644531
    9. ' t' → logprob: -11.375495910644531
    10. 'e' → logprob: -13.250495910644531

Token 286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520529627799988
    2. ' =' → logprob: -1.5020530223846436
    3. ',' → logprob: -9.002053260803223
    4. '＝' → logprob: -15.002053260803223
    5. '=input' → logprob: -15.877053260803223
    6. ' =
' → logprob: -16.627052307128906
    7. ' ' → logprob: -17.127052307128906
    8. '=int' → logprob: -17.377052307128906
    9. '=

' → logprob: -17.877052307128906
    10. '=
' → logprob: -18.127052307128906

Token 287: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011051470413804054
    2. ' map' → logprob: -4.511051654815674
    3. 'list' → logprob: -14.011051177978516
    4. '0' → logprob: -14.136051177978516
    5. ' ' → logprob: -14.261051177978516
    6. '1' → logprob: -14.761051177978516
    7. '5' → logprob: -14.761051177978516
    8. '	map' → logprob: -15.511051177978516
    9. '(map' → logprob: -15.761051177978516
    10. '10' → logprob: -16.386051177978516

Token 288: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00019328886992298067
    2. '(' → logprob: -9.12519359588623
    3. 'int' → logprob: -9.50019359588623
    4. '(input' → logprob: -12.62519359588623
    5. '(str' → logprob: -12.75019359588623
    6. '<int' → logprob: -13.75019359588623
    7. '[int' → logprob: -14.25019359588623
    8. '=int' → logprob: -14.50019359588623
    9. '(in' → logprob: -15.50019359588623
    10. '(
' → logprob: -15.62519359588623

Token 289: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5620353817939758
    2. ',' → logprob: -1.562035322189331
    3. 'input' → logprob: -2.187035322189331
    4. '(input' → logprob: -2.437035322189331
    5. '(' → logprob: -4.81203556060791
    6. ' input' → logprob: -5.31203556060791
    7. ')' → logprob: -5.81203556060791
    8. '=input' → logprob: -6.31203556060791
    9. '()' → logprob: -6.93703556060791
    10. '(),' → logprob: -7.56203556060791

Token 290: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0010228052269667387
    2. ' input' → logprob: -7.001022815704346
    3. 'int' → logprob: -9.126022338867188
    4. 'map' → logprob: -13.876022338867188
    5. 'lambda' → logprob: -14.501022338867188
    6. 'open' → logprob: -14.876022338867188
    7. 'str' → logprob: -14.876022338867188
    8. '```' → logprob: -16.001022338867188
    9. ' ' → logprob: -16.626022338867188
    10. ',input' → logprob: -17.876022338867188

Token 291: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.517272024415433e-05
    2. '()' → logprob: -9.500075340270996
    3. ' ().' → logprob: -15.750075340270996
    4. '())' → logprob: -17.00007438659668
    5. '(' → logprob: -17.37507438659668
    6. '（）' → logprob: -19.12507438659668
    7. '()
' → logprob: -19.50007438659668
    8. '()[' → logprob: -19.62507438659668
    9. 'split' → logprob: -19.75007438659668
    10. '.split' → logprob: -19.87507438659668

Token 292: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0445127372804563e-05
    2. 'strip' → logprob: -11.50001049041748
    3. 'spl' → logprob: -16.250009536743164
    4. ' split' → logprob: -16.625009536743164
    5. 'rstrip' → logprob: -17.125009536743164
    6. '(split' → logprob: -17.500009536743164
    7. '().' → logprob: -18.000009536743164
    8. 's' → logprob: -18.750009536743164
    9. 'sp' → logprob: -19.125009536743164
    10. '.split' → logprob: -20.750009536743164

Token 293: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38754191994667053
    2. ')' → logprob: -1.3875418901443481
    3. '()' → logprob: -2.6375420093536377
    4. '(' → logprob: -10.137541770935059
    5. '())
' → logprob: -12.637541770935059
    6. '(),' → logprob: -12.762541770935059
    7. ' )' → logprob: -13.262541770935059
    8. '('' → logprob: -14.012541770935059
    9. '))' → logprob: -14.512541770935059
    10. '()
' → logprob: -14.637541770935059

Token 294: 'yen' (ID: 31069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09658294916152954
    2. 'graph' → logprob: -3.0965828895568848
    3. 'g' → logprob: -3.3465828895568848
    4. 'G' → logprob: -5.346582889556885
    5. 'dj' → logprob: -5.346582889556885
    6. 'dist' → logprob: -7.721582889556885
    7. 'ds' → logprob: -8.096583366394043
    8. 'for' → logprob: -8.096583366394043
    9. 'di' → logprob: -8.596583366394043
    10. 'dg' → logprob: -8.721583366394043

Token 295: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5820239782333374
    2. ',' → logprob: -1.8320239782333374
    3. '_cost' → logprob: -1.9570239782333374
    4. '_edges' → logprob: -1.9570239782333374
    5. '_prices' → logprob: -2.707024097442627
    6. ' =' → logprob: -2.832024097442627
    7. '_dist' → logprob: -3.082024097442627
    8. ')' → logprob: -3.582024097442627
    9. '_graph' → logprob: -3.707024097442627
    10. '=' → logprob: -4.082024097442627

Token 296: ' D' (ID: 415)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6150312423706055
    2. 'list' → logprob: -1.1150312423706055
    3. '[list' → logprob: -2.2400312423706055
    4. '[]' → logprob: -4.8650312423706055
    5. '[n' → logprob: -4.9900312423706055
    6. '[' → logprob: -4.9900312423706055
    7. ' list' → logprob: -6.2400312423706055
    8. 'int' → logprob: -7.8650312423706055
    9. ' [' → logprob: -7.9900312423706055
    10. '[s' → logprob: -8.615031242370605

Token 297: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -2.081584716506768e-05
    2. 'ijk' → logprob: -10.875020980834961
    3. 'ij' → logprob: -14.250020980834961
    4. 'jik' → logprob: -14.375020980834961
    5. 'ijks' → logprob: -15.250020980834961
    6. 'jk' → logprob: -15.250020980834961
    7. 'i' → logprob: -17.87502098083496
    8. '```' → logprob: -18.25002098083496
    9. 'ijkl' → logprob: -18.37502098083496
    10. 'ijkt' → logprob: -18.62502098083496

Token 298: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00032485672272741795
    2. '(' → logprob: -8.125325202941895
    3. '(m' → logprob: -10.625325202941895
    4. '(s' → logprob: -13.500325202941895
    5. '(y' → logprob: -14.375325202941895
    6. '(t' → logprob: -14.500325202941895
    7. ' (' → logprob: -14.625325202941895
    8. '(
' → logprob: -15.125325202941895
    9. 'n' → logprob: -15.250325202941895
    10. '()' → logprob: -15.750325202941895

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03809404745697975
    2. ')
' → logprob: -3.2880940437316895
    3. ')

' → logprob: -10.663094520568848
    4. ')
' → logprob: -10.663094520568848
    5. ' )' → logprob: -13.038094520568848
    6. ')n' → logprob: -14.413094520568848
    7. ')add' → logprob: -14.663094520568848
    8. ')t' → logprob: -15.038094520568848
    9. ' )
' → logprob: -15.163094520568848
    10. ')`' → logprob: -15.288094520568848

Token 300: 'sn' (ID: 22095)
  Prédit: 'usd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usd' → logprob: -1.65311598777771
    2. 'sn' → logprob: -1.90311598777771
    3. 'd' → logprob: -2.27811598777771
    4. 'for' → logprob: -2.52811598777771
    5. 'su' → logprob: -2.90311598777771
    6. 's' → logprob: -2.90311598777771
    7. 'yen' → logprob: -3.02811598777771
    8. 'silver' → logprob: -3.40311598777771
    9. 'r' → logprob: -3.65311598777771
    10. 'y' → logprob: -3.77811598777771

Token 301: 'uke' (ID: 10307)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.7661736607551575
    2. 'uke' → logprob: -1.0161736011505127
    3. 'uk' → logprob: -3.3911736011505127
    4. 'u' → logprob: -3.8911736011505127
    5. 's' → logprob: -3.8911736011505127
    6. 'e' → logprob: -4.266173839569092
    7. 'ows' → logprob: -4.391173839569092
    8. 'o' → logprob: -4.516173839569092
    9. 'ack' → logprob: -5.016173839569092
    10. 'a' → logprob: -5.266173839569092

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519488036632538
    2. '=' → logprob: -1.5019488334655762
    3. ' ' → logprob: -11.751948356628418
    4. '＝' → logprob: -12.126948356628418
    5. '=D' → logprob: -13.376948356628418
    6. 's' → logprob: -13.751948356628418
    7. ',' → logprob: -14.376948356628418
    8. ' =
' → logprob: -14.501948356628418
    9. 'y' → logprob: -14.876948356628418
    10. '=
' → logprob: -15.001948356628418

Token 303: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00038014890742488205
    2. ' D' → logprob: -7.875380039215088
    3. ' ' → logprob: -17.25037956237793
    4. '	D' → logprob: -18.37537956237793
    5. 'd' → logprob: -18.87537956237793
    6. '   ' → logprob: -19.62537956237793
    7. '  ' → logprob: -20.12537956237793
    8. '<D' → logprob: -21.25037956237793
    9. '[D' → logprob: -21.37537956237793
    10. '=D' → logprob: -21.62537956237793

Token 304: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -1.3782830137643032e-05
    2. 'ijk' → logprob: -11.37501335144043
    3. 'ij' → logprob: -14.12501335144043
    4. 'jik' → logprob: -14.25001335144043
    5. 'jk' → logprob: -14.50001335144043
    6. 'i' → logprob: -16.12501335144043
    7. 'ik' → logprob: -17.00001335144043
    8. 'ijkl' → logprob: -17.37501335144043
    9. 'ijks' → logprob: -17.87501335144043
    10. 'j' → logprob: -17.87501335144043

Token 305: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.141186450899113e-05
    2. '(' → logprob: -10.875020980834961
    3. ' (' → logprob: -13.125020980834961
    4. '(s' → logprob: -15.750020980834961
    5. '(
' → logprob: -15.875020980834961
    6. 'n' → logprob: -17.00002098083496
    7. '(m' → logprob: -17.12502098083496
    8. '<|end|>' → logprob: -17.62502098083496
    9. '(nt' → logprob: -18.50002098083496
    10. '(t' → logprob: -19.50002098083496

Token 306: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -12.875003814697266
    3. ' )' → logprob: -14.750003814697266
    4. ')n' → logprob: -15.375003814697266
    5. 'n' → logprob: -15.875003814697266
    6. ')

' → logprob: -16.875003814697266
    7. ')
' → logprob: -17.875003814697266
    8. ')`' → logprob: -18.500003814697266
    9. '）' → logprob: -18.625003814697266
    10. 't' → logprob: -18.750003814697266

Token 307: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014072739577386528
    2. ' for' → logprob: -8.875141143798828
    3. 'f' → logprob: -15.250141143798828
    4. 'yen' → logprob: -15.750141143798828
    5. '<|end|>' → logprob: -16.625141143798828
    6. 'edges' → logprob: -16.750141143798828
    7. 'fo' → logprob: -16.875141143798828
    8. 's' → logprob: -16.875141143798828
    9. 'u' → logprob: -17.000141143798828
    10. '```' → logprob: -17.000141143798828

Token 308: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023272035643458366
    2. ' _' → logprob: -3.7732720375061035
    3. '_i' → logprob: -10.773271560668945
    4. ' i' → logprob: -12.148271560668945
    5. 'i' → logprob: -15.148271560668945
    6. '＿' → logprob: -17.773271560668945
    7. ' _
' → logprob: -18.148271560668945
    8. ' ' → logprob: -18.398271560668945
    9. '_=' → logprob: -18.398271560668945
    10. '_
' → logprob: -18.648271560668945

Token 309: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.523231565952301
    2. ' in' → logprob: -0.898231565952301
    3. ' ' → logprob: -10.398231506347656
    4. 'i' → logprob: -10.523231506347656
    5. ' i' → logprob: -10.648231506347656
    6. ',' → logprob: -12.148231506347656
    7. 'range' → logprob: -12.273231506347656
    8. '  ' → logprob: -12.523231506347656
    9. '_' → logprob: -12.773231506347656
    10. 'n' → logprob: -13.023231506347656

Token 310: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00034118397161364555
    2. ' range' → logprob: -8.000341415405273
    3. 'map' → logprob: -13.250341415405273
    4. '(range' → logprob: -13.625341415405273
    5. 'input' → logprob: -14.250341415405273
    6. 'r' → logprob: -14.875341415405273
    7. 'in' → logprob: -14.875341415405273
    8. '[' → logprob: -15.250341415405273
    9. '	range' → logprob: -15.375341415405273
    10. 'ra' → logprob: -16.250341415405273

Token 311: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.273621405242011e-05
    2. ' (' → logprob: -10.500032424926758
    3. '(' → logprob: -12.500032424926758
    4. 'm' → logprob: -13.750032424926758
    5. ' m' → logprob: -15.000032424926758
    6. '(
' → logprob: -19.000032424926758
    7. '(M' → logprob: -19.625032424926758
    8. '	m' → logprob: -19.875032424926758
    9. ',m' → logprob: -20.000032424926758
    10. '(s' → logprob: -20.625032424926758

Token 312: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018278708681464195
    2. '):
' → logprob: -4.0182785987854
    3. ' ):' → logprob: -9.518279075622559
    4. ')' → logprob: -10.518279075622559
    5. '):
' → logprob: -11.143279075622559
    6. ':' → logprob: -12.143279075622559
    7. ',' → logprob: -12.518279075622559
    8. ' ):
' → logprob: -13.893279075622559
    9. '）：' → logprob: -14.393279075622559
    10. ')：' → logprob: -14.893279075622559

Token 313: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.24506574869155884
    2. 'a' → logprob: -2.120065689086914
    3. '   ' → logprob: -2.620065689086914
    4. ' u' → logprob: -3.745065689086914
    5. ' a' → logprob: -7.620065689086914
    6. '	u' → logprob: -8.620065689086914
    7. 'U' → logprob: -9.745065689086914
    8. 'A' → logprob: -9.745065689086914
    9. ' ' → logprob: -11.245065689086914
    10. 'c' → logprob: -11.370065689086914

Token 314: ' u' (ID: 337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3872954249382019
    2. 'u' (adapté à ' u') → logprob: -1.1372954845428467
    3. 'x' → logprob: -9.137295722961426
    4. 'A' → logprob: -9.387295722961426
    5. ' u' → logprob: -9.387295722961426
    6. ' a' → logprob: -9.887295722961426
    7. 'U' → logprob: -10.387295722961426
    8. 'c' → logprob: -10.512295722961426
    9. 'f' → logprob: -11.637295722961426
    10. 'p' → logprob: -11.762295722961426

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011759399203583598
    2. ',v' → logprob: -6.876175880432129
    3. ' ,' → logprob: -8.876175880432129
    4. ',u' → logprob: -13.626175880432129
    5. 'v' → logprob: -13.751175880432129
    6. ' v' → logprob: -14.001175880432129
    7. ',
' → logprob: -16.376176834106445
    8. '‌,' → logprob: -16.751176834106445
    9. ',s' → logprob: -17.001176834106445
    10. 'u' → logprob: -17.126176834106445

Token 316: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016035307198762894
    2. ' v' → logprob: -4.141035079956055
    3. '_v' → logprob: -14.766035079956055
    4. ',v' → logprob: -15.641035079956055
    5. '	v' → logprob: -15.641035079956055
    6. 'vq' → logprob: -16.516035079956055
    7. 'w' → logprob: -16.641035079956055
    8. 'vj' → logprob: -16.891035079956055
    9. ' ' → logprob: -17.141035079956055
    10. 'vv' → logprob: -17.391035079956055

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003739625681191683
    2. '=' → logprob: -5.628739833831787
    3. ' =' → logprob: -9.128739356994629
    4. ' ,' → logprob: -10.503739356994629
    5. ',w' → logprob: -14.378739356994629
    6. ',c' → logprob: -14.503739356994629
    7. ',v' → logprob: -14.628739356994629
    8. 'w' → logprob: -15.003739356994629
    9. ',u' → logprob: -15.003739356994629
    10. '=input' → logprob: -15.253739356994629

Token 318: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03225995972752571
    2. 'c' → logprob: -3.907259941101074
    3. 'w' → logprob: -5.657259941101074
    4. 'y' → logprob: -5.907259941101074
    5. ' a' → logprob: -6.407259941101074
    6. 'x' → logprob: -6.907259941101074
    7. 'd' → logprob: -7.032259941101074
    8. 'cost' → logprob: -7.657259941101074
    9. 'z' → logprob: -7.782259941101074
    10. 'ay' → logprob: -8.532259941101074

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014215784904081374
    2. ' ,' → logprob: -9.875142097473145
    3. '=' → logprob: -10.125142097473145
    4. ',b' → logprob: -10.500142097473145
    5. 'b' → logprob: -10.750142097473145
    6. ' =' → logprob: -15.250142097473145
    7. '<|end|>' → logprob: -15.375142097473145
    8. ',v' → logprob: -15.750142097473145
    9. ' ' → logprob: -15.875142097473145
    10. ' b' → logprob: -16.12514305114746

Token 320: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004086828324943781
    2. ' b' → logprob: -5.504086971282959
    3. ' ' → logprob: -12.2540864944458
    4. 'y' → logprob: -13.5040864944458
    5. 'c' → logprob: -14.3790864944458
    6. '  ' → logprob: -14.6290864944458
    7. 'd' → logprob: -15.5040864944458
    8. 'p' → logprob: -15.7540864944458
    9. '	b' → logprob: -15.7540864944458
    10. 'z' → logprob: -15.8790864944458

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '＝' → logprob: -18.876928329467773
    4. '=input' → logprob: -19.001928329467773
    5. '=
' → logprob: -21.126928329467773
    6. '=int' → logprob: -21.501928329467773
    7. ' ' → logprob: -21.501928329467773
    8. '=

' → logprob: -22.001928329467773
    9. ',' → logprob: -22.376928329467773
    10. '=}' → logprob: -23.001928329467773

Token 322: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00861468818038702
    2. ' map' → logprob: -4.758614540100098
    3. '	map' → logprob: -16.758615493774414
    4. 'm' → logprob: -17.883615493774414
    5. '_map' → logprob: -19.258615493774414
    6. '.map' → logprob: -19.633615493774414
    7. ' ' → logprob: -20.258615493774414
    8. 'ma' → logprob: -20.633615493774414
    9. '(map' → logprob: -20.633615493774414
    10. ',map' → logprob: -20.758615493774414

Token 323: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0024842156562954187
    2. 'int' → logprob: -6.002484321594238
    3. ',int' → logprob: -12.127484321594238
    4. '[int' → logprob: -13.252484321594238
    5. '=int' → logprob: -14.127484321594238
    6. '<int' → logprob: -15.502484321594238
    7. '```' → logprob: -15.502484321594238
    8. ' int' → logprob: -16.002483367919922
    9. ']int' → logprob: -17.002483367919922
    10. '(' → logprob: -17.127483367919922

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007621183525770903
    2. ',input' → logprob: -4.8826212882995605
    3. '(),' → logprob: -11.382620811462402
    4. ' ,' → logprob: -12.882620811462402
    5. ',int' → logprob: -15.007620811462402
    6. '(' → logprob: -15.382620811462402
    7. '(input' → logprob: -15.507620811462402
    8. 'input' → logprob: -16.25762176513672
    9. ' ' → logprob: -16.63262176513672
    10. '   ' → logprob: -17.00762176513672

Token 325: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002613358374219388
    2. ' input' → logprob: -8.250261306762695
    3. ' ' → logprob: -20.250261306762695
    4. '_input' → logprob: -21.375261306762695
    5. ',input' → logprob: -21.750261306762695
    6. '=input' → logprob: -21.875261306762695
    7. '	input' → logprob: -22.000261306762695
    8. 'Input' → logprob: -22.500261306762695
    9. '<input' → logprob: -22.625261306762695
    10. '(input' → logprob: -22.625261306762695

Token 326: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.1008713702030946e-06
    2. '()' → logprob: -13.250001907348633
    3. ' ().' → logprob: -16.000001907348633
    4. ')' → logprob: -16.125001907348633
    5. '(' → logprob: -18.000001907348633
    6. '.' → logprob: -18.375001907348633
    7. '().__' → logprob: -19.000001907348633
    8. ',' → logprob: -19.500001907348633
    9. '()
' → logprob: -20.250001907348633
    10. '.split' → logprob: -20.750001907348633

Token 327: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. '(split' → logprob: -16.625
    3. ' split' → logprob: -16.75
    4. 'spl' → logprob: -16.875
    5. 'strip' → logprob: -17.125
    6. '().' → logprob: -19.75
    7. '.split' → logprob: -19.75
    8. 'rstrip' → logprob: -20.625
    9. '```' → logprob: -21.375
    10. 's' → logprob: -21.5

Token 328: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019468160346150398
    2. '())' → logprob: -4.019468307495117
    3. '()' → logprob: -6.769468307495117
    4. ')
' → logprob: -8.894468307495117
    5. '())
' → logprob: -10.519468307495117
    6. ' )' → logprob: -12.769468307495117
    7. '()
' → logprob: -14.894468307495117
    8. '(' → logprob: -15.394468307495117
    9. '）' → logprob: -15.519468307495117
    10. '))' → logprob: -15.894468307495117

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001264759455807507
    2. ' yen' → logprob: -7.126264572143555
    3. '<|end|>' → logprob: -8.626264572143555
    4. 'yen' → logprob: -9.251264572143555
    5. '    
' → logprob: -9.376264572143555
    6. '
' → logprob: -10.626264572143555
    7. ')' → logprob: -11.251264572143555
    8. ' ' → logprob: -11.376264572143555
    9. 'u' → logprob: -11.376264572143555
    10. '<|end|>' → logprob: -12.501264572143555

Token 330: ' u' (ID: 337)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.015094962902367115
    2. ' yen' → logprob: -4.265094757080078
    3. '   ' → logprob: -7.015094757080078
    4. 'yer' → logprob: -12.015094757080078
    5. 'yan' → logprob: -12.640094757080078
    6. ' ' → logprob: -12.640094757080078
    7. 'ye' → logprob: -12.765094757080078
    8. 'ven' → logprob: -13.015094757080078
    9. 'uen' → logprob: -13.515094757080078
    10. '```' → logprob: -13.765094757080078

Token 331: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.13060790300369263
    2. '-=' → logprob: -2.630607843399048
    3. '-' → logprob: -3.005607843399048
    4. ',' → logprob: -7.380608081817627
    5. ',u' → logprob: -9.255607604980469
    6. ' -' → logprob: -9.255607604980469
    7. 'u' → logprob: -10.755607604980469
    8. ' ,' → logprob: -10.880607604980469
    9. ' u' → logprob: -11.505607604980469
    10. '   ' → logprob: -11.880607604980469

Token 332: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '１' → logprob: -19.375261306762695
    4. '   ' → logprob: -19.500261306762695
    5. '```' → logprob: -20.500261306762695
    6. '<|end|>' → logprob: -21.750261306762695
    7. '=' → logprob: -22.687761306762695
    8. 'to' → logprob: -22.750261306762695
    9. '۱' → logprob: -22.750261306762695
    10. ')' → logprob: -23.125261306762695

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '１' → logprob: -19.125
    4. '   ' → logprob: -20.375
    5. '```' → logprob: -21.75
    6. '<|end|>' → logprob: -22.125
    7. '১' → logprob: -22.625
    8. '۱' → logprob: -22.875
    9. '१' → logprob: -23.0625
    10. 'to' → logprob: -23.75

Token 334: ';' (ID: 26)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.023908337578177452
    2. '
' → logprob: -4.0239081382751465
    3. ' v' → logprob: -5.8989081382751465
    4. ',v' → logprob: -6.0239081382751465
    5. '<|end|>' → logprob: -8.398908615112305
    6. '   ' → logprob: -9.023908615112305
    7. ',' → logprob: -9.148908615112305
    8. 'u' → logprob: -10.523908615112305
    9. '	v' → logprob: -10.773908615112305
    10. ';' → logprob: -10.898908615112305

Token 335: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3868713676929474
    2. ' v' → logprob: -1.136871337890625
    3. '	v' → logprob: -15.136871337890625
    4. '   ' → logprob: -16.886871337890625
    5. 'u' → logprob: -17.136871337890625
    6. ' u' → logprob: -17.386871337890625
    7. '
' → logprob: -17.761871337890625
    8. ' 
' → logprob: -18.261871337890625
    9. ',v' → logprob: -18.386871337890625
    10. '_v' → logprob: -19.886871337890625

Token 336: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10245584696531296
    2. '-=' → logprob: -2.3524558544158936
    3. '-' → logprob: -6.1024556159973145
    4. ' -' → logprob: -12.727456092834473
    5. '=' → logprob: -13.727456092834473
    6. ' ' → logprob: -13.852456092834473
    7. ',' → logprob: -13.977456092834473
    8. '<|end|>' → logprob: -14.102456092834473
    9. ')' → logprob: -14.227456092834473
    10. '```' → logprob: -15.102456092834473

Token 337: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.758615493774414
    4. '１' → logprob: -18.133615493774414
    5. '```' → logprob: -18.258615493774414
    6. '-' → logprob: -18.633615493774414
    7. '2' → logprob: -19.321115493774414
    8. '=' → logprob: -19.446115493774414
    9. '<|end|>' → logprob: -19.633615493774414
    10. '  ' → logprob: -20.008615493774414

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '１' → logprob: -18.562519073486328
    4. '   ' → logprob: -18.562519073486328
    5. 'v' → logprob: -18.625019073486328
    6. '<|end|>' → logprob: -18.625019073486328
    7. '```' → logprob: -18.812519073486328
    8. '
' → logprob: -19.062519073486328
    9. '۱' → logprob: -19.250019073486328
    10. '2' → logprob: -19.437519073486328

Token 339: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6810795664787292
    2. 'yen' → logprob: -0.9310795664787292
    3. ' yen' → logprob: -2.306079626083374
    4. ' Yen' → logprob: -10.431079864501953
    5. '
' → logprob: -10.556079864501953
    6. ' ' → logprob: -11.681079864501953
    7. 'yer' → logprob: -11.681079864501953
    8. 'yan' → logprob: -11.806079864501953
    9. '   ' → logprob: -11.931079864501953
    10. 'yor' → logprob: -12.056079864501953

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10047990828752518
    2. 'yen' → logprob: -2.6004798412323
    3. ' yen' → logprob: -3.8504798412323
    4. 'yer' → logprob: -11.162980079650879
    5. ' ' → logprob: -11.662980079650879
    6. '  ' → logprob: -12.100480079650879
    7. ' Yen' → logprob: -12.100480079650879
    8. 'ye' → logprob: -12.225480079650879
    9. '   ' → logprob: -12.225480079650879
    10. 'yan' → logprob: -12.412980079650879

Token 341: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' (adapté à ' yen') → logprob: -2.696889623621246e-06
    2. ' yen' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.75000286102295
    4. 'yer' → logprob: -16.125001907348633
    5. 'yan' → logprob: -16.875001907348633
    6. 'ye' → logprob: -18.125001907348633
    7. 'yon' → logprob: -18.125001907348633
    8. '```' → logprob: -18.125001907348633
    9. ' ' → logprob: -18.375001907348633
    10. 'yuan' → logprob: -18.625001907348633

Token 342: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -8.97155623533763e-05
    2. '.' → logprob: -9.375089645385742
    3. ' .' → logprob: -12.375089645385742
    4. ').' → logprob: -15.875089645385742
    5. '.append' → logprob: -16.000089645385742
    6. 'add' → logprob: -16.125089645385742
    7. '.ad' → logprob: -16.625089645385742
    8. '
' → logprob: -16.750089645385742
    9. '`.' → logprob: -17.500089645385742
    10. '}.' → logprob: -17.500089645385742

Token 343: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.1472419600977446e-06
    2. '(v' → logprob: -14.375000953674316
    3. 'u' → logprob: -15.125000953674316
    4. '(' → logprob: -15.625000953674316
    5. ',u' → logprob: -19.250001907348633
    6. ' u' → logprob: -19.500001907348633
    7. '	u' → logprob: -20.125001907348633
    8. '[u' → logprob: -20.250001907348633
    9. '(s' → logprob: -20.625001907348633
    10. '(
' → logprob: -21.125001907348633

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.456358823925257e-05
    2. ' ,' → logprob: -10.000064849853516
    3. ',v' → logprob: -11.000064849853516
    4. 'v' → logprob: -13.000064849853516
    5. ' v' → logprob: -16.500064849853516
    6. ',
' → logprob: -16.875064849853516
    7. ',u' → logprob: -18.250064849853516
    8. '‌,' → logprob: -18.875064849853516
    9. '),' → logprob: -19.375064849853516
    10. ')' → logprob: -19.500064849853516

Token 345: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007100477814674377
    2. ' v' → logprob: -7.2507100105285645
    3. '	v' → logprob: -17.875709533691406
    4. ')v' → logprob: -18.375709533691406
    5. 'u' → logprob: -19.375709533691406
    6. 'vj' → logprob: -20.250709533691406
    7. '
' → logprob: -20.625709533691406
    8. 've' → logprob: -20.625709533691406
    9. ',v' → logprob: -20.875709533691406
    10. 't' → logprob: -20.875709533691406

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.546478935983032e-05
    2. ' ,' → logprob: -11.000025749206543
    3. ',a' → logprob: -11.750025749206543
    4. 'a' → logprob: -14.875025749206543
    5. ',b' → logprob: -14.875025749206543
    6. '),' → logprob: -16.875024795532227
    7. ',
' → logprob: -16.875024795532227
    8. ')' → logprob: -17.500024795532227
    9. 'b' → logprob: -17.750024795532227
    10. '   ' → logprob: -18.000024795532227

Token 347: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9266199160483666e-05
    2. ' a' → logprob: -10.875019073486328
    3. '	a' → logprob: -15.750019073486328
    4. '   ' → logprob: -16.375019073486328
    5. 'b' → logprob: -17.625019073486328
    6. 'а' → logprob: -18.500019073486328
    7. ' ' → logprob: -19.000019073486328
    8. '_a' → logprob: -19.375019073486328
    9. ')a' → logprob: -19.500019073486328
    10. ''a' → logprob: -19.625019073486328

Token 348: ');' (ID: 2245)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10030210018157959
    2. ')' → logprob: -2.350302219390869
    3. ')
' → logprob: -9.350301742553711
    4. '   ' → logprob: -12.475301742553711
    5. ')y' → logprob: -12.850301742553711
    6. ' )
' → logprob: -13.850301742553711
    7. ')

' → logprob: -14.225301742553711
    8. '),' → logprob: -15.850301742553711
    9. ');' → logprob: -16.60030174255371
    10. ');
' → logprob: -16.85030174255371

Token 349: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.0006079599261283875
    2. 'sn' → logprob: -8.50060749053955
    3. ' yen' → logprob: -8.50060749053955
    4. '   ' → logprob: -8.62560749053955
    5. 'ven' → logprob: -11.62560749053955
    6. 'ye' → logprob: -13.12560749053955
    7. 'yan' → logprob: -13.25060749053955
    8. 'yn' → logprob: -13.37560749053955
    9. 'yuan' → logprob: -13.75060749053955
    10. ' ' → logprob: -14.00060749053955

Token 350: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.0445127372804563e-05
    2. '.' → logprob: -11.62501049041748
    3. ' .' → logprob: -14.12501049041748
    4. 'add' → logprob: -14.87501049041748
    5. '.ad' → logprob: -15.50001049041748
    6. ')add' → logprob: -16.750009536743164
    7. ').' → logprob: -17.375009536743164
    8. '```' → logprob: -17.875009536743164
    9. '	add' → logprob: -18.000009536743164
    10. '
' → logprob: -18.125009536743164

Token 351: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.125015258789062
    3. ' (' → logprob: -16.750015258789062
    4. 'v' → logprob: -16.875015258789062
    5. '(
' → logprob: -18.000015258789062
    6. ' v' → logprob: -19.000015258789062
    7. '(u' → logprob: -20.625015258789062
    8. '	v' → logprob: -21.750015258789062
    9. '(V' → logprob: -21.875015258789062
    10. '(s' → logprob: -21.875015258789062

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. ',u' → logprob: -11.50001335144043
    3. ' ,' → logprob: -12.87501335144043
    4. 'u' → logprob: -14.12501335144043
    5. ',
' → logprob: -16.62501335144043
    6. ',v' → logprob: -17.25001335144043
    7. ' u' → logprob: -17.37501335144043
    8. ')' → logprob: -18.00001335144043
    9. '(u' → logprob: -19.00001335144043
    10. '   ' → logprob: -19.00001335144043

Token 353: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0040793512016534805
    2. ' u' → logprob: -5.504079341888428
    3. '	u' → logprob: -14.254079818725586
    4. ' ' → logprob: -16.254079818725586
    5. '<|end|>' → logprob: -17.754079818725586
    6. '[u' → logprob: -18.379079818725586
    7. ')' → logprob: -19.504079818725586
    8. ''u' → logprob: -19.879079818725586
    9. '<u' → logprob: -20.004079818725586
    10. '   ' → logprob: -20.004079818725586

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ' ,' → logprob: -13.12500286102295
    3. ',a' → logprob: -15.00000286102295
    4. 'a' → logprob: -16.750001907348633
    5. ')' → logprob: -18.000001907348633
    6. ',
' → logprob: -18.125001907348633
    7. ',v' → logprob: -19.000001907348633
    8. ',b' → logprob: -19.125001907348633
    9. '),' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.375001907348633

Token 355: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002613358374219388
    2. ' a' → logprob: -8.250261306762695
    3. ' ' → logprob: -18.375261306762695
    4. '	a' → logprob: -18.750261306762695
    5. '   ' → logprob: -19.500261306762695
    6. '<|end|>' → logprob: -20.500261306762695
    7. ')a' → logprob: -20.500261306762695
    8. 'b' → logprob: -21.375261306762695
    9. 'а' → logprob: -21.750261306762695
    10. ''a' → logprob: -22.000261306762695

Token 356: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024802929256111383
    2. ')
' → logprob: -6.002480506896973
    3. ');' → logprob: -12.502480506896973
    4. ')
' → logprob: -15.627480506896973
    5. '   ' → logprob: -15.752480506896973
    6. ')b' → logprob: -15.752480506896973
    7. ')

' → logprob: -15.877480506896973
    8. '),' → logprob: -16.127479553222656
    9. ' )' → logprob: -16.252479553222656
    10. ');
' → logprob: -17.252479553222656

Token 357: '   ' (ID: 271)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.31006884574890137
    2. '   ' → logprob: -1.4350688457489014
    3. ' sn' → logprob: -3.5600688457489014
    4. ' ' → logprob: -10.18506908416748
    5. '  ' → logprob: -11.93506908416748
    6. '(sn' → logprob: -12.06006908416748
    7. '```' → logprob: -12.56006908416748
    8. '_sn' → logprob: -12.68506908416748
    9. 's' → logprob: -13.31006908416748
    10. '.sn' → logprob: -13.56006908416748

Token 358: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' (adapté à ' sn') → logprob: -2.935296834039036e-06
    2. ' sn' → logprob: -13.12500286102295
    3. '   ' → logprob: -14.37500286102295
    4. ' ' → logprob: -16.000003814697266
    5. 's' → logprob: -16.500003814697266
    6. '```' → logprob: -17.000003814697266
    7. 'sm' → logprob: -17.250003814697266
    8. '(sn' → logprob: -18.750003814697266
    9. '_sn' → logprob: -19.000003814697266
    10. '  ' → logprob: -19.000003814697266

Token 359: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -0.00011331788846291602
    2. 'u' → logprob: -9.125113487243652
    3. 'uk' → logprob: -12.375113487243652
    4. 'ake' → logprob: -16.375112533569336
    5. ' uke' → logprob: -17.250112533569336
    6. 'uhe' → logprob: -17.375112533569336
    7. '```' → logprob: -18.000112533569336
    8. 'uck' → logprob: -18.375112533569336
    9. 'n' → logprob: -18.500112533569336
    10. 'uce' → logprob: -18.750112533569336

Token 360: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.372294698550832e-06
    2. '.' → logprob: -11.625009536743164
    3. ' .' → logprob: -15.000009536743164
    4. 'add' → logprob: -17.125009536743164
    5. '.ad' → logprob: -18.625009536743164
    6. '>.' → logprob: -20.250009536743164
    7. '\.' → logprob: -20.250009536743164
    8. '​.' → logprob: -20.375009536743164
    9. '.
' → logprob: -20.500009536743164
    10. '   ' → logprob: -20.500009536743164

Token 361: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.1472419600977446e-06
    2. '(v' → logprob: -14.125000953674316
    3. '(' → logprob: -15.250000953674316
    4. 'u' → logprob: -16.250001907348633
    5. '(s' → logprob: -19.125001907348633
    6. '[u' → logprob: -20.250001907348633
    7. '(
' → logprob: -20.250001907348633
    8. '<|end|>' → logprob: -20.250001907348633
    9. '<u' → logprob: -20.500001907348633
    10. '(ui' → logprob: -20.500001907348633

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.407366916188039e-05
    2. ',v' → logprob: -9.875054359436035
    3. 'v' → logprob: -13.000054359436035
    4. ' ,' → logprob: -15.375054359436035
    5. '(v' → logprob: -17.00005340576172
    6. ',
' → logprob: -17.37505340576172
    7. ' v' → logprob: -17.75005340576172
    8. ')' → logprob: -19.75005340576172
    9. '   ' → logprob: -20.37505340576172
    10. '[v' → logprob: -20.62505340576172

Token 363: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00038014890742488205
    2. ' v' → logprob: -7.875380039215088
    3. '	v' → logprob: -16.62537956237793
    4. ',v' → logprob: -19.37537956237793
    5. ')v' → logprob: -19.50037956237793
    6. '
' → logprob: -20.37537956237793
    7. ' ' → logprob: -20.62537956237793
    8. '   ' → logprob: -20.87537956237793
    9. '(v' → logprob: -20.87537956237793
    10. 't' → logprob: -21.25037956237793

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010568885772954673
    2. ',b' → logprob: -9.250105857849121
    3. 'b' → logprob: -11.750105857849121
    4. ' ,' → logprob: -13.500105857849121
    5. ',
' → logprob: -15.875105857849121
    6. ' b' → logprob: -16.250104904174805
    7. ',v' → logprob: -16.875104904174805
    8. '(b' → logprob: -17.500104904174805
    9. ')' → logprob: -17.500104904174805
    10. '),' → logprob: -18.250104904174805

Token 365: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006266565760597587
    2. ' b' → logprob: -7.375626564025879
    3. '	b' → logprob: -17.375627517700195
    4. '   ' → logprob: -17.875627517700195
    5. ')b' → logprob: -18.250627517700195
    6. '_b' → logprob: -19.750627517700195
    7. ' ' → logprob: -19.750627517700195
    8. 'B' → logprob: -19.750627517700195
    9. '(b' → logprob: -20.625627517700195
    10. '    ' → logprob: -21.375627517700195

Token 366: ');' (ID: 2245)
  Prédit: ');'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ');' → logprob: -0.05165005475282669
    2. ')
' → logprob: -3.051650047302246
    3. ')' → logprob: -5.801650047302246
    4. '   ' → logprob: -10.801650047302246
    5. ');
' → logprob: -11.426650047302246
    6. '),' → logprob: -13.051650047302246
    7. ' );' → logprob: -14.176650047302246
    8. ';' → logprob: -14.676650047302246
    9. ')
' → logprob: -14.676650047302246
    10. ').' → logprob: -15.551650047302246

Token 367: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.0019291093340143561
    2. ' sn' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.87692928314209
    4. '(sn' → logprob: -16.376928329467773
    5. 's' → logprob: -18.001928329467773
    6. '_sn' → logprob: -18.001928329467773
    7. 'snippet' → logprob: -18.876928329467773
    8. ' ' → logprob: -19.001928329467773
    9. '.sn' → logprob: -19.001928329467773
    10. 'sk' → logprob: -19.626928329467773

Token 368: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -1.1398757123970427e-05
    2. 'u' → logprob: -11.625011444091797
    3. 'uk' → logprob: -13.000011444091797
    4. ' uke' → logprob: -16.125011444091797
    5. '```' → logprob: -18.125011444091797
    6. 'n' → logprob: -18.500011444091797
    7. 'ake' → logprob: -18.500011444091797
    8. 'oke' → logprob: -19.125011444091797
    9. 'ude' → logprob: -19.625011444091797
    10. 'ukke' → logprob: -19.625011444091797

Token 369: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00011033779446734115
    2. 'add' → logprob: -9.125110626220703
    3. '.' → logprob: -13.750110626220703
    4. ')add' → logprob: -15.750110626220703
    5. '	add' → logprob: -16.375110626220703
    6. ' add' → logprob: -17.000110626220703
    7. '_add' → logprob: -17.750110626220703
    8. '.Add' → logprob: -18.625110626220703
    9. '<|end|>' → logprob: -19.625110626220703
    10. ').' → logprob: -20.000110626220703

Token 370: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.512236498361744e-07
    2. 'v' → logprob: -15.125000953674316
    3. '(' → logprob: -15.500000953674316
    4. ' (' → logprob: -19.625
    5. '[v' → logprob: -20.875
    6. '(
' → logprob: -21.75
    7. '(V' → logprob: -22.75
    8. '(b' → logprob: -23.125
    9. '	v' → logprob: -23.375
    10. '   ' → logprob: -23.5

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9743012671824545e-05
    2. ',u' → logprob: -11.375020027160645
    3. ',v' → logprob: -12.250020027160645
    4. 'u' → logprob: -13.375020027160645
    5. ' ,' → logprob: -14.125020027160645
    6. 'v' → logprob: -14.875020027160645
    7. ',
' → logprob: -15.000020027160645
    8. ')' → logprob: -15.750020027160645
    9. '<|end|>' → logprob: -16.375019073486328
    10. '(u' → logprob: -17.000019073486328

Token 372: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002584697213023901
    2. ' u' → logprob: -6.002584934234619
    3. 'v' → logprob: -9.127584457397461
    4. ' v' → logprob: -15.627584457397461
    5. '	u' → logprob: -16.25258445739746
    6. '(u' → logprob: -17.00258445739746
    7. 's' → logprob: -18.12758445739746
    8. '<|end|>' → logprob: -18.25258445739746
    9. ' ' → logprob: -18.37758445739746
    10. ')' → logprob: -18.50258445739746

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.05499910004437e-05
    2. ',b' → logprob: -9.500090599060059
    3. 'b' → logprob: -11.250090599060059
    4. ' ,' → logprob: -13.250090599060059
    5. ' b' → logprob: -14.125090599060059
    6. ',
' → logprob: -16.250089645385742
    7. '	b' → logprob: -17.000089645385742
    8. '   ' → logprob: -17.250089645385742
    9. ')' → logprob: -18.125089645385742
    10. '(b' → logprob: -18.750089645385742

Token 374: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02324547804892063
    2. ' b' → logprob: -3.7732455730438232
    3. ')b' → logprob: -17.898244857788086
    4. '	b' → logprob: -18.523244857788086
    5. 'B' → logprob: -18.773244857788086
    6. ' ' → logprob: -19.023244857788086
    7. '<|end|>' → logprob: -19.648244857788086
    8. ')' → logprob: -20.273244857788086
    9. '   ' → logprob: -20.773244857788086
    10. '(b' → logprob: -21.148244857788086

Token 375: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ')
' → logprob: -12.250004768371582
    3. ' )' → logprob: -16.7500057220459
    4. ')

' → logprob: -17.3750057220459
    5. '))' → logprob: -18.3750057220459
    6. ')n' → logprob: -19.5000057220459
    7. '）' → logprob: -19.6250057220459
    8. ')}' → logprob: -19.6250057220459
    9. ')
' → logprob: -19.7500057220459
    10. '),' → logprob: -19.7500057220459

Token 376: 's' (ID: 82)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02822236903011799
    2. 'd' → logprob: -4.778222560882568
    3. 'yen' → logprob: -4.903222560882568
    4. 'ans' → logprob: -5.528222560882568
    5. 'dy' → logprob: -6.153222560882568
    6. 'cost' → logprob: -6.403222560882568
    7. 'dp' → logprob: -7.403222560882568
    8. 'yd' → logprob: -7.528222560882568
    9. 'ys' → logprob: -7.528222560882568
    10. 'ds' → logprob: -7.653222560882568

Token 377: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -1.2940560579299927
    2. 't' → logprob: -1.5440560579299927
    3. '-=' → logprob: -1.6690560579299927
    4. ',' → logprob: -2.044055938720703
    5. '_dist' → logprob: -2.419055938720703
    6. '-' → logprob: -3.169055938720703
    7. ' =' → logprob: -3.419055938720703
    8. 'dist' → logprob: -5.044055938720703
    9. '=' → logprob: -5.044055938720703
    10. 'hort' → logprob: -5.169055938720703

Token 378: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -19.5000057220459
    4. '
' → logprob: -20.3750057220459
    5. '   ' → logprob: -20.6250057220459
    6. '１' → logprob: -20.6250057220459
    7. '0' → logprob: -20.6250057220459
    8. '```' → logprob: -20.8750057220459
    9. '۱' → logprob: -22.2500057220459
    10. '১' → logprob: -23.3125057220459

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '１' → logprob: -20.875
    4. '0' → logprob: -20.875
    5. '<|end|>' → logprob: -20.875
    6. '```' → logprob: -21.875
    7. '   ' → logprob: -22.3125
    8. '۱' → logprob: -22.4375
    9. '
' → logprob: -23.4375
    10. '১' → logprob: -23.4375

Token 380: ';' (ID: 26)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -6.2729995988775045e-06
    2. 'dist' → logprob: -12.000006675720215
    3. 'distance' → logprob: -19.1250057220459
    4. ' t' → logprob: -19.2500057220459
    5. 'd' → logprob: -20.3750057220459
    6. '	t' → logprob: -21.5000057220459
    7. '   ' → logprob: -21.6250057220459
    8. 'result' → logprob: -22.0000057220459
    9. '`t' → logprob: -22.5000057220459
    10. 'e' → logprob: -22.6250057220459

Token 381: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.5776860184123507e-06
    2. ' t' → logprob: -12.87500286102295
    3. '	t' → logprob: -19.625001907348633
    4. '_t' → logprob: -21.875001907348633
    5. 'T' → logprob: -23.000001907348633
    6. '`t' → logprob: -23.000001907348633
    7. '   ' → logprob: -23.250001907348633
    8. ' ' → logprob: -23.375001907348633
    9. '<t' → logprob: -23.500001907348633
    10. 's' → logprob: -24.375001907348633

Token 382: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.20193977653980255
    2. ' -=' → logprob: -1.7019398212432861
    3. '-' → logprob: -7.576939582824707
    4. '=' → logprob: -11.201939582824707
    5. ' ' → logprob: -14.576939582824707
    6. ' -' → logprob: -16.951940536499023
    7. '>' → logprob: -18.451940536499023
    8. ' =' → logprob: -18.451940536499023
    9. '+=' → logprob: -18.826940536499023
    10. ')' → logprob: -19.076940536499023

Token 383: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009117019944824278
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.875911712646484
    4. '  ' → logprob: -17.625911712646484
    5. '-' → logprob: -18.000911712646484
    6. '0' → logprob: -18.500911712646484
    7. '<|end|>' → logprob: -18.750911712646484
    8. '１' → logprob: -19.313411712646484
    9. '```' → logprob: -19.563411712646484
    10. '
' → logprob: -20.000911712646484

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.687503814697266
    4. '   ' → logprob: -18.750003814697266
    5. 't' → logprob: -18.750003814697266
    6. '１' → logprob: -19.062503814697266
    7. '<|end|>' → logprob: -19.312503814697266
    8. '۱' → logprob: -19.437503814697266
    9. '
' → logprob: -19.500003814697266
    10. '0' → logprob: -19.750003814697266

Token 385: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04343016445636749
    2. 'yen' → logprob: -3.7934300899505615
    3. 'd' → logprob: -4.293430328369141
    4. 'dy' → logprob: -5.918430328369141
    5. 'yd' → logprob: -7.043430328369141
    6. 'cost' → logprob: -7.043430328369141
    7. 'dp' → logprob: -7.668430328369141
    8. 'dis' → logprob: -8.04343032836914
    9. 'ds' → logprob: -8.29343032836914
    10. 'ys' → logprob: -9.54343032836914

Token 386: 'yen' (ID: 31069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.028997834771871567
    2. 'yen' → logprob: -4.278997898101807
    3. 'd' → logprob: -4.653997898101807
    4. 'dy' → logprob: -6.278997898101807
    5. 'dp' → logprob: -7.403997898101807
    6. 'dis' → logprob: -7.528997898101807
    7. 'ds' → logprob: -7.528997898101807
    8. 'cost' → logprob: -7.903997898101807
    9. 'yd' → logprob: -8.028997421264648
    10. 'distance' → logprob: -8.653997421264648

Token 387: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.1407098025083542
    2. 'dist' → logprob: -2.14070987701416
    3. '_d' → logprob: -4.89070987701416
    4. 'd' → logprob: -5.14070987701416
    5. '_cost' → logprob: -9.01570987701416
    6. ' =' → logprob: -10.51570987701416
    7. '_distance' → logprob: -10.76570987701416
    8. '_dis' → logprob: -11.14070987701416
    9. '_to' → logprob: -11.26570987701416
    10. '_' → logprob: -11.26570987701416

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026384131982922554
    2. '=' → logprob: -3.651384115219116
    3. 's' → logprob: -9.651384353637695
    4. '_' → logprob: -11.401384353637695
    5. ',' → logprob: -12.776384353637695
    6. ' ' → logprob: -13.151384353637695
    7. '_from' → logprob: -14.526384353637695
    8. '_s' → logprob: -14.776384353637695
    9. '=s' → logprob: -15.151384353637695
    10. 'from' → logprob: -15.151384353637695

Token 389: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.0004957250785082579
    2. ' yen' → logprob: -7.625495910644531
    3. 'y' → logprob: -13.250495910644531
    4. 'ye' → logprob: -13.625495910644531
    5. ' ' → logprob: -13.875495910644531
    6. '   ' → logprob: -14.000495910644531
    7. 'yer' → logprob: -14.250495910644531
    8. '  ' → logprob: -15.000495910644531
    9. 'yan' → logprob: -15.000495910644531
    10. 'yor' → logprob: -15.000495910644531

Token 390: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -1.688212614681106e-05
    2. '.s' → logprob: -12.375017166137695
    3. '.shortcuts' → logprob: -12.500017166137695
    4. ' .' → logprob: -12.625017166137695
    5. '.long' → logprob: -12.750017166137695
    6. 'short' → logprob: -13.875017166137695
    7. '.' → logprob: -14.125017166137695
    8. '.closest' → logprob: -15.500017166137695
    9. '.small' → logprob: -15.625017166137695
    10. '.Short' → logprob: -15.875017166137695

Token 391: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0009120595059357584
    2. '_path' → logprob: -7.000912189483643
    3. 'path' → logprob: -14.500911712646484
    4. '_est' → logprob: -17.125911712646484
    5. 'e' → logprob: -17.250911712646484
    6. 'es' → logprob: -17.625911712646484
    7. '```' → logprob: -17.875911712646484
    8. 'st' → logprob: -18.875911712646484
    9. 'ests' → logprob: -19.000911712646484
    10. 'estr' → logprob: -19.125911712646484

Token 392: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -7.896309739408025e-07
    2. 'path' → logprob: -14.125000953674316
    3. '_' → logprob: -17.625
    4. '_p' → logprob: -19.25
    5. '```' → logprob: -19.25
    6. '_distance' → logprob: -19.625
    7. ' path' → logprob: -20.0
    8. '_pat' → logprob: -20.25
    9. '__' → logprob: -20.625
    10. '_point' → logprob: -20.625

Token 393: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.6286106983898208e-05
    2. 's' → logprob: -11.250016212463379
    3. '(' → logprob: -13.250016212463379
    4. '(t' → logprob: -13.500016212463379
    5. 't' → logprob: -17.375017166137695
    6. '(n' → logprob: -17.875017166137695
    7. '(start' → logprob: -18.875017166137695
    8. '()' → logprob: -19.625017166137695
    9. '(S' → logprob: -20.125017166137695
    10. '((' → logprob: -20.625017166137695

Token 394: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.003182467306032777
    2. ')' → logprob: -5.753182411193848
    3. 'sn' → logprob: -13.253182411193848
    4. ' )
' → logprob: -13.378182411193848
    5. ')
' → logprob: -13.628182411193848
    6. 't' → logprob: -16.253183364868164
    7. ')

' → logprob: -16.253183364868164
    8. 's' → logprob: -16.878183364868164
    9. '
' → logprob: -17.753183364868164
    10. 'y' → logprob: -18.003183364868164

Token 395: 'sn' (ID: 22095)
  Prédit: 'sn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -4.320199877838604e-07
    2. 's' → logprob: -15.5
    3. ' sn' → logprob: -16.375
    4. 'sk' → logprob: -18.625
    5. '_sn' → logprob: -19.125
    6. '```' → logprob: -19.125
    7. 't' → logprob: -19.25
    8. 'sm' → logprob: -19.75
    9. 'snippet' → logprob: -20.0
    10. 'snake' → logprob: -20.125

Token 396: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -5.9795445849886164e-05
    2. 'u' → logprob: -9.875060081481934
    3. 'uk' → logprob: -12.375060081481934
    4. '```' → logprob: -14.125060081481934
    5. 's' → logprob: -14.250060081481934
    6. '_' → logprob: -14.375060081481934
    7. '_sn' → logprob: -14.750060081481934
    8. '_s' → logprob: -15.625060081481934
    9. 'une' → logprob: -15.875060081481934
    10. 'ude' → logprob: -16.000059127807617

Token 397: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.7432603272027336e-06
    2. 'dist' → logprob: -14.000001907348633
    3. '_' → logprob: -14.750001907348633
    4. '.dist' → logprob: -15.500001907348633
    5. '._' → logprob: -16.500001907348633
    6. '_cost' → logprob: -16.625001907348633
    7. '_DIST' → logprob: -18.000001907348633
    8. '_d' → logprob: -18.000001907348633
    9. '_diff' → logprob: -18.000001907348633
    10. '```' → logprob: -18.500001907348633

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. '＝' → logprob: -15.193147659301758
    4. '.=' → logprob: -18.443147659301758
    5. '=s' → logprob: -18.693147659301758
    6. ' ' → logprob: -18.818147659301758
    7. '[' → logprob: -19.193147659301758
    8. 's' → logprob: -19.443147659301758
    9. '=}' → logprob: -19.693147659301758
    10. '[:]' → logprob: -20.068147659301758

Token 399: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.004630315117537975
    2. ' sn' → logprob: -5.379630088806152
    3. 's' → logprob: -12.129630088806152
    4. 'yen' → logprob: -13.379630088806152
    5. '(sn' → logprob: -14.504630088806152
    6. ' yen' → logprob: -14.629630088806152
    7. 'sk' → logprob: -15.129630088806152
    8. 't' → logprob: -15.129630088806152
    9. 'yn' → logprob: -15.629630088806152
    10. ' ' → logprob: -15.629630088806152

Token 400: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -4.429896944202483e-05
    2. 'u' → logprob: -10.375043869018555
    3. 'uk' → logprob: -11.875043869018555
    4. 'ake' → logprob: -12.875043869018555
    5. 'oke' → logprob: -13.500043869018555
    6. '```' → logprob: -14.625043869018555
    7. ' uke' → logprob: -14.750043869018555
    8. 's' → logprob: -15.500043869018555
    9. 'ule' → logprob: -15.750043869018555
    10. 'uket' → logprob: -16.125043869018555

Token 401: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -1.3663626305060461e-05
    2. ' .' → logprob: -11.75001335144043
    3. '.' → logprob: -12.37501335144043
    4. 'short' → logprob: -14.62501335144043
    5. '.shortcuts' → logprob: -14.62501335144043
    6. '.long' → logprob: -15.25001335144043
    7. '.s' → logprob: -16.12501335144043
    8. '	short' → logprob: -17.12501335144043
    9. '.sh' → logprob: -17.50001335144043
    10. '.closest' → logprob: -18.50001335144043

Token 402: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -4.513339445111342e-05
    2. 'test' → logprob: -10.875044822692871
    3. 't' → logprob: -11.000044822692871
    4. '_path' → logprob: -11.625044822692871
    5. 'st' → logprob: -15.250044822692871
    6. 'path' → logprob: -16.000045776367188
    7. 'e' → logprob: -16.625045776367188
    8. '_est' → logprob: -17.625045776367188
    9. 'ест' → logprob: -17.750045776367188
    10. 'et' → logprob: -18.000045776367188

Token 403: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0002973280206788331
    2. 'path' → logprob: -8.125297546386719
    3. '-path' → logprob: -15.125297546386719
    4. 't' → logprob: -15.625297546386719
    5. ' path' → logprob: -15.750297546386719
    6. '"path' → logprob: -16.12529754638672
    7. 'Path' → logprob: -16.25029754638672
    8. '	path' → logprob: -17.12529754638672
    9. '_PATH' → logprob: -17.25029754638672
    10. '路径' → logprob: -17.37529754638672

Token 404: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -2.696889623621246e-06
    2. 't' → logprob: -13.12500286102295
    3. '(' → logprob: -14.37500286102295
    4. '(s' → logprob: -17.500001907348633
    5. '	t' → logprob: -19.375001907348633
    6. '(
' → logprob: -20.500001907348633
    7. ' t' → logprob: -20.750001907348633
    8. ' (' → logprob: -21.500001907348633
    9. '<t' → logprob: -21.500001907348633
    10. '(T' → logprob: -22.125001907348633

Token 405: ')

' (ID: 1029)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.14313344657421112
    2. 'answer' → logprob: -2.1431334018707275
    3. 'res' → logprob: -5.268133640289307
    4. 'result' → logprob: -5.768133640289307
    5. 'answers' → logprob: -6.018133640289307
    6. 'total' → logprob: -6.143133640289307
    7. ' ans' → logprob: -6.893133640289307
    8. 'acc' → logprob: -7.768133640289307
    9. 'sum' → logprob: -8.268133163452148
    10. '
' → logprob: -8.268133163452148

Token 406: 'answer' (ID: 17021)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16101261973381042
    2. 'answer' → logprob: -2.286012649536133
    3. 'res' → logprob: -3.536012649536133
    4. 'result' → logprob: -5.286012649536133
    5. 'acc' → logprob: -5.661012649536133
    6. 'total' → logprob: -5.661012649536133
    7. 'answers' → logprob: -6.161012649536133
    8. 'dp' → logprob: -6.661012649536133
    9. 'cum' → logprob: -7.661012649536133
    10. 'min' → logprob: -8.286012649536133

Token 407: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04900335147976875
    2. '=' → logprob: -3.0490033626556396
    3. '_' → logprob: -8.299003601074219
    4. 's' → logprob: -8.924003601074219
    5. ' ' → logprob: -11.549003601074219
    6. ',' → logprob: -11.924003601074219
    7. '[' → logprob: -12.424003601074219
    8. '[:]' → logprob: -12.549003601074219
    9. '_=' → logprob: -13.174003601074219
    10. '.' → logprob: -13.299003601074219

Token 408: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08897076547145844
    2. '0' → logprob: -3.33897066116333
    3. '[min' → logprob: -3.96397066116333
    4. '[max' → logprob: -4.33897066116333
    5. '[]' → logprob: -5.08897066116333
    6. '[y' → logprob: -5.33897066116333
    7. '[int' → logprob: -5.96397066116333
    8. 'float' → logprob: -6.58897066116333
    9. '[len' → logprob: -7.21397066116333
    10. '[x' → logprob: -7.58897066116333

Token 409: 'min' (ID: 1493)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3755365312099457
    2. 'total' → logprob: -1.750536561012268
    3. 'INF' → logprob: -2.2505364418029785
    4. 'acc' → logprob: -4.6255364418029785
    5. 'min' → logprob: -4.7505364418029785
    6. 'current' → logprob: -5.1255364418029785
    7. 'max' → logprob: -5.7505364418029785
    8. 'inf' → logprob: -6.0005364418029785
    9. 'sum' → logprob: -6.6255364418029785
    10. 'curr' → logprob: -7.1255364418029785

Token 410: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.13115516304969788
    2. '_' → logprob: -2.506155252456665
    3. '_sum' → logprob: -4.506155014038086
    4. '_total' → logprob: -4.756155014038086
    5. '_dist' → logprob: -4.756155014038086
    6. '_val' → logprob: -5.006155014038086
    7. 'cost' → logprob: -6.506155014038086
    8. '_price' → logprob: -6.756155014038086
    9. '_value' → logprob: -7.256155014038086
    10. 'sum' → logprob: -7.506155014038086

Token 411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014150768518448
    2. '=' → logprob: -1.7014150619506836
    3. 's' → logprob: -14.201415061950684
    4. ' ' → logprob: -14.326415061950684
    5. ',' → logprob: -15.576415061950684
    6. '＝' → logprob: -15.701415061950684
    7. '=float' → logprob: -17.326416015625
    8. '_' → logprob: -17.576416015625
    9. '=int' → logprob: -17.826416015625
    10. 'cost' → logprob: -17.951416015625

Token 412: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005192843731492758
    2. 'yen' → logprob: -5.755192756652832
    3. '10' → logprob: -6.380192756652832
    4. ' float' → logprob: -8.255192756652832
    5. '1' → logprob: -11.505192756652832
    6. ' yen' → logprob: -11.505192756652832
    7. '0' → logprob: -11.880192756652832
    8. 'y' → logprob: -12.130192756652832
    9. '100' → logprob: -12.505192756652832
    10. ' ' → logprob: -12.755192756652832

Token 413: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003433296224102378
    2. ''in' → logprob: -8.000343322753906
    3. 'inf' → logprob: -13.250343322753906
    4. ''s' → logprob: -13.500343322753906
    5. '['' → logprob: -13.875343322753906
    6. '("' → logprob: -14.250343322753906
    7. ''inc' → logprob: -14.375343322753906
    8. ''' → logprob: -14.500343322753906
    9. ''en' → logprob: -16.250343322753906
    10. ''int' → logprob: -16.250343322753906

Token 414: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.0280383548888494e-06
    2. ''' → logprob: -14.000000953674316
    3. '1' → logprob: -17.000001907348633
    4. '"' → logprob: -17.875001907348633
    5. ''in' → logprob: -17.875001907348633
    6. '.inf' → logprob: -18.250001907348633
    7. '-inf' → logprob: -18.750001907348633
    8. 'INF' → logprob: -19.000001907348633
    9. '_inf' → logprob: -19.250001907348633
    10. '10' → logprob: -19.250001907348633

Token 415: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4301622211933136
    2. ')' → logprob: -1.0551621913909912
    3. ' )
' → logprob: -6.93016242980957
    4. '
' → logprob: -8.05516242980957
    5. ' )' → logprob: -9.30516242980957
    6. ')
' → logprob: -10.68016242980957
    7. ',' → logprob: -10.68016242980957
    8. ')

' → logprob: -12.05516242980957
    9. '-' → logprob: -12.18016242980957
    10. '+' → logprob: -12.55516242980957

Token 416: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.8444881536415778e-05
    2. ' for' → logprob: -10.500028610229492
    3. 'total' → logprob: -14.875028610229492
    4. 'answer' → logprob: -15.625028610229492
    5. 'cost' → logprob: -16.250028610229492
    6. '	for' → logprob: -16.375028610229492
    7. 'result' → logprob: -17.500028610229492
    8. 'ans' → logprob: -17.750028610229492
    9. 'import' → logprob: -18.125028610229492
    10. 'print' → logprob: -18.500028610229492

Token 417: ' y' (ID: 342)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001387009397149086
    2. ' i' → logprob: -9.000138282775879
    3. 'x' → logprob: -11.625138282775879
    4. 'u' → logprob: -13.250138282775879
    5. '_i' → logprob: -13.500138282775879
    6. 'cost' → logprob: -13.625138282775879
    7. 'k' → logprob: -14.875138282775879
    8. 'v' → logprob: -15.000138282775879
    9. 'idx' → logprob: -15.250138282775879
    10. 'd' → logprob: -15.625138282775879

Token 418: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3049828112125397
    2. 'in' → logprob: -1.6799827814102173
    3. ',' → logprob: -2.679982900619507
    4. ' i' → logprob: -5.429982662200928
    5. 'i' → logprob: -5.929982662200928
    6. ',i' → logprob: -7.804982662200928
    7. 'ield' → logprob: -9.554983139038086
    8. ',_' → logprob: -9.679983139038086
    9. '_' → logprob: -9.804983139038086
    10. ' ,' → logprob: -10.179983139038086

Token 419: ' s' (ID: 265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5055949687957764
    2. 'sn' → logprob: -1.6305949687957764
    3. 'x' → logprob: -1.8805949687957764
    4. 'ss' → logprob: -2.0055949687957764
    5. 'z' → logprob: -2.1305949687957764
    6. 's' → logprob: -2.3805949687957764
    7. 'ns' → logprob: -4.5055952072143555
    8. 'i' → logprob: -4.7555952072143555
    9. 'p' → logprob: -5.2555952072143555
    10. 'd' → logprob: -5.3805952072143555

Token 420: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017520057037472725
    2. 'n' → logprob: -4.642519950866699
    3. ',s' → logprob: -5.517519950866699
    4. ',_' → logprob: -7.142519950866699
    5. '_dist' → logprob: -7.517519950866699
    6. 'd' → logprob: -7.767519950866699
    7. '_,' → logprob: -8.2675199508667
    8. '_cost' → logprob: -8.7675199508667
    9. ',n' → logprob: -8.8925199508667
    10. 's' → logprob: -9.0175199508667

Token 421: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.5892487168312073
    2. 'zip' → logprob: -0.8392487168312073
    3. 'range' → logprob: -4.4642486572265625
    4. 're' → logprob: -7.3392486572265625
    5. ' range' → logprob: -7.3392486572265625
    6. 'enumer' → logprob: -8.339248657226562
    7. ' reversed' → logprob: -9.339248657226562
    8. '(zip' → logprob: -10.089248657226562
    9. ' ' → logprob: -11.089248657226562
    10. '.zip' → logprob: -11.964248657226562

Token 422: '(re' (ID: 8178)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00687119085341692
    2. '(re' → logprob: -5.006871223449707
    3. '(zip' → logprob: -9.256871223449707
    4. '(' → logprob: -10.506871223449707
    5. '(range' → logprob: -10.631871223449707
    6. '(en' → logprob: -12.506871223449707
    7. 're' → logprob: -12.756871223449707
    8. '(reverse' → logprob: -14.506871223449707
    9. ' (' → logprob: -14.881871223449707
    10. 'y' → logprob: -15.381871223449707

Token 423: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.19001540541648865
    2. 'yen' → logprob: -2.0650153160095215
    3. 'n' → logprob: -3.9400153160095215
    4. 'ny' → logprob: -4.8150153160095215
    5. 'verse' → logprob: -5.0650153160095215
    6. 'yn' → logprob: -5.5650153160095215
    7. 'ven' → logprob: -5.6900153160095215
    8. ' yen' → logprob: -7.3150153160095215
    9. 'range' → logprob: -7.6900153160095215
    10. '   ' → logprob: -7.6900153160095215

Token 424: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -1.0802738870552275e-05
    2. '(' → logprob: -12.00001049041748
    3. '(range' → logprob: -12.87501049041748
    4. ' (' → logprob: -14.75001049041748
    5. ',y' → logprob: -15.12501049041748
    6. ')' → logprob: -15.25001049041748
    7. 'yen' → logprob: -15.62501049041748
    8. ' yen' → logprob: -15.75001049041748
    9. ' ' → logprob: -15.75001049041748
    10. ')(' → logprob: -15.87501049041748

Token 425: 'en' (ID: 262)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010080341249704361
    2. '_dist' → logprob: -4.760080337524414
    3. 'en' → logprob: -6.635080337524414
    4. 'in' → logprob: -10.010080337524414
    5. 'dist' → logprob: -10.260080337524414
    6. 'm' → logprob: -10.510080337524414
    7. 'f' → logprob: -11.885080337524414
    8. 'an' → logprob: -12.385080337524414
    9. '_n' → logprob: -12.760080337524414
    10. 'nd' → logprob: -13.010080337524414

Token 426: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.652451464906335e-05
    2. 'dist' → logprob: -11.125016212463379
    3. '.dist' → logprob: -14.750016212463379
    4. '),' → logprob: -15.500016212463379
    5. ',' → logprob: -15.750016212463379
    6. '_DIST' → logprob: -16.000017166137695
    7. ')' → logprob: -16.125017166137695
    8. '
' → logprob: -16.375017166137695
    9. '	dist' → logprob: -16.500017166137695
    10. '```' → logprob: -16.625017166137695

Token 427: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011223006062209606
    2. ',re' → logprob: -4.886222839355469
    3. ' ,' → logprob: -6.136222839355469
    4. '),' → logprob: -6.636222839355469
    5. '   ' → logprob: -9.011222839355469
    6. 're' → logprob: -12.886222839355469
    7. '       ' → logprob: -13.011222839355469
    8. '[::-' → logprob: -13.261222839355469
    9. '  ' → logprob: -13.511222839355469
    10. ' ),' → logprob: -13.511222839355469

Token 428: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0004558175278361887
    2. ' reversed' → logprob: -8.250455856323242
    3. '   ' → logprob: -8.625455856323242
    4. '	re' → logprob: -12.125455856323242
    5. '       ' → logprob: -13.125455856323242
    6. ' ' → logprob: -13.625455856323242
    7. '  ' → logprob: -13.750455856323242
    8. '           ' → logprob: -13.750455856323242
    9. '    ' → logprob: -14.125455856323242
    10. 'reverse' → logprob: -14.250455856323242

Token 429: '(sn' (ID: 158742)
  Prédit: '(sn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sn' → logprob: -0.07895798236131668
    2. 'sn' → logprob: -2.578958034515381
    3. ' sn' → logprob: -10.453957557678223
    4. '_sn' → logprob: -11.703957557678223
    5. '(' → logprob: -11.953957557678223
    6. '
' → logprob: -12.078957557678223
    7. '(s' → logprob: -12.453957557678223
    8. '(
' → logprob: -12.953957557678223
    9. 'sns' → logprob: -13.078957557678223
    10. '   ' → logprob: -13.203957557678223

Token 430: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -4.961759259458631e-06
    2. 'u' → logprob: -13.250004768371582
    3. 'uk' → logprob: -13.375004768371582
    4. 'n' → logprob: -14.500004768371582
    5. '_' → logprob: -15.500004768371582
    6. '_dist' → logprob: -15.625004768371582
    7. 'ike' → logprob: -16.2500057220459
    8. 'oke' → logprob: -16.6250057220459
    9. '
' → logprob: -16.7500057220459
    10. ' uke' → logprob: -16.8750057220459

Token 431: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -3.292907877039397e-06
    2. 'dist' → logprob: -12.75000286102295
    3. ')' → logprob: -17.750003814697266
    4. '_' → logprob: -17.875003814697266
    5. '	dist' → logprob: -18.000003814697266
    6. 't' → logprob: -18.125003814697266
    7. '_cost' → logprob: -18.250003814697266
    8. '_dest' → logprob: -18.375003814697266
    9. ' _' → logprob: -18.750003814697266
    10. '_d' → logprob: -18.750003814697266

Token 432: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38700470328330994
    2. '):
' → logprob: -1.1370047330856323
    3. '):
' → logprob: -9.262004852294922
    4. ')' → logprob: -10.387004852294922
    5. '   ' → logprob: -12.512004852294922
    6. ' ):' → logprob: -13.387004852294922
    7. ' ):
' → logprob: -14.012004852294922
    8. ')：' → logprob: -14.762004852294922
    9. ')):' → logprob: -15.137004852294922
    10. ' ' → logprob: -15.137004852294922

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.320199877838604e-07
    2. '       ' → logprob: -16.125
    3. '```' → logprob: -17.0
    4. '	min' → logprob: -17.25
    5. '   ' → logprob: -17.25
    6. ' min' → logprob: -17.5
    7. '    
' → logprob: -17.625
    8. '  ' → logprob: -17.875
    9. 'min' → logprob: -18.125
    10. '    ' → logprob: -18.5

Token 434: ' min' (ID: 1349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007650403305888176
    2. 'min' (adapté à ' min') → logprob: -5.257650375366211
    3. ' min' → logprob: -6.257650375366211
    4. 'cost' → logprob: -8.507650375366211
    5. ' cost' → logprob: -8.757650375366211
    6. ' current' → logprob: -10.257650375366211
    7. 'current' → logprob: -10.257650375366211
    8. ' total' → logprob: -10.757650375366211
    9. 'total' → logprob: -11.132650375366211
    10. ' if' → logprob: -11.382650375366211

Token 435: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -12.875004768371582
    3. 'cost' → logprob: -13.125004768371582
    4. '_min' → logprob: -16.0000057220459
    5. '_cos' → logprob: -17.6250057220459
    6. '   ' → logprob: -18.1250057220459
    7. '_COST' → logprob: -18.6250057220459
    8. 'Cost' → logprob: -18.7500057220459
    9. '_c' → logprob: -19.1250057220459
    10. ' cost' → logprob: -19.2500057220459

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143088698387146
    2. '=' → logprob: -1.7014309167861938
    3. '=min' → logprob: -11.451431274414062
    4. '   ' → logprob: -11.951431274414062
    5. 'min' → logprob: -15.201431274414062
    6. ' ' → logprob: -16.576431274414062
    7. '＝' → logprob: -17.076431274414062
    8. '  ' → logprob: -17.201431274414062
    9. '    ' → logprob: -17.576431274414062
    10. ' min' → logprob: -18.201431274414062

Token 437: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0005530327325686812
    2. ' min' → logprob: -7.500553131103516
    3. 'max' → logprob: -18.625553131103516
    4. '	min' → logprob: -18.625553131103516
    5. '(min' → logprob: -19.000553131103516
    6. '[min' → logprob: -20.375553131103516
    7. '=min' → logprob: -20.500553131103516
    8. ' ' → logprob: -20.500553131103516
    9. '
' → logprob: -21.125553131103516
    10. '   ' → logprob: -21.250553131103516

Token 438: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -7.874882430769503e-05
    2. '(' → logprob: -10.500079154968262
    3. '(s' → logprob: -10.500079154968262
    4. '(y' → logprob: -11.375079154968262
    5. 'min' → logprob: -11.625079154968262
    6. '(m' → logprob: -13.000079154968262
    7. '(max' → logprob: -15.375079154968262
    8. ' min' → logprob: -15.500079154968262
    9. '(
' → logprob: -15.750079154968262
    10. '(x' → logprob: -16.500078201293945

Token 439: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -9.29340603761375e-05
    2. 'cost' → logprob: -9.500092506408691
    3. '(min' → logprob: -11.125092506408691
    4. '_' → logprob: -13.625092506408691
    5. 'Cost' → logprob: -14.500092506408691
    6. '_COST' → logprob: -15.000092506408691
    7. '(' → logprob: -15.125092506408691
    8. 'min' → logprob: -15.250092506408691
    9. ' cost' → logprob: -15.375092506408691
    10. ')' → logprob: -15.875092506408691

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000375380739569664
    2. ',min' → logprob: -8.000375747680664
    3. ',y' → logprob: -10.750375747680664
    4. ' ,' → logprob: -11.125375747680664
    5. ',s' → logprob: -13.625375747680664
    6. 'min' → logprob: -14.375375747680664
    7. ',
' → logprob: -14.750375747680664
    8. ',m' → logprob: -15.000375747680664
    9. ',max' → logprob: -15.500375747680664
    10. ')' → logprob: -15.625375747680664

Token 441: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005301704630255699
    2. ' y' → logprob: -5.255301475524902
    3. '   ' → logprob: -9.630301475524902
    4. '	y' → logprob: -14.380301475524902
    5. ' ' → logprob: -14.755301475524902
    6. '    ' → logprob: -14.755301475524902
    7. '  ' → logprob: -14.880301475524902
    8. ')' → logprob: -16.25530242919922
    9. '(y' → logprob: -16.50530242919922
    10. '       ' → logprob: -16.50530242919922

Token 442: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3881901502609253
    2. ' +' → logprob: -1.1381901502609253
    3. '+s' → logprob: -6.638190269470215
    4. '+
' → logprob: -12.388190269470215
    5. ' ' → logprob: -13.263190269470215
    6. '   ' → logprob: -13.388190269470215
    7. ' +
' → logprob: -14.388190269470215
    8. '＋' → logprob: -14.638190269470215
    9. '  ' → logprob: -15.888190269470215
    10. '
' → logprob: -16.6381893157959

Token 443: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.048587825149297714
    2. ' s' → logprob: -3.0485877990722656
    3. '   ' → logprob: -15.298587799072266
    4. ' ' → logprob: -16.048587799072266
    5. '  ' → logprob: -17.673587799072266
    6. '	s' → logprob: -18.798587799072266
    7. '(s' → logprob: -19.048587799072266
    8. '_s' → logprob: -19.548587799072266
    9. '`s' → logprob: -19.673587799072266
    10. '       ' → logprob: -19.673587799072266

Token 444: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0017270608805119991
    2. ')' → logprob: -6.626727104187012
    3. '   ' → logprob: -7.876727104187012
    4. ' )
' → logprob: -10.876727104187012
    5. ')
' → logprob: -14.251727104187012
    6. '-' → logprob: -14.251727104187012
    7. ' ' → logprob: -14.376727104187012
    8. '+' → logprob: -14.376727104187012
    9. '  ' → logprob: -16.001726150512695
    10. ')

' → logprob: -17.126726150512695

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002525184245314449
    2. 'answer' → logprob: -8.375252723693848
    3. ' answer' → logprob: -10.875252723693848
    4. '	answer' → logprob: -12.750252723693848
    5. '   ' → logprob: -17.12525177001953
    6. '(answer' → logprob: -18.37525177001953
    7. '```' → logprob: -18.87525177001953
    8. '
' → logprob: -19.37525177001953
    9. '       ' → logprob: -19.37525177001953
    10. '  ' → logprob: -19.87525177001953

Token 446: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.016607381403446198
    2. '   ' → logprob: -4.266607284545898
    3. ' answer' → logprob: -6.016607284545898
    4. '	answer' → logprob: -12.891607284545898
    5. '(answer' → logprob: -15.891607284545898
    6. '
' → logprob: -16.3916072845459
    7. ' ' → logprob: -16.5166072845459
    8. '  ' → logprob: -17.1416072845459
    9. '.answer' → logprob: -17.2666072845459
    10. '-' → logprob: -17.3916072845459

Token 447: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005371859879232943
    2. '.' → logprob: -7.625537395477295
    3. '.ap' → logprob: -10.125536918640137
    4. '.app' → logprob: -11.750536918640137
    5. '.insert' → logprob: -14.250536918640137
    6. ' .' → logprob: -15.250536918640137
    7. 'append' → logprob: -16.625537872314453
    8. '_append' → logprob: -16.750537872314453
    9. '.a' → logprob: -16.750537872314453
    10. '.add' → logprob: -17.625537872314453

Token 448: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -2.45848218582978e-06
    2. '(str' → logprob: -13.25000286102295
    3. 'min' → logprob: -14.50000286102295
    4. '(' → logprob: -16.750001907348633
    5. '(m' → logprob: -18.000001907348633
    6. ' min' → logprob: -19.500001907348633
    7. '(max' → logprob: -20.000001907348633
    8. '[min' → logprob: -20.250001907348633
    9. '	min' → logprob: -20.750001907348633
    10. '(
' → logprob: -21.250001907348633

Token 449: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.35837464465294e-05
    2. 'cost' → logprob: -10.500043869018555
    3. '_' → logprob: -11.500043869018555
    4. 'Cost' → logprob: -12.750043869018555
    5. '_COST' → logprob: -13.875043869018555
    6. ' cost' → logprob: -14.000043869018555
    7. '-cost' → logprob: -15.000043869018555
    8. '_
' → logprob: -15.625043869018555
    9. ')' → logprob: -15.875043869018555
    10. '_budget' → logprob: -16.500043869018555

Token 450: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6182062029838562
    2. ')
' → logprob: -1.118206262588501
    3. ')

' → logprob: -2.368206262588501
    4. ')' → logprob: -3.368206262588501
    5. '

' → logprob: -5.118206024169922
    6. '
' → logprob: -10.118206024169922
    7. 'print' → logprob: -10.118206024169922
    8. '\n' → logprob: -11.368206024169922
    9. '    
' → logprob: -11.368206024169922
    10. '  
' → logprob: -12.118206024169922

Token 451: 'offset' (ID: 6680)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10115359723567963
    2. 'answer' → logprob: -3.101153612136841
    3. 'print' → logprob: -3.101153612136841
    4. '
' → logprob: -5.101153373718262
    5. '\n' → logprob: -10.101153373718262
    6. '```' → logprob: -10.226153373718262
    7. 'while' → logprob: -11.351153373718262
    8. '
' → logprob: -11.851153373718262
    9. '\' → logprob: -11.851153373718262
    10. ' for' → logprob: -11.976153373718262

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00286918506026268
    2. '=' → logprob: -6.002869129180908
    3. 's' → logprob: -7.877869129180908
    4. '_' → logprob: -12.252869606018066
    5. '(' → logprob: -12.377869606018066
    6. ' -=' → logprob: -13.627869606018066
    7. ',' → logprob: -14.752869606018066
    8. '  ' → logprob: -14.877869606018066
    9. ' =
' → logprob: -14.877869606018066
    10. '[:]' → logprob: -14.877869606018066

Token 453: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.039886169135570526
    2. ' ' → logprob: -4.164885997772217
    3. 'n' → logprob: -4.664885997772217
    4. 'len' → logprob: -5.164885997772217
    5. '100' → logprob: -6.039885997772217
    6. '0' → logprob: -6.289885997772217
    7. '[' → logprob: -6.539885997772217
    8. '[n' → logprob: -6.914885997772217
    9. '1' → logprob: -7.664885997772217
    10. 'float' → logprob: -8.289886474609375

Token 454: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06311582773923874
    2. '0' → logprob: -3.0631158351898193
    3. 'len' → logprob: -4.93811559677124
    4. 'n' → logprob: -5.18811559677124
    5. '100' → logprob: -7.56311559677124
    6. '-' → logprob: -7.93811559677124
    7. '-(' → logprob: -8.063116073608398
    8. 'int' → logprob: -8.938116073608398
    9. '1' → logprob: -9.313116073608398
    10. '[n' → logprob: -9.813116073608398

Token 455: ' **' (ID: 6240)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.48283106088638306
    2. '**' → logprob: -1.6078310012817383
    3. '7' → logprob: -1.9828310012817383
    4. '6' → logprob: -4.107831001281738
    5. '9' → logprob: -4.857831001281738
    6. '0' → logprob: -5.107831001281738
    7. '00' → logprob: -5.482831001281738
    8. '5' → logprob: -5.607831001281738
    9. '4' → logprob: -5.732831001281738
    10. '000' → logprob: -6.107831001281738

Token 456: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -3.292907877039397e-06
    2. '5' → logprob: -13.50000286102295
    3. '9' → logprob: -14.50000286102295
    4. '14' → logprob: -14.75000286102295
    5. '**' → logprob: -15.12500286102295
    6. '16' → logprob: -15.25000286102295
    7. '10' → logprob: -16.125003814697266
    8. '17' → logprob: -16.500003814697266
    9. '18' → logprob: -16.750003814697266
    10. '6' → logprob: -17.000003814697266

Token 457: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -8.137130498653278e-05
    2. '9' → logprob: -10.750081062316895
    3. '14' → logprob: -10.875081062316895
    4. '18' → logprob: -10.875081062316895
    5. '17' → logprob: -11.875081062316895
    6. '7' → logprob: -12.125081062316895
    7. '5' → logprob: -12.625081062316895
    8. '10' → logprob: -13.000081062316895
    9. '16' → logprob: -13.250081062316895
    10. '8' → logprob: -13.625081062316895

Token 458: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029885170981287956
    2. 'answer' → logprob: -3.7798850536346436
    3. '
' → logprob: -5.779885292053223
    4. ' for' → logprob: -5.779885292053223
    5. 'print' → logprob: -8.404885292053223
    6. 'result' → logprob: -9.154885292053223
    7. 'ans' → logprob: -11.154885292053223
    8. '<|end|>' → logprob: -11.529885292053223
    9. 'answers' → logprob: -11.654885292053223
    10. '_answer' → logprob: -11.779885292053223

Token 459: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00047190272016450763
    2. 'answer' → logprob: -8.250472068786621
    3. 'print' → logprob: -8.500472068786621
    4. 'result' → logprob: -12.375472068786621
    5. 'ans' → logprob: -13.375472068786621
    6. ' for' → logprob: -13.875472068786621
    7. 'res' → logprob: -15.125472068786621
    8. 'output' → logprob: -16.000471115112305
    9. 'offset' → logprob: -16.375471115112305
    10. '
' → logprob: -18.125471115112305

Token 460: ' v' (ID: 323)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6288204789161682
    2. 'x' → logprob: -1.5038204193115234
    3. 'i' → logprob: -1.7538204193115234
    4. 'ans' → logprob: -4.128820419311523
    5. 'a' → logprob: -4.253820419311523
    6. 'c' → logprob: -4.628820419311523
    7. '_cost' → logprob: -4.628820419311523
    8. 'v' → logprob: -5.128820419311523
    9. 'val' → logprob: -5.503820419311523
    10. '_' → logprob: -5.628820419311523

Token 461: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008623320609331131
    2. 'in' → logprob: -4.883623123168945
    3. ',' → logprob: -7.383623123168945
    4. 'alue' → logprob: -9.008623123168945
    5. 'al' → logprob: -9.133623123168945
    6. ' ' → logprob: -9.383623123168945
    7. ' ,' → logprob: -11.258623123168945
    8. 'n' → logprob: -11.383623123168945
    9. '_' → logprob: -11.508623123168945
    10. ' i' → logprob: -12.383623123168945

Token 462: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.01633041724562645
    2. 'answer' → logprob: -4.516330242156982
    3. 'range' → logprob: -5.266330242156982
    4. ' reversed' → logprob: -9.51633071899414
    5. ' answer' → logprob: -11.01633071899414
    6. 'reverse' → logprob: -11.89133071899414
    7. ' range' → logprob: -12.64133071899414
    8. 'ans' → logprob: -13.01633071899414
    9. '
' → logprob: -13.39133071899414
    10. '   ' → logprob: -13.51633071899414

Token 463: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.07889991998672485
    2. '(range' → logprob: -2.57889986038208
    3. 'answer' → logprob: -11.953900337219238
    4. 'range' → logprob: -13.453900337219238
    5. '(' → logprob: -13.703900337219238
    6. '(ans' → logprob: -14.453900337219238
    7. '(offset' → logprob: -15.078900337219238
    8. '(r' → logprob: -16.203899383544922
    9. ' answer' → logprob: -16.453899383544922
    10. '(
' → logprob: -17.078899383544922

Token 464: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015906770713627338
    2. '):
' → logprob: -6.501590728759766
    3. ' ):' → logprob: -9.626590728759766
    4. ':' → logprob: -11.376590728759766
    5. ')' → logprob: -11.626590728759766
    6. '):
' → logprob: -14.001590728759766
    7. '   ' → logprob: -15.501590728759766
    8. '():' → logprob: -15.626590728759766
    9. '}:' → logprob: -15.751590728759766
    10. ' ):
' → logprob: -15.876590728759766

Token 465: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20180292427539825
    2. ' print' → logprob: -1.9518029689788818
    3. '   ' → logprob: -3.201802968978882
    4. '
' → logprob: -10.576803207397461
    5. '```' → logprob: -12.201803207397461
    6. '	print' → logprob: -12.951803207397461
    7. '    
' → logprob: -13.076803207397461
    8. ' 
' → logprob: -14.326803207397461
    9. '#print' → logprob: -15.201803207397461
    10. '(print' → logprob: -15.201803207397461

Token 466: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.522638169466518e-05
    2. ' print' → logprob: -10.750024795532227
    3. '   ' → logprob: -12.500024795532227
    4. 'pr' → logprob: -18.625024795532227
    5. '_print' → logprob: -19.375024795532227
    6. '	print' → logprob: -20.250024795532227
    7. 'prin' → logprob: -20.500024795532227
    8. 'printf' → logprob: -20.875024795532227
    9. 'Print' → logprob: -21.250024795532227
    10. '
' → logprob: -21.375024795532227

Token 467: '(offset' (ID: 56065)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.40128016471862793
    2. '(offset' → logprob: -1.151280164718628
    3. 'offset' → logprob: -4.526280403137207
    4. 'v' → logprob: -6.276280403137207
    5. '(max' → logprob: -6.651280403137207
    6. '(' → logprob: -8.276280403137207
    7. '(int' → logprob: -11.276280403137207
    8. 'max' → logprob: -11.526280403137207
    9. '((' → logprob: -12.026280403137207
    10. '(min' → logprob: -12.026280403137207

Token 468: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5762811303138733
    2. '-' → logprob: -0.8262811303138733
    3. '-v' → logprob: -8.076281547546387
    4. '+' → logprob: -10.826281547546387
    5. '-end' → logprob: -12.576281547546387
    6. ')' → logprob: -13.201281547546387
    7. ',' → logprob: -13.326281547546387
    8. '-
' → logprob: -13.951281547546387
    9. '   ' → logprob: -14.201281547546387
    10. ' +' → logprob: -14.576281547546387

Token 469: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.493430894101039e-05
    2. ' v' → logprob: -9.500075340270996
    3. '_v' → logprob: -21.37507438659668
    4. '	v' → logprob: -22.00007438659668
    5. '   ' → logprob: -22.62507438659668
    6. ')v' → logprob: -23.12507438659668
    7. '(v' → logprob: -24.12507438659668
    8. ' ' → logprob: -24.62507438659668
    9. '$v' → logprob: -25.62507438659668
    10. '*v' → logprob: -26.25007438659668

Token 470: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.875000953674316
    3. '))' → logprob: -16.875
    4. ')`' → logprob: -17.875
    5. ')
' → logprob: -18.25
    6. ')")' → logprob: -18.75
    7. ')}' → logprob: -20.0
    8. '   ' → logprob: -20.25
    9. '),' → logprob: -20.375
    10. ')#' → logprob: -20.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 468
Tokens correctement prédits (1ère position, stricte): 230
Tokens correctement prédits (1ère position, avec adaptation): 249
Tokens correctement prédits (top 10): 419
Précision stricte (1ère position): 49.15%
Précision adaptée (1ère position): 53.21%
Précision (top 10): 89.53%
================================================================================
