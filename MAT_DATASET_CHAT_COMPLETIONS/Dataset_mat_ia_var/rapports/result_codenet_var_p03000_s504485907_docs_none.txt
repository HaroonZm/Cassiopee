================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, X = map(int, input().split())
L_list = [int(e) for e in input().split()]
ans = 1
Before_Di = 0
for i in range(N):
    Di = Before_Di + L_list[i]
    if Di <= X:
        ans += 1
        Before_Di = Di
    else:
        break
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' X' (ID: 2127)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06287360191345215
    2. ' =' → logprob: -3.937873601913452
    3. '[' → logprob: -4.062873840332031
    4. '.' → logprob: -4.187873840332031
    5. ',' → logprob: -4.937873840332031
    6. ')' → logprob: -7.312873840332031
    7. '_' → logprob: -7.687873840332031
    8. '+' → logprob: -8.937873840332031
    9. '#' → logprob: -8.937873840332031
    10. ':' → logprob: -9.437873840332031

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.30140960216522217
    2. 'map' → logprob: -1.8014096021652222
    3. '10' → logprob: -3.1764097213745117
    4. ' ' → logprob: -3.8014097213745117
    5. ' input' → logprob: -4.676409721374512
    6. ' np' → logprob: -4.676409721374512
    7. 'input' → logprob: -5.676409721374512
    8. '5' → logprob: -6.301409721374512
    9. '50' → logprob: -6.801409721374512
    10. '0' → logprob: -7.301409721374512

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007036932278424501
    2. '<|end|>' → logprob: -5.382037162780762
    3. '(lambda' → logprob: -6.882037162780762
    4. '(int' → logprob: -7.632037162780762
    5. '```' → logprob: -8.007037162780762
    6. ')' → logprob: -9.382037162780762
    7. '<|end|>' → logprob: -9.632037162780762
    8. '(user' → logprob: -9.882037162780762
    9. '()' → logprob: -10.382037162780762
    10. '("("' → logprob: -10.507037162780762

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059488363564014435
    2. '(input' → logprob: -3.434488296508789
    3. '(' → logprob: -4.559488296508789
    4. '```' → logprob: -5.559488296508789
    5. '`)' → logprob: -5.809488296508789
    6. ',' → logprob: -6.184488296508789
    7. 'input' → logprob: -6.184488296508789
    8. '`' → logprob: -6.559488296508789
    9. '<|end|>' → logprob: -7.934488296508789
    10. '),' → logprob: -8.059488296508789

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10023320466279984
    2. ' input' → logprob: -2.350233316421509
    3. '(input' → logprob: -10.72523307800293
    4. ')' → logprob: -12.72523307800293
    5. ',input' → logprob: -13.85023307800293
    6. '=input' → logprob: -14.97523307800293
    7. '<input' → logprob: -15.85023307800293
    8. '[input' → logprob: -16.22523307800293
    9. '	input' → logprob: -16.97523307800293
    10. 'user' → logprob: -17.97523307800293

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6757534146308899
    2. '()' → logprob: -0.8007534146308899
    3. '().' → logprob: -3.550753355026245
    4. ')' → logprob: -4.425753593444824
    5. '(' → logprob: -7.800753593444824
    6. '()`' → logprob: -8.675753593444824
    7. '`()' → logprob: -8.675753593444824
    8. '();)' → logprob: -8.675753593444824
    9. '());' → logprob: -9.050753593444824
    10. '('' → logprob: -9.175753593444824

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020067949662916362
    2. 'strip' → logprob: -8.625200271606445
    3. ')' → logprob: -11.250200271606445
    4. ' split' → logprob: -12.625200271606445
    5. 'rstrip' → logprob: -12.625200271606445
    6. 'read' → logprob: -14.000200271606445
    7. '(split' → logprob: -14.500200271606445
    8. 'spl' → logprob: -16.500200271606445
    9. 'replace' → logprob: -17.625200271606445
    10. '_split' → logprob: -17.625200271606445

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009016684256494045
    2. '())' → logprob: -5.259016513824463
    3. '))' → logprob: -5.759016513824463
    4. '()' → logprob: -8.509016990661621
    5. '(' → logprob: -8.509016990661621
    6. '`)' → logprob: -8.759016990661621
    7. ')`' → logprob: -10.884016990661621
    8. '')' → logprob: -12.009016990661621
    9. '()))' → logprob: -12.384016990661621
    10. '),' → logprob: -12.384016990661621

Token 11: 'L' (ID: 43)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3531143069267273
    2. ',' → logprob: -2.728114366531372
    3. 'x' → logprob: -2.978114366531372
    4. '\n' → logprob: -3.478114366531372
    5. '[' → logprob: -3.603114366531372
    6. '`' → logprob: -4.228114128112793
    7. 'for' → logprob: -4.353114128112793
    8. '```' → logprob: -4.478114128112793
    9. '.' → logprob: -4.603114128112793
    10. '#' → logprob: -4.603114128112793

Token 12: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4614478349685669
    2. ' =' → logprob: -1.461447834968567
    3. '.' → logprob: -3.2114477157592773
    4. 'ist' → logprob: -3.8364477157592773
    5. '_' → logprob: -3.9614477157592773
    6. 'i' → logprob: -4.086447715759277
    7. 's' → logprob: -4.461447715759277
    8. '[' → logprob: -4.586447715759277
    9. '=[]' → logprob: -5.711447715759277
    10. 'st' → logprob: -5.836447715759277

Token 13: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49428603053092957
    2. '[' → logprob: -1.619286060333252
    3. '.' → logprob: -2.119286060333252
    4. ' =' → logprob: -2.994286060333252
    5. '[:]' → logprob: -4.494286060333252
    6. '_' → logprob: -5.619286060333252
    7. '[]' → logprob: -6.494286060333252
    8. '=[]' → logprob: -6.744286060333252
    9. '.append' → logprob: -7.369286060333252
    10. 's' → logprob: -7.369286060333252

Token 14: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.55329829454422
    2. '[]' → logprob: -2.178298234939575
    3. '[' → logprob: -2.303298234939575
    4. ' list' → logprob: -2.303298234939575
    5. '[list' → logprob: -2.678298234939575
    6. '[input' → logprob: -3.928298234939575
    7. ' []' → logprob: -4.553298473358154
    8. ' [' → logprob: -4.678298473358154
    9. '[int' → logprob: -5.678298473358154
    10. '[List' → logprob: -10.053297996520996

Token 15: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006345849949866533
    2. ' int' → logprob: -5.631345748901367
    3. '0' → logprob: -6.381345748901367
    4. '*' → logprob: -7.381345748901367
    5. ']int' → logprob: -9.131345748901367
    6. 'list' → logprob: -9.256345748901367
    7. '(int' → logprob: -9.631345748901367
    8. ']' → logprob: -9.756345748901367
    9. 'map' → logprob: -10.131345748901367
    10. '[int' → logprob: -10.881345748901367

Token 16: '(e' (ID: 3454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6472628712654114
    2. '(input' → logprob: -0.7722628712654114
    3. '(x' → logprob: -4.272263050079346
    4. '(i' → logprob: -8.522262573242188
    5. ')' → logprob: -9.522262573242188
    6. '(
' → logprob: -9.897262573242188
    7. '(token' → logprob: -10.022262573242188
    8. 'input' → logprob: -10.147262573242188
    9. '()' → logprob: -10.397262573242188
    10. '(a' → logprob: -10.522262573242188

Token 17: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005212200339883566
    2. 'or' → logprob: -8.000521659851074
    3. ')x' → logprob: -10.000521659851074
    4. 'le' → logprob: -10.875521659851074
    5. 'lement' → logprob: -10.875521659851074
    6. '())' → logprob: -11.000521659851074
    7. ' )' → logprob: -11.250521659851074
    8. 'lem' → logprob: -11.375521659851074
    9. ')n' → logprob: -11.375521659851074
    10. '(x' → logprob: -11.875521659851074

Token 18: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2850958108901978
    2. '(input' → logprob: -1.4100958108901978
    3. '(' → logprob: -1.5350958108901978
    4. 'for' → logprob: -1.7850958108901978
    5. ' for' → logprob: -2.910095691680908
    6. '(x' → logprob: -3.785095691680908
    7. ')]' → logprob: -5.160095691680908
    8. ']' → logprob: -5.285095691680908
    9. 'input' → logprob: -5.660095691680908
    10. '()]' → logprob: -7.035095691680908

Token 19: ' e' (ID: 319)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2117854505777359
    2. '_' → logprob: -2.2117855548858643
    3. ' e' → logprob: -4.086785316467285
    4. ' range' → logprob: -4.211785316467285
    5. 'input' → logprob: -4.336785316467285
    6. ' ' → logprob: -4.336785316467285
    7. '<|end|>' → logprob: -4.461785316467285
    8. '<|end|>' → logprob: -5.336785316467285
    9. 'e' → logprob: -6.711785316467285
    10. ' in' → logprob: -6.711785316467285

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02638970874249935
    2. 'in' → logprob: -3.6513895988464355
    3. 'e' → logprob: -10.651390075683594
    4. ' e' → logprob: -11.276390075683594
    5. ' ' → logprob: -11.401390075683594
    6. 'n' → logprob: -11.526390075683594
    7. '_' → logprob: -11.901390075683594
    8. 'x' → logprob: -12.401390075683594
    9. '<|end|>' → logprob: -12.526390075683594
    10. 'input' → logprob: -13.026390075683594

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7143158912658691
    2. ' input' → logprob: -0.7143158912658691
    3. ' range' → logprob: -4.214315891265869
    4. 'range' → logprob: -5.089315891265869
    5. ' ' → logprob: -14.464315414428711
    6. '(input' → logprob: -15.089315414428711
    7. 'X' → logprob: -15.964315414428711
    8. 'in' → logprob: -16.33931541442871
    9. '[' → logprob: -16.83931541442871
    10. '=input' → logprob: -16.83931541442871

Token 22: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.532140851020813
    2. '().' → logprob: -1.282140851020813
    3. '()' → logprob: -2.0321407318115234
    4. '())' → logprob: -5.532140731811523
    5. '()].' → logprob: -9.282140731811523
    6. '(' → logprob: -9.532140731811523
    7. '()][' → logprob: -11.407140731811523
    8. '()],' → logprob: -12.532140731811523
    9. ')]' → logprob: -12.907140731811523
    10. '()>' → logprob: -12.907140731811523

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.584239938296378e-06
    2. 'strip' → logprob: -12.000007629394531
    3. 'rstrip' → logprob: -14.125007629394531
    4. ' split' → logprob: -14.500007629394531
    5. 'spl' → logprob: -17.25000762939453
    6. '(split' → logprob: -18.62500762939453
    7. '.split' → logprob: -21.50000762939453
    8. 'sp' → logprob: -21.75000762939453
    9. ')' → logprob: -22.50000762939453
    10. '_split' → logprob: -22.87500762939453

Token 24: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.15765443444252014
    2. '())' → logprob: -2.1576545238494873
    3. '()' → logprob: -3.5326545238494873
    4. '(' → logprob: -7.032654285430908
    5. ')]' → logprob: -9.282654762268066
    6. ']' → logprob: -11.157654762268066
    7. '('' → logprob: -11.157654762268066
    8. '()][' → logprob: -12.282654762268066
    9. ')' → logprob: -12.532654762268066
    10. '()`' → logprob: -12.657654762268066

Token 25: 'ans' (ID: 616)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5281028747558594
    2. 'L' → logprob: -1.9031028747558594
    3. 'S' → logprob: -1.9031028747558594
    4. 'dp' → logprob: -3.0281028747558594
    5. 'for' → logprob: -3.1531028747558594
    6. 'sum' → logprob: -3.2781028747558594
    7. 'd' → logprob: -3.4031028747558594
    8. 'c' → logprob: -3.4031028747558594
    9. 'M' → logprob: -3.4031028747558594
    10. 'answer' → logprob: -3.7781028747558594

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9413531422615051
    2. '_' → logprob: -1.1913530826568604
    3. ' =' → logprob: -1.1913530826568604
    4. '.' → logprob: -7.4413533210754395
    5. ' ' → logprob: -7.6913533210754395
    6. ' +=' → logprob: -8.441352844238281
    7. '[' → logprob: -8.566352844238281
    8. '_space' → logprob: -8.691352844238281
    9. '_=' → logprob: -9.066352844238281
    10. ')' → logprob: -9.066352844238281

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24580946564674377
    2. ' ' → logprob: -1.9958094358444214
    3. ' max' → logprob: -3.120809555053711
    4. 'max' → logprob: -4.120809555053711
    5. ' L' → logprob: -4.995809555053711
    6. ' sum' → logprob: -5.745809555053711
    7. ' min' → logprob: -5.870809555053711
    8. 'sum' → logprob: -6.120809555053711
    9. ' float' → logprob: -6.620809555053711
    10. 'L' → logprob: -6.870809555053711

Token 28: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2769341468811035
    2. 'max' → logprob: -1.9019341468811035
    3. 'sum' → logprob: -3.4019341468811035
    4. 'min' → logprob: -3.7769341468811035
    5. 'float' → logprob: -4.5269341468811035
    6. 'L' → logprob: -4.5269341468811035
    7. '-' → logprob: -5.7769341468811035
    8. 'abs' → logprob: -6.2769341468811035
    9. '10' → logprob: -6.4019341468811035
    10. '1' → logprob: -6.4019341468811035

Token 29: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5745956897735596
    2. ' for' → logprob: -1.0745956897735596
    3. ' ' → logprob: -2.6995956897735596
    4. '+' → logprob: -4.0745954513549805
    5. '<|end|>' → logprob: -5.4495954513549805
    6. '\n' → logprob: -6.3245954513549805
    7. '0' → logprob: -6.6995954513549805
    8. '*' → logprob: -7.0745954513549805
    9. '' → logprob: -7.3245954513549805
    10. ')' → logprob: -7.5745954513549805

Token 30: 'Before' (ID: 13036)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1802222728729248
    2. ' for' → logprob: -1.8052222728729248
    3. '+' → logprob: -9.055222511291504
    4. ')' → logprob: -10.180222511291504
    5. '```' → logprob: -10.180222511291504
    6. '0' → logprob: -10.305222511291504
    7. ' ' → logprob: -10.555222511291504
    8. '=' → logprob: -10.555222511291504
    9. '
' → logprob: -10.805222511291504
    10. 'f' → logprob: -10.930222511291504

Token 31: '_D' (ID: 2958)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5126374959945679
    2. ' for' → logprob: -1.5126374959945679
    3. '+' → logprob: -2.6376376152038574
    4. ' ' → logprob: -2.8876376152038574
    5. '_' → logprob: -4.137637615203857
    6. '*' → logprob: -4.387637615203857
    7. '=' → logprob: -4.887637615203857
    8. ')' → logprob: -5.262637615203857
    9. '0' → logprob: -5.887637615203857
    10. '<|end|>' → logprob: -6.387637615203857

Token 32: 'i' (ID: 72)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5135871767997742
    2. 'ef' → logprob: -2.263587236404419
    3. 'P' → logprob: -3.138587236404419
    4. '_' → logprob: -3.388587236404419
    5. 'for' → logprob: -3.888587236404419
    6. 'p' → logprob: -4.01358699798584
    7. 'D' → logprob: -4.13858699798584
    8. '=' → logprob: -4.13858699798584
    9. 'istance' → logprob: -4.13858699798584
    10. ' for' → logprob: -4.26358699798584

Token 33: ' =' (ID: 314)
  Prédit: 'stance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stance' → logprob: -0.39198172092437744
    2. 'ff' → logprob: -1.7669817209243774
    3. 'f' → logprob: -2.766981601715088
    4. 'st' → logprob: -3.391981601715088
    5. 'v' → logprob: -4.141981601715088
    6. 'r' → logprob: -4.766981601715088
    7. 'vision' → logprob: -4.891981601715088
    8. 'stances' → logprob: -4.891981601715088
    9. 'rection' → logprob: -5.141981601715088
    10. 'am' → logprob: -6.516981601715088

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16508273780345917
    2. ' ' → logprob: -2.0400826930999756
    3. 'L' → logprob: -4.540082931518555
    4. ' L' → logprob: -5.415082931518555
    5. '-' → logprob: -5.915082931518555
    6. ' -' → logprob: -6.290082931518555
    7. '1' → logprob: -6.540082931518555
    8. 'X' → logprob: -8.790082931518555
    9. 'None' → logprob: -8.790082931518555
    10. '[]' → logprob: -9.165082931518555

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027905238792300224
    2. 'L' → logprob: -4.277905464172363
    3. '-' → logprob: -5.152905464172363
    4. '1' → logprob: -5.527905464172363
    5. ' ' → logprob: -6.027905464172363
    6. 'X' → logprob: -7.402905464172363
    7. '-L' → logprob: -8.902905464172363
    8. 'N' → logprob: -9.027905464172363
    9. ' L' → logprob: -9.152905464172363
    10. '[]' → logprob: -9.277905464172363

Token 36: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5916734933853149
    2. '<|end|>' → logprob: -1.591673493385315
    3. 'for' → logprob: -1.841673493385315
    4. ' ' → logprob: -2.5916733741760254
    5. '
' → logprob: -5.091673374176025
    6. '<|end|>' → logprob: -6.966673374176025
    7. ' 
' → logprob: -7.966673374176025
    8. '+' → logprob: -7.966673374176025
    9. '\n' → logprob: -8.091673851013184
    10. '' → logprob: -8.216673851013184

Token 37: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3157522678375244
    2. ' for' → logprob: -1.3157522678375244
    3. ' ' → logprob: -7.190752029418945
    4. '\n' → logprob: -7.315752029418945
    5. '
' → logprob: -8.315752029418945
    6. '+' → logprob: -8.440752029418945
    7. '<|end|>' → logprob: -9.190752029418945
    8. '' → logprob: -9.440752029418945
    9. 'For' → logprob: -10.065752029418945
    10. ' For' → logprob: -10.065752029418945

Token 38: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09112212806940079
    2. ' _' → logprob: -2.9661221504211426
    3. ' ' → logprob: -3.9661221504211426
    4. ' e' → logprob: -4.716122150421143
    5. '_' → logprob: -4.966122150421143
    6. 'i' → logprob: -8.591121673583984
    7. ' x' → logprob: -8.841121673583984
    8. '  ' → logprob: -9.341121673583984
    9. ' X' → logprob: -10.091121673583984
    10. ' L' → logprob: -10.216121673583984

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007655488792806864
    2. 'in' → logprob: -4.882655620574951
    3. ' ' → logprob: -10.382655143737793
    4. '  ' → logprob: -12.632655143737793
    5. '	in' → logprob: -12.757655143737793
    6. ',' → logprob: -13.132655143737793
    7. '+' → logprob: -13.382655143737793
    8. 'n' → logprob: -13.632655143737793
    9. ' i' → logprob: -13.757655143737793
    10. 'range' → logprob: -14.195155143737793

Token 40: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31329089403152466
    2. 'range' → logprob: -1.3132908344268799
    3. 'L' → logprob: -11.8132905960083
    4. ' L' → logprob: -11.9382905960083
    5. '(range' → logprob: -12.0632905960083
    6. '	range' → logprob: -12.4382905960083
    7. ' xrange' → logprob: -13.4382905960083
    8. ' in' → logprob: -14.1882905960083
    9. 'X' → logprob: -14.3132905960083
    10. 'in' → logprob: -14.5632905960083

Token 41: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07908806949853897
    2. '(N' → logprob: -2.579087972640991
    3. ' (' → logprob: -8.82908821105957
    4. '(n' → logprob: -10.57908821105957
    5. '(len' → logprob: -11.32908821105957
    6. '(X' → logprob: -12.70408821105957
    7. '(i' → logprob: -12.82908821105957
    8. '()' → logprob: -13.82908821105957
    9. '(L' → logprob: -13.82908821105957
    10. '(`' → logprob: -13.95408821105957

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012917857384309173
    2. ' ):' → logprob: -6.751291751861572
    3. ':' → logprob: -9.87629222869873
    4. ')' → logprob: -9.87629222869873
    5. '):
' → logprob: -11.75129222869873
    6. '-' → logprob: -12.37629222869873
    7. '+' → logprob: -12.50129222869873
    8. ',' → logprob: -14.00129222869873
    9. '():' → logprob: -15.00129222869873
    10. ']:' → logprob: -15.00129222869873

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024006104096770287
    2. ' ' → logprob: -4.649005889892578
    3. '<|end|>' → logprob: -5.524005889892578
    4. '    ' → logprob: -6.149005889892578
    5. ' if' → logprob: -6.274005889892578
    6. '```' → logprob: -6.524005889892578
    7. ',' → logprob: -7.024005889892578
    8. '   ' → logprob: -7.899005889892578
    9. '    
' → logprob: -7.899005889892578
    10. '+' → logprob: -8.024005889892578

Token 44: ' Di' (ID: 9196)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.072454810142517
    2. '   ' → logprob: -1.197454810142517
    3. '    ' → logprob: -1.322454810142517
    4. ' if' → logprob: -3.4474549293518066
    5. '```' → logprob: -4.822454929351807
    6. ' x' → logprob: -5.197454929351807
    7. ' i' → logprob: -6.072454929351807
    8. ' ' → logprob: -6.072454929351807
    9. 'if' → logprob: -6.072454929351807
    10. ' ```' → logprob: -6.197454929351807

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005268384236842394
    2. '=' → logprob: -5.255268573760986
    3. ' -' → logprob: -10.880268096923828
    4. ',' → logprob: -12.005268096923828
    5. ' ' → logprob: -12.630268096923828
    6. '=int' → logprob: -12.880268096923828
    7. '-' → logprob: -13.630268096923828
    8. ' -=' → logprob: -14.505268096923828
    9. '   ' → logprob: -15.005268096923828
    10. ')' → logprob: -15.380268096923828

Token 46: ' Before' (ID: 16935)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2540220618247986
    2. ' L' → logprob: -1.5040221214294434
    3. 'X' → logprob: -6.754022121429443
    4. '   ' → logprob: -7.504022121429443
    5. ' X' → logprob: -8.504021644592285
    6. 'Before' → logprob: -10.004021644592285
    7. '	L' → logprob: -10.379021644592285
    8. 'Di' → logprob: -10.879021644592285
    9. 'D' → logprob: -11.754021644592285
    10. 'int' → logprob: -12.004021644592285

Token 47: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.0006481022574007511
    2. '+' → logprob: -7.875648021697998
    3. 'Di' → logprob: -8.750648498535156
    4. '_' → logprob: -9.500648498535156
    5. ' +' → logprob: -11.625648498535156
    6. ' Di' → logprob: -12.750648498535156
    7. '```' → logprob: -12.875648498535156
    8. '_DI' → logprob: -13.188148498535156
    9. '_di' → logprob: -13.188148498535156
    10. '_L' → logprob: -13.250648498535156

Token 48: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.513339445111342e-05
    2. 'ist' → logprob: -11.750044822692871
    3. 'Di' → logprob: -11.750044822692871
    4. 'di' → logprob: -12.125044822692871
    5. '+' → logprob: -12.625044822692871
    6. ' i' → logprob: -13.000044822692871
    7. ' ' → logprob: -13.000044822692871
    8. 'is' → logprob: -13.000044822692871
    9. '  ' → logprob: -13.375044822692871
    10. '   ' → logprob: -13.500044822692871

Token 49: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0699712336063385
    2. '+' → logprob: -2.6949713230133057
    3. ' plus' → logprob: -12.069971084594727
    4. ' ' → logprob: -12.194971084594727
    5. '   ' → logprob: -12.444971084594727
    6. ' +
' → logprob: -12.694971084594727
    7. '+i' → logprob: -12.944971084594727
    8. '+x' → logprob: -13.069971084594727
    9. ' ' → logprob: -13.194971084594727
    10. ' +=' → logprob: -13.444971084594727

Token 50: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004353571217507124
    2. ' L' → logprob: -5.6293535232543945
    3. 'X' → logprob: -7.2543535232543945
    4. '   ' → logprob: -10.254353523254395
    5. ' X' → logprob: -12.879353523254395
    6. '	L' → logprob: -13.379353523254395
    7. ' ' → logprob: -13.379353523254395
    8. '1' → logprob: -13.754353523254395
    9. '  ' → logprob: -14.629353523254395
    10. '>L' → logprob: -14.754353523254395

Token 51: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.968312951968983e-06
    2. '[i' → logprob: -13.125009536743164
    3. 'List' → logprob: -13.125009536743164
    4. 's' → logprob: -13.375009536743164
    5. 'i' → logprob: -13.500009536743164
    6. 'list' → logprob: -13.500009536743164
    7. '_i' → logprob: -14.625009536743164
    8. '```' → logprob: -15.500009536743164
    9. ' _' → logprob: -15.750009536743164
    10. '[_' → logprob: -16.375009536743164

Token 52: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011130821891129017
    2. '[' → logprob: -4.5111308097839355
    3. ' [' → logprob: -9.511131286621094
    4. '[
' → logprob: -13.136131286621094
    5. '[I' → logprob: -13.261131286621094
    6. '```' → logprob: -14.011131286621094
    7. 'i' → logprob: -14.136131286621094
    8. '[int' → logprob: -14.761131286621094
    9. '\[' → logprob: -14.761131286621094
    10. ' ' → logprob: -15.636131286621094

Token 53: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15657667815685272
    2. ' +' → logprob: -2.156576633453369
    3. ')' → logprob: -4.031576633453369
    4. '   ' → logprob: -5.281576633453369
    5. '<|end|>' → logprob: -5.781576633453369
    6. '
' → logprob: -7.281576633453369
    7. ')+' → logprob: -7.531576633453369
    8. '1' → logprob: -8.281577110290527
    9. '<|end|>' → logprob: -8.531577110290527
    10. ']' → logprob: -8.656577110290527

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6432344317436218
    2. ' if' → logprob: -1.2682344913482666
    3. ' ' → logprob: -2.7682344913482666
    4. 'if' → logprob: -3.3932344913482666
    5. ' 
' → logprob: -3.3932344913482666
    6. '
' → logprob: -4.2682342529296875
    7. '<|end|>' → logprob: -4.3932342529296875
    8. '    
' → logprob: -4.7682342529296875
    9. '```' → logprob: -5.0182342529296875
    10. '+' → logprob: -5.2682342529296875

Token 55: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46085575222969055
    2. ' if' → logprob: -1.4608557224273682
    3. 'if' (adapté à ' if') → logprob: -2.585855722427368
    4. '+' → logprob: -3.710855722427368
    5. '   ' → logprob: -4.835855960845947
    6. ' 
' → logprob: -5.585855960845947
    7. '_' → logprob: -5.710855960845947
    8. '<|end|>' → logprob: -5.835855960845947
    9. '```' → logprob: -6.085855960845947
    10. ''' → logprob: -6.085855960845947

Token 56: ' Di' (ID: 9196)
  Prédit: ' Di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Di' → logprob: -0.5477727651596069
    2. ' X' → logprob: -1.547772765159607
    3. ' abs' → logprob: -2.1727728843688965
    4. 'Di' → logprob: -2.6727728843688965
    5. ' ' → logprob: -5.0477728843688965
    6. 'abs' → logprob: -5.0477728843688965
    7. 'X' → logprob: -5.2977728843688965
    8. ' L' → logprob: -5.5477728843688965
    9. ' (' → logprob: -6.4227728843688965
    10. ' D' → logprob: -6.9227728843688965

Token 57: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8563007116317749
    2. '<=' → logprob: -1.856300711631775
    3. '>' → logprob: -2.2313008308410645
    4. '<' → logprob: -2.3563008308410645
    5. ' >' → logprob: -2.4813008308410645
    6. ' <' → logprob: -2.6063008308410645
    7. '+' → logprob: -3.7313008308410645
    8. '==' → logprob: -4.7313008308410645
    9. ' +' → logprob: -4.8563008308410645
    10. ' ==' → logprob: -5.2313008308410645

Token 58: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.054914891719818115
    2. ' X' → logprob: -2.929914951324463
    3. ' ' → logprob: -10.679914474487305
    4. '   ' → logprob: -12.429914474487305
    5. '  ' → logprob: -13.429914474487305
    6. '	X' → logprob: -13.929914474487305
    7. '>X' → logprob: -14.054914474487305
    8. 'D' → logprob: -15.179914474487305
    9. 'x' → logprob: -15.179914474487305
    10. ' ans' → logprob: -15.554914474487305

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00039825684507377446
    2. ' :' → logprob: -8.625398635864258
    3. ' and' → logprob: -9.125398635864258
    4. ':
' → logprob: -9.625398635864258
    5. 'and' → logprob: -11.000398635864258
    6. ' or' → logprob: -11.625398635864258
    7. '   ' → logprob: -11.875398635864258
    8. '):' → logprob: -13.000398635864258
    9. ''s' → logprob: -13.375398635864258
    10. ':return' → logprob: -13.625398635864258

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19355835020542145
    2. ':' → logprob: -1.8185583353042603
    3. '   ' → logprob: -4.568558216094971
    4. '        
' → logprob: -7.568558216094971
    5. ':
' → logprob: -7.568558216094971
    6. '<|end|>' → logprob: -7.568558216094971
    7. '    ' → logprob: -7.943558216094971
    8. '
' → logprob: -8.318558692932129
    9. '    
' → logprob: -9.068558692932129
    10. '     ' → logprob: -9.068558692932129

Token 61: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.04322320595383644
    2. 'ans' (adapté à ' ans') → logprob: -3.2932231426239014
    3. '   ' → logprob: -6.4182233810424805
    4. '    ' → logprob: -6.7932233810424805
    5. '	ans' → logprob: -7.4182233810424805
    6. '     
' → logprob: -8.04322338104248
    7. 'Before' → logprob: -8.04322338104248
    8. ' ' → logprob: -8.54322338104248
    9. ' 
' → logprob: -8.66822338104248
    10. '    
' → logprob: -8.79322338104248

Token 62: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31405889987945557
    2. ' *=' → logprob: -2.064058780670166
    3. ' =' → logprob: -2.814058780670166
    4. '+=' → logprob: -2.814058780670166
    5. '=' → logprob: -4.064058780670166
    6. '*=' → logprob: -5.439058780670166
    7. '*' → logprob: -7.314058780670166
    8. ' ' → logprob: -8.314059257507324
    9. ' ' → logprob: -9.439059257507324
    10. '	' → logprob: -9.939059257507324

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006764040794223547
    2. ' ' → logprob: -5.006763935089111
    3. 'Di' → logprob: -11.00676441192627
    4. 'L' → logprob: -11.50676441192627
    5. 'Before' → logprob: -11.50676441192627
    6. '2' → logprob: -13.13176441192627
    7. '0' → logprob: -13.25676441192627
    8. 'i' → logprob: -13.38176441192627
    9. 'ans' → logprob: -13.50676441192627
    10. ' L' → logprob: -14.00676441192627

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038229089113883674
    2. ' ' → logprob: -8.250382423400879
    3. 'Di' → logprob: -9.375382423400879
    4. 'Before' → logprob: -10.625382423400879
    5. '0' → logprob: -12.625382423400879
    6. 'ans' → logprob: -13.125382423400879
    7. 'L' → logprob: -13.375382423400879
    8. '2' → logprob: -13.750382423400879
    9. '(' → logprob: -14.250382423400879
    10. '   ' → logprob: -14.437882423400879

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0007737874984741
    2. '   ' → logprob: -1.1257737874984741
    3. '    
' → logprob: -2.0007739067077637
    4. ' else' → logprob: -2.7507739067077637
    5. 'else' → logprob: -3.2507739067077637
    6. ' 
' → logprob: -3.5007739067077637
    7. '  
' → logprob: -4.375773906707764
    8. '   
' → logprob: -5.250773906707764
    9. '        
' → logprob: -5.500773906707764
    10. '<|end|>' → logprob: -5.500773906707764

Token 66: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006313042715191841
    2. ' else' → logprob: -6.256312847137451
    3. 'else' → logprob: -6.381312847137451
    4. 'Before' → logprob: -7.006312847137451
    5. '    
' → logprob: -7.006312847137451
    6. '<|end|>' → logprob: -7.881312847137451
    7. '
' → logprob: -8.88131332397461
    8. '       ' → logprob: -9.13131332397461
    9. '    ' → logprob: -9.63131332397461
    10. '        
' → logprob: -10.00631332397461

Token 67: ' Before' (ID: 16935)
  Prédit: 'Before'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Before' (adapté à ' Before') → logprob: -0.0195765383541584
    2. '   ' → logprob: -4.144576549530029
    3. ' Before' → logprob: -6.269576549530029
    4. 'else' → logprob: -7.269576549530029
    5. '       ' → logprob: -7.394576549530029
    6. ' else' → logprob: -9.269576072692871
    7. '
' → logprob: -9.769576072692871
    8. '    
' → logprob: -10.144576072692871
    9. '_before' → logprob: -10.394576072692871
    10. '```' → logprob: -10.394576072692871

Token 68: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -5.860340752406046e-05
    2. 'Di' → logprob: -9.8750581741333
    3. '_' → logprob: -12.0000581741333
    4. '```' → logprob: -15.0000581741333
    5. '<|end|>' → logprob: -16.625059127807617
    6. '_di' → logprob: -16.750059127807617
    7. ' Di' → logprob: -16.750059127807617
    8. 'D' → logprob: -16.750059127807617
    9. '_DI' → logprob: -16.875059127807617
    10. '=' → logprob: -17.250059127807617

Token 69: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0183386392891407
    2. 'Di' → logprob: -4.018338680267334
    3. ' Di' → logprob: -9.768338203430176
    4. '_i' → logprob: -9.768338203430176
    5. '<|end|>' → logprob: -10.268338203430176
    6. 'e' → logprob: -10.643338203430176
    7. '_di' → logprob: -11.643338203430176
    8. '_' → logprob: -12.643338203430176
    9. 'o' → logprob: -13.768338203430176
    10. 'List' → logprob: -15.143338203430176

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014272217638790607
    2. '=' → logprob: -4.264272212982178
    3. ' +=' → logprob: -9.139272689819336
    4. '+=' → logprob: -13.889272689819336
    5. ' ' → logprob: -15.389272689819336
    6. '+' → logprob: -16.514272689819336
    7. '＝' → logprob: -17.139272689819336
    8. 's' → logprob: -17.264272689819336
    9. ' +' → logprob: -17.639272689819336
    10. ' ' → logprob: -18.139272689819336

Token 71: ' Di' (ID: 9196)
  Prédit: 'Di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Di' → logprob: -9.729906196298543e-06
    2. ' Di' → logprob: -11.875009536743164
    3. 'D' → logprob: -13.375009536743164
    4. 'Before' → logprob: -15.500009536743164
    5. 'L' → logprob: -15.625009536743164
    6. 'X' → logprob: -15.625009536743164
    7. '   ' → logprob: -16.125009536743164
    8. '_di' → logprob: -16.375009536743164
    9. 'Diagonal' → logprob: -16.625009536743164
    10. 'DI' → logprob: -17.000009536743164

Token 72: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1661348193883896
    2. ' else' → logprob: -1.9161348342895508
    3. '<|end|>' → logprob: -5.291134834289551
    4. 'elif' → logprob: -7.666134834289551
    5. '```' → logprob: -8.54113483428955
    6. ' elif' → logprob: -10.04113483428955
    7. '	else' → logprob: -10.16613483428955
    8. '   ' → logprob: -10.16613483428955
    9. '_else' → logprob: -11.04113483428955
    10. '<|end|>' → logprob: -11.54113483428955

Token 73: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6415687799453735
    2. ' else' → logprob: -0.7665687799453735
    3. '<|end|>' → logprob: -5.141568660736084
    4. 'print' → logprob: -6.266568660736084
    5. 'elif' → logprob: -7.766568660736084
    6. ' ' → logprob: -7.766568660736084
    7. '```' → logprob: -9.016569137573242
    8. ' elif' → logprob: -9.266569137573242
    9. ' print' → logprob: -10.891569137573242
    10. '	else' → logprob: -11.141569137573242

Token 74: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.005991012789309025
    2. ' else' → logprob: -5.130990982055664
    3. 'elif' → logprob: -10.005990982055664
    4. '<|end|>' → logprob: -11.755990982055664
    5. '```' → logprob: -12.505990982055664
    6. '	else' → logprob: -13.255990982055664
    7. '_else' → logprob: -13.630990982055664
    8. '   ' → logprob: -13.755990982055664
    9. 'Else' → logprob: -14.005990982055664
    10. ' elif' → logprob: -15.755990982055664

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31385189294815063
    2. '       ' → logprob: -1.3138518333435059
    3. '   ' → logprob: -7.813851833343506
    4. ':
' → logprob: -9.688852310180664
    5. '    ' → logprob: -10.938852310180664
    6. '.' → logprob: -10.938852310180664
    7. '	break' → logprob: -11.188852310180664
    8. '      ' → logprob: -11.313852310180664
    9. '     ' → logprob: -11.688852310180664
    10. '           ' → logprob: -11.688852310180664

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02227514609694481
    2. 'break' → logprob: -4.147274971008301
    3. '   ' → logprob: -5.272274971008301
    4. ' break' → logprob: -7.147274971008301
    5. '	break' → logprob: -9.0222749710083
    6. '```' → logprob: -9.1472749710083
    7. '           ' → logprob: -11.0222749710083
    8. '    ' → logprob: -11.5222749710083
    9. '	   ' → logprob: -11.5222749710083
    10. ' ' → logprob: -11.5222749710083

Token 77: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.010765410959720612
    2. ' break' → logprob: -4.760765552520752
    3. '   ' → logprob: -6.635765552520752
    4. '       ' → logprob: -7.135765552520752
    5. '	break' → logprob: -11.135765075683594
    6. 'Break' → logprob: -11.510765075683594
    7. '```' → logprob: -12.135765075683594
    8. '           ' → logprob: -12.385765075683594
    9. 'print' → logprob: -13.260765075683594
    10. '    ' → logprob: -13.635765075683594

Token 78: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05696455016732216
    2. '<|end|>' → logprob: -2.931964635848999
    3. ' print' → logprob: -6.93196439743042
    4. '```' → logprob: -7.93196439743042
    5. ')' → logprob: -8.306964874267578
    6. '
' → logprob: -8.806964874267578
    7. '\n' → logprob: -9.306964874267578
    8. '#print' → logprob: -9.806964874267578
    9. '<|end|>' → logprob: -9.806964874267578
    10. '#' → logprob: -10.181964874267578

Token 79: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014241892844438553
    2. '(ans' → logprob: -4.264241695404053
    3. '('' → logprob: -9.764242172241211
    4. '()' → logprob: -11.889242172241211
    5. '("("' → logprob: -12.014242172241211
    6. '("' → logprob: -12.264242172241211
    7. '(`' → logprob: -14.264242172241211
    8. ' (' → logprob: -14.639242172241211
    9. '(
' → logprob: -14.764242172241211
    10. 'ans' → logprob: -14.889242172241211

Token 81: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')`' → logprob: -16.625
    4. '))' → logprob: -17.0
    5. ')
' → logprob: -17.875
    6. '`)' → logprob: -18.25
    7. '）' → logprob: -19.0
    8. '()' → logprob: -19.625
    9. '')' → logprob: -20.0
    10. '#' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 79
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 62
Précision stricte (1ère position): 39.24%
Précision adaptée (1ère position): 43.04%
Précision (top 10): 78.48%
================================================================================
