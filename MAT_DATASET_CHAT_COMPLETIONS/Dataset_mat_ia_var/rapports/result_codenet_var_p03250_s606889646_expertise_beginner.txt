================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b, c = input().split()
a = int(a)
b = int(b)
c = int(c)

if a >= b and a >= c:
    max_num = a
elif b >= a and b >= c:
    max_num = b
else:
    max_num = c

result = (a + b + c) - max_num + max_num * 10
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21134252846240997
    2. '+' → logprob: -1.7113425731658936
    3. ',' → logprob: -5.3363423347473145
    4. ' =' → logprob: -5.5863423347473145
    5. ' ' → logprob: -8.086342811584473
    6. ' +' → logprob: -8.586342811584473
    7. '*' → logprob: -8.711342811584473
    8. '+=' → logprob: -8.961342811584473
    9. '.' → logprob: -9.086342811584473
    10. ')' → logprob: -9.586342811584473

Token 4: ' c' (ID: 274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2139989733695984
    2. ',' → logprob: -2.213999032974243
    3. ' =' → logprob: -3.088999032974243
    4. 'c' → logprob: -3.838999032974243
    5. ' ' → logprob: -4.838998794555664
    6. ',c' → logprob: -5.713998794555664
    7. '<|end|>' → logprob: -6.713998794555664
    8. ')' → logprob: -6.963998794555664
    9. '.' → logprob: -7.213998794555664
    10. '_' → logprob: -7.463998794555664

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16013993322849274
    2. '+' → logprob: -2.035140037536621
    3. ',' → logprob: -4.785140037536621
    4. ' =' → logprob: -5.035140037536621
    5. ')' → logprob: -7.035140037536621
    6. '```' → logprob: -8.535140037536621
    7. '[' → logprob: -8.660140037536621
    8. ' +' → logprob: -8.785140037536621
    9. '+=' → logprob: -8.785140037536621
    10. '<|end|>' → logprob: -8.910140037536621

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10899576544761658
    2. '0' → logprob: -2.8589956760406494
    3. '1' → logprob: -3.1089956760406494
    4. ' [' → logprob: -7.7339959144592285
    5. '[' → logprob: -7.8589959144592285
    6. '10' → logprob: -9.35899543762207
    7. 'a' → logprob: -9.60899543762207
    8. '```' → logprob: -9.73399543762207
    9. ' a' → logprob: -10.10899543762207
    10. '[]' → logprob: -10.35899543762207

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1515161693096161
    2. '.' → logprob: -2.0265161991119385
    3. '[' → logprob: -5.901515960693359
    4. '(.)' → logprob: -6.526515960693359
    5. '('.')' → logprob: -6.526515960693359
    6. '(
' → logprob: -7.151515960693359
    7. '()' → logprob: -7.401515960693359
    8. ''' → logprob: -7.776515960693359
    9. ',' → logprob: -8.52651596069336
    10. '```' → logprob: -8.65151596069336

Token 8: 'split' (ID: 13627)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.20492228865623474
    2. ',' → logprob: -2.8299221992492676
    3. '.' → logprob: -2.8299221992492676
    4. '()' → logprob: -3.7049221992492676
    5. '.strip' → logprob: -4.079922199249268
    6. '().' → logprob: -4.204922199249268
    7. 'split' → logprob: -4.954922199249268
    8. '[' → logprob: -6.704922199249268
    9. '(' → logprob: -6.704922199249268
    10. ')' → logprob: -8.704922676086426

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03068743459880352
    2. '()' → logprob: -3.5306873321533203
    3. '('' → logprob: -7.90568733215332
    4. '(
' → logprob: -8.40568733215332
    5. '(

' → logprob: -9.53068733215332
    6. '`' → logprob: -10.15568733215332
    7. ''' → logprob: -10.40568733215332
    8. '(()' → logprob: -10.40568733215332
    9. '(`' → logprob: -10.53068733215332
    10. '```' → logprob: -10.53068733215332

Token 10: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.035371579229831696
    2. '.' → logprob: -4.535371780395508
    3. 'if' → logprob: -5.160371780395508
    4. 'print' → logprob: -5.910371780395508
    5. '[' → logprob: -6.160371780395508
    6. '=' → logprob: -6.160371780395508
    7. '#' → logprob: -6.160371780395508
    8. ',' → logprob: -6.660371780395508
    9. '```' → logprob: -6.660371780395508
    10. 'd' → logprob: -6.785371780395508

Token 11: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1175098419189453
    2. '<|end|>' → logprob: -1.1175098419189453
    3. ' ' → logprob: -1.4925098419189453
    4. '[' → logprob: -2.3675098419189453
    5. ')' → logprob: -4.742509841918945
    6. '.' → logprob: -5.242509841918945
    7. 'a' → logprob: -5.867509841918945
    8. '=' → logprob: -6.117509841918945
    9. '```' → logprob: -6.492509841918945
    10. '*' → logprob: -6.742509841918945

Token 12: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.039387524127960205
    2. 'a' → logprob: -3.7893874645233154
    3. ' int' → logprob: -4.4143877029418945
    4. 'float' → logprob: -6.0393877029418945
    5. 'input' → logprob: -7.4143877029418945
    6. ' a' → logprob: -7.4143877029418945
    7. '0' → logprob: -9.164387702941895
    8. ' float' → logprob: -9.539387702941895
    9. 'b' → logprob: -10.164387702941895
    10. ' input' → logprob: -10.664387702941895

Token 13: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04289298132061958
    2. '(a' → logprob: -3.5428929328918457
    3. 'a' → logprob: -4.417892932891846
    4. '<|end|>' → logprob: -8.042893409729004
    5. ' ' → logprob: -8.792893409729004
    6. '```' → logprob: -9.042893409729004
    7. '('' → logprob: -9.167893409729004
    8. ')' → logprob: -9.542893409729004
    9. '()' → logprob: -10.042893409729004
    10. ' (' → logprob: -10.417893409729004

Token 14: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.215330409351736e-05
    2. '+' → logprob: -10.750041961669922
    3. ' )' → logprob: -11.375041961669922
    4. ')
' → logprob: -12.625041961669922
    5. '<|end|>' → logprob: -13.250041961669922
    6. ')a' → logprob: -13.750041961669922
    7. '*' → logprob: -14.875041961669922
    8. '),' → logprob: -15.000041961669922
    9. ')+' → logprob: -15.000041961669922
    10. '')' → logprob: -15.125041961669922

Token 15: 'b' (ID: 65)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04858850687742233
    2. ' int' → logprob: -3.048588514328003
    3. ' ' → logprob: -15.048588752746582
    4. '=int' → logprob: -15.173588752746582
    5. '(int' → logprob: -15.673588752746582
    6. '<int' → logprob: -16.048587799072266
    7. '	int' → logprob: -16.423587799072266
    8. '   ' → logprob: -17.048587799072266
    9. 'b' → logprob: -17.173587799072266
    10. '0' → logprob: -17.298587799072266

Token 18: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048814453184604645
    2. '(b' → logprob: -3.048814535140991
    3. '(a' → logprob: -9.04881477355957
    4. ')' → logprob: -10.92381477355957
    5. 'b' → logprob: -10.92381477355957
    6. ' (' → logprob: -11.17381477355957
    7. '(

' → logprob: -11.79881477355957
    8. '(B' → logprob: -12.04881477355957
    9. '(
' → logprob: -12.04881477355957
    10. '('' → logprob: -12.04881477355957

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.9186317482963204e-05
    2. ')
' → logprob: -10.125049591064453
    3. '`)' → logprob: -13.125049591064453
    4. '<|end|>' → logprob: -13.250049591064453
    5. '```' → logprob: -13.375049591064453
    6. '')' → logprob: -13.750049591064453
    7. ' )' → logprob: -14.000049591064453
    8. ')

' → logprob: -15.000049591064453
    9. '*' → logprob: -15.250049591064453
    10. ')**' → logprob: -15.875049591064453

Token 20: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005705483490601182
    2. ' c' → logprob: -7.625570774078369
    3. '```' → logprob: -9.625570297241211
    4. ' 
' → logprob: -12.000570297241211
    5. '``' → logprob: -12.375570297241211
    6. '<|end|>' → logprob: -13.250570297241211
    7. '`' → logprob: -13.750570297241211
    8. ')c' → logprob: -14.000570297241211
    9. ' ' → logprob: -14.750570297241211
    10. '
' → logprob: -15.000570297241211

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6853589415550232
    2. '<|end|>' → logprob: -1.185359001159668
    3. '=' → logprob: -1.810359001159668
    4. ')' → logprob: -3.935359001159668
    5. '+' → logprob: -6.060359001159668
    6. ' ' → logprob: -6.435359001159668
    7. '*' → logprob: -7.185359001159668
    8. '<|end|>' → logprob: -7.560359001159668
    9. ',' → logprob: -7.935359001159668
    10. '(' → logprob: -8.560359001159668

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007107630372047424
    2. ' int' → logprob: -7.250710964202881
    3. 'c' → logprob: -14.250710487365723
    4. '(int' → logprob: -15.875710487365723
    5. 'float' → logprob: -17.87571144104004
    6. '<int' → logprob: -17.87571144104004
    7. ' ' → logprob: -18.50071144104004
    8. '[int' → logprob: -18.75071144104004
    9. ' c' → logprob: -18.87571144104004
    10. '  ' → logprob: -18.87571144104004

Token 23: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.5254855751991272
    2. '(' → logprob: -0.9004855751991272
    3. '(a' → logprob: -6.650485515594482
    4. '("("' → logprob: -8.52548599243164
    5. '('' → logprob: -8.65048599243164
    6. '((' → logprob: -8.65048599243164
    7. ' (' → logprob: -9.52548599243164
    8. '()' → logprob: -9.65048599243164
    9. '```' → logprob: -10.02548599243164
    10. '`' → logprob: -10.15048599243164

Token 24: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.500000953674316
    3. '')' → logprob: -15.625000953674316
    4. '```' → logprob: -16.000001907348633
    5. ' )' → logprob: -16.250001907348633
    6. '`)' → logprob: -16.500001907348633
    7. '#' → logprob: -17.000001907348633
    8. '))' → logprob: -17.125001907348633
    9. '<|end|>' → logprob: -17.125001907348633
    10. '()' → logprob: -17.625001907348633

Token 25: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1282273530960083
    2. 'i' → logprob: -2.7532272338867188
    3. 'd' → logprob: -3.8782272338867188
    4. '+' → logprob: -4.503227233886719
    5. 's' → logprob: -4.753227233886719
    6. ' if' → logprob: -5.378227233886719
    7. 'n' → logprob: -6.253227233886719
    8. 'x' → logprob: -6.378227233886719
    9. 'sum' → logprob: -6.753227233886719
    10. ':' → logprob: -7.128227233886719

Token 26: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.030608130618929863
    2. 'a' → logprob: -3.5306081771850586
    3. ' ' → logprob: -7.155608177185059
    4. ' (' → logprob: -10.530608177185059
    5. ' ' → logprob: -10.655608177185059
    6. ' b' → logprob: -12.030608177185059
    7. ' c' → logprob: -12.405608177185059
    8. '(' → logprob: -12.405608177185059
    9. ' '' → logprob: -12.905608177185059
    10. '_a' → logprob: -13.030608177185059

Token 27: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04865174740552902
    2. ' <' → logprob: -3.923651695251465
    3. ' >=' → logprob: -4.298651695251465
    4. ' ==' → logprob: -4.798651695251465
    5. ' <=' → logprob: -5.423651695251465
    6. '>' → logprob: -7.423651695251465
    7. ' ' → logprob: -7.798651695251465
    8. ' %' → logprob: -8.673651695251465
    9. '  ' → logprob: -9.048651695251465
    10. ' !=' → logprob: -10.048651695251465

Token 28: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16414913535118103
    2. ' b' → logprob: -1.9141491651535034
    3. 'c' → logprob: -6.289149284362793
    4. ' c' → logprob: -7.289149284362793
    5. ' ' → logprob: -7.789149284362793
    6. '0' → logprob: -8.039149284362793
    7. '10' → logprob: -8.539149284362793
    8. '100' → logprob: -8.664149284362793
    9. '1' → logprob: -9.789149284362793
    10. '20' → logprob: -10.664149284362793

Token 29: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08360427618026733
    2. ':' → logprob: -2.708604335784912
    3. ' :' → logprob: -4.708604335784912
    4. 'and' → logprob: -5.458604335784912
    5. ' ' → logprob: -8.958603858947754
    6. '>' → logprob: -10.208603858947754
    7. ' or' → logprob: -10.333603858947754
    8. '<|end|>' → logprob: -10.833603858947754
    9. ' >' → logprob: -11.208603858947754
    10. '>:' → logprob: -11.333603858947754

Token 30: ' a' (ID: 261)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.16553755104541779
    2. ' a' → logprob: -2.0405375957489014
    3. ' ' → logprob: -4.165537357330322
    4. ' b' → logprob: -5.665537357330322
    5. 'c' → logprob: -5.915537357330322
    6. 'a' → logprob: -7.290537357330322
    7. ' ' → logprob: -9.16553783416748
    8. ''' → logprob: -10.54053783416748
    9. '"' → logprob: -10.66553783416748
    10. '```' → logprob: -10.91553783416748

Token 31: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1461668759584427
    2. '>=' → logprob: -2.2711668014526367
    3. ' >' → logprob: -3.7711668014526367
    4. '>' → logprob: -4.896166801452637
    5. ' <=' → logprob: -6.271166801452637
    6. '<=' → logprob: -8.396166801452637
    7. ' ' → logprob: -9.271166801452637
    8. ' <' → logprob: -10.521166801452637
    9. '==' → logprob: -11.771166801452637
    10. ' ==' → logprob: -11.833666801452637

Token 32: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5231277942657471
    2. ' c' → logprob: -0.8981277942657471
    3. ' ' → logprob: -12.898127555847168
    4. '	c' → logprob: -14.398127555847168
    5. ')c' → logprob: -14.648127555847168
    6. '_c' → logprob: -15.585627555847168
    7. 'b' → logprob: -15.835627555847168
    8. '   ' → logprob: -16.148128509521484
    9. ')' → logprob: -16.210628509521484
    10. '>' → logprob: -16.398128509521484

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005450497264973819
    2. ' :' → logprob: -7.875545024871826
    3. ' and' → logprob: -8.875545501708984
    4. ':
' → logprob: -11.750545501708984
    5. '):' → logprob: -12.000545501708984
    6. 'and' → logprob: -12.125545501708984
    7. ':**' → logprob: -12.625545501708984
    8. '>:' → logprob: -14.250545501708984
    9. '':' → logprob: -14.875545501708984
    10. ':

' → logprob: -15.375545501708984

Token 34: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6887972950935364
    2. 'print' → logprob: -1.4387972354888916
    3. ' print' → logprob: -1.9387972354888916
    4. '   ' → logprob: -2.5637972354888916
    5. ' :' → logprob: -4.313797473907471
    6. ':
' → logprob: -4.313797473907471
    7. ' ' → logprob: -5.563797473907471
    8. ' :
' → logprob: -5.938797473907471
    9. '\n' → logprob: -6.563797473907471
    10. ' 
' → logprob: -7.063797473907471

Token 35: ' max' (ID: 2999)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4321349859237671
    2. 'print' → logprob: -1.057134985923767
    3. ' a' → logprob: -6.182135105133057
    4. '   ' → logprob: -7.682135105133057
    5. 'a' → logprob: -8.307134628295898
    6. '`' → logprob: -9.307134628295898
    7. ' `' → logprob: -9.432134628295898
    8. ' ' → logprob: -9.682134628295898
    9. '    ' → logprob: -9.682134628295898
    10. '```' → logprob: -9.807134628295898

Token 36: '_num' (ID: 9834)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13679169118404388
    2. '_val' → logprob: -2.386791706085205
    3. '_value' → logprob: -3.386791706085205
    4. '_a' → logprob: -6.636791706085205
    5. 'a' → logprob: -8.136791229248047
    6. 'imum' → logprob: -9.011791229248047
    7. '(a' → logprob: -9.511791229248047
    8. 'Val' → logprob: -9.761791229248047
    9. '_num' → logprob: -9.886791229248047
    10. '(' → logprob: -10.636791229248047

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11284902691841125
    2. '=' → logprob: -2.237848997116089
    3. ' ' → logprob: -10.737849235534668
    4. '   ' → logprob: -13.487849235534668
    5. 'a' → logprob: -13.737849235534668
    6. ')' → logprob: -14.362849235534668
    7. '  ' → logprob: -14.487849235534668
    8. 's' → logprob: -15.237849235534668
    9. '```' → logprob: -15.612849235534668
    10. '=int' → logprob: -15.862849235534668

Token 38: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1002068892121315
    2. ' a' → logprob: -2.3502068519592285
    3. '	a' → logprob: -16.22520637512207
    4. ' ' → logprob: -16.60020637512207
    5. '   ' → logprob: -17.22520637512207
    6. ' ' → logprob: -18.22520637512207
    7. '_a' → logprob: -18.35020637512207
    8. '(a' → logprob: -19.35020637512207
    9. '>a' → logprob: -19.47520637512207
    10. '`' → logprob: -19.60020637512207

Token 39: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.1464579999446869
    2. 'else' → logprob: -2.8964579105377197
    3. '<|end|>' → logprob: -3.0214579105377197
    4. '
' → logprob: -3.8964579105377197
    5. ' elif' → logprob: -5.896458148956299
    6. '\n' → logprob: -6.021458148956299
    7. ':' → logprob: -6.146458148956299
    8. ' else' → logprob: -7.146458148956299
    9. '<|end|>' → logprob: -7.521458148956299
    10. '   ' → logprob: -7.521458148956299

Token 40: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.012566281482577324
    2. 'else' → logprob: -4.762566089630127
    3. '
' → logprob: -6.387566089630127
    4. '<|end|>' → logprob: -6.762566089630127
    5. ' elif' → logprob: -7.637566089630127
    6. '\n' → logprob: -8.262566566467285
    7. '    
' → logprob: -9.012566566467285
    8. '```' → logprob: -9.762566566467285
    9. ' else' → logprob: -10.512566566467285
    10. '   ' → logprob: -10.637566566467285

Token 41: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.00764354458078742
    2. 'b' → logprob: -4.882643699645996
    3. ' ' → logprob: -10.382643699645996
    4. ' ' → logprob: -12.507643699645996
    5. '	b' → logprob: -14.507643699645996
    6. ' б' → logprob: -14.882643699645996
    7. ''' → logprob: -15.507643699645996
    8. '   ' → logprob: -15.632643699645996
    9. '    ' → logprob: -15.632643699645996
    10. '  ' → logprob: -15.757643699645996

Token 42: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.014620129019021988
    2. '>=' → logprob: -4.389620304107666
    3. ' >' → logprob: -6.264620304107666
    4. '>' → logprob: -8.764619827270508
    5. ' ' → logprob: -10.014619827270508
    6. '   ' → logprob: -13.014619827270508
    7. ' ≥' → logprob: -14.264619827270508
    8. ' ' → logprob: -14.264619827270508
    9. '  ' → logprob: -14.764619827270508
    10. ' <=' → logprob: -15.514619827270508

Token 43: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004316180013120174
    2. ' a' → logprob: -5.504316329956055
    3. 'c' → logprob: -8.379316329956055
    4. ' c' → logprob: -12.004316329956055
    5. ' ' → logprob: -13.504316329956055
    6. '	a' → logprob: -15.254316329956055
    7. '>a' → logprob: -15.754316329956055
    8. '   ' → logprob: -15.879316329956055
    9. '  ' → logprob: -17.379316329956055
    10. '_a' → logprob: -17.629316329956055

Token 44: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868762254714966
    2. 'and' → logprob: -1.1368762254714966
    3. ' ' → logprob: -12.261876106262207
    4. ' ' → logprob: -15.636876106262207
    5. '   ' → logprob: -16.261877059936523
    6. '```' → logprob: -16.636877059936523
    7. '	and' → logprob: -17.261877059936523
    8. ' и' → logprob: -17.386877059936523
    9. '>' → logprob: -18.261877059936523
    10. '<|end|>' → logprob: -18.261877059936523

Token 45: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.14278511703014374
    2. ' c' → logprob: -2.14278507232666
    3. 'b' → logprob: -4.26778507232666
    4. 'c' → logprob: -6.39278507232666
    5. ' ' → logprob: -10.14278507232666
    6. ' ' → logprob: -12.89278507232666
    7. '    ' → logprob: -13.89278507232666
    8. '   ' → logprob: -14.14278507232666
    9. '  ' → logprob: -14.76778507232666
    10. ' б' → logprob: -15.14278507232666

Token 46: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.069992795586586
    2. '>=' → logprob: -2.694992780685425
    3. ' >' → logprob: -10.319993019104004
    4. ' ' → logprob: -11.194993019104004
    5. '>' → logprob: -11.694993019104004
    6. 'and' → logprob: -15.569993019104004
    7. ']>=' → logprob: -15.569993019104004
    8. '<|end|>' → logprob: -15.569993019104004
    9. ' ≥' → logprob: -15.694993019104004
    10. ')>=' → logprob: -15.694993019104004

Token 47: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02054375410079956
    2. ' c' → logprob: -3.8955438137054443
    3. '	c' → logprob: -14.145544052124023
    4. ' ' → logprob: -14.895544052124023
    5. '_c' → logprob: -15.520544052124023
    6. '   ' → logprob: -15.645544052124023
    7. '<|end|>' → logprob: -15.645544052124023
    8. ')c' → logprob: -16.520544052124023
    9. ' ' → logprob: -16.770544052124023
    10. '  ' → logprob: -16.895544052124023

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.159660890465602e-05
    2. ':
' → logprob: -10.25007152557373
    3. ' :' → logprob: -10.25007152557373
    4. '):' → logprob: -15.12507152557373
    5. '   ' → logprob: -16.125072479248047
    6. ':**' → logprob: -16.250072479248047
    7. ':

' → logprob: -16.625072479248047
    8. ':
' → logprob: -17.000072479248047
    9. ':`' → logprob: -17.250072479248047
    10. '：' → logprob: -17.875072479248047

Token 49: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.061991553753614426
    2. ' b' → logprob: -2.8119914531707764
    3. '   ' → logprob: -10.686991691589355
    4. ' ' → logprob: -14.686991691589355
    5. '    ' → logprob: -14.811991691589355
    6. '	b' → logprob: -16.68699073791504
    7. '  ' → logprob: -17.06199073791504
    8. '```' → logprob: -17.31199073791504
    9. ' 
' → logprob: -17.56199073791504
    10. 'c' → logprob: -17.56199073791504

Token 50: ' max' (ID: 2999)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009756443090736866
    2. ' b' → logprob: -4.634756565093994
    3. '   ' → logprob: -15.259756088256836
    4. ' ' → logprob: -16.634756088256836
    5. '    ' → logprob: -17.634756088256836
    6. '	b' → logprob: -17.759756088256836
    7. '```' → logprob: -17.884756088256836
    8. '`' → logprob: -18.884756088256836
    9. ')b' → logprob: -18.884756088256836
    10. '  ' → logprob: -19.134756088256836

Token 51: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0001434690784662962
    2. '_' → logprob: -8.875143051147461
    3. '_n' → logprob: -13.000143051147461
    4. ' _' → logprob: -14.625143051147461
    5. '_number' → logprob: -15.500143051147461
    6. '_NUM' → logprob: -16.00014305114746
    7. '_nums' → logprob: -16.00014305114746
    8. '_b' → logprob: -16.12514305114746
    9. '_Num' → logprob: -16.37514305114746
    10. '_max' → logprob: -16.50014305114746

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889209687709808
    2. '=' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.07889175415039
    4. ' =
' → logprob: -16.20389175415039
    5. ')' → logprob: -16.95389175415039
    6. ' is' → logprob: -17.57889175415039
    7. '```' → logprob: -17.57889175415039
    8. '_' → logprob: -17.70389175415039
    9. ' =)' → logprob: -18.20389175415039
    10. ' ==' → logprob: -18.32889175415039

Token 53: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47407814860343933
    2. 'b' → logprob: -0.9740781784057617
    3. ' ' → logprob: -14.599078178405762
    4. ' ' → logprob: -14.599078178405762
    5. '	b' → logprob: -16.724077224731445
    6. ' б' → logprob: -16.724077224731445
    7. '_b' → logprob: -17.349077224731445
    8. '```' → logprob: -17.599077224731445
    9. ''b' → logprob: -17.974077224731445
    10. '`' → logprob: -17.974077224731445

Token 54: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00874895229935646
    2. 'elif' → logprob: -4.758749008178711
    3. ' else' → logprob: -9.258749008178711
    4. '```' → logprob: -10.258749008178711
    5. '    
' → logprob: -13.508749008178711
    6. '_else' → logprob: -14.508749008178711
    7. '<|end|>' → logprob: -15.008749008178711
    8. '#else' → logprob: -15.008749008178711
    9. 'elseif' → logprob: -15.633749008178711
    10. '``' → logprob: -15.633749008178711

Token 55: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.008714438416063786
    2. 'elif' → logprob: -4.75871467590332
    3. '```' → logprob: -9.50871467590332
    4. ' else' → logprob: -10.63371467590332
    5. '#else' → logprob: -14.88371467590332
    6. '    
' → logprob: -15.25871467590332
    7. '_else' → logprob: -15.75871467590332
    8. 'el' → logprob: -16.13371467590332
    9. 'elseif' → logprob: -16.25871467590332
    10. '}else' → logprob: -16.63371467590332

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.65101717156358e-05
    2. ' :' → logprob: -10.000096321105957
    3. '   ' → logprob: -10.125096321105957
    4. ':
' → logprob: -11.500096321105957
    5. '  ' → logprob: -15.750096321105957
    6. '{' → logprob: -15.750096321105957
    7. '=' → logprob: -16.125097274780273
    8. '：' → logprob: -16.125097274780273
    9. ' ' → logprob: -16.250097274780273
    10. ':max' → logprob: -16.375097274780273

Token 57: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.048630282282829285
    2. ' c' → logprob: -3.0486302375793457
    3. '   ' → logprob: -10.423630714416504
    4. 'max' → logprob: -11.798630714416504
    5. ' max' → logprob: -12.423630714416504
    6. '	c' → logprob: -14.173630714416504
    7. ' ' → logprob: -14.548630714416504
    8. '  ' → logprob: -14.673630714416504
    9. ')c' → logprob: -16.548629760742188
    10. '```' → logprob: -17.423629760742188

Token 58: ' max' (ID: 2999)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003933768020942807
    2. ' c' → logprob: -7.875393390655518
    3. 'max' (adapté à ' max') → logprob: -11.25039291381836
    4. ' max' → logprob: -15.75039291381836
    5. '   ' → logprob: -16.12539291381836
    6. '	c' → logprob: -18.62539291381836
    7. '```' → logprob: -19.37539291381836
    8. ' ' → logprob: -19.50039291381836
    9. '  ' → logprob: -19.50039291381836
    10. ')c' → logprob: -19.62539291381836

Token 59: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -12.875003814697266
    3. 'Num' → logprob: -15.500003814697266
    4. 'num' → logprob: -15.500003814697266
    5. ' _' → logprob: -16.125003814697266
    6. '_NUM' → logprob: -16.125003814697266
    7. '__' → logprob: -16.500003814697266
    8. '_nums' → logprob: -16.500003814697266
    9. '```' → logprob: -17.125003814697266
    10. '(_' → logprob: -17.250003814697266

Token 60: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011736786691471934
    2. ' =' → logprob: -6.751173496246338
    3. '<|end|>' → logprob: -13.626173973083496
    4. '_' → logprob: -14.501173973083496
    5. '=
' → logprob: -14.626173973083496
    6. '=max' → logprob: -14.876173973083496
    7. ' ' → logprob: -15.376173973083496
    8. ')' → logprob: -15.376173973083496
    9. '_=' → logprob: -15.626173973083496
    10. '==' → logprob: -16.12617301940918

Token 61: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04858816787600517
    2. ' c' → logprob: -3.048588275909424
    3. '   ' → logprob: -15.173587799072266
    4. '	c' → logprob: -15.798587799072266
    5. ' ' → logprob: -16.423587799072266
    6. ' ' → logprob: -16.798587799072266
    7. '  ' → logprob: -16.798587799072266
    8. ')c' → logprob: -17.423587799072266
    9. '_c' → logprob: -17.673587799072266
    10. 'с' → logprob: -18.048587799072266

Token 62: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012118533049942926
    2. 'max' → logprob: -9.875121116638184
    3. 'if' → logprob: -10.750121116638184
    4. '
' → logprob: -11.000121116638184
    5. '\n' → logprob: -11.250121116638184
    6. '#' → logprob: -12.000121116638184
    7. '```' → logprob: -12.625121116638184
    8. '\' → logprob: -13.375121116638184
    9. 'prin' → logprob: -13.750121116638184
    10. 'pr' → logprob: -14.000121116638184

Token 63: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013929695705883205
    2. 'if' → logprob: -9.375139236450195
    3. 'max' → logprob: -10.875139236450195
    4. '\n' → logprob: -12.125139236450195
    5. '```' → logprob: -12.125139236450195
    6. '
' → logprob: -12.500139236450195
    7. '#' → logprob: -12.500139236450195
    8. 'prin' → logprob: -12.625139236450195
    9. 'min' → logprob: -12.750139236450195
    10. '\' → logprob: -12.750139236450195

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4143373966217041
    2. '=' → logprob: -1.289337396621704
    3. '_' → logprob: -2.789337396621704
    4. 'print' → logprob: -6.539337158203125
    5. ')' → logprob: -7.789337158203125
    6. ' ' → logprob: -9.039337158203125
    7. 's' → logprob: -9.789337158203125
    8. '_result' → logprob: -9.914337158203125
    9. '_max' → logprob: -10.414337158203125
    10. ',' → logprob: -10.789337158203125

Token 65: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0673404261469841
    2. 'a' → logprob: -2.81734037399292
    3. ' max' → logprob: -5.81734037399292
    4. 'str' → logprob: -6.44234037399292
    5. 'sum' → logprob: -8.067340850830078
    6. 'f' → logprob: -8.567340850830078
    7. ' a' → logprob: -9.317340850830078
    8. 'min' → logprob: -9.817340850830078
    9. '(max' → logprob: -10.067340850830078
    10. 'abs' → logprob: -10.692340850830078

Token 66: 'a' (ID: 64)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04789092019200325
    2. 'a' → logprob: -3.4228909015655518
    3. ' max' → logprob: -4.297891139984131
    4. ' a' → logprob: -8.422890663146973
    5. 'str' → logprob: -9.547890663146973
    6. '(max' → logprob: -9.797890663146973
    7. 'min' → logprob: -10.172890663146973
    8. 'f' → logprob: -10.297890663146973
    9. '"' → logprob: -10.922890663146973
    10. 'abs' → logprob: -11.047890663146973

Token 67: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6491957902908325
    2. '+' → logprob: -1.0241957902908325
    3. ' if' → logprob: -2.274195671081543
    4. 'if' → logprob: -5.274195671081543
    5. '*' → logprob: -5.399195671081543
    6. '+b' → logprob: -6.024195671081543
    7. '>' → logprob: -6.649195671081543
    8. ',' → logprob: -7.274195671081543
    9. ' *' → logprob: -7.774195671081543
    10. '-' → logprob: -8.024195671081543

Token 68: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016037534922361374
    2. ' b' → logprob: -4.141037464141846
    3. ' ' → logprob: -13.266037940979004
    4. '   ' → logprob: -13.891037940979004
    5. '  ' → logprob: -15.266037940979004
    6. 'max' → logprob: -15.641037940979004
    7. '	b' → logprob: -16.141036987304688
    8. ' max' → logprob: -16.391036987304688
    9. ')' → logprob: -16.766036987304688
    10. '    ' → logprob: -17.391036987304688

Token 69: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.09003143012523651
    2. '+' → logprob: -2.465031385421753
    3. ')' → logprob: -7.215031623840332
    4. ' -' → logprob: -8.590031623840332
    5. '>' → logprob: -8.965031623840332
    6. ' >' → logprob: -10.715031623840332
    7. '+c' → logprob: -11.965031623840332
    8. '-' → logprob: -12.340031623840332
    9. ' )' → logprob: -13.215031623840332
    10. ' ' → logprob: -13.465031623840332

Token 70: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12694133818149567
    2. ' c' → logprob: -2.126941442489624
    3. ' max' → logprob: -12.251941680908203
    4. ' ' → logprob: -12.376941680908203
    5. 'max' → logprob: -12.626941680908203
    6. '  ' → logprob: -14.876941680908203
    7. '   ' → logprob: -15.251941680908203
    8. ')' → logprob: -15.251941680908203
    9. ')c' → logprob: -15.751941680908203
    10. '	c' → logprob: -16.001941680908203

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11636291444301605
    2. ' -' → logprob: -2.4913628101348877
    3. '-' → logprob: -3.6163628101348877
    4. ' )' → logprob: -8.991362571716309
    5. '-max' → logprob: -11.241362571716309
    6. ')-' → logprob: -11.491362571716309
    7. ' ' → logprob: -11.991362571716309
    8. 'max' → logprob: -11.991362571716309
    9. '>' → logprob: -12.991362571716309
    10. ' max' → logprob: -13.366362571716309

Token 72: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2827681303024292
    2. '-' → logprob: -1.4077681303024292
    3. '-max' → logprob: -6.657768249511719
    4. 'max' → logprob: -8.282768249511719
    5. ' ' → logprob: -10.407768249511719
    6. ' max' → logprob: -10.657768249511719
    7. '"' → logprob: -12.032768249511719
    8. ')' → logprob: -12.032768249511719
    9. '```' → logprob: -12.532768249511719
    10. '-Max' → logprob: -13.657768249511719

Token 73: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.001170225441455841
    2. ' max' → logprob: -6.7511701583862305
    3. '	max' → logprob: -18.001171112060547
    4. '(max' → logprob: -18.001171112060547
    5. ' ' → logprob: -18.626171112060547
    6. '   ' → logprob: -19.626171112060547
    7. '_max' → logprob: -19.876171112060547
    8. '[max' → logprob: -20.126171112060547
    9. 'min' → logprob: -20.251171112060547
    10. '  ' → logprob: -20.501171112060547

Token 74: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -8.840432565193623e-05
    2. '_' → logprob: -9.375088691711426
    3. '_max' → logprob: -12.750088691711426
    4. ' _' → logprob: -15.750088691711426
    5. '__' → logprob: -16.12508773803711
    6. '_number' → logprob: -16.37508773803711
    7. '_nums' → logprob: -16.37508773803711
    8. '_n' → logprob: -16.75008773803711
    9. '_token' → logprob: -17.00008773803711
    10. '_NUM' → logprob: -17.12508773803711

Token 75: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01346183568239212
    2. '+' → logprob: -5.138462066650391
    3. '\n' → logprob: -5.513462066650391
    4. '
' → logprob: -6.513462066650391
    5. '*' → logprob: -6.763462066650391
    6. '\' → logprob: -8.63846206665039
    7. ' print' → logprob: -8.88846206665039
    8. '<|end|>' → logprob: -9.01346206665039
    9. '```' → logprob: -9.38846206665039
    10. '#' → logprob: -9.76346206665039

Token 76: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23017512261867523
    2. '1' → logprob: -1.7301751375198364
    3. ' max' → logprob: -4.355175018310547
    4. '(max' → logprob: -5.605175018310547
    5. ' ' → logprob: -5.855175018310547
    6. '"' → logprob: -6.230175018310547
    7. '0' → logprob: -6.230175018310547
    8. 'int' → logprob: -6.730175018310547
    9. '10' → logprob: -6.980175018310547
    10. '2' → logprob: -7.105175018310547

Token 77: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0356687493622303
    2. '_' → logprob: -3.4106688499450684
    3. '(' → logprob: -6.285668849945068
    4. '_max' → logprob: -10.16066837310791
    5. '_(' → logprob: -10.41066837310791
    6. 'num' → logprob: -10.53566837310791
    7. 'Num' → logprob: -11.16066837310791
    8. '(max' → logprob: -11.28566837310791
    9. '(num' → logprob: -11.91066837310791
    10. '(_' → logprob: -12.03566837310791

Token 78: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.17932084202766418
    2. '<|end|>' → logprob: -2.554320812225342
    3. '```' → logprob: -3.679320812225342
    4. '*' → logprob: -4.179320812225342
    5. '**' → logprob: -4.429320812225342
    6. '\' → logprob: -4.554320812225342
    7. ' ' → logprob: -5.554320812225342
    8. 'newline' → logprob: -5.804320812225342
    9. '2' → logprob: -6.054320812225342
    10. '\n' → logprob: -6.054320812225342

Token 79: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028319843113422394
    2. 'max' → logprob: -6.002831935882568
    3. '0' → logprob: -8.752832412719727
    4. 'a' → logprob: -10.127832412719727
    5. '3' → logprob: -10.377832412719727
    6. '10' → logprob: -10.627832412719727
    7. '1' → logprob: -10.752832412719727
    8. ' ' → logprob: -10.877832412719727
    9. '7' → logprob: -11.377832412719727
    10. '!' → logprob: -11.377832412719727

Token 80: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.045130304992198944
    2. 'max' → logprob: -3.1701302528381348
    3. 'a' → logprob: -7.795130252838135
    4. '3' → logprob: -7.795130252838135
    5. '0' → logprob: -7.920130252838135
    6. '10' → logprob: -8.170130729675293
    7. '7' → logprob: -8.295130729675293
    8. '100' → logprob: -8.920130729675293
    9. '1' → logprob: -9.295130729675293
    10. '(max' → logprob: -9.795130729675293

Token 81: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004026673559565097
    2. '<|end|>' → logprob: -8.750402450561523
    3. '
' → logprob: -9.000402450561523
    4. ' print' → logprob: -10.000402450561523
    5. '```' → logprob: -10.125402450561523
    6. '#' → logprob: -11.500402450561523
    7. ')' → logprob: -12.000402450561523
    8. '.print' → logprob: -12.250402450561523
    9. '(print' → logprob: -12.750402450561523
    10. '\' → logprob: -13.375402450561523

Token 82: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.8126592193730175e-05
    2. '```' → logprob: -10.2500581741333
    3. ' print' → logprob: -11.2500581741333
    4. '\n' → logprob: -12.8750581741333
    5. '
' → logprob: -13.1250581741333
    6. '#' → logprob: -13.2500581741333
    7. '\' → logprob: -14.2500581741333
    8. '<|end|>' → logprob: -14.3750581741333
    9. ')' → logprob: -14.8750581741333
    10. '#print' → logprob: -15.0000581741333

Token 83: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20148809254169464
    2. '(result' → logprob: -1.7014881372451782
    3. '(max' → logprob: -9.951488494873047
    4. '()' → logprob: -11.326488494873047
    5. '((' → logprob: -12.451488494873047
    6. 'result' → logprob: -12.701488494873047
    7. '('' → logprob: -13.076488494873047
    8. '("("' → logprob: -13.201488494873047
    9. ' (' → logprob: -13.451488494873047
    10. '(
' → logprob: -14.576488494873047

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.125000953674316
    3. '))' → logprob: -15.125000953674316
    4. ')`' → logprob: -17.000001907348633
    5. ')
' → logprob: -18.375001907348633
    6. '(' → logprob: -18.500001907348633
    7. '）' → logprob: -19.125001907348633
    8. '()' → logprob: -19.250001907348633
    9. '')' → logprob: -19.375001907348633
    10. '`)' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 82
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 35.37%
Précision adaptée (1ère position): 35.37%
Précision (top 10): 80.49%
================================================================================
