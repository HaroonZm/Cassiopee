================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lecture de deux entiers n et k à partir de l'entrée standard (input)
# La fonction input() lit une ligne de texte depuis l'entrée standard.
# La fonction split() divise cette ligne en morceaux (basés sur les espaces).
# La fonction map(int, ...) applique int à chaque morceau pour les convertir en entier.
n, k = map(int, input().split())

# Lecture de trois entiers R, S et P sur une autre ligne de l'entrée standard.
# Même processus que ci-dessus : lire la ligne, découper et convertir en entiers.
R, S, P = map(int, input().split())

# Lecture d'une chaîne de caractères t via input(), qui représente les coups de l'adversaire.
t = input()

# Initialisation d'une variable entière ans à 0. 
# Cette variable stockera le score total accumulé pendant le jeu.
ans = 0

# Initialisation d'une liste win vide.
# Cette liste contiendra, pour chaque coup de l'adversaire, le coup choisi pour gagner.
win = []

# Boucle for itérant sur chaque caractère tt de la chaîne t.
for tt in t:
    # Si le coup de l'adversaire est 'r' (pierre) :
    if tt == 'r':
        # Ajout de 'p' (papier) à la liste win, car le papier bat la pierre.
        win += 'p'
        # Ajout à ans du score associé à battre la pierre (P).
        ans += P
    # Si le coup de l'adversaire est 's' (ciseaux) :
    elif tt == 's':
        # Ajout de 'r' (pierre) à la liste win, car la pierre bat les ciseaux.
        win += 'r'
        # Ajout à ans du score associé à battre les ciseaux (R).
        ans += R
    # Si le coup de l'adversaire n'est ni 'r' ni 's', on suppose que c'est 'p' (papier) :
    else:
        # Ajout de 's' (ciseaux) à la liste win, car les ciseaux battent le papier.
        win += 's'
        # Ajout à ans du score associé à battre le papier (S).
        ans += S

# Début d'une boucle for sur i allant de 0 à k-1 (i.e., range(k)).
for i in range(k):
    # Construction d'une sous-liste l.
    # l commence à l'index i et prend ensuite chaque k-ème élément de la liste win.
    # win[i::k] signifie : partir de l, avancer de k à chaque fois.
    l = win[i::k]
    # Pour chaque index j de 1 à la longueur de l (exclus), c'est-à-dire à partir du deuxième élément de l :
    for j in range(1, len(l)):
        # Si le coup choisi à la position j est le même que celui à la position précédente (j-1) :
        if l[j] == l[j-1]:
            # On annule le score de ce coup car on ne peut pas jouer deux fois le même coup consécutivement dans la même série modulo k.
            if l[j] == 'p':
                ans -= P  # On enlève le score du papier
            elif l[j] == 'r':
                ans -= R  # On enlève le score de la pierre
            else:
                ans -= S  # On enlève le score des ciseaux
            # Enfin, on remplace ce coup par 'z' (un caractère impossible lors du jeu) pour éviter de pénaliser à nouveau lors d'autres vérifications.
            l[j] = 'z'

# Affichage du score total calculé.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lecture' (ID: 106534)
  → Token d'amorce (pas de prédiction)

Token 2: ' de' (ID: 334)
  → Token d'amorce (pas de prédiction)

Token 3: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7489266395568848
    2. ' fichier' → logprob: -0.8739266395568848
    3. 'f' → logprob: -2.4989266395568848
    4. ' fichiers' → logprob: -4.248926639556885
    5. 's' → logprob: -4.873926639556885
    6. ' f' → logprob: -5.748926639556885
    7. 'l' → logprob: -6.998926639556885
    8. 'd' → logprob: -7.873926639556885
    9. ' données' → logprob: -8.123926162719727
    10. ' l' → logprob: -9.123926162719727

Token 4: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0627879649400711
    2. '_' → logprob: -3.5627880096435547
    3. ' espaces' → logprob: -4.437788009643555
    4. 's' → logprob: -5.562788009643555
    5. 'space' → logprob: -5.937788009643555
    6. ' ' → logprob: -6.312788009643555
    7. ' _' → logprob: -6.562788009643555
    8. 'l' → logprob: -6.812788009643555
    9. 'esp' → logprob: -7.187788009643555
    10. ' \' → logprob: -7.187788009643555

Token 5: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7548559308052063
    2. 'iers' → logprob: -0.7548559308052063
    3. 'ières' → logprob: -3.6298558712005615
    4. 'ités' → logprob: -4.004856109619141
    5. 'i' → logprob: -5.379856109619141
    6. 't' → logprob: -5.629856109619141
    7. 'êtes' → logprob: -6.504856109619141
    8. 'ri' → logprob: -6.629856109619141
    9. 'ité' → logprob: -6.754856109619141
    10. 'it' → logprob: -7.129856109619141

Token 6: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3067467212677002
    2. 'n' → logprob: -1.6817467212677002
    3. 'x' → logprob: -2.9317467212677
    4. 'e' → logprob: -4.806746482849121
    5. '\n' → logprob: -5.056746482849121
    6. 'i' → logprob: -5.306746482849121
    7. ':' → logprob: -6.931746482849121
    8. ',' → logprob: -7.181746482849121
    9. 's' → logprob: -7.306746482849121
    10. '\' → logprob: -7.306746482849121

Token 7: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3997008204460144
    2. 's' → logprob: -1.7747008800506592
    3. ' ,' → logprob: -3.399700880050659
    4. '_' → logprob: -3.524700880050659
    5. ' ' → logprob: -3.524700880050659
    6. '=' → logprob: -3.899700880050659
    7. ' =' → logprob: -3.899700880050659
    8. 'e' → logprob: -5.02470064163208
    9. 'u' → logprob: -5.14970064163208
    10. ''' → logprob: -5.89970064163208

Token 8: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.04356233775615692
    2. 'm' → logprob: -3.918562412261963
    3. ' ' → logprob: -4.418562412261963
    4. ' p' → logprob: -4.668562412261963
    5. ' un' → logprob: -7.668562412261963
    6. 'p' → logprob: -8.793561935424805
    7. ' b' → logprob: -8.918561935424805
    8. ' n' → logprob: -9.043561935424805
    9. '  ' → logprob: -9.918561935424805
    10. ' d' → logprob: -10.168561935424805

Token 9: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008133203955367208
    2. '\n' → logprob: -7.2508134841918945
    3. '```' → logprob: -9.375813484191895
    4. '``' → logprob: -11.750813484191895
    5. ' n' → logprob: -12.250813484191895
    6. '\' → logprob: -12.875813484191895
    7. 'x' → logprob: -13.375813484191895
    8. ',' → logprob: -14.250813484191895
    9. '`' → logprob: -15.125813484191895
    10. '_n' → logprob: -15.750813484191895

Token 10: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.9647216200828552
    2. 'su' → logprob: -1.2147216796875
    3. ' partir' → logprob: -1.7147216796875
    4. 'la' → logprob: -3.4647216796875
    5. 'l' → logprob: -3.5897216796875
    6. 'contin' → logprob: -4.4647216796875
    7. 'entrée' → logprob: -5.0897216796875
    8. 'entr' → logprob: -5.0897216796875
    9. 'stdin' → logprob: -5.8397216796875
    10. '```' → logprob: -5.8397216796875

Token 11: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2344089150428772
    2. ' de' → logprob: -2.3594088554382324
    3. ' du' → logprob: -2.4844088554382324
    4. 'd' → logprob: -3.7344088554382324
    5. 'du' → logprob: -5.484408855438232
    6. 'de' → logprob: -6.859408855438232
    7. ' des' → logprob: -7.484408855438232
    8. '_' → logprob: -8.48440933227539
    9. 's' → logprob: -8.73440933227539
    10. 'del' → logprob: -8.73440933227539

Token 12: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2734336256980896
    2. 'input' → logprob: -2.0234336853027344
    3. ' input' → logprob: -2.7734336853027344
    4. ' l' → logprob: -3.8984336853027344
    5. 'f' → logprob: -5.398433685302734
    6. 'la' → logprob: -5.648433685302734
    7. '```' → logprob: -5.648433685302734
    8. '_' → logprob: -5.898433685302734
    9. '#' → logprob: -6.523433685302734
    10. ' la' → logprob: -6.648433685302734

Token 13: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7648553848266602
    2. 'n' → logprob: -1.3898553848266602
    3. 'i' → logprob: -2.38985538482666
    4. ''' → logprob: -3.26485538482666
    5. ',' → logprob: -3.26485538482666
    6. 'igne' → logprob: -3.63985538482666
    7. 'a' → logprob: -4.13985538482666
    8. ' =' → logprob: -4.51485538482666
    9. 'u' → logprob: -4.88985538482666
    10. '`' → logprob: -5.01485538482666

Token 14: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019282822031527758
    2. '```' → logprob: -7.001928329467773
    3. '\n' → logprob: -7.501928329467773
    4. ' n' → logprob: -8.626928329467773
    5. '``' → logprob: -9.126928329467773
    6. 'x' → logprob: -9.251928329467773
    7. 'a' → logprob: -10.501928329467773
    8. '`' → logprob: -10.626928329467773
    9. '\' → logprob: -11.876928329467773
    10. ',' → logprob: -12.751928329467773

Token 15: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006402421277016401
    2. '```' → logprob: -7.500640392303467
    3. '\n' → logprob: -9.625639915466309
    4. '``' → logprob: -11.000639915466309
    5. ',' → logprob: -13.375639915466309
    6. '`' → logprob: -13.375639915466309
    7. '\' → logprob: -14.125639915466309
    8. '#' → logprob: -16.125640869140625
    9. 'x' → logprob: -16.250640869140625
    10. ' n' → logprob: -16.375640869140625

Token 16: 'input' (ID: 2586)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16208863258361816
    2. ')' → logprob: -1.9120886325836182
    3. ')n' → logprob: -6.787088394165039
    4. ' n' → logprob: -8.037088394165039
    5. ' )' → logprob: -9.287088394165039
    6. '`)' → logprob: -9.537088394165039
    7. ',' → logprob: -9.662088394165039
    8. '')' → logprob: -10.537088394165039
    9. '):' → logprob: -10.787088394165039
    10. ',n' → logprob: -10.912088394165039

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003297440707683563
    2. 's' → logprob: -9.625329971313477
    3. '`)' → logprob: -9.750329971313477
    4. '):' → logprob: -10.125329971313477
    5. ')
' → logprob: -10.375329971313477
    6. '')' → logprob: -10.375329971313477
    7. ' )' → logprob: -10.625329971313477
    8. '```' → logprob: -10.750329971313477
    9. 'n' → logprob: -10.875329971313477
    10. ')`' → logprob: -12.000329971313477

Token 18: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.893480243277736e-05
    2. '```' → logprob: -10.500039100646973
    3. '\n' → logprob: -11.625039100646973
    4. ',' → logprob: -13.875039100646973
    5. '\' → logprob: -14.875039100646973
    6. '``' → logprob: -15.125039100646973
    7. 'x' → logprob: -15.625039100646973
    8. ' n' → logprob: -15.750039100646973
    9. '#' → logprob: -16.000038146972656
    10. 'i' → logprob: -16.250038146972656

Token 19: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001038883114233613
    2. ' n' → logprob: -6.876039028167725
    3. '```' → logprob: -12.251038551330566
    4. '\n' → logprob: -14.376038551330566
    5. 'import' → logprob: -15.251038551330566
    6. ' ```' → logprob: -16.126039505004883
    7. '``' → logprob: -16.501039505004883
    8. ' 
' → logprob: -16.501039505004883
    9. '\' → logprob: -17.126039505004883
    10. ' ' → logprob: -17.251039505004883

Token 20: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7077309489250183
    2. ' n' → logprob: -1.457731008529663
    3. 'n' → logprob: -2.082731008529663
    4. 's' → logprob: -2.207731008529663
    5. ' ' → logprob: -5.082730770111084
    6. ' =' → logprob: -5.457730770111084
    7. ' #' → logprob: -5.457730770111084
    8. 'i' → logprob: -5.832730770111084
    9. ' i' → logprob: -5.832730770111084
    10. '_' → logprob: -5.957730770111084

Token 21: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6618790626525879
    2. 'def' → logprob: -0.9118790626525879
    3. 'input' → logprob: -2.661879062652588
    4. ' def' → logprob: -4.536879062652588
    5. ' int' → logprob: -6.661879062652588
    6. 'int' → logprob: -8.78687858581543
    7. 'read' → logprob: -9.78687858581543
    8. ' read' → logprob: -9.78687858581543
    9. ' `' → logprob: -10.16187858581543
    10. 'range' → logprob: -10.28687858581543

Token 22: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42990270256996155
    2. '()' → logprob: -1.0549026727676392
    3. '(
' → logprob: -8.804903030395508
    4. ')' → logprob: -8.929903030395508
    5. 's' → logprob: -8.929903030395508
    6. ' (' → logprob: -9.054903030395508
    7. '('' → logprob: -9.179903030395508
    8. ' ()' → logprob: -9.179903030395508
    9. '=' → logprob: -9.429903030395508
    10. '("' → logprob: -9.679903030395508

Token 23: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02041330374777317
    2. ' (' → logprob: -5.020413398742676
    3. '()' → logprob: -5.145413398742676
    4. ')' → logprob: -6.270413398742676
    5. 's' → logprob: -6.770413398742676
    6. '(
' → logprob: -6.895413398742676
    7. '#' → logprob: -7.145413398742676
    8. '('' → logprob: -7.520413398742676
    9. '<|end|>' → logprob: -7.520413398742676
    10. ' ' → logprob: -7.770413398742676

Token 24: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2981598675251007
    2. ' ' → logprob: -1.7981598377227783
    3. ' la' → logprob: -3.2981598377227783
    4. '()' → logprob: -3.7981598377227783
    5. ' un' → logprob: -4.923160076141357
    6. ' l' → logprob: -4.923160076141357
    7. 'une' → logprob: -5.298160076141357
    8. '  ' → logprob: -5.423160076141357
    9. ''une' → logprob: -6.673160076141357
    10. ' a' → logprob: -7.048160076141357

Token 25: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6451468467712402
    2. ' ligne' → logprob: -0.7701468467712402
    3. ' chaîne' → logprob: -4.89514684677124
    4. 'ligne' → logprob: -6.02014684677124
    5. ' seule' → logprob: -7.39514684677124
    6. ' chaine' → logprob: -7.89514684677124
    7. 'l' → logprob: -8.520147323608398
    8. '()' → logprob: -8.645147323608398
    9. 'chaine' → logprob: -8.645147323608398
    10. ' line' → logprob: -8.645147323608398

Token 26: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40435612201690674
    2. ',' → logprob: -1.5293561220169067
    3. 's' → logprob: -3.154356002807617
    4. ' =' → logprob: -4.279356002807617
    5. '[' → logprob: -4.904356002807617
    6. 'e' → logprob: -5.029356002807617
    7. ' n' → logprob: -5.029356002807617
    8. '(' → logprob: -5.154356002807617
    9. 'x' → logprob: -5.154356002807617
    10. 'a' → logprob: -5.529356002807617

Token 27: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.6440144777297974
    2. 'code' → logprob: -1.0190144777297974
    3. ' texte' → logprob: -2.644014358520508
    4. ' code' → logprob: -3.894014358520508
    5. 'l' → logprob: -4.769014358520508
    6. 'entrée' → logprob: -5.144014358520508
    7. ' l' → logprob: -6.394014358520508
    8. 'input' → logprob: -6.769014358520508
    9. 'text' → logprob: -7.019014358520508
    10. '#' → logprob: -7.519014358520508

Token 28: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01706535369157791
    2. ',' → logprob: -4.267065525054932
    3. 'x' → logprob: -7.142065525054932
    4. '#' → logprob: -8.267065048217773
    5. ' ' → logprob: -8.517065048217773
    6. 'i' → logprob: -8.642065048217773
    7. ')' → logprob: -8.892065048217773
    8. 'e' → logprob: -8.892065048217773
    9. '[' → logprob: -8.892065048217773
    10. '.' → logprob: -9.017065048217773

Token 29: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4879770278930664
    2. 'l' → logprob: -0.9879770278930664
    3. ' input' → logprob: -4.612977027893066
    4. ' standard' → logprob: -6.612977027893066
    5. 'input' → logprob: -6.737977027893066
    6. ' stdin' → logprob: -7.737977027893066
    7. ' la' → logprob: -8.362977027893066
    8. ' ' → logprob: -8.612977027893066
    9. '	l' → logprob: -8.862977027893066
    10. 'standard' → logprob: -9.612977027893066

Token 30: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.2490967959165573
    2. ''' → logprob: -1.7490967512130737
    3. 'a' → logprob: -3.7490968704223633
    4. ''a' → logprob: -5.124096870422363
    5. 'entrée' → logprob: -5.124096870422363
    6. ''ent' → logprob: -5.999096870422363
    7. 'input' → logprob: -6.374096870422363
    8. ''#' → logprob: -6.624096870422363
    9. ''utilisateur' → logprob: -6.624096870422363
    10. 'e' → logprob: -6.999096870422363

Token 31: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03984607011079788
    2. ' n' → logprob: -4.164845943450928
    3. ',' → logprob: -4.414845943450928
    4. 's' → logprob: -5.289845943450928
    5. ' =' → logprob: -5.914845943450928
    6. '=' → logprob: -7.289845943450928
    7. ')' → logprob: -7.664845943450928
    8. ' ' → logprob: -7.789845943450928
    9. 'x' → logprob: -8.289846420288086
    10. ' ,' → logprob: -8.414846420288086

Token 32: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008735861047171056
    2. ',' → logprob: -7.500873565673828
    3. '```' → logprob: -9.000873565673828
    4. '`' → logprob: -9.500873565673828
    5. '\n' → logprob: -10.500873565673828
    6. ' n' → logprob: -11.250873565673828
    7. '#' → logprob: -11.375873565673828
    8. '\' → logprob: -11.625873565673828
    9. ':' → logprob: -12.000873565673828
    10. '(' → logprob: -12.125873565673828

Token 33: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4021237802808173e-05
    2. '```' → logprob: -11.875014305114746
    3. '\n' → logprob: -12.000014305114746
    4. '``' → logprob: -14.875014305114746
    5. '\' → logprob: -15.375014305114746
    6. ' n' → logprob: -16.62501335144043
    7. '`' → logprob: -17.00001335144043
    8. '
' → logprob: -17.50001335144043
    9. '[n' → logprob: -17.62501335144043
    10. ',n' → logprob: -18.00001335144043

Token 34: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.56233171664644e-05
    2. '\n' → logprob: -10.125055313110352
    3. ' n' → logprob: -11.500055313110352
    4. '```' → logprob: -12.875055313110352
    5. '\' → logprob: -13.375055313110352
    6. '
' → logprob: -15.250055313110352
    7. '``' → logprob: -15.750055313110352
    8. '[n' → logprob: -15.875055313110352
    9. '(n' → logprob: -16.37505531311035
    10. '`' → logprob: -16.62505531311035

Token 35: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8248659372329712
    2. ' n' → logprob: -0.9498659372329712
    3. '#' → logprob: -2.8248658180236816
    4. ' ligne' → logprob: -2.9498658180236816
    5. 'ligne' → logprob: -4.574865818023682
    6. ' #' → logprob: -4.949865818023682
    7. 'val' → logprob: -5.199865818023682
    8. 's' → logprob: -5.449865818023682
    9. ' line' → logprob: -5.574865818023682
    10. ' suite' → logprob: -5.574865818023682

Token 36: ' split' (ID: 12648)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.672505259513855
    2. ' input' → logprob: -0.922505259513855
    3. ' split' → logprob: -2.5475053787231445
    4. 'int' → logprob: -5.6725053787231445
    5. 'input' → logprob: -5.7975053787231445
    6. 'split' → logprob: -5.9225053787231445
    7. ' map' → logprob: -5.9225053787231445
    8. ' n' → logprob: -7.1725053787231445
    9. ' list' → logprob: -8.172505378723145
    10. ' s' → logprob: -8.547505378723145

Token 37: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.052386898547410965
    2. '(' → logprob: -3.052386999130249
    3. '('' → logprob: -5.67738676071167
    4. '().' → logprob: -9.052387237548828
    5. ' ()' → logprob: -9.677387237548828
    6. '("' → logprob: -9.802387237548828
    7. '("("' → logprob: -9.927387237548828
    8. '()]' → logprob: -11.427387237548828
    9. '(
' → logprob: -11.802387237548828
    10. '(),' → logprob: -11.802387237548828

Token 38: ' div' (ID: 4223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018619736656546593
    2. '(' → logprob: -4.893619537353516
    3. ' ()' → logprob: -5.518619537353516
    4. '().' → logprob: -5.768619537353516
    5. 'split' → logprob: -6.768619537353516
    6. ' (' → logprob: -7.893619537353516
    7. ' split' → logprob: -7.893619537353516
    8. '.split' → logprob: -8.143619537353516
    9. '('' → logprob: -8.518619537353516
    10. 'spl' → logprob: -8.768619537353516

Token 39: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.06030380725860596
    2. '()' → logprob: -3.1853036880493164
    3. 'ide' → logprob: -4.185303688049316
    4. 'ert' → logprob: -7.185303688049316
    5. 'erse' → logprob: -7.935303688049316
    6. '#' → logprob: -8.810303688049316
    7. 'er' → logprob: -9.310303688049316
    8. 'e' → logprob: -9.560303688049316
    9. '(' → logprob: -9.560303688049316
    10. '=' → logprob: -9.810303688049316

Token 40: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7321677803993225
    2. ' la' → logprob: -1.3571677207946777
    3. '('' → logprob: -1.9821677207946777
    4. 'la' → logprob: -2.3571677207946777
    5. '(' → logprob: -4.857167720794678
    6. ' ' → logprob: -5.232167720794678
    7. 'l' → logprob: -5.732167720794678
    8. ' ()' → logprob: -6.107167720794678
    9. ''' → logprob: -6.482167720794678
    10. ' (' → logprob: -6.732167720794678

Token 41: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5479368567466736
    2. ' chaîne' → logprob: -1.0479369163513184
    3. ' ' → logprob: -3.6729369163513184
    4. ' string' → logprob: -4.547936916351318
    5. 'chaine' → logprob: -4.547936916351318
    6. ' chaine' → logprob: -4.547936916351318
    7. 'ligne' → logprob: -4.547936916351318
    8. ' phrase' → logprob: -7.547936916351318
    9. ' line' → logprob: -7.797936916351318
    10. 'string' → logprob: -8.29793643951416

Token 42: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9369173645973206
    2. ' )' → logprob: -2.061917304992676
    3. '()' → logprob: -2.186917304992676
    4. ' des' → logprob: -2.311917304992676
    5. ')' → logprob: -2.936917304992676
    6. '[]' → logprob: -3.561917304992676
    7. 's' → logprob: -3.811917304992676
    8. ' en' → logprob: -3.936917304992676
    9. ' par' → logprob: -4.061917304992676
    10. ' de' → logprob: -4.436917304992676

Token 43: ' morceaux' (ID: 133321)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.8455497622489929
    2. ' des' → logprob: -1.7205498218536377
    3. ' une' → logprob: -1.8455498218536377
    4. 'tokens' → logprob: -2.7205498218536377
    5. ' ['' → logprob: -2.8455498218536377
    6. '["' → logprob: -3.4705498218536377
    7. 'une' → logprob: -3.8455498218536377
    8. ' tokens' → logprob: -4.095549583435059
    9. 'des' → logprob: -4.595549583435059
    10. '```' → logprob: -5.220549583435059

Token 44: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001147837145254016
    2. '(' → logprob: -8.001148223876953
    3. '[' → logprob: -8.501148223876953
    4. ',' → logprob: -9.251148223876953
    5. '(n' → logprob: -9.626148223876953
    6. 's' → logprob: -9.751148223876953
    7. ' n' → logprob: -9.876148223876953
    8. ')' → logprob: -9.876148223876953
    9. '```' → logprob: -9.876148223876953
    10. '.' → logprob: -10.251148223876953

Token 45: 'bas' (ID: 15207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05675597861409187
    2. ' )' → logprob: -3.181756019592285
    3. 'au' → logprob: -5.181756019592285
    4. 'par' → logprob: -6.431756019592285
    5. 'sur' → logprob: -6.431756019592285
    6. ' sur' → logprob: -6.556756019592285
    7. ' au' → logprob: -6.806756019592285
    8. ' en' → logprob: -7.431756019592285
    9. ' par' → logprob: -7.556756019592285
    10. 'la' → logprob: -8.806756019592285

Token 46: 'és' (ID: 1756)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5167455673217773
    2. 'es' → logprob: -1.8917455673217773
    3. 's' → logprob: -2.0167455673217773
    4. 'sur' → logprob: -3.6417455673217773
    5. '#' → logprob: -4.016745567321777
    6. ']' → logprob: -4.141745567321777
    7. '[' → logprob: -4.766745567321777
    8. 'cules' → logprob: -5.016745567321777
    9. 'e' → logprob: -5.266745567321777
    10. 'de' → logprob: -5.391745567321777

Token 47: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.2267083078622818
    2. 'sur' → logprob: -1.6017082929611206
    3. '_sur' → logprob: -7.35170841217041
    4. ')' → logprob: -8.35170841217041
    5. '=' → logprob: -8.85170841217041
    6. 'Sur' → logprob: -8.97670841217041
    7. 's' → logprob: -10.10170841217041
    8. ' par' → logprob: -10.47670841217041
    9. '-sur' → logprob: -10.72670841217041
    10. ' )' → logprob: -10.72670841217041

Token 48: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9036694169044495
    2. ' l' → logprob: -1.1536693572998047
    3. ''' → logprob: -2.2786693572998047
    4. ' des' → logprob: -2.6536693572998047
    5. ''un' → logprob: -3.4036693572998047
    6. 'des' → logprob: -3.5286693572998047
    7. ' ' → logprob: -4.653669357299805
    8. 'un' → logprob: -4.778669357299805
    9. ''esp' → logprob: -5.153669357299805
    10. ''l' → logprob: -5.528669357299805

Token 49: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.038870058953762054
    2. 'esp' → logprob: -3.288870096206665
    3. ''esp' → logprob: -7.788869857788086
    4. 'es' → logprob: -8.913869857788086
    5. ' espace' → logprob: -9.413869857788086
    6. 'spaces' → logprob: -9.538869857788086
    7. ''espace' → logprob: -10.413869857788086
    8. ' esp' → logprob: -10.913869857788086
    9. ' espac' → logprob: -10.913869857788086
    10. ' ' → logprob: -10.913869857788086

Token 50: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014519019750878215
    2. ' )' → logprob: -7.1264519691467285
    3. '#' → logprob: -8.62645149230957
    4. ')#' → logprob: -8.87645149230957
    5. ').' → logprob: -9.37645149230957
    6. '`)' → logprob: -10.00145149230957
    7. '")' → logprob: -10.37645149230957
    8. '')' → logprob: -10.62645149230957
    9. 's' → logprob: -10.87645149230957
    10. ')n' → logprob: -11.00145149230957

Token 51: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014627386117354035
    2. '```' → logprob: -7.501462936401367
    3. '`' → logprob: -8.501462936401367
    4. '[' → logprob: -8.751462936401367
    5. ',' → logprob: -8.876462936401367
    6. ' n' → logprob: -9.251462936401367
    7. 'a' → logprob: -10.376462936401367
    8. '(' → logprob: -10.501462936401367
    9. 'tokens' → logprob: -10.501462936401367
    10. '[n' → logprob: -10.501462936401367

Token 52: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006210576975718141
    2. ' n' → logprob: -7.7506208419799805
    3. '```' → logprob: -9.87562084197998
    4. '[n' → logprob: -10.00062084197998
    5. '[' → logprob: -10.50062084197998
    6. '\n' → logprob: -11.12562084197998
    7. '(n' → logprob: -11.37562084197998
    8. '(' → logprob: -11.87562084197998
    9. '`' → logprob: -12.00062084197998
    10. ' (' → logprob: -12.37562084197998

Token 53: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07326223701238632
    2. ' n' → logprob: -2.6982622146606445
    3. '#' → logprob: -6.6982622146606445
    4. 's' → logprob: -7.1982622146606445
    5. 'a' → logprob: -7.8232622146606445
    6. 'ent' → logprob: -9.073262214660645
    7. ' #' → logprob: -9.323262214660645
    8. 'l' → logprob: -9.573262214660645
    9. ' code' → logprob: -10.073262214660645
    10. 'x' → logprob: -10.198262214660645

Token 54: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04914681613445282
    2. 'map' → logprob: -3.799146890640259
    3. ' strip' → logprob: -4.04914665222168
    4. 'strip' → logprob: -5.54914665222168
    5. ' int' → logprob: -6.42414665222168
    6. ' input' → logprob: -6.79914665222168
    7. ' split' → logprob: -7.54914665222168
    8. 'int' → logprob: -7.79914665222168
    9. 'split' → logprob: -8.42414665222168
    10. ' join' → logprob: -8.79914665222168

Token 55: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6382812857627869
    2. '(lambda' → logprob: -1.0132813453674316
    3. '(int' → logprob: -2.2632813453674316
    4. '(str' → logprob: -6.013281345367432
    5. '<|end|>' → logprob: -7.138281345367432
    6. '()' → logprob: -8.013280868530273
    7. '(None' → logprob: -8.638280868530273
    8. '<int' → logprob: -8.888280868530273
    9. '```' → logprob: -8.888280868530273
    10. '(
' → logprob: -9.513280868530273

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6337759494781494
    2. ')' → logprob: -0.7587759494781494
    3. ',)' → logprob: -7.63377571105957
    4. '<|end|>' → logprob: -8.25877571105957
    5. ' ,' → logprob: -9.13377571105957
    6. ' )' → logprob: -9.63377571105957
    7. ',int' → logprob: -10.13377571105957
    8. '),' → logprob: -10.25877571105957
    9. ',input' → logprob: -10.50877571105957
    10. ')#' → logprob: -11.13377571105957

Token 57: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.354681134223938
    2. ' input' → logprob: -1.229681134223938
    3. ')' → logprob: -5.229681015014648
    4. ' )' → logprob: -7.854681015014648
    5. '(input' → logprob: -8.354681015014648
    6. '...)' → logprob: -8.979681015014648
    7. '<input' → logprob: -10.354681015014648
    8. '[input' → logprob: -10.604681015014648
    9. '...' → logprob: -10.979681015014648
    10. '=input' → logprob: -11.854681015014648

Token 58: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19175846874713898
    2. '(' → logprob: -1.9417585134506226
    3. '(int' → logprob: -4.691758632659912
    4. '()' → logprob: -5.816758632659912
    5. '(n' → logprob: -5.941758632659912
    6. ' )' → logprob: -6.191758632659912
    7. '(input' → logprob: -6.191758632659912
    8. '(
' → logprob: -6.191758632659912
    9. 'input' → logprob: -6.941758632659912
    10. 'n' → logprob: -7.066758632659912

Token 59: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09426847845315933
    2. ' int' → logprob: -2.719268560409546
    3. '(int' → logprob: -4.469268321990967
    4. 'lambda' → logprob: -4.844268321990967
    5. ' ' → logprob: -6.719268321990967
    6. '(lambda' → logprob: -6.719268321990967
    7. ' lambda' → logprob: -7.219268321990967
    8. ' la' → logprob: -7.844268321990967
    9. '[int' → logprob: -7.969268321990967
    10. '=int' → logprob: -8.594268798828125

Token 60: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055301520973443985
    2. '()' → logprob: -3.1803014278411865
    3. ' à' → logprob: -5.555301666259766
    4. ' )' → logprob: -5.930301666259766
    5. '(' → logprob: -6.305301666259766
    6. ' sur' → logprob: -6.555301666259766
    7. 'sur' → logprob: -7.180301666259766
    8. ' aux' → logprob: -7.805301666259766
    9. '())' → logprob: -8.180301666259766
    10. 'aux' → logprob: -9.055301666259766

Token 61: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.19833865761756897
    2. 'cha' → logprob: -2.448338747024536
    3. ' each' → logprob: -3.448338747024536
    4. ' chacun' → logprob: -3.948338747024536
    5. ' chacune' → logprob: -4.073338508605957
    6. 'ch' → logprob: -4.698338508605957
    7. 'each' → logprob: -5.448338508605957
    8. 'l' → logprob: -5.948338508605957
    9. 'la' → logprob: -6.323338508605957
    10. ' la' → logprob: -6.573338508605957

Token 62: ' morceau' (ID: 160026)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.007826645858585835
    2. 'm' → logprob: -5.132826805114746
    3. ' morceau' → logprob: -7.257826805114746
    4. ' élément' → logprob: -7.507826805114746
    5. 'mot' → logprob: -8.632826805114746
    6. ')' → logprob: -8.882826805114746
    7. 'token' → logprob: -9.632826805114746
    8. 'part' → logprob: -9.882826805114746
    9. 'element' → logprob: -10.132826805114746
    10. 'él' → logprob: -10.757826805114746

Token 63: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2847142219543457
    2. 'n' → logprob: -1.6597142219543457
    3. ')' → logprob: -3.5347142219543457
    4. '(n' → logprob: -4.409714221954346
    5. '(
' → logprob: -5.034714221954346
    6. 's' → logprob: -5.284714221954346
    7. ',' → logprob: -6.534714221954346
    8. '#' → logprob: -8.034713745117188
    9. 'x' → logprob: -8.159713745117188
    10. ':' → logprob: -8.534713745117188

Token 64: ' les' (ID: 1341)
  Prédit: ' convertir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.04355878755450249
    2. 'convert' → logprob: -4.043558597564697
    3. ' transformer' → logprob: -4.793558597564697
    4. ' convert' → logprob: -5.543558597564697
    5. ' obtenir' → logprob: -5.668558597564697
    6. 'transform' → logprob: -6.043558597564697
    7. ' créer' → logprob: -6.168558597564697
    8. ' lire' → logprob: -6.543558597564697
    9. ' récupérer' → logprob: -6.543558597564697
    10. 'r' → logprob: -7.668558597564697

Token 65: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.04868002608418465
    2. ' transformer' → logprob: -3.548680067062378
    3. 'convert' → logprob: -5.298679828643799
    4. 'transform' → logprob: -5.673679828643799
    5. ' n' → logprob: -6.048679828643799
    6. ' convert' → logprob: -6.423679828643799
    7. 'n' → logprob: -6.798679828643799
    8. 'ent' → logprob: -6.798679828643799
    9. ' lire' → logprob: -7.173679828643799
    10. ' ent' → logprob: -7.673679828643799

Token 66: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.50319242477417
    2. '(n' → logprob: -1.50319242477417
    3. 'n' → logprob: -1.75319242477417
    4. '()' → logprob: -2.25319242477417
    5. ')' → logprob: -2.50319242477417
    6. 's' → logprob: -3.37819242477417
    7. ' en' → logprob: -3.50319242477417
    8. ' des' → logprob: -3.62819242477417
    9. ' n' → logprob: -3.87819242477417
    10. ',' → logprob: -4.12819242477417

Token 67: ' entier' (ID: 80473)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.6153480410575867
    2. 'ent' → logprob: -1.1153481006622314
    3. ' des' → logprob: -2.2403481006622314
    4. ' nombres' → logprob: -4.115347862243652
    5. ' entier' → logprob: -5.115347862243652
    6. ' integers' → logprob: -6.490347862243652
    7. ' un' → logprob: -8.240347862243652
    8. 'des' → logprob: -8.490347862243652
    9. 'inte' → logprob: -8.740347862243652
    10. ' une' → logprob: -8.990347862243652

Token 68: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00691085634753108
    2. ')' → logprob: -6.256910800933838
    3. ',' → logprob: -6.256910800933838
    4. ' n' → logprob: -7.006910800933838
    5. ':' → logprob: -7.506910800933838
    6. '(n' → logprob: -8.381911277770996
    7. '\n' → logprob: -8.506911277770996
    8. 's' → logprob: -8.631911277770996
    9. ')n' → logprob: -8.631911277770996
    10. '[' → logprob: -9.131911277770996

Token 69: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003756375052034855
    2. '(' → logprob: -6.753756523132324
    3. ' n' → logprob: -7.503756523132324
    4. '```' → logprob: -7.628756523132324
    5. ':' → logprob: -7.753756523132324
    6. '(n' → logprob: -8.253756523132324
    7. '\n' → logprob: -8.878756523132324
    8. '[' → logprob: -9.003756523132324
    9. ',' → logprob: -9.128756523132324
    10. ')' → logprob: -9.253756523132324

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005967661272734404
    2. ',k' → logprob: -5.130967617034912
    3. ' ,' → logprob: -10.38096809387207
    4. 'k' → logprob: -12.38096809387207
    5. ',n' → logprob: -13.25596809387207
    6. ',K' → logprob: -14.88096809387207
    7. ',s' → logprob: -15.13096809387207
    8. ',
' → logprob: -15.75596809387207
    9. ',user' → logprob: -16.00596809387207
    10. ',int' → logprob: -16.13096809387207

Token 71: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.05495744198560715
    2. 'k' → logprob: -2.929957389831543
    3. ' ' → logprob: -9.554957389831543
    4. ' ' → logprob: -12.929957389831543
    5. ' к' → logprob: -14.804957389831543
    6. '	k' → logprob: -14.804957389831543
    7. '<|end|>' → logprob: -14.929957389831543
    8. ' ' → logprob: -15.554957389831543
    9. ' ‌' → logprob: -15.929957389831543
    10. '  ' → logprob: -16.30495834350586

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804803267121315
    2. '=' → logprob: -3.288048028945923
    3. ',' → logprob: -12.288047790527344
    4. ')' → logprob: -14.413047790527344
    5. '=input' → logprob: -14.538047790527344
    6. ' =
' → logprob: -14.913047790527344
    7. '=int' → logprob: -16.038047790527344
    8. ' ' → logprob: -16.163047790527344
    9. ')=' → logprob: -16.538047790527344
    10. ' =
' → logprob: -17.288047790527344

Token 73: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4740845859050751
    2. ' map' → logprob: -0.9740846157073975
    3. '	map' → logprob: -12.974084854125977
    4. 'list' → logprob: -13.224084854125977
    5. ' ' → logprob: -13.599084854125977
    6. ' ' → logprob: -14.349084854125977
    7. ' list' → logprob: -14.849084854125977
    8. 'm' → logprob: -14.849084854125977
    9. '  ' → logprob: -14.974084854125977
    10. '   ' → logprob: -15.224084854125977

Token 74: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022266218438744545
    2. '(' → logprob: -6.127226829528809
    3. '(lambda' → logprob: -10.377226829528809
    4. '<int' → logprob: -12.252226829528809
    5. ' (' → logprob: -13.502226829528809
    6. 'int' → logprob: -13.627226829528809
    7. '(input' → logprob: -14.002226829528809
    8. '(str' → logprob: -14.127226829528809
    9. '[int' → logprob: -14.252226829528809
    10. '(
' → logprob: -15.127226829528809

Token 75: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009477087296545506
    2. 'input' → logprob: -5.134477138519287
    3. '(' → logprob: -6.134477138519287
    4. ',input' → logprob: -7.009477138519287
    5. ' (' → logprob: -8.509476661682129
    6. ')' → logprob: -8.509476661682129
    7. ',' → logprob: -10.634476661682129
    8. ' input' → logprob: -10.634476661682129
    9. ')(' → logprob: -12.134476661682129
    10. '=input' → logprob: -12.384476661682129

Token 76: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024773201439529657
    2. ' input' → logprob: -6.002477169036865
    3. '(input' → logprob: -13.627477645874023
    4. ' ' → logprob: -16.002477645874023
    5. '<input' → logprob: -16.502477645874023
    6. ')' → logprob: -16.877477645874023
    7. '[input' → logprob: -17.002477645874023
    8. '   ' → logprob: -17.127477645874023
    9. '	input' → logprob: -17.252477645874023
    10. '=input' → logprob: -17.627477645874023

Token 77: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.049493249505758286
    2. '()' → logprob: -3.4244933128356934
    3. '().' → logprob: -4.174493312835693
    4. ')' → logprob: -8.549492835998535
    5. '()))' → logprob: -9.424492835998535
    6. ' ())' → logprob: -10.549492835998535
    7. '()).' → logprob: -10.799492835998535
    8. '());' → logprob: -12.424492835998535
    9. '();)' → logprob: -12.799492835998535
    10. '(' → logprob: -13.049492835998535

Token 78: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.32523515378125e-05
    2. 'strip' → logprob: -9.750062942504883
    3. ' split' → logprob: -12.250062942504883
    4. '(split' → logprob: -17.000062942504883
    5. 'rstrip' → logprob: -17.250062942504883
    6. 'spl' → logprob: -18.250062942504883
    7. '.split' → logprob: -20.375062942504883
    8. ' strip' → logprob: -21.125062942504883
    9. ')' → logprob: -21.250062942504883
    10. '_split' → logprob: -21.500062942504883

Token 79: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.017068274319171906
    2. '()' → logprob: -4.892068386077881
    3. '()))' → logprob: -5.267068386077881
    4. ')' → logprob: -5.517068386077881
    5. '))' → logprob: -8.642067909240723
    6. '(' → logprob: -10.142067909240723
    7. ' ())' → logprob: -11.142067909240723
    8. '())
' → logprob: -13.142067909240723
    9. '());' → logprob: -13.392067909240723
    10. '('' → logprob: -13.892067909240723

Token 80: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48669639229774475
    2. ' ' → logprob: -2.361696481704712
    3. 'n' → logprob: -2.986696481704712
    4. ')' → logprob: -3.111696481704712
    5. '\' → logprob: -3.861696481704712
    6. 'i' → logprob: -3.861696481704712
    7. 'a' → logprob: -3.986696481704712
    8. ',' → logprob: -3.986696481704712
    9. ':' → logprob: -4.361696243286133
    10. 'r' → logprob: -4.486696243286133

Token 81: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6159075498580933
    2. '#' → logprob: -1.4909075498580933
    3. ' #' → logprob: -3.240907669067383
    4. 'print' → logprob: -3.990907669067383
    5. 's' → logprob: -4.115907669067383
    6. 'i' → logprob: -4.115907669067383
    7. 'a' → logprob: -4.240907669067383
    8. 'for' → logprob: -4.240907669067383
    9. 'if' → logprob: -4.365907669067383
    10. 'n' → logprob: -4.490907669067383

Token 82: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23133321106433868
    2. '(' → logprob: -1.9813332557678223
    3. '(n' → logprob: -4.231333255767822
    4. 's' → logprob: -4.481333255767822
    5. ' des' → logprob: -4.606333255767822
    6. 'n' → logprob: -4.856333255767822
    7. '#' → logprob: -4.856333255767822
    8. 'des' → logprob: -5.481333255767822
    9. ')' → logprob: -5.606333255767822
    10. '<|end|>' → logprob: -6.106333255767822

Token 83: ' trois' (ID: 25564)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3437047004699707
    2. ' n' → logprob: -1.5937047004699707
    3. ' l' → logprob: -3.8437047004699707
    4. 'la' → logprob: -4.218704700469971
    5. 'n' → logprob: -4.593704700469971
    6. ' m' → logprob: -4.968704700469971
    7. ' ' → logprob: -5.218704700469971
    8. ' lst' → logprob: -5.218704700469971
    9. 'a' → logprob: -5.468704700469971
    10. 'l' → logprob: -5.718704700469971

Token 84: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.025306198745965958
    2. 'ent' → logprob: -3.775306224822998
    3. ' integers' → logprob: -7.150306224822998
    4. 'n' → logprob: -8.02530574798584
    5. '_ent' → logprob: -8.65030574798584
    6. '<|end|>' → logprob: -8.65030574798584
    7. ' entier' → logprob: -9.15030574798584
    8. ' nombres' → logprob: -9.27530574798584
    9. ' ' → logprob: -9.27530574798584
    10. '	ent' → logprob: -9.77530574798584

Token 85: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.005014224909245968
    2. 'ier' → logprob: -6.005014419555664
    3. 'ières' → logprob: -6.630014419555664
    4. 'i' → logprob: -6.880014419555664
    5. 'ière' → logprob: -9.505014419555664
    6. 's' → logprob: -9.880014419555664
    7. 'er' → logprob: -11.380014419555664
    8. 'ers' → logprob: -11.505014419555664
    9. '```' → logprob: -11.505014419555664
    10. 'e' → logprob: -11.755014419555664

Token 86: ' R' (ID: 460)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.618190586566925
    2. ' a' → logprob: -0.868190586566925
    3. 'n' → logprob: -3.8681905269622803
    4. ' n' → logprob: -4.618190765380859
    5. ',' → logprob: -5.868190765380859
    6. ' ,' → logprob: -6.618190765380859
    7. 'm' → logprob: -6.868190765380859
    8. 'r' → logprob: -7.118190765380859
    9. 'x' → logprob: -7.118190765380859
    10. ',a' → logprob: -7.368190765380859

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006604921072721481
    2. 'a' → logprob: -8.12566089630127
    3. ' ,' → logprob: -8.62566089630127
    4. 's' → logprob: -10.00066089630127
    5. ' =' → logprob: -10.62566089630127
    6. 't' → logprob: -11.37566089630127
    7. 'u' → logprob: -11.75066089630127
    8. '=' → logprob: -11.75066089630127
    9. ',a' → logprob: -11.87566089630127
    10. '1' → logprob: -12.12566089630127

Token 88: ' S' (ID: 336)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.7453449368476868
    2. ' G' → logprob: -1.120344877243042
    3. 'S' → logprob: -1.995344877243042
    4. ' S' → logprob: -3.120344877243042
    5. 'C' → logprob: -5.870345115661621
    6. 'B' → logprob: -6.370345115661621
    7. 'A' → logprob: -6.370345115661621
    8. 'D' → logprob: -6.620345115661621
    9. 'a' → logprob: -6.745345115661621
    10. ' C' → logprob: -6.745345115661621

Token 89: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004975094925612211
    2. ' ,' → logprob: -7.750497341156006
    3. '<|end|>' → logprob: -9.750497817993164
    4. ',k' → logprob: -13.000497817993164
    5. ' =' → logprob: -14.500497817993164
    6. ',n' → logprob: -14.500497817993164
    7. ',
' → logprob: -14.500497817993164
    8. ' ' → logprob: -14.625497817993164
    9. '<|end|>' → logprob: -14.875497817993164
    10. 't' → logprob: -14.875497817993164

Token 90: ' P' (ID: 398)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.7433423399925232
    2. 'P' → logprob: -0.8683423399925232
    3. 'D' → logprob: -3.493342399597168
    4. ' T' → logprob: -3.618342399597168
    5. ' P' → logprob: -4.368342399597168
    6. 'L' → logprob: -4.493342399597168
    7. 'Q' → logprob: -4.743342399597168
    8. 'K' → logprob: -5.368342399597168
    9. 'A' → logprob: -6.618342399597168
    10. ' D' → logprob: -6.868342399597168

Token 91: ' sur' (ID: 1512)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10104154795408249
    2. 'n' → logprob: -2.601041555404663
    3. 'R' → logprob: -4.601041316986084
    4. ' ,' → logprob: -5.226041316986084
    5. ' =' → logprob: -5.851041316986084
    6. '=' → logprob: -6.726041316986084
    7. 'r' → logprob: -6.851041316986084
    8. ',n' → logprob: -7.851041316986084
    9. ' n' → logprob: -7.976041316986084
    10. ',R' → logprob: -7.976041316986084

Token 92: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.15955178439617157
    2. ' une' → logprob: -2.1595518589019775
    3. ' input' → logprob: -3.9095518589019775
    4. 'la' → logprob: -5.284551620483398
    5. 'une' → logprob: -6.159551620483398
    6. 'l' → logprob: -6.409551620483398
    7. 'input' → logprob: -6.659551620483398
    8. ' ' → logprob: -7.534551620483398
    9. ' l' → logprob: -7.909551620483398
    10. '=input' → logprob: -7.909551620483398

Token 93: ' autre' (ID: 20278)
  Prédit: ' seule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -1.2940220832824707
    2. 'aut' → logprob: -1.4190220832824707
    3. 'ligne' → logprob: -1.6690220832824707
    4. ' autre' → logprob: -2.4190220832824707
    5. 'se' → logprob: -2.5440220832824707
    6. ' ligne' → logprob: -3.0440220832824707
    7. ' ' → logprob: -3.1690220832824707
    8. ' ' → logprob: -4.919022083282471
    9. '```' → logprob: -5.294022083282471
    10. ''autre' → logprob: -5.669022083282471

Token 94: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.8735710978507996
    2. ' line' → logprob: -0.9985710978507996
    3. ' ' → logprob: -2.3735711574554443
    4. ' input' → logprob: -3.3735711574554443
    5. 'ligne' → logprob: -3.6235711574554443
    6. 'line' → logprob: -3.8735711574554443
    7. '<|end|>' → logprob: -4.123570919036865
    8. 'input' → logprob: -5.123570919036865
    9. ' ' → logprob: -5.498570919036865
    10. 'l' → logprob: -6.248570919036865

Token 95: ' de' (ID: 334)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.060782451182603836
    2. 'r' → logprob: -3.4357824325561523
    3. '
' → logprob: -3.9357824325561523
    4. 'n' → logprob: -5.185782432556152
    5. '<|end|>' → logprob: -7.810782432556152
    6. '
' → logprob: -8.185782432556152
    7. '  
' → logprob: -8.435782432556152
    8. ' R' → logprob: -8.810782432556152
    9. ',R' → logprob: -8.935782432556152
    10. '#' → logprob: -9.060782432556152

Token 96: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3922605514526367
    2. 'input' → logprob: -1.1422605514526367
    3. 'l' → logprob: -5.517260551452637
    4. ' l' → logprob: -7.392260551452637
    5. '(input' → logprob: -8.642260551452637
    6. 'int' → logprob: -9.017260551452637
    7. '=input' → logprob: -9.267260551452637
    8. ' la' → logprob: -9.392260551452637
    9. ' ' → logprob: -9.517260551452637
    10. ' ' → logprob: -10.142260551452637

Token 97: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.2359299212694168
    2. ''entrée' → logprob: -1.6109299659729004
    3. 'input' → logprob: -4.7359299659729
    4. 'a' → logprob: -7.9859299659729
    5. '’entrée' → logprob: -8.110929489135742
    6. 'e' → logprob: -8.235929489135742
    7. '#' → logprob: -8.735929489135742
    8. 'ent' → logprob: -8.860929489135742
    9. ' entrée' → logprob: -8.860929489135742
    10. '```' → logprob: -9.235929489135742

Token 98: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1948758363723755
    2. '().' → logprob: -2.694875717163086
    3. '()
' → logprob: -3.569875717163086
    4. 'n' → logprob: -4.069875717163086
    5. 'standard' → logprob: -4.694875717163086
    6. ' =' → logprob: -4.819875717163086
    7. ')' → logprob: -4.944875717163086
    8. '(n' → logprob: -5.569875717163086
    9. '(
' → logprob: -5.569875717163086
    10. '=' → logprob: -5.819875717163086

Token 99: '.
' (ID: 558)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.039170101284980774
    2. '
' → logprob: -3.914170026779175
    3. 'r' → logprob: -4.039170265197754
    4. 'n' → logprob: -7.664170265197754
    5. '
' → logprob: -8.664170265197754
    6. '  
' → logprob: -9.539170265197754
    7. ' R' → logprob: -10.289170265197754
    8. '#' → logprob: -10.789170265197754
    9. '

' → logprob: -10.914170265197754
    10. ',' → logprob: -11.539170265197754

Token 100: '#' (ID: 2)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.1003565639257431
    2. 'r' → logprob: -2.3503565788269043
    3. 'n' → logprob: -9.225356101989746
    4. ' R' → logprob: -9.975356101989746
    5. '
' → logprob: -13.975356101989746
    6. ' r' → logprob: -13.975356101989746
    7. '```' → logprob: -14.600356101989746
    8. ' ' → logprob: -14.975356101989746
    9. 'rs' → logprob: -15.100356101989746
    10. '  
' → logprob: -15.100356101989746

Token 101: ' Même' (ID: 89628)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0015274790348485112
    2. 'r' → logprob: -6.501527309417725
    3. ' R' → logprob: -10.626527786254883
    4. '
' → logprob: -15.626527786254883
    5. 'P' → logprob: -16.126527786254883
    6. ' ' → logprob: -16.376527786254883
    7. '#' → logprob: -16.376527786254883
    8. 's' → logprob: -16.376527786254883
    9. '

' → logprob: -16.501527786254883
    10. 't' → logprob: -16.626527786254883

Token 102: ' processus' (ID: 49849)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5121368765830994
    2. 'R' → logprob: -1.0121369361877441
    3. 'ligne' → logprob: -4.012136936187744
    4. 'process' → logprob: -5.512136936187744
    5. 'princip' → logprob: -5.512136936187744
    6. ' principe' → logprob: -6.012136936187744
    7. 'line' → logprob: -6.137136936187744
    8. ' n' → logprob: -6.137136936187744
    9. ' R' → logprob: -6.512136936187744
    10. 'r' → logprob: -7.262136936187744

Token 103: ' que' (ID: 661)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.14762425422668457
    2. 'r' → logprob: -2.2726242542266846
    3. 'n' → logprob: -3.3976242542266846
    4. '
' → logprob: -7.7726240158081055
    5. ' R' → logprob: -8.397624015808105
    6. '  
' → logprob: -11.022624015808105
    7. ',' → logprob: -11.147624015808105
    8. '#' → logprob: -11.147624015808105
    9. ' n' → logprob: -11.647624015808105
    10. '
' → logprob: -12.147624015808105

Token 104: ' ci' (ID: 7405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6237892508506775
    2. 'R' → logprob: -0.9987892508506775
    3. ' n' → logprob: -2.9987893104553223
    4. 'r' → logprob: -4.123789310455322
    5. 'la' → logprob: -4.748789310455322
    6. ' la' → logprob: -4.998789310455322
    7. ' R' → logprob: -4.998789310455322
    8. 'map' → logprob: -5.373789310455322
    9. 'k' → logprob: -7.123789310455322
    10. '#' → logprob: -7.123789310455322

Token 105: '-dessus' (ID: 74812)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.015827767550945282
    2. 'n' → logprob: -4.890827655792236
    3. '-dessus' → logprob: -5.265827655792236
    4. '-dessous' → logprob: -7.265827655792236
    5. 'que' → logprob: -7.390827655792236
    6. '```' → logprob: -7.515827655792236
    7. 'r' → logprob: -8.265828132629395
    8. 'q' → logprob: -8.765828132629395
    9. 'rc' → logprob: -9.265828132629395
    10. '``' → logprob: -9.265828132629395

Token 106: ' :' (ID: 712)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0298821572214365
    2. 'r' → logprob: -3.5298821926116943
    3. '
' → logprob: -9.029882431030273
    4. ' R' → logprob: -12.779882431030273
    5. '
' → logprob: -12.779882431030273
    6. 'n' → logprob: -13.404882431030273
    7. '  
' → logprob: -13.779882431030273
    8. '#' → logprob: -14.154882431030273
    9. '

' → logprob: -14.529882431030273
    10. '```' → logprob: -14.654882431030273

Token 107: ' lire' (ID: 46082)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.006842418108135462
    2. 'r' → logprob: -5.131842613220215
    3. ' R' → logprob: -7.006842613220215
    4. ' r' → logprob: -13.131842613220215
    5. 'P' → logprob: -13.631842613220215
    6. 't' → logprob: -14.131842613220215
    7. ' ' → logprob: -14.506842613220215
    8. 's' → logprob: -14.631842613220215
    9. 'a' → logprob: -14.756842613220215
    10. '`' → logprob: -15.006842613220215

Token 108: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6221339106559753
    2. ' trois' → logprob: -1.4971339702606201
    3. 'R' → logprob: -1.9971339702606201
    4. ' n' → logprob: -2.62213397026062
    5. ' R' → logprob: -4.372133731842041
    6. 'r' → logprob: -5.247133731842041
    7. ' la' → logprob: -5.622133731842041
    8. 'une' → logprob: -6.122133731842041
    9. ' une' → logprob: -6.622133731842041
    10. ' three' → logprob: -6.747133731842041

Token 109: ' ligne' (ID: 19583)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5574375987052917
    2. 'ligne' → logprob: -1.4324376583099365
    3. 'R' → logprob: -2.5574376583099365
    4. 'map' → logprob: -2.9324376583099365
    5. 'm' → logprob: -4.432437419891357
    6. ' ligne' → logprob: -4.557437419891357
    7. 'line' → logprob: -4.682437419891357
    8. 'l' → logprob: -4.807437419891357
    9. ' line' → logprob: -5.932437419891357
    10. ' map' → logprob: -6.057437419891357

Token 110: ',' (ID: 11)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.14526620507240295
    2. 'r' → logprob: -2.39526629447937
    3. ',' → logprob: -3.77026629447937
    4. 'n' → logprob: -3.89526629447937
    5. ' R' → logprob: -8.02026653289795
    6. '#' → logprob: -8.77026653289795
    7. ',R' → logprob: -9.52026653289795
    8. ' ,' → logprob: -10.39526653289795
    9. ')' → logprob: -10.89526653289795
    10. ' =' → logprob: -11.52026653289795

Token 111: ' décou' (ID: 68302)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.027335045859217644
    2. 'r' → logprob: -4.027335166931152
    3. ' R' → logprob: -4.777335166931152
    4. ' puis' → logprob: -8.527335166931152
    5. 'p' → logprob: -8.652335166931152
    6. '#' → logprob: -9.402335166931152
    7. 'map' → logprob: -9.527335166931152
    8. ' r' → logprob: -10.277335166931152
    9. 'P' → logprob: -10.402335166931152
    10. 'apply' → logprob: -11.152335166931152

Token 112: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.002765175187960267
    2. 'pe' → logprob: -6.12776517868042
    3. 'page' → logprob: -7.50276517868042
    4. 'p' → logprob: -11.002764701843262
    5. 'pé' → logprob: -12.377764701843262
    6. ' per' → logprob: -13.002764701843262
    7. 'pez' → logprob: -13.377764701843262
    8. 'pper' → logprob: -14.627764701843262
    9. 'pa' → logprob: -15.002764701843262
    10. 'пер' → logprob: -15.127764701843262

Token 113: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33217093348503113
    2. 'R' → logprob: -1.8321709632873535
    3. 'n' → logprob: -3.9571709632873535
    4. 'en' → logprob: -3.9571709632873535
    5. '(R' → logprob: -4.0821709632873535
    6. 'r' → logprob: -4.2071709632873535
    7. '(),' → logprob: -4.4571709632873535
    8. ',R' → logprob: -4.7071709632873535
    9. ' ,' → logprob: -5.0821709632873535
    10. ')' → logprob: -5.0821709632873535

Token 114: ' convertir' (ID: 79223)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.1086286306381226
    2. ' map' → logprob: -1.3586286306381226
    3. 'convert' → logprob: -1.4836286306381226
    4. ' convertir' → logprob: -2.483628749847412
    5. ' convert' → logprob: -2.733628749847412
    6. ' n' → logprob: -4.608628749847412
    7. ' appliquer' → logprob: -4.858628749847412
    8. 'n' → logprob: -5.108628749847412
    9. 'apply' → logprob: -5.858628749847412
    10. ' les' → logprob: -5.983628749847412

Token 115: ' en' (ID: 469)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.16436266899108887
    2. 'n' → logprob: -2.539362668991089
    3. 'r' → logprob: -2.664362668991089
    4. ',' → logprob: -7.164362907409668
    5. ' =' → logprob: -7.289362907409668
    6. ' R' → logprob: -7.664362907409668
    7. ')' → logprob: -7.789362907409668
    8. '=' → logprob: -8.414362907409668
    9. ':' → logprob: -9.289362907409668
    10. '(R' → logprob: -9.664362907409668

Token 116: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.41072723269462585
    2. 'ent' → logprob: -1.1607272624969482
    3. 'ints' → logprob: -3.7857272624969482
    4. 'inte' → logprob: -7.410727024078369
    5. ' int' → logprob: -9.035727500915527
    6. ' ent' → logprob: -9.785727500915527
    7. 'n' → logprob: -10.160727500915527
    8. 'map' → logprob: -10.785727500915527
    9. 'ents' → logprob: -11.785727500915527
    10. 'intes' → logprob: -11.785727500915527

Token 117: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.14782293140888214
    2. 't' → logprob: -2.397822856903076
    3. 'ints' → logprob: -3.772822856903076
    4. 'ents' → logprob: -4.272822856903076
    5. 'ent' → logprob: -5.147822856903076
    6. 'ière' → logprob: -6.897822856903076
    7. 'tre' → logprob: -7.522822856903076
    8. 'ti' → logprob: -7.647822856903076
    9. 'fants' → logprob: -8.147823333740234
    10. 'n' → logprob: -8.522823333740234

Token 118: '.
' (ID: 558)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.02337813191115856
    2. 'r' → logprob: -3.7733781337738037
    3. '
' → logprob: -9.023378372192383
    4. ' R' → logprob: -12.398378372192383
    5. '
' → logprob: -12.523378372192383
    6. '

' → logprob: -13.773378372192383
    7. '`' → logprob: -14.648378372192383
    8. '#' → logprob: -14.773378372192383
    9. '  
' → logprob: -15.273378372192383
    10. '' → logprob: -15.398378372192383

Token 119: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.023277508094906807
    2. 'r' → logprob: -3.773277521133423
    3. ' R' → logprob: -10.398277282714844
    4. '`' → logprob: -15.023277282714844
    5. ' r' → logprob: -15.148277282714844
    6. 'x' → logprob: -15.898277282714844
    7. '```' → logprob: -16.023277282714844
    8. 'a' → logprob: -16.023277282714844
    9. 't' → logprob: -16.148277282714844
    10. ' ' → logprob: -16.523277282714844

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018530222587287426
    2. ',S' → logprob: -9.125185012817383
    3. ' ,' → logprob: -9.500185012817383
    4. 'S' → logprob: -14.375185012817383
    5. ',
' → logprob: -15.125185012817383
    6. ',s' → logprob: -15.375185012817383
    7. ',P' → logprob: -15.750185012817383
    8. '‌,' → logprob: -16.250185012817383
    9. ' S' → logprob: -17.125185012817383
    10. 's' → logprob: -17.125185012817383

Token 121: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.3134225606918335
    2. 'S' → logprob: -1.3134225606918335
    3. ' ' → logprob: -8.938422203063965
    4. ' ' → logprob: -10.563422203063965
    5. '  ' → logprob: -13.563422203063965
    6. ',' → logprob: -14.563422203063965
    7. ' ' → logprob: -14.563422203063965
    8. 's' → logprob: -14.813422203063965
    9. '<|end|>' → logprob: -15.438422203063965
    10. 'k' → logprob: -15.813422203063965

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020663968462031335
    2. ' ,' → logprob: -8.62520694732666
    3. ',P' → logprob: -10.87520694732666
    4. ',k' → logprob: -12.50020694732666
    5. 'P' → logprob: -12.87520694732666
    6. '=' → logprob: -14.00020694732666
    7. ' =' → logprob: -14.62520694732666
    8. 'k' → logprob: -16.000205993652344
    9. ' P' → logprob: -16.500205993652344
    10. ' ' → logprob: -16.625205993652344

Token 123: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.08895734697580338
    2. ' P' → logprob: -2.4639573097229004
    3. ' ' → logprob: -11.088957786560059
    4. ',' → logprob: -13.963957786560059
    5. '  ' → logprob: -14.588957786560059
    6. ' ' → logprob: -14.963957786560059
    7. 'p' → logprob: -15.088957786560059
    8. '=P' → logprob: -15.963957786560059
    9. '=' → logprob: -16.088956832885742
    10. '   ' → logprob: -16.338956832885742

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47426244616508484
    2. '=' → logprob: -0.9742624759674072
    3. ',' → logprob: -8.599262237548828
    4. ' ' → logprob: -14.224262237548828
    5. ')' → logprob: -15.849262237548828
    6. ' ,' → logprob: -15.849262237548828
    7. ' ' → logprob: -16.224262237548828
    8. '＝' → logprob: -16.849262237548828
    9. '```' → logprob: -17.974262237548828
    10. '>' → logprob: -18.099262237548828

Token 125: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.38687291741371155
    2. ' map' → logprob: -1.1368728876113892
    3. '	map' → logprob: -14.011873245239258
    4. ' ' → logprob: -14.886873245239258
    5. 'm' → logprob: -15.511873245239258
    6. ' ' → logprob: -15.511873245239258
    7. '(map' → logprob: -15.886873245239258
    8. '.map' → logprob: -17.136873245239258
    9. 'list' → logprob: -17.636873245239258
    10. '  ' → logprob: -18.011873245239258

Token 126: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.404745439183898e-05
    2. '(' → logprob: -10.87503433227539
    3. '<int' → logprob: -11.75003433227539
    4. 'int' → logprob: -12.25003433227539
    5. '[int' → logprob: -13.50003433227539
    6. '(
' → logprob: -14.87503433227539
    7. ' (' → logprob: -15.00003433227539
    8. ']int' → logprob: -15.62503433227539
    9. '=int' → logprob: -15.87503433227539
    10. ' int' → logprob: -16.87503433227539

Token 127: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2817375659942627
    2. ',' → logprob: -2.1567375659942627
    3. '(input' → logprob: -2.2817375659942627
    4. ',int' → logprob: -3.7817375659942627
    5. ',input' → logprob: -5.656737327575684
    6. 'int' → logprob: -7.781737327575684
    7. '(' → logprob: -8.031737327575684
    8. ')' → logprob: -8.656737327575684
    9. ' ,' → logprob: -8.906737327575684
    10. 'input' → logprob: -8.906737327575684

Token 128: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005316293332725763
    2. ' input' → logprob: -5.255316257476807
    3. 'int' → logprob: -9.755316734313965
    4. '(input' → logprob: -10.630316734313965
    5. ' int' → logprob: -16.63031578063965
    6. '=input' → logprob: -16.75531578063965
    7. '<input' → logprob: -17.25531578063965
    8. '(int' → logprob: -17.63031578063965
    9. ',input' → logprob: -17.63031578063965
    10. ')' → logprob: -17.75531578063965

Token 129: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0325924449716695e-05
    2. '()' → logprob: -11.50001049041748
    3. ' ().' → logprob: -17.000009536743164
    4. '()).' → logprob: -18.500009536743164
    5. '.' → logprob: -19.000009536743164
    6. '()
' → logprob: -19.125009536743164
    7. '(' → logprob: -19.375009536743164
    8. '()].' → logprob: -20.250009536743164
    9. '()?.' → logprob: -20.500009536743164
    10. ').' → logprob: -20.500009536743164

Token 130: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.250000953674316
    3. '(split' → logprob: -15.625000953674316
    4. 'spl' → logprob: -17.75
    5. '.split' → logprob: -18.375
    6. '```' → logprob: -18.75
    7. ')' → logprob: -18.75
    8. 'plit' → logprob: -19.0
    9. 'strip' → logprob: -19.125
    10. '().' → logprob: -20.0

Token 131: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007806657813489437
    2. ')' → logprob: -5.382806777954102
    3. '()' → logprob: -5.757806777954102
    4. '()))' → logprob: -11.632806777954102
    5. '())
' → logprob: -12.007806777954102
    6. ' ())' → logprob: -12.757806777954102
    7. '))' → logprob: -13.257806777954102
    8. '();)' → logprob: -13.757806777954102
    9. '());' → logprob: -14.257806777954102
    10. '().' → logprob: -14.257806777954102

Token 132: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5648487210273743
    2. '
' → logprob: -1.8148486614227295
    3. 'n' → logprob: -2.0648486614227295
    4. '\n' → logprob: -2.4398486614227295
    5. '<|end|>' → logprob: -3.5648486614227295
    6. '\' → logprob: -5.439848899841309
    7. 't' → logprob: -6.064848899841309
    8. '  
' → logprob: -6.189848899841309
    9. 'print' → logprob: -6.314848899841309
    10. '```' → logprob: -6.564848899841309

Token 133: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3558575212955475
    2. 'result' → logprob: -2.4808576107025146
    3. 'for' → logprob: -3.6058576107025146
    4. 'moves' → logprob: -3.7308576107025146
    5. 'def' → logprob: -3.8558576107025146
    6. 'total' → logprob: -4.9808573722839355
    7. 'a' → logprob: -4.9808573722839355
    8. 'A' → logprob: -4.9808573722839355
    9. 'choices' → logprob: -5.1058573722839355
    10. 'n' → logprob: -5.1058573722839355

Token 134: ' d' (ID: 272)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.8788779377937317
    2. '()' → logprob: -1.253877878189087
    3. 'd' → logprob: -1.878877878189087
    4. 'de' → logprob: -3.003877878189087
    5. '#' → logprob: -3.003877878189087
    6. ' des' → logprob: -4.628878116607666
    7. ' de' → logprob: -4.753878116607666
    8. 'n' → logprob: -5.003878116607666
    9. '(' → logprob: -5.378878116607666
    10. '(n' → logprob: -5.878878116607666

Token 135: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.26905786991119385
    2. ''une' → logprob: -2.3940577507019043
    3. '()' → logprob: -2.5190577507019043
    4. 'e' → logprob: -4.019057750701904
    5. 'a' → logprob: -4.269057750701904
    6. ' une' → logprob: -4.769057750701904
    7. 'es' → logprob: -4.894057750701904
    8. '(' → logprob: -5.769057750701904
    9. ' la' → logprob: -6.019057750701904
    10. 'eux' → logprob: -6.644057750701904

Token 136: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.10716288536787033
    2. ' chaîne' → logprob: -2.8571629524230957
    3. 'cha' → logprob: -4.482162952423096
    4. 'ligne' → logprob: -4.482162952423096
    5. 'string' → logprob: -4.732162952423096
    6. ' chaine' → logprob: -4.857162952423096
    7. 'str' → logprob: -6.732162952423096
    8. '#' → logprob: -7.232162952423096
    9. 's' → logprob: -7.482162952423096
    10. 'ch' → logprob: -7.482162952423096

Token 137: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02410595677793026
    2. 'd' → logprob: -5.024106025695801
    3. 't' → logprob: -5.399106025695801
    4. 'de' → logprob: -5.524106025695801
    5. 'S' → logprob: -6.274106025695801
    6. 'T' → logprob: -6.399106025695801
    7. 'str' → logprob: -6.399106025695801
    8. 'chaine' → logprob: -7.149106025695801
    9. ' =' → logprob: -7.774106025695801
    10. 'string' → logprob: -7.774106025695801

Token 138: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.30187347531318665
    2. 'car' → logprob: -1.4268734455108643
    3. 'chars' → logprob: -4.426873683929443
    4. 'texte' → logprob: -5.926873683929443
    5. 'str' → logprob: -6.301873683929443
    6. ' caracteres' → logprob: -6.926873683929443
    7. 's' → logprob: -7.176873683929443
    8. '#' → logprob: -7.551873683929443
    9. ' ' → logprob: -8.551873207092285
    10. 'characters' → logprob: -8.551873207092285

Token 139: ' t' (ID: 260)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35356223583221436
    2. 't' → logprob: -1.9785622358322144
    3. 'T' → logprob: -2.103562355041504
    4. 'str' → logprob: -4.478562355041504
    5. 'c' → logprob: -4.728562355041504
    6. 'C' → logprob: -5.728562355041504
    7. 'chaine' → logprob: -5.728562355041504
    8. 'S' → logprob: -6.228562355041504
    9. 'sequence' → logprob: -7.103562355041504
    10. 'ligne' → logprob: -7.353562355041504

Token 140: ' via' (ID: 4493)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5767260193824768
    2. ' =' → logprob: -0.8267260193824768
    3. 't' → logprob: -7.201725959777832
    4. 's' → logprob: -10.576725959777832
    5. '=t' → logprob: -12.201725959777832
    6. '_t' → logprob: -13.076725959777832
    7. '=str' → logprob: -14.201725959777832
    8. 'u' → logprob: -14.201725959777832
    9. ' t' → logprob: -14.326725959777832
    10. '=input' → logprob: -14.326725959777832

Token 141: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029811816290020943
    2. ' input' → logprob: -3.5298118591308594
    3. '(input' → logprob: -10.27981185913086
    4. 'l' → logprob: -11.27981185913086
    5. '=input' → logprob: -11.77981185913086
    6. ' l' → logprob: -13.27981185913086
    7. '```' → logprob: -13.90481185913086
    8. '	input' → logprob: -13.90481185913086
    9. ' ' → logprob: -14.40481185913086
    10. 'la' → logprob: -14.65481185913086

Token 142: '(),' (ID: 2547)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0001322639436693862
    2. '=' → logprob: -9.00013256072998
    3. ' =' → logprob: -11.87513256072998
    4. 's' → logprob: -13.75013256072998
    5. '=
' → logprob: -14.75013256072998
    6. '
' → logprob: -15.37513256072998
    7. ' t' → logprob: -16.125131607055664
    8. 'ti' → logprob: -18.000131607055664
    9. '_t' → logprob: -18.250131607055664
    10. '=t' → logprob: -18.250131607055664

Token 143: ' qui' (ID: 2780)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3148145377635956
    2. ' t' → logprob: -1.564814567565918
    3. ' qui' → logprob: -3.064814567565918
    4. ' représentant' → logprob: -6.064814567565918
    5. 's' → logprob: -6.189814567565918
    6. ' representing' → logprob: -6.189814567565918
    7. 'qui' → logprob: -6.439814567565918
    8. ' which' → logprob: -6.564814567565918
    9. ' s' → logprob: -6.689814567565918
    10. ' ' → logprob: -7.314814567565918

Token 144: ' représente' (ID: 88912)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8053564429283142
    2. ' représente' → logprob: -1.305356502532959
    3. ' =' → logprob: -1.805356502532959
    4. 'rep' → logprob: -3.430356502532959
    5. 'represent' → logprob: -3.930356502532959
    6. 're' → logprob: -4.180356502532959
    7. 'repr' → logprob: -4.430356502532959
    8. 's' → logprob: -5.305356502532959
    9. 'cont' → logprob: -5.305356502532959
    10. ' repres' → logprob: -5.305356502532959

Token 145: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9504449367523193
    2. 'les' → logprob: -1.3254449367523193
    3. ' la' → logprob: -2.0754449367523193
    4. ' une' → logprob: -2.8254449367523193
    5. 't' → logprob: -2.9504449367523193
    6. 'une' → logprob: -2.9504449367523193
    7. 'le' → logprob: -3.4504449367523193
    8. ' les' → logprob: -4.200445175170898
    9. ' le' → logprob: -5.325445175170898
    10. 's' → logprob: -6.325445175170898

Token 146: ' coups' (ID: 98942)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20895807445049286
    2. 'actions' → logprob: -2.333958148956299
    3. 'types' → logprob: -3.708958148956299
    4. 'tour' → logprob: -4.083958148956299
    5. ' choix' → logprob: -4.208958148956299
    6. 'str' → logprob: -5.458958148956299
    7. ' actions' → logprob: -5.958958148956299
    8. 'cho' → logprob: -6.083958148956299
    9. ' coups' → logprob: -6.083958148956299
    10. 'tech' → logprob: -6.208958148956299

Token 147: ' de' (ID: 334)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05618387833237648
    2. ' =' → logprob: -3.1811838150024414
    3. '=' → logprob: -5.056183815002441
    4. 's' → logprob: -5.681183815002441
    5. '_t' → logprob: -6.431183815002441
    6. 'de' → logprob: -7.931183815002441
    7. '(t' → logprob: -8.431183815002441
    8. ' t' → logprob: -8.431183815002441
    9. ' de' → logprob: -9.056183815002441
    10. '.' → logprob: -9.556183815002441

Token 148: ' l' (ID: 305)
  Prédit: 'Pierre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pierre' → logprob: -0.3638969957828522
    2. 'p' → logprob: -1.9888969659805298
    3. ' pierre' → logprob: -3.1138970851898193
    4. 'la' → logprob: -3.3638970851898193
    5. ' Pierre' → logprob: -4.23889684677124
    6. 'ta' → logprob: -4.36389684677124
    7. 't' → logprob: -4.36389684677124
    8. 'tir' → logprob: -5.11389684677124
    9. 'jeu' → logprob: -5.48889684677124
    10. 'Ta' → logprob: -5.48889684677124

Token 149: ''ad' (ID: 36162)
  Prédit: 'ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ad' → logprob: -0.7134668827056885
    2. ''ad' → logprob: -0.7134668827056885
    3. ''' → logprob: -5.213466644287109
    4. 'a' → logprob: -5.463466644287109
    5. '’ad' → logprob: -5.713466644287109
    6. ''utilisateur' → logprob: -6.463466644287109
    7. 'op' → logprob: -6.838466644287109
    8. ' advers' → logprob: -6.963466644287109
    9. 'ordinateur' → logprob: -7.213466644287109
    10. 'enn' → logprob: -7.338466644287109

Token 150: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.00044056313345208764
    2. 'verse' → logprob: -8.37544059753418
    3. ' vers' → logprob: -9.12544059753418
    4. 'Vers' → logprob: -10.37544059753418
    5. 'ves' → logprob: -10.50044059753418
    6. 'v' → logprob: -11.00044059753418
    7. '-vers' → logprob: -11.12544059753418
    8. 'ver' → logprob: -12.75044059753418
    9. 've' → logprob: -13.12544059753418
    10. 'verd' → logprob: -13.87544059753418

Token 151: 'aire' (ID: 8189)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0062570571899414
    2. 'ence' → logprob: -1.7562570571899414
    3. 'ient' → logprob: -1.8812570571899414
    4. 'ents' → logprob: -2.0062570571899414
    5. 'ent' → logprob: -2.3812570571899414
    6. 'istant' → logprob: -4.006257057189941
    7. 'iteur' → logprob: -4.506257057189941
    8. 'e' → logprob: -4.631257057189941
    9. 'ience' → logprob: -5.131257057189941
    10. 'es' → logprob: -5.506257057189941

Token 152: '.
' (ID: 558)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -2.935296834039036e-06
    2. 's' → logprob: -13.50000286102295
    3. ' t' → logprob: -14.00000286102295
    4. ' =' → logprob: -16.125003814697266
    5. '=' → logprob: -16.750003814697266
    6. '
' → logprob: -16.750003814697266
    7. '```' → logprob: -16.750003814697266
    8. '`t' → logprob: -17.125003814697266
    9. 'c' → logprob: -17.250003814697266
    10. 'ti' → logprob: -17.375003814697266

Token 153: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.128163257315464e-07
    2. ' t' → logprob: -15.25
    3. '`t' → logprob: -17.625
    4. '
' → logprob: -18.375
    5. '```' → logprob: -18.375
    6. 'ts' → logprob: -19.5
    7. 's' → logprob: -19.625
    8. '  
' → logprob: -20.125
    9. 'ti' → logprob: -20.125
    10. '`' → logprob: -20.125

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25195714831352234
    2. ' =' → logprob: -1.5019571781158447
    3. '=input' → logprob: -10.501956939697266
    4. '.' → logprob: -15.626956939697266
    5. ' ' → logprob: -15.876956939697266
    6. '=int' → logprob: -16.626956939697266
    7. ' ' → logprob: -17.001956939697266
    8. '＝' → logprob: -17.001956939697266
    9. ')' → logprob: -17.251956939697266
    10. '.=' → logprob: -17.751956939697266

Token 155: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002613358374219388
    2. ' input' → logprob: -8.250261306762695
    3. '(input' → logprob: -19.000261306762695
    4. '=input' → logprob: -20.125261306762695
    5. '	input' → logprob: -21.000261306762695
    6. 't' → logprob: -21.500261306762695
    7. 'str' → logprob: -21.625261306762695
    8. '<input' → logprob: -21.750261306762695
    9. 'Input' → logprob: -22.875261306762695
    10. '[input' → logprob: -23.125261306762695

Token 156: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0564331205387134e-05
    2. '().' → logprob: -12.50001049041748
    3. ' ()' → logprob: -13.12501049041748
    4. '())' → logprob: -13.87501049041748
    5. '`()' → logprob: -13.87501049041748
    6. '()]' → logprob: -14.25001049041748
    7. '()`' → logprob: -14.25001049041748
    8. '()>' → logprob: -15.50001049041748
    9. '>()' → logprob: -15.62501049041748
    10. '（）' → logprob: -15.75001049041748

Token 157: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0843391418457031
    2. '#' → logprob: -1.8343391418457031
    3. 'score' → logprob: -2.209339141845703
    4. 'res' → logprob: -2.709339141845703
    5. 'points' → logprob: -2.959339141845703
    6. 'scores' → logprob: -2.959339141845703
    7. 'r' → logprob: -3.084339141845703
    8. 'c' → logprob: -3.334339141845703
    9. 'counts' → logprob: -3.584339141845703
    10. 'count' → logprob: -3.834339141845703

Token 158: ' Initial' (ID: 9209)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0773911476135254
    2. 'counts' → logprob: -1.5773911476135254
    3. 'score' → logprob: -1.9523911476135254
    4. 'dp' → logprob: -2.2023911476135254
    5. '#' → logprob: -3.0773911476135254
    6. 'res' → logprob: -3.3273911476135254
    7. 'count' → logprob: -3.4523911476135254
    8. 'counter' → logprob: -4.702391147613525
    9. 'results' → logprob: -4.827391147613525
    10. 'r' → logprob: -4.827391147613525

Token 159: 'isation' (ID: 6993)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2805546224117279
    2. 'isation' → logprob: -2.0305545330047607
    3. 'ization' → logprob: -2.9055545330047607
    4. 'score' → logprob: -3.7805545330047607
    5. '_score' → logprob: -4.40555477142334
    6. 'iser' → logprob: -5.03055477142334
    7. '#' → logprob: -5.15555477142334
    8. '_' → logprob: -5.53055477142334
    9. 'z' → logprob: -6.40555477142334
    10. 't' → logprob: -6.78055477142334

Token 160: ' d' (ID: 272)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.18707287311553955
    2. 'points' → logprob: -2.68707275390625
    3. 'd' → logprob: -4.18707275390625
    4. ' score' → logprob: -4.18707275390625
    5. ' points' → logprob: -4.31207275390625
    6. 'total' → logprob: -4.56207275390625
    7. 'result' → logprob: -4.93707275390625
    8. ' de' → logprob: -5.18707275390625
    9. '_points' → logprob: -5.31207275390625
    10. ' d' → logprob: -5.56207275390625

Token 161: ''une' (ID: 13337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5532335042953491
    2. '_' → logprob: -1.4282335042953491
    3. ' ' → logprob: -3.5532336235046387
    4. 'e' → logprob: -3.6782336235046387
    5. 'score' → logprob: -3.8032336235046387
    6. 'o' → logprob: -4.053233623504639
    7. 'une' → logprob: -4.178233623504639
    8. ''' → logprob: -4.678233623504639
    9. ' score' → logprob: -4.803233623504639
    10. '_scores' → logprob: -4.928233623504639

Token 162: ' variable' (ID: 11076)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.27792713046073914
    2. 'result' → logprob: -2.0279271602630615
    3. 'list' → logprob: -3.7779271602630615
    4. 'liste' → logprob: -3.7779271602630615
    5. 'dict' → logprob: -4.277926921844482
    6. 'total' → logprob: -4.527926921844482
    7. 'd' → logprob: -5.152926921844482
    8. 'counter' → logprob: -5.527926921844482
    9. 'dp' → logprob: -5.527926921844482
    10. 'rés' → logprob: -5.777926921844482

Token 163: ' entière' (ID: 61583)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0466606505215168
    2. ' score' → logprob: -4.421660423278809
    3. 'total' → logprob: -4.421660423278809
    4. 'points' → logprob: -4.796660423278809
    5. 'result' → logprob: -4.921660423278809
    6. '_score' → logprob: -6.421660423278809
    7. ' total' → logprob: -6.546660423278809
    8. 's' → logprob: -7.296660423278809
    9. ' result' → logprob: -7.546660423278809
    10. '_points' → logprob: -7.671660423278809

Token 164: ' ans' (ID: 3345)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.020480221137404442
    2. 'total' → logprob: -4.770480155944824
    3. 'points' → logprob: -4.895480155944824
    4. 'result' → logprob: -6.270480155944824
    5. ' score' → logprob: -7.270480155944824
    6. '=' → logprob: -7.645480155944824
    7. 'res' → logprob: -8.020480155944824
    8. 'ans' → logprob: -8.645480155944824
    9. 's' → logprob: -9.145480155944824
    10. ' total' → logprob: -9.395480155944824

Token 165: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17997406423091888
    2. '=' → logprob: -1.80497407913208
    3. ' ans' → logprob: -8.929973602294922
    4. 'ans' → logprob: -9.429973602294922
    5. ' ' → logprob: -11.804973602294922
    6. ',' → logprob: -12.429973602294922
    7. '_ans' → logprob: -13.304973602294922
    8. 's' → logprob: -14.179973602294922
    9. '(ans' → logprob: -14.304973602294922
    10. '	ans' → logprob: -14.679973602294922

Token 166: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '=' → logprob: -19.500001907348633
    4. '```' → logprob: -20.125001907348633
    5. '۰' → logprob: -20.250001907348633
    6. '０' → logprob: -21.500001907348633
    7. 'n' → logprob: -21.875001907348633
    8. 'zero' → logprob: -22.125001907348633
    9. '`' → logprob: -22.375001907348633
    10. '_' → logprob: -22.500001907348633

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '０' → logprob: -17.625003814697266
    4. '۰' → logprob: -18.125003814697266
    5. 'k' → logprob: -19.187503814697266
    6. 'zero' → logprob: -19.437503814697266
    7. 'n' → logprob: -19.687503814697266
    8. ' ' → logprob: -19.812503814697266
    9. 'int' → logprob: -19.937503814697266
    10. '```' → logprob: -20.125003814697266

Token 168: '.' (ID: 13)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.8325677703833207e-05
    2. '
' → logprob: -10.625028610229492
    3. ' ans' → logprob: -13.000028610229492
    4. 'a' → logprob: -14.125028610229492
    5. '	ans' → logprob: -14.625028610229492
    6. '(ans' → logprob: -14.875028610229492
    7. '
' → logprob: -17.000028610229492
    8. '=' → logprob: -17.375028610229492
    9. '_ans' → logprob: -17.375028610229492
    10. '```' → logprob: -17.875028610229492

Token 169: ' 
' (ID: 793)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3856492842023727e-06
    2. ' ans' → logprob: -14.250000953674316
    3. 'a' → logprob: -14.500000953674316
    4. '
' → logprob: -16.125001907348633
    5. '	ans' → logprob: -16.250001907348633
    6. '(ans' → logprob: -17.875001907348633
    7. '```' → logprob: -18.125001907348633
    8. 'answer' → logprob: -19.250001907348633
    9. '_ans' → logprob: -19.625001907348633
    10. '0' → logprob: -20.625001907348633

Token 170: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.896309739408025e-07
    2. ' ans' → logprob: -14.750000953674316
    3. 'a' → logprob: -15.250000953674316
    4. '	ans' → logprob: -16.125
    5. '(ans' → logprob: -19.125
    6. 'answer' → logprob: -19.75
    7. '_ans' → logprob: -20.125
    8. '```' → logprob: -20.125
    9. '0' → logprob: -20.25
    10. 'anse' → logprob: -20.875

Token 171: ' Cette' (ID: 27383)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2664456789934775e-06
    2. ' ans' → logprob: -14.000000953674316
    3. '	ans' → logprob: -16.000001907348633
    4. '```' → logprob: -16.750001907348633
    5. '#' → logprob: -16.875001907348633
    6. 'answer' → logprob: -17.250001907348633
    7. '(ans' → logprob: -17.625001907348633
    8. 'for' → logprob: -18.750001907348633
    9. 'a' → logprob: -18.875001907348633
    10. 'ann' → logprob: -19.500001907348633

Token 172: ' variable' (ID: 11076)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8955260515213013
    2. 'ans' → logprob: -1.0205260515213013
    3. ' =' → logprob: -3.5205259323120117
    4. '=' → logprob: -3.6455259323120117
    5. ' ' → logprob: -3.6455259323120117
    6. 'space' → logprob: -3.7705259323120117
    7. 'n' → logprob: -4.270525932312012
    8. 'for' → logprob: -4.270525932312012
    9. 'variable' → logprob: -4.270525932312012
    10. 's' → logprob: -4.270525932312012

Token 173: ' stock' (ID: 6546)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3144291639328003
    2. ' =' → logprob: -1.3144291639328003
    3. ' ' → logprob: -7.93942928314209
    4. ' will' → logprob: -8.68942928314209
    5. ' +=' → logprob: -8.68942928314209
    6. ' s' → logprob: -9.43942928314209
    7. ')' → logprob: -9.81442928314209
    8. '+=' → logprob: -9.81442928314209
    9. 's' → logprob: -10.06442928314209
    10. '<|end|>' → logprob: -10.18942928314209

Token 174: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.032177895307540894
    2. 'era' → logprob: -3.5321779251098633
    3. 'er' → logprob: -6.032177925109863
    4. 'eras' → logprob: -11.157177925109863
    5. '=' → logprob: -12.407177925109863
    6. 'é' → logprob: -13.407177925109863
    7. 'a' → logprob: -13.657177925109863
    8. ' e' → logprob: -13.907177925109863
    9. 'eur' → logprob: -14.782177925109863
    10. 'ent' → logprob: -15.282177925109863

Token 175: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7401294708251953
    2. ' le' → logprob: -1.2401294708251953
    3. ' la' → logprob: -2.7401294708251953
    4. 'l' → logprob: -2.7401294708251953
    5. 'la' → logprob: -3.2401294708251953
    6. 'the' → logprob: -3.4901294708251953
    7. ' the' → logprob: -3.9901294708251953
    8. '#' → logprob: -5.365129470825195
    9. ' l' → logprob: -5.490129470825195
    10. '<|end|>' → logprob: -6.115129470825195

Token 176: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.8254653811454773
    2. 'score' → logprob: -0.8254653811454773
    3. ' nombre' → logprob: -2.450465440750122
    4. 'nombre' → logprob: -3.450465440750122
    5. ' total' → logprob: -5.700465202331543
    6. ' résultat' → logprob: -6.950465202331543
    7. 's' → logprob: -7.200465202331543
    8. 'total' → logprob: -7.450465202331543
    9. '_score' → logprob: -9.825465202331543
    10. 'result' → logprob: -9.825465202331543

Token 177: ' total' (ID: 3609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5982297658920288
    2. ' =' → logprob: -0.9732297658920288
    3. 'ans' → logprob: -2.7232298851013184
    4. ' ans' → logprob: -5.223229885101318
    5. '0' → logprob: -8.22322940826416
    6. ' ' → logprob: -8.59822940826416
    7. '.' → logprob: -8.97322940826416
    8. '	ans' → logprob: -9.09822940826416
    9. 'total' → logprob: -9.09822940826416
    10. '(ans' → logprob: -9.47322940826416

Token 178: ' accum' (ID: 23148)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.013081998564302921
    2. ' ans' → logprob: -4.638082027435303
    3. '=' → logprob: -6.388082027435303
    4. '	ans' → logprob: -7.638082027435303
    5. '(ans' → logprob: -7.763082027435303
    6. ' =' → logprob: -7.763082027435303
    7. '_ans' → logprob: -9.263081550598145
    8. '.' → logprob: -9.388081550598145
    9. ',' → logprob: -9.513081550598145
    10. ' ' → logprob: -11.763081550598145

Token 179: 'ulé' (ID: 147268)
  Prédit: 'ulé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulé' → logprob: -0.0017361093778163195
    2. 'umul' → logprob: -6.501736164093018
    3. 'ul' → logprob: -9.12673568725586
    4. 'ule' → logprob: -9.87673568725586
    5. 'um' → logprob: -10.87673568725586
    6. 'u' → logprob: -10.87673568725586
    7. 'uré' → logprob: -11.62673568725586
    8. '=' → logprob: -11.87673568725586
    9. 'umé' → logprob: -12.00173568725586
    10. ' =' → logprob: -12.12673568725586

Token 180: ' pendant' (ID: 22611)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0006199848721735179
    2. ' ans' → logprob: -7.500619888305664
    3. '(ans' → logprob: -10.375619888305664
    4. '	ans' → logprob: -10.375619888305664
    5. '_ans' → logprob: -13.375619888305664
    6. '=' → logprob: -13.750619888305664
    7. '0' → logprob: -14.500619888305664
    8. '
' → logprob: -15.000619888305664
    9. ' =' → logprob: -15.125619888305664
    10. '.' → logprob: -15.375619888305664

Token 181: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7492538094520569
    2. 'le' → logprob: -1.999253749847412
    3. 'la' → logprob: -2.374253749847412
    4. 'the' → logprob: -2.749253749847412
    5. ' le' → logprob: -2.999253749847412
    6. 't' → logprob: -3.124253749847412
    7. 'len' → logprob: -3.499253749847412
    8. 'les' → logprob: -3.749253749847412
    9. 'l' → logprob: -3.749253749847412
    10. ' les' → logprob: -3.999253749847412

Token 182: ' jeu' (ID: 24626)
  Prédit: 'jeu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jeu' → logprob: -0.16790719330310822
    2. 'for' → logprob: -2.042907238006592
    3. 'programme' → logprob: -4.917907238006592
    4. 'part' → logprob: -5.542907238006592
    5. 'k' → logprob: -5.667907238006592
    6. 'tour' → logprob: -5.917907238006592
    7. '#' → logprob: -6.042907238006592
    8. ' jeu' → logprob: -6.542907238006592
    9. 'process' → logprob: -7.292907238006592
    10. 't' → logprob: -7.667907238006592

Token 183: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005318254698067904
    2. '
' → logprob: -8.250532150268555
    3. ' ans' → logprob: -8.375532150268555
    4. '(ans' → logprob: -11.125532150268555
    5. '	ans' → logprob: -11.250532150268555
    6. '_ans' → logprob: -12.000532150268555
    7. 'a' → logprob: -13.500532150268555
    8. '=' → logprob: -13.875532150268555
    9. ',' → logprob: -14.250532150268555
    10. '
' → logprob: -14.500532150268555

Token 184: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.128163257315464e-07
    2. ' ans' → logprob: -15.875
    3. '	ans' → logprob: -16.5
    4. '```' → logprob: -17.5
    5. '(ans' → logprob: -18.25
    6. 'answer' → logprob: -18.5
    7. 'a' → logprob: -18.625
    8. 'score' → logprob: -19.125
    9. '_ans' → logprob: -19.375
    10. 'anst' → logprob: -19.625

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694427371025085
    2. '=' → logprob: -2.1269443035125732
    3. ' ' → logprob: -11.251944541931152
    4. ' +=' → logprob: -13.501944541931152
    5. ' ' → logprob: -13.876944541931152
    6. ' =
' → logprob: -15.501944541931152
    7. ')' → logprob: -15.876944541931152
    8. '+=' → logprob: -16.376943588256836
    9. '＝' → logprob: -16.376943588256836
    10. ',' → logprob: -16.501943588256836

Token 186: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. ' ' → logprob: -17.625709533691406
    4. '۰' → logprob: -19.875709533691406
    5. '０' → logprob: -21.000709533691406
    6. '   ' → logprob: -21.125709533691406
    7. ' ' → logprob: -21.500709533691406
    8. '```' → logprob: -21.625709533691406
    9. '000' → logprob: -21.688209533691406
    10. '  ' → logprob: -21.813209533691406

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '000' → logprob: -22.0
    4. 'int' → logprob: -22.125
    5. '۰' → logprob: -22.125
    6. '０' → logprob: -22.375
    7. '00' → logprob: -23.5
    8. '```' → logprob: -23.75
    9. '   ' → logprob: -24.625
    10. ' ' → logprob: -24.8125

Token 188: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1794874221086502
    2. '
' → logprob: -2.054487466812134
    3. ' for' → logprob: -3.429487466812134
    4. '<|end|>' → logprob: -5.679487228393555
    5. '\n' → logprob: -8.804487228393555
    6. '' → logprob: -9.804487228393555
    7. '
' → logprob: -10.179487228393555
    8. '#' → logprob: -11.179487228393555
    9. '<|end|>' → logprob: -11.179487228393555
    10. 'n' → logprob: -11.429487228393555

Token 189: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004108924185857177
    2. '#' → logprob: -8.500411033630371
    3. 'n' → logprob: -9.125411033630371
    4. ' for' → logprob: -10.500411033630371
    5. 'score' → logprob: -10.625411033630371
    6. 'i' → logprob: -11.250411033630371
    7. 'used' → logprob: -11.625411033630371
    8. 'result' → logprob: -12.250411033630371
    9. 't' → logprob: -12.375411033630371
    10. '```' → logprob: -13.500411033630371

Token 190: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.8444881536415778e-05
    2. 'n' → logprob: -11.375028610229492
    3. '#' → logprob: -11.875028610229492
    4. ' for' → logprob: -12.625028610229492
    5. 'i' → logprob: -12.750028610229492
    6. 'used' → logprob: -14.125028610229492
    7. 'f' → logprob: -14.250028610229492
    8. 'For' → logprob: -14.875028610229492
    9. 't' → logprob: -14.875028610229492
    10. 'from' → logprob: -15.000028610229492

Token 191: 'isation' (ID: 6993)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10388913005590439
    2. 'e' → logprob: -3.353889226913452
    3. 'ization' → logprob: -3.478889226913452
    4. '_for' → logprob: -4.728888988494873
    5. 'i' → logprob: -4.978888988494873
    6. '_' → logprob: -5.353888988494873
    7. '#' → logprob: -5.728888988494873
    8. ' for' → logprob: -6.728888988494873
    9. 'isation' → logprob: -6.728888988494873
    10. 'er' → logprob: -6.978888988494873

Token 192: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7007240056991577
    2. 'd' → logprob: -0.8257240056991577
    3. '[]' → logprob: -3.9507241249084473
    4. 'dp' → logprob: -4.575724124908447
    5. 't' → logprob: -4.950724124908447
    6. '#' → logprob: -5.325724124908447
    7. '[' → logprob: -5.450724124908447
    8. '_' → logprob: -5.825724124908447
    9. 'for' → logprob: -5.825724124908447
    10. '(' → logprob: -6.075724124908447

Token 193: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.2788002490997314
    2. '(' → logprob: -1.6538002490997314
    3. '(['' → logprob: -2.0288002490997314
    4. '([' → logprob: -2.4038002490997314
    5. '([]' → logprob: -2.7788002490997314
    6. 'e' → logprob: -2.9038002490997314
    7. '[]' → logprob: -3.4038002490997314
    8. 'a' → logprob: -3.5288002490997314
    9. '_' → logprob: -3.5288002490997314
    10. 't' → logprob: -4.028800010681152

Token 194: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.04147586598992348
    2. 'list' → logprob: -3.291475772857666
    3. ' liste' → logprob: -6.166475772857666
    4. 'table' → logprob: -7.666475772857666
    5. '[]' → logprob: -8.916476249694824
    6. 'lst' → logprob: -9.041476249694824
    7. 'l' → logprob: -9.041476249694824
    8. 'chaine' → logprob: -9.041476249694824
    9. 'lista' → logprob: -9.541476249694824
    10. '_' → logprob: -9.666476249694824

Token 195: ' win' (ID: 4449)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09619463235139847
    2. 'visited' → logprob: -3.3461947441101074
    3. 'used' → logprob: -3.5961947441101074
    4. 'score' → logprob: -4.221194744110107
    5. 'scores' → logprob: -5.721194744110107
    6. ' dp' → logprob: -6.471194744110107
    7. 'd' → logprob: -6.971194744110107
    8. 'res' → logprob: -6.971194744110107
    9. 'prev' → logprob: -7.471194744110107
    10. 'result' → logprob: -7.471194744110107

Token 196: ' vide' (ID: 21835)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045259393751621246
    2. '=' → logprob: -3.545259475708008
    3. 's' → logprob: -4.295259475708008
    4. '=[' → logprob: -6.670259475708008
    5. '=[]' → logprob: -9.045259475708008
    6. ' ' → logprob: -10.045259475708008
    7. 'd' → logprob: -10.170259475708008
    8. 'er' → logprob: -10.545259475708008
    9. '=[]
' → logprob: -10.670259475708008
    10. '_points' → logprob: -10.795259475708008

Token 197: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5005139708518982
    2. ' =' → logprob: -1.125514030456543
    3. 'win' → logprob: -2.875514030456543
    4. '=[]' → logprob: -4.875514030456543
    5. '[]' → logprob: -5.500514030456543
    6. '_win' → logprob: -7.375514030456543
    7. '(win' → logprob: -8.750514030456543
    8. '	win' → logprob: -9.500514030456543
    9. ' win' → logprob: -9.875514030456543
    10. '_' → logprob: -10.500514030456543

Token 198: '#' (ID: 2)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0017878713551908731
    2. '[]' → logprob: -6.5017876625061035
    3. ' win' → logprob: -8.501788139343262
    4. 'w' → logprob: -11.001788139343262
    5. 'wins' → logprob: -11.251788139343262
    6. ' =' → logprob: -11.376788139343262
    7. '=' → logprob: -11.626788139343262
    8. '[' → logprob: -11.751788139343262
    9. '	win' → logprob: -11.876788139343262
    10. 'winning' → logprob: -12.251788139343262

Token 199: ' Cette' (ID: 27383)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -8.864272967912257e-05
    2. ' win' → logprob: -9.875088691711426
    3. '[]' → logprob: -11.000088691711426
    4. 'w' → logprob: -11.625088691711426
    5. '[' → logprob: -12.375088691711426
    6. 'wins' → logprob: -12.375088691711426
    7. '	win' → logprob: -13.500088691711426
    8. 'winning' → logprob: -14.875088691711426
    9. '#' → logprob: -15.250088691711426
    10. '(win' → logprob: -15.375088691711426

Token 200: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4725632071495056
    2. 'win' → logprob: -1.4725632667541504
    3. '[]' → logprob: -2.0975632667541504
    4. ' win' → logprob: -5.09756326675415
    5. '=' → logprob: -5.47256326675415
    6. ' =' → logprob: -5.97256326675415
    7. '[:]' → logprob: -6.09756326675415
    8. 'liste' → logprob: -6.47256326675415
    9. '[
' → logprob: -6.72256326675415
    10. ']' → logprob: -6.72256326675415

Token 201: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25231125950813293
    2. ' =' → logprob: -1.5023112297058105
    3. '=[]' → logprob: -8.002311706542969
    4. '=[' → logprob: -10.627311706542969
    5. '=['' → logprob: -12.377311706542969
    6. '[:]' → logprob: -13.002311706542969
    7. '<|end|>' → logprob: -13.252311706542969
    8. '[]' → logprob: -13.252311706542969
    9. 's' → logprob: -13.627311706542969
    10. '[' → logprob: -13.627311706542969

Token 202: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.04392952099442482
    2. 'i' → logprob: -3.9189295768737793
    3. 'inue' → logprob: -4.293929576873779
    4. 'iend' → logprob: -4.793929576873779
    5. 'in' → logprob: -7.543929576873779
    6. 'iennent' → logprob: -8.418929100036621
    7. 'iens' → logprob: -8.793929100036621
    8. 'ien' → logprob: -9.418929100036621
    9. 'endra' → logprob: -9.668929100036621
    10. 'ients' → logprob: -10.168929100036621

Token 203: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.3883560299873352
    2. 'endra' → logprob: -1.6383559703826904
    3. 't' → logprob: -2.3883559703826904
    4. 'ient' → logprob: -3.7633559703826904
    5. 'e' → logprob: -6.0133562088012695
    6. 'end' → logprob: -6.8883562088012695
    7. 'nera' → logprob: -6.8883562088012695
    8. 'nent' → logprob: -7.0133562088012695
    9. 'era' → logprob: -7.0133562088012695
    10. 'en' → logprob: -7.3883562088012695

Token 204: ',' (ID: 11)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.2010984867811203
    2. '['' → logprob: -2.3260984420776367
    3. '["' → logprob: -3.3260984420776367
    4. '[' → logprob: -3.5760984420776367
    5. '[n' → logprob: -4.826098442077637
    6. 'k' → logprob: -5.076098442077637
    7. '[]' → logprob: -6.451098442077637
    8. '[t' → logprob: -6.451098442077637
    9. '[len' → logprob: -6.826098442077637
    10. '[i' → logprob: -7.701098442077637

Token 205: ' pour' (ID: 1930)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8530141711235046
    2. '[k' → logprob: -1.6030142307281494
    3. 'len' → logprob: -1.8530142307281494
    4. 'None' → logprob: -2.9780142307281494
    5. ' k' → logprob: -3.2280142307281494
    6. '[' → logprob: -3.6030142307281494
    7. 'win' → logprob: -4.10301399230957
    8. 'n' → logprob: -4.22801399230957
    9. '(k' → logprob: -4.35301399230957
    10. 'True' → logprob: -4.85301399230957

Token 206: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.391642689704895
    2. '_i' → logprob: -1.516642689704895
    3. 'i' → logprob: -2.2666425704956055
    4. '_range' → logprob: -7.8916425704956055
    5. '_j' → logprob: -8.766642570495605
    6. '_c' → logprob: -9.141642570495605
    7. '(i' → logprob: -10.016642570495605
    8. ' i' → logprob: -10.141642570495605
    9. 'range' → logprob: -10.391642570495605
    10. '_t' → logprob: -11.016642570495605

Token 207: ' coup' (ID: 25465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3958118259906769
    2. 'i' → logprob: -1.1458117961883545
    3. ' i' → logprob: -6.020812034606934
    4. '_i' → logprob: -6.145812034606934
    5. '_c' → logprob: -6.520812034606934
    6. ' _' → logprob: -7.145812034606934
    7. 'c' → logprob: -7.395812034606934
    8. 'indice' → logprob: -7.770812034606934
    9. 'cou' → logprob: -8.395812034606934
    10. ' coup' → logprob: -8.895812034606934

Token 208: ' de' (ID: 334)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.917140543460846
    2. ' possible' → logprob: -1.1671404838562012
    3. ',' → logprob: -1.6671404838562012
    4. '_possible' → logprob: -3.042140483856201
    5. '_' → logprob: -4.167140483856201
    6. 's' → logprob: -5.167140483856201
    7. ' ' → logprob: -5.417140483856201
    8. '(' → logprob: -5.792140483856201
    9. ']' → logprob: -5.917140483856201
    10. '[]' → logprob: -6.167140483856201

Token 209: ' l' (ID: 305)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018301179632544518
    2. 'range' → logprob: -4.018301010131836
    3. ' range' → logprob: -10.018301010131836
    4. 'la' → logprob: -10.143301010131836
    5. ' t' → logprob: -10.893301010131836
    6. 'l' → logprob: -11.518301010131836
    7. '[t' → logprob: -11.768301010131836
    8. '['' → logprob: -12.018301010131836
    9. 'i' → logprob: -13.143301010131836
    10. '`t' → logprob: -13.455801010131836

Token 210: ''ad' (ID: 36162)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1853436529636383
    2. 'ad' → logprob: -1.935343623161316
    3. 'a' → logprob: -4.9353437423706055
    4. 'range' → logprob: -5.0603437423706055
    5. ''ad' → logprob: -5.1853437423706055
    6. ' advers' → logprob: -6.4353437423706055
    7. 'ange' → logprob: -6.8103437423706055
    8. ''' → logprob: -7.4353437423706055
    9. ' t' → logprob: -7.8103437423706055
    10. ''t' → logprob: -8.310343742370605

Token 211: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.00015395533409900963
    2. 'verse' → logprob: -9.750153541564941
    3. 'v' → logprob: -9.875153541564941
    4. 'ves' → logprob: -10.875153541564941
    5. 'verd' → logprob: -11.625153541564941
    6. 'ver' → logprob: -12.125153541564941
    7. ' vers' → logprob: -12.500153541564941
    8. 'ers' → logprob: -13.750153541564941
    9. '#' → logprob: -13.875153541564941
    10. '-vers' → logprob: -14.000153541564941

Token 212: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.4703429639339447
    2. 'iaire' → logprob: -2.0953428745269775
    3. 'ient' → logprob: -2.2203428745269775
    4. 'aise' → logprob: -2.9703428745269775
    5. 'oire' → logprob: -3.4703428745269775
    6. 'es' → logprob: -4.970343112945557
    7. 'eur' → logprob: -5.095343112945557
    8. 'e' → logprob: -5.470343112945557
    9. 'esseur' → logprob: -5.845343112945557
    10. 'isseur' → logprob: -5.970343112945557

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0212346650660038
    2. 'possible' → logprob: -4.271234512329102
    3. ' possible' → logprob: -5.771234512329102
    4. 't' → logprob: -6.021234512329102
    5. ' ,' → logprob: -7.521234512329102
    6. '_,' → logprob: -8.021234512329102
    7. ' t' → logprob: -8.646234512329102
    8. ',t' → logprob: -9.146234512329102
    9. ' advers' → logprob: -9.521234512329102
    10. 'de' → logprob: -9.896234512329102

Token 214: ' le' (ID: 505)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.9787065386772156
    2. '[' → logprob: -1.8537065982818604
    3. 't' → logprob: -2.7287065982818604
    4. 'le' → logprob: -2.7287065982818604
    5. 'whether' → logprob: -2.9787065982818604
    6. 'les' → logprob: -3.1037065982818604
    7. '[str' → logprob: -3.1037065982818604
    8. 'the' → logprob: -3.4787065982818604
    9. 'k' → logprob: -3.8537065982818604
    10. ' win' → logprob: -3.9787065982818604

Token 215: ' coup' (ID: 25465)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -1.471956729888916
    2. 'g' → logprob: -1.596956729888916
    3. '[' → logprob: -1.971956729888916
    4. 'me' → logprob: -2.721956729888916
    5. 'score' → logprob: -3.096956729888916
    6. 'cho' → logprob: -3.221956729888916
    7. 'c' → logprob: -3.221956729888916
    8. 'winning' → logprob: -3.346956729888916
    9. 'cou' → logprob: -3.846956729888916
    10. ' coup' → logprob: -4.096956729888916

Token 216: ' choisi' (ID: 77245)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.7292455434799194
    2. ' possible' → logprob: -1.8542455434799194
    3. ' ' → logprob: -1.9792455434799194
    4. '_' → logprob: -2.729245662689209
    5. ' gagn' → logprob: -3.229245662689209
    6. '[]' → logprob: -3.979245662689209
    7. '_possible' → logprob: -4.104245662689209
    8. 'que' → logprob: -4.604245662689209
    9. 'optimal' → logprob: -4.604245662689209
    10. ' que' → logprob: -4.729245662689209

Token 217: ' pour' (ID: 1930)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4654568135738373
    2. 'win' → logprob: -2.34045672416687
    3. '=' → logprob: -2.71545672416687
    4. ' =' → logprob: -3.34045672416687
    5. 'possible' → logprob: -3.59045672416687
    6. '=[]' → logprob: -3.71545672416687
    7. '[' → logprob: -3.71545672416687
    8. '[:]' → logprob: -3.84045672416687
    9. 'de' → logprob: -4.465456962585449
    10. 'winning' → logprob: -4.840456962585449

Token 218: ' gagner' (ID: 64227)
  Prédit: ' contr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contr' → logprob: -1.3587995767593384
    2. 'g' → logprob: -1.6087995767593384
    3. ' gagner' → logprob: -1.8587995767593384
    4. ' counter' → logprob: -1.9837995767593384
    5. 'counter' → logprob: -2.483799457550049
    6. 'r' → logprob: -2.983799457550049
    7. 'contr' → logprob: -3.608799457550049
    8. 'contre' → logprob: -4.108799457550049
    9. 'le' → logprob: -4.983799457550049
    10. ' ' → logprob: -5.108799457550049

Token 219: '.
' (ID: 558)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.026425115764141083
    2. '[]' → logprob: -4.526424884796143
    3. '=' → logprob: -5.651424884796143
    4. ' win' → logprob: -6.026424884796143
    5. '(win' → logprob: -6.151424884796143
    6. ',' → logprob: -6.526424884796143
    7. 'winning' → logprob: -6.901424884796143
    8. ' =' → logprob: -7.151424884796143
    9. '=[]' → logprob: -7.401424884796143
    10. '[:]' → logprob: -7.401424884796143

Token 220: 'win' (ID: 11668)
  Prédit: 'win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -3.292907877039397e-06
    2. 'w' → logprob: -13.50000286102295
    3. ' win' → logprob: -13.75000286102295
    4. '[]' → logprob: -14.87500286102295
    5. '[' → logprob: -15.12500286102295
    6. 'wins' → logprob: -16.250003814697266
    7. 'winning' → logprob: -16.500003814697266
    8. '	win' → logprob: -17.000003814697266
    9. '(win' → logprob: -17.250003814697266
    10. '_win' → logprob: -17.875003814697266

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014183718711137772
    2. ' =' → logprob: -4.264183521270752
    3. '=[]' → logprob: -10.88918399810791
    4. '=[' → logprob: -14.13918399810791
    5. '＝' → logprob: -15.01418399810791
    6. '=[]
' → logprob: -15.51418399810791
    7. '[' → logprob: -16.014183044433594
    8. '[:]' → logprob: -16.764183044433594
    9. '=[]
' → logprob: -17.014183044433594
    10. ' ' → logprob: -17.139183044433594

Token 222: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.031823914498090744
    2. '['' → logprob: -3.5318238735198975
    3. '["' → logprob: -6.531824111938477
    4. '[' → logprob: -7.406824111938477
    5. '[len' → logprob: -13.531824111938477
    6. '[]
' → logprob: -14.031824111938477
    7. '[n' → logprob: -14.406824111938477
    8. '[str' → logprob: -14.531824111938477
    9. '[t' → logprob: -14.656824111938477
    10. ' []' → logprob: -14.656824111938477

Token 223: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30125340819358826
    2. ' for' → logprob: -1.5512534379959106
    3. '[' → logprob: -3.051253318786621
    4. ' ' → logprob: -8.301253318786621
    5. '[
' → logprob: -8.676253318786621
    6. '[]' → logprob: -9.676253318786621
    7. ')' → logprob: -9.801253318786621
    8. '['' → logprob: -9.801253318786621
    9. '(' → logprob: -10.301253318786621
    10. '<|end|>' → logprob: -10.551253318786621

Token 224: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7432603272027336e-06
    2. ' for' → logprob: -13.375001907348633
    3. 'f' → logprob: -16.500001907348633
    4. '[' → logprob: -16.750001907348633
    5. 'i' → logprob: -18.125001907348633
    6. '	for' → logprob: -19.000001907348633
    7. '#' → logprob: -19.500001907348633
    8. 'F' → logprob: -19.750001907348633
    9. 'For' → logprob: -19.875001907348633
    10. 'r' → logprob: -20.125001907348633

Token 225: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06180598959326744
    2. 'r' → logprob: -3.0618059635162354
    3. 'c' → logprob: -5.3118062019348145
    4. ' for' → logprob: -5.4368062019348145
    5. 'cle' → logprob: -5.8118062019348145
    6. 'oc' → logprob: -8.436805725097656
    7. 'f' → logprob: -8.936805725097656
    8. 'g' → logprob: -9.186805725097656
    9. 'ch' → logprob: -9.311805725097656
    10. 't' → logprob: -9.686805725097656

Token 226: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27053070068359375
    2. ' for' → logprob: -1.5205307006835938
    3. '_' → logprob: -4.145530700683594
    4. ' i' → logprob: -6.270530700683594
    5. 'i' → logprob: -7.520530700683594
    6. ' _' → logprob: -9.020530700683594
    7. ' ' → logprob: -10.895530700683594
    8. '_for' → logprob: -11.395530700683594
    9. ' ' → logprob: -12.645530700683594
    10. 'f' → logprob: -13.020530700683594

Token 227: ' it' (ID: 480)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09184446185827255
    2. 'i' → logprob: -2.7168445587158203
    3. ' _' → logprob: -4.46684455871582
    4. '_' → logprob: -4.59184455871582
    5. '_i' → logprob: -10.09184455871582
    6. ' ' → logprob: -12.46684455871582
    7. ' ' → logprob: -12.96684455871582
    8. ' c' → logprob: -13.71684455871582
    9. 'c' → logprob: -13.84184455871582
    10. ' t' → logprob: -14.34184455871582

Token 228: 'érant' (ID: 91190)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7274743318557739
    2. ' i' → logprob: -1.227474331855774
    3. 'i' → logprob: -1.727474331855774
    4. 'in' → logprob: -4.352474212646484
    5. 'o' → logprob: -4.852474212646484
    6. 'er' → logprob: -5.227474212646484
    7. ' ' → logprob: -5.477474212646484
    8. '_' → logprob: -6.102474212646484
    9. 'r' → logprob: -6.102474212646484
    10. 'range' → logprob: -6.227474212646484

Token 229: ' sur' (ID: 1512)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09126142412424088
    2. '_' → logprob: -3.466261386871338
    3. ' _' → logprob: -3.716261386871338
    4. ' in' → logprob: -3.966261386871338
    5. ' over' → logprob: -4.966261386871338
    6. 'i' → logprob: -5.216261386871338
    7. ' ' → logprob: -8.966261863708496
    8. 'in' → logprob: -10.091261863708496
    9. ' a' → logprob: -10.591261863708496
    10. ' c' → logprob: -10.966261863708496

Token 230: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010008457116782665
    2. ' range' → logprob: -5.135008335113525
    3. 't' → logprob: -5.510008335113525
    4. 'r' → logprob: -11.635008811950684
    5. ' t' → logprob: -11.635008811950684
    6. 'i' → logprob: -12.885008811950684
    7. 'rang' → logprob: -13.010008811950684
    8. '_' → logprob: -13.635008811950684
    9. '(range' → logprob: -15.010008811950684
    10. '	range' → logprob: -15.260008811950684

Token 231: ' caractère' (ID: 80509)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20370596647262573
    2. 'c' → logprob: -1.9537060260772705
    3. ' i' → logprob: -3.7037060260772705
    4. '_' → logprob: -5.203705787658691
    5. ' _' → logprob: -5.328705787658691
    6. 'i' → logprob: -5.328705787658691
    7. ' char' → logprob: -7.203705787658691
    8. 'ch' → logprob: -7.703705787658691
    9. '_c' → logprob: -7.828705787658691
    10. ' ' → logprob: -8.203705787658691

Token 232: ' tt' (ID: 34181)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20420022308826447
    2. 'in' → logprob: -1.829200267791748
    3. ' i' → logprob: -4.329200267791748
    4. 'i' → logprob: -5.704200267791748
    5. 's' → logprob: -6.204200267791748
    6. ' ' → logprob: -6.579200267791748
    7. ',' → logprob: -6.579200267791748
    8. 'c' → logprob: -6.829200267791748
    9. ' c' → logprob: -7.829200267791748
    10. 'e' → logprob: -8.70419979095459

Token 233: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2903860807418823
    2. 'in' → logprob: -1.4153860807418823
    3. ' ' → logprob: -4.790386199951172
    4. 's' → logprob: -8.790386199951172
    5. ',' → logprob: -8.915386199951172
    6. 'i' → logprob: -9.040386199951172
    7. ' i' → logprob: -9.040386199951172
    8. 'e' → logprob: -9.290386199951172
    9. 'en' → logprob: -9.415386199951172
    10. ' ' → logprob: -9.665386199951172

Token 234: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0021859495900571346
    2. ' t' → logprob: -6.127185821533203
    3. 'range' → logprob: -15.002185821533203
    4. ' ' → logprob: -15.877185821533203
    5. ' range' → logprob: -15.877185821533203
    6. 's' → logprob: -17.002185821533203
    7. ' ' → logprob: -17.127185821533203
    8. '_t' → logprob: -17.627185821533203
    9. '	t' → logprob: -17.627185821533203
    10. '`t' → logprob: -18.002185821533203

Token 235: ' chaîne' (ID: 89288)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014175611548125744
    2. ' t' → logprob: -4.2641754150390625
    3. 's' → logprob: -12.514175415039062
    4. 'string' → logprob: -12.764175415039062
    5. 'range' → logprob: -13.389175415039062
    6. 'tring' → logprob: -14.139175415039062
    7. 'chaine' → logprob: -14.264175415039062
    8. ' range' → logprob: -14.764175415039062
    9. 'str' → logprob: -14.889175415039062
    10. ' string' → logprob: -15.139175415039062

Token 236: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08910315483808517
    2. ' t' → logprob: -2.4641032218933105
    3. '(t' → logprob: -8.964102745056152
    4. 's' → logprob: -11.214102745056152
    5. ' in' → logprob: -11.464102745056152
    6. '_t' → logprob: -12.464102745056152
    7. 'in' → logprob: -13.464102745056152
    8. 'de' → logprob: -13.964102745056152
    9. ' (' → logprob: -13.964102745056152
    10. ' ' → logprob: -14.214102745056152

Token 237: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09585946053266525
    2. 'in' → logprob: -2.8458595275878906
    3. ' in' → logprob: -3.8458595275878906
    4. ' :' → logprob: -4.970859527587891
    5. 't' → logprob: -6.595859527587891
    6. ',' → logprob: -6.595859527587891
    7. 'for' → logprob: -6.845859527587891
    8. 's' → logprob: -7.595859527587891
    9. ':
' → logprob: -8.22085952758789
    10. 'n' → logprob: -8.97085952758789

Token 238: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4909078776836395
    2. 't' → logprob: -1.615907907485962
    3. ' for' → logprob: -1.740907907485962
    4. ':' → logprob: -5.490907669067383
    5. ' in' → logprob: -5.490907669067383
    6. ' t' → logprob: -5.740907669067383
    7. 'in' → logprob: -6.365907669067383
    8. 'range' → logprob: -8.240907669067383
    9. ' range' → logprob: -8.365907669067383
    10. ' :' → logprob: -10.240907669067383

Token 239: ' tt' (ID: 34181)
  Prédit: ' tt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tt' → logprob: -0.04427410662174225
    2. 'tt' → logprob: -3.294274091720581
    3. ' t' → logprob: -5.41927433013916
    4. 't' → logprob: -6.66927433013916
    5. ' ' → logprob: -7.79427433013916
    6. ' ' → logprob: -9.79427433013916
    7. '_tt' → logprob: -10.16927433013916
    8. '(tt' → logprob: -13.16927433013916
    9. '_' → logprob: -13.29427433013916
    10. '	t' → logprob: -13.79427433013916

Token 240: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04305342957377434
    2. 'in' → logprob: -3.168053388595581
    3. ' ' → logprob: -9.91805362701416
    4. '	in' → logprob: -13.79305362701416
    5. '  ' → logprob: -13.91805362701416
    6. 's' → logprob: -14.04305362701416
    7. ' ' → logprob: -14.54305362701416
    8. ' i' → logprob: -14.66805362701416
    9. 'import' → logprob: -15.41805362701416
    10. ',' → logprob: -16.168052673339844

Token 241: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01416350994259119
    2. ' t' → logprob: -4.264163494110107
    3. '	t' → logprob: -17.264163970947266
    4. ' ' → logprob: -17.889163970947266
    5. '_t' → logprob: -18.389163970947266
    6. ')t' → logprob: -19.764163970947266
    7. '`t' → logprob: -20.014163970947266
    8. '(t' → logprob: -20.139163970947266
    9. '   ' → logprob: -20.389163970947266
    10. ' т' → logprob: -20.889163970947266

Token 242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.500108141452074e-05
    2. ' :' → logprob: -10.750035285949707
    3. ':
' → logprob: -11.250035285949707
    4. '=' → logprob: -16.25003433227539
    5. '):' → logprob: -16.50003433227539
    6. ',' → logprob: -16.75003433227539
    7. ':
' → logprob: -17.12503433227539
    8. ')' → logprob: -17.50003433227539
    9. ':

' → logprob: -17.75003433227539
    10. '：' → logprob: -17.75003433227539

Token 243: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7407559752464294
    2. '   ' → logprob: -1.1157560348510742
    3. ' ' → logprob: -2.990756034851074
    4. '<|end|>' → logprob: -3.240756034851074
    5. ' 
' → logprob: -3.365756034851074
    6. '    
' → logprob: -3.365756034851074
    7. ':' → logprob: -4.740756034851074
    8. 'if' → logprob: -5.615756034851074
    9. '```' → logprob: -5.740756034851074
    10. ' win' → logprob: -5.865756034851074

Token 244: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5013670325279236
    2. 'if' → logprob: -1.0013670921325684
    3. '   ' → logprob: -3.6263670921325684
    4. 'win' → logprob: -9.12636661529541
    5. '	if' → logprob: -9.50136661529541
    6. ' ' → logprob: -10.12636661529541
    7. ' win' → logprob: -10.25136661529541
    8. 'i' → logprob: -10.75136661529541
    9. '  ' → logprob: -11.75136661529541
    10. ' i' → logprob: -12.37636661529541

Token 245: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006984249223023653
    2. ' if' → logprob: -5.006984233856201
    3. 'i' → logprob: -8.75698471069336
    4. '   ' → logprob: -9.25698471069336
    5. 'win' → logprob: -11.63198471069336
    6. ' ' → logprob: -12.38198471069336
    7. '  ' → logprob: -14.13198471069336
    8. ' i' → logprob: -14.13198471069336
    9. '	if' → logprob: -14.50698471069336
    10. 'If' → logprob: -15.38198471069336

Token 246: ' le' (ID: 505)
  Prédit: ' tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tt' → logprob: -0.003657910507172346
    2. 'tt' → logprob: -5.628657817840576
    3. ' ' → logprob: -10.128658294677734
    4. '  ' → logprob: -12.003658294677734
    5. '(tt' → logprob: -12.503658294677734
    6. ' ' → logprob: -12.628658294677734
    7. ' t' → logprob: -13.128658294677734
    8. '    ' → logprob: -13.253658294677734
    9. 't' → logprob: -14.503658294677734
    10. '_tt' → logprob: -15.378658294677734

Token 247: ' coup' (ID: 25465)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.09076663106679916
    2. ' tt' → logprob: -2.465766668319702
    3. 't' → logprob: -6.340766429901123
    4. ' t' → logprob: -10.715766906738281
    5. ' ' → logprob: -11.340766906738281
    6. '_tt' → logprob: -11.965766906738281
    7. '(tt' → logprob: -11.965766906738281
    8. ' ' → logprob: -12.715766906738281
    9. '  ' → logprob: -12.715766906738281
    10. '    ' → logprob: -12.840766906738281

Token 248: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09267105162143707
    2. '==' → logprob: -2.5926711559295654
    3. ' ' → logprob: -4.342670917510986
    4. 'tt' → logprob: -8.467671394348145
    5. ' tt' → logprob: -8.842671394348145
    6. '=' → logprob: -8.967671394348145
    7. '  ' → logprob: -9.592671394348145
    8. 't' → logprob: -10.342671394348145
    9. '=='' → logprob: -11.092671394348145
    10. ' =' → logprob: -11.342671394348145

Token 249: ' l' (ID: 305)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.00038348292582668364
    2. ' tt' → logprob: -7.875383377075195
    3. 't' → logprob: -13.000383377075195
    4. ' ' → logprob: -14.750383377075195
    5. '(tt' → logprob: -15.250383377075195
    6. '  ' → logprob: -15.875383377075195
    7. 'ttp' → logprob: -16.000383377075195
    8. 'tta' → logprob: -16.500383377075195
    9. 'tte' → logprob: -16.875383377075195
    10. '   ' → logprob: -16.875383377075195

Token 250: ''ad' (ID: 36162)
  Prédit: 'ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ad' → logprob: -0.47802895307540894
    2. ''ad' → logprob: -0.9780289530754089
    3. ' advers' → logprob: -6.103028774261475
    4. ''' → logprob: -6.853028774261475
    5. 't' → logprob: -8.728029251098633
    6. 'adj' → logprob: -9.103029251098633
    7. ''utilisateur' → logprob: -9.478029251098633
    8. '’ad' → logprob: -9.728029251098633
    9. 'adv' → logprob: -9.728029251098633
    10. 'tt' → logprob: -10.478029251098633

Token 251: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.00010700009443098679
    2. 'verse' → logprob: -9.875106811523438
    3. 'ers' → logprob: -10.750106811523438
    4. '   ' → logprob: -12.000106811523438
    5. '#' → logprob: -12.250106811523438
    6. '{' → logprob: -12.375106811523438
    7. 'ivers' → logprob: -12.625106811523438
    8. 'v' → logprob: -13.000106811523438
    9. 'erse' → logprob: -13.250106811523438
    10. ' advers' → logprob: -13.250106811523438

Token 252: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.1322215497493744
    2. 'oire' → logprob: -2.2572214603424072
    3. 'oir' → logprob: -4.382221698760986
    4. 'ère' → logprob: -6.757221698760986
    5. 'ere' → logprob: -6.882221698760986
    6. 'aise' → logprob: -7.132221698760986
    7. 'a' → logprob: -7.507221698760986
    8. 'erse' → logprob: -7.882221698760986
    9. 'oise' → logprob: -8.007221221923828
    10. 'ers' → logprob: -8.382221221923828

Token 253: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18014521896839142
    2. '==' → logprob: -1.805145263671875
    3. '=='' → logprob: -9.055145263671875
    4. '=' → logprob: -9.430145263671875
    5. ' ' → logprob: -10.055145263671875
    6. 's' → logprob: -10.180145263671875
    7. ' est' → logprob: -10.305145263671875
    8. 'est' → logprob: -10.430145263671875
    9. '=="' → logprob: -11.055145263671875
    10. '   ' → logprob: -12.055145263671875

Token 254: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009764233604073524
    2. 'R' → logprob: -4.884764194488525
    3. '"' → logprob: -7.009764194488525
    4. ''T' → logprob: -7.509764194488525
    5. ''S' → logprob: -7.884764194488525
    6. ' '' → logprob: -9.384764671325684
    7. '   ' → logprob: -9.384764671325684
    8. ''r' → logprob: -9.884764671325684
    9. '"P' → logprob: -10.634764671325684
    10. ' ' → logprob: -11.134764671325684

Token 255: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7631867527961731
    2. 's' → logprob: -0.8881867527961731
    3. ''' → logprob: -3.1381866931915283
    4. 'S' → logprob: -3.1381866931915283
    5. 'p' → logprob: -4.263186931610107
    6. 'G' → logprob: -4.888186931610107
    7. 'P' → logprob: -5.513186931610107
    8. 'R' → logprob: -6.013186931610107
    9. '"' → logprob: -6.388186931610107
    10. 'g' → logprob: -6.763186931610107

Token 256: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12612862884998322
    2. '':
' → logprob: -2.751128673553467
    3. '',' → logprob: -3.751128673553467
    4. '':' → logprob: -4.376128673553467
    5. 'e' → logprob: -4.751128673553467
    6. 'o' → logprob: -5.876128673553467
    7. 'u' → logprob: -6.376128673553467
    8. '':
' → logprob: -6.501128673553467
    9. 'a' → logprob: -6.751128673553467
    10. ' '' → logprob: -6.876128673553467

Token 257: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005384349264204502
    2. ',' → logprob: -6.25538444519043
    3. ' :' → logprob: -6.38038444519043
    4. ':
' → logprob: -6.50538444519043
    5. '   ' → logprob: -8.75538444519043
    6. ' ,' → logprob: -10.38038444519043
    7. ' :
' → logprob: -10.63038444519043
    8. ' ' → logprob: -11.50538444519043
    9. '  ' → logprob: -12.13038444519043
    10. '<|end|>' → logprob: -12.38038444519043

Token 258: 'p' (ID: 79)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5500736236572266
    2. 'r' → logprob: -1.9250736236572266
    3. '')' → logprob: -2.4250736236572266
    4. ')' → logprob: -2.8000736236572266
    5. '   ' → logprob: -2.9250736236572266
    6. ''r' → logprob: -3.8000736236572266
    7. ' win' → logprob: -4.550073623657227
    8. 'win' → logprob: -4.925073623657227
    9. ' ' → logprob: -5.050073623657227
    10. ' r' → logprob: -5.300073623657227

Token 259: 'ierre' (ID: 26825)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10900387912988663
    2. ')' → logprob: -4.109004020690918
    3. ':' → logprob: -4.484004020690918
    4. 'ython' → logprob: -4.734004020690918
    5. ' or' → logprob: -4.859004020690918
    6. ' ' → logprob: -5.109004020690918
    7. '')' → logprob: -5.109004020690918
    8. ',' → logprob: -5.109004020690918
    9. 'our' → logprob: -5.234004020690918
    10. ' r' → logprob: -5.359004020690918

Token 260: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8991513848304749
    2. '),' → logprob: -1.52415132522583
    3. ')' → logprob: -1.89915132522583
    4. '):
' → logprob: -2.64915132522583
    5. ''),' → logprob: -3.02415132522583
    6. ',' → logprob: -3.89915132522583
    7. ''):' → logprob: -4.14915132522583
    8. ' ),' → logprob: -4.27415132522583
    9. ''):
' → logprob: -4.39915132522583
    10. ' ):' → logprob: -4.39915132522583

Token 261: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12521956861019135
    2. '   ' → logprob: -3.0002195835113525
    3. ',' → logprob: -3.1252195835113525
    4. ':
' → logprob: -4.000219345092773
    5. ' :' → logprob: -6.250219345092773
    6. ' ' → logprob: -6.875219345092773
    7. ' if' → logprob: -7.375219345092773
    8. ' :
' → logprob: -7.500219345092773
    9. ' ,' → logprob: -7.875219345092773
    10. '  ' → logprob: -8.250219345092773

Token 262: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0251771211624146
    2. 'if' → logprob: -1.1501771211624146
    3. '   ' → logprob: -1.2751771211624146
    4. 'win' → logprob: -4.400177001953125
    5. ' win' → logprob: -4.400177001953125
    6. ':' → logprob: -4.650177001953125
    7. 'i' → logprob: -5.400177001953125
    8. ' ' → logprob: -5.775177001953125
    9. ' i' → logprob: -7.150177001953125
    10. 'w' → logprob: -7.400177001953125

Token 263: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6255371570587158
    2. '   ' → logprob: -0.8755371570587158
    3. 'if' (adapté à ' if') → logprob: -3.500537157058716
    4. ' ' → logprob: -5.125536918640137
    5. ':' → logprob: -5.500536918640137
    6. ' win' → logprob: -6.125536918640137
    7. 'win' → logprob: -6.500536918640137
    8. '  ' → logprob: -7.125536918640137
    9. ' i' → logprob: -7.250536918640137
    10. ',' → logprob: -7.375536918640137

Token 264: ' tt' (ID: 34181)
  Prédit: ' tt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tt' → logprob: -0.06198382377624512
    2. 'tt' → logprob: -2.811983823776245
    3. '(tt' → logprob: -11.436984062194824
    4. ' ' → logprob: -13.186984062194824
    5. ' ' → logprob: -13.311984062194824
    6. 't' → logprob: -13.936984062194824
    7. '   ' → logprob: -14.811984062194824
    8. '_tt' → logprob: -14.936984062194824
    9. ' t' → logprob: -16.186983108520508
    10. '.tt' → logprob: -16.936983108520508

Token 265: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11606457829475403
    2. '==' → logprob: -2.2410645484924316
    3. '=='' → logprob: -5.866064548492432
    4. '=' → logprob: -8.49106502532959
    5. ' =='' → logprob: -9.24106502532959
    6. ' =' → logprob: -10.61606502532959
    7. '=="' → logprob: -10.86606502532959
    8. ' ' → logprob: -11.11606502532959
    9. ''' → logprob: -11.11606502532959
    10. '===' → logprob: -12.61606502532959

Token 266: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3979642689228058
    2. ''r' → logprob: -1.1479642391204834
    3. ' '' → logprob: -4.6479644775390625
    4. ''p' → logprob: -7.3979644775390625
    5. '"' → logprob: -7.7729644775390625
    6. 'r' → logprob: -9.022964477539062
    7. ''a' → logprob: -9.397964477539062
    8. ''q' → logprob: -10.272964477539062
    9. ''o' → logprob: -10.397964477539062
    10. ''t' → logprob: -10.397964477539062

Token 267: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9146995327901095e-05
    2. 'p' → logprob: -11.125019073486328
    3. 's' → logprob: -13.250019073486328
    4. ''r' → logprob: -13.375019073486328
    5. ''' → logprob: -13.875019073486328
    6. ' r' → logprob: -17.000019073486328
    7. ''p' → logprob: -17.500019073486328
    8. '"' → logprob: -18.000019073486328
    9. '_r' → logprob: -18.125019073486328
    10. '	r' → logprob: -18.500019073486328

Token 268: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.5209810733795166
    2. '':' → logprob: -1.0209810733795166
    3. ''' → logprob: -3.1459810733795166
    4. ':' → logprob: -6.6459808349609375
    5. '':
' → logprob: -7.1459808349609375
    6. ' '' → logprob: -8.395980834960938
    7. ':
' → logprob: -8.645980834960938
    8. '):
' → logprob: -9.395980834960938
    9. ')' → logprob: -9.770980834960938
    10. '':

' → logprob: -10.020980834960938

Token 269: '       ' (ID: 309)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.6838222742080688
    2. '       ' → logprob: -0.8088222742080688
    3. ' win' → logprob: -3.5588221549987793
    4. '   ' → logprob: -4.183822154998779
    5. '	win' → logprob: -5.683822154998779
    6. '    
' → logprob: -7.433822154998779
    7. 'w' → logprob: -7.558822154998779
    8. '        
' → logprob: -7.558822154998779
    9. ' 
' → logprob: -8.558822631835938
    10. ' ' → logprob: -8.808822631835938

Token 270: ' #' (ID: 1069)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.00161555758677423
    2. '   ' → logprob: -7.251615524291992
    3. ' win' → logprob: -7.876615524291992
    4. 'w' → logprob: -8.251615524291992
    5. '       ' → logprob: -8.626615524291992
    6. '           ' → logprob: -9.626615524291992
    7. '	win' → logprob: -11.751615524291992
    8. '
' → logprob: -12.001615524291992
    9. '    
' → logprob: -13.376615524291992
    10. '        
' → logprob: -14.126615524291992

Token 271: ' Aj' (ID: 28294)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0032844250090420246
    2. '       ' → logprob: -6.753284454345703
    3. '   ' → logprob: -7.003284454345703
    4. 'w' → logprob: -7.503284454345703
    5. ' win' → logprob: -7.503284454345703
    6. '           ' → logprob: -10.253284454345703
    7. '	win' → logprob: -10.378284454345703
    8. 'ans' → logprob: -12.253284454345703
    9. '
' → logprob: -13.003284454345703
    10. 'u' → logprob: -13.128284454345703

Token 272: 'out' (ID: 468)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.26802149415016174
    2. 'oute' → logprob: -2.143021583557129
    3. 'out' → logprob: -2.268021583557129
    4. 'outez' → logprob: -4.393021583557129
    5. '   ' → logprob: -7.018021583557129
    6. '       ' → logprob: -8.268021583557129
    7. '      ' → logprob: -9.393021583557129
    8. 'our' → logprob: -9.518021583557129
    9. ' win' → logprob: -9.643021583557129
    10. 'win' → logprob: -9.768021583557129

Token 273: ' de' (ID: 334)
  Prédit: ' win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' win' → logprob: -1.1447738409042358
    2. 'win' → logprob: -1.5197738409042358
    3. '('' → logprob: -1.6447738409042358
    4. ''' → logprob: -1.8947738409042358
    5. '   ' → logprob: -3.0197739601135254
    6. '       ' → logprob: -4.144773960113525
    7. ' P' → logprob: -4.269773960113525
    8. ' '' → logprob: -4.519773960113525
    9. ' ('' → logprob: -5.269773960113525
    10. '(win' → logprob: -5.269773960113525

Token 274: ' '' (ID: 461)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.7892084717750549
    2. ''' → logprob: -1.2892084121704102
    3. 'win' → logprob: -2.28920841217041
    4. ''S' → logprob: -2.28920841217041
    5. 'S' → logprob: -3.16420841217041
    6. ''s' → logprob: -4.28920841217041
    7. ''p' → logprob: -5.53920841217041
    8. ' P' → logprob: -6.16420841217041
    9. ' win' → logprob: -6.28920841217041
    10. 'p' → logprob: -6.78920841217041

Token 275: 'p' (ID: 79)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.1911885291337967
    2. ''' → logprob: -2.3161885738372803
    3. 'p' → logprob: -2.9411885738372803
    4. ''s' → logprob: -4.441188335418701
    5. 'P' → logprob: -4.941188335418701
    6. ''S' → logprob: -5.816188335418701
    7. 's' → logprob: -8.19118881225586
    8. '"P' → logprob: -8.69118881225586
    9. ' '' → logprob: -9.81618881225586
    10. '')' → logprob: -10.06618881225586

Token 276: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08909911662340164
    2. '')' → logprob: -2.464099168777466
    3. ''''' → logprob: -10.464098930358887
    4. ' ')' → logprob: -10.714098930358887
    5. '<|end|>' → logprob: -10.964098930358887
    6. ' '' → logprob: -11.589098930358887
    7. '''' → logprob: -11.964098930358887
    8. '')
' → logprob: -12.089098930358887
    9. ''p' → logprob: -12.089098930358887
    10. ')' → logprob: -12.339098930358887

Token 277: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5897800922393799
    2. ' to' → logprob: -1.2147800922393799
    3. ' ' → logprob: -3.21478009223938
    4. '       ' → logprob: -3.21478009223938
    5. '   ' → logprob: -3.58978009223938
    6. 'to' → logprob: -3.96478009223938
    7. ' )' → logprob: -5.714779853820801
    8. '  ' → logprob: -5.839779853820801
    9. '           ' → logprob: -5.964779853820801
    10. ',' → logprob: -6.339779853820801

Token 278: 'papier' (ID: 126960)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.5304083228111267
    2. ')' → logprob: -1.7804083824157715
    3. '')' → logprob: -2.2804083824157715
    4. 'p' → logprob: -2.5304083824157715
    5. ''' → logprob: -3.5304083824157715
    6. ' win' → logprob: -4.0304083824157715
    7. ''p' → logprob: -5.2804083824157715
    8. '`)' → logprob: -6.7804083824157715
    9. '")' → logprob: -6.9054083824157715
    10. ' p' → logprob: -7.2804083824157715

Token 279: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019585883244872093
    2. '')' → logprob: -4.019586086273193
    3. ' )' → logprob: -6.644586086273193
    4. ''' → logprob: -9.894585609436035
    5. '),' → logprob: -10.769585609436035
    6. ' ' → logprob: -11.019585609436035
    7. ')
' → logprob: -11.394585609436035
    8. '")' → logprob: -11.894585609436035
    9. ',' → logprob: -12.269585609436035
    10. ')

' → logprob: -12.894585609436035

Token 280: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5087669491767883
    2. ')' → logprob: -1.2587668895721436
    3. '   ' → logprob: -3.6337668895721436
    4. ',' → logprob: -3.7587668895721436
    5. ' to' → logprob: -3.7587668895721436
    6. '           ' → logprob: -3.8837668895721436
    7. 'win' → logprob: -4.883767127990723
    8. ' à' → logprob: -5.633767127990723
    9. ')
' → logprob: -6.133767127990723
    10. 'to' → logprob: -6.883767127990723

Token 281: ' la' (ID: 557)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0549507737159729
    2. ' win' → logprob: -2.929950714111328
    3. ' la' → logprob: -10.304950714111328
    4. 'la' → logprob: -11.554950714111328
    5. '	win' → logprob: -11.554950714111328
    6. ' ' → logprob: -11.929950714111328
    7. '   ' → logprob: -12.554950714111328
    8. '(win' → logprob: -13.554950714111328
    9. '```' → logprob: -13.929950714111328
    10. 'l' → logprob: -14.679950714111328

Token 282: ' liste' (ID: 31719)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -9.491498531133402e-06
    2. 'list' → logprob: -12.125009536743164
    3. ' win' → logprob: -12.500009536743164
    4. 'w' → logprob: -16.250009536743164
    5. 'wind' → logprob: -16.500009536743164
    6. 'wins' → logprob: -17.000009536743164
    7. 'liste' → logprob: -17.000009536743164
    8. 'wi' → logprob: -17.500009536743164
    9. '	win' → logprob: -17.750009536743164
    10. ' ' → logprob: -18.250009536743164

Token 283: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.043169666081666946
    2. ' win' → logprob: -3.1681697368621826
    3. '(win' → logprob: -9.418169975280762
    4. '('' → logprob: -10.668169975280762
    5. '	win' → logprob: -10.918169975280762
    6. '   ' → logprob: -11.043169975280762
    7. ' ' → logprob: -11.793169975280762
    8. '_win' → logprob: -12.668169975280762
    9. '.win' → logprob: -12.668169975280762
    10. '['' → logprob: -12.918169975280762

Token 284: ',' (ID: 11)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3756779730319977
    2. 'win' → logprob: -1.3756779432296753
    3. '   ' → logprob: -4.000678062438965
    4. '.' → logprob: -4.250678062438965
    5. '       ' → logprob: -4.625678062438965
    6. ')' → logprob: -4.875678062438965
    7. ',' → logprob: -5.250678062438965
    8. ' win' → logprob: -6.625678062438965
    9. '(win' → logprob: -6.625678062438965
    10. 'append' → logprob: -7.000678062438965

Token 285: ' car' (ID: 1669)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.41222187876701355
    2. ' win' → logprob: -1.287221908569336
    3. '       ' → logprob: -2.787221908569336
    4. '   ' → logprob: -9.287221908569336
    5. '	win' → logprob: -10.287221908569336
    6. '           ' → logprob: -10.787221908569336
    7. ' ' → logprob: -11.787221908569336
    8. '        ' → logprob: -11.912221908569336
    9. ' ' → logprob: -12.037221908569336
    10. '        
' → logprob: -12.412221908569336

Token 286: ' le' (ID: 505)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.34887316823005676
    2. ' win' → logprob: -1.2238731384277344
    3. ''' → logprob: -9.348873138427734
    4. '       ' → logprob: -9.348873138427734
    5. '   ' → logprob: -9.598873138427734
    6. '	win' → logprob: -9.723873138427734
    7. ' ' → logprob: -10.598873138427734
    8. ' '' → logprob: -10.848873138427734
    9. '"' → logprob: -11.348873138427734
    10. ' ' → logprob: -11.473873138427734

Token 287: ' papier' (ID: 46539)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.3361286222934723
    2. ' win' → logprob: -1.96112859249115
    3. 'papier' → logprob: -2.0861287117004395
    4. ' papier' → logprob: -4.8361287117004395
    5. 'p' → logprob: -5.0861287117004395
    6. 'paper' → logprob: -5.7111287117004395
    7. ' paper' → logprob: -6.5861287117004395
    8. 'pap' → logprob: -7.8361287117004395
    9. ' papi' → logprob: -8.336128234863281
    10. ' p' → logprob: -8.586128234863281

Token 288: ' bat' (ID: 10639)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.18918274343013763
    2. '       ' → logprob: -2.564182758331299
    3. '   ' → logprob: -2.939182758331299
    4. ' win' → logprob: -3.814182758331299
    5. 'win' → logprob: -4.939182758331299
    6. '.' → logprob: -6.064182758331299
    7. '           ' → logprob: -6.064182758331299
    8. ' ' → logprob: -6.439182758331299
    9. ' gagne' → logprob: -7.314182758331299
    10. '  ' → logprob: -7.564182758331299

Token 289: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.703333854675293
    2. ''r' → logprob: -1.453333854675293
    3. ' '' → logprob: -1.828333854675293
    4. 'r' → logprob: -2.453333854675293
    5. ' r' → logprob: -4.828333854675293
    6. ''p' → logprob: -5.078333854675293
    7. ''t' → logprob: -5.953333854675293
    8. ' ' → logprob: -6.078333854675293
    9. 'p' → logprob: -6.953333854675293
    10. 'rock' → logprob: -7.203333854675293

Token 290: ' pierre' (ID: 70323)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.42211809754371643
    2. 'p' → logprob: -1.297118067741394
    3. ' pierre' → logprob: -2.7971181869506836
    4. ''r' → logprob: -5.172118186950684
    5. ''p' → logprob: -6.422118186950684
    6. ''' → logprob: -7.422118186950684
    7. ' r' → logprob: -7.422118186950684
    8. 'rock' → logprob: -7.422118186950684
    9. 'rr' → logprob: -8.547118186950684
    10. ' p' → logprob: -8.672118186950684

Token 291: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039174795150756836
    2. '   ' → logprob: -4.164175033569336
    3. 'win' → logprob: -4.289175033569336
    4. ')' → logprob: -5.164175033569336
    5. '.' → logprob: -6.414175033569336
    6. ',' → logprob: -6.914175033569336
    7. ' win' → logprob: -8.414175033569336
    8. ')
' → logprob: -9.164175033569336
    9. '           ' → logprob: -9.414175033569336
    10. '
' → logprob: -9.789175033569336

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04531329497694969
    2. ' win' → logprob: -3.7953133583068848
    3. 'win' → logprob: -3.9203133583068848
    4. '   ' → logprob: -6.420313358306885
    5. '
' → logprob: -8.045312881469727
    6. '	win' → logprob: -11.295312881469727
    7. '           ' → logprob: -11.795312881469727
    8. '        
' → logprob: -11.920312881469727
    9. '      ' → logprob: -12.670312881469727
    10. '     ' → logprob: -13.045312881469727

Token 293: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' (adapté à ' win') → logprob: -0.03811998292803764
    2. ' win' → logprob: -3.2881200313568115
    3. '       ' → logprob: -9.91312026977539
    4. '   ' → logprob: -11.16312026977539
    5. 'p' → logprob: -11.66312026977539
    6. '	win' → logprob: -13.03812026977539
    7. 'w' → logprob: -13.78812026977539
    8. ' p' → logprob: -14.03812026977539
    9. ''' → logprob: -14.41312026977539
    10. '           ' → logprob: -15.03812026977539

Token 294: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006715728435665369
    2. '.' → logprob: -5.006715774536133
    3. 'append' → logprob: -15.381715774536133
    4. ' .' → logprob: -16.381715774536133
    5. '+=' → logprob: -17.381715774536133
    6. '.extend' → logprob: -17.881715774536133
    7. ' +=' → logprob: -18.631715774536133
    8. '.app' → logprob: -19.006715774536133
    9. ' append' → logprob: -19.756715774536133
    10. '.Append' → logprob: -19.881715774536133

Token 295: ' '' (ID: 461)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.3176995515823364
    2. ''p' → logprob: -1.3176995515823364
    3. ' ['' → logprob: -6.067699432373047
    4. ''' → logprob: -6.692699432373047
    5. '[p' → logprob: -7.317699432373047
    6. ' '' → logprob: -8.567699432373047
    7. '["' → logprob: -11.942699432373047
    8. '[' → logprob: -12.567699432373047
    9. ' p' → logprob: -13.192699432373047
    10. 'p' → logprob: -13.442699432373047

Token 296: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.726595241460018e-05
    2. ''p' → logprob: -10.25003719329834
    3. ''' → logprob: -13.75003719329834
    4. ' p' → logprob: -14.12503719329834
    5. '_p' → logprob: -17.000038146972656
    6. '['' → logprob: -17.625038146972656
    7. '	p' → logprob: -18.000038146972656
    8. '[p' → logprob: -18.250038146972656
    9. 'paper' → logprob: -18.375038146972656
    10. 'P' → logprob: -18.500038146972656

Token 297: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5332478142227046e-05
    2. ''
' → logprob: -11.375015258789062
    3. ''
' → logprob: -13.750015258789062
    4. '<|end|>' → logprob: -14.375015258789062
    5. '"' → logprob: -14.875015258789062
    6. ''''' → logprob: -15.000015258789062
    7. ' '' → logprob: -15.375015258789062
    8. '')' → logprob: -15.375015258789062
    9. ''#' → logprob: -15.375015258789062
    10. '''' → logprob: -15.500015258789062

Token 298: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0581582635641098
    2. '   ' → logprob: -3.9331581592559814
    3. ' elif' → logprob: -4.4331583976745605
    4. 'else' → logprob: -4.6831583976745605
    5. '
' → logprob: -5.5581583976745605
    6. '[' → logprob: -5.8081583976745605
    7. '<|end|>' → logprob: -6.1831583976745605
    8. ' else' → logprob: -6.4331583976745605
    9. 'if' → logprob: -6.9331583976745605
    10. '[]' → logprob: -7.1831583976745605

Token 299: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015839971601963043
    2. 'ans' → logprob: -4.89084005355835
    3. '   ' → logprob: -6.01584005355835
    4. ' ans' → logprob: -6.76584005355835
    5. '#' (adapté à ' #') → logprob: -7.01584005355835
    6. ' 
' → logprob: -7.26584005355835
    7. ';' → logprob: -7.39084005355835
    8. 'elif' → logprob: -7.39084005355835
    9. '\n' → logprob: -8.265839576721191
    10. '       ' → logprob: -8.265839576721191

Token 300: ' Aj' (ID: 28294)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4287152588367462
    2. 'ans' → logprob: -1.0537152290344238
    3. '	ans' → logprob: -12.178715705871582
    4. ' ' → logprob: -12.928715705871582
    5. ' ' → logprob: -13.428715705871582
    6. 'Ans' → logprob: -13.803715705871582
    7. '(ans' → logprob: -13.803715705871582
    8. '_ans' → logprob: -13.928715705871582
    9. '   ' → logprob: -14.053715705871582
    10. '
' → logprob: -15.178715705871582

Token 301: 'out' (ID: 468)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11842748522758484
    2. '+=' → logprob: -2.8684275150299072
    3. ' +=' → logprob: -3.7434275150299072
    4. 's' → logprob: -4.368427276611328
    5. 'outez' → logprob: -5.868427276611328
    6. 'outer' → logprob: -6.118427276611328
    7. ' ans' → logprob: -6.243427276611328
    8. '   ' → logprob: -6.243427276611328
    9. 'oute' → logprob: -6.368427276611328
    10. '=' → logprob: -6.868427276611328

Token 302: ' à' (ID: 1221)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06066914647817612
    2. ' ' → logprob: -3.560669183731079
    3. '+=' → logprob: -3.935669183731079
    4. ' de' → logprob: -5.1856689453125
    5. '+' → logprob: -6.3106689453125
    6. ' ans' → logprob: -7.0606689453125
    7. ' =' → logprob: -7.1856689453125
    8. '    ' → logprob: -7.5606689453125
    9. ' +' → logprob: -7.8106689453125
    10. '=' → logprob: -8.1856689453125

Token 303: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4741482436656952
    2. ' ans' → logprob: -0.9741482734680176
    3. 'P' → logprob: -10.47414779663086
    4. ' P' → logprob: -10.72414779663086
    5. '(ans' → logprob: -11.09914779663086
    6. '	ans' → logprob: -12.59914779663086
    7. 'score' → logprob: -14.34914779663086
    8. ' ' → logprob: -14.84914779663086
    9. '_ans' → logprob: -15.34914779663086
    10. 'answer' → logprob: -15.59914779663086

Token 304: ' du' (ID: 1462)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04400172457098961
    2. '+=' → logprob: -3.169001817703247
    3. '+' → logprob: -7.544001579284668
    4. ' +' → logprob: -8.669001579284668
    5. ' P' → logprob: -8.669001579284668
    6. ' ' → logprob: -9.044001579284668
    7. 'P' → logprob: -12.919001579284668
    8. ' R' → logprob: -13.169001579284668
    9. '=' → logprob: -13.669001579284668
    10. ' =' → logprob: -13.919001579284668

Token 305: ' score' (ID: 8429)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.17983923852443695
    2. ' P' → logprob: -1.8048392534255981
    3. ' ' → logprob: -10.304839134216309
    4. 'S' → logprob: -10.679839134216309
    5. '+' → logprob: -10.929839134216309
    6. ' +' → logprob: -11.554839134216309
    7. ' S' → logprob: -12.929839134216309
    8. '(P' → logprob: -13.304839134216309
    9. ' ' → logprob: -13.679839134216309
    10. ' (' → logprob: -13.929839134216309

Token 306: ' associé' (ID: 152099)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.30725935101509094
    2. ' +' → logprob: -1.8072593212127686
    3. '+=' → logprob: -2.9322593212127686
    4. '+' → logprob: -3.0572593212127686
    5. ' ' → logprob: -9.182259559631348
    6. ' P' → logprob: -11.307259559631348
    7. 'P' → logprob: -11.807259559631348
    8. ' de' → logprob: -12.057259559631348
    9. ' =' → logprob: -12.182259559631348
    10. '=' → logprob: -12.682259559631348

Token 307: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1926348209381104
    2. 'P' → logprob: -1.5676348209381104
    3. ' +' → logprob: -1.8176348209381104
    4. ' P' → logprob: -2.0676348209381104
    5. ' à' → logprob: -2.4426348209381104
    6. ' +=' → logprob: -2.9426348209381104
    7. '+=' → logprob: -3.8176348209381104
    8. ' de' → logprob: -4.192634582519531
    9. ' ' → logprob: -5.067634582519531
    10. '=' → logprob: -5.192634582519531

Token 308: ' battre' (ID: 163858)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.14270707964897156
    2. ' P' → logprob: -2.017707109451294
    3. ' ' → logprob: -10.767706871032715
    4. '+' → logprob: -12.142706871032715
    5. '  ' → logprob: -13.517706871032715
    6. '   ' → logprob: -13.892706871032715
    7. 'S' → logprob: -14.017706871032715
    8. 'p' → logprob: -14.392706871032715
    9. ' +' → logprob: -14.767706871032715
    10. '=P' → logprob: -14.892706871032715

Token 309: ' la' (ID: 557)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.34500575065612793
    2. ' P' → logprob: -1.345005750656128
    3. 'tt' → logprob: -4.345005989074707
    4. ' ' → logprob: -5.345005989074707
    5. ' tt' → logprob: -5.720005989074707
    6. ' '' → logprob: -6.345005989074707
    7. 'S' → logprob: -6.595005989074707
    8. ' le' → logprob: -6.595005989074707
    9. 'le' → logprob: -6.970005989074707
    10. ''' → logprob: -7.470005989074707

Token 310: ' pierre' (ID: 70323)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.39793235063552856
    2. ' pierre' → logprob: -2.022932291030884
    3. 'r' → logprob: -2.147932291030884
    4. 'tt' → logprob: -3.272932291030884
    5. 'pp' → logprob: -4.272932529449463
    6. 'pi' → logprob: -5.647932529449463
    7. 'rock' → logprob: -5.647932529449463
    8. 'papier' → logprob: -6.022932529449463
    9. 'P' → logprob: -6.147932529449463
    10. ''p' → logprob: -6.272932529449463

Token 311: ' (' (ID: 350)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.9951256513595581
    2. '+' → logprob: -1.370125651359558
    3. '+=' → logprob: -1.495125651359558
    4. ' +=' → logprob: -2.4951257705688477
    5. ' +' → logprob: -2.9951257705688477
    6. ' P' → logprob: -4.120125770568848
    7. '(P' → logprob: -6.995125770568848
    8. '=' → logprob: -7.245125770568848
    9. ',' → logprob: -7.370125770568848
    10. '[P' → logprob: -7.745125770568848

Token 312: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.07025150954723358
    2. ' P' → logprob: -2.69525146484375
    3. '+' → logprob: -9.07025146484375
    4. ')' → logprob: -9.57025146484375
    5. ' +' → logprob: -9.69525146484375
    6. ' ' → logprob: -10.69525146484375
    7. '(P' → logprob: -11.44525146484375
    8. ',' → logprob: -11.82025146484375
    9. '   ' → logprob: -12.82025146484375
    10. ' )' → logprob: -12.82025146484375

Token 313: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038419436663389206
    2. ' )' → logprob: -3.288419485092163
    3. ')
' → logprob: -9.163419723510742
    4. '+' → logprob: -9.163419723510742
    5. ')+' → logprob: -10.288419723510742
    6. '')' → logprob: -10.913419723510742
    7. ' ' → logprob: -11.163419723510742
    8. ' )
' → logprob: -11.288419723510742
    9. '   ' → logprob: -11.413419723510742
    10. '<|end|>' → logprob: -11.538419723510742

Token 314: '       ' (ID: 309)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.19021423161029816
    2. '+=' → logprob: -2.065214157104492
    3. ' P' → logprob: -3.690214157104492
    4. 'P' → logprob: -4.565214157104492
    5. '+' → logprob: -5.065214157104492
    6. ' +' → logprob: -6.440214157104492
    7. '=' → logprob: -6.565214157104492
    8. ' =' → logprob: -7.065214157104492
    9. ' ans' → logprob: -7.190214157104492
    10. 'ans' → logprob: -9.940214157104492

Token 315: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.32489505410194397
    2. 'ans' (adapté à ' ans') → logprob: -1.3248950242996216
    3. 'P' → logprob: -5.199894905090332
    4. ' P' → logprob: -6.074894905090332
    5. ' +=' → logprob: -6.824894905090332
    6. '+=' → logprob: -6.824894905090332
    7. '+' → logprob: -6.949894905090332
    8. ' +' → logprob: -8.074894905090332
    9. '(ans' → logprob: -8.949894905090332
    10. 'Ans' → logprob: -9.699894905090332

Token 316: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07899323105812073
    2. ' +=' → logprob: -2.578993320465088
    3. '+' → logprob: -9.20399284362793
    4. ']+=' → logprob: -13.07899284362793
    5. '=' → logprob: -14.45399284362793
    6. '+=(' → logprob: -16.95399284362793
    7. '+="' → logprob: -17.07899284362793
    8. '+='' → logprob: -17.07899284362793
    9. ' +' → logprob: -18.20399284362793
    10. ' =' → logprob: -18.32899284362793

Token 317: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00033546582562848926
    2. ' P' → logprob: -8.000335693359375
    3. ' ' → logprob: -17.000335693359375
    4. ' ' → logprob: -18.000335693359375
    5. '	P' → logprob: -18.125335693359375
    6. '(P' → logprob: -18.875335693359375
    7. '   ' → logprob: -19.250335693359375
    8. '_P' → logprob: -19.750335693359375
    9. '  ' → logprob: -19.875335693359375
    10. 'p' → logprob: -20.000335693359375

Token 318: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07300850749015808
    2. '
' → logprob: -2.6980085372924805
    3. 'elif' → logprob: -6.0730085372924805
    4. '    
' → logprob: -7.5730085372924805
    5. '<|end|>' → logprob: -9.44800853729248
    6. ' elif' → logprob: -9.57300853729248
    7. '  
' → logprob: -10.69800853729248
    8. '\n' → logprob: -11.32300853729248
    9. ' 
' → logprob: -11.32300853729248
    10. ')' → logprob: -11.69800853729248

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006546501070261002
    2. 'elif' → logprob: -5.131546497344971
    3. ' elif' → logprob: -7.506546497344971
    4. '
' → logprob: -10.381546974182129
    5. '    
' → logprob: -10.756546974182129
    6. '	elif' → logprob: -11.381546974182129
    7. '   ' → logprob: -13.631546974182129
    8. '\n' → logprob: -13.756546974182129
    9. ' ' → logprob: -14.881546974182129
    10. 'else' → logprob: -15.006546974182129

Token 320: ' #' (ID: 1069)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.015624058432877064
    2. ' elif' → logprob: -4.265624046325684
    3. 'else' → logprob: -7.140624046325684
    4. '   ' → logprob: -7.515624046325684
    5. ' else' → logprob: -9.390624046325684
    6. '	elif' → logprob: -11.265624046325684
    7. ' ' → logprob: -12.140624046325684
    8. '
' → logprob: -12.390624046325684
    9. '    
' → logprob: -12.640624046325684
    10. '\n' → logprob: -12.640624046325684

Token 321: ' Si' (ID: 7832)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.12703971564769745
    2. ' elif' → logprob: -2.127039670944214
    3. 'el' → logprob: -9.127039909362793
    4. ' el' → logprob: -13.627039909362793
    5. 'e' → logprob: -14.377039909362793
    6. 'else' → logprob: -14.752039909362793
    7. ' eli' → logprob: -15.877039909362793
    8. ' else' → logprob: -16.127038955688477
    9. 'if' → logprob: -16.252038955688477
    10. 'eli' → logprob: -16.377038955688477

Token 322: ' le' (ID: 505)
  Prédit: ' tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tt' → logprob: -0.0004977479111403227
    2. 'tt' → logprob: -7.625497817993164
    3. ' ' → logprob: -12.500497817993164
    4. ' ' → logprob: -12.750497817993164
    5. ' t' → logprob: -13.625497817993164
    6. 't' → logprob: -13.750497817993164
    7. ' elif' → logprob: -14.750497817993164
    8. '(tt' → logprob: -15.250497817993164
    9. 'elif' → logprob: -16.250497817993164
    10. '  ' → logprob: -16.250497817993164

Token 323: ' coup' (ID: 25465)
  Prédit: ' tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tt' → logprob: -0.029642406851053238
    2. 'tt' → logprob: -3.654642343521118
    3. 't' → logprob: -5.779642581939697
    4. ' t' → logprob: -9.154642105102539
    5. 'elif' → logprob: -9.404642105102539
    6. ' elif' → logprob: -9.904642105102539
    7. ' ' → logprob: -13.279642105102539
    8. '(tt' → logprob: -13.529642105102539
    9. 'tte' → logprob: -13.904642105102539
    10. 'else' → logprob: -13.904642105102539

Token 324: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5385006666183472
    2. 'tt' → logprob: -1.9135006666183472
    3. ' tt' → logprob: -2.0385007858276367
    4. '==' → logprob: -2.2885007858276367
    5. 'elif' → logprob: -4.038500785827637
    6. ' elif' → logprob: -4.663500785827637
    7. 't' → logprob: -4.913500785827637
    8. ' ' → logprob: -6.038500785827637
    9. ' ' → logprob: -8.913500785827637
    10. 'tte' → logprob: -9.538500785827637

Token 325: ' l' (ID: 305)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.3417613208293915
    2. ' tt' → logprob: -1.3417613506317139
    3. ''t' → logprob: -3.966761350631714
    4. 't' → logprob: -4.966761112213135
    5. ''' → logprob: -6.466761112213135
    6. ' t' → logprob: -8.091761589050293
    7. ' '' → logprob: -8.341761589050293
    8. ' ' → logprob: -10.966761589050293
    9. 'tte' → logprob: -11.091761589050293
    10. '(tt' → logprob: -11.091761589050293

Token 326: ''ad' (ID: 36162)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.22584356367588043
    2. 't' → logprob: -1.8508435487747192
    3. ''t' → logprob: -3.725843667984009
    4. ''ad' → logprob: -4.97584342956543
    5. 'l' → logprob: -5.35084342956543
    6. ''l' → logprob: -5.35084342956543
    7. ''' → logprob: -6.47584342956543
    8. 'tt' → logprob: -7.22584342956543
    9. 'if' → logprob: -7.35084342956543
    10. 'lt' → logprob: -8.10084342956543

Token 327: 'vers' (ID: 3674)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.002609663875773549
    2. ''' → logprob: -6.377609729766846
    3. '   ' → logprob: -8.502609252929688
    4. ' elif' → logprob: -8.627609252929688
    5. 'el' → logprob: -9.502609252929688
    6. 'd' → logprob: -9.627609252929688
    7. ''t' → logprob: -9.752609252929688
    8. 'else' → logprob: -9.752609252929688
    9. 't' → logprob: -9.877609252929688
    10. '==' → logprob: -10.002609252929688

Token 328: 'aire' (ID: 8189)
  Prédit: 'oire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oire' → logprob: -0.2749776244163513
    2. 'e' → logprob: -2.524977684020996
    3. 'if' → logprob: -3.274977684020996
    4. 'aire' → logprob: -3.649977684020996
    5. 'elif' → logprob: -4.399977684020996
    6. 'iere' → logprob: -4.399977684020996
    7. 'ière' → logprob: -4.524977684020996
    8. 'ère' → logprob: -4.649977684020996
    9. 'aise' → logprob: -4.899977684020996
    10. 'oir' → logprob: -5.024977684020996

Token 329: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02328857034444809
    2. '==' → logprob: -3.7732884883880615
    3. ' ' → logprob: -10.64828872680664
    4. 'elif' → logprob: -11.77328872680664
    5. ' elif' → logprob: -12.27328872680664
    6. ' =='' → logprob: -13.02328872680664
    7. '=='' → logprob: -13.64828872680664
    8. ' ' → logprob: -14.14828872680664
    9. ' =' → logprob: -14.52328872680664
    10. '=' → logprob: -14.77328872680664

Token 330: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3505503535270691
    2. ' '' → logprob: -1.2255504131317139
    3. ''t' → logprob: -7.225550174713135
    4. ''s' → logprob: -7.600550174713135
    5. ''r' → logprob: -8.350550651550293
    6. ' ' → logprob: -8.600550651550293
    7. ''a' → logprob: -10.100550651550293
    8. ' =' → logprob: -10.350550651550293
    9. ' ' → logprob: -10.350550651550293
    10. '"' → logprob: -10.475550651550293

Token 331: 's' (ID: 82)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.25306224822998047
    2. 's' → logprob: -1.5030622482299805
    3. ''p' → logprob: -7.6280622482299805
    4. ' s' → logprob: -8.12806224822998
    5. ' '' → logprob: -8.75306224822998
    6. ''' → logprob: -9.87806224822998
    7. ''r' → logprob: -10.00306224822998
    8. 'p' → logprob: -10.12806224822998
    9. '`s' → logprob: -10.50306224822998
    10. '"s' → logprob: -11.12806224822998

Token 332: ''' (ID: 6)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7638905048370361
    2. ':
' → logprob: -1.3888905048370361
    3. '==' → logprob: -2.013890504837036
    4. ':' → logprob: -2.138890504837036
    5. '   ' → logprob: -4.638890266418457
    6. 'elif' → logprob: -4.763890266418457
    7. '':
' → logprob: -5.138890266418457
    8. ' :
' → logprob: -5.638890266418457
    9. ''' → logprob: -5.888890266418457
    10. ' :' → logprob: -7.013890266418457

Token 333: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31037023663520813
    2. ':
' → logprob: -1.4353702068328857
    3. '   ' → logprob: -4.185370445251465
    4. ' ==' → logprob: -4.935370445251465
    5. '==' → logprob: -5.435370445251465
    6. 'elif' → logprob: -6.935370445251465
    7. ' :' → logprob: -7.810370445251465
    8. ' :
' → logprob: -7.935370445251465
    9. ':

' → logprob: -9.935370445251465
    10. ' elif' → logprob: -9.935370445251465

Token 334: 'c' (ID: 66)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.010642400942742825
    2. 's' → logprob: -5.1356425285339355
    3. ' '' → logprob: -6.0106425285339355
    4. ' s' → logprob: -6.3856425285339355
    5. ''' → logprob: -7.7606425285339355
    6. ''t' → logprob: -9.635642051696777
    7. ' ' → logprob: -10.760642051696777
    8. '')' → logprob: -11.385642051696777
    9. ''r' → logprob: -11.510642051696777
    10. 't' → logprob: -11.635642051696777

Token 335: 'iseaux' (ID: 131289)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0037277494557201862
    2. 'if' → logprob: -6.503727912902832
    3. ' elif' → logprob: -6.628727912902832
    4. ''' → logprob: -8.128727912902832
    5. 't' → logprob: -8.753727912902832
    6. 'el' → logprob: -9.628727912902832
    7. ' '' → logprob: -10.253727912902832
    8. ' ==' → logprob: -10.378727912902832
    9. ' ' → logprob: -10.378727912902832
    10. '`' → logprob: -10.503727912902832

Token 336: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25632286071777344
    2. '   ' → logprob: -2.3813228607177734
    3. ''):
' → logprob: -2.6313228607177734
    4. ':
' → logprob: -3.6313228607177734
    5. ':' → logprob: -4.131322860717773
    6. '):' → logprob: -4.756322860717773
    7. '       ' → logprob: -5.381322860717773
    8. ')' → logprob: -5.631322860717773
    9. '':
' → logprob: -7.256322860717773
    10. '')' → logprob: -7.506322860717773

Token 337: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4431919455528259
    2. ':
' → logprob: -1.0681920051574707
    3. '   ' → logprob: -4.318192005157471
    4. 'elif' → logprob: -7.568192005157471
    5. ' :
' → logprob: -8.568191528320312
    6. ' :' → logprob: -9.193191528320312
    7. 'if' → logprob: -9.818191528320312
    8. '       ' → logprob: -9.943191528320312
    9. ':

' → logprob: -10.443191528320312
    10. '=' → logprob: -10.818191528320312

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015519981971010566
    2. ' elif' → logprob: -7.751552104949951
    3. 'elif' → logprob: -8.126551628112793
    4. ':' → logprob: -8.251551628112793
    5. ' if' → logprob: -8.626551628112793
    6. ':
' → logprob: -9.126551628112793
    7. 'if' → logprob: -9.376551628112793
    8. '  ' → logprob: -10.001551628112793
    9. ' :' → logprob: -10.376551628112793
    10. ' ' → logprob: -10.751551628112793

Token 339: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06473050266504288
    2. 'elif' (adapté à ' elif') → logprob: -3.064730405807495
    3. ' elif' → logprob: -4.814730644226074
    4. 'if' → logprob: -5.439730644226074
    5. ' if' → logprob: -6.439730644226074
    6. ':' → logprob: -6.814730644226074
    7. '       ' → logprob: -7.939730644226074
    8. ':
' → logprob: -8.189730644226074
    9. ' :' → logprob: -10.189730644226074
    10. '  ' → logprob: -10.314730644226074

Token 340: ' tt' (ID: 34181)
  Prédit: ' tt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tt' → logprob: -0.00038777425652369857
    2. 'tt' → logprob: -7.875387668609619
    3. ' ' → logprob: -12.250388145446777
    4. ' ' → logprob: -13.250388145446777
    5. '(tt' → logprob: -14.500388145446777
    6. ' t' → logprob: -15.250388145446777
    7. '_tt' → logprob: -16.12538719177246
    8. ' ss' → logprob: -16.75038719177246
    9. ' TT' → logprob: -16.75038719177246
    10. ''' → logprob: -17.62538719177246

Token 341: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011048882268369198
    2. '==' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.261049270629883
    4. ' ' → logprob: -15.636049270629883
    5. '=='' → logprob: -16.136049270629883
    6. ' =='' → logprob: -16.386049270629883
    7. ' =' → logprob: -18.636049270629883
    8. '=' → logprob: -18.886049270629883
    9. '=="' → logprob: -19.386049270629883
    10. ' =="' → logprob: -19.511049270629883

Token 342: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6628235578536987
    2. ''' → logprob: -1.0378235578536987
    3. ''s' → logprob: -2.0378236770629883
    4. ' ' → logprob: -10.912823677062988
    5. ' s' → logprob: -11.037823677062988
    6. '('' → logprob: -11.912823677062988
    7. 's' → logprob: -12.162823677062988
    8. '"' → logprob: -12.412823677062988
    9. ''S' → logprob: -12.412823677062988
    10. ''r' → logprob: -12.912823677062988

Token 343: 's' (ID: 82)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.31978192925453186
    2. 'r' → logprob: -1.3197818994522095
    3. ''s' → logprob: -5.06978178024292
    4. 's' → logprob: -9.069782257080078
    5. ''' → logprob: -9.694782257080078
    6. ''p' → logprob: -11.069782257080078
    7. ' '' → logprob: -11.694782257080078
    8. ''z' → logprob: -12.569782257080078
    9. ' r' → logprob: -12.819782257080078
    10. ''q' → logprob: -13.819782257080078

Token 344: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.029480261728167534
    2. ':' → logprob: -3.654480218887329
    3. '':
' → logprob: -6.279480457305908
    4. ' :
' → logprob: -7.529480457305908
    5. '   ' → logprob: -7.904480457305908
    6. '       ' → logprob: -8.52947998046875
    7. '':' → logprob: -9.90447998046875
    8. '):
' → logprob: -10.40447998046875
    9. ''' → logprob: -10.40447998046875
    10. ' :' → logprob: -10.77947998046875

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004067202680744231
    2. '   ' → logprob: -8.000406265258789
    3. ':
' → logprob: -11.125406265258789
    4. ':' → logprob: -11.375406265258789
    5. ' win' → logprob: -11.500406265258789
    6. '      ' → logprob: -11.750406265258789
    7. '           ' → logprob: -12.625406265258789
    8. 'win' → logprob: -12.750406265258789
    9. '     ' → logprob: -12.875406265258789
    10. '    ' → logprob: -13.000406265258789

Token 346: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06477619707584381
    2. ' win' → logprob: -3.3147761821746826
    3. 'win' → logprob: -3.6897761821746826
    4. '   ' → logprob: -7.564776420593262
    5. '
' → logprob: -9.189776420593262
    6. ' ' → logprob: -9.314776420593262
    7. '      ' → logprob: -9.314776420593262
    8. '#' (adapté à ' #') → logprob: -9.439776420593262
    9. '           ' → logprob: -9.439776420593262
    10. ''' → logprob: -9.939776420593262

Token 347: ' Aj' (ID: 28294)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.45245975255966187
    2. ' win' → logprob: -1.2024598121643066
    3. '       ' → logprob: -2.8274598121643066
    4. '   ' → logprob: -5.577459812164307
    5. ' ' → logprob: -9.202459335327148
    6. '	win' → logprob: -9.452459335327148
    7. '
' → logprob: -9.827459335327148
    8. '```' → logprob: -9.827459335327148
    9. '           ' → logprob: -10.077459335327148
    10. '        
' → logprob: -10.577459335327148

Token 348: 'out' (ID: 468)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9837690591812134
    2. ' win' → logprob: -0.9837690591812134
    3. 'win' → logprob: -2.733768939971924
    4. '       ' → logprob: -2.983768939971924
    5. '=' → logprob: -3.108768939971924
    6. '    ' → logprob: -3.608768939971924
    7. '      ' → logprob: -3.983768939971924
    8. '     ' → logprob: -4.608768939971924
    9. '  ' → logprob: -4.983768939971924
    10. ' ' → logprob: -5.233768939971924

Token 349: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25865012407302856
    2. ' =' → logprob: -3.133650064468384
    3. ' '' → logprob: -3.258650064468384
    4. '=' → logprob: -3.383650064468384
    5. '       ' → logprob: -3.383650064468384
    6. ' de' → logprob: -3.758650064468384
    7. '        ' → logprob: -4.008650302886963
    8. '+=' → logprob: -4.133650302886963
    9. '    ' → logprob: -5.258650302886963
    10. ''' → logprob: -5.883650302886963

Token 350: ' '' (ID: 461)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.004725837614387274
    2. ''r' → logprob: -5.629725933074951
    3. ''' → logprob: -7.129725933074951
    4. ' '' → logprob: -8.379725456237793
    5. 'p' → logprob: -9.504725456237793
    6. 'r' → logprob: -11.754725456237793
    7. ''q' → logprob: -12.629725456237793
    8. ''d' → logprob: -13.129725456237793
    9. ' p' → logprob: -13.379725456237793
    10. '"' → logprob: -14.004725456237793

Token 351: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0034358962439000607
    2. ''r' → logprob: -5.878436088562012
    3. 'p' → logprob: -7.753436088562012
    4. ''' → logprob: -9.128436088562012
    5. ''p' → logprob: -9.378436088562012
    6. ' r' → logprob: -12.253436088562012
    7. 'R' → logprob: -13.253436088562012
    8. 'rock' → logprob: -14.503436088562012
    9. '_r' → logprob: -15.378436088562012
    10. '	r' → logprob: -15.378436088562012

Token 352: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07949937880039215
    2. ''
' → logprob: -2.5794994831085205
    3. '       ' → logprob: -8.704499244689941
    4. 'win' → logprob: -9.329499244689941
    5. ''
' → logprob: -9.829499244689941
    6. '   ' → logprob: -10.079499244689941
    7. '')' → logprob: -10.204499244689941
    8. ' +=' → logprob: -10.579499244689941
    9. ' '' → logprob: -10.704499244689941
    10. '':
' → logprob: -10.954499244689941

Token 353: ' (' (ID: 350)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2576605975627899
    2. '+=' → logprob: -1.7576606273651123
    3. ''' → logprob: -3.2576606273651123
    4. '+='' → logprob: -4.757660388946533
    5. '=' → logprob: -6.007660388946533
    6. ' '' → logprob: -6.507660388946533
    7. '       ' → logprob: -7.132660388946533
    8. ' =' → logprob: -7.507660388946533
    9. '+' → logprob: -7.757660388946533
    10. ' to' → logprob: -8.132660865783691

Token 354: 'p' (ID: 79)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.02311747521162033
    2. ''' → logprob: -4.023117542266846
    3. ' '' → logprob: -6.023117542266846
    4. 'r' → logprob: -6.273117542266846
    5. ''p' → logprob: -8.023117065429688
    6. '')' → logprob: -9.023117065429688
    7. ''q' → logprob: -9.898117065429688
    8. ' r' → logprob: -10.023117065429688
    9. ''y' → logprob: -11.023117065429688
    10. 'win' → logprob: -11.148117065429688

Token 355: 'ierre' (ID: 26825)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5408793091773987
    2. '')' → logprob: -0.9158793091773987
    3. 'win' → logprob: -4.665879249572754
    4. '']' → logprob: -6.665879249572754
    5. '<|end|>' → logprob: -6.790879249572754
    6. '')
' → logprob: -6.915879249572754
    7. ''''' → logprob: -7.040879249572754
    8. ''>' → logprob: -7.290879249572754
    9. ')' → logprob: -7.290879249572754
    10. '''' → logprob: -7.915879249572754

Token 356: ')' (ID: 8)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.47570520639419556
    2. ')' → logprob: -0.9757052063941956
    3. ''' → logprob: -7.475705146789551
    4. '       ' → logprob: -7.850705146789551
    5. '   ' → logprob: -8.72570514678955
    6. ' )' → logprob: -8.85070514678955
    7. '')
' → logprob: -9.35070514678955
    8. ')
' → logprob: -9.72570514678955
    9. ')+' → logprob: -10.22570514678955
    10. ' ')' → logprob: -10.35070514678955

Token 357: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08410918712615967
    2. ' to' → logprob: -3.334109306335449
    3. ' +=' → logprob: -4.084109306335449
    4. '   ' → logprob: -4.459109306335449
    5. ' win' → logprob: -5.459109306335449
    6. '+=' → logprob: -5.959109306335449
    7. ''' → logprob: -6.084109306335449
    8. 'win' → logprob: -6.209109306335449
    9. '=' → logprob: -7.334109306335449
    10. '        ' → logprob: -7.334109306335449

Token 358: ' la' (ID: 557)
  Prédit: ' win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' win' → logprob: -0.8572267889976501
    2. ''' → logprob: -1.357226848602295
    3. 'win' → logprob: -1.732226848602295
    4. ' '' → logprob: -1.982226848602295
    5. ''w' → logprob: -6.857226848602295
    6. ' ' → logprob: -7.232226848602295
    7. 'w' → logprob: -7.607226848602295
    8. ''s' → logprob: -7.857226848602295
    9. ' w' → logprob: -8.232226371765137
    10. ' ' → logprob: -9.232226371765137

Token 359: ' liste' (ID: 31719)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.004554134793579578
    2. ' win' → logprob: -5.504554271697998
    3. 'list' → logprob: -7.754554271697998
    4. ''' → logprob: -11.00455379486084
    5. 'liste' → logprob: -11.75455379486084
    6. '`' → logprob: -12.37955379486084
    7. 'w' → logprob: -12.75455379486084
    8. 'ist' → logprob: -13.25455379486084
    9. 'l' → logprob: -13.25455379486084
    10. ' list' → logprob: -13.37955379486084

Token 360: ' win' (ID: 4449)
  Prédit: ' win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' win' → logprob: -0.9007487297058105
    2. ' +=' → logprob: -1.0257487297058105
    3. 'win' → logprob: -2.0257487297058105
    4. ' '' → logprob: -2.6507487297058105
    5. ''' → logprob: -4.7757487297058105
    6. ' ['' → logprob: -4.9007487297058105
    7. '+=' → logprob: -5.1507487297058105
    8. ' ' → logprob: -6.1507487297058105
    9. '+' → logprob: -6.1507487297058105
    10. ' +' → logprob: -6.2757487297058105

Token 361: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2827208936214447
    2. '+=' → logprob: -1.407720923423767
    3. '+='' → logprob: -6.532721042633057
    4. '+' → logprob: -10.032720565795898
    5. '+="' → logprob: -10.657720565795898
    6. '   ' → logprob: -11.032720565795898
    7. '=' → logprob: -11.407720565795898
    8. ' ' → logprob: -12.282720565795898
    9. ']+=' → logprob: -12.282720565795898
    10. ' +' → logprob: -13.532720565795898

Token 362: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4203770160675049
    2. ' win' → logprob: -2.045377016067505
    3. ' '' → logprob: -2.295377016067505
    4. ''' → logprob: -2.795377016067505
    5. 'win' → logprob: -3.045377016067505
    6. '        ' → logprob: -7.045376777648926
    7. '   ' → logprob: -7.670376777648926
    8. ' ' → logprob: -7.795376777648926
    9. '"' → logprob: -8.170376777648926
    10. '['' → logprob: -8.607876777648926

Token 363: ' la' (ID: 557)
  Prédit: ' win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' win' → logprob: -0.14937648177146912
    2. ' '' → logprob: -2.899376392364502
    3. 'win' → logprob: -3.024376392364502
    4. ''' → logprob: -3.399376392364502
    5. ' ' → logprob: -7.274376392364502
    6. ' ' → logprob: -8.52437686920166
    7. '	win' → logprob: -8.52437686920166
    8. '           ' → logprob: -9.64937686920166
    9. '"' → logprob: -9.77437686920166
    10. ''s' → logprob: -9.89937686920166

Token 364: ' pierre' (ID: 70323)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.3603009283542633
    2. 'r' → logprob: -1.485300898551941
    3. 'w' → logprob: -3.2353010177612305
    4. ' win' → logprob: -3.6103010177612305
    5. ''' → logprob: -5.9853010177612305
    6. ' r' → logprob: -6.2353010177612305
    7. 'p' → logprob: -6.4853010177612305
    8. ''r' → logprob: -6.8603010177612305
    9. ' '' → logprob: -6.9853010177612305
    10. 's' → logprob: -7.6103010177612305

Token 365: ' bat' (ID: 10639)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14800143241882324
    2. '+=' → logprob: -2.0230014324188232
    3. '+='' → logprob: -5.273001670837402
    4. '+' → logprob: -9.148001670837402
    5. '+="' → logprob: -10.648001670837402
    6. ' ' → logprob: -11.148001670837402
    7. ']+=' → logprob: -11.523001670837402
    8. ''' → logprob: -11.898001670837402
    9. ' +' → logprob: -12.148001670837402
    10. '=' → logprob: -12.773001670837402

Token 366: ' les' (ID: 1341)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.019944695755839348
    2. ' '' → logprob: -4.394944667816162
    3. ''' → logprob: -5.019944667816162
    4. ''p' → logprob: -8.76994514465332
    5. 's' → logprob: -9.14494514465332
    6. ''t' → logprob: -9.26994514465332
    7. ''z' → logprob: -9.51994514465332
    8. ''r' → logprob: -9.51994514465332
    9. '`s' → logprob: -9.76994514465332
    10. ''S' → logprob: -10.14494514465332

Token 367: ' c' (ID: 274)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.2532397508621216
    2. ''' → logprob: -2.253239631652832
    3. 's' → logprob: -2.753239631652832
    4. ' '' → logprob: -3.753239631652832
    5. ' s' → logprob: -4.503239631652832
    6. ''p' → logprob: -4.503239631652832
    7. 'p' → logprob: -5.628239631652832
    8. 'c' → logprob: -5.878239631652832
    9. ''a' → logprob: -7.003239631652832
    10. ' c' → logprob: -7.003239631652832

Token 368: 'iseaux' (ID: 131289)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.4037070870399475
    2. ''p' → logprob: -2.1537070274353027
    3. ''a' → logprob: -2.2787070274353027
    4. ''s' → logprob: -3.0287070274353027
    5. ''' → logprob: -3.1537070274353027
    6. ''e' → logprob: -5.028707027435303
    7. 'i' → logprob: -5.403707027435303
    8. ''u' → logprob: -5.528707027435303
    9. ''o' → logprob: -6.528707027435303
    10. 'a' → logprob: -6.528707027435303

Token 369: '.
' (ID: 558)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8200080394744873
    2. '       ' → logprob: -0.9450080394744873
    3. ' +=' → logprob: -1.9450080394744873
    4. '+
' → logprob: -4.320008277893066
    5. '+' → logprob: -5.070008277893066
    6. 'win' → logprob: -5.820008277893066
    7. '=' → logprob: -6.695008277893066
    8. ''' → logprob: -6.820008277893066
    9. '+='' → logprob: -7.320008277893066
    10. '
' → logprob: -7.945008277893066

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06850981712341309
    2. ' win' → logprob: -3.193509817123413
    3. 'win' → logprob: -3.693509817123413
    4. '=' → logprob: -10.068510055541992
    5. '      ' → logprob: -10.193510055541992
    6. '   ' → logprob: -10.443510055541992
    7. '
' → logprob: -10.443510055541992
    8. '        ' → logprob: -10.568510055541992
    9. '        
' → logprob: -11.193510055541992
    10. ' =' → logprob: -11.318510055541992

Token 371: ' win' (ID: 4449)
  Prédit: ' win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' win' → logprob: -0.016771038994193077
    2. 'win' (adapté à ' win') → logprob: -4.266770839691162
    3. ''' → logprob: -6.641770839691162
    4. ' '' → logprob: -7.641770839691162
    5. '       ' → logprob: -8.26677131652832
    6. ' r' → logprob: -9.26677131652832
    7. ' ' → logprob: -9.76677131652832
    8. '	win' → logprob: -9.76677131652832
    9. '   ' → logprob: -9.89177131652832
    10. '['' → logprob: -10.14177131652832

Token 372: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.018157435581088066
    2. '+=' → logprob: -4.018157482147217
    3. '+='' → logprob: -12.393157005310059
    4. ' +' → logprob: -13.643157005310059
    5. '+' → logprob: -13.893157005310059
    6. '+="' → logprob: -14.393157005310059
    7. ' ' → logprob: -15.143157005310059
    8. '=' → logprob: -15.643157005310059
    9. ']+=' → logprob: -15.893157005310059
    10. ' ' → logprob: -16.268157958984375

Token 373: ' '' (ID: 461)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''r' → logprob: -5.741137283621356e-05
    2. ' '' → logprob: -10.500057220458984
    3. 'r' → logprob: -10.750057220458984
    4. ''s' → logprob: -12.375057220458984
    5. '"' → logprob: -13.250057220458984
    6. ''p' → logprob: -13.500057220458984
    7. '['' → logprob: -15.125057220458984
    8. ''' → logprob: -15.375057220458984
    9. ' ' → logprob: -15.750057220458984
    10. '`' → logprob: -16.625057220458984

Token 374: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01418289914727211
    2. ''r' → logprob: -4.264183044433594
    3. ''' → logprob: -11.514183044433594
    4. ''p' → logprob: -12.389183044433594
    5. ' r' → logprob: -12.889183044433594
    6. 'p' → logprob: -13.514183044433594
    7. ''s' → logprob: -13.764183044433594
    8. '['' → logprob: -16.264183044433594
    9. ' '' → logprob: -16.639183044433594
    10. '"' → logprob: -17.139183044433594

Token 375: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018885308876633644
    2. '
' → logprob: -4.018885135650635
    3. '   ' → logprob: -8.143885612487793
    4. ')
' → logprob: -8.143885612487793
    5. '        
' → logprob: -10.143885612487793
    6. '<|end|>' → logprob: -10.893885612487793
    7. ')' → logprob: -11.143885612487793
    8. ''
' → logprob: -11.393885612487793
    9. ' 
' → logprob: -11.643885612487793
    10. '
' → logprob: -12.268885612487793

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002238162560388446
    2. '   ' → logprob: -6.2522382736206055
    3. 'elif' → logprob: -8.377238273620605
    4. '```' → logprob: -10.877238273620605
    5. '<|end|>' → logprob: -11.127238273620605
    6. '
' → logprob: -11.377238273620605
    7. ' ' → logprob: -11.752238273620605
    8. 'else' → logprob: -11.877238273620605
    9. '        
' → logprob: -12.752238273620605
    10. ' elif' → logprob: -12.877238273620605

Token 377: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02514752559363842
    2. '   ' → logprob: -4.400147438049316
    3. '
' → logprob: -4.650147438049316
    4. '#' (adapté à ' #') → logprob: -6.525147438049316
    5. '<|end|>' → logprob: -7.525147438049316
    6. ' ' → logprob: -7.775147438049316
    7. '```' → logprob: -8.025147438049316
    8. ' #' → logprob: -10.025147438049316
    9. '  ' → logprob: -10.150147438049316
    10. '      ' → logprob: -10.525147438049316

Token 378: ' Aj' (ID: 28294)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5759557485580444
    2. ' ans' → logprob: -0.8259557485580444
    3. '	ans' → logprob: -12.075955390930176
    4. '(ans' → logprob: -12.700955390930176
    5. '   ' → logprob: -13.075955390930176
    6. '
' → logprob: -13.200955390930176
    7. '       ' → logprob: -14.075955390930176
    8. ' ' → logprob: -14.200955390930176
    9. ' ' → logprob: -14.200955390930176
    10. '_ans' → logprob: -14.325955390930176

Token 379: 'out' (ID: 468)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.36614879965782166
    2. ' +=' → logprob: -1.866148829460144
    3. 'ns' → logprob: -2.2411487102508545
    4. 'ans' → logprob: -3.3661487102508545
    5. 'dd' → logprob: -4.991148948669434
    6. ' ' → logprob: -6.241148948669434
    7. ' ' → logprob: -7.241148948669434
    8. '  ' → logprob: -8.116148948669434
    9. '+' → logprob: -8.241148948669434
    10. '   ' → logprob: -8.491148948669434

Token 380: ' à' (ID: 1221)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.114203080534935
    2. '+=' → logprob: -3.1142029762268066
    3. '=' → logprob: -3.2392029762268066
    4. ' =' → logprob: -3.9892029762268066
    5. ' à' → logprob: -6.239202976226807
    6. ' P' → logprob: -6.364202976226807
    7. ' ans' → logprob: -7.114202976226807
    8. ' ' → logprob: -7.864202976226807
    9. '+' → logprob: -8.239203453063965
    10. ' de' → logprob: -8.489203453063965

Token 381: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6777129173278809
    2. 'ans' → logprob: -0.8027129173278809
    3. 'S' → logprob: -3.302712917327881
    4. ' S' → logprob: -4.927712917327881
    5. ' ' → logprob: -10.802713394165039
    6. 'P' → logprob: -10.927713394165039
    7. ' P' → logprob: -11.177713394165039
    8. '	ans' → logprob: -11.552713394165039
    9. '(ans' → logprob: -12.427713394165039
    10. 's' → logprob: -12.552713394165039

Token 382: ' du' (ID: 1462)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.022279920056462288
    2. '+=' → logprob: -4.022279739379883
    3. ' +' → logprob: -6.022279739379883
    4. '+' → logprob: -6.647279739379883
    5. ' ' → logprob: -7.897279739379883
    6. ' ' → logprob: -11.522279739379883
    7. '=' → logprob: -12.397279739379883
    8. ' =' → logprob: -12.772279739379883
    9. ' of' → logprob: -13.522279739379883
    10. ' P' → logprob: -13.647279739379883

Token 383: ' score' (ID: 8429)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03435928374528885
    2. ' S' → logprob: -3.4093592166900635
    3. 'R' → logprob: -7.284359455108643
    4. ' R' → logprob: -10.909358978271484
    5. ' ' → logprob: -11.909358978271484
    6. ' ' → logprob: -13.284358978271484
    7. '	S' → logprob: -16.159358978271484
    8. '   ' → logprob: -16.534358978271484
    9. '  ' → logprob: -17.034358978271484
    10. '+' → logprob: -17.534358978271484

Token 384: ' associé' (ID: 152099)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01564823091030121
    2. '+=' → logprob: -4.390648365020752
    3. ' +' → logprob: -6.265648365020752
    4. '+' → logprob: -7.015648365020752
    5. ' ' → logprob: -8.765647888183594
    6. ' associated' → logprob: -9.015647888183594
    7. ' ' → logprob: -10.265647888183594
    8. 'associated' → logprob: -11.640647888183594
    9. '=' → logprob: -13.265647888183594
    10. '```' → logprob: -13.390647888183594

Token 385: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.20977403223514557
    2. 'à' → logprob: -2.4597740173339844
    3. ' +=' → logprob: -3.5847740173339844
    4. '       ' → logprob: -4.084774017333984
    5. '=' → logprob: -4.334774017333984
    6. '   ' → logprob: -4.459774017333984
    7. '+=' → logprob: -4.959774017333984
    8. '+' → logprob: -5.459774017333984
    9. ' =' → logprob: -5.709774017333984
    10. ' du' → logprob: -5.709774017333984

Token 386: ' battre' (ID: 163858)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0024970639497041702
    2. ' R' → logprob: -6.00249719619751
    3. ' ' → logprob: -11.252496719360352
    4. '
' → logprob: -13.377496719360352
    5. ' ' → logprob: -13.752496719360352
    6. 'r' → logprob: -14.002496719360352
    7. '  ' → logprob: -14.252496719360352
    8. '`' → logprob: -14.377496719360352
    9. 'n' → logprob: -14.502496719360352
    10. '```' → logprob: -14.752496719360352

Token 387: ' les' (ID: 1341)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.05065195634961128
    2. ' R' → logprob: -3.050652027130127
    3. 'S' → logprob: -6.300652027130127
    4. ' ' → logprob: -8.800651550292969
    5. ' S' → logprob: -9.800651550292969
    6. 's' → logprob: -12.550651550292969
    7. '	R' → logprob: -12.550651550292969
    8. '  ' → logprob: -12.800651550292969
    9. '   ' → logprob: -13.300651550292969
    10. 'r' → logprob: -13.300651550292969

Token 388: ' c' (ID: 274)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.002826157957315445
    2. 'R' → logprob: -6.12782621383667
    3. ' S' → logprob: -7.37782621383667
    4. ' ' → logprob: -11.752825736999512
    5. 's' → logprob: -12.877825736999512
    6. ' R' → logprob: -13.127825736999512
    7. 'P' → logprob: -14.002825736999512
    8. '	S' → logprob: -14.502825736999512
    9. ' ' → logprob: -14.627825736999512
    10. '   ' → logprob: -14.752825736999512

Token 389: 'iseaux' (ID: 131289)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12695667147636414
    2. 's' → logprob: -2.2519567012786865
    3. '_s' → logprob: -4.626956462860107
    4. 'P' → logprob: -5.751956462860107
    5. '_S' → logprob: -8.126956939697266
    6. 'p' → logprob: -8.876956939697266
    7. '_p' → logprob: -9.251956939697266
    8. 'r' → logprob: -9.501956939697266
    9. ' s' → logprob: -9.626956939697266
    10. ' S' → logprob: -9.751956939697266

Token 390: ' (' (ID: 350)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.2163121700286865
    2. ' +' → logprob: -1.4663121700286865
    3. '       ' → logprob: -1.8413121700286865
    4. '(S' → logprob: -2.2163121700286865
    5. '+' → logprob: -2.3413121700286865
    6. ' (' → logprob: -3.0913121700286865
    7. '+=' → logprob: -3.5913121700286865
    8. '=' → logprob: -3.9663121700286865
    9. '(P' → logprob: -5.216312408447266
    10. '(' → logprob: -6.091312408447266

Token 391: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.016419311985373497
    2. 'S' → logprob: -4.141419410705566
    3. ' R' → logprob: -8.016419410705566
    4. ' ' → logprob: -10.516419410705566
    5. '   ' → logprob: -11.516419410705566
    6. '
' → logprob: -12.516419410705566
    7. '  ' → logprob: -12.641419410705566
    8. ' S' → logprob: -12.766419410705566
    9. '	R' → logprob: -13.016419410705566
    10. '
' → logprob: -13.516419410705566

Token 392: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00104305159766227
    2. ')
' → logprob: -7.00104284286499
    3. ' )' → logprob: -9.376043319702148
    4. '   ' → logprob: -10.751043319702148
    5. '       ' → logprob: -11.626043319702148
    6. ')

' → logprob: -12.751043319702148
    7. '<|end|>' → logprob: -12.876043319702148
    8. ')+' → logprob: -13.126043319702148
    9. ').' → logprob: -13.376043319702148
    10. '+' → logprob: -13.626043319702148

Token 393: '       ' (ID: 309)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.3634469509124756
    2. '       ' → logprob: -1.4884469509124756
    3. '+=' → logprob: -2.9884469509124756
    4. ' +=' → logprob: -4.238447189331055
    5. '+' → logprob: -5.363447189331055
    6. 'ans' → logprob: -5.738447189331055
    7. ' R' → logprob: -6.113447189331055
    8. '
' → logprob: -6.738447189331055
    9. ' ans' → logprob: -6.738447189331055
    10. '   ' → logprob: -7.738447189331055

Token 394: ' ans' (ID: 3345)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.3488028049468994
    2. ' R' → logprob: -1.2238028049468994
    3. 'S' → logprob: -8.84880256652832
    4. ' +=' → logprob: -9.22380256652832
    5. ' S' → logprob: -10.34880256652832
    6. '+' → logprob: -10.47380256652832
    7. '+=' → logprob: -10.72380256652832
    8. ' +' → logprob: -11.47380256652832
    9. '=' → logprob: -12.09880256652832
    10. ' ' → logprob: -12.47380256652832

Token 395: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0619848296046257
    2. '+=' → logprob: -2.8119847774505615
    3. '+' → logprob: -11.43698501586914
    4. ' +' → logprob: -12.06198501586914
    5. ']+=' → logprob: -15.18698501586914
    6. '=' → logprob: -16.06198501586914
    7. ' ' → logprob: -16.68698501586914
    8. '+='' → logprob: -16.81198501586914
    9. '+="' → logprob: -17.18698501586914
    10. ' ' → logprob: -17.31198501586914

Token 396: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -8.554343366995454e-05
    2. ' R' → logprob: -9.375085830688477
    3. ' ' → logprob: -15.500085830688477
    4. '	R' → logprob: -15.625085830688477
    5. 'S' → logprob: -15.875085830688477
    6. '   ' → logprob: -16.625085830688477
    7. '  ' → logprob: -17.750085830688477
    8. 'r' → logprob: -17.875085830688477
    9. '
' → logprob: -18.125085830688477
    10. ' ' → logprob: -18.625085830688477

Token 397: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007212492637336254
    2. 'elif' → logprob: -7.875721454620361
    3. '
' → logprob: -8.375720977783203
    4. '```' → logprob: -9.750720977783203
    5. '#' → logprob: -11.000720977783203
    6. ' elif' → logprob: -11.500720977783203
    7. '  ' → logprob: -11.875720977783203
    8. '<|end|>' → logprob: -12.000720977783203
    9. 'else' → logprob: -12.750720977783203
    10. ' ' → logprob: -13.250720977783203

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005022776313126087
    2. 'elif' → logprob: -8.250502586364746
    3. '```' → logprob: -9.500502586364746
    4. '<|end|>' → logprob: -9.500502586364746
    5. 'else' → logprob: -10.500502586364746
    6. '  ' → logprob: -11.250502586364746
    7. ' elif' → logprob: -11.375502586364746
    8. ' ' → logprob: -11.500502586364746
    9. '
' → logprob: -12.000502586364746
    10. '       ' → logprob: -12.125502586364746

Token 399: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0799705982208252
    2. 'elif' → logprob: -2.579970598220825
    3. ' elif' → logprob: -7.204970359802246
    4. '	elif' → logprob: -8.954970359802246
    5. '```' → logprob: -9.829970359802246
    6. '#' (adapté à ' #') → logprob: -9.954970359802246
    7. 'else' → logprob: -10.079970359802246
    8. '  ' → logprob: -10.704970359802246
    9. ' ' → logprob: -10.829970359802246
    10. '<|end|>' → logprob: -12.079970359802246

Token 400: ' Si' (ID: 7832)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.06461887061595917
    2. 'else' → logprob: -3.0646188259124756
    3. '   ' → logprob: -4.814619064331055
    4. ' elif' → logprob: -4.939619064331055
    5. ' else' → logprob: -7.439619064331055
    6. ' ' → logprob: -10.314619064331055
    7. 'el' → logprob: -11.939619064331055
    8. 'elseif' → logprob: -12.564619064331055
    9. '  ' → logprob: -13.564619064331055
    10. '```' → logprob: -13.689619064331055

Token 401: ' le' (ID: 505)
  Prédit: ' tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tt' → logprob: -0.007614674977958202
    2. 'tt' → logprob: -4.882614612579346
    3. 't' → logprob: -12.132615089416504
    4. '(tt' → logprob: -13.632615089416504
    5. ' t' → logprob: -14.507615089416504
    6. ' nt' → logprob: -14.882615089416504
    7. ' ' → logprob: -14.882615089416504
    8. ' ' → logprob: -15.507615089416504
    9. 'elif' → logprob: -15.632615089416504
    10. '   ' → logprob: -15.882615089416504

Token 402: ' coup' (ID: 25465)
  Prédit: ' tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tt' → logprob: -0.03844650462269783
    2. 'tt' → logprob: -3.2884464263916016
    3. 't' → logprob: -8.038446426391602
    4. 'elif' → logprob: -10.038446426391602
    5. ' t' → logprob: -10.913446426391602
    6. ' elif' → logprob: -11.663446426391602
    7. 'else' → logprob: -12.038446426391602
    8. ' ' → logprob: -13.163446426391602
    9. ' ' → logprob: -13.288446426391602
    10. ' else' → logprob: -14.663446426391602

Token 403: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01859445311129093
    2. '==' → logprob: -4.018594264984131
    3. ' ' → logprob: -8.643594741821289
    4. 'elif' → logprob: -9.143594741821289
    5. ' elif' → logprob: -9.893594741821289
    6. 't' → logprob: -10.643594741821289
    7. '=' → logprob: -10.768594741821289
    8. ' =' → logprob: -11.518594741821289
    9. 'else' → logprob: -12.018594741821289
    10. ' ' → logprob: -12.143594741821289

Token 404: ' l' (ID: 305)
  Prédit: ''t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''t' → logprob: -0.03336165472865105
    2. 't' → logprob: -3.5333616733551025
    3. ' '' → logprob: -6.408361434936523
    4. 'tt' → logprob: -6.533361434936523
    5. ''' → logprob: -8.533361434936523
    6. ' t' → logprob: -9.033361434936523
    7. 'elif' → logprob: -9.908361434936523
    8. ''e' → logprob: -10.283361434936523
    9. ''l' → logprob: -10.283361434936523
    10. ' tt' → logprob: -10.783361434936523

Token 405: ''ad' (ID: 36162)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18300458788871765
    2. 'elif' → logprob: -1.80800461769104
    3. ''t' → logprob: -5.808004379272461
    4. 'tt' → logprob: -9.058004379272461
    5. 'else' → logprob: -9.808004379272461
    6. '==' → logprob: -10.433004379272461
    7. ' elif' → logprob: -11.683004379272461
    8. '`t' → logprob: -11.933004379272461
    9. 'e' → logprob: -12.058004379272461
    10. ''' → logprob: -12.183004379272461

Token 406: 'vers' (ID: 3674)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.07653764635324478
    2. ''e' → logprob: -3.201537609100342
    3. ''t' → logprob: -4.451537609100342
    4. ''f' → logprob: -5.326537609100342
    5. ''' → logprob: -5.576537609100342
    6. 'v' → logprob: -5.826537609100342
    7. ''el' → logprob: -6.451537609100342
    8. 'else' → logprob: -6.451537609100342
    9. ''r' → logprob: -6.826537609100342
    10. '=='' → logprob: -7.701537609100342

Token 407: 'aire' (ID: 8189)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.38591131567955017
    2. ''or' → logprob: -2.885911226272583
    3. 'oire' → logprob: -2.885911226272583
    4. ''' → logprob: -3.135911226272583
    5. 'else' → logprob: -3.385911226272583
    6. ''oe' → logprob: -3.635911226272583
    7. ''e' → logprob: -3.760911226272583
    8. ''er' → logprob: -4.135911464691162
    9. 'or' → logprob: -4.635911464691162
    10. ''air' → logprob: -4.885911464691162

Token 408: ' n' (ID: 297)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.043068159371614456
    2. '==' → logprob: -3.1680681705474854
    3. 'elif' → logprob: -10.168067932128906
    4. ' ' → logprob: -11.668067932128906
    5. '=='' → logprob: -11.793067932128906
    6. ' =='' → logprob: -12.418067932128906
    7. ' elif' → logprob: -12.668067932128906
    8. '=' → logprob: -13.668067932128906
    9. ' =' → logprob: -14.293067932128906
    10. ' ' → logprob: -14.418067932128906

Token 409: ''est' (ID: 6616)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25628724694252014
    2. ' ==' → logprob: -1.5062872171401978
    3. 'elif' → logprob: -5.506287097930908
    4. '=' → logprob: -8.881287574768066
    5. '=='' → logprob: -9.631287574768066
    6. ' elif' → logprob: -10.381287574768066
    7. ' =' → logprob: -11.256287574768066
    8. '===' → logprob: -11.756287574768066
    9. ' ' → logprob: -11.881287574768066
    10. ' =='' → logprob: -12.256287574768066

Token 410: ' ni' (ID: 2565)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.9042670130729675
    2. ''t' → logprob: -1.6542670726776123
    3. ''r' → logprob: -1.7792670726776123
    4. 'pas' → logprob: -2.5292670726776123
    5. ''y' → logprob: -2.6542670726776123
    6. ''s' → logprob: -4.904266834259033
    7. ''' → logprob: -4.904266834259033
    8. ''g' → logprob: -4.904266834259033
    9. ''o' → logprob: -5.029266834259033
    10. ''e' → logprob: -5.029266834259033

Token 411: ' '' (ID: 461)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.02504662051796913
    2. ' '' → logprob: -3.7750465869903564
    3. ''' → logprob: -6.6500468254089355
    4. ''t' → logprob: -7.9000468254089355
    5. ''r' → logprob: -9.400046348571777
    6. ' p' → logprob: -10.900046348571777
    7. ''o' → logprob: -11.650046348571777
    8. ''d' → logprob: -12.150046348571777
    9. 'p' → logprob: -12.650046348571777
    10. ''q' → logprob: -12.900046348571777

Token 412: 'r' (ID: 81)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.0620025210082531
    2. 'p' → logprob: -2.812002420425415
    3. ' p' → logprob: -11.187002182006836
    4. ''t' → logprob: -11.812002182006836
    5. ''' → logprob: -11.937002182006836
    6. ''r' → logprob: -12.687002182006836
    7. ' '' → logprob: -12.687002182006836
    8. ' ' → logprob: -15.687002182006836
    9. ''d' → logprob: -16.187002182006836
    10. 'r' → logprob: -16.187002182006836

Token 413: ''' (ID: 6)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4923662543296814
    2. ' elif' → logprob: -1.7423663139343262
    3. ' nor' → logprob: -2.367366313934326
    4. ''' → logprob: -2.367366313934326
    5. '',' → logprob: -4.617366313934326
    6. ',' → logprob: -4.992366313934326
    7. ' neither' → logprob: -5.617366313934326
    8. '==' → logprob: -6.617366313934326
    9. ' ==' → logprob: -7.117366313934326
    10. 'e' → logprob: -7.117366313934326

Token 414: ' ni' (ID: 2565)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.19473102688789368
    2. ' elif' → logprob: -1.8197309970855713
    3. ' nor' → logprob: -4.94473123550415
    4. ',' → logprob: -5.31973123550415
    5. 'else' → logprob: -6.56973123550415
    6. '   ' → logprob: -7.31973123550415
    7. ' (' → logprob: -8.569730758666992
    8. '==' → logprob: -8.819730758666992
    9. ' else' → logprob: -8.944730758666992
    10. '=' → logprob: -9.694730758666992

Token 415: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.0020829280838370323
    2. ''p' → logprob: -6.627082824707031
    3. ' '' → logprob: -7.252082824707031
    4. ' s' → logprob: -10.627082824707031
    5. ''' → logprob: -11.502082824707031
    6. '`s' → logprob: -12.002082824707031
    7. 's' → logprob: -13.002082824707031
    8. ''i' → logprob: -14.127082824707031
    9. ''d' → logprob: -14.502082824707031
    10. 'p' → logprob: -14.502082824707031

Token 416: 's' (ID: 82)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3133140802383423
    2. ''p' → logprob: -1.3133140802383423
    3. ' p' → logprob: -9.938314437866211
    4. ''s' → logprob: -12.813314437866211
    5. ''' → logprob: -13.938314437866211
    6. ' '' → logprob: -15.313314437866211
    7. '_p' → logprob: -15.438314437866211
    8. '	p' → logprob: -17.93831443786621
    9. 's' → logprob: -17.93831443786621
    10. ''t' → logprob: -18.18831443786621

Token 417: '',' (ID: 787)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.24144327640533447
    2. ':' → logprob: -2.366443157196045
    3. ':
' → logprob: -2.616443157196045
    4. ' elif' → logprob: -3.866443157196045
    5. 'else' → logprob: -4.366443157196045
    6. '   ' → logprob: -5.866443157196045
    7. ',' → logprob: -5.991443157196045
    8. '':
' → logprob: -6.116443157196045
    9. ' (' → logprob: -6.241443157196045
    10. 'e' → logprob: -6.241443157196045

Token 418: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07080718874931335
    2. 'else' → logprob: -2.8208072185516357
    3. ' else' → logprob: -5.445806980133057
    4. 'elif' → logprob: -5.945806980133057
    5. ':' → logprob: -7.320806980133057
    6. '       ' → logprob: -7.695806980133057
    7. '```' → logprob: -7.945806980133057
    8. ' elif' → logprob: -8.820807456970215
    9. ':
' → logprob: -9.195807456970215
    10. ' ' → logprob: -10.195807456970215

Token 419: ' suppose' (ID: 35968)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7096521854400635
    2. 'elif' → logprob: -0.7096521854400635
    3. ' else' → logprob: -4.584651947021484
    4. ' elif' → logprob: -5.959651947021484
    5. '   ' → logprob: -6.209651947021484
    6. 'el' → logprob: -7.209651947021484
    7. '```' → logprob: -7.959651947021484
    8. 'e' → logprob: -9.209651947021484
    9. ':' → logprob: -9.709651947021484
    10. 'els' → logprob: -10.709651947021484

Token 420: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10173521935939789
    2. '       ' → logprob: -3.4767351150512695
    3. 'else' → logprob: -3.9767351150512695
    4. 'elif' → logprob: -4.1017351150512695
    5. ':' → logprob: -4.4767351150512695
    6. ' that' → logprob: -5.2267351150512695
    7. ' else' → logprob: -5.6017351150512695
    8. 't' → logprob: -5.9767351150512695
    9. ' elif' → logprob: -6.2267351150512695
    10. ' win' → logprob: -7.4767351150512695

Token 421: ' c' (ID: 274)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.49844276905059814
    2. ' tt' → logprob: -1.3734427690505981
    3. 'win' → logprob: -2.4984426498413086
    4. ' win' → logprob: -2.9984426498413086
    5. 't' → logprob: -5.998442649841309
    6. '   ' → logprob: -5.998442649841309
    7. '#' → logprob: -6.623442649841309
    8. '    ' → logprob: -8.748442649841309
    9. ' t' → logprob: -8.998442649841309
    10. '       ' → logprob: -9.498442649841309

Token 422: ''est' (ID: 6616)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4392872452735901
    2. '   ' → logprob: -1.6892871856689453
    3. ' ==' → logprob: -2.6892871856689453
    4. 'else' → logprob: -3.3142871856689453
    5. 't' → logprob: -3.8142871856689453
    6. ' elif' → logprob: -4.064287185668945
    7. '==' → logprob: -4.314287185668945
    8. '#' → logprob: -5.564287185668945
    9. '=' → logprob: -6.439287185668945
    10. ' win' → logprob: -6.689287185668945

Token 423: ' '' (ID: 461)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.019046727567911148
    2. 'p' → logprob: -4.519046783447266
    3. '   ' → logprob: -5.894046783447266
    4. ''' → logprob: -6.269046783447266
    5. ''s' → logprob: -6.394046783447266
    6. ''t' → logprob: -7.269046783447266
    7. ''q' → logprob: -8.269046783447266
    8. ' '' → logprob: -8.769046783447266
    9. ''b' → logprob: -9.269046783447266
    10. ' p' → logprob: -9.644046783447266

Token 424: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0056844111531972885
    2. ' p' → logprob: -5.2556843757629395
    3. ''p' → logprob: -7.8806843757629395
    4. 's' → logprob: -9.630684852600098
    5. ' ' → logprob: -13.130684852600098
    6. '_p' → logprob: -13.630684852600098
    7. ''s' → logprob: -14.130684852600098
    8. '   ' → logprob: -14.630684852600098
    9. '	p' → logprob: -14.880684852600098
    10. 't' → logprob: -14.880684852600098

Token 425: ''' (ID: 6)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.04039234668016434
    2. ''' → logprob: -4.1653923988342285
    3. '':' → logprob: -4.1653923988342285
    4. '       ' → logprob: -5.0403923988342285
    5. '   ' → logprob: -6.9153923988342285
    6. ''
' → logprob: -8.29039192199707
    7. ''):
' → logprob: -8.66539192199707
    8. '):
' → logprob: -8.79039192199707
    9. '':

' → logprob: -8.91539192199707
    10. ':
' → logprob: -9.54039192199707

Token 426: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.645645797252655
    2. '   ' → logprob: -0.895645797252655
    3. ':' → logprob: -2.8956458568573
    4. ':
' → logprob: -5.270645618438721
    5. 'else' → logprob: -5.770645618438721
    6. '=' → logprob: -6.770645618438721
    7. 'elif' → logprob: -7.145645618438721
    8. ' =' → logprob: -7.520645618438721
    9. ',' → logprob: -8.395646095275879
    10. ' else' → logprob: -8.645646095275879

Token 427: 'papier' (ID: 126960)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2902141511440277
    2. '   ' → logprob: -1.54021418094635
    3. '#' → logprob: -4.6652140617370605
    4. 'win' → logprob: -4.7902140617370605
    5. ')' → logprob: -5.0402140617370605
    6. 'elif' → logprob: -5.6652140617370605
    7. 'else' → logprob: -6.2902140617370605
    8. '```' → logprob: -6.6652140617370605
    9. 'k' → logprob: -7.0402140617370605
    10. '           ' → logprob: -7.1652140617370605

Token 428: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4549250304698944
    2. '   ' → logprob: -2.079925060272217
    3. '):
' → logprob: -2.079925060272217
    4. ':
' → logprob: -2.704925060272217
    5. ':' → logprob: -3.204925060272217
    6. '):' → logprob: -5.204925060272217
    7. 'else' → logprob: -6.829925060272217
    8. ')' → logprob: -7.204925060272217
    9. 'elif' → logprob: -8.829924583435059
    10. ' :
' → logprob: -8.954924583435059

Token 429: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7713478207588196
    2. '       ' → logprob: -0.8963478207588196
    3. 'else' → logprob: -2.396347761154175
    4. 'elif' → logprob: -4.271347999572754
    5. ':
' → logprob: -4.396347999572754
    6. ':' → logprob: -4.771347999572754
    7. ' else' → logprob: -6.396347999572754
    8. '```' → logprob: -7.271347999572754
    9. 'win' → logprob: -7.896347999572754
    10. '):
' → logprob: -8.146347999572754

Token 430: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9884058833122253
    2. '   ' → logprob: -1.1134059429168701
    3. 'else' → logprob: -1.3634059429168701
    4. 'elif' → logprob: -3.36340594291687
    5. 'win' → logprob: -4.863405704498291
    6. '```' → logprob: -7.363405704498291
    7. ' else' → logprob: -7.738405704498291
    8. ' win' → logprob: -9.48840618133545
    9. ' elif' → logprob: -10.98840618133545
    10. ' ' → logprob: -11.23840618133545

Token 431: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3281431198120117
    2. '   ' → logprob: -1.3281431198120117
    3. 'win' → logprob: -5.578143119812012
    4. 'elif' → logprob: -5.578143119812012
    5. ' else' → logprob: -5.703143119812012
    6. '       ' → logprob: -5.703143119812012
    7. '```' → logprob: -7.828143119812012
    8. ' win' → logprob: -10.078143119812012
    9. ' ' → logprob: -10.578143119812012
    10. '  ' → logprob: -10.578143119812012

Token 432: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35746023058891296
    2. ':' → logprob: -1.8574602603912354
    3. '       ' → logprob: -1.9824602603912354
    4. '   ' → logprob: -6.107460021972656
    5. ' :
' → logprob: -6.482460021972656
    6. '+=' → logprob: -6.482460021972656
    7. ' +=' → logprob: -7.607460021972656
    8. '=' → logprob: -8.607460021972656
    9. ' :' → logprob: -8.982460021972656
    10. '      ' → logprob: -9.232460021972656

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35282209515571594
    2. 'win' → logprob: -1.2278220653533936
    3. ' win' → logprob: -6.102822303771973
    4. 'w' → logprob: -6.977822303771973
    5. 's' → logprob: -7.727822303771973
    6. '```' → logprob: -8.352822303771973
    7. 'r' → logprob: -8.602822303771973
    8. '   ' → logprob: -8.852822303771973
    9. '	win' → logprob: -9.602822303771973
    10. 'wins' → logprob: -10.227822303771973

Token 434: ' #' (ID: 1069)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.017917189747095108
    2. '       ' → logprob: -4.142917156219482
    3. ' win' → logprob: -6.392917156219482
    4. '   ' → logprob: -8.89291763305664
    5. 'w' → logprob: -10.26791763305664
    6. '#' (adapté à ' #') → logprob: -11.39291763305664
    7. '	win' → logprob: -11.64291763305664
    8. 'ans' → logprob: -12.64291763305664
    9. '           ' → logprob: -12.76791763305664
    10. 'wins' → logprob: -13.14291763305664

Token 435: ' Aj' (ID: 28294)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -7.159660890465602e-05
    2. '       ' → logprob: -10.25007152557373
    3. '   ' → logprob: -10.87507152557373
    4. ' win' → logprob: -11.50007152557373
    5. 'ans' → logprob: -12.62507152557373
    6. 'w' → logprob: -13.37507152557373
    7. '  ' → logprob: -14.37507152557373
    8. '           ' → logprob: -14.87507152557373
    9. ' ' → logprob: -15.37507152557373
    10. '
' → logprob: -15.50007152557373

Token 436: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.04879708215594292
    2. 'oute' → logprob: -3.048797130584717
    3. 'outez' → logprob: -8.923796653747559
    4. 'outer' → logprob: -9.548796653747559
    5. 'ou' → logprob: -12.798796653747559
    6. '#' → logprob: -14.548796653747559
    7. 'OUT' → logprob: -14.923796653747559
    8. 'win' → logprob: -15.298796653747559
    9. '[out' → logprob: -15.298796653747559
    10. '+=' → logprob: -15.798796653747559

Token 437: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0751041173934937
    2. '+=' → logprob: -1.0751041173934937
    3. '=' → logprob: -1.9501041173934937
    4. '       ' → logprob: -3.200104236602783
    5. ''' → logprob: -3.450104236602783
    6. ' +=' → logprob: -3.825104236602783
    7. ' '' → logprob: -4.075104236602783
    8. 'de' → logprob: -4.200104236602783
    9. ' of' → logprob: -4.200104236602783
    10. '('' → logprob: -4.450104236602783

Token 438: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.0028687084559351206
    2. '`s' → logprob: -6.12786865234375
    3. 's' → logprob: -7.37786865234375
    4. '"s' → logprob: -10.62786865234375
    5. ''S' → logprob: -11.25286865234375
    6. ' '' → logprob: -11.37786865234375
    7. ''r' → logprob: -12.00286865234375
    8. '‘s' → logprob: -13.50286865234375
    9. ' s' → logprob: -14.87786865234375
    10. ''' → logprob: -15.12786865234375

Token 439: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002378673671046272
    2. ''s' → logprob: -8.375237464904785
    3. ' s' → logprob: -12.125237464904785
    4. '`s' → logprob: -13.750237464904785
    5. '"s' → logprob: -14.750237464904785
    6. ''' → logprob: -15.000237464904785
    7. ''S' → logprob: -17.3752384185791
    8. 'r' → logprob: -18.0002384185791
    9. '

' → logprob: -18.6252384185791
    10. '	s' → logprob: -19.0002384185791

Token 440: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07853610068559647
    2. '')' → logprob: -3.078536033630371
    3. 'win' → logprob: -5.328536033630371
    4. ' +=' → logprob: -5.328536033630371
    5. '+=' → logprob: -5.953536033630371
    6. '(s' → logprob: -6.078536033630371
    7. 's' → logprob: -6.078536033630371
    8. '       ' → logprob: -6.203536033630371
    9. ''s' → logprob: -6.328536033630371
    10. ')' → logprob: -6.703536033630371

Token 441: ' (' (ID: 350)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.48592689633369446
    2. ' +=' → logprob: -2.110926866531372
    3. ' win' → logprob: -2.610926866531372
    4. '+=' → logprob: -2.860926866531372
    5. '(win' → logprob: -2.985926866531372
    6. '('' → logprob: -3.985926866531372
    7. ''' → logprob: -4.110927104949951
    8. ' (' → logprob: -4.110927104949951
    9. '   ' → logprob: -5.235927104949951
    10. '+' → logprob: -5.235927104949951

Token 442: 'c' (ID: 66)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.019370416179299355
    2. ''s' → logprob: -4.2693705558776855
    3. ''' → logprob: -6.0193705558776855
    4. ' win' → logprob: -6.3943705558776855
    5. 's' → logprob: -7.3943705558776855
    6. ')' → logprob: -7.8943705558776855
    7. '	win' → logprob: -10.269370079040527
    8. '')' → logprob: -10.519370079040527
    9. '(win' → logprob: -11.394370079040527
    10. 'p' → logprob: -12.894370079040527

Token 443: 'iseaux' (ID: 131289)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.24718642234802246
    2. 's' → logprob: -2.1221864223480225
    3. ''''' → logprob: -3.8721864223480225
    4. ')' → logprob: -3.9971864223480225
    5. ''' → logprob: -4.122186660766602
    6. '')' → logprob: -4.122186660766602
    7. ' win' → logprob: -4.247186660766602
    8. '```' → logprob: -6.247186660766602
    9. ' ' → logprob: -6.372186660766602
    10. ''s' → logprob: -6.997186660766602

Token 444: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1034047082066536
    2. '')' → logprob: -2.3534047603607178
    3. ')
' → logprob: -6.228404521942139
    4. ' )' → logprob: -8.228404998779297
    5. '   ' → logprob: -8.353404998779297
    6. '')
' → logprob: -8.478404998779297
    7. ')+' → logprob: -8.603404998779297
    8. '       ' → logprob: -8.728404998779297
    9. 'win' → logprob: -10.603404998779297
    10. ''' → logprob: -10.603404998779297

Token 445: ' à' (ID: 1221)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -1.0335097312927246
    2. ' +=' → logprob: -1.5335097312927246
    3. '+=' → logprob: -1.9085097312927246
    4. '       ' → logprob: -2.5335097312927246
    5. ' win' → logprob: -2.5335097312927246
    6. ' to' → logprob: -2.9085097312927246
    7. ')' → logprob: -3.6585097312927246
    8. '   ' → logprob: -4.283509731292725
    9. ' ' → logprob: -5.408509731292725
    10. '        ' → logprob: -5.908509731292725

Token 446: ' la' (ID: 557)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.17977608740329742
    2. ' win' → logprob: -1.8047760725021362
    3. '	win' → logprob: -11.429776191711426
    4. ' la' → logprob: -11.804776191711426
    5. ' ' → logprob: -12.929776191711426
    6. 'w' → logprob: -13.054776191711426
    7. '(win' → logprob: -13.554776191711426
    8. 'la' → logprob: -13.804776191711426
    9. ''' → logprob: -13.929776191711426
    10. ' ' → logprob: -14.054776191711426

Token 447: ' liste' (ID: 31719)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0035866526886820793
    2. ' win' → logprob: -6.128586769104004
    3. 'list' → logprob: -6.628586769104004
    4. 'liste' → logprob: -9.628586769104004
    5. 'lista' → logprob: -12.628586769104004
    6. 'w' → logprob: -13.503586769104004
    7. ' list' → logprob: -13.628586769104004
    8. 'l' → logprob: -13.628586769104004
    9. 'lst' → logprob: -14.128586769104004
    10. 'ist' → logprob: -14.378586769104004

Token 448: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.12694910168647766
    2. ' win' → logprob: -2.1269490718841553
    3. 's' → logprob: -11.626949310302734
    4. '(win' → logprob: -12.751949310302734
    5. ''' → logprob: -13.126949310302734
    6. ''s' → logprob: -13.251949310302734
    7. '	win' → logprob: -13.626949310302734
    8. ' s' → logprob: -14.251949310302734
    9. '_win' → logprob: -14.376949310302734
    10. ' '' → logprob: -14.626949310302734

Token 449: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6303848624229431
    2. '+=' → logprob: -0.8803848624229431
    3. '       ' → logprob: -3.005384922027588
    4. '+='' → logprob: -7.005384922027588
    5. '+' → logprob: -7.130384922027588
    6. '   ' → logprob: -7.255384922027588
    7. 'win' → logprob: -7.755384922027588
    8. '+="' → logprob: -9.00538444519043
    9. ']+=' → logprob: -9.25538444519043
    10. '      ' → logprob: -9.38038444519043

Token 450: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8518739938735962
    2. ' '' → logprob: -1.1018739938735962
    3. ' win' → logprob: -2.3518738746643066
    4. ''s' → logprob: -3.1018738746643066
    5. 'win' → logprob: -3.2268738746643066
    6. ''' → logprob: -3.9768738746643066
    7. '['' → logprob: -4.101873874664307
    8. ' ['' → logprob: -4.226873874664307
    9. ' s' → logprob: -6.226873874664307
    10. '        ' → logprob: -6.351873874664307

Token 451: ' les' (ID: 1341)
  Prédit: ' win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' win' → logprob: -1.0092859268188477
    2. 'win' → logprob: -1.1342859268188477
    3. 's' → logprob: -1.8842859268188477
    4. ''s' → logprob: -2.2592859268188477
    5. ' s' → logprob: -3.2592859268188477
    6. ''' → logprob: -4.384285926818848
    7. ' '' → logprob: -5.384285926818848
    8. ' ' → logprob: -7.884285926818848
    9. '_s' → logprob: -8.384285926818848
    10. ' ' → logprob: -8.384285926818848

Token 452: ' c' (ID: 274)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007651234045624733
    2. ' s' → logprob: -5.757651329040527
    3. 'win' → logprob: -6.132651329040527
    4. ''s' → logprob: -6.882651329040527
    5. 'c' → logprob: -7.007651329040527
    6. ' win' → logprob: -8.257651329040527
    7. 'sc' → logprob: -10.257651329040527
    8. '_s' → logprob: -11.132651329040527
    9. ' scissors' → logprob: -11.257651329040527
    10. 'ss' → logprob: -12.507651329040527

Token 453: 'iseaux' (ID: 131289)
  Prédit: 'iseaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseaux' → logprob: -0.08102726936340332
    2. 's' → logprob: -2.7060272693634033
    3. 'is' → logprob: -5.081027030944824
    4. 'issors' → logprob: -5.831027030944824
    5. 'i' → logprob: -7.581027030944824
    6. 'iseau' → logprob: -7.706027030944824
    7. ' scissors' → logprob: -7.956027030944824
    8. ''' → logprob: -9.081027030944824
    9. ''s' → logprob: -9.706027030944824
    10. 'isses' → logprob: -10.206027030944824

Token 454: ' batt' (ID: 23722)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08942020684480667
    2. '+=' → logprob: -2.4644203186035156
    3. '+='' → logprob: -7.964420318603516
    4. '+' → logprob: -9.964420318603516
    5. ']+=' → logprob: -10.214420318603516
    6. ' +' → logprob: -10.714420318603516
    7. '+="' → logprob: -10.839420318603516
    8. ' ' → logprob: -13.089420318603516
    9. ' !=' → logprob: -13.589420318603516
    10. '   ' → logprob: -14.089420318603516

Token 455: 'ent' (ID: 299)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.27110952138900757
    2. '=' → logprob: -2.5211095809936523
    3. 's' → logprob: -3.6461095809936523
    4. '+=' → logprob: -3.7711095809936523
    5. ''s' → logprob: -3.8961095809936523
    6. ' +=' → logprob: -4.146109580993652
    7. '='' → logprob: -4.146109580993652
    8. ' '' → logprob: -4.271109580993652
    9. '+='' → logprob: -4.271109580993652
    10. 'e' → logprob: -5.271109580993652

Token 456: ' le' (ID: 505)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.01123962365090847
    2. ''t' → logprob: -4.636239528656006
    3. ''' → logprob: -7.511239528656006
    4. 'p' → logprob: -7.761239528656006
    5. ' '' → logprob: -8.011240005493164
    6. ''r' → logprob: -9.511240005493164
    7. 't' → logprob: -10.261240005493164
    8. ' p' → logprob: -10.511240005493164
    9. ''s' → logprob: -10.761240005493164
    10. 'pp' → logprob: -12.511240005493164

Token 457: ' papier' (ID: 46539)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.4822372794151306
    2. 'p' → logprob: -0.9822372794151306
    3. ''' → logprob: -5.482237339019775
    4. 'papier' → logprob: -6.107237339019775
    5. ' p' → logprob: -6.482237339019775
    6. ''r' → logprob: -9.857236862182617
    7. ' '' → logprob: -9.982236862182617
    8. 'pap' → logprob: -10.232236862182617
    9. ' papier' → logprob: -10.482236862182617
    10. 'paper' → logprob: -11.107236862182617

Token 458: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007208321243524551
    2. 'win' → logprob: -5.007208347320557
    3. ' win' → logprob: -8.507207870483398
    4. '   ' → logprob: -9.257207870483398
    5. '
' → logprob: -9.757207870483398
    6. '      ' → logprob: -10.632207870483398
    7. '[]
' → logprob: -11.382207870483398
    8. ')
' → logprob: -11.507207870483398
    9. '+
' → logprob: -11.507207870483398
    10. '```' → logprob: -11.632207870483398

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18349286913871765
    2. 'win' → logprob: -1.80849289894104
    3. ' win' → logprob: -6.058492660522461
    4. '   ' → logprob: -6.808492660522461
    5. '```' → logprob: -8.683492660522461
    6. '	win' → logprob: -10.183492660522461
    7. '           ' → logprob: -10.433492660522461
    8. '``' → logprob: -11.183492660522461
    9. '      ' → logprob: -11.558492660522461
    10. '     ' → logprob: -11.933492660522461

Token 460: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' (adapté à ' win') → logprob: -0.0007386347278952599
    2. ' win' → logprob: -7.375738620758057
    3. '       ' → logprob: -9.125739097595215
    4. '   ' → logprob: -13.125739097595215
    5. '```' → logprob: -14.625739097595215
    6. 's' → logprob: -15.750739097595215
    7. '	win' → logprob: -15.750739097595215
    8. '           ' → logprob: -16.2507381439209
    9. 'wins' → logprob: -16.2507381439209
    10. ' ' → logprob: -17.1257381439209

Token 461: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5760288834571838
    2. '+=' → logprob: -0.8260288834571838
    3. '+='' → logprob: -9.451028823852539
    4. '+' → logprob: -12.576028823852539
    5. '+="' → logprob: -12.951028823852539
    6. '.append' → logprob: -12.951028823852539
    7. ']+=' → logprob: -14.076028823852539
    8. ' +' → logprob: -14.201028823852539
    9. '=' → logprob: -14.201028823852539
    10. ' ' → logprob: -15.826028823852539

Token 462: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.0012984501663595438
    2. ''' → logprob: -7.126298427581787
    3. ' '' → logprob: -7.626298427581787
    4. 's' → logprob: -12.876298904418945
    5. '`s' → logprob: -13.126298904418945
    6. ''S' → logprob: -14.626298904418945
    7. '"s' → logprob: -15.126298904418945
    8. ''t' → logprob: -15.376298904418945
    9. ''z' → logprob: -15.376298904418945
    10. ' s' → logprob: -15.626298904418945

Token 463: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005238736979663372
    2. ''s' → logprob: -5.2552385330200195
    3. ' s' → logprob: -12.50523853302002
    4. ''' → logprob: -14.13023853302002
    5. '`s' → logprob: -14.63023853302002
    6. ''S' → logprob: -17.255239486694336
    7. '"s' → logprob: -17.630239486694336
    8. ''r' → logprob: -18.630239486694336
    9. ' '' → logprob: -18.755239486694336
    10. '_s' → logprob: -19.630239486694336

Token 464: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.002058506011963
    2. '       ' → logprob: -1.127058506011963
    3. ')' → logprob: -1.627058506011963
    4. ')
' → logprob: -2.252058506011963
    5. '
' → logprob: -5.002058506011963
    6. ' )' → logprob: -9.252058029174805
    7. '<|end|>' → logprob: -9.877058029174805
    8. ' )
' → logprob: -10.252058029174805
    9. '  ' → logprob: -10.252058029174805
    10. ' ' → logprob: -10.502058029174805

Token 465: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2957087755203247
    2. '       ' → logprob: -2.045708656311035
    3. '   ' → logprob: -2.170708656311035
    4. ' ans' → logprob: -5.420708656311035
    5. '
' → logprob: -5.545708656311035
    6. '```' → logprob: -6.295708656311035
    7. '	ans' → logprob: -6.545708656311035
    8. '(ans' → logprob: -7.795708656311035
    9. '``' → logprob: -8.920708656311035
    10. '_ans' → logprob: -9.295708656311035

Token 466: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03406553342938423
    2. ' ans' → logprob: -3.4090654850006104
    3. '       ' → logprob: -8.534065246582031
    4. '   ' → logprob: -9.284065246582031
    5. '
' → logprob: -10.034065246582031
    6. '#' (adapté à ' #') → logprob: -10.534065246582031
    7. '	ans' → logprob: -10.659065246582031
    8. '```' → logprob: -11.034065246582031
    9. '(ans' → logprob: -11.534065246582031
    10. ' ' → logprob: -12.909065246582031

Token 467: ' Aj' (ID: 28294)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2233183042553719e-05
    2. ' ans' → logprob: -11.375012397766113
    3. 'answer' → logprob: -15.125012397766113
    4. '	ans' → logprob: -15.250012397766113
    5. '   ' → logprob: -16.500011444091797
    6. 's' → logprob: -17.125011444091797
    7. 'S' → logprob: -17.375011444091797
    8. '
' → logprob: -17.875011444091797
    9. '```' → logprob: -18.000011444091797
    10. '       ' → logprob: -18.125011444091797

Token 468: 'out' (ID: 468)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47479695081710815
    2. '+=' → logprob: -0.9747969508171082
    3. 'ans' → logprob: -7.849796772003174
    4. '+' → logprob: -10.099797248840332
    5. ' ans' → logprob: -10.099797248840332
    6. 'aj' → logprob: -10.474797248840332
    7. 's' → logprob: -10.474797248840332
    8. '=' → logprob: -10.849797248840332
    9. 'ust' → logprob: -10.849797248840332
    10. '```' → logprob: -10.849797248840332

Token 469: ' à' (ID: 1221)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12716694176197052
    2. '+=' → logprob: -2.127166986465454
    3. 'S' → logprob: -9.877166748046875
    4. '=' → logprob: -10.377166748046875
    5. ' =' → logprob: -10.752166748046875
    6. '+' → logprob: -10.752166748046875
    7. '   ' → logprob: -11.002166748046875
    8. ' ' → logprob: -11.002166748046875
    9. '    ' → logprob: -11.002166748046875
    10. ' à' → logprob: -11.252166748046875

Token 470: ' ans' (ID: 3345)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0022359013091772795
    2. ' S' → logprob: -6.1272358894348145
    3. 'ans' → logprob: -10.502236366271973
    4. 'P' → logprob: -11.377236366271973
    5. ' ans' → logprob: -11.752236366271973
    6. ' ' → logprob: -12.877236366271973
    7. '  ' → logprob: -15.252236366271973
    8. '	S' → logprob: -15.252236366271973
    9. '   ' → logprob: -15.377236366271973
    10. ' ' → logprob: -15.627236366271973

Token 471: ' du' (ID: 1462)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.026372874155640602
    2. '+=' → logprob: -3.6513729095458984
    3. ' +' → logprob: -10.401372909545898
    4. '+' → logprob: -11.276372909545898
    5. ' ' → logprob: -11.526372909545898
    6. ' =' → logprob: -12.401372909545898
    7. '        ' → logprob: -12.526372909545898
    8. '=' → logprob: -12.526372909545898
    9. '       ' → logprob: -12.901372909545898
    10. '    ' → logprob: -13.401372909545898

Token 472: ' score' (ID: 8429)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01815146580338478
    2. ' S' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.26815128326416
    4. '	S' → logprob: -14.89315128326416
    5. '_S' → logprob: -15.14315128326416
    6. ' ' → logprob: -16.393152236938477
    7. '   ' → logprob: -16.643152236938477
    8. 's' → logprob: -17.143152236938477
    9. '
' → logprob: -17.580652236938477
    10. '  ' → logprob: -17.768152236938477

Token 473: ' associé' (ID: 152099)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10039310157299042
    2. '+=' → logprob: -2.350393056869507
    3. '+' → logprob: -9.600393295288086
    4. '=' → logprob: -10.475393295288086
    5. ' +' → logprob: -10.475393295288086
    6. 'S' → logprob: -10.600393295288086
    7. ' S' → logprob: -11.225393295288086
    8. ' =' → logprob: -11.225393295288086
    9. ' ' → logprob: -11.975393295288086
    10. '        ' → logprob: -13.600393295288086

Token 474: ' à' (ID: 1221)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5151148438453674
    2. ' +=' → logprob: -1.6401147842407227
    3. 'S' → logprob: -1.8901147842407227
    4. '       ' → logprob: -3.5151147842407227
    5. '=' → logprob: -4.390114784240723
    6. '+' → logprob: -5.265114784240723
    7. '   ' → logprob: -5.515114784240723
    8. '           ' → logprob: -6.140114784240723
    9. ' S' → logprob: -6.765114784240723
    10. ' =' → logprob: -7.265114784240723

Token 475: ' battre' (ID: 163858)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03366564214229584
    2. ' S' → logprob: -3.408665657043457
    3. ' ' → logprob: -11.783665657043457
    4. ' ' → logprob: -12.283665657043457
    5. ' ans' → logprob: -12.783665657043457
    6. '	S' → logprob: -13.533665657043457
    7. 'ans' → logprob: -14.158665657043457
    8. '_S' → logprob: -14.658665657043457
    9. '   ' → logprob: -14.971165657043457
    10. '  ' → logprob: -14.971165657043457

Token 476: ' le' (ID: 505)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0036234736908227205
    2. ' S' → logprob: -5.6286234855651855
    3. ' ' → logprob: -11.378623008728027
    4. 'P' → logprob: -12.628623008728027
    5. 's' → logprob: -13.128623008728027
    6. '	S' → logprob: -13.253623008728027
    7. '   ' → logprob: -14.003623008728027
    8. ' ' → logprob: -14.253623008728027
    9. '_S' → logprob: -14.253623008728027
    10. '=S' → logprob: -14.753623008728027

Token 477: ' papier' (ID: 46539)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05116754770278931
    2. 's' → logprob: -3.3011674880981445
    3. ' S' → logprob: -4.6761674880981445
    4. 'p' → logprob: -5.8011674880981445
    5. '_s' → logprob: -8.301167488098145
    6. ' s' → logprob: -9.176167488098145
    7. 't' → logprob: -9.551167488098145
    8. 'P' → logprob: -9.676167488098145
    9. ' p' → logprob: -9.801167488098145
    10. ' ' → logprob: -10.926167488098145

Token 478: ' (' (ID: 350)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.36614853143692017
    2. '=' → logprob: -2.3661484718322754
    3. '+=' → logprob: -2.7411484718322754
    4. ' +=' → logprob: -2.9911484718322754
    5. ' (' → logprob: -3.2411484718322754
    6. '       ' → logprob: -3.8661484718322754
    7. 'S' → logprob: -3.8661484718322754
    8. ',' → logprob: -5.116148471832275
    9. ' =' → logprob: -5.241148471832275
    10. '(' → logprob: -5.866148471832275

Token 479: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0001713590754661709
    2. 'P' → logprob: -9.375171661376953
    3. ' S' → logprob: -9.375171661376953
    4. ' ' → logprob: -14.125171661376953
    5. '   ' → logprob: -15.000171661376953
    6. '	S' → logprob: -15.375171661376953
    7. ')' → logprob: -16.125171661376953
    8. ' ' → logprob: -16.625171661376953
    9. '_S' → logprob: -16.750171661376953
    10. '  ' → logprob: -16.750171661376953

Token 480: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021274222526699305
    2. ')
' → logprob: -6.377127647399902
    3. '       ' → logprob: -8.502127647399902
    4. '   ' → logprob: -9.252127647399902
    5. ').' → logprob: -9.377127647399902
    6. '+' → logprob: -11.877127647399902
    7. '```' → logprob: -11.877127647399902
    8. ' )' → logprob: -12.127127647399902
    9. ')+' → logprob: -12.752127647399902
    10. ')

' → logprob: -12.877127647399902

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7251755595207214
    2. 'ans' → logprob: -0.8501755595207214
    3. '+=' → logprob: -2.725175619125366
    4. ' ans' → logprob: -4.225175380706787
    5. ' +=' → logprob: -5.725175380706787
    6. '   ' → logprob: -6.225175380706787
    7. 'S' → logprob: -7.475175380706787
    8. '```' → logprob: -7.475175380706787
    9. '	ans' → logprob: -7.600175380706787
    10. '=' → logprob: -7.600175380706787

Token 482: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.03460884839296341
    2. ' ans' → logprob: -3.409608840942383
    3. 'S' → logprob: -7.409608840942383
    4. '+=' → logprob: -8.159608840942383
    5. ' +=' → logprob: -10.784608840942383
    6. '+' → logprob: -11.159608840942383
    7. ' S' → logprob: -11.659608840942383
    8. '	ans' → logprob: -11.659608840942383
    9. '(ans' → logprob: -12.159608840942383
    10. '   ' → logprob: -12.409608840942383

Token 483: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5762541890144348
    2. '+=' → logprob: -0.8262541890144348
    3. '+' → logprob: -8.076253890991211
    4. ' +' → logprob: -12.701253890991211
    5. ']+=' → logprob: -14.701253890991211
    6. '+='' → logprob: -15.951253890991211
    7. '+="' → logprob: -16.07625389099121
    8. '=' → logprob: -17.07625389099121
    9. ' ' → logprob: -18.07625389099121
    10. '+=(' → logprob: -18.32625389099121

Token 484: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0004306692280806601
    2. ' S' → logprob: -7.750430583953857
    3. 's' → logprob: -17.875431060791016
    4. ' ' → logprob: -18.750431060791016
    5. '   ' → logprob: -18.875431060791016
    6. '	S' → logprob: -19.000431060791016
    7. '_S' → logprob: -20.000431060791016
    8. '>S' → logprob: -20.000431060791016
    9. ' ' → logprob: -20.250431060791016
    10. '  ' → logprob: -20.562931060791016

Token 485: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8304610252380371
    2. '#' → logprob: -1.455461025238037
    3. '<|end|>' → logprob: -1.830461025238037
    4. '
' → logprob: -2.080461025238037
    5. 'if' → logprob: -4.205461025238037
    6. ')' → logprob: -4.580461025238037
    7. 'for' → logprob: -5.205461025238037
    8. '```' → logprob: -5.830461025238037
    9. '

' → logprob: -6.080461025238037
    10. '[' → logprob: -6.205461025238037

Token 486: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.034493573009967804
    2. 'if' → logprob: -4.159493446350098
    3. 'for' → logprob: -4.409493446350098
    4. '#' → logprob: -5.659493446350098
    5. '
' → logprob: -6.659493446350098
    6. 'win' → logprob: -7.784493446350098
    7. '<|end|>' → logprob: -8.409493446350098
    8. '\n' → logprob: -8.784493446350098
    9. '```' → logprob: -8.784493446350098
    10. ' for' → logprob: -9.159493446350098

Token 487: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5017614960670471
    2. 'print' → logprob: -1.2517614364624023
    3. 'win' → logprob: -2.8767614364624023
    4. 'ans' → logprob: -4.251761436462402
    5. 'result' → logprob: -4.376761436462402
    6. '#' → logprob: -4.376761436462402
    7. 'res' → logprob: -5.001761436462402
    8. 'used' → logprob: -6.251761436462402
    9. 'answer' → logprob: -7.126761436462402
    10. 'if' → logprob: -7.376761436462402

Token 488: 'but' (ID: 8293)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5906769633293152
    2. 'print' → logprob: -1.21567702293396
    3. 'f' → logprob: -2.34067702293396
    4. 'but' → logprob: -3.84067702293396
    5. '#' → logprob: -3.96567702293396
    6. 'fin' → logprob: -5.590676784515381
    7. '#print' → logprob: -5.965676784515381
    8. 'part' → logprob: -6.965676784515381
    9. '```' → logprob: -6.965676784515381
    10. 'termin' → logprob: -7.090676784515381

Token 489: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.087504506111145
    2. '<|end|>' → logprob: -1.212504506111145
    3. 'for' → logprob: -1.337504506111145
    4. ' for' → logprob: -3.2125043869018555
    5. 'if' → logprob: -3.7125043869018555
    6. 'print' → logprob: -4.7125043869018555
    7. '
' → logprob: -4.8375043869018555
    8. ' if' → logprob: -5.4625043869018555
    9. 'win' → logprob: -5.4625043869018555
    10. '```' → logprob: -5.9625043869018555

Token 490: ''une' (ID: 13337)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49260348081588745
    2. '#' → logprob: -1.3676035404205322
    3. ' for' → logprob: -2.3676035404205322
    4. '[' → logprob: -4.367603302001953
    5. 'if' → logprob: -4.992603302001953
    6. ' #' → logprob: -5.492603302001953
    7. ' the' → logprob: -5.742603302001953
    8. 'e' → logprob: -5.992603302001953
    9. ' a' → logprob: -6.242603302001953
    10. 'a' → logprob: -6.367603302001953

Token 491: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1528273969888687
    2. '#' → logprob: -2.152827501296997
    3. ' for' → logprob: -4.652827262878418
    4. 'if' → logprob: -5.027827262878418
    5. 'print' → logprob: -5.652827262878418
    6. 'range' → logprob: -6.777827262878418
    7. '```' → logprob: -6.902827262878418
    8. 'win' → logprob: -7.027827262878418
    9. 'new' → logprob: -7.152827262878418
    10. 'while' → logprob: -8.152827262878418

Token 492: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014164102263748646
    2. ' for' → logprob: -4.264163970947266
    3. 'range' → logprob: -15.014163970947266
    4. '
' → logprob: -15.639163970947266
    5. 'i' → logprob: -16.639163970947266
    6. '```' → logprob: -18.014163970947266
    7. ' range' → logprob: -18.389163970947266
    8. '	for' → logprob: -18.639163970947266
    9. '#' → logprob: -19.014163970947266
    10. ' 
' → logprob: -19.139163970947266

Token 493: ' sur' (ID: 1512)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17878781259059906
    2. 'i' → logprob: -1.9287878274917603
    3. '_' → logprob: -4.178787708282471
    4. ' _' → logprob: -5.803787708282471
    5. '_i' → logprob: -10.428788185119629
    6. ' for' → logprob: -11.428788185119629
    7. ' in' → logprob: -12.178788185119629
    8. ' ' → logprob: -12.303788185119629
    9. ' ' → logprob: -12.803788185119629
    10. 'for' → logprob: -13.053788185119629

Token 494: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05220203846693039
    2. '_' → logprob: -3.677201986312866
    3. 'range' → logprob: -3.927201986312866
    4. ' range' → logprob: -5.802202224731445
    5. ' i' → logprob: -5.927202224731445
    6. '_i' → logprob: -9.302202224731445
    7. '_range' → logprob: -9.427202224731445
    8. '	range' → logprob: -12.677202224731445
    9. 'r' → logprob: -13.427202224731445
    10. '	i' → logprob: -14.052202224731445

Token 495: ' allant' (ID: 122150)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01110182423144579
    2. 'in' → logprob: -4.511101722717285
    3. ' i' → logprob: -11.011101722717285
    4. 'range' → logprob: -11.386101722717285
    5. ' range' → logprob: -11.636101722717285
    6. ' ' → logprob: -11.761101722717285
    7. 'i' → logprob: -12.261101722717285
    8. ',' → logprob: -12.761101722717285
    9. ' en' → logprob: -14.636101722717285
    10. 'n' → logprob: -15.011101722717285

Token 496: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06091582030057907
    2. 'in' → logprob: -3.18591570854187
    3. 'range' → logprob: -4.685915946960449
    4. ' range' → logprob: -4.810915946960449
    5. ' ' → logprob: -8.68591594696045
    6. ' i' → logprob: -9.93591594696045
    7. ' en' → logprob: -9.93591594696045
    8. 'en' → logprob: -10.06091594696045
    9. 'from' → logprob: -10.18591594696045
    10. '_' → logprob: -11.31091594696045

Token 497: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.049268923699855804
    2. ' range' → logprob: -3.049268960952759
    3. '0' → logprob: -7.29926872253418
    4. '(range' → logprob: -12.54926872253418
    5. '1' → logprob: -13.79926872253418
    6. 'n' → logprob: -14.67426872253418
    7. ' ' → logprob: -16.17426872253418
    8. '	range' → logprob: -16.29926872253418
    9. 'r' → logprob: -17.17426872253418
    10. '2' → logprob: -17.17426872253418

Token 498: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.33688071370124817
    2. '0' → logprob: -1.3368806838989258
    3. ' range' → logprob: -3.836880683898926
    4. '1' → logprob: -6.336880683898926
    5. '(range' → logprob: -12.211880683898926
    6. ' ' → logprob: -12.586880683898926
    7. '	range' → logprob: -13.711880683898926
    8. '`' → logprob: -14.711880683898926
    9. '2' → logprob: -14.961880683898926
    10. '```' → logprob: -15.086880683898926

Token 499: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06286028772592545
    2. 'in' → logprob: -2.8128602504730225
    3. ',' → logprob: -7.562860488891602
    4. ' ' → logprob: -9.062860488891602
    5. 'to' → logprob: -9.312860488891602
    6. 'range' → logprob: -9.437860488891602
    7. ' to' → logprob: -10.812860488891602
    8. ' i' → logprob: -11.062860488891602
    9. ' en' → logprob: -11.187860488891602
    10. 'en' → logprob: -11.812860488891602

Token 500: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2864648103713989
    2. ' k' → logprob: -1.536464810371399
    3. ' n' → logprob: -4.036464691162109
    4. 'n' → logprob: -4.161464691162109
    5. ' range' → logprob: -7.536464691162109
    6. 'range' → logprob: -8.78646469116211
    7. ' ' → logprob: -12.03646469116211
    8. ' len' → logprob: -12.41146469116211
    9. 'len' → logprob: -12.78646469116211
    10. '(k' → logprob: -14.28646469116211

Token 501: '-' (ID: 12)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12699982523918152
    2. 'in' → logprob: -2.876999855041504
    3. '(n' → logprob: -3.626999855041504
    4. '(' → logprob: -4.126999855041504
    5. 'range' → logprob: -4.626999855041504
    6. '(range' → logprob: -5.501999855041504
    7. 'for' → logprob: -6.376999855041504
    8. ' range' → logprob: -6.501999855041504
    9. '(k' → logprob: -7.376999855041504
    10. '(in' → logprob: -7.626999855041504

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04948258772492409
    2. '-' → logprob: -4.174482822418213
    3. 'n' → logprob: -4.299482822418213
    4. ' ' → logprob: -4.549482822418213
    5. ' n' → logprob: -4.799482822418213
    6. ' -' → logprob: -7.924482822418213
    7. 'k' → logprob: -9.924482345581055
    8. 'range' → logprob: -10.549482345581055
    9. ' k' → logprob: -11.299482345581055
    10. 'i' → logprob: -11.299482345581055

Token 503: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010665876790881157
    2. ':
' → logprob: -5.5106658935546875
    3. ':' → logprob: -5.6356658935546875
    4. 'range' → logprob: -6.2606658935546875
    5. ' for' → logprob: -7.0106658935546875
    6. 'in' → logprob: -8.885665893554688
    7. '(range' → logprob: -11.010665893554688
    8. '
' → logprob: -11.510665893554688
    9. ' range' → logprob: -11.635665893554688
    10. ' in' → logprob: -11.885665893554688

Token 504: 'i' (ID: 72)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.146645188331604
    2. ' range' → logprob: -2.5216450691223145
    3. 'for' → logprob: -3.1466450691223145
    4. ')' → logprob: -5.3966450691223145
    5. 'k' → logprob: -5.5216450691223145
    6. 'n' → logprob: -6.1466450691223145
    7. ' for' → logprob: -6.2716450691223145
    8. ' k' → logprob: -8.396645545959473
    9. ' in' → logprob: -9.396645545959473
    10. 'in' → logprob: -9.896645545959473

Token 505: '.e' (ID: 2560)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0917741060256958
    2. 'in' → logprob: -2.4667739868164062
    3. ')' → logprob: -6.591773986816406
    4. 'for' → logprob: -7.216773986816406
    5. ' for' → logprob: -8.591773986816406
    6. 'n' → logprob: -9.091773986816406
    7. ',' → logprob: -9.091773986816406
    8. '=' → logprob: -9.466773986816406
    9. 'range' → logprob: -9.466773986816406
    10. ' =' → logprob: -9.716773986816406

Token 506: '.,' (ID: 4213)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16751012206077576
    2. 'range' → logprob: -2.7925100326538086
    3. ' range' → logprob: -2.9175100326538086
    4. 'in' → logprob: -4.167510032653809
    5. 'n' → logprob: -4.667510032653809
    6. ')' → logprob: -5.167510032653809
    7. ' for' → logprob: -6.167510032653809
    8. ' n' → logprob: -6.292510032653809
    9. ' k' → logprob: -6.542510032653809
    10. 'for' → logprob: -6.917510032653809

Token 507: ' range' (ID: 3352)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0036520990543067455
    2. ' k' → logprob: -5.628652095794678
    3. 'i' → logprob: -10.378652572631836
    4. 'range' → logprob: -11.253652572631836
    5. ' range' → logprob: -12.128652572631836
    6. 'for' → logprob: -14.253652572631836
    7. ' i' → logprob: -14.253652572631836
    8. 'n' → logprob: -14.378652572631836
    9. ' for' → logprob: -14.753652572631836
    10. ')' → logprob: -15.003652572631836

Token 508: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0001992490579141304
    2. '(' → logprob: -8.625199317932129
    3. '(n' → logprob: -10.875199317932129
    4. 'k' → logprob: -15.500199317932129
    5. '(i' → logprob: -15.500199317932129
    6. '(len' → logprob: -15.500199317932129
    7. '(
' → logprob: -15.875199317932129
    8. ' (' → logprob: -18.250198364257812
    9. '(range' → logprob: -18.250198364257812
    10. '(K' → logprob: -18.750198364257812

Token 509: ')).
' (ID: 82227)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006300011184066534
    2. '):
' → logprob: -5.13129997253418
    3. ')' → logprob: -8.00629997253418
    4. ':' → logprob: -11.63129997253418
    5. ' ):' → logprob: -11.63129997253418
    6. '():' → logprob: -11.75629997253418
    7. '(' → logprob: -13.13129997253418
    8. 'n' → logprob: -13.13129997253418
    9. '):
' → logprob: -13.25629997253418
    10. '(n' → logprob: -13.25629997253418

Token 510: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.706686690449715e-05
    2. ' for' → logprob: -9.625066757202148
    3. 'range' → logprob: -14.125066757202148
    4. '```' → logprob: -16.25006675720215
    5. ':' → logprob: -16.37506675720215
    6. '
' → logprob: -16.62506675720215
    7. '   ' → logprob: -17.37506675720215
    8. 'in' → logprob: -17.62506675720215
    9. ':
' → logprob: -17.87506675720215
    10. '	for' → logprob: -18.12506675720215

Token 511: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04301003739237785
    2. 'i' → logprob: -3.1680099964141846
    3. ' ' → logprob: -12.293009757995605
    4. ' ' → logprob: -12.793009757995605
    5. '	i' → logprob: -13.918009757995605
    6. '_' → logprob: -14.043009757995605
    7. '_i' → logprob: -14.043009757995605
    8. ' _' → logprob: -14.918009757995605
    9. ' in' → logprob: -15.168009757995605
    10. '  ' → logprob: -15.793009757995605

Token 512: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012521425262093544
    2. 'in' → logprob: -4.387521266937256
    3. ' ' → logprob: -11.887521743774414
    4. ',' → logprob: -13.387521743774414
    5. 'range' → logprob: -14.262521743774414
    6. 'n' → logprob: -14.387521743774414
    7. '	in' → logprob: -14.887521743774414
    8. '```' → logprob: -15.137521743774414
    9. '  ' → logprob: -15.262521743774414
    10. '   ' → logprob: -15.387521743774414

Token 513: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003601974807679653
    2. ' range' → logprob: -5.628602027893066
    3. ' ' → logprob: -14.378602027893066
    4. '(range' → logprob: -14.378602027893066
    5. 'ange' → logprob: -15.128602027893066
    6. '   ' → logprob: -15.628602027893066
    7. '  ' → logprob: -16.37860107421875
    8. '0' → logprob: -16.37860107421875
    9. '	range' → logprob: -16.75360107421875
    10. '```' → logprob: -16.87860107421875

Token 514: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0019381542224436998
    2. '(' → logprob: -6.251938343048096
    3. ' (' → logprob: -12.626937866210938
    4. '(n' → logprob: -12.876937866210938
    5. '(i' → logprob: -13.376937866210938
    6. 'k' → logprob: -13.501937866210938
    7. '(
' → logprob: -14.876937866210938
    8. ' k' → logprob: -15.501937866210938
    9. ')' → logprob: -16.251937866210938
    10. '(len' → logprob: -17.001937866210938

Token 515: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002366753324167803
    2. '):
' → logprob: -8.500236511230469
    3. ' ):' → logprob: -10.500236511230469
    4. ')' → logprob: -13.000236511230469
    5. ':' → logprob: -13.250236511230469
    6. '):

' → logprob: -14.250236511230469
    7. '():' → logprob: -15.000236511230469
    8. '}:' → logprob: -15.500236511230469
    9. '):
' → logprob: -15.500236511230469
    10. ',' → logprob: -16.25023651123047

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11400748789310455
    2. 'if' → logprob: -2.6140074729919434
    3. ' if' → logprob: -3.4890074729919434
    4. 'win' → logprob: -5.614007472991943
    5. ' win' → logprob: -8.239007949829102
    6. '    
' → logprob: -11.614007949829102
    7. '       ' → logprob: -11.614007949829102
    8. '   ' → logprob: -11.864007949829102
    9. '	win' → logprob: -11.989007949829102
    10. '```' → logprob: -11.989007949829102

Token 517: ' #' (ID: 1069)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.565891683101654
    2. 'ans' → logprob: -1.1908917427062988
    3. 'if' → logprob: -2.315891742706299
    4. '   ' → logprob: -3.565891742706299
    5. ' ans' → logprob: -8.19089126586914
    6. '#' (adapté à ' #') → logprob: -8.44089126586914
    7. ' ' → logprob: -8.44089126586914
    8. ' if' → logprob: -8.81589126586914
    9. ' win' → logprob: -8.81589126586914
    10. '	ans' → logprob: -10.19089126586914

Token 518: ' Construction' (ID: 31452)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0826126337051392
    2. 'win' → logprob: -1.0826126337051392
    3. 'ans' → logprob: -1.2076126337051392
    4. '   ' → logprob: -4.20761251449585
    5. '#' → logprob: -5.08261251449585
    6. ' if' → logprob: -6.95761251449585
    7. ' ans' → logprob: -7.45761251449585
    8. ' ' → logprob: -8.082612991333008
    9. ' win' → logprob: -8.332612991333008
    10. 'for' → logprob: -9.207612991333008

Token 519: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9267680048942566
    2. ' if' → logprob: -0.9267680048942566
    3. ' win' → logprob: -2.3017680644989014
    4. ' =' → logprob: -3.4267680644989014
    5. '   ' → logprob: -4.051767826080322
    6. 'win' → logprob: -4.051767826080322
    7. '=' → logprob: -4.926767826080322
    8. ':' → logprob: -5.176767826080322
    9. '#' → logprob: -5.551767826080322
    10. ' ' → logprob: -5.551767826080322

Token 520: ''une' (ID: 13337)
  Prédit: ' win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' win' → logprob: -0.355633020401001
    2. 'win' → logprob: -1.730633020401001
    3. ''' → logprob: -3.230633020401001
    4. ' la' → logprob: -3.605633020401001
    5. 'une' → logprob: -5.355632781982422
    6. ' a' → logprob: -5.355632781982422
    7. ' '' → logprob: -5.480632781982422
    8. ' ' → logprob: -5.605632781982422
    9. 'a' → logprob: -5.730632781982422
    10. ')' → logprob: -5.980632781982422

Token 521: ' sous' (ID: 14487)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5348570346832275
    2. 'win' → logprob: -1.6598570346832275
    3. 'string' → logprob: -2.9098570346832275
    4. ' if' → logprob: -3.5348570346832275
    5. ' win' → logprob: -3.9098570346832275
    6. 'condition' → logprob: -4.284856796264648
    7. 'new' → logprob: -4.659856796264648
    8. 'sub' → logprob: -4.659856796264648
    9. 'substring' → logprob: -4.784856796264648
    10. 'list' → logprob: -4.784856796264648

Token 522: '-l' (ID: 2887)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.17043083906173706
    2. 'win' → logprob: -2.795430898666382
    3. 'string' → logprob: -3.045430898666382
    4. 'sequence' → logprob: -4.545430660247803
    5. ' chaîne' → logprob: -4.545430660247803
    6. 'liste' → logprob: -5.045430660247803
    7. 'chain' → logprob: -5.295430660247803
    8. '_win' → logprob: -6.170430660247803
    9. ' chaine' → logprob: -6.170430660247803
    10. '#' → logprob: -6.420430660247803

Token 523: 'iste' (ID: 4872)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.098459243774414
    2. 'iste' → logprob: -1.348459243774414
    3. 'ist' → logprob: -1.473459243774414
    4. 'a' → logprob: -2.223459243774414
    5. 'win' → logprob: -3.848459243774414
    6. 'e' → logprob: -4.348459243774414
    7. 'is' → logprob: -4.473459243774414
    8. 'i' → logprob: -6.098459243774414
    9. 'st' → logprob: -6.348459243774414
    10. '#' → logprob: -6.473459243774414

Token 524: ' l' (ID: 305)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7002180218696594
    2. ' win' → logprob: -0.9502180218696594
    3. 'win' → logprob: -2.8252179622650146
    4. '=' → logprob: -3.3252179622650146
    5. '[' → logprob: -5.325218200683594
    6. '   ' → logprob: -5.700218200683594
    7. ' of' → logprob: -5.950218200683594
    8. ' de' → logprob: -6.075218200683594
    9. '_win' → logprob: -6.200218200683594
    10. '(win' → logprob: -6.825218200683594

Token 525: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12364115566015244
    2. '=' → logprob: -2.3736412525177
    3. 'ist' → logprob: -4.998641014099121
    4. 'win' → logprob: -5.373641014099121
    5. '[' → logprob: -6.123641014099121
    6. '(win' → logprob: -6.498641014099121
    7. '=[]' → logprob: -6.623641014099121
    8. 'et' → logprob: -6.748641014099121
    9. 'for' → logprob: -6.873641014099121
    10. ' win' → logprob: -7.123641014099121

Token 526: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9364836812019348
    2. ' l' → logprob: -1.43648362159729
    3. ' win' → logprob: -1.43648362159729
    4. '   ' → logprob: -2.81148362159729
    5. 'win' → logprob: -3.43648362159729
    6. '[' → logprob: -4.686483860015869
    7. ' =' → logprob: -4.686483860015869
    8. ' for' → logprob: -5.186483860015869
    9. '[]' → logprob: -5.311483860015869
    10. '[l' → logprob: -5.561483860015869

Token 527: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0360940545797348
    2. ' l' → logprob: -3.4110939502716064
    3. '[' → logprob: -6.4110941886901855
    4. '[l' → logprob: -8.286093711853027
    5. '[]' → logprob: -8.411093711853027
    6. ' [' → logprob: -8.661093711853027
    7. ' win' → logprob: -9.661093711853027
    8. 'win' → logprob: -10.161093711853027
    9. '   ' → logprob: -12.161093711853027
    10. ' =' → logprob: -12.161093711853027

Token 528: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00179846934042871
    2. ' l' → logprob: -6.376798629760742
    3. '[' → logprob: -9.376798629760742
    4. '[l' → logprob: -12.001798629760742
    5. '[]' → logprob: -13.251798629760742
    6. ' [' → logprob: -13.376798629760742
    7. '   ' → logprob: -14.001798629760742
    8. '[
' → logprob: -14.876798629760742
    9. '```' → logprob: -15.751798629760742
    10. 'win' → logprob: -15.876798629760742

Token 529: ' commence' (ID: 44755)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31346002221107483
    2. '=' → logprob: -1.3134599924087524
    3. '=[]' → logprob: -9.188460350036621
    4. '=[' → logprob: -10.188460350036621
    5. '=[]
' → logprob: -11.188460350036621
    6. ' ' → logprob: -11.313460350036621
    7. ' =[' → logprob: -11.813460350036621
    8. '.append' → logprob: -12.063460350036621
    9. 'l' → logprob: -12.813460350036621
    10. 'ist' → logprob: -12.938460350036621

Token 530: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14567764103412628
    2. ' =' → logprob: -2.0206775665283203
    3. 'with' → logprob: -6.89567756652832
    4. ' as' → logprob: -7.27067756652832
    5. ' with' → logprob: -7.77067756652832
    6. 'win' → logprob: -8.02067756652832
    7. ' win' → logprob: -9.14567756652832
    8. 'as' → logprob: -9.14567756652832
    9. 'l' → logprob: -9.27067756652832
    10. ',' → logprob: -10.14567756652832

Token 531: ' l' (ID: 305)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.17922887206077576
    2. '[' → logprob: -2.0542287826538086
    3. 'list' → logprob: -4.554228782653809
    4. '[i' → logprob: -4.554228782653809
    5. 'ans' → logprob: -5.304228782653809
    6. ' win' → logprob: -5.554228782653809
    7. '[]' → logprob: -6.304228782653809
    8. ' [' → logprob: -6.554228782653809
    9. '['' → logprob: -7.804228782653809
    10. '[l' → logprob: -8.179228782653809

Token 532: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5957046151161194
    2. '[' → logprob: -1.2207045555114746
    3. 'ist' → logprob: -2.3457045555114746
    4. 'win' → logprob: -4.095704555511475
    5. '=' → logprob: -4.470704555511475
    6. 'en' → logprob: -5.095704555511475
    7. '=[' → logprob: -5.220704555511475
    8. '[len' → logprob: -5.345704555511475
    9. 'i' → logprob: -5.970704555511475
    10. ' =' → logprob: -6.720704555511475

Token 533: 'index' (ID: 2257)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3093988299369812
    2. 'ist' → logprob: -1.684398889541626
    3. '[' → logprob: -2.934398889541626
    4. 'i' → logprob: -4.559398651123047
    5. '[:' → logprob: -4.809398651123047
    6. 'win' → logprob: -4.934398651123047
    7. 'en' → logprob: -8.434398651123047
    8. '[len' → logprob: -8.434398651123047
    9. '+' → logprob: -8.809398651123047
    10. ' [' → logprob: -9.434398651123047

Token 534: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006785232108086348
    2. ' i' → logprob: -5.6317853927612305
    3. '[i' → logprob: -6.5067853927612305
    4. '0' → logprob: -7.0067853927612305
    5. 'k' → logprob: -7.6317853927612305
    6. '=' → logprob: -9.13178539276123
    7. '=i' → logprob: -9.50678539276123
    8. '[' → logprob: -10.13178539276123
    9. '(i' → logprob: -10.63178539276123
    10. ' =' → logprob: -11.50678539276123

Token 535: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0480788946151733
    2. ':' → logprob: -1.4230788946151733
    3. '::' → logprob: -1.4230788946151733
    4. ':l' → logprob: -3.298079013824463
    5. ':k' → logprob: -3.673079013824463
    6. 'l' → logprob: -3.798079013824463
    7. 'len' → logprob: -4.423079013824463
    8. 'for' → logprob: -4.548079013824463
    9. ':i' → logprob: -4.548079013824463
    10. ' :' → logprob: -4.798079013824463

Token 536: ' prend' (ID: 37463)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7744435667991638
    2. 'len' → logprob: -1.6494436264038086
    3. '=' → logprob: -2.0244436264038086
    4. ' l' → logprob: -2.8994436264038086
    5. ' len' → logprob: -3.0244436264038086
    6. '=len' → logprob: -3.5244436264038086
    7. '+=' → logprob: -4.524443626403809
    8. 'i' → logprob: -4.899443626403809
    9. 'continue' → logprob: -5.024443626403809
    10. ' i' → logprob: -5.149443626403809

Token 537: ' ensuite' (ID: 39713)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.6298297643661499
    2. 'k' → logprob: -1.37982976436615
    3. ' win' → logprob: -2.3798298835754395
    4. '[k' → logprob: -2.8798298835754395
    5. ' k' → logprob: -4.2548298835754395
    6. 'len' → logprob: -4.3798298835754395
    7. '[' → logprob: -4.6298298835754395
    8. '[i' → logprob: -5.2548298835754395
    9. 'list' → logprob: -5.3798298835754395
    10. 't' → logprob: -5.5048298835754395

Token 538: ' chaque' (ID: 21194)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0873693898320198
    2. 'k' → logprob: -3.212369441986084
    3. 'len' → logprob: -4.462369441986084
    4. ' win' → logprob: -4.837369441986084
    5. '[k' → logprob: -4.962369441986084
    6. 'n' → logprob: -5.462369441986084
    7. '[' → logprob: -5.712369441986084
    8. '[len' → logprob: -5.962369441986084
    9. '[n' → logprob: -6.712369441986084
    10. '[i' → logprob: -6.837369441986084

Token 539: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005821668077260256
    2. ' k' → logprob: -5.880821704864502
    3. 'win' → logprob: -6.255821704864502
    4. ' win' → logprob: -8.005821228027344
    5. '+k' → logprob: -8.255821228027344
    6. '[k' → logprob: -9.005821228027344
    7. 'n' → logprob: -9.380821228027344
    8. '   ' → logprob: -9.880821228027344
    9. 't' → logprob: -10.130821228027344
    10. '+' → logprob: -10.380821228027344

Token 540: '-' (ID: 12)
  Prédit: '::'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '::' → logprob: -0.18337777256965637
    2. ' step' → logprob: -3.183377742767334
    3. '+' → logprob: -3.683377742767334
    4. ' character' → logprob: -3.683377742767334
    5. '-step' → logprob: -4.058377742767334
    6. '-character' → logprob: -5.058377742767334
    7. '[' → logprob: -5.308377742767334
    8. 'th' → logprob: -5.308377742767334
    9. '```' → logprob: -5.308377742767334
    10. 'step' → logprob: -5.433377742767334

Token 541: 'ème' (ID: 9767)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.36129891872406006
    2. 'index' → logprob: -2.6112990379333496
    3. '```' → logprob: -2.9862990379333496
    4. 'step' → logprob: -3.1112990379333496
    5. 'i' → logprob: -3.4862990379333496
    6. 'token' → logprob: -3.8612990379333496
    7. 'indices' → logprob: -4.36129903793335
    8. 'n' → logprob: -4.98629903793335
    9. 'indexed' → logprob: -5.11129903793335
    10. '+' → logprob: -5.11129903793335

Token 542: ' élément' (ID: 99627)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.04997734725475311
    2. 'character' → logprob: -3.6749773025512695
    3. 'char' → logprob: -4.6749773025512695
    4. 'élé' → logprob: -5.7999773025512695
    5. 'element' → logprob: -6.1749773025512695
    6. ' caractère' → logprob: -6.1749773025512695
    7. 'win' → logprob: -6.4249773025512695
    8. ' caract' → logprob: -6.5499773025512695
    9. 'index' → logprob: -7.0499773025512695
    10. '+' → logprob: -7.1749773025512695

Token 543: ' de' (ID: 334)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.5352984666824341
    2. ' win' → logprob: -1.660298466682434
    3. 'from' → logprob: -2.1602983474731445
    4. ' from' → logprob: -3.4102983474731445
    5. ' of' → logprob: -3.6602983474731445
    6. ' de' → logprob: -4.1602983474731445
    7. 'of' → logprob: -4.5352983474731445
    8. 'de' → logprob: -5.0352983474731445
    9. ' in' → logprob: -5.2852983474731445
    10. ',' → logprob: -5.5352983474731445

Token 544: ' la' (ID: 557)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.029827900230884552
    2. ' win' → logprob: -3.529827833175659
    3. 't' → logprob: -10.279828071594238
    4. ' ' → logprob: -11.654828071594238
    5. '	win' → logprob: -12.279828071594238
    6. 'w' → logprob: -12.529828071594238
    7. 'range' → logprob: -12.654828071594238
    8. '(win' → logprob: -12.779828071594238
    9. 'list' → logprob: -13.154828071594238
    10. ' t' → logprob: -13.217328071594238

Token 545: ' liste' (ID: 31719)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.040786683559417725
    2. 't' → logprob: -3.2907867431640625
    3. ' win' → logprob: -6.0407867431640625
    4. ' t' → logprob: -8.915786743164062
    5. 'list' → logprob: -9.290786743164062
    6. '[' → logprob: -10.040786743164062
    7. 'w' → logprob: -10.790786743164062
    8. 'range' → logprob: -11.415786743164062
    9. '[t' → logprob: -12.040786743164062
    10. 'wins' → logprob: -12.603286743164062

Token 546: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.052393343299627304
    2. ' win' → logprob: -3.0523934364318848
    3. 't' → logprob: -5.802393436431885
    4. '(win' → logprob: -7.927393436431885
    5. ' t' → logprob: -8.052392959594727
    6. '(t' → logprob: -10.677392959594727
    7. '   ' → logprob: -11.302392959594727
    8. '[' → logprob: -11.802392959594727
    9. ' ' → logprob: -12.052392959594727
    10. '	win' → logprob: -12.114892959594727

Token 547: '.
' (ID: 558)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.9074971079826355
    2. '[' → logprob: -1.2824971675872803
    3. ' win' → logprob: -1.2824971675872803
    4. ',' → logprob: -4.157496929168701
    5. 'l' → logprob: -4.657496929168701
    6. '   ' → logprob: -5.282496929168701
    7. 'from' → logprob: -6.157496929168701
    8. '[i' → logprob: -6.282496929168701
    9. ' from' → logprob: -6.407496929168701
    10. ' l' → logprob: -6.532496929168701

Token 548: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7005613446235657
    2. ' l' → logprob: -0.7005613446235657
    3. ' win' → logprob: -5.7005615234375
    4. '   ' → logprob: -6.0755615234375
    5. '[' → logprob: -7.4505615234375
    6. '[l' → logprob: -8.0755615234375
    7. ' =' → logprob: -8.3255615234375
    8. 'win' → logprob: -8.3255615234375
    9. ' [' → logprob: -8.7005615234375
    10. ' ' → logprob: -10.5755615234375

Token 549: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04317411780357361
    2. ' l' → logprob: -3.1681740283966064
    3. ' win' → logprob: -9.418173789978027
    4. 'win' → logprob: -9.918173789978027
    5. '   ' → logprob: -10.918173789978027
    6. ' ' → logprob: -11.918173789978027
    7. '[' → logprob: -12.168173789978027
    8. '[l' → logprob: -12.668173789978027
    9. '```' → logprob: -12.918173789978027
    10. '	l' → logprob: -13.293173789978027

Token 550: ' win' (ID: 4449)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007612066809087992
    2. ' l' → logprob: -4.882612228393555
    3. '   ' → logprob: -12.882612228393555
    4. ' ' → logprob: -14.382612228393555
    5. '```' → logprob: -14.632612228393555
    6. ' win' → logprob: -14.757612228393555
    7. 'win' → logprob: -14.757612228393555
    8. '[' → logprob: -15.007612228393555
    9. '	l' → logprob: -15.007612228393555
    10. '`' → logprob: -15.382612228393555

Token 551: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05745956301689148
    2. '[' → logprob: -3.057459592819214
    3. '[l' → logprob: -5.432459354400635
    4. ' =' → logprob: -6.057459354400635
    5. '=' → logprob: -6.932459354400635
    6. 'l' → logprob: -7.807459354400635
    7. ' [' → logprob: -8.807459831237793
    8. '[
' → logprob: -9.307459831237793
    9. '=[' → logprob: -9.432459831237793
    10. '[start' → logprob: -10.057459831237793

Token 552: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.005489045288413763
    2. ':' → logprob: -5.755488872528076
    3. ':k' → logprob: -6.880488872528076
    4. ':i' → logprob: -7.880488872528076
    5. ' :' → logprob: -8.380489349365234
    6. ']' → logprob: -8.630489349365234
    7. 'k' → logprob: -8.880489349365234
    8. ' ::' → logprob: -9.005489349365234
    9. ':]' → logprob: -9.005489349365234
    10. '::
' → logprob: -10.630489349365234

Token 553: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.7120533811976202e-05
    2. ' k' → logprob: -11.000017166137695
    3. ']' → logprob: -15.500017166137695
    4. ' ' → logprob: -16.125017166137695
    5. '   ' → logprob: -17.000017166137695
    6. '  ' → logprob: -18.875017166137695
    7. '-k' → logprob: -19.000017166137695
    8. '	k' → logprob: -19.250017166137695
    9. '
' → logprob: -19.500017166137695
    10. ' ' → logprob: -19.625017166137695

Token 554: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.860340752406046e-05
    2. ' ]' → logprob: -10.3750581741333
    3. ']
' → logprob: -10.8750581741333
    4. ']

' → logprob: -13.6250581741333
    5. '][' → logprob: -13.7500581741333
    6. '])' → logprob: -13.8750581741333
    7. '],' → logprob: -14.0000581741333
    8. '[' → logprob: -14.1250581741333
    9. '']' → logprob: -14.5000581741333
    10. '].' → logprob: -14.8750581741333

Token 555: ' signifie' (ID: 81149)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47191160917282104
    2. ' =' → logprob: -1.0969116687774658
    3. ']' → logprob: -5.096911430358887
    4. '#' → logprob: -5.221911430358887
    5. ')' → logprob: -5.596911430358887
    6. ' is' → logprob: -5.596911430358887
    7. 'for' → logprob: -5.721911430358887
    8. '[:]' → logprob: -5.721911430358887
    9. '[' → logprob: -5.971911430358887
    10. 'l' → logprob: -5.971911430358887

Token 556: ' :' (ID: 712)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.04323645308613777
    2. ' win' → logprob: -3.168236494064331
    3. '[' → logprob: -9.79323673248291
    4. 'a' → logprob: -10.41823673248291
    5. '	win' → logprob: -10.54323673248291
    6. ' a' → logprob: -10.66823673248291
    7. 'list' → logprob: -10.79323673248291
    8. ' ' → logprob: -10.91823673248291
    9. '   ' → logprob: -11.41823673248291
    10. 'w' → logprob: -11.98073673248291

Token 557: ' partir' (ID: 12100)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.016856957226991653
    2. ' win' → logprob: -4.141857147216797
    3. '[' → logprob: -7.641857147216797
    4. ' [' → logprob: -9.391857147216797
    5. 'list' → logprob: -9.516857147216797
    6. '   ' → logprob: -9.891857147216797
    7. ' ' → logprob: -10.641857147216797
    8. '[
' → logprob: -11.141857147216797
    9. '	win' → logprob: -11.141857147216797
    10. 'w' → logprob: -11.266857147216797

Token 558: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.1333898901939392
    2. ' de' → logprob: -2.133389949798584
    3. 'from' → logprob: -5.258389949798584
    4. '   ' → logprob: -8.008389472961426
    5. ' from' → logprob: -8.008389472961426
    6. 'win' → logprob: -8.883389472961426
    7. '[i' → logprob: -9.008389472961426
    8. 'i' → logprob: -9.508389472961426
    9. 'à' → logprob: -9.633389472961426
    10. ' ' → logprob: -10.133389472961426

Token 559: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012525658123195171
    2. ' i' → logprob: -4.38752555847168
    3. 'win' → logprob: -11.38752555847168
    4. ' ' → logprob: -13.88752555847168
    5. '[i' → logprob: -13.88752555847168
    6. ' win' → logprob: -14.38752555847168
    7. '	i' → logprob: -14.38752555847168
    8. '   ' → logprob: -14.51252555847168
    9. '```' → logprob: -15.26252555847168
    10. ' ' → logprob: -15.38752555847168

Token 560: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007491742726415396
    2. 'index' → logprob: -6.007491588592529
    3. ' i' → logprob: -6.257491588592529
    4. '[i' → logprob: -6.757491588592529
    5. ''i' → logprob: -6.882491588592529
    6. 'indice' → logprob: -7.382491588592529
    7. '`' → logprob: -9.007492065429688
    8. 'a' → logprob: -10.132492065429688
    9. '   ' → logprob: -11.132492065429688
    10. ' index' → logprob: -11.382492065429688

Token 561: ' avancer' (ID: 151163)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0022874027490615845
    2. ' i' → logprob: -6.5022873878479
    3. 'ist' → logprob: -7.5022873878479
    4. '[i' → logprob: -9.252287864685059
    5. 'win' → logprob: -9.252287864685059
    6. 'index' → logprob: -10.877287864685059
    7. ' win' → logprob: -11.752287864685059
    8. 'a' → logprob: -13.002287864685059
    9. 'ista' → logprob: -13.002287864685059
    10. 'indice' → logprob: -13.502287864685059

Token 562: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017533571226522326
    2. ' i' → logprob: -6.501753330230713
    3. '[i' → logprob: -8.751753807067871
    4. 'ist' → logprob: -9.376753807067871
    5. 'ista' → logprob: -13.376753807067871
    6. ' ' → logprob: -14.001753807067871
    7. 'index' → logprob: -14.126753807067871
    8. '   ' → logprob: -14.501753807067871
    9. '`' → logprob: -14.751753807067871
    10. '	i' → logprob: -14.751753807067871

Token 563: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07925481349229813
    2. 'i' → logprob: -2.5792548656463623
    3. ' k' → logprob: -8.329255104064941
    4. ' i' → logprob: -9.079255104064941
    5. 'pas' → logprob: -12.454255104064941
    6. ' ' → logprob: -13.454255104064941
    7. 'step' → logprob: -14.329255104064941
    8. 'index' → logprob: -14.579255104064941
    9. '```' → logprob: -14.579255104064941
    10. '   ' → logprob: -14.954255104064941

Token 564: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001852243090979755
    2. ' i' → logprob: -6.376852035522461
    3. '[i' → logprob: -9.626852035522461
    4. 'index' → logprob: -10.501852035522461
    5. 'ist' → logprob: -11.376852035522461
    6. ']' → logprob: -11.376852035522461
    7. ',' → logprob: -12.126852035522461
    8. '   ' → logprob: -12.376852035522461
    9. ' ' → logprob: -12.376852035522461
    10. 'win' → logprob: -12.751852035522461

Token 565: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04923136159777641
    2. 'l' → logprob: -3.6742312908172607
    3. 'index' → logprob: -4.42423152923584
    4. 'indices' → logprob: -5.67423152923584
    5. 'pas' → logprob: -6.29923152923584
    6. 'each' → logprob: -6.92423152923584
    7. 'indice' → logprob: -6.92423152923584
    8. ' i' → logprob: -6.92423152923584
    9. 'win' → logprob: -7.79923152923584
    10. ' chaque' → logprob: -8.04923152923584

Token 566: ' fois' (ID: 14697)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07559727132320404
    2. 'pas' → logprob: -3.4505972862243652
    3. 'index' → logprob: -3.5755972862243652
    4. 'indice' → logprob: -4.825597286224365
    5. 'position' → logprob: -6.575597286224365
    6. 'step' → logprob: -7.450597286224365
    7. 'l' → logprob: -7.575597286224365
    8. ' i' → logprob: -7.950597286224365
    9. 'pass' → logprob: -8.325596809387207
    10. 'pos' → logprob: -8.450596809387207

Token 567: '.
' (ID: 558)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30250105261802673
    2. 'ist' → logprob: -1.9275010824203491
    3. 'win' → logprob: -2.5525009632110596
    4. ' i' → logprob: -3.9275009632110596
    5. '[i' → logprob: -4.677501201629639
    6. ' win' → logprob: -5.052501201629639
    7. 'index' → logprob: -7.427501201629639
    8. ']' → logprob: -7.552501201629639
    9. 'ista' → logprob: -8.55250072479248
    10. 'iste' → logprob: -9.67750072479248

Token 568: '   ' (ID: 271)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.14806587994098663
    2. ' win' → logprob: -2.0230658054351807
    3. 'ist' → logprob: -5.77306604385376
    4. 'l' → logprob: -7.39806604385376
    5. ']' → logprob: -7.77306604385376
    6. 'w' → logprob: -8.148065567016602
    7. 'i' → logprob: -9.023065567016602
    8. 'st' → logprob: -9.023065567016602
    9. 'list' → logprob: -9.273065567016602
    10. '[' → logprob: -9.398065567016602

Token 569: ' l' (ID: 305)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0651504397392273
    2. ' win' → logprob: -2.815150499343872
    3. 'l' (adapté à ' l') → logprob: -6.065150260925293
    4. 'list' → logprob: -8.565150260925293
    5. ' l' → logprob: -9.315150260925293
    6. '[' → logprob: -9.315150260925293
    7. 'ist' → logprob: -9.440150260925293
    8. 'i' → logprob: -9.815150260925293
    9. '[i' → logprob: -9.940150260925293
    10. 't' → logprob: -10.065150260925293

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132633566856384
    2. ' =' → logprob: -1.3132634162902832
    3. '＝' → logprob: -14.938262939453125
    4. ' ' → logprob: -14.938262939453125
    5. ',' → logprob: -15.438262939453125
    6. '[' → logprob: -15.938262939453125
    7. '=[' → logprob: -16.438262939453125
    8. '=[]' → logprob: -16.563262939453125
    9. ' =[' → logprob: -16.563262939453125
    10. '=
' → logprob: -16.813262939453125

Token 571: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0031983929220587015
    2. ' win' → logprob: -5.753198623657227
    3. 'list' → logprob: -11.003198623657227
    4. '[' → logprob: -13.128198623657227
    5. ' ' → logprob: -13.878198623657227
    6. '	win' → logprob: -14.878198623657227
    7. '   ' → logprob: -15.753198623657227
    8. '(win' → logprob: -15.878198623657227
    9. ' list' → logprob: -16.003198623657227
    10. 'w' → logprob: -16.503198623657227

Token 572: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011737081513274461
    2. '[' → logprob: -9.375117301940918
    3. ' [' → logprob: -10.500117301940918
    4. 'i' → logprob: -13.000117301940918
    5. '[
' → logprob: -14.250117301940918
    6. '   ' → logprob: -15.000117301940918
    7. '[s' → logprob: -15.000117301940918
    8. '```' → logprob: -15.500117301940918
    9. '[I' → logprob: -15.500117301940918
    10. '[l' → logprob: -15.875117301940918

Token 573: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -8.709308167453855e-05
    2. ':k' → logprob: -9.875086784362793
    3. ' ::' → logprob: -10.625086784362793
    4. '::
' → logprob: -12.125086784362793
    5. ':::' → logprob: -13.250086784362793
    6. ':' → logprob: -13.250086784362793
    7. '::

' → logprob: -14.125086784362793
    8. 'k' → logprob: -14.500086784362793
    9. '::_' → logprob: -15.125086784362793
    10. ']' → logprob: -15.625086784362793

Token 574: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.704273118884885e-07
    2. ' k' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.75
    4. ' ' → logprob: -20.75
    5. '	k' → logprob: -20.875
    6. '
' → logprob: -21.125
    7. ']' → logprob: -21.375
    8. '"k' → logprob: -22.25
    9. '+k' → logprob: -22.625
    10. '  ' → logprob: -22.625

Token 575: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.3199920178740285e-05
    2. ' ]' → logprob: -11.750022888183594
    3. ']

' → logprob: -11.875022888183594
    4. ']
' → logprob: -12.875022888183594
    5. '].' → logprob: -12.875022888183594
    6. ')' → logprob: -13.375022888183594
    7. '#' → logprob: -15.125022888183594
    8. '][' → logprob: -15.375022888183594
    9. '];' → logprob: -15.625022888183594
    10. '])' → logprob: -15.625022888183594

Token 576: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05380776897072792
    2. ' for' → logprob: -3.6788077354431152
    3. '#' → logprob: -4.678807735443115
    4. 'l' → logprob: -5.053807735443115
    5. 'if' → logprob: -5.428807735443115
    6. 'n' → logprob: -5.428807735443115
    7. 'prev' → logprob: -7.303807735443115
    8. 'ans' → logprob: -7.428807735443115
    9. '```' → logprob: -8.303808212280273
    10. 'len' → logprob: -8.803808212280273

Token 577: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8854109644889832
    2. 'last' → logprob: -1.885411024093628
    3. 'count' → logprob: -2.010411024093628
    4. 'used' → logprob: -2.385411024093628
    5. 'counts' → logprob: -2.635411024093628
    6. 'from' → logprob: -3.760411024093628
    7. 'prev' → logprob: -3.885411024093628
    8. 'cnt' → logprob: -4.010410785675049
    9. 'm' → logprob: -4.260410785675049
    10. 'c' → logprob: -4.385410785675049

Token 578: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2810531556606293
    2. 'last' → logprob: -2.156053066253662
    3. 'used' → logprob: -2.531053066253662
    4. 'prev' → logprob: -3.906053066253662
    5. 'previous' → logprob: -5.406053066253662
    6. 'count' → logprob: -5.531053066253662
    7. 'cnt' → logprob: -5.781053066253662
    8. 'm' → logprob: -6.031053066253662
    9. 'j' → logprob: -6.156053066253662
    10. 'from' → logprob: -6.281053066253662

Token 579: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02342342957854271
    2. ' j' → logprob: -3.898423433303833
    3. 'i' → logprob: -6.523423194885254
    4. 'idx' → logprob: -6.773423194885254
    5. ' idx' → logprob: -9.273423194885254
    6. '_j' → logprob: -9.773423194885254
    7. ' i' → logprob: -10.148423194885254
    8. 'x' → logprob: -10.773423194885254
    9. 'index' → logprob: -11.023423194885254
    10. ' ' → logprob: -12.273423194885254

Token 580: ' index' (ID: 3472)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4785304665565491
    2. 'i' → logprob: -1.6035304069519043
    3. ' j' → logprob: -2.1035304069519043
    4. ' i' → logprob: -3.4785304069519043
    5. 'idx' → logprob: -4.478530406951904
    6. ' idx' → logprob: -5.353530406951904
    7. 'c' → logprob: -5.853530406951904
    8. 'index' → logprob: -6.478530406951904
    9. '_j' → logprob: -6.853530406951904
    10. ' c' → logprob: -7.478530406951904

Token 581: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3207657039165497
    2. 'j' → logprob: -1.945765733718872
    3. ' in' → logprob: -2.195765733718872
    4. ',' → logprob: -4.195765495300293
    5. 'in' → logprob: -6.945765495300293
    6. ',j' → logprob: -6.945765495300293
    7. 'idx' → logprob: -6.945765495300293
    8. ' ,' → logprob: -7.445765495300293
    9. ' idx' → logprob: -7.820765495300293
    10. '   ' → logprob: -8.195765495300293

Token 582: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07008970528841019
    2. 'in' → logprob: -2.945089817047119
    3. ',' → logprob: -4.195089817047119
    4. ' ' → logprob: -11.820089340209961
    5. ' ,' → logprob: -11.820089340209961
    6. '   ' → logprob: -12.820089340209961
    7. '```' → logprob: -13.445089340209961
    8. 'range' → logprob: -13.820089340209961
    9. '  ' → logprob: -14.445089340209961
    10. ' ' → logprob: -15.070089340209961

Token 583: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008614808320999146
    2. ' range' → logprob: -4.758615016937256
    3. '   ' → logprob: -16.258615493774414
    4. ' ' → logprob: -17.133615493774414
    5. '	range' → logprob: -17.383615493774414
    6. '  ' → logprob: -18.008615493774414
    7. '(range' → logprob: -18.258615493774414
    8. '`' → logprob: -20.133615493774414
    9. '```' → logprob: -20.258615493774414
    10. 'len' → logprob: -20.258615493774414

Token 584: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.125709533691406
    4. ' ' → logprob: -18.500709533691406
    5. '	range' → logprob: -18.750709533691406
    6. 'l' → logprob: -19.125709533691406
    7. '  ' → logprob: -19.250709533691406
    8. '
' → logprob: -19.750709533691406
    9. '(range' → logprob: -19.875709533691406
    10. 'for' → logprob: -21.125709533691406

Token 585: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07729706913232803
    2. 'len' → logprob: -3.7022969722747803
    3. ',len' → logprob: -3.7022969722747803
    4. 'range' → logprob: -3.9522969722747803
    5. '   ' → logprob: -6.577297210693359
    6. ' len' → logprob: -6.827297210693359
    7. 'in' → logprob: -7.202297210693359
    8. '..' → logprob: -7.327297210693359
    9. ' range' → logprob: -7.452297210693359
    10. ' in' → logprob: -7.702297210693359

Token 586: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0019910898990929127
    2. ' len' → logprob: -6.251991271972656
    3. '(len' → logprob: -9.751991271972656
    4. '   ' → logprob: -13.001991271972656
    5. 'range' → logprob: -13.626991271972656
    6. ',len' → logprob: -15.376991271972656
    7. '[len' → logprob: -15.376991271972656
    8. 'n' → logprob: -16.001991271972656
    9. '	len' → logprob: -16.376991271972656
    10. '
' → logprob: -16.876991271972656

Token 587: ' longueur' (ID: 104613)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.2233183042553719e-05
    2. ' len' → logprob: -12.000012397766113
    3. '(len' → logprob: -12.125012397766113
    4. '   ' → logprob: -15.000012397766113
    5. 'range' → logprob: -15.875012397766113
    6. '[len' → logprob: -16.750011444091797
    7. 'n' → logprob: -17.875011444091797
    8. '=len' → logprob: -17.875011444091797
    9. ',len' → logprob: -18.375011444091797
    10. '	len' → logprob: -18.875011444091797

Token 588: ' de' (ID: 334)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.008029716089367867
    2. '(range' → logprob: -5.508029937744141
    3. 'l' → logprob: -6.383029937744141
    4. '(' → logprob: -6.883029937744141
    5. '(len' → logprob: -7.633029937744141
    6. ' l' → logprob: -8.25802993774414
    7. 'range' → logprob: -8.75802993774414
    8. ' (' → logprob: -8.88302993774414
    9. ' range' → logprob: -9.75802993774414
    10. ' of' → logprob: -10.13302993774414

Token 589: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00016325322212651372
    2. ' l' → logprob: -8.875163078308105
    3. '(l' → logprob: -10.875163078308105
    4. 'len' → logprob: -13.250163078308105
    5. '```' → logprob: -14.375163078308105
    6. 'range' → logprob: -14.625163078308105
    7. '   ' → logprob: -14.875163078308105
    8. 'win' → logprob: -15.125163078308105
    9. '[l' → logprob: -15.125163078308105
    10. '
' → logprob: -15.750163078308105

Token 590: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1520163118839264
    2. ' range' → logprob: -2.2770164012908936
    3. 'len' → logprob: -4.6520161628723145
    4. '   ' → logprob: -4.9020161628723145
    5. '(range' → logprob: -5.2770161628723145
    6. '-' → logprob: -5.2770161628723145
    7. 'l' → logprob: -5.6520161628723145
    8. ')' → logprob: -6.0270161628723145
    9. '(len' → logprob: -6.1520161628723145
    10. 'for' → logprob: -6.2770161628723145

Token 591: 'ex' (ID: 490)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.34319356083869934
    2. 'range' → logprob: -1.343193531036377
    3. ' range' → logprob: -4.343193531036377
    4. ')' → logprob: -5.093193531036377
    5. ' len' → logprob: -5.093193531036377
    6. '   ' → logprob: -5.718193531036377
    7. '(len' → logprob: -8.093194007873535
    8. '):
' → logprob: -8.843194007873535
    9. ' ' → logprob: -9.468194007873535
    10. '
' → logprob: -9.468194007873535

Token 592: 'clus' (ID: 4085)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6723260283470154
    2. ' range' → logprob: -0.7973260283470154
    3. '   ' → logprob: -3.79732608795166
    4. 'for' → logprob: -5.29732608795166
    5. 'len' → logprob: -5.54732608795166
    6. ')' → logprob: -5.54732608795166
    7. '(range' → logprob: -6.04732608795166
    8. '(len' → logprob: -7.92232608795166
    9. '):
' → logprob: -8.17232608795166
    10. '```' → logprob: -9.04732608795166

Token 593: '),' (ID: 936)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3020177483558655
    2. ' range' → logprob: -1.8020176887512207
    3. ')' → logprob: -3.8020176887512207
    4. '1' → logprob: -4.052017688751221
    5. 'e' → logprob: -4.302017688751221
    6. '(range' → logprob: -4.802017688751221
    7. '   ' → logprob: -4.927017688751221
    8. 'len' → logprob: -5.302017688751221
    9. '0' → logprob: -5.802017688751221
    10. 'if' → logprob: -6.302017688751221

Token 594: ' c' (ID: 274)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07820168137550354
    2. 'range' → logprob: -2.9532017707824707
    3. ' for' → logprob: -4.328201770782471
    4. 'for' → logprob: -5.328201770782471
    5. ' len' → logprob: -5.953201770782471
    6. '   ' → logprob: -6.703201770782471
    7. '    ' → logprob: -7.953201770782471
    8. ' ' → logprob: -8.328201293945312
    9. 'len' → logprob: -9.578201293945312
    10. ':' → logprob: -9.578201293945312

Token 595: ''est' (ID: 6616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022892745211720467
    2. 'range' → logprob: -3.897892713546753
    3. ' for' → logprob: -7.147892951965332
    4. '#' → logprob: -7.772892951965332
    5. 'or' → logprob: -8.022892951965332
    6. '```' → logprob: -8.397892951965332
    7. '=' → logprob: -9.147892951965332
    8. '
' → logprob: -9.522892951965332
    9. '   ' → logprob: -9.647892951965332
    10. 'in' → logprob: -9.897892951965332

Token 596: '-à' (ID: 56297)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16116198897361755
    2. 'range' → logprob: -1.91116201877594
    3. '1' → logprob: -8.036162376403809
    4. ' in' → logprob: -8.286162376403809
    5. '   ' → logprob: -8.536162376403809
    6. '(range' → logprob: -9.786162376403809
    7. ' ' → logprob: -11.036162376403809
    8. ')' → logprob: -11.286162376403809
    9. ' len' → logprob: -11.411162376403809
    10. 'for' → logprob: -11.536162376403809

Token 597: '-dire' (ID: 76064)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.529151439666748
    2. ' range' → logprob: -0.904151439666748
    3. 'ur' → logprob: -5.529151439666748
    4. 'r' → logprob: -7.279151439666748
    5. 'u' → logprob: -7.654151439666748
    6. '1' → logprob: -8.029151916503906
    7. '2' → logprob: -9.154151916503906
    8. 'n' → logprob: -9.154151916503906
    9. '#' → logprob: -9.904151916503906
    10. 'ut' → logprob: -10.154151916503906

Token 598: ' à' (ID: 1221)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5832458138465881
    2. 'range' → logprob: -0.8332458138465881
    3. 'len' → logprob: -5.583245754241943
    4. ' len' → logprob: -5.833245754241943
    5. 'for' → logprob: -8.333246231079102
    6. '   ' → logprob: -8.833246231079102
    7. ' for' → logprob: -8.833246231079102
    8. ' ' → logprob: -11.083246231079102
    9. ')' → logprob: -11.708246231079102
    10. ' in' → logprob: -12.083246231079102

Token 599: ' partir' (ID: 12100)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20165832340717316
    2. ' range' → logprob: -1.7016583681106567
    3. 'len' → logprob: -8.451658248901367
    4. '1' → logprob: -11.826658248901367
    5. ' len' → logprob: -12.076658248901367
    6. ' ' → logprob: -12.326658248901367
    7. '   ' → logprob: -12.951658248901367
    8. '(range' → logprob: -13.326658248901367
    9. '	range' → logprob: -13.576658248901367
    10. 'for' → logprob: -13.826658248901367

Token 600: ' du' (ID: 1462)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029777219519019127
    2. '   ' → logprob: -3.9047772884368896
    3. ' de' → logprob: -5.4047770500183105
    4. 'de' → logprob: -5.7797770500183105
    5. '(' → logprob: -7.4047770500183105
    6. 'range' → logprob: -7.9047770500183105
    7. ' range' → logprob: -8.529777526855469
    8. 'j' → logprob: -8.779777526855469
    9. ' ' → logprob: -9.529777526855469
    10. '2' → logprob: -9.779777526855469

Token 601: ' deuxième' (ID: 51664)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -14.500005722045898
    4. '```' → logprob: -16.7500057220459
    5. '
' → logprob: -18.7500057220459
    6. '  ' → logprob: -19.6250057220459
    7. 'range' → logprob: -19.6250057220459
    8. 'for' → logprob: -20.5000057220459
    9. '    ' → logprob: -20.7500057220459
    10. ' ' → logprob: -20.7500057220459

Token 602: ' élément' (ID: 99627)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6636298894882202
    2. 'j' → logprob: -1.6636298894882202
    3. ' range' → logprob: -1.6636298894882202
    4. ' j' → logprob: -2.6636300086975098
    5. 'for' → logprob: -5.03863000869751
    6. '1' → logprob: -5.16363000869751
    7. ' for' → logprob: -5.16363000869751
    8. 'len' → logprob: -5.16363000869751
    9. ':j' → logprob: -5.78863000869751
    10. ':' → logprob: -6.53863000869751

Token 603: ' de' (ID: 334)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5209311246871948
    2. 'for' → logprob: -1.8959311246871948
    3. ':' → logprob: -2.1459312438964844
    4. 'in' → logprob: -3.6459312438964844
    5. ' range' → logprob: -3.6459312438964844
    6. ' in' → logprob: -3.6459312438964844
    7. ':
' → logprob: -3.7709312438964844
    8. '(' → logprob: -4.395931243896484
    9. '(range' → logprob: -4.395931243896484
    10. '   ' → logprob: -5.270931243896484

Token 604: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26503562927246094
    2. 'l' → logprob: -2.015035629272461
    3. ' range' → logprob: -2.390035629272461
    4. ' l' → logprob: -4.890035629272461
    5. 'len' → logprob: -9.390035629272461
    6. '```' → logprob: -9.640035629272461
    7. '1' → logprob: -9.765035629272461
    8. '`' → logprob: -9.765035629272461
    9. '   ' → logprob: -10.765035629272461
    10. ' ' → logprob: -11.140035629272461

Token 605: ' :
' (ID: 10039)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.444691926240921
    2. 'range' → logprob: -1.0696918964385986
    3. ' range' → logprob: -5.194692134857178
    4. 'in' → logprob: -5.694692134857178
    5. ' for' → logprob: -6.194692134857178
    6. '   ' → logprob: -6.194692134857178
    7. '(range' → logprob: -7.694692134857178
    8. ':' → logprob: -7.819692134857178
    9. ':
' → logprob: -7.819692134857178
    10. ' in' → logprob: -7.944692134857178

Token 606: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43382394313812256
    2. ' for' → logprob: -1.1838239431381226
    3. ' range' → logprob: -3.433824062347412
    4. 'range' → logprob: -4.308824062347412
    5. '   ' → logprob: -9.058823585510254
    6. ' ' → logprob: -11.433823585510254
    7. '```' → logprob: -11.808823585510254
    8. '1' → logprob: -12.183823585510254
    9. '(range' → logprob: -12.558823585510254
    10. ' in' → logprob: -12.558823585510254

Token 607: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03078204020857811
    2. 'range' → logprob: -3.7807819843292236
    3. ' for' → logprob: -5.280782222747803
    4. ' range' → logprob: -6.030782222747803
    5. '   ' → logprob: -11.655781745910645
    6. '1' → logprob: -12.780781745910645
    7. 'in' → logprob: -13.405781745910645
    8. ' ' → logprob: -14.155781745910645
    9. '```' → logprob: -14.155781745910645
    10. ' in' → logprob: -14.405781745910645

Token 608: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6931504011154175
    2. ' j' → logprob: -0.6931504011154175
    3. '	j' → logprob: -13.568150520324707
    4. '   ' → logprob: -13.693150520324707
    5. ' ' → logprob: -14.693150520324707
    6. ' ' → logprob: -15.818150520324707
    7. '_j' → logprob: -16.19314956665039
    8. '  ' → logprob: -16.69314956665039
    9. '    ' → logprob: -16.81814956665039
    10. '$j' → logprob: -17.56814956665039

Token 609: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018169373273849487
    2. 'in' → logprob: -4.018169403076172
    3. ' ' → logprob: -11.268169403076172
    4. ',' → logprob: -12.518169403076172
    5. '	in' → logprob: -13.518169403076172
    6. '   ' → logprob: -14.893169403076172
    7. 'range' → logprob: -15.268169403076172
    8. '  ' → logprob: -15.393169403076172
    9. 'n' → logprob: -15.643169403076172
    10. 'import' → logprob: -15.643169403076172

Token 610: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022545099258423
    2. ' range' → logprob: -1.9102253913879395
    3. ' ' → logprob: -13.910225868225098
    4. '(range' → logprob: -16.28522491455078
    5. '   ' → logprob: -16.53522491455078
    6. '1' → logprob: -16.91022491455078
    7. '  ' → logprob: -17.03522491455078
    8. ' in' → logprob: -17.16022491455078
    9. 'in' → logprob: -17.78522491455078
    10. '	range' → logprob: -18.28522491455078

Token 611: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.166338137816638e-05
    2. '1' → logprob: -10.625031471252441
    3. ' (' → logprob: -11.875031471252441
    4. '(
' → logprob: -15.375031471252441
    5. '(len' → logprob: -18.250032424926758
    6. '   ' → logprob: -18.375032424926758
    7. ' ' → logprob: -18.875032424926758
    8. 'len' → logprob: -19.500032424926758
    9. ',' → logprob: -19.625032424926758
    10. '[' → logprob: -19.875032424926758

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.375003814697266
    4. 'len' → logprob: -18.750003814697266
    5. '  ' → logprob: -19.875003814697266
    6. '(' → logprob: -20.625003814697266
    7. '    ' → logprob: -20.875003814697266
    8. '	' → logprob: -21.125003814697266
    9. '１' → logprob: -21.250003814697266
    10. '     ' → logprob: -21.500003814697266

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049031272530555725
    2. ',len' → logprob: -3.0490312576293945
    3. ' ,' → logprob: -7.9240312576293945
    4. '(len' → logprob: -9.924031257629395
    5. 'len' → logprob: -11.049031257629395
    6. ',length' → logprob: -11.424031257629395
    7. ',l' → logprob: -12.799031257629395
    8. '(' → logprob: -13.424031257629395
    9. '   ' → logprob: -14.799031257629395
    10. ',n' → logprob: -14.924031257629395

Token 614: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.627176768844947e-05
    2. ' len' → logprob: -9.250096321105957
    3. '(len' → logprob: -16.50009536743164
    4. '   ' → logprob: -17.75009536743164
    5. ',len' → logprob: -18.87509536743164
    6. '	len' → logprob: -19.12509536743164
    7. '[len' → logprob: -19.25009536743164
    8. '=len' → logprob: -20.50009536743164
    9. ' ' → logprob: -21.00009536743164
    10. '<len' → logprob: -21.25009536743164

Token 615: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00011737081513274461
    2. 'l' → logprob: -9.125117301940918
    3. '(' → logprob: -11.875117301940918
    4. ' (' → logprob: -14.000117301940918
    5. ' l' → logprob: -15.375117301940918
    6. '(
' → logprob: -15.875117301940918
    7. '[l' → logprob: -15.875117301940918
    8. '	l' → logprob: -16.625118255615234
    9. ')' → logprob: -17.625118255615234
    10. '(L' → logprob: -18.875118255615234

Token 616: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.07938431948423386
    2. ')):' → logprob: -2.5793843269348145
    3. ')' → logprob: -8.579383850097656
    4. '))' → logprob: -9.079383850097656
    5. ')):
' → logprob: -9.329383850097656
    6. '):' → logprob: -10.204383850097656
    7. '):
' → logprob: -10.329383850097656
    8. ' ' → logprob: -10.579383850097656
    9. '[j' → logprob: -13.204383850097656
    10. '   ' → logprob: -13.329383850097656

Token 617: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031217450741678476
    2. 'if' → logprob: -6.378121852874756
    3. ' if' → logprob: -6.878121852874756
    4. '<|end|>' → logprob: -8.128121376037598
    5. '   ' → logprob: -10.003121376037598
    6. '        
' → logprob: -11.753121376037598
    7. ' ' → logprob: -12.003121376037598
    8. ',' → logprob: -12.253121376037598
    9. ' ' → logprob: -12.503121376037598
    10. '    ' → logprob: -12.628121376037598

Token 618: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20659460127353668
    2. '       ' → logprob: -1.8315945863723755
    3. ' if' → logprob: -3.706594705581665
    4. '   ' → logprob: -6.456594467163086
    5. '           ' → logprob: -8.331594467163086
    6. ' ' → logprob: -10.081594467163086
    7. '	if' → logprob: -10.581594467163086
    8. '#' (adapté à ' #') → logprob: -11.456594467163086
    9. '	   ' → logprob: -11.456594467163086
    10. '  ' → logprob: -12.581594467163086

Token 619: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00014716439181938767
    2. ' if' → logprob: -8.875146865844727
    3. '       ' → logprob: -12.250146865844727
    4. 'If' → logprob: -13.375146865844727
    5. '   ' → logprob: -15.000146865844727
    6. '           ' → logprob: -15.375146865844727
    7. '#' → logprob: -15.500146865844727
    8. '	if' → logprob: -16.000146865844727
    9. '```' → logprob: -17.000146865844727
    10. ' ' → logprob: -18.125146865844727

Token 620: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.31332504749298096
    2. ' l' → logprob: -1.313325047492981
    3. '           ' → logprob: -11.188324928283691
    4. '    ' → logprob: -11.563324928283691
    5. '   ' → logprob: -11.813324928283691
    6. ' ' → logprob: -12.313324928283691
    7. '	l' → logprob: -12.438324928283691
    8. ' ' → logprob: -12.688324928283691
    9. '       ' → logprob: -12.688324928283691
    10. 'j' → logprob: -12.688324928283691

Token 621: ' coup' (ID: 25465)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00024524700711481273
    2. ' l' → logprob: -8.375245094299316
    3. 'win' → logprob: -11.375245094299316
    4. ' win' → logprob: -13.625245094299316
    5. '   ' → logprob: -14.875245094299316
    6. 'j' → logprob: -15.250245094299316
    7. '	l' → logprob: -15.500245094299316
    8. '    ' → logprob: -15.625245094299316
    9. '[l' → logprob: -15.875245094299316
    10. '#' → logprob: -16.000246047973633

Token 622: ' choisi' (ID: 77245)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7830790877342224
    2. '[l' → logprob: -1.1580791473388672
    3. '[j' → logprob: -2.158079147338867
    4. ' l' → logprob: -2.283079147338867
    5. '[' → logprob: -4.908079147338867
    6. '       ' → logprob: -6.408079147338867
    7. '           ' → logprob: -7.033079147338867
    8. '   ' → logprob: -7.533079147338867
    9. '[i' → logprob: -8.783079147338867
    10. '==' → logprob: -9.033079147338867

Token 623: ' à' (ID: 1221)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.176725834608078
    2. ' l' → logprob: -2.3017258644104004
    3. '[l' → logprob: -3.0517258644104004
    4. '[j' → logprob: -4.6767258644104
    5. ' pour' → logprob: -6.0517258644104
    6. ' est' → logprob: -7.5517258644104
    7. 'pour' → logprob: -7.9267258644104
    8. '   ' → logprob: -8.051725387573242
    9. ' ==' → logprob: -8.426725387573242
    10. 'j' → logprob: -8.551725387573242

Token 624: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08067938685417175
    2. ' j' → logprob: -2.580679416656494
    3. '   ' → logprob: -7.705679416656494
    4. 'l' → logprob: -7.705679416656494
    5. 'i' → logprob: -8.455678939819336
    6. ' win' → logprob: -8.955678939819336
    7. ' l' → logprob: -9.080678939819336
    8. ' i' → logprob: -9.330678939819336
    9. 'win' → logprob: -9.580678939819336
    10. '       ' → logprob: -9.705678939819336

Token 625: ' position' (ID: 4010)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007716174703091383
    2. 'i' → logprob: -5.257716178894043
    3. ' j' → logprob: -6.132716178894043
    4. 'win' → logprob: -9.382716178894043
    5. 'l' → logprob: -9.632716178894043
    6. ' i' → logprob: -10.132716178894043
    7. '```' → logprob: -10.507716178894043
    8. '   ' → logprob: -10.882716178894043
    9. 'index' → logprob: -11.382716178894043
    10. ' win' → logprob: -11.382716178894043

Token 626: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12764573097229004
    2. ' j' → logprob: -2.12764573097229
    3. '   ' → logprob: -7.627645492553711
    4. '[j' → logprob: -9.502645492553711
    5. ' ' → logprob: -10.377645492553711
    6. '    ' → logprob: -10.627645492553711
    7. '```' → logprob: -10.752645492553711
    8. '       ' → logprob: -11.127645492553711
    9. '(j' → logprob: -11.377645492553711
    10. '0' → logprob: -11.502645492553711

Token 627: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6360530257225037
    2. '==' → logprob: -1.1360530853271484
    3. ']' → logprob: -2.2610530853271484
    4. ']==' → logprob: -3.2610530853271484
    5. '[j' → logprob: -5.511053085327148
    6. ' ' → logprob: -6.886053085327148
    7. '```' → logprob: -8.011053085327148
    8. ' j' → logprob: -8.136053085327148
    9. ' dans' → logprob: -8.511053085327148
    10. ' l' → logprob: -8.886053085327148

Token 628: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12598487734794617
    2. 'ident' → logprob: -2.8759849071502686
    3. 'le' → logprob: -3.3759849071502686
    4. ' ident' → logprob: -4.3759846687316895
    5. ' égal' → logprob: -5.5009846687316895
    6. ' le' → logprob: -5.7509846687316895
    7. 'égal' → logprob: -6.0009846687316895
    8. ' l' → logprob: -6.3759846687316895
    9. ' ég' → logprob: -6.6259846687316895
    10. '==' → logprob: -7.1259846687316895

Token 629: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.45077070593833923
    2. 'l' → logprob: -1.2007707357406616
    3. ' même' → logprob: -2.825770616531372
    4. 'even' → logprob: -6.700770854949951
    5. 'win' → logprob: -7.450770854949951
    6. 'Même' → logprob: -8.075770378112793
    7. '#' → logprob: -8.950770378112793
    8. 'same' → logprob: -9.575770378112793
    9. '   ' → logprob: -9.700770378112793
    10. '```' → logprob: -10.450770378112793

Token 630: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.03436607867479324
    2. 'que' → logprob: -3.4093661308288574
    3. 'as' → logprob: -8.9093656539917
    4. '       ' → logprob: -9.0343656539917
    5. '      ' → logprob: -9.4093656539917
    6. '   ' → logprob: -9.9093656539917
    7. '```' → logprob: -9.9093656539917
    8. 'à' → logprob: -10.0343656539917
    9. ',' → logprob: -10.0343656539917
    10. ' as' → logprob: -10.4093656539917

Token 631: ' celui' (ID: 27857)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007907193154096603
    2. ' l' → logprob: -5.007907390594482
    3. '   ' → logprob: -7.382907390594482
    4. '       ' → logprob: -7.882907390594482
    5. '    ' → logprob: -10.132906913757324
    6. '        ' → logprob: -10.132906913757324
    7. '      ' → logprob: -10.257906913757324
    8. '     ' → logprob: -11.132906913757324
    9. '           ' → logprob: -11.257906913757324
    10. 'j' → logprob: -11.632906913757324

Token 632: ' à' (ID: 1221)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5936806797981262
    2. 'de' → logprob: -1.8436806201934814
    3. 'à' → logprob: -2.0936806201934814
    4. '[j' → logprob: -2.5936806201934814
    5. ' à' → logprob: -2.9686806201934814
    6. ' de' → logprob: -3.7186806201934814
    7. '   ' → logprob: -4.8436808586120605
    8. '```' → logprob: -6.0936808586120605
    9. ' j' → logprob: -6.3436808586120605
    10. '(j' → logprob: -7.0936808586120605

Token 633: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.022123917937278748
    2. ' j' → logprob: -3.8971238136291504
    3. '   ' → logprob: -6.52212381362915
    4. '       ' → logprob: -10.147124290466309
    5. '```' → logprob: -11.147124290466309
    6. ' ' → logprob: -11.272124290466309
    7. '  ' → logprob: -11.397124290466309
    8. '    ' → logprob: -11.397124290466309
    9. 'l' → logprob: -12.522124290466309
    10. '[j' → logprob: -12.772124290466309

Token 634: ' position' (ID: 4010)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.41129949549213e-05
    2. ' j' → logprob: -9.625083923339844
    3. '   ' → logprob: -11.500083923339844
    4. '       ' → logprob: -12.875083923339844
    5. '```' → logprob: -12.875083923339844
    6. '    ' → logprob: -14.625083923339844
    7. '(j' → logprob: -14.750083923339844
    8. '[j' → logprob: -15.125083923339844
    9. 'position' → logprob: -15.500083923339844
    10. ' ' → logprob: -15.875083923339844

Token 635: ' précédente' (ID: 177319)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00039349604048766196
    2. ' j' → logprob: -7.875393390655518
    3. '   ' → logprob: -11.500393867492676
    4. '```' → logprob: -13.750393867492676
    5. ' ' → logprob: -14.125393867492676
    6. '[j' → logprob: -15.000393867492676
    7. '  ' → logprob: -15.125393867492676
    8. '(j' → logprob: -15.375393867492676
    9. '0' → logprob: -15.375393867492676
    10. '`' → logprob: -16.00039291381836

Token 636: ' (' (ID: 350)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07690373808145523
    2. '(j' → logprob: -3.451903820037842
    3. ' j' → logprob: -4.326903820037842
    4. '       ' → logprob: -4.576903820037842
    5. '   ' → logprob: -5.076903820037842
    6. '```' → logprob: -5.576903820037842
    7. ' (' → logprob: -5.576903820037842
    8. ' and' → logprob: -6.826903820037842
    9. 'j' → logprob: -7.076903820037842
    10. ':' → logprob: -7.826903820037842

Token 637: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005460117012262344
    2. ' j' → logprob: -5.255460262298584
    3. '       ' → logprob: -8.755459785461426
    4. '   ' → logprob: -10.505459785461426
    5. '           ' → logprob: -11.005459785461426
    6. ')' → logprob: -12.005459785461426
    7. '```' → logprob: -12.630459785461426
    8. '    ' → logprob: -12.880459785461426
    9. '        ' → logprob: -13.130459785461426
    10. ' ' → logprob: -13.505459785461426

Token 638: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9526980519294739
    2. ')' → logprob: -1.202697992324829
    3. ']' → logprob: -1.827697992324829
    4. '==' → logprob: -2.952697992324829
    5. ']==' → logprob: -3.702697992324829
    6. ' -' → logprob: -4.202698230743408
    7. '):' → logprob: -4.702698230743408
    8. '>' → logprob: -4.827698230743408
    9. '```' → logprob: -5.202698230743408
    10. ' ==' → logprob: -5.202698230743408

Token 639: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015288250870071352
    2. '```' → logprob: -9.500152587890625
    3. ')' → logprob: -9.625152587890625
    4. ' ' → logprob: -12.000152587890625
    5. 'j' → logprob: -12.875152587890625
    6. '   ' → logprob: -13.750152587890625
    7. '`' → logprob: -14.250152587890625
    8. ']' → logprob: -14.250152587890625
    9. '``' → logprob: -16.250152587890625
    10. '`)' → logprob: -16.375152587890625

Token 640: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0932484045624733
    2. '])' → logprob: -2.9682483673095703
    3. '):' → logprob: -3.8432483673095703
    4. ']' → logprob: -5.34324836730957
    5. ' )' → logprob: -5.34324836730957
    6. '):
' → logprob: -6.09324836730957
    7. ']):' → logprob: -6.46824836730957
    8. ' and' → logprob: -7.34324836730957
    9. '       ' → logprob: -7.46824836730957
    10. 'and' → logprob: -7.84324836730957

Token 641: ' :
' (ID: 10039)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2133670449256897
    2. 'and' → logprob: -1.713366985321045
    3. '           ' → logprob: -5.463366985321045
    4. ' et' → logprob: -6.088366985321045
    5. '       ' → logprob: -6.088366985321045
    6. ':' → logprob: -6.463366985321045
    7. 'et' → logprob: -7.088366985321045
    8. '          ' → logprob: -9.088367462158203
    9. '```' → logprob: -9.213367462158203
    10. ':
' → logprob: -9.338367462158203

Token 642: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16974449157714844
    2. ' if' → logprob: -2.0447444915771484
    3. '       ' → logprob: -3.6697444915771484
    4. '           ' → logprob: -7.044744491577148
    5. '   ' → logprob: -9.044744491577148
    6. '[' → logprob: -9.669744491577148
    7. ' ' → logprob: -10.044744491577148
    8. '```' → logprob: -10.544744491577148
    9. '          ' → logprob: -11.294744491577148
    10. '        ' → logprob: -11.294744491577148

Token 643: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0038821424823254347
    2. ' if' → logprob: -5.628881931304932
    3. '       ' → logprob: -8.25388240814209
    4. '           ' → logprob: -12.00388240814209
    5. '```' → logprob: -12.37888240814209
    6. '   ' → logprob: -12.75388240814209
    7. 'win' → logprob: -12.75388240814209
    8. ' ' → logprob: -13.25388240814209
    9. 'If' → logprob: -13.62888240814209
    10. ' win' → logprob: -13.87888240814209

Token 644: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04859315976500511
    2. ' l' → logprob: -3.048593044281006
    3. '   ' → logprob: -12.798593521118164
    4. '	l' → logprob: -13.923593521118164
    5. '       ' → logprob: -14.173593521118164
    6. '    ' → logprob: -15.048593521118164
    7. '           ' → logprob: -15.048593521118164
    8. ' ' → logprob: -15.048593521118164
    9. 'win' → logprob: -16.173593521118164
    10. '     ' → logprob: -16.298593521118164

Token 645: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.250000953674316
    3. '```' → logprob: -15.500000953674316
    4. ' [' → logprob: -15.875000953674316
    5. '[i' → logprob: -17.0
    6. '[l' → logprob: -17.0
    7. '\[' → logprob: -18.375
    8. 'j' → logprob: -18.5
    9. '   ' → logprob: -19.0
    10. '
' → logprob: -19.125

Token 646: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25895217061042786
    2. '==' → logprob: -1.8839521408081055
    3. ']==' → logprob: -2.7589521408081055
    4. ' ==' → logprob: -4.3839521408081055
    5. ' ]' → logprob: -8.383952140808105
    6. '[' → logprob: -10.008952140808105
    7. '][' → logprob: -11.633952140808105
    8. '=' → logprob: -12.008952140808105
    9. ')' → logprob: -12.133952140808105
    10. ']=' → logprob: -12.383952140808105

Token 647: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03806042671203613
    2. ' ==' → logprob: -3.288060426712036
    3. '=' → logprob: -11.288060188293457
    4. '==
' → logprob: -12.663060188293457
    5. '===' → logprob: -13.538060188293457
    6. ']==' → logprob: -14.288060188293457
    7. '```' → logprob: -15.163060188293457
    8. ')==' → logprob: -15.663060188293457
    9. ' ' → logprob: -15.663060188293457
    10. '[' → logprob: -15.913060188293457

Token 648: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.32392441527918e-05
    2. ' l' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.750053405761719
    4. ' ' → logprob: -14.750053405761719
    5. '	l' → logprob: -16.00005340576172
    6. '       ' → logprob: -17.25005340576172
    7. '  ' → logprob: -17.50005340576172
    8. '     ' → logprob: -17.62505340576172
    9. '    ' → logprob: -17.75005340576172
    10. '           ' → logprob: -18.25005340576172

Token 649: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.1689596148207784e-05
    2. 'j' → logprob: -10.250051498413086
    3. 'l' → logprob: -11.750051498413086
    4. '[l' → logprob: -12.500051498413086
    5. '[' → logprob: -13.000051498413086
    6. ' [' → logprob: -13.875051498413086
    7. '   ' → logprob: -14.625051498413086
    8. '```' → logprob: -15.375051498413086
    9. ''[' → logprob: -15.875051498413086
    10. ']' → logprob: -16.125051498413086

Token 650: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00044473158777691424
    2. ' -' → logprob: -8.000444412231445
    3. '[j' → logprob: -9.750444412231445
    4. '1' → logprob: -10.750444412231445
    5. '[' → logprob: -11.500444412231445
    6. ']-' → logprob: -11.625444412231445
    7. ']' → logprob: -12.000444412231445
    8. 'j' → logprob: -13.250444412231445
    9. '-
' → logprob: -14.750444412231445
    10. ''-' → logprob: -14.875444412231445

Token 651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '```' → logprob: -15.500001907348633
    4. '   ' → logprob: -15.625001907348633
    5. '-' → logprob: -16.500001907348633
    6. 'j' → logprob: -17.000001907348633
    7. '`' → logprob: -17.687501907348633
    8. '       ' → logprob: -18.062501907348633
    9. ']' → logprob: -18.437501907348633
    10. '۱' → logprob: -18.750001907348633

Token 652: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.47849494218826294
    2. ']:
' → logprob: -0.9784949421882629
    3. ']' → logprob: -5.478495121002197
    4. ']:
' → logprob: -9.228494644165039
    5. ']:

' → logprob: -10.478494644165039
    6. '']:
' → logprob: -10.603494644165039
    7. '       ' → logprob: -10.853494644165039
    8. ':' → logprob: -11.103494644165039
    9. '']:' → logprob: -11.228494644165039
    10. ']==' → logprob: -11.228494644165039

Token 653: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002799279463943094
    2. '#' → logprob: -8.875280380249023
    3. 'ans' → logprob: -9.500280380249023
    4. '       ' → logprob: -10.000280380249023
    5. ' ans' → logprob: -11.375280380249023
    6. '          ' → logprob: -13.000280380249023
    7. '   ' → logprob: -13.375280380249023
    8. '               ' → logprob: -14.000280380249023
    9. '         ' → logprob: -14.375280380249023
    10. 'n' → logprob: -14.500280380249023

Token 654: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006862185895442963
    2. '           ' → logprob: -5.006862163543701
    3. ' ans' → logprob: -9.50686264038086
    4. '#' (adapté à ' #') → logprob: -11.13186264038086
    5. 'l' → logprob: -11.25686264038086
    6. 'if' → logprob: -11.50686264038086
    7. '               ' → logprob: -11.63186264038086
    8. 'win' → logprob: -11.75686264038086
    9. '(ans' → logprob: -12.25686264038086
    10. '	ans' → logprob: -12.63186264038086

Token 655: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00022403974435292184
    2. '           ' → logprob: -9.125224113464355
    3. 'l' → logprob: -9.625224113464355
    4. '#' → logprob: -10.625224113464355
    5. ' ans' → logprob: -11.250224113464355
    6. 'if' → logprob: -12.625224113464355
    7. '(ans' → logprob: -13.500224113464355
    8. '   ' → logprob: -13.625224113464355
    9. '	ans' → logprob: -13.625224113464355
    10. 'win' → logprob: -14.250224113464355

Token 656: ' ann' (ID: 3041)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20414434373378754
    2. '-=' → logprob: -2.204144239425659
    3. ' ans' → logprob: -3.079144239425659
    4. ' -=' → logprob: -4.704144477844238
    5. '           ' → logprob: -4.704144477844238
    6. '#' → logprob: -4.954144477844238
    7. '	ans' → logprob: -7.204144477844238
    8. '=' → logprob: -7.329144477844238
    9. '_ans' → logprob: -7.579144477844238
    10. '(ans' → logprob: -7.954144477844238

Token 657: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00031270162435248494
    2. 'ote' → logprob: -8.875312805175781
    3. 'e' → logprob: -10.250312805175781
    4. 'ul' → logprob: -10.250312805175781
    5. '```' → logprob: -10.625312805175781
    6. 'ules' → logprob: -11.250312805175781
    7. 'es' → logprob: -11.250312805175781
    8. '#' → logprob: -11.375312805175781
    9. 'once' → logprob: -11.875312805175781
    10. 't' → logprob: -12.500312805175781

Token 658: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.27835381031036377
    2. ' ans' → logprob: -1.6533538103103638
    3. '           ' → logprob: -3.403353691101074
    4. '#' → logprob: -5.528353691101074
    5. 'the' → logprob: -5.528353691101074
    6. '               ' → logprob: -5.778353691101074
    7. '(ans' → logprob: -6.778353691101074
    8. 'l' → logprob: -7.278353691101074
    9. '	ans' → logprob: -7.403353691101074
    10. ' the' → logprob: -7.403353691101074

Token 659: ' score' (ID: 8429)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.24953149259090424
    2. 'score' → logprob: -1.7495315074920654
    3. ' ans' → logprob: -3.2495315074920654
    4. ' score' → logprob: -5.374531269073486
    5. '#' → logprob: -6.249531269073486
    6. '           ' → logprob: -7.749531269073486
    7. 'aj' → logprob: -8.499531745910645
    8. 'point' → logprob: -8.874531745910645
    9. 'l' → logprob: -8.999531745910645
    10. 'gain' → logprob: -9.124531745910645

Token 660: ' de' (ID: 334)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.44329845905303955
    2. '           ' → logprob: -1.3182984590530396
    3. '-=' → logprob: -2.44329833984375
    4. '               ' → logprob: -6.69329833984375
    5. '-' → logprob: -7.69329833984375
    6. '   ' → logprob: -7.81829833984375
    7. '=' → logprob: -8.19329833984375
    8. '            ' → logprob: -8.44329833984375
    9. ' ans' → logprob: -8.56829833984375
    10. '       ' → logprob: -8.69329833984375

Token 661: ' ce' (ID: 2357)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1351270079612732
    2. 'l' → logprob: -2.885127067565918
    3. ' ans' → logprob: -4.010127067565918
    4. 'win' → logprob: -4.010127067565918
    5. '1' → logprob: -4.510127067565918
    6. 'S' → logprob: -4.760127067565918
    7. 'P' → logprob: -5.010127067565918
    8. 'R' → logprob: -6.260127067565918
    9. ' l' → logprob: -7.010127067565918
    10. '   ' → logprob: -7.135127067565918

Token 662: ' coup' (ID: 25465)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.593105673789978
    2. 'j' → logprob: -1.968105673789978
    3. '1' → logprob: -2.0931057929992676
    4. '           ' → logprob: -2.9681057929992676
    5. 'for' → logprob: -3.4681057929992676
    6. 'ans' → logprob: -3.4681057929992676
    7. 'i' → logprob: -4.218105792999268
    8. 'win' → logprob: -4.218105792999268
    9. '#' → logprob: -4.968105792999268
    10. '   ' → logprob: -5.093105792999268

Token 663: ' car' (ID: 1669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2883751392364502
    2. ' -=' → logprob: -1.4133751392364502
    3. '-=' → logprob: -5.038374900817871
    4. '=' → logprob: -8.788374900817871
    5. '               ' → logprob: -8.788374900817871
    6. '#' → logprob: -9.163374900817871
    7. '-' → logprob: -10.038374900817871
    8. ',' → logprob: -10.038374900817871
    9. ' =' → logprob: -10.288374900817871
    10. '       ' → logprob: -10.663374900817871

Token 664: ' on' (ID: 402)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.035805106163025
    2. 'ans' → logprob: -1.035805106163025
    3. ' ans' → logprob: -2.2858052253723145
    4. 'win' → logprob: -2.9108052253723145
    5. ' l' → logprob: -3.1608052253723145
    6. ' win' → logprob: -4.0358052253723145
    7. 'j' → logprob: -4.1608052253723145
    8. '           ' → logprob: -4.2858052253723145
    9. 'the' → logprob: -4.5358052253723145
    10. ' the' → logprob: -5.0358052253723145

Token 665: ' ne' (ID: 453)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2724968194961548
    2. 'n' → logprob: -2.7724967002868652
    3. '#' → logprob: -2.8974967002868652
    4. ' ans' → logprob: -3.2724967002868652
    5. '```' → logprob: -3.7724967002868652
    6. 'ne' → logprob: -4.647496700286865
    7. '           ' → logprob: -4.772496700286865
    8. ' n' → logprob: -5.022496700286865
    9. 'do' → logprob: -5.022496700286865
    10. 'per' → logprob: -5.897496700286865

Token 666: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.7898255586624146
    2. 'pas' → logprob: -1.4148255586624146
    3. ' peux' → logprob: -1.5398255586624146
    4. '           ' → logprob: -3.289825439453125
    5. '#' → logprob: -4.289825439453125
    6. 'p' → logprob: -4.414825439453125
    7. ' pouvons' → logprob: -5.539825439453125
    8. ' pas' → logprob: -5.914825439453125
    9. ' peut' → logprob: -6.164825439453125
    10. 'veux' → logprob: -6.414825439453125

Token 667: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.11839783191680908
    2. ' pas' → logprob: -2.9933977127075195
    3. '           ' → logprob: -3.7433977127075195
    4. ' ans' → logprob: -3.8683977127075195
    5. 'ans' → logprob: -4.3683977127075195
    6. '       ' → logprob: -6.8683977127075195
    7. '   ' → logprob: -7.2433977127075195
    8. '#' → logprob: -7.3683977127075195
    9. '(ans' → logprob: -8.24339771270752
    10. '```' → logprob: -8.24339771270752

Token 668: ' jouer' (ID: 48012)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5531209707260132
    2. ' gagner' → logprob: -1.9281209707260132
    3. 'aj' → logprob: -2.4281210899353027
    4. 'mar' → logprob: -2.5531210899353027
    5. ' mar' → logprob: -3.3031210899353027
    6. 'score' → logprob: -4.178121089935303
    7. ' compter' → logprob: -4.303121089935303
    8. ' jouer' → logprob: -5.553121089935303
    9. ' ajouter' → logprob: -5.553121089935303
    10. '   ' → logprob: -5.678121089935303

Token 669: ' deux' (ID: 10301)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.628894567489624
    2. ' ce' → logprob: -2.253894567489624
    3. 'the' → logprob: -2.753894567489624
    4. 'ce' → logprob: -3.003894567489624
    5. 'ans' → logprob: -3.003894567489624
    6. 'la' → logprob: -3.503894567489624
    7. '           ' → logprob: -3.503894567489624
    8. ' le' → logprob: -3.628894567489624
    9. ' the' → logprob: -3.753894567489624
    10. ' ans' → logprob: -3.878894567489624

Token 670: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.5051338076591492
    2. 'fois' → logprob: -1.005133867263794
    3. ' coups' → logprob: -3.880133867263794
    4. 'c' → logprob: -6.130133628845215
    5. 'tokens' → logprob: -6.505133628845215
    6. 'points' → logprob: -6.880133628845215
    7. '#' → logprob: -7.005133628845215
    8. '```' → logprob: -7.380133628845215
    9. ' times' → logprob: -7.505133628845215
    10. 'times' → logprob: -7.505133628845215

Token 671: ' le' (ID: 505)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.37817278504371643
    2. 'la' → logprob: -2.2531728744506836
    3. ' de' → logprob: -2.6281728744506836
    4. 'le' → logprob: -3.3781728744506836
    5. ' la' → logprob: -3.5031728744506836
    6. '           ' → logprob: -3.7531728744506836
    7. 'ident' → logprob: -3.8781728744506836
    8. ' cons' → logprob: -4.628172874450684
    9. 'cons' → logprob: -5.378172874450684
    10. '```' → logprob: -5.753172874450684

Token 672: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04331875964999199
    2. ' même' → logprob: -3.168318748474121
    3. '```' → logprob: -8.793318748474121
    4. 'same' → logprob: -9.793318748474121
    5. 'Même' → logprob: -10.168318748474121
    6. 'even' → logprob: -10.543318748474121
    7. ' m' → logprob: -11.168318748474121
    8. ' ' → logprob: -12.293318748474121
    9. ' ' → logprob: -12.293318748474121
    10. '<m' → logprob: -12.668318748474121

Token 673: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6447495818138123
    2. ' coup' → logprob: -0.8947495818138123
    3. 'win' → logprob: -3.519749641418457
    4. '```' → logprob: -4.394749641418457
    5. 'token' → logprob: -4.894749641418457
    6. 'cou' → logprob: -5.269749641418457
    7. 'type' → logprob: -5.519749641418457
    8. ' win' → logprob: -6.019749641418457
    9. ' type' → logprob: -7.144749641418457
    10. 'jet' → logprob: -7.394749641418457

Token 674: ' cons' (ID: 1473)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02562311291694641
    2. '-' → logprob: -4.775623321533203
    3. '               ' → logprob: -4.775623321533203
    4. ' -=' → logprob: -5.525623321533203
    5. '#' → logprob: -7.025623321533203
    6. ',' → logprob: -7.525623321533203
    7. '-=' → logprob: -7.525623321533203
    8. '=' → logprob: -7.525623321533203
    9. ' ans' → logprob: -8.025623321533203
    10. '                   ' → logprob: -8.400623321533203

Token 675: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0008222569595091045
    2. 'ecut' → logprob: -7.125822067260742
    3. 'é' → logprob: -11.750822067260742
    4. 'cut' → logprob: -12.625822067260742
    5. 'éc' → logprob: -13.125822067260742
    6. '#' → logprob: -13.625822067260742
    7. 'secut' → logprob: -13.875822067260742
    8. '```' → logprob: -14.125822067260742
    9. '{' → logprob: -14.750822067260742
    10. '&eacute' → logprob: -14.750822067260742

Token 676: 'ivement' (ID: 37978)
  Prédit: 'écut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0029630844946950674
    2. 'ecut' → logprob: -6.627963066101074
    3. 'éc' → logprob: -7.377963066101074
    4. 'é' → logprob: -7.627963066101074
    5. 'ivement' → logprob: -8.877963066101074
    6. 'ément' → logprob: -9.502963066101074
    7. 'è' → logprob: -9.877963066101074
    8. '       ' → logprob: -9.877963066101074
    9. 'q' → logprob: -10.127963066101074
    10. '   ' → logprob: -10.752963066101074

Token 677: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029190046712756157
    2. ' -=' → logprob: -4.2791900634765625
    3. '-=' → logprob: -5.1541900634765625
    4. '-' → logprob: -5.2791900634765625
    5. '               ' → logprob: -6.4041900634765625
    6. '   ' → logprob: -7.5291900634765625
    7. 'ans' → logprob: -7.5291900634765625
    8. '       ' → logprob: -8.029190063476562
    9. ' ans' → logprob: -8.529190063476562
    10. '=' → logprob: -9.029190063476562

Token 678: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3089030086994171
    2. 'win' → logprob: -1.8089029788970947
    3. 'le' → logprob: -2.8089029788970947
    4. 'l' → logprob: -4.558903217315674
    5. 'une' → logprob: -4.683903217315674
    6. ' la' → logprob: -5.308903217315674
    7. 'k' → logprob: -5.558903217315674
    8. 'les' → logprob: -5.933903217315674
    9. 'c' → logprob: -6.183903217315674
    10. '#' → logprob: -6.433903217315674

Token 679: ' même' (ID: 9679)
  Prédit: 'jeu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jeu' → logprob: -0.2430969774723053
    2. 'm' → logprob: -2.3680970668792725
    3. 'k' → logprob: -3.1180970668792725
    4. 'game' → logprob: -3.3680970668792725
    5. 'score' → logprob: -4.243096828460693
    6. 'code' → logprob: -5.368096828460693
    7. 'tour' → logprob: -5.368096828460693
    8. ' même' → logprob: -5.618096828460693
    9. ' jeu' → logprob: -6.118096828460693
    10. 'original' → logprob: -6.368096828460693

Token 680: ' série' (ID: 22079)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.2911069095134735
    2. 'k' → logprob: -2.416106939315796
    3. 'range' → logprob: -3.416106939315796
    4. ' position' → logprob: -3.916106939315796
    5. 'group' → logprob: -4.541106700897217
    6. 'sé' → logprob: -4.666106700897217
    7. 'sub' → logprob: -4.916106700897217
    8. 'round' → logprob: -5.041106700897217
    9. 's' → logprob: -5.041106700897217
    10. '```' → logprob: -5.291106700897217

Token 681: ' modulo' (ID: 112372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.060325805097818375
    2. 'ans' → logprob: -3.060325860977173
    3. ' ans' → logprob: -5.310325622558594
    4. ' -=' → logprob: -6.185325622558594
    5. '               ' → logprob: -6.685325622558594
    6. '       ' → logprob: -7.060325622558594
    7. '   ' → logprob: -7.685325622558594
    8. '(ans' → logprob: -7.810325622558594
    9. '-' → logprob: -7.935325622558594
    10. '-=' → logprob: -8.560325622558594

Token 682: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05494852364063263
    2. ' k' → logprob: -2.929948568344116
    3. '```' → logprob: -9.804948806762695
    4. '`' → logprob: -12.804948806762695
    5. '(k' → logprob: -13.054948806762695
    6. ',' → logprob: -14.179948806762695
    7. 'n' → logprob: -14.429948806762695
    8. ' (' → logprob: -14.429948806762695
    9. '*k' → logprob: -14.554948806762695
    10. '``' → logprob: -14.679948806762695

Token 683: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04698268696665764
    2. 'ans' → logprob: -3.921982765197754
    3. ' -=' → logprob: -4.296982765197754
    4. ' ans' → logprob: -5.421982765197754
    5. '-=' → logprob: -5.796982765197754
    6. '=' → logprob: -6.796982765197754
    7. '```' → logprob: -7.421982765197754
    8. ':' → logprob: -7.546982765197754
    9. '#' → logprob: -7.671982765197754
    10. ' =' → logprob: -7.796982765197754

Token 684: '           ' (ID: 352)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011104768142104149
    2. '           ' → logprob: -4.636104583740234
    3. ' ans' → logprob: -6.636104583740234
    4. '	ans' → logprob: -11.261104583740234
    5. '   ' → logprob: -11.636104583740234
    6. '```' → logprob: -12.386104583740234
    7. '       ' → logprob: -13.011104583740234
    8. '(ans' → logprob: -13.261104583740234
    9. 'if' → logprob: -13.511104583740234
    10. '#' → logprob: -14.011104583740234

Token 685: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.925185440806672e-05
    2. '           ' → logprob: -9.625099182128906
    3. ' ans' → logprob: -10.875099182128906
    4. 'if' (adapté à ' if') → logprob: -11.375099182128906
    5. 'score' → logprob: -14.375099182128906
    6. '#' → logprob: -14.500099182128906
    7. '	ans' → logprob: -14.500099182128906
    8. '(ans' → logprob: -15.125099182128906
    9. 'ann' → logprob: -15.500099182128906
    10. '   ' → logprob: -15.875099182128906

Token 686: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.36202263832092285
    2. 't' → logprob: -1.6120226383209229
    3. 'i' → logprob: -3.987022638320923
    4. 'j' → logprob: -3.987022638320923
    5. ' t' → logprob: -3.987022638320923
    6. ' l' → logprob: -3.987022638320923
    7. 'win' → logprob: -4.487022399902344
    8. 'ans' → logprob: -5.612022399902344
    9. ' win' → logprob: -5.987022399902344
    10. ' j' → logprob: -5.987022399902344

Token 687: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.27099974633893e-05
    2. '[' → logprob: -12.000012397766113
    3. ' [' → logprob: -12.625012397766113
    4. '[i' → logprob: -14.250012397766113
    5. 'j' → logprob: -14.375012397766113
    6. '   ' → logprob: -14.625012397766113
    7. '           ' → logprob: -15.250012397766113
    8. '       ' → logprob: -15.375012397766113
    9. '```' → logprob: -15.375012397766113
    10. '[l' → logprob: -15.500012397766113

Token 688: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12245078384876251
    2. ']==' → logprob: -2.747450828552246
    3. ']' → logprob: -3.497450828552246
    4. ' ==' → logprob: -4.122450828552246
    5. '[j' → logprob: -5.747450828552246
    6. '[' → logprob: -7.622450828552246
    7. '=' → logprob: -8.247450828552246
    8. '==
' → logprob: -9.122450828552246
    9. ')==' → logprob: -9.372450828552246
    10. ']=='' → logprob: -9.747450828552246

Token 689: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.010326008312404156
    2. ' ==' → logprob: -4.635325908660889
    3. '==
' → logprob: -8.385326385498047
    4. '=='' → logprob: -9.010326385498047
    5. '=' → logprob: -9.510326385498047
    6. ']==' → logprob: -10.260326385498047
    7. '!=' → logprob: -10.760326385498047
    8. '===' → logprob: -10.885326385498047
    9. 'in' → logprob: -11.260326385498047
    10. ''' → logprob: -11.885326385498047

Token 690: ' '' (ID: 461)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.02380741946399212
    2. ''r' → logprob: -3.7738075256347656
    3. 'p' → logprob: -8.273807525634766
    4. ''s' → logprob: -8.273807525634766
    5. 'r' → logprob: -10.648807525634766
    6. ''' → logprob: -11.148807525634766
    7. ' p' → logprob: -11.898807525634766
    8. ' '' → logprob: -12.523807525634766
    9. '"' → logprob: -14.023807525634766
    10. ' ' → logprob: -14.398807525634766

Token 691: 'p' (ID: 79)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.0807475671172142
    2. ''r' → logprob: -2.580747604370117
    3. 'p' → logprob: -6.955747604370117
    4. ''' → logprob: -7.330747604370117
    5. ''s' → logprob: -8.705747604370117
    6. 'r' → logprob: -9.455747604370117
    7. '"' → logprob: -13.580747604370117
    8. ''re' → logprob: -14.205747604370117
    9. '`' → logprob: -14.705747604370117
    10. ''z' → logprob: -14.830747604370117

Token 692: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.21743398904800415
    2. '':' → logprob: -1.7174339294433594
    3. ':
' → logprob: -4.967433929443359
    4. ':' → logprob: -5.092433929443359
    5. ''' → logprob: -6.717433929443359
    6. '):
' → logprob: -6.967433929443359
    7. '':
' → logprob: -8.46743392944336
    8. ')' → logprob: -8.96743392944336
    9. '):' → logprob: -9.34243392944336
    10. ''):
' → logprob: -9.46743392944336

Token 693: '               ' (ID: 506)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2644113302230835
    2. ' ans' → logprob: -1.8894113302230835
    3. '           ' → logprob: -3.014411449432373
    4. '               ' → logprob: -3.514411449432373
    5. '=' → logprob: -6.889411449432373
    6. '	ans' → logprob: -7.264411449432373
    7. '(ans' → logprob: -9.014410972595215
    8. 'P' → logprob: -9.764410972595215
    9. 'Ans' → logprob: -9.764410972595215
    10. '```' → logprob: -9.764410972595215

Token 694: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.001536166062578559
    2. ' ans' → logprob: -6.5015363693237305
    3. '	ans' → logprob: -11.25153636932373
    4. '           ' → logprob: -11.50153636932373
    5. '               ' → logprob: -11.75153636932373
    6. '                   ' → logprob: -13.50153636932373
    7. '(ans' → logprob: -14.25153636932373
    8. '   ' → logprob: -15.12653636932373
    9. 'Ans' → logprob: -15.50153636932373
    10. '_ans' → logprob: -16.251535415649414

Token 695: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.01828807033598423
    2. ' -=' → logprob: -4.0182881355285645
    3. '-' → logprob: -8.893287658691406
    4. '=' → logprob: -15.018287658691406
    5. '+=' → logprob: -15.143287658691406
    6. ' -' → logprob: -15.518287658691406
    7. '   ' → logprob: -17.518287658691406
    8. ' ' → logprob: -19.143287658691406
    9. '```' → logprob: -19.268287658691406
    10. '>' → logprob: -20.018287658691406

Token 696: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.306760805164231e-05
    2. ' P' → logprob: -11.25001335144043
    3. '	P' → logprob: -19.50001335144043
    4. '   ' → logprob: -20.75001335144043
    5. '>P' → logprob: -21.25001335144043
    6. '_P' → logprob: -22.12501335144043
    7. 'p' → logprob: -22.12501335144043
    8. '=P' → logprob: -22.12501335144043
    9. '.P' → logprob: -22.25001335144043
    10. '           ' → logprob: -22.25001335144043

Token 697: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 698: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12829530239105225
    2. '<|end|>' → logprob: -2.753295421600342
    3. 'elif' → logprob: -3.128295421600342
    4. ')' → logprob: -5.753295421600342
    5. ' elif' → logprob: -6.003295421600342
    6. '       ' → logprob: -6.003295421600342
    7. '               ' → logprob: -6.378295421600342
    8. '
' → logprob: -7.253295421600342
    9. '```' → logprob: -7.503295421600342
    10. '<|end|>' → logprob: -7.753295421600342

Token 699: ' On' (ID: 2160)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21170374751091003
    2. '               ' → logprob: -1.9617037773132324
    3. 'elif' → logprob: -3.9617037773132324
    4. ' elif' → logprob: -4.836703777313232
    5. ')' → logprob: -4.961703777313232
    6. '<|end|>' → logprob: -5.461703777313232
    7. '
' → logprob: -5.586703777313232
    8. '```' → logprob: -5.836703777313232
    9. 'P' → logprob: -6.086703777313232
    10. '       ' → logprob: -7.586703777313232

Token 700: ' enl' (ID: 116494)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.7298620939254761
    2. 'continue' → logprob: -1.604862093925476
    3. '=' → logprob: -1.854862093925476
    4. '+=' → logprob: -2.7298622131347656
    5. ' -=' → logprob: -3.3548622131347656
    6. ' continue' → logprob: -4.104862213134766
    7. '           ' → logprob: -4.604862213134766
    8. ']' → logprob: -5.104862213134766
    9. '#' → logprob: -5.354862213134766
    10. 'contin' → logprob: -5.604862213134766

Token 701: 'ève' (ID: 41151)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.8731337785720825
    2. 'ans' → logprob: -1.8731337785720825
    3. 'us' → logprob: -1.9981337785720825
    4. '```' → logprob: -1.9981337785720825
    5. '+=' → logprob: -2.748133659362793
    6. ' +=' → logprob: -2.873133659362793
    7. 'es' → logprob: -2.998133659362793
    8. '#' → logprob: -3.248133659362793
    9. 's' → logprob: -3.248133659362793
    10. 'a' → logprob: -3.373133659362793

Token 702: ' le' (ID: 505)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.014171031303703785
    2. ' P' → logprob: -4.264171123504639
    3. '               ' → logprob: -12.63917064666748
    4. 'S' → logprob: -13.51417064666748
    5. '                   ' → logprob: -14.13917064666748
    6. '=P' → logprob: -14.88917064666748
    7. '(P' → logprob: -15.01417064666748
    8. '```' → logprob: -15.38917064666748
    9. '1' → logprob: -15.51417064666748
    10. '                ' → logprob: -15.63917064666748

Token 703: ' score' (ID: 8429)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.165027217415627e-05
    2. ' P' → logprob: -10.750021934509277
    3. 'score' → logprob: -15.875021934509277
    4. '               ' → logprob: -17.00002098083496
    5. 'S' → logprob: -17.00002098083496
    6. 'p' → logprob: -17.87502098083496
    7. '                   ' → logprob: -18.50002098083496
    8. ' ' → logprob: -18.62502098083496
    9. '=P' → logprob: -18.75002098083496
    10. '+' → logprob: -18.87502098083496

Token 704: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 705: ' papier' (ID: 46539)
  Prédit: 'papier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'papier' → logprob: -0.3556431233882904
    2. 'P' → logprob: -1.2306431531906128
    3. 'p' → logprob: -5.230643272399902
    4. 'pap' → logprob: -6.730643272399902
    5. ' papier' → logprob: -8.480643272399902
    6. ' P' → logprob: -9.480643272399902
    7. 'c' → logprob: -9.605643272399902
    8. 'Pap' → logprob: -9.980643272399902
    9. 'paper' → logprob: -10.105643272399902
    10. 'score' → logprob: -10.480643272399902

Token 706: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.55998694896698
    2. '<|end|>' → logprob: -0.93498694896698
    3. 'elif' → logprob: -3.8099870681762695
    4. '<|end|>' → logprob: -4.8099870681762695
    5. ' elif' → logprob: -6.1849870681762695
    6. ')' → logprob: -6.6849870681762695
    7. '               ' → logprob: -7.0599870681762695
    8. '            
' → logprob: -7.4349870681762695
    9. '```' → logprob: -7.9349870681762695
    10. '
' → logprob: -8.30998706817627

Token 707: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 708: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13637135922908783
    2. 'elif' (adapté à ' elif') → logprob: -2.136371374130249
    3. ' elif' → logprob: -4.76137113571167
    4. ' ' → logprob: -8.136371612548828
    5. '               ' → logprob: -8.386371612548828
    6. '```' → logprob: -9.011371612548828
    7. '		' → logprob: -10.011371612548828
    8. '       ' → logprob: -10.511371612548828
    9. '.' → logprob: -10.761371612548828
    10. '	elif' → logprob: -10.886371612548828

Token 709: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.20144978165626526
    2. 'l' → logprob: -1.7014497518539429
    3. '           ' → logprob: -10.826449394226074
    4. ' ' → logprob: -12.951449394226074
    5. ' win' → logprob: -12.951449394226074
    6. 'win' → logprob: -12.951449394226074
    7. '	l' → logprob: -13.076449394226074
    8. '            ' → logprob: -13.451449394226074
    9. ' ' → logprob: -13.888949394226074
    10. '               ' → logprob: -14.326449394226074

Token 710: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03338494151830673
    2. ' ==' → logprob: -4.033384799957275
    3. '==' → logprob: -5.158384799957275
    4. '[l' → logprob: -5.283384799957275
    5. 'l' → logprob: -6.033384799957275
    6. ' l' → logprob: -6.783384799957275
    7. '[' → logprob: -7.408384799957275
    8. ' [' → logprob: -8.908385276794434
    9. ' ' → logprob: -12.033385276794434
    10. ' j' → logprob: -12.533385276794434

Token 711: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12695856392383575
    2. '==' → logprob: -2.1269586086273193
    3. '=='' → logprob: -11.126958847045898
    4. ']==' → logprob: -12.251958847045898
    5. ' =='' → logprob: -12.501958847045898
    6. '           ' → logprob: -13.251958847045898
    7. '=' → logprob: -13.626958847045898
    8. ')==' → logprob: -14.126958847045898
    9. ' ' → logprob: -14.251958847045898
    10. '==
' → logprob: -14.751958847045898

Token 712: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47413453459739685
    2. '==' → logprob: -0.9741345643997192
    3. '=='' → logprob: -9.97413444519043
    4. ' =='' → logprob: -12.34913444519043
    5. '=' → logprob: -13.22413444519043
    6. ''' → logprob: -13.59913444519043
    7. ' ' → logprob: -13.97413444519043
    8. '===' → logprob: -14.22413444519043
    9. '==
' → logprob: -14.59913444519043
    10. ' ' → logprob: -15.22413444519043

Token 713: ' '' (ID: 461)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.07993516325950623
    2. ''s' → logprob: -2.579935073852539
    3. ' '' → logprob: -7.454935073852539
    4. ''' → logprob: -7.829935073852539
    5. 'r' → logprob: -10.329935073852539
    6. ''S' → logprob: -11.579935073852539
    7. ' ' → logprob: -12.329935073852539
    8. ' r' → logprob: -12.579935073852539
    9. '`s' → logprob: -12.579935073852539
    10. '   ' → logprob: -12.704935073852539

Token 714: 'r' (ID: 81)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.11663834005594254
    2. ''s' → logprob: -2.241638422012329
    3. 'r' → logprob: -5.61663818359375
    4. 's' → logprob: -9.36663818359375
    5. ''' → logprob: -9.61663818359375
    6. '`s' → logprob: -12.24163818359375
    7. ' '' → logprob: -12.86663818359375
    8. ''S' → logprob: -13.24163818359375
    9. ''p' → logprob: -13.24163818359375
    10. ''q' → logprob: -13.24163818359375

Token 715: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.563239336013794
    2. ':' → logprob: -1.938239336013794
    3. ' -=' → logprob: -1.938239336013794
    4. '               ' → logprob: -2.188239336013794
    5. '-' → logprob: -4.063239097595215
    6. ' -' → logprob: -5.188239097595215
    7. '           ' → logprob: -5.938239097595215
    8. ' :
' → logprob: -6.063239097595215
    9. '-=' → logprob: -7.188239097595215
    10. '):
' → logprob: -8.313239097595215

Token 716: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03573799878358841
    2. ' ans' → logprob: -3.785737991333008
    3. 'ans' → logprob: -4.410737991333008
    4. '           ' → logprob: -8.535737991333008
    5. '(ans' → logprob: -10.785737991333008
    6. '              ' → logprob: -11.410737991333008
    7. '	ans' → logprob: -11.410737991333008
    8. '   ' → logprob: -11.910737991333008
    9. '                   ' → logprob: -12.035737991333008
    10. '             ' → logprob: -12.160737991333008

Token 717: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.06215320900082588
    2. ' ans' → logprob: -2.8121531009674072
    3. '           ' → logprob: -8.812152862548828
    4. '               ' → logprob: -10.937152862548828
    5. '	ans' → logprob: -11.562152862548828
    6. '(ans' → logprob: -12.187152862548828
    7. 'R' → logprob: -13.562152862548828
    8. '                   ' → logprob: -14.437152862548828
    9. '   ' → logprob: -14.562152862548828
    10. '```' → logprob: -14.937152862548828

Token 718: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3868860900402069
    2. ' -=' → logprob: -1.1368861198425293
    3. '-' → logprob: -11.136885643005371
    4. '   ' → logprob: -15.761885643005371
    5. ' ' → logprob: -16.261886596679688
    6. ' ' → logprob: -16.511886596679688
    7. '=' → logprob: -16.761886596679688
    8. '    ' → logprob: -17.636886596679688
    9. ' -' → logprob: -17.886886596679688
    10. '```' → logprob: -18.011886596679688

Token 719: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -3.130576806142926e-05
    2. ' R' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.000030517578125
    4. ' ' → logprob: -17.125030517578125
    5. '	R' → logprob: -17.500030517578125
    6. '  ' → logprob: -18.625030517578125
    7. '
' → logprob: -20.750030517578125
    8. ' ' → logprob: -21.000030517578125
    9. '    ' → logprob: -21.250030517578125
    10. '`' → logprob: -21.500030517578125

Token 720: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025568265467882156
    2. '<|end|>' → logprob: -3.7755682468414307
    3. '<|end|>' → logprob: -7.40056848526001
    4. ' ' → logprob: -7.65056848526001
    5. '#' → logprob: -7.90056848526001
    6. '       ' → logprob: -8.275568008422852
    7. ' else' → logprob: -8.900568008422852
    8. ' elif' → logprob: -9.150568008422852
    9. ')' → logprob: -9.525568008422852
    10. '               ' → logprob: -10.150568008422852

Token 721: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1376003473997116
    2. '#' → logprob: -2.3876004219055176
    3. ' #' → logprob: -3.7626004219055176
    4. ' ' → logprob: -5.012600421905518
    5. '       ' → logprob: -6.012600421905518
    6. '<|end|>' → logprob: -6.262600421905518
    7. 'else' → logprob: -7.137600421905518
    8. ' else' → logprob: -7.387600421905518
    9. '          ' → logprob: -8.26259994506836
    10. '         ' → logprob: -8.51259994506836

Token 722: ' On' (ID: 2160)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.07544717937707901
    2. '           ' → logprob: -2.8254470825195312
    3. '               ' → logprob: -5.450447082519531
    4. ' R' → logprob: -5.450447082519531
    5. 'r' → logprob: -6.075447082519531
    6. 'ans' → logprob: -7.075447082519531
    7. '       ' → logprob: -7.200447082519531
    8. '   ' → logprob: -8.325447082519531
    9. ' ans' → logprob: -8.325447082519531
    10. ' ' → logprob: -9.700447082519531

Token 723: ' enl' (ID: 116494)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.9990693926811218
    2. ' -=' → logprob: -1.4990694522857666
    3. '           ' → logprob: -1.9990694522857666
    4. 'ans' → logprob: -2.6240694522857666
    5. 'S' → logprob: -2.8740694522857666
    6. ' ans' → logprob: -2.9990694522857666
    7. '               ' → logprob: -3.3740694522857666
    8. '+=' → logprob: -3.7490694522857666
    9. '            ' → logprob: -5.1240692138671875
    10. 'elif' → logprob: -5.2490692138671875

Token 724: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.024303534999489784
    2. 'èves' → logprob: -4.774303436279297
    3. '       ' → logprob: -6.149303436279297
    4. 'è' → logprob: -6.149303436279297
    5. '+' → logprob: -6.524303436279297
    6. '#' → logprob: -6.649303436279297
    7. '```' → logprob: -6.774303436279297
    8. '               ' → logprob: -7.149303436279297
    9. 'ôte' → logprob: -7.649303436279297
    10. 'lever' → logprob: -7.649303436279297

Token 725: ' le' (ID: 505)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.002674345625564456
    2. ' R' → logprob: -6.127674579620361
    3. '   ' → logprob: -8.502674102783203
    4. 'r' → logprob: -8.502674102783203
    5. ' ' → logprob: -10.502674102783203
    6. '           ' → logprob: -11.002674102783203
    7. '       ' → logprob: -11.377674102783203
    8. '    ' → logprob: -11.877674102783203
    9. '  ' → logprob: -12.377674102783203
    10. 'P' → logprob: -13.377674102783203

Token 726: ' score' (ID: 8429)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00019042797794099897
    2. 'r' → logprob: -9.250190734863281
    3. ' R' → logprob: -10.375190734863281
    4. 'score' → logprob: -10.750190734863281
    5. '   ' → logprob: -11.500190734863281
    6. 'P' → logprob: -12.250190734863281
    7. ' ' → logprob: -12.250190734863281
    8. 'C' → logprob: -12.750190734863281
    9. '       ' → logprob: -12.875190734863281
    10. 'S' → logprob: -13.250190734863281

Token 727: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18097420036792755
    2. '               ' → logprob: -2.055974245071411
    3. '       ' → logprob: -3.555974245071411
    4. 'elif' → logprob: -6.305974006652832
    5. '   ' → logprob: -6.555974006652832
    6. '#' → logprob: -6.805974006652832
    7. ')' → logprob: -7.180974006652832
    8. '```' → logprob: -7.180974006652832
    9. '         ' → logprob: -7.430974006652832
    10. ' ' → logprob: -7.680974006652832

Token 728: ' la' (ID: 557)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0003230686706956476
    2. ' R' → logprob: -8.125323295593262
    3. 'r' → logprob: -11.250323295593262
    4. ' ' → logprob: -11.625323295593262
    5. 'P' → logprob: -13.375323295593262
    6. '   ' → logprob: -13.500323295593262
    7. '  ' → logprob: -14.000323295593262
    8. '	R' → logprob: -15.125323295593262
    9. 'l' → logprob: -15.375323295593262
    10. '    ' → logprob: -15.875323295593262

Token 729: ' pierre' (ID: 70323)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09439843893051147
    2. 'p' → logprob: -2.5943984985351562
    3. 'R' → logprob: -5.094398498535156
    4. 'c' → logprob: -5.719398498535156
    5. 'pier' → logprob: -6.344398498535156
    6. 'pi' → logprob: -6.594398498535156
    7. 'rock' → logprob: -7.219398498535156
    8. 'ca' → logprob: -7.344398498535156
    9. ' pierre' → logprob: -7.844398498535156
    10. '```' → logprob: -8.469398498535156

Token 730: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017987078754231334
    2. 'else' → logprob: -7.251798629760742
    3. 'elif' → logprob: -8.126798629760742
    4. ' else' → logprob: -8.251798629760742
    5. ' elif' → logprob: -8.501798629760742
    6. '<|end|>' → logprob: -8.751798629760742
    7. '```' → logprob: -8.876798629760742
    8. '               ' → logprob: -11.751798629760742
    9. '       ' → logprob: -12.251798629760742
    10. '<|end|>' → logprob: -12.376798629760742

Token 731: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002240535570308566
    2. 'elif' → logprob: -6.5022406578063965
    3. 'else' → logprob: -7.8772406578063965
    4. ' elif' → logprob: -8.377240180969238
    5. '```' → logprob: -9.877240180969238
    6. '       ' → logprob: -10.127240180969238
    7. ' else' → logprob: -10.502240180969238
    8. '		' → logprob: -13.002240180969238
    9. '<|end|>' → logprob: -13.252240180969238
    10. '               ' → logprob: -13.252240180969238

Token 732: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06199883669614792
    2. 'else' (adapté à ' else') → logprob: -3.0619988441467285
    3. 'elif' → logprob: -4.4369988441467285
    4. ' else' → logprob: -7.3119988441467285
    5. ' elif' → logprob: -7.4369988441467285
    6. '```' → logprob: -8.43699836730957
    7. '               ' → logprob: -11.93699836730957
    8. '       ' → logprob: -12.18699836730957
    9. '``' → logprob: -13.68699836730957
    10. '		' → logprob: -13.68699836730957

Token 733: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6800804138183594
    2. ':
' → logprob: -1.1800804138183594
    3. '               ' → logprob: -1.8050804138183594
    4. '           ' → logprob: -3.9300804138183594
    5. ' :
' → logprob: -6.930080413818359
    6. '            ' → logprob: -8.18008041381836
    7. '                ' → logprob: -9.05508041381836
    8. ' :' → logprob: -9.05508041381836
    9. '                   ' → logprob: -9.43008041381836
    10. '              ' → logprob: -9.55508041381836

Token 734: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7641737461090088
    2. '               ' → logprob: -1.1391737461090088
    3. ' ans' → logprob: -1.6391737461090088
    4. 'ans' → logprob: -4.26417350769043
    5. '            ' → logprob: -6.88917350769043
    6. '```' → logprob: -6.88917350769043
    7. ' S' → logprob: -7.26417350769043
    8. '   ' → logprob: -7.38917350769043
    9. '             ' → logprob: -7.63917350769043
    10. '(ans' → logprob: -7.88917350769043

Token 735: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.002079240046441555
    2. '           ' → logprob: -6.502079010009766
    3. ' ans' → logprob: -7.502079010009766
    4. '               ' → logprob: -11.502079010009766
    5. '	ans' → logprob: -12.127079010009766
    6. 'S' → logprob: -12.377079010009766
    7. '   ' → logprob: -12.877079010009766
    8. '                   ' → logprob: -13.627079010009766
    9. '       ' → logprob: -14.377079010009766
    10. '(ans' → logprob: -15.002079010009766

Token 736: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.12708653509616852
    2. ' -=' → logprob: -2.127086639404297
    3. '-' → logprob: -8.752086639404297
    4. ' -' → logprob: -16.377086639404297
    5. '   ' → logprob: -16.627086639404297
    6. ' ' → logprob: -16.627086639404297
    7. '=' → logprob: -17.502086639404297
    8. ' ' → logprob: -17.502086639404297
    9. '  ' → logprob: -17.877086639404297
    10. '```' → logprob: -18.002086639404297

Token 737: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -9.615255839889869e-05
    2. ' S' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.50009536743164
    4. ' ' → logprob: -20.12509536743164
    5. '	S' → logprob: -20.12509536743164
    6. '  ' → logprob: -20.87509536743164
    7. '       ' → logprob: -21.00009536743164
    8. '           ' → logprob: -21.00009536743164
    9. '_S' → logprob: -21.12509536743164
    10. 's' → logprob: -21.25009536743164

Token 738: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06040099263191223
    2. ' ' → logprob: -3.56040096282959
    3. ' #' → logprob: -4.81040096282959
    4. '#' → logprob: -4.93540096282959
    5. '       ' → logprob: -5.43540096282959
    6. '          ' → logprob: -5.93540096282959
    7. '(ans' → logprob: -6.56040096282959
    8. ' ans' → logprob: -6.56040096282959
    9. '   ' → logprob: -6.81040096282959
    10. '         ' → logprob: -6.93540096282959

Token 739: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3053193986415863
    2. ' ' → logprob: -1.8053194284439087
    3. ' #' → logprob: -3.055319309234619
    4. '           ' → logprob: -3.305319309234619
    5. ')' → logprob: -5.180319309234619
    6. '       ' → logprob: -5.555319309234619
    7. '  ' → logprob: -6.305319309234619
    8. '          ' → logprob: -7.055319309234619
    9. '   ' → logprob: -7.180319309234619
    10. '         ' → logprob: -7.555319309234619

Token 740: ' On' (ID: 2160)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3043580949306488
    2. 'ans' → logprob: -1.6793581247329712
    3. ' ans' → logprob: -3.3043580055236816
    4. '           ' → logprob: -3.4293580055236816
    5. '               ' → logprob: -6.429358005523682
    6. ' S' → logprob: -6.554358005523682
    7. 's' → logprob: -6.804358005523682
    8. '   ' → logprob: -7.304358005523682
    9. ' ' → logprob: -7.429358005523682
    10. '  ' → logprob: -8.05435848236084

Token 741: ' enl' (ID: 116494)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.23026792705059052
    2. ' -=' → logprob: -1.605267882347107
    3. 'en' → logprob: -6.2302680015563965
    4. '-' → logprob: -7.3552680015563965
    5. '```' → logprob: -7.7302680015563965
    6. 'remove' → logprob: -8.105267524719238
    7. 'elif' → logprob: -8.605267524719238
    8. 'subtract' → logprob: -8.605267524719238
    9. '+=' → logprob: -8.980267524719238
    10. '  ' → logprob: -9.230267524719238

Token 742: 'ève' (ID: 41151)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.023704154416918755
    2. '-=' → logprob: -5.2737040519714355
    3. ' S' → logprob: -5.6487040519714355
    4. '(S' → logprob: -6.2737040519714355
    5. ' -=' → logprob: -6.2737040519714355
    6. '   ' → logprob: -6.2737040519714355
    7. '=' → logprob: -6.5237040519714355
    8. '#' → logprob: -6.6487040519714355
    9. '       ' → logprob: -7.1487040519714355
    10. '```' → logprob: -7.3987040519714355

Token 743: ' le' (ID: 505)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00026169343618676066
    2. ' S' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.875261306762695
    4. ' ' → logprob: -16.125261306762695
    5. '           ' → logprob: -16.750261306762695
    6. '       ' → logprob: -18.000261306762695
    7. '  ' → logprob: -18.125261306762695
    8. 's' → logprob: -19.125261306762695
    9. '    ' → logprob: -19.375261306762695
    10. '               ' → logprob: -19.500261306762695

Token 744: ' score' (ID: 8429)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10585761815309525
    2. 'score' → logprob: -2.3558576107025146
    3. 'P' → logprob: -5.480857849121094
    4. ' score' → logprob: -6.980857849121094
    5. 'C' → logprob: -8.855857849121094
    6. ' S' → logprob: -9.230857849121094
    7. '```' → logprob: -9.730857849121094
    8. 's' → logprob: -9.730857849121094
    9. 'Score' → logprob: -10.105857849121094
    10. 'R' → logprob: -10.355857849121094

Token 745: ' des' (ID: 731)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1578824520111084
    2. '               ' → logprob: -1.1578824520111084
    3. 'de' → logprob: -2.7828824520111084
    4. '<|end|>' → logprob: -2.7828824520111084
    5. 'du' → logprob: -3.2828824520111084
    6. 'des' → logprob: -3.7828824520111084
    7. '.' → logprob: -4.0328826904296875
    8. ' du' → logprob: -4.0328826904296875
    9. 'S' → logprob: -4.1578826904296875
    10. ' ' → logprob: -4.2828826904296875

Token 746: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006022418383508921
    2. ' c' → logprob: -7.8756022453308105
    3. 'sc' → logprob: -9.375601768493652
    4. 's' → logprob: -9.500601768493652
    5. 'ci' → logprob: -10.375601768493652
    6. '	c' → logprob: -11.000601768493652
    7. 'cis' → logprob: -12.750601768493652
    8. 'iseaux' → logprob: -13.000601768493652
    9. ' scissors' → logprob: -13.500601768493652
    10. ' ' → logprob: -13.625601768493652

Token 747: 'iseaux' (ID: 131289)
  Prédit: 'iseaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseaux' → logprob: -0.19408825039863586
    2. ''s' → logprob: -1.9440882205963135
    3. 's' → logprob: -3.8190882205963135
    4. 'is' → logprob: -5.944088459014893
    5. '`s' → logprob: -6.069088459014893
    6. 'issors' → logprob: -6.069088459014893
    7. 'iseau' → logprob: -6.444088459014893
    8. ''' → logprob: -6.819088459014893
    9. 'c' → logprob: -8.069087982177734
    10. 'i' → logprob: -8.069087982177734

Token 748: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002857774496078491
    2. 'return' → logprob: -6.752857685089111
    3. '#' → logprob: -7.002857685089111
    4. '```' → logprob: -7.877857685089111
    5. ' print' → logprob: -9.00285816192627
    6. '           ' → logprob: -9.25285816192627
    7. '       ' → logprob: -9.62785816192627
    8. 'for' → logprob: -10.00285816192627
    9. 'continue' → logprob: -10.87785816192627
    10. '   ' → logprob: -11.62785816192627

Token 749: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19109369814395905
    2. 'win' → logprob: -2.566093683242798
    3. 'return' → logprob: -3.066093683242798
    4. '#' → logprob: -3.816093683242798
    5. '```' → logprob: -4.441093921661377
    6. 'for' → logprob: -5.316093921661377
    7. ')' → logprob: -6.066093921661377
    8. 'continue' → logprob: -6.066093921661377
    9. '       ' → logprob: -6.441093921661377
    10. '<|end|>' → logprob: -6.566093921661377

Token 750: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03380117937922478
    2. 'l' → logprob: -3.6588010787963867
    3. ' l' → logprob: -5.033801078796387
    4. 'win' → logprob: -7.533801078796387
    5. '```' → logprob: -8.783801078796387
    6. '       ' → logprob: -9.283801078796387
    7. '#' (adapté à ' #') → logprob: -10.033801078796387
    8. ' win' → logprob: -10.033801078796387
    9. '          ' → logprob: -10.158801078796387
    10. '   ' → logprob: -11.158801078796387

Token 751: ' Enfin' (ID: 85274)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0017381247598677874
    2. '           ' → logprob: -6.37673807144165
    3. ' l' → logprob: -11.001738548278809
    4. '#' → logprob: -11.626738548278809
    5. '               ' → logprob: -12.376738548278809
    6. 'win' → logprob: -13.126738548278809
    7. '                   ' → logprob: -14.001738548278809
    8. '       ' → logprob: -14.126738548278809
    9. '   ' → logprob: -14.251738548278809
    10. '          ' → logprob: -14.251738548278809

Token 752: ',' (ID: 11)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7089214324951172
    2. '           ' → logprob: -0.7089214324951172
    3. ' l' → logprob: -4.208921432495117
    4. '          ' → logprob: -8.708921432495117
    5. '               ' → logprob: -8.833921432495117
    6. '#' → logprob: -9.083921432495117
    7. '	l' → logprob: -9.458921432495117
    8. '            ' → logprob: -10.083921432495117
    9. 'win' → logprob: -10.208921432495117
    10. '   ' → logprob: -10.333921432495117

Token 753: ' on' (ID: 402)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00357262697070837
    2. '           ' → logprob: -6.128572463989258
    3. ' l' → logprob: -6.628572463989258
    4. 'win' → logprob: -10.378572463989258
    5. 'ans' → logprob: -11.378572463989258
    6. '               ' → logprob: -11.503572463989258
    7. '#' → logprob: -12.503572463989258
    8. '                   ' → logprob: -13.378572463989258
    9. ' ans' → logprob: -13.628572463989258
    10. '   ' → logprob: -13.753572463989258

Token 754: ' rem' (ID: 1662)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12424398213624954
    2. 'win' → logprob: -2.874243974685669
    3. '           ' → logprob: -2.999243974685669
    4. ' l' → logprob: -5.124244213104248
    5. ' win' → logprob: -5.749244213104248
    6. '#' → logprob: -7.624244213104248
    7. '               ' → logprob: -8.49924373626709
    8. 'break' → logprob: -8.99924373626709
    9. '            ' → logprob: -9.12424373626709
    10. 'ans' → logprob: -9.49924373626709

Token 755: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.4366370141506195
    2. 'placer' → logprob: -1.186637043952942
    3. 'win' → logprob: -3.4366369247436523
    4. 'pl' → logprob: -5.436636924743652
    5. 'ove' → logprob: -5.811636924743652
    6. '       ' → logprob: -6.061636924743652
    7. 'et' → logprob: -6.186636924743652
    8. '           ' → logprob: -7.311636924743652
    9. 'pla' → logprob: -7.311636924743652
    10. 'e' → logprob: -7.561636924743652

Token 756: ' ce' (ID: 2357)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01747378520667553
    2. ' l' → logprob: -4.1424736976623535
    3. '           ' → logprob: -6.6424736976623535
    4. '               ' → logprob: -9.767474174499512
    5. 'win' → logprob: -10.642474174499512
    6. '                   ' → logprob: -11.517474174499512
    7. 'la' → logprob: -11.642474174499512
    8. '(l' → logprob: -11.767474174499512
    9. ' win' → logprob: -11.892474174499512
    10. '            ' → logprob: -12.142474174499512

Token 757: ' coup' (ID: 25465)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03669454902410507
    2. 'win' → logprob: -4.036694526672363
    3. 'j' → logprob: -4.161694526672363
    4. 'c' → logprob: -7.661694526672363
    5. ' win' → logprob: -7.661694526672363
    6. '```' → logprob: -7.661694526672363
    7. '[j' → logprob: -7.786694526672363
    8. 'token' → logprob: -8.661694526672363
    9. ' l' → logprob: -9.036694526672363
    10. 'élé' → logprob: -9.411694526672363

Token 758: ' par' (ID: 686)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5274916887283325
    2. ' l' → logprob: -1.4024916887283325
    3. 'l' → logprob: -2.402491569519043
    4. '```' → logprob: -3.277491569519043
    5. '[j' → logprob: -4.152491569519043
    6. '[l' → logprob: -5.152491569519043
    7. ' =' → logprob: -5.652491569519043
    8. '=' → logprob: -6.027491569519043
    9. ' by' → logprob: -6.152491569519043
    10. '               ' → logprob: -6.777491569519043

Token 759: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.543075680732727
    2. ''?' → logprob: -1.793075680732727
    3. ''n' → logprob: -2.2930755615234375
    4. ''*' → logprob: -3.6680755615234375
    5. ''x' → logprob: -3.6680755615234375
    6. ''.' → logprob: -4.0430755615234375
    7. ''-' → logprob: -4.4180755615234375
    8. ''a' → logprob: -4.6680755615234375
    9. ''o' → logprob: -4.9180755615234375
    10. '?' → logprob: -5.0430755615234375

Token 760: 'z' (ID: 89)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.3825324475765228
    2. ''' → logprob: -1.2575324773788452
    3. ''?' → logprob: -4.382532596588135
    4. ''n' → logprob: -5.632532596588135
    5. 'x' → logprob: -5.757532596588135
    6. ''z' → logprob: -5.882532596588135
    7. ''.' → logprob: -6.007532596588135
    8. '?' → logprob: -6.257532596588135
    9. '''' → logprob: -6.507532596588135
    10. ''o' → logprob: -6.507532596588135

Token 761: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09096311777830124
    2. '           ' → logprob: -2.590963125228882
    3. ''
' → logprob: -5.840962886810303
    4. ''[' → logprob: -5.965962886810303
    5. '[j' → logprob: -6.965962886810303
    6. ' =' → logprob: -7.090962886810303
    7. '']' → logprob: -7.340962886810303
    8. '          ' → logprob: -7.590962886810303
    9. 'z' → logprob: -7.590962886810303
    10. 'l' → logprob: -7.715962886810303

Token 762: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0057229287922382355
    2. 'l' → logprob: -5.755722999572754
    3. ' l' → logprob: -6.255722999572754
    4. '          ' → logprob: -8.380722999572754
    5. ' =' → logprob: -9.380722999572754
    6. '               ' → logprob: -9.630722999572754
    7. '                   ' → logprob: -9.880722999572754
    8. '       ' → logprob: -10.255722999572754
    9. '            ' → logprob: -10.755722999572754
    10. ' in' → logprob: -10.755722999572754

Token 763: 'un' (ID: 373)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.1345355212688446
    2. 'z' → logprob: -2.384535551071167
    3. '           ' → logprob: -4.634535312652588
    4. ''' → logprob: -5.134535312652588
    5. ''l' → logprob: -5.259535312652588
    6. 'l' → logprob: -5.384535312652588
    7. ' '' → logprob: -5.509535312652588
    8. ' z' → logprob: -6.134535312652588
    9. ' l' → logprob: -7.759535312652588
    10. '          ' → logprob: -7.759535312652588

Token 764: ' caractère' (ID: 80509)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0018214354058727622
    2. ''z' → logprob: -6.501821517944336
    3. ' z' → logprob: -8.626821517944336
    4. 'win' → logprob: -9.751821517944336
    5. ''' → logprob: -10.876821517944336
    6. '```' → logprob: -11.751821517944336
    7. '_z' → logprob: -12.126821517944336
    8. 'za' → logprob: -12.126821517944336
    9. ' win' → logprob: -12.126821517944336
    10. '`' → logprob: -12.126821517944336

Token 765: ' impossible' (ID: 19786)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7099927067756653
    2. ' win' → logprob: -2.0849926471710205
    3. '```' → logprob: -2.2099926471710205
    4. 'z' → logprob: -2.4599926471710205
    5. 'win' → logprob: -2.8349926471710205
    6. ' =' → logprob: -3.7099926471710205
    7. '
' → logprob: -3.9599926471710205
    8. ''' → logprob: -4.5849928855896
    9. '               ' → logprob: -4.7099928855896
    10. ' z' → logprob: -4.8349928855896

Token 766: ' lors' (ID: 15456)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09076359122991562
    2. ' =' → logprob: -3.715763568878174
    3. ')' → logprob: -4.090763568878174
    4. '')' → logprob: -4.465763568878174
    5. '               ' → logprob: -5.090763568878174
    6. ''' → logprob: -5.215763568878174
    7. '   ' → logprob: -5.465763568878174
    8. '       ' → logprob: -5.590763568878174
    9. '=' → logprob: -5.590763568878174
    10. '                   ' → logprob: -6.340763568878174

Token 767: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.24161949753761292
    2. 'du' → logprob: -2.24161958694458
    3. 'd' → logprob: -2.99161958694458
    4. '#' → logprob: -3.86661958694458
    5. 'win' → logprob: -3.86661958694458
    6. ' de' → logprob: -4.74161958694458
    7. ' du' → logprob: -6.36661958694458
    8. '           ' → logprob: -6.49161958694458
    9. 'des' → logprob: -6.74161958694458
    10. ' win' → logprob: -6.99161958694458

Token 768: ' jeu' (ID: 24626)
  Prédit: 'jeu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jeu' → logprob: -0.5759007930755615
    2. 'win' → logprob: -1.2009007930755615
    3. 'for' → logprob: -2.9509007930755615
    4. '#' → logprob: -3.8259007930755615
    5. 'append' → logprob: -4.200901031494141
    6. 'preced' → logprob: -5.075901031494141
    7. ' win' → logprob: -5.325901031494141
    8. ' jeu' → logprob: -5.575901031494141
    9. 'game' → logprob: -5.700901031494141
    10. 'match' → logprob: -5.700901031494141

Token 769: ')' (ID: 8)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07823662459850311
    2. '')' → logprob: -2.7032365798950195
    3. ')' → logprob: -4.9532365798950195
    4. ''' → logprob: -8.07823657989502
    5. '')
' → logprob: -8.82823657989502
    6. '       ' → logprob: -8.95323657989502
    7. '          ' → logprob: -9.32823657989502
    8. '               ' → logprob: -9.45323657989502
    9. ''),' → logprob: -9.95323657989502
    10. ' =' → logprob: -10.07823657989502

Token 770: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002366753324167803
    2. ' l' → logprob: -9.000236511230469
    3. '          ' → logprob: -10.125236511230469
    4. 'l' → logprob: -10.875236511230469
    5. ',' → logprob: -11.250236511230469
    6. ' =' → logprob: -11.500236511230469
    7. ' at' → logprob: -12.000236511230469
    8. '
' → logprob: -12.375236511230469
    9. '            
' → logprob: -12.500236511230469
    10. '               ' → logprob: -12.625236511230469

Token 771: ' éviter' (ID: 64013)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22327633202075958
    2. ' l' → logprob: -2.098276376724243
    3. '           ' → logprob: -2.723276376724243
    4. 'win' → logprob: -5.473276138305664
    5. ' win' → logprob: -5.473276138305664
    6. '```' → logprob: -6.348276138305664
    7. '       ' → logprob: -7.598276138305664
    8. '          ' → logprob: -8.098276138305664
    9. '   ' → logprob: -8.723276138305664
    10. '            ' → logprob: -9.223276138305664

Token 772: ' de' (ID: 334)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.408256858587265
    2. '           ' → logprob: -1.2832568883895874
    3. ' l' → logprob: -3.658256769180298
    4. 'win' → logprob: -4.283257007598877
    5. '```' → logprob: -5.408257007598877
    6. 'de' → logprob: -6.158257007598877
    7. ' que' → logprob: -6.283257007598877
    8. '       ' → logprob: -6.283257007598877
    9. 'la' → logprob: -6.533257007598877
    10. ' de' → logprob: -6.658257007598877

Token 773: ' pén' (ID: 54558)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.1616610735654831
    2. 'l' → logprob: -2.911661148071289
    3. ' win' → logprob: -3.161661148071289
    4. 'conf' → logprob: -4.036661148071289
    5. 'comp' → logprob: -4.786661148071289
    6. 'count' → logprob: -4.786661148071289
    7. '#' → logprob: -6.161661148071289
    8. 'repeat' → logprob: -6.411661148071289
    9. ' l' → logprob: -6.536661148071289
    10. ''' → logprob: -6.536661148071289

Token 774: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.006560005713254213
    2. 'l' → logprob: -5.5065598487854
    3. 'nal' → logprob: -7.5065598487854
    4. 'aler' → logprob: -7.8815598487854
    5. '```' → logprob: -7.8815598487854
    6. 'win' → logprob: -8.506560325622559
    7. 'alit' → logprob: -8.881560325622559
    8. 'alité' → logprob: -9.131560325622559
    9. 'ser' → logprob: -9.256560325622559
    10. 'alt' → logprob: -9.256560325622559

Token 775: 'iser' (ID: 7466)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5336183309555054
    2. 'win' → logprob: -1.0336183309555054
    3. 'l' → logprob: -3.908618450164795
    4. 'iser' → logprob: -4.158618450164795
    5. ' win' → logprob: -4.533618450164795
    6. '(win' → logprob: -5.783618450164795
    7. ''' → logprob: -6.533618450164795
    8. 's' → logprob: -7.033618450164795
    9. '#' → logprob: -7.033618450164795
    10. 'alité' → logprob: -7.033618450164795

Token 776: ' à' (ID: 1221)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08257084339857101
    2. ' l' → logprob: -2.582570791244507
    3. '           ' → logprob: -6.207571029663086
    4. 'win' → logprob: -7.207571029663086
    5. ' win' → logprob: -7.207571029663086
    6. '          ' → logprob: -10.332571029663086
    7. ' la' → logprob: -10.582571029663086
    8. ' le' → logprob: -10.957571029663086
    9. '                   ' → logprob: -11.082571029663086
    10. 'le' → logprob: -11.457571029663086

Token 777: ' nouveau' (ID: 23184)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3309921622276306
    2. 'la' → logprob: -2.2059922218322754
    3. 'win' → logprob: -2.4559922218322754
    4. 'ce' → logprob: -3.5809922218322754
    5. ' nouveau' → logprob: -4.080992221832275
    6. 'plus' → logprob: -5.330992221832275
    7. 'j' → logprob: -5.705992221832275
    8. 'ces' → logprob: -5.705992221832275
    9. 'nou' → logprob: -5.705992221832275
    10. 'd' → logprob: -5.830992221832275

Token 778: ' lors' (ID: 15456)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8884024620056152
    2. '           ' → logprob: -1.0134024620056152
    3. 'l' → logprob: -1.5134024620056152
    4. '                   ' → logprob: -6.263402462005615
    5. '               ' → logprob: -6.388402462005615
    6. '.' → logprob: -6.888402462005615
    7. '          ' → logprob: -8.513402938842773
    8. '.
' → logprob: -9.388402938842773
    9. ' win' → logprob: -9.388402938842773
    10. '```' → logprob: -9.388402938842773

Token 779: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07448343932628632
    2. ' de' → logprob: -3.4494833946228027
    3. '               ' → logprob: -3.8244833946228027
    4. ' l' → logprob: -5.574483394622803
    5. '                   ' → logprob: -5.824483394622803
    6. 'l' → logprob: -5.824483394622803
    7. 'de' → logprob: -6.699483394622803
    8. ' la' → logprob: -6.824483394622803
    9. '   ' → logprob: -7.324483394622803
    10. '=' → logprob: -7.449483394622803

Token 780: ''autres' (ID: 38753)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14751297235488892
    2. 'win' → logprob: -2.897512912750244
    3. 'une' → logprob: -3.647512912750244
    4. ''une' → logprob: -4.022512912750244
    5. 'la' → logprob: -4.147512912750244
    6. 'e' → logprob: -5.772512912750244
    7. 'range' → logprob: -5.897512912750244
    8. '   ' → logprob: -6.022512912750244
    9. ' win' → logprob: -6.147512912750244
    10. 'le' → logprob: -6.272512912750244

Token 781: ' vér' (ID: 42524)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.384592890739441
    2. ' for' → logprob: -1.884592890739441
    3. 'for' → logprob: -1.884592890739441
    4. 'l' → logprob: -2.6345930099487305
    5. ' l' → logprob: -2.7595930099487305
    6. ' iterations' → logprob: -2.7595930099487305
    7. 'j' → logprob: -3.7595930099487305
    8. '       ' → logprob: -3.8845930099487305
    9. '```' → logprob: -4.0095930099487305
    10. 'pass' → logprob: -4.0095930099487305

Token 782: 'ifications' (ID: 9110)
  Prédit: 'placement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.8378506898880005
    2. 'acement' → logprob: -2.337850570678711
    3. 'l' → logprob: -2.462850570678711
    4. '```' → logprob: -2.837850570678711
    5. 'place' → logprob: -2.962850570678711
    6. 'er' → logprob: -3.212850570678711
    7. 'al' → logprob: -3.337850570678711
    8. 'ent' → logprob: -4.087850570678711
    9. 'ult' → logprob: -4.462850570678711
    10. 'acent' → logprob: -4.587850570678711

Token 783: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02984420768916607
    2. ' l' → logprob: -4.279844284057617
    3. ' =' → logprob: -5.404844284057617
    4. '          ' → logprob: -5.904844284057617
    5. 'l' → logprob: -6.029844284057617
    6. '               ' → logprob: -6.279844284057617
    7. '=' → logprob: -6.904844284057617
    8. '                   ' → logprob: -7.404844284057617
    9. '[l' → logprob: -7.654844284057617
    10. '.' → logprob: -7.904844284057617

Token 784: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003250438952818513
    2. ' l' → logprob: -6.378250598907471
    3. 'l' → logprob: -6.753250598907471
    4. '```' → logprob: -8.128250122070312
    5. '               ' → logprob: -10.628250122070312
    6. '          ' → logprob: -11.003250122070312
    7. '            
' → logprob: -11.628250122070312
    8. '``' → logprob: -11.628250122070312
    9. '                   ' → logprob: -11.878250122070312
    10. 'j' → logprob: -12.003250122070312

Token 785: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.6005337238311768
    2. '           ' → logprob: -1.2255337238311768
    3. ' l' → logprob: -1.8505337238311768
    4. '               ' → logprob: -8.475533485412598
    5. '```' → logprob: -9.100533485412598
    6. '          ' → logprob: -9.350533485412598
    7. '[l' → logprob: -9.725533485412598
    8. '       ' → logprob: -9.725533485412598
    9. '   ' → logprob: -10.225533485412598
    10. '                   ' → logprob: -10.475533485412598

Token 786: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.2200749754119897e-06
    2. '[l' → logprob: -14.125001907348633
    3. ' [' → logprob: -14.375001907348633
    4. '[' → logprob: -14.625001907348633
    5. '```' → logprob: -15.625001907348633
    6. '[i' → logprob: -15.750001907348633
    7. '\[' → logprob: -17.250001907348633
    8. '=j' → logprob: -17.875001907348633
    9. '[J' → logprob: -18.375001907348633
    10. '=' → logprob: -18.500001907348633

Token 787: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004885758273303509
    2. ']=' → logprob: -5.629885673522949
    3. '=' → logprob: -6.754885673522949
    4. ' ]' → logprob: -10.00488567352295
    5. ']='' → logprob: -10.50488567352295
    6. '[j' → logprob: -10.62988567352295
    7. ' =' → logprob: -10.87988567352295
    8. '[' → logprob: -13.12988567352295
    9. '']' → logprob: -14.37988567352295
    10. ']==' → logprob: -15.62988567352295

Token 788: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975187823176384
    2. ' =' → logprob: -3.529751777648926
    3. '='' → logprob: -13.779751777648926
    4. ' ='' → logprob: -15.029751777648926
    5. ',' → logprob: -17.279752731323242
    6. '[' → logprob: -17.529752731323242
    7. '＝' → logprob: -17.779752731323242
    8. '=
' → logprob: -18.279752731323242
    9. '.=' → logprob: -18.279752731323242
    10. '=

' → logprob: -18.904752731323242

Token 789: ' '' (ID: 461)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -1.4855663721391466e-05
    2. '‘z' → logprob: -11.250015258789062
    3. ' '' → logprob: -13.625015258789062
    4. ''' → logprob: -14.500015258789062
    5. '’z' → logprob: -16.375015258789062
    6. 'z' → logprob: -18.500015258789062
    7. ''s' → logprob: -18.875015258789062
    8. ''q' → logprob: -19.500015258789062
    9. ''y' → logprob: -19.500015258789062
    10. ''iz' → logprob: -20.125015258789062

Token 790: 'z' (ID: 89)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.018163170665502548
    2. 'z' → logprob: -4.018163204193115
    3. '‘z' → logprob: -11.268162727355957
    4. ''' → logprob: -15.393162727355957
    5. '’z' → logprob: -15.393162727355957
    6. '	z' → logprob: -17.018163681030273
    7. ' z' → logprob: -17.518163681030273
    8. '"' → logprob: -17.893163681030273
    9. ' '' → logprob: -20.018163681030273
    10. ''s' → logprob: -20.143163681030273

Token 791: ''

' (ID: 7497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 792: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8532528281211853
    2. '   ' → logprob: -0.9782528281211853
    3. 'win' → logprob: -2.60325288772583
    4. '#' → logprob: -2.97825288772583
    5. ' for' → logprob: -2.97825288772583
    6. '```' → logprob: -4.47825288772583
    7. ' win' → logprob: -5.47825288772583
    8. '<|end|>' → logprob: -5.97825288772583
    9. ')' → logprob: -7.35325288772583
    10. '       ' → logprob: -7.72825288772583

Token 793: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015956591814756393
    2. 'for' → logprob: -4.265956401824951
    3. 'win' → logprob: -6.390956401824951
    4. ' print' → logprob: -10.14095687866211
    5. '#' → logprob: -10.39095687866211
    6. ' for' → logprob: -11.14095687866211
    7. '```' → logprob: -12.26595687866211
    8. '#print' → logprob: -12.64095687866211
    9. 'pass' → logprob: -12.76595687866211
    10. 'j' → logprob: -13.14095687866211

Token 794: 'ichage' (ID: 118475)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001541046192869544
    2. 'ort' → logprob: -7.7515411376953125
    3. '#' → logprob: -8.001541137695312
    4. 'r' → logprob: -8.626541137695312
    5. 'pr' → logprob: -8.626541137695312
    6. '#print' → logprob: -8.876541137695312
    7. 'ront' → logprob: -9.626541137695312
    8. 'for' → logprob: -10.251541137695312
    9. 'rom' → logprob: -10.376541137695312
    10. 'ect' → logprob: -10.751541137695312

Token 795: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00036561701563186944
    2. '(' → logprob: -8.500365257263184
    3. '(print' → logprob: -8.750365257263184
    4. ' print' → logprob: -12.875365257263184
    5. '(ans' → logprob: -14.500365257263184
    6. '```' → logprob: -14.875365257263184
    7. '()' → logprob: -15.500365257263184
    8. '(
' → logprob: -17.0003662109375
    9. 'for' → logprob: -17.6253662109375
    10. '()
' → logprob: -17.8753662109375

Token 796: ' score' (ID: 8429)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005347009282559156
    2. 'print' → logprob: -5.255346775054932
    3. '(ans' → logprob: -9.25534725189209
    4. ' ans' → logprob: -11.00534725189209
    5. 'answer' → logprob: -14.00534725189209
    6. 'int' → logprob: -16.755346298217773
    7. 'a' → logprob: -17.255346298217773
    8. '	ans' → logprob: -17.755346298217773
    9. ' print' → logprob: -17.880346298217773
    10. 'result' → logprob: -18.130346298217773

Token 797: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. ' print' → logprob: -17.5
    4. '``' → logprob: -22.875
    5. '(print' → logprob: -23.125
    6. 'pr' → logprob: -24.75
    7. '#print' → logprob: -25.0
    8. 'Print' → logprob: -25.125
    9. 'println' → logprob: -25.25
    10. '.print' → logprob: -25.5

Token 798: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -16.75
    3. ' print' → logprob: -19.5
    4. '``' → logprob: -23.875
    5. '
' → logprob: -25.375
    6. '#print' → logprob: -26.0
    7. '(print' → logprob: -26.125
    8. '.print' → logprob: -26.875
    9. '`' → logprob: -26.875
    10. 'Print' → logprob: -27.0

Token 799: 'é' (ID: 377)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03415515646338463
    2. 'é' → logprob: -3.4091551303863525
    3. '#print' → logprob: -7.909155368804932
    4. '#' → logprob: -9.284154891967773
    5. 'e' → logprob: -11.409154891967773
    6. ' print' → logprob: -11.534154891967773
    7. '(print' → logprob: -11.534154891967773
    8. 'ée' → logprob: -11.784154891967773
    9. 'isé' → logprob: -12.534154891967773
    10. ')' → logprob: -13.784154891967773

Token 800: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.25
    3. '```' → logprob: -18.5
    4. '
' → logprob: -22.0
    5. '``' → logprob: -24.125
    6. '#print' → logprob: -25.25
    7. 'pr' → logprob: -25.375
    8. '`' → logprob: -25.875
    9. '(print' → logprob: -26.125
    10. 'Print' → logprob: -26.125

Token 801: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.5
    3. ' print' → logprob: -19.25
    4. '``' → logprob: -25.125
    5. '#print' → logprob: -25.25
    6. 'Print' → logprob: -27.0
    7. '	print' → logprob: -27.5
    8. 'python' → logprob: -27.75
    9. '
' → logprob: -27.875
    10. '#' → logprob: -27.875

Token 802: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0015029559144750237
    2. '(' → logprob: -6.501502990722656
    3. 'ans' → logprob: -14.751502990722656
    4. ' (' → logprob: -15.751502990722656
    5. '(
' → logprob: -16.126502990722656
    6. '()' → logprob: -17.251502990722656
    7. '(an' → logprob: -17.251502990722656
    8. '(answer' → logprob: -17.626502990722656
    9. '(abs' → logprob: -17.751502990722656
    10. '('' → logprob: -18.376502990722656

Token 803: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.75
    3. ')`' → logprob: -17.125
    4. '))' → logprob: -18.0
    5. '())' → logprob: -18.25
    6. '()' → logprob: -19.125
    7. ')
' → logprob: -19.5
    8. ')#' → logprob: -19.75
    9. '`)' → logprob: -20.375
    10. '),' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 801
Tokens correctement prédits (1ère position, stricte): 155
Tokens correctement prédits (1ère position, avec adaptation): 165
Tokens correctement prédits (top 10): 408
Précision stricte (1ère position): 19.35%
Précision adaptée (1ère position): 20.60%
Précision (top 10): 50.94%
================================================================================
