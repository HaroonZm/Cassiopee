================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = input()
P = input().split()
P = [int(x) for x in P]

min_now = P[0]
count = 0

for p in P:
    if p <= min_now:
        count = count + 1
        min_now = p

print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012628190219402313
    2. '()' → logprob: -4.762628078460693
    3. '[' → logprob: -7.012628078460693
    4. ''' → logprob: -7.012628078460693
    5. '(
' → logprob: -7.387628078460693
    6. '"' → logprob: -7.762628078460693
    7. '.' → logprob: -7.887628078460693
    8. '```' → logprob: -8.512628555297852
    9. '`' → logprob: -8.887628555297852
    10. ')' → logprob: -9.262628555297852

Token 4: 'P' (ID: 47)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38538965582847595
    2. '.' → logprob: -1.3853896856307983
    3. '=' → logprob: -4.260389804840088
    4. '\n' → logprob: -4.635389804840088
    5. '.strip' → logprob: -4.635389804840088
    6. '```' → logprob: -5.010389804840088
    7. '*' → logprob: -5.385389804840088
    8. '#' → logprob: -5.510389804840088
    9. ')' → logprob: -5.635389804840088
    10. '[' → logprob: -5.885389804840088

Token 5: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7094274163246155
    2. '=' → logprob: -1.4594273567199707
    3. '[' → logprob: -2.3344273567199707
    4. '.' → logprob: -2.5844273567199707
    5. ' =' → logprob: -2.8344273567199707
    6. '(' → logprob: -4.459427356719971
    7. ')' → logprob: -4.834427356719971
    8. 'R' → logprob: -5.334427356719971
    9. 'u' → logprob: -5.709427356719971
    10. 'P' → logprob: -5.959427356719971

Token 6: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7170068025588989
    2. 'input' → logprob: -0.7170068025588989
    3. ' input' → logprob: -4.092006683349609
    4. ' int' → logprob: -5.092006683349609
    5. 'float' → logprob: -7.842006683349609
    6. 'list' → logprob: -9.21700668334961
    7. '[]' → logprob: -9.46700668334961
    8. '0' → logprob: -10.46700668334961
    9. ' float' → logprob: -11.09200668334961
    10. 'N' → logprob: -11.09200668334961

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023482821881771088
    2. '()' → logprob: -3.7734827995300293
    3. '(
' → logprob: -9.398483276367188
    4. ')' → logprob: -9.773483276367188
    5. '.' → logprob: -10.648483276367188
    6. '(

' → logprob: -10.773483276367188
    7. ''' → logprob: -11.148483276367188
    8. '('' → logprob: -11.648483276367188
    9. ' (' → logprob: -11.773483276367188
    10. '```' → logprob: -11.898483276367188

Token 8: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5383124351501465
    2. 'if' → logprob: -1.9133124351501465
    3. '#' → logprob: -2.0383124351501465
    4. ')' → logprob: -2.6633124351501465
    5. '[' → logprob: -3.1633124351501465
    6. '.split' → logprob: -3.2883124351501465
    7. 's' → logprob: -3.4133124351501465
    8. '%' → logprob: -3.5383124351501465
    9. ' if' → logprob: -3.6633124351501465
    10. '```' → logprob: -3.7883124351501465

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0186686422675848
    2. '()' → logprob: -4.0186686515808105
    3. '('' → logprob: -8.393668174743652
    4. '("("' → logprob: -8.768668174743652
    5. '(
' → logprob: -9.768668174743652
    6. '(`' → logprob: -10.268668174743652
    7. '(

' → logprob: -10.893668174743652
    8. '```' → logprob: -12.018668174743652
    9. '`' → logprob: -12.143668174743652
    10. '((' → logprob: -12.768668174743652

Token 10: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.29322636127471924
    2. 'for' → logprob: -1.5432263612747192
    3. 'N' → logprob: -3.7932262420654297
    4. '[' → logprob: -6.04322624206543
    5. 'A' → logprob: -6.04322624206543
    6. 'count' → logprob: -6.16822624206543
    7. 'result' → logprob: -6.79322624206543
    8. 'a' → logprob: -6.79322624206543
    9. 'numbers' → logprob: -6.91822624206543
    10. 'nums' → logprob: -7.04322624206543

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32533109188079834
    2. '.' → logprob: -1.4503310918807983
    3. '<|end|>' → logprob: -3.700331211090088
    4. '[:]' → logprob: -5.200331211090088
    5. '```' → logprob: -5.325331211090088
    6. '<|end|>' → logprob: -6.700331211090088
    7. ')' → logprob: -6.825331211090088
    8. '\[' → logprob: -6.825331211090088
    9. '[]' → logprob: -7.200331211090088
    10. '\' → logprob: -7.450331211090088

Token 12: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5597662329673767
    2. 'list' → logprob: -1.1847662925720215
    3. '[list' → logprob: -2.5597662925720215
    4. ' [' → logprob: -3.8097662925720215
    5. '[' → logprob: -3.8097662925720215
    6. '[int' → logprob: -7.0597662925720215
    7. '[input' → logprob: -9.309765815734863
    8. '[len' → logprob: -9.684765815734863
    9. '(list' → logprob: -10.684765815734863
    10. '[p' → logprob: -10.684765815734863

Token 13: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.5332478142227046e-05
    2. ' int' → logprob: -11.500015258789062
    3. 'float' → logprob: -12.375015258789062
    4. '(int' → logprob: -14.125015258789062
    5. '[int' → logprob: -16.375015258789062
    6. 'str' → logprob: -16.875015258789062
    7. ']int' → logprob: -17.375015258789062
    8. 'N' → logprob: -18.125015258789062
    9. '```' → logprob: -18.375015258789062
    10. ''int' → logprob: -18.500015258789062

Token 14: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0785614475607872
    2. '(' → logprob: -3.328561544418335
    3. '(i' → logprob: -3.453561544418335
    4. '(p' → logprob: -5.078561305999756
    5. '(P' → logprob: -7.828561305999756
    6. '(s' → logprob: -7.828561305999756
    7. '(a' → logprob: -7.953561305999756
    8. '(item' → logprob: -8.203561782836914
    9. '(token' → logprob: -8.203561782836914
    10. '(n' → logprob: -10.328561782836914

Token 15: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005131178768351674
    2. ')]' → logprob: -7.625513076782227
    3. '(x' → logprob: -11.750513076782227
    4. ')p' → logprob: -11.875513076782227
    5. '(p' → logprob: -13.000513076782227
    6. ' )' → logprob: -13.375513076782227
    7. ')x' → logprob: -13.375513076782227
    8. ')...' → logprob: -13.500513076782227
    9. ']' → logprob: -14.000513076782227
    10. '),' → logprob: -14.250513076782227

Token 16: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007849713787436485
    2. '(x' → logprob: -6.00784969329834
    3. ' for' → logprob: -6.13284969329834
    4. 'for' → logprob: -6.75784969329834
    5. ']' → logprob: -7.13284969329834
    6. ')]' → logprob: -7.25784969329834
    7. '(p' → logprob: -8.00784969329834
    8. '-' → logprob: -9.25784969329834
    9. ')p' → logprob: -10.75784969329834
    10. ' ' → logprob: -11.00784969329834

Token 17: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.004122803919017315
    2. 'x' → logprob: -5.504122734069824
    3. ' P' → logprob: -10.754122734069824
    4. '(x' → logprob: -10.879122734069824
    5. ' ' → logprob: -13.004122734069824
    6. 'P' → logprob: -13.504122734069824
    7. '	x' → logprob: -15.129122734069824
    8. '_x' → logprob: -15.754122734069824
    9. ' range' → logprob: -16.50412368774414
    10. ')x' → logprob: -16.75412368774414

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22544783353805542
    2. 'in' → logprob: -1.6004478931427002
    3. ' ' → logprob: -11.350447654724121
    4. '	in' → logprob: -12.350447654724121
    5. 'import' → logprob: -12.975447654724121
    6. ']' → logprob: -12.975447654724121
    7. 'inx' → logprob: -12.975447654724121
    8. 'x' → logprob: -13.100447654724121
    9. 'p' → logprob: -13.600447654724121
    10. ')' → logprob: -13.600447654724121

Token 19: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.012546384707093239
    2. ' P' → logprob: -4.387546539306641
    3. 'input' → logprob: -10.88754653930664
    4. 'range' → logprob: -11.76254653930664
    5. ' range' → logprob: -12.76254653930664
    6. ' input' → logprob: -12.76254653930664
    7. 'N' → logprob: -13.13754653930664
    8. 'x' → logprob: -13.88754653930664
    9. 'p' → logprob: -14.38754653930664
    10. ' ' → logprob: -14.88754653930664

Token 20: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001099491841159761
    2. ')]' → logprob: -7.126099586486816
    3. ')' → logprob: -8.501099586486816
    4. '])' → logprob: -9.376099586486816
    5. ']
' → logprob: -12.501099586486816
    6. ' ]' → logprob: -13.376099586486816
    7. '']' → logprob: -14.501099586486816
    8. '])]' → logprob: -15.001099586486816
    9. '`]' → logprob: -15.126099586486816
    10. '[' → logprob: -16.0010986328125

Token 21: 'min' (ID: 1493)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9799748659133911
    2. 'for' → logprob: -1.3549748659133911
    3. 'n' → logprob: -2.3549747467041016
    4. 'N' → logprob: -2.7299747467041016
    5. 'M' → logprob: -3.2299747467041016
    6. 'd' → logprob: -3.8549747467041016
    7. 's' → logprob: -3.9799747467041016
    8. '#' → logprob: -4.229974746704102
    9. '[' → logprob: -4.479974746704102
    10. 'p' → logprob: -4.604974746704102

Token 22: '_now' (ID: 49444)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01834273338317871
    2. '_val' → logprob: -4.143342971801758
    3. '(' → logprob: -6.768342971801758
    4. '_value' → logprob: -7.143342971801758
    5. 'Val' → logprob: -9.893342971801758
    6. 'P' → logprob: -10.518342971801758
    7. '_p' → logprob: -10.643342971801758
    8. '_idx' → logprob: -10.768342971801758
    9. '_dist' → logprob: -10.768342971801758
    10. 's' → logprob: -10.893342971801758

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5479668378829956
    2. '=' → logprob: -1.2979668378829956
    3. '_' → logprob: -1.9229668378829956
    4. ',' → logprob: -7.047966957092285
    5. '_=' → logprob: -7.547966957092285
    6. ' _' → logprob: -7.672966957092285
    7. '(' → logprob: -8.422966957092285
    8. ' ' → logprob: -9.172966957092285
    9. '[' → logprob: -9.422966957092285
    10. '.' → logprob: -10.047966957092285

Token 24: ' P' (ID: 398)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.30738532543182373
    2. 'P' → logprob: -1.8073853254318237
    3. '10' → logprob: -2.6823854446411133
    4. ' float' → logprob: -3.9323854446411133
    5. ' P' → logprob: -5.432385444641113
    6. '100' → logprob: -5.432385444641113
    7. 'min' → logprob: -6.807385444641113
    8. '0' → logprob: -6.807385444641113
    9. '999' → logprob: -7.057385444641113
    10. ' ' → logprob: -7.932385444641113

Token 25: '[' (ID: 58)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.04290623590350151
    2. '[' → logprob: -3.7929062843322754
    3. '.copy' → logprob: -4.167906284332275
    4. '[:' → logprob: -5.542906284332275
    5. '<|end|>' → logprob: -10.417905807495117
    6. '.' → logprob: -11.042905807495117
    7. '[min' → logprob: -11.792905807495117
    8. '```' → logprob: -12.417905807495117
    9. '[::-' → logprob: -12.667905807495117
    10. '[:-' → logprob: -13.542905807495117

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.625011444091797
    3. '1' → logprob: -13.000011444091797
    4. '-' → logprob: -15.625011444091797
    5. ']' → logprob: -16.875011444091797
    6. '2' → logprob: -17.750011444091797
    7. ':' → logprob: -17.812511444091797
    8. '   ' → logprob: -17.812511444091797
    9. ')' → logprob: -18.000011444091797
    10. '])' → logprob: -18.000011444091797

Token 27: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010511501459404826
    2. ' ]' → logprob: -7.50105094909668
    3. ')' → logprob: -8.25105094909668
    4. ']
' → logprob: -9.00105094909668
    5. ')]' → logprob: -9.50105094909668
    6. '])' → logprob: -11.25105094909668
    7. '],' → logprob: -12.50105094909668
    8. ']

' → logprob: -12.87605094909668
    9. ']>' → logprob: -13.00105094909668
    10. '[' → logprob: -13.12605094909668

Token 28: 'count' (ID: 5420)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.46291446685791016
    2. 'for' → logprob: -1.5879144668579102
    3. 'min' → logprob: -2.21291446685791
    4. ' for' → logprob: -3.46291446685791
    5. ' max' → logprob: -4.33791446685791
    6. ' min' → logprob: -5.58791446685791
    7. '
' → logprob: -5.83791446685791
    8. 'result' → logprob: -6.58791446685791
    9. 'ans' → logprob: -6.83791446685791
    10. '<|end|>' → logprob: -7.21291446685791

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21691562235355377
    2. '=' → logprob: -2.2169156074523926
    3. '_' → logprob: -2.8419156074523926
    4. 's' → logprob: -3.5919156074523926
    5. '_=' → logprob: -9.34191608428955
    6. ' ' → logprob: -10.34191608428955
    7. 'ing' → logprob: -10.71691608428955
    8. '  ' → logprob: -11.71691608428955
    9. 'ed' → logprob: -12.09191608428955
    10. ' _' → logprob: -12.59191608428955

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.225803405046463
    2. '1' → logprob: -1.8508033752441406
    3. ' ' → logprob: -3.1008033752441406
    4. '100' → logprob: -15.60080337524414
    5. ' ' → logprob: -15.60080337524414
    6. '```' → logprob: -16.03830337524414
    7. 'len' → logprob: -16.10080337524414
    8. 'int' → logprob: -16.22580337524414
    9. '`' → logprob: -16.85080337524414
    10. '2' → logprob: -16.85080337524414

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07893793284893036
    2. '1' → logprob: -2.5789380073547363
    3. ' ' → logprob: -9.953937530517578
    4. 'int' → logprob: -15.828937530517578
    5. '```' → logprob: -16.203937530517578
    6. 'len' → logprob: -16.578937530517578
    7. '100' → logprob: -16.578937530517578
    8. '-' → logprob: -16.891437530517578
    9. '(' → logprob: -16.891437530517578
    10. '2' → logprob: -17.016437530517578

Token 32: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.020409345626831
    2. '
' → logprob: -1.145409345626831
    3. 'for' → logprob: -1.395409345626831
    4. ' for' → logprob: -2.770409345626831
    5. ' 
' → logprob: -5.02040958404541
    6. '
' → logprob: -6.89540958404541
    7. '' → logprob: -7.02040958404541
    8. '\' → logprob: -7.14540958404541
    9. '<|end|>' → logprob: -7.64540958404541
    10. '```' → logprob: -7.77040958404541

Token 33: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009125363430939615
    2. ' for' → logprob: -7.000912666320801
    3. 'i' → logprob: -15.6259126663208
    4. '
' → logprob: -15.8759126663208
    5. '```' → logprob: -16.125911712646484
    6. ' ' → logprob: -16.250911712646484
    7. 'f' → logprob: -16.375911712646484
    8. ':' → logprob: -16.500911712646484
    9. '1' → logprob: -16.625911712646484
    10. '	for' → logprob: -16.875911712646484

Token 34: ' p' (ID: 275)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.001565449871122837
    2. 'i' → logprob: -7.251565456390381
    3. ' x' → logprob: -7.376565456390381
    4. ' ' → logprob: -8.751564979553223
    5. ' p' → logprob: -10.251564979553223
    6. '_' → logprob: -11.251564979553223
    7. ' _' → logprob: -11.876564979553223
    8. 'x' → logprob: -12.251564979553223
    9. ' ' → logprob: -12.501564979553223
    10. ' P' → logprob: -13.251564979553223

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012924550101161003
    2. 'in' → logprob: -4.387924671173096
    3. ' ' → logprob: -7.887924671173096
    4. '  ' → logprob: -11.637924194335938
    5. ' i' → logprob: -11.637924194335938
    6. 'i' → logprob: -11.762924194335938
    7. '	in' → logprob: -12.637924194335938
    8. 'p' → logprob: -13.012924194335938
    9. 's' → logprob: -13.387924194335938
    10. 'n' → logprob: -13.387924194335938

Token 36: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5759427547454834
    2. ' P' → logprob: -0.8259427547454834
    3. ' ' → logprob: -13.200942993164062
    4. ' range' → logprob: -14.325942993164062
    5. '[P' → logprob: -15.450942993164062
    6. '(P' → logprob: -15.825942993164062
    7. 'range' → logprob: -16.200942993164062
    8. '  ' → logprob: -16.325942993164062
    9. '	P' → logprob: -16.700942993164062
    10. '[' → logprob: -16.825942993164062

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002788551209960133
    2. ':
' → logprob: -8.62527847290039
    3. ' :' → logprob: -9.25027847290039
    4. ':**' → logprob: -14.12527847290039
    5. '>' → logprob: -14.50027847290039
    6. '   ' → logprob: -14.75027847290039
    7. '>:' → logprob: -15.37527847290039
    8. ' :
' → logprob: -15.50027847290039
    9. ' if' → logprob: -15.62527847290039
    10. ':

' → logprob: -15.75027847290039

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20015157759189606
    2. ' 
' → logprob: -2.7001516819000244
    3. ' ' → logprob: -3.2001516819000244
    4. ' if' → logprob: -3.3251516819000244
    5. '    
' → logprob: -4.075151443481445
    6. '```' → logprob: -4.575151443481445
    7. '  
' → logprob: -6.325151443481445
    8. '    ' → logprob: -6.450151443481445
    9. '<|end|>' → logprob: -6.575151443481445
    10. '   
' → logprob: -6.700151443481445

Token 39: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11318335682153702
    2. '   ' → logprob: -2.4881832599639893
    3. 'if' (adapté à ' if') → logprob: -3.7381832599639893
    4. '```' → logprob: -9.61318302154541
    5. ' ' → logprob: -9.73818302154541
    6. '    ' → logprob: -12.23818302154541
    7. '    
' → logprob: -12.36318302154541
    8. '  ' → logprob: -12.48818302154541
    9. '	if' → logprob: -12.48818302154541
    10. '<|end|>' → logprob: -12.98818302154541

Token 40: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5760093927383423
    2. 'p' → logprob: -0.8260093927383423
    3. ' ' → logprob: -10.326009750366211
    4. '<p' → logprob: -11.576009750366211
    5. '   ' → logprob: -11.701009750366211
    6. '	p' → logprob: -12.326009750366211
    7. 'min' → logprob: -12.576009750366211
    8. '(p' → logprob: -13.076009750366211
    9. '  ' → logprob: -13.201009750366211
    10. '```' → logprob: -13.576009750366211

Token 41: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11362535506486893
    2. '<' → logprob: -2.2386252880096436
    3. ' ' → logprob: -7.363625526428223
    4. ' >' → logprob: -8.988625526428223
    5. '>' → logprob: -11.113625526428223
    6. ' <=' → logprob: -11.488625526428223
    7. '<int' → logprob: -12.113625526428223
    8. '<|end|>' → logprob: -12.488625526428223
    9. '<num' → logprob: -13.863625526428223
    10. '<size' → logprob: -14.363625526428223

Token 42: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04859020933508873
    2. ' min' → logprob: -3.0485901832580566
    3. '	min' → logprob: -13.923590660095215
    4. ' ' → logprob: -14.173590660095215
    5. '(min' → logprob: -15.298590660095215
    6. 'p' → logprob: -15.673590660095215
    7. '```' → logprob: -15.673590660095215
    8. '   ' → logprob: -15.798590660095215
    9. '[min' → logprob: -16.2985897064209
    10. '=min' → logprob: -16.2985897064209

Token 43: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -5.512236498361744e-07
    2. '_no' → logprob: -15.250000953674316
    3. '_' → logprob: -16.125
    4. '_not' → logprob: -16.625
    5. '_NOW' → logprob: -16.75
    6. '_here' → logprob: -16.875
    7. '_n' → logprob: -18.25
    8. '_then' → logprob: -18.5
    9. ' _' → logprob: -18.625
    10. '_to' → logprob: -18.75

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011075177229940891
    2. ':
' → logprob: -4.511075019836426
    3. ' :' → logprob: -11.636075019836426
    4. ':
' → logprob: -11.636075019836426
    5. '   ' → logprob: -12.386075019836426
    6. '):' → logprob: -13.761075019836426
    7. ' :
' → logprob: -13.886075019836426
    8. ' and' → logprob: -14.136075019836426
    9. ':

' → logprob: -14.136075019836426
    10. '):
' → logprob: -14.886075019836426

Token 45: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23932041227817535
    2. '   ' → logprob: -2.3643205165863037
    3. ':
' → logprob: -2.7393205165863037
    4. '       ' → logprob: -3.4893205165863037
    5. ' :' → logprob: -4.989320278167725
    6. ' :
' → logprob: -5.364320278167725
    7. ' ' → logprob: -6.239320278167725
    8. '    ' → logprob: -6.364320278167725
    9. '```' → logprob: -6.864320278167725
    10. '\n' → logprob: -6.989320278167725

Token 46: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.22105029225349426
    2. ' count' → logprob: -2.471050262451172
    3. ' min' → logprob: -2.971050262451172
    4. 'min' → logprob: -2.971050262451172
    5. '   ' → logprob: -5.346050262451172
    6. '
' → logprob: -5.471050262451172
    7. '       ' → logprob: -6.721050262451172
    8. ' 
' → logprob: -7.971050262451172
    9. '```' → logprob: -8.971050262451172
    10. '	count' → logprob: -9.096050262451172

Token 47: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06196993216872215
    2. '+=' → logprob: -2.8119699954986572
    3. '=' → logprob: -13.936969757080078
    4. '+' → logprob: -14.311969757080078
    5. ' =' → logprob: -14.561969757080078
    6. '   ' → logprob: -16.561969757080078
    7. ' -=' → logprob: -16.936969757080078
    8. ']+=' → logprob: -17.186969757080078
    9. '+="' → logprob: -17.311969757080078
    10. ' +' → logprob: -17.561969757080078

Token 48: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.25458237528800964
    2. ' count' → logprob: -1.504582405090332
    3. '0' → logprob: -6.379582405090332
    4. '1' → logprob: -7.879582405090332
    5. '+' → logprob: -8.254582405090332
    6. ' ' → logprob: -8.254582405090332
    7. '   ' → logprob: -11.504582405090332
    8. '	count' → logprob: -11.879582405090332
    9. ' p' → logprob: -12.254582405090332
    10. '2' → logprob: -12.504582405090332

Token 49: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014169389382004738
    2. ' +' → logprob: -4.264169216156006
    3. '1' → logprob: -13.139169692993164
    4. '+
' → logprob: -13.764169692993164
    5. '+=' → logprob: -14.139169692993164
    6. '++' → logprob: -14.764169692993164
    7. ' +
' → logprob: -14.764169692993164
    8. ' ' → logprob: -14.889169692993164
    9. '<|end|>' → logprob: -15.014169692993164
    10. '+++' → logprob: -15.514169692993164

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.375553131103516
    4. '  ' → logprob: -18.750553131103516
    5. '<|end|>' → logprob: -19.500553131103516
    6. '۱' → logprob: -20.000553131103516
    7. '+' → logprob: -20.125553131103516
    8. '１' → logprob: -20.125553131103516
    9. ' ' → logprob: -20.375553131103516
    10. '    ' → logprob: -21.313053131103516

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '<|end|>' → logprob: -20.500003814697266
    4. '-' → logprob: -20.625003814697266
    5. '۱' → logprob: -21.000003814697266
    6. '１' → logprob: -21.125003814697266
    7. '  ' → logprob: -21.250003814697266
    8. '   ' → logprob: -21.250003814697266
    9. '१' → logprob: -21.750003814697266
    10. '+' → logprob: -22.250003814697266

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01756913773715496
    2. '       ' → logprob: -5.017569065093994
    3. ' min' → logprob: -5.267569065093994
    4. '   ' → logprob: -6.392569065093994
    5. '
' → logprob: -6.392569065093994
    6. 'min' → logprob: -7.267569065093994
    7. ' 
' → logprob: -7.892569065093994
    8. '    
' → logprob: -8.267569541931152
    9. '\n' → logprob: -8.267569541931152
    10. '<|end|>' → logprob: -8.642569541931152

Token 53: '       ' (ID: 309)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5952837467193604
    2. '
' → logprob: -0.9702837467193604
    3. ' min' → logprob: -3.4702837467193604
    4. '   ' → logprob: -3.8452837467193604
    5. '\n' → logprob: -5.470283508300781
    6. '	min' → logprob: -5.595283508300781
    7. '    
' → logprob: -5.720283508300781
    8. '       ' → logprob: -6.220283508300781
    9. '```' → logprob: -7.345283508300781
    10. '[min' → logprob: -7.595283508300781

Token 54: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.10038501769304276
    2. ' min' → logprob: -2.3503849506378174
    3. '       ' → logprob: -9.850384712219238
    4. '	min' → logprob: -9.975384712219238
    5. '   ' → logprob: -10.100384712219238
    6. '
' → logprob: -10.600384712219238
    7. '_min' → logprob: -12.850384712219238
    8. '(min' → logprob: -12.975384712219238
    9. '```' → logprob: -13.225384712219238
    10. ' ' → logprob: -13.850384712219238

Token 55: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -1.7432603272027336e-06
    2. '_NOW' → logprob: -14.750001907348633
    3. '_here' → logprob: -14.750001907348633
    4. '_' → logprob: -14.875001907348633
    5. '=_' → logprob: -15.625001907348633
    6. '_not' → logprob: -16.500001907348633
    7. 'now' → logprob: -16.875001907348633
    8. '```' → logprob: -16.875001907348633
    9. '_else' → logprob: -17.000001907348633
    10. ' _' → logprob: -17.375001907348633

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196824833750725
    2. '=' → logprob: -2.8119683265686035
    3. '=p' → logprob: -14.686967849731445
    4. ' ' → logprob: -16.811967849731445
    5. ' =
' → logprob: -16.811967849731445
    6. '＝' → logprob: -17.311967849731445
    7. ' =)' → logprob: -17.936967849731445
    8. '<|end|>' → logprob: -19.061967849731445
    9. ',' → logprob: -20.061967849731445
    10. ' ==' → logprob: -20.061967849731445

Token 57: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004078401252627373
    2. ' p' → logprob: -5.504078388214111
    3. '	p' → logprob: -19.504077911376953
    4. '<p' → logprob: -20.004077911376953
    5. '_p' → logprob: -20.129077911376953
    6. ' ' → logprob: -20.129077911376953
    7. ' ' → logprob: -21.129077911376953
    8. '   ' → logprob: -21.379077911376953
    9. '*p' → logprob: -21.629077911376953
    10. '$p' → logprob: -22.004077911376953

Token 58: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.4740966260433197
    2. '(' → logprob: -0.9740966558456421
    3. '()' → logprob: -11.349096298217773
    4. 'count' → logprob: -12.724096298217773
    5. '(
' → logprob: -13.349096298217773
    6. '(print' → logprob: -14.099096298217773
    7. '(len' → logprob: -14.599096298217773
    8. '(min' → logprob: -14.974096298217773
    9. ' (' → logprob: -15.099096298217773
    10. '(max' → logprob: -15.099096298217773

Token 61: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.250000953674316
    3. '))' → logprob: -16.000001907348633
    4. ')
' → logprob: -16.375001907348633
    5. '')' → logprob: -17.750001907348633
    6. '`)' → logprob: -18.125001907348633
    7. ')`' → logprob: -18.125001907348633
    8. '）' → logprob: -18.875001907348633
    9. '()' → logprob: -19.125001907348633
    10. '}' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 59
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 37.29%
Précision adaptée (1ère position): 40.68%
Précision (top 10): 77.97%
================================================================================
