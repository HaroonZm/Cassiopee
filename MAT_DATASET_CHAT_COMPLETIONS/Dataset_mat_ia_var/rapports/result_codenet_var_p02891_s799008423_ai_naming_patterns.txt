================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import itertools
import collections
import heapq
import re
import numpy as np

read_str_line = lambda: sys.stdin.readline().rstrip()
read_str_tokens = lambda: map(str, sys.stdin.buffer.readline().split())
read_int = lambda: int(sys.stdin.readline())
read_int_tokens = lambda: map(int, sys.stdin.buffer.readline().split())
read_int_list = lambda: list(map(int, sys.stdin.buffer.readline().split()))

input_str = read_str_line()
repeat_count = read_int()
pair_count_single = 0
index_single = 0

if len(set(input_str)) == 1:
    print(int(len(input_str) * repeat_count // 2))
    sys.exit()

while index_single < len(input_str) - 1:
    if input_str[index_single] == input_str[index_single + 1]:
        pair_count_single += 1
        index_single += 1
    index_single += 1

pair_count_double = 0
index_double = 0
double_str = input_str * 2

while index_double < len(double_str) - 1:
    if double_str[index_double] == double_str[index_double + 1]:
        pair_count_double += 1
        index_double += 1
    index_double += 1

result = (pair_count_double - pair_count_single) * (repeat_count - 1) + pair_count_single
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1524793654680252
    2. 'import' → logprob: -3.152479410171509
    3. '\' → logprob: -3.402479410171509
    4. '\n' → logprob: -3.777479410171509
    5. '
' → logprob: -4.02747917175293
    6. '

' → logprob: -5.02747917175293
    7. '```' → logprob: -5.27747917175293
    8. '<|end|>' → logprob: -5.40247917175293
    9. ',' → logprob: -5.90247917175293
    10. '<|end|>' → logprob: -6.90247917175293

Token 6: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.458339810371399
    2. '\n' → logprob: -1.458339810371399
    3. '.' → logprob: -1.583339810371399
    4. 'import' → logprob: -2.2083396911621094
    5. '

' → logprob: -2.3333396911621094
    6. '\' → logprob: -2.9583396911621094
    7. '```' → logprob: -3.2083396911621094
    8. '<|end|>' → logprob: -5.083339691162109
    9. ',' → logprob: -5.458339691162109
    10. '' → logprob: -5.583339691162109

Token 7: ' itertools' (ID: 103178)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.48839128017425537
    2. ' os' → logprob: -0.9883912801742554
    3. 'random' → logprob: -4.738391399383545
    4. ' random' → logprob: -5.488391399383545
    5. ' re' → logprob: -7.863391399383545
    6. 're' → logprob: -7.863391399383545
    7. ' numpy' → logprob: -8.988390922546387
    8. 'numpy' → logprob: -9.738390922546387
    9. 'collections' → logprob: -9.863390922546387
    10. ' statistics' → logprob: -9.988390922546387

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03388311713933945
    2. 'import' → logprob: -4.658883094787598
    3. '\n' → logprob: -4.908883094787598
    4. '```' → logprob: -5.033883094787598
    5. '\' → logprob: -5.283883094787598
    6. '<|end|>' → logprob: -6.783883094787598
    7. '
' → logprob: -7.158883094787598
    8. ' as' → logprob: -7.658883094787598
    9. '#' → logprob: -7.658883094787598
    10. '<|end|>' → logprob: -7.783883094787598

Token 9: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.054646413773298264
    2. 'import' → logprob: -4.3046464920043945
    3. '```' → logprob: -4.3046464920043945
    4. '\' → logprob: -5.3046464920043945
    5. '\n' → logprob: -5.5546464920043945
    6. '

' → logprob: -5.5546464920043945
    7. '<|end|>' → logprob: -5.6796464920043945
    8. '
' → logprob: -5.8046464920043945
    9. ',' → logprob: -6.0546464920043945
    10. '.

' → logprob: -6.6796464920043945

Token 10: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.3374612331390381
    2. 'os' → logprob: -2.462461233139038
    3. 'fun' → logprob: -2.587461233139038
    4. ' collections' → logprob: -2.712461233139038
    5. 'operator' → logprob: -3.712461233139038
    6. ' functools' → logprob: -4.087461471557617
    7. ' operator' → logprob: -4.962461471557617
    8. 'random' → logprob: -5.337461471557617
    9. ' os' → logprob: -6.212461471557617
    10. 'fra' → logprob: -6.462461471557617

Token 11: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3363651931285858
    2. 'import' → logprob: -2.211365222930908
    3. '\n' → logprob: -2.461365222930908
    4. '<|end|>' → logprob: -3.336365222930908
    5. '\' → logprob: -3.836365222930908
    6. '```' → logprob: -4.836365222930908
    7. '
' → logprob: -5.086365222930908
    8. '<|end|>' → logprob: -5.336365222930908
    9. '#' → logprob: -5.586365222930908
    10. '

' → logprob: -5.961365222930908

Token 12: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5350722670555115
    2. '\n' → logprob: -1.7850723266601562
    3. '```' → logprob: -2.7850723266601562
    4. 'from' → logprob: -3.0350723266601562
    5. '<|end|>' → logprob: -3.2850723266601562
    6. '.' → logprob: -3.9100723266601562
    7. '#' → logprob: -4.035072326660156
    8. '\' → logprob: -4.160072326660156
    9. '
' → logprob: -4.660072326660156
    10. 'as' → logprob: -4.785072326660156

Token 13: ' heap' (ID: 37237)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -1.0843486785888672
    2. 'heap' → logprob: -1.8343486785888672
    3. 'os' → logprob: -1.9593486785888672
    4. 'fun' → logprob: -2.209348678588867
    5. ' heap' → logprob: -2.334348678588867
    6. 'operator' → logprob: -3.084348678588867
    7. ' operator' → logprob: -3.209348678588867
    8. ' os' → logprob: -3.959348678588867
    9. 're' → logprob: -3.959348678588867
    10. 'random' → logprob: -4.584348678588867

Token 14: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.088346359931165e-07
    2. 'queue' → logprob: -14.875000953674316
    3. 't' → logprob: -15.625000953674316
    4. ' queue' → logprob: -15.750000953674316
    5. 'f' → logprob: -17.25
    6. 'u' → logprob: -17.625
    7. '_queue' → logprob: -17.875
    8. 'p' → logprob: -18.0
    9. 'Queue' → logprob: -18.0
    10. 's' → logprob: -18.75

Token 15: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.115128755569458
    2. '

' → logprob: -1.240128755569458
    3. '.' → logprob: -1.990128755569458
    4. 'import' → logprob: -1.990128755569458
    5. '<|end|>' → logprob: -3.115128755569458
    6. '\n' → logprob: -3.490128755569458
    7. '```' → logprob: -4.490128517150879
    8. '\' → logprob: -5.240128517150879
    9. ',' → logprob: -5.615128517150879
    10. '#' → logprob: -5.865128517150879

Token 16: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7178711295127869
    2. '
' → logprob: -1.0928711891174316
    3. 'import' → logprob: -2.3428711891174316
    4. '```' → logprob: -3.0928711891174316
    5. '\n' → logprob: -3.8428711891174316
    6. '\' → logprob: -5.842871189117432
    7. 'def' → logprob: -6.092871189117432
    8. '<|end|>' → logprob: -6.217871189117432
    9. 'from' → logprob: -6.592871189117432
    10. '
' → logprob: -6.967871189117432

Token 17: ' re' (ID: 322)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bis' → logprob: -1.1301120519638062
    2. ' operator' → logprob: -1.5051120519638062
    3. 'bis' → logprob: -1.6301120519638062
    4. ' functools' → logprob: -2.2551121711730957
    5. 'operator' → logprob: -2.5051121711730957
    6. 'random' → logprob: -3.2551121711730957
    7. ' random' → logprob: -5.005112171173096
    8. 'os' → logprob: -5.130112171173096
    9. 'copy' → logprob: -5.255112171173096
    10. ' threading' → logprob: -5.505112171173096

Token 18: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.37513235211372375
    2. 'import' → logprob: -1.8751323223114014
    3. '

' → logprob: -3.0001323223114014
    4. '
' → logprob: -3.3751323223114014
    5. '```' → logprob: -3.8751323223114014
    6. '<|end|>' → logprob: -3.8751323223114014
    7. '.' → logprob: -4.3751325607299805
    8. '#' → logprob: -5.2501325607299805
    9. '\' → logprob: -5.6251325607299805
    10. '' → logprob: -5.7501325607299805

Token 19: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1750073879957199
    2. 'import' → logprob: -2.6750073432922363
    3. '
' → logprob: -3.4250073432922363
    4. '```' → logprob: -3.9250073432922363
    5. '<|end|>' → logprob: -4.425007343292236
    6. '#' → logprob: -4.925007343292236
    7. 'n' → logprob: -5.425007343292236
    8. '

' → logprob: -5.550007343292236
    9. '\' → logprob: -5.675007343292236
    10. '' → logprob: -6.050007343292236

Token 20: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.7196184992790222
    2. 'os' → logprob: -1.094618558883667
    3. ' functools' → logprob: -2.344618558883667
    4. 'random' → logprob: -3.469618558883667
    5. 'fun' → logprob: -4.344618320465088
    6. ' random' → logprob: -4.844618320465088
    7. 'operator' → logprob: -5.219618320465088
    8. 'string' → logprob: -5.594618320465088
    9. ' operator' → logprob: -5.719618320465088
    10. 'json' → logprob: -5.844618320465088

Token 21: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03375185653567314
    2. ' as' → logprob: -3.533751964569092
    3. '<|end|>' → logprob: -6.158751964569092
    4. 'as' → logprob: -6.533751964569092
    5. '.ndarray' → logprob: -8.783751487731934
    6. '.random' → logprob: -10.033751487731934
    7. '.pyplot' → logprob: -10.158751487731934
    8. ' .' → logprob: -10.658751487731934
    9. '.as' → logprob: -10.658751487731934
    10. '<|end|>' → logprob: -10.783751487731934

Token 22: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.002708819229155779
    2. ' ' → logprob: -6.127708911895752
    3. ' numpy' → logprob: -8.127708435058594
    4. ' ndarray' → logprob: -8.752708435058594
    5. ' array' → logprob: -9.877708435058594
    6. ' ' → logprob: -12.127708435058594
    7. 'np' → logprob: -12.252708435058594
    8. ' nd' → logprob: -12.502708435058594
    9. ' n' → logprob: -14.002708435058594
    10. ' None' → logprob: -14.127708435058594

Token 23: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6147459149360657
    2. '<|end|>' → logprob: -1.864745855331421
    3. '.' → logprob: -2.489745855331421
    4. '\n' → logprob: -2.614745855331421
    5. 'import' → logprob: -2.864745855331421
    6. '```' → logprob: -3.114745855331421
    7. '

' → logprob: -4.11474609375
    8. '#' → logprob: -4.73974609375
    9. '\' → logprob: -4.98974609375
    10. '' → logprob: -5.48974609375

Token 24: 'read' (ID: 1293)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.873445987701416
    2. 'def' → logprob: -1.373445987701416
    3. 'd' → logprob: -1.998445987701416
    4. '.' → logprob: -2.998445987701416
    5. '\' → logprob: -3.498445987701416
    6. 'import' → logprob: -3.623445987701416
    7. '\n' → logprob: -3.873445987701416
    8. 'n' → logprob: -4.248445987701416
    9. 'class' → logprob: -4.623445987701416
    10. 'a' → logprob: -4.998445987701416

Token 25: '_str' (ID: 6182)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021154601126909256
    2. '_' → logprob: -3.8961546421051025
    3. ' (' → logprob: -7.896154403686523
    4. 's' → logprob: -9.771154403686523
    5. ' ' → logprob: -10.021154403686523
    6. 'r' → logprob: -10.396154403686523
    7. ')' → logprob: -10.646154403686523
    8. '_space' → logprob: -11.896154403686523
    9. '('' → logprob: -12.146154403686523
    10. '[' → logprob: -12.146154403686523

Token 26: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0233451128005981
    2. 'am' → logprob: -1.0233451128005981
    3. 'a' → logprob: -1.8983451128005981
    4. '()' → logprob: -2.6483449935913086
    5. 'ing' → logprob: -3.8983449935913086
    6. 'ad' → logprob: -4.398344993591309
    7. '_' → logprob: -4.648344993591309
    8. ' =' → logprob: -5.773344993591309
    9. '('' → logprob: -6.148344993591309
    10. '_a' → logprob: -6.273344993591309

Token 27: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06223767623305321
    2. '()' → logprob: -2.8122377395629883
    3. 's' → logprob: -9.187237739562988
    4. '(
' → logprob: -10.187237739562988
    5. '('' → logprob: -10.437237739562988
    6. 't' → logprob: -10.562237739562988
    7. '\(' → logprob: -11.187237739562988
    8. '=' → logprob: -11.437237739562988
    9. ' =' → logprob: -12.187237739562988
    10. '(

' → logprob: -12.312237739562988

Token 28: ' lambda' (ID: 27871)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5476805567741394
    2. ' lambda' → logprob: -1.4226806163787842
    3. 'input' → logprob: -2.172680616378784
    4. ' sys' → logprob: -2.922680616378784
    5. ' ' → logprob: -5.172680377960205
    6. 'lambda' → logprob: -5.172680377960205
    7. 'sys' → logprob: -6.422680377960205
    8. ' np' → logprob: -12.797680854797363
    9. ' raw' → logprob: -13.047680854797363
    10. '  ' → logprob: -13.172680854797363

Token 29: ':' (ID: 25)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6806602478027344
    2. ' :' → logprob: -1.3056602478027344
    3. ':' → logprob: -2.3056602478027344
    4. ' input' → logprob: -2.9306602478027344
    5. 'input' → logprob: -3.8056602478027344
    6. ' ' → logprob: -4.430660247802734
    7. 'sys' → logprob: -4.430660247802734
    8. ' s' → logprob: -4.680660247802734
    9. ' f' → logprob: -4.930660247802734
    10. 's' → logprob: -5.805660247802734

Token 30: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17551901936531067
    2. 'sys' → logprob: -2.1755189895629883
    3. ' input' → logprob: -3.3005189895629883
    4. ' sys' → logprob: -4.550518989562988
    5. '(sys' → logprob: -14.425518989562988
    6. 'str' → logprob: -14.550518989562988
    7. '(input' → logprob: -14.675518989562988
    8. 'raw' → logprob: -14.925518989562988
    9. ' ' → logprob: -15.050518989562988
    10. 'stdin' → logprob: -15.050518989562988

Token 31: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.1282007247209549
    2. '.' → logprob: -2.1282007694244385
    3. '.stdout' → logprob: -6.753200531005859
    4. '.argv' → logprob: -9.87820053100586
    5. '.readline' → logprob: -10.62820053100586
    6. '.std' → logprob: -10.62820053100586
    7. '.stderr' → logprob: -13.12820053100586
    8. ' .' → logprob: -14.75320053100586
    9. '.exit' → logprob: -14.87820053100586
    10. 'stdin' → logprob: -14.87820053100586

Token 32: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008723771199584007
    2. '.' → logprob: -4.758723735809326
    3. '.read' → logprob: -9.133724212646484
    4. ' readline' → logprob: -14.758724212646484
    5. '.readlines' → logprob: -15.133724212646484
    6. 'read' → logprob: -15.508724212646484
    7. '.Read' → logprob: -15.633724212646484
    8. '_read' → logprob: -16.008724212646484
    9. ' .' → logprob: -17.383724212646484
    10. '```' → logprob: -17.633724212646484

Token 33: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10062791407108307
    2. '().' → logprob: -2.350627899169922
    3. '(' → logprob: -7.850627899169922
    4. '()
' → logprob: -11.725627899169922
    5. ' ()' → logprob: -11.725627899169922
    6. '()\' → logprob: -11.725627899169922
    7. '()

' → logprob: -12.850627899169922
    8. '.' → logprob: -13.350627899169922
    9. '(),' → logprob: -14.850627899169922
    10. '（）' → logprob: -14.975627899169922

Token 34: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0052342405542731285
    2. 'rstrip' → logprob: -5.255234241485596
    3. 'str' → logprob: -15.755233764648438
    4. 'split' → logprob: -16.255233764648438
    5. 'read' → logprob: -16.630233764648438
    6. ' strip' → logprob: -16.630233764648438
    7. 'rst' → logprob: -17.130233764648438
    8. '_strip' → logprob: -17.755233764648438
    9. '```' → logprob: -18.505233764648438
    10. '-strip' → logprob: -19.255233764648438

Token 35: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04479411616921425
    2. '()' → logprob: -3.5447940826416016
    3. '(
' → logprob: -5.169794082641602
    4. '\n' → logprob: -5.294794082641602
    5. '
' → logprob: -6.669794082641602
    6. ')' → logprob: -7.294794082641602
    7. '\' → logprob: -7.419794082641602
    8. '#' → logprob: -8.169794082641602
    9. '\(' → logprob: -8.169794082641602
    10. ' (' → logprob: -8.294794082641602

Token 36: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.10667365789413452
    2. 'def' → logprob: -2.3566737174987793
    3. '\' → logprob: -6.356673717498779
    4. '\n' → logprob: -6.481673717498779
    5. '
' → logprob: -6.981673717498779
    6. '```' → logprob: -6.981673717498779
    7. '#' → logprob: -8.356673240661621
    8. 'n' → logprob: -8.606673240661621
    9. 'import' → logprob: -9.481673240661621
    10. '' → logprob: -9.481673240661621

Token 37: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.006989934481680393
    2. '_line' → logprob: -5.7569899559021
    3. '_' → logprob: -6.0069899559021
    4. '_int' → logprob: -7.0069899559021
    5. '_string' → logprob: -8.631989479064941
    6. '_val' → logprob: -10.131989479064941
    7. '_num' → logprob: -10.256989479064941
    8. '_char' → logprob: -10.506989479064941
    9. '_token' → logprob: -10.506989479064941
    10. '_raw' → logprob: -11.131989479064941

Token 38: '_tokens' (ID: 65830)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00032044618274085224
    2. 'line' → logprob: -8.375320434570312
    3. '_LINE' → logprob: -10.000320434570312
    4. 'ine' → logprob: -11.750320434570312
    5. '_' → logprob: -12.000320434570312
    6. '_lin' → logprob: -12.125320434570312
    7. '_lines' → logprob: -12.500320434570312
    8. '_lineno' → logprob: -12.500320434570312
    9. '_li' → logprob: -12.625320434570312
    10. '_l' → logprob: -12.750320434570312

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015089125372469425
    2. '=' → logprob: -6.501508712768555
    3. ' ' → logprob: -12.001508712768555
    4. '=lambda' → logprob: -15.126508712768555
    5. ' =
' → logprob: -16.126508712768555
    6. '＝' → logprob: -17.751508712768555
    7. ' ()' → logprob: -17.751508712768555
    8. ' ' → logprob: -17.751508712768555
    9. '	' → logprob: -18.126508712768555
    10. '  ' → logprob: -18.251508712768555

Token 40: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3904363512992859
    2. 'lambda' → logprob: -1.1404364109039307
    3. '(lambda' → logprob: -5.640436172485352
    4. '=lambda' → logprob: -12.015436172485352
    5. ' ' → logprob: -14.015436172485352
    6. ' lamb' → logprob: -15.140436172485352
    7. '_lambda' → logprob: -15.640436172485352
    8. ' λ' → logprob: -16.39043617248535
    9. '.lambda' → logprob: -17.01543617248535
    10. '(' → logprob: -17.14043617248535

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030903290957212448
    2. ' :' → logprob: -3.9059033393859863
    3. ' sys' → logprob: -4.905903339385986
    4. 'sys' → logprob: -6.780903339385986
    5. '():' → logprob: -6.905903339385986
    6. ' ' → logprob: -8.405902862548828
    7. 'lambda' → logprob: -8.530902862548828
    8. ' lambda' → logprob: -8.905902862548828
    9. '(sys' → logprob: -9.655902862548828
    10. '=sys' → logprob: -10.280902862548828

Token 42: ' map' (ID: 4014)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.38726115226745605
    2. ' sys' → logprob: -1.137261152267456
    3. 'read' → logprob: -8.262261390686035
    4. ' read' → logprob: -9.762261390686035
    5. 'list' → logprob: -10.137261390686035
    6. '(sys' → logprob: -11.512261390686035
    7. ' list' → logprob: -11.637261390686035
    8. 'input' → logprob: -12.387261390686035
    9. '	sys' → logprob: -12.512261390686035
    10. '=sys' → logprob: -13.012261390686035

Token 43: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.016356568783521652
    2. '(' → logprob: -4.266356468200684
    3. '(int' → logprob: -6.141356468200684
    4. 'str' → logprob: -10.391356468200684
    5. '(lambda' → logprob: -13.141356468200684
    6. '(
' → logprob: -13.891356468200684
    7. '(input' → logprob: -13.891356468200684
    8. '()' → logprob: -14.016356468200684
    9. '(sys' → logprob: -14.641356468200684
    10. '(eval' → logprob: -14.641356468200684

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001455832039937377
    2. ',int' → logprob: -7.001455783843994
    3. ',)' → logprob: -8.126456260681152
    4. ')' → logprob: -9.126456260681152
    5. ',str' → logprob: -9.876456260681152
    6. ',input' → logprob: -10.251456260681152
    7. ' ,' → logprob: -10.251456260681152
    8. ',:)' → logprob: -11.626456260681152
    9. ',line' → logprob: -13.626456260681152
    10. ',float' → logprob: -13.751456260681152

Token 45: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20373456180095673
    2. 'read' → logprob: -1.7037345170974731
    3. ' sys' → logprob: -6.453734397888184
    4. ' read' → logprob: -7.828734397888184
    5. 'input' → logprob: -8.078734397888184
    6. 'str' → logprob: -11.078734397888184
    7. ')' → logprob: -11.828734397888184
    8. ' input' → logprob: -12.328734397888184
    9. '(sys' → logprob: -13.203734397888184
    10. '=sys' → logprob: -13.328734397888184

Token 46: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.7372048862162046e-05
    2. 'stdin' → logprob: -11.625027656555176
    3. '.' → logprob: -11.750027656555176
    4. '.stdout' → logprob: -12.000027656555176
    5. '.argv' → logprob: -12.625027656555176
    6. '.std' → logprob: -14.125027656555176
    7. '.readline' → logprob: -16.12502670288086
    8. ' stdin' → logprob: -16.75002670288086
    9. '.stderr' → logprob: -17.12502670288086
    10. '.in' → logprob: -17.37502670288086

Token 47: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00010020548506872728
    2. '.' → logprob: -9.375100135803223
    3. '.stdin' → logprob: -11.875100135803223
    4. ' .' → logprob: -12.375100135803223
    5. '.read' → logprob: -13.125100135803223
    6. '.readlines' → logprob: -13.125100135803223
    7. ')' → logprob: -16.50010108947754
    8. ').' → logprob: -18.37510108947754
    9. ' readline' → logprob: -18.37510108947754
    10. ' )' → logprob: -18.62510108947754

Token 48: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.012573814950883389
    2. '.read' → logprob: -4.387573719024658
    3. '.readlines' → logprob: -10.137574195861816
    4. '.decode' → logprob: -11.012574195861816
    5. '.' → logprob: -12.762574195861816
    6. ' readline' → logprob: -13.512574195861816
    7. '._' → logprob: -13.887574195861816
    8. '.peek' → logprob: -14.512574195861816
    9. ')' → logprob: -14.762574195861816
    10. ' .' → logprob: -15.137574195861816

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01262795552611351
    2. '())' → logprob: -4.637628078460693
    3. '()' → logprob: -5.887628078460693
    4. '()).' → logprob: -10.137627601623535
    5. ')' → logprob: -10.762627601623535
    6. '(),' → logprob: -11.887627601623535
    7. ' ().' → logprob: -11.887627601623535
    8. '(' → logprob: -12.012627601623535
    9. ' ())' → logprob: -12.387627601623535
    10. '().__' → logprob: -13.137627601623535

Token 50: 'split' (ID: 13627)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.12418258190155029
    2. 'split' → logprob: -2.87418270111084
    3. 'decode' → logprob: -2.87418270111084
    4. 'strip' → logprob: -5.62418270111084
    5. 'read' → logprob: -8.37418270111084
    6. 'raw' → logprob: -11.24918270111084
    7. '```' → logprob: -13.62418270111084
    8. '.rstrip' → logprob: -14.99918270111084
    9. ')' → logprob: -14.99918270111084
    10. ' readline' → logprob: -15.24918270111084

Token 51: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014400540851056576
    2. '()' → logprob: -4.264400482177734
    3. ')' → logprob: -8.639400482177734
    4. '(' → logprob: -10.639400482177734
    5. ' ())' → logprob: -11.139400482177734
    6. '())
' → logprob: -11.514400482177734
    7. '()))' → logprob: -12.139400482177734
    8. '()]' → logprob: -13.514400482177734
    9. '(),' → logprob: -13.889400482177734
    10. '();)' → logprob: -14.264400482177734

Token 52: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.007879876531660557
    2. '
' → logprob: -5.757879734039307
    3. ' 
' → logprob: -6.382879734039307
    4. 'r' → logprob: -6.757879734039307
    5. '```' → logprob: -7.632879734039307
    6. '  
' → logprob: -8.257880210876465
    7. '(read' → logprob: -8.257880210876465
    8. 'def' → logprob: -8.757880210876465
    9. ' read' → logprob: -9.507880210876465
    10. '' → logprob: -9.882880210876465

Token 53: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.5915691256523132
    2. '_str' → logprob: -0.8415691256523132
    3. '_' → logprob: -4.216568946838379
    4. '_tokens' → logprob: -7.966568946838379
    5. '_float' → logprob: -9.716568946838379
    6. '_i' → logprob: -9.716568946838379
    7. '_val' → logprob: -9.841568946838379
    8. '_in' → logprob: -10.091568946838379
    9. '_uint' → logprob: -10.341568946838379
    10. '_num' → logprob: -10.591568946838379

Token 54: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3500353991985321
    2. '()' → logprob: -1.9750354290008545
    3. '=' → logprob: -2.7250354290008545
    4. '_line' → logprob: -2.8500354290008545
    5. ' =' → logprob: -4.100035190582275
    6. '_' → logprob: -5.100035190582275
    7. '_s' → logprob: -5.475035190582275
    8. '_tokens' → logprob: -5.725035190582275
    9. 'line' → logprob: -7.475035190582275
    10. '_list' → logprob: -7.600035190582275

Token 55: ' lambda' (ID: 27871)
  Prédit: ' ()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ()' → logprob: -0.5339430570602417
    2. '()' → logprob: -1.1589430570602417
    3. ' lambda' → logprob: -3.2839431762695312
    4. 'int' → logprob: -3.9089431762695312
    5. 'lambda' → logprob: -4.408943176269531
    6. '(lambda' → logprob: -4.908943176269531
    7. ' int' → logprob: -5.158943176269531
    8. ' =' → logprob: -5.408943176269531
    9. ' ' → logprob: -5.533943176269531
    10. '(int' → logprob: -5.658943176269531

Token 56: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5978448390960693
    2. ':' → logprob: -1.3478448390960693
    3. ' :' → logprob: -2.3478448390960693
    4. '()' → logprob: -2.5978448390960693
    5. ' ()' → logprob: -4.597845077514648
    6. ' ():' → logprob: -5.097845077514648
    7. ':int' → logprob: -6.222845077514648
    8. ' ' → logprob: -6.847845077514648
    9. 'int' → logprob: -7.722845077514648
    10. '(int' → logprob: -8.972845077514648

Token 57: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1602286994457245
    2. 'int' → logprob: -1.9102287292480469
    3. '	int' → logprob: -12.785228729248047
    4. ' ' → logprob: -14.160228729248047
    5. '(int' → logprob: -14.535228729248047
    6. ' map' → logprob: -15.660228729248047
    7. '<int' → logprob: -16.035228729248047
    8. '=int' → logprob: -16.410228729248047
    9. '[int' → logprob: -16.910228729248047
    10. ' ' → logprob: -17.160228729248047

Token 58: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933962106704712
    2. '(sys' → logprob: -0.6933962106704712
    3. '(read' → logprob: -8.56839656829834
    4. '(
' → logprob: -11.44339656829834
    5. '()' → logprob: -11.56839656829834
    6. 'sys' → logprob: -11.56839656829834
    7. ' (' → logprob: -11.94339656829834
    8. '(ord' → logprob: -11.94339656829834
    9. '(Sys' → logprob: -12.56839656829834
    10. '(s' → logprob: -13.44339656829834

Token 59: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00015753143816255033
    2. '.' → logprob: -9.000157356262207
    3. '.readline' → logprob: -10.625157356262207
    4. '.stdout' → logprob: -12.250157356262207
    5. '.argv' → logprob: -13.125157356262207
    6. 'stdin' → logprob: -13.500157356262207
    7. '.std' → logprob: -14.250157356262207
    8. '._' → logprob: -15.250157356262207
    9. ' stdin' → logprob: -15.625157356262207
    10. '.read' → logprob: -15.875157356262207

Token 60: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009711332386359572
    2. '.read' → logprob: -7.37597131729126
    3. '.' → logprob: -8.375970840454102
    4. '.stdin' → logprob: -9.125970840454102
    5. '.buffer' → logprob: -12.375970840454102
    6. ' .' → logprob: -14.375970840454102
    7. '.Read' → logprob: -15.750970840454102
    8. 'read' → logprob: -16.8759708404541
    9. '.stdout' → logprob: -16.8759708404541
    10. ' readline' → logprob: -17.0009708404541

Token 61: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03211555629968643
    2. '()' → logprob: -4.032115459442139
    3. '().' → logprob: -4.282115459442139
    4. ' ())' → logprob: -10.032115936279297
    5. ')' → logprob: -12.782115936279297
    6. '();)' → logprob: -13.032115936279297
    7. '())
' → logprob: -13.782115936279297
    8. '()]' → logprob: -13.782115936279297
    9. ' ()' → logprob: -14.157115936279297
    10. '())

' → logprob: -14.282115936279297

Token 62: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.047488000243902206
    2. '()' → logprob: -4.047488212585449
    3. '(read' → logprob: -4.422488212585449
    4. '(' → logprob: -5.797488212585449
    5. '\n' → logprob: -6.047488212585449
    6. '
' → logprob: -6.172488212585449
    7. ' read' → logprob: -6.672488212585449
    8. '_' → logprob: -6.797488212585449
    9. '(
' → logprob: -6.797488212585449
    10. '```' → logprob: -6.797488212585449

Token 63: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5879182815551758
    2. '_int' → logprob: -1.0879182815551758
    3. '_uint' → logprob: -3.462918281555176
    4. '_str' → logprob: -3.712918281555176
    5. '_float' → logprob: -4.837918281555176
    6. '_tokens' → logprob: -4.837918281555176
    7. '_in' → logprob: -5.837918281555176
    8. '_line' → logprob: -5.837918281555176
    9. '_string' → logprob: -5.962918281555176
    10. '_s' → logprob: -6.087918281555176

Token 64: '_tokens' (ID: 65830)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013114250032231212
    2. 's' → logprob: -6.876311302185059
    3. '(' → logprob: -9.376311302185059
    4. ' ()' → logprob: -10.626311302185059
    5. '_' → logprob: -10.751311302185059
    6. '_line' → logprob: -10.876311302185059
    7. '()
' → logprob: -11.001311302185059
    8. '()\' → logprob: -11.126311302185059
    9. '_list' → logprob: -11.251311302185059
    10. '()

' → logprob: -11.376311302185059

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024764856789261103
    2. '=' → logprob: -6.002476692199707
    3. ' ' → logprob: -14.627476692199707
    4. '(' → logprob: -16.25247573852539
    5. '=lambda' → logprob: -16.25247573852539
    6. '＝' → logprob: -17.25247573852539
    7. ' ' → logprob: -17.50247573852539
    8. ' =
' → logprob: -17.62747573852539
    9. ' =)' → logprob: -18.12747573852539
    10. 'space' → logprob: -18.12747573852539

Token 66: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.08190996944904327
    2. 'lambda' → logprob: -2.5819098949432373
    3. '(lambda' → logprob: -5.831910133361816
    4. '=lambda' → logprob: -9.706910133361816
    5. ' lamb' → logprob: -11.831910133361816
    6. '()' → logprob: -12.331910133361816
    7. ' =' → logprob: -12.956910133361816
    8. ' map' → logprob: -13.581910133361816
    9. ' ()' → logprob: -13.831910133361816
    10. ' λ' → logprob: -13.831910133361816

Token 67: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062118589878082275
    2. ' :' → logprob: -2.8121185302734375
    3. '():' → logprob: -9.062118530273438
    4. ' ' → logprob: -10.687118530273438
    5. ' =' → logprob: -12.562118530273438
    6. '(lambda' → logprob: -13.312118530273438
    7. '=' → logprob: -13.562118530273438
    8. '()' → logprob: -13.562118530273438
    9. ' lambda' → logprob: -13.562118530273438
    10. '=lambda' → logprob: -14.187118530273438

Token 68: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5762772560119629
    2. 'map' → logprob: -0.8262772560119629
    3. 'list' → logprob: -8.951276779174805
    4. ' list' → logprob: -9.326276779174805
    5. ' ' → logprob: -9.826276779174805
    6. ' tuple' → logprob: -11.076276779174805
    7. 'm' → logprob: -11.201276779174805
    8. 'int' → logprob: -11.951276779174805
    9. '	map' → logprob: -11.951276779174805
    10. 'lambda' → logprob: -12.076276779174805

Token 69: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000918604782782495
    2. '(' → logprob: -7.000918388366699
    3. '(lambda' → logprob: -13.0009183883667
    4. 'int' → logprob: -13.2509183883667
    5. '(str' → logprob: -13.5009183883667
    6. '<int' → logprob: -13.5009183883667
    7. '(
' → logprob: -15.8759183883667
    8. '=int' → logprob: -16.625919342041016
    9. '[int' → logprob: -17.250919342041016
    10. ' int' → logprob: -17.250919342041016

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.553032628493384e-05
    2. '(sys' → logprob: -9.875075340270996
    3. ' ,' → logprob: -10.750075340270996
    4. 'sys' → logprob: -14.250075340270996
    5. ')' → logprob: -14.750075340270996
    6. ',s' → logprob: -15.250075340270996
    7. '(' → logprob: -15.375075340270996
    8. ',(' → logprob: -15.625075340270996
    9. '，' → logprob: -15.750075340270996
    10. '=sys' → logprob: -16.000076293945312

Token 71: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.11288684606552124
    2. ' sys' → logprob: -2.237886905670166
    3. '(sys' → logprob: -10.737886428833008
    4. '	sys' → logprob: -11.237886428833008
    5. ')' → logprob: -11.487886428833008
    6. '=sys' → logprob: -11.612886428833008
    7. ' ' → logprob: -12.237886428833008
    8. 'str' → logprob: -13.862886428833008
    9. 's' → logprob: -14.237886428833008
    10. ' )' → logprob: -14.362886428833008

Token 72: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.9153885558771435e-06
    2. '.stdout' → logprob: -12.500005722045898
    3. 'stdin' → logprob: -13.375005722045898
    4. '.argv' → logprob: -14.625005722045898
    5. '.std' → logprob: -17.1250057220459
    6. '.stderr' → logprob: -17.3750057220459
    7. '.' → logprob: -17.7500057220459
    8. ' .' → logprob: -18.0000057220459
    9. '(stdin' → logprob: -18.5000057220459
    10. '.readline' → logprob: -19.0000057220459

Token 73: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.13080516457557678
    2. '()' → logprob: -2.255805253982544
    3. '())' → logprob: -4.130805015563965
    4. '().' → logprob: -7.130805015563965
    5. ')' → logprob: -7.630805015563965
    6. '.buffer' → logprob: -9.005805015563965
    7. '.' → logprob: -9.255805015563965
    8. '.stdin' → logprob: -10.130805015563965
    9. ' .' → logprob: -10.380805015563965
    10. ' ()' → logprob: -10.505805015563965

Token 74: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.225939872208983e-05
    2. '.read' → logprob: -11.125032424926758
    3. '.readlines' → logprob: -11.500032424926758
    4. '().' → logprob: -12.125032424926758
    5. ')' → logprob: -14.375032424926758
    6. '.split' → logprob: -14.625032424926758
    7. ').' → logprob: -15.000032424926758
    8. '.' → logprob: -15.250032424926758
    9. '.write' → logprob: -16.250032424926758
    10. ' readline' → logprob: -16.625032424926758

Token 75: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0014067788142710924
    2. '()' → logprob: -7.001406669616699
    3. '())' → logprob: -7.626406669616699
    4. ')' → logprob: -12.5014066696167
    5. '.split' → logprob: -13.7514066696167
    6. ' ().' → logprob: -14.1264066696167
    7. '()[' → logprob: -14.3764066696167
    8. '()).' → logprob: -14.5014066696167
    9. '()
' → logprob: -15.8764066696167
    10. '.' → logprob: -15.8764066696167

Token 76: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.253090865968261e-06
    2. ' split' → logprob: -11.875009536743164
    3. ')' → logprob: -13.375009536743164
    4. 'strip' → logprob: -15.125009536743164
    5. 'decode' → logprob: -15.625009536743164
    6. '(split' → logprob: -15.875009536743164
    7. 'rstrip' → logprob: -16.250009536743164
    8. 'spl' → logprob: -17.125009536743164
    9. '.split' → logprob: -17.625009536743164
    10. '())' → logprob: -18.875009536743164

Token 77: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38752153515815735
    2. '())' → logprob: -1.387521505355835
    3. '()' → logprob: -2.637521505355835
    4. '))' → logprob: -11.637521743774414
    5. '()
' → logprob: -11.887521743774414
    6. '())
' → logprob: -12.637521743774414
    7. '`)' → logprob: -13.137521743774414
    8. ' ())' → logprob: -13.137521743774414
    9. '(' → logprob: -13.387521743774414
    10. ' )' → logprob: -13.512521743774414

Token 78: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0016632776241749525
    2. 'def' → logprob: -7.1266632080078125
    3. '
' → logprob: -7.5016632080078125
    4. '\n' → logprob: -10.251663208007812
    5. 'print' → logprob: -10.376663208007812
    6. '#' → logprob: -10.501663208007812
    7. 'write' → logprob: -10.626663208007812
    8. 'newline' → logprob: -10.751663208007812
    9. '```' → logprob: -10.751663208007812
    10. ')' → logprob: -11.126663208007812

Token 79: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.862183153629303
    2. '_str' → logprob: -1.3621830940246582
    3. '_float' → logprob: -1.4871830940246582
    4. '_array' → logprob: -3.612183094024658
    5. '_' → logprob: -3.737183094024658
    6. '_uint' → logprob: -3.987183094024658
    7. '_list' → logprob: -4.737183094024658
    8. '_tokens' → logprob: -5.862183094024658
    9. '_long' → logprob: -6.362183094024658
    10. '_string' → logprob: -6.487183094024658

Token 80: '_list' (ID: 4162)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.23735062777996063
    2. '()' → logprob: -2.2373507022857666
    3. 's' → logprob: -2.3623507022857666
    4. '_' → logprob: -5.2373504638671875
    5. '<|end|>' → logprob: -5.6123504638671875
    6. 'tokens' → logprob: -8.487350463867188
    7. '_list' → logprob: -8.612350463867188
    8. '_s' → logprob: -8.612350463867188
    9. '_lines' → logprob: -8.862350463867188
    10. '_line' → logprob: -9.487350463867188

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04301734268665314
    2. '=' → logprob: -3.1680173873901367
    3. 's' → logprob: -12.168017387390137
    4. '=lambda' → logprob: -12.543017387390137
    5. '_' → logprob: -12.793017387390137
    6. '＝' → logprob: -13.418017387390137
    7. 'space' → logprob: -14.043017387390137
    8. '(' → logprob: -14.168017387390137
    9. '[' → logprob: -14.293017387390137
    10. '	' → logprob: -14.418017387390137

Token 82: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3372350037097931
    2. 'lambda' → logprob: -1.3372349739074707
    3. '(lambda' → logprob: -4.337234973907471
    4. ' =' → logprob: -5.087234973907471
    5. '=lambda' → logprob: -5.462234973907471
    6. 'ambda' → logprob: -9.337235450744629
    7. '=' → logprob: -9.587235450744629
    8. ' (' → logprob: -11.462235450744629
    9. 'list' → logprob: -12.087235450744629
    10. '_lambda' → logprob: -12.087235450744629

Token 83: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20781098306179047
    2. ' :' → logprob: -1.8328109979629517
    3. '(lambda' → logprob: -3.957810878753662
    4. ':list' → logprob: -5.707810878753662
    5. '():' → logprob: -6.707810878753662
    6. '(' → logprob: -6.957810878753662
    7. ' (' → logprob: -7.332810878753662
    8. '(list' → logprob: -7.707810878753662
    9. 'list' → logprob: -8.08281135559082
    10. 'lambda' → logprob: -8.08281135559082

Token 84: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01417420245707035
    2. ' list' → logprob: -4.264173984527588
    3. '[list' → logprob: -12.139174461364746
    4. 'map' → logprob: -12.514174461364746
    5. '[' → logprob: -14.264174461364746
    6. '	list' → logprob: -15.139174461364746
    7. '(list' → logprob: -15.389174461364746
    8. ':list' → logprob: -15.639174461364746
    9. '=list' → logprob: -16.26417350769043
    10. 'lambda' → logprob: -16.76417350769043

Token 85: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.02109425887465477
    2. '(' → logprob: -4.39609432220459
    3. '(read' → logprob: -5.02109432220459
    4. '(int' → logprob: -6.27109432220459
    5. '(np' → logprob: -10.27109432220459
    6. '()' → logprob: -11.27109432220459
    7. '(s' → logprob: -13.27109432220459
    8. '(sys' → logprob: -13.52109432220459
    9. '(convert' → logprob: -13.77109432220459
    10. '(eval' → logprob: -14.02109432220459

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.991464786347933e-05
    2. 'int' → logprob: -10.000060081481934
    3. '(' → logprob: -11.750060081481934
    4. '<int' → logprob: -12.500060081481934
    5. '=int' → logprob: -13.875060081481934
    6. ',int' → logprob: -14.375060081481934
    7. ']int' → logprob: -14.625060081481934
    8. ' int' → logprob: -15.000060081481934
    9. '[int' → logprob: -15.000060081481934
    10. ':int' → logprob: -16.125059127807617

Token 87: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.14510317146778107
    2. ',' → logprob: -2.0201032161712646
    3. '(read' → logprob: -6.7701029777526855
    4. '(' → logprob: -6.8951029777526855
    5. 'sys' → logprob: -9.270103454589844
    6. ',(' → logprob: -10.145103454589844
    7. ' ,' → logprob: -10.520103454589844
    8. '(),' → logprob: -10.770103454589844
    9. '=sys' → logprob: -11.020103454589844
    10. ')' → logprob: -11.145103454589844

Token 88: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6328310966491699
    2. ' sys' → logprob: -0.7578310966491699
    3. '(sys' → logprob: -8.757831573486328
    4. '	sys' → logprob: -10.132831573486328
    5. '=sys' → logprob: -11.632831573486328
    6. ' ' → logprob: -11.632831573486328
    7. 'read' → logprob: -12.882831573486328
    8. ' read' → logprob: -13.257831573486328
    9. ')' → logprob: -13.257831573486328
    10. '   ' → logprob: -13.820331573486328

Token 89: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0015572358388453722
    2. '.readline' → logprob: -7.001557350158691
    3. '.stdout' → logprob: -7.501557350158691
    4. '.' → logprob: -10.501557350158691
    5. '.buffer' → logprob: -10.626557350158691
    6. 'stdin' → logprob: -10.751557350158691
    7. '._' → logprob: -12.126557350158691
    8. '.stderr' → logprob: -12.376557350158691
    9. ' .' → logprob: -12.626557350158691
    10. '(stdin' → logprob: -12.876557350158691

Token 90: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00016158436483237892
    2. '().' → logprob: -9.500161170959473
    3. '.buffer' → logprob: -10.125161170959473
    4. '.stdin' → logprob: -11.500161170959473
    5. '_list' → logprob: -11.625161170959473
    6. '.read' → logprob: -11.875161170959473
    7. '.readlines' → logprob: -12.250161170959473
    8. '.' → logprob: -12.500161170959473
    9. '))' → logprob: -13.125161170959473
    10. '_buffer' → logprob: -13.125161170959473

Token 91: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.463036435074173e-05
    2. '().' → logprob: -11.875024795532227
    3. '.readlines' → logprob: -12.000024795532227
    4. '.read' → logprob: -12.125024795532227
    5. '.' → logprob: -12.250024795532227
    6. ')' → logprob: -14.125024795532227
    7. ').' → logprob: -15.625024795532227
    8. ' .' → logprob: -15.875024795532227
    9. '.decode' → logprob: -16.625024795532227
    10. ' readline' → logprob: -16.750024795532227

Token 92: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.013376088812947273
    2. '()' → logprob: -4.388376235961914
    3. '()))' → logprob: -7.638376235961914
    4. '())' → logprob: -7.888376235961914
    5. ')' → logprob: -12.513376235961914
    6. '()[' → logprob: -13.513376235961914
    7. '))' → logprob: -13.763376235961914
    8. ' ()' → logprob: -14.763376235961914
    9. ' ().' → logprob: -14.888376235961914
    10. '())))' → logprob: -14.888376235961914

Token 93: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000748994410969317
    2. 'rstrip' → logprob: -7.250749111175537
    3. 'strip' → logprob: -10.875748634338379
    4. ' split' → logprob: -12.000748634338379
    5. ')' → logprob: -12.125748634338379
    6. 'decode' → logprob: -12.500748634338379
    7. 'read' → logprob: -13.125748634338379
    8. 'spl' → logprob: -14.250748634338379
    9. '(split' → logprob: -14.625748634338379
    10. '())' → logprob: -14.750748634338379

Token 94: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03354703634977341
    2. '))' → logprob: -3.7835469245910645
    3. '())' → logprob: -5.0335469245910645
    4. '()' → logprob: -5.6585469245910645
    5. ')' → logprob: -9.033547401428223
    6. '()))
' → logprob: -9.158547401428223
    7. '(' → logprob: -11.408547401428223
    8. '())
' → logprob: -13.283547401428223
    9. '()))

' → logprob: -13.783547401428223
    10. '())).' → logprob: -13.908547401428223

Token 95: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10934761166572571
    2. 'n' → logprob: -2.6093475818634033
    3. 'class' → logprob: -4.609347820281982
    4. 'N' → logprob: -4.859347820281982
    5. 'd' → logprob: -5.234347820281982
    6. '#' → logprob: -5.609347820281982
    7. '\' → logprob: -6.734347820281982
    8. 'A' → logprob: -7.359347820281982
    9. 'a' → logprob: -7.859347820281982
    10. '\n' → logprob: -8.359347343444824

Token 96: '_str' (ID: 6182)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014778443146497011
    2. '(' → logprob: -6.6264777183532715
    3. '=' → logprob: -9.50147819519043
    4. ' =' → logprob: -10.12647819519043
    5. '()
' → logprob: -11.87647819519043
    6. ' ()' → logprob: -11.87647819519043
    7. '_' → logprob: -12.50147819519043
    8. '().' → logprob: -12.75147819519043
    9. '("")' → logprob: -12.87647819519043
    10. '();' → logprob: -13.00147819519043

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0395582914352417
    2. ' =' → logprob: -1.0395582914352417
    3. '()' → logprob: -1.9145582914352417
    4. '_line' → logprob: -2.0395584106445312
    5. '_' → logprob: -4.664558410644531
    6. 'line' → logprob: -5.289558410644531
    7. '(' → logprob: -8.914558410644531
    8. '=line' → logprob: -9.164558410644531
    9. '_tokens' → logprob: -9.289558410644531
    10. '_lines' → logprob: -9.539558410644531

Token 98: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.43114861845970154
    2. 'sys' → logprob: -1.181148648262024
    3. 'input' → logprob: -4.306148529052734
    4. ' sys' → logprob: -4.431148529052734
    5. ' read' → logprob: -5.181148529052734
    6. '()' → logprob: -5.181148529052734
    7. '(sys' → logprob: -5.431148529052734
    8. '""' → logprob: -7.681148529052734
    9. ' input' → logprob: -7.806148529052734
    10. '(read' → logprob: -7.931148529052734

Token 99: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0002639582962729037
    2. '_' → logprob: -8.250264167785645
    3. '_int' → logprob: -13.125264167785645
    4. '_line' → logprob: -14.625264167785645
    5. '_st' → logprob: -17.000263214111328
    6. '_string' → logprob: -17.750263214111328
    7. '__' → logprob: -18.125263214111328
    8. 'str' → logprob: -18.250263214111328
    9. '_Str' → logprob: -18.375263214111328
    10. '_s' → logprob: -18.750263214111328

Token 100: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.816093228830141e-06
    2. '_list' → logprob: -13.87500286102295
    3. '_' → logprob: -14.00000286102295
    4. 'line' → logprob: -14.25000286102295
    5. '_l' → logprob: -15.87500286102295
    6. '_LINE' → logprob: -16.000001907348633
    7. '_lin' → logprob: -16.375001907348633
    8. '_token' → logprob: -18.625001907348633
    9. '_Line' → logprob: -18.625001907348633
    10. 'Line' → logprob: -18.750001907348633

Token 101: '()
' (ID: 1234)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.492186188697815
    2. '.split' → logprob: -1.492186188697815
    3. '=' → logprob: -2.1171860694885254
    4. '_' → logprob: -2.6171860694885254
    5. '()' → logprob: -3.1171860694885254
    6. '.' → logprob: -3.4921860694885254
    7. '#' → logprob: -3.6171860694885254
    8. '
' → logprob: -3.7421860694885254
    9. ' ' → logprob: -3.7421860694885254
    10. '.strip' → logprob: -3.8671860694885254

Token 102: 'repeat' (ID: 63242)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.475340485572815
    2. '<|end|>' → logprob: -1.475340485572815
    3. ')' → logprob: -2.4753403663635254
    4. ' ' → logprob: -2.7253403663635254
    5. '[' → logprob: -2.8503403663635254
    6. 'a' → logprob: -2.9753403663635254
    7. 'if' → logprob: -3.1003403663635254
    8. '_' → logprob: -3.6003403663635254
    9. '\n' → logprob: -3.6003403663635254
    10. '#' → logprob: -3.7253403663635254

Token 103: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.7466595768928528
    2. 'd' → logprob: -0.8716595768928528
    3. ' =' → logprob: -3.496659517288208
    4. '_' → logprob: -3.996659517288208
    5. 'ed' → logprob: -4.121659755706787
    6. 's' → logprob: -4.246659755706787
    7. '_cnt' → logprob: -4.246659755706787
    8. '_len' → logprob: -5.621659755706787
    9. '_times' → logprob: -5.996659755706787
    10. '=' → logprob: -5.996659755706787

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02714410424232483
    2. '=' → logprob: -3.777144193649292
    3. ' ' → logprob: -5.902143955230713
    4. '_' → logprob: -6.902143955230713
    5. 's' → logprob: -9.027144432067871
    6. ' _' → logprob: -11.652144432067871
    7. '_space' → logprob: -12.027144432067871
    8. ',' → logprob: -12.652144432067871
    9. ' +=' → logprob: -12.777144432067871
    10. '  ' → logprob: -12.902144432067871

Token 105: ' read' (ID: 1729)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4123566150665283
    2. ' read' → logprob: -1.4123566150665283
    3. 'int' → logprob: -2.5373566150665283
    4. 'read' → logprob: -5.037356376647949
    5. ' ' → logprob: -5.037356376647949
    6. ' len' → logprob: -6.787356376647949
    7. '0' → logprob: -7.787356376647949
    8. '10' → logprob: -7.912356376647949
    9. ' input' → logprob: -9.41235637664795
    10. '5' → logprob: -9.78735637664795

Token 106: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0002394170151092112
    2. '_' → logprob: -8.375239372253418
    3. '_in' → logprob: -12.750239372253418
    4. '_str' → logprob: -13.000239372253418
    5. ' _' → logprob: -13.750239372253418
    6. 'int' → logprob: -14.125239372253418
    7. '_uint' → logprob: -14.250239372253418
    8. '_i' → logprob: -15.375239372253418
    9. '_count' → logprob: -15.375239372253418
    10. '_INT' → logprob: -15.625239372253418

Token 107: '()
' (ID: 1234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10733625292778015
    2. 'result' → logprob: -2.4823362827301025
    3. ' for' → logprob: -5.232336044311523
    4. 'output' → logprob: -5.357336044311523
    5. '
' → logprob: -5.607336044311523
    6. 'tokens' → logprob: -6.357336044311523
    7. ')' → logprob: -7.982336044311523
    8. 's' → logprob: -8.107336044311523
    9. 'results' → logprob: -8.232336044311523
    10. '()' → logprob: -8.732336044311523

Token 108: 'pair' (ID: 25488)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.19777823984622955
    2. 'for' → logprob: -2.1977782249450684
    3. 'output' → logprob: -2.6977782249450684
    4. 'results' → logprob: -7.947778224945068
    5. 'res' → logprob: -8.447778701782227
    6. 'answer' → logprob: -9.072778701782227
    7. 'chars' → logprob: -9.697778701782227
    8. 'print' → logprob: -10.072778701782227
    9. 'tokens' → logprob: -10.072778701782227
    10. 'counter' → logprob: -10.447778701782227

Token 109: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0033837456721812487
    2. '_s' → logprob: -6.378383636474609
    3. '_list' → logprob: -6.878383636474609
    4. ' =' → logprob: -7.878383636474609
    5. '_' → logprob: -8.75338363647461
    6. '_count' → logprob: -10.50338363647461
    7. '_index' → logprob: -11.37838363647461
    8. 'wise' → logprob: -11.50338363647461
    9. ' s' → logprob: -11.62838363647461
    10. '_tokens' → logprob: -11.62838363647461

Token 110: '_single' (ID: 46053)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007124318508431315
    2. '=' → logprob: -7.2507123947143555
    3. ' ' → logprob: -13.125712394714355
    4. ' =
' → logprob: -15.500712394714355
    5. ' ' → logprob: -15.875712394714355
    6. ',' → logprob: -17.000713348388672
    7. ' ,' → logprob: -17.125713348388672
    8. '=int' → logprob: -17.500713348388672
    9. ' =)' → logprob: -17.500713348388672
    10. 's' → logprob: -17.750713348388672

Token 111: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27892813086509705
    2. ' =' → logprob: -1.7789281606674194
    3. '=' → logprob: -2.65392804145813
    4. 'ton' → logprob: -6.778928279876709
    5. '_tokens' → logprob: -6.903928279876709
    6. '_' → logprob: -7.403928279876709
    7. '_line' → logprob: -8.02892780303955
    8. 'tons' → logprob: -8.02892780303955
    9. '_s' → logprob: -8.40392780303955
    10. 'ts' → logprob: -8.40392780303955

Token 112: ' ' (ID: 220)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.4252065122127533
    2. ' repeat' → logprob: -1.8002065420150757
    3. ' int' → logprob: -2.550206422805786
    4. 'read' → logprob: -3.925206422805786
    5. ' input' → logprob: -3.925206422805786
    6. ' sum' → logprob: -4.425206661224365
    7. ' ' → logprob: -4.550206661224365
    8. ' len' → logprob: -4.675206661224365
    9. 'repeat' → logprob: -4.925206661224365
    10. ' pair' → logprob: -5.175206661224365

Token 113: '0' (ID: 15)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.7284407019615173
    2. 'read' → logprob: -0.9784407019615173
    3. 'int' → logprob: -3.478440761566162
    4. 'input' → logprob: -3.728440761566162
    5. '0' → logprob: -4.103440761566162
    6. 'sum' → logprob: -4.228440761566162
    7. ' repeat' → logprob: -4.478440761566162
    8. 'len' → logprob: -4.603440761566162
    9. ' read' → logprob: -4.728440761566162
    10. 'pair' → logprob: -5.103440761566162

Token 114: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43344178795814514
    2. '<|end|>' → logprob: -1.6834417581558228
    3. 'for' → logprob: -1.9334417581558228
    4. ' for' → logprob: -4.808441638946533
    5. '=' → logprob: -5.933441638946533
    6. ' ' → logprob: -6.433441638946533
    7. '<|end|>' → logprob: -6.558441638946533
    8. '#' → logprob: -6.558441638946533
    9. ' =' → logprob: -6.808441638946533
    10. '+' → logprob: -7.058441638946533

Token 115: 'index' (ID: 2257)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044444117695093155
    2. ' for' → logprob: -3.6694440841674805
    3. '
' → logprob: -5.2944440841674805
    4. 'pairs' → logprob: -5.5444440841674805
    5. '=' → logprob: -6.4194440841674805
    6. 'pair' → logprob: -7.0444440841674805
    7. '#' → logprob: -7.0444440841674805
    8. 'while' → logprob: -7.0444440841674805
    9. ' =' → logprob: -7.4194440841674805
    10. 'max' → logprob: -7.6694440841674805

Token 116: '_single' (ID: 46053)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02638182044029236
    2. '=' → logprob: -3.651381731033325
    3. '_' → logprob: -9.651381492614746
    4. 's' → logprob: -12.026381492614746
    5. ' +=' → logprob: -12.651381492614746
    6. ' ' → logprob: -12.651381492614746
    7. '<|end|>' → logprob: -13.526381492614746
    8. ')' → logprob: -14.651381492614746
    9. '_=' → logprob: -14.776381492614746
    10. ',' → logprob: -14.901381492614746

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10144316405057907
    2. '=' → logprob: -2.35144305229187
    3. '_' → logprob: -7.351443290710449
    4. 's' → logprob: -7.476443290710449
    5. ' ' → logprob: -12.35144329071045
    6. ' +=' → logprob: -12.60144329071045
    7. 'es' → logprob: -12.72644329071045
    8. '_=' → logprob: -12.72644329071045
    9. ',' → logprob: -12.85144329071045
    10. '_count' → logprob: -13.47644329071045

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18480730056762695
    2. ' ' → logprob: -1.809807300567627
    3. ' -' → logprob: -5.934807300567627
    4. '-' → logprob: -6.059807300567627
    5. '{}' → logprob: -10.934806823730469
    6. '1' → logprob: -11.184806823730469
    7. '[]' → logprob: -11.559806823730469
    8. 'None' → logprob: -11.684806823730469
    9. ' None' → logprob: -12.184806823730469
    10. ' []' → logprob: -12.559806823730469

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16192024946212769
    2. '-' → logprob: -1.9119203090667725
    3. '{}' → logprob: -7.286920070648193
    4. '[]' → logprob: -7.911920070648193
    5. ' ' → logprob: -8.286920547485352
    6. 'None' → logprob: -8.536920547485352
    7. ' -' → logprob: -9.036920547485352
    8. '1' → logprob: -11.036920547485352
    9. '{' → logprob: -11.161920547485352
    10. 'len' → logprob: -11.536920547485352

Token 120: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02241818793118
    2. '
' → logprob: -4.147418022155762
    3. ' for' → logprob: -5.522418022155762
    4. 'while' → logprob: -6.772418022155762
    5. 'if' → logprob: -7.647418022155762
    6. '<|end|>' → logprob: -8.647418022155762
    7. '#' → logprob: -9.022418022155762
    8. ',' → logprob: -9.272418022155762
    9. 'i' → logprob: -10.147418022155762
    10. '=' → logprob: -10.147418022155762

Token 121: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010843054042197764
    2. 'pairs' → logprob: -10.12510871887207
    3. 'while' → logprob: -10.37510871887207
    4. ' for' → logprob: -11.37510871887207
    5. 'i' → logprob: -12.12510871887207
    6. 'if' → logprob: -12.37510871887207
    7. 'result' → logprob: -12.62510871887207
    8. 'f' → logprob: -13.37510871887207
    9. 'def' → logprob: -13.50010871887207
    10. 'pair' → logprob: -13.62510871887207

Token 122: ' len' (ID: 4631)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7124385237693787
    2. ' repeat' → logprob: -1.0874385833740234
    3. ' len' → logprob: -2.0874385833740234
    4. ' pair' → logprob: -3.9624385833740234
    5. 'repeat' → logprob: -4.212438583374023
    6. 'input' → logprob: -5.212438583374023
    7. ' ' → logprob: -5.587438583374023
    8. ' not' → logprob: -5.837438583374023
    9. 'len' → logprob: -7.212438583374023
    10. ' index' → logprob: -7.462438583374023

Token 123: '(set' (ID: 25904)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001220105797983706
    2. '(' → logprob: -6.876220226287842
    3. ' (' → logprob: -8.626219749450684
    4. 'input' → logprob: -11.876219749450684
    5. '(inp' → logprob: -15.501219749450684
    6. '(in' → logprob: -15.626219749450684
    7. '(
' → logprob: -15.876219749450684
    8. '(i' → logprob: -16.251220703125
    9. '(read' → logprob: -16.751220703125
    10. ' input' → logprob: -16.876220703125

Token 124: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00013715129171032459
    2. '(' → logprob: -9.625137329101562
    3. ' (' → logprob: -9.750137329101562
    4. 'input' → logprob: -11.500137329101562
    5. ')' → logprob: -13.875137329101562
    6. ',input' → logprob: -15.125137329101562
    7. '(
' → logprob: -15.250137329101562
    8. ' input' → logprob: -15.625137329101562
    9. '=input' → logprob: -16.375137329101562
    10. '(output' → logprob: -16.375137329101562

Token 125: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0004825081559829414
    2. '(input' → logprob: -8.250482559204102
    3. '_' → logprob: -9.375482559204102
    4. '_(' → logprob: -10.250482559204102
    5. '(_' → logprob: -10.500482559204102
    6. '(str' → logprob: -10.625482559204102
    7. '(' → logprob: -10.875482559204102
    8. ')' → logprob: -11.500482559204102
    9. 'str' → logprob: -11.625482559204102
    10. '_)' → logprob: -12.875482559204102

Token 126: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03855719789862633
    2. '())' → logprob: -3.288557291030884
    3. ' )' → logprob: -8.038557052612305
    4. ')==' → logprob: -9.038557052612305
    5. ')!=' → logprob: -10.413557052612305
    6. '))' → logprob: -11.163557052612305
    7. '()' → logprob: -11.288557052612305
    8. ')>' → logprob: -11.788557052612305
    9. ' ())' → logprob: -12.788557052612305
    10. '(input' → logprob: -13.163557052612305

Token 127: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19033899903297424
    2. '==' → logprob: -2.4403390884399414
    3. ' >' → logprob: -2.6903390884399414
    4. '>' → logprob: -4.565339088439941
    5. ' !=' → logprob: -5.565339088439941
    6. ' <' → logprob: -5.815339088439941
    7. ' ' → logprob: -7.940339088439941
    8. ')' → logprob: -8.440339088439941
    9. ' <=' → logprob: -8.690339088439941
    10. '!=' → logprob: -8.815339088439941

Token 128: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5761119723320007
    2. '1' → logprob: -0.8261119723320007
    3. ' len' → logprob: -9.326111793518066
    4. 'len' → logprob: -10.076111793518066
    5. '0' → logprob: -11.076111793518066
    6. '2' → logprob: -11.576111793518066
    7. '  ' → logprob: -11.701111793518066
    8. '   ' → logprob: -13.326111793518066
    9. ' ' → logprob: -13.576111793518066
    10. '3' → logprob: -13.638611793518066

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007662105839699507
    2. ' ' → logprob: -4.882662296295166
    3. '2' → logprob: -10.632661819458008
    4. '0' → logprob: -11.007661819458008
    5. 'len' → logprob: -11.757661819458008
    6. '  ' → logprob: -13.320161819458008
    7. '   ' → logprob: -13.882661819458008
    8. '3' → logprob: -14.070161819458008
    9. '6' → logprob: -14.632661819458008
    10. ' len' → logprob: -14.695161819458008

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009877925040200353
    2. ' :' → logprob: -7.125988006591797
    3. ' and' → logprob: -8.750988006591797
    4. ':
' → logprob: -11.000988006591797
    5. 'and' → logprob: -12.125988006591797
    6. ':**' → logprob: -14.125988006591797
    7. ' ' → logprob: -14.250988006591797
    8. ' or' → logprob: -14.875988006591797
    9. '[' → logprob: -15.750988006591797
    10. '):' → logprob: -15.875988006591797

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002166317543014884
    2. ' print' → logprob: -6.502166271209717
    3. 'print' → logprob: -8.127166748046875
    4. ' pair' → logprob: -8.752166748046875
    5. '
' → logprob: -9.127166748046875
    6. ' if' → logprob: -10.627166748046875
    7. ' for' → logprob: -10.752166748046875
    8. '    
' → logprob: -10.752166748046875
    9. '	print' → logprob: -11.627166748046875
    10. 'pair' → logprob: -11.752166748046875

Token 132: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10688536614179611
    2. 'pair' → logprob: -2.4818854331970215
    3. ' print' → logprob: -4.7318854331970215
    4. ' pair' → logprob: -5.2318854331970215
    5. 'repeat' → logprob: -6.4818854331970215
    6. '   ' → logprob: -6.8568854331970215
    7. 'if' → logprob: -8.231884956359863
    8. 'for' → logprob: -8.356884956359863
    9. 'index' → logprob: -8.606884956359863
    10. ' if' → logprob: -9.231884956359863

Token 133: '(int' (ID: 2742)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.46592846512794495
    2. '(' → logprob: -1.7159284353256226
    3. '(re' → logprob: -2.340928554534912
    4. '(len' → logprob: -2.590928554534912
    5. '("' → logprob: -4.965928554534912
    6. '('' → logprob: -5.090928554534912
    7. '(-' → logprob: -5.340928554534912
    8. '((' → logprob: -6.840928554534912
    9. '(f' → logprob: -7.340928554534912
    10. '()' → logprob: -7.465928554534912

Token 134: '(len' (ID: 14990)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.26930826902389526
    2. '(re' → logprob: -1.51930832862854
    3. '(math' → logprob: -4.769308090209961
    4. '(len' → logprob: -5.019308090209961
    5. '(' → logprob: -6.894308090209961
    6. 'input' → logprob: -7.894308090209961
    7. 'repeat' → logprob: -8.644308090209961
    8. '(pow' → logprob: -9.394308090209961
    9. '((' → logprob: -9.519308090209961
    10. '(str' → logprob: -9.519308090209961

Token 135: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.392202976712724e-06
    2. 'input' → logprob: -12.000006675720215
    3. '(' → logprob: -16.0000057220459
    4. '(re' → logprob: -16.7500057220459
    5. '=input' → logprob: -17.3750057220459
    6. 'repeat' → logprob: -17.8750057220459
    7. '(set' → logprob: -18.7500057220459
    8. ',input' → logprob: -18.7500057220459
    9. ' (' → logprob: -19.2500057220459
    10. ')' → logprob: -19.7500057220459

Token 136: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.735893965815194e-05
    2. 'str' → logprob: -11.375017166137695
    3. '_s' → logprob: -12.750017166137695
    4. '_st' → logprob: -14.000017166137695
    5. '_' → logprob: -14.250017166137695
    6. 's' → logprob: -15.375017166137695
    7. ')' → logprob: -15.500017166137695
    8. '_count' → logprob: -15.625017166137695
    9. 'Str' → logprob: -15.750017166137695
    10. '))' → logprob: -15.875017166137695

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00904917623847723
    2. ')*' → logprob: -4.884048938751221
    3. ')**' → logprob: -7.384048938751221
    4. ' )' → logprob: -7.759048938751221
    5. '))' → logprob: -8.884049415588379
    6. '()' → logprob: -9.884049415588379
    7. '())' → logprob: -10.259049415588379
    8. '**' → logprob: -10.509049415588379
    9. '*' → logprob: -10.634049415588379
    10. '*)' → logprob: -11.009049415588379

Token 138: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3777104318141937
    2. ')' → logprob: -1.5027104616165161
    3. ' *' → logprob: -2.6277103424072266
    4. ')*' → logprob: -4.002710342407227
    5. '**' → logprob: -8.002710342407227
    6. ' ' → logprob: -8.127710342407227
    7. ' )' → logprob: -8.502710342407227
    8. ' ' → logprob: -8.627710342407227
    9. '))' → logprob: -9.127710342407227
    10. '	' → logprob: -9.502710342407227

Token 139: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.05490970239043236
    2. ' repeat' → logprob: -2.9299097061157227
    3. ' math' → logprob: -11.929909706115723
    4. ' ' → logprob: -12.804909706115723
    5. 'read' → logprob: -13.304909706115723
    6. 'math' → logprob: -13.429909706115723
    7. '_repeat' → logprob: -13.429909706115723
    8. '1' → logprob: -13.554909706115723
    9. 'rep' → logprob: -13.554909706115723
    10. 're' → logprob: -13.679909706115723

Token 140: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.696889623621246e-06
    2. '_repeat' → logprob: -13.75000286102295
    3. 'count' → logprob: -14.25000286102295
    4. '_' → logprob: -15.25000286102295
    5. 'peat' → logprob: -15.25000286102295
    6. 'eat' → logprob: -15.87500286102295
    7. 'at' → logprob: -17.000001907348633
    8. 'et' → logprob: -17.250001907348633
    9. ')' → logprob: -17.500001907348633
    10. 'repeat' → logprob: -18.000001907348633

Token 141: ' //' (ID: 602)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11329054087400436
    2. ')' → logprob: -2.238290548324585
    3. ' ))' → logprob: -8.363290786743164
    4. '))
' → logprob: -9.488290786743164
    5. '**' → logprob: -9.488290786743164
    6. ' )' → logprob: -10.363290786743164
    7. ')**' → logprob: -11.238290786743164
    8. ')))' → logprob: -11.613290786743164
    9. '-' → logprob: -12.238290786743164
    10. ')
' → logprob: -12.238290786743164

Token 142: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004401871003210545
    2. '1' → logprob: -6.004401683807373
    3. ' ' → logprob: -6.504401683807373
    4. 'len' → logprob: -8.629402160644531
    5. '4' → logprob: -9.379402160644531
    6. 'k' → logprob: -10.129402160644531
    7. '3' → logprob: -10.879402160644531
    8. '11' → logprob: -11.004402160644531
    9. '10' → logprob: -11.254402160644531
    10. '  ' → logprob: -11.254402160644531

Token 143: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '1' → logprob: -15.750009536743164
    4. '   ' → logprob: -17.250009536743164
    5. '10' → logprob: -18.250009536743164
    6. '```' → logprob: -18.625009536743164
    7. '  ' → logprob: -19.375009536743164
    8. ')' → logprob: -19.875009536743164
    9. '3' → logprob: -20.250009536743164
    10. '(' → logprob: -20.250009536743164

Token 144: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023256193846464157
    2. '))' → logprob: -3.773256301879883
    3. ')))' → logprob: -12.523256301879883
    4. ')
' → logprob: -12.648256301879883
    5. ' )' → logprob: -12.898256301879883
    6. '))
' → logprob: -14.273256301879883
    7. ')")' → logprob: -16.148256301879883
    8. ')`' → logprob: -16.273256301879883
    9. '())' → logprob: -16.398256301879883
    10. ' ))' → logprob: -16.898256301879883

Token 145: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0009598199394531548
    2. 'elif' → logprob: -7.125959873199463
    3. ' else' → logprob: -8.875959396362305
    4. '
' → logprob: -12.250959396362305
    5. 'exit' → logprob: -12.750959396362305
    6. '_else' → logprob: -13.000959396362305
    7. ' 
' → logprob: -13.625959396362305
    8. '    
' → logprob: -13.625959396362305
    9. '```' → logprob: -14.500959396362305
    10. '  
' → logprob: -14.625959396362305

Token 146: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.6343764066696167
    2. 'else' → logprob: -0.8843764066696167
    3. 'exit' → logprob: -3.1343765258789062
    4. '   ' → logprob: -4.384376525878906
    5. 'elif' → logprob: -7.634376525878906
    6. ' sys' → logprob: -8.384376525878906
    7. 'import' → logprob: -11.259376525878906
    8. ' exit' → logprob: -11.634376525878906
    9. ' ' → logprob: -11.759376525878906
    10. '	sys' → logprob: -12.134376525878906

Token 147: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.00042209390085190535
    2. 'exit' → logprob: -8.000422477722168
    3. '   ' → logprob: -10.375422477722168
    4. '.' → logprob: -10.500422477722168
    5. '	exit' → logprob: -11.125422477722168
    6. ' exit' → logprob: -12.750422477722168
    7. '.stdout' → logprob: -13.000422477722168
    8. '_exit' → logprob: -13.000422477722168
    9. '.quit' → logprob: -13.500422477722168
    10. '(exit' → logprob: -13.750422477722168

Token 148: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004206852056086063
    2. '(' → logprob: -5.504206657409668
    3. '0' → logprob: -9.379206657409668
    4. '())' → logprob: -10.504206657409668
    5. '_' → logprob: -12.129206657409668
    6. '()]' → logprob: -12.629206657409668
    7. '()
' → logprob: -12.879206657409668
    8. '()>' → logprob: -13.504206657409668
    9. '()`' → logprob: -14.129206657409668
    10. ' ()' → logprob: -14.254206657409668

Token 149: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0888899564743042
    2. 'result' → logprob: -1.7138899564743042
    3. 'prev' → logprob: -2.5888900756835938
    4. 'res' → logprob: -2.7138900756835938
    5. 'def' → logprob: -2.8388900756835938
    6. 'compressed' → logprob: -3.7138900756835938
    7. 'char' → logprob: -3.8388900756835938
    8. 's' → logprob: -3.9638900756835938
    9. 'combined' → logprob: -4.213890075683594
    10. 'new' → logprob: -4.213890075683594

Token 150: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.025672605261206627
    2. 'index' → logprob: -3.775672674179077
    3. ' pair' → logprob: -7.150672435760498
    4. ' True' → logprob: -7.275672435760498
    5. ' len' → logprob: -8.400672912597656
    6. ' repeat' → logprob: -8.400672912597656
    7. ' ' → logprob: -8.525672912597656
    8. 'True' → logprob: -9.400672912597656
    9. '(index' → logprob: -9.650672912597656
    10. ' not' → logprob: -10.400672912597656

Token 151: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.680779218673706
    2. '_' → logprob: -0.930779218673706
    3. ' <' → logprob: -2.680779218673706
    4. '<' → logprob: -3.680779218673706
    5. ' ' → logprob: -5.430779457092285
    6. '_<' → logprob: -7.930779457092285
    7. '_s' → logprob: -8.805779457092285
    8. 'single' → logprob: -8.805779457092285
    9. '_SINGLE' → logprob: -8.930779457092285
    10. '+' → logprob: -9.180779457092285

Token 152: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.025063829496502876
    2. '<' → logprob: -3.7750637531280518
    3. ' ' → logprob: -6.525063991546631
    4. '+' → logprob: -8.400063514709473
    5. '<len' → logprob: -10.025063514709473
    6. ' +' → logprob: -10.650063514709473
    7. ' <=' → logprob: -10.900063514709473
    8. ' +=' → logprob: -12.025063514709473
    9. '<size' → logprob: -12.150063514709473
    10. ' <
' → logprob: -12.525063514709473

Token 153: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.4034345187828876e-05
    2. 'repeat' → logprob: -11.12502384185791
    3. ' len' → logprob: -12.00002384185791
    4. '(len' → logprob: -12.87502384185791
    5. '   ' → logprob: -15.12502384185791
    6. 'int' → logprob: -16.750024795532227
    7. '1' → logprob: -16.750024795532227
    8. '(' → logprob: -17.500024795532227
    9. '	len' → logprob: -17.750024795532227
    10. '  ' → logprob: -18.125024795532227

Token 154: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. 'input' → logprob: -16.625
    4. '(
' → logprob: -20.25
    5. '=input' → logprob: -20.375
    6. '(inp' → logprob: -20.625
    7. '(in' → logprob: -20.875
    8. ',input' → logprob: -21.125
    9. '(output' → logprob: -21.25
    10. ' (' → logprob: -21.5

Token 155: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -3.1782583391759545e-05
    2. 'str' → logprob: -10.375031471252441
    3. '_s' → logprob: -15.375031471252441
    4. ')' → logprob: -16.625032424926758
    5. '_single' → logprob: -16.750032424926758
    6. 'Str' → logprob: -16.875032424926758
    7. 'single' → logprob: -17.000032424926758
    8. '```' → logprob: -17.875032424926758
    9. '_STR' → logprob: -18.000032424926758
    10. '_' → logprob: -18.500032424926758

Token 156: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10255396366119385
    2. ')' → logprob: -2.6025538444519043
    3. '):
' → logprob: -3.9775538444519043
    4. ' ):' → logprob: -5.602553844451904
    5. ' and' → logprob: -7.602553844451904
    6. '-' → logprob: -8.977554321289062
    7. ' )' → logprob: -9.352554321289062
    8. 'and' → logprob: -9.352554321289062
    9. ')-' → logprob: -9.852554321289062
    10. ':' → logprob: -9.977554321289062

Token 157: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3775864541530609
    2. ' and' → logprob: -1.5025864839553833
    3. ':
' → logprob: -2.5025863647460938
    4. 'and' → logprob: -4.877586364746094
    5. ' :' → logprob: -6.377586364746094
    6. ' :
' → logprob: -7.877586364746094
    7. ' ' → logprob: -8.127586364746094
    8. '=' → logprob: -10.502586364746094
    9. '   ' → logprob: -11.127586364746094
    10. ' or' → logprob: -11.877586364746094

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '2' → logprob: -18.000051498413086
    4. '   ' → logprob: -19.437551498413086
    5. '１' → logprob: -19.625051498413086
    6. '0' → logprob: -19.875051498413086
    7. '-' → logprob: -20.187551498413086
    8. '  ' → logprob: -20.437551498413086
    9. '
' → logprob: -20.625051498413086
    10. '```' → logprob: -20.625051498413086

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '2' → logprob: -16.375
    4. '１' → logprob: -19.125
    5. '-' → logprob: -19.75
    6. '   ' → logprob: -19.8125
    7. '
' → logprob: -19.875
    8. '```' → logprob: -19.875
    9. '۱' → logprob: -20.3125
    10. '0' → logprob: -20.4375

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016763772815465927
    2. ' and' → logprob: -4.391763687133789
    3. ':
' → logprob: -5.641763687133789
    4. 'and' → logprob: -8.016763687133789
    5. ' :' → logprob: -8.141763687133789
    6. '   ' → logprob: -9.641763687133789
    7. ' :
' → logprob: -12.516763687133789
    8. ' ' → logprob: -12.891763687133789
    9. ',' → logprob: -13.141763687133789
    10. ')' → logprob: -14.141763687133789

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007747171446681023
    2. 'if' → logprob: -5.257747173309326
    3. ' if' → logprob: -6.007747173309326
    4. ' ' → logprob: -10.382746696472168
    5. '	if' → logprob: -11.632746696472168
    6. '<|end|>' → logprob: -12.757746696472168
    7. '   ' → logprob: -13.132746696472168
    8. '  ' → logprob: -13.757746696472168
    9. '    
' → logprob: -13.757746696472168
    10. '```' → logprob: -14.007746696472168

Token 162: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12711866199970245
    2. '   ' → logprob: -2.1271185874938965
    3. ' if' → logprob: -8.627119064331055
    4. ' ' → logprob: -11.752119064331055
    5. '    
' → logprob: -13.877119064331055
    6. '	if' → logprob: -14.002119064331055
    7. '  ' → logprob: -14.377119064331055
    8. '       ' → logprob: -15.127119064331055
    9. 'current' → logprob: -15.627119064331055
    10. '```' → logprob: -15.627119064331055

Token 163: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008614808320999146
    2. ' input' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.508614540100098
    4. 'index' → logprob: -16.883615493774414
    5. '   ' → logprob: -17.008615493774414
    6. '	input' → logprob: -17.883615493774414
    7. '<input' → logprob: -18.133615493774414
    8. '(input' → logprob: -18.258615493774414
    9. '  ' → logprob: -19.383615493774414
    10. '[input' → logprob: -19.383615493774414

Token 164: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -8.061054359131958e-06
    2. 'str' → logprob: -11.750007629394531
    3. '_single' → logprob: -16.50000762939453
    4. 'Str' → logprob: -17.12500762939453
    5. '[str' → logprob: -17.50000762939453
    6. '_s' → logprob: -17.50000762939453
    7. '_STR' → logprob: -17.75000762939453
    8. '_Str' → logprob: -18.87500762939453
    9. '_' → logprob: -19.37500762939453
    10. 'single' → logprob: -19.62500762939453

Token 165: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. '[Index' → logprob: -16.875
    4. ' [' → logprob: -17.0
    5. '[i' → logprob: -17.375
    6. '[in' → logprob: -18.25
    7. '```' → logprob: -18.75
    8. '[ind' → logprob: -19.875
    9. 'index' → logprob: -20.0
    10. '[
' → logprob: -20.0

Token 166: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -1.0087516784551553e-05
    2. 'single' → logprob: -12.25001049041748
    3. ']' → logprob: -13.25001049041748
    4. '_SINGLE' → logprob: -13.25001049041748
    5. 'Single' → logprob: -14.50001049041748
    6. '_]' → logprob: -14.87501049041748
    7. ']_' → logprob: -15.50001049041748
    8. '_' → logprob: -15.62501049041748
    9. ']==' → logprob: -15.87501049041748
    10. '+' → logprob: -16.000009536743164

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07505808025598526
    2. '==' → logprob: -3.3250579833984375
    3. ']==' → logprob: -4.0750579833984375
    4. ' ==' → logprob: -4.0750579833984375
    5. ' ' → logprob: -6.5750579833984375
    6. ' ]' → logprob: -7.3250579833984375
    7. ')' → logprob: -8.825057983398438
    8. '=' → logprob: -9.450057983398438
    9. '   ' → logprob: -11.075057983398438
    10. '+' → logprob: -11.325057983398438

Token 168: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.016069445759058
    2. ' ==' → logprob: -4.141069412231445
    3. '==
' → logprob: -11.391069412231445
    4. ']==' → logprob: -11.641069412231445
    5. ' ' → logprob: -12.266069412231445
    6. '=' → logprob: -12.516069412231445
    7. '===' → logprob: -13.391069412231445
    8. ')==' → logprob: -13.766069412231445
    9. ')' → logprob: -13.891069412231445
    10. '!=' → logprob: -14.016069412231445

Token 169: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024826733861118555
    2. ' input' → logprob: -6.002482891082764
    3. ' ' → logprob: -12.002482414245605
    4. '   ' → logprob: -14.502482414245605
    5. '  ' → logprob: -15.002482414245605
    6. '	input' → logprob: -16.877483367919922
    7. '<input' → logprob: -17.002483367919922
    8. '(input' → logprob: -18.252483367919922
    9. 'import' → logprob: -18.252483367919922
    10. '    ' → logprob: -19.002483367919922

Token 170: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.004099773708730936
    2. 'str' → logprob: -5.5040998458862305
    3. '_single' → logprob: -11.37909984588623
    4. 'Str' → logprob: -12.37909984588623
    5. '[index' → logprob: -13.37909984588623
    6. 'single' → logprob: -13.50409984588623
    7. '```' → logprob: -14.50409984588623
    8. '_string' → logprob: -14.62909984588623
    9. '[str' → logprob: -14.62909984588623
    10. 'Single' → logprob: -14.87909984588623

Token 171: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -5.383526149671525e-05
    2. 'index' → logprob: -10.000053405761719
    3. '_single' → logprob: -12.250053405761719
    4. '_index' → logprob: -13.000053405761719
    5. '[' → logprob: -14.500053405761719
    6. '```' → logprob: -14.875053405761719
    7. '[
' → logprob: -15.125053405761719
    8. ' index' → logprob: -16.87505340576172
    9. '(index' → logprob: -17.00005340576172
    10. 'single' → logprob: -17.25005340576172

Token 172: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -7.3458322731312364e-06
    2. 'Single' → logprob: -12.625007629394531
    3. 'single' → logprob: -12.750007629394531
    4. '_SINGLE' → logprob: -13.875007629394531
    5. ' Single' → logprob: -16.50000762939453
    6. '+' → logprob: -16.75000762939453
    7. ' single' → logprob: -17.50000762939453
    8. '-single' → logprob: -19.12500762939453
    9. '_index' → logprob: -20.50000762939453
    10. '_' → logprob: -20.62500762939453

Token 173: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020564546808600426
    2. ' +' → logprob: -3.895564556121826
    3. ' ' → logprob: -10.895564079284668
    4. '   ' → logprob: -12.895564079284668
    5. '1' → logprob: -14.395564079284668
    6. ']+' → logprob: -15.270564079284668
    7. ']' → logprob: -15.520564079284668
    8. ' plus' → logprob: -15.895564079284668
    9. '    ' → logprob: -16.145565032958984
    10. 'index' → logprob: -16.395565032958984

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001410850090906024
    2. ' ' → logprob: -8.875141143798828
    3. 'index' → logprob: -13.750141143798828
    4. '```' → logprob: -17.375141143798828
    5. ' index' → logprob: -17.500141143798828
    6. '0' → logprob: -17.750141143798828
    7. '   ' → logprob: -18.500141143798828
    8. ']' → logprob: -19.750141143798828
    9. '
' → logprob: -19.875141143798828
    10. '  ' → logprob: -20.312641143798828

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.334533878136426e-05
    2. ' ' → logprob: -10.250042915344238
    3. '0' → logprob: -12.000042915344238
    4. ']' → logprob: -14.125042915344238
    5. 'index' → logprob: -14.625042915344238
    6. '```' → logprob: -14.750042915344238
    7. '
' → logprob: -17.000043869018555
    8. '   ' → logprob: -17.250043869018555
    9. '  ' → logprob: -18.625043869018555
    10. ')' → logprob: -18.750043869018555

Token 176: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2844310700893402
    2. ':
' → logprob: -2.034430980682373
    3. ']:' → logprob: -3.159430980682373
    4. ']:
' → logprob: -3.534430980682373
    5. '):
' → logprob: -4.034430980682373
    6. ' and' → logprob: -4.159430980682373
    7. '):' → logprob: -5.034430980682373
    8. ']' → logprob: -6.409430980682373
    9. 'and' → logprob: -7.034430980682373
    10. '   ' → logprob: -7.034430980682373

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001300830626860261
    2. '   ' → logprob: -7.376300811767578
    3. 'pair' → logprob: -7.876300811767578
    4. ' pair' → logprob: -8.251300811767578
    5. '
' → logprob: -11.376300811767578
    6. 'index' → logprob: -11.751300811767578
    7. ',' → logprob: -12.001300811767578
    8. '```' → logprob: -12.751300811767578
    9. ':
' → logprob: -14.001300811767578
    10. '_pair' → logprob: -14.626300811767578

Token 178: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' (adapté à ' pair') → logprob: -0.012909021228551865
    2. '       ' → logprob: -4.887908935546875
    3. '   ' → logprob: -5.387908935546875
    4. ' pair' → logprob: -7.637908935546875
    5. '           ' → logprob: -8.512908935546875
    6. '
' → logprob: -10.637908935546875
    7. '        
' → logprob: -13.137908935546875
    8. 'count' → logprob: -13.387908935546875
    9. 'counter' → logprob: -13.512908935546875
    10. '  ' → logprob: -14.262908935546875

Token 179: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.088346359931165e-07
    2. 'count' → logprob: -14.000000953674316
    3. 's' → logprob: -17.375
    4. '_c' → logprob: -19.25
    5. '_pair' → logprob: -19.5
    6. '_' → logprob: -19.75
    7. ' _' → logprob: -20.75
    8. '_co' → logprob: -20.75
    9. '```' → logprob: -20.875
    10. '_code' → logprob: -21.25

Token 180: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.00011009939044015482
    2. 'single' → logprob: -9.375109672546387
    3. '+=' → logprob: -11.375109672546387
    4. '_s' → logprob: -12.625109672546387
    5. '_' → logprob: -12.750109672546387
    6. '_pair' → logprob: -12.875109672546387
    7. '_SINGLE' → logprob: -13.000109672546387
    8. ' +=' → logprob: -14.000109672546387
    9. 'Single' → logprob: -14.375109672546387
    10. '=' → logprob: -15.500109672546387

Token 181: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.030004214495420456
    2. '+=' → logprob: -3.5300042629241943
    3. '   ' → logprob: -8.405004501342773
    4. '    ' → logprob: -10.905004501342773
    5. ']+=' → logprob: -12.405004501342773
    6. ' =' → logprob: -12.780004501342773
    7. ' ' → logprob: -13.155004501342773
    8. '=' → logprob: -14.155004501342773
    9. ' +' → logprob: -14.280004501342773
    10. '  ' → logprob: -14.405004501342773

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '１' → logprob: -20.750001907348633
    4. '   ' → logprob: -20.875001907348633
    5. '2' → logprob: -21.125001907348633
    6. '
' → logprob: -21.875001907348633
    7. 'int' → logprob: -22.000001907348633
    8. '0' → logprob: -22.125001907348633
    9. '۱' → logprob: -22.125001907348633
    10. '```' → logprob: -22.437501907348633

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '2' → logprob: -19.75
    4. '   ' → logprob: -20.5
    5. '```' → logprob: -21.0
    6. '
' → logprob: -21.25
    7. '１' → logprob: -21.3125
    8. 'int' → logprob: -21.9375
    9. '0' → logprob: -22.375
    10. '۱' → logprob: -22.625

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036415163427591324
    2. '   ' → logprob: -3.5364151000976562
    3. 'index' → logprob: -5.161415100097656
    4. ' index' → logprob: -7.286415100097656
    5. '
' → logprob: -8.661415100097656
    6. ',index' → logprob: -10.661415100097656
    7. 'while' → logprob: -12.536415100097656
    8. ' while' → logprob: -12.536415100097656
    9. ',' → logprob: -12.661415100097656
    10. '#index' → logprob: -12.786415100097656

Token 185: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28593480587005615
    2. '       ' → logprob: -1.5359348058700562
    3. 'index' → logprob: -3.6609349250793457
    4. ' index' → logprob: -4.910934925079346
    5. '
' → logprob: -8.285934448242188
    6. '    
' → logprob: -10.410934448242188
    7. ',index' → logprob: -11.160934448242188
    8. ' while' → logprob: -11.285934448242188
    9. ' ' → logprob: -11.660934448242188
    10. '        
' → logprob: -11.910934448242188

Token 186: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.008749072439968586
    2. ' index' → logprob: -5.008749008178711
    3. '       ' → logprob: -6.633749008178711
    4. '   ' → logprob: -7.258749008178711
    5. 'while' → logprob: -12.008749008178711
    6. '           ' → logprob: -12.633749008178711
    7. '#index' → logprob: -13.883749008178711
    8. '	index' → logprob: -14.133749008178711
    9. ' while' → logprob: -14.383749008178711
    10. '
' → logprob: -15.008749008178711

Token 187: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -3.2020991056924686e-05
    2. 'single' → logprob: -10.500032424926758
    3. 'Single' → logprob: -12.750032424926758
    4. '_SINGLE' → logprob: -13.375032424926758
    5. '_' → logprob: -17.750032424926758
    6. '-single' → logprob: -17.875032424926758
    7. ' single' → logprob: -18.000032424926758
    8. ' Single' → logprob: -18.375032424926758
    9. '+' → logprob: -19.125032424926758
    10. 'ingle' → logprob: -20.000032424926758

Token 188: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007052441593259573
    2. ' +=' → logprob: -5.007052421569824
    3. '=' → logprob: -8.257052421569824
    4. '+' → logprob: -9.507052421569824
    5. '2' → logprob: -13.132052421569824
    6. '   ' → logprob: -14.757052421569824
    7. ' =' → logprob: -14.882052421569824
    8. ' ' → logprob: -15.632052421569824
    9. ']+=' → logprob: -15.632052421569824
    10. '1' → logprob: -16.63205337524414

Token 189: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8444881536415778e-05
    2. ' ' → logprob: -10.750028610229492
    3. '1' → logprob: -11.875028610229492
    4. '   ' → logprob: -17.250028610229492
    5. '
' → logprob: -19.375028610229492
    6. '  ' → logprob: -19.875028610229492
    7. '２' → logprob: -20.250028610229492
    8. '```' → logprob: -20.375028610229492
    9. '۲' → logprob: -20.750028610229492
    10. '	' → logprob: -21.000028610229492

Token 190: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.143808109802194e-05
    2. '1' → logprob: -10.375041007995605
    3. ' ' → logprob: -11.500041007995605
    4. '   ' → logprob: -18.000041961669922
    5. '２' → logprob: -18.875041961669922
    6. '۲' → logprob: -19.250041961669922
    7. '
' → logprob: -20.250041961669922
    8. ' ' → logprob: -20.437541961669922
    9. '	' → logprob: -20.500041961669922
    10. '  ' → logprob: -20.562541961669922

Token 191: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.7491250875755213e-05
    2. 'index' → logprob: -10.750027656555176
    3. '    
' → logprob: -12.750027656555176
    4. '
' → logprob: -13.000027656555176
    5. 'else' → logprob: -14.750027656555176
    6. ' index' → logprob: -15.750027656555176
    7. '  ' → logprob: -16.62502670288086
    8. ' ' → logprob: -16.87502670288086
    9. '```' → logprob: -16.87502670288086
    10. '  
' → logprob: -17.25002670288086

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.266944157890975e-05
    2. 'index' → logprob: -9.875072479248047
    3. 'else' → logprob: -11.500072479248047
    4. '
' → logprob: -11.750072479248047
    5. '1' → logprob: -14.125072479248047
    6. '    
' → logprob: -14.375072479248047
    7. ' ' → logprob: -14.500072479248047
    8. '  ' → logprob: -14.625072479248047
    9. ' index' → logprob: -14.875072479248047
    10. '```' → logprob: -15.500072479248047

Token 193: ' index' (ID: 3472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10414126515388489
    2. 'index' (adapté à ' index') → logprob: -2.3541412353515625
    3. 'else' → logprob: -5.8541412353515625
    4. ' index' → logprob: -7.3541412353515625
    5. '
' → logprob: -8.479141235351562
    6. ' ' → logprob: -8.979141235351562
    7. ' else' → logprob: -9.979141235351562
    8. '  ' → logprob: -11.604141235351562
    9. '1' → logprob: -12.229141235351562
    10. '    
' → logprob: -12.229141235351562

Token 194: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -1.8624639324116288e-06
    2. 'single' → logprob: -14.000001907348633
    3. '_SINGLE' → logprob: -14.250001907348633
    4. 'Single' → logprob: -15.250001907348633
    5. '_' → logprob: -16.625001907348633
    6. '+' → logprob: -17.125001907348633
    7. '+=' → logprob: -18.375001907348633
    8. ' +=' → logprob: -19.000001907348633
    9. '++' → logprob: -19.125001907348633
    10. ' Single' → logprob: -19.125001907348633

Token 195: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004565649665892124
    2. '+' → logprob: -5.504565715789795
    3. ' +=' → logprob: -7.629565715789795
    4. '=' → logprob: -14.379565238952637
    5. '+='' → logprob: -15.504565238952637
    6. '++' → logprob: -16.004566192626953
    7. '+="' → logprob: -16.129566192626953
    8. '1' → logprob: -16.504566192626953
    9. ']+=' → logprob: -16.504566192626953
    10. '```' → logprob: -17.754566192626953

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.875001907348633
    4. '<|end|>' → logprob: -20.250001907348633
    5. '```' → logprob: -20.375001907348633
    6. '  ' → logprob: -21.625001907348633
    7. '１' → logprob: -22.625001907348633
    8. '0' → logprob: -23.500001907348633
    9. '۱' → logprob: -23.750001907348633
    10. '    ' → logprob: -23.875001907348633

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -20.250001907348633
    4. '   ' → logprob: -20.375001907348633
    5. '<|end|>' → logprob: -20.625001907348633
    6. '  ' → logprob: -21.000001907348633
    7. '１' → logprob: -22.500001907348633
    8. '+' → logprob: -22.625001907348633
    9. '0' → logprob: -22.875001907348633
    10. '۱' → logprob: -23.187501907348633

Token 198: '

' (ID: 279)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.28044527769088745
    2. 'total' → logprob: -2.4054453372955322
    3. 'pairs' → logprob: -3.0304453372955322
    4. 'count' → logprob: -3.7804453372955322
    5. 'result' → logprob: -3.9054453372955322
    6. 'repeat' → logprob: -4.030445098876953
    7. 'last' → logprob: -4.530445098876953
    8. 'first' → logprob: -5.280445098876953
    9. 'combined' → logprob: -5.405445098876953
    10. 'compressed' → logprob: -5.780445098876953

Token 199: 'pair' (ID: 25488)
  Prédit: 'pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.5735441446304321
    2. 'total' → logprob: -1.3235441446304321
    3. 'result' → logprob: -2.0735440254211426
    4. 'pairs' → logprob: -4.948544025421143
    5. 'full' → logprob: -5.073544025421143
    6. 'if' → logprob: -5.323544025421143
    7. 'combined' → logprob: -5.323544025421143
    8. 'res' → logprob: -5.948544025421143
    9. 'compressed' → logprob: -5.948544025421143
    10. 'prev' → logprob: -6.073544025421143

Token 200: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.9186317482963204e-05
    2. '_' → logprob: -10.500049591064453
    3. 's' → logprob: -11.750049591064453
    4. '_counts' → logprob: -12.250049591064453
    5. '_s' → logprob: -13.375049591064453
    6. '_c' → logprob: -13.625049591064453
    7. '_total' → logprob: -13.625049591064453
    8. '_single' → logprob: -13.750049591064453
    9. ' _' → logprob: -14.125049591064453
    10. '_cnt' → logprob: -14.625049591064453

Token 201: '_double' (ID: 59806)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0490393340587616
    2. '_total' → logprob: -3.799039363861084
    3. '_' → logprob: -4.049039363861084
    4. '_multiple' → logprob: -6.049039363861084
    5. '_s' → logprob: -6.674039363861084
    6. '_mult' → logprob: -7.049039363861084
    7. '_double' → logprob: -7.174039363861084
    8. '*' → logprob: -7.799039363861084
    9. '=' → logprob: -8.174038887023926
    10. '_final' → logprob: -8.299038887023926

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009760929271578789
    2. '=' → logprob: -4.634760856628418
    3. ' ' → logprob: -12.759760856628418
    4. '_' → logprob: -13.759760856628418
    5. ' _' → logprob: -14.384760856628418
    6. ',' → logprob: -15.009760856628418
    7. ' ' → logprob: -16.759761810302734
    8. '_space' → logprob: -17.134761810302734
    9. ' =
' → logprob: -17.259761810302734
    10. ' +=' → logprob: -17.759761810302734

Token 203: ' ' (ID: 220)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.7201927304267883
    2. '0' → logprob: -0.9701927304267883
    3. '(pair' → logprob: -2.5951926708221436
    4. ' pair' → logprob: -3.5951926708221436
    5. ' ' → logprob: -4.220192909240723
    6. 'repeat' → logprob: -4.470192909240723
    7. ' (' → logprob: -6.595192909240723
    8. ' repeat' → logprob: -7.095192909240723
    9. 'input' → logprob: -7.095192909240723
    10. 'int' → logprob: -7.470192909240723

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2603894770145416
    2. 'pair' → logprob: -1.5103894472122192
    3. '(pair' → logprob: -5.51038932800293
    4. ' ' → logprob: -6.26038932800293
    5. 'input' → logprob: -6.76038932800293
    6. ' pair' → logprob: -7.76038932800293
    7. 'repeat' → logprob: -8.26038932800293
    8. '(' → logprob: -8.51038932800293
    9. 'int' → logprob: -8.76038932800293
    10. '(input' → logprob: -9.51038932800293

Token 205: '
' (ID: 198)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.007660585455596447
    2. ' index' → logprob: -5.632660388946533
    3. 'input' → logprob: -6.257660388946533
    4. '
' → logprob: -7.507660388946533
    5. 'idx' → logprob: -7.882660388946533
    6. 'current' → logprob: -8.507660865783691
    7. 'if' → logprob: -8.632660865783691
    8. 'i' → logprob: -9.007660865783691
    9. 'combined' → logprob: -9.007660865783691
    10. 's' → logprob: -9.132660865783691

Token 206: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.003582252888008952
    2. 'input' → logprob: -6.62858247756958
    3. 'if' → logprob: -7.00358247756958
    4. 'combined' → logprob: -7.87858247756958
    5. 's' → logprob: -8.128582000732422
    6. 'full' → logprob: -8.753582000732422
    7. 'total' → logprob: -9.378582000732422
    8. 'concat' → logprob: -9.503582000732422
    9. 'merged' → logprob: -9.878582000732422
    10. 'idx' → logprob: -10.003582000732422

Token 207: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -0.0007711516227573156
    2. '_single' → logprob: -7.7507710456848145
    3. 'double' → logprob: -9.125771522521973
    4. '=' → logprob: -9.375771522521973
    5. ' =' → logprob: -9.500771522521973
    6. '_' → logprob: -9.625771522521973
    7. '_pair' → logprob: -12.875771522521973
    8. '_=' → logprob: -14.000771522521973
    9. '_DOUBLE' → logprob: -14.875771522521973
    10. ' double' → logprob: -15.000771522521973

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196824833750725
    2. '=' → logprob: -2.8119683265686035
    3. ' ' → logprob: -14.436967849731445
    4. ',' → logprob: -17.686967849731445
    5. '＝' → logprob: -17.686967849731445
    6. 's' → logprob: -18.311967849731445
    7. '0' → logprob: -18.436967849731445
    8. ' ,' → logprob: -18.436967849731445
    9. ' ' → logprob: -18.561967849731445
    10. ' +=' → logprob: -19.186967849731445

Token 209: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002808202290907502
    2. ' ' → logprob: -5.877808094024658
    3. 'index' → logprob: -13.502808570861816
    4. '1' → logprob: -14.002808570861816
    5. 'len' → logprob: -14.252808570861816
    6. '۰' → logprob: -16.4403076171875
    7. ' len' → logprob: -16.9403076171875
    8. ' index' → logprob: -17.3153076171875
    9. '０' → logprob: -17.7528076171875
    10. '(' → logprob: -17.7528076171875

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.644463479053229e-05
    2. ' ' → logprob: -10.000046730041504
    3. 'len' → logprob: -14.375046730041504
    4. '1' → logprob: -15.500046730041504
    5. 'index' → logprob: -16.125045776367188
    6. '۰' → logprob: -17.375045776367188
    7. '(len' → logprob: -18.500045776367188
    8. ' len' → logprob: -18.562545776367188
    9. '０' → logprob: -18.750045776367188
    10. '<|end|>' → logprob: -19.187545776367188

Token 211: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19667819142341614
    2. ' while' → logprob: -2.3216781616210938
    3. 'input' → logprob: -3.5716781616210938
    4. 'index' → logprob: -4.071678161621094
    5. '
' → logprob: -4.196678161621094
    6. '<|end|>' → logprob: -4.321678161621094
    7. 'len' → logprob: -6.446678161621094
    8. ' ' → logprob: -7.321678161621094
    9. 'length' → logprob: -7.571678161621094
    10. ' input' → logprob: -7.821678161621094

Token 212: 'double' (ID: 9489)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05460217222571373
    2. 'input' → logprob: -4.179602146148682
    3. 'length' → logprob: -4.804602146148682
    4. 's' → logprob: -4.929602146148682
    5. 'combined' → logprob: -5.054602146148682
    6. 'if' → logprob: -5.429602146148682
    7. 'merged' → logprob: -6.054602146148682
    8. 'len' → logprob: -6.304602146148682
    9. 'str' → logprob: -6.804602146148682
    10. 'double' → logprob: -6.929602146148682

Token 213: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.08978006988763809
    2. '_input' → logprob: -2.96478009223938
    3. '_' → logprob: -4.089779853820801
    4. '_count' → logprob: -5.089779853820801
    5. 'str' → logprob: -5.464779853820801
    6. '_string' → logprob: -5.714779853820801
    7. '_index' → logprob: -6.839779853820801
    8. '_s' → logprob: -7.714779853820801
    9. 's' → logprob: -7.714779853820801
    10. 'd' → logprob: -7.839779853820801

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22545810043811798
    2. '=' → logprob: -1.6004581451416016
    3. ' ' → logprob: -10.975458145141602
    4. '_' → logprob: -11.225458145141602
    5. 's' → logprob: -11.975458145141602
    6. 'd' → logprob: -13.100458145141602
    7. '=input' → logprob: -13.100458145141602
    8. '_input' → logprob: -14.100458145141602
    9. '_str' → logprob: -14.350458145141602
    10. 'input' → logprob: -14.475458145141602

Token 215: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006715728435665369
    2. ' input' → logprob: -5.006715774536133
    3. '(input' → logprob: -14.881715774536133
    4. ' ' → logprob: -17.506715774536133
    5. 'int' → logprob: -17.631715774536133
    6. '	input' → logprob: -17.631715774536133
    7. 'import' → logprob: -17.881715774536133
    8. '<input' → logprob: -18.006715774536133
    9. '  ' → logprob: -18.506715774536133
    10. '=input' → logprob: -19.006715774536133

Token 216: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -7.226628895296017e-06
    2. 'str' → logprob: -11.875007629394531
    3. '_' → logprob: -15.750007629394531
    4. 'Str' → logprob: -16.50000762939453
    5. '_STR' → logprob: -19.00000762939453
    6. '_s' → logprob: -19.12500762939453
    7. '__' → logprob: -19.25000762939453
    8. '```' → logprob: -19.75000762939453
    9. '_st' → logprob: -19.87500762939453
    10. '_string' → logprob: -19.87500762939453

Token 217: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4877854883670807
    2. '*' → logprob: -0.9877854585647583
    3. '+' → logprob: -4.487785339355469
    4. ' +' → logprob: -6.112785339355469
    5. '*num' → logprob: -10.362785339355469
    6. '*
' → logprob: -10.487785339355469
    7. 'double' → logprob: -10.737785339355469
    8. '*n' → logprob: -11.737785339355469
    9. '<|end|>' → logprob: -11.862785339355469
    10. '*object' → logprob: -11.862785339355469

Token 218: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2842308680992573e-05
    2. ' ' → logprob: -11.125022888183594
    3. 'repeat' → logprob: -11.750022888183594
    4. '  ' → logprob: -16.750022888183594
    5. '(' → logprob: -16.750022888183594
    6. 'rep' → logprob: -17.500022888183594
    7. '   ' → logprob: -17.625022888183594
    8. '```' → logprob: -18.250022888183594
    9. '２' → logprob: -18.500022888183594
    10. '۲' → logprob: -18.625022888183594

Token 219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010890735575230792
    2. 'repeat' → logprob: -9.75010871887207
    3. ' ' → logprob: -10.00010871887207
    4. 'min' → logprob: -12.87510871887207
    5. '(' → logprob: -14.25010871887207
    6. '   ' → logprob: -14.62510871887207
    7. 'rep' → logprob: -14.87510871887207
    8. '  ' → logprob: -15.00010871887207
    9. 'max' → logprob: -15.37510871887207
    10. '1' → logprob: -15.68760871887207

Token 220: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03163186088204384
    2. '
' → logprob: -3.6566319465637207
    3. ' while' → logprob: -5.531631946563721
    4. '<|end|>' → logprob: -6.781631946563721
    5. '```' → logprob: -8.906631469726562
    6. 'While' → logprob: -9.906631469726562
    7. 'index' → logprob: -11.906631469726562
    8. ' 
' → logprob: -12.531631469726562
    9. '<|end|>' → logprob: -12.781631469726562
    10. '  
' → logprob: -12.781631469726562

Token 221: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -4.0722858102526516e-05
    2. 'len' → logprob: -10.500041007995605
    3. ' while' → logprob: -11.375041007995605
    4. 'length' → logprob: -13.375041007995605
    5. '
' → logprob: -17.00004005432129
    6. 'w' → logprob: -17.25004005432129
    7. 'While' → logprob: -17.25004005432129
    8. '```' → logprob: -17.62504005432129
    9. 'if' → logprob: -19.37504005432129
    10. 'n' → logprob: -19.75004005432129

Token 222: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.31326398253440857
    2. ' index' → logprob: -1.313264012336731
    3. '(index' → logprob: -13.438263893127441
    4. 'double' → logprob: -15.688263893127441
    5. '	index' → logprob: -15.688263893127441
    6. '#index' → logprob: -15.688263893127441
    7. 'Index' → logprob: -16.813264846801758
    8. ' ' → logprob: -17.063264846801758
    9. '   ' → logprob: -17.063264846801758
    10. '[index' → logprob: -17.563264846801758

Token 223: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -0.000158842682139948
    2. 'double' → logprob: -8.75015926361084
    3. '_single' → logprob: -16.750158309936523
    4. '_DOUBLE' → logprob: -17.000158309936523
    5. ' double' → logprob: -17.250158309936523
    6. '(double' → logprob: -17.500158309936523
    7. 'Double' → logprob: -17.500158309936523
    8. '<double' → logprob: -18.250158309936523
    9. '__' → logprob: -18.500158309936523
    10. '_' → logprob: -18.875158309936523

Token 224: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0015149809187278152
    2. '<' → logprob: -6.501514911651611
    3. ' ' → logprob: -11.50151538848877
    4. '<len' → logprob: -13.75151538848877
    5. ' <=' → logprob: -14.50151538848877
    6. ' <
' → logprob: -14.62651538848877
    7. '<int' → logprob: -15.87651538848877
    8. '+' → logprob: -16.126514434814453
    9. '<size' → logprob: -17.126514434814453
    10. ' +' → logprob: -17.376514434814453

Token 225: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.000572094286326319
    2. ' len' → logprob: -7.625572204589844
    3. '2' → logprob: -9.500572204589844
    4. '(len' → logprob: -11.750572204589844
    5. '   ' → logprob: -14.125572204589844
    6. ' ' → logprob: -15.125572204589844
    7. '	len' → logprob: -16.375572204589844
    8. '(' → logprob: -16.750572204589844
    9. '1' → logprob: -17.750572204589844
    10. '    ' → logprob: -18.000572204589844

Token 226: '(double' (ID: 17684)
  Prédit: '(double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(double' → logprob: -0.0029163805302232504
    2. '(input' → logprob: -6.12791633605957
    3. 'double' → logprob: -7.25291633605957
    4. 'input' → logprob: -11.75291633605957
    5. ' double' → logprob: -11.87791633605957
    6. '(' → logprob: -12.25291633605957
    7. ' (' → logprob: -14.37791633605957
    8. '(d' → logprob: -14.75291633605957
    9. ',double' → logprob: -14.75291633605957
    10. '	double' → logprob: -15.37791633605957

Token 227: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.042953286319971085
    2. 'double' → logprob: -3.2929532527923584
    3. 'str' → logprob: -5.6679534912109375
    4. 'input' → logprob: -7.9179534912109375
    5. '_double' → logprob: -8.042953491210938
    6. ' double' → logprob: -8.667953491210938
    7. '(input' → logprob: -8.792953491210938
    8. ')' → logprob: -9.417953491210938
    9. 'Str' → logprob: -9.417953491210938
    10. '(double' → logprob: -9.667953491210938

Token 228: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0357513353228569
    2. '-' → logprob: -3.7857513427734375
    3. ')' → logprob: -4.4107513427734375
    4. ' ' → logprob: -8.410751342773438
    5. ' )' → logprob: -10.660751342773438
    6. ')-' → logprob: -11.160751342773438
    7. ' ' → logprob: -12.035751342773438
    8. '()' → logprob: -12.160751342773438
    9. '}' → logprob: -13.660751342773438
    10. ' double' → logprob: -13.723251342773438

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02054562419652939
    2. '-' → logprob: -3.895545721054077
    3. ' ' → logprob: -13.270545959472656
    4. ':' → logprob: -13.395545959472656
    5. ' ' → logprob: -15.895545959472656
    6. ' -
' → logprob: -16.270545959472656
    7. ':
' → logprob: -16.645545959472656
    8. '()-' → logprob: -17.395545959472656
    9. '   ' → logprob: -17.895545959472656
    10. ')' → logprob: -18.395545959472656

Token 230: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '2' → logprob: -17.502805709838867
    4. '<|end|>' → logprob: -18.190305709838867
    5. ' ' → logprob: -18.252805709838867
    6. '１' → logprob: -18.815305709838867
    7. '۱' → logprob: -19.252805709838867
    8. '   ' → logprob: -19.315305709838867
    9. '0' → logprob: -19.565305709838867
    10. '```' → logprob: -19.627805709838867

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '
' → logprob: -16.812528610229492
    4. '2' → logprob: -17.000028610229492
    5. '```' → logprob: -17.437528610229492
    6. '۱' → logprob: -17.875028610229492
    7. '１' → logprob: -18.125028610229492
    8. '<|end|>' → logprob: -18.437528610229492
    9. '0' → logprob: -19.500028610229492
    10. '3' → logprob: -19.625028610229492

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05521455034613609
    2. ':
' → logprob: -2.9302146434783936
    3. '   ' → logprob: -8.430214881896973
    4. ' :' → logprob: -10.055214881896973
    5. ' :
' → logprob: -10.180214881896973
    6. ' and' → logprob: -10.930214881896973
    7. ':

' → logprob: -12.055214881896973
    8. '):
' → logprob: -13.055214881896973
    9. '**' → logprob: -13.555214881896973
    10. ',' → logprob: -13.805214881896973

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008364312816411257
    2. ' if' → logprob: -7.125836372375488
    3. 'if' → logprob: -11.125836372375488
    4. ' ' → logprob: -11.875836372375488
    5. '	if' → logprob: -12.000836372375488
    6. '```' → logprob: -13.250836372375488
    7. '   ' → logprob: -13.750836372375488
    8. '   ' → logprob: -15.125836372375488
    9. ' ' → logprob: -15.625836372375488
    10. '  ' → logprob: -15.750836372375488

Token 234: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17578613758087158
    2. 'if' (adapté à ' if') → logprob: -1.9257861375808716
    3. ' if' → logprob: -4.175786018371582
    4. ' ' → logprob: -9.800786018371582
    5. '	if' → logprob: -11.425786018371582
    6. '  ' → logprob: -11.800786018371582
    7. '```' → logprob: -13.050786018371582
    8. '    ' → logprob: -13.425786018371582
    9. '       ' → logprob: -14.175786018371582
    10. ' 
' → logprob: -16.8007869720459

Token 235: ' double' (ID: 3503)
  Prédit: ' double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' double' → logprob: -0.018150178715586662
    2. 'double' → logprob: -4.018150329589844
    3. '(double' → logprob: -16.268150329589844
    4. ' ' → logprob: -16.893150329589844
    5. '	double' → logprob: -17.518150329589844
    6. ' ' → logprob: -17.643150329589844
    7. 'd' → logprob: -18.393150329589844
    8. '   ' → logprob: -18.518150329589844
    9. 'Double' → logprob: -18.643150329589844
    10. ',double' → logprob: -19.518150329589844

Token 236: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.014544936828315258
    2. '_double' → logprob: -4.26454496383667
    3. 'double' → logprob: -7.88954496383667
    4. 'str' → logprob: -12.264544486999512
    5. ' double' → logprob: -13.889544486999512
    6. '```' → logprob: -15.514544486999512
    7. '[' → logprob: -16.139545440673828
    8. '_' → logprob: -16.264545440673828
    9. '
' → logprob: -16.514545440673828
    10. '_char' → logprob: -16.639545440673828

Token 237: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.750001907348633
    3. ' [' → logprob: -14.875001907348633
    4. 'index' → logprob: -15.875001907348633
    5. '[Index' → logprob: -17.625001907348633
    6. '```' → logprob: -17.875001907348633
    7. '#index' → logprob: -18.625001907348633
    8. ' index' → logprob: -18.750001907348633
    9. '[
' → logprob: -19.000001907348633
    10. '=index' → logprob: -19.500001907348633

Token 238: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -0.0008056987426243722
    2. 'double' → logprob: -7.125805854797363
    3. '_DOUBLE' → logprob: -14.625805854797363
    4. ' double' → logprob: -14.875805854797363
    5. 'Double' → logprob: -16.125804901123047
    6. 'ouble' → logprob: -16.125804901123047
    7. '<double' → logprob: -17.500804901123047
    8. '_single' → logprob: -17.500804901123047
    9. 'index' → logprob: -17.500804901123047
    10. '_two' → logprob: -18.000804901123047

Token 239: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10893771797418594
    2. ' ==' → logprob: -2.7339377403259277
    3. ']==' → logprob: -3.8589377403259277
    4. '==' → logprob: -4.233937740325928
    5. ' ]' → logprob: -5.983937740325928
    6. ' ' → logprob: -9.60893726348877
    7. '=' → logprob: -10.48393726348877
    8. '']' → logprob: -10.85893726348877
    9. ')' → logprob: -11.60893726348877
    10. ')==' → logprob: -12.60893726348877

Token 240: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16027215123176575
    2. ' ==' → logprob: -1.9102721214294434
    3. '=' → logprob: -10.535272598266602
    4. '==
' → logprob: -10.910272598266602
    5. ']==' → logprob: -13.535272598266602
    6. ' ' → logprob: -14.285272598266602
    7. ')==' → logprob: -14.660272598266602
    8. '===' → logprob: -15.535272598266602
    9. ')' → logprob: -15.660272598266602
    10. ' ==
' → logprob: -16.0352725982666

Token 241: ' double' (ID: 3503)
  Prédit: 'double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'double' → logprob: -0.4740777611732483
    2. ' double' → logprob: -0.9740777611732483
    3. ' ' → logprob: -14.349078178405762
    4. '   ' → logprob: -16.849077224731445
    5. '(double' → logprob: -17.474077224731445
    6. '	double' → logprob: -17.599077224731445
    7. '.double' → logprob: -18.099077224731445
    8. 'ouble' → logprob: -18.224077224731445
    9. ' ' → logprob: -18.349077224731445
    10. 'string' → logprob: -18.474077224731445

Token 242: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.041492681950330734
    2. 'double' → logprob: -3.4164927005767822
    3. '_double' → logprob: -4.916492462158203
    4. 'str' → logprob: -7.666492462158203
    5. ' double' → logprob: -12.041492462158203
    6. '```' → logprob: -12.291492462158203
    7. 'index' → logprob: -12.541492462158203
    8. '[index' → logprob: -13.291492462158203
    9. 'Str' → logprob: -13.416492462158203
    10. '_string' → logprob: -13.541492462158203

Token 243: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0002993544621858746
    2. 'index' → logprob: -8.125299453735352
    3. '[' → logprob: -13.500299453735352
    4. '_index' → logprob: -14.375299453735352
    5. 'double' → logprob: -14.500299453735352
    6. ' index' → logprob: -15.125299453735352
    7. '```' → logprob: -15.500299453735352
    8. '(index' → logprob: -16.50029945373535
    9. '[
' → logprob: -16.50029945373535
    10. '_double' → logprob: -16.50029945373535

Token 244: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -0.0005026352009736001
    2. 'double' → logprob: -7.625502586364746
    3. 'Double' → logprob: -11.625502586364746
    4. '_DOUBLE' → logprob: -13.000502586364746
    5. '+' → logprob: -13.500502586364746
    6. ' double' → logprob: -13.750502586364746
    7. '_index' → logprob: -15.500502586364746
    8. '```' → logprob: -16.000503540039062
    9. ']' → logprob: -16.250503540039062
    10. 'DOUBLE' → logprob: -16.375503540039062

Token 245: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08894763886928558
    2. ' +' → logprob: -2.4639475345611572
    3. '1' → logprob: -13.088947296142578
    4. ' ' → logprob: -13.463947296142578
    5. ']' → logprob: -13.588947296142578
    6. ']+' → logprob: -14.213947296142578
    7. '[' → logprob: -14.463947296142578
    8. '   ' → logprob: -14.713947296142578
    9. 'index' → logprob: -14.713947296142578
    10. '+
' → logprob: -15.338947296142578

Token 246: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024773201439529657
    2. ' ' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.377477645874023
    4. '```' → logprob: -14.502477645874023
    5. 'double' → logprob: -16.127477645874023
    6. ')' → logprob: -16.252477645874023
    7. '0' → logprob: -16.877477645874023
    8. '_double' → logprob: -17.002477645874023
    9. '  ' → logprob: -17.127477645874023
    10. 'index' → logprob: -17.189977645874023

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -15.500017166137695
    4. 'double' → logprob: -16.500017166137695
    5. '   ' → logprob: -16.625017166137695
    6. '0' → logprob: -17.125017166137695
    7. 'index' → logprob: -17.187517166137695
    8. '
' → logprob: -17.812517166137695
    9. '  ' → logprob: -17.812517166137695
    10. ']' → logprob: -18.125017166137695

Token 248: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.571087121963501
    2. ']:' → logprob: -1.196087121963501
    3. ':' → logprob: -2.946087121963501
    4. '       ' → logprob: -3.071087121963501
    5. ']' → logprob: -4.321086883544922
    6. ':
' → logprob: -4.946086883544922
    7. '   ' → logprob: -5.446086883544922
    8. '<|end|>' → logprob: -5.946086883544922
    9. ']:
' → logprob: -6.321086883544922
    10. '']:
' → logprob: -6.446086883544922

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008178464486263692
    2. '   ' → logprob: -7.250817775726318
    3. ' pair' → logprob: -9.500818252563477
    4. 'pair' → logprob: -10.875818252563477
    5. 'index' → logprob: -12.500818252563477
    6. '
' → logprob: -13.250818252563477
    7. '<|end|>' → logprob: -13.375818252563477
    8. '```' → logprob: -13.500818252563477
    9. ' index' → logprob: -14.125818252563477
    10. ' ' → logprob: -14.250818252563477

Token 250: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' (adapté à ' pair') → logprob: -0.0003806257154792547
    2. ' pair' → logprob: -8.375380516052246
    3. '       ' → logprob: -9.250380516052246
    4. '   ' → logprob: -10.125380516052246
    5. '           ' → logprob: -11.250380516052246
    6. '
' → logprob: -14.750380516052246
    7. ' ' → logprob: -15.500380516052246
    8. '  ' → logprob: -16.375381469726562
    9. '               ' → logprob: -17.375381469726562
    10. '```' → logprob: -17.500381469726562

Token 251: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0040931240655481815
    2. 'double' → logprob: -5.629093170166016
    3. '_double' → logprob: -8.004093170166016
    4. 'count' → logprob: -8.754093170166016
    5. ' double' → logprob: -15.754093170166016
    6. '   ' → logprob: -16.004093170166016
    7. '`' → logprob: -16.379093170166016
    8. '_' → logprob: -16.754093170166016
    9. '```' → logprob: -16.754093170166016
    10. 'd' → logprob: -16.879093170166016

Token 252: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -0.10022219270467758
    2. 'double' → logprob: -2.350222110748291
    3. ' double' → logprob: -11.97522258758545
    4. '++' → logprob: -13.10022258758545
    5. '+=' → logprob: -13.10022258758545
    6. '+' → logprob: -13.47522258758545
    7. '	double' → logprob: -14.22522258758545
    8. '<double' → logprob: -14.22522258758545
    9. '_DOUBLE' → logprob: -14.35022258758545
    10. 'Double' → logprob: -15.10022258758545

Token 253: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2519353926181793
    2. '+=' → logprob: -1.501935362815857
    3. '+' → logprob: -13.001935005187988
    4. ']+=' → logprob: -13.376935005187988
    5. '=' → logprob: -13.876935005187988
    6. ' +' → logprob: -14.126935005187988
    7. ' =' → logprob: -15.126935005187988
    8. '   ' → logprob: -15.876935005187988
    9. '+='' → logprob: -15.876935005187988
    10. '    ' → logprob: -17.001935958862305

Token 254: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08893991261720657
    2. ' ' → logprob: -2.463939905166626
    3. '2' → logprob: -15.838939666748047
    4. '<|end|>' → logprob: -16.213939666748047
    5. '```' → logprob: -16.713939666748047
    6. ' ' → logprob: -17.026439666748047
    7. '   ' → logprob: -17.213939666748047
    8. '
' → logprob: -17.713939666748047
    9. '0' → logprob: -17.713939666748047
    10. '+' → logprob: -17.963939666748047

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '2' → logprob: -16.500009536743164
    4. '```' → logprob: -17.562509536743164
    5. '
' → logprob: -17.937509536743164
    6. '۱' → logprob: -18.125009536743164
    7. '１' → logprob: -18.437509536743164
    8. '<|end|>' → logprob: -19.000009536743164
    9. '   ' → logprob: -19.250009536743164
    10. '...' → logprob: -19.937509536743164

Token 256: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14549997448921204
    2. '
' → logprob: -2.3954999446868896
    3. '       ' → logprob: -3.1454999446868896
    4. '    
' → logprob: -7.520500183105469
    5. '<|end|>' → logprob: -8.645500183105469
    6. 'index' → logprob: -8.770500183105469
    7. '        
' → logprob: -9.145500183105469
    8. '	' → logprob: -9.520500183105469
    9. '  
' → logprob: -10.145500183105469
    10. ' ' → logprob: -10.895500183105469

Token 257: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008726375177502632
    2. '       ' → logprob: -4.758726596832275
    3. 'index' → logprob: -9.633726119995117
    4. '
' → logprob: -10.133726119995117
    5. ' index' → logprob: -12.883726119995117
    6. '```' → logprob: -14.008726119995117
    7. '    
' → logprob: -14.133726119995117
    8. '  ' → logprob: -14.383726119995117
    9. '	index' → logprob: -14.758726119995117
    10. ',index' → logprob: -14.883726119995117

Token 258: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.12756818532943726
    2. ' index' → logprob: -2.127568244934082
    3. '   ' → logprob: -7.377568244934082
    4. '1' → logprob: -11.377568244934082
    5. '#index' → logprob: -14.002568244934082
    6. '
' → logprob: -14.127568244934082
    7. '	index' → logprob: -14.502568244934082
    8. '2' → logprob: -14.877568244934082
    9. '       ' → logprob: -15.377568244934082
    10. '=index' → logprob: -15.877568244934082

Token 259: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -2.816093228830141e-06
    2. 'double' → logprob: -12.87500286102295
    3. '_DOUBLE' → logprob: -16.750001907348633
    4. '_single' → logprob: -17.625001907348633
    5. 'Double' → logprob: -18.125001907348633
    6. ' double' → logprob: -19.250001907348633
    7. '_d' → logprob: -20.000001907348633
    8. '_multiple' → logprob: -20.375001907348633
    9. '_two' → logprob: -20.625001907348633
    10. ' двой' → logprob: -20.875001907348633

Token 260: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16054043173789978
    2. '+=' → logprob: -1.9105404615402222
    3. '+' → logprob: -8.160540580749512
    4. '   ' → logprob: -11.160540580749512
    5. '=' → logprob: -12.160540580749512
    6. ' +' → logprob: -12.285540580749512
    7. '	' → logprob: -13.035540580749512
    8. '    ' → logprob: -13.410540580749512
    9. ' ' → logprob: -13.785540580749512
    10. ' =' → logprob: -14.410540580749512

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.129266067640856e-05
    2. '2' → logprob: -10.875020980834961
    3. ' ' → logprob: -13.000020980834961
    4. '   ' → logprob: -19.00002098083496
    5. '１' → logprob: -20.62502098083496
    6. '+' → logprob: -21.12502098083496
    7. '```' → logprob: -21.12502098083496
    8. '۱' → logprob: -21.87502098083496
    9. '  ' → logprob: -22.37502098083496
    10. '3' → logprob: -22.68752098083496

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '2' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.125001907348633
    4. '１' → logprob: -20.375001907348633
    5. '   ' → logprob: -20.750001907348633
    6. '۱' → logprob: -21.875001907348633
    7. '```' → logprob: -21.937501907348633
    8. '0' → logprob: -22.125001907348633
    9. '  ' → logprob: -22.187501907348633
    10. '१' → logprob: -22.562501907348633

Token 263: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.45848218582978e-06
    2. 'index' → logprob: -13.12500286102295
    3. '```' → logprob: -15.62500286102295
    4. ' index' → logprob: -16.250001907348633
    5. '
' → logprob: -16.500001907348633
    6. '    
' → logprob: -16.875001907348633
    7. '<|end|>' → logprob: -17.125001907348633
    8. '       ' → logprob: -17.500001907348633
    9. '	index' → logprob: -17.875001907348633
    10. '<|end|>' → logprob: -18.000001907348633

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022094044834375381
    2. 'index' → logprob: -8.750221252441406
    3. ' index' → logprob: -9.875221252441406
    4. '```' → logprob: -12.000221252441406
    5. '	index' → logprob: -13.000221252441406
    6. '
' → logprob: -14.250221252441406
    7. ' ' → logprob: -14.250221252441406
    8. '  ' → logprob: -14.750221252441406
    9. '       ' → logprob: -15.250221252441406
    10. '    
' → logprob: -16.125221252441406

Token 265: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.34125402569770813
    2. ' index' → logprob: -1.3412539958953857
    3. '   ' → logprob: -3.5912539958953857
    4. '	index' → logprob: -10.341254234313965
    5. '_index' → logprob: -12.966254234313965
    6. ' ' → logprob: -13.091254234313965
    7. '```' → logprob: -13.716254234313965
    8. '[index' → logprob: -13.966254234313965
    9. '#index' → logprob: -14.466254234313965
    10. '  ' → logprob: -15.091254234313965

Token 266: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -0.0001246348983841017
    2. 'double' → logprob: -9.00012493133545
    3. '_single' → logprob: -14.87512493133545
    4. '_DOUBLE' → logprob: -15.37512493133545
    5. 'Double' → logprob: -15.50012493133545
    6. '++' → logprob: -16.000123977661133
    7. ' double' → logprob: -16.750123977661133
    8. '+' → logprob: -17.125123977661133
    9. '```' → logprob: -17.375123977661133
    10. '_two' → logprob: -17.625123977661133

Token 267: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16441303491592407
    2. ' +=' → logprob: -1.9144129753112793
    3. '+' → logprob: -5.539412975311279
    4. '   ' → logprob: -8.414413452148438
    5. ' +' → logprob: -11.289413452148438
    6. '    ' → logprob: -11.789413452148438
    7. ']+=' → logprob: -13.039413452148438
    8. '=' → logprob: -13.164413452148438
    9. ' ' → logprob: -13.289413452148438
    10. '  ' → logprob: -13.414413452148438

Token 268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '2' → logprob: -17.87506675720215
    4. '```' → logprob: -17.87506675720215
    5. '   ' → logprob: -18.25006675720215
    6. '１' → logprob: -19.62506675720215
    7. '<|end|>' → logprob: -20.12506675720215
    8. '۱' → logprob: -20.56256675720215
    9. '	' → logprob: -20.56256675720215
    10. ' ' → logprob: -20.93756675720215

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -16.000001907348633
    4. '2' → logprob: -17.625001907348633
    5. '<|end|>' → logprob: -18.312501907348633
    6. '۱' → logprob: -18.375001907348633
    7. '１' → logprob: -18.562501907348633
    8. '11' → logprob: -18.875001907348633
    9. '' → logprob: -19.062501907348633
    10. '0' → logprob: -19.062501907348633

Token 270: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45616814494132996
    2. 'first' → logprob: -1.4561681747436523
    3. 'total' → logprob: -3.2061681747436523
    4. 'last' → logprob: -4.456168174743652
    5. 'boundary' → logprob: -4.456168174743652
    6. 'result' → logprob: -4.581168174743652
    7. 'start' → logprob: -4.706168174743652
    8. 'over' → logprob: -4.956168174743652
    9. 'pairs' → logprob: -4.956168174743652
    10. 'pair' → logprob: -5.081168174743652

Token 271: 'result' (ID: 2521)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11316834390163422
    2. 'total' → logprob: -3.238168239593506
    3. 'first' → logprob: -3.363168239593506
    4. 'result' → logprob: -3.738168239593506
    5. 'pairs' → logprob: -6.363168239593506
    6. 'diff' → logprob: -6.488168239593506
    7. 'full' → logprob: -7.613168239593506
    8. 'over' → logprob: -7.863168239593506
    9. 'combined' → logprob: -7.863168239593506
    10. 'last' → logprob: -7.863168239593506

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004991813097149134
    2. '=' → logprob: -5.8799920082092285
    3. '_' → logprob: -6.1299920082092285
    4. ' _' → logprob: -12.12999153137207
    5. ' ' → logprob: -14.25499153137207
    6. ' ' → logprob: -14.25499153137207
    7. '_space' → logprob: -14.50499153137207
    8. ' =
' → logprob: -15.75499153137207
    9. ' +=' → logprob: -16.37999153137207
    10. '_=' → logprob: -16.50499153137207

Token 273: ' (' (ID: 350)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.06555712968111038
    2. '(pair' → logprob: -2.8155572414398193
    3. '0' → logprob: -6.06555700302124
    4. 'max' → logprob: -8.065557479858398
    5. '((' → logprob: -8.065557479858398
    6. ' pair' → logprob: -8.565557479858398
    7. 'repeat' → logprob: -8.815557479858398
    8. '(' → logprob: -9.315557479858398
    9. '(max' → logprob: -9.815557479858398
    10. '(p' → logprob: -9.940557479858398

Token 274: 'pair' (ID: 25488)
  Prédit: 'pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.0518740713596344
    2. 'repeat' → logprob: -3.3018741607666016
    3. '(pair' → logprob: -4.301874160766602
    4. 'len' → logprob: -9.176874160766602
    5. '(re' → logprob: -10.426874160766602
    6. ' pair' → logprob: -10.676874160766602
    7. 'rep' → logprob: -11.676874160766602
    8. '(len' → logprob: -12.176874160766602
    9. '   ' → logprob: -12.301874160766602
    10. '((' → logprob: -12.426874160766602

Token 275: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.320199877838604e-07
    2. 'count' → logprob: -14.75
    3. ')' → logprob: -19.625
    4. '	count' → logprob: -21.0
    5. '_single' → logprob: -21.25
    6. '_' → logprob: -21.25
    7. '   ' → logprob: -21.375
    8. ' ' → logprob: -21.375
    9. ' count' → logprob: -21.5
    10. '```' → logprob: -22.0

Token 276: '_double' (ID: 59806)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -7.171581091824919e-05
    2. '_double' → logprob: -9.62507152557373
    3. 'single' → logprob: -12.87507152557373
    4. '_' → logprob: -13.62507152557373
    5. '_s' → logprob: -13.62507152557373
    6. '_SINGLE' → logprob: -15.12507152557373
    7. ')' → logprob: -16.625072479248047
    8. '*' → logprob: -16.750072479248047
    9. 'Single' → logprob: -16.875072479248047
    10. ' ' → logprob: -17.125072479248047

Token 277: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2588411867618561
    2. '*' → logprob: -2.3838412761688232
    3. ' -' → logprob: -2.7588412761688232
    4. ')' → logprob: -2.7588412761688232
    5. '-' → logprob: -5.133841037750244
    6. ')*' → logprob: -6.633841037750244
    7. '+' → logprob: -7.258841037750244
    8. '*(' → logprob: -7.383841037750244
    9. ' +' → logprob: -8.008841514587402
    10. ')*(' → logprob: -9.633841514587402

Token 278: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.007888984866440296
    2. ' pair' → logprob: -5.0078887939453125
    3. '(pair' → logprob: -6.7578887939453125
    4. '   ' → logprob: -12.507888793945312
    5. ' ' → logprob: -13.007888793945312
    6. ' (' → logprob: -13.132888793945312
    7. '
' → logprob: -13.757888793945312
    8. ')' → logprob: -14.757888793945312
    9. 'repeat' → logprob: -15.007888793945312
    10. '  ' → logprob: -15.007888793945312

Token 279: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.45848218582978e-06
    2. 'count' → logprob: -13.00000286102295
    3. ')' → logprob: -17.375001907348633
    4. ' _' → logprob: -17.500001907348633
    5. '_' → logprob: -17.875001907348633
    6. '_COUNT' → logprob: -18.375001907348633
    7. '_repeat' → logprob: -18.750001907348633
    8. '_c' → logprob: -19.125001907348633
    9. 'Count' → logprob: -19.375001907348633
    10. '__' → logprob: -19.375001907348633

Token 280: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -1.1472419600977446e-06
    2. '_s' → logprob: -14.500000953674316
    3. 'single' → logprob: -14.625000953674316
    4. '_double' → logprob: -16.125001907348633
    5. '_SINGLE' → logprob: -17.625001907348633
    6. '_' → logprob: -17.750001907348633
    7. '__' → logprob: -18.750001907348633
    8. ' single' → logprob: -19.500001907348633
    9. 'Single' → logprob: -19.500001907348633
    10. '_one' → logprob: -19.625001907348633

Token 281: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.805981972021982e-05
    2. ')*' → logprob: -9.62509822845459
    3. ' )' → logprob: -11.12509822845459
    4. '+' → logprob: -11.37509822845459
    5. ' +' → logprob: -12.75009822845459
    6. '   ' → logprob: -14.25009822845459
    7. ')
' → logprob: -14.37509822845459
    8. '*' → logprob: -14.62509822845459
    9. ')*(' → logprob: -14.75009822845459
    10. '*)' → logprob: -14.87509822845459

Token 282: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20145446062088013
    2. '*' → logprob: -1.7014544010162354
    3. '
' → logprob: -10.701454162597656
    4. ' ' → logprob: -11.951454162597656
    5. '*(' → logprob: -12.076454162597656
    6. ')' → logprob: -13.826454162597656
    7. ' ' → logprob: -13.951454162597656
    8. '*object' → logprob: -13.951454162597656
    9. '   ' → logprob: -14.451454162597656
    10. '**' → logprob: -14.576454162597656

Token 283: ' (' (ID: 350)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.5798683166503906
    2. ' (' → logprob: -0.8298683166503906
    3. 'repeat' → logprob: -5.704868316650391
    4. ' repeat' → logprob: -7.954868316650391
    5. '(rep' → logprob: -8.82986831665039
    6. '(r' → logprob: -10.07986831665039
    7. '(max' → logprob: -10.45486831665039
    8. '(read' → logprob: -11.57986831665039
    9. '_repeat' → logprob: -12.95486831665039
    10. 'max' → logprob: -13.07986831665039

Token 284: 'repeat' (ID: 63242)
  Prédit: 'repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -2.696889623621246e-06
    2. ' repeat' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.250001907348633
    4. 'r' → logprob: -17.500001907348633
    5. 'rep' → logprob: -19.250001907348633
    6. 'read' → logprob: -19.875001907348633
    7. '_repeat' → logprob: -19.875001907348633
    8. '(re' → logprob: -20.250001907348633
    9. ')' → logprob: -20.375001907348633
    10. '.repeat' → logprob: -20.500001907348633

Token 285: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.7432603272027336e-06
    2. 'count' → logprob: -13.375001907348633
    3. 'Count' → logprob: -17.875001907348633
    4. '_repeat' → logprob: -17.875001907348633
    5. '_' → logprob: -18.125001907348633
    6. ' count' → logprob: -19.000001907348633
    7. ' ' → logprob: -19.000001907348633
    8. 'int' → logprob: -19.125001907348633
    9. '_COUNT' → logprob: -19.625001907348633
    10. '	count' → logprob: -19.875001907348633

Token 286: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0260303020477295
    2. ')' → logprob: -1.1510303020477295
    3. ' -' → logprob: -1.1510303020477295
    4. '<|end|>' → logprob: -5.026030540466309
    5. ' )' → logprob: -7.151030540466309
    6. '-)' → logprob: -7.401030540466309
    7. ')-' → logprob: -7.776030540466309
    8. '+' → logprob: -8.151030540466309
    9. ')+' → logprob: -10.151030540466309
    10. '
' → logprob: -10.151030540466309

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007325552869588137
    2. '2' → logprob: -7.250732421875
    3. ' ' → logprob: -10.750732421875
    4. ')' → logprob: -13.625732421875
    5. '۱' → logprob: -18.000732421875
    6. '１' → logprob: -18.063232421875
    7. '   ' → logprob: -18.250732421875
    8. '১' → logprob: -19.438232421875
    9. '  ' → logprob: -19.625732421875
    10. '```' → logprob: -19.625732421875

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00765501894056797
    2. '2' → logprob: -4.882655143737793
    3. ' ' → logprob: -10.007655143737793
    4. ')' → logprob: -12.507655143737793
    5. '   ' → logprob: -17.132654190063477
    6. '<|end|>' → logprob: -17.632654190063477
    7. '3' → logprob: -17.882654190063477
    8. '```' → logprob: -18.007654190063477
    9. '  ' → logprob: -18.257654190063477
    10. '0' → logprob: -18.507654190063477

Token 289: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046749215107411146
    2. ' )' → logprob: -8.125467300415039
    3. '+' → logprob: -9.000467300415039
    4. ')+' → logprob: -10.125467300415039
    5. ' +' → logprob: -12.000467300415039
    6. '+)' → logprob: -14.125467300415039
    7. ')
' → logprob: -14.875467300415039
    8. ' ' → logprob: -15.500467300415039
    9. '   ' → logprob: -15.875467300415039
    10. '）' → logprob: -16.12546730041504

Token 290: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.254089593887329
    2. 'result' → logprob: -1.254089593887329
    3. '+' → logprob: -1.504089593887329
    4. 'print' → logprob: -1.879089593887329
    5. ' +' → logprob: -3.379089593887329
    6. '+
' → logprob: -4.25408935546875
    7. 'pair' → logprob: -5.87908935546875
    8. '```' → logprob: -6.75408935546875
    9. ' result' → logprob: -7.37908935546875
    10. ' print' → logprob: -7.87908935546875

Token 291: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.0001239196863025427
    2. ' pair' → logprob: -9.000123977661133
    3. '(pair' → logprob: -14.625123977661133
    4. '   ' → logprob: -17.500123977661133
    5. 'pairs' → logprob: -19.000123977661133
    6. 'repeat' → logprob: -20.125123977661133
    7. '
' → logprob: -20.250123977661133
    8. ' ' → logprob: -21.000123977661133
    9. 'Pair' → logprob: -21.125123977661133
    10. '  ' → logprob: -21.250123977661133

Token 292: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.246537173457909e-06
    2. 'count' → logprob: -12.375003814697266
    3. '_counts' → logprob: -17.375003814697266
    4. '_code' → logprob: -18.625003814697266
    5. '```' → logprob: -19.375003814697266
    6. '_COUNT' → logprob: -19.750003814697266
    7. ' count' → logprob: -20.750003814697266
    8. 'Count' → logprob: -20.875003814697266
    9. '	count' → logprob: -21.125003814697266
    10. '_c' → logprob: -21.500003814697266

Token 293: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0008234490524046123
    2. 'single' → logprob: -7.125823497772217
    3. '_double' → logprob: -11.250823020935059
    4. '_s' → logprob: -12.250823020935059
    5. '_count' → logprob: -14.750823020935059
    6. '_pair' → logprob: -15.375823020935059
    7. 'double' → logprob: -15.500823020935059
    8. 's' → logprob: -15.750823020935059
    9. '_' → logprob: -16.250823974609375
    10. '(single' → logprob: -17.000823974609375

Token 294: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00022523177904076874
    2. '
' → logprob: -8.500225067138672
    3. '```' → logprob: -10.750225067138672
    4. ' print' → logprob: -15.750225067138672
    5. '``' → logprob: -16.500225067138672
    6. '
' → logprob: -18.000225067138672
    7. '`
' → logprob: -19.250225067138672
    8. '\n' → logprob: -19.625225067138672
    9. '  
' → logprob: -20.250225067138672
    10. '.print' → logprob: -20.375225067138672

Token 295: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -13.750000953674316
    3. ' print' → logprob: -19.000001907348633
    4. '``' → logprob: -19.125001907348633
    5. '
' → logprob: -19.750001907348633
    6. '	print' → logprob: -24.000001907348633
    7. '#print' → logprob: -24.750001907348633
    8. '.print' → logprob: -25.125001907348633
    9. '`' → logprob: -25.750001907348633
    10. '<|end|>' → logprob: -25.875001907348633

Token 296: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0019381542224436998
    2. '(' → logprob: -6.251938343048096
    3. 'result' → logprob: -11.626937866210938
    4. '(
' → logprob: -14.626937866210938
    5. '((' → logprob: -17.001937866210938
    6. ' (' → logprob: -17.126937866210938
    7. ',result' → logprob: -17.626937866210938
    8. '(res' → logprob: -17.876937866210938
    9. '(results' → logprob: -18.251937866210938
    10. ' result' → logprob: -18.376937866210938

Token 297: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -17.75
    4. '```' → logprob: -18.125
    5. '`)' → logprob: -18.125
    6. '')' → logprob: -18.5
    7. '))' → logprob: -19.25
    8. ')`' → logprob: -19.25
    9. '")' → logprob: -19.75
    10. '}' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 295
Tokens correctement prédits (1ère position, stricte): 145
Tokens correctement prédits (1ère position, avec adaptation): 153
Tokens correctement prédits (top 10): 263
Précision stricte (1ère position): 49.15%
Précision adaptée (1ère position): 51.86%
Précision (top 10): 89.15%
================================================================================
