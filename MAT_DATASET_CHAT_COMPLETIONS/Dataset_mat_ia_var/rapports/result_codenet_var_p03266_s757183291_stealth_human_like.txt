================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np
from operator import add, sub, mul, truediv
import itertools

# L'utilisateur va donner n et k
n, k = map(int, input().split())

# on stocke ici le compte de chaque reste
x = [0 for _ in range(k)]

for i in range(1, n+1):
    mod = i % k
    # J'ajoute à la position correspondante
    x[mod] += 1

# le cas de reste == 0 (je pense que c'est central)
ans = x[0] * x[0] * x[0]

# on itère sur les autres restes
for i in range(1, k):
    b = i % k
    a = k - b  # calcul douteux mais ça marche
    c = k - b  # même calcul
    # on vérifie cette propriété (aucune idée pourquoi mais bon)
    if (a + c) % k != 0:
        continue
    ans += x[a] * x[b] * x[c]

print(ans)  # on affiche le total (pas sûr du format mais tant pis)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.001180704333819449
    2. 'np' → logprob: -6.751180648803711
    3. ' ' → logprob: -12.001180648803711
    4. ' numpy' → logprob: -12.376180648803711
    5. ' ' → logprob: -15.751180648803711
    6. '```' → logprob: -17.75118064880371
    7. 'numpy' → logprob: -17.87618064880371
    8. '_np' → logprob: -18.12618064880371
    9. '(np' → logprob: -18.50118064880371
    10. ' n' → logprob: -18.75118064880371

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.605406641960144
    2. '\n' → logprob: -1.480406641960144
    3. 'newline' → logprob: -2.3554067611694336
    4. 'import' → logprob: -3.2304067611694336
    5. '\' → logprob: -3.2304067611694336
    6. '<|end|>' → logprob: -3.8554067611694336
    7. '```' → logprob: -4.480406761169434
    8. '
' → logprob: -5.480406761169434
    9. '[' → logprob: -5.855406761169434
    10. '<|end|>' → logprob: -6.480406761169434

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01564916968345642
    2. '\n' → logprob: -5.140649318695068
    3. '\' → logprob: -6.015649318695068
    4. '```' → logprob: -6.140649318695068
    5. '<|end|>' → logprob: -6.890649318695068
    6. 'import' → logprob: -6.890649318695068
    7. 'newline' → logprob: -7.390649318695068
    8. '
' → logprob: -7.640649318695068
    9. '#' → logprob: -8.01564884185791
    10. '[' → logprob: -8.26564884185791

Token 6: ' operator' (ID: 11019)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.060342974960803986
    2. ' pandas' → logprob: -3.310343027114868
    3. ' scipy' → logprob: -4.560342788696289
    4. ' tensorflow' → logprob: -5.185342788696289
    5. 'sk' → logprob: -5.310342788696289
    6. ' math' → logprob: -7.935342788696289
    7. ' matplotlib' → logprob: -8.685342788696289
    8. ' keras' → logprob: -8.685342788696289
    9. ' ' → logprob: -9.810342788696289
    10. ' random' → logprob: -10.185342788696289

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1459561288356781
    2. 'import' → logprob: -2.395956039428711
    3. '.' → logprob: -3.145956039428711
    4. ' .' → logprob: -6.895956039428711
    5. '.import' → logprob: -7.770956039428711
    6. ' ' → logprob: -9.145956039428711
    7. '	import' → logprob: -9.520956039428711
    8. '<|end|>' → logprob: -10.770956039428711
    9. '_import' → logprob: -10.895956039428711
    10. ' impor' → logprob: -12.270956039428711

Token 8: ' add' (ID: 1147)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.39799764752388
    2. ' add' → logprob: -2.0229976177215576
    3. ' import' → logprob: -2.2729976177215576
    4. 'item' → logprob: -2.6479976177215576
    5. 'import' → logprob: -4.897997856140137
    6. 'add' → logprob: -5.022997856140137
    7. ' ' → logprob: -5.522997856140137
    8. ' mul' → logprob: -6.522997856140137
    9. ' attr' → logprob: -6.897997856140137
    10. 'mul' → logprob: -8.022997856140137

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42278537154197693
    2. ',' → logprob: -2.2977852821350098
    3. '\n' → logprob: -2.2977852821350098
    4. '\' → logprob: -2.7977852821350098
    5. 'import' → logprob: -3.0477852821350098
    6. '(
' → logprob: -4.29778528213501
    7. ' (' → logprob: -5.92278528213501
    8. '\(' → logprob: -5.92278528213501
    9. '
' → logprob: -6.54778528213501
    10. '.' → logprob: -6.79778528213501

Token 10: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.6764512658119202
    2. 'mul' → logprob: -1.1764512062072754
    3. ' mul' → logprob: -2.1764512062072754
    4. ' sub' → logprob: -2.6764512062072754
    5. 'getitem' → logprob: -8.301451683044434
    6. ' ' → logprob: -8.926451683044434
    7. 'item' → logprob: -9.176451683044434
    8. ' i' → logprob: -9.676451683044434
    9. '	sub' → logprob: -9.676451683044434
    10. 'i' → logprob: -10.051451683044434

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3004523813724518
    2. '(' → logprob: -2.300452470779419
    3. '\n' → logprob: -2.550452470779419
    4. '\' → logprob: -3.800452470779419
    5. 'import' → logprob: -4.17545223236084
    6. 'print' → logprob: -4.67545223236084
    7. 'def' → logprob: -5.17545223236084
    8. '#' → logprob: -5.67545223236084
    9. '(
' → logprob: -5.92545223236084
    10. '```' → logprob: -6.05045223236084

Token 12: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.3870457708835602
    2. ' mul' → logprob: -1.1370457410812378
    3. ' tr' → logprob: -9.637045860290527
    4. 'pow' → logprob: -10.262045860290527
    5. '_mul' → logprob: -10.762045860290527
    6. ' ' → logprob: -11.512045860290527
    7. 'tr' → logprob: -11.762045860290527
    8. '.mul' → logprob: -12.137045860290527
    9. ' pow' → logprob: -12.762045860290527
    10. '```' → logprob: -12.887045860290527

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15092876553535461
    2. '(' → logprob: -2.7759287357330322
    3. '\' → logprob: -3.9009287357330322
    4. '\n' → logprob: -4.150928974151611
    5. ',
' → logprob: -4.775928974151611
    6. '```' → logprob: -4.775928974151611
    7. '[' → logprob: -5.275928974151611
    8. 'import' → logprob: -5.775928974151611
    9. ',

' → logprob: -5.900928974151611
    10. '#' → logprob: -6.775928974151611

Token 14: ' tr' (ID: 498)
  Prédit: ' tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tr' → logprob: -0.04428049176931381
    2. 'tr' → logprob: -3.169280529022217
    3. 'div' → logprob: -7.169280529022217
    4. ' div' → logprob: -8.044280052185059
    5. 'pow' → logprob: -9.294280052185059
    6. 'flo' → logprob: -10.169280052185059
    7. ' pow' → logprob: -10.919280052185059
    8. ' flo' → logprob: -11.294280052185059
    9. '```' → logprob: -11.919280052185059
    10. ' tru' → logprob: -12.544280052185059

Token 15: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.4905620515346527
    2. 'u' → logprob: -0.9905620813369751
    3. 'ue' → logprob: -4.1155619621276855
    4. 'ud' → logprob: -10.490562438964844
    5. 'uem' → logprob: -12.865562438964844
    6. 'd' → logprob: -13.990562438964844
    7. '#' → logprob: -15.240562438964844
    8. '[' → logprob: -15.615562438964844
    9. 'uen' → logprob: -15.740562438964844
    10. '
' → logprob: -15.865562438964844

Token 16: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -3.619311974034645e-05
    2. 'v' → logprob: -10.500036239624023
    3. 'div' → logprob: -11.875036239624023
    4. 'vi' → logprob: -13.875036239624023
    5. 'i' → logprob: -15.000036239624023
    6. 'ived' → logprob: -16.000036239624023
    7. 'ivr' → logprob: -16.875036239624023
    8. 'vide' → logprob: -17.000036239624023
    9. '_div' → logprob: -17.375036239624023
    10. 'ivid' → logprob: -17.500036239624023

Token 17: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37286749482154846
    2. '(' → logprob: -2.1228675842285156
    3. ',
' → logprob: -2.6228675842285156
    4. '\n' → logprob: -2.7478675842285156
    5. '(
' → logprob: -4.122867584228516
    6. '\' → logprob: -4.497867584228516
    7. '
' → logprob: -5.372867584228516
    8. ',

' → logprob: -5.372867584228516
    9. '```' → logprob: -5.622867584228516
    10. '#' → logprob: -5.747867584228516

Token 18: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7068194150924683
    2. '(' → logprob: -1.5818194150924683
    3. '(
' → logprob: -2.831819534301758
    4. ',' → logprob: -2.956819534301758
    5. '\n' → logprob: -3.331819534301758
    6. 'a' → logprob: -3.706819534301758
    7. '\' → logprob: -3.956819534301758
    8. '```' → logprob: -3.956819534301758
    9. 'import' → logprob: -4.706819534301758
    10. 'x' → logprob: -4.831819534301758

Token 19: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.09321386367082596
    2. ' pandas' → logprob: -3.2182137966156006
    3. ' itertools' → logprob: -3.7182137966156006
    4. ' tensorflow' → logprob: -4.34321403503418
    5. ' functools' → logprob: -4.96821403503418
    6. ' operator' → logprob: -6.84321403503418
    7. ' sys' → logprob: -6.84321403503418
    8. ' os' → logprob: -7.21821403503418
    9. ' random' → logprob: -7.59321403503418
    10. ' torch' → logprob: -7.96821403503418

Token 20: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14954103529453278
    2. '(' → logprob: -2.899541139602661
    3. '(
' → logprob: -3.774541139602661
    4. ',' → logprob: -3.899541139602661
    5. '\' → logprob: -4.649540901184082
    6. '(

' → logprob: -4.899540901184082
    7. 'def' → logprob: -5.149540901184082
    8. '.
' → logprob: -5.399540901184082
    9. '#' → logprob: -5.524540901184082
    10. '.

' → logprob: -6.149540901184082

Token 21: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6306251287460327
    2. 'def' → logprob: -1.2556251287460327
    3. '.' → logprob: -3.0056252479553223
    4. '(' → logprob: -3.1306252479553223
    5. '=' → logprob: -3.5056252479553223
    6. '*' → logprob: -3.8806252479553223
    7. ',' → logprob: -4.380625247955322
    8. 'd' → logprob: -5.380625247955322
    9. '`' → logprob: -5.755625247955322
    10. 'class' → logprob: -6.005625247955322

Token 22: ' L' (ID: 451)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3333553969860077
    2. 'def' → logprob: -1.58335542678833
    3. ' Define' → logprob: -3.45835542678833
    4. '#' → logprob: -4.95835542678833
    5. 'Define' → logprob: -5.58335542678833
    6. ' #' → logprob: -5.70835542678833
    7. ' product' → logprob: -6.08335542678833
    8. ' class' → logprob: -6.20835542678833
    9. ' operators' → logprob: -6.20835542678833
    10. ' import' → logprob: -6.20835542678833

Token 23: ''utilisateur' (ID: 140803)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.7273622155189514
    2. 'ambda' → logprob: -1.6023621559143066
    3. 'og' → logprob: -2.1023621559143066
    4. 'ine' → logprob: -2.8523621559143066
    5. 'in' → logprob: -3.7273621559143066
    6. 'amb' → logprob: -3.8523621559143066
    7. '#' → logprob: -4.227362155914307
    8. 'inear' → logprob: -4.477362155914307
    9. 'ists' → logprob: -4.727362155914307
    10. 'i' → logprob: -4.977362155914307

Token 24: ' va' (ID: 3423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1237984299659729
    2. ' veut' → logprob: -3.623798370361328
    3. 's' → logprob: -3.873798370361328
    4. ' souhaite' → logprob: -4.248798370361328
    5. ' peut' → logprob: -4.373798370361328
    6. 'def' → logprob: -4.498798370361328
    7. ' est' → logprob: -5.123798370361328
    8. '_' → logprob: -5.498798370361328
    9. ' s' → logprob: -6.248798370361328
    10. ' def' → logprob: -6.373798370361328

Token 25: ' donner' (ID: 32394)
  Prédit: ' saisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.8218455910682678
    2. ' pouvoir' → logprob: -2.196845531463623
    3. ' créer' → logprob: -2.196845531463623
    4. ' entrer' → logprob: -2.446845531463623
    5. ' définir' → logprob: -3.196845531463623
    6. ' fournir' → logprob: -3.446845531463623
    7. ' recevoir' → logprob: -3.571845531463623
    8. ' calcul' → logprob: -4.196845531463623
    9. ' rentrer' → logprob: -4.446845531463623
    10. ' devoir' → logprob: -4.571845531463623

Token 26: ' n' (ID: 297)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5197855234146118
    2. ' un' → logprob: -2.1447854042053223
    3. 'une' → logprob: -2.3947854042053223
    4. ' la' → logprob: -3.0197854042053223
    5. ' des' → logprob: -3.1447854042053223
    6. ' ' → logprob: -3.6447854042053223
    7. 'un' → logprob: -3.8947854042053223
    8. 'des' → logprob: -4.519785404205322
    9. ' son' → logprob: -4.769785404205322
    10. ' sa' → logprob: -4.769785404205322

Token 27: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05776092782616615
    2. ' =' → logprob: -3.5577609539031982
    3. '=' → logprob: -3.8077609539031982
    4. ',' → logprob: -5.932760715484619
    5. 'u' → logprob: -7.307760715484619
    6. ' ,' → logprob: -7.307760715484619
    7. '_' → logprob: -7.432760715484619
    8. 'umer' → logprob: -7.932760715484619
    9. '  ' → logprob: -9.682761192321777
    10. ' )' → logprob: -9.807761192321777

Token 28: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9256113171577454
    2. 'les' → logprob: -2.1756112575531006
    3. 'l' → logprob: -2.3006112575531006
    4. 'x' → logprob: -3.0506112575531006
    5. ' m' → logprob: -3.0506112575531006
    6. 'une' → logprob: -3.3006112575531006
    7. 'la' → logprob: -3.5506112575531006
    8. 'a' → logprob: -3.5506112575531006
    9. 'k' → logprob: -3.6756112575531006
    10. 'n' → logprob: -3.8006112575531006

Token 29: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06080757454037666
    2. '
' → logprob: -3.685807466506958
    3. '#' → logprob: -3.810807466506958
    4. ',' → logprob: -5.185807704925537
    5. '<|end|>' → logprob: -6.810807704925537
    6. '\' → logprob: -7.060807704925537
    7. ' n' → logprob: -7.310807704925537
    8. '\n' → logprob: -7.685807704925537
    9. '<|end|>' → logprob: -7.685807704925537
    10. 'def' → logprob: -7.685807704925537

Token 30: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016549929976463318
    2. ',' → logprob: -5.391550064086914
    3. '#' → logprob: -5.766550064086914
    4. '\' → logprob: -5.891550064086914
    5. '\n' → logprob: -6.016550064086914
    6. '
' → logprob: -6.516550064086914
    7. '```' → logprob: -7.516550064086914
    8. 'def' → logprob: -7.766550064086914
    9. '.' → logprob: -7.891550064086914
    10. '

' → logprob: -9.016550064086914

Token 31: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28610435128211975
    2. ',' → logprob: -1.9111043214797974
    3. ' ' → logprob: -2.661104440689087
    4. ' ,' → logprob: -3.661104440689087
    5. '=' → logprob: -5.286104202270508
    6. 'space' → logprob: -9.161104202270508
    7. '  ' → logprob: -10.286104202270508
    8. ',k' → logprob: -10.786104202270508
    9. '_space' → logprob: -11.036104202270508
    10. 's' → logprob: -11.161104202270508

Token 32: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.025046851485967636
    2. 'k' → logprob: -4.4000468254089355
    3. ' ' → logprob: -4.4000468254089355
    4. ' ' → logprob: -9.525047302246094
    5. ' =' → logprob: -9.900047302246094
    6. '=' → logprob: -11.025047302246094
    7. '=k' → logprob: -11.775047302246094
    8. '  ' → logprob: -11.900047302246094
    9. '	k' → logprob: -12.025047302246094
    10. '<|end|>' → logprob: -12.525047302246094

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002611368894577
    2. '=' → logprob: -2.3502612113952637
    3. ',' → logprob: -9.975260734558105
    4. ' ' → logprob: -12.975260734558105
    5. ')' → logprob: -13.725260734558105
    6. '<|end|>' → logprob: -13.850260734558105
    7. ' =
' → logprob: -13.975260734558105
    8. ' ,' → logprob: -14.600260734558105
    9. '=

' → logprob: -14.975260734558105
    10. ' =[' → logprob: -14.975260734558105

Token 34: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.384218692779541
    2. 'map' → logprob: -1.634218692779541
    3. ' ' → logprob: -2.634218692779541
    4. '5' → logprob: -3.759218692779541
    5. '10' → logprob: -3.884218692779541
    6. '20' → logprob: -6.384218692779541
    7. 'input' → logprob: -7.134218692779541
    8. ' input' → logprob: -7.384218692779541
    9. '3' → logprob: -7.509218692779541
    10. '4' → logprob: -7.634218692779541

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5308297276496887
    2. '(' → logprob: -0.9058297276496887
    3. '(str' → logprob: -5.530829906463623
    4. '(input' → logprob: -5.780829906463623
    5. '(lambda' → logprob: -7.780829906463623
    6. 'int' → logprob: -9.530829429626465
    7. '(
' → logprob: -10.280829429626465
    8. '<int' → logprob: -10.780829429626465
    9. 'input' → logprob: -11.155829429626465
    10. '[int' → logprob: -11.155829429626465

Token 36: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004037795122712851
    2. 'input' → logprob: -6.129037857055664
    3. ')' → logprob: -7.004037857055664
    4. '(' → logprob: -7.629037857055664
    5. '=input' → logprob: -8.379037857055664
    6. ',input' → logprob: -8.754037857055664
    7. ' input' → logprob: -10.129037857055664
    8. ',' → logprob: -11.629037857055664
    9. '[input' → logprob: -12.129037857055664
    10. '<input' → logprob: -13.129037857055664

Token 37: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132938742637634
    2. ' input' → logprob: -1.3132939338684082
    3. '(input' → logprob: -10.81329345703125
    4. ')' → logprob: -11.81329345703125
    5. '	input' → logprob: -13.81329345703125
    6. '=input' → logprob: -13.81329345703125
    7. ' )' → logprob: -14.18829345703125
    8. ',input' → logprob: -14.43829345703125
    9. ' ' → logprob: -14.56329345703125
    10. '<input' → logprob: -14.81329345703125

Token 38: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7635930180549622
    2. '(' → logprob: -1.6385929584503174
    3. '().' → logprob: -2.3885929584503174
    4. '())' → logprob: -2.7635929584503174
    5. '(input' → logprob: -3.2635929584503174
    6. '(()' → logprob: -3.3885929584503174
    7. '('' → logprob: -3.5135929584503174
    8. ')' → logprob: -3.7635929584503174
    9. '(""))' → logprob: -4.6385931968688965
    10. '());' → logprob: -5.2635931968688965

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020807012333534658
    2. 'strip' → logprob: -8.500207901000977
    3. '(split' → logprob: -13.000207901000977
    4. ' split' → logprob: -13.375207901000977
    5. ')' → logprob: -14.875207901000977
    6. 'rstrip' → logprob: -15.375207901000977
    7. 'spl' → logprob: -16.250207901000977
    8. 's' → logprob: -17.000207901000977
    9. '```' → logprob: -17.125207901000977
    10. '())' → logprob: -18.500207901000977

Token 40: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28932201862335205
    2. '())' → logprob: -1.414322018623352
    3. '))' → logprob: -5.5393218994140625
    4. '()' → logprob: -5.5393218994140625
    5. '()))' → logprob: -9.164321899414062
    6. '('' → logprob: -9.664321899414062
    7. '(' → logprob: -10.039321899414062
    8. '),' → logprob: -11.164321899414062
    9. ' )' → logprob: -11.664321899414062
    10. ')))' → logprob: -12.289321899414062

Token 41: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8794651627540588
    2. '\n' → logprob: -2.004465103149414
    3. '#' → logprob: -2.254465103149414
    4. '
' → logprob: -3.129465103149414
    5. 'operations' → logprob: -3.254465103149414
    6. 'numbers' → logprob: -3.379465103149414
    7. 'a' → logprob: -3.379465103149414
    8. '(' → logprob: -3.379465103149414
    9. 'result' → logprob: -3.504465103149414
    10. '\' → logprob: -3.879465103149414

Token 42: ' on' (ID: 402)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.038195013999939
    2. 'nums' → logprob: -2.0381951332092285
    3. 'arr' → logprob: -2.2881951332092285
    4. 'com' → logprob: -2.5381951332092285
    5. 'elements' → logprob: -2.9131951332092285
    6. 'def' → logprob: -3.0381951332092285
    7. 'values' → logprob: -3.1631951332092285
    8. '#' → logprob: -3.1631951332092285
    9. 'lst' → logprob: -3.9131951332092285
    10. 'data' → logprob: -4.2881951332092285

Token 43: ' stock' (ID: 6546)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21490931510925293
    2. '=' → logprob: -2.464909315109253
    3. 'range' → logprob: -3.089909315109253
    4. 'def' → logprob: -4.339909553527832
    5. ' range' → logprob: -4.964909553527832
    6. 'ranges' → logprob: -5.089909553527832
    7. '_range' → logprob: -5.214909553527832
    8. 'for' → logprob: -5.589909553527832
    9. 's' → logprob: -5.839909553527832
    10. '_' → logprob: -5.839909553527832

Token 44: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.002652348019182682
    2. 'er' → logprob: -6.252652168273926
    3. 'age' → logprob: -7.252652168273926
    4. 'é' → logprob: -11.752652168273926
    5. 'ent' → logprob: -13.002652168273926
    6. '#' → logprob: -13.752652168273926
    7. '	e' → logprob: -14.252652168273926
    8. 'era' → logprob: -14.627652168273926
    9. 'a' → logprob: -14.752652168273926
    10. 'ue' → logprob: -14.877652168273926

Token 45: ' ici' (ID: 27994)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.35774585604667664
    2. ' les' → logprob: -2.107745885848999
    3. '[]' → logprob: -2.982745885848999
    4. 'la' → logprob: -3.607745885848999
    5. ' la' → logprob: -4.23274564743042
    6. 'all' → logprob: -4.48274564743042
    7. 'le' → logprob: -4.73274564743042
    8. 'l' → logprob: -4.85774564743042
    9. ' toutes' → logprob: -4.98274564743042
    10. '[' → logprob: -5.10774564743042

Token 46: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.32179594039917
    2. 'all' → logprob: -1.44679594039917
    3. '[]' → logprob: -2.44679594039917
    4. 'les' → logprob: -3.07179594039917
    5. '[' → logprob: -3.32179594039917
    6. 'l' → logprob: -3.44679594039917
    7. '_' → logprob: -3.57179594039917
    8. ' l' → logprob: -3.69679594039917
    9. ' les' → logprob: -3.82179594039917
    10. ' ' → logprob: -3.94679594039917

Token 47: ' compte' (ID: 19657)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22289852797985077
    2. 'result' → logprob: -2.972898483276367
    3. ' résultat' → logprob: -2.972898483276367
    4. 'nombre' → logprob: -3.972898483276367
    5. 'rés' → logprob: -4.097898483276367
    6. 'res' → logprob: -4.847898483276367
    7. 'plus' → logprob: -5.347898483276367
    8. 'c' → logprob: -5.472898483276367
    9. 'es' → logprob: -5.597898483276367
    10. 'fact' → logprob: -5.597898483276367

Token 48: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016468318179249763
    2. 's' → logprob: -4.891468524932861
    3. '=' → logprob: -6.016468524932861
    4. '_counts' → logprob: -6.266468524932861
    5. ' =' → logprob: -6.766468524932861
    6. '_count' → logprob: -6.891468524932861
    7. ')' → logprob: -8.391468048095703
    8. '(' → logprob: -8.391468048095703
    9. '_c' → logprob: -8.641468048095703
    10. 'count' → logprob: -8.766468048095703

Token 49: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9637205600738525
    2. '_' → logprob: -1.8387205600738525
    3. ' l' → logprob: -2.2137205600738525
    4. ' toutes' → logprob: -2.7137205600738525
    5. 'l' → logprob: -2.8387205600738525
    6. 's' → logprob: -2.9637205600738525
    7. ' chaque' → logprob: -3.2137205600738525
    8. 'les' → logprob: -4.088720321655273
    9. ' la' → logprob: -4.838720321655273
    10. 'com' → logprob: -5.338720321655273

Token 50: ' reste' (ID: 26769)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.3257884979248047
    2. 'comb' → logprob: -1.3257884979248047
    3. ' ' → logprob: -2.7007884979248047
    4. 'poss' → logprob: -2.9507884979248047
    5. 'op' → logprob: -3.2007884979248047
    6. ' nombre' → logprob: -3.3257884979248047
    7. 'rés' → logprob: -3.3257884979248047
    8. 'c' → logprob: -3.8257884979248047
    9. ')' → logprob: -3.9507884979248047
    10. 'possible' → logprob: -4.075788497924805

Token 51: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4128915071487427
    2. '_' → logprob: -1.5378915071487427
    3. 'des' → logprob: -2.787891387939453
    4. '[' → logprob: -4.662891387939453
    5. '[]' → logprob: -4.912891387939453
    6. ' des' → logprob: -5.037891387939453
    7. ',' → logprob: -5.287891387939453
    8. '_counts' → logprob: -5.412891387939453
    9. '_des' → logprob: -5.912891387939453
    10. 'counts' → logprob: -6.037891387939453

Token 52: 'x' (ID: 87)
  Prédit: 'rema'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rema' → logprob: -0.9242583513259888
    2. 'counts' → logprob: -1.5492583513259888
    3. 'rests' → logprob: -2.424258232116699
    4. 'rem' → logprob: -2.424258232116699
    5. 're' → logprob: -2.549258232116699
    6. 'reste' → logprob: -3.174258232116699
    7. 'mod' → logprob: -3.549258232116699
    8. 'rest' → logprob: -3.674258232116699
    9. 'count' → logprob: -4.424258232116699
    10. 'res' → logprob: -4.799258232116699

Token 53: ' =' (ID: 314)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.5483522415161133
    2. '_' → logprob: -1.6733522415161133
    3. '_counts' → logprob: -1.6733522415161133
    4. '_r' → logprob: -1.7983522415161133
    5. 's' → logprob: -2.7983522415161133
    6. ' =' → logprob: -3.0483522415161133
    7. '_rest' → logprob: -3.1733522415161133
    8. '=' → logprob: -3.9233522415161133
    9. '[]' → logprob: -4.298352241516113
    10. '_mod' → logprob: -4.548352241516113

Token 54: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12549088895320892
    2. ' [' → logprob: -2.37549090385437
    3. '{}' → logprob: -3.75049090385437
    4. '{' → logprob: -7.000490665435791
    5. ' {}' → logprob: -8.25049114227295
    6. '[n' → logprob: -9.50049114227295
    7. '[k' → logprob: -9.62549114227295
    8. 'np' → logprob: -9.87549114227295
    9. '[]' → logprob: -10.62549114227295
    10. ' {' → logprob: -11.25049114227295

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018125296628568321
    2. ' ' → logprob: -8.625181198120117
    3. ']' → logprob: -14.250181198120117
    4. '1' → logprob: -14.750181198120117
    5. ')' → logprob: -15.125181198120117
    6. 'int' → logprob: -16.750181198120117
    7. '   ' → logprob: -17.125181198120117
    8. '  ' → logprob: -17.312681198120117
    9. 'k' → logprob: -17.312681198120117
    10. '(' → logprob: -17.562681198120117

Token 56: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005367156583815813
    2. ']*' → logprob: -5.630367279052734
    3. ' for' → logprob: -6.630367279052734
    4. ',' → logprob: -8.505367279052734
    5. ']*(' → logprob: -8.880367279052734
    6. ' ]' → logprob: -9.630367279052734
    7. ')' → logprob: -11.255367279052734
    8. 'for' → logprob: -11.255367279052734
    9. ')]' → logprob: -12.130367279052734
    10. '()]' → logprob: -13.130367279052734

Token 57: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11293474584817886
    2. 'range' → logprob: -3.1129348278045654
    3. '_' → logprob: -3.4879348278045654
    4. '(range' → logprob: -3.7379348278045654
    5. ' _' → logprob: -6.112934589385986
    6. ' i' → logprob: -6.237934589385986
    7. '_range' → logprob: -6.362934589385986
    8. '(' → logprob: -6.612934589385986
    9. '	range' → logprob: -7.987934589385986
    10. '()' → logprob: -9.112935066223145

Token 58: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020051153376698494
    2. ' range' → logprob: -4.020051002502441
    3. ' in' → logprob: -7.020051002502441
    4. 'in' → logprob: -7.395051002502441
    5. 'ange' → logprob: -8.895051002502441
    6. ' ' → logprob: -9.020051002502441
    7. '	range' → logprob: -9.770051002502441
    8. '  ' → logprob: -10.770051002502441
    9. ' xrange' → logprob: -11.020051002502441
    10. '(range' → logprob: -11.645051002502441

Token 59: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061974965035915375
    2. ' range' → logprob: -2.8119750022888184
    3. '(range' → logprob: -12.68697452545166
    4. '	range' → logprob: -13.56197452545166
    5. ' ' → logprob: -14.06197452545166
    6. 'rang' → logprob: -14.56197452545166
    7. ')' → logprob: -15.06197452545166
    8. ' xrange' → logprob: -15.06197452545166
    9. '(' → logprob: -15.56197452545166
    10. 'x' → logprob: -15.81197452545166

Token 60: '(k' (ID: 12125)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.21486105024814606
    2. '(k' → logprob: -1.7148610353469849
    3. '(' → logprob: -4.339860916137695
    4. ' (' → logprob: -8.089860916137695
    5. 'k' → logprob: -12.589860916137695
    6. ' k' → logprob: -12.839860916137695
    7. '((' → logprob: -12.839860916137695
    8. 'n' → logprob: -13.964860916137695
    9. ' n' → logprob: -14.089860916137695
    10. ']' → logprob: -14.589860916137695

Token 61: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.537180211627856e-05
    2. '+' → logprob: -10.625045776367188
    3. ' )' → logprob: -11.125045776367188
    4. ')' → logprob: -13.125045776367188
    5. ')])' → logprob: -13.625045776367188
    6. ']' → logprob: -14.000045776367188
    7. '])]' → logprob: -14.375045776367188
    8. ')]
' → logprob: -14.500045776367188
    9. '])' → logprob: -15.500045776367188
    10. '')]' → logprob: -15.500045776367188

Token 62: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7335566878318787
    2. '
' → logprob: -1.1085567474365234
    3. '<|end|>' → logprob: -2.9835567474365234
    4. ' for' → logprob: -3.1085567474365234
    5. '#' → logprob: -3.2335567474365234
    6. ')' → logprob: -3.8585567474365234
    7. 'x' → logprob: -4.983556747436523
    8. '\n' → logprob: -4.983556747436523
    9. 'n' → logprob: -5.733556747436523
    10. '<|end|>' → logprob: -5.858556747436523

Token 63: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6108219027519226
    2. ' _' → logprob: -1.2358219623565674
    3. ' ' → logprob: -1.8608219623565674
    4. '_' → logprob: -4.610821723937988
    5. ' range' → logprob: -7.485821723937988
    6. 'i' → logprob: -8.610821723937988
    7. ' n' → logprob: -8.985821723937988
    8. 'range' → logprob: -10.235821723937988
    9. '_i' → logprob: -10.860821723937988
    10. ' ‌' → logprob: -11.360821723937988

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02352636680006981
    2. 'in' → logprob: -3.773526430130005
    3. ' ' → logprob: -8.273526191711426
    4. 'range' → logprob: -11.398526191711426
    5. ',' → logprob: -12.773526191711426
    6. '  ' → logprob: -13.023526191711426
    7. 'n' → logprob: -13.648526191711426
    8. '_' → logprob: -13.648526191711426
    9. 'import' → logprob: -13.898526191711426
    10. '	in' → logprob: -14.023526191711426

Token 65: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008624029345810413
    2. 'range' → logprob: -4.758624076843262
    3. '(range' → logprob: -12.383624076843262
    4. '	range' → logprob: -12.758624076843262
    5. ' xrange' → logprob: -13.758624076843262
    6. ' ' → logprob: -14.383624076843262
    7. '.range' → logprob: -15.883624076843262
    8. '_range' → logprob: -16.258623123168945
    9. '```' → logprob: -16.633623123168945
    10. 'rang' → logprob: -16.758623123168945

Token 66: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10021896660327911
    2. '(n' → logprob: -2.3502190113067627
    3. ' (' → logprob: -12.100218772888184
    4. '(k' → logprob: -12.225218772888184
    5. '(
' → logprob: -14.600218772888184
    6. '1' → logprob: -15.100218772888184
    7. '(i' → logprob: -15.350218772888184
    8. '(x' → logprob: -15.475218772888184
    9. '((' → logprob: -15.475218772888184
    10. ' ' → logprob: -15.975218772888184

Token 67: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0080734733492136
    2. '1' → logprob: -5.008073329925537
    3. ' n' → logprob: -6.633073329925537
    4. 'k' → logprob: -11.258073806762695
    5. '(n' → logprob: -12.133073806762695
    6. ' ' → logprob: -12.133073806762695
    7. '0' → logprob: -12.383073806762695
    8. ')n' → logprob: -12.633073806762695
    9. '	n' → logprob: -12.758073806762695
    10. '(' → logprob: -13.133073806762695

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016654862090945244
    2. ' ,' → logprob: -4.141654968261719
    3. ',n' → logprob: -7.391654968261719
    4. ',k' → logprob: -12.641654968261719
    5. 'n' → logprob: -15.266654968261719
    6. ',
' → logprob: -16.26665496826172
    7. '1' → logprob: -16.76665496826172
    8. ' ' → logprob: -16.89165496826172
    9. '，' → logprob: -16.89165496826172
    10. ' n' → logprob: -16.89165496826172

Token 69: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06198213994503021
    2. 'n' → logprob: -2.8119821548461914
    3. ' ' → logprob: -11.936982154846191
    4. '	n' → logprob: -11.936982154846191
    5. ')n' → logprob: -14.436982154846191
    6. ')' → logprob: -15.436982154846191
    7. ' ' → logprob: -15.811982154846191
    8. ',n' → logprob: -16.436981201171875
    9. '<|end|>' → logprob: -16.686981201171875
    10. '(n' → logprob: -16.686981201171875

Token 70: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016034837812185287
    2. ' +' → logprob: -4.1410346031188965
    3. ' ' → logprob: -15.391035079956055
    4. '+k' → logprob: -16.266035079956055
    5. '+
' → logprob: -17.141035079956055
    6. '1' → logprob: -17.141035079956055
    7. '＋' → logprob: -17.391035079956055
    8. '//' → logprob: -17.391035079956055
    9. '):' → logprob: -17.891035079956055
    10. '+n' → logprob: -18.141035079956055

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. ')' → logprob: -18.12500762939453
    4. '```' → logprob: -19.00000762939453
    5. '2' → logprob: -19.37500762939453
    6. '۱' → logprob: -20.87500762939453
    7. '１' → logprob: -21.00000762939453
    8. '  ' → logprob: -21.12500762939453
    9. '

' → logprob: -21.37500762939453
    10. '   ' → logprob: -21.37500762939453

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002175719942897558
    2. ')' → logprob: -6.502175807952881
    3. ' ):' → logprob: -7.377175807952881
    4. ':' → logprob: -10.377175331115723
    5. '):
' → logprob: -11.127175331115723
    6. ' )' → logprob: -14.752175331115723
    7. '}:' → logprob: -14.877175331115723
    8. ',' → logprob: -15.002175331115723
    9. ']:' → logprob: -15.002175331115723
    10. '):
' → logprob: -16.00217628479004

Token 73: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14392252266407013
    2. ':' → logprob: -2.5189225673675537
    3. ' x' → logprob: -3.2689225673675537
    4. ' :' → logprob: -5.393922328948975
    5. '<|end|>' → logprob: -6.018922328948975
    6. 'x' → logprob: -6.393922328948975
    7. ' rest' → logprob: -6.393922328948975
    8. '  ' → logprob: -6.893922328948975
    9. ' ' → logprob: -7.143922328948975
    10. ')' → logprob: -7.518922328948975

Token 74: ' mod' (ID: 1812)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2550835907459259
    2. 'x' → logprob: -1.5050835609436035
    3. ':' → logprob: -6.5050835609436035
    4. '   ' → logprob: -8.130084037780762
    5. ' r' → logprob: -8.255084037780762
    6. ' ' → logprob: -8.255084037780762
    7. 'r' → logprob: -8.880084037780762
    8. '    ' → logprob: -9.380084037780762
    9. ' rest' → logprob: -9.505084037780762
    10. 'rest' → logprob: -10.005084037780762

Token 75: ' =' (ID: 314)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.5392225384712219
    2. ' =' → logprob: -2.164222478866577
    3. '_value' → logprob: -2.164222478866577
    4. 'ulo' → logprob: -2.414222478866577
    5. '_i' → logprob: -3.164222478866577
    6. 'ulus' → logprob: -4.289222717285156
    7. '_' → logprob: -4.789222717285156
    8. '=' → logprob: -5.039222717285156
    9. ')' → logprob: -5.414222717285156
    10. 'ULO' → logprob: -5.789222717285156

Token 76: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023251067847013474
    2. 'i' → logprob: -3.7732510566711426
    3. ' ' → logprob: -12.6482515335083
    4. '(i' → logprob: -13.5232515335083
    5. '	i' → logprob: -14.3982515335083
    6. '   ' → logprob: -15.6482515335083
    7. '  ' → logprob: -15.7732515335083
    8. ' (' → logprob: -16.523250579833984
    9. '%i' → logprob: -17.148250579833984
    10. '```' → logprob: -17.148250579833984

Token 77: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03885503485798836
    2. '%' → logprob: -3.2888550758361816
    3. ' ' → logprob: -7.163855075836182
    4. '%i' → logprob: -11.288854598999023
    5. ' ' → logprob: -11.538854598999023
    6. '<|end|>' → logprob: -11.538854598999023
    7. '%n' → logprob: -13.663854598999023
    8. ' %=' → logprob: -14.163854598999023
    9. '%x' → logprob: -14.413854598999023
    10. '%d' → logprob: -14.413854598999023

Token 78: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.061969030648469925
    2. ' k' → logprob: -2.811969041824341
    3. '	k' → logprob: -13.686968803405762
    4. ' ' → logprob: -15.936968803405762
    5. ' к' → logprob: -16.186969757080078
    6. '<|end|>' → logprob: -17.061969757080078
    7. '  ' → logprob: -18.436969757080078
    8. '?k' → logprob: -18.561969757080078
    9. '-k' → logprob: -18.561969757080078
    10. ',k' → logprob: -18.686969757080078

Token 79: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4301309883594513
    2. '
' → logprob: -1.180130958557129
    3. '<|end|>' → logprob: -3.805130958557129
    4. ']' → logprob: -5.055130958557129
    5. ' x' → logprob: -5.555130958557129
    6. ')' → logprob: -5.930130958557129
    7. '   ' → logprob: -6.055130958557129
    8. ' ' → logprob: -6.430130958557129
    9. '```' → logprob: -7.055130958557129
    10. '<|end|>' → logprob: -7.930130958557129

Token 80: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027508912608027458
    2. '
' → logprob: -4.027508735656738
    3. ' x' → logprob: -5.277508735656738
    4. '<|end|>' → logprob: -5.777508735656738
    5. ' ' → logprob: -7.777508735656738
    6. '   ' → logprob: -8.402508735656738
    7. ')' → logprob: -8.652508735656738
    8. ']' → logprob: -9.777508735656738
    9. '<|end|>' → logprob: -10.152508735656738
    10. '```' → logprob: -10.402508735656738

Token 81: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011309295892715454
    2. ' x' → logprob: -4.6363091468811035
    3. '1' → logprob: -6.5113091468811035
    4. ' ' → logprob: -9.761309623718262
    5. '   ' → logprob: -12.511309623718262
    6. '  ' → logprob: -13.886309623718262
    7. '	x' → logprob: -14.136309623718262
    8. '```' → logprob: -14.636309623718262
    9. ')' → logprob: -15.136309623718262
    10. '+' → logprob: -15.636309623718262

Token 82: ' J' (ID: 643)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12697724997997284
    2. ' x' → logprob: -2.1269772052764893
    3. '1' → logprob: -10.62697696685791
    4. ' ' → logprob: -12.00197696685791
    5. '   ' → logprob: -12.25197696685791
    6. 'add' → logprob: -12.37697696685791
    7. ' add' → logprob: -12.62697696685791
    8. '+' → logprob: -12.87697696685791
    9. '	x' → logprob: -13.50197696685791
    10. '+x' → logprob: -14.87697696685791

Token 83: ''aj' (ID: 116735)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09506639093160629
    2. 'e' → logprob: -2.8450663089752197
    3. 'uste' → logprob: -4.470066547393799
    4. 'u' → logprob: -4.845066547393799
    5. 'a' → logprob: -5.720066547393799
    6. 'oueur' → logprob: -5.970066547393799
    7. 'ust' → logprob: -6.220066547393799
    8. 'i' → logprob: -7.470066547393799
    9. '#' → logprob: -7.595066547393799
    10. ''aj' → logprob: -7.845066547393799

Token 84: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -5.955703818472102e-05
    2. 'outer' → logprob: -10.125059127807617
    3. 'outez' → logprob: -11.625059127807617
    4. 'out' → logprob: -12.250059127807617
    5. 'ou' → logprob: -13.625059127807617
    6. '#' → logprob: -14.000059127807617
    7. 'outes' → logprob: -14.000059127807617
    8. 'o' → logprob: -14.125059127807617
    9. '\' → logprob: -14.500059127807617
    10. 'uste' → logprob: -14.500059127807617

Token 85: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45757508277893066
    2. ' x' → logprob: -1.8325750827789307
    3. ' ' → logprob: -2.2075750827789307
    4. 'x' → logprob: -2.3325750827789307
    5. '  ' → logprob: -10.082574844360352
    6. '+' → logprob: -10.082574844360352
    7. '(x' → logprob: -10.707574844360352
    8. ' +' → logprob: -11.207574844360352
    9. '    ' → logprob: -11.707574844360352
    10. '   ' → logprob: -11.832574844360352

Token 86: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0789535716176033
    2. ' x' → logprob: -2.578953504562378
    3. ' ' → logprob: -9.828953742980957
    4. 'l' → logprob: -12.453953742980957
    5. ' la' → logprob: -14.078953742980957
    6. '	x' → logprob: -14.203953742980957
    7. '(x' → logprob: -14.328953742980957
    8. '`' → logprob: -14.453953742980957
    9. 'la' → logprob: -14.703953742980957
    10. '1' → logprob: -14.703953742980957

Token 87: ' position' (ID: 4010)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048332177102565765
    2. 'i' → logprob: -3.2983322143554688
    3. ' valeur' → logprob: -5.673332214355469
    4. ' x' → logprob: -7.173332214355469
    5. 'mod' → logprob: -7.173332214355469
    6. 'rray' → logprob: -7.298332214355469
    7. 'ction' → logprob: -7.798332214355469
    8. '[i' → logprob: -7.798332214355469
    9. 'liste' → logprob: -7.923332214355469
    10. 'j' → logprob: -8.548332214355469

Token 88: ' correspond' (ID: 11095)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.09264356642961502
    2. ' mod' → logprob: -2.5926434993743896
    3. '(mod' → logprob: -4.967643737792969
    4. '[' → logprob: -5.092643737792969
    5. '```' → logprob: -8.092643737792969
    6. 'x' → logprob: -9.717643737792969
    7. '	mod' → logprob: -9.717643737792969
    8. ' [' → logprob: -10.092643737792969
    9. '   ' → logprob: -10.342643737792969
    10. ' ' → logprob: -11.092643737792969

Token 89: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.00020520923135336488
    2. 'ant' → logprob: -9.250205039978027
    3. '   ' → logprob: -10.250205039978027
    4. 'ance' → logprob: -10.250205039978027
    5. 'ente' → logprob: -10.875205039978027
    6. 'a' → logprob: -11.875205039978027
    7. 'e' → logprob: -13.250205039978027
    8. ' ' → logprob: -13.250205039978027
    9. ' à' → logprob: -14.000205039978027
    10. '       ' → logprob: -14.375205039978027

Token 90: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1825067102909088
    2. ' x' → logprob: -1.8075066804885864
    3. '(x' → logprob: -6.057506561279297
    4. ' ' → logprob: -9.307506561279297
    5. '[x' → logprob: -9.307506561279297
    6. ',' → logprob: -9.807506561279297
    7. ']' → logprob: -10.057506561279297
    8. '1' → logprob: -10.932506561279297
    9. 'mod' → logprob: -11.057506561279297
    10. '(' → logprob: -11.182506561279297

Token 91: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3892030119895935
    2. ' x' → logprob: -1.1392030715942383
    3. ' ' → logprob: -6.889203071594238
    4. '(x' → logprob: -7.139203071594238
    5. '(' → logprob: -9.389203071594238
    6. '1' → logprob: -9.639203071594238
    7. ' +=' → logprob: -9.764203071594238
    8. ' (' → logprob: -9.889203071594238
    9. ':' → logprob: -10.264203071594238
    10. ',' → logprob: -10.389203071594238

Token 92: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.07592195272445679
    2. ' x' → logprob: -3.2009220123291016
    3. '1' → logprob: -3.4509220123291016
    4. ' ' → logprob: -7.450922012329102
    5. '+' → logprob: -10.325922012329102
    6. '(x' → logprob: -10.575922012329102
    7. ')' → logprob: -12.450922012329102
    8. '   ' → logprob: -12.700922012329102
    9. ']' → logprob: -12.950922012329102
    10. '```' → logprob: -12.950922012329102

Token 93: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '[m' → logprob: -13.62500286102295
    3. '[x' → logprob: -14.50000286102295
    4. 'mod' → logprob: -14.62500286102295
    5. ' [' → logprob: -15.00000286102295
    6. '[module' → logprob: -15.87500286102295
    7. '```' → logprob: -16.375003814697266
    8. '[
' → logprob: -17.250003814697266
    9. '[i' → logprob: -17.375003814697266
    10. '][' → logprob: -18.000003814697266

Token 94: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0002043748099822551
    2. ' mod' → logprob: -8.500204086303711
    3. 'm' → logprob: -15.125204086303711
    4. '(mod' → logprob: -15.625204086303711
    5. '	mod' → logprob: -16.00020408630371
    6. 'mo' → logprob: -16.12520408630371
    7. ' ' → logprob: -16.62520408630371
    8. 'modal' → logprob: -18.00020408630371
    9. '   ' → logprob: -18.25020408630371
    10. 'mode' → logprob: -18.62520408630371

Token 95: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00035906085395254195
    2. ' ]' → logprob: -8.250359535217285
    3. ']+=' → logprob: -9.250359535217285
    4. ')]' → logprob: -14.375359535217285
    5. ')' → logprob: -14.875359535217285
    6. '']' → logprob: -15.500359535217285
    7. ']+' → logprob: -15.500359535217285
    8. '`]' → logprob: -16.50035858154297
    9. '"]' → logprob: -16.75035858154297
    10. '   ' → logprob: -17.25035858154297

Token 96: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4777989089488983
    2. ' +=' → logprob: -0.9777989387512207
    3. '=' → logprob: -5.727798938751221
    4. ' =' → logprob: -7.727798938751221
    5. '+' → logprob: -11.352798461914062
    6. ']+=' → logprob: -11.852798461914062
    7. ' ' → logprob: -14.227798461914062
    8. '+='' → logprob: -14.852798461914062
    9. ' +' → logprob: -15.727798461914062
    10. '+=(' → logprob: -16.352798461914062

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012518009170889854
    2. ' ' → logprob: -4.387517929077148
    3. 'i' → logprob: -12.012517929077148
    4. ' i' → logprob: -14.137517929077148
    5. 'mul' → logprob: -14.387517929077148
    6. '   ' → logprob: -15.137517929077148
    7. 'x' → logprob: -15.887517929077148
    8. 'add' → logprob: -15.950017929077148
    9. '  ' → logprob: -16.07501792907715
    10. '2' → logprob: -16.88751792907715

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013798571308143437
    2. ' ' → logprob: -9.125138282775879
    3. 'i' → logprob: -10.625138282775879
    4. 'mul' → logprob: -12.750138282775879
    5. 'add' → logprob: -14.000138282775879
    6. 'x' → logprob: -15.250138282775879
    7. 'n' → logprob: -16.312637329101562
    8. ' i' → logprob: -16.625137329101562
    9. '  ' → logprob: -16.875137329101562
    10. '2' → logprob: -17.000137329101562

Token 99: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6807727813720703
    2. '#' → logprob: -2.0557727813720703
    3. 'count' → logprob: -2.5557727813720703
    4. 'total' → logprob: -2.5557727813720703
    5. 'for' → logprob: -2.9307727813720703
    6. 'print' → logprob: -2.9307727813720703
    7. 'pairs' → logprob: -3.1807727813720703
    8. 'answer' → logprob: -3.9307727813720703
    9. 'res' → logprob: -4.18077278137207
    10. 'sum' → logprob: -4.80577278137207

Token 101: ' le' (ID: 505)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8246413469314575
    2. 'total' → logprob: -1.6996413469314575
    3. 'count' → logprob: -1.8246413469314575
    4. 'pairs' → logprob: -2.324641227722168
    5. '#' → logprob: -3.199641227722168
    6. 'for' → logprob: -3.324641227722168
    7. 'res' → logprob: -4.199641227722168
    8. 's' → logprob: -4.824641227722168
    9. 'com' → logprob: -5.574641227722168
    10. 'max' → logprob: -5.824641227722168

Token 102: ' cas' (ID: 2108)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.081377387046814
    2. '#' → logprob: -1.456377387046814
    3. ' total' → logprob: -2.2063775062561035
    4. 'result' → logprob: -2.4563775062561035
    5. 'total' → logprob: -3.2063775062561035
    6. ' result' → logprob: -3.7063775062561035
    7. ' résultat' → logprob: -3.8313775062561035
    8. 'r' → logprob: -4.4563775062561035
    9. 'rés' → logprob: -4.5813775062561035
    10. ' #' → logprob: -4.5813775062561035

Token 103: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.575840413570404
    2. 'i' → logprob: -2.075840473175049
    3. '0' → logprob: -2.325840473175049
    4. ' où' → logprob: -2.825840473175049
    5. 'où' → logprob: -3.200840473175049
    6. ' particulier' → logprob: -3.825840473175049
    7. 'special' → logprob: -3.950840473175049
    8. ' where' → logprob: -4.325840473175049
    9. 'where' → logprob: -4.450840473175049
    10. ' x' → logprob: -4.450840473175049

Token 104: ' reste' (ID: 26769)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0379856824874878
    2. 'k' → logprob: -1.4129856824874878
    3. '0' → logprob: -2.0379858016967773
    4. 'mod' → logprob: -2.0379858016967773
    5. 'l' → logprob: -3.1629858016967773
    6. 'la' → logprob: -3.2879858016967773
    7. 'x' → logprob: -3.7879858016967773
    8. ' i' → logprob: -4.662985801696777
    9. ' la' → logprob: -4.787985801696777
    10. ' k' → logprob: -5.162985801696777

Token 105: ' ==' (ID: 951)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017373013542965055
    2. ' ' → logprob: -6.376737117767334
    3. 'k' → logprob: -10.501737594604492
    4. 'zero' → logprob: -12.751737594604492
    5. ' zéro' → logprob: -13.501737594604492
    6. '=' → logprob: -13.501737594604492
    7. ' k' → logprob: -14.626737594604492
    8. 'x' → logprob: -14.876737594604492
    9. ' zero' → logprob: -14.876737594604492
    10. '[' → logprob: -15.126737594604492

Token 106: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026301460340619087
    2. ' ' → logprob: -3.651301383972168
    3. '   ' → logprob: -15.026301383972168
    4. '1' → logprob: -15.526301383972168
    5. ' ' → logprob: -15.651301383972168
    6. '  ' → logprob: -15.963801383972168
    7. '```' → logprob: -16.713802337646484
    8. '[' → logprob: -17.088802337646484
    9. '`' → logprob: -17.338802337646484
    10. ' zéro' → logprob: -17.776302337646484

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -17.250030517578125
    4. '```' → logprob: -17.875030517578125
    5. '[' → logprob: -19.250030517578125
    6. '00' → logprob: -19.375030517578125
    7. '2' → logprob: -19.875030517578125
    8. '000' → logprob: -20.000030517578125
    9. '۰' → logprob: -20.000030517578125
    10. '`' → logprob: -20.312530517578125

Token 108: ' (' (ID: 350)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.35374343395233154
    2. 'result' → logprob: -2.103743553161621
    3. 'res' → logprob: -2.478743553161621
    4. 'answer' → logprob: -3.853743553161621
    5. 'x' → logprob: -3.978743553161621
    6. 'pairs' → logprob: -4.478743553161621
    7. 'print' → logprob: -4.853743553161621
    8. 'ans' → logprob: -4.978743553161621
    9. 'cnt' → logprob: -4.978743553161621
    10. 'total' → logprob: -5.478743553161621

Token 109: 'je' (ID: 1587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004570034798234701
    2. '):' → logprob: -6.504570007324219
    3. ')
' → logprob: -6.879570007324219
    4. ':' → logprob: -7.129570007324219
    5. ' )' → logprob: -7.879570007324219
    6. 'x' → logprob: -8.004570007324219
    7. ',' → logprob: -8.754570007324219
    8. '),' → logprob: -9.254570007324219
    9. ')

' → logprob: -9.754570007324219
    10. '#' → logprob: -10.129570007324219

Token 110: ' pense' (ID: 29077)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24745750427246094
    2. 'continue' → logprob: -2.497457504272461
    3. 'x' → logprob: -3.372457504272461
    4. 's' → logprob: -3.997457504272461
    5. ' #' → logprob: -4.247457504272461
    6. 'print' → logprob: -4.622457504272461
    7. ' continue' → logprob: -4.747457504272461
    8. 'for' → logprob: -4.872457504272461
    9. 'n' → logprob: -4.997457504272461
    10. 'm' → logprob: -5.497457504272461

Token 111: ' que' (ID: 661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048529114574193954
    2. ' )' → logprob: -3.2985291481018066
    3. ' que' → logprob: -5.923529148101807
    4. ' à' → logprob: -6.048529148101807
    5. '):' → logprob: -6.423529148101807
    6. ':' → logprob: -6.423529148101807
    7. ',' → logprob: -7.173529148101807
    8. ' aux' → logprob: -8.173528671264648
    9. ' qu' → logprob: -8.423528671264648
    10. ')
' → logprob: -9.548528671264648

Token 112: ' c' (ID: 274)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47518011927604675
    2. ' x' → logprob: -1.7251801490783691
    3. '#' → logprob: -3.225180149078369
    4. ')' → logprob: -3.725180149078369
    5. 'c' → logprob: -3.850180149078369
    6. ' c' → logprob: -3.975180149078369
    7. ' #' → logprob: -4.475180149078369
    8. ' on' → logprob: -4.475180149078369
    9. ' ce' → logprob: -4.475180149078369
    10. ' le' → logprob: -4.975180149078369

Token 113: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9862293004989624
    2. ''est' → logprob: -1.4862293004989624
    3. 'e' → logprob: -1.7362293004989624
    4. '#' → logprob: -2.861229419708252
    5. ''ai' → logprob: -3.236229419708252
    6. 'est' → logprob: -3.486229419708252
    7. ''s' → logprob: -3.736229419708252
    8. 's' → logprob: -3.736229419708252
    9. 'a' → logprob: -4.486229419708252
    10. ''#' → logprob: -5.861229419708252

Token 114: ' central' (ID: 11082)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10913493484258652
    2. ' x' → logprob: -2.6091349124908447
    3. 'k' → logprob: -5.484135150909424
    4. '(x' → logprob: -5.609135150909424
    5. ' ' → logprob: -5.609135150909424
    6. '1' → logprob: -5.984135150909424
    7. 'correct' → logprob: -6.109135150909424
    8. ' correct' → logprob: -6.359135150909424
    9. ' le' → logprob: -6.734135150909424
    10. ')' → logprob: -6.984135150909424

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031541772186756134
    2. ' )' → logprob: -3.5315418243408203
    3. ' pour' → logprob: -7.03154182434082
    4. 'for' → logprob: -7.90654182434082
    5. ' for' → logprob: -9.15654182434082
    6. 'pour' → logprob: -9.15654182434082
    7. ',' → logprob: -9.90654182434082
    8. 'x' → logprob: -10.03154182434082
    9. '*' → logprob: -10.28154182434082
    10. '#' → logprob: -10.65654182434082

Token 116: 'ans' (ID: 616)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7866618037223816
    2. 'result' → logprob: -1.0366618633270264
    3. 'res' → logprob: -2.2866618633270264
    4. 'answer' → logprob: -3.6616618633270264
    5. 'total' → logprob: -3.6616618633270264
    6. 'ans' → logprob: -4.036661624908447
    7. 's' → logprob: -5.536661624908447
    8. 'pairs' → logprob: -5.536661624908447
    9. 'cnt' → logprob: -6.036661624908447
    10. 'c' → logprob: -6.036661624908447

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007615610491484404
    2. '=' → logprob: -4.882615566253662
    3. ' ' → logprob: -12.25761604309082
    4. ' +=' → logprob: -13.00761604309082
    5. ',' → logprob: -14.13261604309082
    6. ' =
' → logprob: -14.75761604309082
    7. 's' → logprob: -15.50761604309082
    8. '[' → logprob: -15.50761604309082
    9. ' ,' → logprob: -15.63261604309082
    10. ' =[' → logprob: -15.88261604309082

Token 118: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.062467943876981735
    2. ' x' → logprob: -2.8124680519104004
    3. '(x' → logprob: -7.8124680519104
    4. '0' → logprob: -10.562467575073242
    5. ' ' → logprob: -10.687467575073242
    6. ' (' → logprob: -10.937467575073242
    7. 'mul' → logprob: -10.937467575073242
    8. '(' → logprob: -13.312467575073242
    9. 'pow' → logprob: -13.562467575073242
    10. '1' → logprob: -13.687467575073242

Token 119: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.85235276655294e-05
    2. '0' → logprob: -9.375088691711426
    3. ' [' → logprob: -13.000088691711426
    4. ' ' → logprob: -15.125088691711426
    5. '
' → logprob: -15.750088691711426
    6. '```' → logprob: -15.937588691711426
    7. '][' → logprob: -16.18758773803711
    8. '\[' → logprob: -16.43758773803711
    9. '

' → logprob: -16.50008773803711
    10. 'import' → logprob: -16.56258773803711

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'k' → logprob: -17.000001907348633
    4. '1' → logprob: -17.562501907348633
    5. '۰' → logprob: -18.125001907348633
    6. ']' → logprob: -19.000001907348633
    7. '[' → logprob: -19.000001907348633
    8. '00' → logprob: -19.250001907348633
    9. '０' → logprob: -19.375001907348633
    10. '```' → logprob: -19.375001907348633

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40683361887931824
    2. ' *' → logprob: -2.0318336486816406
    3. ')' → logprob: -2.1568336486816406
    4. '*' → logprob: -3.0318336486816406
    5. '])' → logprob: -3.7818336486816406
    6. '*(' → logprob: -5.031833648681641
    7. '**' → logprob: -5.281833648681641
    8. '//' → logprob: -6.031833648681641
    9. ' ]' → logprob: -7.906833648681641
    10. ' )' → logprob: -7.906833648681641

Token 122: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4068908393383026
    2. '**' → logprob: -1.781890869140625
    3. '+' → logprob: -2.156890869140625
    4. ' *' → logprob: -4.031890869140625
    5. '<|end|>' → logprob: -4.281890869140625
    6. ' +' → logprob: -5.031890869140625
    7. 'for' → logprob: -5.156890869140625
    8. '
' → logprob: -6.406890869140625
    9. ')' → logprob: -7.031890869140625
    10. ' for' → logprob: -7.281890869140625

Token 123: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3219231367111206
    2. 'x' → logprob: -1.3219231367111206
    3. ' (' → logprob: -5.19692325592041
    4. '(' → logprob: -6.32192325592041
    5. '(n' → logprob: -7.44692325592041
    6. ' x' → logprob: -7.44692325592041
    7. ' ' → logprob: -9.69692325592041
    8. 'n' → logprob: -11.32192325592041
    9. '2' → logprob: -11.44692325592041
    10. '(k' → logprob: -11.69692325592041

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003161795437335968
    2. '0' → logprob: -5.878161907196045
    3. '[-' → logprob: -8.003161430358887
    4. '[(' → logprob: -11.878161430358887
    5. ' ' → logprob: -12.003161430358887
    6. '[k' → logprob: -12.878161430358887
    7. ' [' → logprob: -12.878161430358887
    8. '.' → logprob: -14.253161430358887
    9. '[x' → logprob: -14.378161430358887
    10. '[n' → logprob: -14.878161430358887

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.125006675720215
    3. 'k' → logprob: -15.375006675720215
    4. '-' → logprob: -15.937506675720215
    5. '   ' → logprob: -16.0000057220459
    6. ']' → logprob: -16.2500057220459
    7. '```' → logprob: -17.0625057220459
    8. '.' → logprob: -17.1875057220459
    9. '۰' → logprob: -17.5625057220459
    10. '  ' → logprob: -17.6875057220459

Token 126: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007456830702722073
    2. ']' → logprob: -5.0074567794799805
    3. '])' → logprob: -8.13245677947998
    4. ')]' → logprob: -8.13245677947998
    5. ' )' → logprob: -9.00745677947998
    6. '<|end|>' → logprob: -11.63245677947998
    7. '**' → logprob: -12.75745677947998
    8. ' ]' → logprob: -13.13245677947998
    9. '*)' → logprob: -13.13245677947998
    10. '）' → logprob: -13.13245677947998

Token 127: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2945328652858734
    2. '<|end|>' → logprob: -1.7945328950881958
    3. 'for' → logprob: -3.0445327758789062
    4. '+
' → logprob: -4.294532775878906
    5. '
' → logprob: -4.669532775878906
    6. ' for' → logprob: -4.919532775878906
    7. ')' → logprob: -5.169532775878906
    8. '\n' → logprob: -6.169532775878906
    9. ' +' → logprob: -6.794532775878906
    10. '<|end|>' → logprob: -7.544532775878906

Token 128: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0271092988550663
    2. 'k' → logprob: -3.652109384536743
    3. ' x' → logprob: -8.027109146118164
    4. 'n' → logprob: -8.152109146118164
    5. '2' → logprob: -9.527109146118164
    6. '(x' → logprob: -10.527109146118164
    7. '1' → logprob: -11.152109146118164
    8. '(' → logprob: -11.652109146118164
    9. 'mul' → logprob: -11.652109146118164
    10. ' ' → logprob: -11.902109146118164

Token 129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018271461594849825
    2. '0' → logprob: -6.376827239990234
    3. '[-' → logprob: -9.876827239990234
    4. ' [' → logprob: -10.751827239990234
    5. '2' → logprob: -11.751827239990234
    6. '1' → logprob: -12.001827239990234
    7. '][' → logprob: -12.251827239990234
    8. ''[' → logprob: -12.501827239990234
    9. ' ' → logprob: -12.751827239990234
    10. '(' → logprob: -13.001827239990234

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.750008583068848
    3. ']' → logprob: -14.625008583068848
    4. 'k' → logprob: -15.812508583068848
    5. '[' → logprob: -16.687509536743164
    6. '1' → logprob: -17.062509536743164
    7. '(' → logprob: -17.250009536743164
    8. '```' → logprob: -17.250009536743164
    9. '۰' → logprob: -17.312509536743164
    10. '   ' → logprob: -18.000009536743164

Token 131: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017290873220190406
    2. ']' → logprob: -6.5017290115356445
    3. ')]' → logprob: -9.126729011535645
    4. '])' → logprob: -9.751729011535645
    5. ' )' → logprob: -10.251729011535645
    6. '+' → logprob: -11.626729011535645
    7. '）' → logprob: -12.751729011535645
    8. ')+' → logprob: -12.876729011535645
    9. ')
' → logprob: -13.126729011535645
    10. ')])' → logprob: -13.376729011535645

Token 132: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.9153885558771435e-06
    2. '#' → logprob: -12.500005722045898
    3. ' for' → logprob: -13.500005722045898
    4. 'from' → logprob: -14.250005722045898
    5. '
' → logprob: -17.0000057220459
    6. '```' → logprob: -18.1250057220459
    7. 'ans' → logprob: -18.5000057220459
    8. '+' → logprob: -19.6250057220459
    9. '	for' → logprob: -19.8750057220459
    10. '[' → logprob: -20.0000057220459

Token 133: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000642499653622508
    2. '#' → logprob: -7.3756422996521
    3. 'from' → logprob: -11.250642776489258
    4. ' for' → logprob: -13.750642776489258
    5. 'ans' → logprob: -14.500642776489258
    6. 'rem' → logprob: -15.625642776489258
    7. 'def' → logprob: -15.750642776489258
    8. 'import' → logprob: -15.875642776489258
    9. 'mod' → logprob: -16.250642776489258
    10. 'a' → logprob: -16.250642776489258

Token 134: ' it' (ID: 480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027714747935533524
    2. ' for' → logprob: -3.652714729309082
    3. 'range' → logprob: -6.652714729309082
    4. '#' → logprob: -9.902714729309082
    5. 'from' → logprob: -11.027714729309082
    6. 'ranges' → logprob: -11.652714729309082
    7. 'continue' → logprob: -11.902714729309082
    8. ' range' → logprob: -12.152714729309082
    9. 'r' → logprob: -12.277714729309082
    10. 'or' → logprob: -12.777714729309082

Token 135: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.378675252199173
    2. 'ère' → logprob: -1.3786752223968506
    3. 'ér' → logprob: -4.37867546081543
    4. 'ere' → logprob: -4.37867546081543
    5. 'érer' → logprob: -4.37867546081543
    6. 'ére' → logprob: -4.50367546081543
    7. 'rate' → logprob: -5.25367546081543
    8. 'èr' → logprob: -5.50367546081543
    9. 'ertools' → logprob: -6.62867546081543
    10. 'e' → logprob: -7.12867546081543

Token 136: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010038080625236034
    2. 'over' → logprob: -5.010037899017334
    3. ' for' → logprob: -6.385037899017334
    4. ' over' → logprob: -6.635037899017334
    5. '(' → logprob: -8.885038375854492
    6. 'from' → logprob: -9.510038375854492
    7. '#' → logprob: -10.010038375854492
    8. 'through' → logprob: -11.260038375854492
    9. 'range' → logprob: -11.260038375854492
    10. '...' → logprob: -11.635038375854492

Token 137: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00681269308552146
    2. ' range' → logprob: -5.006812572479248
    3. '(range' → logprob: -9.256813049316406
    4. '[' → logprob: -14.881813049316406
    5. '	range' → logprob: -15.006813049316406
    6. 'it' → logprob: -15.256813049316406
    7. '(' → logprob: -15.881813049316406
    8. 'rang' → logprob: -15.881813049316406
    9. '[(' → logprob: -16.131813049316406
    10. '1' → logprob: -16.506813049316406

Token 138: ' autres' (ID: 18701)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06630610674619675
    2. ' range' → logprob: -2.8163061141967773
    3. 'r' → logprob: -6.316306114196777
    4. 'rest' → logprob: -6.316306114196777
    5. 'ranges' → logprob: -8.941306114196777
    6. ' rest' → logprob: -9.066306114196777
    7. 're' → logprob: -9.191306114196777
    8. 'rem' → logprob: -9.441306114196777
    9. 'i' → logprob: -9.816306114196777
    10. ' r' → logprob: -9.941306114196777

Token 139: ' rest' (ID: 2867)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009460333734750748
    2. 'range' → logprob: -4.88446044921875
    3. ' for' → logprob: -6.38446044921875
    4. 'rest' → logprob: -9.38446044921875
    5. 'r' → logprob: -10.50946044921875
    6. ' range' → logprob: -10.88446044921875
    7. '(range' → logprob: -11.63446044921875
    8. 'ranges' → logprob: -11.63446044921875
    9. '(rest' → logprob: -13.00946044921875
    10. ',' → logprob: -13.13446044921875

Token 140: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5408703684806824
    2. 'for' → logprob: -1.5408704280853271
    3. ' for' → logprob: -2.290870428085327
    4. 'range' → logprob: -2.915870428085327
    5. 'es' → logprob: -3.915870428085327
    6. ':' → logprob: -4.165870189666748
    7. ' range' → logprob: -5.415870189666748
    8. ',' → logprob: -6.415870189666748
    9. 'i' → logprob: -6.915870189666748
    10. '_range' → logprob: -7.290870189666748

Token 141: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008408344583585858
    2. ' for' → logprob: -7.125840663909912
    3. 'range' → logprob: -10.75084114074707
    4. '(' → logprob: -12.00084114074707
    5. '(
' → logprob: -12.87584114074707
    6. ',' → logprob: -13.25084114074707
    7. '(range' → logprob: -13.25084114074707
    8. 'rest' → logprob: -14.37584114074707
    9. ')' → logprob: -14.37584114074707
    10. 'from' → logprob: -14.50084114074707

Token 142: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2200749754119897e-06
    2. ' for' → logprob: -13.250001907348633
    3. 'range' → logprob: -14.750001907348633
    4. 'from' → logprob: -17.875001907348633
    5. ')' → logprob: -19.125001907348633
    6. 'ans' → logprob: -20.250001907348633
    7. '#' → logprob: -20.625001907348633
    8. '
' → logprob: -20.875001907348633
    9. '```' → logprob: -20.875001907348633
    10. '(' → logprob: -21.500001907348633

Token 143: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7583392858505249
    2. ' r' → logprob: -1.508339285850525
    3. 'i' → logprob: -1.758339285850525
    4. 'r' → logprob: -2.6333394050598145
    5. ' a' → logprob: -3.5083394050598145
    6. 'a' → logprob: -3.6333394050598145
    7. '(i' → logprob: -6.1333394050598145
    8. ' rem' → logprob: -6.3833394050598145
    9. ' j' → logprob: -6.3833394050598145
    10. 'j' → logprob: -7.0083394050598145

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018390242010354996
    2. 'in' → logprob: -4.01839017868042
    3. ' ' → logprob: -8.518390655517578
    4. 'range' → logprob: -11.018390655517578
    5. ',' → logprob: -11.893390655517578
    6. 'n' → logprob: -12.018390655517578
    7. '1' → logprob: -12.768390655517578
    8. '  ' → logprob: -13.268390655517578
    9. '(' → logprob: -13.643390655517578
    10. ' range' → logprob: -14.018390655517578

Token 145: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132690191268921
    2. 'range' → logprob: -1.313269019126892
    3. '(range' → logprob: -12.063268661499023
    4. ' ' → logprob: -14.063268661499023
    5. '	range' → logprob: -15.313268661499023
    6. '(' → logprob: -15.438268661499023
    7. '   ' → logprob: -16.313268661499023
    8. ' xrange' → logprob: -16.313268661499023
    9. '  ' → logprob: -16.688268661499023
    10. 'Range' → logprob: -17.813268661499023

Token 146: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008060562540777028
    2. '(k' → logprob: -7.125805854797363
    3. ' (' → logprob: -13.625805854797363
    4. '1' → logprob: -15.250805854797363
    5. '((' → logprob: -15.875805854797363
    6. 'k' → logprob: -17.50080680847168
    7. ' ' → logprob: -18.50080680847168
    8. '(n' → logprob: -18.62580680847168
    9. ',k' → logprob: -19.12580680847168
    10. '(len' → logprob: -19.25080680847168

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4869900941848755
    2. 'k' → logprob: -1.2369900941848755
    3. '(' → logprob: -2.986989974975586
    4. '(k' → logprob: -3.111989974975586
    5. ' (' → logprob: -8.986989974975586
    6. ' ' → logprob: -9.111989974975586
    7. ' k' → logprob: -9.861989974975586
    8. '   ' → logprob: -11.611989974975586
    9. '((' → logprob: -11.736989974975586
    10. '0' → logprob: -12.361989974975586

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036287534749135375
    2. ' ,' → logprob: -8.12536334991455
    3. ',k' → logprob: -9.62536334991455
    4. 'k' → logprob: -14.12536334991455
    5. '(k' → logprob: -16.875362396240234
    6. ' k' → logprob: -17.125362396240234
    7. ',
' → logprob: -18.375362396240234
    8. '_,' → logprob: -19.000362396240234
    9. ' ' → logprob: -19.500362396240234
    10. '   ' → logprob: -19.500362396240234

Token 149: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20414161682128906
    2. '(k' → logprob: -1.704141616821289
    3. ' (' → logprob: -6.079141616821289
    4. ' k' → logprob: -7.954141616821289
    5. '(' → logprob: -10.079141616821289
    6. ' ' → logprob: -11.204141616821289
    7. '   ' → logprob: -11.329141616821289
    8. '((' → logprob: -11.954141616821289
    9. '	k' → logprob: -12.829141616821289
    10. '  ' → logprob: -13.391641616821289

Token 150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.054517388343811035
    2. '//' → logprob: -3.0545172691345215
    3. '):
' → logprob: -5.1795172691345215
    4. ' //' → logprob: -8.67951774597168
    5. ' ):' → logprob: -10.05451774597168
    6. ')' → logprob: -10.17951774597168
    7. '-' → logprob: -10.92951774597168
    8. ' ' → logprob: -12.67951774597168
    9. '+' → logprob: -12.92951774597168
    10. ')):' → logprob: -13.55451774597168

Token 151: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6162779331207275
    2. '   ' → logprob: -0.8662779331207275
    3. ' for' → logprob: -3.2412779331207275
    4. ' ' → logprob: -8.491277694702148
    5. '	for' → logprob: -8.491277694702148
    6. 'ans' → logprob: -12.241277694702148
    7. '  ' → logprob: -12.991277694702148
    8. '   ' → logprob: -13.241277694702148
    9. '       ' → logprob: -14.116277694702148
    10. '```' → logprob: -15.491277694702148

Token 152: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005757896578870714
    2. 'ans' → logprob: -7.875576019287109
    3. '   ' → logprob: -9.25057601928711
    4. ' for' → logprob: -9.50057601928711
    5. 'j' → logprob: -10.75057601928711
    6. '	for' → logprob: -13.50057601928711
    7. ' ' → logprob: -14.50057601928711
    8. 'if' → logprob: -15.12557601928711
    9. '  ' → logprob: -15.37557601928711
    10. '    
' → logprob: -15.62557601928711

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.939851701259613
    2. ' =' → logprob: -0.939851701259613
    3. 'for' → logprob: -1.5648517608642578
    4. 'y' → logprob: -5.439851760864258
    5. ',' → logprob: -6.814851760864258
    6. ' for' → logprob: -7.189851760864258
    7. 'e' → logprob: -7.189851760864258
    8. 'f' → logprob: -7.314851760864258
    9. 'r' → logprob: -7.939851760864258
    10. '=i' → logprob: -8.314851760864258

Token 154: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4186668395996094
    2. 'x' → logprob: -1.1686668395996094
    3. '(k' → logprob: -4.168666839599609
    4. '(x' → logprob: -4.668666839599609
    5. '(' → logprob: -5.918666839599609
    6. 'sub' → logprob: -6.543666839599609
    7. ' x' → logprob: -7.043666839599609
    8. ' (' → logprob: -7.668666839599609
    9. ' k' → logprob: -7.793666839599609
    10. '(add' → logprob: -9.16866683959961

Token 155: ' %' (ID: 1851)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6209275722503662
    2. '+' → logprob: -0.8709275722503662
    3. ' for' → logprob: -3.620927572250366
    4. ' +' → logprob: -4.870927810668945
    5. '*' → logprob: -5.745927810668945
    6. '
' → logprob: -6.495927810668945
    7. ',' → logprob: -6.745927810668945
    8. ' *' → logprob: -7.620927810668945
    9. ' ' → logprob: -7.745927810668945
    10. '   ' → logprob: -7.745927810668945

Token 156: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.014684110297821e-06
    2. ' k' → logprob: -11.625008583068848
    3. ' ' → logprob: -17.625009536743164
    4. '(k' → logprob: -18.125009536743164
    5. '	k' → logprob: -19.250009536743164
    6. '   ' → logprob: -19.625009536743164
    7. '{k' → logprob: -19.875009536743164
    8. ',k' → logprob: -20.375009536743164
    9. '  ' → logprob: -20.625009536743164
    10. '```' → logprob: -21.125009536743164

Token 157: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39113613963127136
    2. '   ' → logprob: -1.5161361694335938
    3. ' for' → logprob: -2.2661361694335938
    4. '<|end|>' → logprob: -8.891136169433594
    5. ',' → logprob: -9.266136169433594
    6. '
' → logprob: -9.641136169433594
    7. ')' → logprob: -10.141136169433594
    8. '  ' → logprob: -10.766136169433594
    9. '	for' → logprob: -10.766136169433594
    10. ' ' → logprob: -11.141136169433594

Token 158: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01932435669004917
    2. ' for' → logprob: -4.51932430267334
    3. '   ' → logprob: -5.39432430267334
    4. 'c' → logprob: -5.64432430267334
    5. 'j' → logprob: -9.89432430267334
    6. 'ans' → logprob: -10.14432430267334
    7. 'if' → logprob: -10.14432430267334
    8. ' ' → logprob: -11.76932430267334
    9. 'a' → logprob: -11.89432430267334
    10. '  ' → logprob: -12.39432430267334

Token 159: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013539257925003767
    2. 'c' → logprob: -6.876353740692139
    3. 'ans' → logprob: -8.876354217529297
    4. 'j' → logprob: -9.001354217529297
    5. ' for' → logprob: -10.501354217529297
    6. '   ' → logprob: -11.126354217529297
    7. 'if' → logprob: -11.501354217529297
    8. 'a' (adapté à ' a') → logprob: -13.501354217529297
    9. '	for' → logprob: -14.251354217529297
    10. '#' → logprob: -14.376354217529297

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5770248770713806
    2. ' =' → logprob: -0.8270248770713806
    3. 'for' → logprob: -7.202024936676025
    4. '   ' → logprob: -9.202024459838867
    5. ' for' → logprob: -9.202024459838867
    6. ',' → logprob: -10.327024459838867
    7. ' ' → logprob: -10.827024459838867
    8. 'b' → logprob: -11.327024459838867
    9. 'range' → logprob: -11.577024459838867
    10. '[' → logprob: -11.702024459838867

Token 161: ' k' (ID: 372)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.029779190197587013
    2. 'k' → logprob: -3.9047791957855225
    3. ' (' → logprob: -5.279778957366943
    4. '(-' → logprob: -6.654778957366943
    5. '(x' → logprob: -7.279778957366943
    6. '(i' → logprob: -7.654778957366943
    7. '(' → logprob: -7.904778957366943
    8. '(b' → logprob: -8.154779434204102
    9. 'x' → logprob: -8.279779434204102
    10. 'sub' → logprob: -8.529779434204102

Token 162: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07007692754268646
    2. ' -' → logprob: -2.6950769424438477
    3. '-b' → logprob: -9.695076942443848
    4. '-i' → logprob: -10.445076942443848
    5. '   ' → logprob: -11.195076942443848
    6. '+' → logprob: -11.195076942443848
    7. ' ' → logprob: -11.945076942443848
    8. '<|end|>' → logprob: -12.195076942443848
    9. '  ' → logprob: -13.320076942443848
    10. ',' → logprob: -13.570076942443848

Token 163: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31383994221687317
    2. 'i' → logprob: -1.3138399124145508
    3. ' i' → logprob: -7.938839912414551
    4. ' b' → logprob: -8.43883991241455
    5. ' ' → logprob: -12.56383991241455
    6. '1' → logprob: -14.06383991241455
    7. 'a' → logprob: -14.68883991241455
    8. '   ' → logprob: -15.68883991241455
    9. '_i' → logprob: -16.313840866088867
    10. '  ' → logprob: -16.813840866088867

Token 164: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3995465934276581
    2. 'for' → logprob: -1.1495466232299805
    3. ' for' → logprob: -4.5245466232299805
    4. 'c' → logprob: -7.2745466232299805
    5. ' ' → logprob: -8.02454662322998
    6. '+' → logprob: -8.27454662322998
    7. '  ' → logprob: -8.64954662322998
    8. '-' → logprob: -9.52454662322998
    9. '	for' → logprob: -10.27454662322998
    10. ' +' → logprob: -10.39954662322998

Token 165: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25110018253326416
    2. '   ' → logprob: -1.6261001825332642
    3. ' for' → logprob: -4.001100063323975
    4. 'c' → logprob: -5.876100063323975
    5. '+' → logprob: -6.501100063323975
    6. '-' → logprob: -6.751100063323975
    7. ' ' → logprob: -7.376100063323975
    8. '
' → logprob: -8.001100540161133
    9. '  ' → logprob: -9.001100540161133
    10. ' -' → logprob: -9.251100540161133

Token 166: ' calcul' (ID: 7559)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9317415952682495
    2. 'for' → logprob: -0.9317415952682495
    3. '1' → logprob: -2.056741714477539
    4. ' ' → logprob: -3.181741714477539
    5. '   ' → logprob: -4.181741714477539
    6. 'a' → logprob: -4.431741714477539
    7. 'i' → logprob: -5.306741714477539
    8. ' i' → logprob: -6.181741714477539
    9. 'b' → logprob: -6.556741714477539
    10. '<|end|>' → logprob: -6.681741714477539

Token 167: ' doute' (ID: 49542)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3481534719467163
    2. ' c' → logprob: -1.4731534719467163
    3. ' =' → logprob: -1.9731534719467163
    4. 'c' → logprob: -2.348153591156006
    5. '=' → logprob: -2.598153591156006
    6. ' b' → logprob: -2.848153591156006
    7. ' for' → logprob: -2.973153591156006
    8. ',' → logprob: -4.348153591156006
    9. ' ' → logprob: -4.473153591156006
    10. 'a' → logprob: -4.473153591156006

Token 168: 'ux' (ID: 1778)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0070683010853827
    2. ' for' → logprob: -5.632068157196045
    3. 'for' → logprob: -6.382068157196045
    4. ' ' → logprob: -7.257068157196045
    5. ',' → logprob: -8.007068634033203
    6. '  ' → logprob: -8.257068634033203
    7. ' if' → logprob: -8.757068634033203
    8. '<|end|>' → logprob: -9.382068634033203
    9. 'c' → logprob: -10.507068634033203
    10. '
' → logprob: -10.507068634033203

Token 169: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04188395291566849
    2. '<|end|>' → logprob: -3.666883945465088
    3. 'for' → logprob: -5.291883945465088
    4. ' ' → logprob: -5.291883945465088
    5. ' for' → logprob: -5.666883945465088
    6. '  ' → logprob: -6.666883945465088
    7. ')' → logprob: -8.291884422302246
    8. ',' → logprob: -8.666884422302246
    9. '<|end|>' → logprob: -9.791884422302246
    10. '...' → logprob: -10.416884422302246

Token 170: ' ça' (ID: 13590)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.2236050367355347
    2. ' True' → logprob: -1.3486050367355347
    3. 'a' → logprob: -2.098605155944824
    4. 'b' → logprob: -2.598605155944824
    5. ' a' → logprob: -2.723605155944824
    6. ' correct' → logprob: -2.973605155944824
    7. ' b' → logprob: -2.973605155944824
    8. ' i' → logprob: -3.973605155944824
    9. 'i' → logprob: -4.098605155944824
    10. ' not' → logprob: -4.598605155944824

Token 171: ' marche' (ID: 58191)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5987086296081543
    2. ' semble' → logprob: -1.7237086296081543
    3. 'a' → logprob: -2.2237086296081543
    4. 'semble' → logprob: -3.2237086296081543
    5. 'should' → logprob: -3.4737086296081543
    6. ' devrait' → logprob: -4.223708629608154
    7. ' fonctionne' → logprob: -4.348708629608154
    8. 's' → logprob: -4.723708629608154
    9. ':' → logprob: -4.723708629608154
    10. 'fonction' → logprob: -4.723708629608154

Token 172: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.332666277885437
    2. ' for' → logprob: -1.957666277885437
    3. 'for' → logprob: -2.4576663970947266
    4. '<|end|>' → logprob: -2.9576663970947266
    5. ',' → logprob: -6.832666397094727
    6. ')' → logprob: -6.957666397094727
    7. '<|end|>' → logprob: -7.207666397094727
    8. ' ' → logprob: -7.832666397094727
    9. '  ' → logprob: -7.832666397094727
    10. '...' → logprob: -9.207666397094727

Token 173: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15463930368423462
    2. '   ' → logprob: -2.15463924407959
    3. ' for' → logprob: -3.65463924407959
    4. 'if' → logprob: -7.15463924407959
    5. '<|end|>' → logprob: -7.90463924407959
    6. 'ans' → logprob: -9.15463924407959
    7. 'c' → logprob: -10.15463924407959
    8. ' if' → logprob: -10.15463924407959
    9. '	for' → logprob: -10.27963924407959
    10. ' ' → logprob: -10.40463924407959

Token 174: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01723513938486576
    2. 'ans' → logprob: -5.017235279083252
    3. ' for' → logprob: -5.267235279083252
    4. '   ' → logprob: -5.642235279083252
    5. 'if' → logprob: -6.767235279083252
    6. 'c' (adapté à ' c') → logprob: -7.642235279083252
    7. ' ans' → logprob: -9.517234802246094
    8. 'j' → logprob: -11.017234802246094
    9. ' ' → logprob: -11.267234802246094
    10. '  ' → logprob: -11.892234802246094

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410181164741516
    2. ' =' → logprob: -0.9741017818450928
    3. 'for' → logprob: -11.224102020263672
    4. ',' → logprob: -12.099102020263672
    5. ' ' → logprob: -12.724102020263672
    6. 'a' → logprob: -15.099102020263672
    7. '  ' → logprob: -15.224102020263672
    8. ' for' → logprob: -15.349102020263672
    9. '=int' → logprob: -15.349102020263672
    10. ')' → logprob: -15.474102020263672

Token 176: ' k' (ID: 372)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.20579028129577637
    2. 'k' → logprob: -2.9557902812957764
    3. '(x' → logprob: -3.2057902812957764
    4. '(' → logprob: -3.7057902812957764
    5. ' (' → logprob: -3.7057902812957764
    6. '(a' → logprob: -3.7057902812957764
    7. 'x' → logprob: -5.0807905197143555
    8. '0' → logprob: -5.2057905197143555
    9. '(b' → logprob: -5.8307905197143555
    10. ' k' → logprob: -6.7057905197143555

Token 177: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1603264957666397
    2. '-' → logprob: -1.9103264808654785
    3. ' ' → logprob: -10.160326957702637
    4. '+' → logprob: -10.660326957702637
    5. '#' → logprob: -11.785326957702637
    6. ')' → logprob: -11.910326957702637
    7. '  ' → logprob: -12.035326957702637
    8. '...' → logprob: -12.160326957702637
    9. '<|end|>' → logprob: -12.160326957702637
    10. ',' → logprob: -13.535326957702637

Token 178: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11865364015102386
    2. 'i' → logprob: -2.2436535358428955
    3. 'b' → logprob: -5.743653774261475
    4. '(i' → logprob: -6.868653774261475
    5. '(a' → logprob: -6.993653774261475
    6. '(' → logprob: -8.743653297424316
    7. ' a' → logprob: -8.993653297424316
    8. 'k' → logprob: -9.118653297424316
    9. ' (' → logprob: -9.493653297424316
    10. ' i' → logprob: -9.868653297424316

Token 179: ' ' (ID: 220)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6914761066436768
    2. '+' → logprob: -1.6914761066436768
    3. '-' → logprob: -2.6914761066436768
    4. ')' → logprob: -2.6914761066436768
    5. ' +' → logprob: -2.8164761066436768
    6. '<|end|>' → logprob: -3.1914761066436768
    7. '   ' → logprob: -3.3164761066436768
    8. ' ' → logprob: -4.441475868225098
    9. '#' → logprob: -4.691475868225098
    10. '  ' → logprob: -4.941475868225098

Token 180: ' #' (ID: 1069)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5849281549453735
    2. '-' → logprob: -1.4599281549453735
    3. '+' → logprob: -2.084928035736084
    4. ' +' → logprob: -3.959928035736084
    5. '   ' → logprob: -3.959928035736084
    6. '#' → logprob: -4.209928035736084
    7. '<|end|>' → logprob: -4.584928035736084
    8. ' ' → logprob: -5.334928035736084
    9. 'b' → logprob: -5.334928035736084
    10. 'if' → logprob: -5.959928035736084

Token 181: ' même' (ID: 9679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0086593627929688
    2. '+' → logprob: -2.2586593627929688
    3. ' for' → logprob: -2.2586593627929688
    4. '-' → logprob: -2.5086593627929688
    5. '<|end|>' → logprob: -2.7586593627929688
    6. ' -' → logprob: -2.8836593627929688
    7. ' ' → logprob: -3.0086593627929688
    8. '#' → logprob: -3.1336593627929688
    9. 'a' → logprob: -3.1336593627929688
    10. 'b' → logprob: -4.008659362792969

Token 182: ' calcul' (ID: 7559)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14179083704948425
    2. 'c' → logprob: -2.6417908668518066
    3. 'b' → logprob: -3.7667908668518066
    4. ' a' → logprob: -4.641790866851807
    5. ' -' → logprob: -4.891790866851807
    6. 'i' → logprob: -5.016790866851807
    7. '-' → logprob: -5.516790866851807
    8. ' c' → logprob: -5.766790866851807
    9. ' ' → logprob: -5.766790866851807
    10. '#' → logprob: -6.641790866851807

Token 183: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6274462342262268
    2. '   ' → logprob: -1.127446174621582
    3. ' for' → logprob: -2.127446174621582
    4. '<|end|>' → logprob: -4.377446174621582
    5. ' ' → logprob: -5.752446174621582
    6. '  ' → logprob: -6.127446174621582
    7. 'if' → logprob: -6.252446174621582
    8. ' if' → logprob: -7.127446174621582
    9. 'ans' → logprob: -7.377446174621582
    10. ')' → logprob: -8.252446174621582

Token 185: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.480655550956726
    2. ' for' → logprob: -1.605655550956726
    3. '<|end|>' → logprob: -1.605655550956726
    4. ' if' → logprob: -1.730655550956726
    5. 'if' → logprob: -2.2306556701660156
    6. 'ans' → logprob: -3.6056556701660156
    7. ' ans' → logprob: -3.9806556701660156
    8. ' ' → logprob: -4.480655670166016
    9. ')' → logprob: -4.605655670166016
    10. '   ' → logprob: -5.105655670166016

Token 186: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5673783421516418
    2. 'ans' → logprob: -0.9423783421516418
    3. 'if' → logprob: -3.192378282546997
    4. ' for' → logprob: -7.192378520965576
    5. '#' → logprob: -7.317378520965576
    6. ' ans' → logprob: -7.942378520965576
    7. 'continue' → logprob: -9.192378044128418
    8. ' if' → logprob: -10.192378044128418
    9. 'answer' → logprob: -10.192378044128418
    10. '   ' → logprob: -10.317378044128418

Token 187: ' vér' (ID: 42524)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05797963589429855
    2. ' for' → logprob: -2.9329795837402344
    3. '=' → logprob: -6.932979583740234
    4. 'range' → logprob: -7.432979583740234
    5. '+=' → logprob: -7.682979583740234
    6. 'continue' → logprob: -7.682979583740234
    7. ' continue' → logprob: -9.682979583740234
    8. 'ans' → logprob: -9.932979583740234
    9. 'if' → logprob: -10.057979583740234
    10. ' +=' → logprob: -10.057979583740234

Token 188: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.01157128531485796
    2. 'ite' → logprob: -4.886571407318115
    3. 'if' → logprob: -6.261571407318115
    4. 'iter' → logprob: -7.136571407318115
    5. 'range' → logprob: -8.011570930480957
    6. 'ife' → logprob: -8.261570930480957
    7. 'i' → logprob: -8.886570930480957
    8. 'f' → logprob: -9.511570930480957
    9. 'ifiez' → logprob: -9.761570930480957
    10. 'for' → logprob: -10.011570930480957

Token 189: ' cette' (ID: 7696)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18095916509628296
    2. ' for' → logprob: -2.3059592247009277
    3. 'if' → logprob: -3.3059592247009277
    4. 'for' → logprob: -3.5559592247009277
    5. '   ' → logprob: -7.680959224700928
    6. '<|end|>' → logprob: -9.18095874786377
    7. ' ' → logprob: -9.93095874786377
    8. ')' → logprob: -11.55595874786377
    9. '  ' → logprob: -12.05595874786377
    10. ' that' → logprob: -12.43095874786377

Token 190: ' propriété' (ID: 87730)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8674225807189941
    2. 'for' → logprob: -0.8674225807189941
    3. ' for' → logprob: -2.492422580718994
    4. ' if' → logprob: -2.617422580718994
    5. ' condition' → logprob: -7.117422580718994
    6. 'condition' → logprob: -7.867422580718994
    7. 'b' → logprob: -8.117422103881836
    8. ')' → logprob: -8.742422103881836
    9. ':' → logprob: -8.742422103881836
    10. ' (' → logprob: -8.742422103881836

Token 191: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4923868775367737
    2. '<|end|>' → logprob: -1.617386817932129
    3. ' for' → logprob: -1.992386817932129
    4. ' if' → logprob: -3.617386817932129
    5. ' ' → logprob: -4.242386817932129
    6. 'for' → logprob: -4.992386817932129
    7. ')' → logprob: -6.617386817932129
    8. '  ' → logprob: -6.742386817932129
    9. ',' → logprob: -6.992386817932129
    10. '<|end|>' → logprob: -7.117386817932129

Token 192: 'auc' (ID: 11816)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8609262108802795
    2. ' if' → logprob: -1.4859261512756348
    3. 'for' → logprob: -1.7359261512756348
    4. ')' → logprob: -2.2359261512756348
    5. 'if' → logprob: -2.7359261512756348
    6. '<|end|>' → logprob: -6.860926151275635
    7. '   ' → logprob: -7.860926151275635
    8. ' (' → logprob: -8.360926628112793
    9. ' )' → logprob: -8.735926628112793
    10. '%' → logprob: -8.860926628112793

Token 193: 'une' (ID: 2561)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9314778447151184
    2. ')' → logprob: -1.3064777851104736
    3. '   ' → logprob: -2.1814777851104736
    4. ':' → logprob: -2.6814777851104736
    5. ' if' → logprob: -2.6814777851104736
    6. '#' → logprob: -3.6814777851104736
    7. '):' → logprob: -4.306478023529053
    8. '=' → logprob: -4.681478023529053
    9. 'e' → logprob: -4.931478023529053
    10. '       ' → logprob: -5.431478023529053

Token 194: ' idée' (ID: 64187)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23199646174907684
    2. 'if' → logprob: -1.9819964170455933
    3. '%' → logprob: -3.356996536254883
    4. '#' → logprob: -4.731996536254883
    5. 'for' → logprob: -4.731996536254883
    6. ' if' → logprob: -5.606996536254883
    7. 'continue' → logprob: -5.856996536254883
    8. ' for' → logprob: -6.606996536254883
    9. 'token' → logprob: -6.731996536254883
    10. ' )' → logprob: -6.731996536254883

Token 195: ' pourquoi' (ID: 39224)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15017195045948029
    2. ')' → logprob: -2.025171995162964
    3. '<|end|>' → logprob: -5.775171756744385
    4. ',' → logprob: -6.900171756744385
    5. ' for' → logprob: -7.275171756744385
    6. ' if' → logprob: -7.400171756744385
    7. '  ' → logprob: -8.025172233581543
    8. '#' → logprob: -8.275172233581543
    9. '...' → logprob: -8.275172233581543
    10. '),' → logprob: -8.775172233581543

Token 196: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.731444239616394
    2. ' if' → logprob: -1.231444239616394
    3. '<|end|>' → logprob: -1.731444239616394
    4. '   ' → logprob: -3.3564443588256836
    5. '<|end|>' → logprob: -5.981444358825684
    6. 'if' → logprob: -6.106444358825684
    7. ' and' → logprob: -6.106444358825684
    8. ' )' → logprob: -6.356444358825684
    9. ' ' → logprob: -6.731444358825684
    10. ' for' → logprob: -7.231444358825684

Token 197: ' bon' (ID: 4846)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8356266021728516
    2. ' if' → logprob: -1.4606266021728516
    3. 'for' → logprob: -1.9606266021728516
    4. ' for' → logprob: -2.0856266021728516
    5. ')' → logprob: -3.8356266021728516
    6. '   ' → logprob: -4.460626602172852
    7. 'c' → logprob: -5.085626602172852
    8. 'ans' → logprob: -5.460626602172852
    9. 'continue' → logprob: -5.460626602172852
    10. ' c' → logprob: -5.710626602172852

Token 198: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1529281735420227
    2. ')' → logprob: -2.027928113937378
    3. ' if' → logprob: -5.402928352355957
    4. '<|end|>' → logprob: -5.902928352355957
    5. ' for' → logprob: -7.027928352355957
    6. ')
' → logprob: -7.527928352355957
    7. ',' → logprob: -8.027928352355957
    8. ' ' → logprob: -8.152928352355957
    9. 'if' → logprob: -8.402928352355957
    10. '  ' → logprob: -8.402928352355957

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2462009191513062
    2. ' if' → logprob: -1.3712009191513062
    3. ' for' → logprob: -1.3712009191513062
    4. 'for' → logprob: -1.9962009191513062
    5. 'if' → logprob: -2.9962010383605957
    6. '<|end|>' → logprob: -4.121201038360596
    7. ' ' → logprob: -7.246201038360596
    8. ')' → logprob: -7.371201038360596
    9. '  ' → logprob: -8.496200561523438
    10. ',' → logprob: -8.496200561523438

Token 200: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13273079693317413
    2. 'for' → logprob: -2.257730722427368
    3. ' if' → logprob: -4.132730960845947
    4. '   ' → logprob: -6.257730960845947
    5. ' for' → logprob: -6.632730960845947
    6. 'ans' → logprob: -7.882730960845947
    7. ' ' → logprob: -10.757730484008789
    8. '  ' → logprob: -11.632730484008789
    9. 'assert' → logprob: -11.757730484008789
    10. '	if' → logprob: -12.007730484008789

Token 201: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.46324172616004944
    2. '(a' → logprob: -1.088241696357727
    3. '(i' → logprob: -4.3382415771484375
    4. '(x' → logprob: -4.4632415771484375
    5. '(' → logprob: -5.5882415771484375
    6. 'a' → logprob: -6.2132415771484375
    7. '(b' → logprob: -6.7132415771484375
    8. ' a' → logprob: -6.8382415771484375
    9. 'x' → logprob: -8.213241577148438
    10. ' x' → logprob: -8.338241577148438

Token 202: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.08362401276826859
    2. 'a' → logprob: -3.0836241245269775
    3. '(i' → logprob: -3.7086241245269775
    4. ' (' → logprob: -5.583623886108398
    5. '(b' → logprob: -5.708623886108398
    6. 'i' → logprob: -6.833623886108398
    7. '(x' → logprob: -7.458623886108398
    8. 'b' → logprob: -7.833623886108398
    9. '(' → logprob: -7.958623886108398
    10. '   ' → logprob: -8.458623886108398

Token 203: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5772913098335266
    2. '+' → logprob: -0.8272913098335266
    3. '==' → logprob: -7.577291488647461
    4. ' ==' → logprob: -7.827291488647461
    5. ')' → logprob: -8.827291488647461
    6. '+b' → logprob: -9.702291488647461
    7. ',' → logprob: -10.077291488647461
    8. '!=' → logprob: -10.577291488647461
    9. ' !=' → logprob: -10.702291488647461
    10. '<=' → logprob: -10.952291488647461

Token 204: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20174485445022583
    2. ' b' → logprob: -1.701744794845581
    3. 'c' → logprob: -9.57674503326416
    4. 'i' → logprob: -9.70174503326416
    5. ' c' → logprob: -9.70174503326416
    6. ' ' → logprob: -9.82674503326416
    7. ' i' → logprob: -10.32674503326416
    8. '   ' → logprob: -10.45174503326416
    9. 'a' → logprob: -11.95174503326416
    10. '  ' → logprob: -12.57674503326416

Token 205: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029112942866049707
    2. ' )' → logprob: -8.625290870666504
    3. ')%' → logprob: -9.125290870666504
    4. '-' → logprob: -14.375290870666504
    5. ')==' → logprob: -14.500290870666504
    6. '==' → logprob: -14.500290870666504
    7. '   ' → logprob: -15.000290870666504
    8. '）' → logprob: -15.125290870666504
    9. ')
' → logprob: -16.00029182434082
    10. '```' → logprob: -16.62529182434082

Token 206: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7253364324569702
    2. ')' → logprob: -1.1003364324569702
    3. '==' → logprob: -1.9753364324569702
    4. '%' → logprob: -3.7253365516662598
    5. ')%' → logprob: -4.60033655166626
    6. ' %' → logprob: -4.72533655166626
    7. ' )' → logprob: -7.47533655166626
    8. ')==' → logprob: -8.225336074829102
    9. ' <=' → logprob: -8.850336074829102
    10. ' >=' → logprob: -9.225336074829102

Token 207: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -8.494741632603109e-05
    2. ' k' → logprob: -9.37508487701416
    3. ' ' → logprob: -18.500085830688477
    4. '	k' → logprob: -19.250085830688477
    5. '{k' → logprob: -19.375085830688477
    6. '<|end|>' → logprob: -19.875085830688477
    7. '   ' → logprob: -20.000085830688477
    8. '  ' → logprob: -20.000085830688477
    9. '```' → logprob: -21.125085830688477
    10. ')' → logprob: -21.375085830688477

Token 208: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08900141716003418
    2. ' ==' → logprob: -2.464001417160034
    3. ')==' → logprob: -10.714001655578613
    4. ')' → logprob: -10.839001655578613
    5. ']==' → logprob: -11.964001655578613
    6. '=' → logprob: -12.089001655578613
    7. '==
' → logprob: -12.589001655578613
    8. ' ' → logprob: -13.714001655578613
    9. '!=' → logprob: -13.839001655578613
    10. '()==' → logprob: -14.464001655578613

Token 209: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002476016292348504
    2. ' ' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.75247573852539
    4. '  ' → logprob: -16.37747573852539
    5. 'b' → logprob: -17.43997573852539
    6. '۰' → logprob: -17.75247573852539
    7. 'k' → logprob: -17.93997573852539
    8. '

' → logprob: -17.93997573852539
    9. '(' → logprob: -18.06497573852539
    10. '1' → logprob: -18.06497573852539

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.661626634420827e-05
    2. ' ' → logprob: -9.375086784362793
    3. 'b' → logprob: -14.937586784362793
    4. '   ' → logprob: -15.312586784362793
    5. 'k' → logprob: -15.312586784362793
    6. 'a' → logprob: -15.937586784362793
    7. '  ' → logprob: -16.437585830688477
    8. '1' → logprob: -16.500085830688477
    9. 's' → logprob: -16.562585830688477
    10. '(' → logprob: -16.625085830688477

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010889116674661636
    2. ':
' → logprob: -4.635889053344727
    3. '       ' → logprob: -7.510889053344727
    4. '   ' → logprob: -7.760889053344727
    5. ' continue' → logprob: -9.385889053344727
    6. ' :' → logprob: -10.635889053344727
    7. 'continue' → logprob: -11.260889053344727
    8. '):' → logprob: -11.385889053344727
    9. '	continue' → logprob: -11.885889053344727
    10. ',' → logprob: -12.010889053344727

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025148920714855194
    2. ' continue' → logprob: -3.900148868560791
    3. 'continue' → logprob: -5.650148868560791
    4. '   ' → logprob: -6.900148868560791
    5. '	continue' → logprob: -9.90014934539795
    6. '           ' → logprob: -12.27514934539795
    7. '     ' → logprob: -13.02514934539795
    8. ' continues' → logprob: -13.15014934539795
    9. '    ' → logprob: -13.40014934539795
    10. '_continue' → logprob: -13.40014934539795

Token 213: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48519930243492126
    2. '       ' → logprob: -1.8601993322372437
    3. 'continue' (adapté à ' continue') → logprob: -2.110199213027954
    4. ' continue' → logprob: -2.235199213027954
    5. '	continue' → logprob: -7.860199451446533
    6. ' ' → logprob: -9.110198974609375
    7. '    ' → logprob: -10.610198974609375
    8. '           ' → logprob: -11.235198974609375
    9. '     ' → logprob: -11.360198974609375
    10. ' continu' → logprob: -11.360198974609375

Token 214: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002423106227070093
    2. '<|end|>' → logprob: -6.502423286437988
    3. ')' → logprob: -8.627423286437988
    4. ' for' → logprob: -8.877423286437988
    5. 'ans' → logprob: -9.002423286437988
    6. ' ans' → logprob: -9.502423286437988
    7. '    
' → logprob: -9.752423286437988
    8. 'for' → logprob: -9.752423286437988
    9. ' ' → logprob: -10.377423286437988
    10. '+' → logprob: -10.377423286437988

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9357266426086426
    2. 'for' → logprob: -1.0607266426086426
    3. ' for' → logprob: -1.8107266426086426
    4. 'ans' → logprob: -3.4357266426086426
    5. '+' → logprob: -3.8107266426086426
    6. '<|end|>' → logprob: -4.185726642608643
    7. ')' → logprob: -4.560726642608643
    8. ' ans' → logprob: -5.185726642608643
    9. ' ' → logprob: -5.810726642608643
    10. 'x' → logprob: -5.935726642608643

Token 216: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04874406009912491
    2. 'ans' (adapté à ' ans') → logprob: -3.798743963241577
    3. '   ' → logprob: -4.173744201660156
    4. ' for' → logprob: -4.673744201660156
    5. ' ans' → logprob: -9.298744201660156
    6. ' ' → logprob: -9.423744201660156
    7. '	for' → logprob: -9.923744201660156
    8. '  ' → logprob: -10.048744201660156
    9. '	ans' → logprob: -10.173744201660156
    10. '    
' → logprob: -10.673744201660156

Token 217: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07915899902582169
    2. '+=' → logprob: -2.5791590213775635
    3. '=' → logprob: -8.579158782958984
    4. ' =' → logprob: -10.079158782958984
    5. '+' → logprob: -10.579158782958984
    6. ' ' → logprob: -12.079158782958984
    7. ' *=' → logprob: -13.204158782958984
    8. ' +' → logprob: -13.454158782958984
    9. ' -=' → logprob: -13.579158782958984
    10. ']+=' → logprob: -13.579158782958984

Token 218: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004424775019288063
    2. ' x' → logprob: -5.504424571990967
    3. '3' → logprob: -8.504425048828125
    4. '(x' → logprob: -10.004425048828125
    5. '   ' → logprob: -10.504425048828125
    6. '6' → logprob: -10.504425048828125
    7. '2' → logprob: -11.254425048828125
    8. ' ' → logprob: -11.254425048828125
    9. '  ' → logprob: -12.504425048828125
    10. '8' → logprob: -12.629425048828125

Token 219: '[a' (ID: 32035)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03284694626927376
    2. '[a' → logprob: -3.9078469276428223
    3. '[b' → logprob: -4.407846927642822
    4. 'b' → logprob: -10.90784740447998
    5. 'a' → logprob: -11.40784740447998
    6. '[' → logprob: -11.40784740447998
    7. 'i' → logprob: -12.15784740447998
    8. '[x' → logprob: -14.40784740447998
    9. '[j' → logprob: -14.53284740447998
    10. '   ' → logprob: -15.40784740447998

Token 220: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016301481809932739
    2. ']*' → logprob: -8.875163078308105
    3. ' ]' → logprob: -11.000163078308105
    4. '-' → logprob: -12.875163078308105
    5. '*' → logprob: -13.000163078308105
    6. ' *' → logprob: -14.625163078308105
    7. ']
' → logprob: -15.750163078308105
    8. ' -' → logprob: -15.750163078308105
    9. '   ' → logprob: -15.875163078308105
    10. '[' → logprob: -15.875163078308105

Token 221: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023325953632593155
    2. '*' → logprob: -3.7733259201049805
    3. '[' → logprob: -9.64832592010498
    4. ' ' → logprob: -11.52332592010498
    5. ' *
' → logprob: -13.77332592010498
    6. '   ' → logprob: -14.02332592010498
    7. '  ' → logprob: -14.52332592010498
    8. '*[' → logprob: -14.77332592010498
    9. '[]' → logprob: -14.89832592010498
    10. ' ' → logprob: -14.89832592010498

Token 222: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003627150785177946
    2. 'b' → logprob: -5.628627300262451
    3. ' x' → logprob: -10.878626823425293
    4. 'a' → logprob: -12.503626823425293
    5. '   ' → logprob: -12.503626823425293
    6. 'c' → logprob: -15.253626823425293
    7. ' ' → logprob: -15.878626823425293
    8. '  ' → logprob: -15.878626823425293
    9. ' b' → logprob: -16.25362777709961
    10. 'ans' → logprob: -17.50362777709961

Token 223: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.012154048308730125
    2. '[i' → logprob: -4.5121541023254395
    3. '[c' → logprob: -7.6371541023254395
    4. 'b' → logprob: -7.7621541023254395
    5. '[a' → logprob: -8.637153625488281
    6. '[' → logprob: -11.012153625488281
    7. '[x' → logprob: -14.512153625488281
    8. 'i' → logprob: -14.762153625488281
    9. 'c' → logprob: -14.887153625488281
    10. '   ' → logprob: -15.137153625488281

Token 224: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.019471198320388794
    2. '*' → logprob: -4.019471168518066
    3. ']' → logprob: -6.644471168518066
    4. ' ' → logprob: -11.519471168518066
    5. ']*' → logprob: -11.769471168518066
    6. ' ]' → logprob: -14.769471168518066
    7. '*x' → logprob: -15.144471168518066
    8. '   ' → logprob: -15.519471168518066
    9. '[' → logprob: -16.019472122192383
    10. '*c' → logprob: -16.019472122192383

Token 225: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.34920787811279297
    2. '*' → logprob: -1.849207878112793
    3. '*x' → logprob: -2.099207878112793
    4. 'x' → logprob: -4.224207878112793
    5. ' x' → logprob: -9.099207878112793
    6. '   ' → logprob: -10.349207878112793
    7. ' ' → logprob: -10.974207878112793
    8. '*c' → logprob: -11.599207878112793
    9. '**' → logprob: -12.099207878112793
    10. '*[' → logprob: -12.099207878112793

Token 226: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00016825977945700288
    2. 'c' → logprob: -9.125167846679688
    3. ' x' → logprob: -9.750167846679688
    4. '[c' → logprob: -14.875167846679688
    5. '   ' → logprob: -15.125167846679688
    6. '[x' → logprob: -15.375167846679688
    7. '[' → logprob: -17.000167846679688
    8. '  ' → logprob: -17.500167846679688
    9. ' c' → logprob: -17.625167846679688
    10. ' ' → logprob: -18.000167846679688

Token 227: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0040173763409256935
    2. '[a' → logprob: -6.004017353057861
    3. 'c' → logprob: -6.629017353057861
    4. '[(' → logprob: -9.25401782989502
    5. '[b' → logprob: -9.75401782989502
    6. '[i' → logprob: -10.50401782989502
    7. '[' → logprob: -10.75401782989502
    8. '[k' → logprob: -11.50401782989502
    9. '[x' → logprob: -13.25401782989502
    10. 'a' → logprob: -13.50401782989502

Token 228: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47451913356781006
    2. ']' → logprob: -0.9745191335678101
    3. '])' → logprob: -8.099518775939941
    4. ' )' → logprob: -10.099518775939941
    5. ')]' → logprob: -10.349518775939941
    6. '}' → logprob: -10.599518775939941
    7. ' ]' → logprob: -10.724518775939941
    8. '）' → logprob: -12.349518775939941
    9. '<|end|>' → logprob: -12.474518775939941
    10. '[' → logprob: -12.974518775939941

Token 229: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02324908785521984
    2. '(' → logprob: -3.7732491493225098
    3. 'ans' → logprob: -14.023248672485352
    4. '(
' → logprob: -14.148248672485352
    5. ' (' → logprob: -14.273248672485352
    6. '()' → logprob: -14.648248672485352
    7. '(answer' → logprob: -15.273248672485352
    8. '('' → logprob: -15.398248672485352
    9. '(abs' → logprob: -16.27324867248535
    10. '("("' → logprob: -16.39824867248535

Token 231: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -12.75000286102295
    3. '))' → logprob: -16.500003814697266
    4. '+' → logprob: -16.625003814697266
    5. ')`' → logprob: -17.875003814697266
    6. ')
' → logprob: -18.000003814697266
    7. '')' → logprob: -18.125003814697266
    8. '()' → logprob: -18.375003814697266
    9. '())' → logprob: -18.375003814697266
    10. '**' → logprob: -18.625003814697266

Token 232: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' affiche' (ID: 127479)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.3540120124816895
    2. 'result' → logprob: -1.4790120124816895
    3. ' total' → logprob: -1.6040120124816895
    4. ' résultat' → logprob: -2.1040120124816895
    5. 'nombre' → logprob: -2.6040120124816895
    6. ' result' → logprob: -3.6040120124816895
    7. 'rés' → logprob: -3.7290120124816895
    8. 's' → logprob: -3.8540120124816895
    9. ' nombre' → logprob: -3.8540120124816895
    10. ')' → logprob: -5.6040120124816895

Token 238: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: 'pas' (ID: 21122)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.141186450899113e-05
    2. ' )' → logprob: -11.000020980834961
    3. ')
' → logprob: -13.125020980834961
    4. '')' → logprob: -14.125020980834961
    5. '")' → logprob: -14.750020980834961
    6. ')#' → logprob: -14.875020980834961
    7. '<|end|>' → logprob: -15.000020980834961
    8. '```' → logprob: -16.12502098083496
    9. '#' → logprob: -16.37502098083496
    10. '))' → logprob: -16.50002098083496

Token 240: ' sûr' (ID: 46415)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008514223620295525
    2. '()' → logprob: -5.758514404296875
    3. 'tout' → logprob: -7.008514404296875
    4. 'que' → logprob: -7.758514404296875
    5. '+' → logprob: -7.758514404296875
    6. 'f' → logprob: -8.133514404296875
    7. ' seulement' → logprob: -8.258514404296875
    8. ' )' → logprob: -8.258514404296875
    9. ' uniquement' → logprob: -8.508514404296875
    10. '.' → logprob: -8.508514404296875

Token 241: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.273621405242011e-05
    2. '<|end|>' → logprob: -10.875032424926758
    3. ')
' → logprob: -11.750032424926758
    4. ' )' → logprob: -12.625032424926758
    5. '}' → logprob: -15.250032424926758
    6. '))' → logprob: -15.250032424926758
    7. '())' → logprob: -15.500032424926758
    8. '),' → logprob: -15.875032424926758
    9. '<|end|>' → logprob: -15.875032424926758
    10. ')

' → logprob: -15.875032424926758

Token 242: ' format' (ID: 6011)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.4825228750705719
    2. ')' → logprob: -1.4825228452682495
    3. ' code' → logprob: -2.232522964477539
    4. 'tout' → logprob: -3.732522964477539
    5. 'comment' → logprob: -4.232522964477539
    6. '#' → logprob: -6.107522964477539
    7. 'result' → logprob: -6.357522964477539
    8. ' )' → logprob: -6.607522964477539
    9. '_code' → logprob: -7.107522964477539
    10. ' tout' → logprob: -7.107522964477539

Token 243: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030304016545414925
    2. '<|end|>' → logprob: -3.530303955078125
    3. ' )' → logprob: -8.030303955078125
    4. ' ' → logprob: -9.405303955078125
    5. '<|end|>' → logprob: -9.780303955078125
    6. '[' → logprob: -10.530303955078125
    7. '```' → logprob: -11.030303955078125
    8. '}' → logprob: -11.655303955078125
    9. '
' → logprob: -11.780303955078125
    10. ']' → logprob: -12.030303955078125

Token 244: ' tant' (ID: 16235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039647609810344875
    2. '<|end|>' → logprob: -8.625396728515625
    3. ' )' → logprob: -9.125396728515625
    4. '')' → logprob: -10.000396728515625
    5. '")' → logprob: -11.250396728515625
    6. ')
' → logprob: -11.625396728515625
    7. '()' → logprob: -11.750396728515625
    8. '())' → logprob: -12.000396728515625
    9. ')\' → logprob: -12.000396728515625
    10. '```' → logprob: -12.250396728515625

Token 245: ' pis' (ID: 19525)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007031604647636414
    2. ' que' → logprob: -6.507031440734863
    3. ' )' → logprob: -7.132031440734863
    4. '#' → logprob: -7.132031440734863
    5. ' qu' → logprob: -7.632031440734863
    6. '```' → logprob: -7.882031440734863
    7. 'ieux' → logprob: -8.007031440734863
    8. ' de' → logprob: -8.382031440734863
    9. ').' → logprob: -8.632031440734863
    10. ' ' → logprob: -8.882031440734863

Token 246: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001911432045744732
    2. '<|end|>' → logprob: -8.750190734863281
    3. ')
' → logprob: -11.000190734863281
    4. '```' → logprob: -12.125190734863281
    5. ' )' → logprob: -12.500190734863281
    6. '}' → logprob: -13.375190734863281
    7. '`)' → logprob: -13.625190734863281
    8. '")' → logprob: -14.125190734863281
    9. '
' → logprob: -14.750190734863281
    10. '<|end|>' → logprob: -15.000190734863281


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 244
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 148
Précision stricte (1ère position): 27.46%
Précision adaptée (1ère position): 28.28%
Précision (top 10): 60.66%
================================================================================
