================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import gcd as calculate_gcd

def compute_least_common_multiple_of_two_numbers(first_number, second_number):
    return (first_number * second_number) // calculate_gcd(first_number, second_number)


def compute_least_common_multiple_of_list(numbers_list):
    least_common_multiple = 1
    for current_number in numbers_list:
        least_common_multiple = compute_least_common_multiple_of_two_numbers(
            least_common_multiple, current_number
        )
    return least_common_multiple


number_of_elements = int(input())

integer_list = [int(element_as_string) for element_as_string in input().split()]

modulo_value = 10 ** 9 + 7

final_answer = 0

least_common_multiple_of_all_elements = compute_least_common_multiple_of_list(integer_list)
least_common_multiple_of_all_elements %= modulo_value

for current_index in range(number_of_elements):
    modular_inverse_of_element = pow(
        integer_list[current_index], modulo_value - 2, modulo_value
    )
    current_contribution = (least_common_multiple_of_all_elements * modular_inverse_of_element) % modulo_value
    final_answer = (final_answer + current_contribution) % modulo_value

print(final_answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' gcd' (ID: 106918)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.649153470993042
    2. 'sqrt' → logprob: -0.774153470993042
    3. ' pi' → logprob: -5.024153709411621
    4. 'pow' → logprob: -5.649153709411621
    5. 'sin' → logprob: -6.149153709411621
    6. 'pi' → logprob: -6.524153709411621
    7. ' sin' → logprob: -6.649153709411621
    8. ' ceil' → logprob: -7.649153709411621
    9. 'ceil' → logprob: -8.399153709411621
    10. ' pow' → logprob: -8.399153709411621

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007617394905537367
    2. '(
' → logprob: -5.507617473602295
    3. '\(' → logprob: -6.007617473602295
    4. '\n' → logprob: -7.882617473602295
    5. ',' → logprob: -8.882616996765137
    6. '\' → logprob: -9.132616996765137
    7. 'a' → logprob: -9.382616996765137
    8. '```' → logprob: -9.757616996765137
    9. ' (' → logprob: -10.007616996765137
    10. '#' → logprob: -10.007616996765137

Token 5: ' calculate' (ID: 17950)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.14167381823062897
    2. ' g' → logprob: -2.2666738033294678
    3. '_g' → logprob: -4.391674041748047
    4. ' gcd' → logprob: -4.641674041748047
    5. ' math' → logprob: -6.016674041748047
    6. 'math' → logprob: -6.766674041748047
    7. ' _' → logprob: -7.641674041748047
    8. ' G' → logprob: -7.891674041748047
    9. '`' → logprob: -7.891674041748047
    10. ' ' → logprob: -8.141674041748047

Token 6: '_g' (ID: 5439)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008814762346446514
    2. ' (' → logprob: -5.633814811706543
    3. '\(' → logprob: -6.258814811706543
    4. '.' → logprob: -6.758814811706543
    5. '<|end|>' → logprob: -7.133814811706543
    6. '_' → logprob: -7.883814811706543
    7. ',' → logprob: -8.258814811706543
    8. 'a' → logprob: -9.008814811706543
    9. ' ' → logprob: -9.133814811706543
    10. '(
' → logprob: -9.508814811706543

Token 7: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.002028327202424407
    2. 'c' → logprob: -6.377028465270996
    3. 'cdf' → logprob: -9.127028465270996
    4. 'u' → logprob: -9.377028465270996
    5. 'x' → logprob: -10.752028465270996
    6. 'cdn' → logprob: -11.002028465270996
    7. 'cf' → logprob: -11.127028465270996
    8. 'dc' → logprob: -11.502028465270996
    9. 'CD' → logprob: -11.877028465270996
    10. 'd' → logprob: -11.877028465270996

Token 8: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027230868581682444
    2. '\(' → logprob: -6.627723217010498
    3. '(
' → logprob: -7.377723217010498
    4. ',' → logprob: -8.25272274017334
    5. ' (' → logprob: -8.75272274017334
    6. '\n' → logprob: -8.87772274017334
    7. '\' → logprob: -9.75272274017334
    8. '
' → logprob: -9.87772274017334
    9. '```' → logprob: -11.12772274017334
    10. '#' → logprob: -11.25272274017334

Token 9: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00917556881904602
    2. '(
' → logprob: -5.884175777435303
    3. ',' → logprob: -6.009175777435303
    4. '\(' → logprob: -6.759175777435303
    5. ' (' → logprob: -6.884175777435303
    6. '\' → logprob: -7.134175777435303
    7. '
' → logprob: -8.634175300598145
    8. 'a' → logprob: -8.759175300598145
    9. '\n' → logprob: -9.009175300598145
    10. '_' → logprob: -9.884175300598145

Token 10: ' compute' (ID: 23864)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038474611937999725
    2. ' calculate' → logprob: -3.4134745597839355
    3. ' gcd' → logprob: -6.2884745597839355
    4. ' add' → logprob: -7.1634745597839355
    5. ' factorial' → logprob: -7.9134745597839355
    6. ' my' → logprob: -8.038475036621094
    7. ' compute' → logprob: -8.038475036621094
    8. ' space' → logprob: -8.163475036621094
    9. ' find' → logprob: -9.038475036621094
    10. ' l' → logprob: -9.163475036621094

Token 11: '_le' (ID: 27121)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0240195989608765
    2. '_factor' → logprob: -1.0240195989608765
    3. '_div' → logprob: -2.399019718170166
    4. '_area' → logprob: -2.524019718170166
    5. '_l' → logprob: -3.149019718170166
    6. '_g' → logprob: -3.774019718170166
    7. '_product' → logprob: -4.149019718170166
    8. '_' → logprob: -4.899019718170166
    9. '_f' → logprob: -5.149019718170166
    10. '(' → logprob: -6.024019718170166

Token 12: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.0003649017889983952
    2. 'n' → logprob: -8.625365257263184
    3. 'ng' → logprob: -8.875365257263184
    4. '_ast' → logprob: -11.750365257263184
    5. 'a' → logprob: -12.125365257263184
    6. ' ast' → logprob: -12.250365257263184
    7. '_' → logprob: -12.375365257263184
    8. 'st' → logprob: -12.500365257263184
    9. 'asts' → logprob: -12.500365257263184
    10. 'ft' → logprob: -13.125365257263184

Token 13: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.001334286411292851
    2. '_' → logprob: -7.251334190368652
    3. '_factor' → logprob: -8.126334190368652
    4. '_integer' → logprob: -10.001334190368652
    5. '_div' → logprob: -10.126334190368652
    6. '_number' → logprob: -10.251334190368652
    7. '_super' → logprob: -10.376334190368652
    8. '_multiple' → logprob: -10.751334190368652
    9. '_difference' → logprob: -11.001334190368652
    10. '_multiplier' → logprob: -11.251334190368652

Token 14: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.00023154958034865558
    2. 'multiple' → logprob: -9.000231742858887
    3. '_multiplier' → logprob: -9.500231742858887
    4. '_den' → logprob: -11.250231742858887
    5. '_mult' → logprob: -12.250231742858887
    6. '_m' → logprob: -12.375231742858887
    7. '_' → logprob: -12.500231742858887
    8. ' multiple' → logprob: -12.750231742858887
    9. '_div' → logprob: -12.750231742858887
    10. '_super' → logprob: -14.500231742858887

Token 15: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01189033780246973
    2. '_' → logprob: -4.511890411376953
    3. ' (' → logprob: -7.511890411376953
    4. '```' → logprob: -9.636890411376953
    5. '_(' → logprob: -10.261890411376953
    6. 's' → logprob: -10.761890411376953
    7. '<|end|>' → logprob: -11.136890411376953
    8. ' ' → logprob: -11.261890411376953
    9. '(n' → logprob: -11.511890411376953
    10. '(_' → logprob: -11.511890411376953

Token 16: '_two' (ID: 54305)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -1.1028660535812378
    2. ' three' → logprob: -1.1028660535812378
    3. '_two' → logprob: -2.3528661727905273
    4. '_three' → logprob: -2.6028661727905273
    5. ' numbers' → logprob: -2.9778661727905273
    6. '_numbers' → logprob: -3.2278661727905273
    7. 'three' → logprob: -3.7278661727905273
    8. 'numbers' → logprob: -3.7278661727905273
    9. 'two' → logprob: -4.352866172790527
    10. '(a' → logprob: -4.852866172790527

Token 17: '_numbers' (ID: 76842)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.035094454884529114
    2. '(a' → logprob: -4.160094261169434
    3. ' (' → logprob: -4.410094261169434
    4. '_numbers' → logprob: -5.285094261169434
    5. '(x' → logprob: -7.660094261169434
    6. '_two' → logprob: -7.910094261169434
    7. '_elements' → logprob: -7.910094261169434
    8. '_pairs' → logprob: -9.160094261169434
    9. '(n' → logprob: -9.410094261169434
    10. ' ' → logprob: -9.660094261169434

Token 18: '(first' (ID: 31998)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013928539119660854
    2. ' (' → logprob: -7.626392841339111
    3. '(a' → logprob: -7.626392841339111
    4. '():' → logprob: -8.37639331817627
    5. '(x' → logprob: -10.00139331817627
    6. ':' → logprob: -10.62639331817627
    7. '(n' → logprob: -10.75139331817627
    8. '(
' → logprob: -11.25139331817627
    9. '```' → logprob: -11.50139331817627
    10. '(token' → logprob: -12.00139331817627

Token 19: '_number' (ID: 11733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6179787516593933
    2. '_number' → logprob: -1.367978811264038
    3. '_' → logprob: -2.242978811264038
    4. '_,' → logprob: -2.617978811264038
    5. ' ,' → logprob: -4.617978572845459
    6. '_com' → logprob: -4.992978572845459
    7. '_num' → logprob: -5.992978572845459
    8. ')' → logprob: -6.117978572845459
    9. '_numbers' → logprob: -6.742978572845459
    10. '_integer' → logprob: -6.992978572845459

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.541112427134067e-05
    2. ' ,' → logprob: -9.875075340270996
    3. '):' → logprob: -10.875075340270996
    4. ')' → logprob: -12.500075340270996
    5. ' ' → logprob: -14.875075340270996
    6. ':' → logprob: -15.125075340270996
    7. ',
' → logprob: -15.750075340270996
    8. '_,' → logprob: -16.250076293945312
    9. '‌,' → logprob: -16.250076293945312
    10. ',last' → logprob: -16.500076293945312

Token 21: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.008641635999083519
    2. 'second' → logprob: -4.758641719818115
    3. '	second' → logprob: -11.258641242980957
    4. ' ' → logprob: -11.508641242980957
    5. '_second' → logprob: -12.633641242980957
    6. ' ' → logprob: -15.508641242980957
    7. ' space' → logprob: -15.508641242980957
    8. ' seconde' → logprob: -16.133642196655273
    9. '-second' → logprob: -16.133642196655273
    10. ' seconds' → logprob: -16.508642196655273

Token 22: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.07471145689487457
    2. '_' → logprob: -2.699711561203003
    3. '_numbers' → logprob: -5.824711322784424
    4. ')' → logprob: -7.449711322784424
    5. '_n' → logprob: -8.824711799621582
    6. ' _' → logprob: -9.074711799621582
    7. '_second' → logprob: -9.324711799621582
    8. '_name' → logprob: -9.324711799621582
    9. '):' → logprob: -9.449711799621582
    10. ')_' → logprob: -9.574711799621582

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001306787133216858
    2. ')' → logprob: -6.751307010650635
    3. ':' → logprob: -9.001306533813477
    4. '):
' → logprob: -12.251306533813477
    5. ' ):' → logprob: -12.626306533813477
    6. '   ' → logprob: -13.251306533813477
    7. ' ' → logprob: -14.376306533813477
    8. ',' → logprob: -14.751306533813477
    9. '():' → logprob: -14.751306533813477
    10. ''):' → logprob: -14.751306533813477

Token 24: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005299454089254141
    2. ':
' → logprob: -6.0052995681762695
    3. '   ' → logprob: -6.3802995681762695
    4. ' :' → logprob: -7.6302995681762695
    5. '):' → logprob: -8.50529956817627
    6. '':' → logprob: -9.25529956817627
    7. ':return' → logprob: -9.38029956817627
    8. '    
' → logprob: -10.00529956817627
    9. '```' → logprob: -10.38029956817627
    10. '  
' → logprob: -10.75529956817627

Token 25: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09070087969303131
    2. ' return' → logprob: -2.84070086479187
    3. '    
' → logprob: -4.715701103210449
    4. '    ' → logprob: -5.590701103210449
    5. ' 
' → logprob: -5.590701103210449
    6. 'return' (adapté à ' return') → logprob: -5.715701103210449
    7. ' ' → logprob: -6.590701103210449
    8. '       ' → logprob: -6.715701103210449
    9. '   
' → logprob: -6.840701103210449
    10. '  
' → logprob: -6.965701103210449

Token 26: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6783329248428345
    2. ' first' → logprob: -0.8033329248428345
    3. ' ' → logprob: -3.303332805633545
    4. ' calculate' → logprob: -5.303332805633545
    5. 'first' → logprob: -6.678332805633545
    6. '(first' → logprob: -7.053332805633545
    7. '  ' → logprob: -8.428333282470703
    8. ' ' → logprob: -8.553333282470703
    9. '(' → logprob: -8.928333282470703
    10. ' abs' → logprob: -9.303333282470703

Token 27: 'first' (ID: 7743)
  Prédit: 'first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.575958788394928
    2. ' first' → logprob: -0.825958788394928
    3. '   ' → logprob: -11.325959205627441
    4. ' ' → logprob: -12.075959205627441
    5. '	first' → logprob: -14.325959205627441
    6. ')' → logprob: -15.200959205627441
    7. '  ' → logprob: -15.200959205627441
    8. '(first' → logprob: -15.700959205627441
    9. 'First' → logprob: -16.700958251953125
    10. '    ' → logprob: -17.075958251953125

Token 28: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0015479490393772721
    2. '_' → logprob: -6.501547813415527
    3. ' _' → logprob: -10.376547813415527
    4. '_token' → logprob: -12.001547813415527
    5. '_code' → logprob: -12.751547813415527
    6. '_numbers' → logprob: -14.001547813415527
    7. '_n' → logprob: -14.126547813415527
    8. '_num' → logprob: -14.376547813415527
    9. 'number' → logprob: -14.626547813415527
    10. '_name' → logprob: -14.626547813415527

Token 29: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014420046471059322
    2. '*' → logprob: -4.389420032501221
    3. ' ' → logprob: -6.264420032501221
    4. ' ' → logprob: -12.889420509338379
    5. '   ' → logprob: -14.014420509338379
    6. '  ' → logprob: -14.264420509338379
    7. ' //' → logprob: -15.389420509338379
    8. '*object' → logprob: -15.389420509338379
    9. ')' → logprob: -15.514420509338379
    10. '    ' → logprob: -15.639420509338379

Token 30: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.02324850670993328
    2. 'second' → logprob: -3.7732484340667725
    3. ' ' → logprob: -13.398248672485352
    4. '	second' → logprob: -13.773248672485352
    5. '(second' → logprob: -15.523248672485352
    6. '   ' → logprob: -16.27324867248535
    7. ' ' → logprob: -16.27324867248535
    8. '  ' → logprob: -17.39824867248535
    9. '_second' → logprob: -17.77324867248535
    10. ' seconde' → logprob: -17.89824867248535

Token 31: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.8312570318812504e-05
    2. '_' → logprob: -11.000018119812012
    3. '_numbers' → logprob: -14.500018119812012
    4. '_code' → logprob: -14.875018119812012
    5. 'number' → logprob: -15.250018119812012
    6. ')' → logprob: -16.375019073486328
    7. '_g' → logprob: -16.500019073486328
    8. '_token' → logprob: -16.875019073486328
    9. '_NUMBER' → logprob: -17.125019073486328
    10. ')_' → logprob: -17.125019073486328

Token 32: ')' (ID: 8)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5537359714508057
    2. ')' → logprob: -1.5537359714508057
    3. ' //' → logprob: -1.5537359714508057
    4. ' ' → logprob: -6.303735733032227
    5. '//' → logprob: -8.303735733032227
    6. ')//' → logprob: -8.678735733032227
    7. ' /' → logprob: -11.928735733032227
    8. ' ' → logprob: -12.178735733032227
    9. ' ]' → logprob: -12.428735733032227
    10. '`' → logprob: -12.553735733032227

Token 33: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.02159265987575054
    2. ' ' → logprob: -3.896592617034912
    3. ')' → logprob: -8.02159309387207
    4. '//' → logprob: -8.14659309387207
    5. ' /' → logprob: -9.02159309387207
    6. ' ' → logprob: -9.39659309387207
    7. 'div' → logprob: -10.02159309387207
    8. ' )' → logprob: -10.39659309387207
    9. ''' → logprob: -10.77159309387207
    10. '  ' → logprob: -11.02159309387207

Token 34: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0485873706638813
    2. ' calculate' → logprob: -3.0485873222351074
    3. 'compute' → logprob: -17.173587799072266
    4. '.calculate' → logprob: -18.548587799072266
    5. ' compute' → logprob: -18.798587799072266
    6. 'alculate' → logprob: -18.923587799072266
    7. ' ' → logprob: -19.548587799072266
    8. '(c' → logprob: -19.548587799072266
    9. 'c' → logprob: -19.923587799072266
    10. 'calcul' → logprob: -20.298587799072266

Token 35: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -9.114600834436715e-05
    2. '_' → logprob: -9.750091552734375
    3. '_s' → logprob: -11.000091552734375
    4. ' _' → logprob: -12.000091552734375
    5. '_w' → logprob: -13.125091552734375
    6. '_a' → logprob: -13.875091552734375
    7. '_y' → logprob: -14.125091552734375
    8. '_sn' → logprob: -14.250091552734375
    9. '_gid' → logprob: -14.375091552734375
    10. '_v' → logprob: -14.375091552734375

Token 36: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.0280383548888494e-06
    2. '_cd' → logprob: -14.000000953674316
    3. 'c' → logprob: -16.250001907348633
    4. 'd' → logprob: -16.375001907348633
    5. 'cdn' → logprob: -18.500001907348633
    6. 'CD' → logprob: -18.500001907348633
    7. '	cd' → logprob: -19.750001907348633
    8. 'dc' → logprob: -19.875001907348633
    9. 'cdf' → logprob: -20.500001907348633
    10. ' cd' → logprob: -20.875001907348633

Token 37: '(first' (ID: 31998)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07912959158420563
    2. '(first' → logprob: -2.579129695892334
    3. '(second' → logprob: -8.579129219055176
    4. ' (' → logprob: -10.204129219055176
    5. '(
' → logprob: -12.454129219055176
    6. '(for' → logprob: -13.579129219055176
    7. '(open' → logprob: -13.954129219055176
    8. '(two' → logprob: -14.204129219055176
    9. '(com' → logprob: -14.329129219055176
    10. '((' → logprob: -14.454129219055176

Token 38: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0002334568416699767
    2. '_' → logprob: -8.37523365020752
    3. '_num' → logprob: -13.75023365020752
    4. '_numbers' → logprob: -14.50023365020752
    5. '_n' → logprob: -14.62523365020752
    6. 'number' → logprob: -15.37523365020752
    7. '_token' → logprob: -15.62523365020752
    8. ' _' → logprob: -15.75023365020752
    9. '_code' → logprob: -16.625232696533203
    10. '_)' → logprob: -17.125232696533203

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001941130612976849
    2. ' ,' → logprob: -6.251941204071045
    3. ')' → logprob: -11.626940727233887
    4. 'second' → logprob: -13.126940727233887
    5. ',
' → logprob: -14.626940727233887
    6. ' second' → logprob: -14.876940727233887
    7. ' ' → logprob: -15.876940727233887
    8. ' )' → logprob: -16.001941680908203
    9. ',

' → logprob: -16.126941680908203
    10. 'Second' → logprob: -16.251941680908203

Token 40: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.20141451060771942
    2. 'second' → logprob: -1.7014144659042358
    3. ' ' → logprob: -14.701414108276367
    4. '	second' → logprob: -14.826414108276367
    5. '(second' → logprob: -15.701414108276367
    6. '   ' → logprob: -16.076414108276367
    7. ' ' → logprob: -16.451414108276367
    8. '.second' → logprob: -17.076414108276367
    9. '_second' → logprob: -17.076414108276367
    10. 'Second' → logprob: -17.826414108276367

Token 41: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.3663626305060461e-05
    2. '_' → logprob: -11.25001335144043
    3. 'number' → logprob: -15.12501335144043
    4. '_)' → logprob: -16.37501335144043
    5. '_numbers' → logprob: -16.75001335144043
    6. ' _' → logprob: -17.50001335144043
    7. ')_' → logprob: -17.62501335144043
    8. ')' → logprob: -17.75001335144043
    9. '_name' → logprob: -17.75001335144043
    10. '_word' → logprob: -17.87501335144043

Token 42: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -16.375001907348633
    4. ')`' → logprob: -17.500001907348633
    5. '')' → logprob: -18.000001907348633
    6. ')return' → logprob: -18.500001907348633
    7. '))' → logprob: -18.750001907348633
    8. '）' → logprob: -19.125001907348633
    9. '`)' → logprob: -19.250001907348633
    10. '),' → logprob: -19.500001907348633

Token 43: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3627680540084839
    2. '#' → logprob: -2.6127681732177734
    3. '
' → logprob: -2.6127681732177734
    4. '<|end|>' → logprob: -2.6127681732177734
    5. '\' → logprob: -3.3627681732177734
    6. '```' → logprob: -4.487768173217773
    7. '\n' → logprob: -4.737768173217773
    8. 'n' → logprob: -5.487768173217773
    9. ' ' → logprob: -5.612768173217773
    10. '[' → logprob: -5.737768173217773

Token 44: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.016727782785892487
    2. ' calculate' → logprob: -4.641727924346924
    3. ' find' → logprob: -5.641727924346924
    4. ' ' → logprob: -5.891727924346924
    5. ' _' → logprob: -8.516727447509766
    6. '_' → logprob: -8.641727447509766
    7. 'compute' → logprob: -9.516727447509766
    8. ' space' → logprob: -9.641727447509766
    9. ' get' → logprob: -9.891727447509766
    10. '_compute' → logprob: -10.516727447509766

Token 45: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.5768686532974243
    2. '_' → logprob: -0.8268686532974243
    3. '_l' → logprob: -8.326869010925293
    4. '_m' → logprob: -8.451869010925293
    5. ' _' → logprob: -9.076869010925293
    6. '_space' → logprob: -9.826869010925293
    7. '_total' → logprob: -9.951869010925293
    8. '_low' → logprob: -10.701869010925293
    9. '_linear' → logprob: -10.826869010925293
    10. '_best' → logprob: -11.076869010925293

Token 46: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.00048119694110937417
    2. 'st' → logprob: -8.125481605529785
    3. '_common' → logprob: -9.000481605529785
    4. '_ast' → logprob: -10.875481605529785
    5. 'asts' → logprob: -12.000481605529785
    6. 'common' → logprob: -12.250481605529785
    7. 'аст' → logprob: -12.250481605529785
    8. 'ss' → logprob: -12.625481605529785
    9. 'est' → logprob: -12.750481605529785
    10. '_' → logprob: -13.000481605529785

Token 47: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -8.65707261255011e-06
    2. '_' → logprob: -12.000008583068848
    3. 'common' → logprob: -13.500008583068848
    4. '_comm' → logprob: -14.750008583068848
    5. '_com' → logprob: -15.000008583068848
    6. ' common' → logprob: -16.250009536743164
    7. '_complete' → logprob: -16.375009536743164
    8. '_cons' → logprob: -17.125009536743164
    9. '_c' → logprob: -17.250009536743164
    10. '_COMMON' → logprob: -17.625009536743164

Token 48: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.006794947665184736
    2. '_common' → logprob: -5.0067949295043945
    3. 'multiple' → logprob: -10.006794929504395
    4. '_' → logprob: -11.131794929504395
    5. '_multiplier' → logprob: -12.131794929504395
    6. '_m' → logprob: -12.256794929504395
    7. '_mult' → logprob: -12.756794929504395
    8. '_of' → logprob: -13.131794929504395
    9. '_three' → logprob: -14.006794929504395
    10. 'Multiple' → logprob: -14.631794929504395

Token 49: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.006242668721824884
    2. '_' → logprob: -5.131242752075195
    3. '_for' → logprob: -8.756242752075195
    4. '(' → logprob: -10.006242752075195
    5. 'of' → logprob: -10.256242752075195
    6. '_two' → logprob: -10.881242752075195
    7. '_between' → logprob: -11.006242752075195
    8. '_three' → logprob: -11.381242752075195
    9. '_(' → logprob: -12.131242752075195
    10. '_over' → logprob: -13.131242752075195

Token 50: '_list' (ID: 4162)
  Prédit: '_three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_three' → logprob: -0.015656795352697372
    2. '_' → logprob: -5.1406569480896
    3. '_two' → logprob: -5.7656569480896
    4. '_list' → logprob: -5.7656569480896
    5. '_multiple' → logprob: -6.1406569480896
    6. '_a' → logprob: -7.7656569480896
    7. '_four' → logprob: -8.390656471252441
    8. 'three' → logprob: -8.765656471252441
    9. '_numbers' → logprob: -8.890656471252441
    10. '_many' → logprob: -9.015656471252441

Token 51: '(numbers' (ID: 98592)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6432486176490784
    2. '_of' → logprob: -0.7682486176490784
    3. '(' → logprob: -4.768248558044434
    4. '_(' → logprob: -8.143248558044434
    5. '_s' → logprob: -8.268248558044434
    6. '_for' → logprob: -8.643248558044434
    7. 's' → logprob: -8.768248558044434
    8. '_elements' → logprob: -8.768248558044434
    9. '_numbers' → logprob: -9.268248558044434
    10. '_three' → logprob: -9.393248558044434

Token 52: '_list' (ID: 4162)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016490479931235313
    2. ')' → logprob: -4.141490459442139
    3. '(' → logprob: -8.266490936279297
    4. '[' → logprob: -9.641490936279297
    5. '[]):' → logprob: -10.016490936279297
    6. '_list' → logprob: -10.141490936279297
    7. ' ):' → logprob: -11.141490936279297
    8. '():' → logprob: -11.641490936279297
    9. '):
' → logprob: -12.266490936279297
    10. ':' → logprob: -13.391490936279297

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003223821986466646
    2. ')' → logprob: -5.753223896026611
    3. ' ):' → logprob: -10.753223419189453
    4. '   ' → logprob: -11.378223419189453
    5. ':' → logprob: -12.128223419189453
    6. '):
' → logprob: -12.753223419189453
    7. '(' → logprob: -14.128223419189453
    8. ']:' → logprob: -14.378223419189453
    9. '[]):' → logprob: -14.378223419189453
    10. '[' → logprob: -14.628223419189453

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6223505139350891
    2. ' l' → logprob: -0.8723505139350891
    3. ' result' → logprob: -4.247350692749023
    4. ' lc' → logprob: -4.622350692749023
    5. '    
' → logprob: -5.622350692749023
    6. '    ' → logprob: -5.622350692749023
    7. ' current' → logprob: -5.747350692749023
    8. ' if' → logprob: -5.872350692749023
    9. ' n' → logprob: -6.247350692749023
    10. ' numbers' → logprob: -6.747350692749023

Token 55: ' least' (ID: 5153)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.11743893474340439
    2. ' result' → logprob: -2.367439031600952
    3. ' if' → logprob: -5.367438793182373
    4. ' lc' → logprob: -5.617438793182373
    5. '   ' → logprob: -5.992438793182373
    6. 'result' → logprob: -6.367438793182373
    7. 'l' → logprob: -6.742438793182373
    8. ' least' → logprob: -6.742438793182373
    9. ' from' → logprob: -6.867438793182373
    10. ' current' → logprob: -7.117438793182373

Token 56: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.010864589363336563
    2. '_' → logprob: -4.635864734649658
    3. '_c' → logprob: -8.2608642578125
    4. '_com' → logprob: -8.6358642578125
    5. '_value' → logprob: -9.2608642578125
    6. ' _' → logprob: -9.2608642578125
    7. '_current' → logprob: -9.2608642578125
    8. '_possible' → logprob: -9.7608642578125
    9. '_cm' → logprob: -10.0108642578125
    10. ' =' → logprob: -10.0108642578125

Token 57: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.0007378002628684044
    2. 'multiple' → logprob: -7.50073766708374
    3. '_' → logprob: -8.875738143920898
    4. '_common' → logprob: -10.500738143920898
    5. '_mult' → logprob: -11.750738143920898
    6. '_multiplier' → logprob: -12.250738143920898
    7. '_m' → logprob: -13.125738143920898
    8. 'Multiple' → logprob: -14.250738143920898
    9. ' multiple' → logprob: -14.250738143920898
    10. '_mul' → logprob: -14.750738143920898

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0321560800075531
    2. '=' → logprob: -4.032155990600586
    3. '_' → logprob: -4.282155990600586
    4. ' ' → logprob: -9.782155990600586
    5. 's' → logprob: -11.032155990600586
    6. '_=' → logprob: -11.532155990600586
    7. '_of' → logprob: -12.282155990600586
    8. '   ' → logprob: -13.407155990600586
    9. ' _' → logprob: -13.782155990600586
    10. '<|end|>' → logprob: -14.157155990600586

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019711190834641457
    2. 'numbers' → logprob: -4.519711017608643
    3. ' ' → logprob: -5.144711017608643
    4. ' numbers' → logprob: -5.894711017608643
    5. '   ' → logprob: -10.6447114944458
    6. '(numbers' → logprob: -11.5197114944458
    7. '0' → logprob: -13.5822114944458
    8. '  ' → logprob: -13.7072114944458
    9. ' ' → logprob: -13.8947114944458
    10. '`' → logprob: -14.0197114944458

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048592932522296906
    2. 'numbers' → logprob: -3.048593044281006
    3. ' numbers' → logprob: -13.048592567443848
    4. '   ' → logprob: -13.923592567443848
    5. ' ' → logprob: -13.923592567443848
    6. '(numbers' → logprob: -14.423592567443848
    7. '0' → logprob: -15.298592567443848
    8. '2' → logprob: -15.798592567443848
    9. 'nums' → logprob: -16.423593521118164
    10. '```' → logprob: -16.548593521118164

Token 61: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.050633709877729416
    2. 'for' → logprob: -3.425633668899536
    3. ' ' → logprob: -4.550633907318115
    4. ' 
' → logprob: -5.925633907318115
    5. '
' → logprob: -6.300633907318115
    6. '   ' → logprob: -6.800633907318115
    7. '<|end|>' → logprob: -8.425633430480957
    8. '    
' → logprob: -9.300633430480957
    9. '  
' → logprob: -9.800633430480957
    10. '	for' → logprob: -9.925633430480957

Token 62: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4750138819217682
    2. '   ' → logprob: -1.1000138521194458
    3. 'for' → logprob: -3.8500139713287354
    4. '    
' → logprob: -4.225013732910156
    5. '
' → logprob: -4.975013732910156
    6. ' 
' → logprob: -6.725013732910156
    7. ' ' → logprob: -7.600013732910156
    8. '  
' → logprob: -8.350013732910156
    9. '   
' → logprob: -8.725013732910156
    10. '	for' → logprob: -8.850013732910156

Token 63: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6944030523300171
    2. 'for' (adapté à ' for') → logprob: -0.6944030523300171
    3. '   ' → logprob: -6.694403171539307
    4. '    
' → logprob: -12.069402694702148
    5. ' ' → logprob: -12.569402694702148
    6. '	for' → logprob: -12.694402694702148
    7. '```' → logprob: -12.694402694702148
    8. '
' → logprob: -14.444402694702148
    9. '  ' → logprob: -14.694402694702148
    10. ' 
' → logprob: -15.069402694702148

Token 64: ' current' (ID: 2208)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.0035286827478557825
    2. 'number' → logprob: -6.128528594970703
    3. ' num' → logprob: -7.253528594970703
    4. ' ' → logprob: -7.628528594970703
    5. ' numbers' → logprob: -10.128528594970703
    6. 'num' → logprob: -10.253528594970703
    7. ' n' → logprob: -10.628528594970703
    8. 'n' → logprob: -11.378528594970703
    9. '_' → logprob: -11.503528594970703
    10. ' ' → logprob: -11.628528594970703

Token 65: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.014538599178195
    2. '_' → logprob: -4.264538764953613
    3. '_num' → logprob: -8.514538764953613
    4. ' ' → logprob: -9.514538764953613
    5. ' number' → logprob: -9.889538764953613
    6. ' _' → logprob: -10.889538764953613
    7. 'number' → logprob: -11.639538764953613
    8. '_numbers' → logprob: -11.639538764953613
    9. '_n' → logprob: -12.264538764953613
    10. '_element' → logprob: -12.389538764953613

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048674460500478745
    2. 'in' → logprob: -3.0486743450164795
    3. ' ' → logprob: -10.423674583435059
    4. '	in' → logprob: -10.673674583435059
    5. '   ' → logprob: -10.923674583435059
    6. '    ' → logprob: -12.298674583435059
    7. '_in' → logprob: -13.048674583435059
    8. ',' → logprob: -13.173674583435059
    9. '  ' → logprob: -13.298674583435059
    10. ' :' → logprob: -13.548674583435059

Token 67: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.014192184433341026
    2. 'numbers' → logprob: -4.2641921043396
    3. '(numbers' → logprob: -10.889192581176758
    4. '_numbers' → logprob: -11.889192581176758
    5. ' ' → logprob: -13.014192581176758
    6. 'umbers' → logprob: -14.139192581176758
    7. ' números' → logprob: -16.514192581176758
    8. ' ' → logprob: -17.264192581176758
    9. 'Numbers' → logprob: -18.264192581176758
    10. ' numeros' → logprob: -18.514192581176758

Token 68: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.180258191714529e-06
    2. '_' → logprob: -12.250008583068848
    3. 's' → logprob: -12.875008583068848
    4. ' _' → logprob: -16.00000762939453
    5. '_numbers' → logprob: -16.50000762939453
    6. 'List' → logprob: -16.62500762939453
    7. '_List' → logprob: -16.75000762939453
    8. '_LIST' → logprob: -16.87500762939453
    9. '._' → logprob: -17.00000762939453
    10. '_lists' → logprob: -17.00000762939453

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010834212880581617
    2. '       ' → logprob: -7.2510833740234375
    3. ' :' → logprob: -8.626083374023438
    4. '):' → logprob: -9.626083374023438
    5. '=' → logprob: -10.501083374023438
    6. ':
' → logprob: -10.626083374023438
    7. '   ' → logprob: -10.751083374023438
    8. ',' → logprob: -10.876083374023438
    9. '<|end|>' → logprob: -10.876083374023438
    10. '<|end|>' → logprob: -12.501083374023438

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0250766072422266
    2. '        
' → logprob: -4.025076389312744
    3. ' 
' → logprob: -5.650076389312744
    4. '        ' → logprob: -7.150076389312744
    5. ' least' → logprob: -7.400076389312744
    6. '    ' → logprob: -7.650076389312744
    7. ' ' → logprob: -8.025076866149902
    8. ',' → logprob: -8.650076866149902
    9. '       
' → logprob: -8.775076866149902
    10. '   ' → logprob: -8.900076866149902

Token 71: ' least' (ID: 5153)
  Prédit: ' least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' least' → logprob: -0.436462938785553
    2. 'least' (adapté à ' least') → logprob: -1.1864628791809082
    3. '       ' → logprob: -3.061462879180908
    4. '        ' → logprob: -7.061462879180908
    5. '        
' → logprob: -8.186463356018066
    6. '           ' → logprob: -9.311463356018066
    7. '
' → logprob: -9.561463356018066
    8. ' 
' → logprob: -9.686463356018066
    9. 'le' → logprob: -9.686463356018066
    10. '```' → logprob: -9.811463356018066

Token 72: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -1.3663626305060461e-05
    2. 'common' → logprob: -11.37501335144043
    3. '_com' → logprob: -14.00001335144043
    4. '_' → logprob: -14.37501335144043
    5. '_current' → logprob: -15.75001335144043
    6. 'Common' → logprob: -16.12501335144043
    7. ' common' → logprob: -16.37501335144043
    8. '_COMMON' → logprob: -16.50001335144043
    9. '_comm' → logprob: -16.75001335144043
    10. '	common' → logprob: -17.00001335144043

Token 73: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.005407592281699181
    2. '_common' → logprob: -5.255407810211182
    3. 'multiple' → logprob: -9.005407333374023
    4. '_m' → logprob: -10.630407333374023
    5. 'ultiple' → logprob: -11.255407333374023
    6. 'common' → logprob: -12.505407333374023
    7. 'imum' → logprob: -13.630407333374023
    8. '_multiplier' → logprob: -14.005407333374023
    9. 'multip' → logprob: -14.130407333374023
    10. '_' → logprob: -14.255407333374023

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006814946420490742
    2. '=' → logprob: -5.006814956665039
    3. ' *=' → logprob: -9.256814956665039
    4. ' ' → logprob: -13.006814956665039
    5. '    ' → logprob: -14.381814956665039
    6. '_' → logprob: -15.256814956665039
    7. '	' → logprob: -15.506814956665039
    8. ' ' → logprob: -15.506814956665039
    9. '   ' → logprob: -15.631814956665039
    10. '  ' → logprob: -15.756814956665039

Token 75: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.10020925104618073
    2. 'compute' → logprob: -2.3502092361450195
    3. ' ' → logprob: -13.47520923614502
    4. '   ' → logprob: -15.22520923614502
    5. ' calculate' → logprob: -15.35020923614502
    6. '.compute' → logprob: -15.47520923614502
    7. '_compute' → logprob: -15.85020923614502
    8. 'calculate' → logprob: -15.97520923614502
    9. 'comput' → logprob: -16.100210189819336
    10. '(com' → logprob: -16.600210189819336

Token 76: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.125
    3. '_less' → logprob: -16.5
    4. '_l' → logprob: -19.75
    5. '_low' → logprob: -19.75
    6. '_LE' → logprob: -20.875
    7. 'least' → logprob: -21.125
    8. '```' → logprob: -22.125
    9. '_lo' → logprob: -22.5
    10. '_leg' → logprob: -22.875

Token 77: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.00045712877181358635
    2. '_common' → logprob: -8.500456809997559
    3. 'a' → logprob: -9.250456809997559
    4. 'as' → logprob: -9.375456809997559
    5. '_ast' → logprob: -10.375456809997559
    6. 'common' → logprob: -11.500456809997559
    7. 'аст' → logprob: -11.750456809997559
    8. 'est' → logprob: -12.125456809997559
    9. '_' → logprob: -12.500456809997559
    10. 'east' → logprob: -12.750456809997559

Token 78: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -8.196732960641384e-05
    2. 'common' → logprob: -9.500082015991211
    3. '_com' → logprob: -12.875082015991211
    4. '_' → logprob: -13.375082015991211
    5. '_comm' → logprob: -14.375082015991211
    6. 'est' → logprob: -14.625082015991211
    7. '__' → logprob: -14.750082015991211
    8. '_of' → logprob: -15.375082015991211
    9. 'o' → logprob: -15.875082015991211
    10. '_current' → logprob: -16.25008201599121

Token 79: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.007355782203376293
    2. 'multiple' → logprob: -5.507355690002441
    3. 'ultiple' → logprob: -6.132355690002441
    4. '_common' → logprob: -7.257355690002441
    5. 'iple' → logprob: -8.882355690002441
    6. 'um' → logprob: -9.007355690002441
    7. 'utable' → logprob: -9.632355690002441
    8. 'common' → logprob: -10.507355690002441
    9. 'ute' → logprob: -11.882355690002441
    10. '_m' → logprob: -12.507355690002441

Token 80: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.375001907348633
    3. 'of' → logprob: -14.375001907348633
    4. '_for' → logprob: -16.375001907348633
    5. '_o' → logprob: -16.750001907348633
    6. ' of' → logprob: -17.375001907348633
    7. '(of' → logprob: -17.500001907348633
    8. '```' → logprob: -17.750001907348633
    9. '	of' → logprob: -18.000001907348633
    10. ' _' → logprob: -18.750001907348633

Token 81: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0017635977128520608
    2. 'two' → logprob: -6.376763820648193
    3. '_tw' → logprob: -10.001763343811035
    4. '_t' → logprob: -12.501763343811035
    5. 'wo' → logprob: -12.501763343811035
    6. 'Two' → logprob: -13.001763343811035
    7. '_' → logprob: -13.251763343811035
    8. '(two' → logprob: -13.501763343811035
    9. '2' → logprob: -14.001763343811035
    10. ' two' → logprob: -14.376763343811035

Token 82: '_numbers' (ID: 76842)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5056091547012329
    2. '_numbers' → logprob: -1.005609154701233
    3. '_number' → logprob: -3.8806090354919434
    4. '_multiple' → logprob: -5.255609035491943
    5. '_m' → logprob: -6.880609035491943
    6. '_common' → logprob: -7.005609035491943
    7. '_l' → logprob: -7.380609035491943
    8. '_two' → logprob: -7.755609035491943
    9. '_le' → logprob: -8.130609512329102
    10. '_more' → logprob: -8.505609512329102

Token 83: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.511406809295295e-06
    2. ' (' → logprob: -13.000006675720215
    3. '(
' → logprob: -13.000006675720215
    4. '(

' → logprob: -13.875006675720215
    5. '(le' → logprob: -14.250006675720215
    6. '(previous' → logprob: -16.5000057220459
    7. ' ' → logprob: -16.5000057220459
    8. '(let' → logprob: -17.3750057220459
    9. '('' → logprob: -17.5000057220459
    10. '(current' → logprob: -18.1250057220459

Token 84: '           ' (ID: 352)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.05511719733476639
    2. ' least' → logprob: -2.930117130279541
    3. '       ' → logprob: -9.1801176071167
    4. '           ' → logprob: -9.4301176071167
    5. '        ' → logprob: -11.0551176071167
    6. '   ' → logprob: -11.3051176071167
    7. '            ' → logprob: -11.6801176071167
    8. 'le' → logprob: -12.0551176071167
    9. '    ' → logprob: -12.9301176071167
    10. 'Least' → logprob: -13.9301176071167

Token 85: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' (adapté à ' least') → logprob: -0.04315128177404404
    2. ' least' → logprob: -3.168151378631592
    3. '           ' → logprob: -9.043150901794434
    4. '            ' → logprob: -11.293150901794434
    5. '       ' → logprob: -12.043150901794434
    6. '               ' → logprob: -12.168150901794434
    7. '   ' → logprob: -12.418150901794434
    8. 'le' → logprob: -13.168150901794434
    9. '    ' → logprob: -14.168150901794434
    10. ')' → logprob: -14.293150901794434

Token 86: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.0003818140830844641
    2. 'common' → logprob: -7.875381946563721
    3. ' common' → logprob: -14.375381469726562
    4. '_com' → logprob: -14.875381469726562
    5. '_' → logprob: -15.625381469726562
    6. 'Common' → logprob: -15.625381469726562
    7. '_COMMON' → logprob: -16.125381469726562
    8. '_comm' → logprob: -16.875381469726562
    9. '_command' → logprob: -17.125381469726562
    10. '_current' → logprob: -17.250381469726562

Token 87: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.22651974856853485
    2. '_common' → logprob: -1.6015197038650513
    3. 'common' → logprob: -7.976519584655762
    4. 'ultiple' → logprob: -8.476519584655762
    5. 'multiple' → logprob: -8.976519584655762
    6. '_' → logprob: -9.851519584655762
    7. '_m' → logprob: -9.851519584655762
    8. 'imum' → logprob: -10.101519584655762
    9. 'iple' → logprob: -10.476519584655762
    10. 'utable' → logprob: -10.601519584655762

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013464801304508
    2. ',current' → logprob: -9.000134468078613
    3. ',
' → logprob: -11.625134468078613
    4. ',

' → logprob: -14.000134468078613
    5. ' ,' → logprob: -14.375134468078613
    6. '`,' → logprob: -15.125134468078613
    7. '   ' → logprob: -16.00013542175293
    8. ',c' → logprob: -16.12513542175293
    9. '‌,' → logprob: -16.62513542175293
    10. '',' → logprob: -17.12513542175293

Token 89: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.0017149277264252305
    2. 'current' → logprob: -6.376714706420898
    3. ' ' → logprob: -11.501714706420898
    4. ' ' → logprob: -14.376714706420898
    5. '            ' → logprob: -14.626714706420898
    6. '           ' → logprob: -14.751714706420898
    7. '	current' → logprob: -14.876714706420898
    8. ' 
' → logprob: -15.376714706420898
    9. '[current' → logprob: -15.751714706420898
    10. '$current' → logprob: -16.2517147064209

Token 90: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00016444525681436062
    2. '_' → logprob: -8.750164031982422
    3. ' _' → logprob: -12.500164031982422
    4. '_numbers' → logprob: -14.875164031982422
    5. '_num' → logprob: -15.000164031982422
    6. 'umber' → logprob: -15.375164031982422
    7. '_n' → logprob: -15.500164031982422
    8. '__' → logprob: -15.750164031982422
    9. '_user' → logprob: -15.750164031982422
    10. '_

' → logprob: -16.125164031982422

Token 91: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010702044237405062
    2. ')
' → logprob: -6.876070022583008
    3. ' )' → logprob: -10.626070022583008
    4. '   ' → logprob: -11.626070022583008
    5. '       ' → logprob: -13.251070022583008
    6. ')

' → logprob: -14.126070022583008
    7. ')return' → logprob: -14.376070022583008
    8. ' ' → logprob: -15.251070022583008
    9. ' )
' → logprob: -15.501070022583008
    10. ')
' → logprob: -15.751070022583008

Token 92: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002514188876375556
    2. ')
' → logprob: -6.002514362335205
    3. '   ' → logprob: -10.877513885498047
    4. ' )' → logprob: -11.377513885498047
    5. '       ' → logprob: -12.252513885498047
    6. ')
' → logprob: -13.752513885498047
    7. ')

' → logprob: -14.377513885498047
    8. ')return' → logprob: -14.502513885498047
    9. ' ' → logprob: -14.877513885498047
    10. ' )
' → logprob: -15.127513885498047

Token 93: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057751137763261795
    2. ')
' (adapté à ' )
') → logprob: -2.932751178741455
    3. '   ' → logprob: -5.932751178741455
    4. ' )' → logprob: -9.057750701904297
    5. ' )
' → logprob: -9.807750701904297
    6. ')return' → logprob: -11.307750701904297
    7. ')

' → logprob: -11.432750701904297
    8. ' ' → logprob: -11.682750701904297
    9. ')
' → logprob: -12.057750701904297
    10. '       ' → logprob: -13.557750701904297

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04707333445549011
    2. '
' → logprob: -3.4220733642578125
    3. '    
' → logprob: -4.4220733642578125
    4. 'return' → logprob: -7.0470733642578125
    5. ' 
' → logprob: -8.422073364257812
    6. ' return' → logprob: -9.047073364257812
    7. '   
' → logprob: -9.922073364257812
    8. '  
' → logprob: -10.172073364257812
    9. '        
' → logprob: -11.422073364257812
    10. '```' → logprob: -12.422073364257812

Token 95: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2785067558288574
    2. '   ' → logprob: -1.5285067558288574
    3. ' return' → logprob: -3.6535067558288574
    4. '    
' → logprob: -8.778507232666016
    5. '
' → logprob: -9.778507232666016
    6. ':return' → logprob: -10.403507232666016
    7. ' 
' → logprob: -10.653507232666016
    8. '```' → logprob: -11.028507232666016
    9. '	return' → logprob: -11.153507232666016
    10. 'r' → logprob: -11.778507232666016

Token 96: ' least' (ID: 5153)
  Prédit: ' least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' least' → logprob: -0.0005743592046201229
    2. 'least' → logprob: -7.500574588775635
    3. ' ' → logprob: -10.875574111938477
    4. '_' → logprob: -14.000574111938477
    5. ' ' → logprob: -14.375574111938477
    6. '_le' → logprob: -14.625574111938477
    7. ' le' → logprob: -15.500574111938477
    8. ' space' → logprob: -15.750574111938477
    9. ' _' → logprob: -16.125574111938477
    10. 'le' → logprob: -17.625574111938477

Token 97: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.0020411754958331585
    2. 'common' → logprob: -6.627041339874268
    3. 'ast' → logprob: -7.377041339874268
    4. 'est' → logprob: -9.37704086303711
    5. 't' → logprob: -13.12704086303711
    6. ' common' → logprob: -13.62704086303711
    7. '(common' → logprob: -15.00204086303711
    8. 'lest' → logprob: -15.50204086303711
    9. 'Common' → logprob: -15.87704086303711
    10. '_com' → logprob: -16.00204086303711

Token 98: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.006736215204000473
    2. 't' → logprob: -5.7567362785339355
    3. 'ultiple' → logprob: -7.2567362785339355
    4. 'ute' → logprob: -7.3817362785339355
    5. 'utable' → logprob: -7.8817362785339355
    6. '_t' → logprob: -8.256735801696777
    7. '_common' → logprob: -8.381735801696777
    8. 'imum' → logprob: -8.631735801696777
    9. '_possible' → logprob: -8.756735801696777
    10. 'te' → logprob: -9.256735801696777

Token 99: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: 'number' (ID: 8096)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17337509989738464
    2. '<|end|>' → logprob: -1.923375129699707
    3. '[' → logprob: -5.173375129699707
    4. '```' → logprob: -5.548375129699707
    5. 'a' → logprob: -7.173375129699707
    6. 'n' → logprob: -7.173375129699707
    7. 'def' → logprob: -7.298375129699707
    8. 'numbers' → logprob: -8.173375129699707
    9. ' ' → logprob: -8.673375129699707
    10. '<|end|>' → logprob: -8.798375129699707

Token 101: '_of' (ID: 8023)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15025226771831512
    2. '_list' → logprob: -2.150252342224121
    3. '_s' → logprob: -3.775252342224121
    4. '_' → logprob: -9.275252342224121
    5. '_lists' → logprob: -11.650252342224121
    6. '_array' → logprob: -12.025252342224121
    7. ' s' → logprob: -12.400252342224121
    8. 'list' → logprob: -12.650252342224121
    9. '_lst' → logprob: -14.025252342224121
    10. '_to' → logprob: -14.150252342224121

Token 102: '_elements' (ID: 53344)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6848536133766174
    2. '_items' → logprob: -1.4348535537719727
    3. ' ' → logprob: -1.8098535537719727
    4. '_numbers' → logprob: -3.1848535537719727
    5. '_elements' → logprob: -3.6848535537719727
    6. ' _' → logprob: -4.809853553771973
    7. '_s' → logprob: -5.684853553771973
    8. '_lists' → logprob: -5.684853553771973
    9. '_list' → logprob: -5.809853553771973
    10. '_values' → logprob: -5.934853553771973

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21423041820526123
    2. '=' → logprob: -1.9642304182052612
    3. '<|end|>' → logprob: -3.339230537414551
    4. ' ' → logprob: -4.214230537414551
    5. '_' → logprob: -6.589230537414551
    6. ')' → logprob: -7.714230537414551
    7. '<|end|>' → logprob: -8.83923053741455
    8. ',' → logprob: -9.58923053741455
    9. '=int' → logprob: -9.83923053741455
    10. 's' → logprob: -10.21423053741455

Token 104: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.016597529873251915
    2. 'int' → logprob: -4.141597747802734
    3. ' ' → logprob: -7.641597747802734
    4. '10' → logprob: -9.766597747802734
    5. '5' → logprob: -11.891597747802734
    6. ' len' → logprob: -12.016597747802734
    7. '[int' → logprob: -13.016597747802734
    8. ' input' → logprob: -13.266597747802734
    9. '7' → logprob: -13.266597747802734
    10. '6' → logprob: -13.766597747802734

Token 105: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10023956745862961
    2. '(input' → logprob: -2.3502395153045654
    3. '()' → logprob: -11.225239753723145
    4. 'input' → logprob: -11.725239753723145
    5. '(
' → logprob: -12.350239753723145
    6. '('' → logprob: -12.725239753723145
    7. ' (' → logprob: -13.475239753723145
    8. '(int' → logprob: -14.225239753723145
    9. '("' → logprob: -14.975239753723145
    10. '(

' → logprob: -15.225239753723145

Token 106: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39391323924064636
    2. '(' → logprob: -1.1439132690429688
    3. '('' → logprob: -6.018913269042969
    4. '())' → logprob: -6.143913269042969
    5. '("("' → logprob: -6.143913269042969
    6. '(
' → logprob: -9.643913269042969
    7. '("' → logprob: -9.893913269042969
    8. '("")' → logprob: -10.268913269042969
    9. '(),' → logprob: -10.393913269042969
    10. '(()' → logprob: -10.893913269042969

Token 107: 'integer' (ID: 27378)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.0043756477534770966
    2. 'elements' → logprob: -5.754375457763672
    3. 'number' → logprob: -7.504375457763672
    4. 'input' → logprob: -7.754375457763672
    5. 'list' → logprob: -9.379375457763672
    6. 'array' → logprob: -10.379375457763672
    7. ' numbers' → logprob: -10.629375457763672
    8. 'values' → logprob: -11.004375457763672
    9. 'num' → logprob: -11.254375457763672
    10. 'user' → logprob: -11.504375457763672

Token 108: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19272086024284363
    2. '_list' → logprob: -2.692720890045166
    3. '_s' → logprob: -2.942720890045166
    4. '_numbers' → logprob: -3.067720890045166
    5. '_values' → logprob: -5.442720890045166
    6. '_' → logprob: -5.942720890045166
    7. '_array' → logprob: -6.692720890045166
    8. '_elements' → logprob: -9.692720413208008
    9. ' s' → logprob: -10.567720413208008
    10. '_lists' → logprob: -11.692720413208008

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005302892532199621
    2. '=' → logprob: -5.255302906036377
    3. 's' → logprob: -9.755302429199219
    4. ' ' → logprob: -11.630302429199219
    5. '_' → logprob: -13.505302429199219
    6. ' ' → logprob: -14.630302429199219
    7. ' =[' → logprob: -15.755302429199219
    8. '=[]' → logprob: -16.13030242919922
    9. '_values' → logprob: -17.50530242919922
    10. '[]' → logprob: -17.50530242919922

Token 110: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.7028801441192627
    2. '[' → logprob: -1.3278801441192627
    3. 'list' → logprob: -1.5778801441192627
    4. ' list' → logprob: -3.8278801441192627
    5. '(list' → logprob: -5.202879905700684
    6. ' [' → logprob: -5.202879905700684
    7. '[]' → logprob: -8.202879905700684
    8. '[input' → logprob: -8.827879905700684
    9. '[List' → logprob: -9.702879905700684
    10. '[int' → logprob: -9.952879905700684

Token 111: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.061054359131958e-06
    2. ' int' → logprob: -11.750007629394531
    3. '   ' → logprob: -15.875007629394531
    4. '[int' → logprob: -18.00000762939453
    5. '(int' → logprob: -18.75000762939453
    6. '<int' → logprob: -18.87500762939453
    7. '  ' → logprob: -18.87500762939453
    8. '```' → logprob: -19.12500762939453
    9. '	int' → logprob: -19.75000762939453
    10. '
' → logprob: -20.12500762939453

Token 112: '(element' (ID: 22709)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16100460290908813
    2. '(' → logprob: -1.9110045433044434
    3. '(x' → logprob: -7.286004543304443
    4. '()' → logprob: -9.911005020141602
    5. '(
' → logprob: -11.161005020141602
    6. '()]' → logprob: -11.411005020141602
    7. '(i' → logprob: -12.411005020141602
    8. 'input' → logprob: -12.411005020141602
    9. ' (' → logprob: -12.786005020141602
    10. '(

' → logprob: -13.036005020141602

Token 113: '_as' (ID: 25206)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16360531747341156
    2. '(' → logprob: -2.413605213165283
    3. ')' → logprob: -3.288605213165283
    4. '()' → logprob: -3.913605213165283
    5. '())' → logprob: -6.038605213165283
    6. 'input' → logprob: -6.538605213165283
    7. ' )' → logprob: -9.788605690002441
    8. ' (' → logprob: -9.788605690002441
    9. '()]' → logprob: -9.913605690002441
    10. '=input' → logprob: -10.038605690002441

Token 114: '_string' (ID: 8609)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0313398540019989
    2. ' input' → logprob: -3.5313398838043213
    3. 'put' → logprob: -6.781339645385742
    4. '=input' → logprob: -8.781339645385742
    5. '(input' → logprob: -9.031339645385742
    6. '_input' → logprob: -9.656339645385742
    7. 'n' → logprob: -10.156339645385742
    8. ' ' → logprob: -10.531339645385742
    9. ')' → logprob: -10.781339645385742
    10. 'x' → logprob: -12.031339645385742

Token 115: ')' (ID: 8)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0581028126180172
    2. ')' → logprob: -3.55810284614563
    3. '())' → logprob: -4.308102607727051
    4. '()' → logprob: -4.808102607727051
    5. 'input' → logprob: -5.683102607727051
    6. '(' → logprob: -5.933102607727051
    7. '()]' → logprob: -9.30810260772705
    8. ' )' → logprob: -9.93310260772705
    9. '=input' → logprob: -9.93310260772705
    10. ' ())' → logprob: -10.80810260772705

Token 116: ' for' (ID: 395)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5218008756637573
    2. '(' → logprob: -1.0218008756637573
    3. 'for' → logprob: -3.771800994873047
    4. ' for' → logprob: -4.146800994873047
    5. '()' → logprob: -5.146800994873047
    6. ' (' → logprob: -6.896800994873047
    7. 'input' → logprob: -7.396800994873047
    8. ' ' → logprob: -8.896800994873047
    9. ')' → logprob: -9.396800994873047
    10. '(in' → logprob: -10.521800994873047

Token 117: ' element' (ID: 3577)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0028116481844335794
    2. ' ' → logprob: -6.627811431884766
    3. 'input' → logprob: -7.252811431884766
    4. ' range' → logprob: -7.252811431884766
    5. ' _' → logprob: -9.752811431884766
    6. ' element' → logprob: -12.627811431884766
    7. '_' → logprob: -12.877811431884766
    8. 'range' → logprob: -13.127811431884766
    9. ' ' → logprob: -14.127811431884766
    10. '=input' → logprob: -14.377811431884766

Token 118: '_as' (ID: 25206)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008606183342635632
    2. 'in' → logprob: -5.25860595703125
    3. '_in' → logprob: -6.00860595703125
    4. '_as' → logprob: -7.38360595703125
    5. '_' → logprob: -8.75860595703125
    6. ' ' → logprob: -9.50860595703125
    7. '	in' → logprob: -11.25860595703125
    8. ' _' → logprob: -11.38360595703125
    9. 'as' → logprob: -11.88360595703125
    10. '<|end|>' → logprob: -11.88360595703125

Token 119: '_string' (ID: 8609)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07967980951070786
    2. ' input' → logprob: -2.5796797275543213
    3. 'string' → logprob: -7.7046799659729
    4. '(input' → logprob: -8.579679489135742
    5. '=input' → logprob: -9.704679489135742
    6. ' ' → logprob: -10.454679489135742
    7. 'user' → logprob: -11.329679489135742
    8. '	input' → logprob: -11.829679489135742
    9. 'integer' → logprob: -12.079679489135742
    10. 'element' → logprob: -12.204679489135742

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0067556328140199184
    2. 'in' → logprob: -5.006755828857422
    3. ' ' → logprob: -10.881755828857422
    4. 'input' → logprob: -11.381755828857422
    5. '(input' → logprob: -12.256755828857422
    6. ' input' → logprob: -12.881755828857422
    7. '=input' → logprob: -13.631755828857422
    8. '	in' → logprob: -14.631755828857422
    9. '(in' → logprob: -15.881755828857422
    10. '<|end|>' → logprob: -15.881755828857422

Token 121: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1271350383758545
    2. 'input' → logprob: -2.1271350383758545
    3. ' range' → logprob: -8.752135276794434
    4. 'range' → logprob: -10.377135276794434
    5. ' ' → logprob: -11.127135276794434
    6. '=input' → logprob: -13.877135276794434
    7. '(input' → logprob: -14.377135276794434
    8. '	input' → logprob: -14.377135276794434
    9. '<input' → logprob: -15.002135276794434
    10. ' ' → logprob: -15.627135276794434

Token 122: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.778209353797138e-05
    2. '()' → logprob: -9.625067710876465
    3. '(' → logprob: -13.875067710876465
    4. ' ().' → logprob: -14.250067710876465
    5. '()]' → logprob: -16.12506866455078
    6. '()
' → logprob: -18.37506866455078
    7. '.split' → logprob: -19.12506866455078
    8. '())' → logprob: -19.25006866455078
    9. '()].' → logprob: -19.50006866455078
    10. '("").' → logprob: -19.75006866455078

Token 123: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014432499185204506
    2. 'strip' → logprob: -4.264432430267334
    3. 'rstrip' → logprob: -8.514432907104492
    4. ' split' → logprob: -9.639432907104492
    5. ' strip' → logprob: -13.264432907104492
    6. 'spl' → logprob: -13.514432907104492
    7. '(split' → logprob: -15.639432907104492
    8. '.split' → logprob: -17.139432907104492
    9. ' ' → logprob: -17.264432907104492
    10. 'read' → logprob: -18.639432907104492

Token 124: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.004308822099119425
    2. '()' → logprob: -5.629308700561523
    3. '(' → logprob: -8.129308700561523
    4. '())' → logprob: -8.254308700561523
    5. '('' → logprob: -8.879308700561523
    6. ']' → logprob: -12.129308700561523
    7. '()]
' → logprob: -13.129308700561523
    8. '("' → logprob: -13.254308700561523
    9. ')]' → logprob: -13.379308700561523
    10. '()][' → logprob: -14.129308700561523

Token 125: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04406207054853439
    2. ')]' → logprob: -3.4190621376037598
    3. '()]' → logprob: -4.66906213760376
    4. ' ]' → logprob: -7.04406213760376
    5. ')' → logprob: -9.419061660766602
    6. '])' → logprob: -11.419061660766602
    7. '(' → logprob: -12.419061660766602
    8. '()' → logprob: -12.669061660766602
    9. ' ' → logprob: -13.169061660766602
    10. '`]' → logprob: -13.544061660766602

Token 126: 'mod' (ID: 4847)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08965768665075302
    2. 'result' → logprob: -2.589657783508301
    3. 'l' → logprob: -4.839657783508301
    4. 'answer' → logprob: -7.089657783508301
    5. 'if' → logprob: -7.339657783508301
    6. 'least' → logprob: -7.839657783508301
    7. 'for' → logprob: -8.4646577835083
    8. 'total' → logprob: -9.0896577835083
    9. 'output' → logprob: -9.3396577835083
    10. 'target' → logprob: -9.4646577835083

Token 127: 'ulo' (ID: 5953)
  Prédit: 'ulus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulus' → logprob: -0.3341609835624695
    2. 'ulo' → logprob: -2.3341610431671143
    3. '=' → logprob: -2.8341610431671143
    4. ' =' → logprob: -3.5841610431671143
    5. '_value' → logprob: -3.8341610431671143
    6. '_' → logprob: -3.9591610431671143
    7. '<|end|>' → logprob: -4.334160804748535
    8. 'ule' → logprob: -4.459160804748535
    9. ' ' → logprob: -4.459160804748535
    10. '_factor' → logprob: -4.959160804748535

Token 128: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13499733805656433
    2. ' ' → logprob: -2.6349973678588867
    3. '_' → logprob: -3.0099973678588867
    4. '=' → logprob: -5.509997367858887
    5. '_value' → logprob: -7.384997367858887
    6. ' _' → logprob: -8.134997367858887
    7. '_space' → logprob: -9.759997367858887
    8. '  ' → logprob: -10.009997367858887
    9. '_factor' → logprob: -10.009997367858887
    10. ' ' → logprob: -10.634997367858887

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001981687266379595
    2. ' ' → logprob: -6.251981735229492
    3. '=' → logprob: -10.001981735229492
    4. ' =
' → logprob: -12.626981735229492
    5. ' ' → logprob: -13.376981735229492
    6. '_space' → logprob: -14.626981735229492
    7. ' =)' → logprob: -14.626981735229492
    8. '<|end|>' → logprob: -14.626981735229492
    9. 'space' → logprob: -14.751981735229492
    10. '_' → logprob: -15.126981735229492

Token 130: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2756234109401703
    2. '100' → logprob: -1.5256234407424927
    3. ' ' → logprob: -3.775623321533203
    4. '1' → logprob: -7.650623321533203
    5. '998' → logprob: -11.775623321533203
    6. '999' → logprob: -12.275623321533203
    7. ' 
' → logprob: -13.650623321533203
    8. '109' → logprob: -14.525623321533203
    9. ' ' → logprob: -14.650623321533203
    10. ' (' → logprob: -14.775623321533203

Token 131: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6946369409561157
    2. '100' → logprob: -0.6946369409561157
    3. '1' → logprob: -6.569636821746826
    4. '(' → logprob: -10.319637298583984
    5. '998' → logprob: -10.444637298583984
    6. '999' → logprob: -11.944637298583984
    7. ' ' → logprob: -12.194637298583984
    8. '2' → logprob: -12.319637298583984
    9. 'int' → logprob: -13.069637298583984
    10. '123' → logprob: -14.569637298583984

Token 132: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0012617830652743578
    2. '**' → logprob: -6.7512617111206055
    3. '09' → logprob: -9.376261711120605
    4. '009' → logprob: -12.876261711120605
    5. '6' → logprob: -13.751261711120605
    6. '^' → logprob: -14.251261711120605
    7. '_' → logprob: -14.251261711120605
    8. '```' → logprob: -14.626261711120605
    9. ' ' → logprob: -15.251261711120605
    10. '7' → logprob: -15.501261711120605

Token 133: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.1472419600977446e-06
    2. '09' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '10' → logprob: -16.750001907348633
    5. '_' → logprob: -17.375001907348633
    6. '```' → logprob: -17.375001907348633
    7. '18' → logprob: -17.500001907348633
    8. '7' → logprob: -18.125001907348633
    9. '6' → logprob: -18.375001907348633
    10. '4' → logprob: -18.812501907348633

Token 134: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.6240566083070007e-06
    2. '09' → logprob: -14.250001907348633
    3. '18' → logprob: -15.625001907348633
    4. '10' → logprob: -16.375001907348633
    5. '

' → logprob: -16.500001907348633
    6. '```' → logprob: -16.500001907348633
    7. '
' → logprob: -16.562501907348633
    8. '+' → logprob: -16.812501907348633
    9. ' ' → logprob: -16.812501907348633
    10. '_' → logprob: -17.125001907348633

Token 135: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009521945030428469
    2. ' +' → logprob: -7.000952243804932
    3. '7' → logprob: -10.875951766967773
    4. '+
' → logprob: -10.875951766967773
    5. ' ' → logprob: -14.500951766967773
    6. ' plus' → logprob: -14.625951766967773
    7. '+

' → logprob: -14.750951766967773
    8. ' +
' → logprob: -14.875951766967773
    9. '＋' → logprob: -15.000951766967773
    10. 'plus' → logprob: -15.125951766967773

Token 136: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '+' → logprob: -16.875
    4. '```' → logprob: -18.0
    5. '   ' → logprob: -19.9375
    6. '9' → logprob: -20.1875
    7. '712' → logprob: -20.5
    8. '' → logprob: -20.5
    9. '07' → logprob: -20.6875
    10. '

' → logprob: -20.75

Token 137: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -18.25
    4. '+' → logprob: -18.75
    5. '07' → logprob: -19.75
    6. '9' → logprob: -19.8125
    7. '   ' → logprob: -20.3125
    8. '۷' → logprob: -20.4375
    9. '७' → logprob: -20.5625
    10. '

' → logprob: -20.625

Token 138: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05337534844875336
    2. '

' → logprob: -3.303375244140625
    3. '
' → logprob: -4.928375244140625
    4. '<|end|>' → logprob: -5.178375244140625
    5. 'result' → logprob: -7.678375244140625
    6. ' 
' → logprob: -7.803375244140625
    7. '' → logprob: -7.803375244140625
    8. '\n' → logprob: -8.553375244140625
    9. '  
' → logprob: -8.803375244140625
    10. 'print' → logprob: -8.803375244140625

Token 139: 'final' (ID: 17196)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12416922301054001
    2. 'l' → logprob: -2.249169111251831
    3. 'answer' → logprob: -5.49916934967041
    4. 'total' → logprob: -5.62416934967041
    5. 'least' → logprob: -6.49916934967041
    6. 'current' → logprob: -7.49916934967041
    7. 'product' → logprob: -7.99916934967041
    8. 'print' → logprob: -8.37416934967041
    9. 'for' → logprob: -9.24916934967041
    10. 'output' → logprob: -9.24916934967041

Token 140: '_answer' (ID: 65702)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06147927790880203
    2. '_le' → logprob: -3.436479330062866
    3. '_result' → logprob: -3.811479330062866
    4. '_l' → logprob: -6.186479091644287
    5. '_value' → logprob: -6.186479091644287
    6. '_common' → logprob: -7.561479091644287
    7. '_answer' → logprob: -8.686479568481445
    8. '_low' → logprob: -9.186479568481445
    9. '_multiple' → logprob: -9.811479568481445
    10. '_m' → logprob: -9.936479568481445

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017390783177688718
    2. ' ' → logprob: -7.001739025115967
    3. '=' → logprob: -7.126739025115967
    4. '_' → logprob: -11.126739501953125
    5. ' =
' → logprob: -13.126739501953125
    6. ' _' → logprob: -13.126739501953125
    7. '_space' → logprob: -13.251739501953125
    8. ' ' → logprob: -13.751739501953125
    9. '  ' → logprob: -14.376739501953125
    10. 'space' → logprob: -15.251739501953125

Token 142: ' ' (ID: 220)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.5759733319282532
    2. 'compute' → logprob: -0.8259733319282532
    3. '1' → logprob: -10.450973510742188
    4. ' ' → logprob: -13.200973510742188
    5. ' ' → logprob: -13.575973510742188
    6. 'pow' → logprob: -15.200973510742188
    7. '
' → logprob: -15.200973510742188
    8. 'calculate' → logprob: -15.450973510742188
    9. '.compute' → logprob: -15.450973510742188
    10. '   ' → logprob: -15.700973510742188

Token 143: '0' (ID: 15)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -8.637786231702194e-05
    2. '1' → logprob: -9.750086784362793
    3. ' compute' → logprob: -10.500086784362793
    4. 'calculate' → logprob: -15.500086784362793
    5. 'pow' → logprob: -15.875086784362793
    6. '0' → logprob: -17.000085830688477
    7. 'com' → logprob: -18.500085830688477
    8. 'computed' → logprob: -18.625085830688477
    9. 'computer' → logprob: -18.750085830688477
    10. '.compute' → logprob: -18.875085830688477

Token 144: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.037030503153800964
    2. 'for' → logprob: -3.6620304584503174
    3. ' for' → logprob: -5.6620306968688965
    4. '<|end|>' → logprob: -6.0370306968688965
    5. '

' → logprob: -6.1620306968688965
    6. ' 
' → logprob: -6.2870306968688965
    7. '
' → logprob: -7.9120306968688965
    8. '' → logprob: -8.912030220031738
    9. ' ' → logprob: -8.912030220031738
    10. '\n' → logprob: -9.412030220031738

Token 145: 'least' (ID: 96926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.088346359931165e-07
    2. ' for' → logprob: -14.500000953674316
    3. 'f' → logprob: -15.250000953674316
    4. 'fo' → logprob: -17.25
    5. 'current' → logprob: -17.625
    6. '```' → logprob: -17.875
    7. ')' → logprob: -18.0
    8. 'n' → logprob: -18.125
    9. '#' → logprob: -18.125
    10. 'from' → logprob: -18.375

Token 146: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.0010511501459404826
    2. '_' → logprob: -6.87605094909668
    3. 'common' → logprob: -11.12605094909668
    4. '_current' → logprob: -13.87605094909668
    5. '_le' → logprob: -15.37605094909668
    6. '_complete' → logprob: -15.50105094909668
    7. ' _' → logprob: -15.62605094909668
    8. '_continue' → logprob: -15.62605094909668
    9. 'Common' → logprob: -15.75105094909668
    10. ' common' → logprob: -15.87605094909668

Token 147: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.1013951227068901
    2. '_common' → logprob: -2.3513951301574707
    3. '_m' → logprob: -8.226394653320312
    4. '_' → logprob: -8.351394653320312
    5. '_multiplier' → logprob: -8.601394653320312
    6. '_mult' → logprob: -9.476394653320312
    7. '_multi' → logprob: -9.976394653320312
    8. '_more' → logprob: -10.226394653320312
    9. '_possible' → logprob: -10.226394653320312
    10. '_of' → logprob: -10.601394653320312

Token 148: '_of' (ID: 8023)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42051082849502563
    2. '_' → logprob: -1.4205107688903809
    3. '=' → logprob: -2.295510768890381
    4. '_=' → logprob: -7.295510768890381
    5. '_of' → logprob: -8.670511245727539
    6. ' ' → logprob: -9.920511245727539
    7. 'of' → logprob: -10.420511245727539
    8. '_value' → logprob: -11.045511245727539
    9. ' _' → logprob: -11.045511245727539
    10. '_for' → logprob: -11.670511245727539

Token 149: '_all' (ID: 13305)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.008954782970249653
    2. '_integer' → logprob: -5.133955001831055
    3. '_' → logprob: -6.008955001831055
    4. 'integer' → logprob: -7.883955001831055
    5. '_lists' → logprob: -9.508955001831055
    6. '_number' → logprob: -10.883955001831055
    7. ' _' → logprob: -11.258955001831055
    8. '_int' → logprob: -11.508955001831055
    9. '_numbers' → logprob: -11.508955001831055
    10. 'list' → logprob: -11.883955001831055

Token 150: '_elements' (ID: 53344)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0058546047657728195
    2. '_s' → logprob: -6.130854606628418
    3. '_numbers' → logprob: -6.630854606628418
    4. 's' → logprob: -7.005854606628418
    5. ' =' → logprob: -7.755854606628418
    6. '_list' → logprob: -8.255854606628418
    7. '_of' → logprob: -8.380854606628418
    8. '_=' → logprob: -9.005854606628418
    9. '=' → logprob: -9.630854606628418
    10. '_lists' → logprob: -9.880854606628418

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0023820691276341677
    2. '=' → logprob: -6.252382278442383
    3. '_' → logprob: -7.877382278442383
    4. ' ' → logprob: -9.627382278442383
    5. ' _' → logprob: -13.002382278442383
    6. '  ' → logprob: -13.627382278442383
    7. '_=' → logprob: -14.002382278442383
    8. ',' → logprob: -14.377382278442383
    9. ' =
' → logprob: -14.377382278442383
    10. ')' → logprob: -15.002382278442383

Token 152: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.3868829607963562
    2. ' compute' → logprob: -1.136883020401001
    3. '1' → logprob: -11.636882781982422
    4. '.compute' → logprob: -13.636882781982422
    5. ' ' → logprob: -14.136882781982422
    6. '_compute' → logprob: -14.761882781982422
    7. 'computer' → logprob: -15.511882781982422
    8. 'calculate' → logprob: -15.511882781982422
    9. '0' → logprob: -16.511882781982422
    10. 'comput' → logprob: -16.636882781982422

Token 153: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.002508478006348014
    2. '_' → logprob: -6.002508640289307
    3. '_l' → logprob: -11.127508163452148
    4. '_less' → logprob: -11.627508163452148
    5. '_low' → logprob: -11.752508163452148
    6. ' _' → logprob: -14.502508163452148
    7. '__' → logprob: -16.12750816345215
    8. '_lo' → logprob: -16.12750816345215
    9. '_lower' → logprob: -16.87750816345215
    10. '_m' → logprob: -17.00250816345215

Token 154: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.02412434294819832
    2. '_common' → logprob: -3.7741243839263916
    3. 'common' → logprob: -7.7741241455078125
    4. 'st' → logprob: -8.149124145507812
    5. '_ast' → logprob: -9.774124145507812
    6. 'est' → logprob: -10.149124145507812
    7. 'as' → logprob: -11.274124145507812
    8. '_' → logprob: -11.649124145507812
    9. 'a' → logprob: -12.024124145507812
    10. 'arst' → logprob: -12.149124145507812

Token 155: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.0002619318547658622
    2. 'common' → logprob: -8.250262260437012
    3. '_' → logprob: -15.625262260437012
    4. 'Common' → logprob: -15.750262260437012
    5. '_com' → logprob: -16.875261306762695
    6. '_current' → logprob: -16.875261306762695
    7. ' common' → logprob: -17.125261306762695
    8. '```' → logprob: -17.625261306762695
    9. '__' → logprob: -18.375261306762695
    10. '_comm' → logprob: -18.625261306762695

Token 156: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.00027587503427639604
    2. 'multiple' → logprob: -8.375275611877441
    3. '_common' → logprob: -10.375275611877441
    4. '_m' → logprob: -12.625275611877441
    5. '_' → logprob: -13.000275611877441
    6. 'ultiple' → logprob: -13.250275611877441
    7. '_list' → logprob: -13.500275611877441
    8. '_mult' → logprob: -13.875275611877441
    9. '_multi' → logprob: -14.125275611877441
    10. '_multiplier' → logprob: -14.500275611877441

Token 157: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.0
    3. '_or' → logprob: -17.375
    4. '_for' → logprob: -17.5
    5. 'of' → logprob: -17.875
    6. ' of' → logprob: -18.25
    7. ' _' → logprob: -18.375
    8. '_off' → logprob: -18.625
    9. '```' → logprob: -18.625
    10. '_to' → logprob: -19.125

Token 158: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00023607931507285684
    2. 'list' → logprob: -8.375236511230469
    3. 'List' → logprob: -12.875236511230469
    4. '_' → logprob: -14.125236511230469
    5. '_all' → logprob: -14.750236511230469
    6. '_lists' → logprob: -14.750236511230469
    7. 'all' → logprob: -15.125236511230469
    8. '_l' → logprob: -15.875236511230469
    9. 'numbers' → logprob: -16.00023651123047
    10. 'ist' → logprob: -16.00023651123047

Token 159: '(integer' (ID: 191023)
  Prédit: '(integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(integer' → logprob: -0.16153013706207275
    2. '(' → logprob: -1.9115301370620728
    3. '(numbers' → logprob: -6.786530017852783
    4. '(number' → logprob: -9.661530494689941
    5. '(
' → logprob: -10.036530494689941
    6. '(int' → logprob: -10.286530494689941
    7. '(in' → logprob: -11.911530494689941
    8. '(Integer' → logprob: -11.911530494689941
    9. '(object' → logprob: -12.411530494689941
    10. 'integer' → logprob: -12.911530494689941

Token 160: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: 0.0
    2. '_' → logprob: -17.5
    3. '_lists' → logprob: -17.875
    4. ')_' → logprob: -18.25
    5. ' _' → logprob: -18.5
    6. '```' → logprob: -18.875
    7. 's' → logprob: -19.25
    8. '_List' → logprob: -19.25
    9. '_lst' → logprob: -19.625
    10. '_l' → logprob: -19.75

Token 161: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036545987240970135
    2. ')

' → logprob: -6.128654479980469
    3. ')
' → logprob: -7.003654479980469
    4. '()' → logprob: -7.628654479980469
    5. '())' → logprob: -10.878654479980469
    6. ' )' → logprob: -10.878654479980469
    7. ')

' → logprob: -11.753654479980469
    8. '(' → logprob: -11.878654479980469
    9. ')
' → logprob: -12.128654479980469
    10. '()

' → logprob: -12.503654479980469

Token 162: 'least' (ID: 96926)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06399611383676529
    2. '<|end|>' → logprob: -3.5639960765838623
    3. '%' → logprob: -3.8139960765838623
    4. 'for' → logprob: -5.188996315002441
    5. '\n' → logprob: -6.688996315002441
    6. '

' → logprob: -6.813996315002441
    7. ' 
' → logprob: -6.938996315002441
    8. ' for' → logprob: -7.438996315002441
    9. '
' → logprob: -7.688996315002441
    10. '**' → logprob: -7.813996315002441

Token 163: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.000553151941858232
    2. '_' → logprob: -7.750553131103516
    3. 'common' → logprob: -9.125553131103516
    4. '_com' → logprob: -12.000553131103516
    5. 'Common' → logprob: -13.125553131103516
    6. '<|end|>' → logprob: -14.000553131103516
    7. '_c' → logprob: -14.375553131103516
    8. '_comm' → logprob: -14.500553131103516
    9. '_current' → logprob: -14.750553131103516
    10. '```' → logprob: -15.000553131103516

Token 164: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.4705597460269928
    2. '_common' → logprob: -1.7205597162246704
    3. '_of' → logprob: -2.09555983543396
    4. '_' → logprob: -2.97055983543396
    5. '_m' → logprob: -4.345559597015381
    6. '_mult' → logprob: -6.595559597015381
    7. '_value' → logprob: -6.970559597015381
    8. '_le' → logprob: -7.220559597015381
    9. '_possible' → logprob: -7.345559597015381
    10. '_low' → logprob: -7.595559597015381

Token 165: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.008928196504712105
    2. '_' → logprob: -4.758928298950195
    3. 'of' → logprob: -9.133928298950195
    4. '_o' → logprob: -9.633928298950195
    5. '%' → logprob: -10.508928298950195
    6. '_
' → logprob: -10.883928298950195
    7. ' _' → logprob: -11.258928298950195
    8. '<|end|>' → logprob: -11.383928298950195
    9. ' of' → logprob: -11.508928298950195
    10. '_mod' → logprob: -11.633928298950195

Token 166: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -4.191489642835222e-05
    2. '_' → logprob: -11.125041961669922
    3. '_list' → logprob: -12.000041961669922
    4. 'all' → logprob: -12.125041961669922
    5. '_a' → logprob: -12.375041961669922
    6. '_al' → logprob: -12.500041961669922
    7. '_of' → logprob: -12.500041961669922
    8. ' _' → logprob: -13.875041961669922
    9. '_integer' → logprob: -14.375041961669922
    10. '_final' → logprob: -15.500041961669922

Token 167: '_elements' (ID: 53344)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.39290374517440796
    2. '_elements' → logprob: -1.2679038047790527
    3. '_' → logprob: -3.1429038047790527
    4. ' _' → logprob: -9.392903327941895
    5. '_o' → logprob: -9.642903327941895
    6. 'of' → logprob: -10.517903327941895
    7. '_numbers' → logprob: -10.767903327941895
    8. '__' → logprob: -11.392903327941895
    9. '_all' → logprob: -11.392903327941895
    10. '_
' → logprob: -11.517903327941895

Token 168: ' %=' (ID: 117035)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5674405097961426
    2. '%' → logprob: -0.9424405097961426
    3. '<|end|>' → logprob: -3.4424405097961426
    4. ' ' → logprob: -4.692440509796143
    5. '**' → logprob: -7.442440509796143
    6. '
' → logprob: -7.817440509796143
    7. ' **' → logprob: -7.817440509796143
    8. ' %
' → logprob: -8.067440032958984
    9. '<|end|>' → logprob: -9.317440032958984
    10. ' 
' → logprob: -9.567440032958984

Token 169: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.004840214736759663
    2. 'mod' → logprob: -5.62984037399292
    3. ' ' → logprob: -6.75484037399292
    4. ' ' → logprob: -10.129839897155762
    5. '(mod' → logprob: -11.004839897155762
    6. ' mod' → logprob: -11.879839897155762
    7. ' modu' → logprob: -13.004839897155762
    8. ' module' → logprob: -13.504839897155762
    9. ' 
' → logprob: -13.754839897155762
    10. ' módulo' → logprob: -13.879839897155762

Token 170: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.392202976712724e-06
    2. 'value' → logprob: -12.000006675720215
    3. '_' → logprob: -15.750006675720215
    4. '_mod' → logprob: -18.0000057220459
    5. '_VALUE' → logprob: -18.5000057220459
    6. 'Value' → logprob: -19.2500057220459
    7. 'alue' → logprob: -19.7500057220459
    8. '_val' → logprob: -19.7500057220459
    9. '_values' → logprob: -19.7500057220459
    10. '_Value' → logprob: -19.8750057220459

Token 171: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010172023437917233
    2. '

' → logprob: -4.760171890258789
    3. '
' → logprob: -6.885171890258789
    4. '<|end|>' → logprob: -8.510171890258789
    5. ' 
' → logprob: -9.260171890258789
    6. 'for' → logprob: -9.510171890258789
    7. '\n' → logprob: -9.635171890258789
    8. ' for' → logprob: -10.260171890258789
    9. '  
' → logprob: -10.760171890258789
    10. ' 

' → logprob: -11.135171890258789

Token 172: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01548578217625618
    2. 'final' → logprob: -4.765485763549805
    3. 'print' → logprob: -5.015485763549805
    4. ' for' → logprob: -8.890485763549805
    5. '
' → logprob: -10.515485763549805
    6. 'total' → logprob: -11.640485763549805
    7. '#' → logprob: -11.765485763549805
    8. 'current' → logprob: -12.015485763549805
    9. 'f' → logprob: -12.640485763549805
    10. 'answer' → logprob: -12.890485763549805

Token 173: ' current' (ID: 2208)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.2656441628932953
    2. ' current' → logprob: -2.140644073486328
    3. ' element' → logprob: -2.390644073486328
    4. 'number' → logprob: -4.890644073486328
    5. ' integer' → logprob: -5.140644073486328
    6. ' num' → logprob: -5.390644073486328
    7. ' i' → logprob: -6.140644073486328
    8. 'element' → logprob: -6.640644073486328
    9. 'current' → logprob: -7.265644073486328
    10. ' ' → logprob: -7.390644073486328

Token 174: '_index' (ID: 7748)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.27882513403892517
    2. ' _' → logprob: -2.403825044631958
    3. '_' → logprob: -2.528825044631958
    4. ' ' → logprob: -2.903825044631958
    5. '_element' → logprob: -4.653825283050537
    6. '_integer' → logprob: -5.028825283050537
    7. '_num' → logprob: -7.028825283050537
    8. ' in' → logprob: -7.278825283050537
    9. ' number' → logprob: -8.528824806213379
    10. '_value' → logprob: -8.778824806213379

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06195748969912529
    2. ',' → logprob: -3.186957597732544
    3. 'in' → logprob: -4.436957359313965
    4. ' ' → logprob: -5.561957359313965
    5. ' ,' → logprob: -5.811957359313965
    6. ',in' → logprob: -10.186957359313965
    7. '_' → logprob: -10.561957359313965
    8. '_in' → logprob: -11.686957359313965
    9. ')' → logprob: -11.686957359313965
    10. '	in' → logprob: -12.186957359313965

Token 176: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693262100219727
    2. ' range' → logprob: -2.1269326210021973
    3. '	range' → logprob: -12.626932144165039
    4. '(range' → logprob: -14.501932144165039
    5. ' ' → logprob: -15.001932144165039
    6. '   ' → logprob: -15.876932144165039
    7. '  ' → logprob: -16.00193214416504
    8. 'integer' → logprob: -17.00193214416504
    9. '```' → logprob: -17.12693214416504
    10. '_range' → logprob: -17.50193214416504

Token 177: '(number' (ID: 32955)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29831936955451965
    2. '(number' → logprob: -2.0483193397521973
    3. '(len' → logprob: -2.0483193397521973
    4. '(
' → logprob: -11.298319816589355
    5. ' (' → logprob: -11.423319816589355
    6. '(length' → logprob: -12.298319816589355
    7. '(

' → logprob: -13.548319816589355
    8. '(amount' → logprob: -13.673319816589355
    9. '<|end|>' → logprob: -13.923319816589355
    10. '(n' → logprob: -14.798319816589355

Token 178: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.037730906158685684
    2. '_' → logprob: -3.4127309322357178
    3. ')' → logprob: -6.162730693817139
    4. ' _' → logprob: -7.412730693817139
    5. '(' → logprob: -8.037731170654297
    6. '   ' → logprob: -8.162731170654297
    7. '_)' → logprob: -8.162731170654297
    8. ' )' → logprob: -8.787731170654297
    9. ' ' → logprob: -9.287731170654297
    10. 'of' → logprob: -9.412731170654297

Token 179: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.00015824666479602456
    2. 'elements' → logprob: -8.875158309936523
    3. '_' → logprob: -11.250158309936523
    4. '_ELEMENTS' → logprob: -14.000158309936523
    5. '_e' → logprob: -14.375158309936523
    6. ' ' → logprob: -14.375158309936523
    7. 'ele' → logprob: -14.625158309936523
    8. '_of' → logprob: -14.750158309936523
    9. 'Elements' → logprob: -14.875158309936523
    10. '_numbers' → logprob: -15.000158309936523

Token 180: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005263760685920715
    2. ' ):' → logprob: -5.755263805389404
    3. ':' → logprob: -7.130263805389404
    4. '+' → logprob: -7.505263805389404
    5. ')' → logprob: -7.880263805389404
    6. '):
' → logprob: -9.005263328552246
    7. ' +' → logprob: -9.130263328552246
    8. '   ' → logprob: -10.005263328552246
    9. ' :' → logprob: -10.755263328552246
    10. ',' → logprob: -11.130263328552246

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07179224491119385
    2. ' ' → logprob: -3.1967921257019043
    3. '<|end|>' → logprob: -4.071792125701904
    4. ':' → logprob: -5.196792125701904
    5. '<|end|>' → logprob: -7.071792125701904
    6. '    ' → logprob: -7.071792125701904
    7. ' current' → logprob: -7.571792125701904
    8. '    
' → logprob: -7.571792125701904
    9. ',' → logprob: -7.696792125701904
    10. 'current' → logprob: -7.696792125701904

Token 182: ' modular' (ID: 61198)
  Prédit: ' final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' final' → logprob: -0.8342441916465759
    2. ' current' → logprob: -0.9592441916465759
    3. 'current' → logprob: -2.4592442512512207
    4. 'final' → logprob: -2.9592442512512207
    5. ' ' → logprob: -3.5842442512512207
    6. '+' → logprob: -4.834244251251221
    7. ' +' → logprob: -5.084244251251221
    8. ' ' → logprob: -7.084244251251221
    9. ' element' → logprob: -8.084243774414062
    10. '   ' → logprob: -8.209243774414062

Token 183: '_inverse' (ID: 188797)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.7775993347167969
    2. '_' → logprob: -1.0275993347167969
    3. '_inverse' → logprob: -3.277599334716797
    4. '_result' → logprob: -3.402599334716797
    5. '_answer' → logprob: -3.652599334716797
    6. '_ex' → logprob: -3.902599334716797
    7. '_sum' → logprob: -4.277599334716797
    8. '_m' → logprob: -4.777599334716797
    9. '_val' → logprob: -4.902599334716797
    10. '_element' → logprob: -5.402599334716797

Token 184: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21471987664699554
    2. ' =' → logprob: -1.7147198915481567
    3. '=' → logprob: -4.964719772338867
    4. '_current' → logprob: -6.589719772338867
    5. '_=' → logprob: -6.589719772338867
    6. '(' → logprob: -6.964719772338867
    7. '_space' → logprob: -7.589719772338867
    8. ' ' → logprob: -7.589719772338867
    9. '_value' → logprob: -7.839719772338867
    10. '_of' → logprob: -8.089719772338867

Token 185: '_element' (ID: 21131)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.07462660223245621
    2. '(integer' → logprob: -3.4496266841888428
    3. ' integer' → logprob: -3.8246266841888428
    4. 'least' → logprob: -4.199626445770264
    5. '_integer' → logprob: -6.574626445770264
    6. ' least' → logprob: -7.574626445770264
    7. '(' → logprob: -7.824626445770264
    8. '_le' → logprob: -8.199626922607422
    9. 'int' → logprob: -8.824626922607422
    10. 'current' → logprob: -9.074626922607422

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006390507332980633
    2. '=' → logprob: -5.131390571594238
    3. ' ' → logprob: -7.881390571594238
    4. 's' → logprob: -10.131390571594238
    5. '_' → logprob: -10.381390571594238
    6. '  ' → logprob: -12.256390571594238
    7. '<|end|>' → logprob: -12.506390571594238
    8. '=int' → logprob: -13.381390571594238
    9. ')' → logprob: -14.381390571594238
    10. ' =
' → logprob: -14.881390571594238

Token 187: ' pow' (ID: 9779)
  Prédit: ' pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pow' → logprob: -0.10025983303785324
    2. 'pow' → logprob: -2.350259780883789
    3. '(pow' → logprob: -10.100259780883789
    4. '1' → logprob: -12.600259780883789
    5. ' ' → logprob: -12.600259780883789
    6. ' ' → logprob: -12.725259780883789
    7. '```' → logprob: -14.725259780883789
    8. '

' → logprob: -15.225259780883789
    9. 'p' → logprob: -15.350259780883789
    10. ' (' → logprob: -15.475259780883789

Token 188: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014255529269576073
    2. '(integer' → logprob: -4.264255523681641
    3. '(
' → logprob: -10.01425552368164
    4. '(int' → logprob: -10.63925552368164
    5. '(element' → logprob: -11.26425552368164
    6. '(number' → logprob: -13.13925552368164
    7. '<|end|>' → logprob: -13.63925552368164
    8. '(Integer' → logprob: -13.63925552368164
    9. '(current' → logprob: -14.01425552368164
    10. '(

' → logprob: -14.01425552368164

Token 189: '       ' (ID: 309)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.35242652893066406
    2. '(integer' → logprob: -1.227426528930664
    3. ' integer' → logprob: -5.602426528930664
    4. '(
' → logprob: -9.602426528930664
    5. '(' → logprob: -9.727426528930664
    6. '   ' → logprob: -9.852426528930664
    7. 'int' → logprob: -9.977426528930664
    8. 'inte' → logprob: -11.477426528930664
    9. '_integer' → logprob: -11.477426528930664
    10. '.integer' → logprob: -11.602426528930664

Token 190: ' integer' (ID: 16336)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' (adapté à ' integer') → logprob: -0.0010450744302943349
    2. '(integer' → logprob: -7.126045227050781
    3. ' integer' → logprob: -8.501045227050781
    4. '   ' → logprob: -10.876045227050781
    5. 'int' → logprob: -11.376045227050781
    6. 'inte' → logprob: -13.001045227050781
    7. '  ' → logprob: -13.751045227050781
    8. '.integer' → logprob: -13.751045227050781
    9. '
' → logprob: -14.251045227050781
    10. '_integer' → logprob: -14.751045227050781

Token 191: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. 'List' → logprob: -15.5
    3. '_' → logprob: -17.0
    4. '_List' → logprob: -18.5
    5. 's' → logprob: -18.875
    6. '_LIST' → logprob: -19.0
    7. 'list' → logprob: -19.125
    8. '```' → logprob: -20.0
    9. '[_' → logprob: -20.375
    10. '_l' → logprob: -20.875

Token 192: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.004107254091650248
    2. '[' → logprob: -5.504107475280762
    3. '[
' → logprob: -11.879107475280762
    4. '[cur' → logprob: -12.004107475280762
    5. ' [' → logprob: -12.504107475280762
    6. '[curr' → logprob: -12.879107475280762
    7. '[number' → logprob: -13.129107475280762
    8. '[user' → logprob: -13.629107475280762
    9. '```' → logprob: -14.129107475280762
    10. ')' → logprob: -14.379107475280762

Token 193: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.7432603272027336e-06
    2. 'index' → logprob: -13.375001907348633
    3. '_' → logprob: -16.750001907348633
    4. 'Index' → logprob: -18.125001907348633
    5. '_INDEX' → logprob: -18.625001907348633
    6. '_number' → logprob: -18.750001907348633
    7. 's' → logprob: -19.000001907348633
    8. '```' → logprob: -19.000001907348633
    9. ' _' → logprob: -19.250001907348633
    10. '-' → logprob: -19.250001907348633

Token 194: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008790657739154994
    2. '   ' → logprob: -7.500879287719727
    3. ',
' → logprob: -8.875879287719727
    4. '),' → logprob: -9.375879287719727
    5. ' ,' → logprob: -9.875879287719727
    6. '       ' → logprob: -11.375879287719727
    7. '‌,' → logprob: -12.000879287719727
    8. ')' → logprob: -12.125879287719727
    9. '<|end|>' → logprob: -12.250879287719727
    10. ',

' → logprob: -12.375879287719727

Token 195: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.14132115244865417
    2. '-' → logprob: -2.1413211822509766
    3. '-mod' → logprob: -5.266321182250977
    4. ' modulo' → logprob: -5.391321182250977
    5. ' -' → logprob: -6.391321182250977
    6. ' mod' → logprob: -7.391321182250977
    7. '	mod' → logprob: -7.516321182250977
    8. '   ' → logprob: -7.891321182250977
    9. '-m' → logprob: -8.141321182250977
    10. '(mod' → logprob: -8.391321182250977

Token 196: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.452426608419046e-05
    2. '-' → logprob: -10.75003433227539
    3. '_' → logprob: -11.75003433227539
    4. 'value' → logprob: -12.50003433227539
    5. ' -' → logprob: -14.50003433227539
    6. '_val' → logprob: -15.00003433227539
    7. '_VALUE' → logprob: -16.12503433227539
    8. '-value' → logprob: -16.25003433227539
    9. 'Value' → logprob: -16.75003433227539
    10. '```' → logprob: -16.87503433227539

Token 197: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02325083687901497
    2. ' -' → logprob: -3.7732508182525635
    3. ' ' → logprob: -12.648250579833984
    4. '```' → logprob: -14.523250579833984
    5. ' ' → logprob: -14.648250579833984
    6. '   ' → logprob: -14.773250579833984
    7. '  ' → logprob: -15.023250579833984
    8. '
' → logprob: -15.898250579833984
    9. '−' → logprob: -15.898250579833984
    10. ''s' → logprob: -17.085750579833984

Token 198: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.05499910004437e-05
    2. ' ' → logprob: -9.375090599060059
    3. '-' → logprob: -12.875090599060059
    4. '
' → logprob: -14.000090599060059
    5. '```' → logprob: -14.750090599060059
    6. '۲' → logprob: -14.937590599060059
    7. '

' → logprob: -15.500090599060059
    8. '<|end|>' → logprob: -15.625090599060059
    9. '２' → logprob: -15.875090599060059
    10. '  ' → logprob: -16.187589645385742

Token 199: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.375000953674316
    3. '۲' → logprob: -15.500000953674316
    4. '```' → logprob: -15.937500953674316
    5. '
' → logprob: -16.125001907348633
    6. '

' → logprob: -16.312501907348633
    7. '-' → logprob: -16.625001907348633
    8. '２' → logprob: -16.687501907348633
    9. '٢' → logprob: -17.187501907348633
    10. '₂' → logprob: -17.375001907348633

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4923264682292938
    2. ')' → logprob: -0.9923264980316162
    3. '   ' → logprob: -4.117326259613037
    4. ' )' → logprob: -7.367326259613037
    5. ' ,' → logprob: -7.492326259613037
    6. ',
' → logprob: -8.367326736450195
    7. '       ' → logprob: -8.492326736450195
    8. ' ' → logprob: -9.742326736450195
    9. '  ' → logprob: -10.867326736450195
    10. ',)' → logprob: -10.992326736450195

Token 201: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1602591574192047
    2. ' modulo' → logprob: -1.9102591276168823
    3. '   ' → logprob: -10.535259246826172
    4. '	mod' → logprob: -12.535259246826172
    5. '       ' → logprob: -13.035259246826172
    6. '           ' → logprob: -14.160259246826172
    7. '(mod' → logprob: -14.785259246826172
    8. '    ' → logprob: -14.910259246826172
    9. ' ' → logprob: -15.035259246826172
    10. ' mod' → logprob: -15.160259246826172

Token 202: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.7848862373502925e-05
    2. 'value' → logprob: -10.500027656555176
    3. 'alue' → logprob: -16.500028610229492
    4. '_VALUE' → logprob: -17.125028610229492
    5. '_' → logprob: -17.500028610229492
    6. 'Value' → logprob: -17.625028610229492
    7. '_values' → logprob: -19.000028610229492
    8. 'mod' → logprob: -19.125028610229492
    9. '_Value' → logprob: -19.375028610229492
    10. 'valu' → logprob: -19.375028610229492

Token 203: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030435470398515463
    2. '   ' → logprob: -6.0030436515808105
    3. ')
' → logprob: -7.5030436515808105
    4. ')

' → logprob: -12.003043174743652
    5. ' )' → logprob: -12.003043174743652
    6. ' ' → logprob: -13.128043174743652
    7. '       ' → logprob: -14.003043174743652
    8. ')
' → logprob: -14.503043174743652
    9. '	' → logprob: -15.753043174743652
    10. ' ' → logprob: -16.00304412841797

Token 204: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2547566592693329
    2. '   ' → logprob: -1.5047566890716553
    3. ')
' → logprob: -5.879756450653076
    4. ' )' → logprob: -11.754756927490234
    5. ')

' → logprob: -11.879756927490234
    6. ' ' → logprob: -12.129756927490234
    7. '       ' → logprob: -12.379756927490234
    8. '	' → logprob: -13.879756927490234
    9. '   ' → logprob: -14.129756927490234
    10. '
' → logprob: -14.629756927490234

Token 205: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3182211220264435
    2. '   ' → logprob: -1.318221092224121
    3. ')
' (adapté à ' )
') → logprob: -5.318221092224121
    4. ' ' → logprob: -10.693221092224121
    5. ' )' → logprob: -11.068221092224121
    6. ')

' → logprob: -13.068221092224121
    7. '   ' → logprob: -13.693221092224121
    8. '       ' → logprob: -14.068221092224121
    9. '  ' → logprob: -14.068221092224121
    10. ' ' → logprob: -14.318221092224121

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013612017966806889
    2. 'final' → logprob: -4.763611793518066
    3. ' final' → logprob: -5.763611793518066
    4. '	final' → logprob: -6.513611793518066
    5. '
' → logprob: -8.763611793518066
    6. '<|end|>' → logprob: -10.263611793518066
    7. '```' → logprob: -10.388611793518066
    8. '    
' → logprob: -10.388611793518066
    9. '  ' → logprob: -10.638611793518066
    10. ',' → logprob: -11.013611793518066

Token 207: ' current' (ID: 2208)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.014284446835517883
    2. 'term' → logprob: -5.014284610748291
    3. 'current' (adapté à ' current') → logprob: -5.764284610748291
    4. 'con' → logprob: -6.264284610748291
    5. 'partial' → logprob: -6.639284610748291
    6. 'value' → logprob: -7.889284610748291
    7. 'addition' → logprob: -9.014284133911133
    8. 'element' → logprob: -9.139284133911133
    9. 'increment' → logprob: -9.389284133911133
    10. 'inverse' → logprob: -9.514284133911133

Token 208: '_con' (ID: 7531)
  Prédit: '_term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.8412830829620361
    2. '_answer' → logprob: -1.5912830829620361
    3. '_value' → logprob: -1.7162830829620361
    4. '_con' → logprob: -2.091283082962036
    5. '_element' → logprob: -3.216283082962036
    6. '_sum' → logprob: -5.091282844543457
    7. '_' → logprob: -5.341282844543457
    8. '_add' → logprob: -5.341282844543457
    9. '_result' → logprob: -6.466282844543457
    10. 'term' → logprob: -7.216282844543457

Token 209: 'tribution' (ID: 7090)
  Prédit: 'tribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tribution' → logprob: -0.0006050990778021514
    2. 'trib' → logprob: -8.375604629516602
    3. 'tr' → logprob: -9.125604629516602
    4. 't' → logprob: -10.000604629516602
    5. 'tri' → logprob: -10.250604629516602
    6. 'tributed' → logprob: -10.250604629516602
    7. '_' → logprob: -10.750604629516602
    8. 'rib' → logprob: -10.750604629516602
    9. ' trib' → logprob: -11.000604629516602
    10. 'tribut' → logprob: -11.375604629516602

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021875295788049698
    2. '=' → logprob: -4.021875381469727
    3. ' +=' → logprob: -5.646875381469727
    4. ' ' → logprob: -8.896875381469727
    5. '+=' → logprob: -10.146875381469727
    6. ' ' → logprob: -12.271875381469727
    7. ' *=' → logprob: -13.146875381469727
    8. '    ' → logprob: -13.521875381469727
    9. '   ' → logprob: -13.896875381469727
    10. '_' → logprob: -14.021875381469727

Token 211: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02003607712686062
    2. ' (' → logprob: -4.145036220550537
    3. '(final' → logprob: -5.895036220550537
    4. 'least' → logprob: -6.770036220550537
    5. ' least' → logprob: -9.645035743713379
    6. 'final' → logprob: -11.145035743713379
    7. '   ' → logprob: -12.520035743713379
    8. '(le' → logprob: -12.770035743713379
    9. '((' → logprob: -13.145035743713379
    10. '(
' → logprob: -13.270035743713379

Token 212: 'least' (ID: 96926)
  Prédit: 'least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.027168238535523415
    2. ' least' → logprob: -3.6521682739257812
    3. 'final' → logprob: -7.402168273925781
    4. '   ' → logprob: -9.152168273925781
    5. '(' → logprob: -9.277168273925781
    6. ' final' → logprob: -11.027168273925781
    7. 'le' → logprob: -11.152168273925781
    8. '(final' → logprob: -12.027168273925781
    9. 'less' → logprob: -12.402168273925781
    10. '  ' → logprob: -12.902168273925781

Token 213: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.00019746100588236004
    2. 'common' → logprob: -8.625197410583496
    3. '_le' → logprob: -11.750197410583496
    4. '_con' → logprob: -12.000197410583496
    5. 'Common' → logprob: -13.125197410583496
    6. '_' → logprob: -14.000197410583496
    7. ' common' → logprob: -15.750197410583496
    8. '```' → logprob: -16.000198364257812
    9. '_current' → logprob: -16.125198364257812
    10. '_COMMON' → logprob: -16.125198364257812

Token 214: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.02815503440797329
    2. '_common' → logprob: -3.6531550884246826
    3. '_of' → logprob: -6.5281548500061035
    4. '_m' → logprob: -8.778155326843262
    5. 'multiple' → logprob: -8.778155326843262
    6. '_mult' → logprob: -10.903155326843262
    7. '_' → logprob: -11.278155326843262
    8. 'common' → logprob: -11.528155326843262
    9. 'of' → logprob: -12.028155326843262
    10. '```' → logprob: -12.278155326843262

Token 215: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.735893965815194e-05
    2. 'of' → logprob: -12.375017166137695
    3. ' *' → logprob: -12.500017166137695
    4. '_' → logprob: -12.875017166137695
    5. '*' → logprob: -13.125017166137695
    6. '   ' → logprob: -13.250017166137695
    7. ')' → logprob: -14.250017166137695
    8. '_o' → logprob: -14.250017166137695
    9. ' of' → logprob: -15.125017166137695
    10. ' _' → logprob: -15.375017166137695

Token 216: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.009792213328182697
    2. '_of' → logprob: -4.634792327880859
    3. 'all' → logprob: -10.38479232788086
    4. '_elements' → logprob: -13.13479232788086
    5. 'of' → logprob: -14.00979232788086
    6. '_for' → logprob: -14.25979232788086
    7. '```' → logprob: -14.50979232788086
    8. ')' → logprob: -15.38479232788086
    9. '_' → logprob: -15.50979232788086
    10. 'All' → logprob: -15.75979232788086

Token 217: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.003479382023215294
    2. '_of' → logprob: -5.753479480743408
    3. 'elements' → logprob: -8.25347900390625
    4. 'of' → logprob: -10.37847900390625
    5. '```' → logprob: -12.87847900390625
    6. '_all' → logprob: -13.50347900390625
    7. ' _' → logprob: -14.12847900390625
    8. '_' → logprob: -14.12847900390625
    9. '_ELEMENTS' → logprob: -14.25347900390625
    10. '_element' → logprob: -14.37847900390625

Token 218: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04327206313610077
    2. '*' → logprob: -3.168272018432617
    3. '   ' → logprob: -8.668272018432617
    4. ' ' → logprob: -9.668272018432617
    5. ')' → logprob: -11.418272018432617
    6. ' ' → logprob: -11.668272018432617
    7. '<|end|>' → logprob: -11.918272018432617
    8. '  ' → logprob: -12.668272018432617
    9. '    ' → logprob: -12.793272018432617
    10. ' *
' → logprob: -13.043272018432617

Token 219: ' modular' (ID: 61198)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.062019333243370056
    2. ' modular' → logprob: -2.8120193481445312
    3. ' mod' → logprob: -10.187019348144531
    4. '   ' → logprob: -11.937019348144531
    5. '	mod' → logprob: -13.437019348144531
    6. ' ' → logprob: -13.562019348144531
    7. '
' → logprob: -13.812019348144531
    8. '_mod' → logprob: -13.812019348144531
    9. ' modul' → logprob: -14.437019348144531
    10. '  ' → logprob: -15.062019348144531

Token 220: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -2.339278580620885e-06
    2. 'inverse' → logprob: -13.000001907348633
    3. 'Inverse' → logprob: -18.250001907348633
    4. '_in' → logprob: -18.375001907348633
    5. '_reverse' → logprob: -18.500001907348633
    6. '.inverse' → logprob: -19.500001907348633
    7. ' inverse' → logprob: -19.750001907348633
    8. '_integer' → logprob: -19.875001907348633
    9. '_inv' → logprob: -21.000001907348633
    10. 's' → logprob: -21.000001907348633

Token 221: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.625000953674316
    3. 'of' → logprob: -16.0
    4. ' of' → logprob: -16.125
    5. '   ' → logprob: -17.25
    6. 'Of' → logprob: -18.0
    7. 's' → logprob: -18.0
    8. '	of' → logprob: -18.0
    9. '```' → logprob: -18.75
    10. '[' → logprob: -19.0

Token 222: '_element' (ID: 21131)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.15203648805618286
    2. 'element' → logprob: -2.402036428451538
    3. '_element' → logprob: -3.027036428451538
    4. '_list' → logprob: -7.152036666870117
    5. ' integer' → logprob: -7.652036666870117
    6. '_integer' → logprob: -8.152036666870117
    7. 'current' → logprob: -8.277036666870117
    8. '(integer' → logprob: -9.777036666870117
    9. 'number' → logprob: -10.277036666870117
    10. '_' → logprob: -10.652036666870117

Token 223: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007071906002238393
    2. ')%' → logprob: -8.125707626342773
    3. ' )' → logprob: -8.375707626342773
    4. '   ' → logprob: -8.625707626342773
    5. ')
' → logprob: -14.375707626342773
    6. '%' → logprob: -15.625707626342773
    7. ' %' → logprob: -16.375707626342773
    8. '    ' → logprob: -16.500707626342773
    9. ' ' → logprob: -16.750707626342773
    10. '  ' → logprob: -16.875707626342773

Token 224: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07660466432571411
    2. ' %' → logprob: -2.7016046047210693
    3. '   ' → logprob: -5.701604843139648
    4. ')' → logprob: -6.701604843139648
    5. '<|end|>' → logprob: -7.201604843139648
    6. '
' → logprob: -8.076604843139648
    7. ')%' → logprob: -8.326604843139648
    8. ' %=' → logprob: -8.701604843139648
    9. '<|end|>' → logprob: -9.076604843139648
    10. '%=' → logprob: -9.326604843139648

Token 225: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.007150207180529833
    2. ' modulo' → logprob: -5.007150173187256
    3. '(mod' → logprob: -7.757150173187256
    4. 'module' → logprob: -12.507150650024414
    5. '	mod' → logprob: -14.007150650024414
    6. 'mo' → logprob: -14.382150650024414
    7. '```' → logprob: -14.757150650024414
    8. ' ' → logprob: -15.007150650024414
    9. 'modal' → logprob: -15.382150650024414
    10. ' modu' → logprob: -15.382150650024414

Token 226: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.01104935072362423
    2. 'value' → logprob: -4.511049270629883
    3. 'mod' → logprob: -14.136049270629883
    4. '_VALUE' → logprob: -15.261049270629883
    5. 'Value' → logprob: -15.636049270629883
    6. ' ' → logprob: -16.136049270629883
    7. 'alue' → logprob: -16.636049270629883
    8. ' value' → logprob: -17.136049270629883
    9. '```' → logprob: -17.261049270629883
    10. '   ' → logprob: -17.386049270629883

Token 227: '
' (ID: 198)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.45864352583885193
    2. '   ' → logprob: -1.2086435556411743
    3. ' final' → logprob: -2.7086434364318848
    4. '
' → logprob: -6.458643436431885
    5. '	final' → logprob: -7.958643436431885
    6. '+' → logprob: -8.083643913269043
    7. '+
' → logprob: -8.833643913269043
    8. 'current' → logprob: -8.958643913269043
    9. '    
' → logprob: -10.583643913269043
    10. '  ' → logprob: -10.833643913269043

Token 228: '   ' (ID: 271)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.1526828110218048
    2. '+' → logprob: -2.1526827812194824
    3. '   ' → logprob: -4.277682781219482
    4. '+
' → logprob: -5.027682781219482
    5. ' final' → logprob: -5.402682781219482
    6. 'current' → logprob: -9.27768325805664
    7. '	final' → logprob: -9.40268325805664
    8. ' +' → logprob: -9.90268325805664
    9. '+=' → logprob: -10.02768325805664
    10. '(final' → logprob: -10.02768325805664

Token 229: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' (adapté à ' final') → logprob: -4.842555426876061e-06
    2. ' final' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.8750057220459
    4. 'current' → logprob: -17.5000057220459
    5. '
' → logprob: -18.8750057220459
    6. '	final' → logprob: -21.8750057220459
    7. ' ' → logprob: -22.0000057220459
    8. '  ' → logprob: -22.0000057220459
    9. '(final' → logprob: -22.1250057220459
    10. '    
' → logprob: -22.7500057220459

Token 230: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -4.167648876318708e-05
    2. '_' → logprob: -10.375041961669922
    3. '_ans' → logprob: -12.625041961669922
    4. ' _' → logprob: -12.750041961669922
    5. '_con' → logprob: -12.875041961669922
    6. '_final' → logprob: -13.750041961669922
    7. 'Answer' → logprob: -15.625041961669922
    8. '_answers' → logprob: -16.500041961669922
    9. 'answer' → logprob: -17.000041961669922
    10. '\' → logprob: -17.000041961669922

Token 231: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25220414996147156
    2. '+=' → logprob: -1.502204179763794
    3. '+' → logprob: -8.752203941345215
    4. ' ' → logprob: -10.627203941345215
    5. '=' → logprob: -10.877203941345215
    6. ' ^=' → logprob: -11.002203941345215
    7. '+=(' → logprob: -11.127203941345215
    8. '   ' → logprob: -11.627203941345215
    9. '	' → logprob: -12.127203941345215
    10. ']+=' → logprob: -12.252203941345215

Token 232: ' (' (ID: 350)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.024627627804875374
    2. ' (' → logprob: -3.774627685546875
    3. '(' → logprob: -6.649627685546875
    4. '(f' → logprob: -9.899627685546875
    5. '(current' → logprob: -11.399627685546875
    6. '(fin' → logprob: -11.524627685546875
    7. '(fi' → logprob: -13.274627685546875
    8. '(ans' → logprob: -13.649627685546875
    9. ' ' → logprob: -13.774627685546875
    10. '(max' → logprob: -13.774627685546875

Token 233: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.00046510808169841766
    2. ' final' → logprob: -7.875464916229248
    3. '(final' → logprob: -9.375465393066406
    4. '   ' → logprob: -16.500465393066406
    5. '
' → logprob: -16.750465393066406
    6. '	final' → logprob: -18.125465393066406
    7. '_final' → logprob: -18.875465393066406
    8. 'Final' → logprob: -19.125465393066406
    9. 'f' → logprob: -19.375465393066406
    10. ' ' → logprob: -19.750465393066406

Token 234: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -8.180258191714529e-06
    2. 'answer' → logprob: -12.125008583068848
    3. 'Answer' → logprob: -13.625008583068848
    4. '_ans' → logprob: -14.625008583068848
    5. '_con' → logprob: -14.750008583068848
    6. '_' → logprob: -14.875008583068848
    7. '_final' → logprob: -16.75000762939453
    8. 'final' → logprob: -17.25000762939453
    9. '_answers' → logprob: -17.25000762939453
    10. '_question' → logprob: -17.50000762939453

Token 235: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693147599697113
    2. ' +' → logprob: -0.693147599697113
    3. ' ' → logprob: -16.068147659301758
    4. ' ' → logprob: -17.193147659301758
    5. '+c' → logprob: -17.193147659301758
    6. ' plus' → logprob: -17.693147659301758
    7. '＋' → logprob: -18.318147659301758
    8. '+C' → logprob: -18.693147659301758
    9. '+
' → logprob: -18.818147659301758
    10. ' +
' → logprob: -19.068147659301758

Token 236: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.47407835721969604
    2. 'current' → logprob: -0.974078357219696
    3. '   ' → logprob: -14.724078178405762
    4. ' ' → logprob: -15.349078178405762
    5. '	current' → logprob: -15.349078178405762
    6. '_current' → logprob: -15.849078178405762
    7. '$current' → logprob: -16.599079132080078
    8. 'Current' → logprob: -16.724079132080078
    9. '(current' → logprob: -16.849079132080078
    10. 'urrent' → logprob: -16.974079132080078

Token 237: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -7.896309739408025e-07
    2. '_current' → logprob: -14.125000953674316
    3. '_' → logprob: -18.0
    4. '```' → logprob: -18.125
    5. '_c' → logprob: -19.0
    6. '_answer' → logprob: -19.75
    7. '\' → logprob: -20.125
    8. '_code' → logprob: -20.375
    9. '_final' → logprob: -20.5
    10. '_CON' → logprob: -20.5

Token 238: 'tribution' (ID: 7090)
  Prédit: 'tribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tribution' → logprob: -0.0002695608709473163
    2. '_' → logprob: -8.375269889831543
    3. 'trib' → logprob: -10.875269889831543
    4. 'tr' → logprob: -11.875269889831543
    5. 't' → logprob: -12.125269889831543
    6. 'tribut' → logprob: -13.125269889831543
    7. '_tr' → logprob: -13.625269889831543
    8. '```' → logprob: -14.125269889831543
    9. 'tri' → logprob: -14.500269889831543
    10. ' trib' → logprob: -14.625269889831543

Token 239: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003277768148109317
    2. ' )' → logprob: -5.753277778625488
    3. ')%' → logprob: -9.253277778625488
    4. '   ' → logprob: -13.003277778625488
    5. ' %' → logprob: -14.128277778625488
    6. '%' → logprob: -14.378277778625488
    7. ' ' → logprob: -15.128277778625488
    8. ' ' → logprob: -15.753277778625488
    9. ' +' → logprob: -16.878276824951172
    10. ')
' → logprob: -17.253276824951172

Token 240: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5232564210891724
    2. ' %' → logprob: -0.8982564210891724
    3. ')' → logprob: -9.773256301879883
    4. ' ' → logprob: -10.023256301879883
    5. ')%' → logprob: -11.898256301879883
    6. ' %=' → logprob: -12.023256301879883
    7. '
' → logprob: -12.148256301879883
    8. '%c' → logprob: -13.148256301879883
    9. ' ' → logprob: -13.273256301879883
    10. ' final' → logprob: -13.398256301879883

Token 241: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0007113590254448354
    2. ' modulo' → logprob: -7.250711441040039
    3. '(mod' → logprob: -13.750711441040039
    4. 'module' → logprob: -16.25071144104004
    5. '	mod' → logprob: -16.75071144104004
    6. ' mod' → logprob: -18.00071144104004
    7. 'mo' → logprob: -18.25071144104004
    8. 'modifier' → logprob: -18.50071144104004
    9. 'Modulo' → logprob: -18.87571144104004
    10. 'modal' → logprob: -19.00071144104004

Token 242: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0004883344518020749
    2. 'value' → logprob: -7.62548828125
    3. 'alue' → logprob: -15.62548828125
    4. '_VALUE' → logprob: -16.00048828125
    5. 'mod' → logprob: -16.25048828125
    6. 'Value' → logprob: -19.00048828125
    7. 'final' → logprob: -19.87548828125
    8. '```' → logprob: -19.87548828125
    9. '"value' → logprob: -20.00048828125
    10. '	value' → logprob: -20.00048828125

Token 243: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.996708104154095e-05
    2. '
' → logprob: -9.250100135803223
    3. '

' → logprob: -12.625100135803223
    4. ' print' → logprob: -15.125100135803223
    5. '```' → logprob: -16.375099182128906
    6. '    
' → logprob: -16.625099182128906
    7. '
' → logprob: -17.125099182128906
    8. ' 
' → logprob: -18.125099182128906
    9. '  
' → logprob: -18.625099182128906
    10. '<|end|>' → logprob: -19.375099182128906

Token 244: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.0
    3. 'pr' → logprob: -19.125
    4. ' print' → logprob: -19.125
    5. '```' → logprob: -19.5
    6. 'prin' → logprob: -21.0
    7. '(print' → logprob: -21.25
    8. '
' → logprob: -21.375
    9. '#print' → logprob: -21.5
    10. '\
' → logprob: -23.125

Token 245: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.1602349877357483
    2. '(' → logprob: -1.9102349281311035
    3. '(f' → logprob: -12.160235404968262
    4. '(fin' → logprob: -12.535235404968262
    5. 'final' → logprob: -13.910235404968262
    6. '(
' → logprob: -15.035235404968262
    7. '(fi' → logprob: -15.535235404968262
    8. '(print' → logprob: -15.535235404968262
    9. '()' → logprob: -16.285234451293945
    10. ' (' → logprob: -16.410234451293945

Token 246: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.500001907348633
    3. '_ans' → logprob: -14.875001907348633
    4. 'Answer' → logprob: -15.125001907348633
    5. 'answer' → logprob: -15.125001907348633
    6. '_answers' → logprob: -17.125001907348633
    7. ')' → logprob: -17.750001907348633
    8. '_output' → logprob: -17.875001907348633
    9. '_final' → logprob: -18.125001907348633
    10. 'ANSWER' → logprob: -18.375001907348633

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -15.625000953674316
    4. ')`' → logprob: -18.375001907348633
    5. '))' → logprob: -20.125001907348633
    6. '()' → logprob: -20.125001907348633
    7. ')#' → logprob: -20.625001907348633
    8. '```' → logprob: -20.625001907348633
    9. ')

' → logprob: -21.000001907348633
    10. '),' → logprob: -21.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 245
Tokens correctement prédits (1ère position, stricte): 128
Tokens correctement prédits (1ère position, avec adaptation): 132
Tokens correctement prédits (top 10): 207
Précision stricte (1ère position): 52.24%
Précision adaptée (1ère position): 53.88%
Précision (top 10): 84.49%
================================================================================
