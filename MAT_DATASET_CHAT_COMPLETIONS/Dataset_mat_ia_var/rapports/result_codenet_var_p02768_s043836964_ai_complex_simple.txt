================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul

def fancy_product(seq):
    return reduce(lambda x, y: (x * y) % MOD, seq, 1)

def modular_inverse(x):
    return pow(x, MOD - 2, MOD)

N, a, b = map(int, input().split())
MOD = 10 ** 9 + 7
ORDER = max(a, b) + 2

fractal = [1]
for i in range(1, ORDER):
    fractal.append((fractal[-1] * i) % MOD)

refract = [1] * (ORDER)
refract[-1] = pow(fractal[-1], MOD-2, MOD)
for j in range(ORDER - 2, -1, -1):
    refract[j] = (refract[j + 1] * (j + 1)) % MOD

expression = pow(2, N, MOD) - 1

def combo(n, k):
    if not (0 <= k <= n):
        return 0
    return fractal[n] * refract[k] % MOD * refract[n - k] % MOD

def myst(at, pivot):
    return fancy_product(map(lambda i: (N + 1 - i) % MOD, range(1, at + 1))) * refract[at] % MOD

expression = (expression - myst(a, N) - myst(b, N)) % MOD

print(expression)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009063414763659239
    2. ' (' → logprob: -8.250905990600586
    3. ',' → logprob: -8.375905990600586
    4. '(lambda' → logprob: -8.625905990600586
    5. '.' → logprob: -9.625905990600586
    6. 'def' → logprob: -9.750905990600586
    7. '(
' → logprob: -10.750905990600586
    8. 'a' → logprob: -11.000905990600586
    9. '```' → logprob: -11.250905990600586
    10. '\(' → logprob: -11.500905990600586

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028136486187577248
    2. 'def' → logprob: -4.653136253356934
    3. ' ' → logprob: -4.778136253356934
    4. '\' → logprob: -5.153136253356934
    5. '(
' → logprob: -7.278136253356934
    6. ',' → logprob: -7.403136253356934
    7. '```' → logprob: -7.653136253356934
    8. ' (' → logprob: -8.153136253356934
    9. 'r' → logprob: -8.653136253356934
    10. 'd' → logprob: -8.778136253356934

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5336539149284363
    2. ' math' → logprob: -1.158653974533081
    3. ' itertools' → logprob: -2.658653974533081
    4. ' collections' → logprob: -3.783653974533081
    5. 'operator' → logprob: -5.408653736114502
    6. ' os' → logprob: -7.033653736114502
    7. 'math' → logprob: -7.033653736114502
    8. ' ' → logprob: -8.28365421295166
    9. ' typing' → logprob: -8.78365421295166
    10. 'collections' → logprob: -9.15865421295166

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06605874747037888
    2. 'import' → logprob: -2.81605863571167
    3. '.' → logprob: -5.69105863571167
    4. ' ' → logprob: -7.44105863571167
    5. ' .' → logprob: -10.066059112548828
    6. '.import' → logprob: -10.191059112548828
    7. '	import' → logprob: -11.066059112548828
    8. '_import' → logprob: -12.066059112548828
    9. '-import' → logprob: -13.316059112548828
    10. ' ,' → logprob: -13.316059112548828

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1571701467037201
    2. ' import' → logprob: -2.282170057296753
    3. 'add' → logprob: -3.907170057296753
    4. ' mul' → logprob: -4.282170295715332
    5. ' ' → logprob: -5.532170295715332
    6. 'import' → logprob: -5.657170295715332
    7. 'mul' → logprob: -6.907170295715332
    8. ' item' → logprob: -7.407170295715332
    9. ' icon' → logprob: -9.157170295715332
    10. 'item' → logprob: -9.532170295715332

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7582562565803528
    2. '\' → logprob: -2.008256196975708
    3. '\n' → logprob: -2.008256196975708
    4. '(
' → logprob: -2.383256196975708
    5. '*' → logprob: -2.633256196975708
    6. ',' → logprob: -3.133256196975708
    7. '`' → logprob: -4.383256435394287
    8. 'def' → logprob: -4.633256435394287
    9. '#' → logprob: -4.883256435394287
    10. '```' → logprob: -5.758256435394287

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24515141546726227
    2. '(
' → logprob: -1.870151400566101
    3. '\' → logprob: -3.6201515197753906
    4. 'def' → logprob: -3.8701515197753906
    5. '\n' → logprob: -5.245151519775391
    6. '(

' → logprob: -5.370151519775391
    7. ',' → logprob: -6.870151519775391
    8. '#' → logprob: -7.245151519775391
    9. '```' → logprob: -7.495151519775391
    10. '\(' → logprob: -7.620151519775391

Token 11: ' fancy' (ID: 39357)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.5843600630760193
    2. ' reduce' → logprob: -0.9593600630760193
    3. ' product' → logprob: -3.084360122680664
    4. ' calculate' → logprob: -6.084360122680664
    5. ' ' → logprob: -6.084360122680664
    6. ' prod' → logprob: -6.209360122680664
    7. ' factor' → logprob: -6.459360122680664
    8. ' space' → logprob: -6.709360122680664
    9. ' multiply' → logprob: -6.959360122680664
    10. 'reduce' → logprob: -7.459360122680664

Token 12: '_product' (ID: 21247)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06405996531248093
    2. '(' → logprob: -3.9390599727630615
    3. '_f' → logprob: -4.064059734344482
    4. '_mul' → logprob: -4.814059734344482
    5. '_factor' → logprob: -5.564059734344482
    6. '_function' → logprob: -5.689059734344482
    7. '_m' → logprob: -6.064059734344482
    8. '_add' → logprob: -6.314059734344482
    9. '_sum' → logprob: -6.564059734344482
    10. '_mult' → logprob: -6.939059734344482

Token 13: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010080150241265073
    2. ' (' → logprob: -10.875101089477539
    3. '(token' → logprob: -11.500101089477539
    4. '(user' → logprob: -12.000101089477539
    5. '()' → logprob: -12.125101089477539
    6. '(
' → logprob: -12.125101089477539
    7. '('' → logprob: -12.250101089477539
    8. '<|end|>' → logprob: -12.250101089477539
    9. '("("' → logprob: -12.625101089477539
    10. '<|end|>' → logprob: -12.750101089477539

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09462369978427887
    2. ')' → logprob: -2.4696238040924072
    3. ',' → logprob: -5.219623565673828
    4. '[' → logprob: -9.344623565673828
    5. 's' → logprob: -9.469623565673828
    6. '):
' → logprob: -10.469623565673828
    7. ':' → logprob: -11.094623565673828
    8. '[]):' → logprob: -12.094623565673828
    9. '),' → logprob: -12.219623565673828
    10. ')=' → logprob: -12.344623565673828

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044811785221099854
    2. 'return' → logprob: -4.169811725616455
    3. ' return' → logprob: -4.294811725616455
    4. ':' → logprob: -4.669811725616455
    5. '    ' → logprob: -6.169811725616455
    6. '(' → logprob: -7.044811725616455
    7. ' ' → logprob: -7.169811725616455
    8. '  ' → logprob: -7.544811725616455
    9. ':return' → logprob: -8.044812202453613
    10. ' :' → logprob: -9.044812202453613

Token 16: ' return' (ID: 622)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.8448005318641663
    2. ' reduce' → logprob: -1.4698004722595215
    3. ' return' → logprob: -1.7198004722595215
    4. 'return' (adapté à ' return') → logprob: -1.9698004722595215
    5. '   ' → logprob: -3.8448004722595215
    6. '    ' → logprob: -8.71980094909668
    7. 're' → logprob: -9.46980094909668
    8. '.reduce' → logprob: -10.59480094909668
    9. ' ' → logprob: -10.71980094909668
    10. '```' → logprob: -10.96980094909668

Token 17: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.029759978875517845
    2. 'reduce' → logprob: -3.5297598838806152
    3. ' functools' → logprob: -11.654760360717773
    4. '.reduce' → logprob: -15.029760360717773
    5. ' ' → logprob: -15.904760360717773
    6. '_reduce' → logprob: -16.029760360717773
    7. 'fun' → logprob: -16.529760360717773
    8. 'redu' → logprob: -16.904760360717773
    9. 're' → logprob: -17.154760360717773
    10. ' ' → logprob: -17.279760360717773

Token 18: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07955926656723022
    2. '(m' → logprob: -2.829559326171875
    3. '(lambda' → logprob: -4.079559326171875
    4. '(operator' → logprob: -7.829559326171875
    5. '(re' → logprob: -10.329559326171875
    6. '(mult' → logprob: -10.954559326171875
    7. '(
' → logprob: -11.204559326171875
    8. '((' → logprob: -11.329559326171875
    9. '(func' → logprob: -11.829559326171875
    10. '(mu' → logprob: -11.954559326171875

Token 19: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.020870709791779518
    2. 'x' → logprob: -4.020870685577393
    3. ' acc' → logprob: -6.145870685577393
    4. ' a' → logprob: -7.770870685577393
    5. 'acc' → logprob: -9.39587116241455
    6. 'a' → logprob: -9.77087116241455
    7. ',' → logprob: -12.64587116241455
    8. ' ' → logprob: -12.77087116241455
    9. ' accu' → logprob: -13.52087116241455
    10. '	x' → logprob: -13.64587116241455

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006446453626267612
    2. ' ,' → logprob: -7.375644683837891
    3. '*,' → logprob: -11.50064468383789
    4. ',y' → logprob: -13.00064468383789
    5. ',x' → logprob: -13.12564468383789
    6. '_,' → logprob: -14.50064468383789
    7. '‌,' → logprob: -14.50064468383789
    8. 'mul' → logprob: -14.87564468383789
    9. ',*' → logprob: -14.87564468383789
    10. ',m' → logprob: -14.87564468383789

Token 21: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4287162721157074
    2. ' y' → logprob: -1.0537163019180298
    3. ' ' → logprob: -11.303716659545898
    4. '	y' → logprob: -13.428716659545898
    5. '  ' → logprob: -14.428716659545898
    6. ' ' → logprob: -15.553716659545898
    7. 'x' → logprob: -15.678716659545898
    8. 'a' → logprob: -15.678716659545898
    9. '    ' → logprob: -15.928716659545898
    10. '   ' → logprob: -16.0537166595459

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0806565135717392
    2. ',' → logprob: -2.9556565284729004
    3. ' :' → logprob: -3.7056565284729004
    4. ' ,' → logprob: -7.3306565284729
    5. ':x' → logprob: -9.830656051635742
    6. ',y' → logprob: -10.330656051635742
    7. ',:' → logprob: -10.580656051635742
    8. ',x' → logprob: -10.705656051635742
    9. '_mul' → logprob: -11.830656051635742
    10. ' ' → logprob: -11.955656051635742

Token 23: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28119975328445435
    2. 'x' → logprob: -1.4061996936798096
    3. 'mul' → logprob: -10.65619945526123
    4. '	x' → logprob: -11.65619945526123
    5. ' ' → logprob: -11.78119945526123
    6. ' mul' → logprob: -13.03119945526123
    7. '  ' → logprob: -13.28119945526123
    8. '(x' → logprob: -14.03119945526123
    9. ' ' → logprob: -14.15619945526123
    10. 'multip' → logprob: -14.28119945526123

Token 24: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0046301959082484245
    2. ' x' → logprob: -5.379630088806152
    3. ')' → logprob: -12.629630088806152
    4. ' ' → logprob: -13.629630088806152
    5. 'int' → logprob: -14.129630088806152
    6. '(x' → logprob: -14.254630088806152
    7. ')x' → logprob: -14.379630088806152
    8. '   ' → logprob: -14.629630088806152
    9. ' (' → logprob: -14.629630088806152
    10. '  ' → logprob: -14.629630088806152

Token 25: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6463881134986877
    2. ' *' → logprob: -0.7713881134986877
    3. ',' → logprob: -4.521388053894043
    4. ' ' → logprob: -6.396388053894043
    5. ' ,' → logprob: -7.646388053894043
    6. '*y' → logprob: -8.521388053894043
    7. ')' → logprob: -9.146388053894043
    8. '*,' → logprob: -9.396388053894043
    9. 'y' → logprob: -10.396388053894043
    10. 'mul' → logprob: -10.646388053894043

Token 26: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759738683700562
    2. 'y' → logprob: -0.8259738683700562
    3. ' ' → logprob: -10.450973510742188
    4. ' ' → logprob: -13.450973510742188
    5. ')' → logprob: -14.200973510742188
    6. '	y' → logprob: -14.575973510742188
    7. '  ' → logprob: -14.825973510742188
    8. '1' → logprob: -14.950973510742188
    9. '*y' → logprob: -15.325973510742188
    10. ''y' → logprob: -15.638473510742188

Token 27: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018188457936048508
    2. ')' → logprob: -4.7681884765625
    3. '),' → logprob: -5.0181884765625
    4. ' ,' → logprob: -5.8931884765625
    5. ' if' → logprob: -10.1431884765625
    6. '*' → logprob: -10.7681884765625
    7. ' )' → logprob: -11.1431884765625
    8. 'if' → logprob: -11.1431884765625
    9. ' ),' → logprob: -11.2681884765625
    10. '))' → logprob: -11.5181884765625

Token 28: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01226875651627779
    2. ' ,' → logprob: -4.512268543243408
    3. ')' → logprob: -7.012268543243408
    4. '*' → logprob: -9.512269020080566
    5. ' if' → logprob: -9.512269020080566
    6. ' *' → logprob: -9.512269020080566
    7. '),' → logprob: -10.137269020080566
    8. ' ' → logprob: -11.512269020080566
    9. '+' → logprob: -11.512269020080566
    10. 'if' → logprob: -11.637269020080566

Token 29: ' MOD' (ID: 32868)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.23662763833999634
    2. ' ' → logprob: -2.1116275787353516
    3. '10' → logprob: -2.7366275787353516
    4. '(' → logprob: -4.236627578735352
    5. ' (' → logprob: -4.736627578735352
    6. '1' → logprob: -7.361627578735352
    7. '999' → logprob: -8.236627578735352
    8. '101' → logprob: -8.361627578735352
    9. '123' → logprob: -8.861627578735352
    10. '998' → logprob: -9.236627578735352

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006985553540289402
    2. ' ,' → logprob: -5.006985664367676
    3. '   ' → logprob: -9.006985664367676
    4. ')' → logprob: -9.631985664367676
    5. '),' → logprob: -10.006985664367676
    6. ' ' → logprob: -11.131985664367676
    7. '  ' → logprob: -12.381985664367676
    8. '(seq' → logprob: -12.756985664367676
    9. ',len' → logprob: -13.256985664367676
    10. ' ),' → logprob: -13.506985664367676

Token 31: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.28121188282966614
    2. ' seq' → logprob: -1.4062118530273438
    3. '(seq' → logprob: -9.906211853027344
    4. '   ' → logprob: -12.531211853027344
    5. 'sequence' → logprob: -13.406211853027344
    6. '<|end|>' → logprob: -13.656211853027344
    7. ' sequence' → logprob: -13.781211853027344
    8. '.seq' → logprob: -13.781211853027344
    9. ' ' → logprob: -13.906211853027344
    10. '_seq' → logprob: -14.156211853027344

Token 32: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014195713214576244
    2. ',' → logprob: -4.264195919036865
    3. ' )' → logprob: -10.889195442199707
    4. ',)' → logprob: -12.264195442199707
    5. '   ' → logprob: -12.639195442199707
    6. '),' → logprob: -13.139195442199707
    7. ' ' → logprob: -14.014195442199707
    8. ' ,' → logprob: -14.264195442199707
    9. '))' → logprob: -14.764195442199707
    10. ')
' → logprob: -15.139195442199707

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016074994346126914
    2. ' ' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.500161170959473
    4. ')' → logprob: -15.125161170959473
    5. '```' → logprob: -16.062660217285156
    6. '  ' → logprob: -16.187660217285156
    7. '2' → logprob: -16.687660217285156
    8. '`' → logprob: -16.875160217285156
    9. '<|end|>' → logprob: -16.875160217285156
    10. '...' → logprob: -17.375160217285156

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. '```' → logprob: -16.5
    4. '`' → logprob: -16.875
    5. ')' → logprob: -17.25
    6. '   ' → logprob: -18.4375
    7. '...' → logprob: -18.9375
    8. '2' → logprob: -19.0
    9. '0' → logprob: -19.125
    10. '' → logprob: -19.3125

Token 35: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.875003814697266
    3. ' )' → logprob: -14.000003814697266
    4. ',' → logprob: -16.125003814697266
    5. ' ' → logprob: -16.875003814697266
    6. '))' → logprob: -17.375003814697266
    7. '),' → logprob: -17.375003814697266
    8. '   ' → logprob: -17.500003814697266
    9. ')}' → logprob: -17.500003814697266
    10. '}' → logprob: -17.750003814697266

Token 36: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0096849100664258
    2. ' ' → logprob: -5.009685039520264
    3. '```' → logprob: -7.384685039520264
    4. ')' → logprob: -7.634685039520264
    5. '\' → logprob: -8.134684562683105
    6. '`' → logprob: -8.259684562683105
    7. ' _' → logprob: -8.509684562683105
    8. ''' → logprob: -9.134684562683105
    9. '<|end|>' → logprob: -9.259684562683105
    10. '[' → logprob: -9.384684562683105

Token 37: ' modular' (ID: 61198)
  Prédit: ' fancy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fancy' → logprob: -0.02224588580429554
    2. ' factorial' → logprob: -4.02224588394165
    3. ' calculate' → logprob: -6.27224588394165
    4. ' compute' → logprob: -7.77224588394165
    5. ' factor' → logprob: -8.147246360778809
    6. ' multiply' → logprob: -8.272246360778809
    7. ' fibonacci' → logprob: -8.272246360778809
    8. ' ' → logprob: -8.397246360778809
    9. 'factor' → logprob: -8.897246360778809
    10. ' main' → logprob: -9.022246360778809

Token 38: '_inverse' (ID: 188797)
  Prédit: '_mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -1.132583737373352
    2. '_m' → logprob: -1.257583737373352
    3. '_ex' → logprob: -1.757583737373352
    4. '_pow' → logprob: -2.6325836181640625
    5. '_factor' → logprob: -3.1325836181640625
    6. '_' → logprob: -3.2575836181640625
    7. '_inverse' → logprob: -3.7575836181640625
    8. '_power' → logprob: -4.6325836181640625
    9. '_exp' → logprob: -4.6325836181640625
    10. '_mult' → logprob: -5.0075836181640625

Token 39: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003556589363142848
    2. '(token' → logprob: -6.753556728363037
    3. ' (' → logprob: -7.003556728363037
    4. '(x' → logprob: -7.128556728363037
    5. '(n' → logprob: -8.253556251525879
    6. '(a' → logprob: -9.128556251525879
    7. '<|end|>' → logprob: -9.253556251525879
    8. '(num' → logprob: -10.003556251525879
    9. '(value' → logprob: -11.128556251525879
    10. '(div' → logprob: -11.628556251525879

Token 40: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010923543013632298
    2. ' ,' → logprob: -7.501092433929443
    3. ')' → logprob: -7.626092433929443
    4. '):' → logprob: -10.626091957092285
    5. ',x' → logprob: -11.251091957092285
    6. '(x' → logprob: -13.001091957092285
    7. ',
' → logprob: -13.001091957092285
    8. '),' → logprob: -13.126091957092285
    9. ' ' → logprob: -13.376091957092285
    10. '   ' → logprob: -13.876091957092285

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1539549082517624
    2. '(' → logprob: -2.4039549827575684
    3. ' (' → logprob: -4.028954982757568
    4. '(x' → logprob: -4.153954982757568
    5. ' return' → logprob: -5.903954982757568
    6. ':' → logprob: -5.903954982757568
    7. '(
' → logprob: -6.278954982757568
    8. 'def' → logprob: -6.403954982757568
    9. ' ' → logprob: -6.403954982757568
    10. ' x' → logprob: -6.403954982757568

Token 42: ' return' (ID: 622)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.12140217423439026
    2. '   ' → logprob: -2.4964022636413574
    3. ' pow' → logprob: -3.8714022636413574
    4. 'return' (adapté à ' return') → logprob: -5.121402263641357
    5. ' return' → logprob: -5.621402263641357
    6. 'def' → logprob: -7.121402263641357
    7. '```' → logprob: -7.371402263641357
    8. '(pow' → logprob: -9.9964017868042
    9. ' ' → logprob: -11.6214017868042
    10. '1' → logprob: -11.9964017868042

Token 43: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.006721178535372019
    2. ' pow' → logprob: -5.006721019744873
    3. '(pow' → logprob: -12.381721496582031
    4. '```' → logprob: -14.381721496582031
    5. 'x' → logprob: -14.881721496582031
    6. '1' → logprob: -15.381721496582031
    7. ' ' → logprob: -15.756721496582031
    8. '   ' → logprob: -15.881721496582031
    9. '3' → logprob: -17.38172149658203
    10. '`' → logprob: -17.50672149658203

Token 44: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.47408831119537354
    2. '(' → logprob: -0.9740883111953735
    3. '<|end|>' → logprob: -12.224088668823242
    4. '(
' → logprob: -13.474088668823242
    5. '(user' → logprob: -13.599088668823242
    6. '```' → logprob: -14.224088668823242
    7. '(pow' → logprob: -14.474088668823242
    8. '((' → logprob: -14.599088668823242
    9. ')' → logprob: -15.224088668823242
    10. '(token' → logprob: -15.224088668823242

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.0259150157216936e-05
    2. ' ,' → logprob: -10.50005054473877
    3. ',
' → logprob: -11.50005054473877
    4. ')' → logprob: -11.87505054473877
    5. '<|end|>' → logprob: -13.25005054473877
    6. '```' → logprob: -14.37505054473877
    7. ',-' → logprob: -14.50005054473877
    8. '‌,' → logprob: -14.75005054473877
    9. '),' → logprob: -15.00005054473877
    10. ',

' → logprob: -15.12505054473877

Token 46: ' MOD' (ID: 32868)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10524190217256546
    2. 'MOD' → logprob: -2.6052420139312744
    3. ' -' → logprob: -4.230241775512695
    4. ' MOD' → logprob: -4.855241775512695
    5. ' ' → logprob: -6.480241775512695
    6. '-M' → logprob: -6.730241775512695
    7. ')' → logprob: -8.230241775512695
    8. '-mod' → logprob: -8.730241775512695
    9. '998' → logprob: -8.855241775512695
    10. '```' → logprob: -8.980241775512695

Token 47: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00017994173686020076
    2. ' -' → logprob: -8.6251802444458
    3. ')' → logprob: -15.6251802444458
    4. '```' → logprob: -16.750179290771484
    5. '–' → logprob: -17.375179290771484
    6. ' ' → logprob: -17.375179290771484
    7. '−' → logprob: -17.625179290771484
    8. '   ' → logprob: -18.125179290771484
    9. ')-' → logprob: -18.375179290771484
    10. '  ' → logprob: -18.875179290771484

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.762356209335849e-05
    2. ' ' → logprob: -10.25003719329834
    3. '۲' → logprob: -14.62503719329834
    4. '<|end|>' → logprob: -14.75003719329834
    5. '```' → logprob: -14.93753719329834
    6. '２' → logprob: -16.187538146972656
    7. '₂' → logprob: -16.375038146972656
    8. ')' → logprob: -16.437538146972656
    9. '٢' → logprob: -16.500038146972656
    10. '२' → logprob: -16.500038146972656

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '۲' → logprob: -15.875000953674316
    3. ' ' → logprob: -16.5625
    4. '２' → logprob: -16.625
    5. '٢' → logprob: -17.0
    6. '```' → logprob: -17.125
    7. '22' → logprob: -17.75
    8. '

' → logprob: -17.875
    9. '3' → logprob: -17.9375
    10. '23' → logprob: -18.125

Token 50: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001721934968372807
    2. ',' → logprob: -8.75017261505127
    3. ' )' → logprob: -11.25017261505127
    4. '}' → logprob: -15.25017261505127
    5. ',)' → logprob: -16.000171661376953
    6. '),' → logprob: -16.000171661376953
    7. ')
' → logprob: -16.875171661376953
    8. ' ' → logprob: -16.875171661376953
    9. ')`' → logprob: -17.250171661376953
    10. ' ,' → logprob: -17.375171661376953

Token 51: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.3869379460811615
    2. 'MOD' → logprob: -1.1369379758834839
    3. ')' → logprob: -9.761938095092773
    4. '   ' → logprob: -13.011938095092773
    5. ' ' → logprob: -13.136938095092773
    6. ' )' → logprob: -13.386938095092773
    7. '_MOD' → logprob: -13.386938095092773
    8. '.MOD' → logprob: -14.511938095092773
    9. ' ' → logprob: -15.136938095092773
    10. '```' → logprob: -15.386938095092773

Token 52: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.875
    3. '))' → logprob: -17.75
    4. ' )' → logprob: -18.0
    5. '')' → logprob: -18.875
    6. '),' → logprob: -20.0
    7. ')

' → logprob: -20.125
    8. '<|end|>' → logprob: -20.125
    9. ')#' → logprob: -20.125
    10. ')))' → logprob: -20.375

Token 53: 'N' (ID: 45)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.261162281036377
    2. '```' → logprob: -1.511162281036377
    3. '

' → logprob: -2.011162281036377
    4. '
' → logprob: -2.386162281036377
    5. ':' → logprob: -2.511162281036377
    6. '\' → logprob: -3.011162281036377
    7. ':

' → logprob: -3.136162281036377
    8. '<|end|>' → logprob: -3.261162281036377
    9. '\n' → logprob: -4.511162281036377
    10. '<|end|>' → logprob: -5.386162281036377

Token 54: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.366180419921875
    2. ' ' → logprob: -1.366180419921875
    3. '=' → logprob: -3.491180419921875
    4. ',' → logprob: -4.366180419921875
    5. ' ,' → logprob: -5.491180419921875
    6. '<|end|>' → logprob: -5.866180419921875
    7. '  ' → logprob: -7.866180419921875
    8. '_' → logprob: -8.241180419921875
    9. '.' → logprob: -8.491180419921875
    10. ')' → logprob: -8.866180419921875

Token 55: ' a' (ID: 261)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.05597469583153725
    2. 'M' → logprob: -3.4309747219085693
    3. 'K' → logprob: -4.18097448348999
    4. ' MOD' → logprob: -5.18097448348999
    5. 'A' → logprob: -7.68097448348999
    6. ' M' → logprob: -8.180974960327148
    7. ' K' → logprob: -8.555974960327148
    8. 'Q' → logprob: -9.430974960327148
    9. ' ' → logprob: -10.305974960327148
    10. '<|end|>' → logprob: -10.305974960327148

Token 56: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2745059132575989
    2. ',' → logprob: -1.649505853652954
    3. '=' → logprob: -3.524505853652954
    4. ' ' → logprob: -4.649506092071533
    5. 'rray' → logprob: -5.399506092071533
    6. 's' → logprob: -5.899506092071533
    7. ' ,' → logprob: -8.274505615234375
    8. ',b' → logprob: -8.274505615234375
    9. 'r' → logprob: -8.649505615234375
    10. 'rr' → logprob: -8.899505615234375

Token 57: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016989873722195625
    2. 'MOD' → logprob: -5.391989707946777
    3. ' b' → logprob: -5.516989707946777
    4. 'M' → logprob: -5.766989707946777
    5. 'm' → logprob: -6.141989707946777
    6. 'k' → logprob: -7.266989707946777
    7. 'K' → logprob: -7.266989707946777
    8. 'd' → logprob: -7.516989707946777
    9. 'p' → logprob: -8.391989707946777
    10. 'mod' → logprob: -8.516989707946777

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05791866406798363
    2. '=' → logprob: -3.0579185485839844
    3. ',' → logprob: -4.682918548583984
    4. ' ,' → logprob: -10.432918548583984
    5. ' ' → logprob: -12.682918548583984
    6. '<|end|>' → logprob: -14.307918548583984
    7. '=input' → logprob: -14.682918548583984
    8. ')' → logprob: -15.182918548583984
    9. ' =",' → logprob: -15.307918548583984
    10. ' =
' → logprob: -15.432918548583984

Token 59: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6420445442199707
    2. ' map' → logprob: -0.7670445442199707
    3. '10' → logprob: -4.892044544219971
    4. ' ' → logprob: -7.017044544219971
    5. '5' → logprob: -8.142044067382812
    6. '100' → logprob: -8.267044067382812
    7. 'input' → logprob: -9.267044067382812
    8. '0' → logprob: -9.392044067382812
    9. '1' → logprob: -9.642044067382812
    10. ' input' → logprob: -10.392044067382812

Token 60: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09012924879789352
    2. '(int' → logprob: -2.4651291370391846
    3. '(lambda' → logprob: -7.340129375457764
    4. '(str' → logprob: -8.340128898620605
    5. '<|end|>' → logprob: -9.340128898620605
    6. '(input' → logprob: -9.465128898620605
    7. 'int' → logprob: -10.715128898620605
    8. '(
' → logprob: -10.715128898620605
    9. '(list' → logprob: -11.465128898620605
    10. '(eval' → logprob: -11.715128898620605

Token 61: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.22039265930652618
    2. 'input' → logprob: -2.4703927040100098
    3. ')' → logprob: -2.5953927040100098
    4. '(' → logprob: -3.3453927040100098
    5. ',input' → logprob: -6.47039270401001
    6. ' input' → logprob: -7.09539270401001
    7. '=input' → logprob: -7.47039270401001
    8. ')(' → logprob: -9.595392227172852
    9. ',' → logprob: -9.845392227172852
    10. '[input' → logprob: -9.845392227172852

Token 62: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889275997877121
    2. ' input' → logprob: -2.578892707824707
    3. '(input' → logprob: -13.828892707824707
    4. ')' → logprob: -14.203892707824707
    5. '=input' → logprob: -14.328892707824707
    6. '   ' → logprob: -15.078892707824707
    7. '	input' → logprob: -15.703892707824707
    8. ',input' → logprob: -16.328893661499023
    9. '```' → logprob: -16.453893661499023
    10. ' ' → logprob: -16.578893661499023

Token 63: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0030586346983909607
    2. '()' → logprob: -5.878058433532715
    3. '())' → logprob: -9.003058433532715
    4. '(' → logprob: -9.753058433532715
    5. ')' → logprob: -10.128058433532715
    6. 'input' → logprob: -12.378058433532715
    7. ' ().' → logprob: -12.503058433532715
    8. '('').' → logprob: -12.628058433532715
    9. '(input' → logprob: -12.878058433532715
    10. '('' → logprob: -13.003058433532715

Token 64: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.983476436696947e-05
    2. 'strip' → logprob: -9.375089645385742
    3. 'rstrip' → logprob: -12.375089645385742
    4. ' split' → logprob: -15.375089645385742
    5. '(split' → logprob: -15.625089645385742
    6. 'read' → logprob: -15.750089645385742
    7. 'spl' → logprob: -16.000089645385742
    8. '```' → logprob: -17.500089645385742
    9. ')' → logprob: -19.250089645385742
    10. ' ' → logprob: -19.500089645385742

Token 65: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43798592686653137
    2. '())' → logprob: -1.062985897064209
    3. '()' → logprob: -4.812985897064209
    4. '))' → logprob: -7.437985897064209
    5. '('' → logprob: -8.187986373901367
    6. '(' → logprob: -9.687986373901367
    7. '()))' → logprob: -10.187986373901367
    8. '(),' → logprob: -10.437986373901367
    9. '')' → logprob: -11.062986373901367
    10. '(','' → logprob: -11.187986373901367

Token 66: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0020473632030189037
    2. '
' → logprob: -6.627047538757324
    3. '```' → logprob: -8.252047538757324
    4. '\' → logprob: -9.377047538757324
    5. ' MOD' → logprob: -9.377047538757324
    6. '\n' → logprob: -10.002047538757324
    7. ' 
' → logprob: -10.252047538757324
    8. '  
' → logprob: -10.252047538757324
    9. '_MOD' → logprob: -10.627047538757324
    10. '``' → logprob: -10.752047538757324

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016047390177845955
    2. '=' → logprob: -4.141047477722168
    3. ' =
' → logprob: -11.391047477722168
    4. ' =)' → logprob: -14.391047477722168
    5. ' ' → logprob: -14.641047477722168
    6. '<|end|>' → logprob: -15.766047477722168
    7. ',' → logprob: -16.01604652404785
    8. ':' → logprob: -16.26604652404785
    9. '=
' → logprob: -16.39104652404785
    10. ' ='' → logprob: -16.64104652404785

Token 68: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02979862689971924
    2. '100' → logprob: -3.5297985076904297
    3. ' ' → logprob: -10.02979850769043
    4. '998' → logprob: -13.02979850769043
    5. '1' → logprob: -13.27979850769043
    6. '１０' → logprob: -16.77979850769043
    7. '```' → logprob: -16.90479850769043
    8. '(' → logprob: -18.65479850769043
    9. '101' → logprob: -18.90479850769043
    10. 'int' → logprob: -18.90479850769043

Token 69: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5759499073028564
    2. '100' → logprob: -0.8259499073028564
    3. '1' → logprob: -12.200949668884277
    4. '998' → logprob: -12.700949668884277
    5. ' ' → logprob: -13.200949668884277
    6. '(' → logprob: -15.200949668884277
    7. 'int' → logprob: -16.200950622558594
    8. '```' → logprob: -16.575950622558594
    9. '999' → logprob: -17.200950622558594
    10. '101' → logprob: -17.450950622558594

Token 70: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.003762071020901203
    2. '09' → logprob: -5.753762245178223
    3. '000' → logprob: -7.753762245178223
    4. '009' → logprob: -9.628762245178223
    5. '007' → logprob: -10.128762245178223
    6. '```' → logprob: -11.003762245178223
    7. '**' → logprob: -11.753762245178223
    8. '_' → logprob: -12.128762245178223
    9. '+' → logprob: -12.253762245178223
    10. '7' → logprob: -12.378762245178223

Token 71: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '09' → logprob: -15.0
    3. '```' → logprob: -17.875
    4. '+' → logprob: -18.0
    5. ' ' → logprob: -19.25
    6. '10' → logprob: -21.5
    7. '９' → logprob: -21.5
    8. '19' → logprob: -21.625
    9. '``' → logprob: -21.75
    10. '18' → logprob: -22.5

Token 72: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -15.875
    3. '```' → logprob: -21.75
    4. '+' → logprob: -22.0
    5. ' ' → logprob: -22.25
    6. '10' → logprob: -22.625
    7. '９' → logprob: -22.875
    8. '18' → logprob: -23.375
    9. '19' → logprob: -24.0
    10. '   ' → logprob: -25.0

Token 73: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010068230039905757
    2. '7' → logprob: -9.250101089477539
    3. '```' → logprob: -13.125101089477539
    4. ' +' → logprob: -13.250101089477539
    5. 'plus' → logprob: -15.375101089477539
    6. '＋' → logprob: -15.375101089477539
    7. '+
' → logprob: -15.625101089477539
    8. 'Plus' → logprob: -16.50010108947754
    9. '9' → logprob: -17.12510108947754
    10. ''+' → logprob: -17.75010108947754

Token 74: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.25
    3. '```' → logprob: -18.5
    4. ' ' → logprob: -19.75
    5. '9' → logprob: -19.875
    6. '07' → logprob: -20.25
    7. '007' → logprob: -22.0625
    8. '   ' → logprob: -22.1875
    9. '37' → logprob: -22.5625
    10. '17' → logprob: -22.6875

Token 75: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.75
    3. '07' → logprob: -20.75
    4. '```' → logprob: -21.125
    5. '9' → logprob: -21.75
    6. ' ' → logprob: -22.125
    7. '' → logprob: -23.25
    8. '007' → logprob: -24.125
    9. '   ' → logprob: -24.5
    10. '87' → logprob: -24.5

Token 76: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9214500188827515
    2. 'fact' → logprob: -1.4214500188827515
    3. 'factor' → logprob: -1.9214500188827515
    4. 'result' → logprob: -2.546450138092041
    5. 'total' → logprob: -3.046450138092041
    6. 'c' → logprob: -3.046450138092041
    7. '```' → logprob: -4.671450138092041
    8. 'C' → logprob: -5.046450138092041
    9. 'comb' → logprob: -5.046450138092041
    10. 'k' → logprob: -5.671450138092041

Token 77: 'ORDER' (ID: 26709)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9009124040603638
    2. 'result' → logprob: -1.7759124040603638
    3. 'fact' → logprob: -1.7759124040603638
    4. 'factor' → logprob: -2.275912284851074
    5. 'res' → logprob: -3.400912284851074
    6. 'total' → logprob: -3.525912284851074
    7. 'c' → logprob: -3.650912284851074
    8. 'from' → logprob: -3.900912284851074
    9. 'print' → logprob: -4.775912284851074
    10. 'def' → logprob: -5.400912284851074

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49160006642341614
    2. '=' → logprob: -0.9916000366210938
    3. 'S' → logprob: -4.866600036621094
    4. 'ED' → logprob: -4.866600036621094
    5. 'ed' → logprob: -8.491600036621094
    6. ' ' → logprob: -8.616600036621094
    7. '_' → logprob: -8.866600036621094
    8. 'ING' → logprob: -8.991600036621094
    9. '=[]' → logprob: -8.991600036621094
    10. '_FACTOR' → logprob: -8.991600036621094

Token 79: ' max' (ID: 2999)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3095408082008362
    2. 'a' → logprob: -2.3095407485961914
    3. ' N' → logprob: -2.8095407485961914
    4. 'b' → logprob: -3.8095407485961914
    5. '10' → logprob: -3.8095407485961914
    6. ' ' → logprob: -4.434540748596191
    7. '1' → logprob: -4.809540748596191
    8. '2' → logprob: -5.059540748596191
    9. ' a' → logprob: -5.059540748596191
    10. '[a' → logprob: -5.059540748596191

Token 80: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0035350904799997807
    2. '(' → logprob: -6.003535270690918
    3. '(N' → logprob: -7.128535270690918
    4. '([' → logprob: -8.628535270690918
    5. 'a' → logprob: -10.128535270690918
    6. '((' → logprob: -10.878535270690918
    7. 'N' → logprob: -11.753535270690918
    8. '(n' → logprob: -12.378535270690918
    9. '({' → logprob: -13.128535270690918
    10. '(
' → logprob: -13.628535270690918

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02701902762055397
    2. ',b' → logprob: -3.6520190238952637
    3. ' ,' → logprob: -7.277019023895264
    4. ',n' → logprob: -11.402019500732422
    5. ',a' → logprob: -11.777019500732422
    6. 'b' → logprob: -12.527019500732422
    7. ',N' → logprob: -13.777019500732422
    8. '(' → logprob: -14.152019500732422
    9. 'a' → logprob: -14.402019500732422
    10. ',B' → logprob: -14.777019500732422

Token 82: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0017021986423060298
    2. ' b' → logprob: -6.376702308654785
    3. '   ' → logprob: -16.87670135498047
    4. ')b' → logprob: -17.00170135498047
    5. ' ' → logprob: -18.00170135498047
    6. ')' → logprob: -18.25170135498047
    7. '1' → logprob: -18.37670135498047
    8. '	b' → logprob: -18.50170135498047
    9. ' ' → logprob: -19.00170135498047
    10. ',b' → logprob: -19.50170135498047

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003649249440059066
    2. '+' → logprob: -6.6286492347717285
    3. ',' → logprob: -6.8786492347717285
    4. ')+' → logprob: -7.6286492347717285
    5. ' )' → logprob: -7.6286492347717285
    6. ' +' → logprob: -8.503649711608887
    7. '),' → logprob: -10.253649711608887
    8. '))' → logprob: -10.753649711608887
    9. ',)' → logprob: -11.378649711608887
    10. ')
' → logprob: -11.878649711608887

Token 84: ' +' (ID: 659)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.2370779514312744
    2. 'fact' → logprob: -1.3620779514312744
    3. 'n' → logprob: -2.2370779514312744
    4. 'C' → logprob: -2.2370779514312744
    5. 'result' → logprob: -2.4870779514312744
    6. ')' → logprob: -3.2370779514312744
    7. 'f' → logprob: -3.8620779514312744
    8. ' factorial' → logprob: -4.112077713012695
    9. 'res' → logprob: -4.987077713012695
    10. '```' → logprob: -4.987077713012695

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04647814854979515
    2. '2' → logprob: -3.796478033065796
    3. ' ' → logprob: -4.171478271484375
    4. '10' → logprob: -5.296478271484375
    5. 'N' → logprob: -6.921478271484375
    6. '5' → logprob: -7.171478271484375
    7. '3' → logprob: -8.296478271484375
    8. '100' → logprob: -8.296478271484375
    9. '20' → logprob: -9.421478271484375
    10. ' N' → logprob: -9.421478271484375

Token 86: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0319657064974308
    2. '2' → logprob: -3.656965732574463
    3. '10' → logprob: -5.406965732574463
    4. '5' → logprob: -7.656965732574463
    5. ' ' → logprob: -8.281965255737305
    6. '100' → logprob: -8.531965255737305
    7. '3' → logprob: -9.031965255737305
    8. 'N' → logprob: -10.031965255737305
    9. '20' → logprob: -10.656965255737305
    10. '4' → logprob: -10.781965255737305

Token 87: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7886106371879578
    2. 'result' → logprob: -1.9136106967926025
    3. 'c' → logprob: -2.2886106967926025
    4. 'C' → logprob: -2.6636106967926025
    5. 'factor' → logprob: -2.6636106967926025
    6. 'fact' → logprob: -2.7886106967926025
    7. '\n' → logprob: -3.9136106967926025
    8. 'res' → logprob: -4.538610458374023
    9. '
' → logprob: -4.663610458374023
    10. '#' → logprob: -5.163610458374023

Token 88: 'fr' (ID: 1739)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.34824544191360474
    2. 'factor' → logprob: -1.34824538230896
    3. 'dp' → logprob: -4.848245620727539
    4. 'fac' → logprob: -4.848245620727539
    5. 'f' → logprob: -5.098245620727539
    6. 'facts' → logprob: -5.723245620727539
    7. 'n' → logprob: -6.598245620727539
    8. 'F' → logprob: -7.223245620727539
    9. ' factorial' → logprob: -7.223245620727539
    10. ')' → logprob: -7.348245620727539

Token 89: 'actal' (ID: 157239)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.018619736656546593
    2. 'equ' → logprob: -5.268619537353516
    3. 'om' → logprob: -5.393619537353516
    4. 'ac' → logprob: -5.393619537353516
    5. 'e' → logprob: -5.643619537353516
    6. 'q' → logprob: -8.018619537353516
    7. 'ec' → logprob: -9.518619537353516
    8. 'ef' → logprob: -10.018619537353516
    9. '```' → logprob: -10.268619537353516
    10. 'a' → logprob: -10.518619537353516

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8442530632019043
    2. '_sequence' → logprob: -1.3442530632019043
    3. '_factor' → logprob: -2.7192530632019043
    4. '_values' → logprob: -2.7192530632019043
    5. '=' → logprob: -2.8442530632019043
    6. '_array' → logprob: -3.5942530632019043
    7. '_value' → logprob: -4.344253063201904
    8. 's' → logprob: -4.719253063201904
    9. '_' → logprob: -4.719253063201904
    10. '_numbers' → logprob: -4.719253063201904

Token 91: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07650517672300339
    2. ' [' → logprob: -2.951505184173584
    3. '[a' → logprob: -4.076505184173584
    4. '[f' → logprob: -5.576505184173584
    5. '[n' → logprob: -8.326504707336426
    6. '[list' → logprob: -9.576504707336426
    7. '[int' → logprob: -9.951504707336426
    8. '[[' → logprob: -10.576504707336426
    9. '[len' → logprob: -10.701504707336426
    10. '[p' → logprob: -10.826504707336426

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007636089809238911
    2. '0' → logprob: -4.882636070251465
    3. ' ' → logprob: -11.007636070251465
    4. '[' → logprob: -12.007636070251465
    5. 'None' → logprob: -13.632636070251465
    6. '   ' → logprob: -13.632636070251465
    7. '2' → logprob: -14.007636070251465
    8. '-' → logprob: -14.007636070251465
    9. '(' → logprob: -14.945136070251465
    10. '```' → logprob: -15.070136070251465

Token 93: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010250733233988285
    2. ',' → logprob: -4.635250568389893
    3. ' ]' → logprob: -8.13525104522705
    4. ' for' → logprob: -9.63525104522705
    5. ']*' → logprob: -10.01025104522705
    6. ')' → logprob: -10.76025104522705
    7. ')]' → logprob: -11.13525104522705
    8. ']+' → logprob: -11.26025104522705
    9. ']*(' → logprob: -11.38525104522705
    10. 'for' → logprob: -12.26025104522705

Token 94: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.690241813659668
    2. ' for' → logprob: -0.815241813659668
    3. ',' → logprob: -2.940241813659668
    4. '*' → logprob: -6.565241813659668
    5. '[' → logprob: -7.940241813659668
    6. '```' → logprob: -7.940241813659668
    7. '<|end|>' → logprob: -8.440241813659668
    8. ']' → logprob: -9.065241813659668
    9. '	for' → logprob: -9.190241813659668
    10. ',
' → logprob: -9.190241813659668

Token 95: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.052674196660518646
    2. 'i' → logprob: -3.0526742935180664
    3. '_' → logprob: -5.677674293518066
    4. ' _' → logprob: -7.427674293518066
    5. '_i' → logprob: -9.802674293518066
    6. ' ' → logprob: -12.302674293518066
    7. '	i' → logprob: -13.677674293518066
    8. ' ' → logprob: -14.802674293518066
    9. ' n' → logprob: -15.177674293518066
    10. 'n' → logprob: -15.552674293518066

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.039057061076164246
    2. 'in' → logprob: -3.2890570163726807
    3. ' ' → logprob: -7.16405725479126
    4. 'n' → logprob: -8.414056777954102
    5. 'range' → logprob: -12.289056777954102
    6. '  ' → logprob: -12.539056777954102
    7. ',' → logprob: -12.664056777954102
    8. '	in' → logprob: -12.914056777954102
    9. 's' → logprob: -13.664056777954102
    10. 'd' → logprob: -14.851556777954102

Token 97: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022595763206482
    2. ' range' → logprob: -1.9102259874343872
    3. '	range' → logprob: -13.785225868225098
    4. '(range' → logprob: -14.535225868225098
    5. ' ' → logprob: -15.285225868225098
    6. ' xrange' → logprob: -17.160226821899414
    7. '  ' → logprob: -17.660226821899414
    8. 'rang' → logprob: -17.660226821899414
    9. 'ange' → logprob: -18.660226821899414
    10. 'ran' → logprob: -19.035226821899414

Token 98: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.500000953674316
    3. '(fr' → logprob: -17.0
    4. '(order' → logprob: -18.125
    5. 'fr' → logprob: -18.625
    6. '(
' → logprob: -19.375
    7. 'ORDER' → logprob: -19.625
    8. '2' → logprob: -20.125
    9. '(len' → logprob: -20.25
    10. '(Order' → logprob: -20.25

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008864745497703552
    2. 'ORDER' → logprob: -4.758864879608154
    3. '2' → logprob: -8.883864402770996
    4. ' ' → logprob: -9.508864402770996
    5. ' ORDER' → logprob: -11.258864402770996
    6. '   ' → logprob: -11.883864402770996
    7. '0' → logprob: -12.633864402770996
    8. 'order' → logprob: -13.133864402770996
    9. '(' → logprob: -13.133864402770996
    10. '3' → logprob: -13.258864402770996

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021933254320174456
    2. ' ,' → logprob: -6.127193450927734
    3. ',N' → logprob: -11.877193450927734
    4. ',n' → logprob: -14.252193450927734
    5. ',len' → logprob: -15.502193450927734
    6. ',int' → logprob: -15.627193450927734
    7. ',
' → logprob: -16.002193450927734
    8. 'ORDER' → logprob: -17.002193450927734
    9. ' ' → logprob: -17.127193450927734
    10. '，' → logprob: -17.877193450927734

Token 101: ' ORDER' (ID: 31400)
  Prédit: 'ORDER'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ORDER' → logprob: -0.0076718139462172985
    2. ' ORDER' → logprob: -4.88267183303833
    3. 'N' → logprob: -9.757671356201172
    4. 'ORD' → logprob: -12.632671356201172
    5. ' N' → logprob: -12.757671356201172
    6. ' ' → logprob: -14.007671356201172
    7. '.ORDER' → logprob: -14.882671356201172
    8. '_ORDER' → logprob: -15.507671356201172
    9. '   ' → logprob: -16.007671356201172
    10. '100' → logprob: -17.132671356201172

Token 102: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6938934326171875
    2. '):' → logprob: -0.6938934326171875
    3. '+' → logprob: -8.193893432617188
    4. ' ):' → logprob: -8.318893432617188
    5. ' ):
' → logprob: -8.693893432617188
    6. '):
' → logprob: -10.568893432617188
    7. ':' → logprob: -10.818893432617188
    8. ']:' → logprob: -12.943893432617188
    9. ')' → logprob: -12.943893432617188
    10. '=' → logprob: -13.943893432617188

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006064103217795491
    2. ' fract' → logprob: -7.625606536865234
    3. '```' → logprob: -10.125606536865234
    4. 'fr' → logprob: -10.250606536865234
    5. '	fr' → logprob: -11.375606536865234
    6. '<|end|>' → logprob: -11.750606536865234
    7. 'fract' → logprob: -12.000606536865234
    8. '   ' → logprob: -12.250606536865234
    9. '    
' → logprob: -12.625606536865234
    10. ',' → logprob: -13.750606536865234

Token 104: ' fract' (ID: 37163)
  Prédit: 'fr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -0.43829235434532166
    2. '   ' → logprob: -1.813292384147644
    3. ' fract' → logprob: -1.813292384147644
    4. 'fract' (adapté à ' fract') → logprob: -3.5632922649383545
    5. '	fr' → logprob: -9.063292503356934
    6. '```' → logprob: -9.938292503356934
    7. 'f' → logprob: -10.813292503356934
    8. 'fragment' → logprob: -11.063292503356934
    9. '       ' → logprob: -11.313292503356934
    10. '    
' → logprob: -11.438292503356934

Token 105: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -5.512236498361744e-07
    2. 'ral' → logprob: -15.000000953674316
    3. '[' → logprob: -16.0
    4. ' al' → logprob: -17.75
    5. 'alist' → logprob: -17.75
    6. 'a' → logprob: -17.875
    7. 'alc' → logprob: -17.875
    8. 'alcon' → logprob: -18.25
    9. 'cal' → logprob: -18.625
    10. '	al' → logprob: -18.75

Token 106: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006088530644774437
    2. '.' → logprob: -5.131088733673096
    3. '=' → logprob: -9.381088256835938
    4. '.extend' → logprob: -10.506088256835938
    5. 'append' → logprob: -10.631088256835938
    6. '.app' → logprob: -11.256088256835938
    7. '.ap' → logprob: -12.756088256835938
    8. ' .' → logprob: -12.756088256835938
    9. '_append' → logprob: -13.881088256835938
    10. '.=' → logprob: -13.881088256835938

Token 107: '((' (ID: 2054)
  Prédit: '(fr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fr' → logprob: -0.05952182412147522
    2. '(f' → logprob: -3.5595219135284424
    3. '((' → logprob: -3.5595219135284424
    4. '(' → logprob: -7.559521675109863
    5. 'fr' → logprob: -8.309521675109863
    6. ' (' → logprob: -9.809521675109863
    7. '(mod' → logprob: -10.934521675109863
    8. 'fract' → logprob: -11.809521675109863
    9. ' fract' → logprob: -12.059521675109863
    10. '   ' → logprob: -12.309521675109863

Token 108: 'fr' (ID: 1739)
  Prédit: 'fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -0.009544753469526768
    2. ' fract' → logprob: -4.759544849395752
    3. 'fract' → logprob: -7.134544849395752
    4. 'i' → logprob: -9.884544372558594
    5. ' fr' → logprob: -10.259544372558594
    6. 'f' → logprob: -11.259544372558594
    7. '(fr' → logprob: -11.634544372558594
    8. '	fr' → logprob: -12.634544372558594
    9. ' i' → logprob: -12.822044372558594
    10. '(i' → logprob: -12.884544372558594

Token 109: 'actal' (ID: 157239)
  Prédit: 'actal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actal' → logprob: -0.006126799155026674
    2. 'ctal' → logprob: -5.131126880645752
    3. 'act' → logprob: -8.756126403808594
    4. 'fr' → logprob: -11.756126403808594
    5. 'al' → logprob: -11.881126403808594
    6. 'cal' → logprob: -12.131126403808594
    7. 'ac' → logprob: -12.631126403808594
    8. 'alc' → logprob: -12.756126403808594
    9. 'tal' → logprob: -12.881126403808594
    10. 'c' → logprob: -13.006126403808594

Token 110: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.005233763717114925
    2. '[i' → logprob: -5.2552337646484375
    3. '[
' → logprob: -18.505233764648438
    4. '[' → logprob: -18.505233764648438
    5. '-' → logprob: -19.005233764648438
    6. 'i' → logprob: -20.380233764648438
    7. '```' → logprob: -20.505233764648438
    8. '   ' → logprob: -21.130233764648438
    9. '[j' → logprob: -21.255233764648438
    10. ' [-' → logprob: -21.380233764648438

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -14.00000286102295
    3. '```' → logprob: -15.50000286102295
    4. 'i' → logprob: -15.62500286102295
    5. '   ' → logprob: -15.87500286102295
    6. '
' → logprob: -15.87500286102295
    7. '2' → logprob: -16.437501907348633
    8. 'multip' → logprob: -16.687501907348633
    9. 'multiply' → logprob: -16.750001907348633
    10. ']' → logprob: -17.125001907348633

Token 112: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6326627135276794
    2. ' *' → logprob: -0.7576627135276794
    3. ' ' → logprob: -10.632662773132324
    4. '*i' → logprob: -10.632662773132324
    5. ')' → logprob: -12.382662773132324
    6. ' ' → logprob: -12.632662773132324
    7. '   ' → logprob: -13.132662773132324
    8. ',' → logprob: -14.382662773132324
    9. ')*' → logprob: -14.507662773132324
    10. 'multip' → logprob: -14.757662773132324

Token 113: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5232135057449341
    2. ' *' → logprob: -0.8982135057449341
    3. '*i' → logprob: -9.898213386535645
    4. ' ' → logprob: -11.023213386535645
    5. '*
' → logprob: -12.148213386535645
    6. ' ' → logprob: -12.648213386535645
    7. '   ' → logprob: -12.898213386535645
    8. ')' → logprob: -13.085713386535645
    9. '+' → logprob: -13.273213386535645
    10. '**' → logprob: -13.835713386535645

Token 114: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0026246467605233192
    2. ' i' → logprob: -6.00262451171875
    3. '   ' → logprob: -9.37762451171875
    4. '2' → logprob: -10.62762451171875
    5. '(i' → logprob: -11.12762451171875
    6. ' ' → logprob: -11.75262451171875
    7. '  ' → logprob: -12.37762451171875
    8. ')' → logprob: -12.87762451171875
    9. '(' → logprob: -12.87762451171875
    10. 'N' → logprob: -13.25262451171875

Token 115: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.135819760151207e-05
    2. ')%' → logprob: -9.87507152557373
    3. ' )' → logprob: -10.87507152557373
    4. '%' → logprob: -14.50007152557373
    5. '   ' → logprob: -15.50007152557373
    6. ' %' → logprob: -16.500070571899414
    7. '))' → logprob: -17.875070571899414
    8. '`)' → logprob: -18.000070571899414
    9. ')
' → logprob: -18.125070571899414
    10. '```' → logprob: -18.125070571899414

Token 116: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6936384439468384
    2. ' %' → logprob: -0.6936384439468384
    3. ')' → logprob: -7.693638324737549
    4. ')%' → logprob: -10.318638801574707
    5. ' ' → logprob: -14.318638801574707
    6. ' ' → logprob: -14.693638801574707
    7. ' %=' → logprob: -15.318638801574707
    8. '%)' → logprob: -15.818638801574707
    9. ' )' → logprob: -15.943638801574707
    10. '```' → logprob: -15.943638801574707

Token 117: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0002613358374219388
    2. ' MOD' → logprob: -8.250261306762695
    3. '_MOD' → logprob: -19.500261306762695
    4. '.MOD' → logprob: -20.375261306762695
    5. ' ' → logprob: -21.125261306762695
    6. 'MO' → logprob: -22.000261306762695
    7. '```' → logprob: -23.000261306762695
    8. 'MODULE' → logprob: -23.125261306762695
    9. 'MODE' → logprob: -23.750261306762695
    10. '   ' → logprob: -23.875261306762695

Token 118: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -16.375
    4. '))' → logprob: -17.625
    5. ')`' → logprob: -18.5
    6. ')#' → logprob: -19.5
    7. ')return' → logprob: -19.625
    8. '`)' → logprob: -19.75
    9. '),' → logprob: -19.875
    10. '')' → logprob: -20.5

Token 119: 're' (ID: 264)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.0449923276901245
    2. 'inv' → logprob: -1.1699923276901245
    3. 'factor' → logprob: -1.7949923276901245
    4. 'def' → logprob: -2.919992446899414
    5. 'comb' → logprob: -3.544992446899414
    6. 'n' → logprob: -3.544992446899414
    7. 'fr' → logprob: -4.169992446899414
    8. 'result' → logprob: -4.544992446899414
    9. 'inverse' → logprob: -4.919992446899414
    10. 'total' → logprob: -5.794992446899414

Token 120: 'fract' (ID: 192793)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04240511357784271
    2. 'verse' → logprob: -3.292405128479004
    3. 'v' → logprob: -7.292405128479004
    4. 'versed' → logprob: -7.417405128479004
    5. 'mainder' → logprob: -7.542405128479004
    6. 'solve' → logprob: -7.542405128479004
    7. 'quired' → logprob: -8.042405128479004
    8. 'st' → logprob: -8.417405128479004
    9. 'm' → logprob: -8.792405128479004
    10. 'main' → logprob: -9.167405128479004

Token 121: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5767353773117065
    2. 'al' → logprob: -1.5767353773117065
    3. 'ion' → logprob: -2.576735496520996
    4. 'orial' → logprob: -2.576735496520996
    5. 'ed' → logprob: -3.576735496520996
    6. 'ory' → logprob: -3.951735496520996
    7. 'ional' → logprob: -4.451735496520996
    8. 'ions' → logprob: -5.076735496520996
    9. '[' → logprob: -5.576735496520996
    10. 'ral' → logprob: -5.826735496520996

Token 122: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10210274904966354
    2. ' [' → logprob: -2.352102756500244
    3. '[f' → logprob: -7.352102756500244
    4. '[i' → logprob: -7.602102756500244
    5. '[len' → logprob: -8.227102279663086
    6. '[in' → logprob: -9.352102279663086
    7. '[n' → logprob: -9.602102279663086
    8. '[ind' → logprob: -9.977102279663086
    9. '[int' → logprob: -10.102102279663086
    10. '[num' → logprob: -10.602102279663086

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00491992337629199
    2. 'mod' → logprob: -5.37992000579834
    3. '0' → logprob: -9.12992000579834
    4. 'pow' → logprob: -9.62992000579834
    5. 'None' → logprob: -9.62992000579834
    6. ' modular' → logprob: -10.75492000579834
    7. 'fr' → logprob: -11.12992000579834
    8. '(' → logprob: -11.62992000579834
    9. 'f' → logprob: -12.25492000579834
    10. '(mod' → logprob: -13.00492000579834

Token 124: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.048757683485746384
    2. ']
' → logprob: -3.048757791519165
    3. ',' → logprob: -10.173757553100586
    4. ')' → logprob: -10.173757553100586
    5. ']

' → logprob: -10.173757553100586
    6. '<|end|>' → logprob: -11.298757553100586
    7. ']*(' → logprob: -11.673757553100586
    8. ']
' → logprob: -11.923757553100586
    9. 'for' → logprob: -12.298757553100586
    10. 'def' → logprob: -12.548757553100586

Token 125: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00783599354326725
    2. '<|end|>' → logprob: -5.382835865020752
    3. ' for' → logprob: -5.757835865020752
    4. '
' → logprob: -10.88283634185791
    5. '[' → logprob: -11.00783634185791
    6. '<|end|>' → logprob: -11.88283634185791
    7. '```' → logprob: -12.88283634185791
    8. ',' → logprob: -13.50783634185791
    9. 'from' → logprob: -14.25783634185791
    10. '(' → logprob: -14.38283634185791

Token 126: ' (' (ID: 350)
  Prédit: 'ORDER'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ORDER' → logprob: -0.001176893594674766
    2. '(' → logprob: -6.751176834106445
    3. '(Order' → logprob: -12.251176834106445
    4. ' ORDER' → logprob: -13.751176834106445
    5. 'ORD' → logprob: -14.001176834106445
    6. '_ORDER' → logprob: -17.251176834106445
    7. '(order' → logprob: -17.376176834106445
    8. '.ORDER' → logprob: -17.376176834106445
    9. ' (' → logprob: -19.251176834106445
    10. '(len' → logprob: -19.751176834106445

Token 127: 'ORDER' (ID: 26709)
  Prédit: 'ORDER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ORDER' → logprob: -3.3451433409936726e-05
    2. '(' → logprob: -10.375033378601074
    3. ' ORDER' → logprob: -13.375033378601074
    4. 'ORD' → logprob: -14.500033378601074
    5. '(Order' → logprob: -16.12503433227539
    6. 'order' → logprob: -17.75003433227539
    7. '(order' → logprob: -18.00003433227539
    8. '.ORDER' → logprob: -18.25003433227539
    9. '_ORDER' → logprob: -18.62503433227539
    10. ' (' → logprob: -19.50003433227539

Token 128: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38698825240135193
    2. ')' → logprob: -1.1369882822036743
    3. ')
' → logprob: -10.136988639831543
    4. ')

' → logprob: -10.261988639831543
    5. ' )
' → logprob: -10.886988639831543
    6. ' )' → logprob: -12.136988639831543
    7. '+' → logprob: -12.261988639831543
    8. '
' → logprob: -13.011988639831543
    9. '2' → logprob: -13.136988639831543
    10. ')`
' → logprob: -13.136988639831543

Token 129: 're' (ID: 264)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00019722258730325848
    2. 're' → logprob: -8.625197410583496
    3. 'fr' → logprob: -11.625197410583496
    4. ' for' → logprob: -11.750197410583496
    5. '```' → logprob: -15.125197410583496
    6. 'fract' → logprob: -15.125197410583496
    7. '[' → logprob: -16.62519645690918
    8. '#' → logprob: -16.87519645690918
    9. 'inv' → logprob: -17.62519645690918
    10. '<|end|>' → logprob: -17.75019645690918

Token 130: 'fract' (ID: 192793)
  Prédit: 'fract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fract' → logprob: -0.017742475494742393
    2. 'fr' → logprob: -4.26774263381958
    3. 'f' → logprob: -6.14274263381958
    4. 'for' → logprob: -7.26774263381958
    5. 'frac' → logprob: -7.76774263381958
    6. 'fact' → logprob: -9.142742156982422
    7. 'v' → logprob: -9.642742156982422
    8. 'fraction' → logprob: -10.142742156982422
    9. 'factor' → logprob: -10.642742156982422
    10. 'fra' → logprob: -11.267742156982422

Token 131: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0067279222421348095
    2. '[-' → logprob: -5.006727695465088
    3. '[::-' → logprob: -12.381728172302246
    4. '=' → logprob: -12.506728172302246
    5. '[len' → logprob: -13.506728172302246
    6. '```' → logprob: -13.631728172302246
    7. 'for' → logprob: -14.631728172302246
    8. '[N' → logprob: -14.756728172302246
    9. 'def' → logprob: -15.006728172302246
    10. '=[' → logprob: -15.256728172302246

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6166903151315637e-05
    2. ' ' → logprob: -11.937516212463379
    3. '2' → logprob: -12.812516212463379
    4. '-' → logprob: -13.875016212463379
    5. '```' → logprob: -14.187516212463379
    6. '   ' → logprob: -14.875016212463379
    7. ']' → logprob: -15.000016212463379
    8. '...' → logprob: -15.000016212463379
    9. '0' → logprob: -15.000016212463379
    10. '<|end|>' → logprob: -15.750016212463379

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003806376364082098
    2. '=' → logprob: -6.5038065910339355
    3. ']=' → logprob: -6.7538065910339355
    4. ')' → logprob: -6.8788065910339355
    5. ' ]' → logprob: -9.378806114196777
    6. ')=' → logprob: -12.128806114196777
    7. ' =' → logprob: -12.128806114196777
    8. ')]' → logprob: -12.253806114196777
    9. ' )' → logprob: -13.128806114196777
    10. ']=(' → logprob: -14.378806114196777

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.1424973713001236e-05
    2. ' =' → logprob: -10.375031471252441
    3. '=
' → logprob: -16.875030517578125
    4. '=int' → logprob: -16.875030517578125
    5. '=

' → logprob: -17.125030517578125
    6. '＝' → logprob: -17.875030517578125
    7. '%=' → logprob: -19.000030517578125
    8. '=}' → logprob: -19.250030517578125
    9. '=in' → logprob: -19.375030517578125
    10. '=re' → logprob: -19.500030517578125

Token 135: ' pow' (ID: 9779)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.018155328929424286
    2. ' modular' → logprob: -4.018155097961426
    3. '(mod' → logprob: -12.643155097961426
    4. ' mod' → logprob: -13.143155097961426
    5. '	mod' → logprob: -15.518155097961426
    6. 'pow' → logprob: -17.393156051635742
    7. 'multip' → logprob: -17.643156051635742
    8. '1' → logprob: -18.018156051635742
    9. 'moder' → logprob: -18.143156051635742
    10. '_mod' → logprob: -18.643156051635742

Token 136: '(fr' (ID: 62646)
  Prédit: '(fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fr' → logprob: -0.00045843268162570894
    2. '(f' → logprob: -7.750458240509033
    3. 'fr' → logprob: -10.500458717346191
    4. '(' → logprob: -16.250457763671875
    5. '	fr' → logprob: -16.375457763671875
    6. 'fract' → logprob: -18.500457763671875
    7. '/fr' → logprob: -19.375457763671875
    8. '(frm' → logprob: -21.000457763671875
    9. '((' → logprob: -21.875457763671875
    10. 'f' → logprob: -22.000457763671875

Token 137: 'actal' (ID: 157239)
  Prédit: 'actal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actal' → logprob: -0.0007289938512258232
    2. 'act' → logprob: -7.500729084014893
    3. '(fr' → logprob: -9.625728607177734
    4. 'ctal' → logprob: -10.250728607177734
    5. 'fr' → logprob: -10.500728607177734
    6. 'fract' → logprob: -10.750728607177734
    7. '(' → logprob: -11.625728607177734
    8. 'actable' → logprob: -12.125728607177734
    9. 'actual' → logprob: -13.125728607177734
    10. '(act' → logprob: -13.250728607177734

Token 138: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. '-' → logprob: -16.375
    4. '```' → logprob: -18.75
    5. '[
' → logprob: -18.875
    6. ' [-' → logprob: -20.625
    7. '][-' → logprob: -20.75
    8. '(-' → logprob: -21.0
    9. '...' → logprob: -21.5
    10. ')' → logprob: -21.75

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '-' → logprob: -13.125001907348633
    3. 'order' → logprob: -16.625001907348633
    4. '
' → logprob: -16.875001907348633
    5. '```' → logprob: -16.875001907348633
    6. ' -' → logprob: -17.000001907348633
    7. 'ORDER' → logprob: -17.125001907348633
    8. ' ' → logprob: -17.250001907348633
    9. '[-' → logprob: -18.000001907348633
    10. '2' → logprob: -18.625001907348633

Token 140: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011033779446734115
    2. ' ,' → logprob: -9.125110626220703
    3. '```' → logprob: -15.500110626220703
    4. ',M' → logprob: -15.625110626220703
    5. ',-' → logprob: -15.875110626220703
    6. ',
' → logprob: -16.000110626220703
    7. ',module' → logprob: -16.125110626220703
    8. '-' → logprob: -16.500110626220703
    9. ')' → logprob: -16.500110626220703
    10. ' ' → logprob: -16.750110626220703

Token 141: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.493430894101039e-05
    2. ' MOD' → logprob: -9.500075340270996
    3. '_MOD' → logprob: -17.12507438659668
    4. '-M' → logprob: -17.75007438659668
    5. '.MOD' → logprob: -18.87507438659668
    6. 'MODE' → logprob: -19.25007438659668
    7. '-' → logprob: -19.62507438659668
    8. '-mod' → logprob: -20.12507438659668
    9. 'MO' → logprob: -20.50007438659668
    10. 'MD' → logprob: -21.00007438659668

Token 142: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01416350994259119
    2. ' -' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.889163970947266
    4. '−' → logprob: -18.389163970947266
    5. '```' → logprob: -18.889163970947266
    6. ' ' → logprob: -19.014163970947266
    7. ')' → logprob: -20.139163970947266
    8. '2' → logprob: -20.389163970947266
    9. '–' → logprob: -21.014163970947266
    10. '  ' → logprob: -21.264163970947266

Token 143: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4849443838757e-06
    2. '-' → logprob: -13.125004768371582
    3. ' ' → logprob: -13.875004768371582
    4. '```' → logprob: -14.187504768371582
    5. '

' → logprob: -15.312504768371582
    6. ' -' → logprob: -15.500004768371582
    7. '
' → logprob: -17.062503814697266
    8. '3' → logprob: -17.500003814697266
    9. '' → logprob: -17.625003814697266
    10. '...' → logprob: -17.750003814697266

Token 144: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42873069643974304
    2. ',' → logprob: -1.0537307262420654
    3. ')
' → logprob: -11.553730964660645
    4. ',)' → logprob: -12.053730964660645
    5. ' ,' → logprob: -12.678730964660645
    6. ' )' → logprob: -12.928730964660645
    7. '),' → logprob: -13.053730964660645
    8. '<|end|>' → logprob: -14.053730964660645
    9. '```' → logprob: -14.178730964660645
    10. ')`' → logprob: -14.178730964660645

Token 145: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0004306692280806601
    2. ' MOD' → logprob: -7.750430583953857
    3. ')' → logprob: -18.500431060791016
    4. '.MOD' → logprob: -18.750431060791016
    5. '_MOD' → logprob: -19.125431060791016
    6. '   ' → logprob: -20.250431060791016
    7. 'mod' → logprob: -21.375431060791016
    8. ' ' → logprob: -21.375431060791016
    9. '```' → logprob: -21.625431060791016
    10. ' ' → logprob: -21.750431060791016

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038056403398513794
    2. ')
' → logprob: -3.2880563735961914
    3. ')

' → logprob: -11.163056373596191
    4. ')
' → logprob: -14.413056373596191
    5. ' )' → logprob: -16.788057327270508
    6. ')`' → logprob: -17.163057327270508
    7. ')\' → logprob: -17.788057327270508
    8. '),' → logprob: -18.038057327270508
    9. ')`
' → logprob: -18.538057327270508
    10. '')' → logprob: -18.538057327270508

Token 147: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2471589798224159e-05
    2. ' for' → logprob: -11.500012397766113
    3. '```' → logprob: -13.000012397766113
    4. '	for' → logprob: -17.25001335144043
    5. 'i' → logprob: -18.37501335144043
    6. '``' → logprob: -19.00001335144043
    7. 'For' → logprob: -21.12501335144043
    8. '   ' → logprob: -21.37501335144043
    9. '<|end|>' → logprob: -21.37501335144043
    10. ')' → logprob: -22.50001335144043

Token 148: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033546582562848926
    2. ' i' → logprob: -8.000335693359375
    3. '	i' → logprob: -18.625335693359375
    4. ' ' → logprob: -20.875335693359375
    5. '   ' → logprob: -21.500335693359375
    6. 'x' → logprob: -22.375335693359375
    7. '(i' → logprob: -22.625335693359375
    8. '```' → logprob: -22.875335693359375
    9. ' ' → logprob: -23.000335693359375
    10. 'j' → logprob: -23.000335693359375

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0297548845410347
    2. 'in' → logprob: -3.529754877090454
    3. 'range' → logprob: -13.154754638671875
    4. ' ' → logprob: -13.779754638671875
    5. ' range' → logprob: -14.654754638671875
    6. ' i' → logprob: -15.529754638671875
    7. '	in' → logprob: -15.779754638671875
    8. '   ' → logprob: -16.154754638671875
    9. '  ' → logprob: -16.279754638671875
    10. ' reversed' → logprob: -16.279754638671875

Token 150: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010083963861688972
    2. ' range' → logprob: -7.0010085105896
    3. 're' → logprob: -9.251008033752441
    4. ' reversed' → logprob: -14.001008033752441
    5. '(range' → logprob: -16.501008987426758
    6. 'reverse' → logprob: -17.501008987426758
    7. '	range' → logprob: -18.626008987426758
    8. '   ' → logprob: -19.126008987426758
    9. ' ' → logprob: -20.001008987426758
    10. '```' → logprob: -20.751008987426758

Token 151: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0564331205387134e-05
    2. 'ORDER' → logprob: -11.87501049041748
    3. '(len' → logprob: -13.62501049041748
    4. '(RE' → logprob: -14.12501049041748
    5. '(order' → logprob: -14.62501049041748
    6. '(Order' → logprob: -14.87501049041748
    7. '((' → logprob: -15.12501049041748
    8. ' (' → logprob: -15.37501049041748
    9. ' ORDER' → logprob: -16.000011444091797
    10. '(ord' → logprob: -16.250011444091797

Token 152: 'ORDER' (ID: 26709)
  Prédit: 'ORDER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ORDER' → logprob: -1.7432603272027336e-06
    2. ' ORDER' → logprob: -13.375001907348633
    3. 'ORD' → logprob: -15.875001907348633
    4. '(' → logprob: -18.000001907348633
    5. '.ORDER' → logprob: -19.125001907348633
    6. '   ' → logprob: -19.250001907348633
    7. 'len' → logprob: -20.625001907348633
    8. '_ORDER' → logprob: -20.625001907348633
    9. ' ' → logprob: -21.000001907348633
    10. '  ' → logprob: -22.000001907348633

Token 153: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031777136027812958
    2. ' -' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.253177642822266
    4. '   ' → logprob: -21.378177642822266
    5. '−' → logprob: -22.753177642822266
    6. '-j' → logprob: -22.878177642822266
    7. '2' → logprob: -23.003177642822266
    8. '1' → logprob: -23.128177642822266
    9. ' ' → logprob: -23.253177642822266
    10. '-re' → logprob: -23.253177642822266

Token 154: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -20.625
    4. '1' → logprob: -20.875
    5. '２' → logprob: -21.625
    6. '
' → logprob: -22.0
    7. '```' → logprob: -22.25
    8. '

' → logprob: -22.625
    9. '  ' → logprob: -22.875
    10. '-' → logprob: -22.875

Token 155: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '
' → logprob: -18.75
    4. '```' → logprob: -18.875
    5. '   ' → logprob: -19.625
    6. '

' → logprob: -19.625
    7. '3' → logprob: -20.0
    8. '２' → logprob: -20.125
    9. '۲' → logprob: -20.5
    10. '-' → logprob: -20.75

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000327956018736586
    2. ' ,' → logprob: -8.125328063964844
    3. ',-' → logprob: -10.375328063964844
    4. ' ,-' → logprob: -15.500328063964844
    5. '   ' → logprob: -16.125328063964844
    6. ',
' → logprob: -16.250328063964844
    7. ',j' → logprob: -16.250328063964844
    8. ' -' → logprob: -16.875328063964844
    9. '-' → logprob: -17.125328063964844
    10. ',len' → logprob: -18.125328063964844

Token 157: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0016631585313007236
    2. ' -' → logprob: -6.5016632080078125
    3. '0' → logprob: -8.751663208007812
    4. ' ' → logprob: -13.126663208007812
    5. '   ' → logprob: -14.501663208007812
    6. '  ' → logprob: -17.001663208007812
    7. '-j' → logprob: -17.376663208007812
    8. '−' → logprob: -18.626663208007812
    9. ',' → logprob: -19.251663208007812
    10. '    ' → logprob: -19.501663208007812

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '
' → logprob: -17.875
    4. '   ' → logprob: -18.625
    5. ' -' → logprob: -19.25
    6. '```' → logprob: -19.25
    7. '  ' → logprob: -20.3125
    8. '１' → logprob: -20.4375
    9. '১' → logprob: -20.625
    10. '

' → logprob: -20.625

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.827200897736475e-05
    2. '-' → logprob: -10.125078201293945
    3. ',-' → logprob: -10.500078201293945
    4. ' ,' → logprob: -11.500078201293945
    5. '   ' → logprob: -15.500078201293945
    6. ',
' → logprob: -16.000078201293945
    7. ' -' → logprob: -16.125078201293945
    8. ' ,-' → logprob: -16.625078201293945
    9. '-,' → logprob: -16.750078201293945
    10. '1' → logprob: -18.000078201293945

Token 160: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009115827269852161
    2. ' -' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.125911712646484
    4. ' ' → logprob: -17.000911712646484
    5. '  ' → logprob: -18.875911712646484
    6. ',' → logprob: -19.750911712646484
    7. '−' → logprob: -19.750911712646484
    8. ',-' → logprob: -20.375911712646484
    9. '	' → logprob: -20.625911712646484
    10. '```' → logprob: -21.625911712646484

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '-' → logprob: -18.250001907348633
    4. '   ' → logprob: -18.250001907348633
    5. ')' → logprob: -18.750001907348633
    6. ',' → logprob: -19.125001907348633
    7. '```' → logprob: -19.625001907348633
    8. '):
' → logprob: -19.875001907348633
    9. ' -' → logprob: -19.875001907348633
    10. '  ' → logprob: -19.875001907348633

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29848405718803406
    2. '):
' → logprob: -1.4234840869903564
    3. '-' → logprob: -4.548483848571777
    4. ',' → logprob: -5.173483848571777
    5. ',-' → logprob: -8.673483848571777
    6. '):-' → logprob: -8.673483848571777
    7. ' ):' → logprob: -8.673483848571777
    8. '):
' → logprob: -8.923483848571777
    9. ':' → logprob: -8.923483848571777
    10. ' -' → logprob: -10.048483848571777

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037722982466220856
    2. '	re' → logprob: -3.6627230644226074
    3. 're' → logprob: -5.162723064422607
    4. ' refr' → logprob: -5.412723064422607
    5. ',re' → logprob: -7.537723064422607
    6. '	fr' → logprob: -8.53772258758545
    7. '    
' → logprob: -9.16272258758545
    8. '   ' → logprob: -9.66272258758545
    9. '
' → logprob: -10.16272258758545
    10. '```' → logprob: -10.28772258758545

Token 164: ' refr' (ID: 21707)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0005307526444084942
    2. '   ' → logprob: -8.250531196594238
    3. ' refr' → logprob: -8.375531196594238
    4. '	re' → logprob: -10.375531196594238
    5. '    
' → logprob: -13.000531196594238
    6. '```' → logprob: -13.375531196594238
    7. ' re' → logprob: -13.875531196594238
    8. '_re' → logprob: -14.125531196594238
    9. '
' → logprob: -14.875531196594238
    10. ' ' → logprob: -15.375531196594238

Token 165: 'act' (ID: 588)
  Prédit: 'fract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fract' → logprob: -0.49299854040145874
    2. 'act' → logprob: -0.9929985404014587
    3. 'r' → logprob: -3.9929986000061035
    4. 'fr' → logprob: -9.117998123168945
    5. 'rect' → logprob: -9.492998123168945
    6. 'react' → logprob: -10.242998123168945
    7. 'fact' → logprob: -10.992998123168945
    8. 'ect' → logprob: -11.367998123168945
    9. 'actal' → logprob: -11.367998123168945
    10. ' fract' → logprob: -11.867998123168945

Token 166: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002671768015716225
    2. '[' → logprob: -8.375267028808594
    3. '```' → logprob: -11.375267028808594
    4. '[js' → logprob: -11.625267028808594
    5. '\[' → logprob: -12.125267028808594
    6. '[i' → logprob: -12.500267028808594
    7. ''[' → logprob: -13.875267028808594
    8. '[
' → logprob: -14.250267028808594
    9. '[next' → logprob: -14.500267028808594
    10. '
' → logprob: -14.500267028808594

Token 167: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6985772848129272
    2. '=' → logprob: -0.6985772848129272
    3. ')=' → logprob: -5.948577404022217
    4. ']' → logprob: -6.073577404022217
    5. ' =' → logprob: -7.698577404022217
    6. ']=' → logprob: -10.698576927185059
    7. '   ' → logprob: -10.823576927185059
    8. ')]' → logprob: -12.823576927185059
    9. ' )' → logprob: -12.948576927185059
    10. ']=(' → logprob: -14.948576927185059

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004882152716163546
    2. ' =' → logprob: -7.62548828125
    3. '*=' → logprob: -15.87548828125
    4. '=

' → logprob: -16.87548828125
    5. '=(' → logprob: -17.75048828125
    6. '=
' → logprob: -18.00048828125
    7. '＝' → logprob: -18.25048828125
    8. '.=' → logprob: -20.12548828125
    9. ' *=' → logprob: -20.12548828125
    10. '+=' → logprob: -20.87548828125

Token 169: ' (' (ID: 350)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.006943052168935537
    2. '(fr' → logprob: -5.006943225860596
    3. '(' → logprob: -9.256942749023438
    4. ' (' → logprob: -9.756942749023438
    5. 're' → logprob: -10.256942749023438
    6. '(f' → logprob: -10.506942749023438
    7. '((' → logprob: -12.256942749023438
    8. '(ref' → logprob: -12.381942749023438
    9. 'fr' → logprob: -14.131942749023438
    10. '   ' → logprob: -14.131942749023438

Token 170: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00029267906211316586
    2. '(re' → logprob: -8.500292778015137
    3. ' refr' → logprob: -10.000292778015137
    4. 'fr' → logprob: -10.375292778015137
    5. '   ' → logprob: -13.000292778015137
    6. 'fract' → logprob: -13.000292778015137
    7. 'ref' → logprob: -13.125292778015137
    8. '	re' → logprob: -13.500292778015137
    9. ')' → logprob: -14.125292778015137
    10. 'reff' → logprob: -14.250292778015137

Token 171: 'fract' (ID: 192793)
  Prédit: 'fract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fract' → logprob: -2.963691804325208e-05
    2. 'fr' → logprob: -10.500029563903809
    3. 'frac' → logprob: -13.750029563903809
    4. 'fact' → logprob: -14.250029563903809
    5. 'f' → logprob: -15.750029563903809
    6. ' fract' → logprob: -16.500030517578125
    7. 'fra' → logprob: -17.125030517578125
    8. '(fr' → logprob: -17.500030517578125
    9. 'tract' → logprob: -18.750030517578125
    10. 'factor' → logprob: -19.125030517578125

Token 172: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -12.87500286102295
    3. '[
' → logprob: -15.37500286102295
    4. 'j' → logprob: -16.125003814697266
    5. ' [' → logprob: -16.500003814697266
    6. '
' → logprob: -16.875003814697266
    7. '[(' → logprob: -17.375003814697266
    8. '[next' → logprob: -17.375003814697266
    9. '[js' → logprob: -17.625003814697266
    10. '[[' → logprob: -19.750003814697266

Token 173: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.8444881536415778e-05
    2. ' +' → logprob: -10.625028610229492
    3. '[' → logprob: -12.875028610229492
    4. '[j' → logprob: -14.000028610229492
    5. '+j' → logprob: -14.125028610229492
    6. ']' → logprob: -17.875028610229492
    7. '+]' → logprob: -18.125028610229492
    8. '+
' → logprob: -18.625028610229492
    9. '```' → logprob: -18.750028610229492
    10. '＋' → logprob: -18.750028610229492

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -17.75
    4. '   ' → logprob: -18.875
    5. '  ' → logprob: -20.5
    6. '۱' → logprob: -21.25
    7. ')' → logprob: -21.3125
    8. '
' → logprob: -21.375
    9. '<|end|>' → logprob: -21.75
    10. '১' → logprob: -21.8125

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '```' → logprob: -16.5
    4. '   ' → logprob: -18.8125
    5. '
' → logprob: -19.25
    6. '۱' → logprob: -19.8125
    7. '  ' → logprob: -20.25
    8. '১' → logprob: -20.3125
    9. '१' → logprob: -20.3125
    10. '１' → logprob: -20.3125

Token 176: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.020576458424329758
    2. ' *' → logprob: -3.8955764770507812
    3. ' ' → logprob: -10.770576477050781
    4. ')' → logprob: -12.520576477050781
    5. ' ' → logprob: -13.020576477050781
    6. ']' → logprob: -13.520576477050781
    7. '1' → logprob: -13.895576477050781
    8. '**' → logprob: -14.270576477050781
    9. '*j' → logprob: -14.270576477050781
    10. '```' → logprob: -14.270576477050781

Token 177: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31326824426651
    2. ' *' → logprob: -1.3132681846618652
    3. ' ' → logprob: -12.813268661499023
    4. '*j' → logprob: -12.813268661499023
    5. ' ' → logprob: -14.813268661499023
    6. '**' → logprob: -15.688268661499023
    7. '*object' → logprob: -15.938268661499023
    8. '   ' → logprob: -16.188268661499023
    9. '*
' → logprob: -16.313268661499023
    10. ')' → logprob: -16.813268661499023

Token 178: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.002612997777760029
    2. '(' → logprob: -6.002613067626953
    3. ' (' → logprob: -9.002613067626953
    4. '[j' → logprob: -11.752613067626953
    5. 'j' → logprob: -13.127613067626953
    6. '((' → logprob: -14.377613067626953
    7. '   ' → logprob: -14.377613067626953
    8. '(i' → logprob: -14.502613067626953
    9. '(J' → logprob: -14.627613067626953
    10. '(next' → logprob: -15.127613067626953

Token 179: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.18091948330402374
    2. '(j' → logprob: -1.8059195280075073
    3. '(' → logprob: -7.555919647216797
    4. ' j' → logprob: -8.055919647216797
    5. ' (' → logprob: -8.430919647216797
    6. '[j' → logprob: -9.180919647216797
    7. '   ' → logprob: -11.805919647216797
    8. '	j' → logprob: -13.680919647216797
    9. '{' → logprob: -13.930919647216797
    10. '(
' → logprob: -14.180919647216797

Token 180: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009756085462868214
    2. ' +' → logprob: -4.634756088256836
    3. '+
' → logprob: -16.259756088256836
    4. '＋' → logprob: -16.634756088256836
    5. '1' → logprob: -17.134756088256836
    6. '+j' → logprob: -17.384756088256836
    7. ' +
' → logprob: -18.259756088256836
    8. '+

' → logprob: -19.384756088256836
    9. ' ' → logprob: -19.509756088256836
    10. '+i' → logprob: -19.509756088256836

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.750001907348633
    4. '```' → logprob: -18.000001907348633
    5. '  ' → logprob: -19.687501907348633
    6. '۱' → logprob: -20.187501907348633
    7. '১' → logprob: -20.437501907348633
    8. '１' → logprob: -20.562501907348633
    9. '
' → logprob: -20.687501907348633
    10. ')' → logprob: -21.062501907348633

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.0
    4. '```' → logprob: -18.625
    5. '
' → logprob: -18.75
    6. '  ' → logprob: -19.0625
    7. '۱' → logprob: -20.0
    8. '１' → logprob: -20.1875
    9. ')' → logprob: -20.375
    10. '১' → logprob: -20.4375

Token 183: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029786018654704094
    2. '))' → logprob: -3.5297861099243164
    3. ' )' → logprob: -10.529786109924316
    4. ')%' → logprob: -12.154786109924316
    5. ' ))' → logprob: -12.904786109924316
    6. '   ' → logprob: -14.154786109924316
    7. ' ' → logprob: -16.90478515625
    8. ')
' → logprob: -17.02978515625
    9. '])' → logprob: -17.02978515625
    10. '})' → logprob: -17.15478515625

Token 184: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.048626311123371124
    2. ' %' → logprob: -3.04862642288208
    3. ')%' → logprob: -10.798625946044922
    4. ')' → logprob: -10.923625946044922
    5. ' %=' → logprob: -15.548625946044922
    6. '%D' → logprob: -17.173625946044922
    7. '%=' → logprob: -17.298625946044922
    8. '%B' → logprob: -17.423625946044922
    9. '```' → logprob: -17.423625946044922
    10. '%c' → logprob: -17.548625946044922

Token 185: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.320199877838604e-07
    2. ' MOD' → logprob: -14.75
    3. '_MOD' → logprob: -20.375
    4. '.MOD' → logprob: -21.375
    5. 'MO' → logprob: -22.375
    6. '```' → logprob: -22.5
    7. '(M' → logprob: -24.0
    8. '   ' → logprob: -24.375
    9. 'MD' → logprob: -24.5
    10. 'mod' → logprob: -24.5

Token 186: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010682971915230155
    2. '<|end|>' → logprob: -6.876068115234375
    3. ')' → logprob: -11.376068115234375
    4. '
' → logprob: -11.876068115234375
    5. ' def' → logprob: -12.376068115234375
    6. '```' → logprob: -12.376068115234375
    7. '#' → logprob: -12.501068115234375
    8. '<|end|>' → logprob: -13.001068115234375
    9. '

' → logprob: -14.126068115234375
    10. 'print' → logprob: -15.251068115234375

Token 187: 'expression' (ID: 61248)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.703443770878948e-06
    2. '<|end|>' → logprob: -12.750007629394531
    3. '
' → logprob: -13.375007629394531
    4. ' def' → logprob: -13.500007629394531
    5. '```' → logprob: -13.875007629394531
    6. '

' → logprob: -14.750007629394531
    7. '#' → logprob: -15.625007629394531
    8. ')' → logprob: -15.750007629394531
    9. '``' → logprob: -16.50000762939453
    10. '  
' → logprob: -17.37500762939453

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08029166609048843
    2. '=' → logprob: -3.330291748046875
    3. '_' → logprob: -3.455291748046875
    4. '(' → logprob: -4.830291748046875
    5. 's' → logprob: -7.580291748046875
    6. ' ' → logprob: -8.080291748046875
    7. '_factor' → logprob: -8.705291748046875
    8. '_=' → logprob: -9.205291748046875
    9. '(s' → logprob: -9.580291748046875
    10. ' (' → logprob: -9.580291748046875

Token 189: ' pow' (ID: 9779)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.8270589113235474
    2. '(fr' → logprob: -1.4520589113235474
    3. 'fr' → logprob: -1.8270589113235474
    4. 'f' → logprob: -2.952058792114258
    5. ' (' → logprob: -3.077058792114258
    6. 'pow' → logprob: -4.202058792114258
    7. '(' → logprob: -4.327058792114258
    8. '(pow' → logprob: -4.702058792114258
    9. '((' → logprob: -4.827058792114258
    10. ' fract' → logprob: -4.952058792114258

Token 190: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0780482143163681
    2. '(a' → logprob: -2.7030482292175293
    3. '(N' → logprob: -5.078048229217529
    4. '(pow' → logprob: -7.328048229217529
    5. '2' → logprob: -8.078047752380371
    6. '(f' → logprob: -8.078047752380371
    7. '((' → logprob: -8.703047752380371
    8. '(b' → logprob: -9.078047752380371
    9. 'a' → logprob: -9.328047752380371
    10. '(fr' → logprob: -9.703047752380371

Token 191: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3272419273853302
    2. 'a' → logprob: -1.9522418975830078
    3. 'N' → logprob: -2.202241897583008
    4. '(' → logprob: -4.452241897583008
    5. '3' → logprob: -5.327241897583008
    6. '(a' → logprob: -5.702241897583008
    7. '(N' → logprob: -6.327241897583008
    8. 'fr' → logprob: -6.452241897583008
    9. '4' → logprob: -7.202241897583008
    10. 'pow' → logprob: -7.702241897583008

Token 192: ',' (ID: 11)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.056158293038606644
    2. ',' → logprob: -3.3061583042144775
    3. ',N' → logprob: -4.056158065795898
    4. '(N' → logprob: -7.556158065795898
    5. '[N' → logprob: -10.306158065795898
    6. ')' → logprob: -10.681158065795898
    7. ' N' → logprob: -10.681158065795898
    8. '(' → logprob: -11.556158065795898
    9. '_N' → logprob: -12.056158065795898
    10. '	N' → logprob: -12.181158065795898

Token 193: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.306760805164231e-05
    2. ' N' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.50001335144043
    4. '	N' → logprob: -18.37501335144043
    5. 'n' → logprob: -19.00001335144043
    6. ' ' → logprob: -19.25001335144043
    7. '[N' → logprob: -20.62501335144043
    8. '(N' → logprob: -20.87501335144043
    9. ' ' → logprob: -21.12501335144043
    10. '    ' → logprob: -21.37501335144043

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.825890159234405e-05
    2. ')' → logprob: -10.125068664550781
    3. ' ,' → logprob: -10.875068664550781
    4. ',N' → logprob: -12.375068664550781
    5. 'MOD' → logprob: -14.000068664550781
    6. '%' → logprob: -14.500068664550781
    7. ',n' → logprob: -14.750068664550781
    8. '   ' → logprob: -14.875068664550781
    9. ',module' → logprob: -14.875068664550781
    10. '```' → logprob: -15.000068664550781

Token 195: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007099286303855479
    2. ' MOD' → logprob: -7.2507100105285645
    3. '_MOD' → logprob: -20.500709533691406
    4. 'MO' → logprob: -21.125709533691406
    5. ' ' → logprob: -21.375709533691406
    6. '   ' → logprob: -21.750709533691406
    7. '.MOD' → logprob: -21.875709533691406
    8. ')' → logprob: -23.000709533691406
    9. 'mod' → logprob: -23.125709533691406
    10. 'MD' → logprob: -23.125709533691406

Token 196: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.856408536899835e-05
    2. ' )' → logprob: -10.750028610229492
    3. ')
' → logprob: -12.500028610229492
    4. ')-' → logprob: -13.000028610229492
    5. '-' → logprob: -15.500028610229492
    6. '")' → logprob: -15.625028610229492
    7. ')`' → logprob: -16.125028610229492
    8. ')...' → logprob: -16.250028610229492
    9. '')' → logprob: -16.250028610229492
    10. '}' → logprob: -16.750028610229492

Token 197: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3272486925125122
    2. '-' → logprob: -1.4522486925125122
    3. 'expression' → logprob: -3.2022485733032227
    4. '<|end|>' → logprob: -6.452248573303223
    5. '-expression' → logprob: -7.077248573303223
    6. ' expression' → logprob: -7.452248573303223
    7. ')' → logprob: -7.577248573303223
    8. '
' → logprob: -8.952248573303223
    9. '_expression' → logprob: -9.327248573303223
    10. '(expression' → logprob: -9.702248573303223

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03395053371787071
    2. '2' → logprob: -3.4089505672454834
    3. '(' → logprob: -8.783950805664062
    4. 'fr' → logprob: -9.408950805664062
    5. 'f' → logprob: -10.408950805664062
    6. ' ' → logprob: -11.158950805664062
    7. '(fr' → logprob: -11.408950805664062
    8. '(f' → logprob: -12.158950805664062
    9. ' (' → logprob: -13.158950805664062
    10. 'expression' → logprob: -13.658950805664062

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008208265644498169
    2. '2' → logprob: -7.125820636749268
    3. '(' → logprob: -11.875821113586426
    4. 'fr' → logprob: -12.375821113586426
    5. ' ' → logprob: -12.750821113586426
    6. '(fr' → logprob: -14.250821113586426
    7. 'f' → logprob: -14.625821113586426
    8. 'expression' → logprob: -15.375821113586426
    9. ' (' → logprob: -16.00082015991211
    10. 'a' → logprob: -16.00082015991211

Token 200: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: 'def' (ID: 1314)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.10932698100805283
    2. 'def' → logprob: -2.8593270778656006
    3. '-' → logprob: -3.9843270778656006
    4. 'result' → logprob: -4.7343268394470215
    5. 'if' → logprob: -4.9843268394470215
    6. 'answer' → logprob: -5.6093268394470215
    7. 'print' → logprob: -5.7343268394470215
    8. 'comb' → logprob: -6.8593268394470215
    9. '#' → logprob: -7.3593268394470215
    10. 'subtract' → logprob: -7.4843268394470215

Token 202: ' combo' (ID: 32014)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.4186980128288269
    2. 'n' → logprob: -1.4186980724334717
    3. ' n' → logprob: -3.4186980724334717
    4. ' comb' → logprob: -3.5436980724334717
    5. 'choose' → logprob: -4.168697834014893
    6. ' combination' → logprob: -4.668697834014893
    7. 'com' → logprob: -5.293697834014893
    8. 'mod' → logprob: -6.168697834014893
    9. 'cmb' → logprob: -6.418697834014893
    10. 'bin' → logprob: -6.668697834014893

Token 203: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000122608442325145
    2. '(k' → logprob: -9.500123023986816
    3. '(' → logprob: -10.125123023986816
    4. '(r' → logprob: -12.250123023986816
    5. 'n' → logprob: -13.625123023986816
    6. '(x' → logprob: -14.500123023986816
    7. ' (' → logprob: -14.875123023986816
    8. '(m' → logprob: -15.500123023986816
    9. '(N' → logprob: -15.625123023986816
    10. '(i' → logprob: -15.750123023986816

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036787090357393026
    2. ',k' → logprob: -8.125368118286133
    3. ' ,' → logprob: -9.750368118286133
    4. ',r' → logprob: -12.000368118286133
    5. 'k' → logprob: -12.125368118286133
    6. ',n' → logprob: -14.000368118286133
    7. 'r' → logprob: -14.500368118286133
    8. 'n' → logprob: -15.750368118286133
    9. 'a' → logprob: -16.000368118286133
    10. ',
' → logprob: -16.125368118286133

Token 205: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12700201570987701
    2. 'r' → logprob: -2.127002000808716
    3. ' k' → logprob: -9.877001762390137
    4. ' r' → logprob: -10.752001762390137
    5. '
' → logprob: -14.127001762390137
    6. '```' → logprob: -15.752001762390137
    7. ' ' → logprob: -16.127002716064453
    8. '   ' → logprob: -16.127002716064453
    9. 'm' → logprob: -17.627002716064453
    10. 'x' → logprob: -18.377002716064453

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.697387966094539e-05
    2. '):
' → logprob: -9.500086784362793
    3. ')' → logprob: -11.375086784362793
    4. '):
' → logprob: -15.000086784362793
    5. ' ):' → logprob: -15.875086784362793
    6. ':' → logprob: -15.875086784362793
    7. '):

' → logprob: -18.12508773803711
    8. '}:' → logprob: -18.12508773803711
    9. ')：' → logprob: -18.62508773803711
    10. '）：' → logprob: -18.62508773803711

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08105926960706711
    2. ' return' → logprob: -3.081059217453003
    3. ':' → logprob: -3.706059217453003
    4. 'return' → logprob: -5.456059455871582
    5. ':return' → logprob: -6.581059455871582
    6. '	return' → logprob: -7.956059455871582
    7. '<|end|>' → logprob: -8.456059455871582
    8. ' if' → logprob: -8.706059455871582
    9. '(' → logprob: -8.706059455871582
    10. '(return' → logprob: -8.956059455871582

Token 208: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01602369174361229
    2. 'return' → logprob: -4.266023635864258
    3. ' if' → logprob: -6.766023635864258
    4. '   ' → logprob: -7.266023635864258
    5. ' return' → logprob: -11.891023635864258
    6. '```' → logprob: -15.266023635864258
    7. '	if' → logprob: -15.516023635864258
    8. '0' → logprob: -16.766023635864258
    9. '	return' → logprob: -17.891023635864258
    10. ' ' → logprob: -18.141023635864258

Token 209: ' not' (ID: 625)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10033228993415833
    2. ' k' → logprob: -2.350332260131836
    3. ' n' → logprob: -9.600332260131836
    4. 'n' → logprob: -9.975332260131836
    5. '0' → logprob: -12.475332260131836
    6. '   ' → logprob: -12.600332260131836
    7. ' not' → logprob: -13.475332260131836
    8. '	k' → logprob: -13.975332260131836
    9. ' ' → logprob: -14.100332260131836
    10. ' ' → logprob: -14.475332260131836

Token 210: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8002932071685791
    2. ' ' → logprob: -1.175293207168579
    3. '(' → logprob: -1.675293207168579
    4. ' (' → logprob: -2.925293207168579
    5. '(k' → logprob: -6.92529296875
    6. 'k' → logprob: -9.30029296875
    7. ' k' → logprob: -9.42529296875
    8. '(n' → logprob: -11.80029296875
    9. '1' → logprob: -12.30029296875
    10. ' ' → logprob: -13.17529296875

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010474584996700287
    2. ' ' → logprob: -6.876047611236572
    3. '(' → logprob: -11.876047134399414
    4. 'k' → logprob: -12.751047134399414
    5. '(k' → logprob: -13.376047134399414
    6. '1' → logprob: -13.626047134399414
    7. ' (' → logprob: -13.751047134399414
    8. ')' → logprob: -14.376047134399414
    9. ' k' → logprob: -15.751047134399414
    10. '   ' → logprob: -16.438547134399414

Token 212: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.38688328862190247
    2. ' <=' → logprob: -1.13688325881958
    3. '<' → logprob: -12.636883735656738
    4. ' ' → logprob: -12.761883735656738
    5. '≤' → logprob: -13.636883735656738
    6. ')' → logprob: -14.136883735656738
    7. ')<=' → logprob: -14.136883735656738
    8. ' ≤' → logprob: -14.386883735656738
    9. '```' → logprob: -14.386883735656738
    10. 'k' → logprob: -14.511883735656738

Token 213: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008046258008107543
    2. ' k' → logprob: -7.125804424285889
    3. '	k' → logprob: -16.625804901123047
    4. ' ' → logprob: -18.000804901123047
    5. '   ' → logprob: -18.125804901123047
    6. 'n' → logprob: -18.875804901123047
    7. '```' → logprob: -19.625804901123047
    8. '  ' → logprob: -20.375804901123047
    9. '(k' → logprob: -20.750804901123047
    10. ')' → logprob: -20.875804901123047

Token 214: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.1603640615940094
    2. ' <=' → logprob: -1.910364031791687
    3. ' and' → logprob: -9.285364151000977
    4. 'and' → logprob: -10.660364151000977
    5. '<|end|>' → logprob: -11.410364151000977
    6. ')<=' → logprob: -12.535364151000977
    7. '<|end|>' → logprob: -13.285364151000977
    8. 'le' → logprob: -13.410364151000977
    9. '≤' → logprob: -13.535364151000977
    10. ']<=' → logprob: -13.910364151000977

Token 215: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009756204672157764
    2. ' n' → logprob: -4.634756088256836
    3. '	n' → logprob: -16.009756088256836
    4. ' ' → logprob: -16.509756088256836
    5. '   ' → logprob: -16.884756088256836
    6. ' ' → logprob: -17.634756088256836
    7. ')n' → logprob: -18.009756088256836
    8. ')' → logprob: -18.634756088256836
    9. '```' → logprob: -19.384756088256836
    10. '
' → logprob: -19.509756088256836

Token 216: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4746895730495453
    2. '):' → logprob: -0.9746896028518677
    3. ' and' → logprob: -8.224689483642578
    4. ')' → logprob: -8.599689483642578
    5. '   ' → logprob: -9.724689483642578
    6. ' ):
' → logprob: -9.974689483642578
    7. '):
' → logprob: -10.724689483642578
    8. ':' → logprob: -11.599689483642578
    9. ' ):' → logprob: -11.849689483642578
    10. ':
' → logprob: -11.974689483642578

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.82138592004776
    2. '   ' → logprob: -0.94638592004776
    3. ':' → logprob: -2.0713858604431152
    4. ':
' → logprob: -3.3213858604431152
    5. ':return' → logprob: -5.071385860443115
    6. '):
' → logprob: -6.321385860443115
    7. ' return' → logprob: -7.321385860443115
    8. '
' → logprob: -8.446386337280273
    9. '    
' → logprob: -8.946386337280273
    10. '):' → logprob: -8.946386337280273

Token 218: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02103273570537567
    2. '   ' → logprob: -4.771032810211182
    3. ' return' → logprob: -4.771032810211182
    4. '       ' → logprob: -5.646032810211182
    5. '
' → logprob: -8.271032333374023
    6. '	return' → logprob: -9.521032333374023
    7. ':return' → logprob: -12.771032333374023
    8. '```' → logprob: -13.521032333374023
    9. ' ' → logprob: -13.646032333374023
    10. '    
' → logprob: -14.021032333374023

Token 219: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.250627517700195
    4. '  ' → logprob: -19.625627517700195
    5. ' ' → logprob: -19.625627517700195
    6. '۰' → logprob: -20.125627517700195
    7. '```' → logprob: -21.250627517700195
    8. '
' → logprob: -21.375627517700195
    9. '000' → logprob: -22.000627517700195
    10. '00' → logprob: -22.125627517700195

Token 220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -21.125
    4. '۰' → logprob: -21.5
    5. '
' → logprob: -22.625
    6. '```' → logprob: -22.875
    7. '00' → logprob: -23.125
    8. '000' → logprob: -23.25
    9. ' ' → logprob: -23.75
    10. '  ' → logprob: -24.0

Token 221: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001507405104348436
    2. '    
' → logprob: -9.375150680541992
    3. '
' → logprob: -10.125150680541992
    4. '<|end|>' → logprob: -11.125150680541992
    5. ' return' → logprob: -12.750150680541992
    6. ')' → logprob: -12.875150680541992
    7. ',' → logprob: -13.750150680541992
    8. 'return' → logprob: -13.750150680541992
    9. '<|end|>' → logprob: -14.250150680541992
    10. '  
' → logprob: -14.375150680541992

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013035668234806508
    2. '    
' → logprob: -9.250130653381348
    3. '
' → logprob: -10.875130653381348
    4. 'return' → logprob: -11.625130653381348
    5. ' return' → logprob: -13.250130653381348
    6. '<|end|>' → logprob: -13.500130653381348
    7. '  
' → logprob: -13.625130653381348
    8. '	return' → logprob: -14.500130653381348
    9. '   
' → logprob: -14.750130653381348
    10. '```' → logprob: -15.500130653381348

Token 223: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.390921413898468
    2. 'return' (adapté à ' return') → logprob: -1.1409213542938232
    3. ' return' → logprob: -5.515921592712402
    4. '	return' → logprob: -11.890921592712402
    5. '    
' → logprob: -12.015921592712402
    6. '
' → logprob: -13.140921592712402
    7. ' ' → logprob: -13.265921592712402
    8. '  ' → logprob: -13.640921592712402
    9. '```' → logprob: -13.640921592712402
    10. '       ' → logprob: -15.140921592712402

Token 224: ' fract' (ID: 37163)
  Prédit: '(fr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fr' → logprob: -0.37542369961738586
    2. 'fr' → logprob: -1.2504236698150635
    3. '(f' → logprob: -4.000423908233643
    4. ' (' → logprob: -5.250423908233643
    5. 'fract' → logprob: -6.500423908233643
    6. ' fract' → logprob: -6.750423908233643
    7. '((' → logprob: -8.250423431396484
    8. '(' → logprob: -10.375423431396484
    9. '(((' → logprob: -11.250423431396484
    10. 'f' → logprob: -11.500423431396484

Token 225: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.580929347255733e-05
    2. '[' → logprob: -11.250016212463379
    3. 'ral' → logprob: -13.875016212463379
    4. 'cal' → logprob: -14.125016212463379
    5. 'a' → logprob: -14.750016212463379
    6. 'fr' → logprob: -14.750016212463379
    7. 'nal' → logprob: -16.875015258789062
    8. '[n' → logprob: -17.500015258789062
    9. '{' → logprob: -17.750015258789062
    10. 'ial' → logprob: -18.000015258789062

Token 226: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.8624639324116288e-06
    2. 'n' → logprob: -13.375001907348633
    3. '[' → logprob: -15.500001907348633
    4. '[k' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '	n' → logprob: -19.000001907348633
    7. '[j' → logprob: -19.000001907348633
    8. '```' → logprob: -19.125001907348633
    9. '
' → logprob: -19.250001907348633
    10. '(n' → logprob: -19.375001907348633

Token 227: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1472419600977446e-06
    2. ']*' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.000001907348633
    4. ' ]' → logprob: -17.250001907348633
    5. ']
' → logprob: -17.250001907348633
    6. ')' → logprob: -20.625001907348633
    7. '
' → logprob: -20.875001907348633
    8. ' ' → logprob: -21.500001907348633
    9. '"]' → logprob: -21.625001907348633
    10. ']

' → logprob: -21.875001907348633

Token 228: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10023190826177597
    2. ' *' → logprob: -2.350231885910034
    3. '   ' → logprob: -11.225232124328613
    4. '**' → logprob: -12.600232124328613
    5. ' ' → logprob: -13.475232124328613
    6. '*(' → logprob: -13.725232124328613
    7. '
' → logprob: -13.850232124328613
    8. '(re' → logprob: -13.850232124328613
    9. '(' → logprob: -14.225232124328613
    10. '*object' → logprob: -14.725232124328613

Token 229: ' refr' (ID: 21707)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0733863040804863
    2. '(re' → logprob: -2.6983861923217773
    3. ' refr' → logprob: -5.823386192321777
    4. ' (' → logprob: -7.823386192321777
    5. '(' → logprob: -9.823386192321777
    6. '	re' → logprob: -12.073386192321777
    7. '((' → logprob: -12.198386192321777
    8. '   ' → logprob: -12.573386192321777
    9. 'Re' → logprob: -13.073386192321777
    10. '(r' → logprob: -13.073386192321777

Token 230: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -9.996708104154095e-05
    2. 'r' → logprob: -9.250100135803223
    3. '[' → logprob: -13.750100135803223
    4. 'fract' → logprob: -13.750100135803223
    5. 'ect' → logprob: -14.250100135803223
    6. '
' → logprob: -15.375100135803223
    7. 'actal' → logprob: -15.875100135803223
    8. 'oct' → logprob: -16.250099182128906
    9. '(act' → logprob: -16.375099182128906
    10. 'a' → logprob: -16.500099182128906

Token 231: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00014478032244369388
    2. 'k' → logprob: -8.875144958496094
    3. '[n' → logprob: -13.125144958496094
    4. '[' → logprob: -13.500144958496094
    5. '```' → logprob: -14.375144958496094
    6. '
' → logprob: -14.875144958496094
    7. '	k' → logprob: -15.250144958496094
    8. '{k' → logprob: -16.250144958496094
    9. ' [' → logprob: -16.500144958496094
    10. '(k' → logprob: -16.875144958496094

Token 232: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020663968462031335
    2. ']%' → logprob: -8.50020694732666
    3. '%' → logprob: -12.87520694732666
    4. ']*' → logprob: -14.50020694732666
    5. '']' → logprob: -16.500205993652344
    6. ' ]' → logprob: -16.625205993652344
    7. ')' → logprob: -17.875205993652344
    8. ']
' → logprob: -18.500205993652344
    9. '```' → logprob: -18.500205993652344
    10. '"]' → logprob: -18.625205993652344

Token 233: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3056877553462982
    2. ' %' → logprob: -1.9306877851486206
    3. ' *' → logprob: -2.180687665939331
    4. '*' → logprob: -5.30568790435791
    5. '   ' → logprob: -8.30568790435791
    6. ' ' → logprob: -10.30568790435791
    7. '%s' → logprob: -10.55568790435791
    8. '%d' → logprob: -10.80568790435791
    9. '%c' → logprob: -11.43068790435791
    10. ' ' → logprob: -11.80568790435791

Token 234: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.935296834039036e-06
    2. ' MOD' → logprob: -12.75000286102295
    3. '_MOD' → logprob: -18.625003814697266
    4. 'M' → logprob: -20.750003814697266
    5. '.MOD' → logprob: -21.000003814697266
    6. 'MD' → logprob: -21.000003814697266
    7. 'MODULE' → logprob: -21.625003814697266
    8. 'MO' → logprob: -21.750003814697266
    9. 'MID' → logprob: -21.750003814697266
    10. '
' → logprob: -21.875003814697266

Token 235: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.030329568311572075
    2. '   ' → logprob: -4.155329704284668
    3. '*' → logprob: -4.280329704284668
    4. '  ' → logprob: -9.155329704284668
    5. '<|end|>' → logprob: -9.280329704284668
    6. ' ' → logprob: -9.780329704284668
    7. 'fr' → logprob: -10.905329704284668
    8. ' ' → logprob: -11.155329704284668
    9. '%' → logprob: -11.655329704284668
    10. '...' → logprob: -12.030329704284668

Token 236: ' refr' (ID: 21707)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -8.65707261255011e-06
    2. ' refr' → logprob: -12.000008583068848
    3. '	re' → logprob: -14.125008583068848
    4. 'fr' → logprob: -14.375008583068848
    5. '(re' → logprob: -14.875008583068848
    6. 'r' → logprob: -16.125009536743164
    7. '```' → logprob: -16.125009536743164
    8. 'Re' → logprob: -16.250009536743164
    9. '   ' → logprob: -16.250009536743164
    10. 'ref' → logprob: -16.625009536743164

Token 237: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.0028469599783420563
    2. '[' → logprob: -6.502847194671631
    3. 'fract' → logprob: -6.752847194671631
    4. 'r' → logprob: -9.377846717834473
    5. 'fr' → logprob: -10.252846717834473
    6. 'ct' → logprob: -10.627846717834473
    7. '[-' → logprob: -11.877846717834473
    8. 'ect' → logprob: -11.877846717834473
    9. '[r' → logprob: -12.627846717834473
    10. 'uct' → logprob: -13.002846717834473

Token 238: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.676981345459353e-06
    2. 'n' → logprob: -12.250005722045898
    3. '[' → logprob: -14.250005722045898
    4. '(n' → logprob: -16.6250057220459
    5. '```' → logprob: -16.7500057220459
    6. ' [' → logprob: -18.0000057220459
    7. '[
' → logprob: -18.1250057220459
    8. '[k' → logprob: -18.6250057220459
    9. '\[' → logprob: -19.2500057220459
    10. '   ' → logprob: -19.5000057220459

Token 239: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.016933856531977654
    2. '-' → logprob: -4.516933917999268
    3. ' -' → logprob: -5.141933917999268
    4. '[k' → logprob: -11.26693344116211
    5. '[-' → logprob: -12.64193344116211
    6. '[' → logprob: -12.89193344116211
    7. 'k' → logprob: -13.39193344116211
    8. '-b' → logprob: -14.26693344116211
    9. '−' → logprob: -14.89193344116211
    10. '-j' → logprob: -15.14193344116211

Token 240: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5048530030981055e-06
    2. ' k' → logprob: -13.500001907348633
    3. '	k' → logprob: -18.375001907348633
    4. '{k' → logprob: -19.375001907348633
    5. 'к' → logprob: -20.625001907348633
    6. '[k' → logprob: -21.125001907348633
    7. '   ' → logprob: -21.625001907348633
    8. '```' → logprob: -22.000001907348633
    9. ' к' → logprob: -22.125001907348633
    10. ' ' → logprob: -22.375001907348633

Token 241: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.423219696851447e-05
    2. ']%' → logprob: -9.500083923339844
    3. ' ]' → logprob: -11.875083923339844
    4. '}' → logprob: -13.625083923339844
    5. ']
' → logprob: -14.500083923339844
    6. ')' → logprob: -16.000083923339844
    7. '])' → logprob: -16.125083923339844
    8. '%' → logprob: -16.250083923339844
    9. '```' → logprob: -16.750083923339844
    10. '']' → logprob: -17.000083923339844

Token 242: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1011745035648346
    2. '[k' → logprob: -2.8511745929718018
    3. '[n' → logprob: -4.226174354553223
    4. ' %' → logprob: -4.476174354553223
    5. '[' → logprob: -4.476174354553223
    6. '[j' → logprob: -7.226174354553223
    7. '%n' → logprob: -8.351174354553223
    8. '```' → logprob: -10.601174354553223
    9. ']%' → logprob: -10.726174354553223
    10. '[%' → logprob: -10.976174354553223

Token 243: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.5048530030981055e-06
    2. ' MOD' → logprob: -13.500001907348633
    3. '_MOD' → logprob: -18.375001907348633
    4. '```' → logprob: -19.500001907348633
    5. 'MO' → logprob: -19.625001907348633
    6. '.MOD' → logprob: -20.000001907348633
    7. '
' → logprob: -20.250001907348633
    8. 'MD' → logprob: -22.125001907348633
    9. 'MODE' → logprob: -22.375001907348633
    10. ' ' → logprob: -22.375001907348633

Token 244: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4558687210083008
    2. 'result' → logprob: -1.2058687210083008
    3. '()' → logprob: -4.080868721008301
    4. '(' → logprob: -4.455868721008301
    5. 'expression' → logprob: -4.580868721008301
    6. '(
' → logprob: -5.330868721008301
    7. 'n' → logprob: -5.705868721008301
    8. 'answer' → logprob: -5.830868721008301
    9. '#' → logprob: -5.830868721008301
    10. ')' → logprob: -6.080868721008301

Token 246: ' myst' (ID: 15982)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5034852027893066
    2. 'f' → logprob: -2.2534852027893066
    3. ' main' → logprob: -2.2534852027893066
    4. 'comb' → logprob: -2.8784852027893066
    5. 'combo' → logprob: -3.1284852027893066
    6. 'pow' → logprob: -3.5034852027893066
    7. 'solve' → logprob: -4.003485202789307
    8. 'mod' → logprob: -5.128485202789307
    9. 'answer' → logprob: -5.628485202789307
    10. ' combo' → logprob: -5.753485202789307

Token 247: '(at' (ID: 46498)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5348303318023682
    2. 'ery' → logprob: -0.9098303318023682
    3. 'erie' → logprob: -5.659830093383789
    4. 'ic' → logprob: -5.784830093383789
    5. 'eri' → logprob: -6.159830093383789
    6. 'eries' → logprob: -6.659830093383789
    7. 'e' → logprob: -6.784830093383789
    8. 'erial' → logprob: -9.284830093383789
    9. 'ef' → logprob: -9.659830093383789
    10. 'ical' → logprob: -9.784830093383789

Token 248: ',' (ID: 11)
  Prédit: 'tribute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tribute' → logprob: -0.1841380000114441
    2. 'tributes' → logprob: -3.309138059616089
    3. 'tempt' → logprob: -3.684138059616089
    4. 'tr' → logprob: -3.809138059616089
    5. 'h' → logprob: -3.934138059616089
    6. 'om' → logprob: -4.18413782119751
    7. 't' → logprob: -4.43413782119751
    8. 'ic' → logprob: -5.30913782119751
    9. '):
' → logprob: -5.43413782119751
    10. 'temp' → logprob: -5.55913782119751

Token 249: ' pivot' (ID: 44506)
  Prédit: ' bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bt' → logprob: -1.113498568534851
    2. 'bt' → logprob: -1.488498568534851
    3. ' n' → logprob: -2.8634986877441406
    4. ' k' → logprob: -2.9884986877441406
    5. ' b' → logprob: -3.3634986877441406
    6. 'k' → logprob: -3.3634986877441406
    7. 'b' → logprob: -3.4884986877441406
    8. 'n' → logprob: -3.6134986877441406
    9. ' total' → logprob: -3.7384986877441406
    10. ' length' → logprob: -3.8634986877441406

Token 250: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08166588097810745
    2. ',' → logprob: -2.8316659927368164
    3. '):
' → logprob: -3.9566659927368164
    4. ')' → logprob: -8.081665992736816
    5. ' ):' → logprob: -10.956665992736816
    6. '):
' → logprob: -11.206665992736816
    7. '):

' → logprob: -11.831665992736816
    8. '=' → logprob: -12.206665992736816
    9. ' ,' → logprob: -12.206665992736816
    10. '   ' → logprob: -13.081665992736816

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06544926762580872
    2. ':' → logprob: -2.8154492378234863
    3. '<|end|>' → logprob: -6.940449237823486
    4. ' if' → logprob: -7.065449237823486
    5. ':
' → logprob: -7.940449237823486
    6. '```' → logprob: -8.065449714660645
    7. '(' → logprob: -8.565449714660645
    8. ',' → logprob: -9.190449714660645
    9. ' :' → logprob: -9.690449714660645
    10. ' (' → logprob: -9.815449714660645

Token 252: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5085619688034058
    2. 'if' → logprob: -1.1335619688034058
    3. 'return' (adapté à ' return') → logprob: -3.8835620880126953
    4. ' res' → logprob: -4.008562088012695
    5. ' return' → logprob: -4.133562088012695
    6. '   ' → logprob: -4.258562088012695
    7. 'res' → logprob: -5.633562088012695
    8. 'result' → logprob: -6.258562088012695
    9. ' result' → logprob: -6.383562088012695
    10. ' at' → logprob: -9.383562088012695

Token 253: ' fancy' (ID: 39357)
  Prédit: 'combo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combo' → logprob: -0.33354783058166504
    2. '(combo' → logprob: -1.958547830581665
    3. ' combo' → logprob: -2.458547830581665
    4. '(fr' → logprob: -3.708547830581665
    5. ' (' → logprob: -4.708547592163086
    6. '(' → logprob: -4.958547592163086
    7. '((' → logprob: -5.833547592163086
    8. 'expression' → logprob: -5.833547592163086
    9. '(expression' → logprob: -5.958547592163086
    10. 'comb' → logprob: -6.958547592163086

Token 254: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -3.166338137816638e-05
    2. 'Product' → logprob: -11.625031471252441
    3. '*' → logprob: -12.250031471252441
    4. '_expression' → logprob: -12.375031471252441
    5. 'product' → logprob: -12.375031471252441
    6. '(' → logprob: -12.875031471252441
    7. '   ' → logprob: -13.625031471252441
    8. '(f' → logprob: -14.875031471252441
    9. '(_' → logprob: -14.875031471252441
    10. 'mul' → logprob: -15.125031471252441

Token 255: '(map' (ID: 16946)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.8071680665016174
    2. '(range' → logprob: -0.8071680665016174
    3. '(at' → logprob: -2.9321680068969727
    4. '(' → logprob: -3.0571680068969727
    5. '([(' → logprob: -5.557168006896973
    6. '((' → logprob: -6.182168006896973
    7. '([
' → logprob: -7.057168006896973
    8. '(list' → logprob: -8.557168006896973
    9. 'range' → logprob: -9.307168006896973
    10. '(
' → logprob: -9.307168006896973

Token 256: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.005062856711447239
    2. '(int' → logprob: -5.505063056945801
    3. '(' → logprob: -7.630063056945801
    4. '(abs' → logprob: -8.3800630569458
    5. '(operator' → logprob: -9.0050630569458
    6. 'lambda' → logprob: -9.1300630569458
    7. '(
' → logprob: -11.1300630569458
    8. '(str' → logprob: -11.8800630569458
    9. '   ' → logprob: -12.5050630569458
    10. '(pow' → logprob: -12.6300630569458

Token 257: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2092573195695877
    2. ' x' → logprob: -1.7092573642730713
    3. 'i' → logprob: -6.459257125854492
    4. 'y' → logprob: -6.834257125854492
    5. 'z' → logprob: -6.834257125854492
    6. ' y' → logprob: -6.959257125854492
    7. '   ' → logprob: -7.334257125854492
    8. ' i' → logprob: -7.334257125854492
    9. ' z' → logprob: -7.959257125854492
    10. 's' → logprob: -8.834257125854492

Token 258: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012138505466282368
    2. ' :' → logprob: -5.637138366699219
    3. ' i' → logprob: -6.137138366699219
    4. ',' → logprob: -6.262138366699219
    5. ',i' → logprob: -6.262138366699219
    6. ':i' → logprob: -6.387138366699219
    7. '(i' → logprob: -7.887138366699219
    8. 'i' → logprob: -8.887138366699219
    9. '   ' → logprob: -8.887138366699219
    10. 'lambda' → logprob: -9.512138366699219

Token 259: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.152625560760498
    2. ' (' → logprob: -1.527625560760498
    3. '(at' → logprob: -1.652625560760498
    4. 'pivot' → logprob: -2.777625560760498
    5. ' i' → logprob: -2.902625560760498
    6. 'at' → logprob: -3.277625560760498
    7. 'i' → logprob: -3.277625560760498
    8. ' at' → logprob: -3.902625560760498
    9. ' pivot' → logprob: -3.902625560760498
    10. 'pow' → logprob: -4.777625560760498

Token 260: 'N' (ID: 45)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -1.2123901844024658
    2. 'at' → logprob: -1.7123901844024658
    3. '(i' → logprob: -1.7123901844024658
    4. '(at' → logprob: -1.9623901844024658
    5. 'combo' → logprob: -2.587390184402466
    6. 'i' → logprob: -2.837390184402466
    7. '(p' → logprob: -4.337389945983887
    8. 'expression' → logprob: -4.587389945983887
    9. '(a' → logprob: -4.962389945983887
    10. 'pow' → logprob: -5.087389945983887

Token 261: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43700769543647766
    2. ' -' → logprob: -1.0620076656341553
    3. '+' → logprob: -5.062007904052734
    4. ' +' → logprob: -6.687007904052734
    5. '-i' → logprob: -8.562007904052734
    6. ' ' → logprob: -8.812007904052734
    7. '   ' → logprob: -9.312007904052734
    8. ',' → logprob: -10.062007904052734
    9. '*' → logprob: -10.312007904052734
    10. '-
' → logprob: -10.562007904052734

Token 262: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.240158200263977
    2. 'pivot' → logprob: -1.240158200263977
    3. 'i' → logprob: -1.615158200263977
    4. 'at' → logprob: -1.615158200263977
    5. ' pivot' → logprob: -4.7401580810546875
    6. 'a' → logprob: -5.3651580810546875
    7. ' ' → logprob: -5.8651580810546875
    8. '2' → logprob: -6.3651580810546875
    9. ' i' → logprob: -6.4901580810546875
    10. ' at' → logprob: -6.8651580810546875

Token 263: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1666009426116943
    2. 'at' → logprob: -1.2916009426116943
    3. 'pivot' → logprob: -1.2916009426116943
    4. '1' → logprob: -2.0416009426116943
    5. 'a' → logprob: -5.541601181030273
    6. 'k' → logprob: -7.041601181030273
    7. ' pivot' → logprob: -7.166601181030273
    8. '(i' → logprob: -7.166601181030273
    9. '2' → logprob: -7.291601181030273
    10. '(' → logprob: -7.791601181030273

Token 264: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6340982913970947
    2. '-' → logprob: -0.7590982913970947
    3. ' ' → logprob: -7.759098052978516
    4. '+' → logprob: -8.009098052978516
    5. '-i' → logprob: -8.384098052978516
    6. ')' → logprob: -8.759098052978516
    7. ' +' → logprob: -9.134098052978516
    8. ',' → logprob: -9.634098052978516
    9. '   ' → logprob: -9.884098052978516
    10. ' i' → logprob: -10.509098052978516

Token 265: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4312429130077362
    2. '(i' → logprob: -1.4312429428100586
    3. 'at' → logprob: -3.1812429428100586
    4. ' i' → logprob: -3.9312429428100586
    5. '(at' → logprob: -4.056242942810059
    6. 'pivot' → logprob: -4.306242942810059
    7. ' (' → logprob: -5.056242942810059
    8. 'combo' → logprob: -5.931242942810059
    9. '(N' → logprob: -6.431242942810059
    10. '(' → logprob: -6.806242942810059

Token 266: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09966354072093964
    2. ' ,' → logprob: -2.974663496017456
    3. '),' → logprob: -3.349663496017456
    4. ' -' → logprob: -5.724663734436035
    5. ')' → logprob: -6.099663734436035
    6. ' ),' → logprob: -6.724663734436035
    7. '   ' → logprob: -7.349663734436035
    8. '-' → logprob: -7.474663734436035
    9. '+' → logprob: -8.599663734436035
    10. ' +' → logprob: -8.724663734436035

Token 267: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01582847349345684
    2. ' ,' → logprob: -4.390828609466553
    3. ' -' → logprob: -7.140828609466553
    4. ',
' → logprob: -7.265828609466553
    5. ' if' → logprob: -7.265828609466553
    6. '   ' → logprob: -7.765828609466553
    7. '-' → logprob: -8.515828132629395
    8. ',p' → logprob: -9.015828132629395
    9. 'if' → logprob: -9.515828132629395
    10. '(),' → logprob: -10.140828132629395

Token 268: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.012816636823117733
    2. ' MOD' → logprob: -4.512816429138184
    3. 'at' → logprob: -6.762816429138184
    4. 'pivot' → logprob: -8.137816429138184
    5. ' at' → logprob: -8.637816429138184
    6. 'p' → logprob: -9.637816429138184
    7. ' ' → logprob: -10.887816429138184
    8. ' pivot' → logprob: -11.512816429138184
    9. 'i' → logprob: -12.137816429138184
    10. '(' → logprob: -12.637816429138184

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002658893121406436
    2. ' ,' → logprob: -6.002658843994141
    3. '   ' → logprob: -8.87765884399414
    4. ' if' → logprob: -11.37765884399414
    5. ',i' → logprob: -11.75265884399414
    6. ',
' → logprob: -11.87765884399414
    7. '),' → logprob: -12.62765884399414
    8. ' ' → logprob: -13.12765884399414
    9. 'if' → logprob: -13.62765884399414
    10. '       ' → logprob: -13.75265884399414

Token 270: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038046084344387054
    2. ' range' → logprob: -3.28804612159729
    3. '(range' → logprob: -12.788045883178711
    4. '	range' → logprob: -14.163045883178711
    5. '[' → logprob: -14.788045883178711
    6. '   ' → logprob: -15.663045883178711
    7. ' ' → logprob: -15.788045883178711
    8. 'at' → logprob: -15.788045883178711
    9. 're' → logprob: -16.78804588317871
    10. ' [' → logprob: -17.03804588317871

Token 271: '(' (ID: 7)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.3874746859073639
    2. '(at' → logprob: -1.1374746561050415
    3. '(' → logprob: -7.512474536895752
    4. 'at' → logprob: -10.38747501373291
    5. 'pivot' → logprob: -12.01247501373291
    6. '	at' → logprob: -13.01247501373291
    7. '((' → logprob: -13.13747501373291
    8. '(max' → logprob: -13.13747501373291
    9. ' (' → logprob: -13.26247501373291
    10. '(a' → logprob: -13.26247501373291

Token 272: '1' (ID: 16)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.30816197395324707
    2. 'at' → logprob: -1.433161973953247
    3. '1' → logprob: -4.558161735534668
    4. 'p' → logprob: -4.933161735534668
    5. '(at' → logprob: -5.683161735534668
    6. ' pivot' → logprob: -6.058161735534668
    7. '(p' → logprob: -6.058161735534668
    8. '(' → logprob: -8.308161735534668
    9. 'a' → logprob: -8.308161735534668
    10. ' at' → logprob: -9.308161735534668

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06021524593234062
    2. ',p' → logprob: -3.1852152347564697
    3. ' ,' → logprob: -4.435215473175049
    4. 'p' → logprob: -6.310215473175049
    5. 'at' → logprob: -6.810215473175049
    6. ',
' → logprob: -6.935215473175049
    7. 'pivot' → logprob: -7.060215473175049
    8. '(p' → logprob: -8.93521499633789
    9. ' at' → logprob: -9.31021499633789
    10. ')' → logprob: -10.43521499633789

Token 274: ' at' (ID: 540)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.37528347969055176
    2. 'at' → logprob: -1.3752834796905518
    3. ' pivot' → logprob: -2.8752834796905518
    4. ' at' → logprob: -5.750283241271973
    5. 'a' → logprob: -8.125283241271973
    6. '   ' → logprob: -9.625283241271973
    7. '1' → logprob: -10.375283241271973
    8. '	at' → logprob: -10.875283241271973
    9. ' ' → logprob: -11.000283241271973
    10. '(at' → logprob: -11.125283241271973

Token 275: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.430934876203537
    2. ' +' → logprob: -1.0559349060058594
    3. ',' → logprob: -6.930934906005859
    4. ' -' → logprob: -8.18093490600586
    5. '[' → logprob: -8.43093490600586
    6. '+
' → logprob: -8.68093490600586
    7. ' +
' → logprob: -9.30593490600586
    8. ' ' → logprob: -9.30593490600586
    9. ' ,' → logprob: -9.68093490600586
    10. '))' → logprob: -9.80593490600586

Token 276: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020807012333534658
    2. ' ' → logprob: -8.750207901000977
    3. 'pivot' → logprob: -10.000207901000977
    4. '2' → logprob: -13.375207901000977
    5. ' pivot' → logprob: -13.875207901000977
    6. '   ' → logprob: -14.125207901000977
    7. '  ' → logprob: -15.000207901000977
    8. '
' → logprob: -15.000207901000977
    9. '```' → logprob: -16.000207901000977
    10. '3' → logprob: -17.437707901000977

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003317705122753978
    2. 'pivot' → logprob: -8.12533187866211
    3. ' ' → logprob: -10.62533187866211
    4. '2' → logprob: -11.62533187866211
    5. ' pivot' → logprob: -14.12533187866211
    6. '(' → logprob: -14.87533187866211
    7. '   ' → logprob: -14.87533187866211
    8. '
' → logprob: -15.00033187866211
    9. '3' → logprob: -15.75033187866211
    10. '  ' → logprob: -16.37533187866211

Token 278: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.003336098976433277
    2. '))' → logprob: -6.253335952758789
    3. ')' → logprob: -6.628335952758789
    4. ')))
' → logprob: -10.003335952758789
    5. ')));' → logprob: -11.378335952758789
    6. '))))' → logprob: -11.503335952758789
    7. '   ' → logprob: -12.253335952758789
    8. ' ' → logprob: -12.753335952758789
    9. '),' → logprob: -12.878335952758789
    10. ',' → logprob: -13.128335952758789

Token 279: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: ' refr' (ID: 21707)
  Prédit: 'combo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combo' → logprob: -0.5148952603340149
    2. 'mod' → logprob: -1.1398952007293701
    3. 'pow' → logprob: -3.13989520072937
    4. ' combo' → logprob: -4.139895439147949
    5. 're' → logprob: -5.014895439147949
    6. ' modular' → logprob: -5.264895439147949
    7. 'f' → logprob: -5.389895439147949
    8. '(mod' → logprob: -6.889895439147949
    9. '(combo' → logprob: -6.889895439147949
    10. '(pow' → logprob: -7.389895439147949

Token 281: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.006764040794223547
    2. 'r' → logprob: -5.006763935089111
    3. 'ect' → logprob: -11.88176441192627
    4. '(act' → logprob: -11.88176441192627
    5. '
' → logprob: -12.13176441192627
    6. 'react' → logprob: -12.25676441192627
    7. '[' → logprob: -12.38176441192627
    8. 'fract' → logprob: -12.63176441192627
    9. 'rect' → logprob: -12.75676441192627
    10. '(' → logprob: -12.88176441192627

Token 282: '[' (ID: 58)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.18691706657409668
    2. '[' → logprob: -1.9369170665740967
    3. '[a' → logprob: -3.9369170665740967
    4. '[m' → logprob: -5.686917304992676
    5. '[b' → logprob: -6.186917304992676
    6. 'at' → logprob: -7.811917304992676
    7. 'p' → logprob: -8.436917304992676
    8. '[-' → logprob: -8.561917304992676
    9. '[N' → logprob: -8.561917304992676
    10. 'a' → logprob: -9.686917304992676

Token 283: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.5777687430381775
    2. '[p' → logprob: -1.7027688026428223
    3. 'p' → logprob: -2.2027688026428223
    4. 'pivot' → logprob: -2.3277688026428223
    5. '[' → logprob: -3.0777688026428223
    6. '[N' → logprob: -7.327768802642822
    7. '[a' → logprob: -7.577768802642822
    8. 'a' → logprob: -8.077768325805664
    9. 'N' → logprob: -8.077768325805664
    10. ' at' → logprob: -8.827768325805664

Token 284: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012221322394907475
    2. ']%' → logprob: -7.126222133636475
    3. '[' → logprob: -8.126221656799316
    4. '%' → logprob: -10.376221656799316
    5. '])' → logprob: -10.501221656799316
    6. '[p' → logprob: -11.126221656799316
    7. ' ]' → logprob: -11.126221656799316
    8. '-' → logprob: -11.876221656799316
    9. ']
' → logprob: -12.001221656799316
    10. '[end' → logprob: -13.126221656799316

Token 285: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.3557529857498594e-05
    2. ' MOD' → logprob: -10.75002384185791
    3. 'fr' → logprob: -14.00002384185791
    4. 'ORDER' → logprob: -14.75002384185791
    5. '(M' → logprob: -15.25002384185791
    6. '_MOD' → logprob: -15.62502384185791
    7. '```' → logprob: -16.125022888183594
    8. '(' → logprob: -16.625022888183594
    9. ' ' → logprob: -16.750022888183594
    10. 'MO' → logprob: -17.375022888183594

Token 287: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: 'expression' (ID: 61248)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5347302556037903
    2. ')' → logprob: -1.2847301959991455
    3. '+' → logprob: -3.5347301959991455
    4. '<|end|>' → logprob: -3.7847301959991455
    5. '(
' → logprob: -4.034730434417725
    6. ' ' → logprob: -4.409730434417725
    7. '%' → logprob: -4.659730434417725
    8. 'a' → logprob: -5.159730434417725
    9. '
' → logprob: -5.284730434417725
    10. '\n' → logprob: -5.409730434417725

Token 289: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: ' (' (ID: 350)
  Prédit: '(expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expression' → logprob: -0.09066854417324066
    2. '(pow' → logprob: -3.2156684398651123
    3. ' (' → logprob: -3.5906684398651123
    4. 'pow' → logprob: -4.965668678283691
    5. '(' → logprob: -5.965668678283691
    6. 'expression' → logprob: -6.090668678283691
    7. '(exp' → logprob: -6.090668678283691
    8. '(expr' → logprob: -6.590668678283691
    9. '(combo' → logprob: -6.965668678283691
    10. '(mod' → logprob: -7.715668678283691

Token 291: 'expression' (ID: 61248)
  Prédit: 'expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.3805329501628876
    2. '(expression' → logprob: -1.38053297996521
    3. 'pow' → logprob: -3.88053297996521
    4. 'combo' → logprob: -4.130532741546631
    5. ' expression' → logprob: -4.505532741546631
    6. '(pow' → logprob: -5.255532741546631
    7. '(f' → logprob: -6.005532741546631
    8. '(' → logprob: -6.630532741546631
    9. '(combo' → logprob: -6.755532741546631
    10. '(m' → logprob: -6.880532741546631

Token 292: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04300285503268242
    2. '-' → logprob: -3.1680028438568115
    3. ' ' → logprob: -13.41800308227539
    4. '+' → logprob: -14.29300308227539
    5. ')' → logprob: -14.79300308227539
    6. ' ' → logprob: -15.04300308227539
    7. '   ' → logprob: -15.16800308227539
    8. ' +' → logprob: -15.29300308227539
    9. ' -
' → logprob: -16.79300308227539
    10. '*' → logprob: -16.91800308227539

Token 293: ' myst' (ID: 15982)
  Prédit: 'combo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combo' → logprob: -0.1749824732542038
    2. ' combo' → logprob: -1.9249824285507202
    3. '(combo' → logprob: -4.29998254776001
    4. ' (' → logprob: -7.17498254776001
    5. '(m' → logprob: -8.924982070922852
    6. '(' → logprob: -9.424982070922852
    7. 'comb' → logprob: -10.299982070922852
    8. '((' → logprob: -11.049982070922852
    9. 'm' → logprob: -11.299982070922852
    10. ' ' → logprob: -11.799982070922852

Token 294: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00031174797913990915
    2. '(b' → logprob: -8.125311851501465
    3. '(' → logprob: -11.125311851501465
    4. 'a' → logprob: -14.875311851501465
    5. ' (' → logprob: -15.125311851501465
    6. '(
' → logprob: -15.500311851501465
    7. 'b' → logprob: -16.87531089782715
    8. '((' → logprob: -17.00031089782715
    9. '(N' → logprob: -18.50031089782715
    10. ')(' → logprob: -18.62531089782715

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012680222280323505
    2. ' ,' → logprob: -4.5126800537109375
    3. ' -' → logprob: -7.6376800537109375
    4. ',b' → logprob: -7.6376800537109375
    5. '-' → logprob: -8.262680053710938
    6. ')' → logprob: -8.887680053710938
    7. ' ' → logprob: -9.512680053710938
    8. '   ' → logprob: -9.637680053710938
    9. 'b' → logprob: -10.762680053710938
    10. ' +' → logprob: -10.887680053710938

Token 296: ' N' (ID: 478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5349780321121216
    2. ' a' → logprob: -1.4099780321121216
    3. 'b' → logprob: -2.159977912902832
    4. ' b' → logprob: -2.909977912902832
    5. ' ' → logprob: -8.909977912902832
    6. '1' → logprob: -9.534977912902832
    7. 'N' → logprob: -9.909977912902832
    8. ' N' → logprob: -10.034977912902832
    9. '2' → logprob: -11.409977912902832
    10. ')' → logprob: -11.409977912902832

Token 297: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.784273624420166
    2. '-' → logprob: -0.784273624420166
    3. ' -' → logprob: -2.534273624420166
    4. '))' → logprob: -5.034273624420166
    5. ' )' → logprob: -7.659273624420166
    6. ' ' → logprob: -7.909273624420166
    7. ')
' → logprob: -9.284273147583008
    8. '-)' → logprob: -9.409273147583008
    9. '-
' → logprob: -9.784273147583008
    10. '   ' → logprob: -9.909273147583008

Token 298: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01428926456719637
    2. ')' → logprob: -4.889289379119873
    3. '-' → logprob: -5.514289379119873
    4. ' +' → logprob: -6.514289379119873
    5. '+' → logprob: -7.639289379119873
    6. ' *' → logprob: -8.389288902282715
    7. '%' → logprob: -9.014288902282715
    8. '*' → logprob: -9.264288902282715
    9. ' %' → logprob: -9.514288902282715
    10. ' )' → logprob: -9.764288902282715

Token 299: ' myst' (ID: 15982)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.000836312014143914
    2. ' myst' → logprob: -7.125836372375488
    3. 'b' → logprob: -11.000836372375488
    4. '   ' → logprob: -11.750836372375488
    5. '
' → logprob: -13.500836372375488
    6. 'mst' → logprob: -14.375836372375488
    7. '	m' → logprob: -14.500836372375488
    8. '
' → logprob: -14.500836372375488
    9. '       ' → logprob: -14.625836372375488
    10. ' mystery' → logprob: -14.625836372375488

Token 300: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.125006675720215
    3. 'b' → logprob: -14.500006675720215
    4. ' (' → logprob: -15.125006675720215
    5. '(a' → logprob: -17.0000057220459
    6. '(
' → logprob: -17.5000057220459
    7. ' b' → logprob: -18.6250057220459
    8. '((' → logprob: -18.8750057220459
    9. '(N' → logprob: -19.8750057220459
    10. '(B' → logprob: -20.0000057220459

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7292167184641585e-05
    2. ' ,' → logprob: -10.375057220458984
    3. '-' → logprob: -11.500057220458984
    4. 'a' → logprob: -12.000057220458984
    5. ',
' → logprob: -13.125057220458984
    6. ' ' → logprob: -13.500057220458984
    7. '+' → logprob: -13.500057220458984
    8. ' -' → logprob: -13.625057220458984
    9. ',N' → logprob: -14.000057220458984
    10. ')' → logprob: -14.375057220458984

Token 302: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00046796895912848413
    2. ' N' → logprob: -7.875467777252197
    3. 'b' → logprob: -9.875468254089355
    4. 'a' → logprob: -10.750468254089355
    5. '1' → logprob: -12.250468254089355
    6. '   ' → logprob: -12.250468254089355
    7. ' ' → logprob: -13.500468254089355
    8. '	N' → logprob: -14.000468254089355
    9. ')' → logprob: -14.250468254089355
    10. 'n' → logprob: -14.375468254089355

Token 303: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35086387395858765
    2. ' +' → logprob: -1.8508639335632324
    3. '+' → logprob: -1.9758639335632324
    4. ' )' → logprob: -9.100863456726074
    5. '))' → logprob: -10.975863456726074
    6. '+)' → logprob: -11.350863456726074
    7. '-' → logprob: -11.600863456726074
    8. ')%' → logprob: -11.600863456726074
    9. ')+' → logprob: -11.600863456726074
    10. ' -' → logprob: -12.725863456726074

Token 304: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5344169735908508
    2. '%' → logprob: -0.9094169735908508
    3. ')' → logprob: -4.534417152404785
    4. ')%' → logprob: -7.784417152404785
    5. '
' → logprob: -10.284417152404785
    6. '<|end|>' → logprob: -10.659417152404785
    7. ' ' → logprob: -12.409417152404785
    8. '+' → logprob: -12.659417152404785
    9. '[' → logprob: -13.159417152404785
    10. '%A' → logprob: -13.534417152404785

Token 305: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: 0.0
    2. ' MOD' → logprob: -17.0
    3. '```' → logprob: -21.5
    4. '_MOD' → logprob: -22.125
    5. '.MOD' → logprob: -22.25
    6. 'MO' → logprob: -22.5
    7. 'MD' → logprob: -25.0
    8. '`' → logprob: -25.375
    9. 'MODE' → logprob: -25.375
    10. '   ' → logprob: -25.625

Token 306: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.359851598739624
    2. '<|end|>' → logprob: -1.859851598739624
    3. ')' → logprob: -1.984851598739624
    4. 'expression' → logprob: -5.234851837158203
    5. '#' → logprob: -6.359851837158203
    6. '(' → logprob: -7.359851837158203
    7. '```' → logprob: -8.484851837158203
    8. '<|end|>' → logprob: -9.109851837158203
    9. '.' → logprob: -9.359851837158203
    10. 'for' → logprob: -9.484851837158203

Token 308: '(expression' (ID: 105635)
  Prédit: '(expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expression' → logprob: -0.00016063073417171836
    2. '(' → logprob: -8.750160217285156
    3. 'expression' → logprob: -13.250160217285156
    4. '(express' → logprob: -15.875160217285156
    5. '()' → logprob: -16.750160217285156
    6. '(exp' → logprob: -16.750160217285156
    7. '(expr' → logprob: -16.750160217285156
    8. '(ex' → logprob: -17.000160217285156
    9. '(
' → logprob: -17.125160217285156
    10. '((' → logprob: -17.625160217285156

Token 309: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9146995327901095e-05
    2. '+' → logprob: -11.750019073486328
    3. ' )' → logprob: -12.375019073486328
    4. '))' → logprob: -13.500019073486328
    5. '**' → logprob: -13.750019073486328
    6. '())' → logprob: -13.750019073486328
    7. ')
' → logprob: -13.875019073486328
    8. '()' → logprob: -14.125019073486328
    9. '')' → logprob: -14.750019073486328
    10. '(' → logprob: -15.750019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 307
Tokens correctement prédits (1ère position, stricte): 124
Tokens correctement prédits (1ère position, avec adaptation): 126
Tokens correctement prédits (top 10): 250
Précision stricte (1ère position): 40.39%
Précision adaptée (1ère position): 41.04%
Précision (top 10): 81.43%
================================================================================
