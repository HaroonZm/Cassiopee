================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python3

import sys

def solve(S, T, A, B, U):
    # franchement, je pense que ça suffira largement
    if U == S:
        A = A - 1 # on enlève à S
    else:
        B -= 1 # Ou alors c'était T? Peu importe, ça marche
    # Pas besoin de trucs compliqués franchement
    return (A, B)

def main():
    # Je préfère parfois boucler sur stdin comme ça, c'est plus flexible...
    def get_words():
        for l in sys.stdin:
            # bon ici j'utilise split direct
            for x in l.strip().split():
                yield x
    words = get_words()
    S = next(words)   # lettres (genre "apple" par ex)
    T = next(words)   # 2e mot
    # un peu bizarre d'avoir ça ici mais bon
    A = int(next(words)) # version pas très jolie
    B = int(next(words)) # idem
    U = next(words)
    # bref on passe tout ça à solve, et hop
    s, t = solve(S,T,A,B,U)
    print(s, end=" ")
    print(t) # ça fait le boulot

if __name__ == "__main__":
    # l'appel principal classique...
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/env' → logprob: -0.33393460512161255
    2. '/' → logprob: -2.0839345455169678
    3. '/python' → logprob: -2.0839345455169678
    4. '/bin' → logprob: -3.5839345455169678
    5. '/bash' → logprob: -4.958934783935547
    6. 'python' → logprob: -8.583934783935547
    7. '/b' → logprob: -11.208934783935547
    8. '/usr' → logprob: -11.958934783935547
    9. 'env' → logprob: -12.333934783935547
    10. ' /' → logprob: -12.833934783935547

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.038095880299806595
    2. ' python' → logprob: -3.2880959510803223
    3. 'bash' → logprob: -9.913095474243164
    4. ' bash' → logprob: -13.163095474243164
    5. 'perl' → logprob: -13.413095474243164
    6. 'php' → logprob: -14.663095474243164
    7. 'ruby' → logprob: -14.788095474243164
    8. '/python' → logprob: -15.538095474243164
    9. 'node' → logprob: -15.663095474243164
    10. 'py' → logprob: -15.788095474243164

Token 5: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.02815515175461769
    2. '\' → logprob: -4.028155326843262
    3. 'import' → logprob: -6.028155326843262
    4. '  
' → logprob: -6.153155326843262
    5. '\r' → logprob: -6.653155326843262
    6. '```' → logprob: -6.778155326843262
    7. '' → logprob: -7.028155326843262
    8. '3' → logprob: -7.153155326843262
    9. ' 
' → logprob: -7.653155326843262
    10. '\x' → logprob: -8.653155326843262

Token 6: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.22186322510242462
    2. 'import' → logprob: -1.7218632698059082
    3. '```' → logprob: -4.721863269805908
    4. '\' → logprob: -5.346863269805908
    5. '
' → logprob: -5.971863269805908
    6. '  
' → logprob: -6.471863269805908
    7. '' → logprob: -7.596863269805908
    8. ' 
' → logprob: -7.846863269805908
    9. 'newline' → logprob: -8.09686279296875
    10. 'print' → logprob: -8.22186279296875

Token 7: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14384086430072784
    2. '\n' → logprob: -2.143840789794922
    3. 'print' → logprob: -4.268840789794922
    4. '#' → logprob: -7.018840789794922
    5. '\' → logprob: -7.268840789794922
    6. '```' → logprob: -7.518840789794922
    7. 'a' → logprob: -9.393840789794922
    8. ' import' → logprob: -9.643840789794922
    9. '' → logprob: -9.768840789794922
    10. ' 
' → logprob: -10.143840789794922

Token 8: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03457902371883392
    2. ' ' → logprob: -3.659579038619995
    3. ' sys' → logprob: -5.284578800201416
    4. ' json' → logprob: -7.034578800201416
    5. ' pandas' → logprob: -7.909578800201416
    6. ' math' → logprob: -7.909578800201416
    7. ' requests' → logprob: -8.534579277038574
    8. ' space' → logprob: -8.534579277038574
    9. ' argparse' → logprob: -8.659579277038574
    10. ' collections' → logprob: -8.909579277038574

Token 9: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37673524022102356
    2. 'import' → logprob: -1.2517352104187012
    3. 'print' → logprob: -4.501735210418701
    4. '#' → logprob: -5.251735210418701
    5. '```' → logprob: -5.751735210418701
    6. 'p' → logprob: -6.626735210418701
    7. 'if' → logprob: -6.876735210418701
    8. 'd' → logprob: -7.001735210418701
    9. '\' → logprob: -7.001735210418701
    10. 'i' → logprob: -7.251735210418701

Token 11: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004435935989022255
    2. ' main' → logprob: -6.254436016082764
    3. ' space' → logprob: -7.004436016082764
    4. '  ' → logprob: -8.254435539245605
    5. ' ' → logprob: -8.504435539245605
    6. ' process' → logprob: -8.879435539245605
    7. '<|end|>' → logprob: -8.879435539245605
    8. '_' → logprob: -9.879435539245605
    9. ' )' → logprob: -9.879435539245605
    10. ' _' → logprob: -10.254435539245605

Token 12: '(S' (ID: 6181)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025300968438386917
    2. ':' → logprob: -4.025300979614258
    3. '():' → logprob: -5.275300979614258
    4. '```' → logprob: -7.650300979614258
    5. '(:' → logprob: -7.775300979614258
    6. '_' → logprob: -8.150300979614258
    7. ' (' → logprob: -8.525300979614258
    8. '):' → logprob: -9.025300979614258
    9. '(
' → logprob: -9.275300979614258
    10. '("""' → logprob: -10.400300979614258

Token 13: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007776036858558655
    2. ':' → logprob: -4.882776260375977
    3. ')' → logprob: -8.882776260375977
    4. ',' → logprob: -11.257776260375977
    5. '[' → logprob: -12.132776260375977
    6. '):
' → logprob: -12.632776260375977
    7. ':str' → logprob: -12.757776260375977
    8. ' ):' → logprob: -13.007776260375977
    9. ' :' → logprob: -13.882776260375977
    10. '():' → logprob: -14.382776260375977

Token 14: ' T' (ID: 353)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.2673672437667847
    2. 'K' → logprob: -1.3923672437667847
    3. 'T' → logprob: -2.017367362976074
    4. ' T' → logprob: -2.142367362976074
    5. 'k' → logprob: -3.267367362976074
    6. 'N' → logprob: -3.517367362976074
    7. ' k' → logprob: -3.892367362976074
    8. ' N' → logprob: -4.142367362976074
    9. ' n' → logprob: -4.767367362976074
    10. ' M' → logprob: -4.892367362976074

Token 15: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012210593558847904
    2. ')' → logprob: -7.251221179962158
    3. ',' → logprob: -7.876221179962158
    4. ':' → logprob: -9.126220703125
    5. ' ):' → logprob: -11.501220703125
    6. '):
' → logprob: -11.626220703125
    7. '   ' → logprob: -14.751220703125
    8. ''):' → logprob: -15.126220703125
    9. '**' → logprob: -15.251220703125
    10. ']:' → logprob: -15.501220703125

Token 16: ' A' (ID: 355)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.9628982543945312
    2. ' U' → logprob: -1.7128982543945312
    3. 'K' → logprob: -2.0878982543945312
    4. 'U' → logprob: -2.9628982543945312
    5. ' M' → logprob: -3.3378982543945312
    6. ' L' → logprob: -4.212898254394531
    7. ' k' → logprob: -4.400398254394531
    8. ' i' → logprob: -4.400398254394531
    9. ' R' → logprob: -4.525398254394531
    10. ' P' → logprob: -4.712898254394531

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003098927205428481
    2. '):' → logprob: -5.878098964691162
    3. ' ,' → logprob: -8.378098487854004
    4. ')' → logprob: -10.003098487854004
    5. ' ):' → logprob: -12.753098487854004
    6. ',A' → logprob: -12.878098487854004
    7. ',b' → logprob: -13.503098487854004
    8. ',a' → logprob: -13.628098487854004
    9. '=' → logprob: -13.628098487854004
    10. ',int' → logprob: -14.253098487854004

Token 18: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06226310133934021
    2. ' B' → logprob: -2.812263011932373
    3. 'b' → logprob: -9.062263488769531
    4. ' ' → logprob: -9.812263488769531
    5. '	B' → logprob: -10.187263488769531
    6. 'x' → logprob: -10.937263488769531
    7. '   ' → logprob: -11.062263488769531
    8. '  ' → logprob: -11.812263488769531
    9. '_B' → logprob: -12.124763488769531
    10. ' ' → logprob: -12.562263488769531

Token 19: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004297065082937479
    2. ',' → logprob: -6.004297256469727
    3. ')' → logprob: -6.379297256469727
    4. ':' → logprob: -9.129297256469727
    5. ' ):' → logprob: -11.629297256469727
    6. '):
' → logprob: -12.629297256469727
    7. '   ' → logprob: -15.004297256469727
    8. ''):' → logprob: -15.129297256469727
    9. '),' → logprob: -15.129297256469727
    10. '```' → logprob: -15.379297256469727

Token 20: ' U' (ID: 601)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7898775935173035
    2. 'C' → logprob: -1.7898776531219482
    3. '):' → logprob: -2.0398776531219482
    4. ')' → logprob: -2.9148776531219482
    5. ' x' → logprob: -3.1648776531219482
    6. ' C' → logprob: -3.5398776531219482
    7. 'X' → logprob: -4.414877414703369
    8. '):
' → logprob: -4.414877414703369
    9. ' ):' → logprob: -4.539877414703369
    10. 'k' → logprob: -4.664877414703369

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010869937250390649
    2. ')' → logprob: -7.001087188720703
    3. '):
' → logprob: -8.876087188720703
    4. ' ):' → logprob: -10.626087188720703
    5. ',' → logprob: -12.501087188720703
    6. '):
' → logprob: -12.751087188720703
    7. ':' → logprob: -13.126087188720703
    8. ''):' → logprob: -14.376087188720703
    9. ')：' → logprob: -14.626087188720703
    10. '   ' → logprob: -14.876087188720703

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011827661655843258
    2. ' :' → logprob: -4.76182746887207
    3. '   ' → logprob: -6.01182746887207
    4. ' ' → logprob: -8.13682746887207
    5. ',' → logprob: -8.76182746887207
    6. ':
' → logprob: -9.26182746887207
    7. '):' → logprob: -9.51182746887207
    8. '  ' → logprob: -10.51182746887207
    9. '```' → logprob: -10.76182746887207
    10. '=' → logprob: -11.13682746887207

Token 23: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5811736583709717
    2. 'if' → logprob: -0.8311736583709717
    3. '   ' → logprob: -5.831173896789551
    4. ' ' → logprob: -7.081173896789551
    5. 'A' → logprob: -7.206173896789551
    6. ' A' → logprob: -8.70617389678955
    7. '=' → logprob: -8.83117389678955
    8. '    ' → logprob: -9.20617389678955
    9. ' =' → logprob: -9.58117389678955
    10. '#' (adapté à ' #') → logprob: -9.58117389678955

Token 24: ' franchement' (ID: 182681)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14707407355308533
    2. 'if' → logprob: -2.147073984146118
    3. ' ' → logprob: -5.022074222564697
    4. ' A' → logprob: -5.397074222564697
    5. 'A' → logprob: -5.897074222564697
    6. ' #' → logprob: -6.022074222564697
    7. ' pass' → logprob: -7.272074222564697
    8. '#' → logprob: -7.522074222564697
    9. ' rest' → logprob: -8.647073745727539
    10. 's' → logprob: -8.897073745727539

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5684314370155334
    2. ' =' → logprob: -1.3184313774108887
    3. '=' → logprob: -2.6934313774108887
    4. ':' → logprob: -3.5684313774108887
    5. 'A' → logprob: -3.5684313774108887
    6. '   ' → logprob: -4.068431377410889
    7. ' ' → logprob: -5.193431377410889
    8. 'if' → logprob: -5.568431377410889
    9. ' ,' → logprob: -6.318431377410889
    10. '  ' → logprob: -6.443431377410889

Token 26: ' je' (ID: 1264)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15093225240707397
    2. 'if' → logprob: -2.0259323120117188
    3. ' A' → logprob: -5.900932312011719
    4. 'A' → logprob: -6.025932312011719
    5. '#' → logprob: -7.400932312011719
    6. ' #' → logprob: -7.650932312011719
    7. 'print' → logprob: -8.025932312011719
    8. ' si' → logprob: -8.275932312011719
    9. 'C' → logprob: -9.150932312011719
    10. 'c' → logprob: -9.525932312011719

Token 27: ' pense' (ID: 29077)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8549222946166992
    2. 'ne' → logprob: -1.7299222946166992
    3. 'n' → logprob: -2.354922294616699
    4. ' n' → logprob: -2.479922294616699
    5. 'voud' → logprob: -2.604922294616699
    6. 'veux' → logprob: -3.729922294616699
    7. 'vais' → logprob: -3.979922294616699
    8. ' suis' → logprob: -3.979922294616699
    9. 'm' → logprob: -4.354922294616699
    10. ' pense' → logprob: -4.479922294616699

Token 28: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.02533513680100441
    2. ' ' → logprob: -4.400335311889648
    3. 'que' → logprob: -4.775335311889648
    4. '   ' → logprob: -6.150335311889648
    5. ' qu' → logprob: -7.025335311889648
    6. '  ' → logprob: -8.025335311889648
    7. ' that' → logprob: -8.150335311889648
    8. '    ' → logprob: -8.275335311889648
    9. '```' → logprob: -8.400335311889648
    10. 'qu' → logprob: -10.150335311889648

Token 29: ' ça' (ID: 13590)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02382534183561802
    2. 'if' → logprob: -4.023825168609619
    3. ' A' → logprob: -6.023825168609619
    4. 'A' → logprob: -6.648825168609619
    5. ' a' → logprob: -8.648825645446777
    6. ' len' → logprob: -8.648825645446777
    7. ' S' → logprob: -8.773825645446777
    8. ' la' → logprob: -8.773825645446777
    9. ' ce' → logprob: -8.898825645446777
    10. ' print' → logprob: -9.273825645446777

Token 30: ' suff' (ID: 9490)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -1.0029042959213257
    2. ' n' → logprob: -1.5029042959213257
    3. 's' → logprob: -2.1279044151306152
    4. ' ' → logprob: -2.8779044151306152
    5. ' a' → logprob: -3.0029044151306152
    6. 'n' → logprob: -3.3779044151306152
    7. 'a' → logprob: -4.002904415130615
    8. '   ' → logprob: -4.377904415130615
    9. ' )' → logprob: -4.377904415130615
    10. ' s' → logprob: -4.877904415130615

Token 31: 'ira' (ID: 2633)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06816145032644272
    2. 'ra' → logprob: -3.6931614875793457
    3. 'e' → logprob: -3.8181614875793457
    4. 'et' → logprob: -4.818161487579346
    5. 'rait' → logprob: -4.943161487579346
    6. 'it' → logprob: -6.443161487579346
    7. '#' → logprob: -7.818161487579346
    8. 'at' → logprob: -8.193161010742188
    9. 'r' → logprob: -8.318161010742188
    10. 'er' → logprob: -8.318161010742188

Token 32: ' largement' (ID: 96995)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03242328017950058
    2. ' if' → logprob: -4.032423496246338
    3. 'if' → logprob: -4.907423496246338
    4. 'A' → logprob: -5.657423496246338
    5. ',' → logprob: -7.157423496246338
    6. '    
' → logprob: -7.657423496246338
    7. ' A' → logprob: -7.907423496246338
    8. '
' → logprob: -8.03242301940918
    9. '```' → logprob: -8.53242301940918
    10. '  ' → logprob: -8.65742301940918

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006100731901824474
    2. ' if' → logprob: -5.881100654602051
    3. 'if' → logprob: -6.131100654602051
    4. '    
' → logprob: -7.881100654602051
    5. '    ' → logprob: -8.63110065460205
    6. '
' → logprob: -8.88110065460205
    7. '  ' → logprob: -9.25610065460205
    8. ' ' → logprob: -9.63110065460205
    9. ',' → logprob: -9.75610065460205
    10. 'A' → logprob: -9.88110065460205

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02810206077992916
    2. ' if' → logprob: -3.778102159500122
    3. 'if' → logprob: -5.653101921081543
    4. 'A' → logprob: -8.403101921081543
    5. '    
' → logprob: -8.653101921081543
    6. ',' → logprob: -8.778101921081543
    7. ' A' → logprob: -8.903101921081543
    8. '    ' → logprob: -9.028101921081543
    9. '
' → logprob: -9.528101921081543
    10. 'diff' → logprob: -9.528101921081543

Token 35: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5087677240371704
    2. 'if' (adapté à ' if') → logprob: -1.5087677240371704
    3. '   ' → logprob: -1.7587677240371704
    4. 'A' → logprob: -6.133767604827881
    5. ':' → logprob: -7.258767604827881
    6. ' A' → logprob: -7.508767604827881
    7. '    ' → logprob: -7.758767604827881
    8. ' ' → logprob: -7.883767604827881
    9. ',' → logprob: -8.758768081665039
    10. '```' → logprob: -8.883768081665039

Token 36: ' U' (ID: 601)
  Prédit: ' U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.16725146770477295
    2. ' S' → logprob: -2.0422515869140625
    3. ' A' → logprob: -4.2922515869140625
    4. 'U' → logprob: -4.9172515869140625
    5. 'S' → logprob: -6.6672515869140625
    6. ' ' → logprob: -6.9172515869140625
    7. ' T' → logprob: -7.7922515869140625
    8. ' (' → logprob: -8.167251586914062
    9. 'A' → logprob: -8.542251586914062
    10. ' ' → logprob: -10.354751586914062

Token 37: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2255585640668869
    2. '==' → logprob: -1.6005585193634033
    3. '=' → logprob: -9.725558280944824
    4. ' ' → logprob: -11.100558280944824
    5. ' in' → logprob: -11.538058280944824
    6. '=="' → logprob: -11.850558280944824
    7. '=='' → logprob: -11.975558280944824
    8. ' not' → logprob: -11.975558280944824
    9. '===' → logprob: -12.100558280944824
    10. ')' → logprob: -12.163058280944824

Token 38: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.30149513483047485
    2. ' S' → logprob: -1.42649507522583
    3. 'A' → logprob: -4.05149507522583
    4. ' A' → logprob: -5.92649507522583
    5. ' ' → logprob: -10.051495552062988
    6. '"S' → logprob: -11.176495552062988
    7. '   ' → logprob: -12.551495552062988
    8. '1' → logprob: -13.051495552062988
    9. ''A' → logprob: -13.176495552062988
    10. 'T' → logprob: -13.176495552062988

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017789494013413787
    2. ':
' → logprob: -6.376779079437256
    3. ' :' → logprob: -9.626778602600098
    4. ':
' → logprob: -13.001778602600098
    5. ':

' → logprob: -13.251778602600098
    6. '):' → logprob: -13.501778602600098
    7. ':return' → logprob: -13.501778602600098
    8. ' :
' → logprob: -13.876778602600098
    9. ':A' → logprob: -14.126778602600098
    10. ':#' → logprob: -15.251778602600098

Token 40: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.047663744539022446
    2. '   ' → logprob: -3.922663688659668
    3. ':
' → logprob: -4.422663688659668
    4. ' :' → logprob: -4.672663688659668
    5. ' A' → logprob: -6.547663688659668
    6. 'A' → logprob: -6.672663688659668
    7. '       ' → logprob: -7.422663688659668
    8. '    ' → logprob: -8.047663688659668
    9. ' and' → logprob: -8.047663688659668
    10. ' ' → logprob: -8.422663688659668

Token 41: ' A' (ID: 355)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7817599177360535
    2. 'A' (adapté à ' A') → logprob: -1.5317599773406982
    3. ' A' → logprob: -1.5317599773406982
    4. ' print' → logprob: -2.2817599773406982
    5. '   ' → logprob: -5.281759738922119
    6. '    ' → logprob: -6.156759738922119
    7. 'a' → logprob: -8.531760215759277
    8. ' ' → logprob: -9.531760215759277
    9. '       ' → logprob: -9.656760215759277
    10. '    
' → logprob: -9.656760215759277

Token 42: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.65080726146698
    2. '-=' → logprob: -1.02580726146698
    3. '-' → logprob: -2.1508073806762695
    4. '=' → logprob: -6.0258073806762695
    5. ' -' → logprob: -7.2758073806762695
    6. ' =' → logprob: -8.02580738067627
    7. ' ' → logprob: -11.65080738067627
    8. '>' → logprob: -12.02580738067627
    9. '<|end|>' → logprob: -12.02580738067627
    10. '+=' → logprob: -12.65080738067627

Token 43: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16029125452041626
    2. ' A' → logprob: -1.9102911949157715
    3. '0' → logprob: -9.91029167175293
    4. '-' → logprob: -11.53529167175293
    5. ' ' → logprob: -12.53529167175293
    6. '	A' → logprob: -13.53529167175293
    7. 'a' → logprob: -14.41029167175293
    8. '1' → logprob: -14.53529167175293
    9. 'str' → logprob: -14.53529167175293
    10. '   ' → logprob: -15.41029167175293

Token 44: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34848758578300476
    2. '-' → logprob: -1.2234876155853271
    3. '<|end|>' → logprob: -10.223487854003906
    4. '<|end|>' → logprob: -12.598487854003906
    5. ' ' → logprob: -12.973487854003906
    6. ' -=' → logprob: -15.598487854003906
    7. ' ' → logprob: -16.223487854003906
    8. '-B' → logprob: -16.473487854003906
    9. '–' → logprob: -16.723487854003906
    10. '-=' → logprob: -16.723487854003906

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '<|end|>' → logprob: -17.250051498413086
    4. '<|end|>' → logprob: -17.250051498413086
    5. 'int' → logprob: -17.500051498413086
    6. '１' → logprob: -17.625051498413086
    7. '   ' → logprob: -17.625051498413086
    8. '১' → logprob: -18.250051498413086
    9. 'T' → logprob: -18.625051498413086
    10. '-' → logprob: -18.750051498413086

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '１' → logprob: -17.125001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '১' → logprob: -17.875001907348633
    6. '१' → logprob: -18.250001907348633
    7. '' → logprob: -18.500001907348633
    8. '۱' → logprob: -18.937501907348633
    9. '```' → logprob: -19.062501907348633
    10. 'one' → logprob: -19.562501907348633

Token 47: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9249065518379211
    2. '<|end|>' → logprob: -0.9249065518379211
    3. 'else' → logprob: -1.7999064922332764
    4. ' else' → logprob: -3.6749064922332764
    5. '<|end|>' → logprob: -4.5499067306518555
    6. 'print' → logprob: -5.6749067306518555
    7. '
' → logprob: -8.049906730651855
    8. '  
' → logprob: -8.174906730651855
    9. '#else' → logprob: -8.299906730651855
    10. '    
' → logprob: -8.424906730651855

Token 48: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' enl' (ID: 116494)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.005446604453027248
    2. 'eve' → logprob: -5.505446434020996
    3. 'è' → logprob: -7.380446434020996
    4. 'e' → logprob: -8.130446434020996
    5. 'èves' → logprob: -8.380446434020996
    6. 'é' → logprob: -8.755446434020996
    7. 'èv' → logprob: -10.880446434020996
    8. 'ê' → logprob: -12.005446434020996
    9. 'ème' → logprob: -12.130446434020996
    10. 've' → logprob: -12.880446434020996

Token 51: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' S' (ID: 336)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.144537091255188
    2. ' A' → logprob: -1.144537091255188
    3. 'l' → logprob: -1.894537091255188
    4. 'U' → logprob: -2.5195369720458984
    5. '<|end|>' → logprob: -3.2695369720458984
    6. ' ' → logprob: -3.8945369720458984
    7. ' U' → logprob: -4.519536972045898
    8. '1' → logprob: -5.082036972045898
    9. 'u' → logprob: -5.519536972045898
    10. ' l' → logprob: -5.644536972045898

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2861917316913605
    2. '
' → logprob: -2.161191701889038
    3. 'print' → logprob: -2.411191701889038
    4. ' else' → logprob: -4.036191940307617
    5. '   ' → logprob: -4.661191940307617
    6. '<|end|>' → logprob: -4.661191940307617
    7. '    
' → logprob: -5.786191940307617
    8. 'elif' → logprob: -6.661191940307617
    9. '<|end|>' → logprob: -6.786191940307617
    10. ' print' → logprob: -7.161191940307617

Token 55: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.30297884345054626
    2. ' else' → logprob: -1.4279788732528687
    3. 'elif' → logprob: -4.302978992462158
    4. 'print' → logprob: -5.302978992462158
    5. ' elif' → logprob: -6.052978992462158
    6. ' print' → logprob: -8.427978515625
    7. '   ' → logprob: -8.427978515625
    8. '
' → logprob: -9.302978515625
    9. '    
' → logprob: -9.927978515625
    10. ')' → logprob: -10.052978515625

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004529566504061222
    2. ':
' → logprob: -7.875452995300293
    3. ' :' → logprob: -10.125452995300293
    4. '   ' → logprob: -11.000452995300293
    5. '  ' → logprob: -12.125452995300293
    6. '<|end|>' → logprob: -12.250452995300293
    7. ',' → logprob: -13.500452995300293
    8. '    ' → logprob: -14.375452995300293
    9. '<|end|>' → logprob: -14.375452995300293
    10. '      ' → logprob: -14.500452995300293

Token 57: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35629305243492126
    2. '   ' → logprob: -1.8562930822372437
    3. '       ' → logprob: -1.9812930822372437
    4. 'B' → logprob: -5.606293201446533
    5. ':
' → logprob: -7.231293201446533
    6. '    ' → logprob: -8.106292724609375
    7. '      ' → logprob: -8.356292724609375
    8. ':B' → logprob: -9.231292724609375
    9. '     ' → logprob: -9.356292724609375
    10. '           ' → logprob: -9.481292724609375

Token 58: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.030634727329015732
    2. '   ' → logprob: -3.905634641647339
    3. ' B' → logprob: -4.780634880065918
    4. '       ' → logprob: -6.530634880065918
    5. '    ' → logprob: -9.655634880065918
    6. '  ' → logprob: -10.405634880065918
    7. '
' → logprob: -10.655634880065918
    8. '           ' → logprob: -10.905634880065918
    9. ' ' → logprob: -11.155634880065918
    10. ':' → logprob: -11.155634880065918

Token 59: ' -=' (ID: 12583)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895266801118851
    2. '=' → logprob: -2.4639527797698975
    3. ' -=' → logprob: -11.713953018188477
    4. ' ' → logprob: -13.213953018188477
    5. '   ' → logprob: -13.588953018188477
    6. '    ' → logprob: -14.338953018188477
    7. ' +=' → logprob: -14.713953018188477
    8. '-' → logprob: -15.213953018188477
    9. '-=' → logprob: -15.213953018188477
    10. '＝' → logprob: -15.963953018188477

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054889049381017685
    2. ' ' → logprob: -2.929888963699341
    3. '   ' → logprob: -12.054888725280762
    4. '  ' → logprob: -14.554888725280762
    5. '<|end|>' → logprob: -16.179889678955078
    6. ' ' → logprob: -16.429889678955078
    7. '    ' → logprob: -16.679889678955078
    8. '0' → logprob: -17.054889678955078
    9. '-' → logprob: -17.304889678955078
    10. '	' → logprob: -17.367389678955078

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006267757853493094
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -15.625626564025879
    4. '  ' → logprob: -17.125627517700195
    5. '１' → logprob: -18.250627517700195
    6. 'B' → logprob: -18.375627517700195
    7. '-' → logprob: -19.188127517700195
    8. '    ' → logprob: -19.313127517700195
    9. ' ' → logprob: -19.875627517700195
    10. '	' → logprob: -20.063127517700195

Token 62: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03349665179848671
    2. '   ' → logprob: -3.783496618270874
    3. '<|end|>' → logprob: -5.783496856689453
    4. '  
' → logprob: -6.158496856689453
    5. ' ' → logprob: -6.783496856689453
    6. '
' → logprob: -7.033496856689453
    7. '    
' → logprob: -7.158496856689453
    8. ' print' → logprob: -7.283496856689453
    9. 'print' → logprob: -7.408496856689453
    10. '

' → logprob: -8.283496856689453

Token 63: ' Ou' (ID: 33134)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6053929328918457
    2. ' on' → logprob: -1.2303929328918457
    3. 'B' → logprob: -1.8553929328918457
    4. ' B' → logprob: -6.105392932891846
    5. '1' → logprob: -6.980392932891846
    6. ' ' → logprob: -6.980392932891846
    7. 'On' → logprob: -7.605392932891846
    8. 'A' → logprob: -8.605392456054688
    9. ' ' → logprob: -8.855392456054688
    10. '#' → logprob: -9.105392456054688

Token 64: ' alors' (ID: 17971)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3802798390388489
    2. ' à' → logprob: -2.255279779434204
    3. 'B' → logprob: -2.505279779434204
    4. 'on' → logprob: -2.880279779434204
    5. ' B' → logprob: -3.255279779434204
    6. ' ' → logprob: -5.255280017852783
    7. 'l' → logprob: -5.630280017852783
    8. 'à' → logprob: -5.630280017852783
    9. ' ' → logprob: -5.630280017852783
    10. 'u' → logprob: -5.880280017852783

Token 65: ' c' (ID: 274)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4098891317844391
    2. 'B' → logprob: -1.4098891019821167
    3. ' B' → logprob: -3.5348892211914062
    4. 'on' → logprob: -3.6598892211914062
    5. '<|end|>' → logprob: -4.784889221191406
    6. ' ' → logprob: -5.409889221191406
    7. ' ' → logprob: -5.409889221191406
    8. ',' → logprob: -5.409889221191406
    9. ':' → logprob: -5.784889221191406
    10. '   ' → logprob: -6.284889221191406

Token 66: ''était' (ID: 40609)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5682200193405151
    2. 'on' → logprob: -1.4432200193405151
    3. ''on' → logprob: -2.6932201385498047
    4. 'l' → logprob: -3.3182201385498047
    5. ' on' → logprob: -3.4432201385498047
    6. ' n' → logprob: -3.9432201385498047
    7. ' B' → logprob: -4.568220138549805
    8. 'u' → logprob: -4.818220138549805
    9. ''n' → logprob: -5.193220138549805
    10. 'B' → logprob: -5.943220138549805

Token 67: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.6828359365463257
    2. 'T' → logprob: -0.8078359365463257
    3. ' U' → logprob: -3.8078360557556152
    4. 'U' → logprob: -4.057836055755615
    5. ' ' → logprob: -5.057836055755615
    6. '  ' → logprob: -7.432836055755615
    7. 'B' → logprob: -7.557836055755615
    8. ' ' → logprob: -7.557836055755615
    9. ' B' → logprob: -8.370335578918457
    10. ' à' → logprob: -8.495335578918457

Token 68: '?' (ID: 30)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29995042085647583
    2. '   ' → logprob: -1.549950361251831
    3. '  
' → logprob: -4.17495059967041
    4. '    
' → logprob: -4.54995059967041
    5. ' ' → logprob: -5.29995059967041
    6. 'print' → logprob: -5.29995059967041
    7. '<|end|>' → logprob: -5.67495059967041
    8. '

' → logprob: -5.79995059967041
    9. '```' → logprob: -7.17495059967041
    10. ' 
' → logprob: -7.42495059967041

Token 69: ' Peu' (ID: 189054)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4777260422706604
    2. '
' → logprob: -1.1027259826660156
    3. 'print' → logprob: -4.102725982666016
    4. '    
' → logprob: -4.477725982666016
    5. '  
' → logprob: -5.102725982666016
    6. ' print' → logprob: -5.602725982666016
    7. ' ' → logprob: -5.977725982666016
    8. '<|end|>' → logprob: -6.227725982666016
    9. '```' → logprob: -6.727725982666016
    10. '  ' → logprob: -7.352725982666016

Token 70: ' importe' (ID: 80493)
  Prédit: 'importe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'importe' → logprob: -0.837080717086792
    2. 'prob' → logprob: -1.212080717086792
    3. ' importe' → logprob: -2.212080717086792
    4. 'import' → logprob: -2.962080717086792
    5. '```' → logprob: -3.087080717086792
    6. '   ' → logprob: -4.087080955505371
    7. 'plement' → logprob: -4.962080955505371
    8. ' ' → logprob: -5.087080955505371
    9. 'pler' → logprob: -5.087080955505371
    10. ' probable' → logprob: -5.212080955505371

Token 71: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7657532095909119
    2. '<|end|>' → logprob: -1.1407532691955566
    3. '   ' → logprob: -1.7657532691955566
    4. ' ' → logprob: -4.140753269195557
    5. '<|end|>' → logprob: -4.640753269195557
    6. '  
' → logprob: -5.140753269195557
    7. '    
' → logprob: -5.265753269195557
    8. '  ' → logprob: -6.390753269195557
    9. ' 
' → logprob: -6.515753269195557
    10. ' return' → logprob: -6.890753269195557

Token 72: ' ça' (ID: 13590)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.40748947858810425
    2. '<|end|>' → logprob: -1.907489538192749
    3. '```' → logprob: -3.282489538192749
    4. '   ' → logprob: -3.782489538192749
    5. ' c' → logprob: -3.907489538192749
    6. ' B' → logprob: -4.03248929977417
    7. ' ' → logprob: -4.40748929977417
    8. ' je' → logprob: -4.65748929977417
    9. ' ' → logprob: -5.03248929977417
    10. ' voilà' → logprob: -5.03248929977417

Token 73: ' marche' (ID: 58191)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8326257467269897
    2. ' suffit' → logprob: -2.2076258659362793
    3. ' suff' → logprob: -2.4576258659362793
    4. '   ' → logprob: -2.8326258659362793
    5. '```' → logprob: -3.2076258659362793
    6. 'n' → logprob: -3.3326258659362793
    7. '<|end|>' → logprob: -3.7076258659362793
    8. ' va' → logprob: -4.332625865936279
    9. ' -' → logprob: -4.457625865936279
    10. '-' → logprob: -4.582625865936279

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023784486576914787
    2. '
' → logprob: -4.023784637451172
    3. '    
' → logprob: -5.898784637451172
    4. 'print' → logprob: -6.273784637451172
    5. '  
' → logprob: -8.273784637451172
    6. '<|end|>' → logprob: -8.398784637451172
    7. 'return' → logprob: -9.148784637451172
    8. ' print' → logprob: -9.273784637451172
    9. ' 
' → logprob: -9.898784637451172
    10. '        
' → logprob: -10.023784637451172

Token 76: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18210537731647491
    2. 'print' → logprob: -2.307105302810669
    3. '
' → logprob: -3.057105302810669
    4. ' print' → logprob: -4.807105541229248
    5. '    
' → logprob: -5.307105541229248
    6. 'return' → logprob: -5.807105541229248
    7. ' return' → logprob: -6.807105541229248
    8. '  
' → logprob: -7.557105541229248
    9. ' 
' → logprob: -8.05710506439209
    10. '```' → logprob: -8.18210506439209

Token 77: ' Pas' (ID: 18323)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7167819142341614
    2. ' print' → logprob: -0.7167819142341614
    3. '   ' → logprob: -3.8417818546295166
    4. '
' → logprob: -6.591782093048096
    5. '    
' → logprob: -8.341781616210938
    6. ' ' → logprob: -9.966781616210938
    7. '```' → logprob: -10.091781616210938
    8. '  
' → logprob: -10.216781616210938
    9. ' 
' → logprob: -10.216781616210938
    10. '    ' → logprob: -10.591781616210938

Token 78: ' besoin' (ID: 27703)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.27756428718566895
    2. '   ' → logprob: -2.402564287185669
    3. 'print' → logprob: -2.652564287185669
    4. ' de' → logprob: -2.902564287185669
    5. ' ' → logprob: -4.65256404876709
    6. 'ens' → logprob: -5.90256404876709
    7. '    ' → logprob: -6.15256404876709
    8. ' return' → logprob: -6.27756404876709
    9. 'def' → logprob: -6.52756404876709
    10. ' d' → logprob: -6.65256404876709

Token 79: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1642753779888153
    2. ' de' → logprob: -3.1642754077911377
    3. 'print' → logprob: -3.1642754077911377
    4. ' print' → logprob: -3.1642754077911377
    5. ' d' → logprob: -4.789275169372559
    6. 'd' → logprob: -5.539275169372559
    7. 'de' → logprob: -5.539275169372559
    8. 'return' → logprob: -6.664275169372559
    9. ',' → logprob: -6.789275169372559
    10. ' of' → logprob: -6.789275169372559

Token 80: ' trucs' (ID: 151878)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.045315105468034744
    2. ' print' → logprob: -3.2953150272369385
    3. 'return' → logprob: -5.545315265655518
    4. 'aff' → logprob: -7.045315265655518
    5. 'faire' → logprob: -7.795315265655518
    6. '```' → logprob: -8.04531478881836
    7. 'ret' → logprob: -8.17031478881836
    8. '#' → logprob: -8.67031478881836
    9. 'r' → logprob: -8.67031478881836
    10. ' return' → logprob: -8.79531478881836

Token 81: ' compli' (ID: 51016)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0266122817993164
    2. 'de' → logprob: -1.6516122817993164
    3. '   ' → logprob: -2.0266122817993164
    4. 'return' → logprob: -2.2766122817993164
    5. 'd' → logprob: -2.7766122817993164
    6. 'print' → logprob: -3.0266122817993164
    7. ' return' → logprob: -3.1516122817993164
    8. ' d' → logprob: -3.4016122817993164
    9. ' print' → logprob: -4.151612281799316
    10. ' ' → logprob: -5.901612281799316

Token 82: 'qués' (ID: 70348)
  Prédit: 'qués'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qués' → logprob: -0.009189864620566368
    2. 'qu' → logprob: -6.009190082550049
    3. 'qué' → logprob: -6.009190082550049
    4. 'ques' → logprob: -6.134190082550049
    5. 'quées' → logprob: -7.259190082550049
    6. 'x' → logprob: -8.25918960571289
    7. '#' → logprob: -8.75918960571289
    8. '```' → logprob: -9.00918960571289
    9. 'quée' → logprob: -9.13418960571289
    10. 'quer' → logprob: -9.13418960571289

Token 83: ' franchement' (ID: 182681)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22626321017742157
    2. 'print' → logprob: -1.851263165473938
    3. ' print' → logprob: -3.1012632846832275
    4. '
' → logprob: -8.226263046264648
    5. '    
' → logprob: -9.101263046264648
    6. 'return' → logprob: -10.976263046264648
    7. ' return' → logprob: -11.476263046264648
    8. '	print' → logprob: -11.601263046264648
    9. '  
' → logprob: -11.976263046264648
    10. '  ' → logprob: -11.976263046264648

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4533330500125885
    2. ' print' → logprob: -1.7033330202102661
    3. 'print' → logprob: -1.7033330202102661
    4. '
' → logprob: -8.953332901000977
    5. ' return' → logprob: -9.078332901000977
    6. 'return' → logprob: -9.828332901000977
    7. '    
' → logprob: -11.078332901000977
    8. '```' → logprob: -11.828332901000977
    9. '  ' → logprob: -12.578332901000977
    10. ' ' → logprob: -12.578332901000977

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00816322211176157
    2. 'print' → logprob: -4.8831634521484375
    3. 'return' → logprob: -8.008163452148438
    4. ' print' → logprob: -9.008163452148438
    5. '    
' → logprob: -10.383163452148438
    6. '
' → logprob: -10.383163452148438
    7. '```' → logprob: -10.883163452148438
    8. ' return' → logprob: -11.008163452148438
    9. '

' → logprob: -14.008163452148438
    10. '  
' → logprob: -14.383163452148438

Token 86: ' return' (ID: 622)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11736738681793213
    2. ' print' → logprob: -2.4923672676086426
    3. '   ' → logprob: -3.6173672676086426
    4. 'return' (adapté à ' return') → logprob: -6.992367267608643
    5. ' return' → logprob: -8.4923677444458
    6. '```' → logprob: -10.4923677444458
    7. '	print' → logprob: -11.8673677444458
    8. ' ' → logprob: -11.9923677444458
    9. '    
' → logprob: -12.8673677444458
    10. '
' → logprob: -13.1173677444458

Token 87: ' (' (ID: 350)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07412596791982651
    2. ' A' → logprob: -2.8241260051727295
    3. 'f' → logprob: -4.57412576675415
    4. 'print' → logprob: -7.32412576675415
    5. ' f' → logprob: -7.57412576675415
    6. 'str' → logprob: -8.449126243591309
    7. '(A' → logprob: -8.449126243591309
    8. ' (' → logprob: -9.699126243591309
    9. '(f' → logprob: -10.574126243591309
    10. ' ' → logprob: -11.074126243591309

Token 88: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011813003802672029
    2. ' A' → logprob: -6.751181125640869
    3. 'str' → logprob: -11.751181602478027
    4. ')' → logprob: -13.751181602478027
    5. ' ' → logprob: -14.251181602478027
    6. '   ' → logprob: -14.376181602478027
    7. 'f' → logprob: -15.126181602478027
    8. ' str' → logprob: -15.751181602478027
    9. '	A' → logprob: -15.876181602478027
    10. '(A' → logprob: -16.37618064880371

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026860725483857095
    2. ' ,' → logprob: -8.375268936157227
    3. ',B' → logprob: -10.500268936157227
    4. ')' → logprob: -12.750268936157227
    5. ' B' → logprob: -12.875268936157227
    6. '),' → logprob: -13.125268936157227
    7. 'B' → logprob: -13.500268936157227
    8. ' ' → logprob: -14.000268936157227
    9. '<|end|>' → logprob: -14.875268936157227
    10. ',
' → logprob: -15.375268936157227

Token 90: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.31326258182525635
    2. ' B' → logprob: -1.3132625818252563
    3. ' ' → logprob: -14.563262939453125
    4. '   ' → logprob: -15.188262939453125
    5. '    ' → logprob: -15.938262939453125
    6. ')' → logprob: -17.063262939453125
    7. '	B' → logprob: -17.188262939453125
    8. 'b' → logprob: -18.063262939453125
    9. '  ' → logprob: -18.938262939453125
    10. ',' → logprob: -18.938262939453125

Token 91: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')return' → logprob: -16.500001907348633
    5. '}' → logprob: -17.500001907348633
    6. ')

' → logprob: -17.875001907348633
    7. '<|end|>' → logprob: -17.875001907348633
    8. ')#' → logprob: -18.250001907348633
    9. ')}' → logprob: -19.375001907348633
    10. '),' → logprob: -19.625001907348633

Token 92: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0004142264660913497
    2. ' ' → logprob: -8.12541389465332
    3. ' __' → logprob: -10.00041389465332
    4. ' ' → logprob: -10.62541389465332
    5. 'main' → logprob: -10.75041389465332
    6. '_main' → logprob: -11.37541389465332
    7. '	main' → logprob: -12.12541389465332
    8. ' user' → logprob: -13.00041389465332
    9. ' run' → logprob: -13.37541389465332
    10. ' solve' → logprob: -13.62541389465332

Token 94: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.0259150157216936e-05
    2. '(' → logprob: -10.37505054473877
    3. '()' → logprob: -11.37505054473877
    4. ' ():' → logprob: -12.00005054473877
    5. ':' → logprob: -14.25005054473877
    6. '()>' → logprob: -14.87505054473877
    7. '():
' → logprob: -15.25005054473877
    8. '(:' → logprob: -16.500049591064453
    9. '(":' → logprob: -17.875049591064453
    10. '()">' → logprob: -18.000049591064453

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003915257286280394
    2. 'import' → logprob: -6.128915309906006
    3. ' import' → logprob: -7.128915309906006
    4. ' line' → logprob: -8.378914833068848
    5. '```' → logprob: -8.503914833068848
    6. '    
' → logprob: -9.128914833068848
    7. ' input' → logprob: -9.253914833068848
    8. ' readline' → logprob: -9.878914833068848
    9. 'input' → logprob: -10.128914833068848
    10. ' S' → logprob: -10.378914833068848

Token 96: ' #' (ID: 1069)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06458858400583267
    2. '   ' → logprob: -3.5645885467529297
    3. ' S' → logprob: -3.6895885467529297
    4. 's' → logprob: -5.31458854675293
    5. 'input' → logprob: -6.18958854675293
    6. 'import' → logprob: -6.43958854675293
    7. 'line' → logprob: -8.68958854675293
    8. 'inputs' → logprob: -8.68958854675293
    9. ' input' → logprob: -8.93958854675293
    10. '  ' → logprob: -10.06458854675293

Token 97: ' Je' (ID: 4678)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21667203307151794
    2. ' input' → logprob: -2.091671943664551
    3. 'input' → logprob: -2.966671943664551
    4. 'import' → logprob: -4.591671943664551
    5. ' import' → logprob: -5.091671943664551
    6. '```' → logprob: -6.966671943664551
    7. ' S' → logprob: -7.216671943664551
    8. ' line' → logprob: -7.716671943664551
    9. '  ' → logprob: -8.46667194366455
    10. 'S' → logprob: -8.59167194366455

Token 98: ' préfère' (ID: 141784)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1674672365188599
    2. 's' → logprob: -1.7924672365188599
    3. 'import' → logprob: -2.1674671173095703
    4. '   ' → logprob: -2.5424671173095703
    5. ' veux' → logprob: -3.1674671173095703
    6. 'input' → logprob: -3.4174671173095703
    7. ' readline' → logprob: -3.5424671173095703
    8. ' ' → logprob: -3.9174671173095703
    9. '=' → logprob: -3.9174671173095703
    10. ' input' → logprob: -3.9174671173095703

Token 99: ' parfois' (ID: 44575)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.6409814357757568
    2. ' ' → logprob: -1.8909814357757568
    3. ' lire' → logprob: -2.265981435775757
    4. ' sys' → logprob: -2.515981435775757
    5. ' utiliser' → logprob: -2.765981435775757
    6. 'import' → logprob: -2.890981435775757
    7. ' que' → logprob: -3.265981435775757
    8. ' garder' → logprob: -3.265981435775757
    9. ' une' → logprob: -3.515981435775757
    10. ' la' → logprob: -3.640981435775757

Token 100: ' bou' (ID: 17573)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.4126198291778564
    2. ' utiliser' → logprob: -2.1626198291778564
    3. ':' → logprob: -2.9126198291778564
    4. 'import' → logprob: -2.9126198291778564
    5. ' import' → logprob: -3.2876198291778564
    6. ' une' → logprob: -3.2876198291778564
    7. ' compléter' → logprob: -3.2876198291778564
    8. '    ' → logprob: -3.5376198291778564
    9. ' ' → logprob: -3.5376198291778564
    10. ' ' → logprob: -3.5376198291778564

Token 101: 'cler' (ID: 55207)
  Prédit: 'cler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.000973517308011651
    2. 'cl' → logprob: -8.00097370147705
    3. 'ffer' → logprob: -8.75097370147705
    4. 'ger' → logprob: -8.87597370147705
    5. 'cle' → logprob: -9.37597370147705
    6. '```' → logprob: -10.00097370147705
    7. '   ' → logprob: -10.12597370147705
    8. '

' → logprob: -10.37597370147705
    9. '#' → logprob: -10.87597370147705
    10. '``' → logprob: -11.12597370147705

Token 102: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9178717732429504
    2. '
' → logprob: -1.4178717136383057
    3. ':' → logprob: -2.0428717136383057
    4. '()' → logprob: -2.9178717136383057
    5. '  
' → logprob: -3.4178717136383057
    6. ',' → logprob: -3.6678717136383057
    7. '<|end|>' → logprob: -4.042871952056885
    8. '(' → logprob: -4.292871952056885
    9. '  ' → logprob: -4.542871952056885
    10. '    
' → logprob: -4.792871952056885

Token 103: ' stdin' (ID: 75143)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6435240507125854
    2. ' range' → logprob: -1.3935240507125854
    3. 'sys' → logprob: -2.143524169921875
    4. 'range' → logprob: -2.518524169921875
    5. ' input' → logprob: -4.018524169921875
    6. 'input' → logprob: -4.643524169921875
    7. ' stdin' → logprob: -7.893524169921875
    8. ' ' → logprob: -8.893524169921875
    9. 'stdin' → logprob: -8.893524169921875
    10. 'len' → logprob: -9.643524169921875

Token 104: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21651442348957062
    2. ':' → logprob: -2.2165143489837646
    3. '
' → logprob: -3.0915143489837646
    4. ' for' → logprob: -3.8415143489837646
    5. ',' → logprob: -5.716514587402344
    6. 'for' → logprob: -5.966514587402344
    7. 'import' → logprob: -6.091514587402344
    8. '<|end|>' → logprob: -6.216514587402344
    9. '    
' → logprob: -6.466514587402344
    10. '```' → logprob: -6.591514587402344

Token 105: ' ça' (ID: 13590)
  Prédit: ' ça'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ça' → logprob: -0.0751546174287796
    2. ' this' → logprob: -3.3251545429229736
    3. ' ceci' → logprob: -3.5751545429229736
    4. 'ça' → logprob: -5.325154781341553
    5. ' ce' → logprob: -7.325154781341553
    6. ' cela' → logprob: -7.700154781341553
    7. ' ca' → logprob: -8.075154304504395
    8. ' for' → logprob: -8.075154304504395
    9. ' sys' → logprob: -8.450154304504395
    10. ' line' → logprob: -8.575154304504395

Token 106: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2718915939331055
    2. '   ' → logprob: -1.3968915939331055
    3. ' for' → logprob: -1.5218915939331055
    4. '```' → logprob: -2.0218915939331055
    5. '<|end|>' → logprob: -2.7718915939331055
    6. '
' → logprob: -3.5218915939331055
    7. 'for' → logprob: -4.3968915939331055
    8. ',' → logprob: -5.3968915939331055
    9. '<|end|>' → logprob: -5.3968915939331055
    10. '    
' → logprob: -6.0218915939331055

Token 107: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014867663849145174
    2. ' for' → logprob: -6.876486778259277
    3. ' while' → logprob: -8.501486778259277
    4. '```' → logprob: -9.876486778259277
    5. '    
' → logprob: -10.126486778259277
    6. 'for' → logprob: -10.126486778259277
    7. 'import' → logprob: -10.501486778259277
    8. 'while' → logprob: -10.876486778259277
    9. 'n' → logprob: -11.626486778259277
    10. ' n' → logprob: -11.751486778259277

Token 108: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.419966459274292
    2. '   ' → logprob: -1.669966459274292
    3. ''' → logprob: -2.294966459274292
    4. 'ont' → logprob: -2.419966459274292
    5. 'q' → logprob: -2.919966459274292
    6. '```' → logprob: -2.919966459274292
    7. 'on' → logprob: -3.544966459274292
    8. '#' → logprob: -3.544966459274292
    9. ''est' → logprob: -3.919966459274292
    10. 'que' → logprob: -3.919966459274292

Token 109: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.9973284006118774
    2. 'plus' → logprob: -1.3723284006118774
    3. ' pratique' → logprob: -1.6223284006118774
    4. ' simple' → logprob: -3.247328281402588
    5. ' python' → logprob: -3.497328281402588
    6. ' souvent' → logprob: -3.997328281402588
    7. ' more' → logprob: -4.247328281402588
    8. ' une' → logprob: -4.622328281402588
    9. 'python' → logprob: -4.997328281402588
    10. 'moins' → logprob: -4.997328281402588

Token 110: ' flexible' (ID: 20185)
  Prédit: ' simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' simple' → logprob: -0.2972698509693146
    2. 'simple' → logprob: -2.047269821166992
    3. ' python' → logprob: -2.547269821166992
    4. 'python' → logprob: -3.922269821166992
    5. ' conc' → logprob: -5.172269821166992
    6. 'pr' → logprob: -5.547269821166992
    7. 'con' → logprob: -5.922269821166992
    8. ' safe' → logprob: -5.922269821166992
    9. ' pratique' → logprob: -6.047269821166992
    10. 'py' → logprob: -6.172269821166992

Token 111: '...
' (ID: 4908)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2461378425359726
    2. ' for' → logprob: -2.621137857437134
    3. '    
' → logprob: -2.621137857437134
    4. 'for' → logprob: -3.496137857437134
    5. '
' → logprob: -3.746137857437134
    6. 'import' → logprob: -5.121137619018555
    7. '<|end|>' → logprob: -5.621137619018555
    8. 'while' → logprob: -6.246137619018555
    9. '```' → logprob: -6.246137619018555
    10. ' while' → logprob: -6.496137619018555

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008394477888941765
    2. ' for' → logprob: -5.508394241333008
    3. '    
' → logprob: -6.133394241333008
    4. 'for' → logprob: -7.133394241333008
    5. '
' → logprob: -7.758394241333008
    6. 'import' → logprob: -7.883394241333008
    7. '```' → logprob: -8.508394241333008
    8. '<|end|>' → logprob: -9.133394241333008
    9. ' while' → logprob: -10.008394241333008
    10. '	for' → logprob: -10.008394241333008

Token 113: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16679824888706207
    2. ' for' → logprob: -1.9167982339859009
    3. 'import' → logprob: -5.166798114776611
    4. '   ' → logprob: -7.291798114776611
    5. ' import' → logprob: -9.54179859161377
    6. 'while' → logprob: -10.29179859161377
    7. '```' → logprob: -10.66679859161377
    8. '
' → logprob: -11.16679859161377
    9. '    
' → logprob: -11.29179859161377
    10. 'try' → logprob: -12.29179859161377

Token 114: ' get' (ID: 717)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.13315555453300476
    2. ' read' → logprob: -3.383155584335327
    3. 'input' → logprob: -3.633155584335327
    4. ' lines' → logprob: -3.883155584335327
    5. ' reader' → logprob: -5.383155345916748
    6. ' readline' → logprob: -5.633155345916748
    7. ' stdin' → logprob: -5.633155345916748
    8. ' iter' → logprob: -5.758155345916748
    9. ' line' → logprob: -5.758155345916748
    10. ' main' → logprob: -5.883155345916748

Token 115: '_words' (ID: 45077)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.44031721353530884
    2. '_line' → logprob: -1.815317153930664
    3. 'line' → logprob: -2.690317153930664
    4. '_input' → logprob: -3.065317153930664
    5. '():
' → logprob: -3.315317153930664
    6. ' line' → logprob: -3.690317153930664
    7. 'int' → logprob: -4.940317153930664
    8. '()' → logprob: -5.940317153930664
    9. '_token' → logprob: -6.315317153930664
    10. '_tokens' → logprob: -6.440317153930664

Token 116: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.14769840240478516
    2. '():
' → logprob: -2.022698402404785
    3. ' ():' → logprob: -6.522698402404785
    4. '()' → logprob: -6.647698402404785
    5. '(line' → logprob: -6.647698402404785
    6. ' ()' → logprob: -7.272698402404785
    7. '   ' → logprob: -9.022698402404785
    8. ' (' → logprob: -11.147698402404785
    9. '(lines' → logprob: -11.147698402404785
    10. '():
' → logprob: -11.522698402404785

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007628042250871658
    2. '   ' → logprob: -5.007627964019775
    3. ' for' → logprob: -7.882627964019775
    4. '():' → logprob: -8.757628440856934
    5. ' ' → logprob: -9.257628440856934
    6. '():
' → logprob: -9.507628440856934
    7. ':' → logprob: -9.882628440856934
    8. '    ' → logprob: -10.507628440856934
    9. '      ' → logprob: -10.882628440856934
    10. '        ' → logprob: -11.007628440856934

Token 118: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6060934662818909
    2. 'for' (adapté à ' for') → logprob: -0.9810934662818909
    3. '   ' → logprob: -3.106093406677246
    4. '       ' → logprob: -4.106093406677246
    5. ' while' → logprob: -4.731093406677246
    6. 'while' → logprob: -4.981093406677246
    7. ' line' → logprob: -7.106093406677246
    8. 'import' → logprob: -7.856093406677246
    9. 'yield' → logprob: -8.106093406677246
    10. ' yield' → logprob: -8.106093406677246

Token 119: ' l' (ID: 305)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2255556285381317
    2. 'line' → logprob: -1.600555658340454
    3. ' ligne' → logprob: -9.975555419921875
    4. '	line' → logprob: -10.350555419921875
    5. 'ligne' → logprob: -10.975555419921875
    6. 'l' → logprob: -11.100555419921875
    7. ' word' → logprob: -11.600555419921875
    8. 'word' → logprob: -11.725555419921875
    9. ' l' → logprob: -11.850555419921875
    10. ' ' → logprob: -12.975555419921875

Token 120: ' in' (ID: 306)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.14650394022464752
    2. ' in' → logprob: -2.0215039253234863
    3. 'in' → logprob: -6.271503925323486
    4. 'inea' → logprob: -6.771503925323486
    5. 'e' → logprob: -8.146504402160645
    6. 'ne' → logprob: -9.396504402160645
    7. 'a' → logprob: -9.771504402160645
    8. '   ' → logprob: -9.896504402160645
    9. 'ines' → logprob: -10.146504402160645
    10. ' ' → logprob: -10.396504402160645

Token 121: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20143292844295502
    2. ' sys' → logprob: -1.7014329433441162
    3. '(sys' → logprob: -12.076433181762695
    4. '=sys' → logprob: -12.201433181762695
    5. '	sys' → logprob: -12.576433181762695
    6. 'iter' → logprob: -13.201433181762695
    7. ' ' → logprob: -13.701433181762695
    8. '   ' → logprob: -14.576433181762695
    9. 'open' → logprob: -14.701433181762695
    10. 'stdin' → logprob: -14.826433181762695

Token 122: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0032026697881519794
    2. 'stdin' → logprob: -6.003202438354492
    3. ' stdin' → logprob: -7.753202438354492
    4. 'in' → logprob: -8.753202438354492
    5. '.' → logprob: -9.503202438354492
    6. ' in' → logprob: -10.003202438354492
    7. '(stdin' → logprob: -11.503202438354492
    8. ' .' → logprob: -12.753202438354492
    9. '   ' → logprob: -12.878202438354492
    10. '.stdout' → logprob: -13.003202438354492

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02483743242919445
    2. ':
' → logprob: -3.8998374938964844
    3. '.readline' → logprob: -5.524837493896484
    4. ' in' → logprob: -9.024837493896484
    5. 'in' → logprob: -10.024837493896484
    6. '.readlines' → logprob: -10.274837493896484
    7. '   ' → logprob: -10.524837493896484
    8. '       ' → logprob: -10.899837493896484
    9. '.strip' → logprob: -11.399837493896484
    10. ' :' → logprob: -11.524837493896484

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016910118283703923
    2. ' yield' → logprob: -7.251690864562988
    3. 'yield' → logprob: -8.126690864562988
    4. ':
' → logprob: -9.126690864562988
    5. ':' → logprob: -9.126690864562988
    6. '            
' → logprob: -9.376690864562988
    7. ',' → logprob: -9.501690864562988
    8. '	yield' → logprob: -9.751690864562988
    9. '.strip' → logprob: -9.876690864562988
    10. '       ' → logprob: -10.126690864562988

Token 125: ' #' (ID: 1069)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.5725679993629456
    2. '               ' → logprob: -1.6975679397583008
    3. 'yield' → logprob: -1.6975679397583008
    4. '	yield' → logprob: -3.197567939758301
    5. '           ' → logprob: -3.572567939758301
    6. ' for' → logprob: -8.5725679397583
    7. ' if' → logprob: -9.0725679397583
    8. '	       ' → logprob: -9.5725679397583
    9. 'Yield' → logprob: -9.5725679397583
    10. ' ' → logprob: -10.1975679397583

Token 126: ' bon' (ID: 4846)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.4121638536453247
    2. 'yield' → logprob: -1.5371638536453247
    3. '               ' → logprob: -2.662163734436035
    4. '           ' → logprob: -3.787163734436035
    5. ' for' → logprob: -4.162163734436035
    6. '	yield' → logprob: -5.537163734436035
    7. ' if' → logprob: -5.787163734436035
    8. 'for' → logprob: -6.037163734436035
    9. '            ' → logprob: -6.412163734436035
    10. 'if' → logprob: -7.537163734436035

Token 127: ' ici' (ID: 27994)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09125369787216187
    2. ' =' → logprob: -3.2162537574768066
    3. ' yield' → logprob: -3.8412537574768066
    4. '               ' → logprob: -4.841253757476807
    5. '            ' → logprob: -5.591253757476807
    6. ' if' → logprob: -5.966253757476807
    7. 'yield' → logprob: -6.091253757476807
    8. '       ' → logprob: -6.341253757476807
    9. ' strip' → logprob: -6.466253757476807
    10. '.strip' → logprob: -6.466253757476807

Token 128: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5987557768821716
    2. ' yield' → logprob: -0.9737557768821716
    3. ' if' → logprob: -3.9737558364868164
    4. '               ' → logprob: -4.098755836486816
    5. '            ' → logprob: -4.223755836486816
    6. 'yield' → logprob: -4.348755836486816
    7. ' =' → logprob: -5.348755836486816
    8. '	yield' → logprob: -6.348755836486816
    9. '        ' → logprob: -7.223755836486816
    10. ' strip' → logprob: -7.723755836486816

Token 129: ''util' (ID: 37761)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4091033339500427
    2. ' =' → logprob: -1.4091033935546875
    3. '.strip' → logprob: -2.7841033935546875
    4. '=' → logprob: -4.5341033935546875
    5. '       ' → logprob: -4.9091033935546875
    6. ' .' → logprob: -6.5341033935546875
    7. '.split' → logprob: -6.6591033935546875
    8. 's' → logprob: -7.1591033935546875
    9. 'e' → logprob: -7.1591033935546875
    10. '.rstrip' → logprob: -7.2841033935546875

Token 130: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.32192736864089966
    2. 's' → logprob: -1.6969273090362549
    3. 'ze' → logprob: -3.196927309036255
    4. 'ser' → logprob: -3.446927309036255
    5. 't' → logprob: -4.696927547454834
    6. 'z' → logprob: -6.196927547454834
    7. '```' → logprob: -6.446927547454834
    8. 'sers' → logprob: -6.946927547454834
    9. '   ' → logprob: -7.071927547454834
    10. 'ses' → logprob: -7.196927547454834

Token 131: ' split' (ID: 12648)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.11639092862606049
    2. ' strip' → logprob: -2.9913909435272217
    3. 'strip' → logprob: -4.116390705108643
    4. '           ' → logprob: -4.491390705108643
    5. ' yield' → logprob: -4.616390705108643
    6. 'yield' → logprob: -5.241390705108643
    7. 'l' → logprob: -5.741390705108643
    8. ' split' → logprob: -5.991390705108643
    9. ' la' → logprob: -6.116390705108643
    10. '.strip' → logprob: -6.366390705108643

Token 132: ' direct' (ID: 2823)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.44379961490631104
    2. '():
' → logprob: -1.068799614906311
    3. '           ' → logprob: -4.9437994956970215
    4. '()
' → logprob: -6.0687994956970215
    5. '               ' → logprob: -6.3187994956970215
    6. '():' → logprob: -6.3187994956970215
    7. ' ()' → logprob: -7.1937994956970215
    8. ' =' → logprob: -7.9437994956970215
    9. '().' → logprob: -8.69379997253418
    10. '(),' → logprob: -8.69379997253418

Token 133: '
' (ID: 198)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.8756760358810425
    2. '()' → logprob: -1.3756760358810425
    3. '():' → logprob: -1.5006760358810425
    4. '           ' → logprob: -2.625676155090332
    5. '               ' → logprob: -4.125676155090332
    6. '().' → logprob: -4.875676155090332
    7. '()
' → logprob: -5.375676155090332
    8. '()\' → logprob: -6.000676155090332
    9. ' =' → logprob: -6.625676155090332
    10. '(),' → logprob: -7.375676155090332

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03933686763048172
    2. '               ' → logprob: -3.914336919784546
    3. ' =' → logprob: -4.664336681365967
    4. '():
' → logprob: -5.164336681365967
    5. '()' → logprob: -6.539336681365967
    6. '=' → logprob: -8.039337158203125
    7. ' yield' → logprob: -8.039337158203125
    8. 'yield' → logprob: -8.414337158203125
    9. '            
' → logprob: -8.664337158203125
    10. '():' → logprob: -9.039337158203125

Token 135: ' for' (ID: 395)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.6480345129966736
    2. 'yield' → logprob: -1.0230345726013184
    3. '           ' → logprob: -2.2730345726013184
    4. '	yield' → logprob: -4.898034572601318
    5. '               ' → logprob: -5.648034572601318
    6. ' for' → logprob: -6.148034572601318
    7. 'for' (adapté à ' for') → logprob: -7.148034572601318
    8. 'Yield' → logprob: -9.14803409576416
    9. '	       ' → logprob: -9.64803409576416
    10. '       ' → logprob: -9.89803409576416

Token 136: ' x' (ID: 1215)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6103769540786743
    2. 'word' → logprob: -1.2353769540786743
    3. ' word' → logprob: -2.2353768348693848
    4. ' w' → logprob: -2.8603768348693848
    5. 'token' → logprob: -7.110376834869385
    6. 'x' → logprob: -7.485376834869385
    7. ' token' → logprob: -8.985377311706543
    8. 's' → logprob: -9.485377311706543
    9. ' mot' → logprob: -9.735377311706543
    10. ' x' → logprob: -10.110377311706543

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04312388598918915
    2. 'in' → logprob: -3.168123960494995
    3. ' ' → logprob: -9.918124198913574
    4. 's' → logprob: -10.668124198913574
    5. 'n' → logprob: -11.293124198913574
    6. 'd' → logprob: -12.293124198913574
    7. 'import' → logprob: -12.418124198913574
    8. '  ' → logprob: -13.043124198913574
    9. '	in' → logprob: -13.230624198913574
    10. 'i' → logprob: -13.293124198913574

Token 138: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004620830062776804
    2. ' l' → logprob: -5.3796210289001465
    3. '	l' → logprob: -15.754620552062988
    4. '   ' → logprob: -16.004621505737305
    5. '           ' → logprob: -16.129621505737305
    6. '_l' → logprob: -16.129621505737305
    7. ' ' → logprob: -16.629621505737305
    8. 'line' → logprob: -18.254621505737305
    9. '    ' → logprob: -18.379621505737305
    10. ' л' → logprob: -18.379621505737305

Token 139: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.10219337791204453
    2. '.strip' → logprob: -2.3521933555603027
    3. '.' → logprob: -6.477193355560303
    4. '.rstrip' → logprob: -8.227193832397461
    5. ' .' → logprob: -8.852193832397461
    6. 'split' → logprob: -10.477193832397461
    7. '           ' → logprob: -12.352193832397461
    8. ' split' → logprob: -14.102193832397461
    9. ' in' → logprob: -14.477193832397461
    10. '().' → logprob: -14.602193832397461

Token 140: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.511406809295295e-06
    2. '()' → logprob: -12.375006675720215
    3. ' ().' → logprob: -13.500006675720215
    4. '.split' → logprob: -15.250006675720215
    5. '().'' → logprob: -15.375006675720215
    6. '():' → logprob: -16.0000057220459
    7. '().__' → logprob: -16.2500057220459
    8. '():
' → logprob: -16.8750057220459
    9. '()).' → logprob: -17.2500057220459
    10. '()['' → logprob: -17.7500057220459

Token 141: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.625000953674316
    3. '(split' → logprob: -18.0
    4. '.split' → logprob: -18.875
    5. '```' → logprob: -19.5
    6. 'strip' → logprob: -19.5
    7. 'spl' → logprob: -19.625
    8. 'plit' → logprob: -19.875
    9. 'rstrip' → logprob: -20.25
    10. '_split' → logprob: -21.125

Token 142: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026927946135401726
    2. '():' → logprob: -3.651927947998047
    3. '('' → logprob: -8.401927947998047
    4. '(' → logprob: -9.151927947998047
    5. '())' → logprob: -9.526927947998047
    6. '()]' → logprob: -9.651927947998047
    7. '()>' → logprob: -9.776927947998047
    8. ' ()' → logprob: -10.276927947998047
    9. '():
' → logprob: -11.276927947998047
    10. '()">' → logprob: -11.276927947998047

Token 143: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008476639166474342
    2. 'yield' → logprob: -5.383476734161377
    3. ' yield' → logprob: -5.758476734161377
    4. '	yield' → logprob: -7.508476734161377
    5. ':' → logprob: -9.758476257324219
    6. 'Yield' → logprob: -10.758476257324219
    7. '                
' → logprob: -10.758476257324219
    8. '           ' → logprob: -11.258476257324219
    9. '```' → logprob: -12.508476257324219
    10. ',' → logprob: -12.508476257324219

Token 144: ' yield' (ID: 14376)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6254220008850098
    2. 'yield' (adapté à ' yield') → logprob: -1.1254220008850098
    3. ' yield' → logprob: -2.0004220008850098
    4. '           ' → logprob: -6.00042200088501
    5. '               ' → logprob: -6.75042200088501
    6. '	yield' → logprob: -6.75042200088501
    7. 'Yield' → logprob: -8.125421524047852
    8. 'return' → logprob: -11.500421524047852
    9. '                       ' → logprob: -11.625421524047852
    10. '```' → logprob: -11.625421524047852

Token 145: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233763717114925
    2. ' x' → logprob: -5.2552337646484375
    3. '	x' → logprob: -18.755233764648438
    4. '(x' → logprob: -19.005233764648438
    5. ' ' → logprob: -19.630233764648438
    6. '"x' → logprob: -20.880233764648438
    7. '               ' → logprob: -21.005233764648438
    8. '                   ' → logprob: -21.255233764648438
    9. ''x' → logprob: -21.630233764648438
    10. 'from' → logprob: -21.755233764648438

Token 146: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2546904981136322
    2. '    
' → logprob: -1.8796905279159546
    3. '       ' → logprob: -4.504690647125244
    4. '               ' → logprob: -4.504690647125244
    5. '  
' → logprob: -4.754690647125244
    6. ' next' → logprob: -4.754690647125244
    7. '                
' → logprob: -4.754690647125244
    8. '        
' → logprob: -5.379690647125244
    9. 'next' → logprob: -5.379690647125244
    10. '<|end|>' → logprob: -6.254690647125244

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013401618227362633
    2. '    
' → logprob: -4.763401508331299
    3. '       ' → logprob: -6.888401508331299
    4. '                
' → logprob: -6.888401508331299
    5. '               ' → logprob: -7.388401508331299
    6. ' next' → logprob: -7.638401508331299
    7. '  
' → logprob: -8.763401985168457
    8. 's' → logprob: -8.888401985168457
    9. '        
' → logprob: -9.013401985168457
    10. '    ' → logprob: -9.013401985168457

Token 148: ' words' (ID: 6391)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09404832869768143
    2. ' words' → logprob: -3.344048261642456
    3. 'words' (adapté à ' words') → logprob: -4.219048500061035
    4. 'it' → logprob: -4.719048500061035
    5. ' it' → logprob: -4.969048500061035
    6. 'tokens' → logprob: -5.719048500061035
    7. 'input' → logprob: -5.969048500061035
    8. '    
' → logprob: -6.219048500061035
    9. 'iter' → logprob: -6.219048500061035
    10. ' next' → logprob: -6.344048500061035

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740793704986572
    2. '=' → logprob: -0.9740793704986572
    3. '   ' → logprob: -13.349079132080078
    4. '    ' → logprob: -15.224079132080078
    5. '  ' → logprob: -15.474079132080078
    6. ' ' → logprob: -15.849079132080078
    7. ' =
' → logprob: -16.849079132080078
    8. '_' → logprob: -17.224079132080078
    9. '＝' → logprob: -17.224079132080078
    10. '_iter' → logprob: -17.724079132080078

Token 150: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00043233807082287967
    2. ' get' → logprob: -7.75043249130249
    3. 'list' → logprob: -13.375432014465332
    4. '(get' → logprob: -16.75043296813965
    5. 'iter' → logprob: -17.50043296813965
    6. '	get' → logprob: -19.37543296813965
    7. '[get' → logprob: -19.62543296813965
    8. '   ' → logprob: -20.12543296813965
    9. '=get' → logprob: -20.37543296813965
    10. ' list' → logprob: -20.37543296813965

Token 151: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -2.463036435074173e-05
    2. '_tokens' → logprob: -11.625024795532227
    3. 'words' → logprob: -12.125024795532227
    4. '_word' → logprob: -12.375024795532227
    5. '_' → logprob: -12.750024795532227
    6. '()' → logprob: -14.375024795532227
    7. 'Words' → logprob: -14.625024795532227
    8. '(' → logprob: -14.750024795532227
    9. '(_' → logprob: -14.750024795532227
    10. '_WORD' → logprob: -15.250024795532227

Token 152: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.3438327843905427e-05
    2. '()
' → logprob: -10.75002384185791
    3. '()

' → logprob: -14.00002384185791
    4. ' ()' → logprob: -15.00002384185791
    5. '(' → logprob: -15.12502384185791
    6. '()`' → logprob: -15.87502384185791
    7. '()]' → logprob: -16.000022888183594
    8. '())' → logprob: -16.000022888183594
    9. '()"' → logprob: -17.250022888183594
    10. '();' → logprob: -17.375022888183594

Token 153: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6153466105461121
    2. '   ' → logprob: -0.9903466105461121
    3. ' S' → logprob: -3.115346670150757
    4. 'A' → logprob: -3.240346670150757
    5. ' A' → logprob: -5.615346431732178
    6. '    
' → logprob: -8.115346908569336
    7. 's' → logprob: -8.365346908569336
    8. ' ' → logprob: -9.365346908569336
    9. 'a' → logprob: -9.365346908569336
    10. '```' → logprob: -9.865346908569336

Token 154: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -8.244413766078651e-05
    2. '   ' → logprob: -9.625082015991211
    3. ' S' → logprob: -11.250082015991211
    4. 's' → logprob: -13.125082015991211
    5. 'import' → logprob: -14.625082015991211
    6. '    
' → logprob: -14.750082015991211
    7. ' ' → logprob: -16.50008201599121
    8. '```' → logprob: -16.50008201599121
    9. 'from' → logprob: -16.87508201599121
    10. 'while' → logprob: -17.12508201599121

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042120564728975296
    2. ',' → logprob: -3.6671204566955566
    3. '=' → logprob: -4.167120456695557
    4. ' ,' → logprob: -9.667120933532715
    5. ',S' → logprob: -9.792120933532715
    6. ' ' → logprob: -9.917120933532715
    7. '   ' → logprob: -11.042120933532715
    8. ',T' → logprob: -12.042120933532715
    9. '=S' → logprob: -13.167120933532715
    10. ' S' → logprob: -13.667120933532715

Token 156: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.008618827909231186
    2. ' next' → logprob: -4.7586188316345215
    3. '(next' → logprob: -12.508618354797363
    4. '[next' → logprob: -15.133618354797363
    5. '   ' → logprob: -15.508618354797363
    6. '	next' → logprob: -16.63361930847168
    7. '.next' → logprob: -17.00861930847168
    8. ' ' → logprob: -17.63361930847168
    9. ',next' → logprob: -18.00861930847168
    10. '  ' → logprob: -18.25861930847168

Token 157: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.500001907348633
    3. ' (' → logprob: -16.375001907348633
    4. '(word' → logprob: -16.625001907348633
    5. '(tokens' → logprob: -17.125001907348633
    6. '(users' → logprob: -18.250001907348633
    7. 'words' → logprob: -18.375001907348633
    8. '(weights' → logprob: -18.875001907348633
    9. '(w' → logprob: -19.500001907348633
    10. '(values' → logprob: -20.375001907348633

Token 158: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023302895948290825
    2. ')
' → logprob: -3.7733027935028076
    3. ' )' → logprob: -10.148303031921387
    4. ')
' → logprob: -12.023303031921387
    5. ')

' → logprob: -12.148303031921387
    6. ' )
' → logprob: -12.648303031921387
    7. '()' → logprob: -13.648303031921387
    8. '   ' → logprob: -14.148303031921387
    9. '())' → logprob: -14.523303031921387
    10. ').' → logprob: -14.773303031921387

Token 159: '  ' (ID: 256)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.26250287890434265
    2. '   ' → logprob: -2.012502908706665
    3. '
' → logprob: -2.387502908706665
    4. '    
' → logprob: -5.887502670288086
    5. ' T' → logprob: -6.012502670288086
    6. '  
' → logprob: -9.637502670288086
    7. '   
' → logprob: -10.762502670288086
    8. '
' → logprob: -11.137502670288086
    9. 'S' → logprob: -11.887502670288086
    10. ' 
' → logprob: -12.137502670288086

Token 160: ' #' (ID: 1069)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.15192948281764984
    2. '   ' → logprob: -2.0269293785095215
    3. '
' → logprob: -5.4019293785095215
    4. '    
' → logprob: -5.7769293785095215
    5. 'S' → logprob: -6.9019293785095215
    6. ' T' → logprob: -8.02692985534668
    7. '  
' → logprob: -8.90192985534668
    8. '   
' → logprob: -10.27692985534668
    9. ' ' → logprob: -10.77692985534668
    10. '#' (adapté à ' #') → logprob: -10.90192985534668

Token 161: ' lettres' (ID: 101234)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00041053479071706533
    2. 'S' → logprob: -8.625410079956055
    3. ' T' → logprob: -8.625410079956055
    4. 'next' → logprob: -10.000410079956055
    5. 'words' → logprob: -13.750410079956055
    6. 's' → logprob: -13.750410079956055
    7. '   ' → logprob: -14.125410079956055
    8. ' next' → logprob: -14.125410079956055
    9. 'U' → logprob: -14.250410079956055
    10. 'str' → logprob: -14.875410079956055

Token 162: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08541490137577057
    2. 'T' → logprob: -3.0854148864746094
    3. ' T' → logprob: -4.210414886474609
    4. 'S' → logprob: -4.960414886474609
    5. ' ' → logprob: -5.710414886474609
    6. ',' → logprob: -5.710414886474609
    7. '
' → logprob: -6.210414886474609
    8. ' =' → logprob: -6.710414886474609
    9. ' S' → logprob: -7.210414886474609
    10. '<|end|>' → logprob: -7.210414886474609

Token 163: 'genre' (ID: 58586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011859707534313202
    2. ' )' → logprob: -4.886859893798828
    3. ',' → logprob: -6.886859893798828
    4. 'S' → logprob: -7.386859893798828
    5. 's' → logprob: -7.636859893798828
    6. ' =' → logprob: -8.011859893798828
    7. ' S' → logprob: -8.386859893798828
    8. ' ' → logprob: -8.636859893798828
    9. '  ' → logprob: -9.011859893798828
    10. 'def' → logprob: -9.261859893798828

Token 164: ' "' (ID: 392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31134718656539917
    2. ' )' → logprob: -2.311347246170044
    3. ' T' → logprob: -2.936347246170044
    4. 'T' → logprob: -3.686347246170044
    5. ',' → logprob: -3.686347246170044
    6. ' S' → logprob: -4.436347007751465
    7. ' ' → logprob: -5.061347007751465
    8. 'S' → logprob: -5.186347007751465
    9. '')' → logprob: -5.811347007751465
    10. ' de' → logprob: -5.811347007751465

Token 165: 'apple' (ID: 34058)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4889441132545471
    2. 'a' → logprob: -1.9889440536499023
    3. 'ABC' → logprob: -2.4889440536499023
    4. 'AB' → logprob: -3.1139440536499023
    5. 'AT' → logprob: -3.2389440536499023
    6. 's' → logprob: -3.7389440536499023
    7. 'P' → logprob: -4.738944053649902
    8. '"' → logprob: -5.113944053649902
    9. 'M' → logprob: -5.238944053649902
    10. 'B' → logprob: -5.363944053649902

Token 166: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.01708679273724556
    2. '")
' → logprob: -4.267086982727051
    3. ')' → logprob: -5.892086982727051
    4. '"' → logprob: -9.64208698272705
    5. ')
' → logprob: -10.39208698272705
    6. '")

' → logprob: -10.76708698272705
    7. '")
' → logprob: -11.39208698272705
    8. ')")' → logprob: -11.89208698272705
    9. ' ")' → logprob: -12.51708698272705
    10. '",' → logprob: -12.64208698272705

Token 167: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02524133399128914
    2. ')
' → logprob: -3.7752413749694824
    3. '   ' → logprob: -6.275241374969482
    4. ' )' → logprob: -10.150240898132324
    5. '")' → logprob: -10.275240898132324
    6. 'S' → logprob: -11.525240898132324
    7. ' )
' → logprob: -12.525240898132324
    8. ')

' → logprob: -12.525240898132324
    9. ' ' → logprob: -12.900240898132324
    10. '  ' → logprob: -12.900240898132324

Token 168: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.01146321464329958
    2. 'example' → logprob: -4.761463165283203
    3. ' exemple' → logprob: -6.011463165283203
    4. ' ex' → logprob: -8.636463165283203
    5. 'fois' → logprob: -10.011463165283203
    6. ' example' → logprob: -10.386463165283203
    7. 'exa' → logprob: -10.511463165283203
    8. 'def' → logprob: -10.761463165283203
    9. '#' → logprob: -11.386463165283203
    10. '```' → logprob: -11.511463165283203

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06673295795917511
    2. '")' → logprob: -2.941732883453369
    3. ')
' → logprob: -4.566732883453369
    4. '")
' → logprob: -7.066732883453369
    5. '   ' → logprob: -8.316733360290527
    6. ' )' → logprob: -9.441733360290527
    7. ')")' → logprob: -9.691733360290527
    8. '"' → logprob: -10.441733360290527
    9. ')
' → logprob: -10.941733360290527
    10. ')")
' → logprob: -11.191733360290527

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27858102321624756
    2. 'T' → logprob: -1.9035810232162476
    3. ' T' → logprob: -2.403581142425537
    4. ' ' → logprob: -6.653581142425537
    5. ',' → logprob: -6.778581142425537
    6. ')' → logprob: -8.278580665588379
    7. '
' → logprob: -8.278580665588379
    8. '    
' → logprob: -8.403580665588379
    9. 'S' → logprob: -8.778580665588379
    10. '  ' → logprob: -9.153580665588379

Token 171: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -0.0001238004770129919
    2. ' T' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.000123977661133
    4. 'S' → logprob: -17.500123977661133
    5. '
' → logprob: -18.375123977661133
    6. '    
' → logprob: -18.375123977661133
    7. ' ' → logprob: -18.375123977661133
    8. ',' → logprob: -18.875123977661133
    9. '  ' → logprob: -18.875123977661133
    10. '	T' → logprob: -19.250123977661133

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687264919281006
    2. '=' → logprob: -1.13687264919281
    3. ' ' → logprob: -13.886872291564941
    4. '   ' → logprob: -14.636872291564941
    5. '  ' → logprob: -15.386872291564941
    6. ',' → logprob: -16.886873245239258
    7. ' ' → logprob: -18.261873245239258
    8. ')' → logprob: -18.761873245239258
    9. '    ' → logprob: -18.761873245239258
    10. '＝' → logprob: -19.136873245239258

Token 173: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.47407716512680054
    2. 'next' → logprob: -0.9740771651268005
    3. '(next' → logprob: -15.599077224731445
    4. '	next' → logprob: -17.599077224731445
    5. '   ' → logprob: -18.099077224731445
    6. '[next' → logprob: -18.849077224731445
    7. '.next' → logprob: -18.974077224731445
    8. ' ' → logprob: -19.099077224731445
    9. '  ' → logprob: -19.099077224731445
    10. '_next' → logprob: -20.474077224731445

Token 174: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -1.3856492842023727e-06
    2. 'words' → logprob: -14.250000953674316
    3. ' (' → logprob: -14.625000953674316
    4. ' words' → logprob: -15.375000953674316
    5. '(' → logprob: -16.625001907348633
    6. '(tokens' → logprob: -17.250001907348633
    7. '(users' → logprob: -19.250001907348633
    8. ' ' → logprob: -20.000001907348633
    9. '(word' → logprob: -20.000001907348633
    10. '.words' → logprob: -20.125001907348633

Token 175: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.621933451038785e-05
    2. ')
' → logprob: -10.375056266784668
    3. '   ' → logprob: -10.875056266784668
    4. ' )' → logprob: -12.125056266784668
    5. ' ' → logprob: -14.875056266784668
    6. '  ' → logprob: -16.87505531311035
    7. ')

' → logprob: -16.87505531311035
    8. ')
' → logprob: -17.12505531311035
    9. ')#' → logprob: -17.87505531311035
    10. '),' → logprob: -19.00005531311035

Token 176: '  ' (ID: 256)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2586956024169922
    2. '   ' → logprob: -1.5086956024169922
    3. ' A' → logprob: -5.008695602416992
    4. ' ' → logprob: -10.508695602416992
    5. '  ' → logprob: -11.008695602416992
    6. '	A' → logprob: -11.383695602416992
    7. '
' → logprob: -13.133695602416992
    8. '    
' → logprob: -13.258695602416992
    9. '    ' → logprob: -13.883695602416992
    10. '(A' → logprob: -14.258695602416992

Token 177: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04395221546292305
    2. 'A' → logprob: -3.168952226638794
    3. ' A' → logprob: -8.293951988220215
    4. ' ' → logprob: -8.668951988220215
    5. '  ' → logprob: -8.918951988220215
    6. ')' → logprob: -9.043951988220215
    7. '
' → logprob: -9.168951988220215
    8. 'S' → logprob: -9.793951988220215
    9. '    
' → logprob: -10.043951988220215
    10. '#' (adapté à ' #') → logprob: -10.418951988220215

Token 178: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006568890996277332
    2. 'U' → logprob: -5.131568908691406
    3. ' A' → logprob: -7.756568908691406
    4. 'S' → logprob: -8.881568908691406
    5. 'next' → logprob: -10.631568908691406
    6. '   ' → logprob: -11.131568908691406
    7. '#' → logprob: -11.381568908691406
    8. ' U' → logprob: -11.756568908691406
    9. ' ' → logprob: -12.631568908691406
    10. 'a' → logprob: -13.131568908691406

Token 179: '2' (ID: 17)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.023958737030625343
    2. 'U' → logprob: -3.773958683013916
    3. 'S' → logprob: -7.648958683013916
    4. 'int' → logprob: -8.898959159851074
    5. ' A' → logprob: -10.523959159851074
    6. '#' → logprob: -10.523959159851074
    7. 'next' → logprob: -10.648959159851074
    8. '   ' → logprob: -12.523959159851074
    9. 'str' → logprob: -12.648959159851074
    10. ' U' → logprob: -13.023959159851074

Token 180: 'e' (ID: 68)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03836723417043686
    2. ' A' → logprob: -3.66336727142334
    3. 'U' → logprob: -5.03836727142334
    4. '   ' → logprob: -5.66336727142334
    5. ' ' → logprob: -6.91336727142334
    6. ' U' → logprob: -8.16336727142334
    7. '  ' → logprob: -8.53836727142334
    8. 'S' → logprob: -8.91336727142334
    9. 'B' → logprob: -9.16336727142334
    10. '<|end|>' → logprob: -9.53836727142334

Token 181: ' mot' (ID: 3598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7100621461868286
    2. 'words' → logprob: -1.8350621461868286
    3. '<|end|>' → logprob: -1.9600621461868286
    4. ' words' → logprob: -2.210062026977539
    5. 'token' → logprob: -3.335062026977539
    6. '(words' → logprob: -3.835062026977539
    7. '_token' → logprob: -4.835062026977539
    8. '_words' → logprob: -4.960062026977539
    9. '<|end|>' → logprob: -5.460062026977539
    10. ' token' → logprob: -5.585062026977539

Token 182: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05808279663324356
    2. 'A' → logprob: -2.9330828189849854
    3. ' A' → logprob: -5.808082580566406
    4. ' ' → logprob: -9.558082580566406
    5. '    
' → logprob: -10.558082580566406
    6. '  ' → logprob: -10.808082580566406
    7. '
' → logprob: -10.933082580566406
    8. '	A' → logprob: -11.433082580566406
    9. '<|end|>' → logprob: -11.558082580566406
    10. 'S' → logprob: -11.683082580566406

Token 183: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5780970454216003
    2. '   ' → logprob: -0.8280970454216003
    3. ' A' → logprob: -6.203096866607666
    4. ' ' → logprob: -9.953097343444824
    5. 'U' → logprob: -10.453097343444824
    6. '  ' → logprob: -10.703097343444824
    7. '	A' → logprob: -11.703097343444824
    8. '    
' → logprob: -12.203097343444824
    9. ',' → logprob: -12.328097343444824
    10. '
' → logprob: -12.828097343444824

Token 184: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1160349458805285e-05
    2. '   ' → logprob: -12.000011444091797
    3. ' A' → logprob: -12.250011444091797
    4. 'a' → logprob: -15.750011444091797
    5. 'try' → logprob: -18.500011444091797
    6. '	A' → logprob: -18.750011444091797
    7. 'int' → logprob: -18.875011444091797
    8. '    
' → logprob: -19.000011444091797
    9. 'U' → logprob: -19.000011444091797
    10. '
' → logprob: -19.500011444091797

Token 185: ' un' (ID: 537)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0710543766617775
    2. ' A' → logprob: -2.696054458618164
    3. '   ' → logprob: -6.821054458618164
    4. 'a' → logprob: -12.071054458618164
    5. '	A' → logprob: -12.696054458618164
    6. '  ' → logprob: -12.946054458618164
    7. ' ' → logprob: -12.946054458618164
    8. '    ' → logprob: -13.383554458618164
    9. '#' → logprob: -13.696054458618164
    10. '    
' → logprob: -13.821054458618164

Token 186: ' peu' (ID: 9235)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.044610586017370224
    2. ' A' → logprob: -3.1696105003356934
    3. ' ' → logprob: -7.669610500335693
    4. 'e' → logprob: -8.294610977172852
    5. 'n' → logprob: -8.294610977172852
    6. 'S' → logprob: -8.669610977172852
    7. 'a' → logprob: -8.794610977172852
    8. 's' → logprob: -9.169610977172852
    9. '   ' → logprob: -9.419610977172852
    10. '
' → logprob: -11.169610977172852

Token 187: ' bizarre' (ID: 61150)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16415297985076904
    2. '   ' → logprob: -2.2891530990600586
    3. ' A' → logprob: -3.0391530990600586
    4. ' ' → logprob: -6.789153099060059
    5. 'S' → logprob: -7.289153099060059
    6. '  ' → logprob: -9.039153099060059
    7. '    ' → logprob: -9.414153099060059
    8. ' S' → logprob: -9.539153099060059
    9. '       ' → logprob: -11.289153099060059
    10. '
' → logprob: -11.789153099060059

Token 188: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3414807617664337
    2. 'A' → logprob: -1.7164807319641113
    3. ' A' → logprob: -2.2164807319641113
    4. ',' → logprob: -7.966480731964111
    5. '    
' → logprob: -9.84148120880127
    6. ' ' → logprob: -9.96648120880127
    7. '    ' → logprob: -10.21648120880127
    8. ' ,' → logprob: -10.46648120880127
    9. '
' → logprob: -10.96648120880127
    10. '  ' → logprob: -10.96648120880127

Token 189: ''avoir' (ID: 55863)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9604966640472412
    2. 'for' → logprob: -1.3354966640472412
    3. 'A' → logprob: -1.9604966640472412
    4. 'S' → logprob: -1.9604966640472412
    5. 'but' → logprob: -3.835496664047241
    6. '   ' → logprob: -4.33549690246582
    7. '=' → logprob: -5.21049690246582
    8. ''' → logprob: -5.58549690246582
    9. 'a' → logprob: -5.71049690246582
    10. ''A' → logprob: -6.21049690246582

Token 190: ' ça' (ID: 13590)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.38706114888191223
    2. ' A' → logprob: -1.1370611190795898
    3. '   ' → logprob: -9.51206111907959
    4. ' ' → logprob: -10.13706111907959
    5. '
' → logprob: -11.13706111907959
    6. 'a' → logprob: -11.26206111907959
    7. 'U' → logprob: -12.26206111907959
    8. 'S' → logprob: -12.38706111907959
    9. ' a' → logprob: -12.38706111907959
    10. '    
' → logprob: -12.51206111907959

Token 191: ' ici' (ID: 27994)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2859715521335602
    2. '   ' → logprob: -1.5359715223312378
    3. ' A' → logprob: -3.6609716415405273
    4. ',' → logprob: -5.285971641540527
    5. '    
' → logprob: -6.410971641540527
    6. '
' → logprob: -7.535971641540527
    7. '  
' → logprob: -9.160971641540527
    8. ' ,' → logprob: -9.285971641540527
    9. '  ' → logprob: -9.410971641540527
    10. '   
' → logprob: -9.660971641540527

Token 192: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3858474791049957
    2. 'A' → logprob: -1.2608474493026733
    3. ' A' → logprob: -3.385847568511963
    4. '
' → logprob: -6.510847568511963
    5. ',' → logprob: -7.385847568511963
    6. '    
' → logprob: -7.760847568511963
    7. ' ' → logprob: -8.885847091674805
    8. '  ' → logprob: -9.760847091674805
    9. '  
' → logprob: -10.385847091674805
    10. '    ' → logprob: -11.010847091674805

Token 193: ' bon' (ID: 4846)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0893978476524353
    2. ' A' → logprob: -2.46439790725708
    3. '   ' → logprob: -7.71439790725708
    4. '#' → logprob: -12.589397430419922
    5. '	A' → logprob: -13.214397430419922
    6. '
' → logprob: -13.714397430419922
    7. ' ' → logprob: -14.089397430419922
    8. '    
' → logprob: -14.214397430419922
    9. 'U' → logprob: -14.464397430419922
    10. 'a' → logprob: -14.714397430419922

Token 194: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4209563434123993
    2. 'A' → logprob: -1.2959563732147217
    3. ' A' → logprob: -2.6709563732147217
    4. '
' → logprob: -8.5459566116333
    5. '    
' → logprob: -8.6709566116333
    6. ' ' → logprob: -8.6709566116333
    7. '  ' → logprob: -9.4209566116333
    8. '    ' → logprob: -10.5459566116333
    9. ',' → logprob: -10.9209566116333
    10. '```' → logprob: -11.0459566116333

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18159550428390503
    2. 'A' → logprob: -1.8065955638885498
    3. ' A' → logprob: -6.306595325469971
    4. ' ' → logprob: -11.806595802307129
    5. '	A' → logprob: -12.556595802307129
    6. '    
' → logprob: -12.681595802307129
    7. '
' → logprob: -12.931595802307129
    8. '  ' → logprob: -13.056595802307129
    9. '```' → logprob: -13.306595802307129
    10. ',' → logprob: -13.931595802307129

Token 196: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0007665063603781164
    2. '   ' → logprob: -7.750766277313232
    3. ' A' → logprob: -8.00076675415039
    4. ' ' → logprob: -16.12576675415039
    5. '    
' → logprob: -16.12576675415039
    6. '  ' → logprob: -16.62576675415039
    7. '	A' → logprob: -16.87576675415039
    8. 'try' → logprob: -17.00076675415039
    9. 'a' → logprob: -17.00076675415039
    10. '
' → logprob: -17.12576675415039

Token 197: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03404882550239563
    2. ' =' → logprob: -3.6590487957000732
    3. '=' → logprob: -5.034049034118652
    4. ' ,' → logprob: -6.784049034118652
    5. ' ' → logprob: -10.409049034118652
    6. ',B' → logprob: -10.534049034118652
    7. ',T' → logprob: -12.784049034118652
    8. ',S' → logprob: -12.909049034118652
    9. ',A' → logprob: -12.909049034118652
    10. ',b' → logprob: -13.159049034118652

Token 198: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005547016044147313
    2. ' int' → logprob: -7.50055456161499
    3. '10' → logprob: -14.250555038452148
    4. '[int' → logprob: -15.625555038452148
    5. ' ' → logprob: -15.875555038452148
    6. '100' → logprob: -16.00055503845215
    7. '   ' → logprob: -16.37555503845215
    8. '  ' → logprob: -16.62555503845215
    9. '<int' → logprob: -16.75055503845215
    10. '5' → logprob: -16.75055503845215

Token 199: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. 'next' → logprob: -16.125
    4. ' next' → logprob: -19.125
    5. '[next' → logprob: -19.25
    6. '	next' → logprob: -21.25
    7. ',next' → logprob: -21.5
    8. '.next' → logprob: -22.25
    9. '(n' → logprob: -22.375
    10. ' (' → logprob: -23.125

Token 200: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -9.014684110297821e-06
    2. 'words' → logprob: -11.750008583068848
    3. ' words' → logprob: -14.750008583068848
    4. '(' → logprob: -15.500008583068848
    5. '(tokens' → logprob: -15.625008583068848
    6. ' (' → logprob: -15.625008583068848
    7. ')' → logprob: -16.000009536743164
    8. ')(' → logprob: -18.250009536743164
    9. '(weights' → logprob: -19.000009536743164
    10. '.words' → logprob: -19.375009536743164

Token 201: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.610475480556488
    2. '))' → logprob: -0.860475480556488
    3. '))
' → logprob: -3.485475540161133
    4. ')
' → logprob: -5.860475540161133
    5. '())' → logprob: -8.110475540161133
    6. '()))' → logprob: -9.985475540161133
    7. '())
' → logprob: -10.235475540161133
    8. '))

' → logprob: -10.735475540161133
    9. '()))
' → logprob: -10.735475540161133
    10. '()' → logprob: -11.985475540161133

Token 202: ' #' (ID: 1069)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8871147036552429
    2. '   ' → logprob: -0.8871147036552429
    3. ' B' → logprob: -1.8871147632598877
    4. ' ' → logprob: -4.387114524841309
    5. ')' → logprob: -4.512114524841309
    6. '
' → logprob: -7.887114524841309
    7. ')
' → logprob: -8.387114524841309
    8. '  ' → logprob: -8.512114524841309
    9. '  
' → logprob: -8.762114524841309
    10. '	B' → logprob: -9.262114524841309

Token 203: ' version' (ID: 3926)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0028784610331058502
    2. '(next' → logprob: -6.002878665924072
    3. 'A' → logprob: -8.252878189086914
    4. ' next' → logprob: -8.877878189086914
    5. 'int' → logprob: -13.252878189086914
    6. '[next' → logprob: -14.877878189086914
    7. 'B' → logprob: -15.627878189086914
    8. 'words' → logprob: -15.752878189086914
    9. '(A' → logprob: -16.502878189086914
    10. '0' → logprob: -16.877878189086914

Token 204: ' pas' (ID: 2173)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06272347271442413
    2. ')' → logprob: -3.062723398208618
    3. '()' → logprob: -5.812723636627197
    4. 'B' → logprob: -5.812723636627197
    5. 'A' → logprob: -5.937723636627197
    6. '(' → logprob: -6.062723636627197
    7. ' ' → logprob: -7.062723636627197
    8. '  ' → logprob: -7.687723636627197
    9. ')
' → logprob: -7.687723636627197
    10. '<|end|>' → logprob: -8.562723159790039

Token 205: ' très' (ID: 9412)
  Prédit: 'enc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enc' → logprob: -0.3820037841796875
    2. 'compl' → logprob: -2.1320037841796875
    3. 'termin' → logprob: -2.5070037841796875
    4. 't' → logprob: -4.1320037841796875
    5. 'mal' → logprob: -4.2570037841796875
    6. ' encore' → logprob: -4.3820037841796875
    7. 'fin' → logprob: -4.3820037841796875
    8. '   ' → logprob: -4.5070037841796875
    9. 'tout' → logprob: -5.2570037841796875
    10. ' ' → logprob: -5.3820037841796875

Token 206: ' jolie' (ID: 102974)
  Prédit: 'compl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compl' → logprob: -1.158713698387146
    2. 'com' → logprob: -1.908713698387146
    3. 'optim' → logprob: -2.0337138175964355
    4. 'tr' → logprob: -2.5337138175964355
    5. 'user' → logprob: -2.6587138175964355
    6. 'mal' → logprob: -2.6587138175964355
    7. 'b' → logprob: -3.5337138175964355
    8. 'idi' → logprob: -3.6587138175964355
    9. 'int' → logprob: -4.2837138175964355
    10. 'fin' → logprob: -4.6587138175964355

Token 207: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007782642729580402
    2. '<|end|>' → logprob: -5.757782459259033
    3. ' ' → logprob: -6.132782459259033
    4. 'B' → logprob: -7.007782459259033
    5. ')' → logprob: -7.257782459259033
    6. ' B' → logprob: -7.882782459259033
    7. '  ' → logprob: -9.257782936096191
    8. ',' → logprob: -9.257782936096191
    9. '  
' → logprob: -9.882782936096191
    10. '    
' → logprob: -10.257782936096191

Token 208: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09984737634658813
    2. '   ' → logprob: -2.4748473167419434
    3. ' B' → logprob: -4.599847316741943
    4. ' ' → logprob: -7.224847316741943
    5. ')' → logprob: -10.349847793579102
    6. '  ' → logprob: -11.474847793579102
    7. ',' → logprob: -11.849847793579102
    8. '	B' → logprob: -12.599847793579102
    9. ' ' → logprob: -12.974847793579102
    10. '  
' → logprob: -13.099847793579102

Token 209: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.06049289554357529
    2. ' B' → logprob: -3.310492992401123
    3. '   ' → logprob: -3.810492992401123
    4. ' ' → logprob: -10.060492515563965
    5. '  ' → logprob: -11.810492515563965
    6. ')' → logprob: -12.310492515563965
    7. ',' → logprob: -13.310492515563965
    8. ' ' → logprob: -13.310492515563965
    9. '	B' → logprob: -13.685492515563965
    10. '    ' → logprob: -13.685492515563965

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759411454200745
    2. '=' → logprob: -0.8259411454200745
    3. ' ' → logprob: -13.57594108581543
    4. '=int' → logprob: -15.07594108581543
    5. ' ' → logprob: -16.57594108581543
    6. ')' → logprob: -17.57594108581543
    7. '＝' → logprob: -17.70094108581543
    8. '   ' → logprob: -18.20094108581543
    9. '  ' → logprob: -18.45094108581543
    10. '```' → logprob: -19.07594108581543

Token 211: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023248739540576935
    2. ' int' → logprob: -3.7732486724853516
    3. '   ' → logprob: -12.773248672485352
    4. '=int' → logprob: -16.02324867248535
    5. '(int' → logprob: -16.14824867248535
    6. '<int' → logprob: -16.14824867248535
    7. ' ' → logprob: -16.77324867248535
    8. '	int' → logprob: -17.14824867248535
    9. ':int' → logprob: -17.27324867248535
    10. '  ' → logprob: -17.27324867248535

Token 212: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -4.320199877838604e-07
    2. 'next' → logprob: -15.0
    3. '[next' → logprob: -18.125
    4. ' next' → logprob: -18.375
    5. '(' → logprob: -19.5
    6. ' (' → logprob: -20.875
    7. '	next' → logprob: -22.0
    8. ',next' → logprob: -22.25
    9. '.next' → logprob: -23.0
    10. '(n' → logprob: -24.25

Token 213: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -4.1318875446449965e-05
    2. 'words' → logprob: -10.125041007995605
    3. ' words' → logprob: -14.125041007995605
    4. ')' → logprob: -15.375041007995605
    5. '.words' → logprob: -16.250041961669922
    6. '(tokens' → logprob: -16.500041961669922
    7. ')(' → logprob: -17.625041961669922
    8. '_words' → logprob: -17.875041961669922
    9. '```' → logprob: -18.000041961669922
    10. ' (' → logprob: -19.875041961669922

Token 214: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008123667794279754
    2. '))' → logprob: -7.125812530517578
    3. ' )' → logprob: -12.250812530517578
    4. ')
' → logprob: -13.500812530517578
    5. '())' → logprob: -13.500812530517578
    6. '()' → logprob: -15.375812530517578
    7. '   ' → logprob: -16.125812530517578
    8. ')`' → logprob: -16.875812530517578
    9. ' ' → logprob: -17.000812530517578
    10. ')
' → logprob: -17.125812530517578

Token 215: ' #' (ID: 1069)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.3930189907550812
    2. '   ' → logprob: -1.1430189609527588
    3. ' U' → logprob: -5.143019199371338
    4. ' ' → logprob: -8.51801872253418
    5. '  ' → logprob: -10.01801872253418
    6. '	U' → logprob: -10.39301872253418
    7. '
' → logprob: -11.89301872253418
    8. '    
' → logprob: -12.89301872253418
    9. '    ' → logprob: -14.26801872253418
    10. '       ' → logprob: -14.51801872253418

Token 216: ' idem' (ID: 171310)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.002287164330482483
    2. ' U' → logprob: -6.6272873878479
    3. '   ' → logprob: -7.0022873878479
    4. ' ' → logprob: -10.627286911010742
    5. '	U' → logprob: -11.127286911010742
    6. '  ' → logprob: -11.877286911010742
    7. '    
' → logprob: -13.752286911010742
    8. ' ' → logprob: -14.127286911010742
    9. '#' → logprob: -14.252286911010742
    10. '
' → logprob: -14.502286911010742

Token 217: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5295253396034241
    2. 'U' → logprob: -1.2795252799987793
    3. ' U' → logprob: -2.0295252799987793
    4. ' ' → logprob: -7.529525279998779
    5. '
' → logprob: -7.904525279998779
    6. '	U' → logprob: -7.904525279998779
    7. '  ' → logprob: -9.029525756835938
    8. '    
' → logprob: -9.654525756835938
    9. '```' → logprob: -10.904525756835938
    10. '    ' → logprob: -11.529525756835938

Token 218: '   ' (ID: 271)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.8131436705589294
    2. '   ' → logprob: -0.9381436705589294
    3. ' U' → logprob: -1.8131437301635742
    4. '	U' → logprob: -7.313143730163574
    5. ' ' → logprob: -7.438143730163574
    6. '
' → logprob: -7.813143730163574
    7. '```' → logprob: -9.313143730163574
    8. '  ' → logprob: -9.438143730163574
    9. '    
' → logprob: -9.688143730163574
    10. '``' → logprob: -10.063143730163574

Token 219: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' (adapté à ' U') → logprob: -0.0008632226963527501
    2. ' U' → logprob: -7.250863075256348
    3. '   ' → logprob: -8.875863075256348
    4. '    
' → logprob: -11.625863075256348
    5. '
' → logprob: -13.500863075256348
    6. '	U' → logprob: -13.875863075256348
    7. ' ' → logprob: -14.125863075256348
    8. '  ' → logprob: -15.000863075256348
    9. ' 
' → logprob: -15.750863075256348
    10. '#' → logprob: -15.875863075256348

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132622241973877
    2. '=' → logprob: -1.3132622241973877
    3. ' ' → logprob: -14.938261985778809
    4. 'space' → logprob: -17.063262939453125
    5. ')' → logprob: -17.313262939453125
    6. ' ' → logprob: -17.313262939453125
    7. '＝' → logprob: -17.813262939453125
    8. '  ' → logprob: -18.063262939453125
    9. '_' → logprob: -18.438262939453125
    10. '.' → logprob: -18.563262939453125

Token 221: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.20141461491584778
    2. ' next' → logprob: -1.7014145851135254
    3. 'input' → logprob: -14.076415061950684
    4. '(next' → logprob: -15.201415061950684
    5. ' input' → logprob: -16.326414108276367
    6. '.next' → logprob: -16.826414108276367
    7. '	next' → logprob: -16.826414108276367
    8. ' ' → logprob: -16.951414108276367
    9. 'str' → logprob: -17.326414108276367
    10. '   ' → logprob: -17.826414108276367

Token 222: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -1.3856492842023727e-06
    2. '(tokens' → logprob: -13.750000953674316
    3. '(users' → logprob: -15.375000953674316
    4. 'words' → logprob: -17.875001907348633
    5. '(' → logprob: -18.625001907348633
    6. '(weights' → logprob: -18.875001907348633
    7. '(lines' → logprob: -19.500001907348633
    8. '(points' → logprob: -20.125001907348633
    9. '(values' → logprob: -20.625001907348633
    10. '(word' → logprob: -21.000001907348633

Token 223: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001387009397149086
    2. ')
' → logprob: -9.000138282775879
    3. ' )' → logprob: -11.375138282775879
    4. '   ' → logprob: -13.250138282775879
    5. ')

' → logprob: -13.500138282775879
    6. ')
' → logprob: -14.750138282775879
    7. ')#' → logprob: -15.500138282775879
    8. ')`' → logprob: -16.375139236450195
    9. ' ' → logprob: -17.250139236450195
    10. ').' → logprob: -18.000139236450195

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000518482003826648
    2. 'A' → logprob: -8.250518798828125
    3. '    
' → logprob: -9.125518798828125
    4. '(' → logprob: -10.000518798828125
    5. '
' → logprob: -10.500518798828125
    6. '(A' → logprob: -10.625518798828125
    7. ' A' → logprob: -11.375518798828125
    8. ')' → logprob: -11.625518798828125
    9. ' (' → logprob: -11.625518798828125
    10. '```' → logprob: -12.375518798828125

Token 225: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.024229537695646286
    2. '   ' → logprob: -4.274229526519775
    3. 'result' → logprob: -5.149229526519775
    4. ' A' → logprob: -5.774229526519775
    5. 'a' → logprob: -7.899229526519775
    6. '    
' → logprob: -8.649230003356934
    7. 'res' → logprob: -8.899230003356934
    8. 'results' → logprob: -9.774230003356934
    9. '(A' → logprob: -10.024230003356934
    10. '```' → logprob: -10.024230003356934

Token 226: ' bref' (ID: 119435)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02431098371744156
    2. '   ' → logprob: -4.649311065673828
    3. ' A' → logprob: -4.774311065673828
    4. 'a' → logprob: -5.274311065673828
    5. 'result' → logprob: -8.024311065673828
    6. 'res' → logprob: -9.399311065673828
    7. '(A' → logprob: -9.399311065673828
    8. 'print' → logprob: -9.399311065673828
    9. ' (' → logprob: -10.024311065673828
    10. ' ' → logprob: -10.399311065673828

Token 227: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000712670327629894
    2. '    
' → logprob: -8.250712394714355
    3. 'A' → logprob: -8.500712394714355
    4. '
' → logprob: -9.750712394714355
    5. ',' → logprob: -10.000712394714355
    6. '(' → logprob: -10.250712394714355
    7. '(A' → logprob: -10.875712394714355
    8. ' A' → logprob: -10.875712394714355
    9. '  
' → logprob: -10.875712394714355
    10. '<|end|>' → logprob: -11.500712394714355

Token 228: ' passe' (ID: 22210)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5696365833282471
    2. 'def' → logprob: -1.944636583328247
    3. ':
' → logprob: -2.819636583328247
    4. ')' → logprob: -3.069636583328247
    5. ' =' → logprob: -3.319636583328247
    6. '():
' → logprob: -3.569636583328247
    7. ')
' → logprob: -3.694636583328247
    8. '):
' → logprob: -4.444636344909668
    9. 'A' → logprob: -4.569636344909668
    10. '()
' → logprob: -4.694636344909668

Token 229: ' tout' (ID: 5501)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015287866117432714
    2. 'A' → logprob: -6.626528739929199
    3. ' A' → logprob: -8.8765287399292
    4. '(A' → logprob: -10.7515287399292
    5. ' (' → logprob: -11.7515287399292
    6. '    
' → logprob: -12.1265287399292
    7. 'a' → logprob: -12.2515287399292
    8. '<|end|>' → logprob: -12.2515287399292
    9. '(' → logprob: -12.6265287399292
    10. ',' → logprob: -12.7515287399292

Token 230: ' ça' (ID: 13590)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002000130945816636
    2. '<|end|>' → logprob: -7.377000331878662
    3. ',' → logprob: -8.251999855041504
    4. 'A' → logprob: -8.501999855041504
    5. ')' → logprob: -8.626999855041504
    6. '(A' → logprob: -9.126999855041504
    7. '(' → logprob: -9.251999855041504
    8. ' A' → logprob: -9.251999855041504
    9. '    
' → logprob: -9.376999855041504
    10. '  ' → logprob: -9.626999855041504

Token 231: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006294329650700092
    2. '
' → logprob: -5.756294250488281
    3. '<|end|>' → logprob: -6.756294250488281
    4. ',' → logprob: -7.506294250488281
    5. 'A' → logprob: -7.506294250488281
    6. '    
' → logprob: -8.631294250488281
    7. ')' → logprob: -8.756294250488281
    8. '  
' → logprob: -8.881294250488281
    9. ',A' → logprob: -9.756294250488281
    10. '  ' → logprob: -9.756294250488281

Token 232: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.005246798973530531
    2. 'print' → logprob: -5.255246639251709
    3. ' solve' → logprob: -11.255247116088867
    4. ' print' → logprob: -17.630247116088867
    5. '(s' → logprob: -17.755247116088867
    6. '
' → logprob: -18.130247116088867
    7. 'resolve' → logprob: -18.380247116088867
    8. '```' → logprob: -18.630247116088867
    9. '.solve' → logprob: -18.755247116088867
    10. 'write' → logprob: -18.880247116088867

Token 233: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003589141182601452
    2. '(A' → logprob: -6.628589153289795
    3. 'A' → logprob: -7.128589153289795
    4. '(' → logprob: -7.628589153289795
    5. '    
' → logprob: -8.003588676452637
    6. '
' → logprob: -8.878588676452637
    7. ')' → logprob: -9.503588676452637
    8. ' (' → logprob: -9.628588676452637
    9. ',' → logprob: -9.878588676452637
    10. ' A' → logprob: -10.003588676452637

Token 234: ' et' (ID: 859)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04424695298075676
    2. ' A' → logprob: -3.9192469120025635
    3. '   ' → logprob: -4.419247150421143
    4. 'a' → logprob: -4.544247150421143
    5. 'result' → logprob: -7.919247150421143
    6. '(A' → logprob: -9.169246673583984
    7. 'res' → logprob: -9.544246673583984
    8. ' a' → logprob: -10.044246673583984
    9. ' (' → logprob: -10.294246673583984
    10. 'r' → logprob: -10.669246673583984

Token 235: ' hop' (ID: 10284)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.031331419944763184
    2. 'a' → logprob: -3.6563315391540527
    3. ' A' → logprob: -5.781331539154053
    4. 'result' → logprob: -7.156331539154053
    5. '   ' → logprob: -7.781331539154053
    6. 'print' → logprob: -7.906331539154053
    7. 'res' → logprob: -8.656331062316895
    8. 'r' → logprob: -9.656331062316895
    9. '(A' → logprob: -9.781331062316895
    10. ' a' → logprob: -10.781331062316895

Token 236: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035844627767801285
    2. 'A' → logprob: -3.535844564437866
    3. '
' → logprob: -5.660844802856445
    4. ' A' → logprob: -6.785844802856445
    5. '    
' → logprob: -7.160844802856445
    6. '(A' → logprob: -8.660844802856445
    7. '(' → logprob: -9.285844802856445
    8. '  ' → logprob: -9.660844802856445
    9. '  
' → logprob: -9.660844802856445
    10. '```' → logprob: -9.660844802856445

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019901362247765064
    2. 'A' → logprob: -6.62699031829834
    3. '
' → logprob: -8.62699031829834
    4. '    
' → logprob: -8.62699031829834
    5. 'result' → logprob: -9.37699031829834
    6. '(A' → logprob: -9.50199031829834
    7. '(' → logprob: -10.12699031829834
    8. ' A' → logprob: -10.75199031829834
    9. '```' → logprob: -10.75199031829834
    10. '  
' → logprob: -11.62699031829834

Token 238: ' s' (ID: 265)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04967169091105461
    2. 'result' → logprob: -3.7996716499328613
    3. 'a' → logprob: -3.9246716499328613
    4. 'print' → logprob: -6.174671649932861
    5. ' A' → logprob: -6.299671649932861
    6. 'res' → logprob: -6.549671649932861
    7. '   ' → logprob: -7.549671649932861
    8. 'r' → logprob: -8.29967212677002
    9. 'results' → logprob: -10.04967212677002
    10. ' result' → logprob: -10.42467212677002

Token 239: ',' (ID: 11)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.36704185605049133
    2. 'a' → logprob: -1.617041826248169
    3. 'ol' → logprob: -2.617041826248169
    4. 'out' → logprob: -4.742042064666748
    5. 'res' → logprob: -4.867042064666748
    6. 'result' → logprob: -5.492042064666748
    7. 't' → logprob: -6.117042064666748
    8. 'olutions' → logprob: -6.367042064666748
    9. 'ys' → logprob: -6.617042064666748
    10. '_a' → logprob: -6.617042064666748

Token 240: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.577902615070343
    2. 'b' → logprob: -0.827902615070343
    3. 'r' → logprob: -6.827902793884277
    4. 'a' → logprob: -7.952902793884277
    5. 'u' → logprob: -8.327902793884277
    6. 'p' → logprob: -8.952902793884277
    7. ' t' → logprob: -9.452902793884277
    8. ' b' → logprob: -10.577902793884277
    9. 'd' → logprob: -10.952902793884277
    10. 's' → logprob: -11.202902793884277

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2269580215215683
    2. ' =' → logprob: -1.6019580364227295
    3. ',' → logprob: -6.47695779800415
    4. 'A' → logprob: -13.976958274841309
    5. ' ' → logprob: -13.976958274841309
    6. '=A' → logprob: -14.476958274841309
    7. '=(' → logprob: -14.851958274841309
    8. ')' → logprob: -14.976958274841309
    9. 'a' → logprob: -14.976958274841309
    10. '<|end|>' → logprob: -15.351958274841309

Token 242: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0007101670489646494
    2. ' solve' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.375710487365723
    4. '  ' → logprob: -17.250709533691406
    5. ' ' → logprob: -18.500709533691406
    6. '.solve' → logprob: -19.500709533691406
    7. 'resolve' → logprob: -20.000709533691406
    8. ' ' → logprob: -20.625709533691406
    9. 'sol' → logprob: -20.625709533691406
    10. '    ' → logprob: -20.750709533691406

Token 243: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -11.875007629394531
    3. ' (' → logprob: -15.125007629394531
    4. '(s' → logprob: -17.87500762939453
    5. '(
' → logprob: -18.37500762939453
    6. 'S' → logprob: -19.12500762939453
    7. '((' → logprob: -20.12500762939453
    8. '(C' → logprob: -20.25000762939453
    9. '```' → logprob: -20.62500762939453
    10. '(`' → logprob: -20.75000762939453

Token 244: ',T' (ID: 44428)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037194383330643177
    2. ',S' → logprob: -5.628719329833984
    3. ',T' → logprob: -9.378719329833984
    4. ' ,' → logprob: -10.378719329833984
    5. 'S' → logprob: -13.503719329833984
    6. '(' → logprob: -14.128719329833984
    7. '(S' → logprob: -14.128719329833984
    8. '   ' → logprob: -15.003719329833984
    9. 'T' → logprob: -15.878719329833984
    10. ',
' → logprob: -16.378719329833984

Token 245: ',A' (ID: 59196)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08562841266393661
    2. ',A' → logprob: -2.8356285095214844
    3. ',' → logprob: -3.8356285095214844
    4. ' A' → logprob: -6.335628509521484
    5. ' ,' → logprob: -11.835628509521484
    6. '(A' → logprob: -11.835628509521484
    7. '   ' → logprob: -12.710628509521484
    8. ' ' → logprob: -13.335628509521484
    9. ')' → logprob: -13.585628509521484
    10. '  ' → logprob: -13.960628509521484

Token 246: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.1002345010638237
    2. ',' → logprob: -2.3502345085144043
    3. ' ,' → logprob: -10.850234031677246
    4. ',b' → logprob: -11.725234031677246
    5. ',T' → logprob: -16.600234985351562
    6. ',S' → logprob: -17.350234985351562
    7. 'B' → logprob: -17.350234985351562
    8. ',C' → logprob: -17.475234985351562
    9. ',U' → logprob: -17.600234985351562
    10. ',
' → logprob: -17.725234985351562

Token 247: ',U' (ID: 137799)
  Prédit: ',U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',U' → logprob: -0.023246755823493004
    2. ',' → logprob: -3.7732467651367188
    3. ' ,' → logprob: -13.648246765136719
    4. ',u' → logprob: -18.14824676513672
    5. 'U' → logprob: -18.64824676513672
    6. ',C' → logprob: -18.64824676513672
    7. ',O' → logprob: -18.89824676513672
    8. ',R' → logprob: -19.27324676513672
    9. ',A' → logprob: -19.27324676513672
    10. ',Q' → logprob: -19.27324676513672

Token 248: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007105246186256409
    2. ')
' → logprob: -7.250710487365723
    3. ')
' → logprob: -14.875710487365723
    4. ')

' → logprob: -15.750710487365723
    5. ' )' → logprob: -17.37571144104004
    6. '   ' → logprob: -18.37571144104004
    7. ')return' → logprob: -19.00071144104004
    8. ')`' → logprob: -19.62571144104004
    9. ')#' → logprob: -20.00071144104004
    10. '),' → logprob: -20.50071144104004

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014164801687002182
    2. 'print' → logprob: -4.264164924621582
    3. ' print' → logprob: -14.264164924621582
    4. '```' → logprob: -14.764164924621582
    5. '    
' → logprob: -15.389164924621582
    6. '	print' → logprob: -16.764163970947266
    7. '
' → logprob: -17.264163970947266
    8. '#print' → logprob: -17.514163970947266
    9. '(print' → logprob: -19.514163970947266
    10. '       ' → logprob: -20.264163970947266

Token 250: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011722482740879059
    2. '   ' → logprob: -6.751172065734863
    3. ' print' → logprob: -13.251172065734863
    4. '```' → logprob: -15.251172065734863
    5. '
' → logprob: -16.75117301940918
    6. '#print' → logprob: -18.25117301940918
    7. '	print' → logprob: -18.62617301940918
    8. '    
' → logprob: -18.75117301940918
    9. 'printf' → logprob: -19.12617301940918
    10. 'for' → logprob: -19.37617301940918

Token 251: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006766928127035499
    2. '(f' → logprob: -7.50067663192749
    3. '(' → logprob: -9.125677108764648
    4. 's' → logprob: -11.125677108764648
    5. '(a' → logprob: -18.25067710876465
    6. 'f' → logprob: -18.37567710876465
    7. '("{}' → logprob: -18.50067710876465
    8. '(t' → logprob: -18.75067710876465
    9. '(*' → logprob: -18.75067710876465
    10. '(str' → logprob: -19.00067710876465

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011751054553315043
    2. ',t' → logprob: -6.7511749267578125
    3. ' ,' → logprob: -12.251174926757812
    4. ',end' → logprob: -17.251174926757812
    5. ' t' → logprob: -18.126174926757812
    6. 't' → logprob: -18.501174926757812
    7. ',
' → logprob: -18.626174926757812
    8. ',b' → logprob: -19.001174926757812
    9. ')' → logprob: -19.126174926757812
    10. ',T' → logprob: -20.626174926757812

Token 253: ' end' (ID: 1268)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0002613358374219388
    2. ' t' → logprob: -8.250261306762695
    3. ' ' → logprob: -20.375261306762695
    4. '`t' → logprob: -21.250261306762695
    5. '	t' → logprob: -21.250261306762695
    6. '   ' → logprob: -21.375261306762695
    7. 'b' → logprob: -21.625261306762695
    8. ')' → logprob: -21.625261306762695
    9. '(t' → logprob: -21.875261306762695
    10. 'end' → logprob: -22.250261306762695

Token 254: '="' (ID: 580)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.011307756416499615
    2. '="' → logprob: -4.511307716369629
    3. '=' → logprob: -8.261307716369629
    4. ''' → logprob: -14.136307716369629
    5. '=',' → logprob: -14.886307716369629
    6. '"' → logprob: -15.386307716369629
    7. '=''' → logprob: -15.886307716369629
    8. '=",' → logprob: -17.011308670043945
    9. '=('' → logprob: -18.011308670043945
    10. ' ='' → logprob: -18.011308670043945

Token 255: ' ")
' (ID: 31232)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4400949478149414
    2. ''' → logprob: -1.0650949478149414
    3. ' "' → logprob: -5.315094947814941
    4. ' '' → logprob: -5.690094947814941
    5. ' )' → logprob: -6.440094947814941
    6. ')' → logprob: -7.190094947814941
    7. ' ' → logprob: -7.315094947814941
    8. ' ' → logprob: -11.940094947814941
    9. ' ,' → logprob: -13.065094947814941
    10. ',' → logprob: -13.315094947814941

Token 256: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20142066478729248
    2. 't' → logprob: -1.7014206647872925
    3. ' t' → logprob: -12.451420783996582
    4. ' print' → logprob: -13.451420783996582
    5. '(t' → logprob: -14.076420783996582
    6. '#print' → logprob: -14.576420783996582
    7. '(print' → logprob: -15.326420783996582
    8. '```' → logprob: -15.576420783996582
    9. ' 
' → logprob: -16.826419830322266
    10. '    
' → logprob: -16.826419830322266

Token 257: ' print' (ID: 2123)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00524098752066493
    2. 'print' (adapté à ' print') → logprob: -5.2552409172058105
    3. ' t' → logprob: -11.880241394042969
    4. '(t' → logprob: -16.25524139404297
    5. '   ' → logprob: -16.38024139404297
    6. ' print' → logprob: -16.50524139404297
    7. '#print' → logprob: -18.25524139404297
    8. '`t' → logprob: -18.25524139404297
    9. 'b' → logprob: -18.38024139404297
    10. '  ' → logprob: -18.38024139404297

Token 258: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -9.043078898685053e-05
    2. 't' → logprob: -9.625090599060059
    3. '(' → logprob: -10.625090599060059
    4. ' (' → logprob: -17.375089645385742
    5. '	t' → logprob: -17.500089645385742
    6. '(
' → logprob: -18.000089645385742
    7. ',t' → logprob: -18.625089645385742
    8. '()' → logprob: -19.750089645385742
    9. ' t' → logprob: -20.000089645385742
    10. '('' → logprob: -20.375089645385742

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.000001907348633
    3. '")' → logprob: -15.375001907348633
    4. ' )' → logprob: -16.250001907348633
    5. '<|end|>' → logprob: -16.375001907348633
    6. '```' → logprob: -17.125001907348633
    7. '())' → logprob: -17.375001907348633
    8. '')' → logprob: -17.500001907348633
    9. '),' → logprob: -17.500001907348633
    10. '``' → logprob: -17.750001907348633

Token 260: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: ' ça' (ID: 13590)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' fait' (ID: 7473)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06454555690288544
    2. '
' → logprob: -3.4395456314086914
    3. '<|end|>' → logprob: -3.5645456314086914
    4. ' if' → logprob: -6.939545631408691
    5. '\n' → logprob: -7.689545631408691
    6. '

' → logprob: -8.314545631408691
    7. '<|end|>' → logprob: -9.064545631408691
    8. '  
' → logprob: -9.189545631408691
    9. '#' → logprob: -9.314545631408691
    10. '```' → logprob: -9.564545631408691

Token 263: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02669687382876873
    2. '<|end|>' → logprob: -3.7766969203948975
    3. '\n' → logprob: -7.151696681976318
    4. ' if' → logprob: -7.151696681976318
    5. '  
' → logprob: -7.651696681976318
    6. '
' → logprob: -7.651696681976318
    7. '```' → logprob: -7.651696681976318
    8. '    
' → logprob: -9.026697158813477
    9. '#' → logprob: -9.026697158813477
    10. 'main' → logprob: -10.151697158813477

Token 264: ' boulot' (ID: 155211)
  Prédit: 'job'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'job' → logprob: -0.06689643114805222
    2. '\n' → logprob: -2.941896438598633
    3. 'tr' → logprob: -5.941896438598633
    4. ' job' → logprob: -6.441896438598633
    5. '```' → logprob: -6.941896438598633
    6. 'jeu' → logprob: -7.066896438598633
    7. 'newline' → logprob: -7.191896438598633
    8. 'complete' → logprob: -7.191896438598633
    9. '"\' → logprob: -8.191896438598633
    10. 'su' → logprob: -8.441896438598633

Token 265: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001463299704482779
    2. ' if' → logprob: -9.62514591217041
    3. '<|end|>' → logprob: -10.50014591217041
    4. '
' → logprob: -10.62514591217041
    5. '```' → logprob: -10.75014591217041
    6. '\n' → logprob: -13.12514591217041
    7. '#' → logprob: -13.37514591217041
    8. '  
' → logprob: -13.87514591217041
    9. '\' → logprob: -14.37514591217041
    10. '#!/' → logprob: -14.50014591217041

Token 266: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00033784625702537596
    2. '```' → logprob: -8.250337600708008
    3. ' if' → logprob: -10.000337600708008
    4. '<|end|>' → logprob: -11.125337600708008
    5. '#!/' → logprob: -11.625337600708008
    6. '#' → logprob: -13.250337600708008
    7. '``' → logprob: -13.250337600708008
    8. '  
' → logprob: -13.625337600708008
    9. '    
' → logprob: -14.375337600708008
    10. '\' → logprob: -14.625337600708008

Token 267: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16022726893424988
    2. '__' → logprob: -1.9102272987365723
    3. ' ' → logprob: -13.410226821899414
    4. 'name' → logprob: -14.035226821899414
    5. ' ' → logprob: -15.035226821899414
    6. '_name' → logprob: -15.535226821899414
    7. '_' → logprob: -16.535226821899414
    8. '```' → logprob: -16.535226821899414
    9. '/__' → logprob: -16.910226821899414
    10. '___' → logprob: -17.035226821899414

Token 268: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005869539920240641
    2. '==' → logprob: -5.630869388580322
    3. ' ==' → logprob: -6.255869388580322
    4. '=="' → logprob: -8.25586986541748
    5. '__.__' → logprob: -10.38086986541748
    6. '=='' → logprob: -10.88086986541748
    7. ' __' → logprob: -11.38086986541748
    8. '___' → logprob: -12.38086986541748
    9. '﻿' → logprob: -12.63086986541748
    10. '__["' → logprob: -12.88086986541748

Token 269: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.5822400857578032e-05
    2. '==' → logprob: -10.625025749206543
    3. '__.__' → logprob: -14.500025749206543
    4. '=="' → logprob: -14.875025749206543
    5. ' ==' → logprob: -15.125025749206543
    6. '___' → logprob: -15.625025749206543
    7. '____' → logprob: -16.87502670288086
    8. '__["' → logprob: -17.00002670288086
    9. '__('' → logprob: -17.12502670288086
    10. '__
' → logprob: -17.25002670288086

Token 270: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5117712020874023
    2. ' ==' → logprob: -1.1367712020874023
    3. '__' → logprob: -2.6367712020874023
    4. '=="' → logprob: -5.011771202087402
    5. '=='' → logprob: -6.636771202087402
    6. '=' → logprob: -9.761771202087402
    7. '"' → logprob: -10.636771202087402
    8. '[' → logprob: -10.761771202087402
    9. '===' → logprob: -11.886771202087402
    10. ''' → logprob: -12.011771202087402

Token 271: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12726499140262604
    2. ''' → logprob: -2.127264976501465
    3. '__' → logprob: -8.377264976501465
    4. ' "__' → logprob: -9.252264976501465
    5. ' '__' → logprob: -12.127264976501465
    6. '"user' → logprob: -12.627264976501465
    7. ''user' → logprob: -14.627264976501465
    8. '"name' → logprob: -14.752264976501465
    9. '"type' → logprob: -15.627264976501465
    10. ''"' → logprob: -15.627264976501465

Token 272: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000639169302303344
    2. 'name' → logprob: -7.375638961791992
    3. '__' → logprob: -12.500638961791992
    4. 'built' → logprob: -12.750638961791992
    5. 'm' → logprob: -13.875638961791992
    6. 'file' → logprob: -14.125638961791992
    7. '_main' → logprob: -14.375638961791992
    8. 'guard' → logprob: -14.375638961791992
    9. 'python' → logprob: -14.500638961791992
    10. 'py' → logprob: -14.875638961791992

Token 273: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.314053475856781
    2. '__' → logprob: -1.3140535354614258
    3. '__':
' → logprob: -7.439053535461426
    4. '__["' → logprob: -9.189053535461426
    5. '__.' → logprob: -9.814053535461426
    6. '__.__' → logprob: -11.189053535461426
    7. '__
' → logprob: -11.314053535461426
    8. '__:' → logprob: -11.314053535461426
    9. '__[' → logprob: -12.814053535461426
    10. '__
' → logprob: -13.314053535461426

Token 274: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0660606399178505
    2. ' main' → logprob: -2.8160605430603027
    3. '   ' → logprob: -5.566060543060303
    4. '	main' → logprob: -8.316061019897461
    5. '_main' → logprob: -11.441061019897461
    6. '__' → logprob: -12.816061019897461
    7. '    
' → logprob: -14.941061019897461
    8. '   ' → logprob: -15.566061019897461
    9. ' ' → logprob: -15.816061019897461
    10. ' ' → logprob: -15.816061019897461

Token 275: ' #' (ID: 1069)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -20.75
    4. '   ' → logprob: -22.0
    5. 'import' → logprob: -25.75
    6. '.main' → logprob: -25.875
    7. 'mai' → logprob: -26.5
    8. '(main' → logprob: -26.625
    9. '_main' → logprob: -27.0
    10. 'ma' → logprob: -27.125

Token 276: ' l' (ID: 305)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.619311974034645e-05
    2. ' main' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.875036239624023
    4. 'import' → logprob: -15.125036239624023
    5. '	main' → logprob: -16.250036239624023
    6. ' ' → logprob: -19.750036239624023
    7. '  ' → logprob: -20.500036239624023
    8. '(main' → logprob: -20.750036239624023
    9. '    
' → logprob: -21.875036239624023
    10. '.main' → logprob: -21.875036239624023

Token 277: ''appel' (ID: 172839)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.026212509721517563
    2. '   ' → logprob: -3.901212453842163
    3. ' main' → logprob: -5.526212692260742
    4. 'if' → logprob: -7.526212692260742
    5. ' ' → logprob: -8.526212692260742
    6. '	main' → logprob: -8.526212692260742
    7. 'i' → logprob: -8.901212692260742
    8. 'a' → logprob: -8.901212692260742
    9. 'ain' → logprob: -9.151212692260742
    10. 'm' → logprob: -9.276212692260742

Token 278: ' principal' (ID: 10589)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04937184602022171
    2. ' main' → logprob: -3.0493719577789307
    3. '	main' → logprob: -7.924371719360352
    4. '   ' → logprob: -8.174371719360352
    5. '(main' → logprob: -9.549371719360352
    6. '()' → logprob: -10.299371719360352
    7. '=' → logprob: -11.049371719360352
    8. '_main' → logprob: -11.424371719360352
    9. '.main' → logprob: -12.799371719360352
    10. ':' → logprob: -13.174371719360352

Token 279: ' classique' (ID: 76895)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07387401908636093
    2. ' main' → logprob: -2.948873996734619
    3. '   ' → logprob: -4.573873996734619
    4. '	main' → logprob: -5.448873996734619
    5. '(main' → logprob: -5.573873996734619
    6. '()' → logprob: -8.323874473571777
    7. ' ' → logprob: -10.073874473571777
    8. '_main' → logprob: -10.823874473571777
    9. '(
' → logprob: -10.823874473571777
    10. '(' → logprob: -10.823874473571777

Token 280: '...
' (ID: 4908)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.18763302266597748
    2. '   ' → logprob: -1.9376330375671387
    3. ' main' → logprob: -3.8126330375671387
    4. '	main' → logprob: -5.812633037567139
    5. '(main' → logprob: -6.562633037567139
    6. ' ' → logprob: -9.06263256072998
    7. '()' → logprob: -9.06263256072998
    8. '    
' → logprob: -9.18763256072998
    9. '
' → logprob: -9.68763256072998
    10. '  ' → logprob: -10.06263256072998

Token 281: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.007819432765245438
    2. ' main' → logprob: -5.257819652557373
    3. '   ' → logprob: -6.007819652557373
    4. '	main' → logprob: -9.007819175720215
    5. ' ' → logprob: -15.382819175720215
    6. '  ' → logprob: -16.50782012939453
    7. '```' → logprob: -17.63282012939453
    8. '_main' → logprob: -17.75782012939453
    9. '.main' → logprob: -17.88282012939453
    10. '(main' → logprob: -18.38282012939453

Token 282: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.5048530030981055e-06
    2. ' main' → logprob: -13.500001907348633
    3. '	main' → logprob: -18.750001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '.main' → logprob: -23.750001907348633
    6. '_main' → logprob: -24.500001907348633
    7. 'import' → logprob: -24.625001907348633
    8. '(main' → logprob: -24.625001907348633
    9. 'Main' → logprob: -25.750001907348633
    10. ' ' → logprob: -26.125001907348633

Token 283: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 281
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 167
Précision stricte (1ère position): 24.56%
Précision adaptée (1ère position): 27.76%
Précision (top 10): 59.43%
================================================================================
