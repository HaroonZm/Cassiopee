================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

N = stdin.readline().rstrip()
print("No" if any(c == 'L' for c in N[::2]) or any(c == 'R' for c in N[1::2]) else "Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.0775282010436058
    2. ' argv' → logprob: -2.827528238296509
    3. 'exit' → logprob: -4.57752799987793
    4. ' exit' → logprob: -6.07752799987793
    5. 'stdout' → logprob: -6.45252799987793
    6. 'path' → logprob: -7.82752799987793
    7. 'stdin' → logprob: -7.82752799987793
    8. 'import' → logprob: -8.32752799987793
    9. 'version' → logprob: -9.57752799987793
    10. 'stderr' → logprob: -10.07752799987793

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004543930757790804
    2. '.readline' → logprob: -5.629543781280518
    3. '\n' → logprob: -8.004544258117676
    4. '.
' → logprob: -8.504544258117676
    5. '```' → logprob: -9.129544258117676
    6. 'import' → logprob: -9.504544258117676
    7. '.read' → logprob: -9.504544258117676
    8. '
' → logprob: -10.754544258117676
    9. 'newline' → logprob: -10.754544258117676
    10. 'print' → logprob: -10.754544258117676

Token 5: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03538239002227783
    2. '.readline' → logprob: -3.5353822708129883
    3. '\n' → logprob: -6.035382270812988
    4. '.
' → logprob: -7.410382270812988
    5. '.read' → logprob: -7.660382270812988
    6. ',' → logprob: -7.660382270812988
    7. '```' → logprob: -7.910382270812988
    8. '
' → logprob: -7.910382270812988
    9. 'print' → logprob: -8.160382270812988
    10. 'for' → logprob: -8.660382270812988

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3506868779659271
    2. ' =' → logprob: -1.2256869077682495
    3. ',' → logprob: -7.225687026977539
    4. ' ' → logprob: -7.350687026977539
    5. '.' → logprob: -7.475687026977539
    6. '=int' → logprob: -8.975687026977539
    7. '_' → logprob: -9.850687026977539
    8. ')' → logprob: -9.975687026977539
    9. '>' → logprob: -11.475687026977539
    10. '  ' → logprob: -11.600687026977539

Token 7: ' stdin' (ID: 75143)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00383630208671093
    2. 'int' → logprob: -5.628836154937744
    3. ' ' → logprob: -8.378836631774902
    4. ' input' → logprob: -12.878836631774902
    5. '=int' → logprob: -13.378836631774902
    6. '[int' → logprob: -14.503836631774902
    7. '10' → logprob: -15.003836631774902
    8. '<int' → logprob: -15.128836631774902
    9. '0' → logprob: -15.378836631774902
    10. 'input' → logprob: -15.753836631774902

Token 8: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.021738938987255096
    2. '.' → logprob: -4.0217390060424805
    3. '.read' → logprob: -5.6467390060424805
    4. '.readlines' → logprob: -9.89673900604248
    5. 'read' → logprob: -13.02173900604248
    6. '.Read' → logprob: -14.64673900604248
    7. ' readline' → logprob: -16.146738052368164
    8. '.READ' → logprob: -16.521738052368164
    9. '.buffer' → logprob: -17.021738052368164
    10. '.write' → logprob: -17.021738052368164

Token 9: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.577404797077179
    2. '(' → logprob: -0.827404797077179
    3. '().' → logprob: -7.077404975891113
    4. '(
' → logprob: -7.577404975891113
    5. '()
' → logprob: -10.952404975891113
    6. ')' → logprob: -11.327404975891113
    7. '```' → logprob: -11.452404975891113
    8. '(

' → logprob: -11.577404975891113
    9. '()`' → logprob: -11.702404975891113
    10. '())' → logprob: -11.952404975891113

Token 10: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.004079112783074379
    2. 'rstrip' → logprob: -5.504079341888428
    3. 'read' → logprob: -14.50407886505127
    4. ' strip' → logprob: -15.25407886505127
    5. 'split' → logprob: -18.004079818725586
    6. '_strip' → logprob: -19.129079818725586
    7. 'str' → logprob: -19.879079818725586
    8. '(strip' → logprob: -19.879079818725586
    9. 'replace' → logprob: -20.254079818725586
    10. 'rst' → logprob: -20.379079818725586

Token 11: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3208313584327698
    2. '(' → logprob: -1.320831298828125
    3. '(
' → logprob: -5.195831298828125
    4. '`' → logprob: -7.820831298828125
    5. '"' → logprob: -8.070831298828125
    6. ')' → logprob: -8.195831298828125
    7. ''' → logprob: -8.445831298828125
    8. '(

' → logprob: -8.570831298828125
    9. '()
' → logprob: -8.695831298828125
    10. '().' → logprob: -8.820831298828125

Token 12: 'print' (ID: 1598)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2597552537918091
    2. ' =' → logprob: -2.3847551345825195
    3. ')' → logprob: -3.7597551345825195
    4. '#' → logprob: -4.0097551345825195
    5. '\n' → logprob: -4.1347551345825195
    6. '.' → logprob: -4.1347551345825195
    7. '<|end|>' → logprob: -4.2597551345825195
    8. '```' → logprob: -4.3847551345825195
    9. 'n' → logprob: -5.1347551345825195
    10. '
' → logprob: -5.7597551345825195

Token 13: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006290060933679342
    2. '(N' → logprob: -5.256289958953857
    3. '()' → logprob: -7.256289958953857
    4. '("("' → logprob: -8.506290435791016
    5. '('' → logprob: -9.256290435791016
    6. '(len' → logprob: -11.256290435791016
    7. '(`' → logprob: -11.631290435791016
    8. '("")' → logprob: -11.756290435791016
    9. '(int' → logprob: -12.131290435791016
    10. '((' → logprob: -12.131290435791016

Token 14: 'No' (ID: 3160)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4505555331707001
    2. '{}' → logprob: -2.2005555629730225
    3. '")' → logprob: -2.3255555629730225
    4. '"' → logprob: -2.4505555629730225
    5. '",' → logprob: -3.4505555629730225
    6. 'N' → logprob: -4.200555324554443
    7. '{}".' → logprob: -4.950555324554443
    8. 'Hello' → logprob: -5.575555324554443
    9. '"+' → logprob: -5.950555324554443
    10. 'f' → logprob: -6.700555324554443

Token 15: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.014410060830414295
    2. ')' → logprob: -4.264410018920898
    3. '"' → logprob: -9.389410018920898
    4. 't' → logprob: -9.514410018920898
    5. ')")' → logprob: -10.639410018920898
    6. '')' → logprob: -10.764410018920898
    7. '\n' → logprob: -11.264410018920898
    8. ' ")' → logprob: -11.514410018920898
    9. 'n' → logprob: -11.764410018920898
    10. '!")' → logprob: -12.389410018920898

Token 16: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. '")' → logprob: -10.875021934509277
    3. ',)' → logprob: -13.750021934509277
    4. '))' → logprob: -14.625021934509277
    5. '')' → logprob: -14.750021934509277
    6. '`)' → logprob: -15.000021934509277
    7. ' )' → logprob: -15.125021934509277
    8. ')")' → logprob: -15.375021934509277
    9. ',' → logprob: -15.875021934509277
    10. '!)' → logprob: -16.500022888183594

Token 17: ' any' (ID: 1062)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.39257004857063293
    2. ' not' → logprob: -1.6425700187683105
    3. 'N' → logprob: -3.0175700187683105
    4. ' int' → logprob: -3.2675700187683105
    5. ' len' → logprob: -3.6425700187683105
    6. 'int' → logprob: -4.7675700187683105
    7. 'len' → logprob: -5.6425700187683105
    8. ' '' → logprob: -6.5175700187683105
    9. 'not' → logprob: -6.7675700187683105
    10. ' ' → logprob: -6.8925700187683105

Token 18: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.5638442039489746
    2. '(' → logprob: -0.9388442039489746
    3. '(ch' → logprob: -4.063844203948975
    4. '(char' → logprob: -4.563844203948975
    5. '(int' → logprob: -5.063844203948975
    6. '(not' → logprob: -6.188844203948975
    7. '(x' → logprob: -6.813844203948975
    8. '(i' → logprob: -7.188844203948975
    9. '((' → logprob: -7.313844203948975
    10. '(ord' → logprob: -7.813844203948975

Token 19: ' ==' (ID: 951)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.021083638072013855
    2. ' in' → logprob: -4.146083831787109
    3. '.is' → logprob: -5.896083831787109
    4. 'not' → logprob: -6.646083831787109
    5. ' for' → logprob: -7.896083831787109
    6. 'isdigit' → logprob: -8.52108383178711
    7. ' ==' → logprob: -8.89608383178711
    8. '>' → logprob: -9.27108383178711
    9. ' <' → logprob: -10.27108383178711
    10. '.' → logprob: -10.52108383178711

Token 20: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6556939482688904
    2. ' '' → logprob: -1.5306940078735352
    3. ''N' → logprob: -2.155694007873535
    4. '"' → logprob: -2.905694007873535
    5. ' "' → logprob: -3.530694007873535
    6. ' N' → logprob: -4.280694007873535
    7. '"N' → logprob: -4.405694007873535
    8. 'N' → logprob: -4.655694007873535
    9. ''\' → logprob: -5.905694007873535
    10. ''a' → logprob: -6.155694007873535

Token 21: 'L' (ID: 43)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4918381869792938
    2. '0' → logprob: -2.741838216781616
    3. '7' → logprob: -2.991838216781616
    4. '1' → logprob: -3.116838216781616
    5. 'N' → logprob: -3.241838216781616
    6. '"' → logprob: -3.741838216781616
    7. '4' → logprob: -4.366837978363037
    8. ''N' → logprob: -4.366837978363037
    9. 'x' → logprob: -4.491837978363037
    10. '?' → logprob: -4.491837978363037

Token 22: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0522262379527092
    2. 'for' → logprob: -3.0522263050079346
    3. ' for' → logprob: -6.1772260665893555
    4. '')' → logprob: -7.8022260665893555
    5. 'f' → logprob: -8.552226066589355
    6. 'L' → logprob: -8.552226066589355
    7. ''s' → logprob: -9.427226066589355
    8. ''or' → logprob: -9.552226066589355
    9. ''''' → logprob: -9.677226066589355
    10. 'i' → logprob: -9.677226066589355

Token 23: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.024929184466600418
    2. 'for' → logprob: -3.7749292850494385
    3. ' or' → logprob: -6.774929046630859
    4. ' in' → logprob: -7.774929046630859
    5. 'or' → logprob: -9.89992904663086
    6. ' ' → logprob: -10.14992904663086
    7. ')' → logprob: -11.02492904663086
    8. ' and' → logprob: -12.39992904663086
    9. 'in' → logprob: -12.77492904663086
    10. ' f' → logprob: -13.02492904663086

Token 24: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.012634079903364182
    2. 'c' → logprob: -4.38763427734375
    3. '_' → logprob: -9.38763427734375
    4. ' ' → logprob: -10.76263427734375
    5. ' _' → logprob: -11.26263427734375
    6. '_c' → logprob: -12.38763427734375
    7. '	c' → logprob: -14.63763427734375
    8. ' in' → logprob: -14.63763427734375
    9. ')c' → logprob: -15.01263427734375
    10. ' ' → logprob: -15.38763427734375

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018214326351881027
    2. 'in' → logprob: -4.018214225769043
    3. 'n' → logprob: -10.768214225769043
    4. ' ' → logprob: -11.018214225769043
    5. 'c' → logprob: -12.143214225769043
    6. ')' → logprob: -12.268214225769043
    7. 'i' → logprob: -12.643214225769043
    8. ',' → logprob: -13.268214225769043
    9. 's' → logprob: -13.268214225769043
    10. ' i' → logprob: -13.393214225769043

Token 26: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10026739537715912
    2. ' N' → logprob: -2.3502674102783203
    3. ' ' → logprob: -10.35026741027832
    4. ' range' → logprob: -12.35026741027832
    5. ')' → logprob: -12.47526741027832
    6. 'range' → logprob: -12.97526741027832
    7. 'c' → logprob: -13.16276741027832
    8. 'L' → logprob: -13.35026741027832
    9. 's' → logprob: -13.72526741027832
    10. 'S' → logprob: -13.97526741027832

Token 27: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022124657407402992
    2. ' else' → logprob: -6.3772125244140625
    3. 'else' → logprob: -7.8772125244140625
    4. ' )' → logprob: -9.002212524414062
    5. '))' → logprob: -12.752212524414062
    6. ' ' → logprob: -13.877212524414062
    7. '  ' → logprob: -14.002212524414062
    8. '')' → logprob: -14.752212524414062
    9. '),' → logprob: -15.127212524414062
    10. ')==' → logprob: -15.127212524414062

Token 28: '::' (ID: 742)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35234659910202026
    2. 'range' → logprob: -1.852346658706665
    3. ' range' → logprob: -2.352346658706665
    4. '-' → logprob: -3.727346658706665
    5. ' ' → logprob: -4.977346420288086
    6. ':' → logprob: -5.352346420288086
    7. ':-' → logprob: -5.852346420288086
    8. '0' → logprob: -6.602346420288086
    9. '::-' → logprob: -6.977346420288086
    10. 'len' → logprob: -7.102346420288086

Token 29: '2' (ID: 17)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5778781771659851
    2. '2' → logprob: -0.8278781771659851
    3. '1' → logprob: -6.452877998352051
    4. '3' → logprob: -8.57787799835205
    5. ' -' → logprob: -9.57787799835205
    6. ' ' → logprob: -9.82787799835205
    7. '])' → logprob: -10.70287799835205
    8. ']' → logprob: -11.45287799835205
    9. '−' → logprob: -12.70287799835205
    10. ']))' → logprob: -13.89037799835205

Token 30: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036537862615659833
    2. '])' → logprob: -8.750365257263184
    3. ' )' → logprob: -9.125365257263184
    4. '))' → logprob: -10.625365257263184
    5. 'else' → logprob: -10.625365257263184
    6. ' else' → logprob: -11.375365257263184
    7. '')' → logprob: -11.625365257263184
    8. '`)' → logprob: -11.750365257263184
    9. '})' → logprob: -12.750365257263184
    10. '）' → logprob: -12.750365257263184

Token 31: ' or' (ID: 503)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.008778243325650692
    2. 'else' → logprob: -4.758778095245361
    3. ')' → logprob: -8.75877857208252
    4. ' or' → logprob: -12.50877857208252
    5. ' )' → logprob: -13.25877857208252
    6. ' ' → logprob: -15.38377857208252
    7. '    ' → logprob: -16.008777618408203
    8. ' ' → logprob: -16.008777618408203
    9. '	else' → logprob: -16.008777618408203
    10. ' and' → logprob: -16.133777618408203

Token 32: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.02089918777346611
    2. 'any' → logprob: -3.8958992958068848
    3. ' c' → logprob: -9.145898818969727
    4. ' not' → logprob: -9.520898818969727
    5. ' N' → logprob: -9.770898818969727
    6. ' all' → logprob: -10.270898818969727
    7. ' ' → logprob: -10.770898818969727
    8. '(any' → logprob: -11.270898818969727
    9. ''any' → logprob: -11.520898818969727
    10. '  ' → logprob: -11.895898818969727

Token 33: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.011079294607043266
    2. '(' → logprob: -4.51107931137085
    3. ' (' → logprob: -11.386078834533691
    4. '(
' → logprob: -12.011078834533691
    5. '(not' → logprob: -12.136078834533691
    6. 'c' → logprob: -12.511078834533691
    7. '((' → logprob: -12.886078834533691
    8. '('' → logprob: -15.261078834533691
    9. '```' → logprob: -15.386078834533691
    10. '(s' → logprob: -15.761078834533691

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012761792168021202
    2. '==' → logprob: -4.38776159286499
    3. '=='' → logprob: -9.262762069702148
    4. ' =='' → logprob: -9.512762069702148
    5. ' !=' → logprob: -10.137762069702148
    6. ' ' → logprob: -10.262762069702148
    7. '  ' → logprob: -12.637762069702148
    8. ' ' → logprob: -14.012762069702148
    9. ')' → logprob: -14.137762069702148
    10. '!=' → logprob: -14.387762069702148

Token 35: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5072508454322815
    2. ''L' → logprob: -1.0072507858276367
    3. ''S' → logprob: -4.882250785827637
    4. 'L' → logprob: -4.882250785827637
    5. ' '' → logprob: -5.257250785827637
    6. ''I' → logprob: -6.007250785827637
    7. ''A' → logprob: -6.132250785827637
    8. ''O' → logprob: -6.257250785827637
    9. ''N' → logprob: -6.507250785827637
    10. ''U' → logprob: -7.257250785827637

Token 36: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6363551020622253
    2. 'L' → logprob: -0.7613551020622253
    3. ''' → logprob: -6.386354923248291
    4. 'W' → logprob: -6.636354923248291
    5. ''L' → logprob: -8.51135540008545
    6. 'U' → logprob: -8.88635540008545
    7. '')' → logprob: -9.76135540008545
    8. 'B' → logprob: -9.88635540008545
    9. ')' → logprob: -10.13635540008545
    10. 'A' → logprob: -10.38635540008545

Token 37: ''' (ID: 6)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0465138703584671
    2. 'for' → logprob: -3.171513795852661
    3. ''' → logprob: -5.67151403427124
    4. '	for' → logprob: -10.421513557434082
    5. ')' → logprob: -11.546513557434082
    6. ' in' → logprob: -11.671513557434082
    7. '```' → logprob: -12.046513557434082
    8. '"' → logprob: -12.296513557434082
    9. ' ' → logprob: -12.671513557434082
    10. '`' → logprob: -13.796513557434082

Token 38: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018177567049860954
    2. 'for' → logprob: -4.018177509307861
    3. '	for' → logprob: -11.01817798614502
    4. ' ' → logprob: -12.01817798614502
    5. ')' → logprob: -12.76817798614502
    6. ' in' → logprob: -13.01817798614502
    7. '<|end|>' → logprob: -16.018177032470703
    8. '```' → logprob: -17.268177032470703
    9. '  ' → logprob: -17.518177032470703
    10. '   ' → logprob: -18.018177032470703

Token 39: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.012534607201814651
    2. 'c' → logprob: -4.3875346183776855
    3. ' N' → logprob: -11.512534141540527
    4. 'N' → logprob: -12.137534141540527
    5. ')c' → logprob: -12.637534141540527
    6. ' ' → logprob: -12.887534141540527
    7. ')' → logprob: -13.762534141540527
    8. ' )' → logprob: -13.887534141540527
    9. ' in' → logprob: -14.512534141540527
    10. '(c' → logprob: -15.137534141540527

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08962924033403397
    2. 'in' → logprob: -2.4646291732788086
    3. 'N' → logprob: -8.089629173278809
    4. '=' → logprob: -8.339629173278809
    5. ' ' → logprob: -10.339629173278809
    6. '(N' → logprob: -10.339629173278809
    7. '=N' → logprob: -10.964629173278809
    8. ' N' → logprob: -10.964629173278809
    9. 'c' → logprob: -11.714629173278809
    10. ')' → logprob: -12.089629173278809

Token 41: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.4741535782814026
    2. 'N' → logprob: -0.9741535782814026
    3. ' ' → logprob: -9.974153518676758
    4. ')' → logprob: -11.974153518676758
    5. ' ' → logprob: -11.974153518676758
    6. '[N' → logprob: -12.224153518676758
    7. '[' → logprob: -12.974153518676758
    8. '	N' → logprob: -13.224153518676758
    9. '  ' → logprob: -13.474153518676758
    10. ' )' → logprob: -13.974153518676758

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.315936429426074e-05
    2. '[::-' → logprob: -9.750082969665527
    3. ')' → logprob: -10.875082969665527
    4. ')[' → logprob: -13.250082969665527
    5. '))' → logprob: -14.250082969665527
    6. '```' → logprob: -14.625082969665527
    7. '[-' → logprob: -14.750082969665527
    8. ' [' → logprob: -14.875082969665527
    9. '[[' → logprob: -15.125082969665527
    10. '1' → logprob: -15.250082969665527

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.251091377227567e-05
    2. '::' → logprob: -10.375042915344238
    3. '2' → logprob: -11.875042915344238
    4. '(' → logprob: -13.375042915344238
    5. '::-' → logprob: -14.000042915344238
    6. ' ' → logprob: -14.375042915344238
    7. ':' → logprob: -14.875042915344238
    8. '[' → logprob: -15.125042915344238
    9. '3' → logprob: -15.500042915344238
    10. '```' → logprob: -16.125041961669922

Token 44: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -6.24179228907451e-05
    2. '[' → logprob: -9.875061988830566
    3. ':' → logprob: -12.125061988830566
    4. '::-' → logprob: -13.000061988830566
    5. '::
' → logprob: -13.250061988830566
    6. ' ::' → logprob: -15.250061988830566
    7. '::_' → logprob: -15.375061988830566
    8. '])' → logprob: -15.375061988830566
    9. '::

' → logprob: -15.500061988830566
    10. '::__' → logprob: -16.000062942504883

Token 45: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -12.000009536743164
    3. ']))' → logprob: -13.125009536743164
    4. '])' → logprob: -14.250009536743164
    5. '```' → logprob: -17.000009536743164
    6. '1' → logprob: -17.250009536743164
    7. '3' → logprob: -17.375009536743164
    8. ']' → logprob: -17.500009536743164
    9. '   ' → logprob: -17.750009536743164
    10. '２' → logprob: -17.875009536743164

Token 46: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09283599257469177
    2. '])' → logprob: -2.4678359031677246
    3. '))' → logprob: -5.592835903167725
    4. ' )' → logprob: -9.842836380004883
    5. ')])' → logprob: -9.967836380004883
    6. ']' → logprob: -11.342836380004883
    7. '）' → logprob: -11.717836380004883
    8. '`)' → logprob: -11.842836380004883
    9. ')]' → logprob: -12.217836380004883
    10. ' else' → logprob: -12.467836380004883

Token 47: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027730545843951404
    2. ' else' → logprob: -8.375277519226074
    3. 'else' → logprob: -10.250277519226074
    4. ' )' → logprob: -11.750277519226074
    5. '')' → logprob: -14.125277519226074
    6. ')
' → logprob: -14.250277519226074
    7. '))' → logprob: -14.375277519226074
    8. '")' → logprob: -14.625277519226074
    9. ')`' → logprob: -14.750277519226074
    10. '`)' → logprob: -15.500277519226074

Token 48: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005140658002346754
    2. '"No' → logprob: -6.005140781402588
    3. ' "' → logprob: -6.255140781402588
    4. ''' → logprob: -7.630140781402588
    5. 'Yes' → logprob: -9.63014030456543
    6. '   ' → logprob: -9.63014030456543
    7. ')' → logprob: -9.88014030456543
    8. ' ' → logprob: -10.88014030456543
    9. '")' → logprob: -11.13014030456543
    10. ' Yes' → logprob: -11.38014030456543

Token 49: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0014488027663901448
    2. 'Ye' → logprob: -6.626448631286621
    3. '"' → logprob: -9.751448631286621
    4. ' Yes' → logprob: -10.376448631286621
    5. 'Y' → logprob: -11.001448631286621
    6. 'YES' → logprob: -11.376448631286621
    7. 'No' → logprob: -13.501448631286621
    8. 'Ok' → logprob: -13.876448631286621
    9. 'yes' → logprob: -14.376448631286621
    10. 'OK' → logprob: -15.001448631286621

Token 50: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.690834273584187e-05
    2. ')' → logprob: -10.25003719329834
    3. '"' → logprob: -14.50003719329834
    4. '")
' → logprob: -14.62503719329834
    5. ')")' → logprob: -14.62503719329834
    6. '')' → logprob: -17.875036239624023
    7. '\")' → logprob: -17.875036239624023
    8. '`)' → logprob: -19.000036239624023
    9. '")

' → logprob: -19.125036239624023
    10. '");' → logprob: -19.125036239624023


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 48
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 41.67%
Précision adaptée (1ère position): 41.67%
Précision (top 10): 75.00%
================================================================================
