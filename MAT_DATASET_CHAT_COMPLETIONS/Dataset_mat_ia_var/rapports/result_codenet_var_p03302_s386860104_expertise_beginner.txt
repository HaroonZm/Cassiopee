================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = input().split()
a = int(a)
b = int(b)

if a + b == 15:
    print('+')
elif a * b == 15:
    print('*')
else:
    print('x')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21134252846240997
    2. '+' → logprob: -1.7113425731658936
    3. ',' → logprob: -5.3363423347473145
    4. ' =' → logprob: -5.5863423347473145
    5. ' ' → logprob: -8.086342811584473
    6. ' +' → logprob: -8.586342811584473
    7. '*' → logprob: -8.711342811584473
    8. '+=' → logprob: -8.961342811584473
    9. '.' → logprob: -9.086342811584473
    10. ')' → logprob: -9.586342811584473

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13601942360401154
    2. '0' → logprob: -2.761019468307495
    3. '1' → logprob: -2.886019468307495
    4. '10' → logprob: -4.886019229888916
    5. '5' → logprob: -8.761019706726074
    6. '42' → logprob: -9.511019706726074
    7. 'input' → logprob: -10.011019706726074
    8. '[' → logprob: -10.011019706726074
    9. 'a' → logprob: -10.386019706726074
    10. ' [' → logprob: -10.386019706726074

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020072180777788162
    2. '.' → logprob: -4.520071983337402
    3. '()' → logprob: -4.895071983337402
    4. '(
' → logprob: -7.270071983337402
    5. '().' → logprob: -8.520071983337402
    6. '(.)' → logprob: -8.520071983337402
    7. '('.')' → logprob: -9.520071983337402
    8. ',' → logprob: -9.520071983337402
    9. ''' → logprob: -10.020071983337402
    10. '(

' → logprob: -10.270071983337402

Token 6: 'split' (ID: 13627)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.6593208909034729
    2. 'split' → logprob: -0.7843208909034729
    3. 'strip' → logprob: -4.409320831298828
    4. '.strip' → logprob: -5.034320831298828
    5. '.' → logprob: -5.659320831298828
    6. ',' → logprob: -6.284320831298828
    7. '().' → logprob: -6.909320831298828
    8. '()' → logprob: -7.534320831298828
    9. ' split' → logprob: -8.034320831298828
    10. ''s' → logprob: -9.409320831298828

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28146085143089294
    2. '()' → logprob: -1.4064608812332153
    3. '('' → logprob: -9.656460762023926
    4. '(
' → logprob: -9.906460762023926
    5. '`' → logprob: -10.406460762023926
    6. '(

' → logprob: -10.906460762023926
    7. '```' → logprob: -10.906460762023926
    8. '(`' → logprob: -11.031460762023926
    9. '`()' → logprob: -11.031460762023926
    10. '()`' → logprob: -11.156460762023926

Token 8: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.809756875038147
    2. '.' → logprob: -1.434756875038147
    3. '=' → logprob: -1.434756875038147
    4. ',' → logprob: -3.8097567558288574
    5. ' =' → logprob: -4.184756755828857
    6. '#' → logprob: -4.309756755828857
    7. '```' → logprob: -4.809756755828857
    8. '[' → logprob: -5.434756755828857
    9. '*' → logprob: -6.184756755828857
    10. ' a' → logprob: -6.684756755828857

Token 9: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39897674322128296
    2. '[' → logprob: -1.1489768028259277
    3. ' ' → logprob: -5.648976802825928
    4. '.' → logprob: -5.898976802825928
    5. '<|end|>' → logprob: -6.648976802825928
    6. 'a' → logprob: -6.898976802825928
    7. ' +' → logprob: -7.148976802825928
    8. '*' → logprob: -7.273976802825928
    9. '=' → logprob: -8.27397632598877
    10. '.strip' → logprob: -8.39897632598877

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03924540802836418
    2. 'a' → logprob: -3.914245367050171
    3. ' int' → logprob: -4.03924560546875
    4. ' a' → logprob: -7.66424560546875
    5. 'float' → logprob: -8.16424560546875
    6. 'b' → logprob: -9.66424560546875
    7. 'input' → logprob: -9.78924560546875
    8. ' float' → logprob: -11.41424560546875
    9. '0' → logprob: -12.03924560546875
    10. ' b' → logprob: -12.28924560546875

Token 11: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2528604567050934
    2. '(' → logprob: -1.502860426902771
    3. '('' → logprob: -7.2528605461120605
    4. 'a' → logprob: -9.002860069274902
    5. '()' → logprob: -10.877860069274902
    6. '```' → logprob: -11.002860069274902
    7. '("' → logprob: -11.127860069274902
    8. '(input' → logprob: -11.377860069274902
    9. '("("' → logprob: -11.502860069274902
    10. ')' → logprob: -12.127860069274902

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006613265140913427
    2. '+' → logprob: -7.375661373138428
    3. ')
' → logprob: -11.62566089630127
    4. ' )' → logprob: -11.62566089630127
    5. '<|end|>' → logprob: -12.37566089630127
    6. '+)' → logprob: -12.87566089630127
    7. ')+' → logprob: -13.00066089630127
    8. ' +' → logprob: -13.50066089630127
    9. ')a' → logprob: -13.50066089630127
    10. '*' → logprob: -13.50066089630127

Token 13: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5464875102043152
    2. '+' → logprob: -0.9214875102043152
    3. ' b' → logprob: -4.796487331390381
    4. ' ' → logprob: -4.796487331390381
    5. '<|end|>' → logprob: -6.171487331390381
    6. '+b' → logprob: -6.296487331390381
    7. ' +' → logprob: -7.046487331390381
    8. '*' → logprob: -7.796487331390381
    9. ' 
' → logprob: -8.171487808227539
    10. '+
' → logprob: -8.171487808227539

Token 14: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2283715456724167
    2. ' +' → logprob: -2.1033716201782227
    3. '<|end|>' → logprob: -2.8533716201782227
    4. ' ' → logprob: -4.353371620178223
    5. ')' → logprob: -4.853371620178223
    6. '*' → logprob: -7.478371620178223
    7. '<|end|>' → logprob: -7.478371620178223
    8. '[' → logprob: -7.728371620178223
    9. ' +=' → logprob: -7.978371620178223
    10. '=' → logprob: -8.228371620178223

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4287116229534149
    2. ' int' → logprob: -1.0537116527557373
    3. ' ' → logprob: -12.553711891174316
    4. '<int' → logprob: -13.803711891174316
    5. 'b' → logprob: -13.928711891174316
    6. '=int' → logprob: -14.053711891174316
    7. '(int' → logprob: -14.178711891174316
    8. ' b' → logprob: -14.303711891174316
    9. '   ' → logprob: -14.428711891174316
    10. '0' → logprob: -14.553711891174316

Token 16: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18112069368362427
    2. '(b' → logprob: -1.8061206340789795
    3. '(a' → logprob: -6.806120872497559
    4. 'b' → logprob: -9.931120872497559
    5. ' (' → logprob: -9.931120872497559
    6. '('' → logprob: -10.556120872497559
    7. '("("' → logprob: -10.681120872497559
    8. '```' → logprob: -10.806120872497559
    9. ')' → logprob: -10.931120872497559
    10. '()' → logprob: -11.056120872497559

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '')' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '```' → logprob: -15.500000953674316
    5. '<|end|>' → logprob: -15.875000953674316
    6. '`)' → logprob: -15.875000953674316
    7. ' )' → logprob: -16.250001907348633
    8. '))' → logprob: -16.625001907348633
    9. '+' → logprob: -17.625001907348633
    10. '")' → logprob: -17.875001907348633

Token 18: 'if' (ID: 366)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0643067359924316
    2. 'if' → logprob: -1.0643067359924316
    3. 's' → logprob: -2.4393067359924316
    4. '+' → logprob: -2.5643067359924316
    5. 'i' → logprob: -2.6893067359924316
    6. 'print' → logprob: -3.9393067359924316
    7. 'for' → logprob: -4.064306735992432
    8. 'n' → logprob: -4.564306735992432
    9. 'p' → logprob: -5.064306735992432
    10. 'sum' → logprob: -5.189306735992432

Token 19: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06256616115570068
    2. ' ' → logprob: -3.4375662803649902
    3. 'a' → logprob: -3.5625662803649902
    4. ' ' → logprob: -9.937565803527832
    5. ' b' → logprob: -10.187565803527832
    6. '  ' → logprob: -10.687565803527832
    7. ' (' → logprob: -11.937565803527832
    8. '_a' → logprob: -11.937565803527832
    9. 'b' → logprob: -12.562565803527832
    10. ''' → logprob: -13.312565803527832

Token 20: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09078579396009445
    2. ' <' → logprob: -2.9657857418060303
    3. ' ' → logprob: -4.340785980224609
    4. ' ==' → logprob: -4.465785980224609
    5. ' >=' → logprob: -5.215785980224609
    6. ' <=' → logprob: -5.715785980224609
    7. '>' → logprob: -6.840785980224609
    8. '  ' → logprob: -8.34078598022461
    9. ' !=' → logprob: -8.59078598022461
    10. '<' → logprob: -8.71578598022461

Token 21: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.126929372549057
    2. ' b' → logprob: -2.12692928314209
    3. ' ' → logprob: -13.75192928314209
    4. '1' → logprob: -15.75192928314209
    5. '>b' → logprob: -16.501930236816406
    6. '7' → logprob: -17.876930236816406
    7. '	b' → logprob: -17.876930236816406
    8. ' б' → logprob: -18.251930236816406
    9. '10' → logprob: -18.501930236816406
    10. '<|end|>' → logprob: -18.626930236816406

Token 22: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0377776175737381
    2. '>' → logprob: -3.6627776622772217
    3. ' ==' → logprob: -5.037777423858643
    4. ' <=' → logprob: -6.412777423858643
    5. ' >=' → logprob: -6.787777423858643
    6. ' <' → logprob: -7.162777423858643
    7. ' ' → logprob: -7.287777423858643
    8. '==' → logprob: -7.912777423858643
    9. ' !=' → logprob: -9.6627779006958
    10. '<' → logprob: -10.0377779006958

Token 23: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5414196252822876
    2. '100' → logprob: -1.2914196252822876
    3. ' ' → logprob: -2.291419506072998
    4. '0' → logprob: -3.416419506072998
    5. '3' → logprob: -5.416419506072998
    6. '20' → logprob: -6.666419506072998
    7. '1' → logprob: -6.916419506072998
    8. '15' → logprob: -7.166419506072998
    9. '42' → logprob: -7.666419506072998
    10. '30' → logprob: -8.416419982910156

Token 24: '15' (ID: 1055)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.18551665544509888
    2. '100' → logprob: -2.060516595840454
    3. '0' → logprob: -3.685516595840454
    4. '3' → logprob: -4.935516834259033
    5. ' ' → logprob: -6.310516834259033
    6. '15' → logprob: -6.435516834259033
    7. '20' → logprob: -6.560516834259033
    8. '30' → logprob: -6.810516834259033
    9. '1' → logprob: -7.060516834259033
    10. '7' → logprob: -7.560516834259033

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002342912630410865
    2. ' :' → logprob: -8.375234603881836
    3. ':**' → logprob: -13.125234603881836
    4. ':
' → logprob: -13.875234603881836
    5. '):' → logprob: -15.250234603881836
    6. ' and' → logprob: -15.875234603881836
    7. '>:' → logprob: -16.250234603881836
    8. ' or' → logprob: -16.250234603881836
    9. '：' → logprob: -17.750234603881836
    10. '':'' → logprob: -17.875234603881836

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17361082136631012
    2. ' print' → logprob: -2.4236109256744385
    3. ':' → logprob: -2.7986109256744385
    4. 'print' → logprob: -5.798610687255859
    5. ' ' → logprob: -6.298610687255859
    6. '\n' → logprob: -6.423610687255859
    7. '	print' → logprob: -6.798610687255859
    8. '    ' → logprob: -7.548610687255859
    9. '\' → logprob: -8.17361068725586
    10. '    
' → logprob: -8.29861068725586

Token 27: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.03531081974506378
    2. 'print' (adapté à ' print') → logprob: -3.410310745239258
    3. '   ' → logprob: -6.410310745239258
    4. '    ' → logprob: -11.535310745239258
    5. '	print' → logprob: -12.285310745239258
    6. ' pass' → logprob: -12.660310745239258
    7. ' ' → logprob: -14.035310745239258
    8. '       ' → logprob: -15.785310745239258
    9. '```' → logprob: -16.035310745239258
    10. '.print' → logprob: -16.535310745239258

Token 28: '('+' (ID: 108514)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04112299159169197
    2. '("' → logprob: -3.2911229133605957
    3. '('' → logprob: -5.916122913360596
    4. '("("' → logprob: -8.291123390197754
    5. '(True' → logprob: -10.041123390197754
    6. '(a' → logprob: -10.416123390197754
    7. '()' → logprob: -10.541123390197754
    8. '("")' → logprob: -11.291123390197754
    9. '"' → logprob: -11.666123390197754
    10. '((' → logprob: -12.916123390197754

Token 29: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.13511231541633606
    2. ')' → logprob: -2.1351122856140137
    3. '15' → logprob: -5.010112285614014
    4. ''' → logprob: -7.260112285614014
    5. '")' → logprob: -7.760112285614014
    6. '''' → logprob: -8.510112762451172
    7. ''''' → logprob: -10.885112762451172
    8. '',' → logprob: -11.135112762451172
    9. 'a' → logprob: -11.385112762451172
    10. '#' → logprob: -11.385112762451172

Token 30: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.003929625730961561
    2. 'else' → logprob: -5.878929615020752
    3. ' elif' → logprob: -6.878929615020752
    4. 'el' → logprob: -10.00393009185791
    5. ' else' → logprob: -11.62893009185791
    6. 'e' → logprob: -11.87893009185791
    7. ' ' → logprob: -11.87893009185791
    8. ':' → logprob: -12.25393009185791
    9. '```' → logprob: -12.25393009185791
    10. '\n' → logprob: -12.50393009185791

Token 31: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.348699688911438
    2. 'a' → logprob: -1.223699688911438
    3. ' ' → logprob: -8.473699569702148
    4. '(a' → logprob: -11.598699569702148
    5. ' (' → logprob: -12.098699569702148
    6. '(' → logprob: -12.348699569702148
    7. ''' → logprob: -12.348699569702148
    8. '  ' → logprob: -12.598699569702148
    9. '	a' → logprob: -12.723699569702148
    10. '   ' → logprob: -12.848699569702148

Token 32: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2544398605823517
    2. '-' → logprob: -1.7544398307800293
    3. '*' → logprob: -3.6294398307800293
    4. ' *' → logprob: -4.004439830780029
    5. ' ' → logprob: -5.879439830780029
    6. '+' → logprob: -6.504439830780029
    7. ' +' → logprob: -6.629439830780029
    8. ' ==' → logprob: -7.129439830780029
    9. '==' → logprob: -8.879440307617188
    10. '%' → logprob: -9.754440307617188

Token 33: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.693709135055542
    2. ' b' → logprob: -0.693709135055542
    3. ' ' → logprob: -8.068709373474121
    4. '<|end|>' → logprob: -8.318709373474121
    5. '<|end|>' → logprob: -13.443709373474121
    6. '	b' → logprob: -14.193709373474121
    7. '  ' → logprob: -14.443709373474121
    8. ' б' → logprob: -14.943709373474121
    9. '>b' → logprob: -15.193709373474121
    10. ')b' → logprob: -15.443709373474121

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03373479098081589
    2. '==' → logprob: -3.4087347984313965
    3. ' ' → logprob: -9.908734321594238
    4. '=' → logprob: -11.408734321594238
    5. ' =' → logprob: -11.408734321594238
    6. ' <=' → logprob: -12.408734321594238
    7. ' >' → logprob: -12.783734321594238
    8. '>' → logprob: -13.408734321594238
    9. ' <' → logprob: -13.408734321594238
    10. ')' → logprob: -13.658734321594238

Token 35: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.005327793303877115
    2. ' ' → logprob: -5.2553277015686035
    3. 'a' → logprob: -9.755328178405762
    4. '0' → logprob: -12.005328178405762
    5. 'b' → logprob: -12.380328178405762
    6. '100' → logprob: -12.630328178405762
    7. '1' → logprob: -12.880328178405762
    8. '30' → logprob: -12.880328178405762
    9. '45' → logprob: -12.880328178405762
    10. '   ' → logprob: -13.005328178405762

Token 36: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0007445912342518568
    2. ' ' → logprob: -7.750744819641113
    3. '1' → logprob: -8.375744819641113
    4. 'a' → logprob: -9.875744819641113
    5. 'b' → logprob: -10.875744819641113
    6. '   ' → logprob: -12.125744819641113
    7. '  ' → logprob: -13.750744819641113
    8. '0' → logprob: -13.875744819641113
    9. '10' → logprob: -14.375744819641113
    10. '5' → logprob: -14.500744819641113

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.723973582556937e-05
    2. ' :' → logprob: -11.750017166137695
    3. ':
' → logprob: -11.875017166137695
    4. '):' → logprob: -13.125017166137695
    5. ':**' → logprob: -15.750017166137695
    6. '   ' → logprob: -16.750017166137695
    7. '>:' → logprob: -17.000017166137695
    8. '():' → logprob: -17.500017166137695
    9. ')' → logprob: -18.375017166137695
    10. '':' → logprob: -18.375017166137695

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005172899691388011
    2. '<|end|>' → logprob: -8.375516891479492
    3. 'print' → logprob: -8.875516891479492
    4. ' print' → logprob: -9.750516891479492
    5. ':' → logprob: -10.500516891479492
    6. '    ' → logprob: -11.375516891479492
    7. '       ' → logprob: -11.750516891479492
    8. '```' → logprob: -11.875516891479492
    9. ' ' → logprob: -12.000516891479492
    10. ')' → logprob: -12.000516891479492

Token 39: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2070663869380951
    2. 'print' (adapté à ' print') → logprob: -1.7070664167404175
    3. ' print' → logprob: -5.207066535949707
    4. '```' → logprob: -9.582066535949707
    5. '	print' → logprob: -9.707066535949707
    6. '       ' → logprob: -11.332066535949707
    7. '    ' → logprob: -12.332066535949707
    8. ' ' → logprob: -12.957066535949707
    9. '   ' → logprob: -12.957066535949707
    10. '``' → logprob: -13.082066535949707

Token 40: '('*' (ID: 74916)
  Prédit: '('*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('*' → logprob: -0.1167096272110939
    2. '('+' → logprob: -2.4917097091674805
    3. '('' → logprob: -3.8667097091674805
    4. '(' → logprob: -5.8667097091674805
    5. '('-' → logprob: -5.9917097091674805
    6. ''*' → logprob: -7.1167097091674805
    7. '('/')' → logprob: -8.61670970916748
    8. '('.')' → logprob: -10.11670970916748
    9. ''' → logprob: -10.74170970916748
    10. ''+' → logprob: -10.86670970916748

Token 41: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.048781868070364
    2. ')' → logprob: -3.0487818717956543
    3. ''' → logprob: -8.923781394958496
    4. '')
' → logprob: -10.173781394958496
    5. '*' → logprob: -11.923781394958496
    6. '")' → logprob: -12.173781394958496
    7. '+')' → logprob: -12.923781394958496
    8. '()' → logprob: -13.173781394958496
    9. ')
' → logprob: -13.923781394958496
    10. '`)' → logprob: -14.048781394958496

Token 42: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.004496107809245586
    2. 'elif' → logprob: -5.504496097564697
    3. ' else' → logprob: -8.254496574401855
    4. '\n' → logprob: -9.504496574401855
    5. '```' → logprob: -10.379496574401855
    6. '_else' → logprob: -11.254496574401855
    7. 'e' → logprob: -11.379496574401855
    8. 'el' → logprob: -12.254496574401855
    9. '#else' → logprob: -12.254496574401855
    10. '<|end|>' → logprob: -12.754496574401855

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1517960956552997e-05
    2. ':
' → logprob: -12.000011444091797
    3. ' :' → logprob: -12.500011444091797
    4. '   ' → logprob: -13.500011444091797
    5. '():' → logprob: -16.750011444091797
    6. ':**' → logprob: -17.375011444091797
    7. '):' → logprob: -17.875011444091797
    8. ':def' → logprob: -18.000011444091797
    9. ':
' → logprob: -18.625011444091797
    10. ':return' → logprob: -18.750011444091797

Token 44: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2064274400472641
    2. 'print' → logprob: -2.3314273357391357
    3. ''-' → logprob: -2.5814273357391357
    4. '15' → logprob: -5.206427574157715
    5. ''' → logprob: -6.331427574157715
    6. '(' → logprob: -6.956427574157715
    7. '   ' → logprob: -6.956427574157715
    8. '=' → logprob: -7.206427574157715
    9. '"-' → logprob: -7.581427574157715
    10. ' ' → logprob: -7.581427574157715

Token 45: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07945401221513748
    2. '-' → logprob: -2.579453945159912
    3. ''-' → logprob: -8.32945442199707
    4. '15' → logprob: -8.45445442199707
    5. ' print' → logprob: -10.07945442199707
    6. '!' → logprob: -11.70445442199707
    7. '-)' → logprob: -11.95445442199707
    8. 'if' → logprob: -12.07945442199707
    9. '"-' → logprob: -12.45445442199707
    10. '-=' → logprob: -12.45445442199707

Token 46: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3145294487476349
    2. '(' → logprob: -1.3145294189453125
    3. '()' → logprob: -7.1895294189453125
    4. '("("' → logprob: -8.314529418945312
    5. '('.')' → logprob: -9.689529418945312
    6. '('*' → logprob: -10.439529418945312
    7. '('?' → logprob: -10.564529418945312
    8. '(None' → logprob: -10.814529418945312
    9. '('-' → logprob: -10.814529418945312
    10. '("' → logprob: -10.814529418945312

Token 47: 'x' (ID: 87)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.07230126112699509
    2. '-' → logprob: -3.197301149368286
    3. '0' → logprob: -4.572301387786865
    4. '?)' → logprob: -4.572301387786865
    5. '-)' → logprob: -5.572301387786865
    6. '!' → logprob: -6.072301387786865
    7. '=' → logprob: -7.072301387786865
    8. '')' → logprob: -8.197300910949707
    9. ')' → logprob: -8.447300910949707
    10. 'None' → logprob: -8.697300910949707

Token 48: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0009356398368254304
    2. ')' → logprob: -7.0009355545043945
    3. ''' → logprob: -11.500935554504395
    4. 'x' → logprob: -11.625935554504395
    5. '*' → logprob: -13.125935554504395
    6. '')
' → logprob: -14.000935554504395
    7. '?' → logprob: -14.500935554504395
    8. '")' → logprob: -14.750935554504395
    9. '}')' → logprob: -15.125935554504395
    10. '!' → logprob: -15.250935554504395


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 46
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 32.61%
Précision adaptée (1ère position): 34.78%
Précision (top 10): 80.43%
================================================================================
