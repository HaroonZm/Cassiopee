================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Importation de modules standards Python qui offrent des fonctions et structures de données communes
from collections import defaultdict, deque, Counter  # defaultdict: dictionnaire avec valeur par défaut; deque: file double; Counter: compteur d'éléments
from heapq import heappush, heappop, heapify        # Fonctions pour la manipulation de files de priorité (tas binaire min)
import math                                         # Module mathématique standard pour les fonctions comme sqrt, log, etc.
import bisect                                       # Permet l'insertion et la recherche efficace dans des listes triées
import random                                       # Fournit des fonctions pour générer des nombres pseudo-aléatoires
from itertools import permutations, accumulate, combinations, product  # Fonctions pour créer/générer des itérateurs complexes
import sys                                          # Accès à certaines variables/fonctions système, comme stdin
import string                                       # Accès à des chaînes de caractères courantes (ascii_letters, digits, etc.)
from bisect import bisect_left, bisect_right         # Fonctions pour trouver la position d'insertion à gauche/droite dans une liste triée
from math import factorial, ceil, floor              # Import direct de certaines fonctions mathématiques : factorielle, plafond, plancher
from operator import mul                            # Fonction pour la multiplication (utilisée dans reduce, par ex)
from functools import reduce                        # Fonction pour appliquer une opération cumulée sur un itérable

# Modification de la limite maximale de récursion, c'est à dire le nombre d'appels imbriqués autorisé avant une erreur
# 2 147 483 647 est la valeur maximale d'un entier signé sur 32 bits (large limite pour ne plus jamais recevoir RecursionError)
sys.setrecursionlimit(2147483647)

# Affectation d'une valeur très grande qui jouera probablement le rôle d'infini (INF = 10^13)
INF = 10 ** 13

# Définition de fonctions utilitaires concises pour lire l'entrée standard (sys.stdin), utiles pour les compétitions
def LI():
    # Lit une ligne depuis l'entrée standard, divise la chaîne en éléments via split() et convertit chaque élément en entier
    return list(map(int, sys.stdin.readline().split()))
def I():
    # Lit une ligne depuis l'entrée standard et la convertit en entier
    return int(sys.stdin.readline())
def LS():
    # Lit une ligne depuis l'entrée standard (au format binaire), supprime les espaces en fin de ligne,
    # décode en UTF-8, et coupe la chaîne en une liste de mots
    return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()
def S():
    # Lit une ligne depuis l'entrée standard (en binaire), supprime les espaces en fin, et la décode en UTF-8
    return sys.stdin.buffer.readline().rstrip().decode('utf-8')
def IR(n):
    # Lis n entiers (un par ligne) et les retourne sous forme de liste
    return [I() for i in range(n)]
def LIR(n):
    # Lis n lignes d'entiers et retourne une liste de listes d'entiers
    return [LI() for i in range(n)]
def SR(n):
    # Lis n lignes de texte et retourne une liste de chaînes
    return [S() for i in range(n)]
def LSR(n):
    # Lis n lignes, chacune transformée en liste de mots (split) et retourne une liste de telles listes
    return [LS() for i in range(n)]
def SRL(n):
    # Lis n lignes, dont chacune est convertie en liste de caractères (chaque caractère devient un élément)
    return [list(S()) for i in range(n)]
def MSRL(n):
    # Lis n lignes de chiffres sous forme de texte, transforme chaque caractère de chaque ligne en entier,
    # puis retourne la liste de listes résultantes
    return [[int(j) for j in list(S())] for i in range(n)]

# Déclaration du modulo à utiliser pour les calculs (modulo très courant en compétitions, ici 10^9+7 : nombre premier grand)
mod = 10 ** 9 + 7

# Lecture d'un entier n depuis l'entrée standard ; variable correspondant typiquement à la taille des données du problème
n = I()

# Lecture d'une liste d'entiers H depuis l'entrée standard,
# puis ajout de la valeur 1 à la fin de la liste (cela protège souvent contre les débordements de boucle ou simplifie la DP)
H = LI() + [1]

# Initialisation de la liste dp, de taille n+1, dont chaque cellule est remplie avec la valeur 1.
# dp jouera le rôle de tableau de programmation dynamique pour stocker les résultats intermédiaires
dp = [1] * (n + 1)

# Boucle principale qui itère sur chaque indice k de 0 à n-1 inclus (n itérations)
for k in range(n):
    # Création d'un nouveau tableau new_dp de taille n+1 rempli de zéros,
    # qui recevra les nouveaux états de dp à l'étape k+1
    new_dp = [0] * (n + 1)
    # Boucle interne sur l'indice i allant de 0 à n inclus
    for i in range(n + 1):
        # Vérification de la première condition : si H[i] > H[k]
        if H[i] > H[k]:
            # La nouvelle valeur de new_dp[i] est alors dp[k] multiplié par 2
            new_dp[i] = dp[k] * 2
        # Sinon, vérification si H[k - 1] <= H[i] (attention: pour k=0, H[-1] correspond à H[n] car Python autorise les indices négatifs)
        elif H[k - 1] <= H[i]:
            # Ici, on multiplie dp[i] par 2 puis par une puissance de 2 :
            # l'exposant correspond à la différence H[k] - H[i] ; la multiplication se fait modulo mod
            new_dp[i] = dp[i] * 2 * pow(2, H[k] - H[i], mod)
        # Sinon, si H[k - 1] > H[k]
        elif H[k - 1] > H[k]:
            # On ajoute dp[i] et dp[k], résultat stocké dans new_dp[i]
            new_dp[i] = dp[i] + dp[k]
        # Sinon (toutes les autres situations)
        else:
            # On additionne dp[i] et dp[k - 1], puis multiplie par une puissance de 2 :
            # Exposant : différence H[k] - H[k-1] ; calcul modulo mod
            new_dp[i] = (dp[i] + dp[k - 1]) * pow(2, H[k] - H[k - 1], mod)
        # Résultat modulo mod pour rester dans l'intervalle des entiers supportés
        new_dp[i] %= mod
    # Mise à jour de dp par le nouvel état new_dp calculé à cette itération
    dp = new_dp

# Affichage du dernier élément de dp (dp[-1]), qui représente le résultat final recherché après toutes les itérations/prix
print(dp[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Import' (ID: 19998)
  → Token d'amorce (pas de prédiction)

Token 2: 'ation' (ID: 387)
  → Token d'amorce (pas de prédiction)

Token 3: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07061714679002762
    2. 'import' → logprob: -3.695617198944092
    3. '```' → logprob: -3.820617198944092
    4. '_' → logprob: -4.195617198944092
    5. '`' → logprob: -6.570617198944092
    6. ' ' → logprob: -6.695617198944092
    7. '.' → logprob: -6.820617198944092
    8. '#' → logprob: -7.695617198944092
    9. ',' → logprob: -7.820617198944092
    10. '=' → logprob: -8.195616722106934

Token 4: ' modules' (ID: 23893)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.0334722176194191
    2. ' ' → logprob: -4.783472061157227
    3. ' la' → logprob: -4.908472061157227
    4. ' os' → logprob: -5.033472061157227
    5. ' numpy' → logprob: -5.033472061157227
    6. ' des' → logprob: -7.408472061157227
    7. 'p' → logprob: -7.533472061157227
    8. ' ' → logprob: -7.783472061157227
    9. 'os' → logprob: -8.033472061157227
    10. ' flask' → logprob: -8.283472061157227

Token 5: ' standards' (ID: 13853)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14563250541687012
    2. '```' → logprob: -2.02063250541687
    3. '\n' → logprob: -7.020632743835449
    4. '#' → logprob: -7.520632743835449
    5. '``' → logprob: -7.645632743835449
    6. '\' → logprob: -7.770632743835449
    7. ' import' → logprob: -8.52063274383545
    8. '`' → logprob: -8.89563274383545
    9. ':' → logprob: -8.89563274383545
    10. ''import' → logprob: -9.89563274383545

Token 6: ' Python' (ID: 26534)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.011623956263065338
    2. '```' → logprob: -4.511623859405518
    3. '\n' → logprob: -8.011624336242676
    4. '``' → logprob: -9.386624336242676
    5. '\' → logprob: -10.011624336242676
    6. '#' → logprob: -10.011624336242676
    7. ' import' → logprob: -10.136624336242676
    8. ''import' → logprob: -11.636624336242676
    9. '`' → logprob: -13.011624336242676
    10. ':' → logprob: -13.136624336242676

Token 7: ' qui' (ID: 2780)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.04490888863801956
    2. '```' → logprob: -3.1699090003967285
    3. '\n' → logprob: -7.4199090003967285
    4. '#' → logprob: -7.5449090003967285
    5. ' import' → logprob: -8.41990852355957
    6. '``' → logprob: -8.41990852355957
    7. '\' → logprob: -8.54490852355957
    8. '`' → logprob: -10.16990852355957
    9. '
' → logprob: -10.66990852355957
    10. ''import' → logprob: -11.04490852355957

Token 8: ' offrent' (ID: 117511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.255531668663025
    2. 's' → logprob: -1.380531668663025
    3. ' permettent' → logprob: -2.0055317878723145
    4. ' permet' → logprob: -2.5055317878723145
    5. ' sont' → logprob: -2.7555317878723145
    6. ' s' → logprob: -2.8805317878723145
    7. ' ' → logprob: -3.5055317878723145
    8. ' vont' → logprob: -3.6305317878723145
    9. ' space' → logprob: -4.1305317878723145
    10. ' ﻿' → logprob: -5.2555317878723145

Token 9: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23227791488170624
    2. 's' → logprob: -2.4822778701782227
    3. ' ' → logprob: -3.8572778701782227
    4. ' un' → logprob: -4.107277870178223
    5. ',' → logprob: -4.107277870178223
    6. ':' → logprob: -4.607277870178223
    7. ' diverses' → logprob: -4.732277870178223
    8. ' l' → logprob: -4.982277870178223
    9. ' les' → logprob: -4.982277870178223
    10. 'des' → logprob: -5.357277870178223

Token 10: ' fonctions' (ID: 87283)
  Prédit: ' fonctionnalités'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctionnalités' → logprob: -0.14756500720977783
    2. 'fon' → logprob: -2.5225648880004883
    3. ' fonctions' → logprob: -3.3975648880004883
    4. 'fonction' → logprob: -4.397564888000488
    5. ' outils' → logprob: -5.397564888000488
    6. ' fonctionnal' → logprob: -5.647564888000488
    7. ' functionalities' → logprob: -7.147564888000488
    8. ' fonction' → logprob: -7.272564888000488
    9. ' fon' → logprob: -8.272564888000488
    10. 'out' → logprob: -8.522564888000488

Token 11: ' et' (ID: 859)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9205132126808167
    2. ',' → logprob: -1.0455131530761719
    3. ' et' → logprob: -3.170513153076172
    4. '```' → logprob: -3.295513153076172
    5. 's' → logprob: -3.420513153076172
    6. ' ' → logprob: -3.420513153076172
    7. ' import' → logprob: -3.920513153076172
    8. ' ,' → logprob: -4.170513153076172
    9. ' supplémentaires' → logprob: -4.670513153076172
    10. ' utiles' → logprob: -4.670513153076172

Token 12: ' structures' (ID: 21207)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8523097038269043
    2. 'des' → logprob: -0.9773097038269043
    3. ' classes' → logprob: -2.1023097038269043
    4. 'classes' → logprob: -3.1023097038269043
    5. 'd' → logprob: -4.602309703826904
    6. ' d' → logprob: -5.602309703826904
    7. 'class' → logprob: -5.727309703826904
    8. 'de' → logprob: -5.977309703826904
    9. ' de' → logprob: -6.102309703826904
    10. '   ' → logprob: -6.727309703826904

Token 13: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2260962277650833
    2. '```' → logprob: -2.4760961532592773
    3. 'import' → logprob: -2.9760961532592773
    4. ' _' → logprob: -3.8510961532592773
    5. ' ' → logprob: -4.351096153259277
    6. ' de' → logprob: -4.726096153259277
    7. ',' → logprob: -5.476096153259277
    8. ' ```' → logprob: -6.226096153259277
    9. '_util' → logprob: -6.351096153259277
    10. ' standard' → logprob: -6.351096153259277

Token 14: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05651097744703293
    2. ' données' → logprob: -2.9315109252929688
    3. 'don' → logprob: -7.181510925292969
    4. 'base' → logprob: -7.556510925292969
    5. 'bases' → logprob: -8.931510925292969
    6. 'data' → logprob: -9.556510925292969
    7. 'import' → logprob: -10.056510925292969
    8. '```' → logprob: -10.306510925292969
    9. ' base' → logprob: -11.431510925292969
    10. 'programm' → logprob: -11.556510925292969

Token 15: ' communes' (ID: 93157)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06610126048326492
    2. '```' → logprob: -2.941101312637329
    3. ' import' → logprob: -4.81610107421875
    4. ',' → logprob: -6.69110107421875
    5. '`' → logprob: -7.56610107421875
    6. '.' → logprob: -8.19110107421875
    7. ' ```' → logprob: -8.56610107421875
    8. ':' → logprob: -9.06610107421875
    9. '``' → logprob: -9.44110107421875
    10. ''import' → logprob: -9.44110107421875

Token 16: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.02410653978586197
    2. '```' → logprob: -3.774106502532959
    3. ' import' → logprob: -7.899106502532959
    4. '\' → logprob: -9.024106979370117
    5. '``' → logprob: -9.149106979370117
    6. '\n' → logprob: -9.274106979370117
    7. ',' → logprob: -9.899106979370117
    8. '`' → logprob: -10.274106979370117
    9. '.' → logprob: -10.774106979370117
    10. ''import' → logprob: -11.274106979370117

Token 17: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.039964400231838226
    2. '```' → logprob: -3.414964437484741
    3. '.' → logprob: -6.289964199066162
    4. ',' → logprob: -6.539964199066162
    5. ' import' → logprob: -6.789964199066162
    6. '\n' → logprob: -7.289964199066162
    7. '\' → logprob: -7.789964199066162
    8. ':' → logprob: -8.66496467590332
    9. 'from' → logprob: -9.41496467590332
    10. '`' → logprob: -9.53996467590332

Token 18: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.3401443362236023
    2. ' ' → logprob: -1.840144395828247
    3. ' os' → logprob: -2.590144395828247
    4. ' datetime' → logprob: -3.715144395828247
    5. ' math' → logprob: -4.215144157409668
    6. ' sklearn' → logprob: -5.715144157409668
    7. ' space' → logprob: -6.090144157409668
    8. ' itertools' → logprob: -6.215144157409668
    9. ' sys' → logprob: -6.590144157409668
    10. ' functools' → logprob: -6.965144157409668

Token 19: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1797735095024109
    2. 'import' → logprob: -1.8047735691070557
    3. ' ' → logprob: -10.929773330688477
    4. '.' → logprob: -13.304773330688477
    5. ' ' → logprob: -13.429773330688477
    6. '	import' → logprob: -13.554773330688477
    7. 'port' → logprob: -13.804773330688477
    8. ' ```' → logprob: -14.179773330688477
    9. ' importe' → logprob: -14.679773330688477
    10. '```' → logprob: -14.804773330688477

Token 20: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.032327018678188324
    2. ' deque' → logprob: -3.7823269367218018
    3. ' named' → logprob: -5.532327175140381
    4. 'deque' → logprob: -6.282327175140381
    5. ' abc' → logprob: -6.782327175140381
    6. 'default' → logprob: -7.282327175140381
    7. ' Counter' → logprob: -7.407327175140381
    8. 'named' → logprob: -7.782327175140381
    9. 'abc' → logprob: -8.907326698303223
    10. ' Ordered' → logprob: -9.157326698303223

Token 21: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0486847162246704
    2. '
' → logprob: -1.2986847162246704
    3. 'import' → logprob: -1.7986847162246704
    4. '

' → logprob: -2.923684597015381
    5. ',' → logprob: -2.923684597015381
    6. ' 

' → logprob: -3.298684597015381
    7. '<|end|>' → logprob: -3.673684597015381
    8. '' → logprob: -4.048684597015381
    9. ' import' → logprob: -4.923684597015381
    10. ' 
' → logprob: -5.673684597015381

Token 22: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.7987984418869019
    2. 'deque' → logprob: -1.4237984418869019
    3. ' Counter' → logprob: -1.7987984418869019
    4. 'Counter' → logprob: -2.2987985610961914
    5. ' Ordered' → logprob: -3.9237985610961914
    6. 'Ordered' → logprob: -4.298798561096191
    7. ' named' → logprob: -5.048798561096191
    8. 'named' → logprob: -5.673798561096191
    9. ' abc' → logprob: -9.798798561096191
    10. 'abc' → logprob: -10.173798561096191

Token 23: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2023317962884903
    2. '<|end|>' → logprob: -2.452331781387329
    3. '

' → logprob: -3.702331781387329
    4. 'import' → logprob: -3.827331781387329
    5. ',' → logprob: -4.202332019805908
    6. '\n' → logprob: -4.452332019805908
    7. '' → logprob: -5.077332019805908
    8. ' 
' → logprob: -5.452332019805908
    9. ' ' → logprob: -5.577332019805908
    10. ' 

' → logprob: -5.952332019805908

Token 24: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.45803317427635193
    2. ' named' → logprob: -1.7080332040786743
    3. ' Ordered' → logprob: -2.0830330848693848
    4. 'Counter' → logprob: -3.5830330848693848
    5. ' itertools' → logprob: -4.833033084869385
    6. 'Ordered' → logprob: -4.833033084869385
    7. ' defaultdict' → logprob: -4.958033084869385
    8. 'named' → logprob: -5.208033084869385
    9. ' Chain' → logprob: -6.083033084869385
    10. ' abc' → logprob: -6.958033084869385

Token 25: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04407826438546181
    2. '<|end|>' → logprob: -3.7940783500671387
    3. ',' → logprob: -5.419078350067139
    4. '' → logprob: -5.669078350067139
    5. 'import' → logprob: -5.669078350067139
    6. '

' → logprob: -5.919078350067139
    7. ' 
' → logprob: -6.044078350067139
    8. '
' → logprob: -6.044078350067139
    9. '\n' → logprob: -7.669078350067139
    10. ' ' → logprob: -8.29407787322998

Token 26: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12044039368629456
    2. '<|end|>' → logprob: -3.2454404830932617
    3. ',' → logprob: -3.3704404830932617
    4. 'import' → logprob: -4.370440483093262
    5. '

' → logprob: -4.745440483093262
    6. '' → logprob: -4.995440483093262
    7. '\n' → logprob: -5.620440483093262
    8. '
' → logprob: -5.620440483093262
    9. ' 
' → logprob: -6.495440483093262
    10. ',
' → logprob: -7.370440483093262

Token 27: ' defaultdict' (ID: 107098)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.39569464325904846
    2. ' import' → logprob: -1.645694613456726
    3. ' ' → logprob: -3.2706947326660156
    4. '<|end|>' → logprob: -3.5206947326660156
    5. 'import' → logprob: -3.6456947326660156
    6. 'collections' → logprob: -4.020694732666016
    7. ' from' → logprob: -5.395694732666016
    8. ' Collections' → logprob: -5.770694732666016
    9. ' itertools' → logprob: -6.020694732666016
    10. ' #' → logprob: -6.145694732666016

Token 28: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06256604939699173
    2. '<|end|>' → logprob: -3.437566041946411
    3. ' ,' → logprob: -4.43756628036499
    4. ' ' → logprob: -5.18756628036499
    5. '
' → logprob: -5.18756628036499
    6. 'import' → logprob: -6.06256628036499
    7. '<|end|>' → logprob: -6.81256628036499
    8. 'from' → logprob: -8.062565803527832
    9. '

' → logprob: -8.312565803527832
    10. ')' → logprob: -8.687565803527832

Token 29: ' diction' (ID: 155259)
  Prédit: ' dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dict' → logprob: -1.4499768018722534
    2. ' un' → logprob: -2.199976921081543
    3. ' une' → logprob: -2.199976921081543
    4. ' fournit' → logprob: -2.449976921081543
    5. ' permet' → logprob: -2.574976921081543
    6. ' crée' → logprob: -2.699976921081543
    7. 'dict' → logprob: -2.949976921081543
    8. ' factory' → logprob: -2.949976921081543
    9. ' ' → logprob: -3.449976921081543
    10. ' defaultdict' → logprob: -4.199976921081543

Token 30: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.006914644967764616
    2. 'ary' → logprob: -5.5069146156311035
    3. 'naires' → logprob: -6.1319146156311035
    4. 'aire' → logprob: -7.5069146156311035
    5. 'ar' → logprob: -9.881915092468262
    6. 'n' → logprob: -10.256915092468262
    7. 'na' → logprob: -11.881915092468262
    8. 'aires' → logprob: -12.756915092468262
    9. 'arine' → logprob: -13.006915092468262
    10. 'a' → logprob: -13.631915092468262

Token 31: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8604164123535156
    2. ',' → logprob: -1.7354164123535156
    3. ' qui' → logprob: -2.3604164123535156
    4. '<|end|>' → logprob: -2.6104164123535156
    5. ' avec' → logprob: -3.4854164123535156
    6. 's' → logprob: -3.6104164123535156
    7. ' de' → logprob: -3.6104164123535156
    8. ' spécialisé' → logprob: -3.8604164123535156
    9. ' d' → logprob: -3.9854164123535156
    10. ' ,' → logprob: -3.9854164123535156

Token 32: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.32703906297683716
    2. ' une' → logprob: -1.5770390033721924
    3. ' valeurs' → logprob: -2.8270390033721924
    4. 'val' → logprob: -5.2020392417907715
    5. ' ' → logprob: -5.8270392417907715
    6. ' comportement' → logprob: -6.9520392417907715
    7. 'une' → logprob: -6.9520392417907715
    8. ' un' → logprob: -7.2020392417907715
    9. ' ' → logprob: -7.9520392417907715
    10. ' gestion' → logprob: -8.077038764953613

Token 33: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.049660682678222656
    2. 'par' → logprob: -3.9246606826782227
    3. ' ' → logprob: -4.549660682678223
    4. '_par' → logprob: -4.799660682678223
    5. 's' → logprob: -5.049660682678223
    6. ' ' → logprob: -6.424660682678223
    7. '   ' → logprob: -8.674660682678223
    8. '_' → logprob: -8.799660682678223
    9. 'f' → logprob: -8.924660682678223
    10. 'def' → logprob: -9.112160682678223

Token 34: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.22167232632637024
    2. ' défaut' → logprob: -1.7216722965240479
    3. 'd' → logprob: -4.596672534942627
    4. 'default' → logprob: -5.346672534942627
    5. 'def' → logprob: -6.096672534942627
    6. 'f' → logprob: -6.846672534942627
    7. ' ' → logprob: -7.846672534942627
    8. '   ' → logprob: -8.096672058105469
    9. '	d' → logprob: -8.221672058105469
    10. ' default' → logprob: -8.596672058105469

Token 35: ';' (ID: 26)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12507766485214233
    2. ' ,' → logprob: -2.625077724456787
    3. '
' → logprob: -3.750077724456787
    4. ' ' → logprob: -5.250077724456787
    5. 'from' → logprob: -5.500077724456787
    6. 'import' → logprob: -5.875077724456787
    7. '<|end|>' → logprob: -6.000077724456787
    8. '

' → logprob: -6.250077724456787
    9. 's' → logprob: -6.500077724456787
    10. ',
' → logprob: -7.375077724456787

Token 36: ' deque' (ID: 90347)
  Prédit: ' Ordered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ordered' → logprob: -0.5298846960067749
    2. ' ' → logprob: -1.529884696006775
    3. ' named' → logprob: -2.1548848152160645
    4. ' deque' → logprob: -3.6548848152160645
    5. 'Ordered' → logprob: -3.7798848152160645
    6. 'named' → logprob: -4.5298848152160645
    7. 'deque' → logprob: -5.0298848152160645
    8. ' ordered' → logprob: -5.6548848152160645
    9. ' Counter' → logprob: -5.9048848152160645
    10. ' defaultdict' → logprob: -5.9048848152160645

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7045383453369141
    2. ' :' → logprob: -0.8295383453369141
    3. ',' → logprob: -2.954538345336914
    4. ' ' → logprob: -4.454538345336914
    5. ' (' → logprob: -5.954538345336914
    6. ' ,' → logprob: -6.954538345336914
    7. '  ' → logprob: -7.579538345336914
    8. ' pour' → logprob: -8.329538345336914
    9. ' ' → logprob: -8.579538345336914
    10. ' =' → logprob: -8.954538345336914

Token 38: ' file' (ID: 1974)
  Prédit: ' file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.029229653999209404
    2. ' une' → logprob: -4.529229640960693
    3. ' structure' → logprob: -4.779229640960693
    4. ' double' → logprob: -5.154229640960693
    5. ' ' → logprob: -6.529229640960693
    6. ' liste' → logprob: -7.154229640960693
    7. 'file' → logprob: -7.279229640960693
    8. ' files' → logprob: -7.779229640960693
    9. ' queue' → logprob: -9.029230117797852
    10. 'une' → logprob: -9.779230117797852

Token 39: ' double' (ID: 3503)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04969562217593193
    2. ' ' → logprob: -4.0496954917907715
    3. 's' → logprob: -4.1746954917907715
    4. 'd' → logprob: -5.1746954917907715
    5. '<|end|>' → logprob: -5.6746954917907715
    6. ',' → logprob: -6.1746954917907715
    7. ' double' → logprob: -6.9246954917907715
    8. '  ' → logprob: -7.0496954917907715
    9. ' (' → logprob: -7.5496954917907715
    10. ' de' → logprob: -7.6746954917907715

Token 40: ';' (ID: 26)
  Prédit: '-ended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-ended' → logprob: -0.006043862085789442
    2. '-file' → logprob: -6.381043910980225
    3. '-' → logprob: -6.631043910980225
    4. ' file' → logprob: -6.756043910980225
    5. ' ended' → logprob: -7.381043910980225
    6. '```' → logprob: -7.631043910980225
    7. '-end' → logprob: -8.381043434143066
    8. 'ended' → logprob: -9.631043434143066
    9. ' ' → logprob: -9.881043434143066
    10. '-linked' → logprob: -10.256043434143066

Token 41: ' Counter' (ID: 32251)
  Prédit: ' Ordered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ordered' → logprob: -0.33643051981925964
    2. ' named' → logprob: -1.711430549621582
    3. 'Ordered' → logprob: -2.836430549621582
    4. 'named' → logprob: -3.836430549621582
    5. ' defaultdict' → logprob: -4.586430549621582
    6. ' Chain' → logprob: -5.711430549621582
    7. ' deque' → logprob: -5.836430549621582
    8. ' ' → logprob: -6.211430549621582
    9. ' ordered' → logprob: -6.586430549621582
    10. ' Counter' → logprob: -7.086430549621582

Token 42: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5303458571434021
    2. 'import' → logprob: -1.9053459167480469
    3. '<|end|>' → logprob: -2.530345916748047
    4. ',' → logprob: -2.905345916748047
    5. ' ' → logprob: -3.280345916748047
    6. '```' → logprob: -3.905345916748047
    7. 'from' → logprob: -4.280345916748047
    8. '#' → logprob: -4.405345916748047
    9. ' :' → logprob: -5.155345916748047
    10. ' as' → logprob: -5.155345916748047

Token 43: ' compteur' (ID: 163344)
  Prédit: ' compteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compteur' → logprob: -0.2379063069820404
    2. ' compt' → logprob: -1.9879063367843628
    3. 'comp' → logprob: -3.6129062175750732
    4. ' dict' → logprob: -4.862906455993652
    5. ' diction' → logprob: -4.862906455993652
    6. ' ' → logprob: -4.987906455993652
    7. ' outil' → logprob: -5.487906455993652
    8. ' compte' → logprob: -5.487906455993652
    9. ' collection' → logprob: -5.612906455993652
    10. ' compter' → logprob: -5.737906455993652

Token 44: ' d' (ID: 272)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3223179876804352
    2. '

' → logprob: -2.1973180770874023
    3. ',' → logprob: -2.9473180770874023
    4. 'import' → logprob: -3.3223180770874023
    5. '<|end|>' → logprob: -3.9473180770874023
    6. ' ' → logprob: -4.197318077087402
    7. ' 

' → logprob: -4.322318077087402
    8. '\n' → logprob: -5.447318077087402
    9. ' 
' → logprob: -5.572318077087402
    10. '' → logprob: -5.947318077087402

Token 45: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5145887136459351
    2. ''' → logprob: -1.014588713645935
    3. 'obj' → logprob: -4.514588832855225
    4. ''occ' → logprob: -5.014588832855225
    5. ''é' → logprob: -5.264588832855225
    6. ''objet' → logprob: -5.639588832855225
    7. 'é' → logprob: -5.639588832855225
    8. ''oc' → logprob: -5.764588832855225
    9. 'e' → logprob: -6.514588832855225
    10. ''él' → logprob: -7.139588832855225

Token 46: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.004213739652186632
    2. 'é' → logprob: -6.254213809967041
    3. 'él' → logprob: -7.254213809967041
    4. 'obj' → logprob: -7.629213809967041
    5. 'el' → logprob: -7.879213809967041
    6. 'elements' → logprob: -8.504213333129883
    7. 'lé' → logprob: -9.004213333129883
    8. ' éléments' → logprob: -9.504213333129883
    9. 'elem' → logprob: -10.379213333129883
    10. 'éc' → logprob: -10.379213333129883

Token 47: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0012055885745212436
    2. 'ment' → logprob: -7.0012054443359375
    3. '```' → logprob: -9.376205444335938
    4. 'm' → logprob: -9.751205444335938
    5. 'ements' → logprob: -10.001205444335938
    6. '#' → logprob: -11.376205444335938
    7. 'éments' → logprob: -11.501205444335938
    8. 'men' → logprob: -11.751205444335938
    9. '' → logprob: -11.751205444335938
    10. '-' → logprob: -12.126205444335938

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28650394082069397
    2. '

' → logprob: -2.036504030227661
    3. '<|end|>' → logprob: -2.786504030227661
    4. 'import' → logprob: -4.036503791809082
    5. ',' → logprob: -4.536503791809082
    6. ' 

' → logprob: -4.661503791809082
    7. ' 
' → logprob: -5.286503791809082
    8. ' ' → logprob: -5.536503791809082
    9. '  
' → logprob: -6.661503791809082
    10. '' → logprob: -6.911503791809082

Token 49: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5610424876213074
    2. '<|end|>' → logprob: -1.5610425472259521
    3. '

' → logprob: -2.186042547225952
    4. 'import' → logprob: -3.186042547225952
    5. ',' → logprob: -3.686042547225952
    6. ' 

' → logprob: -3.936042547225952
    7. ' 
' → logprob: -5.186042308807373
    8. '\n' → logprob: -6.061042308807373
    9. '```' → logprob: -6.186042308807373
    10. '' → logprob: -6.311042308807373

Token 50: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.009651967324316502
    2. ' heap' → logprob: -5.509652137756348
    3. ' typing' → logprob: -5.759652137756348
    4. ' math' → logprob: -6.884652137756348
    5. ' functools' → logprob: -7.134652137756348
    6. ' collections' → logprob: -8.884652137756348
    7. ' datetime' → logprob: -8.884652137756348
    8. ' os' → logprob: -9.634652137756348
    9. ' threading' → logprob: -9.884652137756348
    10. ' sys' → logprob: -9.884652137756348

Token 51: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.320199877838604e-07
    2. 'queue' → logprob: -15.0
    3. 'import' → logprob: -18.625
    4. 'dict' → logprob: -19.375
    5. 'ql' → logprob: -20.625
    6. 'que' → logprob: -20.625
    7. ' queue' → logprob: -20.75
    8. 'lib' → logprob: -21.0
    9. 'Q' → logprob: -21.625
    10. 'ify' → logprob: -22.0

Token 52: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.015334236435592175
    2. ' ' → logprob: -4.765334129333496
    3. 'import' → logprob: -5.015334129333496
    4. '  ' → logprob: -10.015334129333496
    5. '	import' → logprob: -11.515334129333496
    6. '<|end|>' → logprob: -13.140334129333496
    7. '_import' → logprob: -13.390334129333496
    8. ' importar' → logprob: -14.515334129333496
    9. ' impor' → logprob: -14.890334129333496
    10. ' ```' → logprob: -14.890334129333496

Token 53: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.004946139175444841
    2. ' ' → logprob: -6.254946231842041
    3. ' heap' → logprob: -6.379946231842041
    4. 'he' → logprob: -6.754946231842041
    5. ' n' → logprob: -9.129945755004883
    6. 'heap' → logprob: -10.504945755004883
    7. ' heaps' → logprob: -12.754945755004883
    8. '.he' → logprob: -13.129945755004883
    9. ' merge' → logprob: -13.129945755004883
    10. ' hea' → logprob: -13.129945755004883

Token 54: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.008618119172751904
    2. 'ap' → logprob: -4.758618354797363
    3. 'a' → logprob: -12.633618354797363
    4. 'ап' → logprob: -15.383618354797363
    5. '```' → logprob: -17.883617401123047
    6. '	app' → logprob: -18.133617401123047
    7. ' app' → logprob: -18.383617401123047
    8. 'aps' → logprob: -18.383617401123047
    9. 'appen' → logprob: -18.383617401123047
    10. '[' → logprob: -18.383617401123047

Token 55: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0007100477814674377
    2. 'op' → logprob: -7.2507100105285645
    3. 'push' → logprob: -16.875709533691406
    4. 'us' → logprob: -17.000709533691406
    5. '```' → logprob: -18.250709533691406
    6. 'ut' → logprob: -18.625709533691406
    7. '[' → logprob: -18.875709533691406
    8. '   ' → logprob: -19.375709533691406
    9. 'u' → logprob: -19.625709533691406
    10. 'USH' → logprob: -20.000709533691406

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11132464557886124
    2. ' ,' → logprob: -2.6113245487213135
    3. ' ' → logprob: -3.4863245487213135
    4. '<|end|>' → logprob: -6.861324787139893
    5. ' he' → logprob: -9.361324310302734
    6. 'he' → logprob: -9.986324310302734
    7. 'import' → logprob: -9.986324310302734
    8. ' ' → logprob: -10.486324310302734
    9. ' and' → logprob: -11.236324310302734
    10. '  ' → logprob: -11.861324310302734

Token 57: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.008624386973679066
    2. 'he' → logprob: -4.75862455368042
    3. ' ' → logprob: -12.508624076843262
    4. 'heap' → logprob: -12.758624076843262
    5. ' heap' → logprob: -13.258624076843262
    6. '.he' → logprob: -13.883624076843262
    7. '_he' → logprob: -15.508624076843262
    8. ' ' → logprob: -16.883625030517578
    9. ' heaps' → logprob: -17.008625030517578
    10. '```' → logprob: -17.008625030517578

Token 58: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.5776860184123507e-06
    2. ' app' → logprob: -13.75000286102295
    3. 'pp' → logprob: -14.50000286102295
    4. '	app' → logprob: -15.12500286102295
    5. '(app' → logprob: -15.25000286102295
    6. 'ap' → logprob: -15.37500286102295
    7. '_app' → logprob: -16.750001907348633
    8. '.app' → logprob: -16.750001907348633
    9. 'App' → logprob: -17.125001907348633
    10. 'a' → logprob: -17.875001907348633

Token 59: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0486329011619091
    2. 'ush' → logprob: -3.048632860183716
    3. 'p' → logprob: -11.048632621765137
    4. 'o' → logprob: -11.673632621765137
    5. '   ' → logprob: -12.173632621765137
    6. 'opp' → logprob: -12.423632621765137
    7. '

' → logprob: -13.173632621765137
    8. 'e' → logprob: -13.673632621765137
    9. '```' → logprob: -13.923632621765137
    10. '
' → logprob: -14.048632621765137

Token 60: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4879302382469177
    2. ' heap' → logprob: -0.9879302382469177
    3. 'he' → logprob: -4.9879302978515625
    4. ' he' → logprob: -4.9879302978515625
    5. '.heap' → logprob: -9.362930297851562
    6. ' ' → logprob: -11.487930297851562
    7. '```' → logprob: -11.862930297851562
    8. 'nl' → logprob: -12.612930297851562
    9. '(heap' → logprob: -12.862930297851562
    10. ' heaps' → logprob: -12.862930297851562

Token 62: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.0035261833108961582
    2. 'replace' → logprob: -5.878526210784912
    3. 'lify' → logprob: -7.253526210784912
    4. 'sort' → logprob: -12.753525733947754
    5. 'size' → logprob: -12.878525733947754
    6. 'IFY' → logprob: -13.128525733947754
    7. 'if' → logprob: -13.128525733947754
    8. 'ize' → logprob: -13.378525733947754
    9. '_replace' → logprob: -14.128525733947754
    10. 'fy' → logprob: -15.003525733947754

Token 63: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' Fon' (ID: 83815)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30305925011634827
    2. ' #' → logprob: -2.0530593395233154
    3. '#' → logprob: -3.0530593395233154
    4. ' heap' → logprob: -3.8030593395233154
    5. 'he' → logprob: -4.553059101104736
    6. '<|end|>' → logprob: -4.803059101104736
    7. 'heap' → logprob: -4.803059101104736
    8. ' he' → logprob: -5.053059101104736
    9. ' import' → logprob: -5.428059101104736
    10. 'import' → logprob: -5.678059101104736

Token 66: 'ctions' (ID: 2620)
  Prédit: 'ction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ction' → logprob: -0.39981353282928467
    2. 'ctions' → logprob: -1.3998135328292847
    3. 'ct' → logprob: -2.524813652038574
    4. 'c' → logprob: -6.149813652038574
    5. 't' → logprob: -8.024813652038574
    6. '#' → logprob: -8.399813652038574
    7. 'tion' → logprob: -10.399813652038574
    8. 'cto' → logprob: -10.524813652038574
    9. '```' → logprob: -10.524813652038574
    10. 'cts' → logprob: -10.774813652038574

Token 67: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9230334162712097
    2. ' de' → logprob: -0.9230334162712097
    3. '<|end|>' → logprob: -2.1730334758758545
    4. ' d' → logprob: -3.2980334758758545
    5. '  ' → logprob: -3.4230334758758545
    6. ' pour' → logprob: -5.048033237457275
    7. ' ,' → logprob: -6.298033237457275
    8. 's' → logprob: -6.298033237457275
    9. '<|end|>' → logprob: -6.423033237457275
    10. ' permettant' → logprob: -6.673033237457275

Token 68: ' la' (ID: 557)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.5374995470046997
    2. ' manip' → logprob: -1.0374995470046997
    3. ' la' → logprob: -3.28749942779541
    4. 'man' → logprob: -5.03749942779541
    5. 'g' → logprob: -5.28749942779541
    6. 'la' → logprob: -5.53749942779541
    7. ' travailler' → logprob: -6.28749942779541
    8. 'l' → logprob: -6.78749942779541
    9. ' l' → logprob: -7.28749942779541
    10. 'impl' → logprob: -7.41249942779541

Token 69: ' manipulation' (ID: 61519)
  Prédit: ' gestion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gestion' → logprob: -0.4681473970413208
    2. ' ' → logprob: -2.2181472778320312
    3. ' manipulation' → logprob: -2.2181472778320312
    4. ' file' → logprob: -2.5931472778320312
    5. 'gestion' → logprob: -3.0931472778320312
    6. 'file' → logprob: -4.093147277832031
    7. 'p' → logprob: -6.468147277832031
    8. '  ' → logprob: -6.593147277832031
    9. 'gest' → logprob: -6.718147277832031
    10. 'heap' → logprob: -6.718147277832031

Token 70: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4816396236419678
    2. ' de' → logprob: -1.2316396236419678
    3. ' ' → logprob: -3.1066396236419678
    4. ' d' → logprob: -3.4816396236419678
    5. 'de' → logprob: -5.106639862060547
    6. 'des' → logprob: -5.481639862060547
    7. '  ' → logprob: -6.231639862060547
    8. 'd' → logprob: -7.481639862060547
    9. ' du' → logprob: -7.606639862060547
    10. 's' → logprob: -8.731639862060547

Token 71: ' files' (ID: 6291)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14904429018497467
    2. 'tas' → logprob: -3.3990442752838135
    3. ' tas' → logprob: -3.3990442752838135
    4. 's' → logprob: -3.8990442752838135
    5. '  ' → logprob: -4.149044513702393
    6. ' heaps' → logprob: -5.024044513702393
    7. 'he' → logprob: -5.274044513702393
    8. 'p' → logprob: -5.774044513702393
    9. 'les' → logprob: -5.899044513702393
    10. 'l' → logprob: -6.024044513702393

Token 72: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3113455772399902
    2. 's' → logprob: -1.5613455772399902
    3. ' d' → logprob: -2.5613455772399902
    4. '<|end|>' → logprob: -2.5613455772399902
    5. ',' → logprob: -2.6863455772399902
    6. ' de' → logprob: -3.0613455772399902
    7. '_priority' → logprob: -3.3113455772399902
    8. '.' → logprob: -3.5613455772399902
    9. 'priority' → logprob: -3.5613455772399902
    10. 'import' → logprob: -3.6863455772399902

Token 73: ' priorité' (ID: 150252)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.032804377377033234
    2. ' prior' → logprob: -4.157804489135742
    3. ' priorité' → logprob: -4.282804489135742
    4. 'priority' → logprob: -6.532804489135742
    5. 'pri' → logprob: -8.032804489135742
    6. ' priority' → logprob: -8.407804489135742
    7. '_prior' → logprob: -8.657804489135742
    8. '```' → logprob: -8.657804489135742
    9. 'prio' → logprob: -9.032804489135742
    10. 'p' → logprob: -9.282804489135742

Token 74: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3935526907444
    2. '

' → logprob: -1.3935526609420776
    3. '<|end|>' → logprob: -3.393552780151367
    4. 'import' → logprob: -3.518552780151367
    5. ' 

' → logprob: -5.643552780151367
    6. '


' → logprob: -6.143552780151367
    7. '<|end|>' → logprob: -6.268552780151367
    8. ' 
' → logprob: -6.518552780151367
    9. '
' → logprob: -6.768552780151367
    10. '#' → logprob: -7.393552780151367

Token 75: 'tas' (ID: 34419)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8338507413864136
    2. ' )' → logprob: -1.5838507413864136
    3. ')' → logprob: -1.8338507413864136
    4. ' tas' → logprob: -3.583850860595703
    5. 'les' → logprob: -3.583850860595703
    6. ' les' → logprob: -3.708850860595703
    7. ' des' → logprob: -3.833850860595703
    8. 'tas' → logprob: -3.833850860595703
    9. ' heaps' → logprob: -4.208850860595703
    10. '  ' → logprob: -4.958850860595703

Token 76: ' b' (ID: 287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019381542224436998
    2. ' )' → logprob: -6.376938343048096
    3. 's' → logprob: -9.126937866210938
    4. ',' → logprob: -10.001937866210938
    5. ').' → logprob: -10.501937866210938
    6. ' priority' → logprob: -11.126937866210938
    7. 'priority' → logprob: -12.126937866210938
    8. '),' → logprob: -12.751937866210938
    9. ' priorit' → logprob: -12.751937866210938
    10. 'es' → logprob: -13.126937866210938

Token 77: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.40713563561439514
    2. 'i' → logprob: -1.2821356058120728
    3. 'inary' → logprob: -3.7821357250213623
    4. 'inaire' → logprob: -4.032135486602783
    5. 'ina' → logprob: -5.907135486602783
    6. 'ase' → logprob: -6.532135486602783
    7. 'iné' → logprob: -6.532135486602783
    8. ')' → logprob: -6.532135486602783
    9. 'inaries' → logprob: -6.657135486602783
    10. 'y' → logprob: -6.782135486602783

Token 78: ' min' (ID: 1349)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.392824874026701e-05
    2. ' )' → logprob: -10.62503433227539
    3. '#' → logprob: -13.12503433227539
    4. ')
' → logprob: -13.37503433227539
    5. ',' → logprob: -13.62503433227539
    6. ')#' → logprob: -13.75003433227539
    7. 'import' → logprob: -14.00003433227539
    8. 's' → logprob: -14.50003433227539
    9. '```' → logprob: -14.62503433227539
    10. ')

' → logprob: -14.87503433227539

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002980432182084769
    2. ' )' → logprob: -8.750298500061035
    3. 'e' → logprob: -10.375298500061035
    4. ',' → logprob: -10.375298500061035
    5. 's' → logprob: -11.000298500061035
    6. ')
' → logprob: -11.625298500061035
    7. ')
' → logprob: -12.250298500061035
    8. '')' → logprob: -12.500298500061035
    9. 'es' → logprob: -12.625298500061035
    10. ').' → logprob: -12.750298500061035

Token 80: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7165381908416748
    2. '
' → logprob: -0.8415381908416748
    3. 'import' → logprob: -3.591538190841675
    4. '<|end|>' → logprob: -3.591538190841675
    5. '


' → logprob: -4.216538429260254
    6. '



' → logprob: -5.841538429260254
    7. ' 

' → logprob: -6.091538429260254
    8. '#' → logprob: -7.091538429260254
    9. '\n' → logprob: -7.216538429260254
    10. '' → logprob: -7.341538429260254

Token 81: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0770435780286789
    2. ' sys' → logprob: -3.0770435333251953
    3. ' math' → logprob: -4.077043533325195
    4. ' itertools' → logprob: -4.952043533325195
    5. ' collections' → logprob: -6.452043533325195
    6. ' re' → logprob: -6.952043533325195
    7. ' ' → logprob: -7.202043533325195
    8. ' random' → logprob: -7.952043533325195
    9. ' json' → logprob: -8.952043533325195
    10. ' heap' → logprob: -9.702043533325195

Token 82: '                                        ' (ID: 27240)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' Module' (ID: 25609)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.7301973104476929
    2. ' math' → logprob: -1.1051973104476929
    3. ' ' → logprob: -1.7301973104476929
    4. ' collections' → logprob: -5.480197429656982
    5. ' ' → logprob: -6.605197429656982
    6. ' itertools' → logprob: -6.605197429656982
    7. ' sys' → logprob: -7.355197429656982
    8. ' random' → logprob: -7.355197429656982
    9. ' abc' → logprob: -8.230196952819824
    10. ' json' → logprob: -8.730196952819824

Token 85: ' math' (ID: 13324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: 'ématique' (ID: 127136)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' standard' (ID: 7024)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29550477862358093
    2. '<|end|>' → logprob: -1.9205048084259033
    3. '

' → logprob: -2.4205048084259033
    4. 'import' → logprob: -4.795504570007324
    5. '<|end|>' → logprob: -4.920504570007324
    6. '
' → logprob: -6.670504570007324
    7. '


' → logprob: -6.920504570007324
    8. ' 

' → logprob: -7.670504570007324
    9. '\n' → logprob: -7.795504570007324
    10. ',' → logprob: -8.045504570007324

Token 89: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.37525439262390137
    2. ' les' → logprob: -1.2502543926239014
    3. ' sqrt' → logprob: -5.2502546310424805
    4. ' ' → logprob: -5.6252546310424805
    5. ' l' → logprob: -5.7502546310424805
    6. ' la' → logprob: -6.2502546310424805
    7. 'les' → logprob: -6.3752546310424805
    8. ' le' → logprob: -6.3752546310424805
    9. 'cmath' → logprob: -6.5002546310424805
    10. ' math' → logprob: -6.6252546310424805

Token 90: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.6361246109008789
    2. ' calcul' → logprob: -1.636124610900879
    3. 'calcul' → logprob: -1.761124610900879
    4. ' opérations' → logprob: -3.136124610900879
    5. ' math' → logprob: -3.511124610900879
    6. ' calculations' → logprob: -5.261124610900879
    7. 'ématiques' → logprob: -5.636124610900879
    8. 'es' → logprob: -5.761124610900879
    9. 'f' → logprob: -5.886124610900879
    10. 'cmath' → logprob: -6.136124610900879

Token 91: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' sqrt' (ID: 44237)
  Prédit: ' sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.12622006237506866
    2. 'sqrt' → logprob: -3.0012199878692627
    3. ' ceil' → logprob: -3.7512199878692627
    4. ' sin' → logprob: -5.001220226287842
    5. ' ' → logprob: -5.251220226287842
    6. 'cos' → logprob: -5.376220226287842
    7. 'ceil' → logprob: -5.376220226287842
    8. 'sin' → logprob: -5.501220226287842
    9. ' pow' → logprob: -6.126220226287842
    10. ' pi' → logprob: -6.126220226287842

Token 93: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7118797898292542
    2. '

' → logprob: -0.7118797898292542
    3. '<|end|>' → logprob: -5.086879730224609
    4. '


' → logprob: -5.586879730224609
    5. 'import' → logprob: -5.836879730224609
    6. ' 

' → logprob: -6.336879730224609
    7. '
' → logprob: -7.086879730224609
    8. ',' → logprob: -7.086879730224609
    9. '<|end|>' → logprob: -8.08687973022461
    10. '



' → logprob: -8.08687973022461

Token 94: ' log' (ID: 2142)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.0382500886917114
    2. ' pow' → logprob: -1.4132500886917114
    3. 'sin' → logprob: -2.288249969482422
    4. 'ceil' → logprob: -2.663249969482422
    5. ' ceil' → logprob: -2.788249969482422
    6. ' factorial' → logprob: -3.288249969482422
    7. 'log' → logprob: -3.538249969482422
    8. 'fabs' → logprob: -3.788249969482422
    9. 'cos' → logprob: -4.038249969482422
    10. ' sin' → logprob: -4.288249969482422

Token 95: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4975545406341553
    2. '

' → logprob: -1.4975545406341553
    3. '<|end|>' → logprob: -1.8725545406341553
    4. '<|end|>' → logprob: -5.122554779052734
    5. 'import' → logprob: -5.622554779052734
    6. '


' → logprob: -6.747554779052734
    7. '
' → logprob: -6.997554779052734
    8. ',' → logprob: -7.122554779052734
    9. ' 

' → logprob: -7.872554779052734
    10. ' 
' → logprob: -8.122554779052734

Token 96: ' etc' (ID: 5178)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sin' → logprob: -1.0512981414794922
    2. ' pow' → logprob: -1.4262981414794922
    3. ' sin' → logprob: -2.051298141479492
    4. ' factorial' → logprob: -2.801298141479492
    5. 'pow' → logprob: -2.926298141479492
    6. ' ceil' → logprob: -3.176298141479492
    7. 'cos' → logprob: -3.301298141479492
    8. ' exp' → logprob: -3.551298141479492
    9. ' cos' → logprob: -3.801298141479492
    10. 'exp' → logprob: -3.926298141479492

Token 97: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48472860455513
    2. '

' → logprob: -0.9847285747528076
    3. '<|end|>' → logprob: -5.234728813171387
    4. '


' → logprob: -6.234728813171387
    5. 'import' → logprob: -6.984728813171387
    6. ' 

' → logprob: -7.859728813171387
    7. '<|end|>' → logprob: -7.859728813171387
    8. '#' → logprob: -8.109728813171387
    9. '
' → logprob: -8.109728813171387
    10. '



' → logprob: -8.484728813171387

Token 98: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23278969526290894
    2. '<|end|>' → logprob: -1.9827897548675537
    3. '

' → logprob: -2.9827897548675537
    4. 'import' → logprob: -4.982789516448975
    5. '\n' → logprob: -5.357789516448975
    6. '' → logprob: -6.482789516448975
    7. ' 
' → logprob: -6.607789516448975
    8. ' 

' → logprob: -6.982789516448975
    9. '  
' → logprob: -7.482789516448975
    10. ' ' → logprob: -7.482789516448975

Token 99: ' bis' (ID: 7204)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5232856869697571
    2. ' os' → logprob: -1.8982856273651123
    3. ' itertools' → logprob: -1.8982856273651123
    4. ' random' → logprob: -2.2732856273651123
    5. ' re' → logprob: -5.898285865783691
    6. ' functools' → logprob: -7.148285865783691
    7. 'random' → logprob: -7.898285865783691
    8. 'sys' → logprob: -8.148285865783691
    9. ' numpy' → logprob: -8.773285865783691
    10. ' json' → logprob: -9.273285865783691

Token 100: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.173704271830502e-06
    2. 'e' → logprob: -13.12500286102295
    3. 'ec' → logprob: -14.25000286102295
    4. 'ected' → logprob: -15.12500286102295
    5. 'ectl' → logprob: -17.375003814697266
    6. 'ecta' → logprob: -17.500003814697266
    7. 't' → logprob: -17.625003814697266
    8. '```' → logprob: -17.750003814697266
    9. 'ects' → logprob: -17.875003814697266
    10. ' ect' → logprob: -17.875003814697266

Token 101: '                                      ' (ID: 24131)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22799472510814667
    2. '<|end|>' → logprob: -1.602994680404663
    3. '<|end|>' → logprob: -6.477994918823242
    4. ' 
' → logprob: -8.102994918823242
    5. ' #' → logprob: -8.602994918823242
    6. '  ' → logprob: -8.727994918823242
    7. '.' → logprob: -9.227994918823242
    8. '#' → logprob: -9.727994918823242
    9. 'import' → logprob: -10.102994918823242
    10. ',' → logprob: -10.477994918823242

Token 102: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6404950618743896
    2. '<|end|>' → logprob: -0.7654950618743896
    3. ' 
' → logprob: -5.765495300292969
    4. '
' → logprob: -6.640495300292969
    5. '<|end|>' → logprob: -6.640495300292969
    6. '  
' → logprob: -7.390495300292969
    7. '  ' → logprob: -7.765495300292969
    8. ' #' → logprob: -8.015495300292969
    9. 'import' → logprob: -9.015495300292969
    10. '```' → logprob: -9.015495300292969

Token 103: ' Perm' (ID: 20550)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.0573149248957634
    2. ' ' → logprob: -2.932314872741699
    3. 'bis' → logprob: -6.432314872741699
    4. ' collections' → logprob: -7.807314872741699
    5. ' ' → logprob: -8.6823148727417
    6. ' math' → logprob: -9.4323148727417
    7. ' import' → logprob: -9.8073148727417
    8. ' ins' → logprob: -10.4323148727417
    9. ' itertools' → logprob: -10.8073148727417
    10. ' b' → logprob: -11.5573148727417

Token 104: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.7823784351348877
    2. 'utations' → logprob: -1.2823784351348877
    3. 'utation' → logprob: -1.9073784351348877
    4. 'ut' → logprob: -2.9073784351348877
    5. 'uter' → logprob: -3.4073784351348877
    6. 'odule' → logprob: -4.407378196716309
    7. 'utable' → logprob: -4.407378196716309
    8. 'ett' → logprob: -6.032378196716309
    9. 'uted' → logprob: -8.157378196716309
    10. 'ault' → logprob: -8.157378196716309

Token 105: ' l' (ID: 305)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0477524995803833
    2. ' de' → logprob: -3.7977523803710938
    3. ' ' → logprob: -4.422752380371094
    4. ' l' → logprob: -4.547752380371094
    5. 'e' → logprob: -7.797752380371094
    6. ' e' → logprob: -8.172752380371094
    7. ' bis' → logprob: -8.422752380371094
    8. ' ' → logprob: -8.797752380371094
    9. ' des' → logprob: -9.547752380371094
    10. 'd' → logprob: -9.547752380371094

Token 106: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3106744587421417
    2. 'e' → logprob: -2.4356744289398193
    3. ''in' → logprob: -2.5606744289398193
    4. ''utilisation' → logprob: -3.4356744289398193
    5. ''import' → logprob: -3.5606744289398193
    6. 'in' → logprob: -3.9356744289398193
    7. 'import' → logprob: -5.435674667358398
    8. 'es' → logprob: -5.560674667358398
    9. 'sertion' → logprob: -5.935674667358398
    10. ''' → logprob: -5.935674667358398

Token 107: 'sertion' (ID: 21747)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10599037259817123
    2. 'sort' → logprob: -2.730990409851074
    3. 'sertion' → logprob: -4.230990409851074
    4. 'port' → logprob: -4.855990409851074
    5. '
' → logprob: -5.605990409851074
    6. 'dex' → logprob: -5.980990409851074
    7. 'import' → logprob: -6.355990409851074
    8. 'sport' → logprob: -6.855990409851074
    9. 'bis' → logprob: -7.355990409851074
    10. '```' → logprob: -7.605990409851074

Token 108: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' la' (ID: 557)
  Prédit: ' recherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.04686370864510536
    2. ' la' → logprob: -3.1718637943267822
    3. 'la' → logprob: -6.421863555908203
    4. ' l' → logprob: -7.421863555908203
    5. ' recherches' → logprob: -7.671863555908203
    6. ' maintien' → logprob: -8.546863555908203
    7. 'b' → logprob: -8.546863555908203
    8. 'l' → logprob: -9.421863555908203
    9. 'Recherche' → logprob: -9.421863555908203
    10. ' maintenance' → logprob: -9.796863555908203

Token 110: ' recherche' (ID: 24975)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.1551487147808075
    2. ' recherche' → logprob: -2.03014874458313
    3. 'maintenance' → logprob: -5.405148506164551
    4. 'maint' → logprob: -5.780148506164551
    5. 'gestion' → logprob: -7.280148506164551
    6. 'position' → logprob: -7.280148506164551
    7. 'b' → logprob: -7.530148506164551
    8. 'rech' → logprob: -7.530148506164551
    9. 'Recherche' → logprob: -7.905148506164551
    10. 'search' → logprob: -8.15514850616455

Token 111: ' efficace' (ID: 54338)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.011504109017550945
    2. ' les' → logprob: -5.511504173278809
    3. ' une' → logprob: -5.761504173278809
    4. ' listes' → logprob: -6.636504173278809
    5. 'des' → logprob: -6.886504173278809
    6. 'les' → logprob: -7.761504173278809
    7. ' lists' → logprob: -7.886504173278809
    8. 'list' → logprob: -7.886504173278809
    9. 'une' → logprob: -8.386504173278809
    10. ' sorted' → logprob: -8.636504173278809

Token 114: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.21396346390247345
    2. ' listes' → logprob: -1.713963508605957
    3. 'liste' → logprob: -5.713963508605957
    4. ' list' → logprob: -5.963963508605957
    5. 'lists' → logprob: -6.213963508605957
    6. 's' → logprob: -7.088963508605957
    7. ' lists' → logprob: -7.213963508605957
    8. 'lst' → logprob: -7.588963508605957
    9. '_list' → logprob: -8.088963508605957
    10. 'sorted' → logprob: -8.213963508605957

Token 115: ' tri' (ID: 12665)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5549849271774292
    2. '<|end|>' → logprob: -1.0549849271774292
    3. '

' → logprob: -2.8049850463867188
    4. 'import' → logprob: -4.804985046386719
    5. '<|end|>' → logprob: -5.304985046386719
    6. '


' → logprob: -6.429985046386719
    7. '#' → logprob: -7.929985046386719
    8. '
' → logprob: -8.054985046386719
    9. '\n' → logprob: -8.054985046386719
    10. ' ' → logprob: -8.054985046386719

Token 116: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -5.633853652398102e-05
    2. 'es' → logprob: -11.125056266784668
    3. 'ée' → logprob: -11.375056266784668
    4. 'nées' → logprob: -11.625056266784668
    5. 's' → logprob: -11.875056266784668
    6. 'ees' → logprob: -12.625056266784668
    7. 'é' → logprob: -12.875056266784668
    8. 'és' → logprob: -13.125056266784668
    9. 'e' → logprob: -14.000056266784668
    10. 'quées' → logprob: -14.250056266784668

Token 117: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5139393210411072
    2. '<|end|>' → logprob: -1.513939380645752
    3. '

' → logprob: -1.763939380645752
    4. 'import' → logprob: -5.638939380645752
    5. '<|end|>' → logprob: -5.638939380645752
    6. '


' → logprob: -6.763939380645752
    7. '\n' → logprob: -8.013938903808594
    8. '#' → logprob: -8.138938903808594
    9. '
' → logprob: -8.263938903808594
    10. ' ' → logprob: -8.513938903808594

Token 118: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3923550844192505
    2. '<|end|>' → logprob: -1.3923550844192505
    3. '

' → logprob: -2.767354965209961
    4. 'import' → logprob: -5.017354965209961
    5. '<|end|>' → logprob: -5.892354965209961
    6. ' 
' → logprob: -7.142354965209961
    7. ' 

' → logprob: -7.517354965209961
    8. ' ' → logprob: -7.892354965209961
    9. '
' → logprob: -7.892354965209961
    10. '#' → logprob: -7.892354965209961

Token 119: ' random' (ID: 7526)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3629651963710785
    2. ' itertools' → logprob: -1.3629652261734009
    3. ' random' → logprob: -3.3629651069641113
    4. ' os' → logprob: -4.862965106964111
    5. ' functools' → logprob: -5.862965106964111
    6. ' re' → logprob: -6.737965106964111
    7. 'sys' → logprob: -7.362965106964111
    8. ' json' → logprob: -7.737965106964111
    9. ' threading' → logprob: -8.23796558380127
    10. 'random' → logprob: -8.36296558380127

Token 120: '                                      ' (ID: 24131)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' Fourn' (ID: 177490)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.05403944104909897
    2. ' os' → logprob: -3.679039478302002
    3. ' import' → logprob: -4.554039478302002
    4. ' ' → logprob: -5.179039478302002
    5. 'random' → logprob: -5.179039478302002
    6. ' sys' → logprob: -6.554039478302002
    7. 'import' → logprob: -6.929039478302002
    8. ' collections' → logprob: -7.054039478302002
    9. ' system' → logprob: -7.429039478302002
    10. ' space' → logprob: -8.179039001464844

Token 123: 'it' (ID: 278)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.42448922991752625
    2. 'iture' → logprob: -2.2994892597198486
    3. 'isseur' → logprob: -3.2994892597198486
    4. 'issant' → logprob: -3.4244892597198486
    5. 'it' → logprob: -3.6744892597198486
    6. 'import' → logprob: -3.6744892597198486
    7. 'itures' → logprob: -3.7994892597198486
    8. ' from' → logprob: -3.9244892597198486
    9. ' random' → logprob: -4.0494890213012695
    10. ' ' → logprob: -4.5494890213012695

Token 124: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1487475335597992
    2. '<|end|>' → logprob: -2.648747444152832
    3. ' ' → logprob: -3.398747444152832
    4. ' random' → logprob: -3.523747444152832
    5. 'random' → logprob: -6.273747444152832
    6. 'des' → logprob: -7.023747444152832
    7. ' functions' → logprob: -7.023747444152832
    8. ' une' → logprob: -9.023747444152832
    9. ' les' → logprob: -9.148747444152832
    10. '<|end|>' → logprob: -9.648747444152832

Token 125: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.34196212887763977
    2. ' outils' → logprob: -1.5919620990753174
    3. ' functions' → logprob: -3.0919620990753174
    4. ' fonctionnalités' → logprob: -3.9669620990753174
    5. 'functions' → logprob: -5.2169623374938965
    6. ' functionalities' → logprob: -5.5919623374938965
    7. 'fonction' → logprob: -5.8419623374938965
    8. 'fon' → logprob: -6.3419623374938965
    9. ' génér' → logprob: -6.7169623374938965
    10. 'random' → logprob: -6.7169623374938965

Token 126: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' génér' (ID: 18939)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6443619132041931
    2. ' génér' → logprob: -1.144361972808838
    3. ' des' → logprob: -2.269361972808838
    4. ' le' → logprob: -4.144361972808838
    5. ' manip' → logprob: -4.269361972808838
    6. ' gérer' → logprob: -5.394361972808838
    7. 'la' → logprob: -5.519361972808838
    8. ' random' → logprob: -5.894361972808838
    9. 'le' → logprob: -6.144361972808838
    10. 'gener' → logprob: -6.269361972808838

Token 128: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0038617125246673822
    2. 'al' → logprob: -5.878861904144287
    3. 'ateur' → logprob: -7.253861904144287
    4. 'ation' → logprob: -8.628861427307129
    5. 'aler' → logprob: -9.753861427307129
    6. 'ating' → logprob: -10.128861427307129
    7. 'ate' → logprob: -10.628861427307129
    8. 'ator' → logprob: -11.378861427307129
    9. 'érer' → logprob: -11.878861427307129
    10. 'ateurs' → logprob: -12.253861427307129

Token 129: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.01764327846467495
    2. 'des' → logprob: -4.517643451690674
    3. ' ' → logprob: -5.392643451690674
    4. ' random' → logprob: -7.017643451690674
    5. '<|end|>' → logprob: -7.017643451690674
    6. ' de' → logprob: -9.392642974853516
    7. 'random' → logprob: -9.642642974853516
    8. ' du' → logprob: -10.517642974853516
    9. '_des' → logprob: -11.642642974853516
    10. 's' → logprob: -12.017642974853516

Token 130: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.0030308328568935394
    2. 'n' → logprob: -6.378030776977539
    3. 'nombre' → logprob: -7.503030776977539
    4. ' random' → logprob: -7.628030776977539
    5. ' nombre' → logprob: -8.878030776977539
    6. 'random' → logprob: -10.128030776977539
    7. ' numbers' → logprob: -10.503030776977539
    8. ' valeurs' → logprob: -11.253030776977539
    9. ' chiffres' → logprob: -11.253030776977539
    10. ' ent' → logprob: -11.253030776977539

Token 131: ' pseudo' (ID: 62975)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: '-al' (ID: 13254)
  Prédit: ' al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' al' → logprob: -0.02806207537651062
    2. 'al' → logprob: -3.903062105178833
    3. ' random' → logprob: -6.028061866760254
    4. 'random' → logprob: -6.028061866760254
    5. '-' → logprob: -6.778061866760254
    6. '-al' → logprob: -7.153061866760254
    7. 'au' → logprob: -9.153061866760254
    8. 'ale' → logprob: -9.153061866760254
    9. ' ale' → logprob: -9.153061866760254
    10. ' hasard' → logprob: -9.403061866760254

Token 133: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.008973094634711742
    2. 'e' → logprob: -4.758973121643066
    3. 'éas' → logprob: -8.258973121643066
    4. 'atoires' → logprob: -10.258973121643066
    5. 'a' → logprob: -10.883973121643066
    6. 'ea' → logprob: -11.508973121643066
    7. 'és' → logprob: -11.633973121643066
    8. 'É' → logprob: -12.133973121643066
    9. 'étiques' → logprob: -12.133973121643066
    10. 'éan' → logprob: -12.633973121643066

Token 134: 'atoires' (ID: 84948)
  Prédit: 'atoires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atoires' → logprob: -0.14595086872577667
    2. 'é' → logprob: -2.0209507942199707
    3. 'atoire' → logprob: -5.770950794219971
    4. 'a' → logprob: -9.270951271057129
    5. 'at' → logprob: -11.270951271057129
    6. 'ato' → logprob: -11.520951271057129
    7. '```' → logprob: -11.520951271057129
    8. 'atorios' → logprob: -11.770951271057129
    9. 'e' → logprob: -12.520951271057129
    10. 'atórios' → logprob: -12.895951271057129

Token 135: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4167134761810303
    2. '

' → logprob: -1.1667134761810303
    3. '<|end|>' → logprob: -3.7917134761810303
    4. 'import' → logprob: -5.916713714599609
    5. '


' → logprob: -6.541713714599609
    6. '<|end|>' → logprob: -7.416713714599609
    7. '\n' → logprob: -7.541713714599609
    8. '
' → logprob: -7.916713714599609
    9. ' 

' → logprob: -8.16671371459961
    10. '#' → logprob: -8.41671371459961

Token 137: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.09340780973434448
    2. ' functools' → logprob: -3.0934078693389893
    3. ' typing' → logprob: -3.2184078693389893
    4. ' datetime' → logprob: -7.21840763092041
    5. ' statistics' → logprob: -7.59340763092041
    6. ' sys' → logprob: -7.59340763092041
    7. ' operator' → logprob: -7.59340763092041
    8. ' fractions' → logprob: -7.96840763092041
    9. ' copy' → logprob: -8.46840763092041
    10. 'typing' → logprob: -8.59340763092041

Token 138: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.004625222180038691
    2. 'import' → logprob: -5.37962532043457
    3. '	import' → logprob: -12.87962532043457
    4. ' ' → logprob: -13.12962532043457
    5. '<|end|>' → logprob: -15.62962532043457
    6. '_import' → logprob: -15.75462532043457
    7. ' importar' → logprob: -16.50462532043457
    8. ' imports' → logprob: -17.37962532043457
    9. ' ' → logprob: -17.87962532043457
    10. ' importa' → logprob: -18.00462532043457

Token 139: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.39262911677360535
    2. ' combinations' → logprob: -1.2676291465759277
    3. ' accumulate' → logprob: -4.142629146575928
    4. ' chain' → logprob: -4.517629146575928
    5. ' group' → logprob: -5.267629146575928
    6. ' product' → logprob: -5.767629146575928
    7. ' cycle' → logprob: -6.142629146575928
    8. ' ' → logprob: -6.267629146575928
    9. 'com' → logprob: -6.517629146575928
    10. 'per' → logprob: -7.392629146575928

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11204353719949722
    2. '<|end|>' → logprob: -2.487043619155884
    3. ' ,' → logprob: -4.487043380737305
    4. ' ' → logprob: -4.487043380737305
    5. 'import' → logprob: -8.737043380737305
    6. ' import' → logprob: -9.737043380737305
    7. '<|end|>' → logprob: -10.362043380737305
    8. ' ' → logprob: -10.987043380737305
    9. ',
' → logprob: -11.112043380737305
    10. '(' → logprob: -11.362043380737305

Token 141: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.1069222018122673
    2. ' combinations' → logprob: -2.481922149658203
    3. 'product' → logprob: -4.481922149658203
    4. ' product' → logprob: -5.606922149658203
    5. 'chain' → logprob: -6.481922149658203
    6. ' chain' → logprob: -7.731922149658203
    7. 'cycle' → logprob: -8.731922149658203
    8. ' accumulate' → logprob: -8.731922149658203
    9. '	com' → logprob: -8.731922149658203
    10. 'acc' → logprob: -8.981922149658203

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3073132634162903
    2. '<|end|>' → logprob: -1.5573132038116455
    3. ' ' → logprob: -3.0573132038116455
    4. ' ,' → logprob: -5.057313442230225
    5. 'import' → logprob: -8.557312965393066
    6. '<|end|>' → logprob: -8.682312965393066
    7. ' ' → logprob: -10.182312965393066
    8. ' import' → logprob: -10.807312965393066
    9. '  ' → logprob: -11.057312965393066
    10. ' as' → logprob: -11.057312965393066

Token 143: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.0332766771316528
    2. 'product' → logprob: -1.2832766771316528
    3. 'group' → logprob: -1.4082766771316528
    4. ' group' → logprob: -3.2832765579223633
    5. 'chain' → logprob: -3.2832765579223633
    6. ' product' → logprob: -3.4082765579223633
    7. ' chain' → logprob: -4.783276557922363
    8. 'cycle' → logprob: -5.658276557922363
    9. ' combinations' → logprob: -6.658276557922363
    10. 'compress' → logprob: -7.658276557922363

Token 144: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.4549501836299896
    2. 'chain' → logprob: -1.954950213432312
    3. 'group' → logprob: -2.3299500942230225
    4. 'com' → logprob: -3.0799500942230225
    5. ' product' → logprob: -3.3299500942230225
    6. ' chain' → logprob: -3.4549500942230225
    7. 'cycle' → logprob: -5.079950332641602
    8. ' group' → logprob: -5.204950332641602
    9. 'compress' → logprob: -7.204950332641602
    10. 'filter' → logprob: -8.204950332641602

Token 146: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' Fon' (ID: 83815)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.7364407777786255
    2. ' chain' → logprob: -1.4864407777786255
    3. 'com' → logprob: -2.236440658569336
    4. ' cycle' → logprob: -2.986440658569336
    5. ' combinations' → logprob: -2.986440658569336
    6. 'group' → logprob: -3.111440658569336
    7. 'chain' → logprob: -3.986440658569336
    8. 'cycle' → logprob: -4.486440658569336
    9. ' compress' → logprob: -5.611440658569336
    10. ' permutations' → logprob: -5.736440658569336

Token 149: 'ctions' (ID: 2620)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.09122397750616074
    2. 'ctions' → logprob: -2.716223955154419
    3. 't' → logprob: -4.216224193572998
    4. 'rt' → logprob: -5.591224193572998
    5. 'r' → logprob: -7.716224193572998
    6. 'tools' → logprob: -7.966224193572998
    7. 'import' → logprob: -8.21622371673584
    8. 'ction' → logprob: -8.59122371673584
    9. 'rom' → logprob: -8.59122371673584
    10. 'cts' → logprob: -8.84122371673584

Token 150: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' créer' (ID: 40938)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.9774329662322998
    2. ' créer' → logprob: -1.7274329662322998
    3. ' comb' → logprob: -2.2274329662323
    4. 'man' → logprob: -2.7274329662323
    5. ' travailler' → logprob: -2.8524329662323
    6. ' génér' → logprob: -2.8524329662323
    7. ' les' → logprob: -3.2274329662323
    8. ' effectuer' → logprob: -3.4774329662323
    9. ' des' → logprob: -4.352433204650879
    10. 'l' → logprob: -4.602433204650879

Token 152: '/g' (ID: 11328)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.07224869728088379
    2. 'des' → logprob: -2.697248697280884
    3. ' toutes' → logprob: -6.822248458862305
    4. ' permutations' → logprob: -8.572248458862305
    5. ' iter' → logprob: -9.197248458862305
    6. ' et' → logprob: -9.447248458862305
    7. '_des' → logprob: -9.447248458862305
    8. 's' → logprob: -9.447248458862305
    9. ' itertools' → logprob: -9.447248458862305
    10. ' combin' → logprob: -9.572248458862305

Token 153: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.5021079182624817
    2. 'roup' → logprob: -1.627107858657837
    3. 'rou' → logprob: -2.377107858657837
    4. 'ener' → logprob: -3.252107858657837
    5. 'enerate' → logprob: -3.877107858657837
    6. 'enerator' → logprob: -4.252108097076416
    7. 'éné' → logprob: -4.252108097076416
    8. 'en' → logprob: -5.502108097076416
    9. 'érer' → logprob: -6.002108097076416
    10. 'roups' → logprob: -6.002108097076416

Token 154: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0013102402444928885
    2. 'eral' → logprob: -6.876310348510742
    3. 'ér' → logprob: -9.876310348510742
    4. 'érateur' → logprob: -9.876310348510742
    5. 'érer' → logprob: -10.001310348510742
    6. 'from' → logprob: -10.626310348510742
    7. 'erar' → logprob: -10.751310348510742
    8. 'era' → logprob: -11.001310348510742
    9. 'expr' → logprob: -11.126310348510742
    10. 'erer' → logprob: -11.251310348510742

Token 155: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.18355944752693176
    2. ' it' → logprob: -2.5585594177246094
    3. ' comb' → logprob: -3.5585594177246094
    4. 'iter' → logprob: -3.6835594177246094
    5. ' sé' → logprob: -4.433559417724609
    6. 'sé' → logprob: -4.808559417724609
    7. ' iter' → logprob: -5.683559417724609
    8. ' itertools' → logprob: -5.808559417724609
    9. 's' → logprob: -6.183559417724609
    10. ' permutations' → logprob: -6.433559417724609

Token 157: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4475213587284088
    2. 'ertools' → logprob: -1.0725213289260864
    3. 'tools' → logprob: -4.197521209716797
    4. 'ools' → logprob: -6.072521209716797
    5. 'ert' → logprob: -7.947521209716797
    6. 'r' → logprob: -7.947521209716797
    7. 'ables' → logprob: -8.697521209716797
    8. 'ér' → logprob: -8.822521209716797
    9. 'e' → logprob: -9.822521209716797
    10. '#' → logprob: -10.822521209716797

Token 158: 'ateurs' (ID: 19727)
  Prédit: 'tools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tools' → logprob: -0.1645984947681427
    2. 'ables' → logprob: -2.1645984649658203
    3. 'r' → logprob: -3.5395984649658203
    4. 'tool' → logprob: -5.91459846496582
    5. '```' → logprob: -6.41459846496582
    6. 'bles' → logprob: -6.91459846496582
    7. 'able' → logprob: -7.53959846496582
    8. 't' → logprob: -8.03959846496582
    9. 'utils' → logprob: -8.16459846496582
    10. 'tables' → logprob: -8.28959846496582

Token 159: ' complexes' (ID: 76136)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3401264250278473
    2. '<|end|>' → logprob: -1.840126395225525
    3. '

' → logprob: -2.0901265144348145
    4. 'import' → logprob: -6.7151265144348145
    5. '\n' → logprob: -6.7151265144348145
    6. '


' → logprob: -6.8401265144348145
    7. '<|end|>' → logprob: -7.2151265144348145
    8. ',' → logprob: -7.4651265144348145
    9. '
 
' → logprob: -8.465126037597656
    10. 'def' → logprob: -8.590126037597656

Token 160: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09875114262104034
    2. '<|end|>' → logprob: -2.8487510681152344
    3. '

' → logprob: -3.4737510681152344
    4. 'import' → logprob: -6.098751068115234
    5. 'def' → logprob: -7.348751068115234
    6. '\n' → logprob: -7.473751068115234
    7. '<|end|>' → logprob: -7.723751068115234
    8. '
' → logprob: -8.348751068115234
    9. '' → logprob: -8.598751068115234
    10. '


' → logprob: -8.848751068115234

Token 161: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.052175212651491165
    2. '

' → logprob: -3.427175283432007
    3. '<|end|>' → logprob: -4.302175045013428
    4. 'import' → logprob: -5.927175045013428
    5. '\n' → logprob: -7.302175045013428
    6. '


' → logprob: -8.302175521850586
    7. '' → logprob: -8.677175521850586
    8. '<|end|>' → logprob: -8.802175521850586
    9. '
' → logprob: -8.927175521850586
    10. 'def' → logprob: -8.927175521850586

Token 162: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5889931917190552
    2. 'sys' → logprob: -0.8389931917190552
    3. ' functools' → logprob: -5.588993072509766
    4. ' os' → logprob: -5.838993072509766
    5. 're' → logprob: -6.213993072509766
    6. 'os' → logprob: -6.463993072509766
    7. ' re' → logprob: -6.838993072509766
    8. 'operator' → logprob: -7.213993072509766
    9. ' operator' → logprob: -7.588993072509766
    10. 'json' → logprob: -8.838993072509766

Token 163: '                                         ' (ID: 20949)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' Acc' (ID: 6278)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7115724086761475
    2. 'import' → logprob: -1.8365724086761475
    3. 'sys' → logprob: -2.0865724086761475
    4. '<|end|>' → logprob: -2.3365724086761475
    5. ' import' → logprob: -2.7115724086761475
    6. ' input' → logprob: -3.7115724086761475
    7. 'input' → logprob: -4.711572647094727
    8. '
' → logprob: -4.961572647094727
    9. ' system' → logprob: -5.211572647094727
    10. ' ' → logprob: -5.461572647094727

Token 166: 'ès' (ID: 4119)
  Prédit: 'ess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ess' → logprob: -0.02575545571744442
    2. 'es' → logprob: -4.275755405426025
    3. 'import' → logprob: -5.525755405426025
    4. 'essor' → logprob: -6.150755405426025
    5. '<|end|>' → logprob: -6.525755405426025
    6. 'essing' → logprob: -7.025755405426025
    7. 'ent' → logprob: -7.275755405426025
    8. 'e' → logprob: -8.275755882263184
    9. 'esses' → logprob: -8.400755882263184
    10. 'essary' → logprob: -8.900755882263184

Token 167: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: ' certaines' (ID: 46662)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4275621473789215
    2. ' system' → logprob: -1.5525621175765991
    3. 'sys' → logprob: -2.1775622367858887
    4. 'system' → logprob: -4.302562236785889
    5. ' des' → logprob: -6.177562236785889
    6. ' stdin' → logprob: -6.302562236785889
    7. 'stdin' → logprob: -6.302562236785889
    8. 'argv' → logprob: -6.802562236785889
    9. '=sys' → logprob: -7.052562236785889
    10. ' argv' → logprob: -7.177562236785889

Token 169: ' variables' (ID: 13955)
  Prédit: ' system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.8356547355651855
    2. '<|end|>' → logprob: -1.4606547355651855
    3. ' modules' → logprob: -2.0856547355651855
    4. ' sys' → logprob: -2.8356547355651855
    5. ' fonctionnalités' → logprob: -3.2106547355651855
    6. ' fonctions' → logprob: -3.5856547355651855
    7. 'system' → logprob: -3.9606547355651855
    8. ' functionalities' → logprob: -4.0856547355651855
    9. ' functions' → logprob: -4.3356547355651855
    10. 'modules' → logprob: -4.9606547355651855

Token 170: '/f' (ID: 11502)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.8111945986747742
    2. 'iles' → logprob: -1.811194658279419
    3. 'ich' → logprob: -1.936194658279419
    4. 'unction' → logprob: -2.061194658279419
    5. 'lux' → logprob: -3.436194658279419
    6. 'ile' → logprob: -3.811194658279419
    7. 'ichier' → logprob: -4.31119441986084
    8. 'utures' → logprob: -4.81119441986084
    9. 'unct' → logprob: -5.06119441986084
    10. 'ic' → logprob: -5.18619441986084

Token 172: 'ctions' (ID: 2620)
  Prédit: 'ctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctions' → logprob: -0.619508683681488
    2. 'ct' → logprob: -1.2445087432861328
    3. 'ction' → logprob: -1.8695087432861328
    4. 'n' → logprob: -4.744508743286133
    5. 'rt' → logprob: -5.744508743286133
    6. 'r' → logprob: -6.244508743286133
    7. '```' → logprob: -6.744508743286133
    8. '#' → logprob: -7.119508743286133
    9. 'rc' → logprob: -7.244508743286133
    10. 'nc' → logprob: -7.494508743286133

Token 173: ' système' (ID: 30034)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3095845580101013
    2. '

' → logprob: -1.434584617614746
    3. '<|end|>' → logprob: -3.809584617614746
    4. '\n' → logprob: -6.559584617614746
    5. '<|end|>' → logprob: -6.934584617614746
    6. '' → logprob: -7.059584617614746
    7. 'import' → logprob: -7.184584617614746
    8. '
' → logprob: -7.684584617614746
    9. '


' → logprob: -7.684584617614746
    10. '
 
' → logprob: -8.684584617614746

Token 175: ' comme' (ID: 7971)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.10258430987596512
    2. ' sys' → logprob: -2.6025843620300293
    3. ' ' → logprob: -4.852584362030029
    4. 'os' → logprob: -5.352584362030029
    5. ' such' → logprob: -5.352584362030029
    6. 'import' → logprob: -6.727584362030029
    7. 'sys' → logprob: -6.977584362030029
    8. ' io' → logprob: -7.352584362030029
    9. '  
' → logprob: -7.852584362030029
    10. ' like' → logprob: -7.977584362030029

Token 176: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.14893049001693726
    2. ' argv' → logprob: -2.273930549621582
    3. 'stdin' → logprob: -4.148930549621582
    4. 'argv' → logprob: -4.648930549621582
    5. 'stdout' → logprob: -5.648930549621582
    6. ' sys' → logprob: -6.273930549621582
    7. ' stdout' → logprob: -6.398930549621582
    8. 'stderr' → logprob: -6.648930549621582
    9. ' exit' → logprob: -7.148930549621582
    10. ' stderr' → logprob: -8.023930549621582

Token 177: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059539794921875
    2. '<|end|>' → logprob: -3.059539794921875
    3. '

' → logprob: -5.059539794921875
    4. '<|end|>' → logprob: -6.434539794921875
    5. 'import' → logprob: -6.809539794921875
    6. '
' → logprob: -7.434539794921875
    7. ',' → logprob: -7.559539794921875
    8. '' → logprob: -8.684539794921875
    9. '#' → logprob: -8.809539794921875
    10. '\n' → logprob: -9.059539794921875

Token 178: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1555621474981308
    2. '

' → logprob: -2.155562162399292
    3. '<|end|>' → logprob: -3.655562162399292
    4. '
' → logprob: -7.280561923980713
    5. 'import' → logprob: -7.530561923980713
    6. '<|end|>' → logprob: -7.655561923980713
    7. '


' → logprob: -8.405562400817871
    8. '\n' → logprob: -8.780562400817871
    9. '' → logprob: -9.530562400817871
    10. '
 
' → logprob: -10.280562400817871

Token 179: ' string' (ID: 1621)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.011461098678410053
    2. 'os' → logprob: -4.51146125793457
    3. ' io' → logprob: -8.51146125793457
    4. ' threading' → logprob: -8.63646125793457
    5. 'io' → logprob: -11.13646125793457
    6. ' time' → logprob: -11.51146125793457
    7. ' functools' → logprob: -12.26146125793457
    8. ' operator' → logprob: -13.51146125793457
    9. 'time' → logprob: -14.13646125793457
    10. '	os' → logprob: -14.38646125793457

Token 180: '                                      ' (ID: 24131)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: ' Acc' (ID: 6278)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.6344701647758484
    2. '<|end|>' → logprob: -1.6344702243804932
    3. '#' → logprob: -1.7594702243804932
    4. 'import' → logprob: -3.134470224380493
    5. ' ' → logprob: -3.384470224380493
    6. ' import' → logprob: -4.384469985961914
    7. ' string' → logprob: -5.134469985961914
    8. 'string' → logprob: -5.884469985961914
    9. '<|end|>' → logprob: -7.634469985961914
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -7.634469985961914

Token 183: 'ès' (ID: 4119)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.8713834285736084
    2. 'odings' → logprob: -2.1213834285736084
    3. 'oder' → logprob: -2.1213834285736084
    4. 'ess' → logprob: -2.6213834285736084
    5. 'oders' → logprob: -2.7463834285736084
    6. 'oding' → logprob: -2.7463834285736084
    7. 'ol' → logprob: -2.7463834285736084
    8. 'ii' → logprob: -2.8713834285736084
    9. 'odes' → logprob: -2.8713834285736084
    10. 'es' → logprob: -3.2463834285736084

Token 184: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: ' des' (ID: 731)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.1724332869052887
    2. 'string' → logprob: -2.047433376312256
    3. ' ascii' → logprob: -3.922433376312256
    4. 'ascii' → logprob: -4.797433376312256
    5. ' punctuation' → logprob: -7.922433376312256
    6. ' les' → logprob: -8.047432899475098
    7. 'pun' → logprob: -9.297432899475098
    8. ' des' → logprob: -9.547432899475098
    9. 'les' → logprob: -9.547432899475098
    10. ' ' → logprob: -9.672432899475098

Token 186: ' chaînes' (ID: 179904)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.384206086397171
    2. ' ascii' → logprob: -2.1342060565948486
    3. 'string' → logprob: -2.7592060565948486
    4. ' constantes' → logprob: -2.8842060565948486
    5. ' constants' → logprob: -3.0092060565948486
    6. 'ascii' → logprob: -3.8842060565948486
    7. ' caracteres' → logprob: -6.134206295013428
    8. 'constants' → logprob: -6.259206295013428
    9. ' caractères' → logprob: -6.259206295013428
    10. ' punctuation' → logprob: -6.509206295013428

Token 187: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.635691225528717
    2. ' caractères' → logprob: -0.760691225528717
    3. 'chars' → logprob: -6.760691165924072
    4. ' caracteres' → logprob: -7.010691165924072
    5. 'ascii' → logprob: -7.385691165924072
    6. ' caract' → logprob: -8.76069164276123
    7. ' caractère' → logprob: -9.63569164276123
    8. 'const' → logprob: -10.51069164276123
    9. '```' → logprob: -10.51069164276123
    10. 'characters' → logprob: -10.51069164276123

Token 189: ' cour' (ID: 2871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: 'antes' (ID: 5193)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pt' → logprob: -1.4746328592300415
    2. 's' → logprob: -1.7246328592300415
    3. 'import' → logprob: -2.224632740020752
    4. 'pts' → logprob: -2.599632740020752
    5. '```' → logprob: -3.099632740020752
    6. 't' → logprob: -3.224632740020752
    7. 'ascii' → logprob: -3.224632740020752
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -3.224632740020752
    9. 'iert' → logprob: -3.974632740020752
    10. 'at' → logprob: -4.349632740020752

Token 191: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8111709952354431
    2. '<|end|>' → logprob: -0.9361709952354431
    3. '

' → logprob: -2.561171054840088
    4. 'import' → logprob: -2.686171054840088
    5. '\n' → logprob: -4.686171054840088
    6. '<|end|>' → logprob: -5.561171054840088
    7. '#' → logprob: -6.311171054840088
    8. '


' → logprob: -7.686171054840088
    9. '' → logprob: -7.811171054840088
    10. '
 
' → logprob: -7.936171054840088

Token 192: 'ascii' (ID: 91813)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026555603370070457
    2. 'import' → logprob: -4.77655553817749
    3. 'ascii' → logprob: -5.15155553817749
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.27655553817749
    5. ' )' → logprob: -6.40155553817749
    6. ',' → logprob: -6.65155553817749
    7. 'as' → logprob: -6.90155553817749
    8. ' ascii' → logprob: -7.02655553817749
    9. 'string' → logprob: -7.65155553817749
    10. ' import' → logprob: -7.65155553817749

Token 193: '_letters' (ID: 175934)
  Prédit: '_letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.014692594297230244
    2. '_upper' → logprob: -4.514692783355713
    3. '_lower' → logprob: -6.139692783355713
    4. '_' → logprob: -7.764692783355713
    5. 'letters' → logprob: -7.764692783355713
    6. 'uppercase' → logprob: -8.389692306518555
    7. ')' → logprob: -8.639692306518555
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.889692306518555
    9. '_)' → logprob: -10.389692306518555
    10. '_strings' → logprob: -10.764692306518555

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4752699136734009
    2. ')' → logprob: -0.9752699136734009
    3. 'import' → logprob: -7.350269794464111
    4. ' ,' → logprob: -8.35027027130127
    5. ' )' → logprob: -8.60027027130127
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -10.47527027130127
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -10.60027027130127
    8. ',)' → logprob: -10.72527027130127
    9. '")' → logprob: -11.35027027130127
    10. 'string' → logprob: -11.85027027130127

Token 195: ' digits' (ID: 37806)
  Prédit: 'ascii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ascii' → logprob: -0.14886896312236786
    2. 'digits' → logprob: -2.273869037628174
    3. ' ascii' → logprob: -4.023869037628174
    4. ' punctuation' → logprob: -4.773869037628174
    5. ' digits' → logprob: -5.523869037628174
    6. 'pun' → logprob: -5.523869037628174
    7. 'wh' → logprob: -7.773869037628174
    8. 'as' → logprob: -8.523868560791016
    9. '.as' → logprob: -8.648868560791016
    10. ' whitespace' → logprob: -9.148868560791016

Token 196: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2020900845527649
    2. ',' → logprob: -1.7020900249481201
    3. 'import' → logprob: -8.5770902633667
    4. ' )' → logprob: -8.5770902633667
    5. ',)' → logprob: -8.7020902633667
    6. ' ,' → logprob: -10.3270902633667
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -10.7020902633667
    8. '...)' → logprob: -10.8270902633667
    9. '")' → logprob: -11.3270902633667
    10. 'string' → logprob: -12.2020902633667

Token 197: ' etc' (ID: 5178)
  Prédit: 'pun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pun' → logprob: -0.819740355014801
    2. 'ascii' → logprob: -1.1947402954101562
    3. ' punctuation' → logprob: -1.4447402954101562
    4. 'wh' → logprob: -4.444740295410156
    5. ' ascii' → logprob: -5.444740295410156
    6. ' whitespace' → logprob: -5.819740295410156
    7. 'print' → logprob: -6.944740295410156
    8. 'he' → logprob: -8.194740295410156
    9. '```' → logprob: -8.569740295410156
    10. 'as' → logprob: -9.444740295410156

Token 198: '.)
' (ID: 32616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.478889215737581e-05
    2. ',' → logprob: -10.500054359436035
    3. ' )' → logprob: -11.750054359436035
    4. ')
' → logprob: -11.875054359436035
    5. 'import' → logprob: -12.000054359436035
    6. '#' → logprob: -12.875054359436035
    7. '')' → logprob: -13.875054359436035
    8. '")' → logprob: -14.125054359436035
    9. ')#' → logprob: -15.375054359436035
    10. ']' → logprob: -15.500054359436035

Token 199: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23659762740135193
    2. '<|end|>' → logprob: -2.1115975379943848
    3. '

' → logprob: -2.6115975379943848
    4. 'import' → logprob: -4.986597537994385
    5. '\n' → logprob: -5.611597537994385
    6. '<|end|>' → logprob: -5.736597537994385
    7. '#' → logprob: -7.861597537994385
    8. '' → logprob: -8.111598014831543
    9. '


' → logprob: -8.111598014831543
    10. '
 
' → logprob: -8.236598014831543

Token 200: ' bis' (ID: 7204)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.348541259765625
    2. ' typing' → logprob: -1.598541259765625
    3. ' fractions' → logprob: -3.348541259765625
    4. ' os' → logprob: -3.973541259765625
    5. ' operator' → logprob: -4.348541259765625
    6. ' datetime' → logprob: -5.348541259765625
    7. 'typing' → logprob: -5.348541259765625
    8. ' re' → logprob: -5.973541259765625
    9. ' io' → logprob: -6.598541259765625
    10. 'operator' → logprob: -6.723541259765625

Token 201: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -6.704273118884885e-07
    2. 'e' → logprob: -14.875000953674316
    3. 'ct' → logprob: -16.375
    4. 'ec' → logprob: -17.0
    5. '
' → logprob: -17.25
    6. 'ext' → logprob: -17.875
    7. 'ecta' → logprob: -17.875
    8. 'ects' → logprob: -18.125
    9. '```' → logprob: -18.25
    10. 'sect' → logprob: -18.5

Token 202: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05024639889597893
    2. 'import' → logprob: -3.050246477127075
    3. ' ' → logprob: -6.550246238708496
    4. '<|end|>' → logprob: -9.050246238708496
    5. ' ' → logprob: -10.050246238708496
    6. '_import' → logprob: -10.300246238708496
    7. '	import' → logprob: -10.425246238708496
    8. ' importar' → logprob: -14.175246238708496
    9. ' Import' → logprob: -15.050246238708496
    10. ' im' → logprob: -15.300246238708496

Token 203: ' bis' (ID: 7204)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.31023216247558594
    2. ' bis' → logprob: -1.810232162475586
    3. 'ins' → logprob: -2.310232162475586
    4. 'bis' → logprob: -5.685232162475586
    5. '_ins' → logprob: -7.810232162475586
    6. ' ' → logprob: -10.310232162475586
    7. '.ins' → logprob: -10.685232162475586
    8. '(ins' → logprob: -11.810232162475586
    9. '_left' → logprob: -14.185232162475586
    10. '_' → logprob: -14.310232162475586

Token 204: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.8624639324116288e-06
    2. 'e' → logprob: -13.375001907348633
    3. 'ext' → logprob: -15.875001907348633
    4. 'ec' → logprob: -17.000001907348633
    5. 'ort' → logprob: -17.750001907348633
    6. 'ectl' → logprob: -18.125001907348633
    7. 'ects' → logprob: -18.125001907348633
    8. 'sect' → logprob: -18.625001907348633
    9. '
' → logprob: -18.750001907348633
    10. 'ected' → logprob: -18.875001907348633

Token 205: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.020812099799513817
    2. '_right' → logprob: -4.020812034606934
    3. '_' → logprob: -6.020812034606934
    4. 'left' → logprob: -9.020812034606934
    5. '<|end|>' → logprob: -9.895812034606934
    6. ',' → logprob: -10.645812034606934
    7. 'right' → logprob: -11.520812034606934
    8. ' ' → logprob: -11.895812034606934
    9. '_LEFT' → logprob: -12.645812034606934
    10. 'Left' → logprob: -13.270812034606934

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.632174551486969
    2. '<|end|>' → logprob: -0.882174551486969
    3. '
' → logprob: -3.632174491882324
    4. ' ' → logprob: -4.007174491882324
    5. '<|end|>' → logprob: -5.132174491882324
    6. 'import' → logprob: -7.007174491882324
    7. '  
' → logprob: -7.257174491882324
    8. '

' → logprob: -7.757174491882324
    9. '' → logprob: -7.757174491882324
    10. '  ' → logprob: -7.882174491882324

Token 207: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.6934736371040344
    2. 'bis' → logprob: -0.6934736371040344
    3. ' ins' → logprob: -8.693473815917969
    4. 'ins' → logprob: -8.818473815917969
    5. 'b' → logprob: -12.068473815917969
    6. '	b' → logprob: -13.068473815917969
    7. ' ' → logprob: -13.318473815917969
    8. '```' → logprob: -14.693473815917969
    9. 's' → logprob: -16.50597381591797
    10. 'bi' → logprob: -16.75597381591797

Token 208: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.01116100512444973
    2. 'sect' → logprob: -4.636160850524902
    3. 'ct' → logprob: -6.636160850524902
    4. 'right' → logprob: -10.386160850524902
    5. '_right' → logprob: -11.261160850524902
    6. 'ext' → logprob: -11.636160850524902
    7. '```' → logprob: -11.761160850524902
    8. 'ght' → logprob: -12.261160850524902
    9. 's' → logprob: -12.511160850524902
    10. 'e' → logprob: -12.761160850524902

Token 209: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0026448601856827736
    2. 'right' → logprob: -6.002645015716553
    3. '_' → logprob: -8.752644538879395
    4. '_RIGHT' → logprob: -12.502644538879395
    5. 'Right' → logprob: -13.752644538879395
    6. 'ight' → logprob: -13.877644538879395
    7. '​' → logprob: -14.127644538879395
    8. '<|end|>' → logprob: -14.252644538879395
    9. ' right' → logprob: -14.377644538879395
    10. 'r' → logprob: -14.502644538879395

Token 210: '        ' (ID: 269)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' Fon' (ID: 83815)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5472484827041626
    2. '<|end|>' → logprob: -1.4222484827041626
    3. ' bis' → logprob: -2.047248363494873
    4. 'bis' → logprob: -3.672248363494873
    5. 'import' → logprob: -4.547248363494873
    6. 'from' → logprob: -5.547248363494873
    7. ' 
' → logprob: -5.547248363494873
    8. '<|end|>' → logprob: -7.172248363494873
    9. ',' → logprob: -7.297248363494873
    10. '#' → logprob: -7.422248363494873

Token 213: 'ctions' (ID: 2620)
  Prédit: 'ction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ction' → logprob: -0.042801398783922195
    2. 'ct' → logprob: -3.4178013801574707
    3. 't' → logprob: -5.042801380157471
    4. 'ctions' → logprob: -6.042801380157471
    5. 'rt' → logprob: -8.667801856994629
    6. 'tion' → logprob: -10.292801856994629
    7. 'r' → logprob: -10.792801856994629
    8. 'st' → logprob: -11.292801856994629
    9. '```' → logprob: -11.292801856994629
    10. 'c' → logprob: -11.667801856994629

Token 214: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' trouver' (ID: 23195)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.2897639572620392
    2. 'ins' → logprob: -1.4147639274597168
    3. ' bis' → logprob: -5.914763927459717
    4. 'bis' → logprob: -6.164763927459717
    5. ' inser' → logprob: -6.789763927459717
    6. ' l' → logprob: -7.164763927459717
    7. ' insertion' → logprob: -7.289763927459717
    8. 'in' → logprob: -8.039764404296875
    9. 'insert' → logprob: -8.664764404296875
    10. 'l' → logprob: -8.789764404296875

Token 216: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8893787860870361
    2. '<|end|>' → logprob: -1.2643787860870361
    3. ' des' → logprob: -2.264378786087036
    4. ' la' → logprob: -3.014378786087036
    5. 'indices' → logprob: -3.014378786087036
    6. ' indices' → logprob: -3.639378786087036
    7. ' les' → logprob: -4.139378547668457
    8. 'des' → logprob: -4.514378547668457
    9. 'les' → logprob: -4.764378547668457
    10. ' positions' → logprob: -4.889378547668457

Token 217: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.4554767906665802
    2. ' position' → logprob: -1.5804767608642578
    3. ' positions' → logprob: -3.205476760864258
    4. 'positions' → logprob: -3.205476760864258
    5. ' insertion' → logprob: -3.705476760864258
    6. ' bonne' → logprob: -5.080476760864258
    7. 'points' → logprob: -5.080476760864258
    8. 'point' → logprob: -5.330476760864258
    9. 'indices' → logprob: -5.455476760864258
    10. ' point' → logprob: -5.455476760864258

Token 218: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: ''in' (ID: 17942)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3898809850215912
    2. ''in' → logprob: -2.639880895614624
    3. ' insertion' → logprob: -2.639880895614624
    4. ''une' → logprob: -2.764880895614624
    5. ''un' → logprob: -3.264880895614624
    6. 'es' → logprob: -3.764880895614624
    7. ''' → logprob: -4.639881134033203
    8. 'insert' → logprob: -4.889881134033203
    9. 'ans' → logprob: -5.014881134033203
    10. 'e' → logprob: -5.014881134033203

Token 220: 'sertion' (ID: 21747)
  Prédit: 'sertion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sertion' → logprob: -0.004343006294220686
    2. 'sert' → logprob: -5.504343032836914
    3. 's' → logprob: -8.379343032836914
    4. 'ser' → logprob: -11.754343032836914
    5. '```' → logprob: -11.754343032836914
    6. 'sort' → logprob: -12.129343032836914
    7. 't' → logprob: -13.504343032836914
    8. '' → logprob: -13.754343032836914
    9. 'tention' → logprob: -13.754343032836914
    10. 'scription' → logprob: -13.754343032836914

Token 221: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09253381192684174
    2. ',' → logprob: -3.467533826828003
    3. '<|end|>' → logprob: -3.967533826828003
    4. ' (' → logprob: -4.217533588409424
    5. '_' → logprob: -4.842533588409424
    6. ' ' → logprob: -5.092533588409424
    7. ')' → logprob: -6.092533588409424
    8. '(
' → logprob: -6.592533588409424
    9. '<|end|>' → logprob: -6.592533588409424
    10. 'def' → logprob: -7.217533588409424

Token 222: ' gauche' (ID: 58367)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: '/d' (ID: 6662)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6871742010116577
    2. ',' → logprob: -0.8121742010116577
    3. '<|end|>' → logprob: -3.0621743202209473
    4. ' ' → logprob: -5.937174320220947
    5. '<|end|>' → logprob: -6.687174320220947
    6. ' )' → logprob: -6.687174320220947
    7. '#' → logprob: -8.687173843383789
    8. '_' → logprob: -8.937173843383789
    9. ' ,' → logprob: -8.937173843383789
    10. '.' → logprob: -8.937173843383789

Token 224: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.0010990150040015578
    2. 'roit' → logprob: -7.376099109649658
    3. 'dro' → logprob: -8.3760986328125
    4. 'rop' → logprob: -9.8760986328125
    5. '```' → logprob: -10.1260986328125
    6. 'e' → logprob: -10.7510986328125
    7. 'roits' → logprob: -11.1260986328125
    8. 'r' → logprob: -11.2510986328125
    9. 'es' → logprob: -11.3760986328125
    10. 'import' → logprob: -11.3760986328125

Token 225: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.3344864249229431
    2. 'ro' → logprob: -2.459486484527588
    3. 'e' → logprob: -2.584486484527588
    4. 'import' → logprob: -4.334486484527588
    5. 'ight' → logprob: -4.334486484527588
    6. 'it' → logprob: -4.459486484527588
    7. 'rt' → logprob: -4.709486484527588
    8. 'r' → logprob: -4.959486484527588
    9. 'te' → logprob: -4.959486484527588
    10. 't' → logprob: -5.084486484527588

Token 226: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5828452706336975
    2. '<|end|>' → logprob: -0.9578452706336975
    3. ',' → logprob: -3.2078452110290527
    4. '

' → logprob: -4.957845211029053
    5. '<|end|>' → logprob: -5.457845211029053
    6. 'import' → logprob: -5.832845211029053
    7. '#' → logprob: -7.457845211029053
    8. '\n' → logprob: -7.707845211029053
    9. '```' → logprob: -7.832845211029053
    10. ' 
' → logprob: -8.082845687866211

Token 227: ' une' (ID: 2463)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lists' → logprob: -1.3016958236694336
    2. ' une' → logprob: -1.6766958236694336
    3. ' a' → logprob: -1.8016958236694336
    4. 'sorted' → logprob: -1.9266958236694336
    5. ' sorted' → logprob: -2.3016958236694336
    6. 'une' → logprob: -3.4266958236694336
    7. 'a' → logprob: -3.5516958236694336
    8. 'lists' → logprob: -3.6766958236694336
    9. 'list' → logprob: -3.8016958236694336
    10. 'bis' → logprob: -4.676695823669434

Token 228: ' liste' (ID: 31719)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.49189478158950806
    2. ' sorted' → logprob: -0.9918947815895081
    3. 'list' → logprob: -4.616894721984863
    4. 'liste' → logprob: -5.241894721984863
    5. ' liste' → logprob: -7.241894721984863
    6. ' list' → logprob: -7.241894721984863
    7. 'bis' → logprob: -7.366894721984863
    8. '_sorted' → logprob: -8.491894721984863
    9. 's' → logprob: -10.366894721984863
    10. 'b' → logprob: -10.741894721984863

Token 229: ' tri' (ID: 12665)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46207329630851746
    2. '<|end|>' → logprob: -1.0870733261108398
    3. '

' → logprob: -3.58707332611084
    4. '<|end|>' → logprob: -5.71207332611084
    5. 'import' → logprob: -7.46207332611084
    6. '
 
' → logprob: -8.46207332611084
    7. '#' → logprob: -8.58707332611084
    8. '


' → logprob: -8.83707332611084
    9. '
' → logprob: -8.96207332611084
    10. '\n' → logprob: -9.21207332611084

Token 230: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0041675567626953125
    2. 'ées' → logprob: -5.754167556762695
    3. 'é' → logprob: -8.004167556762695
    4. 'st' → logprob: -8.879167556762695
    5. 'e' → logprob: -9.254167556762695
    6. 'ste' → logprob: -9.504167556762695
    7. 'ed' → logprob: -9.504167556762695
    8. 'ee' → logprob: -10.004167556762695
    9. 'érée' → logprob: -10.379167556762695
    10. 'uée' → logprob: -10.504167556762695

Token 231: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48782649636268616
    2. '<|end|>' → logprob: -1.1128264665603638
    3. '

' → logprob: -3.4878265857696533
    4. '<|end|>' → logprob: -4.487826347351074
    5. 'import' → logprob: -4.612826347351074
    6. ',' → logprob: -6.237826347351074
    7. '#' → logprob: -6.862826347351074
    8. '\n' → logprob: -7.487826347351074
    9. ' 
' → logprob: -7.487826347351074
    10. '


' → logprob: -8.112826347351074

Token 232: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6870154738426208
    2. '

' → logprob: -1.0620155334472656
    3. '<|end|>' → logprob: -2.0620155334472656
    4. '\n' → logprob: -5.062015533447266
    5. 'import' → logprob: -5.437015533447266
    6. '#' → logprob: -5.562015533447266
    7. '<|end|>' → logprob: -5.812015533447266
    8. 'def' → logprob: -5.812015533447266
    9. '


' → logprob: -7.437015533447266
    10. '' → logprob: -7.687015533447266

Token 233: ' math' (ID: 13324)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.5427278876304626
    2. ' operator' → logprob: -1.9177279472351074
    3. ' math' → logprob: -2.1677279472351074
    4. ' heap' → logprob: -2.7927279472351074
    5. ' collections' → logprob: -3.7927279472351074
    6. ' fractions' → logprob: -3.9177279472351074
    7. ' typing' → logprob: -4.042727947235107
    8. 'operator' → logprob: -4.667727947235107
    9. 'collections' → logprob: -4.917727947235107
    10. 'math' → logprob: -5.292727947235107

Token 234: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06206762045621872
    2. 'import' → logprob: -2.8120675086975098
    3. ' ' → logprob: -9.937067985534668
    4. '	import' → logprob: -10.812067985534668
    5. '<|end|>' → logprob: -10.937067985534668
    6. '_import' → logprob: -11.937067985534668
    7. ' ' → logprob: -13.812067985534668
    8. ' importar' → logprob: -14.187067985534668
    9. '```' → logprob: -14.187067985534668
    10. '#import' → logprob: -14.312067985534668

Token 235: ' factorial' (ID: 111204)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.3082376718521118
    2. ' inf' → logprob: -2.8082375526428223
    3. 'sqrt' → logprob: -2.9332375526428223
    4. 'ceil' → logprob: -3.1832375526428223
    5. ' factorial' → logprob: -3.1832375526428223
    6. ' ceil' → logprob: -3.3082375526428223
    7. ' sqrt' → logprob: -3.9332375526428223
    8. 'inf' → logprob: -4.933237552642822
    9. 'log' → logprob: -6.183237552642822
    10. 'g' → logprob: -6.558237552642822

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0022847652435303
    2. '<|end|>' → logprob: -1.0022847652435303
    3. '
' → logprob: -1.6272847652435303
    4. 'import' → logprob: -3.7522847652435303
    5. '

' → logprob: -4.752285003662109
    6. 'def' → logprob: -4.752285003662109
    7. '#' → logprob: -4.877285003662109
    8. '\n' → logprob: -4.877285003662109
    9. '<|end|>' → logprob: -5.377285003662109
    10. ' 
' → logprob: -6.127285003662109

Token 237: ' ceil' (ID: 35964)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.7266485095024109
    2. 'g' → logprob: -1.7266485691070557
    3. 'ceil' → logprob: -1.8516485691070557
    4. ' comb' → logprob: -3.1016485691070557
    5. ' ceil' → logprob: -3.3516485691070557
    6. 'sqrt' → logprob: -3.3516485691070557
    7. 'log' → logprob: -3.7266485691070557
    8. 'is' → logprob: -4.101648330688477
    9. 'comb' → logprob: -4.226648330688477
    10. 'inf' → logprob: -5.851648330688477

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0044022249057888985
    2. '<|end|>' → logprob: -5.754402160644531
    3. 'import' → logprob: -7.004402160644531
    4. '
' → logprob: -9.379402160644531
    5. ' ,' → logprob: -9.879402160644531
    6. ' as' → logprob: -9.879402160644531
    7. '#' → logprob: -10.754402160644531
    8. 'def' → logprob: -10.879402160644531
    9. '<|end|>' → logprob: -11.004402160644531
    10. 'from' → logprob: -11.004402160644531

Token 239: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.6962254047393799
    2. 'floor' → logprob: -0.6962254047393799
    3. 'log' → logprob: -6.446225166320801
    4. 'sqrt' → logprob: -8.0712251663208
    5. 'inf' → logprob: -8.3212251663208
    6. ' gcd' → logprob: -8.3212251663208
    7. ' inf' → logprob: -8.5712251663208
    8. ' log' → logprob: -8.8212251663208
    9. 'fabs' → logprob: -9.0712251663208
    10. ' sqrt' → logprob: -9.1962251663208

Token 240: '             ' (ID: 1698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20189274847507477
    2. ' ' → logprob: -2.326892852783203
    3. '<|end|>' → logprob: -2.701892852783203
    4. ' ,' → logprob: -4.576892852783203
    5. 'import' → logprob: -6.076892852783203
    6. '
' → logprob: -6.201892852783203
    7. ' 
' → logprob: -6.701892852783203
    8. '#' (adapté à ' #') → logprob: -7.951892852783203
    9. '  
' → logprob: -7.951892852783203
    10. ')' → logprob: -8.076892852783203

Token 242: ' Import' (ID: 19998)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -1.280030369758606
    2. 'log' → logprob: -1.405030369758606
    3. 'pow' → logprob: -1.530030369758606
    4. 'sqrt' → logprob: -2.7800302505493164
    5. ' comb' → logprob: -3.1550302505493164
    6. 'fabs' → logprob: -3.4050302505493164
    7. 'g' → logprob: -3.6550302505493164
    8. ' factorial' → logprob: -4.030030250549316
    9. 'exp' → logprob: -4.155030250549316
    10. ' sqrt' → logprob: -4.530030250549316

Token 243: ' direct' (ID: 2823)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.045486997812986374
    2. ' factorial' → logprob: -3.4204869270324707
    3. 'math' → logprob: -5.670486927032471
    4. ' itertools' → logprob: -5.795486927032471
    5. ' sqrt' → logprob: -7.295486927032471
    6. 'factor' → logprob: -7.545486927032471
    7. ' defaultdict' → logprob: -7.545486927032471
    8. ' sys' → logprob: -7.795486927032471
    9. ' numpy' → logprob: -7.795486927032471
    10. ' functools' → logprob: -7.920486927032471

Token 244: ' de' (ID: 334)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4229833483695984
    2. ',' → logprob: -1.9229834079742432
    3. '<|end|>' → logprob: -2.297983407974243
    4. ' ' → logprob: -2.422983407974243
    5. ' ,' → logprob: -6.672983169555664
    6. '  ' → logprob: -6.672983169555664
    7. 'math' → logprob: -6.922983169555664
    8. 'from' → logprob: -7.047983169555664
    9. ' ' → logprob: -7.422983169555664
    10. 'import' → logprob: -7.422983169555664

Token 245: ' certaines' (ID: 46662)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.4746043682098389
    2. 'math' → logprob: -1.4746043682098389
    3. 'sqrt' → logprob: -1.8496043682098389
    4. 'pow' → logprob: -2.349604368209839
    5. 'log' → logprob: -2.599604368209839
    6. ' factorial' → logprob: -2.849604368209839
    7. ' sqrt' → logprob: -2.974604368209839
    8. ' gcd' → logprob: -3.849604368209839
    9. 'is' → logprob: -3.974604368209839
    10. ' is' → logprob: -4.099604606628418

Token 246: ' fonctions' (ID: 87283)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.23108240962028503
    2. 'math' → logprob: -1.6060824394226074
    3. ' fonctions' → logprob: -5.356082439422607
    4. ' functions' → logprob: -7.731082439422607
    5. 'cmath' → logprob: -8.35608196258545
    6. ' mathematical' → logprob: -9.35608196258545
    7. 'functions' → logprob: -9.60608196258545
    8. '_math' → logprob: -10.48108196258545
    9. '(math' → logprob: -10.85608196258545
    10. ' matem' → logprob: -11.48108196258545

Token 247: ' math' (ID: 13324)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8058902621269226
    2. '<|end|>' → logprob: -1.1808903217315674
    3. '
' → logprob: -1.6808903217315674
    4. 'import' → logprob: -4.055890083312988
    5. 'def' → logprob: -4.180890083312988
    6. '#' → logprob: -4.930890083312988
    7. '

' → logprob: -5.055890083312988
    8. '<|end|>' → logprob: -5.305890083312988
    9. '\n' → logprob: -5.555890083312988
    10. ',
' → logprob: -6.305890083312988

Token 248: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.5964654088020325
    2. '<|end|>' → logprob: -0.8464654088020325
    3. 'import' → logprob: -5.221465587615967
    4. 'es' → logprob: -5.471465587615967
    5. 'ématique' → logprob: -5.471465587615967
    6. 's' → logprob: -5.596465587615967
    7. 'ém' → logprob: -8.096465110778809
    8. '#' → logprob: -8.221465110778809
    9. 'plotlib' → logprob: -8.221465110778809
    10. ',' → logprob: -8.346465110778809

Token 249: ' :' (ID: 712)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8151370286941528
    2. '

' → logprob: -1.1901370286941528
    3. '<|end|>' → logprob: -1.5651370286941528
    4. 'import' → logprob: -3.9401369094848633
    5. '\n' → logprob: -4.690136909484863
    6. 'def' → logprob: -5.690136909484863
    7. ',' → logprob: -5.690136909484863
    8. '<|end|>' → logprob: -5.815136909484863
    9. '#' → logprob: -6.315136909484863
    10. '


' → logprob: -6.815136909484863

Token 250: ' factor' (ID: 12332)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.6381295323371887
    2. 'g' → logprob: -1.763129472732544
    3. 'pow' → logprob: -2.138129472732544
    4. 'sqrt' → logprob: -3.013129472732544
    5. 'log' → logprob: -3.388129472732544
    6. ' comb' → logprob: -3.513129472732544
    7. ' factorial' → logprob: -4.013129711151123
    8. 'comb' → logprob: -4.263129711151123
    9. 'inf' → logprob: -4.513129711151123
    10. 'factor' → logprob: -4.888129711151123

Token 251: 'ielle' (ID: 22380)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.004822414834052324
    2. 'ielle' → logprob: -6.004822254180908
    3. 'iel' → logprob: -6.504822254180908
    4. 'ialize' → logprob: -7.129822254180908
    5. '```' → logprob: -11.254822731018066
    6. 'rial' → logprob: -12.504822731018066
    7. 'ialis' → logprob: -12.754822731018066
    8. 'ials' → logprob: -12.754822731018066
    9. 'iale' → logprob: -12.754822731018066
    10. 'y' → logprob: -13.379822731018066

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05614443123340607
    2. '<|end|>' → logprob: -3.0561444759368896
    3. ')' → logprob: -5.9311442375183105
    4. ',
' → logprob: -6.6811442375183105
    5. '
' → logprob: -7.0561442375183105
    6. '()' → logprob: -7.1811442375183105
    7. '#' → logprob: -7.9311442375183105
    8. 'import' → logprob: -7.9311442375183105
    9. 'def' → logprob: -8.306144714355469
    10. '<|end|>' → logprob: -8.681144714355469

Token 253: ' plafond' (ID: 114829)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.19687266647815704
    2. 'sqrt' → logprob: -2.5718727111816406
    3. 'pow' → logprob: -3.6968727111816406
    4. ' sqrt' → logprob: -4.196872711181641
    5. ' log' → logprob: -4.196872711181641
    6. ' gcd' → logprob: -4.446872711181641
    7. 'fabs' → logprob: -4.571872711181641
    8. 'ceil' → logprob: -5.071872711181641
    9. 'is' → logprob: -5.821872711181641
    10. 'exp' → logprob: -5.821872711181641

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1097249835729599
    2. '<|end|>' → logprob: -2.984724998474121
    3. '
' → logprob: -3.484724998474121
    4. 'import' → logprob: -4.359724998474121
    5. '#' → logprob: -5.984724998474121
    6. 'from' → logprob: -6.234724998474121
    7. ',
' → logprob: -6.234724998474121
    8. '<|end|>' → logprob: -6.609724998474121
    9. 'def' → logprob: -6.859724998474121
    10. '

' → logprob: -7.609724998474121

Token 255: ' plan' (ID: 3496)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.8515853881835938
    2. 'floor' → logprob: -1.7265853881835938
    3. 'pow' → logprob: -2.1015853881835938
    4. 'sqrt' → logprob: -2.6015853881835938
    5. 'round' → logprob: -2.9765853881835938
    6. 'log' → logprob: -3.8515853881835938
    7. 'inf' → logprob: -4.101585388183594
    8. 't' → logprob: -4.226585388183594
    9. 'pl' → logprob: -4.226585388183594
    10. 'division' → logprob: -4.976585388183594

Token 256: 'cher' (ID: 6665)
  Prédit: 'cher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.0008829995640553534
    2. 'eur' → logprob: -8.500883102416992
    3. 'e' → logprob: -8.625883102416992
    4. 'er' → logprob: -8.625883102416992
    5. 'chers' → logprob: -9.125883102416992
    6. 'ker' → logprob: -10.375883102416992
    7. 'ner' → logprob: -10.625883102416992
    8. 'ar' → logprob: -10.750883102416992
    9. 'plan' → logprob: -10.875883102416992
    10. 'r' → logprob: -10.875883102416992

Token 257: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2998499870300293
    2. '
' → logprob: -2.1748499870300293
    3. 'import' → logprob: -2.1748499870300293
    4. '<|end|>' → logprob: -4.299849987030029
    5. '


' → logprob: -5.049849987030029
    6. '\n' → logprob: -5.799849987030029
    7. 'def' → logprob: -5.799849987030029
    8. '



' → logprob: -6.674849987030029
    9. '#' → logprob: -6.924849987030029
    10. '
 
' → logprob: -7.174849987030029

Token 259: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.6860523819923401
    2. 'operator' → logprob: -1.8110523223876953
    3. ' functools' → logprob: -2.1860523223876953
    4. 'collections' → logprob: -2.4360523223876953
    5. ' fractions' → logprob: -3.1860523223876953
    6. ' collections' → logprob: -3.9360523223876953
    7. 'fra' → logprob: -4.436052322387695
    8. ' typing' → logprob: -4.811052322387695
    9. 'os' → logprob: -4.936052322387695
    10. ' os' → logprob: -5.061052322387695

Token 260: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16023144125938416
    2. 'import' → logprob: -1.9102314710617065
    3. '	import' → logprob: -12.160231590270996
    4. '_import' → logprob: -13.660231590270996
    5. ' ' → logprob: -15.035231590270996
    6. '<|end|>' → logprob: -15.285231590270996
    7. ' importar' → logprob: -16.53523063659668
    8. ''import' → logprob: -16.78523063659668
    9. ' ' → logprob: -17.16023063659668
    10. 'Import' → logprob: -17.28523063659668

Token 261: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.10363397002220154
    2. 'item' → logprob: -2.3536338806152344
    3. ' mul' → logprob: -6.353633880615234
    4. ' attr' → logprob: -7.353633880615234
    5. ' add' → logprob: -8.103633880615234
    6. 'mul' → logprob: -8.353633880615234
    7. 'attr' → logprob: -8.478633880615234
    8. ' ' → logprob: -9.478633880615234
    9. 'add' → logprob: -9.728633880615234
    10. 'getitem' → logprob: -9.978633880615234

Token 262: '                           ' (ID: 1686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007942587835714221
    2. ' ,' → logprob: -7.375794410705566
    3. 'import' → logprob: -9.500794410705566
    4. '<|end|>' → logprob: -10.000794410705566
    5. ' ' → logprob: -10.875794410705566
    6. ',
' → logprob: -11.500794410705566
    7. ' as' → logprob: -13.375794410705566
    8. ',n' → logprob: -13.500794410705566
    9. ',...' → logprob: -13.500794410705566
    10. 't' → logprob: -13.750794410705566

Token 263: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031528843101114035
    2. '<|end|>' → logprob: -5.878152847290039
    3. ' ,' → logprob: -8.753152847290039
    4. 'import' → logprob: -8.878152847290039
    5. '<|end|>' → logprob: -11.378152847290039
    6. ' as' → logprob: -11.878152847290039
    7. ' ' → logprob: -12.003152847290039
    8. ',
' → logprob: -12.003152847290039
    9. 'from' → logprob: -12.128152847290039
    10. ',m' → logprob: -12.878152847290039

Token 264: ' Fonction' (ID: 189149)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5538244247436523
    2. 'import' → logprob: -1.1788244247436523
    3. ' operator' → logprob: -3.0538244247436523
    4. 'operator' → logprob: -3.5538244247436523
    5. 'from' → logprob: -3.8038244247436523
    6. ' from' → logprob: -4.428824424743652
    7. ' mul' → logprob: -5.803824424743652
    8. ',' → logprob: -6.678824424743652
    9. ' ' → logprob: -7.303824424743652
    10. ' item' → logprob: -7.428824424743652

Token 265: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' la' (ID: 557)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.40371137857437134
    2. 'import' → logprob: -1.6537113189697266
    3. ' mul' → logprob: -2.7787113189697266
    4. 'mult' → logprob: -3.9037113189697266
    5. 'operator' → logprob: -4.403711318969727
    6. 'multip' → logprob: -4.403711318969727
    7. ' effectuer' → logprob: -4.653711318969727
    8. ' multiplier' → logprob: -4.903711318969727
    9. ' utiliser' → logprob: -5.403711318969727
    10. 'multiply' → logprob: -6.028711318969727

Token 267: ' multiplication' (ID: 86340)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.034368377178907394
    2. 'multip' → logprob: -3.5343682765960693
    3. 'import' → logprob: -6.909368515014648
    4. 'operator' → logprob: -7.034368515014648
    5. 'item' → logprob: -7.409368515014648
    6. 'product' → logprob: -7.409368515014648
    7. ' mul' → logprob: -7.534368515014648
    8. '*' → logprob: -8.159368515014648
    9. ' multiplication' → logprob: -8.659368515014648
    10. 'multiply' → logprob: -8.784368515014648

Token 268: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12264905124902725
    2. '<|end|>' → logprob: -2.4976489543914795
    3. 'import' → logprob: -5.122649192810059
    4. '#' → logprob: -5.122649192810059
    5. '_' → logprob: -5.372649192810059
    6. ' ' → logprob: -5.497649192810059
    7. 'def' → logprob: -5.747649192810059
    8. ',
' → logprob: -6.747649192810059
    9. '
' → logprob: -6.747649192810059
    10. ':' → logprob: -6.872649192810059

Token 269: 'util' (ID: 2056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16147200763225555
    2. ' )' → logprob: -1.911471962928772
    3. ',' → logprob: -7.161471843719482
    4. 'mul' → logprob: -8.78647232055664
    5. ' mul' → logprob: -9.03647232055664
    6. '*)' → logprob: -9.66147232055664
    7. ' ,' → logprob: -10.41147232055664
    8. '*' → logprob: -10.66147232055664
    9. 'import' → logprob: -10.78647232055664
    10. 'multip' → logprob: -10.91147232055664

Token 270: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.12124020606279373
    2. 'isé' → logprob: -2.4962401390075684
    3. 'isateur' → logprob: -4.371240139007568
    4. 'itaire' → logprob: -5.121240139007568
    5. 'iser' → logprob: -5.246240139007568
    6. 'import' → logprob: -6.871240139007568
    7. 'ité' → logprob: -6.871240139007568
    8. 'isation' → logprob: -6.871240139007568
    9. 'isés' → logprob: -7.246240139007568
    10. 'isant' → logprob: -7.371240139007568

Token 271: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.940364420413971
    2. ',' → logprob: -1.0653643608093262
    3. ' dans' → logprob: -1.8153643608093262
    4. 'dans' → logprob: -3.565364360809326
    5. ' )' → logprob: -3.940364360809326
    6. ' souvent' → logprob: -4.315364360809326
    7. 'import' → logprob: -5.065364360809326
    8. ' in' → logprob: -5.190364360809326
    9. ' en' → logprob: -5.190364360809326
    10. ' as' → logprob: -5.565364360809326

Token 272: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.12160063534975052
    2. ' functools' → logprob: -2.74660062789917
    3. 'fun' → logprob: -3.24660062789917
    4. 'redu' → logprob: -5.12160062789917
    5. ' reduce' → logprob: -5.37160062789917
    6. 'import' → logprob: -7.99660062789917
    7. 'from' → logprob: -8.371601104736328
    8. ' reductions' → logprob: -9.996601104736328
    9. ' reducing' → logprob: -10.246601104736328
    10. 'prod' → logprob: -10.246601104736328

Token 273: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044556602369993925
    2. ' )' → logprob: -8.000445365905762
    3. ',' → logprob: -9.625445365905762
    4. '<|end|>' → logprob: -10.750445365905762
    5. 'import' → logprob: -11.000445365905762
    6. '),' → logprob: -13.500445365905762
    7. '())' → logprob: -14.375445365905762
    8. ',)' → logprob: -14.500445365905762
    9. '()' → logprob: -14.750445365905762
    10. ')
' → logprob: -14.875445365905762

Token 274: ' par' (ID: 686)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.6879670023918152
    2. 'reduce' → logprob: -1.43796706199646
    3. ')' → logprob: -2.06296706199646
    4. 'operator' → logprob: -2.93796706199646
    5. 'import' → logprob: -3.06296706199646
    6. 'pow' → logprob: -4.562966823577881
    7. 'prod' → logprob: -5.437966823577881
    8. 'item' → logprob: -5.687966823577881
    9. ' add' → logprob: -5.812966823577881
    10. 'lambda' → logprob: -5.937966823577881

Token 275: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.47106894850730896
    2. 'example' → logprob: -1.5960689783096313
    3. ' exemple' → logprob: -2.096068859100342
    4. 'fois' → logprob: -3.471068859100342
    5. ' example' → logprob: -4.471068859100342
    6. ' ex' → logprob: -5.221068859100342
    7. ')' → logprob: -7.596068859100342
    8. 'fun' → logprob: -8.3460693359375
    9. ' exemples' → logprob: -8.7210693359375
    10. 'e' → logprob: -8.8460693359375

Token 276: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013047587708570063
    2. ',' → logprob: -10.000130653381348
    3. 'import' → logprob: -10.750130653381348
    4. ' )' → logprob: -11.125130653381348
    5. '`)' → logprob: -11.375130653381348
    6. ')
' → logprob: -12.125130653381348
    7. 'ression' → logprob: -12.375130653381348
    8. '<|end|>' → logprob: -12.750130653381348
    9. '')' → logprob: -13.125130653381348
    10. 'from' → logprob: -13.250130653381348

Token 277: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0249632596969604
    2. '<|end|>' → logprob: -1.1499632596969604
    3. '\n' → logprob: -2.14996337890625
    4. '

' → logprob: -2.64996337890625
    5. '#' → logprob: -3.27496337890625
    6. 'import' → logprob: -3.52496337890625
    7. ',' → logprob: -3.64996337890625
    8. 'def' → logprob: -3.77496337890625
    9. '<|end|>' → logprob: -5.89996337890625
    10. '' → logprob: -5.89996337890625

Token 278: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.12741634249687195
    2. ' functools' → logprob: -2.1274163722991943
    3. 'collections' → logprob: -8.252416610717773
    4. 'fra' → logprob: -9.127416610717773
    5. 'operator' → logprob: -10.252416610717773
    6. 'math' → logprob: -10.377416610717773
    7. 'os' → logprob: -11.502416610717773
    8. ' itertools' → logprob: -11.877416610717773
    9. 'copy' → logprob: -12.002416610717773
    10. 'heap' → logprob: -12.127416610717773

Token 279: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023250602185726166
    2. 'import' → logprob: -3.7732505798339844
    3. '_import' → logprob: -12.523250579833984
    4. '	import' → logprob: -13.773250579833984
    5. ' ' → logprob: -15.148250579833984
    6. ' importar' → logprob: -16.398250579833984
    7. ' ' → logprob: -17.273250579833984
    8. '_' → logprob: -18.023250579833984
    9. ' импорт' → logprob: -18.023250579833984
    10. ' imports' → logprob: -18.148250579833984

Token 280: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.5773152112960815
    2. 'reduce' → logprob: -0.8273152112960815
    3. ' l' → logprob: -6.952315330505371
    4. 'l' → logprob: -8.702315330505371
    5. ' partial' → logprob: -8.952315330505371
    6. 'partial' → logprob: -10.077315330505371
    7. '_reduce' → logprob: -10.202315330505371
    8. 'redu' → logprob: -11.702315330505371
    9. ' wraps' → logprob: -11.827315330505371
    10. 'wrap' → logprob: -11.827315330505371

Token 281: '                       ' (ID: 968)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6211718320846558
    2. ' ' → logprob: -1.8711718320846558
    3. 'import' → logprob: -1.9961718320846558
    4. ',' → logprob: -2.1211719512939453
    5. '<|end|>' → logprob: -3.2461719512939453
    6. ' (' → logprob: -5.496171951293945
    7. ' ,' → logprob: -5.746171951293945
    8. '(' → logprob: -6.371171951293945
    9. ' ' → logprob: -6.496171951293945
    10. '<|end|>' → logprob: -6.871171951293945

Token 282: ' #' (ID: 1069)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5291919708251953
    2. 'import' → logprob: -1.4041919708251953
    3. ',' → logprob: -1.9041919708251953
    4. ' ' → logprob: -4.529191970825195
    5. '<|end|>' → logprob: -5.654191970825195
    6. ' ,' → logprob: -7.029191970825195
    7. ' ' → logprob: -8.404191970825195
    8. '_' → logprob: -8.779191970825195
    9. '	import' → logprob: -8.779191970825195
    10. '_import' → logprob: -9.529191970825195

Token 283: ' Fonction' (ID: 189149)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.9160646796226501
    2. 'reduce' → logprob: -1.041064739227295
    3. 'import' → logprob: -1.541064739227295
    4. 'l' → logprob: -4.416064739227295
    5. ' l' → logprob: -5.166064739227295
    6. ' partial' → logprob: -5.291064739227295
    7. 'cmp' → logprob: -5.416064739227295
    8. 'wrap' → logprob: -5.791064739227295
    9. ' reduce' → logprob: -6.916064739227295
    10. ' import' → logprob: -7.541064739227295

Token 284: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: ' appliquer' (ID: 172872)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.07038330286741257
    2. ' reduce' → logprob: -2.695383310317993
    3. 'partial' → logprob: -7.945383071899414
    4. ' partial' → logprob: -10.695383071899414
    5. 'l' → logprob: -10.820383071899414
    6. '.reduce' → logprob: -11.195383071899414
    7. ' functools' → logprob: -11.195383071899414
    8. 'redu' → logprob: -11.945383071899414
    9. ' l' → logprob: -12.195383071899414
    10. 'wrap' → logprob: -12.570383071899414

Token 286: ' une' (ID: 2463)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: ' opération' (ID: 86023)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.3743557929992676
    2. 'partial' → logprob: -1.6243557929992676
    3. ' partial' → logprob: -2.8743557929992676
    4. ' reduce' → logprob: -3.2493557929992676
    5. 'ré' → logprob: -5.499355792999268
    6. 'redu' → logprob: -5.874355792999268
    7. 'fonction' → logprob: -6.249355792999268
    8. ' function' → logprob: -6.249355792999268
    9. 'function' → logprob: -6.749355792999268
    10. 'l' → logprob: -6.874355792999268

Token 288: ' cumul' (ID: 163119)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: 'ée' (ID: 2894)
  Prédit: 'ative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.020407579839229584
    2. 'ativement' → logprob: -4.770407676696777
    3. 'ativer' → logprob: -5.770407676696777
    4. 'er' → logprob: -6.145407676696777
    5. 'atif' → logprob: -6.145407676696777
    6. 'atively' → logprob: -6.395407676696777
    7. 'ulative' → logprob: -7.395407676696777
    8. 'ateur' → logprob: -7.645407676696777
    9. 'ate' → logprob: -8.145407676696777
    10. 'at' → logprob: -8.270407676696777

Token 290: ' sur' (ID: 1512)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7352392673492432
    2. '(' → logprob: -1.6102392673492432
    3. 'def' → logprob: -2.360239267349243
    4. '(
' → logprob: -2.735239267349243
    5. '<|end|>' → logprob: -3.360239267349243
    6. ')' → logprob: -3.610239267349243
    7. ' ' → logprob: -3.610239267349243
    8. ' (' → logprob: -3.735239267349243
    9. 'import' → logprob: -3.735239267349243
    10. '<|end|>' → logprob: -5.235239028930664

Token 291: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.46072879433631897
    2. 'une' → logprob: -1.0857287645339966
    3. 'functions' → logprob: -4.710728645324707
    4. 'fun' → logprob: -5.460728645324707
    5. ' functools' → logprob: -5.710728645324707
    6. 'lists' → logprob: -5.835728645324707
    7. 'list' → logprob: -6.335728645324707
    8. 'un' → logprob: -6.460728645324707
    9. 'a' → logprob: -6.460728645324707
    10. 'l' → logprob: -6.710728645324707

Token 292: ' it' (ID: 480)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.2663540840148926
    2. 'sequence' → logprob: -1.5163540840148926
    3. ' iterable' → logprob: -4.516354084014893
    4. 'list' → logprob: -6.266354084014893
    5. ' sequence' → logprob: -7.266354084014893
    6. 'liste' → logprob: -7.391354084014893
    7. 'seq' → logprob: -9.391353607177734
    8. 'iterator' → logprob: -10.516353607177734
    9. 'sé' → logprob: -11.016353607177734
    10. 'Iterable' → logprob: -11.516353607177734

Token 293: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.004499073605984449
    2. 'ertools' → logprob: -6.0044989585876465
    3. 'import' → logprob: -6.3794989585876465
    4. 'or' → logprob: -8.629499435424805
    5. 'ator' → logprob: -10.254499435424805
    6. 'ert' → logprob: -10.379499435424805
    7. 'erm' → logprob: -11.754499435424805
    8. 'operator' → logprob: -12.254499435424805
    9. 'erview' → logprob: -12.379499435424805
    10. 'port' → logprob: -12.504499435424805

Token 294: 'able' (ID: 562)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.25581294298171997
    2. 'able' → logprob: -2.005812883377075
    3. 'tor' → logprob: -2.630812883377075
    4. 'tools' → logprob: -5.130813121795654
    5. 'r' → logprob: -5.505813121795654
    6. 'er' → logprob: -6.005813121795654
    7. 'tool' → logprob: -6.755813121795654
    8. 't' → logprob: -7.005813121795654
    9. 'import' → logprob: -7.005813121795654
    10. 'ate' → logprob: -7.380813121795654

Token 295: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.679060161113739
    2. 'def' → logprob: -1.6790602207183838
    3. ',' → logprob: -2.304060220718384
    4. '<|end|>' → logprob: -2.554060220718384
    5. '#' → logprob: -3.054060220718384
    6. 'import' → logprob: -3.304060220718384
    7. '

' → logprob: -3.929060220718384
    8. '\n' → logprob: -4.679059982299805
    9. '(
' → logprob: -5.804059982299805
    10. ',
' → logprob: -6.554059982299805

Token 296: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015119744464755058
    2. 'import' → logprob: -5.015119552612305
    3. '#' → logprob: -5.515119552612305
    4. '\' → logprob: -6.765119552612305
    5. '
' → logprob: -6.765119552612305
    6. '\n' → logprob: -7.515119552612305
    7. 'class' → logprob: -7.640119552612305
    8. '<|end|>' → logprob: -8.265119552612305
    9. 'd' → logprob: -8.640119552612305
    10. 'n' → logprob: -9.140119552612305

Token 297: ' Modification' (ID: 156523)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022317349910736084
    2. 'class' → logprob: -4.522317409515381
    3. '#' → logprob: -4.897317409515381
    4. 'import' → logprob: -6.272317409515381
    5. 'de' → logprob: -7.522317409515381
    6. 'd' → logprob: -7.772317409515381
    7. 'from' → logprob: -8.272316932678223
    8. ' ' → logprob: -8.772316932678223
    9. '\' → logprob: -8.772316932678223
    10. '_' → logprob: -9.397316932678223

Token 298: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36157673597335815
    2. '_' → logprob: -1.611576795578003
    3. ':' → logprob: -2.861576795578003
    4. '#' → logprob: -4.361576557159424
    5. ' ' → logprob: -4.986576557159424
    6. '=' → logprob: -5.111576557159424
    7. '(s' → logprob: -5.236576557159424
    8. '<|end|>' → logprob: -5.361576557159424
    9. ' =' → logprob: -5.486576557159424
    10. ' s' → logprob: -6.361576557159424

Token 299: ' la' (ID: 557)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.05081557109951973
    2. 'sys' → logprob: -3.0508155822753906
    3. ' la' → logprob: -6.925815582275391
    4. ' collections' → logprob: -7.800815582275391
    5. ' random' → logprob: -8.55081558227539
    6. ' l' → logprob: -9.05081558227539
    7. '__' → logprob: -9.42581558227539
    8. 'collections' → logprob: -9.42581558227539
    9. '#' → logprob: -9.55081558227539
    10. ' math' → logprob: -10.17581558227539

Token 300: ' limite' (ID: 48939)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.11532256752252579
    2. 'sys' → logprob: -2.3653225898742676
    3. ' code' → logprob: -4.990322589874268
    4. 'import' → logprob: -5.865322589874268
    5. ' system' → logprob: -6.990322589874268
    6. ' variable' → logprob: -7.490322589874268
    7. 'def' → logprob: -7.865322589874268
    8. '#' → logprob: -8.24032211303711
    9. ' système' → logprob: -8.24032211303711
    10. 'code' → logprob: -8.24032211303711

Token 301: ' maximale' (ID: 76380)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4002678692340851
    2. '=sys' → logprob: -1.9002678394317627
    3. '_sys' → logprob: -3.0252678394317627
    4. 'import' → logprob: -3.0252678394317627
    5. ' sys' → logprob: -3.4002678394317627
    6. 's' → logprob: -3.5252678394317627
    7. ' de' → logprob: -5.025268077850342
    8. ' =' → logprob: -5.400268077850342
    9. '_s' → logprob: -6.650268077850342
    10. '(sys' → logprob: -6.775268077850342

Token 302: ' de' (ID: 334)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03200322389602661
    2. 'import' → logprob: -3.907003164291382
    3. ' sys' → logprob: -5.032003402709961
    4. '(sys' → logprob: -6.282003402709961
    5. '=sys' → logprob: -6.657003402709961
    6. '_sys' → logprob: -7.282003402709961
    7. 'rec' → logprob: -7.407003402709961
    8. '_rec' → logprob: -8.157003402709961
    9. ' recursion' → logprob: -9.907003402709961
    10. '_' → logprob: -10.782003402709961

Token 303: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.29335156083106995
    2. 'la' → logprob: -1.5433515310287476
    3. ' la' → logprob: -4.043351650238037
    4. 'r' → logprob: -4.543351650238037
    5. ' réc' → logprob: -5.418351650238037
    6. 'l' → logprob: -5.793351650238037
    7. ' recursion' → logprob: -6.293351650238037
    8. 're' → logprob: -6.418351650238037
    9. '_rec' → logprob: -7.793351650238037
    10. 'recursive' → logprob: -8.043351173400879

Token 304: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0003956416912842542
    2. 'urs' → logprob: -8.000395774841309
    3. 'ursive' → logprob: -10.000395774841309
    4. 'ur' → logprob: -11.750395774841309
    5. 'usion' → logprob: -12.750395774841309
    6. '```' → logprob: -13.750395774841309
    7. 'usr' → logprob: -13.875395774841309
    8. 'c' → logprob: -14.000395774841309
    9. '#' → logprob: -14.500395774841309
    10. '_' → logprob: -16.250394821166992

Token 305: ',' (ID: 11)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00020616286201402545
    2. 'import' → logprob: -8.500205993652344
    3. ' sys' → logprob: -13.250205993652344
    4. '(sys' → logprob: -14.375205993652344
    5. '=sys' → logprob: -15.125205993652344
    6. '_sys' → logprob: -17.625205993652344
    7. '.sys' → logprob: -18.000205993652344
    8. '#' → logprob: -18.250205993652344
    9. 'rec' → logprob: -18.500205993652344
    10. '	sys' → logprob: -18.625205993652344

Token 306: ' c' (ID: 274)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02779567986726761
    2. ' sys' → logprob: -3.6527957916259766
    3. 'import' → logprob: -7.027795791625977
    4. '100' → logprob: -8.027795791625977
    5. 'set' → logprob: -8.902795791625977
    6. 'limit' → logprob: -10.402795791625977
    7. '10' → logprob: -10.652795791625977
    8. '=sys' → logprob: -10.652795791625977
    9. 'max' → logprob: -11.027795791625977
    10. '#' → logprob: -11.527795791625977

Token 307: ''est' (ID: 6616)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.005467590410262346
    2. '#' → logprob: -6.380467414855957
    3. 'e' → logprob: -7.130467414855957
    4. 'a' → logprob: -7.255467414855957
    5. 'omme' → logprob: -7.255467414855957
    6. 'ont' → logprob: -8.130467414855957
    7. '_ar' → logprob: -8.880467414855957
    8. '=' → logprob: -8.880467414855957
    9. 'om' → logprob: -9.130467414855957
    10. '```' → logprob: -9.130467414855957

Token 308: ' à' (ID: 1221)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10066963732242584
    2. 'import' → logprob: -3.4756696224212646
    3. 'à' → logprob: -3.8506696224212646
    4. '=sys' → logprob: -3.8506696224212646
    5. ' sys' → logprob: -4.225669860839844
    6. '#' → logprob: -6.100669860839844
    7. ' nécessaire' → logprob: -6.475669860839844
    8. '=' → logprob: -7.350669860839844
    9. '_sys' → logprob: -7.600669860839844
    10. '_' → logprob: -7.850669860839844

Token 309: ' dire' (ID: 4071)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.26940223574638367
    2. '10' → logprob: -3.019402265548706
    3. '150' → logprob: -3.269402265548706
    4. '200' → logprob: -3.394402265548706
    5. 'sys' → logprob: -3.394402265548706
    6. '500' → logprob: -4.269402027130127
    7. '120' → logprob: -4.519402027130127
    8. '250' → logprob: -4.644402027130127
    9. '50' → logprob: -4.769402027130127
    10. '1' → logprob: -4.894402027130127

Token 310: ' le' (ID: 505)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006798733025789261
    2. '100' → logprob: -5.63179874420166
    3. ' sys' → logprob: -6.00679874420166
    4. 'import' → logprob: -7.50679874420166
    5. '10' → logprob: -9.00679874420166
    6. '(sys' → logprob: -10.75679874420166
    7. '=sys' → logprob: -12.00679874420166
    8. '300' → logprob: -12.13179874420166
    9. '150' → logprob: -12.50679874420166
    10. '1' → logprob: -12.50679874420166

Token 311: ' nombre' (ID: 9733)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008371546864509583
    2. 'maximum' → logprob: -5.508371353149414
    3. 'import' → logprob: -6.258371353149414
    4. 'rec' → logprob: -6.758371353149414
    5. 'max' → logprob: -8.008371353149414
    6. 'lim' → logprob: -8.008371353149414
    7. 'limit' → logprob: -8.633371353149414
    8. 'nombre' → logprob: -9.383371353149414
    9. 'set' → logprob: -9.508371353149414
    10. '#' → logprob: -9.633371353149414

Token 312: ' d' (ID: 272)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.36284148693084717
    2. 'max' → logprob: -1.6128414869308472
    3. ' maximal' → logprob: -2.7378416061401367
    4. 'd' → logprob: -5.237841606140137
    5. '_rec' → logprob: -5.362841606140137
    6. '_tokens' → logprob: -5.487841606140137
    7. 'maximum' → logprob: -5.487841606140137
    8. '_de' → logprob: -5.612841606140137
    9. '_' → logprob: -5.737841606140137
    10. '_token' → logprob: -5.987841606140137

Token 313: ''app' (ID: 41670)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.14201445877552032
    2. ' recursion' → logprob: -2.892014503479004
    3. '_rec' → logprob: -3.642014503479004
    4. '_' → logprob: -3.642014503479004
    5. ' rec' → logprob: -5.017014503479004
    6. 'rec' → logprob: -6.017014503479004
    7. ' appels' → logprob: -6.142014503479004
    8. 's' → logprob: -6.392014503479004
    9. ' d' → logprob: -6.642014503479004
    10. '_s' → logprob: -7.017014503479004

Token 314: 'els' (ID: 1989)
  Prédit: 'els'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'els' → logprob: -0.001349518890492618
    2. 'ls' → logprob: -7.126349449157715
    3. 'el' → logprob: -8.001349449157715
    4. 'lications' → logprob: -9.751349449157715
    5. 'ins' → logprob: -10.126349449157715
    6. 'ell' → logprob: -10.501349449157715
    7. 'elif' → logprob: -11.751349449157715
    8. 'eles' → logprob: -12.001349449157715
    9. 'le' → logprob: -12.126349449157715
    10. 'ils' → logprob: -12.251349449157715

Token 315: ' imb' (ID: 63592)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rec' → logprob: -1.409377932548523
    2. 'rec' → logprob: -1.534377932548523
    3. '_recursive' → logprob: -1.909377932548523
    4. 'sys' → logprob: -2.9093780517578125
    5. ' de' → logprob: -3.0343780517578125
    6. 's' → logprob: -3.0343780517578125
    7. 'import' → logprob: -3.1593780517578125
    8. ' réc' → logprob: -3.2843780517578125
    9. ' d' → logprob: -3.5343780517578125
    10. '_' → logprob: -4.1593780517578125

Token 316: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.00825545284897089
    2. 'r' → logprob: -5.133255481719971
    3. 'arqu' → logprob: -7.133255481719971
    4. 'li' → logprob: -8.633255004882812
    5. 'riques' → logprob: -8.633255004882812
    6. '_' → logprob: -9.008255004882812
    7. 're' → logprob: -9.133255004882812
    8. 'ré' → logprob: -9.383255004882812
    9. 'rí' → logprob: -9.383255004882812
    10. 'quées' → logprob: -9.508255004882812

Token 317: 'qués' (ID: 70348)
  Prédit: 'qués'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qués' → logprob: -0.3773481547832489
    2. 'ques' → logprob: -1.7523481845855713
    3. 'li' → logprob: -2.8773481845855713
    4. 'ri' → logprob: -3.2523481845855713
    5. 'iqu' → logprob: -3.7523481845855713
    6. 'ic' → logprob: -5.377347946166992
    7. 'iques' → logprob: -5.377347946166992
    8. 'quées' → logprob: -6.252347946166992
    9. 'rés' → logprob: -6.627347946166992
    10. 'arqu' → logprob: -6.627347946166992

Token 318: ' autor' (ID: 13432)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.010465461760759354
    2. 'import' → logprob: -5.010465621948242
    3. '(sys' → logprob: -5.635465621948242
    4. ' sys' → logprob: -9.385465621948242
    5. '(' → logprob: -9.760465621948242
    6. 'set' → logprob: -10.885465621948242
    7. '=sys' → logprob: -12.260465621948242
    8. 'rec' → logprob: -13.010465621948242
    9. '(
' → logprob: -13.385465621948242
    10. '_sys' → logprob: -13.885465621948242

Token 319: 'isé' (ID: 30065)
  Prédit: 'lés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lés' → logprob: -0.4577163755893707
    2. 'érés' → logprob: -1.8327163457870483
    3. 'rés' → logprob: -2.457716464996338
    4. 'isés' → logprob: -3.332716464996338
    5. 'qués' → logprob: -3.582716464996338
    6. 'ités' → logprob: -4.707716464996338
    7. 'étés' → logprob: -4.957716464996338
    8. 'él' → logprob: -5.082716464996338
    9. 'lis' → logprob: -5.457716464996338
    10. 'les' → logprob: -5.582716464996338

Token 320: ' avant' (ID: 13339)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -8.65707261255011e-06
    2. 'import' → logprob: -12.000008583068848
    3. ' sys' → logprob: -13.125008583068848
    4. '(sys' → logprob: -15.000008583068848
    5. '=sys' → logprob: -16.000009536743164
    6. '_sys' → logprob: -18.375009536743164
    7. '#' → logprob: -19.375009536743164
    8. '	sys' → logprob: -19.875009536743164
    9. '.sys' → logprob: -20.375009536743164
    10. 'set' → logprob: -21.000009536743164

Token 321: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6726285815238953
    2. 'd' → logprob: -0.9226285815238953
    3. 'l' → logprob: -3.29762864112854
    4. 'le' → logprob: -3.67262864112854
    5. 'que' → logprob: -4.422628402709961
    6. ' une' → logprob: -5.172628402709961
    7. 'la' → logprob: -5.297628402709961
    8. 'qu' → logprob: -6.672628402709961
    9. 'un' → logprob: -6.922628402709961
    10. 'Runtime' → logprob: -7.547628402709961

Token 322: ' erreur' (ID: 102885)
  Prédit: 'Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rec' → logprob: -0.1918075829744339
    2. 'Trace' → logprob: -1.9418076276779175
    3. 'Runtime' → logprob: -4.816807746887207
    4. 'rec' → logprob: -4.941807746887207
    5. 'trace' → logprob: -4.941807746887207
    6. 'Stack' → logprob: -5.566807746887207
    7. 'stack' → logprob: -7.316807746887207
    8. 'd' → logprob: -7.441807746887207
    9. 'ex' → logprob: -7.441807746887207
    10. 'dé' → logprob: -7.816807746887207

Token 323: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0004026673559565097
    2. 'set' → logprob: -8.500402450561523
    3. '(sys' → logprob: -9.250402450561523
    4. 'import' → logprob: -9.875402450561523
    5. ' sys' → logprob: -10.250402450561523
    6. '=sys' → logprob: -11.375402450561523
    7. 'rec' → logprob: -12.500402450561523
    8. '_sys' → logprob: -14.500402450561523
    9. ':' → logprob: -16.250402450561523
    10. '```' → logprob: -16.375402450561523

Token 324: '#' (ID: 2)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -5.319370302458992e-06
    2. 'import' → logprob: -12.250005722045898
    3. ' sys' → logprob: -14.500005722045898
    4. '#' → logprob: -20.5000057220459
    5. '=sys' → logprob: -20.7500057220459
    6. '(sys' → logprob: -21.1250057220459
    7. '	sys' → logprob: -22.6250057220459
    8. '_sys' → logprob: -22.6250057220459
    9. 'set' → logprob: -23.2500057220459
    10. '.sys' → logprob: -23.6250057220459

Token 325: ' ' (ID: 220)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.3902033970225602e-05
    2. 'import' → logprob: -11.500014305114746
    3. ' sys' → logprob: -12.500014305114746
    4. '#' → logprob: -18.62501335144043
    5. '=sys' → logprob: -19.87501335144043
    6. '(sys' → logprob: -21.12501335144043
    7. '	sys' → logprob: -21.50001335144043
    8. 'set' → logprob: -22.50001335144043
    9. 'rec' → logprob: -22.62501335144043
    10. '_sys' → logprob: -23.12501335144043

Token 326: '2' (ID: 17)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.5776860184123507e-06
    2. 'import' → logprob: -13.00000286102295
    3. ' sys' → logprob: -15.12500286102295
    4. '#' → logprob: -18.500001907348633
    5. '=sys' → logprob: -20.500001907348633
    6. '(sys' → logprob: -21.750001907348633
    7. '	sys' → logprob: -22.000001907348633
    8. '
' → logprob: -23.250001907348633
    9. 'python' → logprob: -23.625001907348633
    10. 'set' → logprob: -23.625001907348633

Token 327: ' ' (ID: 220)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3021999001502991
    2. 'import' → logprob: -2.4271998405456543
    3. '00' → logprob: -3.1771998405456543
    4. '000' → logprob: -3.1771998405456543
    5. '5' → logprob: -3.9271998405456543
    6. '0' → logprob: -4.177199840545654
    7. 'rec' → logprob: -4.177199840545654
    8. '78' → logprob: -4.802199840545654
    9. '8' → logprob: -5.427199840545654
    10. '7' → logprob: -5.427199840545654

Token 328: '147' (ID: 18902)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.1692602038383484
    2. '**' → logprob: -2.794260263442993
    3. '048' → logprob: -3.169260263442993
    4. '00' → logprob: -3.794260263442993
    5. '0' → logprob: -4.419260025024414
    6. '500' → logprob: -5.044260025024414
    7. 'import' → logprob: -6.294260025024414
    8. 'sys' → logprob: -6.669260025024414
    9. '50' → logprob: -6.669260025024414
    10. '5' → logprob: -6.669260025024414

Token 329: ' ' (ID: 220)
  Prédit: '483'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '483' → logprob: -0.001259398995898664
    2. 'import' → logprob: -7.0012593269348145
    3. '_' → logprob: -8.126259803771973
    4. '383' → logprob: -10.876259803771973
    5. ',' → logprob: -11.751259803771973
    6. ' import' → logprob: -13.001259803771973
    7. '.' → logprob: -13.126259803771973
    8. '+' → logprob: -13.126259803771973
    9. 'm' → logprob: -13.501259803771973
    10. 'def' → logprob: -13.751259803771973

Token 330: '483' (ID: 40681)
  Prédit: '483'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '483' → logprob: -1.747814349073451e-05
    2. 'import' → logprob: -11.000017166137695
    3. '383' → logprob: -15.625017166137695
    4. 'million' → logprob: -15.875017166137695
    5. '484' → logprob: -16.625017166137695
    6. '```' → logprob: -16.875017166137695
    7. 'm' → logprob: -17.000017166137695
    8. 'max' → logprob: -17.375017166137695
    9. 'def' → logprob: -17.625017166137695
    10. '482' → logprob: -17.750017166137695

Token 331: ' ' (ID: 220)
  Prédit: '647'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '647' → logprob: -0.00014251544780563563
    2. '640' → logprob: -9.125142097473145
    3. '648' → logprob: -10.875142097473145
    4. 'max' → logprob: -12.500142097473145
    5. '```' → logprob: -13.250142097473145
    6. '64' → logprob: -13.875142097473145
    7. '+' → logprob: -14.250142097473145
    8. '643' → logprob: -14.562642097473145
    9. 'e' → logprob: -14.875142097473145
    10. 'None' → logprob: -15.000142097473145

Token 332: '647' (ID: 45764)
  Prédit: '647'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '647' → logprob: -3.054500666621607e-06
    2. '646' → logprob: -13.62500286102295
    3. '648' → logprob: -13.75000286102295
    4. '645' → logprob: -15.50000286102295
    5. '```' → logprob: -15.87500286102295
    6. '64' → logprob: -16.000003814697266
    7. '643' → logprob: -16.375003814697266
    8. '640' → logprob: -17.062503814697266
    9. '6' → logprob: -17.125003814697266
    10. '``' → logprob: -17.250003814697266

Token 333: ' est' (ID: 893)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.09917029738426208
    2. 'import' → logprob: -2.474170207977295
    3. '
' → logprob: -4.849170207977295
    4. '=sys' → logprob: -6.974170207977295
    5. ' sys' → logprob: -7.099170207977295
    6. '(sys' → logprob: -8.849170684814453
    7. '  
' → logprob: -9.099170684814453
    8. '#' → logprob: -9.224170684814453
    9. 'max' → logprob: -9.599170684814453
    10. ',' → logprob: -9.724170684814453

Token 334: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.570463240146637
    2. ' sys' → logprob: -1.6954631805419922
    3. 'sys' → logprob: -2.195463180541992
    4. 'import' → logprob: -2.945463180541992
    5. 'la' → logprob: -3.445463180541992
    6. ' une' → logprob: -4.570463180541992
    7. 'int' → logprob: -4.820463180541992
    8. ' le' → logprob: -4.945463180541992
    9. 'l' → logprob: -5.070463180541992
    10. ' ' → logprob: -5.320463180541992

Token 335: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.24835899472236633
    2. 'lim' → logprob: -1.873358964920044
    3. ' valeur' → logprob: -3.248358964920044
    4. ' limite' → logprob: -3.873358964920044
    5. 'const' → logprob: -6.873359203338623
    6. 'possible' → logprob: -7.248359203338623
    7. 'int' → logprob: -7.498359203338623
    8. 'rec' → logprob: -7.498359203338623
    9. 'tr' → logprob: -7.498359203338623
    10. 'value' → logprob: -7.873359203338623

Token 336: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.08673114329576492
    2. 'max' → logprob: -3.211731195449829
    3. 'sys' → logprob: -3.961731195449829
    4. '_max' → logprob: -5.08673095703125
    5. ' sys' → logprob: -5.33673095703125
    6. 'import' → logprob: -5.71173095703125
    7. ' maximum' → logprob: -5.96173095703125
    8. ' max' → logprob: -5.96173095703125
    9. '=sys' → logprob: -6.46173095703125
    10. 'maximum' → logprob: -6.83673095703125

Token 337: ' d' (ID: 272)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.035259947180747986
    2. 'import' → logprob: -3.535259962081909
    3. '
' → logprob: -5.53525972366333
    4. '(sys' → logprob: -7.28525972366333
    5. ' sys' → logprob: -8.285260200500488
    6. '=sys' → logprob: -8.535260200500488
    7. '\' → logprob: -9.410260200500488
    8. ',' → logprob: -9.535260200500488
    9. '  
' → logprob: -9.785260200500488
    10. 'set' → logprob: -10.285260200500488

Token 338: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2707374095916748
    2. '=sys' → logprob: -2.020737409591675
    3. 'sys' → logprob: -3.145737409591675
    4. 'a' → logprob: -3.145737409591675
    5. ''import' → logprob: -5.770737648010254
    6. ' sys' → logprob: -5.895737648010254
    7. '_sys' → logprob: -5.895737648010254
    8. ''' → logprob: -5.895737648010254
    9. 'import' → logprob: -6.145737648010254
    10. '(sys' → logprob: -6.895737648010254

Token 339: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.260038822889328
    2. 'int' → logprob: -1.5100388526916504
    3. ' entier' → logprob: -5.26003885269165
    4. 'inter' → logprob: -6.51003885269165
    5. 'inte' → logprob: -8.135038375854492
    6. 'integer' → logprob: -8.385038375854492
    7. ' int' → logprob: -8.635038375854492
    8. 'sys' → logprob: -8.760038375854492
    9. 'appel' → logprob: -8.885038375854492
    10. 'e' → logprob: -9.760038375854492

Token 340: ' signé' (ID: 135570)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4330234229564667
    2. 'sys' → logprob: -1.433023452758789
    3. '=sys' → logprob: -2.808023452758789
    4. 'max' → logprob: -4.058023452758789
    5. '(sys' → logprob: -4.808023452758789
    6. ' sys' → logprob: -5.058023452758789
    7. ' =' → logprob: -5.183023452758789
    8. '_max' → logprob: -5.933023452758789
    9. '
' → logprob: -6.183023452758789
    10. '_sys' → logprob: -6.558023452758789

Token 341: ' sur' (ID: 1512)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.09709520637989044
    2. '
' → logprob: -2.972095251083374
    3. 'import' → logprob: -3.222095251083374
    4. '(sys' → logprob: -7.597095012664795
    5. '_sys' → logprob: -8.597095489501953
    6. '\' → logprob: -8.597095489501953
    7. '=sys' → logprob: -8.722095489501953
    8. ' sys' → logprob: -9.097095489501953
    9. '
' → logprob: -9.222095489501953
    10. '#' → logprob: -9.597095489501953

Token 342: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38738852739334106
    2. '32' → logprob: -1.1373884677886963
    3. '_' → logprob: -8.262388229370117
    4. '4' → logprob: -9.387388229370117
    5. ' une' → logprob: -9.512388229370117
    6. '64' → logprob: -10.637388229370117
    7. 'int' → logprob: -11.012388229370117
    8. ' un' → logprob: -11.637388229370117
    9. 'une' → logprob: -12.012388229370117
    10. '2' → logprob: -12.387388229370117

Token 343: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.00023750975378789008
    2. '64' → logprob: -9.250237464904785
    3. 'une' → logprob: -9.500237464904785
    4. 'un' → logprob: -11.000237464904785
    5. ' ' → logprob: -11.125237464904785
    6. '4' → logprob: -12.000237464904785
    7. '_' → logprob: -12.250237464904785
    8. '31' → logprob: -12.375237464904785
    9. 'int' → logprob: -12.875237464904785
    10. '```' → logprob: -12.875237464904785

Token 344: ' bits' (ID: 18189)
  Prédit: '-bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-bit' → logprob: -0.7420661449432373
    2. 'bit' → logprob: -1.3670661449432373
    3. 'bits' → logprob: -1.8670661449432373
    4. '_bits' → logprob: -2.6170661449432373
    5. '_bit' → logprob: -4.367066383361816
    6. '#' → logprob: -4.742066383361816
    7. '_' → logprob: -5.117066383361816
    8. '-' → logprob: -5.242066383361816
    9. 'b' → logprob: -5.867066383361816
    10. ' bits' → logprob: -6.242066383361816

Token 345: ' (' (ID: 350)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.9054008084349334e-05
    2. 'import' → logprob: -10.250039100646973
    3. '
' → logprob: -12.750039100646973
    4. ' sys' → logprob: -14.625039100646973
    5. '#' → logprob: -16.000038146972656
    6. '(sys' → logprob: -16.250038146972656
    7. '_sys' → logprob: -17.875038146972656
    8. '=sys' → logprob: -17.875038146972656
    9. '\' → logprob: -18.000038146972656
    10. '

' → logprob: -18.125038146972656

Token 346: 'large' (ID: 32551)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006193745881319046
    2. ')
' → logprob: -5.6311936378479
    3. 'sys' → logprob: -6.5061936378479
    4. 'import' → logprob: -7.0061936378479
    5. ')\' → logprob: -10.131194114685059
    6. ' )' → logprob: -10.631194114685059
    7. ')
' → logprob: -10.756194114685059
    8. ').' → logprob: -11.006194114685059
    9. '#' → logprob: -11.131194114685059
    10. ',' → logprob: -11.131194114685059

Token 347: ' limite' (ID: 48939)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6900741457939148
    2. ')' → logprob: -0.9400741457939148
    3. 'ur' → logprob: -3.4400742053985596
    4. ' )' → logprob: -3.5650742053985596
    5. 'er' → logprob: -4.8150739669799805
    6. ' =' → logprob: -5.0650739669799805
    7. 'int' → logprob: -5.1900739669799805
    8. '_' → logprob: -5.3150739669799805
    9. ' e' → logprob: -5.4400739669799805
    10. '#' → logprob: -6.0650739669799805

Token 348: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05747554078698158
    2. ')
' → logprob: -3.6824755668640137
    3. 'import' → logprob: -4.432475566864014
    4. 'sys' → logprob: -4.682475566864014
    5. '()' → logprob: -6.432475566864014
    6. '=sys' → logprob: -6.932475566864014
    7. '(sys' → logprob: -7.432475566864014
    8. '_sys' → logprob: -7.682475566864014
    9. '_set' → logprob: -7.807475566864014
    10. 'set' → logprob: -7.807475566864014

Token 349: ' ne' (ID: 453)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4092247784137726
    2. 'rec' → logprob: -1.7842247486114502
    3. 'python' → logprob: -3.03422474861145
    4. 'l' → logprob: -3.28422474861145
    5. 'Python' → logprob: -3.90922474861145
    6. 'sys' → logprob: -4.284224987030029
    7. 'le' → logprob: -4.409224987030029
    8. ' la' → logprob: -4.659224987030029
    9. 'les' → logprob: -4.659224987030029
    10. ' recursion' → logprob: -5.659224987030029

Token 350: ' plus' (ID: 2932)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.18612231314182281
    2. ' pas' → logprob: -1.9361222982406616
    3. '_pas' → logprob: -3.686122417449951
    4. 'plus' → logprob: -8.936121940612793
    5. '_' → logprob: -9.436121940612793
    6. ' plus' → logprob: -9.686121940612793
    7. '#' → logprob: -9.811121940612793
    8. '_plus' → logprob: -9.936121940612793
    9. ' provoquer' → logprob: -10.686121940612793
    10. ' dépasser' → logprob: -11.311121940612793

Token 351: ' jamais' (ID: 23077)
  Prédit: ' provoquer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' provoquer' → logprob: -0.15349765121936798
    2. 'ca' → logprob: -2.2784976959228516
    3. 'rec' → logprob: -4.403497695922852
    4. 'ris' → logprob: -5.528497695922852
    5. 'voir' → logprob: -6.403497695922852
    6. 'avoir' → logprob: -6.403497695922852
    7. 'pro' → logprob: -6.403497695922852
    8. 're' → logprob: -6.403497695922852
    9. 'cause' → logprob: -6.653497695922852
    10. 'trigger' → logprob: -6.778497695922852

Token 352: ' recevoir' (ID: 80278)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.38682296872138977
    2. 'cr' → logprob: -1.7618229389190674
    3. 'overflow' → logprob: -3.2618229389190674
    4. ' rec' → logprob: -3.5118229389190674
    5. 'import' → logprob: -3.7618229389190674
    6. 're' → logprob: -4.3868231773376465
    7. 'avoir' → logprob: -4.3868231773376465
    8. 'faire' → logprob: -5.6368231773376465
    9. 'Rec' → logprob: -5.8868231773376465
    10. ' dépasser' → logprob: -6.0118231773376465

Token 353: ' Rec' (ID: 14753)
  Prédit: ' Rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rec' → logprob: -0.1725478619337082
    2. 'Rec' → logprob: -2.2975478172302246
    3. ' ' → logprob: -3.5475478172302246
    4. ' une' → logprob: -4.047547817230225
    5. ' recursion' → logprob: -5.422547817230225
    6. ' rec' → logprob: -6.047547817230225
    7. 'rec' → logprob: -6.797547817230225
    8. ' un' → logprob: -6.797547817230225
    9. ' Runtime' → logprob: -7.172547817230225
    10. ' la' → logprob: -8.047548294067383

Token 354: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -2.534558552724775e-05
    2. 'urs' → logprob: -11.125025749206543
    3. 'usion' → logprob: -12.375025749206543
    4. '_' → logprob: -13.750025749206543
    5. 'ursive' → logprob: -13.750025749206543
    6. 'usr' → logprob: -13.875025749206543
    7. '#' → logprob: -14.625025749206543
    8. '   ' → logprob: -14.750025749206543
    9. '```' → logprob: -15.000025749206543
    10. 'u' → logprob: -15.125025749206543

Token 355: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.001356667373329401
    2. 'Limit' → logprob: -6.626356601715088
    3. 'limit' → logprob: -10.626357078552246
    4. 'Depth' → logprob: -12.376357078552246
    5. 'error' → logprob: -14.251357078552246
    6. 'Erro' → logprob: -14.626357078552246
    7. 'Er' → logprob: -14.626357078552246
    8. ' limit' → logprob: -15.376357078552246
    9. 'Err' → logprob: -15.626357078552246
    10. 'Warning' → logprob: -16.25135612487793

Token 356: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028281474485993385
    2. ')
' → logprob: -3.7782814502716064
    3. 'sys' → logprob: -5.5282816886901855
    4. 'import' → logprob: -8.278281211853027
    5. '(sys' → logprob: -8.778281211853027
    6. ').' → logprob: -9.153281211853027
    7. '()' → logprob: -9.278281211853027
    8. ' )' → logprob: -9.528281211853027
    9. '#' → logprob: -9.778281211853027
    10. '")' → logprob: -10.153281211853027

Token 357: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.226628895296017e-06
    2. 'import' → logprob: -12.000007629394531
    3. ' sys' → logprob: -14.250007629394531
    4. '
' → logprob: -15.000007629394531
    5. '#' → logprob: -17.50000762939453
    6. '(sys' → logprob: -17.75000762939453
    7. '=sys' → logprob: -18.87500762939453
    8. '

' → logprob: -19.62500762939453
    9. '.sys' → logprob: -19.62500762939453
    10. '	sys' → logprob: -20.00000762939453

Token 358: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.00044437398901209235
    2. '.setdefault' → logprob: -8.250444412231445
    3. '.' → logprob: -8.625444412231445
    4. ' .' → logprob: -13.000444412231445
    5. '.stdout' → logprob: -14.875444412231445
    6. '.stdin' → logprob: -15.250444412231445
    7. '.argv' → logprob: -15.750444412231445
    8. '.stderr' → logprob: -15.875444412231445
    9. '.max' → logprob: -16.375444412231445
    10. '.exit' → logprob: -16.500444412231445

Token 359: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.05076662823557854
    2. 'ursion' → logprob: -3.050766706466675
    3. 'limit' → logprob: -6.550766468048096
    4. ' recursion' → logprob: -7.800766468048096
    5. '_rec' → logprob: -9.050766944885254
    6. 'set' → logprob: -9.175766944885254
    7. 'max' → logprob: -10.050766944885254
    8. 'sys' → logprob: -11.050766944885254
    9. 're' → logprob: -12.550766944885254
    10. 'ec' → logprob: -12.675766944885254

Token 360: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.2664456789934775e-06
    2. 'usion' → logprob: -14.750000953674316
    3. 'ur' → logprob: -15.375000953674316
    4. 'ursive' → logprob: -15.500000953674316
    5. 'limit' → logprob: -15.875000953674316
    6. 'urs' → logprob: -16.000001907348633
    7. '_limit' → logprob: -17.125001907348633
    8. '_' → logprob: -17.125001907348633
    9. 'ursor' → logprob: -17.375001907348633
    10. 'urse' → logprob: -18.750001907348633

Token 361: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -8.061054359131958e-06
    2. '_limit' → logprob: -11.750007629394531
    3. ' limit' → logprob: -16.25000762939453
    4. 'lim' → logprob: -18.25000762939453
    5. 'depth' → logprob: -19.00000762939453
    6. '-limit' → logprob: -20.25000762939453
    7. '(limit' → logprob: -20.50000762939453
    8. 'Limit' → logprob: -21.25000762939453
    9. '.limit' → logprob: -21.37500762939453
    10. 'limits' → logprob: -22.75000762939453

Token 362: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9981420336989686e-05
    2. '(int' → logprob: -11.625020027160645
    3. '(
' → logprob: -12.000020027160645
    4. '(sys' → logprob: -13.000020027160645
    5. '((' → logprob: -13.625020027160645
    6. ' (' → logprob: -13.750020027160645
    7. '(

' → logprob: -16.750019073486328
    8. '(max' → logprob: -17.125019073486328
    9. '(
' → logprob: -17.875019073486328
    10. '10' → logprob: -18.625019073486328

Token 363: '214' (ID: 21401)
  Prédit: '214'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '214' → logprob: -0.0002913678181357682
    2. '10' → logprob: -8.37529182434082
    3. '2' → logprob: -10.00029182434082
    4. '210' → logprob: -11.75029182434082
    5. '200' → logprob: -12.12529182434082
    6. '100' → logprob: -13.62529182434082
    7. '217' → logprob: -15.00029182434082
    8. ' ' → logprob: -15.62529182434082
    9. '215' → logprob: -15.75029182434082
    10. 'int' → logprob: -16.00029182434082

Token 364: '748' (ID: 39478)
  Prédit: '748'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '748' → logprob: -3.368984107510187e-05
    2. '783' → logprob: -10.625033378601074
    3. '7' → logprob: -12.500033378601074
    4. '747' → logprob: -12.750033378601074
    5. '483' → logprob: -13.500033378601074
    6. '743' → logprob: -14.125033378601074
    7. '746' → logprob: -15.625033378601074
    8. '738' → logprob: -15.750033378601074
    9. '742' → logprob: -17.00003433227539
    10. '700' → logprob: -17.25003433227539

Token 365: '364' (ID: 30673)
  Prédit: '364'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '364' → logprob: -2.856408536899835e-05
    2. '363' → logprob: -10.500028610229492
    3. '3' → logprob: -14.625028610229492
    4. '362' → logprob: -15.750028610229492
    5. '647' → logprob: -15.750028610229492
    6. '367' → logprob: -16.000028610229492
    7. '346' → logprob: -16.625028610229492
    8. '36' → logprob: -17.125028610229492
    9. '264' → logprob: -17.625028610229492
    10. '360' → logprob: -18.625028610229492

Token 366: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '6' → logprob: -17.875
    3. '647' → logprob: -20.625
    4. '７' → logprob: -22.625
    5. '47' → logprob: -23.25
    6. '   ' → logprob: -23.625
    7. '```' → logprob: -23.75
    8. '۷' → logprob: -24.0
    9. ')' → logprob: -24.375
    10. '67' → logprob: -24.5

Token 367: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.25
    3. ' )' → logprob: -17.625
    4. '))' → logprob: -17.875
    5. ')`' → logprob: -18.875
    6. ')#' → logprob: -19.25
    7. '),' → logprob: -19.5
    8. ')}' → logprob: -19.625
    9. ')
' → logprob: -20.0
    10. ');' → logprob: -20.5

Token 368: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4023451805114746
    2. '
' → logprob: -1.4023451805114746
    3. 'def' → logprob: -3.4023451805114746
    4. '#' → logprob: -3.7773451805114746
    5. 'import' → logprob: -4.402345180511475
    6. '\n' → logprob: -5.152345180511475
    7. '


' → logprob: -5.277345180511475
    8. '



' → logprob: -6.652345180511475
    9. 'class' → logprob: -6.652345180511475
    10. '
 
' → logprob: -7.277345180511475

Token 369: ' Affect' (ID: 190087)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000678361626341939
    2. '#' → logprob: -8.125678062438965
    3. 'class' → logprob: -8.125678062438965
    4. 'import' → logprob: -10.375678062438965
    5. 'de' → logprob: -10.750678062438965
    6. 'input' → logprob: -10.875678062438965
    7. 'd' → logprob: -11.750678062438965
    8. ' def' → logprob: -12.875678062438965
    9. 'from' → logprob: -13.625678062438965
    10. '\' → logprob: -14.000678062438965

Token 370: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0053333705291152
    2. 'er' → logprob: -5.255333423614502
    3. 'ion' → logprob: -10.880332946777344
    4. '=' → logprob: -10.880332946777344
    5. 'uation' → logprob: -11.005332946777344
    6. ' =' → logprob: -11.380332946777344
    7. 'a' → logprob: -11.380332946777344
    8. '#' → logprob: -11.380332946777344
    9. 'ations' → logprob: -13.005332946777344
    10. 'ement' → logprob: -13.005332946777344

Token 371: ' d' (ID: 272)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9059700965881348
    2. ' =' → logprob: -1.6559700965881348
    3. '=' → logprob: -1.7809700965881348
    4. 'max' → logprob: -3.0309700965881348
    5. 'variable' → logprob: -3.1559700965881348
    6. ' result' → logprob: -3.4059700965881348
    7. '_' → logprob: -3.9059700965881348
    8. 'value' → logprob: -3.9059700965881348
    9. ' variable' → logprob: -4.030970096588135
    10. 'answer' → logprob: -5.155970096588135

Token 372: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.7116532325744629
    2. 'e' → logprob: -1.461653232574463
    3. '=' → logprob: -2.711653232574463
    4. ' =' → logprob: -3.086653232574463
    5. 'une' → logprob: -3.336653232574463
    6. 'es' → logprob: -3.586653232574463
    7. ''un' → logprob: -3.836653232574463
    8. 'ef' → logprob: -4.086653232574463
    9. '=[]' → logprob: -4.086653232574463
    10. 'u' → logprob: -4.711653232574463

Token 373: ' valeur' (ID: 41664)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.553883969783783
    2. 'val' → logprob: -1.3038840293884277
    3. '#' → logprob: -3.3038840293884277
    4. 'def' → logprob: -3.5538840293884277
    5. 'const' → logprob: -3.9288840293884277
    6. 'large' → logprob: -4.803884029388428
    7. 'liste' → logprob: -5.053884029388428
    8. 'var' → logprob: -5.303884029388428
    9. 'default' → logprob: -5.303884029388428
    10. 'value' → logprob: -5.553884029388428

Token 374: ' très' (ID: 9412)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2683551609516144
    2. '=' → logprob: -1.643355131149292
    3. 'max' → logprob: -3.518355131149292
    4. 'result' → logprob: -5.518355369567871
    5. 'x' → logprob: -6.518355369567871
    6. 'initial' → logprob: -6.643355369567871
    7. '_' → logprob: -7.143355369567871
    8. '_max' → logprob: -7.143355369567871
    9. 'a' → logprob: -7.518355369567871
    10. 'n' → logprob: -7.643355369567871

Token 375: ' grande' (ID: 10094)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.34141358733177185
    2. 'gr' → logprob: -1.7164136171340942
    3. 'ha' → logprob: -3.5914134979248047
    4. 'import' → logprob: -3.8414134979248047
    5. 'é' → logprob: -4.091413497924805
    6. 'long' → logprob: -4.341413497924805
    7. 'grand' → logprob: -4.341413497924805
    8. 'fort' → logprob: -4.966413497924805
    9. ' élevée' → logprob: -5.716413497924805
    10. 'e' → logprob: -6.216413497924805

Token 376: ' qui' (ID: 2780)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.2794128954410553
    2. 'max' → logprob: -2.0294129848480225
    3. 'inf' → logprob: -3.0294129848480225
    4. 'MAX' → logprob: -3.9044129848480225
    5. '_inf' → logprob: -4.279412746429443
    6. '_INF' → logprob: -4.654412746429443
    7. ' =' → logprob: -5.529412746429443
    8. '=' → logprob: -5.529412746429443
    9. 'IN' → logprob: -5.779412746429443
    10. 'in' → logprob: -6.279412746429443

Token 377: ' jou' (ID: 10865)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.7263648509979248
    2. 'serv' → logprob: -1.7263648509979248
    3. 'ne' → logprob: -1.8513648509979248
    4. 'rep' → logprob: -2.726364850997925
    5. 'sera' → logprob: -2.726364850997925
    6. 'd' → logprob: -2.976364850997925
    7. 'represent' → logprob: -3.226364850997925
    8. 's' → logprob: -3.226364850997925
    9. 'est' → logprob: -3.476364850997925
    10. '=' → logprob: -3.976364850997925

Token 378: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4421565532684326
    2. 'era' → logprob: -1.0671565532684326
    3. 'er' → logprob: -5.567156791687012
    4. 'ent' → logprob: -5.692156791687012
    5. '```' → logprob: -6.442156791687012
    6. 'it' → logprob: -6.442156791687012
    7. 'et' → logprob: -6.942156791687012
    8. 'ant' → logprob: -7.317156791687012
    9. '\' → logprob: -8.817156791687012
    10. 'ait' → logprob: -9.067156791687012

Token 379: ' probablement' (ID: 87740)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5736934542655945
    2. '_' → logprob: -1.0736935138702393
    3. ' le' → logprob: -3.3236935138702393
    4. 'le' → logprob: -3.9486935138702393
    5. ' ' → logprob: -4.32369327545166
    6. 'un' → logprob: -4.82369327545166
    7. '_le' → logprob: -5.57369327545166
    8. '_role' → logprob: -5.69869327545166
    9. ' a' → logprob: -6.32369327545166
    10. 'r' → logprob: -6.69869327545166

Token 380: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.30650794506073
    2. ' le' → logprob: -1.43150794506073
    3. ' un' → logprob: -1.55650794506073
    4. 'le' → logprob: -1.68150794506073
    5. '_' → logprob: -2.9315080642700195
    6. 'un' → logprob: -3.9315080642700195
    7. ' ' → logprob: -4.1815080642700195
    8. '_r' → logprob: -7.0565080642700195
    9. 'role' → logprob: -7.3065080642700195
    10. '  ' → logprob: -7.3065080642700195

Token 381: ' rôle' (ID: 50119)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1270931512117386
    2. 'role' → logprob: -2.1270930767059326
    3. ' rôle' → logprob: -9.752093315124512
    4. '```' → logprob: -10.127093315124512
    5. ' r' → logprob: -10.752093315124512
    6. 'rol' → logprob: -11.377093315124512
    7. ' role' → logprob: -11.752093315124512
    8. '
' → logprob: -12.002093315124512
    9. ' ' → logprob: -12.627093315124512
    10. 'rolle' → logprob: -12.752093315124512

Token 382: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2477932572364807
    2. 'd' → logprob: -2.247793197631836
    3. '=' → logprob: -3.622793197631836
    4. 'inf' → logprob: -3.622793197631836
    5. '_inf' → logprob: -4.372793197631836
    6. '_' → logprob: -4.622793197631836
    7. ' de' → logprob: -4.747793197631836
    8. ' =' → logprob: -4.872793197631836
    9. 'INF' → logprob: -5.497793197631836
    10. 'in' → logprob: -5.997793197631836

Token 383: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.9123600721359253
    2. ''un' → logprob: -1.1623600721359253
    3. ''une' → logprob: -1.4123600721359253
    4. 'l' → logprob: -4.412360191345215
    5. 'float' → logprob: -4.787360191345215
    6. '"' → logprob: -5.162360191345215
    7. 'inf' → logprob: -5.287360191345215
    8. 'in' → logprob: -5.787360191345215
    9. '"in' → logprob: -6.037360191345215
    10. 'un' → logprob: -6.537360191345215

Token 384: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0216376855969429
    2. 'finity' → logprob: -3.8966376781463623
    3. 'float' → logprob: -7.771637916564941
    4. 'finite' → logprob: -8.021637916564941
    5. 'fty' → logprob: -8.521637916564941
    6. 'fi' → logprob: -9.771637916564941
    7. 'fin' → logprob: -10.021637916564941
    8. 'fine' → logprob: -10.521637916564941
    9. 'ff' → logprob: -12.771637916564941
    10. 'FINITY' → logprob: -13.146637916564941

Token 385: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.24267713725566864
    2. 'inity' → logprob: -1.617677092552185
    3. 'inite' → logprob: -5.117677211761475
    4. 'inie' → logprob: -5.367677211761475
    5. 'init' → logprob: -5.742677211761475
    6. 'inty' → logprob: -6.492677211761475
    7. 'iny' → logprob: -7.492677211761475
    8. 'float' → logprob: -8.117676734924316
    9. 'ity' → logprob: -8.117676734924316
    10. 'in' → logprob: -8.492676734924316

Token 386: ' (' (ID: 350)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.023346567526459694
    2. 'inf' → logprob: -3.7733466625213623
    3. '_INF' → logprob: -10.273346900939941
    4. '_inf' → logprob: -10.523346900939941
    5. 'MAX' → logprob: -11.023346900939941
    6. 'IN' → logprob: -11.648346900939941
    7. 'Inf' → logprob: -12.648346900939941
    8. 'max' → logprob: -13.273346900939941
    9. '=' → logprob: -13.398346900939941
    10. ' INF' → logprob: -13.398346900939941

Token 387: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.2441467046737671
    2. ')' → logprob: -2.6191468238830566
    3. 'float' → logprob: -3.2441468238830566
    4. '10' → logprob: -3.2441468238830566
    5. 'inf' → logprob: -3.2441468238830566
    6. ' INF' → logprob: -4.494146823883057
    7. 'int' → logprob: -5.119146823883057
    8. ' float' → logprob: -5.494146823883057
    9. '_INF' → logprob: -6.369146823883057
    10. ' inf' → logprob: -6.744146823883057

Token 388: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6638237237930298
    2. '=' → logprob: -1.0388237237930298
    3. ' =' → logprob: -2.0388236045837402
    4. '=int' → logprob: -7.41382360458374
    5. ')=' → logprob: -8.788824081420898
    6. '=float' → logprob: -9.288824081420898
    7. '_INF' → logprob: -9.663824081420898
    8. 'INF' → logprob: -10.413824081420898
    9. 'int' → logprob: -10.538824081420898
    10. ')
' → logprob: -10.788824081420898

Token 389: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008680401369929314
    2. 'float' → logprob: -4.88368034362793
    3. 'int' → logprob: -6.88368034362793
    4. '1' → logprob: -10.75868034362793
    5. ' ' → logprob: -11.38368034362793
    6. '100' → logprob: -11.38368034362793
    7. ' float' → logprob: -12.75868034362793
    8. '999' → logprob: -14.00868034362793
    9. '214' → logprob: -15.38368034362793
    10. '```' → logprob: -16.00868034362793

Token 390: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01885770820081234
    2. 'float' → logprob: -4.018857479095459
    3. 'int' → logprob: -7.268857479095459
    4. '1' → logprob: -12.393857955932617
    5. '100' → logprob: -12.643857955932617
    6. ' float' → logprob: -13.768857955932617
    7. '999' → logprob: -14.268857955932617
    8. ' ' → logprob: -14.268857955932617
    9. '214' → logprob: -14.893857955932617
    10. 'math' → logprob: -15.268857955932617

Token 391: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5811931490898132
    2. '9' → logprob: -0.8311931490898132
    3. '18' → logprob: -5.456192970275879
    4. '10' → logprob: -7.581192970275879
    5. '000' → logprob: -8.331192970275879
    6. '12' → logprob: -9.331192970275879
    7. ' **' → logprob: -9.706192970275879
    8. '7' → logprob: -10.706192970275879
    9. '15' → logprob: -11.081192970275879
    10. '09' → logprob: -11.581192970275879

Token 392: '13' (ID: 1311)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04059886932373047
    2. '18' → logprob: -3.2905988693237305
    3. '15' → logprob: -6.2905988693237305
    4. '12' → logprob: -7.4155988693237305
    5. '10' → logprob: -9.29059886932373
    6. '16' → logprob: -12.79059886932373
    7. '14' → logprob: -13.66559886932373
    8. '13' → logprob: -14.04059886932373
    9. '19' → logprob: -14.54059886932373
    10. '20' → logprob: -15.16559886932373

Token 393: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018159556202590466
    2. ' )' → logprob: -6.3768157958984375
    3. '**' → logprob: -9.626815795898438
    4. ')
' → logprob: -11.126815795898438
    5. ')**' → logprob: -11.501815795898438
    6. '+' → logprob: -11.751815795898438
    7. '**)' → logprob: -12.376815795898438
    8. '+)' → logprob: -12.626815795898438
    9. ')

' → logprob: -13.751815795898438
    10. '0' → logprob: -14.126815795898438

Token 394: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -3.128163257315464e-07
    2. '_INF' → logprob: -15.75
    3. ' INF' → logprob: -17.0
    4. '10' → logprob: -17.625
    5. 'inf' → logprob: -19.25
    6. '
' → logprob: -20.0
    7. 'IN' → logprob: -21.125
    8. '

' → logprob: -22.375
    9. '#' → logprob: -22.375
    10. 'Inf' → logprob: -22.5

Token 395: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. ' =
' → logprob: -16.91022491455078
    4. '_' → logprob: -17.41022491455078
    5. ' ' → logprob: -17.41022491455078
    6. ' ' → logprob: -17.66022491455078
    7. '＝' → logprob: -17.78522491455078
    8. ')' → logprob: -17.78522491455078
    9. ' =
' → logprob: -18.03522491455078
    10. '=

' → logprob: -18.03522491455078

Token 396: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006717505399137735
    2. ' ' → logprob: -5.006717681884766
    3. '100' → logprob: -13.131717681884766
    4. 'int' → logprob: -15.506717681884766
    5. '1' → logprob: -19.006717681884766
    6. ' ' → logprob: -20.881717681884766
    7. '  ' → logprob: -21.006717681884766
    8. ' int' → logprob: -22.131717681884766
    9. '   ' → logprob: -22.381717681884766
    10. '​' → logprob: -22.381717681884766

Token 397: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.318681188422488e-05
    2. '100' → logprob: -11.25001335144043
    3. 'int' → logprob: -16.37501335144043
    4. ' ' → logprob: -19.62501335144043
    5. '1' → logprob: -22.50001335144043
    6. '(' → logprob: -23.12501335144043
    7. '１０' → logprob: -23.12501335144043
    8. '101' → logprob: -23.50001335144043
    9. '```' → logprob: -23.50001335144043
    10. '=' → logprob: -23.50001335144043

Token 398: ' **' (ID: 6240)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.0052342405542731285
    2. '**' → logprob: -5.255234241485596
    3. '```' → logprob: -15.380233764648438
    4. '+' → logprob: -16.255233764648438
    5. '*' → logprob: -16.505233764648438
    6. ' **' → logprob: -17.505233764648438
    7. '3' → logprob: -17.880233764648438
    8. ' ' → logprob: -18.005233764648438
    9. '^' → logprob: -18.255233764648438
    10. '_' → logprob: -20.005233764648438

Token 399: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '13' → logprob: 0.0
    2. '```' → logprob: -22.25
    3. '14' → logprob: -23.25
    4. '۱۳' → logprob: -23.625
    5. '013' → logprob: -23.75
    6. '１３' → logprob: -24.125
    7. '131' → logprob: -24.5
    8. '十三' → logprob: -24.75
    9. '15' → logprob: -25.0
    10. '1' → logprob: -25.125

Token 400: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: 0.0
    2. '14' → logprob: -22.875
    3. '```' → logprob: -23.75
    4. '013' → logprob: -24.125
    5. '１３' → logprob: -24.5
    6. '۱۳' → logprob: -24.5
    7. '十三' → logprob: -24.875
    8. '15' → logprob: -24.875
    9. '1' → logprob: -25.125
    10. '

' → logprob: -25.375

Token 401: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.047240834683179855
    2. '

' → logprob: -4.047240734100342
    3. '#' → logprob: -4.297240734100342
    4. '
' → logprob: -5.547240734100342
    5. 'MAX' → logprob: -5.797240734100342
    6. '<|end|>' → logprob: -6.172240734100342
    7. '' → logprob: -6.297240734100342
    8. '\n' → logprob: -6.797240734100342
    9. 'max' → logprob: -7.422240734100342
    10. '0' → logprob: -7.922240734100342

Token 402: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010272121289744973
    2. '#' → logprob: -7.2510271072387695
    3. 'class' → logprob: -8.12602710723877
    4. 'import' → logprob: -11.50102710723877
    5. '\' → logprob: -12.87602710723877
    6. 'n' → logprob: -13.00102710723877
    7. ')' → logprob: -13.25102710723877
    8. 'from' → logprob: -13.62602710723877
    9. '0' → logprob: -14.25102710723877
    10. '```' → logprob: -14.37602710723877

Token 403: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003606104583013803
    2. 'class' → logprob: -8.375360488891602
    3. '#' → logprob: -9.000360488891602
    4. 'import' → logprob: -12.875360488891602
    5. 'input' → logprob: -12.875360488891602
    6. 'from' → logprob: -13.875360488891602
    7. 'de' → logprob: -15.625360488891602
    8. 'n' → logprob: -16.3753604888916
    9. '```' → logprob: -16.7503604888916
    10. 'DEBUG' → logprob: -17.3753604888916

Token 404: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.020652834326028824
    2. 'fin' → logprob: -3.8956527709960938
    3. '#' → logprob: -9.520652770996094
    4. 'fi' → logprob: -10.520652770996094
    5. 'finite' → logprob: -12.770652770996094
    6. 'fn' → logprob: -13.520652770996094
    7. 'but' → logprob: -13.895652770996094
    8. 'ff' → logprob: -14.145652770996094
    9. 'fen' → logprob: -14.145652770996094
    10. 'def' → logprob: -14.645652770996094

Token 405: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.031549397855997086
    2. 'inition' → logprob: -3.7815494537353516
    3. 'ir' → logprob: -5.156549453735352
    4. 'i' → logprob: -6.406549453735352
    5. 'ission' → logprob: -7.906549453735352
    6. 'tion' → logprob: -8.406549453735352
    7. 'issage' → logprob: -8.781549453735352
    8. 'issement' → logprob: -10.531549453735352
    9. '#' → logprob: -11.406549453735352
    10. 'ation' → logprob: -11.781549453735352

Token 406: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004979235585778952
    2. 'class' → logprob: -6.504979133605957
    3. ' def' → logprob: -6.879979133605957
    4. ' de' → logprob: -7.254979133605957
    5. '#' → logprob: -7.379979133605957
    6. 'de' → logprob: -7.629979133605957
    7. ' d' → logprob: -7.879979133605957
    8. 'd' → logprob: -9.379979133605957
    9. ' of' → logprob: -9.504979133605957
    10. 'INF' → logprob: -9.879979133605957

Token 407: ' fonctions' (ID: 87283)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38080137968063354
    2. ' la' → logprob: -1.5058014392852783
    3. 'la' → logprob: -3.3808014392852783
    4. ' def' → logprob: -4.130801200866699
    5. 'une' → logprob: -4.505801200866699
    6. 'l' → logprob: -4.880801200866699
    7. 'a' → logprob: -5.505801200866699
    8. 'class' → logprob: -5.630801200866699
    9. ' l' → logprob: -5.755801200866699
    10. 'INF' → logprob: -5.755801200866699

Token 408: ' util' (ID: 3667)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014244362711906433
    2. ':' → logprob: -5.139244556427002
    3. ' def' → logprob: -5.389244556427002
    4. ' de' → logprob: -6.514244556427002
    5. 'de' → logprob: -7.139244556427002
    6. '(' → logprob: -8.139244079589844
    7. 's' → logprob: -8.639244079589844
    8. '
' → logprob: -8.639244079589844
    9. ':def' → logprob: -8.889244079589844
    10. '_' → logprob: -9.014244079589844

Token 409: 'itaires' (ID: 106145)
  Prédit: 'itaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itaires' → logprob: -0.004538231063634157
    2. 'es' → logprob: -5.504538059234619
    3. 'itaire' → logprob: -8.004538536071777
    4. 'aires' → logprob: -10.379538536071777
    5. 'ités' → logprob: -10.379538536071777
    6. 'def' → logprob: -10.629538536071777
    7. 'isées' → logprob: -11.004538536071777
    8. 'it' → logprob: -11.879538536071777
    9. 't' → logprob: -12.129538536071777
    10. 'ité' → logprob: -13.004538536071777

Token 410: ' conc' (ID: 4468)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0045571038499474525
    2. ':' → logprob: -5.629557132720947
    3. ' def' → logprob: -8.129556655883789
    4. '(' → logprob: -8.629556655883789
    5. '(
' → logprob: -9.129556655883789
    6. ':def' → logprob: -9.254556655883789
    7. '
' → logprob: -9.504556655883789
    8. 'de' → logprob: -9.629556655883789
    9. '_def' → logprob: -10.129556655883789
    10. '```' → logprob: -10.879556655883789

Token 411: 'ises' (ID: 5555)
  Prédit: 'ises'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ises' → logprob: -0.006837441120296717
    2. 'is' → logprob: -5.631837368011475
    3. 'ise' → logprob: -7.756837368011475
    4. 'our' → logprob: -7.756837368011475
    5. 'ernes' → logprob: -7.756837368011475
    6. 'ern' → logprob: -8.131837844848633
    7. '```' → logprob: -8.381837844848633
    8. 'e' → logprob: -8.506837844848633
    9. 'isées' → logprob: -8.631837844848633
    10. 'isant' → logprob: -8.756837844848633

Token 412: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010838286019861698
    2. ':' → logprob: -4.760838508605957
    3. 'de' → logprob: -7.260838508605957
    4. ' def' → logprob: -7.385838508605957
    5. ':def' → logprob: -7.385838508605957
    6. ' de' → logprob: -9.260838508605957
    7. '
' → logprob: -9.510838508605957
    8. 's' → logprob: -11.135838508605957
    9. '(def' → logprob: -11.260838508605957
    10. 'd' → logprob: -11.510838508605957

Token 413: ' lire' (ID: 46082)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9487441778182983
    2. 'la' → logprob: -1.6987441778182983
    3. ' la' → logprob: -2.073744297027588
    4. 'min' → logprob: -2.573744297027588
    5. 'le' → logprob: -2.823744297027588
    6. ' l' → logprob: -3.448744297027588
    7. 'man' → logprob: -3.823744297027588
    8. ' lire' → logprob: -4.198744297027588
    9. 'max' → logprob: -4.573744297027588
    10. ' le' → logprob: -4.698744297027588

Token 414: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4893604815006256
    2. 'input' → logprob: -1.1143604516983032
    3. 'la' → logprob: -4.364360332489014
    4. 'l' → logprob: -4.364360332489014
    5. 'int' → logprob: -4.864360332489014
    6. '_input' → logprob: -5.364360332489014
    7. 'une' → logprob: -5.489360332489014
    8. 'n' → logprob: -5.989360332489014
    9. 'le' → logprob: -6.364360332489014
    10. ' input' → logprob: -6.739360332489014

Token 415: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2423289716243744
    2. 'input' → logprob: -2.1173288822174072
    3. ''entrée' → logprob: -2.9923288822174072
    4. 'es' → logprob: -3.4923288822174072
    5. 'e' → logprob: -4.492329120635986
    6. 'entrée' → logprob: -6.117329120635986
    7. '=input' → logprob: -8.242328643798828
    8. ' input' → logprob: -8.742328643798828
    9. '_input' → logprob: -9.617328643798828
    10. ''' → logprob: -9.867328643798828

Token 416: ' standard' (ID: 7024)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7148337960243225
    2. 'input' → logprob: -0.7148337960243225
    3. '
' → logprob: -4.089833736419678
    4. '_input' → logprob: -6.464833736419678
    5. 'import' → logprob: -7.214833736419678
    6. 'n' → logprob: -7.464833736419678
    7. '(input' → logprob: -8.089834213256836
    8. ' =' → logprob: -8.214834213256836
    9. '=input' → logprob: -8.214834213256836
    10. '()
' → logprob: -8.589834213256836

Token 417: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3392617106437683
    2. 'input' → logprob: -1.339261770248413
    3. '
' → logprob: -3.714261770248413
    4. '_input' → logprob: -7.464261531829834
    5. 'inp' → logprob: -8.839262008666992
    6. '(input' → logprob: -9.339262008666992
    7. '()
' → logprob: -9.464262008666992
    8. 'n' → logprob: -9.464262008666992
    9. 'import' → logprob: -9.714262008666992
    10. 'in' → logprob: -9.964262008666992

Token 418: 'sys' (ID: 17324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.433892160654068
    2. '):' → logprob: -1.0588921308517456
    3. '):
' → logprob: -6.183892250061035
    4. 'input' → logprob: -6.808892250061035
    5. '()' → logprob: -7.058892250061035
    6. 'int' → logprob: -7.558892250061035
    7. '():' → logprob: -8.933892250061035
    8. 'def' → logprob: -9.058892250061035
    9. 'n' → logprob: -9.308892250061035
    10. 'import' → logprob: -9.933892250061035

Token 419: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.31988823413848877
    2. ')' → logprob: -2.194888114929199
    3. 'input' → logprob: -2.319888114929199
    4. 'stdin' → logprob: -3.319888114929199
    5. 'import' → logprob: -4.444888114929199
    6. '(stdin' → logprob: -4.694888114929199
    7. '=input' → logprob: -6.194888114929199
    8. '.readline' → logprob: -7.194888114929199
    9. ' =' → logprob: -7.319888114929199
    10. '()' → logprob: -7.444888114929199

Token 420: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35064202547073364
    2. '.readline' → logprob: -1.2256419658660889
    3. ').' → logprob: -7.225642204284668
    4. ')
' → logprob: -7.475642204284668
    5. ' readline' → logprob: -7.725642204284668
    6. '),' → logprob: -8.350642204284668
    7. 'input' → logprob: -9.475642204284668
    8. ')

' → logprob: -10.600642204284668
    9. '):' → logprob: -10.600642204284668
    10. 'read' → logprob: -10.725642204284668

Token 421: ' utiles' (ID: 121161)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014397839084267616
    2. 'def' → logprob: -4.389397621154785
    3. 'int' → logprob: -6.764397621154785
    4. 'lambda' → logprob: -8.264397621154785
    5. 'inp' → logprob: -8.264397621154785
    6. ' input' → logprob: -9.264397621154785
    7. 'stdin' → logprob: -10.264397621154785
    8. 'sys' → logprob: -11.264397621154785
    9. '_input' → logprob: -11.639397621154785
    10. 'n' → logprob: -11.639397621154785

Token 422: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29395791888237
    2. 'input' → logprob: -1.6689579486846924
    3. '=input' → logprob: -3.6689579486846924
    4. '=' → logprob: -3.9189579486846924
    5. '=lambda' → logprob: -4.793957710266113
    6. ' =' → logprob: -5.043957710266113
    7. 'for' → logprob: -6.043957710266113
    8. 'lambda' → logprob: -7.043957710266113
    9. 'import' → logprob: -7.418957710266113
    10. '=sys' → logprob: -7.543957710266113

Token 423: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7209659814834595
    2. 'int' → logprob: -1.4709659814834595
    3. 'input' → logprob: -1.8459659814834595
    4. 'sys' → logprob: -3.72096586227417
    5. ' input' → logprob: -3.84596586227417
    6. ' l' → logprob: -4.84596586227417
    7. ' lire' → logprob: -4.84596586227417
    8. 'i' → logprob: -4.84596586227417
    9. '_' → logprob: -4.97096586227417
    10. 'la' → logprob: -5.34596586227417

Token 424: ' compét' (ID: 34024)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07855912297964096
    2. ' input' → logprob: -3.453559160232544
    3. 'int' → logprob: -3.828559160232544
    4. 'i' → logprob: -5.703558921813965
    5. 'ints' → logprob: -5.953558921813965
    6. 'in' → logprob: -6.328558921813965
    7. 'inputs' → logprob: -6.328558921813965
    8. 'stdin' → logprob: -6.328558921813965
    9. 'l' → logprob: -6.578558921813965
    10. 'n' → logprob: -6.828558921813965

Token 425: 'itions' (ID: 5500)
  Prédit: 'itions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.09371776133775711
    2. 't' → logprob: -2.5937178134918213
    3. 'ences' → logprob: -4.718717575073242
    4. 'it' → logprob: -5.343717575073242
    5. 'ition' → logprob: -7.343717575073242
    6. 'ions' → logprob: -9.718717575073242
    7. 'itives' → logprob: -9.968717575073242
    8. 'itif' → logprob: -9.968717575073242
    9. 'itiv' → logprob: -10.218717575073242
    10. '```' → logprob: -10.218717575073242

Token 426: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12025776505470276
    2. 'input' → logprob: -2.24525785446167
    3. '
' → logprob: -6.37025785446167
    4. 'import' → logprob: -6.37025785446167
    5. '_input' → logprob: -6.74525785446167
    6. '(input' → logprob: -7.49525785446167
    7. ':' → logprob: -7.74525785446167
    8. ' =' → logprob: -7.99525785446167
    9. '=input' → logprob: -8.245257377624512
    10. '(
' → logprob: -8.495257377624512

Token 427: 'def' (ID: 1314)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006110805552452803
    2. 'def' → logprob: -5.131110668182373
    3. 'inp' → logprob: -9.131111145019531
    4. 'read' → logprob: -10.506111145019531
    5. '
' → logprob: -10.756111145019531
    6. 'in' → logprob: -11.381111145019531
    7. 'i' → logprob: -12.881111145019531
    8. 'stdin' → logprob: -13.006111145019531
    9. 'n' → logprob: -13.131111145019531
    10. '_input' → logprob: -13.256111145019531

Token 428: ' LI' (ID: 14875)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.22970974445343018
    2. 'input' → logprob: -1.6047097444534302
    3. ' inp' → logprob: -6.104709625244141
    4. 'inp' → logprob: -6.479709625244141
    5. 'in' → logprob: -8.60470962524414
    6. 'I' → logprob: -8.97970962524414
    7. ' read' → logprob: -9.35470962524414
    8. 'read' → logprob: -10.60470962524414
    9. 'r' → logprob: -10.85470962524414
    10. 'i' → logprob: -11.22970962524414

Token 429: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08864114433526993
    2. 'ST' → logprob: -2.7136411666870117
    3. 'st' → logprob: -4.088641166687012
    4. '()' → logprob: -7.588641166687012
    5. 'N' → logprob: -7.963641166687012
    6. 'ne' → logprob: -8.088641166687012
    7. 'n' → logprob: -8.463641166687012
    8. '():
' → logprob: -8.588641166687012
    9. 'NE' → logprob: -10.338641166687012
    10. 'S' → logprob: -10.463641166687012

Token 430: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.709683895111084
    2. '():' → logprob: -1.584683895111084
    3. 'return' → logprob: -1.834683895111084
    4. ':list' → logprob: -3.209683895111084
    5. '   ' → logprob: -3.459683895111084
    6. '()' → logprob: -4.084683895111084
    7. ':return' → logprob: -4.334683895111084
    8. 'list' → logprob: -4.459683895111084
    9. '):' → logprob: -5.334683895111084
    10. ' return' → logprob: -5.334683895111084

Token 431: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008726729080080986
    2. 'list' → logprob: -4.758726596832275
    3. ' return' → logprob: -9.258727073669434
    4. ' list' → logprob: -11.758727073669434
    5. 'map' → logprob: -11.758727073669434
    6. '   ' → logprob: -14.008727073669434
    7. 'ret' → logprob: -15.508727073669434
    8. 'sys' → logprob: -16.133726119995117
    9. 'int' → logprob: -16.383726119995117
    10. 'eturn' → logprob: -16.758726119995117

Token 432: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -8.895480277715251e-06
    2. ' return' → logprob: -12.125008583068848
    3. 'list' → logprob: -12.625008583068848
    4. 'ret' → logprob: -16.375009536743164
    5. '   ' → logprob: -17.000009536743164
    6. 'eturn' → logprob: -17.250009536743164
    7. 'map' → logprob: -18.000009536743164
    8. 'import' → logprob: -19.375009536743164
    9. '	return' → logprob: -19.625009536743164
    10. 'sys' → logprob: -19.625009536743164

Token 433: ' une' (ID: 2463)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.5890530943870544
    2. 'ist' → logprob: -1.5890531539916992
    3. '   ' → logprob: -2.714053153991699
    4. 'list' → logprob: -2.714053153991699
    5. 'map' → logprob: -3.339053153991699
    6. 'ne' → logprob: -3.464053153991699
    7. 'ine' → logprob: -3.589053153991699
    8. '()' → logprob: -5.339053153991699
    9. 'e' → logprob: -6.089053153991699
    10. ' list' → logprob: -6.339053153991699

Token 434: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.7466103434562683
    2. 'liste' → logprob: -0.9966103434562683
    3. ' ligne' → logprob: -2.371610403060913
    4. ' liste' → logprob: -3.746610403060913
    5. 'int' → logprob: -4.621610164642334
    6. 'l' → logprob: -4.746610164642334
    7. 'list' → logprob: -4.871610164642334
    8. 'ine' → logprob: -5.496610164642334
    9. 'map' → logprob: -5.996610164642334
    10. 'input' → logprob: -6.621610164642334

Token 435: ' depuis' (ID: 16277)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008997069671750069
    2. '()' → logprob: -4.758996963500977
    3. '.strip' → logprob: -8.508996963500977
    4. 'return' → logprob: -9.883996963500977
    5. '.split' → logprob: -10.133996963500977
    6. '.' → logprob: -10.758996963500977
    7. '()
' → logprob: -11.633996963500977
    8. '   ' → logprob: -11.758996963500977
    9. '()[' → logprob: -12.008996963500977
    10. 'strip' → logprob: -12.133996963500977

Token 436: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.023884471505880356
    2. ' sys' → logprob: -3.7738845348358154
    3. 'input' → logprob: -7.398884296417236
    4. 'stdin' → logprob: -11.273884773254395
    5. ' input' → logprob: -12.023884773254395
    6. '=sys' → logprob: -12.273884773254395
    7. 'import' → logprob: -13.523884773254395
    8. '(sys' → logprob: -14.148884773254395
    9. '	sys' → logprob: -14.523884773254395
    10. 'la' → logprob: -15.023884773254395

Token 437: ''entrée' (ID: 115820)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.47393572330474854
    2. 'stdin' → logprob: -1.3489357233047485
    3. 'input' → logprob: -2.473935604095459
    4. '=sys' → logprob: -3.848935604095459
    5. ' sys' → logprob: -4.723935604095459
    6. 'entrée' → logprob: -7.098935604095459
    7. '(sys' → logprob: -7.723935604095459
    8. 'import' → logprob: -7.723935604095459
    9. ' stdin' → logprob: -7.973935604095459
    10. ''entrée' → logprob: -8.098936080932617

Token 438: ' standard' (ID: 7024)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3137364685535431
    2. '()' → logprob: -1.3137364387512207
    3. '()
' → logprob: -9.438736915588379
    4. '=sys' → logprob: -9.813736915588379
    5. '())' → logprob: -10.188736915588379
    6. 'sys' → logprob: -10.188736915588379
    7. ' =' → logprob: -10.188736915588379
    8. 'e' → logprob: -10.313736915588379
    9. '   ' → logprob: -10.313736915588379
    10. ')' → logprob: -11.188736915588379

Token 439: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.022472620010375977
    2. 'return' → logprob: -4.397472381591797
    3. '()' → logprob: -4.897472381591797
    4. '   ' → logprob: -6.772472381591797
    5. ' return' → logprob: -7.897472381591797
    6. '():' → logprob: -7.897472381591797
    7. ' =' → logprob: -9.022472381591797
    8. '.' → logprob: -9.147472381591797
    9. '=' → logprob: -9.522472381591797
    10. '.strip' → logprob: -10.022472381591797

Token 440: ' div' (ID: 4223)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39157089591026306
    2. ' return' → logprob: -1.1415709257125854
    3. '   ' → logprob: -5.391571044921875
    4. ' retourne' → logprob: -9.766571044921875
    5. 'ret' → logprob: -10.266571044921875
    6. '	return' → logprob: -11.266571044921875
    7. ' retour' → logprob: -11.891571044921875
    8. '    ' → logprob: -12.141571044921875
    9. ' ' → logprob: -13.016571044921875
    10. 'r' → logprob: -13.141571044921875

Token 441: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.006740477401763201
    2. 'iser' → logprob: -5.131740570068359
    3. 'ide' → logprob: -7.506740570068359
    4. 'erse' → logprob: -9.13174057006836
    5. 'isé' → logprob: -9.63174057006836
    6. 'isez' → logprob: -10.38174057006836
    7. 'er' → logprob: -12.00674057006836
    8. '()' → logprob: -12.25674057006836
    9. '=' → logprob: -12.25674057006836
    10. 'ize' → logprob: -12.38174057006836

Token 442: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015345746651291847
    2. '().' → logprob: -4.265345573425293
    3. 'la' → logprob: -7.640345573425293
    4. ' la' → logprob: -9.390345573425293
    5. '()[' → logprob: -9.515345573425293
    6. 'le' → logprob: -9.515345573425293
    7. ' en' → logprob: -9.890345573425293
    8. ' ()' → logprob: -9.890345573425293
    9. 'l' → logprob: -10.015345573425293
    10. '()
' → logprob: -10.015345573425293

Token 443: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.8646526336669922
    2. 'input' → logprob: -1.7396526336669922
    3. 'entrée' → logprob: -1.7396526336669922
    4. ' chaîne' → logprob: -2.114652633666992
    5. 'string' → logprob: -3.614652633666992
    6. 'ligne' → logprob: -3.864652633666992
    7. ' input' → logprob: -4.239652633666992
    8. 'cha' → logprob: -4.614652633666992
    9. ' chaine' → logprob: -4.864652633666992
    10. '()' → logprob: -4.864652633666992

Token 444: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2866765856742859
    2. ' en' → logprob: -2.1616766452789307
    3. '().' → logprob: -2.2866766452789307
    4. 'en' → logprob: -3.6616766452789307
    5. ' par' → logprob: -6.286676406860352
    6. 'e' → logprob: -6.911676406860352
    7. 'par' → logprob: -7.161676406860352
    8. 'et' → logprob: -7.536676406860352
    9. '()
' → logprob: -7.661676406860352
    10. 'input' → logprob: -7.786676406860352

Token 445: ' éléments' (ID: 57375)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.35001733899116516
    2. 'une' → logprob: -1.9750173091888428
    3. 'liste' → logprob: -3.2250173091888428
    4. 'des' → logprob: -3.3500173091888428
    5. ' des' → logprob: -3.3500173091888428
    6. ' une' → logprob: -3.9750173091888428
    7. ' tokens' → logprob: -4.350017547607422
    8. 'list' → logprob: -5.100017547607422
    9. 'ent' → logprob: -5.850017547607422
    10. ' chaînes' → logprob: -6.600017547607422

Token 446: ' via' (ID: 4493)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0704796239733696
    2. '().' → logprob: -2.69547963142395
    3. '.split' → logprob: -8.945479393005371
    4. '()
' → logprob: -9.445479393005371
    5. '()[' → logprob: -9.945479393005371
    6. 'split' → logprob: -10.070479393005371
    7. 'map' → logprob: -10.195479393005371
    8. '.' → logprob: -10.320479393005371
    9. '=' → logprob: -10.945479393005371
    10. 'strip' → logprob: -11.195479393005371

Token 447: ' split' (ID: 12648)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25365424156188965
    2. ' input' → logprob: -1.8786542415618896
    3. 'split' → logprob: -3.0036542415618896
    4. 'map' → logprob: -4.253654479980469
    5. 'str' → logprob: -6.378654479980469
    6. ' map' → logprob: -6.503654479980469
    7. ' split' → logprob: -6.878654479980469
    8. 'strip' → logprob: -7.128654479980469
    9. 'l' → logprob: -7.503654479980469
    10. ' la' → logprob: -7.878654479980469

Token 448: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018673599697649479
    2. '().' → logprob: -6.501867294311523
    3. '(),' → logprob: -8.001867294311523
    4. '()
' → logprob: -11.501867294311523
    5. ' ()' → logprob: -12.126867294311523
    6. '()[' → logprob: -12.376867294311523
    7. '(' → logprob: -12.626867294311523
    8. '()]' → logprob: -13.376867294311523
    9. '()

' → logprob: -13.876867294311523
    10. '())' → logprob: -13.876867294311523

Token 449: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04913103207945824
    2. '().' → logprob: -3.049130916595459
    3. '(),' → logprob: -8.424131393432617
    4. 'return' → logprob: -9.174131393432617
    5. '()
' → logprob: -9.549131393432617
    6. 'def' → logprob: -10.549131393432617
    7. '()[' → logprob: -10.549131393432617
    8. ' ()' → logprob: -10.674131393432617
    9. ',' → logprob: -10.924131393432617
    10. '   ' → logprob: -11.174131393432617

Token 450: ' convert' (ID: 8452)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6484956741333008
    2. 'return' → logprob: -1.2734956741333008
    3. ' retourne' → logprob: -2.648495674133301
    4. ' map' → logprob: -2.773495674133301
    5. 'map' → logprob: -2.898495674133301
    6. '   ' → logprob: -5.773495674133301
    7. 'convert' → logprob: -6.398495674133301
    8. ' convert' → logprob: -6.773495674133301
    9. ' les' → logprob: -7.023495674133301
    10. ' transforme' → logprob: -7.648495674133301

Token 451: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -8.280175097752362e-05
    2. 'i' → logprob: -10.500082969665527
    3. 't' → logprob: -10.625082969665527
    4. '_it' → logprob: -11.625082969665527
    5. ' it' → logprob: -11.875082969665527
    6. '[it' → logprob: -12.875082969665527
    7. '(it' → logprob: -13.000082969665527
    8. 'is' → logprob: -13.125082969665527
    9. '   ' → logprob: -13.625082969665527
    10. '```' → logprob: -13.750082969665527

Token 452: ' chaque' (ID: 21194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6398646235466003
    2. ' en' → logprob: -2.264864683151245
    3. 'int' → logprob: -2.514864683151245
    4. 'map' → logprob: -2.889864683151245
    5. '(int' → logprob: -3.014864683151245
    6. 'la' → logprob: -3.139864683151245
    7. 'en' → logprob: -3.764864683151245
    8. '(' → logprob: -3.889864683151245
    9. ' la' → logprob: -4.264864444732666
    10. 'le' → logprob: -4.264864444732666

Token 453: ' élément' (ID: 99627)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.021503984928131104
    2. '(int' → logprob: -4.396503925323486
    3. ' int' → logprob: -5.896503925323486
    4. '(' → logprob: -6.646503925323486
    5. 'x' → logprob: -6.646503925323486
    6. 'e' → logprob: -7.271503925323486
    7. '(x' → logprob: -7.271503925323486
    8. ' en' → logprob: -7.521503925323486
    9. 'en' → logprob: -7.771503925323486
    10. ' ' → logprob: -8.021504402160645

Token 454: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.857519805431366
    2. '(int' → logprob: -0.982519805431366
    3. '(' → logprob: -2.1075198650360107
    4. 'int' → logprob: -2.6075198650360107
    5. ' en' → logprob: -5.357519626617432
    6. '(str' → logprob: -8.10752010345459
    7. '(lambda' → logprob: -8.23252010345459
    8. ' ()' → logprob: -8.73252010345459
    9. '(en' → logprob: -9.23252010345459
    10. '(x' → logprob: -9.98252010345459

Token 455: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012673746095970273
    2. 'ent' → logprob: -6.751267433166504
    3. ' int' → logprob: -9.251267433166504
    4. ' entier' → logprob: -15.001267433166504
    5. 'integer' → logprob: -15.376267433166504
    6. 'ints' → logprob: -15.626267433166504
    7. ' ent' → logprob: -15.751267433166504
    8. 'inte' → logprob: -16.126266479492188
    9. '=int' → logprob: -16.626266479492188
    10. '(int' → logprob: -16.876266479492188

Token 456: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03152410686016083
    2. '():' → logprob: -3.906524181365967
    3. '().' → logprob: -5.156524181365967
    4. 'map' → logprob: -6.531524181365967
    5. '   ' → logprob: -7.031524181365967
    6. 'def' → logprob: -7.156524181365967
    7. 'return' → logprob: -7.531524181365967
    8. ' ()' → logprob: -7.656524181365967
    9. '()[' → logprob: -8.281523704528809
    10. '()]' → logprob: -9.406523704528809

Token 457: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.24984341859817505
    2. '   ' → logprob: -1.9998433589935303
    3. 'return' → logprob: -2.9998433589935303
    4. '()' → logprob: -3.8748433589935303
    5. ':' → logprob: -4.499843597412109
    6. ' return' → logprob: -6.874843597412109
    7. '():
' → logprob: -6.999843597412109
    8. ':return' → logprob: -6.999843597412109
    9. '):' → logprob: -8.24984359741211
    10. ' ():' → logprob: -8.37484359741211

Token 458: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000133098365040496
    2. ' return' → logprob: -9.000133514404297
    3. '   ' → logprob: -11.750133514404297
    4. 'list' → logprob: -13.250133514404297
    5. '	return' → logprob: -18.250133514404297
    6. 'ret' → logprob: -19.375133514404297
    7. 'map' → logprob: -19.625133514404297
    8. ' ' → logprob: -20.250133514404297
    9. '{return' → logprob: -20.625133514404297
    10. '  ' → logprob: -20.750133514404297

Token 459: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0019307781476527452
    2. ' list' → logprob: -6.2519307136535645
    3. '[list' → logprob: -13.251931190490723
    4. 'map' → logprob: -14.751931190490723
    5. '	list' → logprob: -17.251930236816406
    6. '[' → logprob: -19.251930236816406
    7. '(list' → logprob: -19.501930236816406
    8. '=list' → logprob: -19.876930236816406
    9. '   ' → logprob: -20.376930236816406
    10. ':list' → logprob: -21.126930236816406

Token 460: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0003361774142831564
    2. '(' → logprob: -8.000336647033691
    3. 'map' → logprob: -14.375336647033691
    4. '(
' → logprob: -16.000335693359375
    5. '(int' → logprob: -16.875335693359375
    6. '(m' → logprob: -17.750335693359375
    7. '	map' → logprob: -18.000335693359375
    8. ' map' → logprob: -18.000335693359375
    9. '.map' → logprob: -19.000335693359375
    10. '(

' → logprob: -19.000335693359375

Token 461: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009132515988312662
    2. 'int' → logprob: -7.125913143157959
    3. '(' → logprob: -9.250913619995117
    4. ' int' → logprob: -11.750913619995117
    5. ',int' → logprob: -13.250913619995117
    6. '=int' → logprob: -13.625913619995117
    7. '<int' → logprob: -14.000913619995117
    8. '(
' → logprob: -15.125913619995117
    9. '[int' → logprob: -15.750913619995117
    10. '	int' → logprob: -15.875913619995117

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0064306678250432014
    2. ',input' → logprob: -5.131430625915527
    3. '(sys' → logprob: -8.381430625915527
    4. 'sys' → logprob: -8.381430625915527
    5. 'input' → logprob: -10.381430625915527
    6. ' sys' → logprob: -12.131430625915527
    7. ' ,' → logprob: -12.381430625915527
    8. '=sys' → logprob: -14.256430625915527
    9. '(' → logprob: -14.381430625915527
    10. '(input' → logprob: -14.506430625915527

Token 463: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.11008736491203308
    2. ' sys' → logprob: -2.6100873947143555
    3. 'input' → logprob: -3.6100873947143555
    4. ' input' → logprob: -5.6100873947143555
    5. '   ' → logprob: -13.110087394714355
    6. 'stdin' → logprob: -13.610087394714355
    7. '(sys' → logprob: -14.110087394714355
    8. ' ' → logprob: -14.360087394714355
    9. '=sys' → logprob: -14.360087394714355
    10. '	sys' → logprob: -14.735087394714355

Token 464: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.822646693966817e-06
    2. '.' → logprob: -11.875007629394531
    3. 'stdin' → logprob: -14.375007629394531
    4. '.std' → logprob: -16.25000762939453
    5. '.stdout' → logprob: -16.37500762939453
    6. '.argv' → logprob: -16.75000762939453
    7. '(stdin' → logprob: -18.50000762939453
    8. ' stdin' → logprob: -18.50000762939453
    9. '.readline' → logprob: -18.87500762939453
    10. '   ' → logprob: -20.00000762939453

Token 465: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.975612187583465e-05
    2. '.stdin' → logprob: -10.625029563903809
    3. '.' → logprob: -12.625029563903809
    4. '.read' → logprob: -13.250029563903809
    5. '().' → logprob: -16.000030517578125
    6. ' .' → logprob: -16.250030517578125
    7. '.readlines' → logprob: -16.625030517578125
    8. ').' → logprob: -17.125030517578125
    9. '.buffer' → logprob: -17.750030517578125
    10. ' readline' → logprob: -18.875030517578125

Token 466: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.292907877039397e-06
    2. '()' → logprob: -12.75000286102295
    3. ' ().' → logprob: -15.50000286102295
    4. '()))' → logprob: -16.125003814697266
    5. '(' → logprob: -19.000003814697266
    6. '())))' → logprob: -19.875003814697266
    7. '()
' → logprob: -20.000003814697266
    8. '))' → logprob: -20.375003814697266
    9. '().
' → logprob: -20.875003814697266
    10. '.' → logprob: -21.250003814697266

Token 467: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.03984997048974037
    2. 'rstrip' → logprob: -3.2898499965667725
    3. 'split' → logprob: -6.414849758148193
    4. 'read' → logprob: -8.789850234985352
    5. ' strip' → logprob: -11.289850234985352
    6. 'decode' → logprob: -13.289850234985352
    7. '().' → logprob: -13.414850234985352
    8. ')' → logprob: -13.539850234985352
    9. '(strip' → logprob: -15.664850234985352
    10. '.rstrip' → logprob: -16.78985023498535

Token 468: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04666019603610039
    2. '))' → logprob: -3.6716601848602295
    3. '()' → logprob: -3.9216601848602295
    4. '())' → logprob: -9.046660423278809
    5. '(' → logprob: -9.171660423278809
    6. '())))' → logprob: -9.796660423278809
    7. '()))
' → logprob: -10.171660423278809
    8. ')))' → logprob: -11.421660423278809
    9. '()));' → logprob: -11.671660423278809
    10. ')' → logprob: -13.046660423278809

Token 469: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3762400448322296
    2. 'def' → logprob: -1.5012400150299072
    3. '<|end|>' → logprob: -2.5012400150299072
    4. ')' → logprob: -5.126240253448486
    5. '

' → logprob: -7.126240253448486
    6. '```' → logprob: -8.126239776611328
    7. '<|end|>' → logprob: -8.126239776611328
    8. ' 
' → logprob: -8.376239776611328
    9. '  
' → logprob: -8.501239776611328
    10. '\n' → logprob: -8.501239776611328

Token 470: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.027092130854725838
    2. 'LS' → logprob: -4.402091979980469
    3. 'II' → logprob: -4.402091979980469
    4. 'S' → logprob: -6.902091979980469
    5. 'LI' → logprob: -7.902091979980469
    6. 'input' → logprob: -8.027091979980469
    7. 'L' → logprob: -8.277091979980469
    8. 'IS' → logprob: -9.027091979980469
    9. 'Ii' → logprob: -10.652091979980469
    10. 'SI' → logprob: -10.777091979980469

Token 471: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.23872576653957367
    2. 'n' → logprob: -2.2387256622314453
    3. 'N' → logprob: -2.8637256622314453
    4. '()' → logprob: -3.1137256622314453
    5. 'nt' → logprob: -6.113725662231445
    6. '():
' → logprob: -6.863725662231445
    7. 'O' → logprob: -7.238725662231445
    8. 'NT' → logprob: -9.863725662231445
    9. 'P' → logprob: -10.113725662231445
    10. 'Np' → logprob: -10.238725662231445

Token 472: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05048637464642525
    2. 'int' → logprob: -3.1754863262176514
    3. ' return' → logprob: -5.6754865646362305
    4. '   ' → logprob: -5.9254865646362305
    5. '():' → logprob: -7.4254865646362305
    6. '(int' → logprob: -8.05048656463623
    7. '()' → logprob: -8.92548656463623
    8. ':return' → logprob: -9.05048656463623
    9. ':int' → logprob: -9.67548656463623
    10. ':' → logprob: -10.55048656463623

Token 473: ' #' (ID: 1069)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519838511943817
    2. 'return' → logprob: -1.501983880996704
    3. ' return' → logprob: -10.001983642578125
    4. ' int' → logprob: -11.751983642578125
    5. '   ' → logprob: -13.501983642578125
    6. '(int' → logprob: -16.501983642578125
    7. '=int' → logprob: -16.751983642578125
    8. '
' → logprob: -17.751983642578125
    9. '  ' → logprob: -18.501983642578125
    10. 'ret' → logprob: -19.376983642578125

Token 474: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00012035090912831947
    2. ' return' → logprob: -9.500120162963867
    3. 'int' → logprob: -10.000120162963867
    4. 'ret' → logprob: -17.250120162963867
    5. '   ' → logprob: -19.375120162963867
    6. 'Return' → logprob: -20.875120162963867
    7. ' int' → logprob: -21.500120162963867
    8. '
' → logprob: -21.625120162963867
    9. '	return' → logprob: -22.000120162963867
    10. 'r' → logprob: -22.250120162963867

Token 475: ' une' (ID: 2463)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14673608541488647
    2. '()' → logprob: -2.0217361450195312
    3. 'nt' → logprob: -5.896736145019531
    4. '=int' → logprob: -7.521736145019531
    5. 'n' → logprob: -8.396736145019531
    6. '(int' → logprob: -9.271736145019531
    7. 'a' → logprob: -9.396736145019531
    8. 't' → logprob: -10.521736145019531
    9. '<int' → logprob: -10.521736145019531
    10. '<|end|>' → logprob: -10.646736145019531

Token 476: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.09258086234331131
    2. 'ligne' → logprob: -2.717580795288086
    3. 'int' → logprob: -4.592580795288086
    4. '()' → logprob: -4.592580795288086
    5. 'l' → logprob: -6.717580795288086
    6. 'n' → logprob: -8.092580795288086
    7. ' ligne' → logprob: -8.467580795288086
    8. 'single' → logprob: -9.342580795288086
    9. ' line' → logprob: -9.592580795288086
    10. 'ingle' → logprob: -9.967580795288086

Token 477: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06373822689056396
    2. '().' → logprob: -2.8137383460998535
    3. '()
' → logprob: -7.1887383460998535
    4. 'from' → logprob: -8.313737869262695
    5. '()[' → logprob: -8.813737869262695
    6. '.readline' → logprob: -9.438737869262695
    7. 'def' → logprob: -9.813737869262695
    8. 'sys' → logprob: -9.938737869262695
    9. ' =' → logprob: -10.188737869262695
    10. '())' → logprob: -10.188737869262695

Token 478: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00075769261457026
    2. ' sys' → logprob: -7.250757694244385
    3. '(sys' → logprob: -10.250757217407227
    4. 'int' → logprob: -12.375757217407227
    5. '=sys' → logprob: -12.375757217407227
    6. 'l' → logprob: -12.625757217407227
    7. 'stdin' → logprob: -15.125757217407227
    8. 'input' → logprob: -15.750757217407227
    9. '	sys' → logprob: -15.750757217407227
    10. '()' → logprob: -16.750757217407227

Token 479: ''entrée' (ID: 115820)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7679435610771179
    2. '=sys' → logprob: -1.5179436206817627
    3. 'input' → logprob: -2.0179436206817627
    4. 'stdin' → logprob: -2.6429436206817627
    5. ''entrée' → logprob: -3.2679436206817627
    6. '(sys' → logprob: -3.5179436206817627
    7. 'entrée' → logprob: -3.6429436206817627
    8. '(stdin' → logprob: -5.142943382263184
    9. '_input' → logprob: -5.517943382263184
    10. ' sys' → logprob: -5.892943382263184

Token 480: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.0817236676812172
    2. ' standard' → logprob: -3.206723690032959
    3. 'sys' → logprob: -3.706723690032959
    4. '()' → logprob: -4.456723690032959
    5. ' sys' → logprob: -7.706723690032959
    6. 'std' → logprob: -7.956723690032959
    7. '=sys' → logprob: -8.2067232131958
    8. '().' → logprob: -8.3317232131958
    9. 'stdin' → logprob: -9.3317232131958
    10. 'import' → logprob: -9.8317232131958

Token 481: ' et' (ID: 859)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5806437134742737
    2. '()' → logprob: -0.8306437134742737
    3. '():' → logprob: -6.205643653869629
    4. '   ' → logprob: -6.455643653869629
    5. 'return' → logprob: -7.580643653869629
    6. 'def' → logprob: -8.580643653869629
    7. '()
' → logprob: -8.580643653869629
    8. ')' → logprob: -9.205643653869629
    9. '():
' → logprob: -10.080643653869629
    10. ' ()' → logprob: -11.205643653869629

Token 482: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.034096166491508484
    2. ' return' → logprob: -3.7840962409973145
    3. 'int' → logprob: -4.5340962409973145
    4. ' int' → logprob: -10.034095764160156
    5. 'eturn' → logprob: -12.034095764160156
    6. 'ret' → logprob: -13.659095764160156
    7. 'returns' → logprob: -13.909095764160156
    8. 'convert' → logprob: -13.909095764160156
    9. 'rstrip' → logprob: -13.909095764160156
    10. 'strip' → logprob: -14.909095764160156

Token 483: ' convert' (ID: 8452)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0005319446790963411
    2. 'rstrip' → logprob: -7.875532150268555
    3. 'int' → logprob: -9.125532150268555
    4. 'return' → logprob: -10.625532150268555
    5. ' strip' → logprob: -11.125532150268555
    6. '.strip' → logprob: -12.750532150268555
    7. 'str' → logprob: -15.000532150268555
    8. '_strip' → logprob: -15.125532150268555
    9. '-strip' → logprob: -16.625532150268555
    10. '(strip' → logprob: -16.625532150268555

Token 484: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.04631324112415314
    2. 'e' → logprob: -4.046313285827637
    3. 'ir' → logprob: -4.921313285827637
    4. 'ie' → logprob: -5.171313285827637
    5. 'return' → logprob: -5.921313285827637
    6. 'ert' → logprob: -6.046313285827637
    7. 'int' → logprob: -6.296313285827637
    8. 'er' → logprob: -6.546313285827637
    9. 'irt' → logprob: -6.546313285827637
    10. 'iert' → logprob: -6.671313285827637

Token 485: ' en' (ID: 469)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038430679589509964
    2. 'en' → logprob: -3.538430690765381
    3. '(int' → logprob: -5.038430690765381
    4. '()' → logprob: -6.663430690765381
    5. ' en' → logprob: -7.288430690765381
    6. 'in' → logprob: -9.538430213928223
    7. '=int' → logprob: -10.038430213928223
    8. 'into' → logprob: -10.788430213928223
    9. '<int' → logprob: -11.038430213928223
    10. '   ' → logprob: -11.538430213928223

Token 486: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.4060561776859686e-05
    2. 'ent' → logprob: -10.625043869018555
    3. ' int' → logprob: -10.875043869018555
    4. 'integer' → logprob: -14.625043869018555
    5. 'un' → logprob: -16.125043869018555
    6. ' entier' → logprob: -16.375043869018555
    7. '<int' → logprob: -17.000043869018555
    8. '=int' → logprob: -17.375043869018555
    9. '(int' → logprob: -18.375043869018555
    10. '[int' → logprob: -18.500043869018555

Token 487: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.044704634696245193
    2. '():' → logprob: -3.1697046756744385
    3. '   ' → logprob: -7.044704437255859
    4. 'def' → logprob: -8.29470443725586
    5. '()
' → logprob: -8.41970443725586
    6. 'return' → logprob: -8.41970443725586
    7. '().' → logprob: -9.91970443725586
    8. '():
' → logprob: -10.16970443725586
    9. ' ()' → logprob: -10.79470443725586
    10. '(' → logprob: -11.66970443725586

Token 488: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14123938977718353
    2. 'def' → logprob: -2.3912394046783447
    3. 'return' → logprob: -4.016239166259766
    4. '()' → logprob: -4.016239166259766
    5. '():' → logprob: -5.766239166259766
    6. ' return' → logprob: -7.641239166259766
    7. '()
' → logprob: -8.141239166259766
    8. '():
' → logprob: -9.266239166259766
    9. ' def' → logprob: -10.016239166259766
    10. ':' → logprob: -10.641239166259766

Token 489: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005549400229938328
    2. ' return' → logprob: -7.750555038452148
    3. '   ' → logprob: -9.000555038452148
    4. 'int' → logprob: -14.000555038452148
    5. '	return' → logprob: -17.50055503845215
    6. '
' → logprob: -17.87555503845215
    7. ' ' → logprob: -19.00055503845215
    8. '  ' → logprob: -19.37555503845215
    9. 'def' → logprob: -19.87555503845215
    10. ':return' → logprob: -19.87555503845215

Token 490: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023245595395565033
    2. ' int' → logprob: -3.7732455730438232
    3. '(int' → logprob: -17.523244857788086
    4. ' ' → logprob: -17.648244857788086
    5. 'in' → logprob: -19.523244857788086
    6. '	int' → logprob: -19.523244857788086
    7. '<int' → logprob: -20.273244857788086
    8. '  ' → logprob: -20.398244857788086
    9. '=int' → logprob: -21.398244857788086
    10. '[int' → logprob: -21.648244857788086

Token 491: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0003361774142831564
    2. '(' → logprob: -8.000336647033691
    3. 'sys' → logprob: -14.625336647033691
    4. '(Sys' → logprob: -15.500336647033691
    5. '=sys' → logprob: -17.000335693359375
    6. '(system' → logprob: -17.750335693359375
    7. ' sys' → logprob: -17.875335693359375
    8. ' (' → logprob: -18.125335693359375
    9. '(input' → logprob: -18.125335693359375
    10. '(s' → logprob: -18.625335693359375

Token 492: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.0921942703134846e-05
    2. '.stdout' → logprob: -12.00001049041748
    3. 'stdin' → logprob: -13.12501049041748
    4. '(stdin' → logprob: -14.00001049041748
    5. '.readline' → logprob: -14.12501049041748
    6. '.std' → logprob: -14.25001049041748
    7. '.' → logprob: -15.12501049041748
    8. ' stdin' → logprob: -16.625011444091797
    9. '.argv' → logprob: -16.750011444091797
    10. ' .' → logprob: -17.250011444091797

Token 493: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.018158841878175735
    2. '().' → logprob: -4.018158912658691
    3. '())' → logprob: -13.268158912658691
    4. ' readline' → logprob: -13.268158912658691
    5. '.stdin' → logprob: -13.518158912658691
    6. '()' → logprob: -13.643158912658691
    7. 'stdin' → logprob: -13.768158912658691
    8. '(stdin' → logprob: -14.518158912658691
    9. 'line' → logprob: -14.768158912658691
    10. '.' → logprob: -15.518158912658691

Token 494: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2331942617893219
    2. '())' → logprob: -1.7331942319869995
    3. '()))' → logprob: -3.483194351196289
    4. '()' → logprob: -7.483194351196289
    5. '))' → logprob: -12.608194351196289
    6. ')' → logprob: -12.983194351196289
    7. ' ())' → logprob: -14.108194351196289
    8. '.readline' → logprob: -14.233194351196289
    9. '(' → logprob: -14.233194351196289
    10. '()))
' → logprob: -14.358194351196289

Token 495: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005068036844022572
    2. '<|end|>' → logprob: -8.250506401062012
    3. '
' → logprob: -8.375506401062012
    4. '```' → logprob: -12.000506401062012
    5. ' def' → logprob: -13.000506401062012
    6. '#' → logprob: -13.000506401062012
    7. ')' → logprob: -13.750506401062012
    8. '

' → logprob: -14.250506401062012
    9. '\' → logprob: -14.500506401062012
    10. '  
' → logprob: -14.625506401062012

Token 496: ' LS' (ID: 60790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3159663677215576
    2. 'LS' → logprob: -1.3159663677215576
    3. 'L' → logprob: -6.440966606140137
    4. 'LI' → logprob: -7.565966606140137
    5. 'input' → logprob: -8.315966606140137
    6. 'SI' → logprob: -8.315966606140137
    7. 'Ls' → logprob: -10.565966606140137
    8. 'LIN' → logprob: -10.940966606140137
    9. 'SS' → logprob: -11.065966606140137
    10. 'LL' → logprob: -11.815966606140137

Token 497: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001150102005340159
    2. '():
' → logprob: -7.251150131225586
    3. '()' → logprob: -7.751150131225586
    4. ' ():' → logprob: -11.626150131225586
    5. '():
' → logprob: -14.251150131225586
    6. '():

' → logprob: -16.001150131225586
    7. ' ()' → logprob: -16.251150131225586
    8. 'def' → logprob: -17.751150131225586
    9. '().' → logprob: -17.876150131225586
    10. '()>' → logprob: -18.626150131225586

Token 498: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006792220752686262
    2. '():
' → logprob: -5.006792068481445
    3. '()' → logprob: -9.631792068481445
    4. 'def' → logprob: -11.881792068481445
    5. ' ():' → logprob: -12.631792068481445
    6. '():
' → logprob: -14.131792068481445
    7. '   ' → logprob: -15.381792068481445
    8. '():

' → logprob: -16.381792068481445
    9. ':' → logprob: -17.631792068481445
    10. '):' → logprob: -17.756792068481445

Token 499: ' #' (ID: 1069)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8791211843490601
    2. 'return' → logprob: -1.37912118434906
    3. 'def' → logprob: -1.87912118434906
    4. '()' → logprob: -2.0041213035583496
    5. '():
' → logprob: -3.2541213035583496
    6. ' return' → logprob: -5.50412130355835
    7. '   ' → logprob: -6.00412130355835
    8. '()
' → logprob: -8.504120826721191
    9. '):
' → logprob: -10.254120826721191
    10. ':return' → logprob: -10.629120826721191

Token 500: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22102609276771545
    2. 'def' → logprob: -1.721026062965393
    3. '   ' → logprob: -4.8460259437561035
    4. ' return' → logprob: -5.2210259437561035
    5. '()' → logprob: -5.8460259437561035
    6. '#' → logprob: -5.8460259437561035
    7. '()
' → logprob: -8.096026420593262
    8. '():' → logprob: -10.846026420593262
    9. ' def' → logprob: -11.096026420593262
    10. '
' → logprob: -11.096026420593262

Token 501: ' une' (ID: 2463)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.35880061984062195
    2. '().' → logprob: -1.6088006496429443
    3. '()' → logprob: -2.9838006496429443
    4. 'a' → logprob: -3.3588006496429443
    5. '(sys' → logprob: -4.983800411224365
    6. 'line' → logprob: -5.233800411224365
    7. '=sys' → logprob: -6.233800411224365
    8. 'list' → logprob: -7.608800411224365
    9. ' sys' → logprob: -8.108800888061523
    10. 'def' → logprob: -8.608800888061523

Token 502: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.26464805006980896
    2. 'ligne' → logprob: -1.5146480798721313
    3. 'string' → logprob: -4.764647960662842
    4. 'chaine' → logprob: -6.139647960662842
    5. 'sys' → logprob: -7.139647960662842
    6. 'ine' → logprob: -8.1396484375
    7. ' ligne' → logprob: -8.2646484375
    8. '().' → logprob: -8.3896484375
    9. '()' → logprob: -8.8896484375
    10. 'strip' → logprob: -9.8896484375

Token 503: ' depuis' (ID: 16277)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014198764227330685
    2. '()' → logprob: -4.2641987800598145
    3. '()
' → logprob: -11.514198303222656
    4. '.strip' → logprob: -11.514198303222656
    5. ' =' → logprob: -12.764198303222656
    6. '=' → logprob: -13.139198303222656
    7. 'def' → logprob: -13.264198303222656
    8. '()[' → logprob: -13.639198303222656
    9. '.readline' → logprob: -13.889198303222656
    10. '()

' → logprob: -13.889198303222656

Token 504: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.3782830137643032e-05
    2. ' sys' → logprob: -11.25001335144043
    3. '(sys' → logprob: -14.50001335144043
    4. '=sys' → logprob: -16.62501335144043
    5. 'input' → logprob: -16.87501335144043
    6. 'str' → logprob: -16.87501335144043
    7. '	sys' → logprob: -20.12501335144043
    8. '.sys' → logprob: -20.87501335144043
    9. 'lambda' → logprob: -21.12501335144043
    10. 's' → logprob: -21.62501335144043

Token 505: ''entrée' (ID: 115820)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.08466500043869019
    2. '=sys' → logprob: -2.709665060043335
    3. '(sys' → logprob: -4.334664821624756
    4. 'stdin' → logprob: -7.834664821624756
    5. 'input' → logprob: -7.959664821624756
    6. ' sys' → logprob: -8.334665298461914
    7. 'import' → logprob: -8.709665298461914
    8. 'e' → logprob: -9.084665298461914
    9. '	sys' → logprob: -9.584665298461914
    10. 'ent' → logprob: -9.709665298461914

Token 506: ' standard' (ID: 7024)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.17986752092838287
    2. '().' → logprob: -2.1798675060272217
    3. 'standard' → logprob: -3.9298675060272217
    4. '()' → logprob: -4.179867744445801
    5. 'def' → logprob: -5.054867744445801
    6. '=sys' → logprob: -6.054867744445801
    7. 'std' → logprob: -6.304867744445801
    8. '()
' → logprob: -6.429867744445801
    9. ' sys' → logprob: -6.429867744445801
    10. 'stdin' → logprob: -6.929867744445801

Token 507: ' (' (ID: 350)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07885420322418213
    2. 'def' → logprob: -2.8288540840148926
    3. '()' → logprob: -4.203854084014893
    4. 'return' → logprob: -7.828854084014893
    5. '():
' → logprob: -7.828854084014893
    6. '():' → logprob: -7.953854084014893
    7. '()
' → logprob: -7.953854084014893
    8. '   ' → logprob: -8.45385456085205
    9. '.strip' → logprob: -10.70385456085205
    10. ')' → logprob: -11.57885456085205

Token 508: 'au' (ID: 753)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.41150161623954773
    2. 'sys' → logprob: -1.1615016460418701
    3. ').' → logprob: -4.786501407623291
    4. ')' → logprob: -4.911501407623291
    5. '=sys' → logprob: -5.411501407623291
    6. ' sys' → logprob: -6.786501407623291
    7. '.strip' → logprob: -6.911501407623291
    8. 'return' → logprob: -7.161501407623291
    9. '   ' → logprob: -7.786501407623291
    10. '.sys' → logprob: -8.53650188446045

Token 509: ' format' (ID: 6011)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.04863744229078293
    2. 'strip' → logprob: -3.1736373901367188
    3. 'pass' → logprob: -6.048637390136719
    4. '.rstrip' → logprob: -7.298637390136719
    5. 'r' → logprob: -7.798637390136719
    6. 'stdin' → logprob: -8.173637390136719
    7. 'str' → logprob: -8.423637390136719
    8. 'newline' → logprob: -8.423637390136719
    9. 'complete' → logprob: -8.798637390136719
    10. 'format' → logprob: -8.923637390136719

Token 510: ' b' (ID: 287)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.04765874892473221
    2. 'string' → logprob: -3.172658681869507
    3. 'strip' → logprob: -6.047658920288086
    4. '().' → logprob: -7.047658920288086
    5. 'chaine' → logprob: -7.547658920288086
    6. '()' → logprob: -7.797658920288086
    7. 'texte' → logprob: -8.922658920288086
    8. '=str' → logprob: -8.922658920288086
    9. ')' → logprob: -9.297658920288086
    10. 's' → logprob: -10.797658920288086

Token 511: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.47022467851638794
    2. 'r' → logprob: -2.095224618911743
    3. 'ase' → logprob: -2.220224618911743
    4. 'y' → logprob: -2.345224618911743
    5. 'str' → logprob: -3.970224618911743
    6. 'as' → logprob: -5.095224857330322
    7. 'race' → logprob: -5.470224857330322
    8. 'l' → logprob: -5.845224857330322
    9. 'are' → logprob: -6.220224857330322
    10. 'asic' → logprob: -6.345224857330322

Token 512: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26805222034454346
    2. '().' → logprob: -2.143052101135254
    3. ').' → logprob: -2.393052101135254
    4. '),' → logprob: -4.518052101135254
    5. ')
' → logprob: -5.018052101135254
    6. 'def' → logprob: -5.143052101135254
    7. '())' → logprob: -6.643052101135254
    8. '()' → logprob: -7.018052101135254
    9. '()).' → logprob: -8.643052101135254
    10. 'string' → logprob: -9.268052101135254

Token 513: ' sup' (ID: 1982)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0614761114120483
    2. 'decode' → logprob: -1.0614761114120483
    3. '.decode' → logprob: -1.3114761114120483
    4. '   ' → logprob: -3.436476230621338
    5. '.strip' → logprob: -6.436476230621338
    6. 'rstrip' → logprob: -6.561476230621338
    7. '.rstrip' → logprob: -6.936476230621338
    8. 'strip' → logprob: -7.311476230621338
    9. ' decode' → logprob: -7.686476230621338
    10. 'return' → logprob: -8.43647575378418

Token 514: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.07647424936294556
    2. 'prim' → logprob: -2.826474189758301
    3. 'pr' → logprob: -4.701474189758301
    4. 'prima' → logprob: -6.451474189758301
    5. 'port' → logprob: -7.076474189758301
    6. 'er' → logprob: -7.326474189758301
    7. '=' → logprob: -7.826474189758301
    8. 'érieur' → logprob: -7.826474189758301
    9. '```' → logprob: -8.3264741897583
    10. 'primer' → logprob: -8.3264741897583

Token 515: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8841182589530945
    2. '().' → logprob: -0.8841182589530945
    3. 'le' → logprob: -2.3841183185577393
    4. ' le' → logprob: -3.8841183185577393
    5. 'l' → logprob: -4.13411808013916
    6. ' l' → logprob: -4.88411808013916
    7. 'the' → logprob: -5.13411808013916
    8. ' les' → logprob: -5.13411808013916
    9. '\' → logprob: -5.25911808013916
    10. ' la' → logprob: -5.50911808013916

Token 516: ' espaces' (ID: 98361)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.590927004814148
    2. ' espaces' → logprob: -1.340927004814148
    3. ' trailing' → logprob: -2.0909271240234375
    4. ' \' → logprob: -3.9659271240234375
    5. '\' → logprob: -4.4659271240234375
    6. 'esp' → logprob: -5.5909271240234375
    7. 'spaces' → logprob: -5.5909271240234375
    8. 'l' → logprob: -5.7159271240234375
    9. '\s' → logprob: -5.9659271240234375
    10. '('\' → logprob: -6.2159271240234375

Token 517: ' en' (ID: 469)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.029031304642558098
    2. '()' → logprob: -4.029031276702881
    3. 'rstrip' → logprob: -5.154031276702881
    4. '.rstrip' → logprob: -6.654031276702881
    5. '.strip' → logprob: -7.029031276702881
    6. 'def' → logprob: -7.154031276702881
    7. 'strip' → logprob: -7.779031276702881
    8. 'et' → logprob: -7.779031276702881
    9. '   ' → logprob: -8.029031753540039
    10. '()
' → logprob: -8.154031753540039

Token 518: ' fin' (ID: 2131)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.28565308451652527
    2. 'strip' → logprob: -1.6606531143188477
    3. 'r' → logprob: -3.4106531143188477
    4. 'fin' → logprob: -3.7856531143188477
    5. 'ch' → logprob: -7.785653114318848
    6. 'dé' → logprob: -8.410653114318848
    7. 't' → logprob: -8.410653114318848
    8. 'decode' → logprob: -8.410653114318848
    9. 'tail' → logprob: -8.410653114318848
    10. 'b' → logprob: -8.535653114318848

Token 519: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.112317681312561
    2. 'rstrip' → logprob: -1.362317681312561
    3. 'line' → logprob: -1.737317681312561
    4. 'ligne' → logprob: -2.4873175621032715
    5. '.rstrip' → logprob: -3.3623175621032715
    6. '=' → logprob: -3.9873175621032715
    7. 'et' → logprob: -4.3623175621032715
    8. 'strip' → logprob: -4.4873175621032715
    9. '.strip' → logprob: -4.7373175621032715
    10. '=line' → logprob: -4.7373175621032715

Token 520: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0015623578801751137
    2. 'line' → logprob: -7.001562595367432
    3. 'chaine' → logprob: -8.001562118530273
    4. ' ligne' → logprob: -8.626562118530273
    5. 'l' → logprob: -9.126562118530273
    6. 'string' → logprob: -11.126562118530273
    7. 'texte' → logprob: -13.001562118530273
    8. 'cha' → logprob: -13.126562118530273
    9. 'la' → logprob: -13.251562118530273
    10. 'lia' → logprob: -13.376562118530273

Token 521: ',
' (ID: 412)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04272577911615372
    2. '   ' → logprob: -4.042725563049316
    3. 'def' → logprob: -4.667725563049316
    4. '()' → logprob: -4.667725563049316
    5. ' =' → logprob: -6.292725563049316
    6. ').' → logprob: -7.042725563049316
    7. ')' → logprob: -7.167725563049316
    8. '=' → logprob: -7.292725563049316
    9. '():' → logprob: -7.417725563049316
    10. 'return' → logprob: -8.292725563049316

Token 522: '   ' (ID: 271)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.3228980004787445
    2. 'strip' → logprob: -2.4478979110717773
    3. 'et' → logprob: -2.9478979110717773
    4. ' et' → logprob: -3.5728979110717773
    5. '   ' → logprob: -3.5728979110717773
    6. '.rstrip' → logprob: -3.9478979110717773
    7. ' puis' → logprob: -4.197897911071777
    8. 'decode' → logprob: -4.447897911071777
    9. ' return' → logprob: -4.947897911071777
    10. ' strip' → logprob: -4.947897911071777

Token 523: ' #' (ID: 1069)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -1.0760300159454346
    2. 'et' → logprob: -1.5760300159454346
    3. 'return' → logprob: -1.8260300159454346
    4. 'strip' → logprob: -2.7010300159454346
    5. ' return' → logprob: -2.9510300159454346
    6. '   ' → logprob: -3.0760300159454346
    7. ' puis' → logprob: -3.7010300159454346
    8. 'def' → logprob: -3.8260300159454346
    9. 'ret' → logprob: -3.8260300159454346
    10. ' et' → logprob: -3.8260300159454346

Token 524: ' dé' (ID: 2393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3697681427001953
    2. 'return' → logprob: -1.9947681427001953
    3. ' return' → logprob: -2.2447681427001953
    4. 'et' → logprob: -3.2447681427001953
    5. ' retourne' → logprob: -4.494768142700195
    6. ' et' → logprob: -4.869768142700195
    7. ' puis' → logprob: -5.619768142700195
    8. 'ret' → logprob: -6.494768142700195
    9. 'def' → logprob: -6.994768142700195
    10. 'rstrip' → logprob: -7.744768142700195

Token 525: 'code' (ID: 3056)
  Prédit: 'code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.034878045320510864
    2. 'f' → logprob: -3.4098780155181885
    3. 'c' → logprob: -7.159878253936768
    4. 'ecode' → logprob: -8.65987777709961
    5. 'cod' → logprob: -9.40987777709961
    6. 'codes' → logprob: -9.90987777709961
    7. 'decode' → logprob: -10.53487777709961
    8. 'fin' → logprob: -11.03487777709961
    9. '```' → logprob: -11.28487777709961
    10. 'éf' → logprob: -11.65987777709961

Token 526: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10728978365659714
    2. '('' → logprob: -2.4822897911071777
    3. '(sys' → logprob: -4.857289791107178
    4. '().' → logprob: -5.482289791107178
    5. '()
' → logprob: -6.482289791107178
    6. '("' → logprob: -6.482289791107178
    7. 'sys' → logprob: -6.732289791107178
    8. '(' → logprob: -6.982289791107178
    9. '=sys' → logprob: -8.10728931427002
    10. 'ing' → logprob: -8.98228931427002

Token 527: ' UTF' (ID: 52888)
  Prédit: 'utf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.008906450122594833
    2. ' utf' → logprob: -5.008906364440918
    3. ' UTF' → logprob: -6.508906364440918
    4. 'UTF' → logprob: -7.383906364440918
    5. ''' → logprob: -10.133906364440918
    6. 'ascii' → logprob: -10.508906364440918
    7. 'latin' → logprob: -12.758906364440918
    8. '_utf' → logprob: -13.133906364440918
    9. 'unicode' → logprob: -13.383906364440918
    10. 'string' → logprob: -14.008906364440918

Token 528: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029784509912133217
    2. '8' → logprob: -3.5297844409942627
    3. '()-' → logprob: -11.154784202575684
    4. '   ' → logprob: -11.529784202575684
    5. '```' → logprob: -12.779784202575684
    6. '('' → logprob: -13.029784202575684
    7. '()' → logprob: -13.154784202575684
    8. ''-' → logprob: -14.529784202575684
    9. '‑' → logprob: -14.654784202575684
    10. '('-' → logprob: -15.029784202575684

Token 529: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. '-' → logprob: -17.5
    3. '```' → logprob: -19.0
    4. '８' → logprob: -19.5
    5. '۸' → logprob: -20.125
    6. 'decode' → logprob: -21.375
    7. '82' → logprob: -21.625
    8. 'encoding' → logprob: -21.875
    9. '"""' → logprob: -21.875
    10. '
' → logprob: -22.0

Token 530: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07187345623970032
    2. '()' → logprob: -3.321873426437378
    3. '   ' → logprob: -4.196873664855957
    4. '():' → logprob: -4.696873664855957
    5. 'return' → logprob: -6.196873664855957
    6. ').' → logprob: -6.446873664855957
    7. 'def' → logprob: -6.571873664855957
    8. ')' → logprob: -6.696873664855957
    9. '(),' → logprob: -7.571873664855957
    10. '()).' → logprob: -7.821873664855957

Token 531: ' et' (ID: 859)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4604026973247528
    2. 'rstrip' → logprob: -1.4604027271270752
    3. ' puis' → logprob: -2.585402727127075
    4. ' strip' → logprob: -3.335402727127075
    5. 'et' → logprob: -4.460402488708496
    6. ' retourne' → logprob: -5.835402488708496
    7. ' et' → logprob: -6.210402488708496
    8. ' return' → logprob: -6.335402488708496
    9. 'return' → logprob: -6.460402488708496
    10. 'p' → logprob: -6.585402488708496

Token 532: ' coupe' (ID: 71780)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6914281845092773
    2. 'ret' → logprob: -1.3164281845092773
    3. 'strip' → logprob: -2.5664281845092773
    4. ' return' → logprob: -2.5664281845092773
    5. ' retourne' → logprob: -2.6914281845092773
    6. 'rstrip' → logprob: -5.691428184509277
    7. ' strip' → logprob: -6.191428184509277
    8. 'ren' → logprob: -6.691428184509277
    9. 'decode' → logprob: -7.441428184509277
    10. ' ret' → logprob: -7.691428184509277

Token 533: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12228591740131378
    2. ' la' → logprob: -3.372285842895508
    3. '().' → logprob: -4.122285842895508
    4. ' les' → logprob: -4.247285842895508
    5. '('\' → logprob: -4.372285842895508
    6. '()
' → logprob: -4.997285842895508
    7. 'def' → logprob: -4.997285842895508
    8. '()[' → logprob: -5.122285842895508
    9. '(' → logprob: -5.497285842895508
    10. 'rstrip' → logprob: -5.872285842895508

Token 534: ' chaîne' (ID: 89288)
  Prédit: 'newline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'newline' → logprob: -1.451065182685852
    2. 'ligne' → logprob: -1.951065182685852
    3. 'rstrip' → logprob: -2.0760650634765625
    4. ' trailing' → logprob: -2.3260650634765625
    5. '\n' → logprob: -2.4510650634765625
    6. '('\' → logprob: -2.7010650634765625
    7. ' newline' → logprob: -2.8260650634765625
    8. 'line' → logprob: -2.8260650634765625
    9. 'chaine' → logprob: -3.5760650634765625
    10. ' ligne' → logprob: -3.7010650634765625

Token 535: ' en' (ID: 469)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0445571094751358
    2. '()' → logprob: -3.4195570945739746
    3. 'def' → logprob: -5.669557094573975
    4. '.rstrip' → logprob: -6.044557094573975
    5. 'rstrip' → logprob: -6.169557094573975
    6. '[:-' → logprob: -6.794557094573975
    7. '()
' → logprob: -7.544557094573975
    8. ' =' → logprob: -8.044557571411133
    9. '   ' → logprob: -8.544557571411133
    10. '=' → logprob: -8.669557571411133

Token 536: ' une' (ID: 2463)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.16518795490264893
    2. ' tokens' → logprob: -2.0401878356933594
    3. 'liste' → logprob: -5.290187835693359
    4. 'list' → logprob: -5.415187835693359
    5. ' mots' → logprob: -5.665187835693359
    6. ' liste' → logprob: -6.290187835693359
    7. 'words' → logprob: -6.415187835693359
    8. '[]' → logprob: -6.540187835693359
    9. ' list' → logprob: -7.165187835693359
    10. 'lines' → logprob: -7.415187835693359

Token 537: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.0588272400200367
    2. ' liste' → logprob: -3.1838271617889404
    3. 'list' → logprob: -4.1838274002075195
    4. ' list' → logprob: -9.05882740020752
    5. 'str' → logprob: -9.43382740020752
    6. 'Liste' → logprob: -9.55882740020752
    7. 'chaine' → logprob: -9.93382740020752
    8. 's' → logprob: -10.43382740020752
    9. 'tokens' → logprob: -10.68382740020752
    10. 'lista' → logprob: -10.93382740020752

Token 538: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47826918959617615
    2. '().' → logprob: -0.9782692193984985
    3. 'def' → logprob: -6.228269100189209
    4. '()
' → logprob: -6.603269100189209
    5. '()[' → logprob: -7.478269100189209
    6. '('' → logprob: -9.603269577026367
    7. '(' → logprob: -10.478269577026367
    8. '   ' → logprob: -10.603269577026367
    9. '()\' → logprob: -10.728269577026367
    10. ' =' → logprob: -10.728269577026367

Token 539: ' mots' (ID: 38338)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.5240573883056641
    2. 'm' → logprob: -1.274057388305664
    3. 'str' → logprob: -2.649057388305664
    4. ' chaînes' → logprob: -3.774057388305664
    5. 'mot' → logprob: -4.649057388305664
    6. 'chain' → logprob: -4.899057388305664
    7. 'string' → logprob: -5.024057388305664
    8. 'cha' → logprob: -5.524057388305664
    9. 'chaine' → logprob: -6.399057388305664
    10. 'tokens' → logprob: -6.524057388305664

Token 540: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23473212122917175
    2. 'def' → logprob: -2.234732151031494
    3. '()
' → logprob: -3.609732151031494
    4. '()' → logprob: -3.609732151031494
    5. '():' → logprob: -3.609732151031494
    6. '():
' → logprob: -4.234732151031494
    7. 'return' → logprob: -6.359732151031494
    8. '().' → logprob: -6.359732151031494
    9. '
' → logprob: -7.609732151031494
    10. '):
' → logprob: -8.109731674194336

Token 541: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6304922699928284
    2. '   ' → logprob: -1.1304922103881836
    3. 'def' → logprob: -2.6304922103881836
    4. '():
' → logprob: -3.0054922103881836
    5. '()' → logprob: -3.8804922103881836
    6. ':' → logprob: -7.130492210388184
    7. '()
' → logprob: -7.880492210388184
    8. '):' → logprob: -8.005492210388184
    9. '):
' → logprob: -8.255492210388184
    10. 'return' → logprob: -8.505492210388184

Token 542: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03523383289575577
    2. '   ' → logprob: -3.660233736038208
    3. ' return' → logprob: -5.160233974456787
    4. 'def' → logprob: -5.785233974456787
    5. '
' → logprob: -10.660233497619629
    6. 's' → logprob: -10.660233497619629
    7. 'data' → logprob: -11.285233497619629
    8. 'line' → logprob: -11.910233497619629
    9. '	return' → logprob: -11.910233497619629
    10. '```' → logprob: -13.285233497619629

Token 543: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00010616567305987701
    2. 'list' → logprob: -9.500105857849121
    3. ' sys' → logprob: -10.500105857849121
    4. '(sys' → logprob: -12.625105857849121
    5. '[' → logprob: -14.875105857849121
    6. '=sys' → logprob: -18.000106811523438
    7. '.sys' → logprob: -18.375106811523438
    8. '	sys' → logprob: -18.750106811523438
    9. ' list' → logprob: -19.750106811523438
    10. 'input' → logprob: -20.375106811523438

Token 544: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.2352385965641588e-05
    2. '.stdout' → logprob: -11.375012397766113
    3. '.' → logprob: -14.375012397766113
    4. 'stdin' → logprob: -15.375012397766113
    5. '.argv' → logprob: -17.125011444091797
    6. '.std' → logprob: -18.125011444091797
    7. '._' → logprob: -18.500011444091797
    8. '.readline' → logprob: -18.875011444091797
    9. '(stdin' → logprob: -19.125011444091797
    10. '.version' → logprob: -20.125011444091797

Token 545: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.39144259691238403
    2. '.readline' → logprob: -1.1414425373077393
    3. 'buffer' → logprob: -5.391442775726318
    4. '.read' → logprob: -12.39144229888916
    5. '_buffer' → logprob: -14.51644229888916
    6. '.stdin' → logprob: -15.01644229888916
    7. ' buffer' → logprob: -15.76644229888916
    8. 'BUFFER' → logprob: -15.89144229888916
    9. '-buffer' → logprob: -16.016443252563477
    10. 'read' → logprob: -16.016443252563477

Token 546: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.1080467781284824e-05
    2. '.read' → logprob: -10.125041007995605
    3. '.readlines' → logprob: -14.750041007995605
    4. '.rstrip' → logprob: -14.875041007995605
    5. ' readline' → logprob: -15.750041007995605
    6. '.' → logprob: -16.250041961669922
    7. '.decode' → logprob: -16.750041961669922
    8. '.raw' → logprob: -18.250041961669922
    9. 'read' → logprob: -19.000041961669922
    10. '.recv' → logprob: -19.125041961669922

Token 547: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9146995327901095e-05
    2. '()' → logprob: -10.875019073486328
    3. ' ().' → logprob: -16.000019073486328
    4. '()
' → logprob: -18.875019073486328
    5. '(' → logprob: -18.875019073486328
    6. '.rstrip' → logprob: -19.250019073486328
    7. '()).' → logprob: -19.375019073486328
    8. 'rstrip' → logprob: -21.000019073486328
    9. '.strip' → logprob: -21.125019073486328
    10. '("").' → logprob: -21.250019073486328

Token 548: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.06588543206453323
    2. 'decode' → logprob: -3.065885543823242
    3. 'strip' → logprob: -4.065885543823242
    4. 'split' → logprob: -14.065885543823242
    5. '.rstrip' → logprob: -14.190885543823242
    6. 'read' → logprob: -17.940885543823242
    7. ' strip' → logprob: -17.940885543823242
    8. ' decode' → logprob: -18.815885543823242
    9. '.decode' → logprob: -18.940885543823242
    10. '[:-' → logprob: -18.940885543823242

Token 549: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02519054338335991
    2. 'b' → logprob: -3.900190591812134
    3. '()' → logprob: -5.900190353393555
    4. '(b' → logprob: -6.275190353393555
    5. ' b' → logprob: -12.150190353393555
    6. '(' → logprob: -13.275190353393555
    7. '()
' → logprob: -13.275190353393555
    8. '()\' → logprob: -13.275190353393555
    9. 'split' → logprob: -13.650190353393555
    10. '()).' → logprob: -14.150190353393555

Token 550: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.048591118305921555
    2. 'split' → logprob: -3.048591136932373
    3. 'rstrip' → logprob: -12.673590660095215
    4. '.decode' → logprob: -15.298590660095215
    5. ' decode' → logprob: -15.548590660095215
    6. 'dec' → logprob: -16.29859161376953
    7. 'decoded' → logprob: -16.79859161376953
    8. 'strip' → logprob: -16.92359161376953
    9. 'spl' → logprob: -18.54859161376953
    10. ' split' → logprob: -19.04859161376953

Token 551: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2879157066345215
    2. '('' → logprob: -1.5379157066345215
    3. '("' → logprob: -3.4129157066345215
    4. '().' → logprob: -6.4129157066345215
    5. '(' → logprob: -7.4129157066345215
    6. '()[' → logprob: -9.66291618347168
    7. '();' → logprob: -10.66291618347168
    8. '()
' → logprob: -11.53791618347168
    9. ''' → logprob: -11.78791618347168
    10. '"' → logprob: -11.91291618347168

Token 552: 'utf' (ID: 13353)
  Prédit: 'utf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -3.650518920039758e-06
    2. 'UTF' → logprob: -12.750003814697266
    3. 'ascii' → logprob: -14.375003814697266
    4. ' utf' → logprob: -16.625003814697266
    5. '_utf' → logprob: -17.750003814697266
    6. 'uft' → logprob: -17.875003814697266
    7. 'ut' → logprob: -19.500003814697266
    8. 'Utf' → logprob: -19.625003814697266
    9. ' UTF' → logprob: -20.250003814697266
    10. '=utf' → logprob: -21.000003814697266

Token 553: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011703446507453918
    2. '8' → logprob: -6.7511701583862305
    3. '‑' → logprob: -17.001171112060547
    4. ''-' → logprob: -17.376171112060547
    5. '')' → logprob: -18.251171112060547
    6. '­' → logprob: -18.876171112060547
    7. '–' → logprob: -19.001171112060547
    8. '```' → logprob: -19.001171112060547
    9. 'utf' → logprob: -19.376171112060547
    10. '_' → logprob: -19.751171112060547

Token 554: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.6240566083070007e-06
    2. 'utf' → logprob: -13.375001907348633
    3. '-' → logprob: -19.875001907348633
    4. 'UTF' → logprob: -21.500001907348633
    5. '')' → logprob: -22.625001907348633
    6. '８' → logprob: -22.750001907348633
    7. '۸' → logprob: -23.375001907348633
    8. '08' → logprob: -23.500001907348633
    9. '```' → logprob: -23.875001907348633
    10. ' utf' → logprob: -24.000001907348633

Token 555: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.40600261092185974
    2. '').' → logprob: -1.1560026407241821
    3. '()).' → logprob: -4.031002521514893
    4. '").' → logprob: -7.781002521514893
    5. ')' → logprob: -8.03100299835205
    6. '()' → logprob: -8.15600299835205
    7. '().' → logprob: -9.40600299835205
    8. ' ).' → logprob: -9.78100299835205
    9. '`).' → logprob: -11.78100299835205
    10. '')' → logprob: -12.40600299835205

Token 556: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020520923135336488
    2. 'strip' → logprob: -8.500205039978027
    3. 'spl' → logprob: -13.750205039978027
    4. 'rstrip' → logprob: -14.500205039978027
    5. ' split' → logprob: -15.625205039978027
    6. 'decode' → logprob: -18.375205993652344
    7. '(split' → logprob: -18.625205993652344
    8. '.split' → logprob: -19.125205993652344
    9. '_split' → logprob: -20.625205993652344
    10. ' strip' → logprob: -23.000205993652344

Token 557: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.1557283111615106e-05
    2. '(' → logprob: -10.250041961669922
    3. '('' → logprob: -12.750041961669922
    4. ' ()' → logprob: -13.875041961669922
    5. '()]' → logprob: -13.875041961669922
    6. '()
' → logprob: -14.500041961669922
    7. '())' → logprob: -15.000041961669922
    8. '（）' → logprob: -16.125041961669922
    9. '()[' → logprob: -16.250041961669922
    10. '()"' → logprob: -16.500041961669922

Token 558: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2246291337069124e-05
    2. '<|end|>' → logprob: -11.375021934509277
    3. '#' → logprob: -12.125021934509277
    4. '```' → logprob: -13.000021934509277
    5. '\' → logprob: -13.375021934509277
    6. ' def' → logprob: -14.375021934509277
    7. '
' → logprob: -15.500021934509277
    8. ' 
' → logprob: -16.000022888183594
    9. '  
' → logprob: -16.250022888183594
    10. '    
' → logprob: -16.500022888183594

Token 559: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.16403135657310486
    2. 's' → logprob: -2.6640312671661377
    3. 'input' → logprob: -3.2890312671661377
    4. 'sys' → logprob: -4.164031505584717
    5. 'SS' → logprob: -4.914031505584717
    6. '()' → logprob: -4.914031505584717
    7. 'LS' → logprob: -5.914031505584717
    8. 'string' → logprob: -6.414031505584717
    9. 'L' → logprob: -6.414031505584717
    10. 'str' → logprob: -6.914031505584717

Token 560: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0031929241959005594
    2. '():
' → logprob: -5.753192901611328
    3. ' ():' → logprob: -11.753192901611328
    4. '()' → logprob: -11.878192901611328
    5. '():
' → logprob: -15.628192901611328
    6. '():

' → logprob: -16.003192901611328
    7. 'def' → logprob: -16.503192901611328
    8. '()>' → logprob: -17.628192901611328
    9. '(' → logprob: -18.003192901611328
    10. '();' → logprob: -18.253192901611328

Token 561: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005959964822977781
    2. '()' → logprob: -5.505959987640381
    3. '   ' → logprob: -6.880959987640381
    4. '():
' → logprob: -7.255959987640381
    5. '):' → logprob: -10.005959510803223
    6. ':' → logprob: -10.130959510803223
    7. 'return' → logprob: -10.130959510803223
    8. 'def' → logprob: -12.255959510803223
    9. ':return' → logprob: -12.505959510803223
    10. ' ():' → logprob: -12.630959510803223

Token 562: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006744150537997484
    2. 'sys' → logprob: -5.006744384765625
    3. ' return' → logprob: -10.631744384765625
    4. '#' (adapté à ' #') → logprob: -13.006744384765625
    5. '   ' → logprob: -13.131744384765625
    6. '
' → logprob: -15.631744384765625
    7. ' sys' → logprob: -16.506744384765625
    8. '```' → logprob: -16.631744384765625
    9. 'import' → logprob: -17.256744384765625
    10. '	return' → logprob: -17.881744384765625

Token 563: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00021796036162413657
    2. ' return' → logprob: -9.000218391418457
    3. 'def' → logprob: -9.875218391418457
    4. 'sys' → logprob: -10.250218391418457
    5. '   ' → logprob: -11.875218391418457
    6. '
' → logprob: -15.375218391418457
    7. 'import' → logprob: -15.875218391418457
    8. '#' → logprob: -16.12521743774414
    9. '```' → logprob: -16.62521743774414
    10. '{return' → logprob: -16.75021743774414

Token 564: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05942377820611
    2. 'a' → logprob: -3.9344236850738525
    3. 'sys' → logprob: -3.9344236850738525
    4. '().' → logprob: -4.434423923492432
    5. 'line' → logprob: -5.809423923492432
    6. '=sys' → logprob: -6.934423923492432
    7. ' a' → logprob: -7.434423923492432
    8. '()
' → logprob: -7.684423923492432
    9. '.readline' → logprob: -7.809423923492432
    10. ' sys' → logprob: -8.684423446655273

Token 565: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.014021758921444416
    2. ' ligne' → logprob: -4.514021873474121
    3. 'line' → logprob: -5.889021873474121
    4. '()' → logprob: -9.139021873474121
    5. 'sys' → logprob: -10.139021873474121
    6. 'l' → logprob: -10.389021873474121
    7. 'chaine' → logprob: -12.014021873474121
    8. ' line' → logprob: -12.139021873474121
    9. ')' → logprob: -13.139021873474121
    10. '()
' → logprob: -13.889021873474121

Token 566: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007010056171566248
    2. '().' → logprob: -5.132009983062744
    3. '()
' → logprob: -7.882009983062744
    4. '=sys' → logprob: -8.507010459899902
    5. 'from' → logprob: -9.257010459899902
    6. ' =' → logprob: -9.382010459899902
    7. '   ' → logprob: -9.757010459899902
    8. '=' → logprob: -9.882010459899902
    9. '()\' → logprob: -10.632010459899902
    10. 'sys' → logprob: -10.882010459899902

Token 567: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -9.901345038088039e-05
    2. ' sys' → logprob: -9.500099182128906
    3. 'l' → logprob: -10.875099182128906
    4. '(sys' → logprob: -12.625099182128906
    5. 'la' → logprob: -14.125099182128906
    6. '=sys' → logprob: -14.500099182128906
    7. 'stdin' → logprob: -14.875099182128906
    8. 'input' → logprob: -16.375099182128906
    9. '	sys' → logprob: -16.750099182128906
    10. '_sys' → logprob: -18.375099182128906

Token 568: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.003257450181990862
    2. 'entrée' → logprob: -6.1282572746276855
    3. 'sys' → logprob: -8.128257751464844
    4. '=sys' → logprob: -9.128257751464844
    5. '’entrée' → logprob: -9.378257751464844
    6. 'e' → logprob: -9.378257751464844
    7. ''import' → logprob: -9.628257751464844
    8. '(sys' → logprob: -9.628257751464844
    9. 'a' → logprob: -9.753257751464844
    10. 'stdin' → logprob: -10.003257751464844

Token 569: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007148076314479113
    2. 'standard' → logprob: -5.382148265838623
    3. '().' → logprob: -6.257148265838623
    4. '()
' → logprob: -8.007147789001465
    5. 'sys' → logprob: -9.382147789001465
    6. ' standard' → logprob: -9.757147789001465
    7. 'def' → logprob: -10.257147789001465
    8. '())' → logprob: -11.132147789001465
    9. '   ' → logprob: -11.257147789001465
    10. '(sys' → logprob: -11.632147789001465

Token 570: ' (' (ID: 350)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.20425483584403992
    2. '()' → logprob: -1.7042548656463623
    3. '   ' → logprob: -6.329254627227783
    4. '():' → logprob: -7.829254627227783
    5. 'return' → logprob: -8.829255104064941
    6. '.rstrip' → logprob: -8.829255104064941
    7. 'def' → logprob: -9.454255104064941
    8. '.readline' → logprob: -9.579255104064941
    9. 'rstrip' → logprob: -9.829255104064941
    10. 'sys' → logprob: -10.204255104064941

Token 571: 'en' (ID: 262)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10824299603700638
    2. ')' → logprob: -3.108242988586426
    3. '().' → logprob: -3.108242988586426
    4. '   ' → logprob: -5.608242988586426
    5. 'rstrip' → logprob: -5.608242988586426
    6. ').' → logprob: -6.108242988586426
    7. '=sys' → logprob: -6.358242988586426
    8. '.rstrip' → logprob: -7.483242988586426
    9. '.sys' → logprob: -7.983242988586426
    10. 'return' → logprob: -8.108242988586426

Token 572: ' b' (ID: 287)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.860962986946106
    2. 'texte' → logprob: -1.360962986946106
    3. 'utf' → logprob: -1.860962986946106
    4. 'string' → logprob: -2.4859628677368164
    5. 'chaine' → logprob: -3.2359628677368164
    6. 'mode' → logprob: -3.9859628677368164
    7. 'cha' → logprob: -4.360962867736816
    8. 'text' → logprob: -6.110962867736816
    9. 'UTF' → logprob: -6.110962867736816
    10. 'b' → logprob: -6.735962867736816

Token 573: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.004112000111490488
    2. 'inary' → logprob: -5.6291117668151855
    3. 'uffer' → logprob: -9.004112243652344
    4. 'texte' → logprob: -9.629112243652344
    5. 'in' → logprob: -9.754112243652344
    6. '""' → logprob: -10.004112243652344
    7. 'str' → logprob: -10.254112243652344
    8. 'r' → logprob: -10.379112243652344
    9. '''' → logprob: -10.504112243652344
    10. 'y' → logprob: -10.754112243652344

Token 574: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023968281224370003
    2. '):' → logprob: -4.02396821975708
    3. ').' → logprob: -5.52396821975708
    4. '()' → logprob: -7.02396821975708
    5. '())' → logprob: -7.77396821975708
    6. '   ' → logprob: -8.023968696594238
    7. '):
' → logprob: -9.398968696594238
    8. '),' → logprob: -10.773968696594238
    9. ' )' → logprob: -11.148968696594238
    10. '()).' → logprob: -11.273968696594238

Token 575: ' sup' (ID: 1982)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18534286320209503
    2. ' return' → logprob: -2.310342788696289
    3. 'def' → logprob: -2.810342788696289
    4. 'rstrip' → logprob: -5.310342788696289
    5. '   ' → logprob: -5.435342788696289
    6. ' def' → logprob: -8.185342788696289
    7. '.rstrip' → logprob: -8.810342788696289
    8. '```' → logprob: -10.560342788696289
    9. '
' → logprob: -12.560342788696289
    10. ':return' → logprob: -13.060342788696289

Token 576: 'prime' (ID: 46441)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.14908619225025177
    2. 'lit' → logprob: -3.3990862369537354
    3. '().' → logprob: -4.149085998535156
    4. 't' → logprob: -4.524085998535156
    5. '.readline' → logprob: -4.524085998535156
    6. 'l' → logprob: -4.774085998535156
    7. 'rstrip' → logprob: -5.024085998535156
    8. '()' → logprob: -5.149085998535156
    9. 'lin' → logprob: -5.399085998535156
    10. 'def' → logprob: -5.399085998535156

Token 577: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003127806121483445
    2. '()\' → logprob: -7.128127574920654
    3. '().' → logprob: -7.128127574920654
    4. '()
' → logprob: -7.753127574920654
    5. '<|end|>' → logprob: -7.753127574920654
    6. '('\' → logprob: -8.378128051757812
    7. 'rstrip' → logprob: -9.128128051757812
    8. '(' → logprob: -9.628128051757812
    9. 'the' → logprob: -9.628128051757812
    10. '```' → logprob: -10.753128051757812

Token 578: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.022609461098909378
    2. ' espaces' → logprob: -4.147609233856201
    3. 'spaces' → logprob: -5.397609233856201
    4. '\n' → logprob: -6.647609233856201
    5. 'es' → logprob: -7.772609233856201
    6. ''\' → logprob: -8.64760971069336
    7. '('\' → logprob: -10.27260971069336
    8. '
' → logprob: -11.02260971069336
    9. 's' → logprob: -11.27260971069336
    10. ''esp' → logprob: -11.77260971069336

Token 579: ' en' (ID: 469)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.654011607170105
    2. '()' → logprob: -0.779011607170105
    3. 'en' → logprob: -4.2790117263793945
    4. 'rstrip' → logprob: -7.0290117263793945
    5. '()\' → logprob: -7.0290117263793945
    6. '<|end|>' → logprob: -7.1540117263793945
    7. '.rstrip' → logprob: -7.2790117263793945
    8. ' en' → logprob: -7.4040117263793945
    9. '()
' → logprob: -7.4040117263793945
    10. '.' → logprob: -7.5290117263793945

Token 580: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0016968417912721634
    2. ' fin' → logprob: -6.876697063446045
    3. 'rstrip' → logprob: -8.001696586608887
    4. '\n' → logprob: -9.126696586608887
    5. '```' → logprob: -9.876696586608887
    6. 'end' → logprob: -10.126696586608887
    7. 'b' → logprob: -10.626696586608887
    8. '\' → logprob: -10.751696586608887
    9. ''\' → logprob: -11.001696586608887
    10. 'fine' → logprob: -11.251696586608887

Token 581: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4901813268661499
    2. '()\' → logprob: -1.99018132686615
    3. 'de' → logprob: -2.1151814460754395
    4. 'line' → logprob: -2.3651814460754395
    5. ' de' → logprob: -4.6151814460754395
    6. 'def' → logprob: -4.7401814460754395
    7. '('\' → logprob: -5.1151814460754395
    8. '()
' → logprob: -6.3651814460754395
    9. '   ' → logprob: -6.3651814460754395
    10. 'ligne' → logprob: -6.6151814460754395

Token 582: ' et' (ID: 859)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2307835817337036
    2. '   ' → logprob: -2.230783462524414
    3. ' return' → logprob: -2.980783462524414
    4. 'def' → logprob: -3.230783462524414
    5. 'decode' → logprob: -4.855783462524414
    6. ' def' → logprob: -8.730783462524414
    7. '
' → logprob: -9.105783462524414
    8. 'rstrip' → logprob: -9.230783462524414
    9. ' decode' → logprob: -9.605783462524414
    10. '\' → logprob: -10.855783462524414

Token 583: ' la' (ID: 557)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.4799976348876953
    2. 'return' → logprob: -0.9799976348876953
    3. ' return' → logprob: -5.604997634887695
    4. '.decode' → logprob: -7.229997634887695
    5. ' decode' → logprob: -7.729997634887695
    6. 'rstrip' → logprob: -7.854997634887695
    7. 'd' → logprob: -8.479997634887695
    8. ' retourne' → logprob: -8.854997634887695
    9. 'def' → logprob: -8.979997634887695
    10. 'ret' → logprob: -9.604997634887695

Token 584: ' dé' (ID: 2393)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4776686429977417
    2. 'decode' → logprob: -0.9776686429977417
    3. 'rstrip' → logprob: -5.852668762207031
    4. 'ret' → logprob: -7.852668762207031
    5. 'strip' → logprob: -8.602668762207031
    6. '.decode' → logprob: -9.977668762207031
    7. ' return' → logprob: -10.602668762207031
    8. 'encode' → logprob: -10.727668762207031
    9. '   ' → logprob: -11.352668762207031
    10. 'replace' → logprob: -11.477668762207031

Token 585: 'code' (ID: 3056)
  Prédit: 'code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.0005996193503960967
    2. 'f' → logprob: -7.625599384307861
    3. 'return' → logprob: -9.37559986114502
    4. 'decode' → logprob: -12.25059986114502
    5. 'ocode' → logprob: -12.37559986114502
    6. 'c' → logprob: -12.37559986114502
    7. 'kode' → logprob: -12.87559986114502
    8. 'fine' → logprob: -12.87559986114502
    9. 'flate' → logprob: -13.12559986114502
    10. 'ecode' → logprob: -13.75059986114502

Token 586: ' en' (ID: 469)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001642334507778287
    2. '()' → logprob: -6.751642227172852
    3. '=' → logprob: -8.626642227172852
    4. '(' → logprob: -9.001642227172852
    5. 'return' → logprob: -9.376642227172852
    6. '='' → logprob: -11.126642227172852
    7. '   ' → logprob: -11.251642227172852
    8. '("' → logprob: -11.251642227172852
    9. ' =' → logprob: -11.376642227172852
    10. '().' → logprob: -11.626642227172852

Token 587: ' UTF' (ID: 52888)
  Prédit: 'utf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.009852887131273746
    2. 'UTF' → logprob: -4.759852886199951
    3. 'str' → logprob: -6.759852886199951
    4. 'unicode' → logprob: -10.75985336303711
    5. '_utf' → logprob: -11.00985336303711
    6. ' UTF' → logprob: -11.50985336303711
    7. 'string' → logprob: -11.50985336303711
    8. ' utf' → logprob: -11.75985336303711
    9. 'chaine' → logprob: -11.75985336303711
    10. 'texte' → logprob: -13.00985336303711

Token 588: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5213274309644476e-05
    2. '8' → logprob: -11.125015258789062
    3. '-_' → logprob: -15.625015258789062
    4. '‑' → logprob: -16.250015258789062
    5. '-​' → logprob: -17.000015258789062
    6. ''-' → logprob: -17.125015258789062
    7. '‐' → logprob: -17.375015258789062
    8. '_' → logprob: -17.500015258789062
    9. '-
' → logprob: -18.000015258789062
    10. '```' → logprob: -18.375015258789062

Token 589: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.5048530030981055e-06
    2. '-' → logprob: -13.500001907348633
    3. '32' → logprob: -17.375001907348633
    4. 'utf' → logprob: -17.750001907348633
    5. ' ' → logprob: -19.000001907348633
    6. '```' → logprob: -19.375001907348633
    7. '')' → logprob: -20.125001907348633
    8. '82' → logprob: -20.500001907348633
    9. '۸' → logprob: -21.375001907348633
    10. 'decode' → logprob: -21.625001907348633

Token 590: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25811967253685
    2. '():' → logprob: -1.5081197023391724
    3. '   ' → logprob: -5.383119583129883
    4. '():
' → logprob: -7.383119583129883
    5. 'return' → logprob: -7.758119583129883
    6. 'def' → logprob: -8.258119583129883
    7. '()
' → logprob: -8.883119583129883
    8. ' ()' → logprob: -9.883119583129883
    9. ')' → logprob: -10.758119583129883
    10. '().' → logprob: -11.133119583129883

Token 591: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3991888463497162
    2. '():' → logprob: -1.2741888761520386
    3. 'def' → logprob: -3.399188756942749
    4. '()' → logprob: -4.399188995361328
    5. '():
' → logprob: -6.399188995361328
    6. ':' → logprob: -6.774188995361328
    7. 'return' → logprob: -7.399188995361328
    8. ':return' → logprob: -9.399188995361328
    9. '()
' → logprob: -9.899188995361328
    10. '):' → logprob: -9.899188995361328

Token 592: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.32112357020378113
    2. '   ' → logprob: -1.3211236000061035
    3. ' return' → logprob: -5.0711236000061035
    4. 'def' → logprob: -6.5711236000061035
    5. '	return' → logprob: -9.446123123168945
    6. ':return' → logprob: -10.196123123168945
    7. ' ' → logprob: -11.571123123168945
    8. '    ' → logprob: -11.696123123168945
    9. '  ' → logprob: -12.321123123168945
    10. ':' → logprob: -12.571123123168945

Token 593: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2519293427467346
    2. ' sys' → logprob: -1.5019292831420898
    3. '(sys' → logprob: -15.87692928314209
    4. '=sys' → logprob: -16.751930236816406
    5. '	sys' → logprob: -16.876930236816406
    6. '.sys' → logprob: -18.001930236816406
    7. 's' → logprob: -18.251930236816406
    8. ' ' → logprob: -18.626930236816406
    9. ' ' → logprob: -18.626930236816406
    10. '_sys' → logprob: -18.626930236816406

Token 594: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.214019307051785e-05
    2. '.stdout' → logprob: -10.875032424926758
    3. 'stdin' → logprob: -11.500032424926758
    4. '.readline' → logprob: -13.625032424926758
    5. '.' → logprob: -14.000032424926758
    6. '.std' → logprob: -14.500032424926758
    7. '(stdin' → logprob: -15.500032424926758
    8. '._' → logprob: -16.500032424926758
    9. '.sys' → logprob: -16.625032424926758
    10. '.argv' → logprob: -16.875032424926758

Token 595: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.00032283025211654603
    2. '.readline' → logprob: -8.250323295593262
    3. 'buffer' → logprob: -10.000323295593262
    4. '.' → logprob: -11.250323295593262
    5. '.stdin' → logprob: -13.250323295593262
    6. '.stdout' → logprob: -14.500323295593262
    7. '	buffer' → logprob: -15.375323295593262
    8. '.decoder' → logprob: -15.750323295593262
    9. '(buffer' → logprob: -15.875323295593262
    10. '.buff' → logprob: -16.375322341918945

Token 596: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -9.088346359931165e-07
    2. '.read' → logprob: -15.125000953674316
    3. ' readline' → logprob: -15.125000953674316
    4. '.readlines' → logprob: -15.875000953674316
    5. 'read' → logprob: -16.5
    6. '.' → logprob: -16.625
    7. '.rstrip' → logprob: -21.375
    8. '```' → logprob: -22.125
    9. 'getline' → logprob: -22.375
    10. 'rstrip' → logprob: -22.625

Token 597: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0012326111318543553
    2. '.rstrip' → logprob: -6.751232624053955
    3. 'rstrip' → logprob: -9.751232147216797
    4. '()' → logprob: -12.876232147216797
    5. '.readline' → logprob: -13.501232147216797
    6. ' ().' → logprob: -16.626232147216797
    7. '.' → logprob: -17.376232147216797
    8. '.r' → logprob: -18.001232147216797
    9. '(' → logprob: -18.126232147216797
    10. '.strip' → logprob: -18.876232147216797

Token 598: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.0003357006062287837
    2. 'decode' → logprob: -8.000335693359375
    3. 'strip' → logprob: -15.750335693359375
    4. 'read' → logprob: -16.375335693359375
    5. '.rstrip' → logprob: -17.000335693359375
    6. 'rst' → logprob: -18.625335693359375
    7. '```' → logprob: -20.375335693359375
    8. 'rcode' → logprob: -21.500335693359375
    9. 'rd' → logprob: -21.750335693359375
    10. 'rtype' → logprob: -21.875335693359375

Token 599: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08908287435770035
    2. '()' → logprob: -2.464082956314087
    3. '()\' → logprob: -9.714082717895508
    4. '.decode' → logprob: -9.964082717895508
    5. '.' → logprob: -11.964082717895508
    6. '(' → logprob: -12.214082717895508
    7. '().'' → logprob: -12.214082717895508
    8. '(),' → logprob: -12.589082717895508
    9. '()
' → logprob: -12.714082717895508
    10. '())' → logprob: -13.089082717895508

Token 600: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: 0.0
    2. '.decode' → logprob: -17.875
    3. ' decode' → logprob: -18.0
    4. 'dec' → logprob: -24.125
    5. 'read' → logprob: -25.0
    6. 'rstrip' → logprob: -25.0
    7. '_decode' → logprob: -25.25
    8. 'encode' → logprob: -25.375
    9. 'decoded' → logprob: -25.5
    10. '```' → logprob: -25.875

Token 601: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.005390280392020941
    2. '(' → logprob: -5.255390167236328
    3. '("' → logprob: -9.255390167236328
    4. ''' → logprob: -10.255390167236328
    5. '(
' → logprob: -11.005390167236328
    6. '('_' → logprob: -13.380390167236328
    7. '()' → logprob: -13.880390167236328
    8. ''s' → logprob: -14.005390167236328
    9. '(\'' → logprob: -14.380390167236328
    10. ' ('' → logprob: -14.755390167236328

Token 602: 'utf' (ID: 13353)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10057434439659119
    2. 'utf' → logprob: -2.350574254989624
    3. ''u' → logprob: -8.475574493408203
    4. '('' → logprob: -10.350574493408203
    5. ''user' → logprob: -10.475574493408203
    6. '"' → logprob: -10.975574493408203
    7. ''use' → logprob: -11.225574493408203
    8. ''s' → logprob: -11.475574493408203
    9. ''en' → logprob: -11.975574493408203
    10. ''t' → logprob: -12.100574493408203

Token 603: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.231182826217264e-05
    2. '-'' → logprob: -10.000072479248047
    3. ''' → logprob: -10.875072479248047
    4. ''-' → logprob: -12.375072479248047
    5. '='' → logprob: -14.000072479248047
    6. 'utf' → logprob: -14.375072479248047
    7. '('' → logprob: -14.500072479248047
    8. '=utf' → logprob: -14.500072479248047
    9. '')' → logprob: -14.875072479248047
    10. '-u' → logprob: -15.000072479248047

Token 604: '8' (ID: 23)
  Prédit: 'utf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -2.165027217415627e-05
    2. ''' → logprob: -10.875021934509277
    3. '8' → logprob: -13.625021934509277
    4. ' utf' → logprob: -13.875021934509277
    5. 'uft' → logprob: -16.00002098083496
    6. '_utf' → logprob: -16.00002098083496
    7. ''u' → logprob: -16.37502098083496
    8. ''s' → logprob: -16.62502098083496
    9. '=utf' → logprob: -16.62502098083496
    10. 'UTF' → logprob: -17.62502098083496

Token 605: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00765182264149189
    2. '())' → logprob: -5.1326518058776855
    3. '()' → logprob: -6.5076518058776855
    4. '')' → logprob: -9.007652282714844
    5. ' )' → logprob: -9.257652282714844
    6. '")' → logprob: -11.632652282714844
    7. '`)' → logprob: -13.632652282714844
    8. ')
' → logprob: -14.382652282714844
    9. ').' → logprob: -15.132652282714844
    10. '）' → logprob: -15.507652282714844

Token 606: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 607: ' IR' (ID: 23712)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.8440614938735962
    2. 'LI' → logprob: -1.3440614938735962
    3. 'MS' → logprob: -2.9690613746643066
    4. 'print' → logprob: -3.3440613746643066
    5. 'E' → logprob: -3.4690613746643066
    6. 'main' → logprob: -3.7190613746643066
    7. 'O' → logprob: -3.9690613746643066
    8. 'L' → logprob: -4.094061374664307
    9. 'YES' → logprob: -4.219061374664307
    10. 'SI' → logprob: -4.344061374664307

Token 608: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.015830231830477715
    2. '():
' → logprob: -4.515830039978027
    3. '()' → logprob: -5.390830039978027
    4. '():
' → logprob: -9.515830039978027
    5. 'ange' → logprob: -9.640830039978027
    6. '):' → logprob: -10.890830039978027
    7. ' ():' → logprob: -11.140830039978027
    8. ':' → logprob: -11.890830039978027
    9. 'ead' → logprob: -12.640830039978027
    10. 'eturn' → logprob: -13.015830039978027

Token 609: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002280861372128129
    2. '):
' → logprob: -6.1272807121276855
    3. ')' → logprob: -9.377281188964844
    4. ' ):' → logprob: -12.252281188964844
    5. '):
' → logprob: -12.502281188964844
    6. 'n' → logprob: -14.002281188964844
    7. '(n' → logprob: -14.752281188964844
    8. ',n' → logprob: -15.002281188964844
    9. ':' → logprob: -15.127281188964844
    10. ',' → logprob: -15.627281188964844

Token 610: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11181352287530899
    2. '):' → logprob: -3.361813545227051
    3. '():' → logprob: -3.611813545227051
    4. '   ' → logprob: -3.986813545227051
    5. ':
' → logprob: -4.236813545227051
    6. ' :' → logprob: -5.486813545227051
    7. 'def' → logprob: -6.736813545227051
    8. 'return' → logprob: -6.736813545227051
    9. '):
' → logprob: -7.236813545227051
    10. ':return' → logprob: -7.361813545227051

Token 611: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.041012123227119446
    2. '[' → logprob: -3.7910120487213135
    3. 'def' → logprob: -4.791012287139893
    4. ' return' → logprob: -4.916012287139893
    5. '[]' → logprob: -7.291012287139893
    6. '   ' → logprob: -7.791012287139893
    7. '[
' → logprob: -8.166011810302734
    8. 'for' → logprob: -8.666011810302734
    9. ':return' → logprob: -8.666011810302734
    10. '[r' → logprob: -9.541011810302734

Token 612: ' Lis' (ID: 29571)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.021292660385370255
    2. 'def' → logprob: -4.271292686462402
    3. ' return' → logprob: -5.021292686462402
    4. '[' → logprob: -8.271292686462402
    5. 'for' → logprob: -8.771292686462402
    6. '   ' → logprob: -9.396292686462402
    7. ' for' → logprob: -13.021292686462402
    8. ' [' → logprob: -13.271292686462402
    9. ' def' → logprob: -13.396292686462402
    10. '[int' → logprob: -13.646292686462402

Token 613: ' n' (ID: 297)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.5053361058235168
    2. 'ange' → logprob: -1.005336046218872
    3. 'e' → logprob: -4.005336284637451
    4. 'et' → logprob: -5.005336284637451
    5. 't' → logprob: -6.130336284637451
    6. 'def' → logprob: -6.755336284637451
    7. 'return' → logprob: -7.505336284637451
    8. 'es' → logprob: -7.505336284637451
    9. 'range' → logprob: -8.255335807800293
    10. 'turn' → logprob: -8.505335807800293

Token 614: ' ent' (ID: 1121)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016922952607274055
    2. 'ange' → logprob: -5.516922950744629
    3. '()
' → logprob: -6.266922950744629
    4. 'e' → logprob: -6.391922950744629
    5. '():' → logprob: -6.516922950744629
    6. 'eturn' → logprob: -6.641922950744629
    7. '():
' → logprob: -6.641922950744629
    8. 'def' → logprob: -7.141922950744629
    9. '(' → logprob: -7.266922950744629
    10. '_lines' → logprob: -7.516922950744629

Token 615: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.5379294753074646
    2. 'eg' → logprob: -2.2879295349121094
    3. 'e' → logprob: -2.4129295349121094
    4. 't' → logprob: -2.5379295349121094
    5. 'ières' → logprob: -2.6629295349121094
    6. 'es' → logprob: -4.037929534912109
    7. 'eger' → logprob: -4.162929534912109
    8. 'ieres' → logprob: -4.537929534912109
    9. 'er' → logprob: -5.037929534912109
    10. 'et' → logprob: -5.537929534912109

Token 616: ' (' (ID: 350)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10572345554828644
    2. '(n' → logprob: -2.7307233810424805
    3. ':' → logprob: -4.2307233810424805
    4. 's' → logprob: -4.9807233810424805
    5. '():
' → logprob: -4.9807233810424805
    6. '(' → logprob: -6.3557233810424805
    7. 'def' → logprob: -6.7307233810424805
    8. '()' → logprob: -6.9807233810424805
    9. '_list' → logprob: -7.1057233810424805
    10. '):' → logprob: -7.1057233810424805

Token 617: 'un' (ID: 373)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5497788786888123
    2. ')' → logprob: -1.674778938293457
    3. '=' → logprob: -3.049778938293457
    4. 'n' → logprob: -3.424778938293457
    5. '):
' → logprob: -3.424778938293457
    6. '
' → logprob: -3.549778938293457
    7. '_' → logprob: -3.924778938293457
    8. '=sys' → logprob: -4.424778938293457
    9. '_list' → logprob: -4.924778938293457
    10. 'lines' → logprob: -5.049778938293457

Token 618: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2642483711242676
    2. ' for' → logprob: -1.3892483711242676
    3. 'es' → logprob: -2.0142483711242676
    4. '[' → logprob: -2.0142483711242676
    5. ' range' → logprob: -2.7642483711242676
    6. 'range' → logprob: -3.6392483711242676
    7. 'e' → logprob: -4.264248371124268
    8. 'put' → logprob: -4.639248371124268
    9. '[int' → logprob: -4.639248371124268
    10. '[i' → logprob: -5.014248371124268

Token 619: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.6116347312927246
    2. 'ligne' → logprob: -0.8616347312927246
    3. 'line' → logprob: -4.611634731292725
    4. 'e' → logprob: -4.611634731292725
    5. ' line' → logprob: -5.861634731292725
    6. 'l' → logprob: -5.861634731292725
    7. ')' → logprob: -6.486634731292725
    8. ' readline' → logprob: -6.611634731292725
    9. ' ' → logprob: -7.111634731292725
    10. 'import' → logprob: -7.236634731292725

Token 620: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4955153167247772
    2. '(n' → logprob: -1.3705153465270996
    3. ')' → logprob: -2.4955153465270996
    4. '):
' → logprob: -3.1205153465270996
    5. '()' → logprob: -5.2455153465271
    6. '():' → logprob: -6.4955153465271
    7. '   ' → logprob: -6.9955153465271
    8. '):
' → logprob: -7.2455153465271
    9. '():
' → logprob: -7.7455153465271
    10. '(' → logprob: -7.9955153465271

Token 621: ' et' (ID: 859)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0050308289937675
    2. ':' → logprob: -6.005030632019043
    3. '(' → logprob: -7.130030632019043
    4. '   ' → logprob: -7.255030632019043
    5. 'def' → logprob: -7.380030632019043
    6. '():' → logprob: -9.255030632019043
    7. ':
' → logprob: -9.630030632019043
    8. ' (' → logprob: -10.255030632019043
    9. 'return' → logprob: -10.505030632019043
    10. '(def' → logprob: -10.505030632019043

Token 622: ' les' (ID: 1341)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0033850567415356636
    2. ' return' → logprob: -5.753385066986084
    3. '   ' → logprob: -9.003384590148926
    4. 'def' → logprob: -10.003384590148926
    5. ':return' → logprob: -10.753384590148926
    6. 'returns' → logprob: -12.128384590148926
    7. 'ret' → logprob: -13.003384590148926
    8. '@return' → logprob: -13.128384590148926
    9. '	return' → logprob: -13.878384590148926
    10. 's' → logprob: -14.003384590148926

Token 623: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.020834634080529213
    2. ' return' → logprob: -3.8958346843719482
    3. 'ret' → logprob: -8.770834922790527
    4. 'def' → logprob: -9.895834922790527
    5. 'r' → logprob: -10.895834922790527
    6. 's' → logprob: -11.020834922790527
    7. ' retour' → logprob: -11.020834922790527
    8. ' retourne' → logprob: -11.145834922790527
    9. 'yield' → logprob: -12.020834922790527
    10. 'returns' → logprob: -12.770834922790527

Token 624: ' sous' (ID: 14487)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -1.8300774097442627
    2. '(lambda' → logprob: -1.9550774097442627
    3. '[
' → logprob: -2.0800774097442627
    4. '[n' → logprob: -2.0800774097442627
    5. '[' → logprob: -2.2050774097442627
    6. '
' → logprob: -2.4550774097442627
    7. 'def' → logprob: -3.0800774097442627
    8. '(n' → logprob: -3.2050774097442627
    9. 'return' → logprob: -3.2050774097442627
    10. 'list' → logprob: -3.7050774097442627

Token 625: ' forme' (ID: 27450)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.24593418836593628
    2. 'form' → logprob: -2.245934247970581
    3. 'forme' → logprob: -3.120934247970581
    4. 'list' → logprob: -3.995934247970581
    5. 'liste' → logprob: -3.995934247970581
    6. ' forme' → logprob: -4.370934009552002
    7. '[' → logprob: -5.120934009552002
    8. 'l' → logprob: -5.245934009552002
    9. ' la' → logprob: -5.370934009552002
    10. 'forma' → logprob: -6.870934009552002

Token 626: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11100731045007706
    2. ' d' → logprob: -2.3610072135925293
    3. 'de' → logprob: -5.236007213592529
    4. 'def' → logprob: -5.861007213592529
    5. ' de' → logprob: -6.236007213592529
    6. '[]' → logprob: -8.236007690429688
    7. '[' → logprob: -9.361007690429688
    8. '[d' → logprob: -9.736007690429688
    9. '   ' → logprob: -9.861007690429688
    10. 's' → logprob: -9.986007690429688

Token 627: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5450554490089417
    2. '[' → logprob: -1.1700553894042969
    3. '[int' → logprob: -3.170055389404297
    4. '[list' → logprob: -3.795055389404297
    5. '[l' → logprob: -4.420055389404297
    6. '[i' → logprob: -4.670055389404297
    7. '[n' → logprob: -5.045055389404297
    8. '[a' → logprob: -5.045055389404297
    9. '[
' → logprob: -6.170055389404297
    10. 'generator' → logprob: -6.420055389404297

Token 628: '
' (ID: 198)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13745759427547455
    2. 'def' → logprob: -2.2624576091766357
    3. '(' → logprob: -4.262457370758057
    4. 'return' → logprob: -5.387457370758057
    5. ' def' → logprob: -6.512457370758057
    6. ':' → logprob: -7.137457370758057
    7. ':
' → logprob: -7.137457370758057
    8. ' return' → logprob: -7.387457370758057
    9. '   ' → logprob: -7.887457370758057
    10. ' (' → logprob: -7.887457370758057

Token 629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12791649997234344
    2. '(n' → logprob: -2.2529165744781494
    3. 'def' → logprob: -5.12791633605957
    4. 'return' → logprob: -5.37791633605957
    5. ' return' → logprob: -6.62791633605957
    6. '[n' → logprob: -7.25291633605957
    7. '(' → logprob: -7.37791633605957
    8. '	return' → logprob: -8.12791633605957
    9. ':' → logprob: -8.12791633605957
    10. '[' → logprob: -8.37791633605957

Token 630: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0024036008398979902
    2. ' return' → logprob: -6.752403736114502
    3. '   ' → logprob: -7.002403736114502
    4. '[' → logprob: -8.252403259277344
    5. '[]' → logprob: -10.502403259277344
    6. 'def' → logprob: -11.377403259277344
    7. '[int' → logprob: -12.002403259277344
    8. '[r' → logprob: -12.252403259277344
    9. '[
' → logprob: -13.127403259277344
    10. ':return' → logprob: -13.377403259277344

Token 631: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6347531676292419
    2. '[list' → logprob: -0.8847531676292419
    3. '[' → logprob: -2.8847532272338867
    4. '[Int' → logprob: -7.509753227233887
    5. '[I' → logprob: -7.759753227233887
    6. '[List' → logprob: -8.759753227233887
    7. '[input' → logprob: -10.259753227233887
    8. '[i' → logprob: -11.009753227233887
    9. '[n' → logprob: -11.259753227233887
    10. '[l' → logprob: -11.634753227233887

Token 632: 'I' (ID: 40)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804194927215576
    2. 'I' → logprob: -3.2880420684814453
    3. ' int' → logprob: -15.163042068481445
    4. ' I' → logprob: -16.413042068481445
    5. 'Int' → logprob: -17.288042068481445
    6. 'ints' → logprob: -17.663042068481445
    7. '   ' → logprob: -17.913042068481445
    8. 'INT' → logprob: -17.913042068481445
    9. '[int' → logprob: -17.913042068481445
    10. '(int' → logprob: -18.038042068481445

Token 633: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1472419600977446e-06
    2. '()
' → logprob: -13.875000953674316
    3. ' ()' → logprob: -15.750000953674316
    4. '()]' → logprob: -17.250001907348633
    5. '(' → logprob: -18.125001907348633
    6. '（）' → logprob: -18.750001907348633
    7. '()

' → logprob: -20.875001907348633
    8. '()`' → logprob: -21.250001907348633
    9. 'for' → logprob: -21.500001907348633
    10. '()=>' → logprob: -21.500001907348633

Token 634: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.981667537620524e-06
    2. '()
' → logprob: -13.500001907348633
    3. 'for' → logprob: -15.375001907348633
    4. ' ()' → logprob: -15.375001907348633
    5. '(' → logprob: -17.125001907348633
    6. ' for' → logprob: -18.000001907348633
    7. '
' → logprob: -18.875001907348633
    8. '```' → logprob: -19.000001907348633
    9. '（）' → logprob: -19.500001907348633
    10. '_' → logprob: -19.625001907348633

Token 635: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -4.127333340875339e-06
    2. '_i' → logprob: -12.750003814697266
    3. ' _' → logprob: -14.625003814697266
    4. '_in' → logprob: -15.000003814697266
    5. '_range' → logprob: -15.625003814697266
    6. '_n' → logprob: -16.500003814697266
    7. '_
' → logprob: -16.750003814697266
    8. '_j' → logprob: -17.500003814697266
    9. '_

' → logprob: -18.250003814697266
    10. '_=' → logprob: -18.500003814697266

Token 636: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2719716727733612
    2. ' in' → logprob: -1.7719717025756836
    3. 'n' → logprob: -3.3969717025756836
    4. 'in' → logprob: -3.8969717025756836
    5. ' _' → logprob: -5.021971702575684
    6. ' ' → logprob: -5.271971702575684
    7. ' n' → logprob: -6.021971702575684
    8. '_n' → logprob: -9.646971702575684
    9. '(' → logprob: -10.271971702575684
    10. '(n' → logprob: -10.271971702575684

Token 637: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031786637846380472
    2. ' range' → logprob: -5.753178596496582
    3. '_' → logprob: -14.628178596496582
    4. 'rang' → logprob: -15.253178596496582
    5. '	range' → logprob: -15.628178596496582
    6. '_range' → logprob: -16.1281795501709
    7. '(range' → logprob: -17.1281795501709
    8. 'ran' → logprob: -18.2531795501709
    9. ' ' → logprob: -19.0031795501709
    10. 'ra' → logprob: -19.3781795501709

Token 638: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0011729635298252106
    2. '(' → logprob: -6.75117301940918
    3. 'n' → logprob: -13.37617301940918
    4. '(
' → logprob: -13.75117301940918
    5. ' n' → logprob: -17.00117301940918
    6. ' (' → logprob: -17.00117301940918
    7. ')n' → logprob: -18.87617301940918
    8. '(

' → logprob: -19.87617301940918
    9. '	n' → logprob: -20.12617301940918
    10. '(
' → logprob: -20.75117301940918

Token 639: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.2664456789934775e-06
    2. ')]
' → logprob: -14.125000953674316
    3. ')' → logprob: -14.875000953674316
    4. ' )' → logprob: -16.500001907348633
    5. ']' → logprob: -16.750001907348633
    6. ')].' → logprob: -17.750001907348633
    7. ')]

' → logprob: -18.500001907348633
    8. '')]' → logprob: -18.500001907348633
    9. ')],' → logprob: -18.625001907348633
    10. ')]
' → logprob: -18.750001907348633

Token 640: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 641: ' L' (ID: 451)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.6390200257301331
    2. 'L' → logprob: -1.7640199661254883
    3. 'LR' → logprob: -1.7640199661254883
    4. 'SR' → logprob: -2.7640199661254883
    5. 'LI' → logprob: -3.0140199661254883
    6. 'IRS' → logprob: -4.889019966125488
    7. 'RS' → logprob: -5.264019966125488
    8. 'ISR' → logprob: -6.139019966125488
    9. 'IS' → logprob: -7.264019966125488
    10. 'IR' → logprob: -7.514019966125488

Token 642: 'IR' (ID: 4368)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.022539649158716202
    2. 'IR' → logprob: -3.8975396156311035
    3. 'R' → logprob: -6.2725396156311035
    4. '()' → logprob: -10.897540092468262
    5. 'def' → logprob: -10.897540092468262
    6. 'n' → logprob: -11.522540092468262
    7. '(n' → logprob: -11.647540092468262
    8. '```' → logprob: -12.022540092468262
    9. '(IR' → logprob: -12.272540092468262
    10. 'L' → logprob: -12.897540092468262

Token 643: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.3676733690081164e-05
    2. '(' → logprob: -10.75002384185791
    3. ' (' → logprob: -13.87502384185791
    4. 'ange' → logprob: -14.25002384185791
    5. '(i' → logprob: -16.125022888183594
    6. '(N' → logprob: -16.750022888183594
    7. '(num' → logprob: -17.500022888183594
    8. '(
' → logprob: -17.625022888183594
    9. '(range' → logprob: -17.625022888183594
    10. '(size' → logprob: -17.750022888183594

Token 644: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0388980433344841
    2. '):
' → logprob: -3.91389799118042
    3. '(n' → logprob: -4.03889799118042
    4. ')' → logprob: -7.53889799118042
    5. '):
' → logprob: -10.788898468017578
    6. '):

' → logprob: -11.788898468017578
    7. 'def' → logprob: -13.288898468017578
    8. ' ):' → logprob: -13.413898468017578
    9. ']:' → logprob: -13.413898468017578
    10. '):(' → logprob: -13.788898468017578

Token 645: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06329856812953949
    2. '(n' → logprob: -3.313298463821411
    3. ' return' → logprob: -4.81329870223999
    4. 'return' → logprob: -4.93829870223999
    5. '(' → logprob: -6.18829870223999
    6. '[' → logprob: -6.56329870223999
    7. '#' → logprob: -6.68829870223999
    8. '(list' → logprob: -7.18829870223999
    9. '(
' → logprob: -7.43829870223999
    10. '(return' → logprob: -7.81329870223999

Token 646: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23010750114917755
    2. '[' → logprob: -2.105107545852661
    3. ' return' → logprob: -2.855107545852661
    4. '[list' → logprob: -4.355107307434082
    5. '   ' → logprob: -4.855107307434082
    6. '[n' → logprob: -6.480107307434082
    7. '[line' → logprob: -6.980107307434082
    8. '[l' → logprob: -6.980107307434082
    9. '[i' → logprob: -7.855107307434082
    10. 'def' → logprob: -8.355107307434082

Token 647: ' Lis' (ID: 29571)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10079972445964813
    2. '[list' → logprob: -2.475799798965454
    3. 'return' → logprob: -5.100799560546875
    4. '[line' → logprob: -5.850799560546875
    5. '[l' → logprob: -7.225799560546875
    6. '[L' → logprob: -7.850799560546875
    7. '[List' → logprob: -7.975799560546875
    8. ' [' → logprob: -8.100799560546875
    9. 'def' → logprob: -9.100799560546875
    10. '[I' → logprob: -9.100799560546875

Token 648: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008906570263206959
    2. 'n' → logprob: -5.133906364440918
    3. '[n' → logprob: -6.008906364440918
    4. 'def' → logprob: -7.633906364440918
    5. ' n' → logprob: -11.383906364440918
    6. 'int' → logprob: -12.008906364440918
    7. '	n' → logprob: -12.258906364440918
    8. '[' → logprob: -12.883906364440918
    9. 's' → logprob: -13.508906364440918
    10. 'return' → logprob: -13.758906364440918

Token 649: ' lignes' (ID: 81687)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48456355929374695
    2. '():' → logprob: -1.6095635890960693
    3. '(n' → logprob: -2.6095635890960693
    4. '(lambda' → logprob: -2.7345635890960693
    5. '():
' → logprob: -3.9845635890960693
    6. 'lines' → logprob: -4.98456335067749
    7. 'def' → logprob: -4.98456335067749
    8. ' lines' → logprob: -4.98456335067749
    9. 'lambda' → logprob: -6.73456335067749
    10. '(' → logprob: -6.85956335067749

Token 650: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41837164759635925
    2. '(n' → logprob: -2.1683716773986816
    3. '()' → logprob: -2.6683716773986816
    4. '():' → logprob: -3.0433716773986816
    5. '(lambda' → logprob: -3.1683716773986816
    6. 'return' → logprob: -4.043371677398682
    7. '():
' → logprob: -4.418371677398682
    8. ' def' → logprob: -5.043371677398682
    9. '(def' → logprob: -5.168371677398682
    10. '(' → logprob: -5.293371677398682

Token 651: ''ent' (ID: 53422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5501121282577515
    2. '[' → logprob: -1.5501121282577515
    3. 'lists' → logprob: -2.925112247467041
    4. 'LI' → logprob: -2.925112247467041
    5. 'ist' → logprob: -3.800112247467041
    6. ' lists' → logprob: -3.925112247467041
    7. ' LI' → logprob: -4.300112247467041
    8. '[list' → logprob: -4.800112247467041
    9. '[int' → logprob: -5.050112247467041
    10. ' list' → logprob: -5.550112247467041

Token 652: 'iers' (ID: 11012)
  Prédit: 'rees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rees' → logprob: -1.087403416633606
    2. 'rée' → logprob: -1.462403416633606
    3. 'ières' → logprob: -2.3374032974243164
    4. 'r' → logprob: -2.4624032974243164
    5. 'iers' → logprob: -2.5874032974243164
    6. 'e' → logprob: -3.2124032974243164
    7. 'ier' → logprob: -3.4624032974243164
    8. 'ree' → logprob: -3.5874032974243164
    9. 'ées' → logprob: -3.9624032974243164
    10. 'er' → logprob: -3.9624032974243164

Token 653: ' et' (ID: 859)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.558784544467926
    2. 'def' → logprob: -1.6837844848632812
    3. 'return' → logprob: -1.8087844848632812
    4. '[n' → logprob: -3.6837844848632812
    5. '()' → logprob: -3.8087844848632812
    6. '[' → logprob: -5.058784484863281
    7. '(' → logprob: -5.308784484863281
    8. ' return' → logprob: -5.433784484863281
    9. '   ' → logprob: -5.558784484863281
    10. '([' → logprob: -6.433784484863281

Token 654: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7784626483917236
    2. '[' → logprob: -1.0284626483917236
    3. ' return' → logprob: -1.9034626483917236
    4. ' [' → logprob: -4.2784624099731445
    5. '   ' → logprob: -5.1534624099731445
    6. '[line' → logprob: -5.7784624099731445
    7. '[n' → logprob: -6.4034624099731445
    8. '[r' → logprob: -6.6534624099731445
    9. '[list' → logprob: -6.7784624099731445
    10. ' returns' → logprob: -6.9034624099731445

Token 655: ' une' (ID: 2463)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.010595922358334064
    2. '[' → logprob: -4.760595798492432
    3. '[l' → logprob: -6.635595798492432
    4. ' [' → logprob: -8.51059627532959
    5. '[line' → logprob: -9.01059627532959
    6. '([' → logprob: -9.51059627532959
    7. '[n' → logprob: -9.51059627532959
    8. '[i' → logprob: -9.63559627532959
    9. '[int' → logprob: -10.26059627532959
    10. '[List' → logprob: -10.51059627532959

Token 656: ' liste' (ID: 31719)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.929790198802948
    2. '[list' → logprob: -1.0547902584075928
    3. '[' → logprob: -1.4297902584075928
    4. '[n' → logprob: -4.554790019989014
    5. '[l' → logprob: -6.304790019989014
    6. '[List' → logprob: -6.429790019989014
    7. '[[' → logprob: -6.679790019989014
    8. '[
' → logprob: -7.054790019989014
    9. '[line' → logprob: -7.554790019989014
    10. '[size' → logprob: -9.179790496826172

Token 657: ' de' (ID: 334)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.2937012016773224
    2. '[list' → logprob: -1.668701171875
    3. 'of' → logprob: -3.543701171875
    4. '(list' → logprob: -3.543701171875
    5. '[' → logprob: -5.793701171875
    6. 'return' → logprob: -6.168701171875
    7. '[List' → logprob: -7.043701171875
    8. 'def' → logprob: -7.168701171875
    9. ' of' → logprob: -8.168701171875
    10. '(' → logprob: -8.293701171875

Token 658: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.31406089663505554
    2. 'lists' → logprob: -1.564060926437378
    3. '[list' → logprob: -2.939060926437378
    4. '(list' → logprob: -5.189060688018799
    5. 'liste' → logprob: -6.689060688018799
    6. '[' → logprob: -8.689061164855957
    7. 'l' → logprob: -9.189061164855957
    8. ' lists' → logprob: -9.814061164855957
    9. ' listes' → logprob: -10.189061164855957
    10. '[List' → logprob: -11.064061164855957

Token 659: ' d' (ID: 272)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.18566350638866425
    2. '[I' → logprob: -2.3106634616851807
    3. '[n' → logprob: -3.3106634616851807
    4. '[int' → logprob: -4.68566370010376
    5. '[' → logprob: -5.06066370010376
    6. '[list' → logprob: -5.18566370010376
    7. 'return' → logprob: -6.18566370010376
    8. '(I' → logprob: -6.18566370010376
    9. '(n' → logprob: -6.43566370010376
    10. '[i' → logprob: -6.43566370010376

Token 660: ''ent' (ID: 53422)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6609804630279541
    2. 'int' → logprob: -1.285980463027954
    3. '(int' → logprob: -1.910980463027954
    4. 'list' → logprob: -3.035980463027954
    5. 'lists' → logprob: -5.410980224609375
    6. 'ints' → logprob: -6.035980224609375
    7. '(list' → logprob: -6.410980224609375
    8. '<int' → logprob: -6.660980224609375
    9. 'liste' → logprob: -7.535980224609375
    10. '[list' → logprob: -8.285980224609375

Token 661: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0009867232292890549
    2. 'ier' → logprob: -7.500986576080322
    3. 'ières' → logprob: -7.875986576080322
    4. 't' → logprob: -10.62598705291748
    5. 'tes' → logprob: -11.87598705291748
    6. 'ieres' → logprob: -12.00098705291748
    7. 'e' → logprob: -12.25098705291748
    8. 'ires' → logprob: -12.62598705291748
    9. 'ière' → logprob: -13.75098705291748
    10. 'i' → logprob: -13.87598705291748

Token 662: '
' (ID: 198)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1669020652770996
    2. 'def' → logprob: -1.9169020652770996
    3. 'return' → logprob: -5.2919020652771
    4. '[n' → logprob: -7.9169020652771
    5. ' (' → logprob: -8.041902542114258
    6. ' return' → logprob: -8.291902542114258
    7. '   ' → logprob: -8.541902542114258
    8. '(' → logprob: -8.541902542114258
    9. ' def' → logprob: -9.791902542114258
    10. '
' → logprob: -9.916902542114258

Token 663: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11131377518177032
    2. '   ' → logprob: -2.361313819885254
    3. 'return' → logprob: -5.611313819885254
    4. 'def' → logprob: -5.986313819885254
    5. ' return' → logprob: -6.111313819885254
    6. '(' → logprob: -6.861313819885254
    7. ':
' → logprob: -7.611313819885254
    8. ' (' → logprob: -7.986313819885254
    9. '[n' → logprob: -8.611313819885254
    10. '(
' → logprob: -9.111313819885254

Token 664: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0021783350966870785
    2. ' return' → logprob: -6.502178192138672
    3. '   ' → logprob: -8.002178192138672
    4. 'def' → logprob: -8.002178192138672
    5. '[' → logprob: -12.252178192138672
    6. '	return' → logprob: -14.752178192138672
    7. '[]' → logprob: -15.502178192138672
    8. '{return' → logprob: -15.502178192138672
    9. '[
' → logprob: -15.877178192138672
    10. '
' → logprob: -15.877178192138672

Token 665: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0020104798022657633
    2. '[list' → logprob: -6.502010345458984
    3. '[L' → logprob: -8.002010345458984
    4. '[I' → logprob: -8.752010345458984
    5. '[List' → logprob: -11.502010345458984
    6. '[line' → logprob: -13.127010345458984
    7. '[int' → logprob: -14.252010345458984
    8. ' [' → logprob: -14.627010345458984
    9. '[l' → logprob: -15.377010345458984
    10. '[Int' → logprob: -15.502010345458984

Token 666: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -2.2246291337069124e-05
    2. 'list' → logprob: -10.750021934509277
    3. ' LI' → logprob: -14.375021934509277
    4. 'li' → logprob: -15.750021934509277
    5. '[' → logprob: -18.000022888183594
    6. 'LIST' → logprob: -18.250022888183594
    7. '   ' → logprob: -18.500022888183594
    8. 'L' → logprob: -18.625022888183594
    9. 'Li' → logprob: -18.875022888183594
    10. 'LS' → logprob: -19.000022888183594

Token 667: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.896309739408025e-07
    2. '(n' → logprob: -15.125000953674316
    3. ' ()' → logprob: -15.625000953674316
    4. '()]' → logprob: -15.750000953674316
    5. '()
' → logprob: -15.875000953674316
    6. '(' → logprob: -17.625
    7. '().' → logprob: -17.75
    8. '()[' → logprob: -18.875
    9. '（）' → logprob: -19.5
    10. 'for' → logprob: -19.75

Token 668: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009433844243176281
    2. 'for' → logprob: -7.000943183898926
    3. ' for' → logprob: -11.250943183898926
    4. '(' → logprob: -11.375943183898926
    5. '()' → logprob: -12.625943183898926
    6. ' (' → logprob: -12.875943183898926
    7. '(i' → logprob: -13.750943183898926
    8. '(for' → logprob: -15.000943183898926
    9. 'n' → logprob: -16.375944137573242
    10. '((' → logprob: -17.250944137573242

Token 669: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05379907414317131
    2. 'i' → logprob: -3.0537991523742676
    3. '_i' → logprob: -5.553799152374268
    4. 'range' → logprob: -7.678799152374268
    5. ' _' → logprob: -7.928799152374268
    6. '_range' → logprob: -8.17879867553711
    7. ' i' → logprob: -8.92879867553711
    8. ' range' → logprob: -10.05379867553711
    9. '_in' → logprob: -11.05379867553711
    10. ' in' → logprob: -11.30379867553711

Token 670: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3144848644733429
    2. 'in' → logprob: -1.3144848346710205
    3. 'range' → logprob: -7.3144850730896
    4. '_' → logprob: -8.189484596252441
    5. 'n' → logprob: -8.689484596252441
    6. '(' → logprob: -10.439484596252441
    7. ' ' → logprob: -10.689484596252441
    8. '(n' → logprob: -11.064484596252441
    9. ' range' → logprob: -11.189484596252441
    10. '_in' → logprob: -12.314484596252441

Token 671: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '(range' → logprob: -17.375123977661133
    4. '	range' → logprob: -21.750123977661133
    5. 'rang' → logprob: -22.750123977661133
    6. ' ' → logprob: -24.625123977661133
    7. '_range' → logprob: -24.625123977661133
    8. '   ' → logprob: -24.875123977661133
    9. 'r' → logprob: -24.875123977661133
    10. 'in' → logprob: -25.000123977661133

Token 672: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01105937734246254
    2. ' range' → logprob: -4.511059284210205
    3. '(range' → logprob: -11.886059761047363
    4. 'n' → logprob: -12.761059761047363
    5. '(n' → logprob: -13.261059761047363
    6. '	range' → logprob: -16.761058807373047
    7. '_range' → logprob: -18.011058807373047
    8. '(' → logprob: -19.011058807373047
    9. 'rang' → logprob: -19.011058807373047
    10. 'in' → logprob: -19.761058807373047

Token 673: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4869617521762848
    2. ']' → logprob: -0.9869617223739624
    3. '()]' → logprob: -4.361961841583252
    4. ')' → logprob: -10.861961364746094
    5. '(n' → logprob: -11.236961364746094
    6. ' ]' → logprob: -12.111961364746094
    7. ']()' → logprob: -12.986961364746094
    8. '}]' → logprob: -13.611961364746094
    9. '])]' → logprob: -13.611961364746094
    10. '`]' → logprob: -13.736961364746094

Token 674: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4638088643550873
    2. '<|end|>' → logprob: -1.0888088941574097
    3. '#' → logprob: -3.58880877494812
    4. '<|end|>' → logprob: -5.713809013366699
    5. '
' → logprob: -6.213809013366699
    6. '```' → logprob: -6.838809013366699
    7. ')' → logprob: -9.0888090133667
    8. '...' → logprob: -9.4638090133667
    9. '

' → logprob: -10.5888090133667
    10. ' ' → logprob: -10.7138090133667

Token 675: ' SR' (ID: 30704)
  Prédit: 'SR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SR' → logprob: -0.4790652394294739
    2. 'LS' → logprob: -0.9790652394294739
    3. 'LR' → logprob: -6.354065418243408
    4. 'RS' → logprob: -6.604065418243408
    5. 'SI' → logprob: -7.104065418243408
    6. 'L' → logprob: -7.479065418243408
    7. 'S' → logprob: -9.10406494140625
    8. 'LI' → logprob: -9.22906494140625
    9. 'IS' → logprob: -9.85406494140625
    10. 'IR' → logprob: -9.85406494140625

Token 676: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6047699318733066e-05
    2. '():
' → logprob: -12.125016212463379
    3. '():' → logprob: -12.500016212463379
    4. '()' → logprob: -12.625016212463379
    5. '(' → logprob: -13.250016212463379
    6. '(size' → logprob: -14.750016212463379
    7. '(num' → logprob: -15.375016212463379
    8. '(length' → logprob: -15.500016212463379
    9. 'def' → logprob: -15.750016212463379
    10. '(i' → logprob: -16.250015258789062

Token 677: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14526207745075226
    2. '):
' → logprob: -2.1452620029449463
    3. '(n' → logprob: -4.020262241363525
    4. '):
' → logprob: -8.770261764526367
    5. ')' → logprob: -10.020261764526367
    6. 'def' → logprob: -11.895261764526367
    7. '):

' → logprob: -11.895261764526367
    8. 'n' → logprob: -13.270261764526367
    9. '(' → logprob: -14.270261764526367
    10. ':' → logprob: -15.020261764526367

Token 678: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0065049282275140285
    2. 'n' → logprob: -5.756505012512207
    3. 'def' → logprob: -5.881505012512207
    4. '(s' → logprob: -8.506505012512207
    5. '   ' → logprob: -8.631505012512207
    6. 's' → logprob: -9.756505012512207
    7. '#' → logprob: -10.131505012512207
    8. '(S' → logprob: -11.006505012512207
    9. ' n' → logprob: -11.256505012512207
    10. '(
' → logprob: -12.131505012512207

Token 679: ' #' (ID: 1069)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.397153377532959
    2. '[' → logprob: -1.897153377532959
    3. 'def' → logprob: -2.897153377532959
    4. '[n' → logprob: -3.147153377532959
    5. 'return' → logprob: -3.272153377532959
    6. '[s' → logprob: -4.522153377532959
    7. '#' (adapté à ' #') → logprob: -4.522153377532959
    8. '[string' → logprob: -5.147153377532959
    9. '[String' → logprob: -5.272153377532959
    10. '[str' → logprob: -5.397153377532959

Token 680: ' Lis' (ID: 29571)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.49090421199798584
    2. 'def' → logprob: -1.1159042119979858
    3. '[' → logprob: -3.4909043312072754
    4. '[S' → logprob: -3.7409043312072754
    5. '[s' → logprob: -6.365904331207275
    6. ' return' → logprob: -6.365904331207275
    7. '#' → logprob: -6.990904331207275
    8. '
' → logprob: -7.115904331207275
    9. 'S' → logprob: -8.490903854370117
    10. '[string' → logprob: -8.740903854370117

Token 681: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09693130105733871
    2. 'n' → logprob: -2.471931219100952
    3. 'def' → logprob: -4.846931457519531
    4. ' n' → logprob: -9.721931457519531
    5. 's' → logprob: -10.721931457519531
    6. '[n' → logprob: -11.471931457519531
    7. '
' → logprob: -12.471931457519531
    8. 'a' → logprob: -12.721931457519531
    9. 'int' → logprob: -13.596931457519531
    10. '#' → logprob: -13.846931457519531

Token 682: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6549259424209595
    2. 'lines' → logprob: -0.7799259424209595
    3. '(S' → logprob: -5.15492582321167
    4. ' lines' → logprob: -5.27992582321167
    5. 'strings' → logprob: -5.90492582321167
    6. '(' → logprob: -6.02992582321167
    7. 'def' → logprob: -6.65492582321167
    8. 'Lines' → logprob: -6.77992582321167
    9. 'S' → logprob: -7.15492582321167
    10. '_lines' → logprob: -7.15492582321167

Token 683: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.026847755536437035
    2. 'def' → logprob: -3.6518478393554688
    3. '(S' → logprob: -8.151847839355469
    4. '(' → logprob: -9.401847839355469
    5. '()' → logprob: -10.026847839355469
    6. '(s' → logprob: -10.526847839355469
    7. 'S' → logprob: -10.526847839355469
    8. '   ' → logprob: -11.026847839355469
    9. '():
' → logprob: -11.151847839355469
    10. '(size' → logprob: -11.526847839355469

Token 684: ' texte' (ID: 53492)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08323699235916138
    2. 'sys' → logprob: -3.2082369327545166
    3. 'strings' → logprob: -3.7082369327545166
    4. 'str' → logprob: -4.458237171173096
    5. 'string' → logprob: -6.958237171173096
    6. ' S' → logprob: -7.333237171173096
    7. ' sys' → logprob: -7.458237171173096
    8. ' strings' → logprob: -7.583237171173096
    9. 'input' → logprob: -8.083236694335938
    10. 's' → logprob: -8.708236694335938

Token 685: ' et' (ID: 859)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8203451633453369
    2. 'def' → logprob: -1.070345163345337
    3. '   ' → logprob: -1.695345163345337
    4. 'return' → logprob: -4.195344924926758
    5. '(' → logprob: -4.570344924926758
    6. ' return' → logprob: -5.820344924926758
    7. '(S' → logprob: -6.195344924926758
    8. ' (' → logprob: -7.820344924926758
    9. 's' → logprob: -7.945344924926758
    10. ' def' → logprob: -8.070344924926758

Token 686: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07698917388916016
    2. '[S' → logprob: -3.82698917388916
    3. 'def' → logprob: -4.07698917388916
    4. ' return' → logprob: -4.20198917388916
    5. '[s' → logprob: -4.45198917388916
    6. '[' → logprob: -4.82698917388916
    7. ' [' → logprob: -9.20198917388916
    8. '   ' → logprob: -9.20198917388916
    9. 'returns' → logprob: -9.45198917388916
    10. '{return' → logprob: -9.45198917388916

Token 687: ' une' (ID: 2463)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.018334539607167244
    2. '[' → logprob: -4.01833438873291
    3. '[s' → logprob: -9.39333438873291
    4. '[String' → logprob: -10.01833438873291
    5. ' [' → logprob: -10.26833438873291
    6. '[str' → logprob: -12.39333438873291
    7. '[string' → logprob: -12.51833438873291
    8. '[i' → logprob: -12.64333438873291
    9. '   ' → logprob: -13.01833438873291
    10. 'S' → logprob: -13.39333438873291

Token 688: ' liste' (ID: 31719)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.0037301299162209034
    2. '[' → logprob: -5.753730297088623
    3. '[s' → logprob: -8.003729820251465
    4. '[String' → logprob: -9.503729820251465
    5. ' [' → logprob: -9.753729820251465
    6. '[string' → logprob: -9.878729820251465
    7. '[str' → logprob: -11.003729820251465
    8. '[
' → logprob: -11.628729820251465
    9. '[list' → logprob: -12.878729820251465
    10. '[L' → logprob: -13.503729820251465

Token 689: ' de' (ID: 334)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.24939455091953278
    2. '([' → logprob: -1.8743945360183716
    3. '[S' → logprob: -2.749394655227661
    4. '[' → logprob: -5.999394416809082
    5. 'S' → logprob: -8.249394416809082
    6. '(' → logprob: -8.249394416809082
    7. '[str' → logprob: -8.499394416809082
    8. '[String' → logprob: -10.499394416809082
    9. ' [' → logprob: -10.999394416809082
    10. '(
' → logprob: -11.249394416809082

Token 690: ' chaînes' (ID: 179904)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.747814349073451e-05
    2. '[S' → logprob: -11.750017166137695
    3. 'strings' → logprob: -12.500017166137695
    4. 'string' → logprob: -12.750017166137695
    5. '[' → logprob: -14.000017166137695
    6. ' S' → logprob: -14.375017166137695
    7. '[string' → logprob: -14.625017166137695
    8. 's' → logprob: -14.625017166137695
    9. '[str' → logprob: -15.000017166137695
    10. 'sys' → logprob: -16.750017166137695

Token 691: '
' (ID: 198)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.5558526515960693
    2. '[S' → logprob: -1.4308526515960693
    3. '[' → logprob: -2.6808526515960693
    4. 'def' → logprob: -3.3058526515960693
    5. 'for' → logprob: -3.5558526515960693
    6. '[str' → logprob: -4.055852890014648
    7. '([' → logprob: -4.305852890014648
    8. '[n' → logprob: -4.430852890014648
    9. '[String' → logprob: -6.055852890014648
    10. '(' → logprob: -6.180852890014648

Token 692: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05792867764830589
    2. 'def' → logprob: -3.0579285621643066
    3. 'return' → logprob: -5.057928562164307
    4. ' return' → logprob: -6.557928562164307
    5. '[S' → logprob: -6.932928562164307
    6. '(S' → logprob: -7.807928562164307
    7. '[' → logprob: -10.057929039001465
    8. ' def' → logprob: -10.432929039001465
    9. ' ' → logprob: -10.807929039001465
    10. '	return' → logprob: -10.932929039001465

Token 693: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000421974720666185
    2. '   ' → logprob: -8.500421524047852
    3. ' return' → logprob: -8.500421524047852
    4. 'def' → logprob: -11.375421524047852
    5. '[S' → logprob: -12.625421524047852
    6. '[' → logprob: -15.875421524047852
    7. '	return' → logprob: -16.25042152404785
    8. '```' → logprob: -17.37542152404785
    9. '
' → logprob: -17.50042152404785
    10. '{return' → logprob: -17.62542152404785

Token 694: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -1.282920129597187e-05
    2. '[' → logprob: -11.500012397766113
    3. ' [' → logprob: -13.500012397766113
    4. '[String' → logprob: -14.625012397766113
    5. '[s' → logprob: -14.750012397766113
    6. 'S' → logprob: -15.000012397766113
    7. '[
' → logprob: -16.75001335144043
    8. '(S' → logprob: -17.12501335144043
    9. '[str' → logprob: -17.50001335144043
    10. '[I' → logprob: -17.62501335144043

Token 695: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: 0.0
    2. ' S' → logprob: -17.25
    3. 'Ｓ' → logprob: -23.375
    4. 'sys' → logprob: -23.5
    5. '	S' → logprob: -23.625
    6. '   ' → logprob: -23.625
    7. 's' → logprob: -24.0
    8. '_S' → logprob: -25.125
    9. '```' → logprob: -25.25
    10. '
' → logprob: -25.375

Token 696: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.935296834039036e-06
    2. ' ()' → logprob: -14.12500286102295
    3. '(n' → logprob: -14.25000286102295
    4. 'for' → logprob: -14.37500286102295
    5. '(' → logprob: -14.75000286102295
    6. '()
' → logprob: -15.00000286102295
    7. '().' → logprob: -16.250003814697266
    8. '()]' → logprob: -16.875003814697266
    9. '(i' → logprob: -16.875003814697266
    10. '（）' → logprob: -17.500003814697266

Token 697: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023849327117204666
    2. 'for' → logprob: -3.7738492488861084
    3. ' for' → logprob: -7.8988494873046875
    4. '(n' → logprob: -8.398849487304688
    5. '(' → logprob: -12.398849487304688
    6. ' ()' → logprob: -13.023849487304688
    7. '(i' → logprob: -14.648849487304688
    8. '()
' → logprob: -15.273849487304688
    9. 'n' → logprob: -15.898849487304688
    10. '	for' → logprob: -16.523849487304688

Token 698: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20214113593101501
    2. 'i' → logprob: -1.7021411657333374
    3. '_i' → logprob: -7.327141284942627
    4. ' i' → logprob: -10.202140808105469
    5. ' _' → logprob: -11.202140808105469
    6. '_
' → logprob: -11.452140808105469
    7. '
' → logprob: -11.827140808105469
    8. '_
' → logprob: -15.077140808105469
    9. ' _
' → logprob: -15.452140808105469
    10. '_range' → logprob: -15.452140808105469

Token 699: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.630596399307251
    2. ' in' → logprob: -0.880596399307251
    3. 'range' → logprob: -3.005596399307251
    4. '_' → logprob: -6.130596160888672
    5. 'i' → logprob: -7.130596160888672
    6. 'n' → logprob: -7.630596160888672
    7. ' range' → logprob: -9.505596160888672
    8. ' ' → logprob: -9.755596160888672
    9. ' i' → logprob: -10.505596160888672
    10. ' _' → logprob: -10.755596160888672

Token 700: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. '(range' → logprob: -21.00000762939453
    4. '	range' → logprob: -22.75000762939453
    5. '_range' → logprob: -24.00000762939453
    6. 'rang' → logprob: -25.00000762939453
    7. '
' → logprob: -26.00000762939453
    8. 'Range' → logprob: -26.00000762939453
    9. '.range' → logprob: -26.62500762939453
    10. '   ' → logprob: -26.87500762939453

Token 701: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00020401719666551799
    2. 'n' → logprob: -8.500204086303711
    3. '(' → logprob: -14.625204086303711
    4. 'range' → logprob: -19.37520408630371
    5. '(
' → logprob: -19.50020408630371
    6. '	n' → logprob: -19.50020408630371
    7. '
' → logprob: -20.12520408630371
    8. ' n' → logprob: -20.87520408630371
    9. 'int' → logprob: -21.25020408630371
    10. 's' → logprob: -22.25020408630371

Token 702: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.129266067640856e-05
    2. 'n' → logprob: -11.625020980834961
    3. '(n' → logprob: -11.625020980834961
    4. ')' → logprob: -13.375020980834961
    5. ')]
' → logprob: -14.875020980834961
    6. '(' → logprob: -15.000020980834961
    7. ')])' → logprob: -15.250020980834961
    8. ')],' → logprob: -15.750020980834961
    9. '())' → logprob: -15.875020980834961
    10. '])]' → logprob: -16.25002098083496

Token 703: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 704: ' L' (ID: 451)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3604519367218018
    2. 'input' → logprob: -1.4854519367218018
    3. 'print' → logprob: -1.8604519367218018
    4. 'WR' → logprob: -1.9854519367218018
    5. 'DR' → logprob: -2.8604519367218018
    6. 'LS' → logprob: -3.3604519367218018
    7. 'WS' → logprob: -3.7354519367218018
    8. 'SR' → logprob: -3.9854519367218018
    9. 'PR' → logprob: -4.360451698303223
    10. 'IR' → logprob: -4.360451698303223

Token 705: 'SR' (ID: 22892)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.590031087398529
    2. 'S' → logprob: -1.2150311470031738
    3. 'R' → logprob: -2.715031147003174
    4. 'IR' → logprob: -2.840031147003174
    5. 'SR' → logprob: -3.840031147003174
    6. 'IS' → logprob: -6.965031147003174
    7. 'ISR' → logprob: -8.090030670166016
    8. 'IST' → logprob: -8.340030670166016
    9. 'SI' → logprob: -8.715030670166016
    10. 'ist' → logprob: -8.715030670166016

Token 706: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.000006675720215
    3. 'def' → logprob: -15.000006675720215
    4. ' (' → logprob: -16.50000762939453
    5. 'n' → logprob: -17.50000762939453
    6. '(
' → logprob: -17.62500762939453
    7. '(N' → logprob: -18.12500762939453
    8. '(num' → logprob: -18.62500762939453
    9. '(nb' → logprob: -18.87500762939453
    10. '(nt' → logprob: -19.12500762939453

Token 707: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0133743304759264
    2. '):
' → logprob: -4.388374328613281
    3. '(n' → logprob: -7.513374328613281
    4. '():' → logprob: -8.763374328613281
    5. ')' → logprob: -9.138374328613281
    6. '()' → logprob: -10.263374328613281
    7. '):
' → logprob: -12.013374328613281
    8. 'def' → logprob: -12.513374328613281
    9. ' ):' → logprob: -12.513374328613281
    10. '():
' → logprob: -12.763374328613281

Token 708: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.049755782238208e-05
    2. 'def' → logprob: -10.00005054473877
    3. '   ' → logprob: -12.62505054473877
    4. '(' → logprob: -13.75005054473877
    5. 'n' → logprob: -15.50005054473877
    6. '(
' → logprob: -15.87505054473877
    7. ':' → logprob: -16.000049591064453
    8. ' (' → logprob: -16.375049591064453
    9. ' def' → logprob: -16.500049591064453
    10. ':
' → logprob: -16.875049591064453

Token 709: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05622117966413498
    2. 'n' → logprob: -3.3062212467193604
    3. '(n' → logprob: -5.056221008300781
    4. 'return' → logprob: -5.556221008300781
    5. '#' (adapté à ' #') → logprob: -5.806221008300781
    6. '   ' → logprob: -6.181221008300781
    7. ' def' → logprob: -7.181221008300781
    8. '[n' → logprob: -7.681221008300781
    9. 'LS' → logprob: -7.681221008300781
    10. ' n' → logprob: -7.806221008300781

Token 710: ' Lis' (ID: 29571)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1570356786251068
    2. '#' → logprob: -2.9070355892181396
    3. 'LS' → logprob: -2.9070355892181396
    4. 'return' → logprob: -3.9070355892181396
    5. 'n' → logprob: -4.782035827636719
    6. 'SR' → logprob: -5.657035827636719
    7. '(n' → logprob: -6.782035827636719
    8. 'Ls' → logprob: -7.532035827636719
    9. 'S' → logprob: -7.907035827636719
    10. ' def' → logprob: -8.032035827636719

Token 711: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006937315920367837
    2. 'n' → logprob: -7.3756937980651855
    3. 'def' → logprob: -9.625693321228027
    4. ' n' → logprob: -14.500693321228027
    5. ' (' → logprob: -15.750693321228027
    6. '[n' → logprob: -15.875693321228027
    7. 'LS' → logprob: -16.250694274902344
    8. '#' → logprob: -16.750694274902344
    9. '(' → logprob: -16.750694274902344
    10. 'int' → logprob: -17.375694274902344

Token 712: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00020091790065634996
    2. 'def' → logprob: -9.750201225280762
    3. 's' → logprob: -10.250201225280762
    4. 'Lines' → logprob: -10.375201225280762
    5. 'S' → logprob: -10.750201225280762
    6. 'n' → logprob: -10.750201225280762
    7. '(' → logprob: -11.500201225280762
    8. '(i' → logprob: -12.750201225280762
    9. '_lines' → logprob: -12.750201225280762
    10. 'L' → logprob: -13.000201225280762

Token 713: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012520157033577561
    2. 'def' → logprob: -6.751252174377441
    3. '(' → logprob: -9.751252174377441
    4. 'for' → logprob: -12.001252174377441
    5. '(i' → logprob: -12.376252174377441
    6. '(int' → logprob: -12.626252174377441
    7. '(S' → logprob: -13.501252174377441
    8. ' def' → logprob: -13.626252174377441
    9. ' (' → logprob: -13.626252174377441
    10. '```' → logprob: -13.751252174377441

Token 714: ' chacune' (ID: 127465)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034633953124284744
    2. ' def' → logprob: -3.7846338748931885
    3. '#' → logprob: -5.409634113311768
    4. '
' → logprob: -6.034634113311768
    5. ' return' → logprob: -6.534634113311768
    6. 'return' → logprob: -6.534634113311768
    7. '   ' → logprob: -7.159634113311768
    8. 'n' → logprob: -8.65963363647461
    9. 'LS' → logprob: -9.03463363647461
    10. ' n' → logprob: -9.28463363647461

Token 715: ' transform' (ID: 7118)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7870679497718811
    2. '()' → logprob: -0.7870679497718811
    3. 'def' → logprob: -2.9120678901672363
    4. 'for' → logprob: -4.412067890167236
    5. ' =' → logprob: -5.662067890167236
    6. '().' → logprob: -5.912067890167236
    7. ')' → logprob: -6.037067890167236
    8. 'de' → logprob: -6.162067890167236
    9. '   ' → logprob: -6.287067890167236
    10. '(S' → logprob: -6.662067890167236

Token 716: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0032889400608837605
    2. 'ées' → logprob: -6.628288745880127
    3. 'ant' → logprob: -6.753288745880127
    4. 'é' → logprob: -7.753288745880127
    5. 'ee' → logprob: -8.128289222717285
    6. 'er' → logprob: -10.253289222717285
    7. 'ed' → logprob: -10.878289222717285
    8. 'e' → logprob: -12.378289222717285
    9. '   ' → logprob: -13.253289222717285
    10. 'def' → logprob: -13.378289222717285

Token 717: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.2083679437637329
    2. ' en' → logprob: -1.708367943763733
    3. '(lambda' → logprob: -5.833367824554443
    4. 'lambda' → logprob: -6.208367824554443
    5. '()' → logprob: -6.583367824554443
    6. '(en' → logprob: -8.458368301391602
    7. '=lambda' → logprob: -8.958368301391602
    8. ' lambda' → logprob: -9.458368301391602
    9. 'list' → logprob: -10.083368301391602
    10. '(S' → logprob: -10.458368301391602

Token 718: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02080836519598961
    2. 'str' → logprob: -4.520808219909668
    3. 'liste' → logprob: -5.645808219909668
    4. ' list' → logprob: -6.020808219909668
    5. 'string' → logprob: -6.145808219909668
    6. 'S' → logprob: -6.645808219909668
    7. 'une' → logprob: -9.520808219909668
    8. 'chaine' → logprob: -10.020808219909668
    9. ' liste' → logprob: -10.145808219909668
    10. 'a' → logprob: -10.395808219909668

Token 719: ' de' (ID: 334)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.36273568868637085
    2. 'def' → logprob: -1.8627357482910156
    3. '()' → logprob: -2.6127357482910156
    4. '(str' → logprob: -2.8627357482910156
    5. '(' → logprob: -4.862735748291016
    6. '(s' → logprob: -6.362735748291016
    7. '(lambda' → logprob: -6.362735748291016
    8. '(list' → logprob: -6.612735748291016
    9. '[str' → logprob: -6.987735748291016
    10. 'S' → logprob: -7.112735748291016

Token 720: ' mots' (ID: 38338)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.002466975012794137
    2. 'strings' → logprob: -6.752467155456543
    3. 'string' → logprob: -7.377467155456543
    4. 'm' → logprob: -7.502467155456543
    5. 'S' → logprob: -9.627467155456543
    6. ' str' → logprob: -11.002467155456543
    7. '(str' → logprob: -11.877467155456543
    8. 'mot' → logprob: -12.002467155456543
    9. '[str' → logprob: -12.002467155456543
    10. 's' → logprob: -12.502467155456543

Token 721: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006791513413190842
    2. 'for' → logprob: -5.631791591644287
    3. 'def' → logprob: -5.881791591644287
    4. '=' → logprob: -9.381791114807129
    5. ' (' → logprob: -9.506791114807129
    6. ' for' → logprob: -9.631791114807129
    7. '(' → logprob: -9.881791114807129
    8. '   ' → logprob: -10.381791114807129
    9. '[n' → logprob: -10.506791114807129
    10. ' =' → logprob: -10.881791114807129

Token 722: 'split' (ID: 13627)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7245061993598938
    2. 'for' → logprob: -1.099506139755249
    3. 'def' → logprob: -2.349506139755249
    4. 'int' → logprob: -2.974506139755249
    5. ')' → logprob: -3.849506139755249
    6. '(n' → logprob: -4.599506378173828
    7. 'S' → logprob: -5.724506378173828
    8. '   ' → logprob: -7.974506378173828
    9. '[n' → logprob: -8.599506378173828
    10. 'LS' → logprob: -8.724506378173828

Token 723: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5369046330451965
    2. '())' → logprob: -1.4119045734405518
    3. ')' → logprob: -2.1619045734405518
    4. '(n' → logprob: -3.5369045734405518
    5. '())
' → logprob: -4.786904811859131
    6. '()]' → logprob: -5.161904811859131
    7. '()
' → logprob: -5.661904811859131
    8. 'def' → logprob: -6.036904811859131
    9. ')]' → logprob: -6.036904811859131
    10. ')]
' → logprob: -6.161904811859131

Token 724: ' et' (ID: 859)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009284949628636241
    2. 'for' → logprob: -7.2509284019470215
    3. '   ' → logprob: -9.50092887878418
    4. ' for' → logprob: -9.62592887878418
    5. 'def' → logprob: -9.87592887878418
    6. ' (' → logprob: -11.25092887878418
    7. '(' → logprob: -11.37592887878418
    8. '(def' → logprob: -14.37592887878418
    9. '(for' → logprob: -14.87592887878418
    10. '(i' → logprob: -15.37592887878418

Token 725: ' retourne' (ID: 178818)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5124747157096863
    2. 'return' → logprob: -1.512474775314331
    3. ' retourn' → logprob: -2.387474775314331
    4. 'returned' → logprob: -3.762474775314331
    5. '   ' → logprob: -4.137474536895752
    6. ' returned' → logprob: -4.887474536895752
    7. '
' → logprob: -5.012474536895752
    8. ' return' → logprob: -5.887474536895752
    9. 'returns' → logprob: -5.887474536895752
    10. '#' → logprob: -6.012474536895752

Token 726: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.059197403490543365
    2. '[S' → logprob: -3.684197425842285
    3. '[list' → logprob: -4.184197425842285
    4. '[n' → logprob: -4.934197425842285
    5. ' [' → logprob: -6.059197425842285
    6. '[string' → logprob: -6.809197425842285
    7. '[L' → logprob: -6.934197425842285
    8. '[s' → logprob: -7.059197425842285
    9. '[String' → logprob: -7.059197425842285
    10. '[line' → logprob: -7.184197425842285

Token 727: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0415550097823143
    2. '[list' → logprob: -3.2915549278259277
    3. '[L' → logprob: -7.041554927825928
    4. '[S' → logprob: -7.416554927825928
    5. '[string' → logprob: -7.666554927825928
    6. '[s' → logprob: -7.916554927825928
    7. '[List' → logprob: -8.041555404663086
    8. ' [' → logprob: -8.666555404663086
    9. '[n' → logprob: -8.791555404663086
    10. '[int' → logprob: -8.916555404663086

Token 728: ' de' (ID: 334)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.05310838297009468
    2. '[' → logprob: -3.8031084537506104
    3. ' of' → logprob: -4.303108215332031
    4. '   ' → logprob: -5.803108215332031
    5. '[[' → logprob: -6.053108215332031
    6. 'def' → logprob: -6.303108215332031
    7. '[list' → logprob: -6.428108215332031
    8. 'LS' → logprob: -6.678108215332031
    9. 'for' → logprob: -6.928108215332031
    10. '[List' → logprob: -7.053108215332031

Token 729: ' telles' (ID: 83154)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.006824178621172905
    2. 'lists' → logprob: -5.006824016571045
    3. 'liste' → logprob: -9.381824493408203
    4. '[list' → logprob: -11.631824493408203
    5. 'listas' → logprob: -12.006824493408203
    6. ' listes' → logprob: -12.381824493408203
    7. '[' → logprob: -13.381824493408203
    8. 'List' → logprob: -13.881824493408203
    9. 'ls' → logprob: -14.006824493408203
    10. 'LS' → logprob: -15.006824493408203

Token 730: ' listes' (ID: 179198)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.6611295938491821
    2. 'list' → logprob: -0.7861295938491821
    3. '_lists' → logprob: -4.411129474639893
    4. ' listes' → logprob: -5.286129474639893
    5. '[list' → logprob: -5.786129474639893
    6. 'liste' → logprob: -5.786129474639893
    7. '_list' → logprob: -6.786129474639893
    8. '(list' → logprob: -6.786129474639893
    9. ' lists' → logprob: -7.536129474639893
    10. 'listas' → logprob: -7.536129474639893

Token 731: '
' (ID: 198)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.027077391743659973
    2. 'def' → logprob: -4.0270771980285645
    3. 'for' → logprob: -4.9020771980285645
    4. '   ' → logprob: -7.2770771980285645
    5. '(' → logprob: -8.152077674865723
    6. ' for' → logprob: -9.027077674865723
    7. '[n' → logprob: -9.527077674865723
    8. ' (' → logprob: -9.777077674865723
    9. '[' → logprob: -9.902077674865723
    10. '```' → logprob: -9.902077674865723

Token 732: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.324495792388916
    2. 'def' → logprob: -1.699495792388916
    3. '(n' → logprob: -2.449495792388916
    4. 'return' → logprob: -5.074495792388916
    5. ' return' → logprob: -7.324495792388916
    6. '```' → logprob: -8.199495315551758
    7. '(' → logprob: -9.324495315551758
    8. '	return' → logprob: -9.324495315551758
    9. ':return' → logprob: -9.574495315551758
    10. 'for' → logprob: -9.574495315551758

Token 733: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007882476784288883
    2. ' return' → logprob: -5.007882595062256
    3. 'def' → logprob: -7.007882595062256
    4. '   ' → logprob: -8.257882118225098
    5. '	return' → logprob: -13.882882118225098
    6. '{return' → logprob: -14.257882118225098
    7. ':return' → logprob: -15.132882118225098
    8. '(return' → logprob: -15.257882118225098
    9. '[' → logprob: -15.882882118225098
    10. 'Return' → logprob: -16.757883071899414

Token 734: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.749814019713085e-06
    2. '[L' → logprob: -13.250006675720215
    3. '[S' → logprob: -13.250006675720215
    4. ' [' → logprob: -13.500006675720215
    5. '[list' → logprob: -13.750006675720215
    6. '[List' → logprob: -15.000006675720215
    7. '([' → logprob: -15.875006675720215
    8. '[[' → logprob: -16.50000762939453
    9. '	' → logprob: -17.37500762939453
    10. '(' → logprob: -17.37500762939453

Token 735: 'LS' (ID: 10172)
  Prédit: 'LS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -7.493430894101039e-05
    2. 'S' → logprob: -9.500075340270996
    3. 'ls' → logprob: -16.87507438659668
    4. ' LS' → logprob: -17.00007438659668
    5. 'SL' → logprob: -18.25007438659668
    6. 'SS' → logprob: -18.62507438659668
    7. 'L' → logprob: -18.62507438659668
    8. 'sys' → logprob: -19.00007438659668
    9. 'list' → logprob: -20.00007438659668
    10. 'Ls' → logprob: -20.62507438659668

Token 736: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5785238146781921
    2. '(n' → logprob: -0.8285238146781921
    3. '(i' → logprob: -6.078523635864258
    4. '(' → logprob: -8.453523635864258
    5. 'for' → logprob: -9.703523635864258
    6. '()(' → logprob: -11.828523635864258
    7. ' (' → logprob: -12.953523635864258
    8. '()
' → logprob: -13.203523635864258
    9. ' ()' → logprob: -14.078523635864258
    10. ' for' → logprob: -14.328523635864258

Token 737: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10164907574653625
    2. 'for' → logprob: -2.351649045944214
    3. ' for' → logprob: -6.601649284362793
    4. '(' → logprob: -9.851649284362793
    5. ' (' → logprob: -10.726649284362793
    6. '(i' → logprob: -11.976649284362793
    7. '(for' → logprob: -13.601649284362793
    8. 'n' → logprob: -14.476649284362793
    9. ')' → logprob: -15.601649284362793
    10. '   ' → logprob: -15.851649284362793

Token 738: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005550591740757227
    2. ' i' → logprob: -7.500555038452148
    3. '_' → logprob: -13.250555038452148
    4. '_i' → logprob: -15.250555038452148
    5. ' _' → logprob: -17.87555503845215
    6. ' ' → logprob: -18.25055503845215
    7. '	i' → logprob: -19.37555503845215
    8. 'range' → logprob: -19.37555503845215
    9. ' in' → logprob: -19.75055503845215
    10. 'in' → logprob: -20.37555503845215

Token 739: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6945466995239258
    2. ' in' → logprob: -0.6945466995239258
    3. 'range' → logprob: -7.069546699523926
    4. 'n' → logprob: -8.069546699523926
    5. '(n' → logprob: -8.819546699523926
    6. '(' → logprob: -10.819546699523926
    7. ' ' → logprob: -10.819546699523926
    8. ' range' → logprob: -11.444546699523926
    9. 'import' → logprob: -11.569546699523926
    10. '_' → logprob: -11.694546699523926

Token 740: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.842555426876061e-06
    2. ' range' → logprob: -12.250004768371582
    3. '(range' → logprob: -18.8750057220459
    4. '	range' → logprob: -21.8750057220459
    5. '
' → logprob: -24.3750057220459
    6. '   ' → logprob: -25.0000057220459
    7. 'Range' → logprob: -25.2500057220459
    8. '.range' → logprob: -26.3750057220459
    9. 'rang' → logprob: -26.3750057220459
    10. ' ' → logprob: -26.6250057220459

Token 741: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011052182875573635
    2. '(n' → logprob: -4.511052131652832
    3. ' n' → logprob: -12.511052131652832
    4. 'range' → logprob: -14.261052131652832
    5. '	n' → logprob: -17.13605308532715
    6. '(' → logprob: -18.13605308532715
    7. ' (' → logprob: -18.63605308532715
    8. '<n' → logprob: -18.63605308532715
    9. ',n' → logprob: -18.76105308532715
    10. '_n' → logprob: -19.13605308532715

Token 742: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.8550976164988242e-05
    2. '(n' → logprob: -11.375018119812012
    3. ')]
' → logprob: -12.375018119812012
    4. 'n' → logprob: -14.125018119812012
    5. ']' → logprob: -14.750018119812012
    6. '()' → logprob: -15.000018119812012
    7. '()]' → logprob: -15.125018119812012
    8. ')' → logprob: -15.250018119812012
    9. '())' → logprob: -15.375018119812012
    10. ' )' → logprob: -15.750018119812012

Token 743: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 744: ' SR' (ID: 30704)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10610208660364151
    2. 'input' → logprob: -2.9811019897460938
    3. 'M' → logprob: -4.731101989746094
    4. 'W' → logprob: -5.606101989746094
    5. 'WS' → logprob: -5.981101989746094
    6. 'MS' → logprob: -5.981101989746094
    7. 'print' → logprob: -5.981101989746094
    8. 'D' → logprob: -6.106101989746094
    9. 'LS' → logprob: -6.106101989746094
    10. 'MP' → logprob: -6.356101989746094

Token 745: 'L' (ID: 43)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.051415231078863144
    2. '(n' → logprob: -3.051415205001831
    3. '(' → logprob: -5.92641544342041
    4. 'r' → logprob: -9.55141544342041
    5. 'SR' → logprob: -11.05141544342041
    6. ' R' → logprob: -11.05141544342041
    7. 'def' → logprob: -11.30141544342041
    8. '```' → logprob: -11.92641544342041
    9. '1' → logprob: -12.42641544342041
    10. 'n' → logprob: -12.67641544342041

Token 746: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.500006675720215
    3. 'def' → logprob: -13.250006675720215
    4. 'n' → logprob: -13.750006675720215
    5. ' (' → logprob: -16.00000762939453
    6. '(
' → logprob: -16.62500762939453
    7. '():
' → logprob: -16.75000762939453
    8. '():' → logprob: -18.12500762939453
    9. '(s' → logprob: -18.37500762939453
    10. '(num' → logprob: -18.37500762939453

Token 747: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01699749194085598
    2. '):
' → logprob: -4.516997337341309
    3. '(n' → logprob: -5.266997337341309
    4. ')' → logprob: -7.266997337341309
    5. 'n' → logprob: -9.891997337341309
    6. '):
' → logprob: -11.641997337341309
    7. 'def' → logprob: -12.266997337341309
    8. ' ):' → logprob: -13.016997337341309
    9. '=' → logprob: -13.141997337341309
    10. '):

' → logprob: -13.391997337341309

Token 748: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0031610876321792603
    2. 'def' → logprob: -5.8781609535217285
    3. 'n' → logprob: -9.378161430358887
    4. '(S' → logprob: -9.628161430358887
    5. '   ' → logprob: -9.878161430358887
    6. '#' → logprob: -9.878161430358887
    7. ':' → logprob: -10.253161430358887
    8. ' def' → logprob: -11.128161430358887
    9. '(' → logprob: -11.378161430358887
    10. '(
' → logprob: -11.503161430358887

Token 749: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16892538964748383
    2. 'def' → logprob: -2.0439252853393555
    3. ' return' → logprob: -4.7939252853393555
    4. '[S' → logprob: -4.7939252853393555
    5. '   ' → logprob: -5.1689252853393555
    6. '#' (adapté à ' #') → logprob: -6.5439252853393555
    7. '[' → logprob: -6.9189252853393555
    8. '[n' → logprob: -7.9189252853393555
    9. 'S' → logprob: -8.043925285339355
    10. '(S' → logprob: -9.043925285339355

Token 750: ' Lis' (ID: 29571)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03508869931101799
    2. '#' → logprob: -3.6600887775421143
    3. 'return' → logprob: -5.160088539123535
    4. 'LS' → logprob: -7.160088539123535
    5. 'S' → logprob: -7.410088539123535
    6. 'SR' → logprob: -7.785088539123535
    7. '
' → logprob: -7.785088539123535
    8. ' def' → logprob: -8.160088539123535
    9. '[' → logprob: -8.660088539123535
    10. '[S' → logprob: -9.285088539123535

Token 751: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3989138901233673
    2. '[n' → logprob: -1.523913860321045
    3. 'n' → logprob: -2.398913860321045
    4. 'def' → logprob: -5.273913860321045
    5. '[' → logprob: -5.648913860321045
    6. '[int' → logprob: -5.648913860321045
    7. 'S' → logprob: -5.898913860321045
    8. 'int' → logprob: -6.148913860321045
    9. 's' → logprob: -6.398913860321045
    10. ' n' → logprob: -7.898913860321045

Token 752: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2188018411397934
    2. 's' → logprob: -2.218801736831665
    3. 'S' → logprob: -3.093801736831665
    4. 'ines' → logprob: -3.593801736831665
    5. 'def' → logprob: -6.218801975250244
    6. '(s' → logprob: -6.343801975250244
    7. '<|end|>' → logprob: -6.468801975250244
    8. 'n' → logprob: -6.843801975250244
    9. 'SR' → logprob: -6.843801975250244
    10. '(' → logprob: -6.968801975250244

Token 753: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00502382917329669
    2. 'def' → logprob: -5.630023956298828
    3. '(' → logprob: -6.755023956298828
    4. 's' → logprob: -9.880023956298828
    5. 'n' → logprob: -9.880023956298828
    6. 'S' → logprob: -10.005023956298828
    7. '(s' → logprob: -10.380023956298828
    8. 'for' → logprob: -11.130023956298828
    9. ' (' → logprob: -11.755023956298828
    10. 'L' → logprob: -11.880023956298828

Token 754: ' dont' (ID: 11562)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05725616589188576
    2. '   ' → logprob: -3.9322562217712402
    3. '[' → logprob: -4.18225622177124
    4. 'each' → logprob: -5.18225622177124
    5. '#' → logprob: -5.43225622177124
    6. 'SR' → logprob: -5.68225622177124
    7. ' def' → logprob: -6.68225622177124
    8. 'S' → logprob: -6.68225622177124
    9. 'return' → logprob: -6.80725622177124
    10. 'LS' → logprob: -7.18225622177124

Token 755: ' chacune' (ID: 127465)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.14641498029232025
    2. 'cha' → logprob: -2.1464149951934814
    3. 'each' → logprob: -4.146414756774902
    4. 'les' → logprob: -6.521414756774902
    5. ' chacune' → logprob: -6.521414756774902
    6. 'la' → logprob: -8.896414756774902
    7. 'certain' → logprob: -9.021414756774902
    8. 'le' → logprob: -9.771414756774902
    9. '```' → logprob: -10.396414756774902
    10. 'l' → logprob: -10.396414756774902

Token 756: ' est' (ID: 893)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1479796171188354
    2. '()' → logprob: -1.2729796171188354
    3. 's' → logprob: -2.022979736328125
    4. '=' → logprob: -2.647979736328125
    5. ' =' → logprob: -2.897979736328125
    6. 'rstrip' → logprob: -3.022979736328125
    7. '.rstrip' → logprob: -4.022979736328125
    8. 'return' → logprob: -4.022979736328125
    9. 'def' → logprob: -4.147979736328125
    10. 'est' → logprob: -4.272979736328125

Token 757: ' convert' (ID: 8452)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.2806325852870941
    2. 'S' → logprob: -2.155632495880127
    3. 'list' → logprob: -2.405632495880127
    4. 'LS' → logprob: -4.280632495880127
    5. 'liste' → logprob: -4.280632495880127
    6. ' une' → logprob: -5.905632495880127
    7. 'ls' → logprob: -6.530632495880127
    8. 's' → logprob: -6.655632495880127
    9. 'un' → logprob: -6.905632495880127
    10. 'rstrip' → logprob: -7.280632495880127

Token 758: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0005377820343710482
    2. 'ies' → logprob: -7.750537872314453
    3. 'i' → logprob: -9.250537872314453
    4. 'e' → logprob: -12.750537872314453
    5. '```' → logprob: -13.250537872314453
    6. '#' → logprob: -14.000537872314453
    7. '=' → logprob: -14.375537872314453
    8. 'it' → logprob: -14.375537872314453
    9. '
' → logprob: -14.500537872314453
    10. 'ite' → logprob: -14.750537872314453

Token 759: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.02063683234155178
    2. ' en' → logprob: -4.020637035369873
    3. 'def' → logprob: -7.520637035369873
    4. 'list' → logprob: -7.520637035369873
    5. '(en' → logprob: -8.145636558532715
    6. '_en' → logprob: -8.270636558532715
    7. '```' → logprob: -8.770636558532715
    8. '()' → logprob: -8.770636558532715
    9. 'à' → logprob: -8.895636558532715
    10. 's' → logprob: -9.395636558532715

Token 760: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.21670757234096527
    2. 'str' → logprob: -1.9667075872421265
    3. 'string' → logprob: -3.216707468032837
    4. 'liste' → logprob: -4.591707706451416
    5. 'S' → logprob: -6.091707706451416
    6. 's' → logprob: -7.091707706451416
    7. 'une' → logprob: -7.216707706451416
    8. '[str' → logprob: -8.466707229614258
    9. 'chaine' → logprob: -8.591707229614258
    10. ' list' → logprob: -9.216707229614258

Token 761: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0662784576416016
    2. '<|end|>' → logprob: -1.4412784576416016
    3. 's' → logprob: -1.5662784576416016
    4. '()' → logprob: -2.4412784576416016
    5. '[str' → logprob: -4.191278457641602
    6. '(' → logprob: -4.316278457641602
    7. '(lambda' → logprob: -4.566278457641602
    8. '(S' → logprob: -4.566278457641602
    9. '(list' → logprob: -4.691278457641602
    10. '[]' → logprob: -4.691278457641602

Token 762: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.04822267219424248
    2. 'strings' → logprob: -3.298222780227661
    3. 'm' → logprob: -4.923222541809082
    4. 'string' → logprob: -6.173222541809082
    5. 'list' → logprob: -8.173222541809082
    6. 'chaine' → logprob: -9.423222541809082
    7. 'chain' → logprob: -9.548222541809082
    8. 'int' → logprob: -9.673222541809082
    9. ' chaînes' → logprob: -10.173222541809082
    10. 'mot' → logprob: -10.298222541809082

Token 763: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10548362135887146
    2. '(n' → logprob: -2.4804835319519043
    3. '   ' → logprob: -4.355483531951904
    4. '(S' → logprob: -6.605483531951904
    5. ' def' → logprob: -6.855483531951904
    6. '(' → logprob: -7.730483531951904
    7. 'S' → logprob: -8.355484008789062
    8. '(def' → logprob: -8.480484008789062
    9. '(s' → logprob: -9.355484008789062
    10. 's' → logprob: -9.855484008789062

Token 764: 'cha' (ID: 3836)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4881076514720917
    2. 'S' → logprob: -1.238107681274414
    3. ' def' → logprob: -3.238107681274414
    4. 'return' → logprob: -3.613107681274414
    5. ')' → logprob: -4.238107681274414
    6. ' return' → logprob: -5.238107681274414
    7. ' S' → logprob: -5.988107681274414
    8. 'lambda' → logprob: -6.238107681274414
    9. 's' → logprob: -6.363107681274414
    10. '   ' → logprob: -6.488107681274414

Token 765: 'que' (ID: 1126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11570288240909576
    2. 'r' → logprob: -2.6157028675079346
    3. 'rs' → logprob: -4.365703105926514
    4. '   ' → logprob: -4.865703105926514
    5. ' def' → logprob: -4.990703105926514
    6. 's' → logprob: -5.115703105926514
    7. 'ar' → logprob: -7.365703105926514
    8. 'st' → logprob: -7.865703105926514
    9. ' =' → logprob: -8.740702629089355
    10. 'rst' → logprob: -8.865702629089355

Token 766: ' caractère' (ID: 80509)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.530800998210907
    2. 'S' → logprob: -1.6558010578155518
    3. 'def' → logprob: -2.9058010578155518
    4. ')' → logprob: -2.9058010578155518
    5. ' line' → logprob: -3.6558010578155518
    6. 's' → logprob: -3.9058010578155518
    7. '=' → logprob: -4.280800819396973
    8. '   ' → logprob: -4.655800819396973
    9. ' =' → logprob: -5.030800819396973
    10. '()' → logprob: -5.530800819396973

Token 767: ' devient' (ID: 63488)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3375703692436218
    2. ')' → logprob: -1.5875704288482666
    3. '())' → logprob: -3.0875704288482666
    4. 'def' → logprob: -3.7125704288482666
    5. '()]' → logprob: -5.4625701904296875
    6. '()
' → logprob: -6.5875701904296875
    7. '():
' → logprob: -7.0875701904296875
    8. 's' → logprob: -7.2125701904296875
    9. '()[' → logprob: -7.4625701904296875
    10. '   ' → logprob: -7.5875701904296875

Token 768: ' un' (ID: 537)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.029803840443491936
    2. 'S' → logprob: -3.52980375289917
    3. ' list' → logprob: -10.529804229736328
    4. 's' → logprob: -10.779804229736328
    5. ' S' → logprob: -13.404804229736328
    6. '```' → logprob: -13.404804229736328
    7. '
' → logprob: -13.779804229736328
    8. 'str' → logprob: -14.779804229736328
    9. '(list' → logprob: -15.154804229736328
    10. 'string' → logprob: -15.529804229736328

Token 769: ' élément' (ID: 99627)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01192296203225851
    2. 'string' → logprob: -4.636922836303711
    3. 'str' → logprob: -6.636922836303711
    4. 's' → logprob: -8.136922836303711
    5. ' list' → logprob: -8.136922836303711
    6. 'token' → logprob: -9.011922836303711
    7. '```' → logprob: -10.011922836303711
    8. 'liste' → logprob: -10.136922836303711
    9. 'S' → logprob: -10.511922836303711
    10. 'char' → logprob: -11.761922836303711

Token 770: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7698871493339539
    2. '()' → logprob: -1.7698872089385986
    3. ')
' → logprob: -2.2698872089385986
    4. '   ' → logprob: -2.6448872089385986
    5. 'def' → logprob: -2.6448872089385986
    6. '):
' → logprob: -3.3948872089385986
    7. ']' → logprob: -3.7698872089385986
    8. '()
' → logprob: -3.8948872089385986
    9. 's' → logprob: -5.2698869705200195
    10. '():
' → logprob: -5.2698869705200195

Token 771: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21689508855342865
    2. '   ' → logprob: -1.7168951034545898
    3. '(n' → logprob: -4.34189510345459
    4. '```' → logprob: -6.59189510345459
    5. ' def' → logprob: -7.34189510345459
    6. 'return' → logprob: -9.21689510345459
    7. '(S' → logprob: -9.84189510345459
    8. '(' → logprob: -10.09189510345459
    9. '``' → logprob: -11.09189510345459
    10. ':' → logprob: -11.34189510345459

Token 772: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02928301878273487
    2. '   ' → logprob: -4.279283046722412
    3. ' return' → logprob: -4.779283046722412
    4. 'def' → logprob: -5.029283046722412
    5. '[S' → logprob: -10.029282569885254
    6. '[' → logprob: -11.779282569885254
    7. 'S' → logprob: -12.904282569885254
    8. '	return' → logprob: -13.279282569885254
    9. '```' → logprob: -13.779282569885254
    10. '
' → logprob: -13.779282569885254

Token 773: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.13884443044662476
    2. '[' → logprob: -2.6388444900512695
    3. '[list' → logprob: -2.8888444900512695
    4. '[List' → logprob: -6.1388444900512695
    5. ' [' → logprob: -8.13884449005127
    6. 'list' → logprob: -10.13884449005127
    7. '[[' → logprob: -10.88884449005127
    8. '[s' → logprob: -11.13884449005127
    9. '[String' → logprob: -11.13884449005127
    10. '[string' → logprob: -12.51384449005127

Token 774: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.320199877838604e-07
    2. '[list' → logprob: -15.25
    3. 'S' → logprob: -15.75
    4. '(list' → logprob: -16.875
    5. ' list' → logprob: -17.0
    6. 'sys' → logprob: -20.75
    7. 's' → logprob: -20.875
    8. '=list' → logprob: -21.0
    9. '
' → logprob: -21.375
    10. '[S' → logprob: -21.625

Token 775: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.625007629394531
    3. '(s' → logprob: -12.875007629394531
    4. 'S' → logprob: -13.750007629394531
    5. '(str' → logprob: -16.00000762939453
    6. '()' → logprob: -17.37500762939453
    7. '(range' → logprob: -17.75000762939453
    8. '(map' → logprob: -18.12500762939453
    9. 's' → logprob: -18.25000762939453
    10. '((' → logprob: -18.62500762939453

Token 776: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06212352216243744
    2. '()' → logprob: -2.8121235370635986
    3. '().' → logprob: -9.31212329864502
    4. '()]' → logprob: -10.68712329864502
    5. '()[' → logprob: -11.18712329864502
    6. ' ())' → logprob: -12.18712329864502
    7. '())[' → logprob: -12.68712329864502
    8. '()(' → logprob: -12.68712329864502
    9. '())
' → logprob: -12.81212329864502
    10. '()`' → logprob: -12.93712329864502

Token 777: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.33317098021507263
    2. 'for' → logprob: -1.333171010017395
    3. ' for' → logprob: -3.9581708908081055
    4. '()' → logprob: -8.333170890808105
    5. '(' → logprob: -8.833170890808105
    6. '   ' → logprob: -9.208170890808105
    7. '(for' → logprob: -9.833170890808105
    8. ' (' → logprob: -10.458170890808105
    9. '(i' → logprob: -10.583170890808105
    10. ')' → logprob: -11.333170890808105

Token 778: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005829381989315152
    2. '_' → logprob: -7.500583171844482
    3. ' i' → logprob: -10.625582695007324
    4. '_i' → logprob: -12.125582695007324
    5. 'range' → logprob: -15.500582695007324
    6. ' _' → logprob: -16.75058364868164
    7. ' range' → logprob: -17.75058364868164
    8. '_range' → logprob: -18.87558364868164
    9. ' ' → logprob: -19.37558364868164
    10. '
' → logprob: -19.75058364868164

Token 779: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6936442852020264
    2. ' in' → logprob: -0.6936442852020264
    3. 'range' → logprob: -8.193644523620605
    4. 'n' → logprob: -9.693644523620605
    5. '(' → logprob: -9.943644523620605
    6. '(n' → logprob: -10.193644523620605
    7. ' ' → logprob: -10.568644523620605
    8. 'i' → logprob: -11.943644523620605
    9. ' (' → logprob: -11.943644523620605
    10. '(in' → logprob: -12.068644523620605

Token 780: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.8624639324116288e-06
    2. ' range' → logprob: -13.250001907348633
    3. '(range' → logprob: -21.625001907348633
    4. '	range' → logprob: -22.750001907348633
    5. '
' → logprob: -24.250001907348633
    6. '_range' → logprob: -24.375001907348633
    7. 'rang' → logprob: -25.375001907348633
    8. 'Range' → logprob: -25.375001907348633
    9. 'in' → logprob: -25.500001907348633
    10. '   ' → logprob: -26.125001907348633

Token 781: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0014209493529051542
    2. '(n' → logprob: -7.001420974731445
    3. '(range' → logprob: -7.751420974731445
    4. ' range' → logprob: -9.501420974731445
    5. 'n' → logprob: -12.376420974731445
    6. '(' → logprob: -15.251420974731445
    7. '	range' → logprob: -17.751420974731445
    8. 'Range' → logprob: -19.126420974731445
    9. 'in' → logprob: -19.626420974731445
    10. '_range' → logprob: -19.751420974731445

Token 782: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.796184723294573e-06
    2. ')' → logprob: -13.000005722045898
    3. ']' → logprob: -14.000005722045898
    4. ')]
' → logprob: -14.250005722045898
    5. 'n' → logprob: -14.625005722045898
    6. ' )' → logprob: -14.625005722045898
    7. '(n' → logprob: -15.000005722045898
    8. 'range' → logprob: -15.125005722045898
    9. '])]' → logprob: -16.2500057220459
    10. '   ' → logprob: -16.3750057220459

Token 783: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 784: ' MS' (ID: 15861)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3434690237045288
    2. 'DR' → logprob: -2.4684691429138184
    3. 'WS' → logprob: -3.2184691429138184
    4. 'D' → logprob: -3.4684691429138184
    5. 'input' → logprob: -3.7184691429138184
    6. 'I' → logprob: -4.593469142913818
    7. 'DS' → logprob: -4.718469142913818
    8. 'MS' → logprob: -4.968469142913818
    9. 'LS' → logprob: -5.218469142913818
    10. 'E' → logprob: -5.218469142913818

Token 785: 'RL' (ID: 40408)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.3445779085159302
    2. '()' → logprob: -1.3445779085159302
    3. '():' → logprob: -4.594577789306641
    4. '():
' → logprob: -4.719577789306641
    5. '(n' → logprob: -5.594577789306641
    6. '(' → logprob: -5.594577789306641
    7. '()>' → logprob: -6.844577789306641
    8. 'A' → logprob: -6.969577789306641
    9. 'V' → logprob: -7.719577789306641
    10. 'E' → logprob: -7.719577789306641

Token 786: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -13.250004768371582
    3. 'def' → logprob: -13.250004768371582
    4. ' (' → logprob: -13.500004768371582
    5. ' =' → logprob: -16.7500057220459
    6. 'n' → logprob: -16.7500057220459
    7. '(
' → logprob: -18.0000057220459
    8. '=' → logprob: -18.1250057220459
    9. '():' → logprob: -18.2500057220459
    10. ' def' → logprob: -18.3750057220459

Token 787: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5781813263893127
    2. '):
' → logprob: -0.8281813263893127
    3. '(n' → logprob: -6.203181266784668
    4. ')' → logprob: -8.828181266784668
    5. '):
' → logprob: -10.078181266784668
    6. 'def' → logprob: -11.078181266784668
    7. '():
' → logprob: -12.578181266784668
    8. '):

' → logprob: -12.828181266784668
    9. ' ):' → logprob: -13.703181266784668
    10. 'n' → logprob: -14.078181266784668

Token 788: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.24362781643867493
    2. 'def' → logprob: -1.7436277866363525
    3. '   ' → logprob: -3.2436277866363525
    4. ' def' → logprob: -6.618628025054932
    5. ':
' → logprob: -7.993628025054932
    6. ':' → logprob: -8.493627548217773
    7. 'n' → logprob: -8.993627548217773
    8. '#' → logprob: -9.243627548217773
    9. '(' → logprob: -9.868627548217773
    10. '(def' → logprob: -10.743627548217773

Token 789: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02286524325609207
    2. 'return' → logprob: -4.022865295410156
    3. '#' (adapté à ' #') → logprob: -5.647865295410156
    4. '[' → logprob: -8.397865295410156
    5. ' def' → logprob: -8.897865295410156
    6. '
' → logprob: -9.522865295410156
    7. '   ' → logprob: -9.522865295410156
    8. 'for' → logprob: -9.647865295410156
    9. 'list' → logprob: -9.772865295410156
    10. '[List' → logprob: -9.772865295410156

Token 790: ' Lis' (ID: 29571)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002103155944496393
    2. '#' → logprob: -6.377103328704834
    3. 'from' → logprob: -8.252102851867676
    4. ' def' → logprob: -9.627102851867676
    5. 'MS' → logprob: -10.252102851867676
    6. 'LS' → logprob: -10.877102851867676
    7. 'return' → logprob: -11.502102851867676
    8. '
' → logprob: -13.127102851867676
    9. 'M' → logprob: -13.252102851867676
    10. 'Matrix' → logprob: -13.752102851867676

Token 791: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39567503333091736
    2. '(n' → logprob: -1.6456750631332397
    3. '[n' → logprob: -2.02067494392395
    4. ' n' → logprob: -7.895675182342529
    5. '[int' → logprob: -8.020674705505371
    6. 'm' → logprob: -8.520674705505371
    7. 'int' → logprob: -9.020674705505371
    8. '[' → logprob: -9.145674705505371
    9. 'def' → logprob: -9.520674705505371
    10. 'list' → logprob: -9.645674705505371

Token 792: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5843401551246643
    2. 'def' → logprob: -1.7093400955200195
    3. 'S' → logprob: -2.4593400955200195
    4. 's' → logprob: -2.8343400955200195
    5. 'list' → logprob: -3.4593400955200195
    6. 'SR' → logprob: -3.8343400955200195
    7. '[' → logprob: -4.5843400955200195
    8. '()' → logprob: -4.9593400955200195
    9. '(list' → logprob: -4.9593400955200195
    10. '[n' → logprob: -5.3343400955200195

Token 793: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08758499473333359
    2. '(' → logprob: -3.337584972381592
    3. 'def' → logprob: -3.587584972381592
    4. '(S' → logprob: -4.837584972381592
    5. 'for' → logprob: -4.962584972381592
    6. '(M' → logprob: -6.462584972381592
    7. '(lambda' → logprob: -7.087584972381592
    8. '[' → logprob: -7.587584972381592
    9. '   ' → logprob: -7.712584972381592
    10. '(list' → logprob: -8.46258544921875

Token 794: ' chiffres' (ID: 105565)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00658428156748414
    2. 'str' → logprob: -6.006584167480469
    3. 'strings' → logprob: -6.631584167480469
    4. 'S' → logprob: -6.756584167480469
    5. 'liste' → logprob: -7.381584167480469
    6. 'lists' → logprob: -7.631584167480469
    7. 'string' → logprob: -8.381584167480469
    8. ' list' → logprob: -9.506584167480469
    9. 'LS' → logprob: -10.131584167480469
    10. 'MS' → logprob: -10.131584167480469

Token 795: ' sous' (ID: 14487)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5783773064613342
    2. '()' → logprob: -0.8283773064613342
    3. 'def' → logprob: -7.2033772468566895
    4. '(' → logprob: -7.4533772468566895
    5. '()[' → logprob: -8.203377723693848
    6. 'for' → logprob: -8.953377723693848
    7. '():
' → logprob: -9.703377723693848
    8. '().' → logprob: -9.703377723693848
    9. '()(' → logprob: -9.703377723693848
    10. '()
' → logprob: -9.828377723693848

Token 796: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.3717832863330841
    2. 'chaine' → logprob: -1.3717832565307617
    3. ' forme' → logprob: -3.7467832565307617
    4. 'cha' → logprob: -4.246783256530762
    5. 'string' → logprob: -4.871783256530762
    6. 'form' → logprob: -5.496783256530762
    7. 'str' → logprob: -5.746783256530762
    8. 'la' → logprob: -6.621783256530762
    9. 'format' → logprob: -6.871783256530762
    10. 'chain' → logprob: -7.496783256530762

Token 797: ' de' (ID: 334)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.264670193195343
    2. 'list' → logprob: -1.8896701335906982
    3. '=list' → logprob: -3.7646701335906982
    4. 'de' → logprob: -3.8896701335906982
    5. '[str' → logprob: -4.139670372009277
    6. '=str' → logprob: -4.264670372009277
    7. 'string' → logprob: -6.389670372009277
    8. 'strings' → logprob: -6.389670372009277
    9. 'def' → logprob: -7.014670372009277
    10. '(list' → logprob: -7.139670372009277

Token 798: ' texte' (ID: 53492)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7739250659942627
    2. 'strings' → logprob: -1.2739250659942627
    3. 'str' → logprob: -1.7739250659942627
    4. 'string' → logprob: -2.5239250659942627
    5. 'S' → logprob: -4.773924827575684
    6. 'lists' → logprob: -8.148924827575684
    7. 'liste' → logprob: -8.398924827575684
    8. 's' → logprob: -9.148924827575684
    9. 'chaine' → logprob: -9.273924827575684
    10. ' list' → logprob: -10.398924827575684

Token 799: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.061018891632556915
    2. '   ' → logprob: -3.311018943786621
    3. 'def' → logprob: -3.936018943786621
    4. '(' → logprob: -5.936018943786621
    5. ' (' → logprob: -8.561018943786621
    6. '(S' → logprob: -9.061018943786621
    7. '(def' → logprob: -10.436018943786621
    8. 'return' → logprob: -10.686018943786621
    9. '(N' → logprob: -10.686018943786621
    10. 'for' → logprob: -10.686018943786621

Token 800: ' transforme' (ID: 184109)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17913250625133514
    2. ' return' → logprob: -2.5541324615478516
    3. '   ' → logprob: -2.6791324615478516
    4. 'def' → logprob: -4.054132461547852
    5. '#' → logprob: -9.304132461547852
    6. ' def' → logprob: -10.304132461547852
    7. '    ' → logprob: -10.554132461547852
    8. '  ' → logprob: -10.679132461547852
    9. '
' → logprob: -11.304132461547852
    10. ' ' → logprob: -11.929132461547852

Token 801: ' chaque' (ID: 21194)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.01898520067334175
    2. '[int' → logprob: -4.893985271453857
    3. '[str' → logprob: -5.143985271453857
    4. '[' → logprob: -5.518985271453857
    5. '[List' → logprob: -7.393985271453857
    6. '[[' → logprob: -8.0189847946167
    7. '[S' → logprob: -8.6439847946167
    8. 'list' → logprob: -8.7689847946167
    9. '(list' → logprob: -10.0189847946167
    10. '[i' → logprob: -10.8939847946167

Token 802: ' caractère' (ID: 80509)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.14308767020702362
    2. '(list' → logprob: -3.51808762550354
    3. 'line' → logprob: -4.018087863922119
    4. 'ligne' → logprob: -4.018087863922119
    5. '(S' → logprob: -4.268087863922119
    6. 'S' → logprob: -4.393087863922119
    7. '[str' → logprob: -4.893087863922119
    8. '[S' → logprob: -5.018087863922119
    9. '(str' → logprob: -5.268087863922119
    10. '[' → logprob: -5.518087863922119

Token 803: ' de' (ID: 334)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.7140641808509827
    2. 'for' → logprob: -1.839064121246338
    3. ' en' → logprob: -2.089064121246338
    4. 'in' → logprob: -2.089064121246338
    5. 's' → logprob: -3.714064121246338
    6. 'int' → logprob: -3.964064121246338
    7. 'into' → logprob: -4.089064121246338
    8. 'lambda' → logprob: -4.589064121246338
    9. 'list' → logprob: -4.839064121246338
    10. '(lambda' → logprob: -5.714064121246338

Token 804: ' chaque' (ID: 21194)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.392046719789505
    2. 'list' → logprob: -1.1420466899871826
    3. ' list' → logprob: -5.642046928405762
    4. ' S' → logprob: -6.642046928405762
    5. 'input' → logprob: -9.767046928405762
    6. 'str' → logprob: -9.892046928405762
    7. 'liste' → logprob: -9.892046928405762
    8. 'l' → logprob: -10.267046928405762
    9. 'la' → logprob: -10.642046928405762
    10. '```' → logprob: -11.017046928405762

Token 805: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.35986924171447754
    2. 'S' → logprob: -1.3598692417144775
    3. 'line' → logprob: -3.7348692417144775
    4. 'list' → logprob: -4.109869003295898
    5. 'liste' → logprob: -5.484869003295898
    6. 'chaine' → logprob: -7.734869003295898
    7. ' ligne' → logprob: -7.734869003295898
    8. 'string' → logprob: -9.484869003295898
    9. 'l' → logprob: -10.234869003295898
    10. ' S' → logprob: -10.984869003295898

Token 806: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6954714059829712
    2. 'for' → logprob: -1.0704714059829712
    3. '=' → logprob: -3.0704712867736816
    4. ' =' → logprob: -4.070471286773682
    5. '=lambda' → logprob: -4.320471286773682
    6. '=list' → logprob: -4.570471286773682
    7. 'in' → logprob: -4.695471286773682
    8. 'lambda' → logprob: -4.820471286773682
    9. 'list' → logprob: -4.945471286773682
    10. 'def' → logprob: -4.945471286773682

Token 807: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00017386233957950026
    2. 'list' → logprob: -9.375173568725586
    3. '[int' → logprob: -9.625173568725586
    4. ' int' → logprob: -11.250173568725586
    5. 'ent' → logprob: -12.625173568725586
    6. 'liste' → logprob: -13.125173568725586
    7. '(int' → logprob: -13.500173568725586
    8. 'integer' → logprob: -13.625173568725586
    9. 'un' → logprob: -14.125173568725586
    10. 'une' → logprob: -14.875173568725586

Token 808: ',
' (ID: 412)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8119262456893921
    2. 'for' → logprob: -1.311926245689392
    3. '(
' → logprob: -1.936926245689392
    4. '   ' → logprob: -2.9369263648986816
    5. 'def' → logprob: -3.1869263648986816
    6. '(S' → logprob: -4.811926364898682
    7. '(list' → logprob: -5.061926364898682
    8. '([' → logprob: -5.311926364898682
    9. '[' → logprob: -5.561926364898682
    10. ']' → logprob: -5.811926364898682

Token 809: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13067924976348877
    2. ' def' → logprob: -2.130679130554199
    3. '   ' → logprob: -6.255679130554199
    4. ' return' → logprob: -7.505679130554199
    5. 'return' → logprob: -7.630679130554199
    6. ' lambda' → logprob: -7.755679130554199
    7. 'lambda' → logprob: -8.1306791305542
    8. '    ' → logprob: -10.8806791305542
    9. '=lambda' → logprob: -11.6306791305542
    10. '       ' → logprob: -12.3806791305542

Token 810: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21543188393115997
    2. 'def' → logprob: -1.7154319286346436
    3. ' return' → logprob: -4.3404316902160645
    4. ' def' → logprob: -7.3404316902160645
    5. '   ' → logprob: -9.340432167053223
    6. 'lambda' → logprob: -10.090432167053223
    7. 'and' → logprob: -11.215432167053223
    8. '
' → logprob: -11.215432167053223
    9. 'result' → logprob: -11.340432167053223
    10. '       ' → logprob: -11.465432167053223

Token 811: ' puis' (ID: 18766)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22949360311031342
    2. 'return' → logprob: -1.7294936180114746
    3. '   ' → logprob: -4.104493618011475
    4. ' return' → logprob: -4.854493618011475
    5. ' def' → logprob: -5.854493618011475
    6. '#' → logprob: -8.354493141174316
    7. ' ' → logprob: -9.729493141174316
    8. '    ' → logprob: -9.854493141174316
    9. '  ' → logprob: -10.229493141174316
    10. '
' → logprob: -10.604493141174316

Token 812: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.34042248129844666
    2. '[' → logprob: -1.590422511100769
    3. '[list' → logprob: -3.0904223918914795
    4. ' [' → logprob: -4.340422630310059
    5. '[
' → logprob: -4.965422630310059
    6. '[[' → logprob: -5.465422630310059
    7. '[m' → logprob: -5.590422630310059
    8. ' return' → logprob: -5.965422630310059
    9. '[row' → logprob: -6.715422630310059
    10. '   ' → logprob: -7.090422630310059

Token 813: ' la' (ID: 557)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.26350662112236023
    2. '[list' → logprob: -1.7635066509246826
    3. '[' → logprob: -3.0135066509246826
    4. '[int' → logprob: -5.2635064125061035
    5. '[m' → logprob: -6.0135064125061035
    6. '[np' → logprob: -6.3885064125061035
    7. '[List' → logprob: -7.2635064125061035
    8. '[array' → logprob: -8.138506889343262
    9. '[num' → logprob: -8.388506889343262
    10. '[i' → logprob: -9.388506889343262

Token 814: ' liste' (ID: 31719)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.18096286058425903
    2. '[list' → logprob: -1.9309628009796143
    3. '[' → logprob: -4.180963039398193
    4. '[int' → logprob: -6.430963039398193
    5. '[
' → logprob: -6.555963039398193
    6. '[m' → logprob: -7.180963039398193
    7. '[List' → logprob: -7.305963039398193
    8. '[i' → logprob: -8.805962562561035
    9. '[num' → logprob: -9.180962562561035
    10. '[np' → logprob: -9.305962562561035

Token 815: ' de' (ID: 334)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.04936718940734863
    2. '[
' → logprob: -3.4243671894073486
    3. '([[' → logprob: -4.6743669509887695
    4. '[' → logprob: -5.4243669509887695
    5. '[list' → logprob: -7.0493669509887695
    6. 'of' → logprob: -8.04936695098877
    7. '[int' → logprob: -8.29936695098877
    8. '[List' → logprob: -9.29936695098877
    9. '   ' → logprob: -9.42436695098877
    10. '([' → logprob: -9.54936695098877

Token 816: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8724231123924255
    2. '[[' → logprob: -0.8724231123924255
    3. '[n' → logprob: -2.6224231719970703
    4. 'lists' → logprob: -3.1224231719970703
    5. '[list' → logprob: -3.8724231719970703
    6. '[' → logprob: -4.49742317199707
    7. 'n' → logprob: -5.12242317199707
    8. 'liste' → logprob: -5.87242317199707
    9. '[
' → logprob: -6.12242317199707
    10. '[l' → logprob: -6.74742317199707

Token 817: ' résult' (ID: 31657)
  Prédit: '([['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([[' → logprob: -0.11633967608213425
    2. '[[' → logprob: -2.616339683532715
    3. '([' → logprob: -3.616339683532715
    4. '[int' → logprob: -6.241339683532715
    5. '(
' → logprob: -6.366339683532715
    6. '(int' → logprob: -6.491339683532715
    7. '(list' → logprob: -6.866339683532715
    8. '(' → logprob: -6.866339683532715
    9. 'of' → logprob: -7.116339683532715
    10. '([
' → logprob: -7.116339683532715

Token 818: 'antes' (ID: 5193)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7496750354766846
    2. '[n' → logprob: -1.8746750354766846
    3. '(n' → logprob: -2.1246750354766846
    4. '([' → logprob: -2.2496750354766846
    5. '[int' → logprob: -2.2496750354766846
    6. '[' → logprob: -2.3746750354766846
    7. '([[' → logprob: -3.4996750354766846
    8. '[[' → logprob: -3.8746750354766846
    9. 'def' → logprob: -3.8746750354766846
    10. '=' → logprob: -4.2496747970581055

Token 819: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3332875669002533
    2. '(' → logprob: -1.8332875967025757
    3. '(n' → logprob: -3.083287477493286
    4. 'def' → logprob: -3.333287477493286
    5. 'return' → logprob: -3.958287477493286
    6. '(
' → logprob: -5.083287715911865
    7. '(int' → logprob: -5.958287715911865
    8. '([' → logprob: -5.958287715911865
    9. '([[' → logprob: -6.083287715911865
    10. '(range' → logprob: -6.458287715911865

Token 820: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.349452406167984
    2. '   ' → logprob: -1.3494523763656616
    3. 'return' → logprob: -3.474452495574951
    4. ' return' → logprob: -6.349452495574951
    5. '```' → logprob: -6.849452495574951
    6. ' =' → logprob: -7.724452495574951
    7. '=' → logprob: -7.849452495574951
    8. '(n' → logprob: -8.224452018737793
    9. ' def' → logprob: -8.599452018737793
    10. '	return' → logprob: -9.099452018737793

Token 821: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003265530103817582
    2. ' return' → logprob: -5.753265380859375
    3. '   ' → logprob: -9.628265380859375
    4. 'def' → logprob: -10.753265380859375
    5. '{return' → logprob: -15.378265380859375
    6. '```' → logprob: -15.753265380859375
    7. '	return' → logprob: -15.878265380859375
    8. ':return' → logprob: -16.753265380859375
    9. '
' → logprob: -17.128265380859375
    10. 'eturn' → logprob: -19.503265380859375

Token 822: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.040948040783405304
    2. '[' → logprob: -3.7909481525421143
    3. '[list' → logprob: -4.540947914123535
    4. '[L' → logprob: -5.165947914123535
    5. '[List' → logprob: -6.915947914123535
    6. '[int' → logprob: -9.165947914123535
    7. '[M' → logprob: -10.790947914123535
    8. ' [' → logprob: -11.415947914123535
    9. '[l' → logprob: -11.915947914123535
    10. ' [[' → logprob: -11.915947914123535

Token 823: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. '(int' → logprob: -16.75
    3. ' int' → logprob: -18.25
    4. '[int' → logprob: -18.875
    5. '
' → logprob: -19.75
    6. '```' → logprob: -20.125
    7. '*' → logprob: -20.5
    8. '	int' → logprob: -21.125
    9. 'c' → logprob: -21.125
    10. '<int' → logprob: -21.625

Token 824: '(j' (ID: 4997)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.023564213886857033
    2. '(ch' → logprob: -3.773564100265503
    3. '(char' → logprob: -8.648564338684082
    4. '(x' → logprob: -9.023564338684082
    5. 'c' → logprob: -11.273564338684082
    6. '(car' → logprob: -13.148564338684082
    7. '(' → logprob: -13.398564338684082
    8. 'ch' → logprob: -13.523564338684082
    9. '(j' → logprob: -13.648564338684082
    10. '(d' → logprob: -14.023564338684082

Token 825: ')' (ID: 8)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.3710740804672241
    2. '(ch' → logprob: -1.4960740804672241
    3. ')' → logprob: -3.6210741996765137
    4. '(char' → logprob: -3.9960741996765137
    5. '(j' → logprob: -3.9960741996765137
    6. 'for' → logprob: -3.9960741996765137
    7. 'char' → logprob: -6.371074199676514
    8. '(k' → logprob: -6.996074199676514
    9. ' for' → logprob: -7.621074199676514
    10. '(' → logprob: -8.371073722839355

Token 826: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005235767923295498
    2. ' for' → logprob: -5.25523567199707
    3. '	for' → logprob: -13.38023567199707
    4. 'in' → logprob: -15.63023567199707
    5. ')' → logprob: -15.88023567199707
    6. 'char' → logprob: -16.75523567199707
    7. '   ' → logprob: -17.00523567199707
    8. ' ' → logprob: -17.13023567199707
    9. '
' → logprob: -18.13023567199707
    10. ' ' → logprob: -18.50523567199707

Token 827: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008046258008107543
    2. ' j' → logprob: -7.125804424285889
    3. '	j' → logprob: -16.625804901123047
    4. ' ' → logprob: -18.500804901123047
    5. ' ' → logprob: -19.375804901123047
    6. '_j' → logprob: -19.500804901123047
    7. '
' → logprob: -20.500804901123047
    8. '_' → logprob: -21.125804901123047
    9. '

' → logprob: -21.250804901123047
    10. '$j' → logprob: -21.250804901123047

Token 828: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00280558317899704
    2. ' in' → logprob: -5.877805709838867
    3. ' ' → logprob: -15.377805709838867
    4. 'inp' → logprob: -16.377805709838867
    5. 'inthe' → logprob: -16.877805709838867
    6. 's' → logprob: -16.877805709838867
    7. 'i' → logprob: -17.252805709838867
    8. '
' → logprob: -17.502805709838867
    9. 'j' → logprob: -17.627805709838867
    10. 'ins' → logprob: -17.627805709838867

Token 829: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7213296294212341
    2. 'S' → logprob: -1.096329689025879
    3. 'i' → logprob: -2.096329689025879
    4. 's' → logprob: -3.596329689025879
    5. 'c' → logprob: -3.846329689025879
    6. 'k' → logprob: -6.471329689025879
    7. ' S' → logprob: -6.471329689025879
    8. ' list' → logprob: -6.471329689025879
    9. 'j' → logprob: -7.096329689025879
    10. 'l' → logprob: -7.221329689025879

Token 830: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.008719762787222862
    2. '(s' → logprob: -5.3837199211120605
    3. '(i' → logprob: -5.6337199211120605
    4. '(line' → logprob: -8.633719444274902
    5. '(x' → logprob: -9.008719444274902
    6. '(k' → logprob: -9.758719444274902
    7. 'S' → logprob: -10.133719444274902
    8. '(row' → logprob: -10.383719444274902
    9. '(' → logprob: -10.633719444274902
    10. '(str' → logprob: -10.633719444274902

Token 831: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8594267964363098
    2. '(i' → logprob: -1.109426736831665
    3. '())' → logprob: -1.609426736831665
    4. '()[' → logprob: -3.109426736831665
    5. '(' → logprob: -6.859426975250244
    6. '()]' → logprob: -7.609426975250244
    7. '(n' → logprob: -8.359426498413086
    8. '()(' → logprob: -8.984426498413086
    9. '()
' → logprob: -9.484426498413086
    10. '().' → logprob: -9.734426498413086

Token 832: ']' (ID: 60)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5348662734031677
    2. '(n' → logprob: -1.0348663330078125
    3. '()]' → logprob: -2.9098663330078125
    4. 'for' → logprob: -5.6598663330078125
    5. '(i' → logprob: -7.5348663330078125
    6. ']' → logprob: -8.534866333007812
    7. '(' → logprob: -8.784866333007812
    8. '(range' → logprob: -9.909866333007812
    9. ' ()' → logprob: -10.409866333007812
    10. ' for' → logprob: -10.534866333007812

Token 833: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8408028483390808
    2. '()' → logprob: -1.0908029079437256
    3. '(n' → logprob: -1.7158029079437256
    4. ' for' → logprob: -2.9658029079437256
    5. '(i' → logprob: -7.5908026695251465
    6. '(' → logprob: -7.5908026695251465
    7. '(for' → logprob: -8.965803146362305
    8. ' (' → logprob: -9.215803146362305
    9. '()]' → logprob: -10.215803146362305
    10. '   ' → logprob: -10.715803146362305

Token 834: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07912363857030869
    2. '_' → logprob: -2.5791237354278564
    3. ' i' → logprob: -9.454123497009277
    4. '_i' → logprob: -9.454123497009277
    5. 'range' → logprob: -9.579123497009277
    6. ' range' → logprob: -12.079123497009277
    7. ' _' → logprob: -13.454123497009277
    8. '_range' → logprob: -14.579123497009277
    9. '_
' → logprob: -15.454123497009277
    10. '
' → logprob: -16.079124450683594

Token 835: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6948877573013306
    2. ' in' → logprob: -0.6948877573013306
    3. 'range' → logprob: -6.444887638092041
    4. ' range' → logprob: -9.4448881149292
    5. '(range' → logprob: -9.9448881149292
    6. '(' → logprob: -11.0698881149292
    7. '(n' → logprob: -12.4448881149292
    8. '(in' → logprob: -13.1948881149292
    9. 'n' → logprob: -14.0698881149292
    10. ' ' → logprob: -14.9448881149292

Token 836: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.2729995988775045e-06
    2. ' range' → logprob: -12.000006675720215
    3. '(range' → logprob: -21.1250057220459
    4. '	range' → logprob: -23.3750057220459
    5. 'rang' → logprob: -23.6250057220459
    6. '
' → logprob: -24.1250057220459
    7. '_range' → logprob: -25.0000057220459
    8. 'in' → logprob: -25.0000057220459
    9. '   ' → logprob: -25.3750057220459
    10. 'rank' → logprob: -25.5000057220459

Token 837: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002139197662472725
    2. 'n' → logprob: -6.252139091491699
    3. 'range' → logprob: -8.5021390914917
    4. '(' → logprob: -12.2521390914917
    5. ' range' → logprob: -13.1271390914917
    6. '(range' → logprob: -15.0021390914917
    7. ' (' → logprob: -15.2521390914917
    8. ' n' → logprob: -15.6271390914917
    9. '	n' → logprob: -18.627140045166016
    10. '
' → logprob: -19.627140045166016

Token 838: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.35706390615087e-05
    2. ']' → logprob: -10.375033378601074
    3. ')]
' → logprob: -14.125033378601074
    4. ')' → logprob: -14.625033378601074
    5. '])]' → logprob: -14.875033378601074
    6. '])' → logprob: -15.500033378601074
    7. ' )' → logprob: -16.12503433227539
    8. ']]' → logprob: -16.50003433227539
    9. ' ]' → logprob: -16.50003433227539
    10. '()]' → logprob: -17.00003433227539

Token 839: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11354639381170273
    2. '#' → logprob: -2.488546371459961
    3. '<|end|>' → logprob: -3.863546371459961
    4. '
' → logprob: -6.988546371459961
    5. 'a' → logprob: -7.613546371459961
    6. 'import' → logprob: -7.738546371459961
    7. '```' → logprob: -7.863546371459961
    8. 'class' → logprob: -8.238546371459961
    9. '<|end|>' → logprob: -8.238546371459961
    10. 'n' → logprob: -8.363546371459961

Token 840: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034426093101501465
    2. '#' → logprob: -3.409426212310791
    3. 'import' → logprob: -7.909426212310791
    4. 'class' → logprob: -9.159425735473633
    5. 'n' → logprob: -9.284425735473633
    6. 'from' → logprob: -9.659425735473633
    7. '
' → logprob: -10.284425735473633
    8. ' ' → logprob: -10.534425735473633
    9. 'd' → logprob: -11.159425735473633
    10. ' #' → logprob: -11.784425735473633

Token 841: 'claration' (ID: 21396)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0018703327514231205
    2. 'fin' → logprob: -6.626870155334473
    3. '#' → logprob: -8.126870155334473
    4. 'def' → logprob: -9.001870155334473
    5. '```' → logprob: -10.126870155334473
    6. '...' → logprob: -11.251870155334473
    7. 'ff' → logprob: -11.376870155334473
    8. 'fn' → logprob: -11.501870155334473
    9. 'fi' → logprob: -11.626870155334473
    10. '
' → logprob: -12.001870155334473

Token 842: ' du' (ID: 1462)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6254113912582397
    2. 'INF' → logprob: -1.3754113912582397
    3. 'class' → logprob: -2.8754115104675293
    4. '_' → logprob: -2.8754115104675293
    5. 'def' → logprob: -3.1254115104675293
    6. ' =' → logprob: -5.000411510467529
    7. 'x' → logprob: -5.125411510467529
    8. '<|end|>' → logprob: -5.250411510467529
    9. '_INF' → logprob: -5.375411510467529
    10. '=' → logprob: -5.625411510467529

Token 843: ' modulo' (ID: 112372)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1916753053665161
    2. '#' → logprob: -1.3166753053665161
    3. 'class' → logprob: -1.3166753053665161
    4. 'def' → logprob: -2.0666751861572266
    5. ' main' → logprob: -4.066675186157227
    6. 'mod' → logprob: -5.316675186157227
    7. '#!/' → logprob: -5.941675186157227
    8. 'MOD' → logprob: -6.691675186157227
    9. 'n' → logprob: -6.816675186157227
    10. 'import' → logprob: -7.316675186157227

Token 844: ' à' (ID: 1221)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0006165316444821656
    2. 'mod' → logprob: -7.875616550445557
    3. '=' → logprob: -8.875616073608398
    4. ' =' → logprob: -9.750616073608398
    5. ' MOD' → logprob: -11.500616073608398
    6. 'M' → logprob: -11.500616073608398
    7. 'MD' → logprob: -11.750616073608398
    8. 'MO' → logprob: -12.500616073608398
    9. 'Mod' → logprob: -13.000616073608398
    10. '_MOD' → logprob: -13.500616073608398

Token 845: ' utiliser' (ID: 43227)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003397535183466971
    2. '100' → logprob: -8.50033950805664
    3. '998' → logprob: -9.62533950805664
    4. '(' → logprob: -10.25033950805664
    5. '```' → logprob: -11.00033950805664
    6. '=' → logprob: -12.37533950805664
    7. 'MOD' → logprob: -12.50033950805664
    8. '1' → logprob: -12.87533950805664
    9. '
' → logprob: -13.37533950805664
    10. '_' → logprob: -13.62533950805664

Token 846: ' pour' (ID: 1930)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0012205826351419091
    2. 'mod' → logprob: -6.751220703125
    3. 'MD' → logprob: -10.626220703125
    4. '=' → logprob: -11.376220703125
    5. 'M' → logprob: -12.376220703125
    6. ' MOD' → logprob: -12.501220703125
    7. 'MO' → logprob: -13.376220703125
    8. ' =' → logprob: -13.501220703125
    9. 'Mod' → logprob: -13.751220703125
    10. '
' → logprob: -14.126220703125

Token 847: ' les' (ID: 1341)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09886453300714493
    2. 'MOD' → logprob: -2.4738645553588867
    3. '100' → logprob: -5.723864555358887
    4. 'mod' → logprob: -5.848864555358887
    5. '998' → logprob: -6.223864555358887
    6. 'int' → logprob: -7.723864555358887
    7. '#' → logprob: -7.848864555358887
    8. '_' → logprob: -8.348864555358887
    9. '(' → logprob: -8.598864555358887
    10. '```' → logprob: -8.723864555358887

Token 848: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.1390620917081833
    2. 'mod' → logprob: -2.1390621662139893
    3. 'pro' → logprob: -5.88906192779541
    4. 'import' → logprob: -6.13906192779541
    5. '#' → logprob: -6.38906192779541
    6. '```' → logprob: -6.76406192779541
    7. '_' → logprob: -8.13906192779541
    8. 'contest' → logprob: -8.13906192779541
    9. 'const' → logprob: -8.26406192779541
    10. '99' → logprob: -8.26406192779541

Token 849: 's' (ID: 82)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.5007497668266296
    2. 's' → logprob: -1.1257498264312744
    3. 'ations' → logprob: -2.8757498264312744
    4. 'us' → logprob: -4.750749588012695
    5. 'es' → logprob: -5.875749588012695
    6. '#' → logprob: -7.750749588012695
    7. 'omod' → logprob: -8.375749588012695
    8. 'mod' → logprob: -8.500749588012695
    9. '_mod' → logprob: -9.000749588012695
    10. 'def' → logprob: -9.250749588012695

Token 850: ' (' (ID: 350)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00044151677866466343
    2. 'mod' → logprob: -7.875441551208496
    3. '=' → logprob: -10.250441551208496
    4. ' =' → logprob: -11.125441551208496
    5. ' MOD' → logprob: -12.375441551208496
    6. 'MD' → logprob: -12.500441551208496
    7. 'M' → logprob: -14.000441551208496
    8. '_MOD' → logprob: -14.500441551208496
    9. 'Mod' → logprob: -14.500441551208496
    10. '
' → logprob: -14.875441551208496

Token 851: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.004375409800559282
    2. '10' → logprob: -5.504375457763672
    3. 'mod' → logprob: -8.379375457763672
    4. 'MD' → logprob: -10.004375457763672
    5. 'M' → logprob: -11.629375457763672
    6. ' MOD' → logprob: -12.129375457763672
    7. 'MO' → logprob: -12.879375457763672
    8. '998' → logprob: -13.129375457763672
    9. 'Mod' → logprob: -13.629375457763672
    10. 'md' → logprob: -14.254375457763672

Token 852: 'ulo' (ID: 5953)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.056797876954078674
    2. ' =' → logprob: -2.931797981262207
    3. 'ULO' → logprob: -7.431797981262207
    4. 'MOD' → logprob: -7.681797981262207
    5. 'ulo' → logprob: -7.931797981262207
    6. 'ule' → logprob: -8.306797981262207
    7. ')' → logprob: -9.056797981262207
    8. '=int' → logprob: -10.306797981262207
    9. '7' → logprob: -11.306797981262207
    10. '_MOD' → logprob: -11.306797981262207

Token 853: ' très' (ID: 9412)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18020057678222656
    2. ' =' → logprob: -1.8052005767822266
    3. ')' → logprob: -7.805200576782227
    4. '=int' → logprob: -11.430200576782227
    5. '998' → logprob: -11.680200576782227
    6. ')=' → logprob: -11.930200576782227
    7. 'MOD' → logprob: -12.180200576782227
    8. '100' → logprob: -12.805200576782227
    9. '_mod' → logprob: -13.305200576782227
    10. '_' → logprob: -13.680200576782227

Token 854: ' courant' (ID: 74694)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010861996561288834
    2. '100' → logprob: -5.260861873626709
    3. '10' → logprob: -6.010861873626709
    4. ' =' → logprob: -7.135861873626709
    5. '```' → logprob: -7.760861873626709
    6. '1' → logprob: -8.010862350463867
    7. 'prime' → logprob: -8.260862350463867
    8. '999' → logprob: -8.260862350463867
    9. '123' → logprob: -8.510862350463867
    10. '998' → logprob: -8.635862350463867

Token 855: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1550949066877365
    2. ')' → logprob: -2.530094861984253
    3. ' =' → logprob: -2.780094861984253
    4. 'MOD' → logprob: -6.905095100402832
    5. '_' → logprob: -7.905095100402832
    6. 'mod' → logprob: -8.905095100402832
    7. ')=' → logprob: -8.905095100402832
    8. ')
' → logprob: -9.280095100402832
    9. ' )' → logprob: -9.655095100402832
    10. '10' → logprob: -9.905095100402832

Token 856: ' compét' (ID: 34024)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004028295632451773
    2. '998' → logprob: -5.6290283203125
    3. '100' → logprob: -8.2540283203125
    4. 'competitive' → logprob: -9.3790283203125
    5. '```' → logprob: -10.5040283203125
    6. ' competitive' → logprob: -11.5040283203125
    7. '109' → logprob: -12.0040283203125
    8. '​' → logprob: -12.0040283203125
    9. '
' → logprob: -12.1290283203125
    10. 'Competitive' → logprob: -12.2540283203125

Token 857: 'itions' (ID: 5500)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ité' → logprob: -1.9524871110916138
    2. 'ère' → logprob: -2.452486991882324
    3. 'érations' → logprob: -2.952486991882324
    4. 'ération' → logprob: -3.077486991882324
    5. 'érateur' → logprob: -3.077486991882324
    6. 'r' → logprob: -3.202486991882324
    7. 'code' → logprob: -3.327486991882324
    8. 'éré' → logprob: -3.452486991882324
    9. 'ulaire' → logprob: -3.452486991882324
    10. '998' → logprob: -3.577486991882324

Token 858: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3822108209133148
    2. '=' → logprob: -1.8822108507156372
    3. ' =' → logprob: -1.8822108507156372
    4. ')
' → logprob: -5.007210731506348
    5. ' )' → logprob: -6.007210731506348
    6. 'MOD' → logprob: -6.007210731506348
    7. ')=' → logprob: -7.257210731506348
    8. 'mod' → logprob: -8.132210731506348
    9. '_' → logprob: -9.132210731506348
    10. '10' → logprob: -9.382210731506348

Token 859: ' ici' (ID: 27994)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.4798576831817627
    2. '10' → logprob: -0.9798576831817627
    3. '998' → logprob: -5.479857444763184
    4. '```' → logprob: -7.229857444763184
    5. 'mod' → logprob: -7.979857444763184
    6. '100' → logprob: -8.854857444763184
    7. ' MOD' → logprob: -9.229857444763184
    8. '=' → logprob: -9.354857444763184
    9. ')' → logprob: -9.604857444763184
    10. '
' → logprob: -10.354857444763184

Token 860: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005119430832564831
    2. '=' → logprob: -5.505119323730469
    3. '998' → logprob: -7.505119323730469
    4. ' =' → logprob: -8.130119323730469
    5. '100' → logprob: -9.130119323730469
    6. ' ' → logprob: -9.880119323730469
    7. ')' → logprob: -11.630119323730469
    8. '```' → logprob: -11.755119323730469
    9. 'MOD' → logprob: -12.505119323730469
    10. '1' → logprob: -12.630119323730469

Token 861: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00041994822095148265
    2. '998' → logprob: -8.000419616699219
    3. '100' → logprob: -9.750419616699219
    4. 'MOD' → logprob: -10.875419616699219
    5. '```' → logprob: -13.000419616699219
    6. '
' → logprob: -13.125419616699219
    7. '=' → logprob: -13.375419616699219
    8. '1' → logprob: -15.000419616699219
    9. '​' → logprob: -15.500419616699219
    10. 'mod' → logprob: -15.500419616699219

Token 862: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.004154260735958815
    2. '9' → logprob: -5.504154205322266
    3. ' **' → logprob: -9.879154205322266
    4. '09' → logprob: -11.254154205322266
    5. '^' → logprob: -12.504154205322266
    6. '000' → logprob: -12.754154205322266
    7. '*' → logprob: -13.629154205322266
    8. ' ' → logprob: -14.004154205322266
    9. '\xe2\x81' → logprob: -14.129154205322266
    10. '7' → logprob: -14.754154205322266

Token 863: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -16.25
    3. '```' → logprob: -16.5
    4. ' ' → logprob: -19.5
    5. '``' → logprob: -21.375
    6. '+' → logprob: -21.75
    7. '=' → logprob: -22.0
    8. '^' → logprob: -22.25
    9. '**' → logprob: -22.5
    10. '９' → logprob: -22.625

Token 864: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000204851632588543
    2. ' +' → logprob: -8.500205039978027
    3. '+
' → logprob: -13.750205039978027
    4. '9' → logprob: -16.50020408630371
    5. '＋' → logprob: -16.87520408630371
    6. '7' → logprob: -17.12520408630371
    7. 'plus' → logprob: -17.37520408630371
    8. ' plus' → logprob: -18.75020408630371
    9. '()+' → logprob: -18.87520408630371
    10. '```' → logprob: -19.12520408630371

Token 865: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0016592320753261447
    2. '9' → logprob: -6.751659393310547
    3. '+' → logprob: -7.626659393310547
    4. '```' → logprob: -13.376659393310547
    5. '=' → logprob: -16.501659393310547
    6. ' +' → logprob: -17.251659393310547
    7. '+=' → logprob: -17.501659393310547
    8. ' ' → logprob: -17.876659393310547
    9. '``' → logprob: -17.876659393310547
    10. '+
' → logprob: -18.376659393310547

Token 866: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008731221780180931
    2. ')
' → logprob: -5.008731365203857
    3. '=' → logprob: -6.508731365203857
    4. ' =' → logprob: -8.2587308883667
    5. ' )' → logprob: -9.0087308883667
    6. ')
' → logprob: -9.6337308883667
    7. ')

' → logprob: -10.5087308883667
    8. 'MOD' → logprob: -11.3837308883667
    9. 'mod' → logprob: -11.8837308883667
    10. ')=' → logprob: -12.0087308883667

Token 867: ' nombre' (ID: 9733)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009352389723062515
    2. '100' → logprob: -5.259352207183838
    3. 'MOD' → logprob: -5.509352207183838
    4. '998' → logprob: -10.634352684020996
    5. ' ' → logprob: -11.134352684020996
    6. 'mod' → logprob: -11.134352684020996
    7. '```' → logprob: -13.009352684020996
    8. '1' → logprob: -13.134352684020996
    9. ' MOD' → logprob: -13.759352684020996
    10. '(' → logprob: -14.009352684020996

Token 868: ' premier' (ID: 15506)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18762698769569397
    2. ' =' → logprob: -1.9376269578933716
    3. ')' → logprob: -3.687627077102661
    4. '_mod' → logprob: -7.187626838684082
    5. '_' → logprob: -7.562626838684082
    6. 'mod' → logprob: -8.187626838684082
    7. ')=' → logprob: -8.937626838684082
    8. ')
' → logprob: -9.437626838684082
    9. ' )' → logprob: -9.812626838684082
    10. 'MOD' → logprob: -10.312626838684082

Token 869: ' grand' (ID: 6363)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03971078246831894
    2. '=' → logprob: -3.289710760116577
    3. ' )' → logprob: -6.914710998535156
    4. '+' → logprob: -7.914710998535156
    5. ' =' → logprob: -8.664710998535156
    6. ')
' → logprob: -9.539710998535156
    7. 'mod' → logprob: -11.539710998535156
    8. '7' → logprob: -11.789710998535156
    9. ')=' → logprob: -11.789710998535156
    10. ').' → logprob: -12.164710998535156

Token 870: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04669216647744179
    2. ')' → logprob: -3.171692132949829
    3. ' +' → logprob: -6.046692371368408
    4. '=' → logprob: -6.671692371368408
    5. '+)' → logprob: -11.04669189453125
    6. ' )' → logprob: -11.42169189453125
    7. '7' → logprob: -12.04669189453125
    8. ')+' → logprob: -12.17169189453125
    9. '+=' → logprob: -12.92169189453125
    10. ' plus' → logprob: -12.92169189453125

Token 871: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0002631238894537091
    2. 'mod' → logprob: -8.250263214111328
    3. 'M' → logprob: -14.375263214111328
    4. 'MD' → logprob: -14.500263214111328
    5. ' MOD' → logprob: -14.750263214111328
    6. 'MO' → logprob: -16.125263214111328
    7. 'Mod' → logprob: -16.625263214111328
    8. '```' → logprob: -16.875263214111328
    9. '_MOD' → logprob: -17.375263214111328
    10. 'md' → logprob: -18.000263214111328

Token 872: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12744393944740295
    2. '=' → logprob: -2.12744402885437
    3. 'ulo' → logprob: -9.00244426727295
    4. 'ul' → logprob: -9.25244426727295
    5. 'u' → logprob: -9.50244426727295
    6. ' ' → logprob: -9.50244426727295
    7. 'ULO' → logprob: -9.50244426727295
    8. 'ule' → logprob: -10.37744426727295
    9. 'ulus' → logprob: -11.62744426727295
    10. 'o' → logprob: -12.00244426727295

Token 873: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.200166469876422e-06
    2. '100' → logprob: -12.250004768371582
    3. ' ' → logprob: -14.875004768371582
    4. 'int' → logprob: -17.8750057220459
    5. '1' → logprob: -19.2500057220459
    6. '(' → logprob: -20.5000057220459
    7. '１０' → logprob: -21.3750057220459
    8. '109' → logprob: -22.5000057220459
    9. '   ' → logprob: -23.0000057220459
    10. '=' → logprob: -23.0000057220459

Token 874: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.639096970204264e-05
    2. '100' → logprob: -9.250096321105957
    3. 'int' → logprob: -15.375096321105957
    4. '(' → logprob: -17.750097274780273
    5. ' ' → logprob: -17.750097274780273
    6. '1' → logprob: -18.625097274780273
    7. '109' → logprob: -19.875097274780273
    8. '998' → logprob: -20.250097274780273
    9. '１０' → logprob: -21.500097274780273
    10. 'pow' → logprob: -22.500097274780273

Token 875: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.005269684363156557
    2. '+' → logprob: -5.380269527435303
    3. '9' → logprob: -8.005270004272461
    4. ' **' → logprob: -8.255270004272461
    5. '000' → logprob: -10.380270004272461
    6. '*' → logprob: -11.380270004272461
    7. '^' → logprob: -13.005270004272461
    8. ' ' → logprob: -13.255270004272461
    9. '09' → logprob: -13.755270004272461
    10. ' +' → logprob: -13.755270004272461

Token 876: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -19.0
    3. ' ' → logprob: -23.125
    4. '９' → logprob: -23.875
    5. '+' → logprob: -25.25
    6. '```' → logprob: -25.5
    7. '۹' → logprob: -26.75
    8. 'nine' → logprob: -27.0
    9. '९' → logprob: -27.375
    10. '٩' → logprob: -27.5

Token 877: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -19.0
    3. '+' → logprob: -23.125
    4. '```' → logprob: -23.125
    5. '９' → logprob: -23.375
    6. ' ' → logprob: -23.75
    7. '۹' → logprob: -25.625
    8. 'nine' → logprob: -25.75
    9. '٩' → logprob: -25.875
    10. '९' → logprob: -26.0

Token 878: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.65101717156358e-05
    2. ' +' → logprob: -9.250096321105957
    3. '7' → logprob: -14.750096321105957
    4. '+
' → logprob: -17.875097274780273
    5. '＋' → logprob: -18.750097274780273
    6. ' ' → logprob: -19.750097274780273
    7. 'plus' → logprob: -21.000097274780273
    8. ' plus' → logprob: -21.125097274780273
    9. ' ' → logprob: -21.500097274780273
    10. '
' → logprob: -22.000097274780273

Token 879: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -21.625
    3. '+' → logprob: -21.875
    4. ' ' → logprob: -23.0
    5. '```' → logprob: -24.375
    6. '７' → logprob: -24.625
    7. '   ' → logprob: -25.625
    8. '۷' → logprob: -25.75
    9. '
' → logprob: -26.25
    10. '  ' → logprob: -26.25

Token 880: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.625
    3. '07' → logprob: -20.75
    4. ' ' → logprob: -21.25
    5. '```' → logprob: -23.625
    6. '７' → logprob: -24.0
    7. '007' → logprob: -24.125
    8. '' → logprob: -24.75
    9. '७' → logprob: -24.875
    10. '   ' → logprob: -24.875

Token 881: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1789608597755432
    2. '<|end|>' → logprob: -1.9289608001708984
    3. '#' → logprob: -4.553960800170898
    4. 'def' → logprob: -5.553960800170898
    5. '

' → logprob: -6.178960800170898
    6. '<|end|>' → logprob: -6.803960800170898
    7. '
' → logprob: -7.678960800170898
    8. '```' → logprob: -8.678960800170898
    9. '\n' → logprob: -9.178960800170898
    10. '' → logprob: -10.303960800170898

Token 882: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5711715817451477
    2. '#' → logprob: -1.446171522140503
    3. '
' → logprob: -2.196171522140503
    4. '\n' → logprob: -3.196171522140503
    5. '<|end|>' → logprob: -3.571171522140503
    6. '<|end|>' → logprob: -5.321171760559082
    7. '

' → logprob: -5.946171760559082
    8. 'import' → logprob: -6.071171760559082
    9. 'class' → logprob: -6.071171760559082
    10. '\' → logprob: -6.696171760559082

Token 883: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032890592701733112
    2. '#' → logprob: -5.753289222717285
    3. 'from' → logprob: -9.878289222717285
    4. 'class' → logprob: -10.253289222717285
    5. 'import' → logprob: -10.753289222717285
    6. 'n' → logprob: -13.128289222717285
    7. '#!/' → logprob: -15.128289222717285
    8. 'print' → logprob: -15.378289222717285
    9. ' def' → logprob: -15.753289222717285
    10. '"""' → logprob: -16.12828826904297

Token 884: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015980061143636703
    2. '()' → logprob: -4.265980243682861
    3. 'N' → logprob: -6.765980243682861
    4. '(n' → logprob: -8.390979766845703
    5. '=' → logprob: -9.265979766845703
    6. ' =' → logprob: -9.390979766845703
    7. 't' → logprob: -9.640979766845703
    8. '#' → logprob: -9.765979766845703
    9. 'a' → logprob: -10.265979766845703
    10. '_n' → logprob: -10.640979766845703

Token 885: ''un' (ID: 9788)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007628869265317917
    2. 'n' → logprob: -5.382628917694092
    3. '=' → logprob: -7.007628917694092
    4. ' =' → logprob: -7.132628917694092
    5. ':' → logprob: -8.007628440856934
    6. 'la' → logprob: -8.882628440856934
    7. 'u' → logprob: -9.382628440856934
    8. '#' → logprob: -9.507628440856934
    9. 'def' → logprob: -9.632628440856934
    10. 'e' → logprob: -9.757628440856934

Token 886: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0199240446090698
    2. ' =' → logprob: -1.3949240446090698
    3. '()' → logprob: -2.3949241638183594
    4. 'nombre' → logprob: -2.5199241638183594
    5. 'line' → logprob: -3.0199241638183594
    6. '=' → logprob: -3.0199241638183594
    7. ' line' → logprob: -3.6449241638183594
    8. '#' → logprob: -4.269924163818359
    9. 'ligne' → logprob: -4.519924163818359
    10. ' n' → logprob: -4.519924163818359

Token 887: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4861990511417389
    2. '()' → logprob: -0.9861990213394165
    3. '=' → logprob: -4.861198902130127
    4. 'N' → logprob: -5.861198902130127
    5. ' =' → logprob: -7.111198902130127
    6. 'a' → logprob: -8.861199378967285
    7. '(' → logprob: -9.236199378967285
    8. 'x' → logprob: -9.361199378967285
    9. '(n' → logprob: -9.861199378967285
    10. 'num' → logprob: -9.861199378967285

Token 888: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5798908472061157
    2. '=' → logprob: -0.8298908472061157
    3. ' =' → logprob: -5.579890727996826
    4. '=n' → logprob: -8.829891204833984
    5. '()' → logprob: -10.954891204833984
    6. '(n' → logprob: -12.704891204833984
    7. '=
' → logprob: -13.829891204833984
    8. ',' → logprob: -14.079891204833984
    9. ' n' → logprob: -14.829891204833984
    10. '_n' → logprob: -15.204891204833984

Token 889: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023957451805472374
    2. 'sys' → logprob: -4.398957252502441
    3. 'input' → logprob: -4.523957252502441
    4. 'l' → logprob: -8.898957252502441
    5. 'la' → logprob: -9.148957252502441
    6. '()
' → logprob: -9.273957252502441
    7. 'n' → logprob: -9.898957252502441
    8. '=sys' → logprob: -10.398957252502441
    9. 'stdin' → logprob: -10.898957252502441
    10. 'the' → logprob: -11.523957252502441

Token 890: ''entrée' (ID: 115820)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.4209994673728943
    2. 'input' → logprob: -1.545999526977539
    3. 'stdin' → logprob: -3.045999526977539
    4. 'sys' → logprob: -3.295999526977539
    5. '=sys' → logprob: -3.795999526977539
    6. 'entrée' → logprob: -4.545999526977539
    7. ''entrée' → logprob: -5.295999526977539
    8. 'puts' → logprob: -6.045999526977539
    9. '(stdin' → logprob: -6.295999526977539
    10. '=' → logprob: -7.045999526977539

Token 891: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18805280327796936
    2. '=' → logprob: -1.938052773475647
    3. 'n' → logprob: -4.188052654266357
    4. ' =' → logprob: -4.438052654266357
    5. '(' → logprob: -7.938052654266357
    6. '=n' → logprob: -10.188053131103516
    7. '()
' → logprob: -10.938053131103516
    8. 's' → logprob: -12.438053131103516
    9. ',' → logprob: -12.438053131103516
    10. '(n' → logprob: -12.688053131103516

Token 892: ' ;' (ID: 4605)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002853136509656906
    2. '=' → logprob: -6.002852916717529
    3. ' =' → logprob: -8.002853393554688
    4. '()' → logprob: -10.127853393554688
    5. '(' → logprob: -13.502853393554688
    6. '(n' → logprob: -14.252853393554688
    7. '=n' → logprob: -15.002853393554688
    8. ':' → logprob: -15.877853393554688
    9. '
' → logprob: -16.002853393554688
    10. '()
' → logprob: -16.002853393554688

Token 893: ' variable' (ID: 11076)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: 0.0
    2. ' n' → logprob: -18.875
    3. '
' → logprob: -20.625
    4. '```' → logprob: -23.0
    5. '

' → logprob: -24.125
    6. 'N' → logprob: -24.375
    7. '	n' → logprob: -24.375
    8. '#' → logprob: -24.75
    9. 'def' → logprob: -25.25
    10. '_n' → logprob: -25.75

Token 894: ' correspondant' (ID: 146058)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0061185057274997234
    2. ' =' → logprob: -5.256118297576904
    3. 'n' → logprob: -7.256118297576904
    4. '=n' → logprob: -8.756118774414062
    5. '_n' → logprob: -11.256118774414062
    6. '=
' → logprob: -13.131118774414062
    7. '(n' → logprob: -13.381118774414062
    8. ',' → logprob: -13.881118774414062
    9. '_' → logprob: -14.006118774414062
    10. 's' → logprob: -14.131118774414062

Token 895: ' typ' (ID: 5378)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05542232096195221
    2. ' =' → logprob: -2.930422306060791
    3. 'n' → logprob: -8.80542278289795
    4. 'a' → logprob: -9.05542278289795
    5. ' à' → logprob: -9.43042278289795
    6. ' a' → logprob: -9.80542278289795
    7. 'au' → logprob: -10.43042278289795
    8. 's' → logprob: -10.68042278289795
    9. 'à' → logprob: -10.80542278289795
    10. '_' → logprob: -11.05542278289795

Token 896: 'iquement' (ID: 83934)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007516357582062483
    2. 'n' → logprob: -5.757516384124756
    3. 'é' → logprob: -5.757516384124756
    4. 'me' → logprob: -7.382516384124756
    5. '=' → logprob: -8.132515907287598
    6. ' =' → logprob: -9.757515907287598
    7. '=n' → logprob: -10.257515907287598
    8. 'a' → logprob: -10.757515907287598
    9. ' n' → logprob: -11.007515907287598
    10. 'è' → logprob: -11.132515907287598

Token 897: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005366683471947908
    2. ' =' → logprob: -5.255366802215576
    3. '=n' → logprob: -9.380366325378418
    4. 'n' → logprob: -10.130366325378418
    5. 'à' → logprob: -12.380366325378418
    6. ' à' → logprob: -13.630366325378418
    7. '=
' → logprob: -13.755366325378418
    8. ' n' → logprob: -14.630366325378418
    9. 'au' → logprob: -14.630366325378418
    10. 'a' → logprob: -15.005366325378418

Token 898: ' la' (ID: 557)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0014689151430502534
    2. 'int' → logprob: -6.751469135284424
    3. 'S' → logprob: -8.251468658447266
    4. 'n' → logprob: -10.501468658447266
    5. 'l' → logprob: -12.126468658447266
    6. ' I' → logprob: -12.876468658447266
    7. 'la' → logprob: -13.626468658447266
    8. 'i' → logprob: -15.251468658447266
    9. 'N' → logprob: -15.626468658447266
    10. 's' → logprob: -16.001468658447266

Token 899: ' taille' (ID: 41644)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.43452125787734985
    2. 'n' → logprob: -1.059521198272705
    3. '=int' → logprob: -5.934521198272705
    4. 'input' → logprob: -6.434521198272705
    5. 'nombre' → logprob: -7.684521198272705
    6. 'ent' → logprob: -8.059521675109863
    7. 'number' → logprob: -8.184521675109863
    8. 's' → logprob: -8.934521675109863
    9. 'num' → logprob: -9.809521675109863
    10. 'I' → logprob: -9.934521675109863

Token 900: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005581518169492483
    2. 'n' → logprob: -6.255581378936768
    3. ' =' → logprob: -6.255581378936768
    4. '(' → logprob: -6.755581378936768
    5. '()' → logprob: -7.630581378936768
    6. '=n' → logprob: -10.130581855773926
    7. '(n' → logprob: -10.880581855773926
    8. '_' → logprob: -12.380581855773926
    9. '(
' → logprob: -12.505581855773926
    10. '_n' → logprob: -12.880581855773926

Token 901: ' données' (ID: 30580)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7324758768081665
    2. 'array' → logprob: -1.6074758768081665
    3. 'strings' → logprob: -2.482475757598877
    4. 'S' → logprob: -2.857475757598877
    5. 'string' → logprob: -3.232475757598877
    6. 'chaine' → logprob: -3.357475757598877
    7. 'data' → logprob: -3.732475757598877
    8. 'liste' → logprob: -4.232475757598877
    9. 'l' → logprob: -4.732475757598877
    10. 'list' → logprob: -4.732475757598877

Token 902: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00026205103495158255
    2. '=' → logprob: -8.250262260437012
    3. ' =' → logprob: -14.625262260437012
    4. '=n' → logprob: -15.250262260437012
    5. '
' → logprob: -17.500261306762695
    6. '=
' → logprob: -17.625261306762695
    7. ' n' → logprob: -17.750261306762695
    8. '_n' → logprob: -19.250261306762695
    9. '```' → logprob: -19.875261306762695
    10. 'N' → logprob: -20.500261306762695

Token 903: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.25194984674453735
    2. 'input' → logprob: -2.7519497871398926
    3. 'd' → logprob: -3.3769497871398926
    4. 'programme' → logprob: -3.3769497871398926
    5. 'proble' → logprob: -3.8769497871398926
    6. 'problem' → logprob: -4.001949787139893
    7. 'entrée' → logprob: -4.376949787139893
    8. '#' → logprob: -4.626949787139893
    9. 'data' → logprob: -4.876949787139893
    10. 'code' → logprob: -5.001949787139893

Token 904: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005551783833652735
    2. '=' → logprob: -7.500555038452148
    3. ' =' → logprob: -13.250555038452148
    4. '=n' → logprob: -16.25055503845215
    5. '=
' → logprob: -16.50055503845215
    6. '(n' → logprob: -16.62555503845215
    7. ' n' → logprob: -16.75055503845215
    8. '(' → logprob: -16.87555503845215
    9. 'N' → logprob: -17.00055503845215
    10. '()' → logprob: -17.50055503845215

Token 905: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: 0.0
    2. '
' → logprob: -18.5
    3. ' n' → logprob: -19.75
    4. '(n' → logprob: -21.625
    5. '`' → logprob: -22.0
    6. '

' → logprob: -22.5
    7. '```' → logprob: -22.875
    8. '\n' → logprob: -23.0
    9. '_n' → logprob: -23.25
    10. '	n' → logprob: -23.625

Token 906: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234356038272381
    2. ' =' → logprob: -5.255234241485596
    3. ',' → logprob: -14.880234718322754
    4. '=int' → logprob: -15.880234718322754
    5. '＝' → logprob: -17.505233764648438
    6. '=n' → logprob: -18.255233764648438
    7. '=input' → logprob: -18.380233764648438
    8. '=

' → logprob: -18.630233764648438
    9. '   ' → logprob: -19.130233764648438
    10. ')' → logprob: -19.505233764648438

Token 907: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0024827925954014063
    2. ' I' → logprob: -6.252482891082764
    3. 'int' → logprob: -7.502482891082764
    4. ' int' → logprob: -13.127482414245605
    5. ' ' → logprob: -15.127482414245605
    6. '	I' → logprob: -17.877483367919922
    7. '  ' → logprob: -18.002483367919922
    8. ' ' → logprob: -18.752483367919922
    9. 'Int' → logprob: -19.002483367919922
    10. '10' → logprob: -19.127483367919922

Token 908: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7900065183639526
    2. '#' → logprob: -1.6650065183639526
    3. 'a' → logprob: -2.165006637573242
    4. '<|end|>' → logprob: -2.665006637573242
    5. 'n' → logprob: -2.790006637573242
    6. 's' → logprob: -3.540006637573242
    7. ',' → logprob: -3.790006637573242
    8. ')' → logprob: -4.415006637573242
    9. 'data' → logprob: -4.915006637573242
    10. 'for' → logprob: -4.915006637573242

Token 909: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014686495997011662
    2. 'arr' → logprob: -4.764686584472656
    3. 'data' → logprob: -6.139686584472656
    4. '#' → logprob: -6.514686584472656
    5. 'd' → logprob: -7.264686584472656
    6. 'm' → logprob: -7.639686584472656
    7. 'lst' → logprob: -7.639686584472656
    8. 'A' → logprob: -8.014686584472656
    9. 'dp' → logprob: -8.639686584472656
    10. 's' → logprob: -9.514686584472656

Token 910: ' Lecture' (ID: 106534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12838295102119446
    2. 'arr' → logprob: -2.503382921218872
    3. 'A' → logprob: -3.503382921218872
    4. 'dp' → logprob: -5.753383159637451
    5. 'lst' → logprob: -6.253383159637451
    6. 'data' → logprob: -6.378383159637451
    7. '#' → logprob: -7.378383159637451
    8. 'def' → logprob: -7.878383159637451
    9. 'ans' → logprob: -8.128382682800293
    10. 'd' → logprob: -8.503382682800293

Token 911: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20066571235656738
    2. '_' → logprob: -3.0756657123565674
    3. '_list' → logprob: -3.2006657123565674
    4. 'data' → logprob: -3.3256657123565674
    5. 's' → logprob: -3.8256657123565674
    6. '_data' → logprob: -4.325665473937988
    7. '=' → logprob: -5.075665473937988
    8. 'list' → logprob: -6.075665473937988
    9. '(' → logprob: -6.325665473937988
    10. ' =' → logprob: -6.325665473937988

Token 912: ''une' (ID: 13337)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015779539942741394
    2. 's' → logprob: -5.515779495239258
    3. 'n' → logprob: -5.890779495239258
    4. 'a' → logprob: -6.015779495239258
    5. '_list' → logprob: -6.515779495239258
    6. '_' → logprob: -7.265779495239258
    7. '=' → logprob: -7.515779495239258
    8. 'l' → logprob: -7.890779495239258
    9. 'L' → logprob: -8.015779495239258
    10. 'e' → logprob: -8.140779495239258

Token 913: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5209216475486755
    2. ' =' → logprob: -1.6459217071533203
    3. 'l' → logprob: -2.1459217071533203
    4. 'liste' → logprob: -2.8959217071533203
    5. 'lst' → logprob: -4.52092170715332
    6. '=' → logprob: -5.14592170715332
    7. '()' → logprob: -5.52092170715332
    8. '_list' → logprob: -5.77092170715332
    9. 'L' → logprob: -5.89592170715332
    10. 'li' → logprob: -5.89592170715332

Token 914: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15975776314735413
    2. '=' → logprob: -2.1597578525543213
    3. 'a' → logprob: -4.284757614135742
    4. ' =' → logprob: -4.409757614135742
    5. 'n' → logprob: -6.159757614135742
    6. 'A' → logprob: -6.784757614135742
    7. '_' → logprob: -7.284757614135742
    8. 's' → logprob: -7.284757614135742
    9. 'of' → logprob: -8.284757614135742
    10. '(' → logprob: -8.409757614135742

Token 915: ''ent' (ID: 53422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7204271554946899
    2. 'int' → logprob: -0.9704271554946899
    3. 'ent' → logprob: -2.7204270362854004
    4. 'ints' → logprob: -2.8454270362854004
    5. 'inte' → logprob: -4.7204270362854
    6. '(int' → logprob: -7.2204270362854
    7. 'li' → logprob: -8.220427513122559
    8. '(n' → logprob: -8.470427513122559
    9. ' n' → logprob: -9.970427513122559
    10. 'LI' → logprob: -10.345427513122559

Token 916: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0003010233340319246
    2. 't' → logprob: -8.375301361083984
    3. 'ier' → logprob: -10.125301361083984
    4. 'ières' → logprob: -10.625301361083984
    5. '```' → logprob: -13.500301361083984
    6. 'tiers' → logprob: -14.125301361083984
    7. 'i' → logprob: -14.125301361083984
    8. 'ière' → logprob: -14.875301361083984
    9. 'teurs' → logprob: -15.375301361083984
    10. '(n' → logprob: -15.375301361083984

Token 917: ' H' (ID: 487)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018408384174108505
    2. 'l' → logprob: -4.643408298492432
    3. 'A' → logprob: -5.768408298492432
    4. 'lst' → logprob: -6.018408298492432
    5. 'data' → logprob: -6.768408298492432
    6. 'arr' → logprob: -6.893408298492432
    7. 'li' → logprob: -7.393408298492432
    8. 'L' → logprob: -8.76840877532959
    9. 'v' → logprob: -10.51840877532959
    10. ' =' → logprob: -10.64340877532959

Token 918: ' depuis' (ID: 16277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08606700599193573
    2. ' =' → logprob: -2.586066961288452
    3. '()' → logprob: -5.586067199707031
    4. 'H' → logprob: -5.711067199707031
    5. '()
' → logprob: -9.586067199707031
    6. '(H' → logprob: -11.961067199707031
    7. 'h' → logprob: -12.461067199707031
    8. 's' → logprob: -12.461067199707031
    9. 'n' → logprob: -13.211067199707031
    10. '=
' → logprob: -13.586067199707031

Token 919: ' l' (ID: 305)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.002895928919315338
    2. 'sys' → logprob: -6.377895832061768
    3. 'li' → logprob: -8.252896308898926
    4. 'input' → logprob: -8.252896308898926
    5. 'stdin' → logprob: -8.877896308898926
    6. 'LS' → logprob: -9.252896308898926
    7. 'the' → logprob: -9.377896308898926
    8. ' LI' → logprob: -9.377896308898926
    9. '()' → logprob: -9.502896308898926
    10. 'L' → logprob: -10.252896308898926

Token 920: ''entrée' (ID: 115820)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4641776382923126
    2. 'input' → logprob: -1.8391776084899902
    3. 'LI' → logprob: -2.3391776084899902
    4. '()
' → logprob: -3.5891776084899902
    5. '=' → logprob: -4.08917760848999
    6. '[' → logprob: -4.33917760848999
    7. 'I' → logprob: -4.83917760848999
    8. 'n' → logprob: -5.46417760848999
    9. 'L' → logprob: -5.58917760848999
    10. 'stdin' → logprob: -5.58917760848999

Token 921: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016505412058904767
    2. '()
' → logprob: -7.126650333404541
    3. '=' → logprob: -7.626650333404541
    4. 'H' → logprob: -8.0016508102417
    5. ' =' → logprob: -10.8766508102417
    6. '()
' → logprob: -12.8766508102417
    7. '()

' → logprob: -14.3766508102417
    8. '(' → logprob: -15.0016508102417
    9. '#' → logprob: -15.1266508102417
    10. '(H' → logprob: -16.001649856567383

Token 922: ',
' (ID: 412)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.703443770878948e-06
    2. ' =' → logprob: -12.500007629394531
    3. '=' → logprob: -13.000007629394531
    4. '(H' → logprob: -13.875007629394531
    5. '
' → logprob: -14.875007629394531
    6. ' H' → logprob: -15.750007629394531
    7. '#' → logprob: -16.62500762939453
    8. '()' → logprob: -16.75000762939453
    9. '()
' → logprob: -17.25000762939453
    10. ':' → logprob: -19.62500762939453

Token 923: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.6240566083070007e-06
    2. ' H' → logprob: -13.375001907348633
    3. '#' → logprob: -17.500001907348633
    4. ' =' → logprob: -20.000001907348633
    5. '=' → logprob: -21.125001907348633
    6. 'which' → logprob: -21.875001907348633
    7. 's' → logprob: -22.000001907348633
    8. '
' → logprob: -22.125001907348633
    9. '   ' → logprob: -22.375001907348633
    10. '(H' → logprob: -22.375001907348633

Token 924: ' puis' (ID: 18766)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.8624639324116288e-06
    2. ' H' → logprob: -13.750001907348633
    3. '#' → logprob: -14.625001907348633
    4. '
' → logprob: -15.375001907348633
    5. '```' → logprob: -18.500001907348633
    6. '

' → logprob: -19.000001907348633
    7. '=' → logprob: -19.125001907348633
    8. ' =' → logprob: -19.250001907348633
    9. 'for' → logprob: -19.500001907348633
    10. 'h' → logprob: -19.625001907348633

Token 925: ' ajout' (ID: 64605)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.02490651048719883
    2. '#' → logprob: -3.8999063968658447
    3. 'heap' → logprob: -6.774906635284424
    4. 'for' → logprob: -7.274906635284424
    5. ' H' → logprob: -7.524906635284424
    6. 'h' → logprob: -7.774906635284424
    7. 'def' → logprob: -8.899906158447266
    8. 'l' → logprob: -9.024906158447266
    9. 'sorted' → logprob: -9.149906158447266
    10. 'tri' → logprob: -9.274906158447266

Token 926: ' de' (ID: 334)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.259382963180542
    2. '(' → logprob: -2.259382963180542
    3. '=' → logprob: -3.509382963180542
    4. ' =' → logprob: -3.759382963180542
    5. 'e' → logprob: -3.884382963180542
    6. '([' → logprob: -4.384383201599121
    7. 'er' → logprob: -4.509383201599121
    8. '.append' → logprob: -5.884383201599121
    9. 'd' → logprob: -6.009383201599121
    10. 'a' → logprob: -6.009383201599121

Token 927: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0090824905782938
    2. ' [' → logprob: -4.884082317352295
    3. '0' → logprob: -6.759082317352295
    4. '[-' → logprob: -9.009082794189453
    5. '[n' → logprob: -9.134082794189453
    6. '1' → logprob: -10.259082794189453
    7. ' ' → logprob: -11.009082794189453
    8. 'H' → logprob: -11.259082794189453
    9. '[]' → logprob: -12.509082794189453
    10. ' H' → logprob: -13.134082794189453

Token 928: ' valeur' (ID: 41664)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5435277819633484
    2. '0' → logprob: -0.9185277819633484
    3. ' [' → logprob: -4.168527603149414
    4. ' ' → logprob: -5.543527603149414
    5. 'INF' → logprob: -8.543527603149414
    6. '1' → logprob: -9.293527603149414
    7. 's' → logprob: -9.543527603149414
    8. 'prem' → logprob: -9.668527603149414
    9. '[n' → logprob: -10.043527603149414
    10. ' INF' → logprob: -10.418527603149414

Token 929: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0411245822906494
    2. '0' → logprob: -1.1661245822906494
    3. '[' → logprob: -1.7911245822906494
    4. 'INF' → logprob: -3.0411245822906494
    5. '.append' → logprob: -3.4161245822906494
    6. ' =' → logprob: -3.7911245822906494
    7. 's' → logprob: -3.9161245822906494
    8. '=' → logprob: -4.79112434387207
    9. '([' → logprob: -4.91612434387207
    10. ' ' → logprob: -4.91612434387207

Token 930: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4473804533481598
    2. 'INF' → logprob: -1.0723804235458374
    3. '(' → logprob: -4.447380542755127
    4. '[' → logprob: -5.572380542755127
    5. '(IN' → logprob: -6.572380542755127
    6. '1' → logprob: -7.447380542755127
    7. 'd' → logprob: -9.197380065917969
    8. 'inf' → logprob: -9.572380065917969
    9. 'de' → logprob: -9.697380065917969
    10. ' INF' → logprob: -9.697380065917969

Token 931: ' à' (ID: 1221)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.16779106855392456
    2. '
' → logprob: -3.1677911281585693
    3. '(H' → logprob: -3.5427911281585693
    4. ' =' → logprob: -3.6677911281585693
    5. '.append' → logprob: -3.6677911281585693
    6. '+' → logprob: -4.29279088973999
    7. '=' → logprob: -5.29279088973999
    8. ',' → logprob: -5.66779088973999
    9. ' H' → logprob: -6.66779088973999
    10. ' +' → logprob: -6.79279088973999

Token 932: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0009720868547447026
    2. 'la' → logprob: -7.875972270965576
    3. ' H' → logprob: -8.000971794128418
    4. '[' → logprob: -8.875971794128418
    5. ' la' → logprob: -9.750971794128418
    6. 'l' → logprob: -10.125971794128418
    7. 'the' → logprob: -12.375971794128418
    8. 'len' → logprob: -13.000971794128418
    9. '[]' → logprob: -13.750971794128418
    10. 'head' → logprob: -13.750971794128418

Token 933: ' fin' (ID: 2131)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00029589756741188467
    2. ' H' → logprob: -8.375295639038086
    3. 's' → logprob: -11.375295639038086
    4. 'liste' → logprob: -11.375295639038086
    5. 'end' → logprob: -11.875295639038086
    6. '[' → logprob: -12.000295639038086
    7. '#' → logprob: -12.250295639038086
    8. 'n' → logprob: -13.000295639038086
    9. 'begin' → logprob: -13.000295639038086
    10. 'la' → logprob: -13.125295639038086

Token 934: ' de' (ID: 334)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0017968006432056427
    2. ' =' → logprob: -6.626796722412109
    3. '=' → logprob: -8.00179672241211
    4. '(H' → logprob: -9.25179672241211
    5. '
' → logprob: -11.12679672241211
    6. ',' → logprob: -11.50179672241211
    7. ' H' → logprob: -11.87679672241211
    8. ':' → logprob: -13.62679672241211
    9. '#' → logprob: -14.25179672241211
    10. '   ' → logprob: -14.37679672241211

Token 935: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -5.32392441527918e-05
    2. ' H' → logprob: -9.875053405761719
    3. 'la' → logprob: -14.000053405761719
    4. '(H' → logprob: -14.375053405761719
    5. 'l' → logprob: -16.12505340576172
    6. ' la' → logprob: -16.50005340576172
    7. '`' → logprob: -17.12505340576172
    8. 'the' → logprob: -17.50005340576172
    9. '```' → logprob: -17.50005340576172
    10. ' ' → logprob: -18.12505340576172

Token 936: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.007424299139529467
    2. 'liste' → logprob: -5.382424354553223
    3. 'list' → logprob: -6.632424354553223
    4. ' H' → logprob: -6.757424354553223
    5. '#' → logprob: -8.632424354553223
    6. ' liste' → logprob: -9.257424354553223
    7. ' list' → logprob: -10.632424354553223
    8. 'lista' → logprob: -12.882424354553223
    9. '(H' → logprob: -13.132424354553223
    10. '_H' → logprob: -13.257424354553223

Token 937: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -4.727905979962088e-05
    2. '
' → logprob: -10.25004768371582
    3. ' =' → logprob: -11.62504768371582
    4. '=' → logprob: -13.37504768371582
    5. '(H' → logprob: -14.12504768371582
    6. ' H' → logprob: -14.75004768371582
    7. 'h' → logprob: -16.12504768371582
    8. '
' → logprob: -16.75004768371582
    9. '_H' → logprob: -16.87504768371582
    10. '#' → logprob: -17.12504768371582

Token 938: 'cela' (ID: 109559)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.306760805164231e-05
    2. ' H' → logprob: -12.12501335144043
    3. '1' → logprob: -13.00001335144043
    4. ')' → logprob: -13.12501335144043
    5. '[' → logprob: -14.00001335144043
    6. 'h' → logprob: -14.87501335144043
    7. ').' → logprob: -15.00001335144043
    8. ')
' → logprob: -15.12501335144043
    9. '(H' → logprob: -15.12501335144043
    10. '
' → logprob: -15.25001335144043

Token 939: ' protège' (ID: 192129)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.42006582021713257
    2. '.append' → logprob: -1.1700658798217773
    3. '=' → logprob: -4.170065879821777
    4. ' =' → logprob: -4.920065879821777
    5. '+=' → logprob: -5.295065879821777
    6. ' +=' → logprob: -6.670065879821777
    7. '.' → logprob: -6.795065879821777
    8. ')' → logprob: -7.170065879821777
    9. 'n' → logprob: -7.420065879821777
    10. '.extend' → logprob: -8.170065879821777

Token 940: ' souvent' (ID: 28137)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0009914840338751674
    2. 'H' → logprob: -7.125991344451904
    3. '(' → logprob: -9.875991821289062
    4. ')' → logprob: -9.875991821289062
    5. '(
' → logprob: -10.250991821289062
    6. '#' → logprob: -10.875991821289062
    7. '   ' → logprob: -12.000991821289062
    8. 'de' → logprob: -12.625991821289062
    9. ' (' → logprob: -12.875991821289062
    10. ' H' → logprob: -13.000991821289062

Token 941: ' contre' (ID: 17771)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.11671726405620575
    2. '(H' → logprob: -2.2417173385620117
    3. ' H' → logprob: -6.366717338562012
    4. ')' → logprob: -6.491717338562012
    5. ',' → logprob: -8.366717338562012
    6. '#' → logprob: -9.491717338562012
    7. '(' → logprob: -9.866717338562012
    8. 'la' → logprob: -10.241717338562012
    9. '   ' → logprob: -10.366717338562012
    10. ')
' → logprob: -10.866717338562012

Token 942: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17402750253677368
    2. 'index' → logprob: -2.799027442932129
    3. 'les' → logprob: -3.049027442932129
    4. 'un' → logprob: -4.174027442932129
    5. 'H' → logprob: -4.424027442932129
    6. 'une' → logprob: -5.174027442932129
    7. ' l' → logprob: -5.174027442932129
    8. 'Index' → logprob: -5.424027442932129
    9. 'des' → logprob: -5.674027442932129
    10. 'out' → logprob: -6.674027442932129

Token 943: ' déb' (ID: 37874)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.24352307617664337
    2. 'Index' → logprob: -1.618523120880127
    3. 'out' → logprob: -4.743523120880127
    4. 'er' → logprob: -5.118523120880127
    5. 'ind' → logprob: -6.743523120880127
    6. ' Index' → logprob: -7.868523120880127
    7. 'indices' → logprob: -8.118522644042969
    8. ' erreurs' → logprob: -8.243522644042969
    9. 'indexes' → logprob: -8.493522644042969
    10. 'b' → logprob: -8.993522644042969

Token 944: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.8240277171134949
    2. 'ug' → logprob: -0.9490277171134949
    3. 'ut' → logprob: -1.8240277767181396
    4. 'uts' → logprob: -4.5740275382995605
    5. 'ords' → logprob: -7.1990275382995605
    6. '[' → logprob: -7.5740275382995605
    7. ']' → logprob: -8.074028015136719
    8. '[i' → logprob: -9.074028015136719
    9. 'og' → logprob: -9.324028015136719
    10. 'ugs' → logprob: -9.449028015136719

Token 945: 'ements' (ID: 4507)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7483392953872681
    2. 'ure' → logprob: -1.873339295387268
    3. '])' → logprob: -2.3733391761779785
    4. 'eur' → logprob: -2.7483391761779785
    5. 'e' → logprob: -3.1233391761779785
    6. 'H' → logprob: -3.3733391761779785
    7. '+' → logprob: -3.9983391761779785
    8. ')' → logprob: -4.2483391761779785
    9. 'ue' → logprob: -4.7483391761779785
    10. '.append' → logprob: -4.8733391761779785

Token 946: ' de' (ID: 334)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.5071126222610474
    2. 'H' → logprob: -1.0071126222610474
    3. ')
' → logprob: -4.382112503051758
    4. ')' → logprob: -4.507112503051758
    5. ',' → logprob: -5.007112503051758
    6. '()
' → logprob: -7.382112503051758
    7. '(' → logprob: -7.882112503051758
    8. '#' → logprob: -8.257112503051758
    9. '
' → logprob: -8.507112503051758
    10. '()' → logprob: -8.882112503051758

Token 947: ' boucle' (ID: 174211)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03402265906333923
    2. ' H' → logprob: -4.284022808074951
    3. 'indices' → logprob: -4.659022808074951
    4. 'l' → logprob: -5.034022808074951
    5. 'index' → logprob: -6.534022808074951
    6. 'indice' → logprob: -7.409022808074951
    7. 'la' → logprob: -8.159022331237793
    8. ' indices' → logprob: -8.284022331237793
    9. ' l' → logprob: -8.534022331237793
    10. '1' → logprob: -9.159022331237793

Token 948: ' ou' (ID: 2031)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03213275596499443
    2. '(H' → logprob: -3.907132863998413
    3. ')
' → logprob: -4.657132625579834
    4. ')' → logprob: -7.032132625579834
    5. '
' → logprob: -7.532132625579834
    6. '()
' → logprob: -7.657132625579834
    7. ',' → logprob: -9.532133102416992
    8. ' H' → logprob: -11.032133102416992
    9. ',
' → logprob: -11.782133102416992
    10. '()' → logprob: -12.157133102416992

Token 949: ' simpl' (ID: 15693)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6064791679382324
    2. 'fac' → logprob: -2.6064791679382324
    3. 'indice' → logprob: -2.9814791679382324
    4. 'pour' → logprob: -3.2314791679382324
    5. 'simpl' → logprob: -3.2314791679382324
    6. 'év' → logprob: -3.3564791679382324
    7. 'g' → logprob: -3.6064791679382324
    8. 'indices' → logprob: -3.7314791679382324
    9. 'pe' → logprob: -3.8564791679382324
    10. 'per' → logprob: -3.8564791679382324

Token 950: 'ifie' (ID: 46409)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.960783839225769
    2. ']' → logprob: -1.085783839225769
    3. '+' → logprob: -3.0857839584350586
    4. ')' → logprob: -3.2107839584350586
    5. '[' → logprob: -3.5857839584350586
    6. '=' → logprob: -3.7107839584350586
    7. ')
' → logprob: -3.7107839584350586
    8. '[-' → logprob: -4.085783958435059
    9. '.append' → logprob: -4.085783958435059
    10. ']
' → logprob: -4.210783958435059

Token 951: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.013088705018162727
    2. '(H' → logprob: -4.888088703155518
    3. ' H' → logprob: -5.513088703155518
    4. 'la' → logprob: -7.513088703155518
    5. '[' → logprob: -8.388089179992676
    6. ')' → logprob: -8.513089179992676
    7. '(' → logprob: -9.138089179992676
    8. ',' → logprob: -9.263089179992676
    9. 'l' → logprob: -9.888089179992676
    10. ']' → logprob: -9.888089179992676

Token 952: ' DP' (ID: 51992)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005501491948962212
    2. ' H' → logprob: -5.3805012702941895
    3. 'liste' → logprob: -9.005501747131348
    4. 'calcul' → logprob: -9.005501747131348
    5. '#' → logprob: -9.130501747131348
    6. 'ha' → logprob: -9.880501747131348
    7. '1' → logprob: -9.880501747131348
    8. '0' → logprob: -10.255501747131348
    9. 'input' → logprob: -10.255501747131348
    10. 'h' → logprob: -10.255501747131348

Token 953: ')
' (ID: 446)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.001091162208467722
    2. ')
' → logprob: -7.376091003417969
    3. '
' → logprob: -8.376091003417969
    4. ')' → logprob: -8.626091003417969
    5. '(H' → logprob: -10.376091003417969
    6. ' H' → logprob: -12.001091003417969
    7. ',' → logprob: -12.501091003417969
    8. '#' → logprob: -13.126091003417969
    9. '()
' → logprob: -13.126091003417969
    10. '),' → logprob: -13.376091003417969

Token 954: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: 0.0
    2. ' H' → logprob: -17.375
    3. '#' → logprob: -17.875
    4. '
' → logprob: -18.625
    5. '_H' → logprob: -19.875
    6. '```' → logprob: -20.125
    7. ' =' → logprob: -20.375
    8. '(H' → logprob: -20.5
    9. 'h' → logprob: -21.25
    10. '=' → logprob: -21.375

Token 955: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0196603462100029
    2. ' =' → logprob: -4.019660472869873
    3. '.append' → logprob: -6.519660472869873
    4. '.' → logprob: -10.644659996032715
    5. '.=' → logprob: -12.144659996032715
    6. '.extend' → logprob: -12.894659996032715
    7. '=[]' → logprob: -14.019659996032715
    8. '+=' → logprob: -14.394659996032715
    9. ' ' → logprob: -15.019659996032715
    10. '=n' → logprob: -15.144659996032715

Token 956: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -2.8444881536415778e-05
    2. 'IR' → logprob: -11.125028610229492
    3. 'I' → logprob: -11.625028610229492
    4. 'L' → logprob: -13.125028610229492
    5. 'LS' → logprob: -14.125028610229492
    6. ' LI' → logprob: -14.250028610229492
    7. '[I' → logprob: -14.750028610229492
    8. '[' → logprob: -15.125028610229492
    9. 'list' → logprob: -15.500028610229492
    10. 'LR' → logprob: -16.000028610229492

Token 957: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.062126658856868744
    2. '()+' → logprob: -3.437126636505127
    3. '()
' → logprob: -3.687126636505127
    4. '+' → logprob: -6.062126636505127
    5. '+[' → logprob: -8.687127113342285
    6. '(H' → logprob: -8.937127113342285
    7. '();' → logprob: -9.062127113342285
    8. '([' → logprob: -9.687127113342285
    9. '()[' → logprob: -10.062127113342285
    10. '(' → logprob: -10.062127113342285

Token 958: ' +' (ID: 659)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.11471956968307495
    2. '.append' → logprob: -2.2397196292877197
    3. '
' → logprob: -6.989719390869141
    4. '+' → logprob: -7.614719390869141
    5. '.H' → logprob: -8.36471939086914
    6. '.' → logprob: -8.98971939086914
    7. ' H' → logprob: -10.23971939086914
    8. ' +' → logprob: -10.61471939086914
    9. '+
' → logprob: -10.73971939086914
    10. '[' → logprob: -11.98971939086914

Token 959: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. ' [' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.875001907348633
    4. ' ' → logprob: -20.125001907348633
    5. '([' → logprob: -20.500001907348633
    6. '[
' → logprob: -21.375001907348633
    7. '{' → logprob: -21.375001907348633
    8. '1' → logprob: -21.625001907348633
    9. '[i' → logprob: -21.750001907348633
    10. '[S' → logprob: -21.875001907348633

Token 960: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '' → logprob: -20.5
    4. '１' → logprob: -20.625
    5. '
' → logprob: -21.5
    6. '```' → logprob: -21.5
    7. '۱' → logprob: -21.5
    8. '   ' → logprob: -21.625
    9. '(' → logprob: -22.625
    10. '-' → logprob: -22.6875

Token 961: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.180258191714529e-06
    2. ' ]' → logprob: -12.000008583068848
    3. '()]' → logprob: -13.875008583068848
    4. ')' → logprob: -14.750008583068848
    5. ']
' → logprob: -15.000008583068848
    6. ')]' → logprob: -15.250008583068848
    7. '])' → logprob: -16.25000762939453
    8. ']

' → logprob: -16.87500762939453
    9. ']()' → logprob: -17.12500762939453
    10. '0' → logprob: -17.37500762939453

Token 962: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0015349778113886714
    2. 'ans' → logprob: -7.501534938812256
    3. 'd' → logprob: -8.501535415649414
    4. '#' → logprob: -8.626535415649414
    5. 'res' → logprob: -8.876535415649414
    6. 'count' → logprob: -9.501535415649414
    7. 'stack' → logprob: -9.751535415649414
    8. 'for' → logprob: -10.251535415649414
    9. 'DP' → logprob: -10.251535415649414
    10. 'answer' → logprob: -10.251535415649414

Token 963: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003724006237462163
    2. '#' → logprob: -8.500371932983398
    3. 'ans' → logprob: -9.750371932983398
    4. 'stack' → logprob: -10.000371932983398
    5. 'DP' → logprob: -10.750371932983398
    6. 'from' → logprob: -11.000371932983398
    7. 'def' → logprob: -12.125371932983398
    8. 'd' → logprob: -12.375371932983398
    9. 'for' → logprob: -12.625371932983398
    10. 'res' → logprob: -13.250371932983398

Token 964: 'isation' (ID: 6993)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.4582246243953705
    2. 'ze' → logprob: -1.2082246541976929
    3. 's' → logprob: -3.2082245349884033
    4. '#' → logprob: -4.208224773406982
    5. 'sz' → logprob: -5.583224773406982
    6. 'ization' → logprob: -6.458224773406982
    7. 'zing' → logprob: -6.458224773406982
    8. 'dp' → logprob: -6.583224773406982
    9. 'stack' → logprob: -6.833224773406982
    10. 'st' → logprob: -7.083224773406982

Token 965: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00015860427811276168
    2. ' dp' → logprob: -9.875158309936523
    3. 'DP' → logprob: -10.250158309936523
    4. 'd' → logprob: -10.625158309936523
    5. '#' → logprob: -11.000158309936523
    6. 'ans' → logprob: -11.625158309936523
    7. 'dist' → logprob: -12.250158309936523
    8. 'cost' → logprob: -12.625158309936523
    9. 'Dp' → logprob: -13.250158309936523
    10. 'D' → logprob: -13.375158309936523

Token 966: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.458980300929397e-05
    2. '[' → logprob: -10.00008487701416
    3. 'ans' → logprob: -10.87508487701416
    4. '[]' → logprob: -12.00008487701416
    5. 'stack' → logprob: -12.75008487701416
    6. 'dist' → logprob: -13.25008487701416
    7. ' dp' → logprob: -13.50008487701416
    8. 'DP' → logprob: -13.62508487701416
    9. 'res' → logprob: -13.87508487701416
    10. 'd' → logprob: -14.25008487701416

Token 967: ' liste' (ID: 31719)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.913265239447355e-05
    2. 'stack' → logprob: -9.375099182128906
    3. 'DP' → logprob: -12.250099182128906
    4. 'dq' → logprob: -12.500099182128906
    5. 'deque' → logprob: -13.500099182128906
    6. 'dist' → logprob: -13.500099182128906
    7. 'lst' → logprob: -14.250099182128906
    8. ' dp' → logprob: -14.500099182128906
    9. 'd' → logprob: -14.875099182128906
    10. 'ans' → logprob: -14.875099182128906

Token 968: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003485745983198285
    2. 'DP' → logprob: -8.375349044799805
    3. 'ans' → logprob: -9.625349044799805
    4. 'D' → logprob: -11.625349044799805
    5. 'd' → logprob: -12.000349044799805
    6. 'cost' → logprob: -12.125349044799805
    7. ' dp' → logprob: -12.375349044799805
    8. 'answer' → logprob: -12.500349044799805
    9. 'stack' → logprob: -13.000349044799805
    10. 'res' → logprob: -13.250349044799805

Token 969: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030150892212986946
    2. ' =' → logprob: -3.530150890350342
    3. 'dp' → logprob: -7.905150890350342
    4. '=[' → logprob: -10.4051513671875
    5. '_dp' → logprob: -14.6551513671875
    6. '[' → logprob: -15.4051513671875
    7. 'DP' → logprob: -16.1551513671875
    8. '＝' → logprob: -16.2801513671875
    9. '(dp' → logprob: -16.5301513671875
    10. '=[]' → logprob: -16.6551513671875

Token 970: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6944850087165833
    2. 'dp' → logprob: -0.6944850087165833
    3. '[n' → logprob: -6.694485187530518
    4. '[-' → logprob: -9.69448471069336
    5. ' [' → logprob: -10.44448471069336
    6. ' dp' → logprob: -13.19448471069336
    7. '[N' → logprob: -13.19448471069336
    8. '=[' → logprob: -13.69448471069336
    9. '=' → logprob: -13.81948471069336
    10. ' =' → logprob: -14.06948471069336

Token 971: ' taille' (ID: 41644)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.04062347859144211
    2. '[' → logprob: -3.290623426437378
    3. 'size' → logprob: -7.165623664855957
    4. '[length' → logprob: -7.665623664855957
    5. 'length' → logprob: -8.290623664855957
    6. 'n' → logprob: -8.415623664855957
    7. '[size' → logprob: -8.415623664855957
    8. 'tail' → logprob: -8.665623664855957
    9. '[len' → logprob: -9.040623664855957
    10. 'long' → logprob: -9.415623664855957

Token 972: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.034648578613996506
    2. 'n' → logprob: -3.4096486568450928
    3. ' (' → logprob: -7.659648418426514
    4. '(len' → logprob: -8.034648895263672
    5. 'len' → logprob: -8.909648895263672
    6. '(' → logprob: -9.909648895263672
    7. ' n' → logprob: -11.909648895263672
    8. '
' → logprob: -12.034648895263672
    9. '(
' → logprob: -12.784648895263672
    10. '[n' → logprob: -13.034648895263672

Token 973: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.318143755197525
    2. '=' → logprob: -1.6931437253952026
    3. ' =' → logprob: -2.443143844604492
    4. ' +' → logprob: -7.568143844604492
    5. 'dp' → logprob: -7.568143844604492
    6. '=[' → logprob: -8.068143844604492
    7. ']' → logprob: -8.818143844604492
    8. '[n' → logprob: -10.318143844604492
    9. 'n' → logprob: -10.443143844604492
    10. '(n' → logprob: -10.443143844604492

Token 974: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03372315689921379
    2. '1' → logprob: -3.4087231159210205
    3. '3' → logprob: -9.533722877502441
    4. ' ' → logprob: -12.658722877502441
    5. '5' → logprob: -14.658722877502441
    6. '4' → logprob: -15.471222877502441
    7. '7' → logprob: -15.908722877502441
    8. '12' → logprob: -16.033723831176758
    9. '(' → logprob: -16.408723831176758
    10. '+' → logprob: -16.471223831176758

Token 975: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4991237223148346
    2. '=' → logprob: -0.9991236925125122
    3. 'dp' → logprob: -3.7491238117218018
    4. '=[' → logprob: -6.874123573303223
    5. '[' → logprob: -9.374123573303223
    6. '_dp' → logprob: -10.499123573303223
    7. '(dp' → logprob: -11.249123573303223
    8. ',' → logprob: -11.499123573303223
    9. ' dp' → logprob: -11.499123573303223
    10. ' =[' → logprob: -12.499123573303223

Token 976: ' dont' (ID: 11562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026229120790958405
    2. '[n' → logprob: -4.151228904724121
    3. '[-' → logprob: -4.901228904724121
    4. 'dp' → logprob: -6.276228904724121
    5. 'INF' → logprob: -7.651228904724121
    6. ' [' → logprob: -8.276228904724121
    7. '[N' → logprob: -10.526228904724121
    8. '0' → logprob: -10.776228904724121
    9. '=[' → logprob: -11.901228904724121
    10. '=' → logprob: -12.651228904724121

Token 977: ' chaque' (ID: 21194)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.028022434562444687
    2. '0' → logprob: -4.028022289276123
    3. 'val' → logprob: -6.403022289276123
    4. 'la' → logprob: -6.903022289276123
    5. ' INF' → logprob: -7.028022289276123
    6. '-INF' → logprob: -7.153022289276123
    7. '_INF' → logprob: -7.278022289276123
    8. 'les' → logprob: -7.278022289276123
    9. 'inf' → logprob: -7.403022289276123
    10. 's' → logprob: -7.528022289276123

Token 978: ' cellule' (ID: 169440)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.004720853175967932
    2. 'val' → logprob: -5.629720687866211
    3. 'element' → logprob: -8.129720687866211
    4. ' élément' → logprob: -8.379720687866211
    5. '_' → logprob: -8.629720687866211
    6. 'elem' → logprob: -8.879720687866211
    7. ' valeur' → logprob: -8.879720687866211
    8. 'él' → logprob: -9.629720687866211
    9. 'entrée' → logprob: -10.504720687866211
    10. 'value' → logprob: -11.129720687866211

Token 979: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5708943009376526
    2. ' =' → logprob: -1.1958942413330078
    3. 's' → logprob: -2.695894241333008
    4. 'est' → logprob: -2.820894241333008
    5. ' vaut' → logprob: -6.070894241333008
    6. ' est' → logprob: -6.320894241333008
    7. 'val' → logprob: -7.195894241333008
    8. 'cont' → logprob: -9.320894241333008
    9. '=[]' → logprob: -9.320894241333008
    10. '.' → logprob: -9.820894241333008

Token 980: ' rempl' (ID: 66326)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.45160621404647827
    2. 'INF' → logprob: -1.076606273651123
    3. '0' → logprob: -4.826606273651123
    4. 'in' → logprob: -4.951606273651123
    5. 'init' → logprob: -6.201606273651123
    6. 'inf' → logprob: -6.951606273651123
    7. 'rem' → logprob: -7.201606273651123
    8. 'égal' → logprob: -7.326606273651123
    9. 'initialized' → logprob: -7.826606273651123
    10. 'initi' → logprob: -7.826606273651123

Token 981: 'ie' (ID: 396)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.001677079708315432
    2. 'ed' → logprob: -6.5016770362854
    3. 'ee' → logprob: -9.251677513122559
    4. 'é' → logprob: -9.626677513122559
    5. 'ated' → logprob: -11.876677513122559
    6. 'with' → logprob: -14.126677513122559
    7. 'ées' → logprob: -14.376677513122559
    8. ' with' → logprob: -14.376677513122559
    9. 'd' → logprob: -14.501677513122559
    10. '[' → logprob: -14.626677513122559

Token 982: ' avec' (ID: 3937)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8906580805778503
    2. 'with' → logprob: -1.7656581401824951
    3. ' de' → logprob: -2.140658140182495
    4. ' avec' → logprob: -2.640658140182495
    5. 'd' → logprob: -2.765658140182495
    6. 'avec' → logprob: -2.890658140182495
    7. ' with' → logprob: -3.390658140182495
    8. 'inf' → logprob: -3.640658140182495
    9. '0' → logprob: -3.890658140182495
    10. 'in' → logprob: -4.390657901763916

Token 983: ' la' (ID: 557)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.02759612165391445
    2. '-INF' → logprob: -3.7775962352752686
    3. '0' → logprob: -6.0275959968566895
    4. '-' → logprob: -6.9025959968566895
    5. '-inf' → logprob: -7.1525959968566895
    6. 'False' → logprob: -10.527596473693848
    7. 'inf' → logprob: -10.527596473693848
    8. '-in' → logprob: -10.902596473693848
    9. 'float' → logprob: -11.152596473693848
    10. '-F' → logprob: -11.402596473693848

Token 984: ' valeur' (ID: 41664)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.013784755021333694
    2. '0' → logprob: -4.763784885406494
    3. '-INF' → logprob: -6.013784885406494
    4. 'float' → logprob: -6.763784885406494
    5. '-' → logprob: -7.013784885406494
    6. '-inf' → logprob: -9.013784408569336
    7. 'inf' → logprob: -9.138784408569336
    8. 'False' → logprob: -9.388784408569336
    9. 'value' → logprob: -9.388784408569336
    10. '=' → logprob: -9.638784408569336

Token 985: ' ' (ID: 220)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.00030507624614983797
    2. '0' → logprob: -8.62530517578125
    3. '-INF' → logprob: -9.25030517578125
    4. 'inf' → logprob: -11.50030517578125
    5. '-' → logprob: -11.75030517578125
    6. '[' → logprob: -11.87530517578125
    7. ' INF' → logprob: -13.37530517578125
    8. '_INF' → logprob: -13.87530517578125
    9. 'd' → logprob: -15.00030517578125
    10. '-inf' → logprob: -15.25030517578125

Token 986: '1' (ID: 16)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0010120879160240293
    2. '-INF' → logprob: -7.626012325286865
    3. '0' → logprob: -7.751012325286865
    4. '-' → logprob: -9.751011848449707
    5. 'inf' → logprob: -10.751011848449707
    6. '-inf' → logprob: -12.126011848449707
    7. '[' → logprob: -12.501011848449707
    8. '1' → logprob: -13.626011848449707
    9. '_INF' → logprob: -13.626011848449707
    10. ' INF' → logprob: -14.501011848449707

Token 987: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018045632168650627
    2. '=' → logprob: -4.518045425415039
    3. ' =' → logprob: -5.018045425415039
    4. '=[' → logprob: -9.018045425415039
    5. ' dp' → logprob: -9.518045425415039
    6. '[' → logprob: -9.768045425415039
    7. '(dp' → logprob: -10.393045425415039
    8. ']' → logprob: -10.768045425415039
    9. '_dp' → logprob: -11.018045425415039
    10. '
' → logprob: -11.393045425415039

Token 988: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. ' dp' → logprob: -17.75
    4. '```' → logprob: -20.125
    5. ' =' → logprob: -21.5
    6. '_dp' → logprob: -21.75
    7. '`' → logprob: -22.625
    8. 'd' → logprob: -22.625
    9. 'DP' → logprob: -22.625
    10. '
' → logprob: -22.75

Token 989: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: 0.0
    2. ' dp' → logprob: -20.625
    3. '#' → logprob: -20.875
    4. '	dp' → logprob: -23.375
    5. '```' → logprob: -23.5
    6. 'd' → logprob: -23.75
    7. 'dt' → logprob: -24.125
    8. 'dpi' → logprob: -25.25
    9. '
' → logprob: -25.5
    10. 'db' → logprob: -25.75

Token 990: ' jou' (ID: 10865)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869100511074066
    2. ' =' → logprob: -1.136910080909729
    3. '=[' → logprob: -10.261910438537598
    4. 's' → logprob: -13.886910438537598
    5. '=[]' → logprob: -14.011910438537598
    6. 'dp' → logprob: -14.261910438537598
    7. ' ' → logprob: -14.636910438537598
    8. '＝' → logprob: -15.261910438537598
    9. '[' → logprob: -15.761910438537598
    10. ' =[' → logprob: -15.886910438537598

Token 991: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00034392563975416124
    2. 'ent' → logprob: -9.125344276428223
    3. 'era' → logprob: -9.625344276428223
    4. 'er' → logprob: -10.250344276428223
    5. '[' → logprob: -10.250344276428223
    6. 'eux' → logprob: -10.750344276428223
    7. '```' → logprob: -11.000344276428223
    8. 'ant' → logprob: -11.000344276428223
    9. 'ee' → logprob: -11.500344276428223
    10. '[e' → logprob: -12.125344276428223

Token 992: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16678522527217865
    2. ' [' → logprob: -2.41678524017334
    3. '[n' → logprob: -3.66678524017334
    4. ' =' → logprob: -4.04178524017334
    5. '=' → logprob: -4.79178524017334
    6. ' des' → logprob: -5.91678524017334
    7. '[]' → logprob: -6.16678524017334
    8. ' une' → logprob: -6.16678524017334
    9. ' ' → logprob: -7.41678524017334
    10. ' n' → logprob: -7.66678524017334

Token 993: ' rôle' (ID: 50119)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4109777808189392
    2. 'role' → logprob: -1.160977840423584
    3. ' rôle' → logprob: -3.785977840423584
    4. '[' → logprob: -7.785977840423584
    5. ' role' → logprob: -7.910977840423584
    6. 'rol' → logprob: -8.785977363586426
    7. ' r' → logprob: -10.285977363586426
    8. '[r' → logprob: -10.285977363586426
    9. 'roles' → logprob: -10.410977363586426
    10. '```' → logprob: -10.660977363586426

Token 994: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29696890711784363
    2. ' =' → logprob: -1.421968936920166
    3. '[' → logprob: -4.921968936920166
    4. ' de' → logprob: -5.421968936920166
    5. '=[' → logprob: -6.171968936920166
    6. 'dp' → logprob: -6.921968936920166
    7. 'de' → logprob: -7.546968936920166
    8. ' [' → logprob: -9.171968460083008
    9. 'd' → logprob: -9.296968460083008
    10. ' d' → logprob: -9.671968460083008

Token 995: ' tableau' (ID: 67053)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007598580792546272
    2. '1' → logprob: -5.257598400115967
    3. 'la' → logprob: -7.632598400115967
    4. ' [' → logprob: -7.882598400115967
    5. 'H' → logprob: -8.132598876953125
    6. 'dp' → logprob: -8.132598876953125
    7. '[n' → logprob: -9.007598876953125
    8. 'l' → logprob: -9.007598876953125
    9. 'INF' → logprob: -9.507598876953125
    10. '0' → logprob: -9.632598876953125

Token 996: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29724806547164917
    2. 'dp' → logprob: -1.422248125076294
    3. '=' → logprob: -4.672247886657715
    4. ' dp' → logprob: -6.172247886657715
    5. '=[' → logprob: -6.422247886657715
    6. '[' → logprob: -6.547247886657715
    7. ' de' → logprob: -7.422247886657715
    8. 'de' → logprob: -8.172247886657715
    9. '(dp' → logprob: -8.797247886657715
    10. '_dp' → logprob: -8.797247886657715

Token 997: ' programmation' (ID: 166376)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24573905766010284
    2. 'dp' → logprob: -1.6207391023635864
    3. '0' → logprob: -4.120738983154297
    4. 'int' → logprob: -6.745738983154297
    5. 'tail' → logprob: -7.370738983154297
    6. 'dé' → logprob: -7.870738983154297
    7. 'd' → logprob: -8.745738983154297
    8. 'base' → logprob: -8.745738983154297
    9. 'calcul' → logprob: -8.995738983154297
    10. '```' → logprob: -9.370738983154297

Token 998: ' dynamique' (ID: 98708)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005202664178796113
    2. ' =' → logprob: -7.8755202293396
    3. ' dp' → logprob: -10.000520706176758
    4. '=' → logprob: -10.375520706176758
    5. '   ' → logprob: -10.625520706176758
    6. '_dp' → logprob: -11.875520706176758
    7. 'max' → logprob: -12.375520706176758
    8. '[' → logprob: -12.750520706176758
    9. '_' → logprob: -13.000520706176758
    10. '
' → logprob: -13.125520706176758

Token 999: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0226165056228638
    2. 'dp' → logprob: -1.0226165056228638
    3. ' =' → logprob: -1.2726165056228638
    4. '=[' → logprob: -8.022616386413574
    5. '(dp' → logprob: -9.272616386413574
    6. ' dp' → logprob: -9.522616386413574
    7. '_dp' → logprob: -10.147616386413574
    8. '
' → logprob: -10.647616386413574
    9. '[' → logprob: -11.397616386413574
    10. ',' → logprob: -12.397616386413574

Token 1000: ' stock' (ID: 6546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7006903290748596
    2. 'dp' → logprob: -1.4506902694702148
    3. 'i' → logprob: -1.9506902694702148
    4. '_' → logprob: -2.825690269470215
    5. 'l' → logprob: -3.700690269470215
    6. '[i' → logprob: -3.950690269470215
    7. '1' → logprob: -4.575690269470215
    8. '0' → logprob: -6.325690269470215
    9. 'range' → logprob: -6.450690269470215
    10. 'calcul' → logprob: -6.700690269470215

Token 1001: 'er' (ID: 259)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1813453435897827
    2. ']' → logprob: -1.8063453435897827
    3. '[' → logprob: -2.1813454627990723
    4. '   ' → logprob: -2.3063454627990723
    5. 'dp' → logprob: -2.3063454627990723
    6. ' =' → logprob: -2.8063454627990723
    7. 'ée' → logprob: -2.9313454627990723
    8. ')' → logprob: -3.3063454627990723
    9. '1' → logprob: -4.181345462799072
    10. ' de' → logprob: -4.681345462799072

Token 1002: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5727508068084717
    2. '1' → logprob: -1.1977508068084717
    3. 'i' → logprob: -3.0727508068084717
    4. 'les' → logprob: -3.4477508068084717
    5. '0' → logprob: -4.072751045227051
    6. 'l' → logprob: -5.322751045227051
    7. 'le' → logprob: -5.322751045227051
    8. 'la' → logprob: -5.322751045227051
    9. '[' → logprob: -5.447751045227051
    10. 'max' → logprob: -6.072751045227051

Token 1003: ' résultats' (ID: 48985)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8947120308876038
    2. '1' → logprob: -1.644711971282959
    3. 'max' → logprob: -2.644711971282959
    4. 'long' → logprob: -2.644711971282959
    5. 'rés' → logprob: -2.644711971282959
    6. 'nombre' → logprob: -2.894711971282959
    7. 'dp' → logprob: -3.644711971282959
    8. 'result' → logprob: -4.269711971282959
    9. 'minimum' → logprob: -4.269711971282959
    10. '0' → logprob: -4.394711971282959

Token 1004: ' interm' (ID: 120489)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02217266708612442
    2. ' =' → logprob: -3.897172689437866
    3. '=' → logprob: -6.522172451019287
    4. ' dp' → logprob: -9.897172927856445
    5. '
' → logprob: -10.147172927856445
    6. '_dp' → logprob: -10.647172927856445
    7. '(dp' → logprob: -10.772172927856445
    8. '=[' → logprob: -11.147172927856445
    9. ',' → logprob: -13.022172927856445
    10. '[' → logprob: -13.147172927856445

Token 1005: 'édia' (ID: 49296)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.032606516033411026
    2. '   ' → logprob: -4.532606601715088
    3. ']' → logprob: -4.657606601715088
    4. '[' → logprob: -5.282606601715088
    5. '_dp' → logprob: -6.407606601715088
    6. ')' → logprob: -6.907606601715088
    7. '[]' → logprob: -7.657606601715088
    8. ' dp' → logprob: -7.657606601715088
    9. '
' → logprob: -7.907606601715088
    10. '[:]' → logprob: -8.15760612487793

Token 1006: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.7910094261169434
    2. 'ries' → logprob: -1.4160094261169434
    3. 'ry' → logprob: -2.4160094261169434
    4. 'aires' → logprob: -2.5410094261169434
    5. 'res' → logprob: -2.9160094261169434
    6. ']' → logprob: -3.5410094261169434
    7. '#' → logprob: -4.666009426116943
    8. 'ire' → logprob: -4.791009426116943
    9. 'n' → logprob: -5.166009426116943
    10. 'tion' → logprob: -5.541009426116943

Token 1007: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00010711929644457996
    2. ' =' → logprob: -9.500106811523438
    3. '=' → logprob: -11.000106811523438
    4. '
' → logprob: -11.125106811523438
    5. ' dp' → logprob: -14.875106811523438
    6. '#' → logprob: -16.625106811523438
    7. '_dp' → logprob: -16.875106811523438
    8. '[' → logprob: -17.125106811523438
    9. '(dp' → logprob: -17.125106811523438
    10. '=
' → logprob: -17.500106811523438

Token 1008: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.8206473871250637e-05
    2. '[' → logprob: -10.500028610229492
    3. ' dp' → logprob: -15.750028610229492
    4. ' =' → logprob: -15.875028610229492
    5. '[n' → logprob: -16.250028610229492
    6. '```' → logprob: -16.375028610229492
    7. '=' → logprob: -17.125028610229492
    8. '`' → logprob: -18.375028610229492
    9. '=[' → logprob: -18.375028610229492
    10. '
' → logprob: -18.750028610229492

Token 1009: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141783356666565
    2. ' =' → logprob: -1.7014178037643433
    3. '=[' → logprob: -12.576417922973633
    4. '[' → logprob: -14.951417922973633
    5. ' =[' → logprob: -14.951417922973633
    6. '＝' → logprob: -15.201417922973633
    7. '=[]' → logprob: -16.576417922973633
    8. '   ' → logprob: -17.451417922973633
    9. ' ' → logprob: -17.701417922973633
    10. ']' → logprob: -18.076417922973633

Token 1010: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.869017852295656e-06
    2. ' [' → logprob: -12.000006675720215
    3. '[n' → logprob: -14.375006675720215
    4. '1' → logprob: -19.12500762939453
    5. '   ' → logprob: -20.25000762939453
    6. '[len' → logprob: -20.25000762939453
    7. ' ' → logprob: -20.87500762939453
    8. '[-' → logprob: -21.25000762939453
    9. 'n' → logprob: -21.50000762939453
    10. '([' → logprob: -21.62500762939453

Token 1011: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.25
    3. ' ' → logprob: -17.875
    4. '(' → logprob: -20.25
    5. '   ' → logprob: -20.625
    6. 'float' → logprob: -20.75
    7. '100' → logprob: -21.0
    8. '-' → logprob: -21.125
    9. 'INF' → logprob: -21.5
    10. '10' → logprob: -21.625

Token 1012: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013029761612415314
    2. ']*(' → logprob: -7.251303195953369
    3. 'for' → logprob: -7.876303195953369
    4. ' for' → logprob: -9.001302719116211
    5. ']*' → logprob: -9.376302719116211
    6. ']+' → logprob: -12.376302719116211
    7. ' ]' → logprob: -14.501302719116211
    8. ')' → logprob: -15.751302719116211
    9. ' ' → logprob: -16.25130271911621
    10. '   ' → logprob: -16.50130271911621

Token 1013: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.768429160118103
    2. ']*(' → logprob: -1.518429160118103
    3. ' for' → logprob: -1.643429160118103
    4. ']' → logprob: -2.1434292793273926
    5. '*(' → logprob: -5.893429279327393
    6. ']*' → logprob: -5.893429279327393
    7. '*' → logprob: -7.268429279327393
    8. ']+' → logprob: -8.018428802490234
    9. ' *' → logprob: -10.018428802490234
    10. '(n' → logprob: -11.268428802490234

Token 1014: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.8670179997570813e-05
    2. ' (' → logprob: -11.375019073486328
    3. '(' → logprob: -12.125019073486328
    4. '(len' → logprob: -13.875019073486328
    5. '((' → logprob: -14.500019073486328
    6. '(N' → logprob: -16.250019073486328
    7. '   ' → logprob: -16.875019073486328
    8. '(max' → logprob: -16.875019073486328
    9. '(
' → logprob: -18.375019073486328
    10. '
' → logprob: -18.750019073486328

Token 1015: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012618189677596092
    2. 'n' → logprob: -4.387618064880371
    3. ' (' → logprob: -9.512618064880371
    4. '(' → logprob: -10.512618064880371
    5. '(len' → logprob: -12.262618064880371
    6. ' n' → logprob: -14.137618064880371
    7. 'len' → logprob: -14.262618064880371
    8. '(
' → logprob: -14.887618064880371
    9. '
' → logprob: -15.262618064880371
    10. '((' → logprob: -15.512618064880371

Token 1016: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.685467764735222e-05
    2. ' +' → logprob: -9.375086784362793
    3. '+
' → logprob: -13.250086784362793
    4. '＋' → logprob: -15.875086784362793
    5. '+n' → logprob: -16.37508773803711
    6. '()+' → logprob: -17.25008773803711
    7. ')+' → logprob: -18.12508773803711
    8. ')' → logprob: -19.00008773803711
    9. '1' → logprob: -19.12508773803711
    10. '+)' → logprob: -19.62508773803711

Token 1017: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6326004862785339
    2. '1' → logprob: -0.7576004862785339
    3. ' ' → logprob: -14.132600784301758
    4. '```' → logprob: -15.882600784301758
    5. '10' → logprob: -16.070100784301758
    6. '5' → logprob: -16.132600784301758
    7. '   ' → logprob: -16.195100784301758
    8. '3' → logprob: -16.820100784301758
    9. '
' → logprob: -17.132600784301758
    10. '11' → logprob: -17.257600784301758

Token 1018: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002475777640938759
    2. '2' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.12747573852539
    4. '１' → logprob: -17.37747573852539
    5. '```' → logprob: -17.43997573852539
    6. '   ' → logprob: -18.18997573852539
    7. '
' → logprob: -18.25247573852539
    8. '3' → logprob: -18.31497573852539
    9. '11' → logprob: -18.68997573852539
    10. '+' → logprob: -18.81497573852539

Token 1019: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.500000953674316
    4. ']' → logprob: -15.625000953674316
    5. ')`' → logprob: -16.875
    6. ')
' → logprob: -17.0
    7. ')]' → logprob: -17.625
    8. ')#' → logprob: -17.875
    9. '）' → logprob: -18.75
    10. '))' → logprob: -19.125

Token 1020: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008652626536786556
    2. ' for' → logprob: -5.008652687072754
    3. '
' → logprob: -6.508652687072754
    4. ')' → logprob: -9.133652687072754
    5. '#' → logprob: -9.633652687072754
    6. ' 
' → logprob: -9.758652687072754
    7. 'i' → logprob: -9.883652687072754
    8. 'dp' → logprob: -10.133652687072754
    9. '.' → logprob: -11.008652687072754
    10. '' → logprob: -11.008652687072754

Token 1021: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.676981345459353e-06
    2. 'stack' → logprob: -12.375005722045898
    3. ' for' → logprob: -14.875005722045898
    4. 'fo' → logprob: -15.250005722045898
    5. 'i' → logprob: -15.500005722045898
    6. 'from' → logprob: -15.625005722045898
    7. 'f' → logprob: -16.5000057220459
    8. 'def' → logprob: -16.7500057220459
    9. 'dp' → logprob: -16.8750057220459
    10. 'ans' → logprob: -17.8750057220459

Token 1022: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.12087497860193253
    2. 'c' → logprob: -2.2458748817443848
    3. 'for' → logprob: -5.245874881744385
    4. 'r' → logprob: -7.370874881744385
    5. 'cles' → logprob: -7.370874881744385
    6. 'clé' → logprob: -7.370874881744385
    7. 'cl' → logprob: -7.745874881744385
    8. '_c' → logprob: -9.620875358581543
    9. 'cler' → logprob: -9.620875358581543
    10. '#' → logprob: -9.745875358581543

Token 1023: ' principale' (ID: 68926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.861651490908116e-05
    2. ' for' → logprob: -10.500068664550781
    3. '_' → logprob: -10.625068664550781
    4. 'i' → logprob: -11.250068664550781
    5. '
' → logprob: -12.625068664550781
    6. '_for' → logprob: -16.25006866455078
    7. 'range' → logprob: -16.25006866455078
    8. 'f' → logprob: -16.50006866455078
    9. ':' → logprob: -17.12506866455078
    10. 'r' → logprob: -17.12506866455078

Token 1024: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0180790014564991
    2. '
' → logprob: -4.768078804016113
    3. ':' → logprob: -5.268078804016113
    4. ' for' → logprob: -5.518078804016113
    5. ':
' → logprob: -8.393078804016113
    6. ' 
' → logprob: -11.768078804016113
    7. 'i' → logprob: -11.893078804016113
    8. 'in' → logprob: -13.518078804016113
    9. '

' → logprob: -13.643078804016113
    10. ',' → logprob: -13.643078804016113

Token 1025: ' it' (ID: 480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21439070999622345
    2. '_' → logprob: -2.714390754699707
    3. ' for' → logprob: -2.964390754699707
    4. 'range' → logprob: -3.339390754699707
    5. ' i' → logprob: -3.714390754699707
    6. ' range' → logprob: -4.714390754699707
    7. 'i' → logprob: -5.214390754699707
    8. '=' → logprob: -8.214390754699707
    9. '_range' → logprob: -8.589390754699707
    10. ')' → logprob: -9.214390754699707

Token 1026: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.19116617739200592
    2. 'range' → logprob: -1.8161661624908447
    3. 'ère' → logprob: -5.441166400909424
    4. 'é' → logprob: -6.191166400909424
    5. 'èr' → logprob: -7.191166400909424
    6. 'e' → logprob: -7.441166400909424
    7. 'r' → logprob: -7.816166400909424
    8. 'for' → logprob: -7.941166400909424
    9. 'ér' → logprob: -8.316165924072266
    10. '_range' → logprob: -8.441165924072266

Token 1027: ' sur' (ID: 1512)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2547036111354828
    2. 'for' → logprob: -2.0047035217285156
    3. '(i' → logprob: -2.8797035217285156
    4. '_' → logprob: -3.6297035217285156
    5. ' i' → logprob: -5.629703521728516
    6. '(n' → logprob: -6.379703521728516
    7. ' for' → logprob: -7.254703521728516
    8. 'n' → logprob: -8.004703521728516
    9. 'in' → logprob: -8.004703521728516
    10. 'range' → logprob: -8.129703521728516

Token 1028: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.8961017202818766e-05
    2. 'i' → logprob: -9.875059127807617
    3. ' range' → logprob: -11.875059127807617
    4. 'rang' → logprob: -15.125059127807617
    5. 'r' → logprob: -15.250059127807617
    6. '(range' → logprob: -17.625059127807617
    7. 're' → logprob: -18.250059127807617
    8. '_range' → logprob: -18.375059127807617
    9. '_' → logprob: -18.875059127807617
    10. 'ra' → logprob: -19.125059127807617

Token 1029: ' indice' (ID: 90848)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4601956605911255
    2. ' i' → logprob: -1.4601956605911255
    3. ' range' → logprob: -2.585195541381836
    4. 'range' → logprob: -2.835195541381836
    5. '_' → logprob: -6.085195541381836
    6. '_i' → logprob: -9.085195541381836
    7. '_range' → logprob: -9.585195541381836
    8. ' _' → logprob: -10.460195541381836
    9. 'index' → logprob: -11.585195541381836
    10. 'x' → logprob: -11.960195541381836

Token 1030: ' k' (ID: 372)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8784869313240051
    2. ' range' → logprob: -1.6284868717193604
    3. '_' → logprob: -1.8784868717193604
    4. 'in' → logprob: -2.1284868717193604
    5. 'range' → logprob: -2.2534868717193604
    6. ' i' → logprob: -5.2534871101379395
    7. 'i' → logprob: -5.3784871101379395
    8. ' for' → logprob: -7.8784871101379395
    9. '_range' → logprob: -8.003486633300781
    10. ' _' → logprob: -8.378486633300781

Token 1031: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.465317964553833
    2. 'in' → logprob: -1.215317964553833
    3. 'for' → logprob: -3.215317964553833
    4. 'range' → logprob: -3.965317964553833
    5. ',' → logprob: -4.715317726135254
    6. ' for' → logprob: -5.590317726135254
    7. ' range' → logprob: -6.715317726135254
    8. ':' → logprob: -7.090317726135254
    9. '(' → logprob: -7.590317726135254
    10. '(k' → logprob: -8.090317726135254

Token 1032: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078878089785576
    2. ' range' → logprob: -5.5040788650512695
    3. 'rang' → logprob: -15.37907886505127
    4. '(range' → logprob: -16.379079818725586
    5. '	range' → logprob: -16.879079818725586
    6. 'la' → logprob: -17.504079818725586
    7. 'r' → logprob: -18.129079818725586
    8. 'ra' → logprob: -18.254079818725586
    9. ' ' → logprob: -18.379079818725586
    10. 're' → logprob: -18.379079818725586

Token 1033: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '(range' → logprob: -17.000003814697266
    4. 'H' → logprob: -18.125003814697266
    5. 'rang' → logprob: -18.750003814697266
    6. '   ' → logprob: -18.875003814697266
    7. 'la' → logprob: -19.250003814697266
    8. 'r' → logprob: -19.500003814697266
    9. '```' → logprob: -19.500003814697266
    10. 're' → logprob: -19.875003814697266

Token 1034: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21318145096302032
    2. ',n' → logprob: -2.088181495666504
    3. 'range' → logprob: -3.338181495666504
    4. 'for' → logprob: -4.588181495666504
    5. 'in' → logprob: -4.838181495666504
    6. ' in' → logprob: -5.213181495666504
    7. ' range' → logprob: -5.463181495666504
    8. ' for' → logprob: -6.588181495666504
    9. 'n' → logprob: -7.588181495666504
    10. '   ' → logprob: -7.713181495666504

Token 1035: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.1928003813372925e-05
    2. ' n' → logprob: -9.875051498413086
    3. '(n' → logprob: -15.500051498413086
    4. '1' → logprob: -16.875051498413086
    5. '
' → logprob: -17.000051498413086
    6. 'k' → logprob: -17.750051498413086
    7. '   ' → logprob: -17.875051498413086
    8. 'range' → logprob: -18.000051498413086
    9. '```' → logprob: -18.625051498413086
    10. '	n' → logprob: -18.875051498413086

Token 1036: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4724801182746887
    2. ':' → logprob: -1.097480058670044
    3. ':
' → logprob: -3.347480058670044
    4. ' for' → logprob: -5.222480297088623
    5. '
' → logprob: -6.472480297088623
    6. ',' → logprob: -8.347479820251465
    7. 'range' → logprob: -8.597479820251465
    8. '(k' → logprob: -9.722479820251465
    9. 'n' → logprob: -9.972479820251465
    10. 'in' → logprob: -9.972479820251465

Token 1037: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48504066467285156
    2. 'n' → logprob: -0.9850406646728516
    3. ' n' → logprob: -5.110040664672852
    4. '+' → logprob: -5.610040664672852
    5. '
' → logprob: -7.610040664672852
    6. ')' → logprob: -7.860040664672852
    7. ' ' → logprob: -9.610040664672852
    8. '   ' → logprob: -9.985040664672852
    9. 'range' → logprob: -10.360040664672852
    10. '```' → logprob: -10.485040664672852

Token 1038: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032616076059639454
    2. ' for' → logprob: -6.378261566162109
    3. '
' → logprob: -6.753261566162109
    4. ':' → logprob: -8.00326156616211
    5. ':
' → logprob: -9.87826156616211
    6. 'k' → logprob: -13.37826156616211
    7. ',' → logprob: -14.00326156616211
    8. '   ' → logprob: -14.62826156616211
    9. ' 
' → logprob: -14.75326156616211
    10. '```' → logprob: -14.87826156616211

Token 1039: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08893270045518875
    2. ':' → logprob: -2.838932752609253
    3. ' for' → logprob: -4.088932514190674
    4. '
' → logprob: -4.838932514190674
    5. ':
' → logprob: -6.588932514190674
    6. 'k' → logprob: -8.213932991027832
    7. ',' → logprob: -9.338932991027832
    8. '(k' → logprob: -10.213932991027832
    9. '[k' → logprob: -10.463932991027832
    10. '  
' → logprob: -10.963932991027832

Token 1040: 'n' (ID: 77)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6662177443504333
    2. 'range' → logprob: -1.6662178039550781
    3. ')' → logprob: -1.9162178039550781
    4. 'n' → logprob: -2.166217803955078
    5. 'k' → logprob: -4.416217803955078
    6. '
' → logprob: -4.916217803955078
    7. ' for' → logprob: -5.041217803955078
    8. ' range' → logprob: -5.541217803955078
    9. '):' → logprob: -5.666217803955078
    10. ')n' → logprob: -7.166217803955078

Token 1041: ' it' (ID: 480)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4857396185398102
    2. '+' → logprob: -1.9857395887374878
    3. ')' → logprob: -2.2357397079467773
    4. '):
' → logprob: -2.3607397079467773
    5. '
' → logprob: -3.7357397079467773
    6. ':' → logprob: -4.860739707946777
    7. 'for' → logprob: -5.485739707946777
    8. ' ):' → logprob: -6.485739707946777
    9. ',' → logprob: -6.735739707946777
    10. ' +' → logprob: -6.860739707946777

Token 1042: 'érations' (ID: 152860)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8248439431190491
    2. '+' → logprob: -1.3248438835144043
    3. '):
' → logprob: -1.3248438835144043
    4. '
' → logprob: -4.449843883514404
    5. ')' → logprob: -5.699843883514404
    6. ':' → logprob: -5.949843883514404
    7. '```' → logprob: -6.199843883514404
    8. 'range' → logprob: -6.574843883514404
    9. '+
' → logprob: -7.074843883514404
    10. '   ' → logprob: -7.199843883514404

Token 1043: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014404185116291046
    2. ':
' → logprob: -4.389404296875
    3. '):' → logprob: -6.389404296875
    4. ')' → logprob: -9.264404296875
    5. '):
' → logprob: -9.764404296875
    6. ' :' → logprob: -10.389404296875
    7. ',' → logprob: -10.889404296875
    8. '   ' → logprob: -12.639404296875
    9. ' :
' → logprob: -13.014404296875
    10. ']:' → logprob: -13.514404296875

Token 1044: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00027182576013728976
    2. ' for' → logprob: -8.250271797180176
    3. 'k' → logprob: -12.000271797180176
    4. '
' → logprob: -13.000271797180176
    5. '```' → logprob: -13.250271797180176
    6. '   ' → logprob: -15.375271797180176
    7. 'range' → logprob: -15.875271797180176
    8. ':' → logprob: -16.875272750854492
    9. 'r' → logprob: -17.875272750854492
    10. 'f' → logprob: -18.750272750854492

Token 1045: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4740847051143646
    2. ' k' → logprob: -0.974084734916687
    3. '_k' → logprob: -12.099084854125977
    4. '_' → logprob: -14.224084854125977
    5. '	k' → logprob: -14.474084854125977
    6. ' ' → logprob: -15.224084854125977
    7. ' _' → logprob: -15.349084854125977
    8. ' ' → logprob: -15.474084854125977
    9. 'i' → logprob: -16.099084854125977
    10. ' i' → logprob: -16.474084854125977

Token 1046: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16024057567119598
    2. 'in' → logprob: -1.9102405309677124
    3. ',' → logprob: -11.910240173339844
    4. '+' → logprob: -13.035240173339844
    5. ' ' → logprob: -13.035240173339844
    6. '.' → logprob: -14.535240173339844
    7. '	in' → logprob: -14.535240173339844
    8. 'import' → logprob: -14.660240173339844
    9. 'k' → logprob: -14.785240173339844
    10. ')' → logprob: -14.910240173339844

Token 1047: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975187823176384
    2. ' range' → logprob: -3.529751777648926
    3. ' ' → logprob: -14.404751777648926
    4. '	range' → logprob: -15.529751777648926
    5. 'rang' → logprob: -15.904751777648926
    6. '0' → logprob: -16.029752731323242
    7. '(range' → logprob: -16.279752731323242
    8. 'ran' → logprob: -16.529752731323242
    9. ')' → logprob: -16.904752731323242
    10. '   ' → logprob: -17.404752731323242

Token 1048: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0141762038692832
    2. '(' → logprob: -4.264176368713379
    3. '(
' → logprob: -11.639176368713379
    4. ' (' → logprob: -12.639176368713379
    5. 'n' → logprob: -14.764176368713379
    6. ' n' → logprob: -15.639176368713379
    7. '(

' → logprob: -17.514175415039062
    8. '(k' → logprob: -17.639175415039062
    9. '(len' → logprob: -17.889175415039062
    10. '1' → logprob: -18.764175415039062

Token 1049: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008480655960738659
    2. '):
' → logprob: -5.008480548858643
    3. '+' → logprob: -6.883480548858643
    4. ' ):' → logprob: -7.383480548858643
    5. ')' → logprob: -10.0084810256958
    6. '-' → logprob: -10.2584810256958
    7. ' +' → logprob: -10.8834810256958
    8. ' -' → logprob: -12.0084810256958
    9. '1' → logprob: -13.1334810256958
    10. '   ' → logprob: -13.1334810256958

Token 1050: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017502136528491974
    2. ' if' → logprob: -4.517502307891846
    3. 'if' → logprob: -5.517502307891846
    4. 'dp' → logprob: -6.267502307891846
    5. ' dp' → logprob: -8.517501831054688
    6. '   ' → logprob: -9.392501831054688
    7. ' for' → logprob: -9.517501831054688
    8. 'for' → logprob: -9.892501831054688
    9. '	if' → logprob: -10.517501831054688
    10. '    ' → logprob: -11.642501831054688

Token 1051: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10449965298175812
    2. '   ' → logprob: -2.729499578475952
    3. 'dp' → logprob: -4.104499816894531
    4. 'while' → logprob: -4.979499816894531
    5. 'for' → logprob: -5.229499816894531
    6. ' if' → logprob: -5.604499816894531
    7. 'j' → logprob: -7.104499816894531
    8. 'm' → logprob: -9.104499816894531
    9. 'v' → logprob: -9.354499816894531
    10. '#' (adapté à ' #') → logprob: -9.354499816894531

Token 1052: ' Cré' (ID: 109203)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5842128396034241
    2. 'for' → logprob: -1.3342127799987793
    3. 'while' → logprob: -2.0842127799987793
    4. 'dp' → logprob: -3.2092127799987793
    5. 'j' → logprob: -4.834212779998779
    6. 'h' → logprob: -6.834212779998779
    7. '#' → logprob: -7.084212779998779
    8. 'm' → logprob: -7.209212779998779
    9. 'min' → logprob: -7.334212779998779
    10. 'current' → logprob: -7.459212779998779

Token 1053: 'ation' (ID: 387)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47950756549835205
    2. '   ' → logprob: -1.979507565498352
    3. 'er' → logprob: -2.1045074462890625
    4. 'for' → logprob: -2.6045074462890625
    5. '#' → logprob: -3.8545074462890625
    6. 'ert' → logprob: -5.1045074462890625
    7. 'val' → logprob: -6.3545074462890625
    8. 'r' → logprob: -6.4795074462890625
    9. 't' → logprob: -6.4795074462890625
    10. 'ment' → logprob: -6.6045074462890625

Token 1054: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20113494992256165
    2. '=' → logprob: -2.8261349201202393
    3. 'j' → logprob: -3.5761349201202393
    4. ' =' → logprob: -3.7011349201202393
    5. 'while' → logprob: -3.7011349201202393
    6. '#' → logprob: -5.201135158538818
    7. ' j' → logprob: -5.576135158538818
    8. 'a' → logprob: -5.826135158538818
    9. 'for' → logprob: -6.076135158538818
    10. '(j' → logprob: -6.076135158538818

Token 1055: ''un' (ID: 9788)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24245183169841766
    2. 'range' → logprob: -2.7424519062042236
    3. ' la' → logprob: -3.4924519062042236
    4. 'a' → logprob: -4.2424516677856445
    5. ' range' → logprob: -4.2424516677856445
    6. '       ' → logprob: -4.6174516677856445
    7. 'une' → logprob: -4.7424516677856445
    8. ' une' → logprob: -4.8674516677856445
    9. '1' → logprob: -4.9924516677856445
    10. 'H' → logprob: -5.2424516677856445

Token 1056: ' nouveau' (ID: 23184)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.08991321921348572
    2. 'heap' → logprob: -3.5899131298065186
    3. 'deque' → logprob: -4.089913368225098
    4. 'tmp' → logprob: -4.214913368225098
    5. 'min' → logprob: -5.589913368225098
    6. 'new' → logprob: -5.839913368225098
    7. 'j' → logprob: -6.339913368225098
    8. 'm' → logprob: -6.464913368225098
    9. 'current' → logprob: -6.464913368225098
    10. 'mon' → logprob: -6.714913368225098

Token 1057: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7328455448150635
    2. 'deque' → logprob: -0.8578455448150635
    3. 'list' → logprob: -4.107845306396484
    4. 'stack' → logprob: -4.357845306396484
    5. 'default' → logprob: -4.482845306396484
    6. 'tmp' → logprob: -4.482845306396484
    7. 'tab' → logprob: -4.607845306396484
    8. 'for' → logprob: -4.732845306396484
    9. 'd' → logprob: -5.482845306396484
    10. 'dict' → logprob: -5.607845306396484

Token 1058: ' new' (ID: 620)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20643188059329987
    2. ' =' → logprob: -2.4564318656921387
    3. ' dp' → logprob: -2.9564318656921387
    4. '   ' → logprob: -3.4564318656921387
    5. 'tmp' → logprob: -4.831431865692139
    6. 'temp' → logprob: -5.956431865692139
    7. '=' → logprob: -6.206431865692139
    8. '_dp' → logprob: -6.706431865692139
    9. '[' → logprob: -7.206431865692139
    10. 'new' → logprob: -7.456431865692139

Token 1059: '_dp' (ID: 133252)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6550118327140808
    2. 'dp' → logprob: -0.9050118327140808
    3. '=' → logprob: -3.1550118923187256
    4. '_dp' → logprob: -3.4050118923187256
    5. '	dp' → logprob: -10.155012130737305
    6. 'DP' → logprob: -10.530012130737305
    7. ' dp' → logprob: -10.655012130737305
    8. '=[]' → logprob: -11.155012130737305
    9. 'Dp' → logprob: -11.405012130737305
    10. '=[' → logprob: -11.530012130737305

Token 1060: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38697564601898193
    2. ' =' → logprob: -1.136975646018982
    3. '   ' → logprob: -9.386975288391113
    4. '=[' → logprob: -11.761975288391113
    5. '[' → logprob: -12.386975288391113
    6. '=[]' → logprob: -13.011975288391113
    7. '=new' → logprob: -13.511975288391113
    8. ' =[' → logprob: -13.761975288391113
    9. '    ' → logprob: -14.136975288391113
    10. ',' → logprob: -14.511975288391113

Token 1061: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18131095170974731
    2. '[n' → logprob: -1.8063108921051025
    3. ' [' → logprob: -6.806311130523682
    4. '(n' → logprob: -8.556310653686523
    5. 'dp' → logprob: -9.556310653686523
    6. 'size' → logprob: -10.181310653686523
    7. '1' → logprob: -10.306310653686523
    8. 'n' → logprob: -10.806310653686523
    9. ' taille' → logprob: -10.806310653686523
    10. '[size' → logprob: -11.056310653686523

Token 1062: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6408480405807495
    2. '(n' → logprob: -0.7658480405807495
    3. ' n' → logprob: -5.515848159790039
    4. ' (' → logprob: -5.515848159790039
    5. 'k' → logprob: -9.765848159790039
    6. '(k' → logprob: -10.015848159790039
    7. '(' → logprob: -10.890848159790039
    8. '
' → logprob: -10.890848159790039
    9. '1' → logprob: -11.765848159790039
    10. 'len' → logprob: -11.765848159790039

Token 1063: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.049603283405303955
    2. ' +' → logprob: -3.049603223800659
    3. '(n' → logprob: -8.424603462219238
    4. '(k' → logprob: -8.424603462219238
    5. '   ' → logprob: -8.549603462219238
    6. '+k' → logprob: -9.049603462219238
    7. '
' → logprob: -9.549603462219238
    8. 'k' → logprob: -10.049603462219238
    9. 'n' → logprob: -10.174603462219238
    10. ' =' → logprob: -10.674603462219238

Token 1064: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006083175539970398
    2. '2' → logprob: -7.500608444213867
    3. ' ' → logprob: -10.750608444213867
    4. '
' → logprob: -11.125608444213867
    5. '   ' → logprob: -12.125608444213867
    6. '(' → logprob: -12.500608444213867
    7. '+' → logprob: -12.875608444213867
    8. '```' → logprob: -12.875608444213867
    9. '`' → logprob: -14.125608444213867
    10. '(n' → logprob: -14.438108444213867

Token 1065: ' rempli' (ID: 192613)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28727227449417114
    2. '   ' → logprob: -1.9122722148895264
    3. '=' → logprob: -2.5372722148895264
    4. 'dp' → logprob: -4.7872724533081055
    5. '[' → logprob: -5.5372724533081055
    6. 'new' → logprob: -5.9122724533081055
    7. ' new' → logprob: -6.1622724533081055
    8. '
' → logprob: -6.2872724533081055
    9. ',' → logprob: -6.7872724533081055
    10. '=[' → logprob: -7.5372724533081055

Token 1066: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0569970607757568
    2. ' de' → logprob: -1.6819970607757568
    3. '[' → logprob: -2.181997060775757
    4. ' avec' → logprob: -2.306997060775757
    5. 'with' → logprob: -2.431997060775757
    6. 'avec' → logprob: -2.431997060775757
    7. '=' → logprob: -3.431997060775757
    8. ' with' → logprob: -3.931997060775757
    9. '(' → logprob: -4.806997299194336
    10. ' =' → logprob: -5.306997299194336

Token 1067: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.817165732383728
    2. '1' → logprob: -0.942165732383728
    3. 'INF' → logprob: -1.817165732383728
    4. '-' → logprob: -5.817165851593018
    5. '-INF' → logprob: -5.942165851593018
    6. 'inf' → logprob: -8.69216537475586
    7. '-inf' → logprob: -9.56716537475586
    8. '[' → logprob: -10.56716537475586
    9. ' INF' → logprob: -10.69216537475586
    10. '_INF' → logprob: -10.69216537475586

Token 1068: 'éros' (ID: 120888)
  Prédit: 'ero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ero' → logprob: -0.1132674440741539
    2. 'eros' → logprob: -3.113267421722412
    3. 'éro' → logprob: -3.363267421722412
    4. 'éros' → logprob: -3.613267421722412
    5. 'e' → logprob: -7.613267421722412
    6. '[' → logprob: -7.988267421722412
    7. 'ERO' → logprob: -9.48826789855957
    8. '0' → logprob: -9.86326789855957
    9. '
' → logprob: -11.73826789855957
    10. '```' → logprob: -11.73826789855957

Token 1069: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30316224694252014
    2. 'new' → logprob: -1.4281622171401978
    3. ' new' → logprob: -4.178162097930908
    4. '
' → logprob: -5.428162097930908
    5. ' =' → logprob: -6.553162097930908
    6. '	new' → logprob: -8.303162574768066
    7. '=' → logprob: -9.428162574768066
    8. '    
' → logprob: -9.928162574768066
    9. '=new' → logprob: -9.928162574768066
    10. '[new' → logprob: -10.053162574768066

Token 1070: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36418384313583374
    2. '[' → logprob: -1.8641839027404785
    3. '0' → logprob: -2.2391839027404785
    4. ' new' → logprob: -3.9891839027404785
    5. 'new' → logprob: -4.3641839027404785
    6. '    ' → logprob: -5.2391839027404785
    7. ' [' → logprob: -6.6141839027404785
    8. ' n' → logprob: -6.8641839027404785
    9. ' ' → logprob: -6.9891839027404785
    10. 'dp' → logprob: -7.2391839027404785

Token 1071: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.32164862751960754
    2. ' new' → logprob: -1.8216485977172852
    3. '   ' → logprob: -2.946648597717285
    4. '0' → logprob: -3.071648597717285
    5. 'dp' → logprob: -4.821648597717285
    6. '[' → logprob: -5.821648597717285
    7. ' ' → logprob: -6.946648597717285
    8. ' dp' → logprob: -8.196648597717285
    9. 'n' → logprob: -8.446648597717285
    10. '#' (adapté à ' #') → logprob: -8.571648597717285

Token 1072: ' qui' (ID: 2780)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2784431576728821
    2. ' new' → logprob: -1.6534430980682373
    3. '   ' → logprob: -3.1534430980682373
    4. 'dp' → logprob: -5.903443336486816
    5. '[' → logprob: -6.028443336486816
    6. '	new' → logprob: -7.403443336486816
    7. '    
' → logprob: -7.653443336486816
    8. '    ' → logprob: -7.778443336486816
    9. '0' → logprob: -7.903443336486816
    10. '#' → logprob: -8.278443336486816

Token 1073: ' recev' (ID: 146848)
  Prédit: 'serv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'serv' → logprob: -0.6880388855934143
    2. ' serv' → logprob: -1.4380388259887695
    3. ' sera' → logprob: -2.3130388259887695
    4. 'sera' → logprob: -2.6880388259887695
    5. 's' → logprob: -3.1880388259887695
    6. ' permettra' → logprob: -4.5630388259887695
    7. '   ' → logprob: -5.3130388259887695
    8. 'serve' → logprob: -5.4380388259887695
    9. ' servir' → logprob: -5.5630388259887695
    10. ' will' → logprob: -5.6880388259887695

Token 1074: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.0001205893131555058
    2. 'a' → logprob: -10.375120162963867
    3. 'ent' → logprob: -10.500120162963867
    4. 'ient' → logprob: -10.750120162963867
    5. 'era' → logprob: -11.250120162963867
    6. 'ront' → logprob: -11.625120162963867
    7. 'rait' → logprob: -11.625120162963867
    8. 'u' → logprob: -12.750120162963867
    9. 'r' → logprob: -13.125120162963867
    10. '   ' → logprob: -13.375120162963867

Token 1075: ' les' (ID: 1341)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17755813896656036
    2. 'dp' → logprob: -2.677558183670044
    3. '[' → logprob: -3.052558183670044
    4. ' new' → logprob: -4.302557945251465
    5. ' ' → logprob: -4.677557945251465
    6. ' dp' → logprob: -4.927557945251465
    7. '1' → logprob: -5.427557945251465
    8. 'new' → logprob: -5.427557945251465
    9. ')' → logprob: -6.052557945251465
    10. ' [' → logprob: -6.552557945251465

Token 1076: ' nouveaux' (ID: 43964)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33318063616752625
    2. 'dp' → logprob: -1.5831806659698486
    3. '[' → logprob: -3.2081806659698486
    4. 'new' → logprob: -4.3331804275512695
    5. '1' → logprob: -4.9581804275512695
    6. ' new' → logprob: -5.9581804275512695
    7. ' dp' → logprob: -6.0831804275512695
    8. '#' → logprob: -6.2081804275512695
    9. ' ' → logprob: -6.2081804275512695
    10. ' [' → logprob: -6.5831804275512695

Token 1077: ' états' (ID: 184259)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20308595895767212
    2. '_dp' → logprob: -1.8280858993530273
    3. ' dp' → logprob: -4.203085899353027
    4. '_' → logprob: -6.203085899353027
    5. ' ' → logprob: -6.328085899353027
    6. 'values' → logprob: -6.828085899353027
    7. 'val' → logprob: -7.203085899353027
    8. ')' → logprob: -7.703085899353027
    9. '	dp' → logprob: -8.453085899353027
    10. '_val' → logprob: -8.578085899353027

Token 1078: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7774379253387451
    2. 'new' → logprob: -0.7774379253387451
    3. ' new' → logprob: -2.527437925338745
    4. '	new' → logprob: -7.402438163757324
    5. '
' → logprob: -8.402438163757324
    6. ' =' → logprob: -10.402438163757324
    7. '=new' → logprob: -10.652438163757324
    8. '       ' → logprob: -11.527438163757324
    9. ',new' → logprob: -11.527438163757324
    10. ' ' → logprob: -11.777438163757324

Token 1079: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01619565673172474
    2. ' dp' → logprob: -4.141195774078369
    3. ' ' → logprob: -10.016195297241211
    4. 'la' → logprob: -10.391195297241211
    5. ' la' → logprob: -10.516195297241211
    6. '1' → logprob: -11.141195297241211
    7. 'l' → logprob: -11.141195297241211
    8. '0' → logprob: -11.891195297241211
    9. ' l' → logprob: -12.891195297241211
    10. 'new' → logprob: -13.016195297241211

Token 1080: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3303002417087555
    2. 'new' → logprob: -1.455300211906433
    3. '
' → logprob: -3.5803003311157227
    4. ' new' → logprob: -3.9553003311157227
    5. '	new' → logprob: -7.580300331115723
    6. '    
' → logprob: -8.705300331115723
    7. '
' → logprob: -10.330300331115723
    8. '=new' → logprob: -10.455300331115723
    9. ',new' → logprob: -10.455300331115723
    10. ',' → logprob: -10.580300331115723

Token 1081: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3508380651474
    2. 'cha' → logprob: -1.6008380651474
    3. 'calcul' → logprob: -1.6008380651474
    4. 'mettre' → logprob: -1.9758380651474
    5. ' chaque' → logprob: -2.2258381843566895
    6. 'ch' → logprob: -3.7258381843566895
    7. 'acc' → logprob: -4.2258381843566895
    8. 'c' → logprob: -4.9758381843566895
    9. 'l' → logprob: -5.1008381843566895
    10. 'z' → logprob: -5.2258381843566895

Token 1082: ''ét' (ID: 23771)
  Prédit: 'éros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éros' → logprob: -1.231497883796692
    2. 'i' → logprob: -1.481497883796692
    3. 'éro' → logprob: -1.606497883796692
    4. 'er' → logprob: -2.4814977645874023
    5. 'a' → logprob: -2.6064977645874023
    6. 'erm' → logprob: -3.9814977645874023
    7. '[i' → logprob: -4.481497764587402
    8. '#' → logprob: -4.856497764587402
    9. 'k' → logprob: -5.231497764587402
    10. 'range' → logprob: -5.231497764587402

Token 1083: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.007495766505599022
    2. 'at' → logprob: -5.882495880126953
    3. 'apes' → logprob: -6.757495880126953
    4. 'ant' → logprob: -7.507495880126953
    5. 'à' → logprob: -7.757495880126953
    6. 'a' → logprob: -8.257495880126953
    7. '=' → logprob: -8.382495880126953
    8. 'ap' → logprob: -8.507495880126953
    9. 'er' → logprob: -9.007495880126953
    10. 'ier' → logprob: -9.132495880126953

Token 1084: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15888285636901855
    2. '   ' → logprob: -3.0338828563690186
    3. ' k' → logprob: -3.6588828563690186
    4. '+' → logprob: -3.7838828563690186
    5. '1' → logprob: -3.9088828563690186
    6. 'n' → logprob: -5.158883094787598
    7. '=' → logprob: -5.408883094787598
    8. 'su' → logprob: -5.783883094787598
    9. ' suivante' → logprob: -5.783883094787598
    10. ' =' → logprob: -6.533883094787598

Token 1085: '+' (ID: 10)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.310678631067276
    2. 'new' → logprob: -1.4356786012649536
    3. '
' → logprob: -4.060678482055664
    4. ' new' → logprob: -5.560678482055664
    5. ' =' → logprob: -5.685678482055664
    6. '=' → logprob: -6.185678482055664
    7. '=new' → logprob: -6.685678482055664
    8. '	new' → logprob: -7.560678482055664
    9. '
' → logprob: -8.435678482055664
    10. '    
' → logprob: -8.935678482055664

Token 1086: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004326976370066404
    2. '+' → logprob: -5.629326820373535
    3. 'k' → logprob: -7.629326820373535
    4. ' k' → logprob: -9.754326820373535
    5. ' ' → logprob: -10.129326820373535
    6. '```' → logprob: -10.129326820373535
    7. 'n' → logprob: -11.254326820373535
    8. '`' → logprob: -11.254326820373535
    9. '=' → logprob: -11.504326820373535
    10. ' +' → logprob: -11.754326820373535

Token 1087: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49044230580329895
    2. 'new' → logprob: -0.9904422760009766
    3. ' new' → logprob: -4.365442276000977
    4. '
' → logprob: -5.740442276000977
    5. '	new' → logprob: -8.490442276000977
    6. ',' → logprob: -10.865442276000977
    7. ',new' → logprob: -11.240442276000977
    8. ' ' → logprob: -11.490442276000977
    9. '    
' → logprob: -11.490442276000977
    10. '[new' → logprob: -11.990442276000977

Token 1088: '   ' (ID: 271)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.041546307504177094
    2. ' new' → logprob: -3.29154634475708
    3. '   ' → logprob: -5.66654634475708
    4. '	new' → logprob: -11.041545867919922
    5. '[new' → logprob: -11.666545867919922
    6. '[' → logprob: -12.541545867919922
    7. '```' → logprob: -12.666545867919922
    8. '
' → logprob: -12.916545867919922
    9. ' ' → logprob: -13.666545867919922
    10. '    
' → logprob: -13.791545867919922

Token 1089: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.0002439467643853277
    2. '[' → logprob: -8.500244140625
    3. ' new' → logprob: -10.125244140625
    4. '[new' → logprob: -15.125244140625
    5. ' [' → logprob: -16.250244140625
    6. '   ' → logprob: -18.125244140625
    7. '
' → logprob: -18.250244140625
    8. '	new' → logprob: -19.000244140625
    9. '
' → logprob: -19.500244140625
    10. 'New' → logprob: -19.750244140625

Token 1090: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -3.523948907968588e-05
    2. '_' → logprob: -10.625035285949707
    3. '_d' → logprob: -12.125035285949707
    4. '_de' → logprob: -13.875035285949707
    5. '_DP' → logprob: -14.000035285949707
    6. '_df' → logprob: -14.500035285949707
    7. ' _' → logprob: -14.750035285949707
    8. '_p' → logprob: -14.875035285949707
    9. '_dc' → logprob: -15.000035285949707
    10. ')_' → logprob: -15.375035285949707

Token 1091: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804194927215576
    2. ' =' → logprob: -3.2880420684814453
    3. '=[' → logprob: -15.288042068481445
    4. '[' → logprob: -15.538042068481445
    5. '＝' → logprob: -17.163042068481445
    6. ')' → logprob: -18.413042068481445
    7. '   ' → logprob: -18.538042068481445
    8. ']' → logprob: -18.663042068481445
    9. ' =[' → logprob: -18.788042068481445
    10. ' ' → logprob: -18.913042068481445

Token 1092: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020377879263833165
    2. ' [' → logprob: -8.500204086303711
    3. '([' → logprob: -16.50020408630371
    4. '   ' → logprob: -16.75020408630371
    5. '0' → logprob: -16.75020408630371
    6. '[n' → logprob: -17.62520408630371
    7. 'dp' → logprob: -18.00020408630371
    8. '{' → logprob: -18.62520408630371
    9. 'new' → logprob: -18.87520408630371
    10. '=[' → logprob: -18.87520408630371

Token 1093: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -17.75
    4. '1' → logprob: -18.5625
    5. '000' → logprob: -18.6875
    6. '00' → logprob: -19.0
    7. ')' → logprob: -19.625
    8. '(' → logprob: -20.0625
    9. '[' → logprob: -20.1875
    10. '০' → logprob: -20.1875

Token 1094: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000835716025903821
    2. ']*' → logprob: -7.87583589553833
    3. '*' → logprob: -8.875835418701172
    4. ']*(' → logprob: -9.000835418701172
    5. 'for' → logprob: -9.625835418701172
    6. ' for' → logprob: -10.125835418701172
    7. ')' → logprob: -10.250835418701172
    8. ' ]' → logprob: -10.250835418701172
    9. ' *' → logprob: -11.500835418701172
    10. ']+' → logprob: -13.750835418701172

Token 1095: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5188408493995667
    2. ' *' → logprob: -1.2688407897949219
    3. '*(' → logprob: -2.143840789794922
    4. ')' → logprob: -6.268840789794922
    5. 'for' → logprob: -6.393840789794922
    6. ' for' → logprob: -6.393840789794922
    7. ']' → logprob: -8.268840789794922
    8. '<|end|>' → logprob: -8.268840789794922
    9. ']*(' → logprob: -8.643840789794922
    10. '
' → logprob: -9.518840789794922

Token 1096: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0067209405824542046
    2. ' (' → logprob: -5.006721019744873
    3. '(' → logprob: -12.506720542907715
    4. '   ' → logprob: -14.131720542907715
    5. '(len' → logprob: -14.631720542907715
    6. '((' → logprob: -15.506720542907715
    7. '(N' → logprob: -15.631720542907715
    8. ' ' → logprob: -15.756720542907715
    9. '  ' → logprob: -17.00672149658203
    10. '(k' → logprob: -17.25672149658203

Token 1097: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038173455744981766
    2. '(n' → logprob: -3.2881734371185303
    3. ' n' → logprob: -9.28817367553711
    4. ' (' → logprob: -10.16317367553711
    5. '   ' → logprob: -14.91317367553711
    6. '(' → logprob: -15.28817367553711
    7. ')n' → logprob: -16.53817367553711
    8. ')' → logprob: -16.66317367553711
    9. '[n' → logprob: -16.66317367553711
    10. 'len' → logprob: -17.03817367553711

Token 1098: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004902417422272265
    2. ' +' → logprob: -7.625490188598633
    3. '+
' → logprob: -13.375490188598633
    4. '1' → logprob: -14.750490188598633
    5. '
' → logprob: -16.750490188598633
    6. ')' → logprob: -16.750490188598633
    7. ')+' → logprob: -17.250490188598633
    8. '＋' → logprob: -17.750490188598633
    9. '()+' → logprob: -18.125490188598633
    10. '+k' → logprob: -18.250490188598633

Token 1099: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -16.250003814697266
    4. '
' → logprob: -16.625003814697266
    5. '   ' → logprob: -16.625003814697266
    6. ')' → logprob: -17.750003814697266
    7. '```' → logprob: -18.187503814697266
    8. '+' → logprob: -18.375003814697266
    9. '

' → logprob: -18.687503814697266
    10. '  ' → logprob: -19.000003814697266

Token 1100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. '+' → logprob: -15.750000953674316
    4. '```' → logprob: -16.25
    5. '2' → logprob: -17.125
    6. '   ' → logprob: -17.25
    7. ')' → logprob: -18.0625
    8. '
' → logprob: -18.3125
    9. '(' → logprob: -18.4375
    10. '7' → logprob: -18.5625

Token 1101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019473218126222491
    2. '   ' → logprob: -6.251947402954102
    3. ')
' → logprob: -11.126947402954102
    4. ' )' → logprob: -13.876947402954102
    5. ']' → logprob: -14.001947402954102
    6. '<|end|>' → logprob: -14.376947402954102
    7. '	' → logprob: -15.626947402954102
    8. '),' → logprob: -16.1269474029541
    9. ')
' → logprob: -16.1269474029541
    10. '[' → logprob: -16.2519474029541

Token 1102: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5356804728507996
    2. '   ' → logprob: -0.9106804728507996
    3. ' for' → logprob: -4.410680294036865
    4. '	for' → logprob: -8.785680770874023
    5. 'he' → logprob: -9.785680770874023
    6. 'new' → logprob: -10.535680770874023
    7. 'if' → logprob: -10.660680770874023
    8. 'j' → logprob: -11.285680770874023
    9. '   ' → logprob: -11.785680770874023
    10. 'dp' → logprob: -11.910680770874023

Token 1103: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003923687618225813
    2. '   ' → logprob: -6.1289238929748535
    3. ' for' → logprob: -6.3789238929748535
    4. 'j' → logprob: -11.253923416137695
    5. '#' (adapté à ' #') → logprob: -11.878923416137695
    6. '	for' → logprob: -12.128923416137695
    7. 'i' → logprob: -12.878923416137695
    8. 'if' → logprob: -12.878923416137695
    9. 'he' → logprob: -13.378923416137695
    10. 'max' → logprob: -14.128923416137695

Token 1104: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021151662804186344
    2. 'j' → logprob: -6.502115249633789
    3. 'i' → logprob: -8.627115249633789
    4. 'if' → logprob: -9.627115249633789
    5. 'dp' → logprob: -9.752115249633789
    6. 'm' → logprob: -10.002115249633789
    7. 'he' → logprob: -10.002115249633789
    8. 'new' → logprob: -10.002115249633789
    9. '   ' → logprob: -10.502115249633789
    10. 'stack' → logprob: -10.502115249633789

Token 1105: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.0264570452272892
    2. 'for' → logprob: -3.9014570713043213
    3. 'cl' → logprob: -6.151456832885742
    4. 'c' → logprob: -6.401456832885742
    5. 'cles' → logprob: -6.901456832885742
    6. '#' → logprob: -7.651456832885742
    7. 'e' → logprob: -8.651456832885742
    8. 'clé' → logprob: -8.901456832885742
    9. 'r' → logprob: -9.776456832885742
    10. '   ' → logprob: -10.026456832885742

Token 1106: ' interne' (ID: 59673)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13787280023097992
    2. 'for' → logprob: -2.2628726959228516
    3. '   ' → logprob: -4.012872695922852
    4. ' j' → logprob: -5.262872695922852
    5. 'j' → logprob: -6.762872695922852
    6. ' i' → logprob: -9.387872695922852
    7. ' ' → logprob: -9.887872695922852
    8. '    ' → logprob: -10.137872695922852
    9. ' in' → logprob: -10.387872695922852
    10. 'i' → logprob: -10.512872695922852

Token 1107: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06536954641342163
    2. 'for' → logprob: -3.1903696060180664
    3. '   ' → logprob: -3.8153696060180664
    4. ' ' → logprob: -10.565369606018066
    5. ' j' → logprob: -10.565369606018066
    6. '	for' → logprob: -10.815369606018066
    7. '  ' → logprob: -11.940369606018066
    8. ',' → logprob: -12.440369606018066
    9. '    ' → logprob: -12.690369606018066
    10. ' ' → logprob: -13.565369606018066

Token 1108: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09488427639007568
    2. 'j' → logprob: -2.7198843955993652
    3. 'i' → logprob: -4.219884395599365
    4. ' range' → logprob: -5.719884395599365
    5. 'l' → logprob: -5.969884395599365
    6. 'm' → logprob: -6.469884395599365
    7. 'k' → logprob: -7.344884395599365
    8. 'r' → logprob: -7.719884395599365
    9. 'x' → logprob: -8.469883918762207
    10. 'h' → logprob: -8.844883918762207

Token 1109: ''ind' (ID: 82245)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08482468128204346
    2. ' range' → logprob: -2.584824562072754
    3. 'k' → logprob: -6.334824562072754
    4. 'n' → logprob: -6.584824562072754
    5. 'for' → logprob: -7.084824562072754
    6. ' k' → logprob: -7.584824562072754
    7. 'ange' → logprob: -7.709824562072754
    8. ' for' → logprob: -8.959824562072754
    9. ' n' → logprob: -8.959824562072754
    10. ' ' → logprob: -9.334824562072754

Token 1110: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.007441224064677954
    2. 'range' → logprob: -5.25744104385376
    3. 'ice' → logprob: -6.50744104385376
    4. 'ices' → logprob: -8.007441520690918
    5. 'dex' → logprob: -8.882441520690918
    6. 'k' → logprob: -9.507441520690918
    7. 'i' → logprob: -10.007441520690918
    8. 'x' → logprob: -10.757441520690918
    9. 'e' → logprob: -10.882441520690918
    10. '(range' → logprob: -11.382441520690918

Token 1111: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.116019606590271
    2. 'j' → logprob: -1.616019606590271
    3. 'i' → logprob: -2.3660197257995605
    4. ' i' → logprob: -2.6160197257995605
    5. ' j' → logprob: -2.6160197257995605
    6. ' range' → logprob: -2.7410197257995605
    7. 'range' → logprob: -3.2410197257995605
    8. ' k' → logprob: -3.2410197257995605
    9. '_' → logprob: -3.7410197257995605
    10. ' for' → logprob: -3.8660197257995605

Token 1112: ' allant' (ID: 122150)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.135748952627182
    2. 'in' → logprob: -2.135748863220215
    3. ' for' → logprob: -5.760748863220215
    4. 'for' → logprob: -5.760748863220215
    5. '   ' → logprob: -6.135748863220215
    6. ' en' → logprob: -9.135748863220215
    7. ',' → logprob: -9.635748863220215
    8. '```' → logprob: -10.260748863220215
    9. 'range' → logprob: -11.010748863220215
    10. ' i' → logprob: -11.510748863220215

Token 1113: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.21152421832084656
    2. 'range' → logprob: -2.211524248123169
    3. 'de' → logprob: -3.336524248123169
    4. '(k' → logprob: -3.461524248123169
    5. '(n' → logprob: -5.71152400970459
    6. 'à' → logprob: -5.83652400970459
    7. 'k' → logprob: -6.08652400970459
    8. ' from' → logprob: -6.71152400970459
    9. ' range' → logprob: -6.96152400970459
    10. '(' → logprob: -7.08652400970459

Token 1114: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6907038688659668
    2. 'n' → logprob: -1.4407038688659668
    3. '0' → logprob: -1.5657038688659668
    4. '(n' → logprob: -3.565703868865967
    5. '(k' → logprob: -3.940703868865967
    6. '1' → logprob: -5.440703868865967
    7. 'range' → logprob: -8.065704345703125
    8. '(' → logprob: -8.440704345703125
    9. ' n' → logprob: -8.565704345703125
    10. 'new' → logprob: -8.690704345703125

Token 1115: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5781556367874146
    2. '0' → logprob: -1.2031556367874146
    3. 'k' → logprob: -2.078155517578125
    4. 'range' → logprob: -4.703155517578125
    5. '1' → logprob: -6.203155517578125
    6. '(n' → logprob: -6.328155517578125
    7. '(k' → logprob: -7.328155517578125
    8. '(' → logprob: -10.203155517578125
    9. ' n' → logprob: -11.078155517578125
    10. 'new' → logprob: -11.078155517578125

Token 1116: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1565030962228775
    2. 'à' → logprob: -2.906503200531006
    3. ' to' → logprob: -3.406503200531006
    4. 'to' → logprob: -3.531503200531006
    5. 'k' → logprob: -4.531503200531006
    6. ' au' → logprob: -5.281503200531006
    7. '(k' → logprob: -5.656503200531006
    8. ',' → logprob: -6.156503200531006
    9. ' k' → logprob: -6.656503200531006
    10. ' jusqu' → logprob: -6.656503200531006

Token 1117: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026451239362359047
    2. 'k' → logprob: -3.651451349258423
    3. ' n' → logprob: -8.901451110839844
    4. '(n' → logprob: -11.901451110839844
    5. ' k' → logprob: -13.026451110839844
    6. '   ' → logprob: -13.901451110839844
    7. '(k' → logprob: -14.026451110839844
    8. 'i' → logprob: -14.526451110839844
    9. '```' → logprob: -14.526451110839844
    10. '1' → logprob: -15.151451110839844

Token 1118: ' inclus' (ID: 11891)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4158206582069397
    2. ' +' → logprob: -1.290820598602295
    3. '   ' → logprob: -2.790820598602295
    4. ':' → logprob: -5.665820598602295
    5. ':
' → logprob: -9.165821075439453
    6. '
' → logprob: -9.915821075439453
    7. 'for' → logprob: -10.165821075439453
    8. '```' → logprob: -10.790821075439453
    9. ',' → logprob: -10.915821075439453
    10. '):
' → logprob: -11.790821075439453

Token 1119: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007235309109091759
    2. ':' → logprob: -5.507235527038574
    3. ' for' → logprob: -6.007235527038574
    4. 'for' → logprob: -7.757235527038574
    5. ':
' → logprob: -10.132235527038574
    6. '  ' → logprob: -10.382235527038574
    7. '	for' → logprob: -10.382235527038574
    8. '    ' → logprob: -10.507235527038574
    9. '       ' → logprob: -10.507235527038574
    10. ',' → logprob: -10.632235527038574

Token 1120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011916564544662833
    2. ' for' → logprob: -7.12619161605835
    3. ':' → logprob: -8.126192092895508
    4. 'for' → logprob: -9.751192092895508
    5. '	for' → logprob: -11.876192092895508
    6. ',' → logprob: -11.876192092895508
    7. '```' → logprob: -11.876192092895508
    8. '    
' → logprob: -13.001192092895508
    9. '<|end|>' → logprob: -13.126192092895508
    10. '   ' → logprob: -13.626192092895508

Token 1121: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18007074296474457
    2. ' for' → logprob: -1.9300707578659058
    3. '   ' → logprob: -3.930070638656616
    4. '	for' → logprob: -11.805070877075195
    5. '```' → logprob: -14.305070877075195
    6. ' ' → logprob: -15.430070877075195
    7. '    ' → logprob: -16.305070877075195
    8. '  ' → logprob: -16.680070877075195
    9. '       ' → logprob: -17.805070877075195
    10. '
' → logprob: -17.930070877075195

Token 1122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3484507203102112
    2. ' i' → logprob: -1.2234506607055664
    3. '	i' → logprob: -13.598450660705566
    4. 'range' → logprob: -13.598450660705566
    5. ' ' → logprob: -14.098450660705566
    6. '   ' → logprob: -14.473450660705566
    7. ' range' → logprob: -14.723450660705566
    8. '```' → logprob: -14.723450660705566
    9. ' in' → logprob: -15.098450660705566
    10. '_i' → logprob: -15.098450660705566

Token 1123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31329211592674255
    2. 'in' → logprob: -1.313292145729065
    3. '   ' → logprob: -10.938292503356934
    4. ')' → logprob: -12.813292503356934
    5. ',' → logprob: -12.938292503356934
    6. 'range' → logprob: -12.938292503356934
    7. '	in' → logprob: -14.063292503356934
    8. ' ' → logprob: -14.188292503356934
    9. '0' → logprob: -14.438292503356934
    10. '+' → logprob: -14.563292503356934

Token 1124: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269301027059555
    2. ' range' → logprob: -2.126929998397827
    3. '(range' → logprob: -14.251930236816406
    4. ' ' → logprob: -14.626930236816406
    5. '   ' → logprob: -14.876930236816406
    6. 'n' → logprob: -15.876930236816406
    7. 'in' → logprob: -16.376930236816406
    8. '	range' → logprob: -16.501930236816406
    9. 'rang' → logprob: -17.001930236816406
    10. '  ' → logprob: -17.376930236816406

Token 1125: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.56102097814437e-05
    2. '(' → logprob: -10.750045776367188
    3. 'n' → logprob: -11.125045776367188
    4. '(k' → logprob: -12.000045776367188
    5. ' (' → logprob: -13.250045776367188
    6. '(
' → logprob: -14.625045776367188
    7. '(len' → logprob: -15.000045776367188
    8. ' n' → logprob: -15.250045776367188
    9. '((' → logprob: -15.250045776367188
    10. '(i' → logprob: -16.750045776367188

Token 1126: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018163053318858147
    2. ' +' → logprob: -4.018163204193115
    3. '):
' → logprob: -12.018162727355957
    4. '   ' → logprob: -12.393162727355957
    5. '):' → logprob: -13.018162727355957
    6. '+
' → logprob: -14.893162727355957
    7. ')' → logprob: -15.518162727355957
    8. ')+' → logprob: -17.268163681030273
    9. ' +
' → logprob: -17.393163681030273
    10. '
' → logprob: -17.643163681030273

Token 1127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.87501335144043
    3. '2' → logprob: -12.00001335144043
    4. '
' → logprob: -15.93751335144043
    5. '+' → logprob: -16.43751335144043
    6. '   ' → logprob: -16.43751335144043
    7. 'k' → logprob: -16.62501335144043
    8. 'n' → logprob: -16.87501335144043
    9. '(' → logprob: -17.18751335144043
    10. 'i' → logprob: -17.68751335144043

Token 1128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. '2' → logprob: -12.875007629394531
    3. '+' → logprob: -13.125007629394531
    4. ' ' → logprob: -13.125007629394531
    5. 'n' → logprob: -14.875007629394531
    6. '
' → logprob: -15.250007629394531
    7. 'k' → logprob: -15.625007629394531
    8. 'i' → logprob: -15.750007629394531
    9. '   ' → logprob: -16.00000762939453
    10. '```' → logprob: -17.43750762939453

Token 1129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3873061239719391
    2. '):
' → logprob: -1.1373060941696167
    3. '   ' → logprob: -8.262306213378906
    4. '):
' → logprob: -9.012306213378906
    5. ':' → logprob: -10.512306213378906
    6. ')' → logprob: -11.012306213378906
    7. '       ' → logprob: -12.137306213378906
    8. '+' → logprob: -13.137306213378906
    9. '):

' → logprob: -13.137306213378906
    10. ' ):' → logprob: -15.262306213378906

Token 1130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001669465214945376
    2. ' if' → logprob: -7.251669406890869
    3. '   ' → logprob: -8.376669883728027
    4. '<|end|>' → logprob: -8.376669883728027
    5. ' new' → logprob: -8.751669883728027
    6. 'if' → logprob: -10.001669883728027
    7. ',' → logprob: -10.126669883728027
    8. '	' → logprob: -10.251669883728027
    9. '        
' → logprob: -10.626669883728027
    10. '    ' → logprob: -10.751669883728027

Token 1131: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23261758685112
    2. ' if' → logprob: -1.6076176166534424
    3. 'new' → logprob: -6.232617378234863
    4. ' new' → logprob: -6.482617378234863
    5. '       ' → logprob: -6.607617378234863
    6. 'for' → logprob: -6.982617378234863
    7. '   ' → logprob: -7.107617378234863
    8. '#' (adapté à ' #') → logprob: -8.607617378234863
    9. ' for' → logprob: -8.732617378234863
    10. 'j' → logprob: -9.357617378234863

Token 1132: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03822072967886925
    2. 'new' → logprob: -3.5382206439971924
    3. 'for' → logprob: -5.7882208824157715
    4. 'val' → logprob: -5.9132208824157715
    5. '#' → logprob: -6.4132208824157715
    6. 'j' → logprob: -7.9132208824157715
    7. 'v' → logprob: -8.288220405578613
    8. '   ' → logprob: -9.038220405578613
    9. 'he' → logprob: -9.788220405578613
    10. 'value' → logprob: -9.913220405578613

Token 1133: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004175983369350433
    2. '   ' → logprob: -6.754176139831543
    3. 'ifie' → logprob: -7.254176139831543
    4. 'ifier' → logprob: -7.379176139831543
    5. 'er' → logprob: -7.504176139831543
    6. '       ' → logprob: -8.254176139831543
    7. ' if' → logprob: -8.504176139831543
    8. 'ifiez' → logprob: -8.629176139831543
    9. 'ification' → logprob: -9.004176139831543
    10. '#' → logprob: -9.879176139831543

Token 1134: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4511348307132721
    2. 'if' → logprob: -1.5761348009109497
    3. '   ' → logprob: -2.8261349201202393
    4. '       ' → logprob: -2.8261349201202393
    5. ':' → logprob: -3.4511349201202393
    6. ' :' → logprob: -6.32613468170166
    7. '           ' → logprob: -6.82613468170166
    8. '	if' → logprob: -7.32613468170166
    9. '    ' → logprob: -7.70113468170166
    10. 'and' → logprob: -8.20113468170166

Token 1135: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12573470175266266
    2. 'H' → logprob: -2.750734806060791
    3. 'i' → logprob: -3.000734806060791
    4. 'new' → logprob: -6.125734806060791
    5. ' dp' → logprob: -6.875734806060791
    6. '0' → logprob: -7.625734806060791
    7. ' i' → logprob: -8.250734329223633
    8. ' H' → logprob: -8.375734329223633
    9. 'k' → logprob: -9.000734329223633
    10. '(dp' → logprob: -10.125734329223633

Token 1136: ' première' (ID: 23423)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5857506990432739
    2. 'i' → logprob: -1.335750699043274
    3. 'H' → logprob: -1.835750699043274
    4. 'k' → logprob: -4.960750579833984
    5. ' i' → logprob: -5.585750579833984
    6. ' dp' → logprob: -5.710750579833984
    7. ' H' → logprob: -5.960750579833984
    8. '0' → logprob: -5.960750579833984
    9. 'if' → logprob: -7.710750579833984
    10. 'new' → logprob: -8.210750579833984

Token 1137: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7374399304389954
    2. ' if' → logprob: -0.8624399304389954
    3. 'dp' → logprob: -2.8624398708343506
    4. ' condition' → logprob: -4.23744010925293
    5. 'i' → logprob: -4.86244010925293
    6. ' i' → logprob: -5.11244010925293
    7. 'condition' → logprob: -5.36244010925293
    8. ' dp' → logprob: -5.48744010925293
    9. '   ' → logprob: -6.73744010925293
    10. ' H' → logprob: -6.86244010925293

Token 1138: ' ' (ID: 5310)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001816670992411673
    2. ' if' → logprob: -7.001816749572754
    3. 'if' → logprob: -7.501816749572754
    4. ':' → logprob: -9.126816749572754
    5. '```' → logprob: -9.126816749572754
    6. '   ' → logprob: -10.001816749572754
    7. '           ' → logprob: -10.126816749572754
    8. ',' → logprob: -10.626816749572754
    9. '        
' → logprob: -12.626816749572754
    10. '      ' → logprob: -12.751816749572754

Token 1139: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14687319099903107
    2. ':' → logprob: -2.0218732357025146
    3. ' if' → logprob: -6.6468729972839355
    4. '   ' → logprob: -6.7718729972839355
    5. ':
' → logprob: -7.5218729972839355
    6. '           ' → logprob: -7.6468729972839355
    7. 'if' → logprob: -7.7718729972839355
    8. ' :' → logprob: -9.021873474121094
    9. '        ' → logprob: -10.521873474121094
    10. '```' → logprob: -10.646873474121094

Token 1140: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030951833352446556
    2. 'H' → logprob: -3.655951738357544
    3. ' if' → logprob: -5.530951976776123
    4. 'i' → logprob: -7.905951976776123
    5. 'k' → logprob: -9.405951499938965
    6. '   ' → logprob: -9.530951499938965
    7. ' H' → logprob: -9.655951499938965
    8. 'dp' → logprob: -9.780951499938965
    9. 'abs' → logprob: -10.655951499938965
    10. '       ' → logprob: -12.905951499938965

Token 1141: ' H' (ID: 487)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7230817079544067
    2. 'H' → logprob: -0.8480817079544067
    3. 'k' → logprob: -3.098081588745117
    4. 'dp' → logprob: -3.223081588745117
    5. ' i' → logprob: -7.598081588745117
    6. ' H' → logprob: -7.723081588745117
    7. 'new' → logprob: -8.473081588745117
    8. '0' → logprob: -8.848081588745117
    9. '(i' → logprob: -9.973081588745117
    10. 'abs' → logprob: -10.223081588745117

Token 1142: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.033722925931215286
    2. '[k' → logprob: -3.4087228775024414
    3. '[' → logprob: -9.533722877502441
    4. 'k' → logprob: -13.533722877502441
    5. '[j' → logprob: -13.783722877502441
    6. 'i' → logprob: -13.908722877502441
    7. '[
' → logprob: -14.783722877502441
    8. ' [' → logprob: -15.158722877502441
    9. ']' → logprob: -15.408722877502441
    10. '[I' → logprob: -15.658722877502441

Token 1143: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05642884597182274
    2. '[k' → logprob: -3.681428909301758
    3. ']>' → logprob: -3.806428909301758
    4. ']>=' → logprob: -6.181428909301758
    5. ']<' → logprob: -6.306428909301758
    6. '[' → logprob: -6.681428909301758
    7. ']<=' → logprob: -6.806428909301758
    8. '>' → logprob: -8.306428909301758
    9. 'k' → logprob: -8.556428909301758
    10. '[i' → logprob: -8.556428909301758

Token 1144: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.48681771755218506
    2. '<' → logprob: -1.986817717552185
    3. '>=' → logprob: -2.2368178367614746
    4. '<=' → logprob: -2.7368178367614746
    5. ' >' → logprob: -3.3618178367614746
    6. ' <' → logprob: -3.9868178367614746
    7. ' >=' → logprob: -4.736817836761475
    8. ' <=' → logprob: -4.861817836761475
    9. '==' → logprob: -5.611817836761475
    10. '!=' → logprob: -6.236817836761475

Token 1145: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0012723775580525398
    2. '=' → logprob: -7.001272201538086
    3. ' H' → logprob: -8.251272201538086
    4. '1' → logprob: -9.626272201538086
    5. 'k' → logprob: -10.876272201538086
    6. '0' → logprob: -11.876272201538086
    7. 'new' → logprob: -12.501272201538086
    8. ' ' → logprob: -14.751272201538086
    9. '=
' → logprob: -14.876272201538086
    10. ' =' → logprob: -15.126272201538086

Token 1146: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0019978696946054697
    2. 'k' → logprob: -6.501997947692871
    3. '[i' → logprob: -8.251997947692871
    4. '[' → logprob: -8.876997947692871
    5. ']' → logprob: -10.626997947692871
    6. '][' → logprob: -11.626997947692871
    7. '[
' → logprob: -11.751997947692871
    8. '(k' → logprob: -12.001997947692871
    9. '[j' → logprob: -12.126997947692871
    10. '[n' → logprob: -12.126997947692871

Token 1147: ']
' (ID: 1592)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2881137728691101
    2. ']' → logprob: -1.4131138324737549
    3. ']:
' → logprob: -5.663113594055176
    4. '],' → logprob: -6.538113594055176
    5. ']):' → logprob: -7.288113594055176
    6. '):' → logprob: -8.038113594055176
    7. ' ]' → logprob: -8.413113594055176
    8. '])' → logprob: -8.538113594055176
    9. '+' → logprob: -9.538113594055176
    10. ']+' → logprob: -9.538113594055176

Token 1148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10436123609542847
    2. ':' → logprob: -2.4793612957000732
    3. ' if' → logprob: -5.104361057281494
    4. ' and' → logprob: -5.229361057281494
    5. 'if' → logprob: -6.354361057281494
    6. 'and' → logprob: -7.354361057281494
    7. '           ' → logprob: -7.479361057281494
    8. ',' → logprob: -8.354361534118652
    9. '   ' → logprob: -8.479361534118652
    10. ' :' → logprob: -8.979361534118652

Token 1149: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5038813352584839
    2. '       ' → logprob: -1.1288813352584839
    3. ' if' → logprob: -2.6288814544677734
    4. '   ' → logprob: -9.003881454467773
    5. '           ' → logprob: -9.628881454467773
    6. '	if' → logprob: -10.128881454467773
    7. ':' → logprob: -11.003881454467773
    8. '	' → logprob: -12.003881454467773
    9. 'If' → logprob: -13.253881454467773
    10. ':
' → logprob: -13.378881454467773

Token 1150: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01604246348142624
    2. ' H' → logprob: -4.141042232513428
    3. '   ' → logprob: -12.516042709350586
    4. '	H' → logprob: -12.891042709350586
    5. 'i' → logprob: -13.891042709350586
    6. ' ' → logprob: -15.516042709350586
    7. ' ' → logprob: -15.641042709350586
    8. 'k' → logprob: -16.141042709350586
    9. '(H' → logprob: -16.266042709350586
    10. ' i' → logprob: -16.516042709350586

Token 1151: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002911623567342758
    2. '[k' → logprob: -5.877911567687988
    3. '][' → logprob: -10.002911567687988
    4. ']' → logprob: -10.502911567687988
    5. '[' → logprob: -10.877911567687988
    6. 'i' → logprob: -12.002911567687988
    7. '[
' → logprob: -13.377911567687988
    8. ' [' → logprob: -13.502911567687988
    9. '[j' → logprob: -13.752911567687988
    10. '[I' → logprob: -13.752911567687988

Token 1152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06284572929143906
    2. ']>' → logprob: -3.4378457069396973
    3. '>' → logprob: -3.5628457069396973
    4. ' >' → logprob: -8.812846183776855
    5. ' ]' → logprob: -8.937846183776855
    6. '[' → logprob: -9.812846183776855
    7. '   ' → logprob: -10.687846183776855
    8. '>]' → logprob: -11.437846183776855
    9. ']>
' → logprob: -11.687846183776855
    10. '>
' → logprob: -12.562846183776855

Token 1153: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20148758590221405
    2. ' >' → logprob: -1.7014875411987305
    3. '[' → logprob: -10.20148754119873
    4. ' <' → logprob: -11.95148754119873
    5. '<' → logprob: -12.07648754119873
    6. '>
' → logprob: -12.07648754119873
    7. ' ' → logprob: -12.45148754119873
    8. '   ' → logprob: -12.82648754119873
    9. ' >
' → logprob: -13.07648754119873
    10. ':' → logprob: -13.20148754119873

Token 1154: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00317783304490149
    2. ' H' → logprob: -5.753177642822266
    3. '	H' → logprob: -17.003177642822266
    4. ' ' → logprob: -17.503177642822266
    5. '_H' → logprob: -18.753177642822266
    6. '   ' → logprob: -18.878177642822266
    7. '>' → logprob: -19.003177642822266
    8. '#' → logprob: -19.378177642822266
    9. 'k' → logprob: -19.878177642822266
    10. '<H' → logprob: -19.878177642822266

Token 1155: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.03842712566256523
    2. 'k' → logprob: -3.2884271144866943
    3. 'H' → logprob: -8.038427352905273
    4. '[' → logprob: -9.788427352905273
    5. ']' → logprob: -13.413427352905273
    6. '(k' → logprob: -13.538427352905273
    7. ' k' → logprob: -14.038427352905273
    8. ' [' → logprob: -14.163427352905273
    9. '[
' → logprob: -14.538427352905273
    10. '][' → logprob: -14.663427352905273

Token 1156: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1990008354187012
    2. '):' → logprob: -1.1990008354187012
    3. ']:' → logprob: -1.1990008354187012
    4. '):
' → logprob: -3.074000835418701
    5. '       ' → logprob: -3.699000835418701
    6. ']:
' → logprob: -4.199000835418701
    7. ':
' → logprob: -5.699000835418701
    8. ']' → logprob: -5.824000835418701
    9. ' and' → logprob: -6.949000835418701
    10. '           ' → logprob: -7.449000835418701

Token 1157: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3037284314632416
    2. ':' → logprob: -1.428728461265564
    3. '       ' → logprob: -4.1787285804748535
    4. ' new' → logprob: -6.1787285804748535
    5. ' :' → logprob: -6.4287285804748535
    6. 'new' → logprob: -6.8037285804748535
    7. ' and' → logprob: -7.4287285804748535
    8. '):' → logprob: -7.5537285804748535
    9. ':
' → logprob: -8.303728103637695
    10. '               ' → logprob: -8.553728103637695

Token 1158: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0076081594452261925
    2. '           ' → logprob: -5.507607936859131
    3. ' new' → logprob: -6.257607936859131
    4. '               ' → logprob: -7.257607936859131
    5. 'continue' → logprob: -7.632607936859131
    6. 'if' → logprob: -7.882607936859131
    7. '       ' → logprob: -11.132608413696289
    8. 'for' → logprob: -11.382608413696289
    9. '#' (adapté à ' #') → logprob: -13.007608413696289
    10. '```' → logprob: -13.132608413696289

Token 1159: ' La' (ID: 3038)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00015217094914987683
    2. ' new' → logprob: -9.375152587890625
    3. 'if' → logprob: -10.500152587890625
    4. 'continue' → logprob: -10.875152587890625
    5. 'he' → logprob: -12.125152587890625
    6. '#' → logprob: -12.250152587890625
    7. '   ' → logprob: -12.500152587890625
    8. 'for' → logprob: -12.500152587890625
    9. '(new' → logprob: -14.625152587890625
    10. '           ' → logprob: -14.750152587890625

Token 1160: ' nouvelle' (ID: 24562)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.16162963211536407
    2. ' new' → logprob: -1.9116296768188477
    3. 'for' → logprob: -7.286629676818848
    4. ' for' → logprob: -7.911629676818848
    5. '#' → logprob: -9.286629676818848
    6. 'he' → logprob: -9.786629676818848
    7. 'if' → logprob: -10.286629676818848
    8. 'continue' → logprob: -10.536629676818848
    9. '   ' → logprob: -10.786629676818848
    10. ' if' → logprob: -11.411629676818848

Token 1161: ' valeur' (ID: 41664)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.03053632192313671
    2. 'dp' → logprob: -3.530536413192749
    3. 'new' → logprob: -7.15553617477417
    4. '	dp' → logprob: -13.905536651611328
    5. ' new' → logprob: -14.030536651611328
    6. '   ' → logprob: -14.155536651611328
    7. '```' → logprob: -14.405536651611328
    8. 'for' → logprob: -14.530536651611328
    9. ' dp' → logprob: -14.655536651611328
    10. 'DP' → logprob: -15.405536651611328

Token 1162: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0052647590637207
    2. 'new' → logprob: -1.3802647590637207
    3. '           ' → logprob: -1.7552647590637207
    4. ' =' → logprob: -1.8802647590637207
    5. ' new' → logprob: -3.2552647590637207
    6. '[new' → logprob: -4.505264759063721
    7. '               ' → logprob: -6.630264759063721
    8. '=new' → logprob: -6.755264759063721
    9. '       ' → logprob: -6.880264759063721
    10. ':' → logprob: -7.005264759063721

Token 1163: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00011021859245374799
    2. ' new' → logprob: -9.125110626220703
    3. '```' → logprob: -14.250110626220703
    4. '
' → logprob: -15.750110626220703
    5. '   ' → logprob: -15.875110626220703
    6. '[new' → logprob: -16.625110626220703
    7. '	new' → logprob: -17.375110626220703
    8. ')new' → logprob: -17.375110626220703
    9. '`' → logprob: -17.625110626220703
    10. '_new' → logprob: -18.625110626220703

Token 1164: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -4.320199877838604e-07
    2. 'dp' → logprob: -14.75
    3. '_dt' → logprob: -18.0
    4. '_' → logprob: -19.0
    5. '_d' → logprob: -19.125
    6. '	dp' → logprob: -19.875
    7. '\' → logprob: -20.125
    8. '_df' → logprob: -20.375
    9. '_DP' → logprob: -20.5
    10. '```' → logprob: -20.625

Token 1165: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.096126576769166e-05
    2. '[new' → logprob: -10.875041007995605
    3. '[' → logprob: -11.250041007995605
    4. ' [' → logprob: -12.125041007995605
    5. 'new' → logprob: -14.125041007995605
    6. '[k' → logprob: -14.125041007995605
    7. '[j' → logprob: -14.625041007995605
    8. '```' → logprob: -14.625041007995605
    9. '[I' → logprob: -15.000041007995605
    10. 'i' → logprob: -15.250041007995605

Token 1166: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03873302415013313
    2. ']+=' → logprob: -3.2887330055236816
    3. ']=' → logprob: -7.413733005523682
    4. ' ]' → logprob: -10.53873348236084
    5. ']+' → logprob: -10.53873348236084
    6. '[k' → logprob: -11.16373348236084
    7. '+=' → logprob: -12.41373348236084
    8. '   ' → logprob: -12.53873348236084
    9. '```' → logprob: -12.78873348236084
    10. '[' → logprob: -13.03873348236084

Token 1167: ' est' (ID: 893)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048537515103816986
    2. '=' → logprob: -3.548537492752075
    3. ' +=' → logprob: -4.048537731170654
    4. ']+=' → logprob: -7.298537731170654
    5. ' =' → logprob: -7.798537731170654
    6. '   ' → logprob: -11.048537254333496
    7. '=max' → logprob: -11.298537254333496
    8. '```' → logprob: -11.423537254333496
    9. '           ' → logprob: -11.798537254333496
    10. '+' → logprob: -12.173537254333496

Token 1168: ' alors' (ID: 17971)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8859289288520813
    2. 'new' → logprob: -1.6359288692474365
    3. 'max' → logprob: -1.7609288692474365
    4. '(dp' → logprob: -2.3859288692474365
    5. ' (' → logprob: -3.3859288692474365
    6. ' dp' → logprob: -3.7609288692474365
    7. ' new' → logprob: -3.7609288692474365
    8. '(max' → logprob: -3.8859288692474365
    9. ' max' → logprob: -3.8859288692474365
    10. '(new' → logprob: -5.760929107666016

Token 1169: ' dp' (ID: 21546)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -1.2077852487564087
    2. '(dp' → logprob: -1.2077852487564087
    3. '(new' → logprob: -1.8327852487564087
    4. 'new' → logprob: -2.582785129547119
    5. ' (' → logprob: -2.707785129547119
    6. '(' → logprob: -3.207785129547119
    7. 'max' → logprob: -3.332785129547119
    8. 'dp' → logprob: -4.082785129547119
    9. '           ' → logprob: -6.582785129547119
    10. ' new' → logprob: -6.707785129547119

Token 1170: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004170883446931839
    2. 'new' → logprob: -5.879170894622803
    3. '[k' → logprob: -7.379170894622803
    4. '[new' → logprob: -7.629170894622803
    5. '[' → logprob: -9.379170417785645
    6. 'i' → logprob: -9.504170417785645
    7. '```' → logprob: -10.754170417785645
    8. 'k' → logprob: -11.004170417785645
    9. ' [' → logprob: -11.504170417785645
    10. ' new' → logprob: -11.629170417785645

Token 1171: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014845087425783277
    2. ']+' → logprob: -6.876484394073486
    3. '])' → logprob: -8.376484870910645
    4. '-' → logprob: -9.626484870910645
    5. '+' → logprob: -10.501484870910645
    6. ' ]' → logprob: -10.876484870910645
    7. ']*' → logprob: -11.001484870910645
    8. 'i' → logprob: -11.126484870910645
    9. '[i' → logprob: -11.251484870910645
    10. '[' → logprob: -11.626484870910645

Token 1172: ' multip' (ID: 17524)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.18984854221344
    2. '+' → logprob: -1.31484854221344
    3. '           ' → logprob: -1.31484854221344
    4. ']' → logprob: -2.6898484230041504
    5. ' *' → logprob: -3.6898484230041504
    6. '*' → logprob: -4.43984842300415
    7. '   ' → logprob: -4.68984842300415
    8. ' if' → logprob: -4.68984842300415
    9. '               ' → logprob: -5.18984842300415
    10. '       ' → logprob: -5.43984842300415

Token 1173: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.987498939037323
    2. 'ipl' → logprob: -1.2374989986419678
    3. 'ip' → logprob: -1.3624989986419678
    4. 'li' → logprob: -2.8624989986419678
    5. '*' → logprob: -4.737498760223389
    6. 'plied' → logprob: -5.237498760223389
    7. 'pli' → logprob: -6.112498760223389
    8. 'lic' → logprob: -6.612498760223389
    9. 'pl' → logprob: -6.737498760223389
    10. ' *' → logprob: -6.862498760223389

Token 1174: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.03426885977387428
    2. 'par' → logprob: -3.534268856048584
    3. 'by' → logprob: -6.284268856048584
    4. '*' → logprob: -7.034268856048584
    5. ' by' → logprob: -8.159269332885742
    6. '(dp' → logprob: -8.159269332885742
    7. 'dp' → logprob: -8.659269332885742
    8. 'multip' → logprob: -8.784269332885742
    9. '(H' → logprob: -8.909269332885742
    10. 'H' → logprob: -9.159269332885742

Token 1175: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02086067385971546
    2. '2' → logprob: -4.64586067199707
    3. 'H' → logprob: -5.39586067199707
    4. 'new' → logprob: -5.77086067199707
    5. ' dp' → logprob: -6.52086067199707
    6. 'i' → logprob: -8.02086067199707
    7. 'k' → logprob: -8.14586067199707
    8. 'mod' → logprob: -8.52086067199707
    9. '1' → logprob: -8.77086067199707
    10. '3' → logprob: -8.77086067199707

Token 1176: '2' (ID: 17)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.44712793827056885
    2. 'dp' → logprob: -1.0721279382705688
    3. '(H' → logprob: -5.322127819061279
    4. '2' → logprob: -5.447127819061279
    5. 'i' → logprob: -5.947127819061279
    6. 'k' → logprob: -6.197127819061279
    7. '(' → logprob: -6.697127819061279
    8. '(i' → logprob: -7.447127819061279
    9. 'mod' → logprob: -7.572127819061279
    10. 'pow' → logprob: -7.572127819061279

Token 1177: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8946225643157959
    2. ')' → logprob: -2.019622564315796
    3. '*' → logprob: -2.269622564315796
    4. ' *' → logprob: -2.269622564315796
    5. 'new' → logprob: -2.519622564315796
    6. '       ' → logprob: -3.519622564315796
    7. '   ' → logprob: -4.019622802734375
    8. '               ' → logprob: -4.269622802734375
    9. '<|end|>' → logprob: -4.269622802734375
    10. ' new' → logprob: -4.519622802734375

Token 1178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11538248509168625
    2. '               ' → logprob: -2.490382432937622
    3. ')' → logprob: -4.990382671356201
    4. ':' → logprob: -5.115382671356201
    5. '       ' → logprob: -5.115382671356201
    6. '*' → logprob: -6.115382671356201
    7. '<|end|>' → logprob: -6.990382671356201
    8. ']' → logprob: -7.115382671356201
    9. '                   ' → logprob: -7.490382671356201
    10. 'new' → logprob: -7.990382671356201

Token 1179: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.20383061468601227
    2. ' new' → logprob: -1.703830599784851
    3. '           ' → logprob: -7.078830718994141
    4. '=' → logprob: -7.578830718994141
    5. '               ' → logprob: -7.578830718994141
    6. ' =' → logprob: -8.82883071899414
    7. ':' → logprob: -8.82883071899414
    8. ')' → logprob: -10.20383071899414
    9. '[new' → logprob: -10.70383071899414
    10. '                   ' → logprob: -10.82883071899414

Token 1180: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.1472419600977446e-06
    2. '_d' → logprob: -15.375000953674316
    3. '_dt' → logprob: -15.750000953674316
    4. '_' → logprob: -16.125001907348633
    5. '_dc' → logprob: -16.375001907348633
    6. '_pd' → logprob: -16.500001907348633
    7. '_df' → logprob: -16.625001907348633
    8. '_DP' → logprob: -16.750001907348633
    9. '_p' → logprob: -17.000001907348633
    10. 'dp' → logprob: -17.250001907348633

Token 1181: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001261845463886857
    2. '[' → logprob: -9.000125885009766
    3. ' [' → logprob: -13.000125885009766
    4. '```' → logprob: -15.250125885009766
    5. 'i' → logprob: -16.000125885009766
    6. '[new' → logprob: -16.250125885009766
    7. '[I' → logprob: -16.750125885009766
    8. '][' → logprob: -17.125125885009766
    9. ')[' → logprob: -17.625125885009766
    10. '[k' → logprob: -18.125125885009766

Token 1182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005763856461271644
    2. ']+=' → logprob: -7.750576496124268
    3. ']=' → logprob: -8.87557601928711
    4. '=' → logprob: -12.87557601928711
    5. ' ]' → logprob: -13.00057601928711
    6. '+=' → logprob: -14.62557601928711
    7. ')' → logprob: -15.12557601928711
    8. ']+' → logprob: -16.00057601928711
    9. ' =' → logprob: -16.37557601928711
    10. ' +=' → logprob: -16.50057601928711

Token 1183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1394827514886856
    2. '+=' → logprob: -2.3894827365875244
    3. ' =' → logprob: -3.8894827365875244
    4. ' +=' → logprob: -4.0144829750061035
    5. '+' → logprob: -12.889482498168945
    6. ']+=' → logprob: -13.264482498168945
    7. '*=' → logprob: -14.764482498168945
    8. '   ' → logprob: -15.139482498168945
    9. '+=(' → logprob: -15.139482498168945
    10. ' |=' → logprob: -15.389482498168945

Token 1184: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006729110609740019
    2. ' dp' → logprob: -5.0067291259765625
    3. '2' → logprob: -11.381729125976562
    4. '(dp' → logprob: -13.506729125976562
    5. '   ' → logprob: -14.631729125976562
    6. '	dp' → logprob: -14.881729125976562
    7. ' ' → logprob: -16.381729125976562
    8. 'd' → logprob: -17.506729125976562
    9. '_dp' → logprob: -17.506729125976562
    10. '(' → logprob: -17.631729125976562

Token 1185: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.3199920178740285e-05
    2. 'k' → logprob: -10.875022888183594
    3. '[' → logprob: -12.375022888183594
    4. '(k' → logprob: -18.250022888183594
    5. '{k' → logprob: -18.375022888183594
    6. '[i' → logprob: -18.750022888183594
    7. ' k' → logprob: -18.875022888183594
    8. '	k' → logprob: -19.125022888183594
    9. '[
' → logprob: -19.500022888183594
    10. '[key' → logprob: -20.000022888183594

Token 1186: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.21841192245483398
    2. ' *' → logprob: -1.718411922454834
    3. ']' → logprob: -4.093411922454834
    4. ']*' → logprob: -8.968412399291992
    5. ')' → logprob: -10.218412399291992
    6. ' ' → logprob: -12.343412399291992
    7. ' ' → logprob: -13.218412399291992
    8. ')*' → logprob: -13.718412399291992
    9. '   ' → logprob: -14.843412399291992
    10. ' ]' → logprob: -15.343412399291992

Token 1187: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1188: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۲' → logprob: -19.12502098083496
    4. '   ' → logprob: -19.25002098083496
    5. '(' → logprob: -19.37502098083496
    6. '```' → logprob: -19.62502098083496
    7. '
' → logprob: -20.00002098083496
    8. '  ' → logprob: -20.62502098083496
    9. '２' → logprob: -20.62502098083496
    10. '٢' → logprob: -21.62502098083496

Token 1189: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.375001907348633
    4. '
' → logprob: -20.750001907348633
    5. '۲' → logprob: -20.875001907348633
    6. '(' → logprob: -21.000001907348633
    7. '２' → logprob: -22.000001907348633
    8. '```' → logprob: -22.250001907348633
    9. '  ' → logprob: -22.500001907348633
    10. '٢' → logprob: -23.500001907348633

Token 1190: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1191: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1192: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1193: ' Sinon' (ID: 154924)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.07088826596736908
    2. 'else' → logprob: -2.6958882808685303
    3. ' elif' → logprob: -7.320888042449951
    4. ' else' → logprob: -8.57088851928711
    5. 'if' → logprob: -10.07088851928711
    6. 'el' → logprob: -10.32088851928711
    7. '       ' → logprob: -11.44588851928711
    8. '   ' → logprob: -11.57088851928711
    9. '```' → logprob: -13.32088851928711
    10. '	elif' → logprob: -14.19588851928711

Token 1194: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09148401767015457
    2. '       ' → logprob: -2.8414840698242188
    3. ' else' → logprob: -3.9664840698242188
    4. 'elif' → logprob: -4.966484069824219
    5. ':' → logprob: -5.841484069824219
    6. ' elif' → logprob: -8.341484069824219
    7. '   ' → logprob: -11.216484069824219
    8. '           ' → logprob: -11.716484069824219
    9. ' :' → logprob: -13.091484069824219
    10. '	else' → logprob: -13.091484069824219

Token 1195: ' vér' (ID: 42524)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.30965521931648254
    2. 'elif' → logprob: -1.4346551895141602
    3. ' else' → logprob: -4.30965518951416
    4. '       ' → logprob: -4.68465518951416
    5. ' elif' → logprob: -6.05965518951416
    6. 'if' → logprob: -6.55965518951416
    7. '           ' → logprob: -7.05965518951416
    8. 'new' → logprob: -7.55965518951416
    9. ' new' → logprob: -8.80965518951416
    10. '```' → logprob: -9.80965518951416

Token 1196: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4189283549785614
    2. 'elif' → logprob: -1.6689283847808838
    3. 'else' → logprob: -2.168928384780884
    4. '```' → logprob: -3.793928384780884
    5. 'ifie' → logprob: -5.043928146362305
    6. 'ifiez' → logprob: -5.293928146362305
    7. 'new' → logprob: -6.418928146362305
    8. ' elif' → logprob: -7.168928146362305
    9. 'els' → logprob: -7.293928146362305
    10. ' else' → logprob: -7.793928146362305

Token 1197: ' si' (ID: 1784)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.18022197484970093
    2. ' elif' → logprob: -1.8052220344543457
    3. '       ' → logprob: -8.055221557617188
    4. '   ' → logprob: -9.805221557617188
    5. '	elif' → logprob: -9.930221557617188
    6. 'else' → logprob: -11.430221557617188
    7. ' if' → logprob: -11.805221557617188
    8. 'el' → logprob: -12.055221557617188
    9. ' else' → logprob: -12.555221557617188
    10. '           ' → logprob: -12.555221557617188

Token 1198: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.16968746483325958
    2. ' H' → logprob: -2.169687509536743
    3. 'i' → logprob: -3.669687509536743
    4. ' i' → logprob: -4.169687271118164
    5. 'k' → logprob: -7.794687271118164
    6. ' not' → logprob: -8.669687271118164
    7. 'not' → logprob: -9.044687271118164
    8. ' k' → logprob: -9.419687271118164
    9. ' ' → logprob: -10.044687271118164
    10. '   ' → logprob: -11.419687271118164

Token 1199: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04320026561617851
    2. '[k' → logprob: -3.1682002544403076
    3. 'i' → logprob: -9.418200492858887
    4. '[' → logprob: -9.793200492858887
    5. '[j' → logprob: -10.418200492858887
    6. 'k' → logprob: -11.543200492858887
    7. '```' → logprob: -11.918200492858887
    8. ' [' → logprob: -13.168200492858887
    9. ']' → logprob: -13.293200492858887
    10. '[n' → logprob: -13.668200492858887

Token 1200: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013446083292365074
    2. ']' → logprob: -4.388445854187012
    3. '[' → logprob: -7.888445854187012
    4. '[j' → logprob: -8.638445854187012
    5. ']>' → logprob: -8.638445854187012
    6. '>' → logprob: -9.388445854187012
    7. '[k' → logprob: -10.013445854187012
    8. '][' → logprob: -10.138445854187012
    9. ']==' → logprob: -11.263445854187012
    10. 'i' → logprob: -12.013445854187012

Token 1201: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023596467450261116
    2. 'i' → logprob: -3.7735965251922607
    3. 'k' → logprob: -8.89859676361084
    4. ' ' → logprob: -9.27359676361084
    5. ' i' → logprob: -9.52359676361084
    6. ']' → logprob: -10.39859676361084
    7. '0' → logprob: -13.02359676361084
    8. 'if' → logprob: -13.33609676361084
    9. 'j' → logprob: -13.71109676361084
    10. '>' → logprob: -13.71109676361084

Token 1202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00803515873849392
    2. 'i' → logprob: -4.883035182952881
    3. 'k' → logprob: -7.883035182952881
    4. ']' → logprob: -11.258034706115723
    5. ' ' → logprob: -11.758034706115723
    6. '0' → logprob: -12.008034706115723
    7. '(i' → logprob: -12.570534706115723
    8. '`' → logprob: -13.070534706115723
    9. ' i' → logprob: -13.070534706115723
    10. '```' → logprob: -13.258034706115723

Token 1203: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005395849701017141
    2. ']>' → logprob: -5.880395889282227
    3. '[i' → logprob: -6.505395889282227
    4. '>' → logprob: -8.005395889282227
    5. '[k' → logprob: -8.505395889282227
    6. ']>=' → logprob: -8.630395889282227
    7. ']==' → logprob: -9.505395889282227
    8. ']!=' → logprob: -9.505395889282227
    9. 'if' → logprob: -10.130395889282227
    10. '```' → logprob: -10.255395889282227

Token 1204: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7143939733505249
    2. ' >' → logprob: -0.9643939733505249
    3. ']' → logprob: -3.0893940925598145
    4. ' >=' → logprob: -3.5893940925598145
    5. ' !=' → logprob: -4.2143940925598145
    6. '[i' → logprob: -4.2143940925598145
    7. '>=' → logprob: -4.8393940925598145
    8. '!=' → logprob: -5.3393940925598145
    9. ' ==' → logprob: -5.7143940925598145
    10. ' <' → logprob: -6.3393940925598145

Token 1205: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00593898631632328
    2. ' H' → logprob: -5.13093900680542
    3. 'i' → logprob: -11.630938529968262
    4. ' i' → logprob: -15.505938529968262
    5. ' ' → logprob: -15.630938529968262
    6. 'k' → logprob: -15.630938529968262
    7. ' ' → logprob: -16.005939483642578
    8. '   ' → logprob: -16.130939483642578
    9. '>' → logprob: -16.130939483642578
    10. 'h' → logprob: -16.380939483642578

Token 1206: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.027493715286254883
    2. 'i' → logprob: -3.902493715286255
    3. '[k' → logprob: -5.027493476867676
    4. 'k' → logprob: -8.527493476867676
    5. '[' → logprob: -9.152493476867676
    6. ']' → logprob: -10.777493476867676
    7. ' [' → logprob: -11.402493476867676
    8. '[j' → logprob: -11.527493476867676
    9. ' i' → logprob: -11.652493476867676
    10. '[
' → logprob: -12.402493476867676

Token 1207: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.054103244096040726
    2. ']:
' → logprob: -3.679103136062622
    3. ']:' → logprob: -4.554103374481201
    4. ' and' → logprob: -4.804103374481201
    5. '       ' → logprob: -5.804103374481201
    6. ':' → logprob: -6.054103374481201
    7. 'and' → logprob: -6.679103374481201
    8. '>' → logprob: -7.679103374481201
    9. 'if' → logprob: -7.804103374481201
    10. ':
' → logprob: -8.679102897644043

Token 1208: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4884353280067444
    2. ' and' → logprob: -1.7384352684020996
    3. 'elif' → logprob: -1.8634352684020996
    4. ' or' → logprob: -3.4884352684020996
    5. ' elif' → logprob: -4.7384352684021
    6. 'and' → logprob: -4.8634352684021
    7. ':' → logprob: -5.3634352684021
    8. '   ' → logprob: -6.2384352684021
    9. '           ' → logprob: -7.8634352684021
    10. '<|end|>' → logprob: -7.9884352684021

Token 1209: 'attention' (ID: 126213)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.29553458094596863
    2. 'and' → logprob: -2.295534610748291
    3. '):' → logprob: -2.295534610748291
    4. ':' → logprob: -3.295534610748291
    5. ')' → logprob: -4.295534610748291
    6. ' or' → logprob: -6.795534610748291
    7. ' ):' → logprob: -7.170534610748291
    8. '):
' → logprob: -7.420534610748291
    9. ' :' → logprob: -8.170534133911133
    10. 'if' → logprob: -8.420534133911133

Token 1210: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.031272150576114655
    2. 'and' → logprob: -3.5312721729278564
    3. ')' → logprob: -7.406271934509277
    4. '):
' → logprob: -8.406271934509277
    5. '):' → logprob: -8.406271934509277
    6. ':' → logprob: -8.656271934509277
    7. ' )' → logprob: -9.531271934509277
    8. ' if' → logprob: -9.906271934509277
    9. ' ):
' → logprob: -10.156271934509277
    10. ' k' → logprob: -10.531271934509277

Token 1211: ' pour' (ID: 1930)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.31529510021209717
    2. ' k' → logprob: -1.3152951002120972
    3. 'i' → logprob: -6.815295219421387
    4. ' i' → logprob: -7.065295219421387
    5. ' (' → logprob: -10.315295219421387
    6. '(k' → logprob: -10.815295219421387
    7. ')' → logprob: -12.065295219421387
    8. ' ' → logprob: -12.565295219421387
    9. '0' → logprob: -12.815295219421387
    10. ' ' → logprob: -12.815295219421387

Token 1212: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.048821378499269485
    2. ' k' → logprob: -3.048821449279785
    3. 'i' → logprob: -8.673821449279785
    4. ' i' → logprob: -10.298821449279785
    5. '0' → logprob: -10.923821449279785
    6. ' ' → logprob: -12.798821449279785
    7. '1' → logprob: -13.173821449279785
    8. '(k' → logprob: -13.548821449279785
    9. 'H' → logprob: -13.923821449279785
    10. ')' → logprob: -14.923821449279785

Token 1213: '=' (ID: 28)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.17788928747177124
    2. ' >' → logprob: -1.927889347076416
    3. '==' → logprob: -4.552889347076416
    4. ' ==' → logprob: -5.927889347076416
    5. '!=' → logprob: -6.552889347076416
    6. ')' → logprob: -7.177889347076416
    7. ' !=' → logprob: -7.302889347076416
    8. '>=' → logprob: -7.552889347076416
    9. '-' → logprob: -7.677889347076416
    10. '=' → logprob: -9.177888870239258

Token 1214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001504982472397387
    2. '1' → logprob: -6.876504898071289
    3. ' ' → logprob: -8.126504898071289
    4. '=' → logprob: -9.251504898071289
    5. '>' → logprob: -9.626504898071289
    6. ')' → logprob: -12.126504898071289
    7. 'k' → logprob: -12.501504898071289
    8. '
' → logprob: -13.626504898071289
    9. ' =' → logprob: -14.001504898071289
    10. '```' → logprob: -14.376504898071289

Token 1215: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31054818630218506
    2. 'and' → logprob: -2.8105483055114746
    3. ' or' → logprob: -2.8105483055114746
    4. '):' → logprob: -2.8105483055114746
    5. ' if' → logprob: -3.9355483055114746
    6. ':' → logprob: -4.060548305511475
    7. 'if' → logprob: -4.185548305511475
    8. '):
' → logprob: -4.185548305511475
    9. ')' → logprob: -4.310548305511475
    10. 'or' → logprob: -6.810548305511475

Token 1216: ' H' (ID: 487)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2839570939540863
    2. ' k' → logprob: -1.5339571237564087
    3. 'i' → logprob: -4.033957004547119
    4. ' i' → logprob: -4.408957004547119
    5. 'False' → logprob: -6.908957004547119
    6. ' False' → logprob: -7.533957004547119
    7. '0' → logprob: -10.658957481384277
    8. ')' → logprob: -10.783957481384277
    9. 'True' → logprob: -11.158957481384277
    10. ' True' → logprob: -11.408957481384277

Token 1217: '[-' (ID: 17503)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.4070642590522766
    2. '[-' → logprob: -2.282064199447632
    3. '[' → logprob: -2.532064199447632
    4. 'k' → logprob: -2.907064199447632
    5. '==' → logprob: -3.407064199447632
    6. '[i' → logprob: -3.907064199447632
    7. ' ==' → logprob: -4.532064437866211
    8. ')' → logprob: -4.657064437866211
    9. ']' → logprob: -5.282064437866211
    10. '>' → logprob: -6.157064437866211

Token 1218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009455840103328228
    2. 'k' → logprob: -5.009455680847168
    3. '])' → logprob: -6.134455680847168
    4. ']' → logprob: -7.759455680847168
    5. 'i' → logprob: -10.134455680847168
    6. ' ' → logprob: -10.259455680847168
    7. '(' → logprob: -10.634455680847168
    8. ' k' → logprob: -11.509455680847168
    9. ')]' → logprob: -12.259455680847168
    10. ')' → logprob: -12.884455680847168

Token 1219: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031425800174474716
    2. ']:' → logprob: -4.406425952911377
    3. ' ]' → logprob: -4.781425952911377
    4. '])' → logprob: -6.406425952911377
    5. ']>' → logprob: -6.531425952911377
    6. ']==' → logprob: -6.656425952911377
    7. ']>=' → logprob: -6.656425952911377
    8. ']<' → logprob: -6.781425952911377
    9. ']<=' → logprob: -7.031425952911377
    10. ']):' → logprob: -7.156425952911377

Token 1220: ' correspond' (ID: 11095)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1858685165643692
    2. ' <=' → logprob: -3.435868501663208
    3. ')' → logprob: -3.685868501663208
    4. ':' → logprob: -3.810868501663208
    5. '<=' → logprob: -4.310868740081787
    6. ' >=' → logprob: -4.435868740081787
    7. '>=' → logprob: -4.685868740081787
    8. ']:' → logprob: -4.935868740081787
    9. 'if' → logprob: -4.935868740081787
    10. ' ]' → logprob: -5.185868740081787

Token 1221: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5986450910568237
    2. 'à' → logprob: -1.0986450910568237
    3. ']' → logprob: -3.0986452102661133
    4. 'to' → logprob: -3.4736452102661133
    5. ')' → logprob: -3.7236452102661133
    6. ' to' → logprob: -4.348645210266113
    7. 'au' → logprob: -6.723645210266113
    8. '==' → logprob: -7.098645210266113
    9. ' au' → logprob: -7.723645210266113
    10. '=' → logprob: -7.973645210266113

Token 1222: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0014410654548555613
    2. '1' → logprob: -6.87644100189209
    3. ' H' → logprob: -7.87644100189209
    4. 'INF' → logprob: -11.50144100189209
    5. ')' → logprob: -12.75144100189209
    6. 'n' → logprob: -13.00144100189209
    7. ']' → logprob: -13.25144100189209
    8. ' ' → logprob: -13.50144100189209
    9. 'inf' → logprob: -13.75144100189209
    10. 'l' → logprob: -13.75144100189209

Token 1223: '[n' (ID: 15433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6905461549758911
    2. 'k' → logprob: -0.9405461549758911
    3. '[k' → logprob: -3.0655460357666016
    4. '[-' → logprob: -4.315546035766602
    5. '-' → logprob: -4.440546035766602
    6. '[' → logprob: -4.690546035766602
    7. '])' → logprob: -4.815546035766602
    8. 'n' → logprob: -5.315546035766602
    9. '0' → logprob: -5.440546035766602
    10. '[n' → logprob: -5.815546035766602

Token 1224: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05377873778343201
    2. ']' → logprob: -3.053778648376465
    3. ']):' → logprob: -5.678778648376465
    4. '-' → logprob: -7.428778648376465
    5. ']),' → logprob: -8.053778648376465
    6. '],' → logprob: -8.428778648376465
    7. ')' → logprob: -8.678778648376465
    8. '-k' → logprob: -9.428778648376465
    9. ']:' → logprob: -9.678778648376465
    10. ' -' → logprob: -10.053778648376465

Token 1225: ' car' (ID: 1669)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.305249571800232
    2. '):
' → logprob: -1.430249571800232
    3. ' and' → logprob: -1.680249571800232
    4. ')' → logprob: -2.1802496910095215
    5. '       ' → logprob: -2.3052496910095215
    6. ':' → logprob: -3.1802496910095215
    7. '           ' → logprob: -4.3052496910095215
    8. ']' → logprob: -4.4302496910095215
    9. ']:' → logprob: -5.4302496910095215
    10. ':
' → logprob: -5.5552496910095215

Token 1226: ' Python' (ID: 26534)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.12221523374319077
    2. 'python' → logprob: -2.4972152709960938
    3. ' Python' → logprob: -3.8722152709960938
    4. 'k' → logprob: -5.247215270996094
    5. ' python' → logprob: -6.122215270996094
    6. ')' → logprob: -6.497215270996094
    7. '```' → logprob: -7.497215270996094
    8. 'H' → logprob: -7.747215270996094
    9. 'i' → logprob: -7.872215270996094
    10. '`' → logprob: -8.247215270996094

Token 1227: ' autor' (ID: 13432)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04567116126418114
    2. ')' → logprob: -3.795671224594116
    3. '])' → logprob: -4.670670986175537
    4. '[-' → logprob: -5.670670986175537
    5. '[i' → logprob: -6.170670986175537
    6. ']==' → logprob: -6.170670986175537
    7. '[k' → logprob: -6.545670986175537
    8. '[' → logprob: -6.920670986175537
    9. ']:' → logprob: -8.045671463012695
    10. ']<' → logprob: -8.420671463012695

Token 1228: 'ise' (ID: 1096)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.1086098849773407
    2. 'e' → logprob: -2.983609914779663
    3. 'te' → logprob: -4.483609676361084
    4. 'ise' → logprob: -4.733609676361084
    5. 't' → logprob: -5.233609676361084
    6. 'k' → logprob: -5.733609676361084
    7. 'isse' → logprob: -5.733609676361084
    8. ']' → logprob: -5.858609676361084
    9. 'ote' → logprob: -6.358609676361084
    10. 'ète' → logprob: -6.358609676361084

Token 1229: ' les' (ID: 1341)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10174404829740524
    2. '-' → logprob: -3.2267439365386963
    3. ')' → logprob: -3.3517439365386963
    4. '])' → logprob: -5.351744174957275
    5. '```' → logprob: -5.601744174957275
    6. 'k' → logprob: -6.101744174957275
    7. '1' → logprob: -6.101744174957275
    8. 'H' → logprob: -6.351744174957275
    9. '`' → logprob: -6.601744174957275
    10. 'n' → logprob: -7.226744174957275

Token 1230: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.18761198222637177
    2. 'index' → logprob: -2.0626120567321777
    3. ']' → logprob: -3.6876120567321777
    4. 'indexes' → logprob: -5.062612056732178
    5. ' indices' → logprob: -5.312612056732178
    6. 'indice' → logprob: -6.062612056732178
    7. 'wrap' → logprob: -6.187612056732178
    8. '[-' → logprob: -7.312612056732178
    9. '])' → logprob: -7.437612056732178
    10. '```' → logprob: -8.06261157989502

Token 1231: ' nég' (ID: 55805)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.9672621488571167
    2. ' nég' → logprob: -1.2172621488571167
    3. 'n' → logprob: -1.5922621488571167
    4. 'cir' → logprob: -2.9672622680664062
    5. '
' → logprob: -3.9672622680664062
    6. '```' → logprob: -3.9672622680664062
    7. 'cycl' → logprob: -4.342262268066406
    8. 'negative' → logprob: -5.467262268066406
    9. '[' → logprob: -5.842262268066406
    10. '[-' → logprob: -6.217262268066406

Token 1232: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.29997682571411133
    2. 'ifs' → logprob: -1.6749768257141113
    3. ']' → logprob: -3.9249768257141113
    4. 'x' → logprob: -4.174976825714111
    5. 'aux' → logprob: -4.924976825714111
    6. 'ex' → logprob: -4.924976825714111
    7. '#' → logprob: -5.424976825714111
    8. '])' → logprob: -5.549976825714111
    9. 's' → logprob: -5.924976825714111
    10. 'iaux' → logprob: -6.049976825714111

Token 1233: ')
' (ID: 446)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24740509688854218
    2. '       ' → logprob: -2.2474050521850586
    3. ':' → logprob: -3.2474050521850586
    4. ')' → logprob: -3.6224050521850586
    5. 'and' → logprob: -3.9974050521850586
    6. ' or' → logprob: -4.622405052185059
    7. '):' → logprob: -5.122405052185059
    8. '):
' → logprob: -5.747405052185059
    9. '   ' → logprob: -5.997405052185059
    10. ':
' → logprob: -6.372405052185059

Token 1234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10570608079433441
    2. 'elif' → logprob: -2.855705976486206
    3. '           ' → logprob: -3.605705976486206
    4. ' elif' → logprob: -4.855706214904785
    5. ' and' → logprob: -5.230706214904785
    6. ':' → logprob: -6.605706214904785
    7. 'and' → logprob: -7.980706214904785
    8. ' or' → logprob: -8.230706214904785
    9. '   ' → logprob: -8.980706214904785
    10. '```' → logprob: -9.355706214904785

Token 1235: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.12482263147830963
    2. '       ' → logprob: -2.2498226165771484
    3. ' elif' → logprob: -4.999822616577148
    4. 'else' → logprob: -5.499822616577148
    5. '   ' → logprob: -6.999822616577148
    6. 'el' → logprob: -9.624822616577148
    7. ' else' → logprob: -9.749822616577148
    8. 'if' → logprob: -10.374822616577148
    9. '           ' → logprob: -11.124822616577148
    10. '	elif' → logprob: -11.749822616577148

Token 1236: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2906051576137543
    2. ' H' → logprob: -1.4156051874160767
    3. 'k' → logprob: -4.790605068206787
    4. ' k' → logprob: -6.915605068206787
    5. 'i' → logprob: -10.415605545043945
    6. '0' → logprob: -10.790605545043945
    7. ' i' → logprob: -10.915605545043945
    8. ' ' → logprob: -11.165605545043945
    9. '(H' → logprob: -11.915605545043945
    10. ' (' → logprob: -12.165605545043945

Token 1237: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.026412105187773705
    2. '[i' → logprob: -3.776412010192871
    3. 'k' → logprob: -5.901412010192871
    4. 'i' → logprob: -8.776412010192871
    5. '[
' → logprob: -9.276412010192871
    6. '[' → logprob: -9.526412010192871
    7. ' [' → logprob: -10.151412010192871
    8. '
' → logprob: -11.151412010192871
    9. '   ' → logprob: -11.151412010192871
    10. '```' → logprob: -11.526412010192871

Token 1238: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02007323130965233
    2. ' -' → logprob: -4.020073413848877
    3. ']' → logprob: -6.395073413848877
    4. '   ' → logprob: -8.895072937011719
    5. '       ' → logprob: -10.645072937011719
    6. '[-' → logprob: -10.895072937011719
    7. '>' → logprob: -11.395072937011719
    8. '][' → logprob: -11.770072937011719
    9. ' ' → logprob: -11.895072937011719
    10. ']==' → logprob: -11.895072937011719

Token 1239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.750004768371582
    3. ']' → logprob: -13.625004768371582
    4. '
' → logprob: -15.125004768371582
    5. '   ' → logprob: -15.500004768371582
    6. '])' → logprob: -16.6250057220459
    7. '```' → logprob: -16.8750057220459
    8. '`' → logprob: -17.4375057220459
    9. '2' → logprob: -17.9375057220459
    10. '...' → logprob: -18.0000057220459

Token 1240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ']' → logprob: -12.250011444091797
    3. ' ' → logprob: -12.250011444091797
    4. '   ' → logprob: -15.375011444091797
    5. '```' → logprob: -15.375011444091797
    6. '2' → logprob: -15.625011444091797
    7. '
' → logprob: -16.125011444091797
    8. 'i' → logprob: -16.312511444091797
    9. '...' → logprob: -16.375011444091797
    10. '>' → logprob: -16.625011444091797

Token 1241: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014130474999547005
    2. ']<=' → logprob: -4.889130592346191
    3. '<=' → logprob: -5.264130592346191
    4. ']>=' → logprob: -7.389130592346191
    5. ' <=' → logprob: -8.264130592346191
    6. ' ]' → logprob: -8.264130592346191
    7. '[i' → logprob: -10.264130592346191
    8. ']>' → logprob: -10.264130592346191
    9. '>=' → logprob: -10.514130592346191
    10. '>' → logprob: -10.889130592346191

Token 1242: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.013130700215697289
    2. ' <=' → logprob: -4.6381306648254395
    3. '>=' → logprob: -5.7631306648254395
    4. '>' → logprob: -8.763131141662598
    5. ' >=' → logprob: -10.763131141662598
    6. '==' → logprob: -11.263131141662598
    7. '<' → logprob: -11.388131141662598
    8. ']<=' → logprob: -11.388131141662598
    9. '   ' → logprob: -13.013131141662598
    10. ')<=' → logprob: -13.138131141662598

Token 1243: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01416350994259119
    2. ' H' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.889163970947266
    4. '	H' → logprob: -18.014163970947266
    5. ' ' → logprob: -18.139163970947266
    6. '   ' → logprob: -18.264163970947266
    7. '_H' → logprob: -18.389163970947266
    8. '>' → logprob: -19.014163970947266
    9. 'h' → logprob: -19.139163970947266
    10. '[' → logprob: -19.514163970947266

Token 1244: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010270876373397186
    2. 'i' → logprob: -9.250102996826172
    3. ']' → logprob: -12.500102996826172
    4. '][' → logprob: -13.375102996826172
    5. ' [' → logprob: -15.125102996826172
    6. '[' → logprob: -15.250102996826172
    7. '(i' → logprob: -15.375102996826172
    8. '[
' → logprob: -15.375102996826172
    9. '[k' → logprob: -16.500102996826172
    10. ' i' → logprob: -16.625102996826172

Token 1245: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.43327492475509644
    2. ']:' → logprob: -1.4332749843597412
    3. ':' → logprob: -2.433274984359741
    4. ':
' → logprob: -4.308274745941162
    5. ']' → logprob: -5.308274745941162
    6. '):
' → logprob: -5.933274745941162
    7. '       ' → logprob: -6.058274745941162
    8. ']:
' → logprob: -7.183274745941162
    9. '           ' → logprob: -8.05827522277832
    10. '):' → logprob: -8.30827522277832

Token 1246: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5781795382499695
    2. ':' → logprob: -1.3281795978546143
    3. '           ' → logprob: -2.2031795978546143
    4. 'new' → logprob: -3.5781795978546143
    5. '```' → logprob: -4.328179359436035
    6. ' new' → logprob: -4.703179359436035
    7. '[new' → logprob: -5.203179359436035
    8. ':
' → logprob: -5.453179359436035
    9. ':new' → logprob: -6.953179359436035
    10. ' :' → logprob: -7.453179359436035

Token 1247: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.08773885667324066
    2. ' new' → logprob: -2.9627387523651123
    3. '           ' → logprob: -3.4627387523651123
    4. '               ' → logprob: -7.462738990783691
    5. '       ' → logprob: -7.962738990783691
    6. '```' → logprob: -10.587738990783691
    7. '	new' → logprob: -11.212738990783691
    8. '          ' → logprob: -12.837738990783691
    9. '[new' → logprob: -13.337738990783691
    10. '		' → logprob: -13.587738990783691

Token 1248: ' Ici' (ID: 145754)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0007196996593847871
    2. ' new' → logprob: -7.2507195472717285
    3. '       ' → logprob: -12.375720024108887
    4. '           ' → logprob: -13.250720024108887
    5. 'if' → logprob: -13.500720024108887
    6. 'for' → logprob: -13.875720024108887
    7. '   ' → logprob: -14.000720024108887
    8. '
' → logprob: -15.875720024108887
    9. '               ' → logprob: -16.00071907043457
    10. '```' → logprob: -16.00071907043457

Token 1249: ',' (ID: 11)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.20226731896400452
    2. ' new' → logprob: -1.7022672891616821
    3. '           ' → logprob: -7.327267169952393
    4. '       ' → logprob: -9.20226764678955
    5. '               ' → logprob: -10.45226764678955
    6. '```' → logprob: -10.45226764678955
    7. '	new' → logprob: -11.07726764678955
    8. '   ' → logprob: -12.57726764678955
    9. ' ' → logprob: -12.70226764678955
    10. ')new' → logprob: -12.82726764678955

Token 1250: ' on' (ID: 402)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04861370474100113
    2. ' new' → logprob: -3.0486137866973877
    3. '           ' → logprob: -11.048613548278809
    4. '       ' → logprob: -12.173613548278809
    5. '	new' → logprob: -13.298613548278809
    6. '```' → logprob: -13.423613548278809
    7. '               ' → logprob: -14.298613548278809
    8. '   ' → logprob: -15.173613548278809
    9. 'if' → logprob: -15.548613548278809
    10. ' ' → logprob: -15.798613548278809

Token 1251: ' multipl' (ID: 44269)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.03875458985567093
    2. ' new' → logprob: -3.28875470161438
    3. '           ' → logprob: -8.0387544631958
    4. '[new' → logprob: -8.9137544631958
    5. '       ' → logprob: -9.1637544631958
    6. 'for' → logprob: -9.4137544631958
    7. '               ' → logprob: -11.6637544631958
    8. '   ' → logprob: -11.7887544631958
    9. ',new' → logprob: -11.9137544631958
    10. '#' → logprob: -12.0387544631958

Token 1252: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.2701590657234192
    2. 'ier' → logprob: -1.6451590061187744
    3. 'new' → logprob: -4.6451592445373535
    4. '       ' → logprob: -5.1451592445373535
    5. 'y' → logprob: -5.2701592445373535
    6. ' new' → logprob: -5.7701592445373535
    7. 'ié' → logprob: -5.7701592445373535
    8. '           ' → logprob: -5.8951592445373535
    9. '   ' → logprob: -6.3951592445373535
    10. 'ies' → logprob: -6.3951592445373535

Token 1253: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24498355388641357
    2. 'new' → logprob: -1.7449835538864136
    3. ' dp' → logprob: -3.869983673095703
    4. ' new' → logprob: -3.869983673095703
    5. '(dp' → logprob: -7.619983673095703
    6. '   ' → logprob: -8.619983673095703
    7. '2' → logprob: -8.994983673095703
    8. '	dp' → logprob: -10.619983673095703
    9. '(new' → logprob: -10.744983673095703
    10. '       ' → logprob: -11.994983673095703

Token 1254: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0209959726780653
    2. '[i' → logprob: -3.895995855331421
    3. 'k' → logprob: -7.77099609375
    4. '[' → logprob: -10.89599609375
    5. 'i' → logprob: -12.27099609375
    6. '[j' → logprob: -13.14599609375
    7. '[
' → logprob: -13.52099609375
    8. ' [' → logprob: -13.52099609375
    9. 'new' → logprob: -14.27099609375
    10. '[new' → logprob: -14.52099609375

Token 1255: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45490673184394836
    2. '[i' → logprob: -1.079906702041626
    3. '*' → logprob: -3.954906702041626
    4. ']*' → logprob: -6.079906940460205
    5. ' *' → logprob: -6.454906940460205
    6. '[' → logprob: -7.704906940460205
    7. '[k' → logprob: -7.829906940460205
    8. ')' → logprob: -8.079906463623047
    9. '*i' → logprob: -8.579906463623047
    10. ' ]' → logprob: -8.704906463623047

Token 1256: ' par' (ID: 686)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8940808176994324
    2. '*' → logprob: -1.0190808773040771
    3. ' *' → logprob: -1.6440808773040771
    4. ' by' → logprob: -3.644080877304077
    5. '           ' → logprob: -6.019080638885498
    6. 'by' → logprob: -6.019080638885498
    7. '*i' → logprob: -6.769080638885498
    8. '```' → logprob: -7.019080638885498
    9. '[' → logprob: -7.644080638885498
    10. ')' → logprob: -7.769080638885498

Token 1257: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003043196862563491
    2. ' ' → logprob: -5.878043174743652
    3. '1' → logprob: -9.128043174743652
    4. '3' → logprob: -9.253043174743652
    5. '4' → logprob: -12.003043174743652
    6. '   ' → logprob: -12.003043174743652
    7. '(' → logprob: -12.378043174743652
    8. 'k' → logprob: -13.003043174743652
    9. 'dp' → logprob: -13.190543174743652
    10. '10' → logprob: -13.315543174743652

Token 1258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00034952821442857385
    2. ' ' → logprob: -8.375349998474121
    3. '3' → logprob: -9.875349998474121
    4. '1' → logprob: -10.000349998474121
    5. '(' → logprob: -12.500349998474121
    6. '6' → logprob: -13.000349998474121
    7. 'k' → logprob: -13.000349998474121
    8. '   ' → logprob: -13.000349998474121
    9. 'mod' → logprob: -13.125349998474121
    10. '4' → logprob: -13.375349998474121

Token 1259: ' puis' (ID: 18766)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03441111743450165
    2. '               ' → logprob: -4.0344109535217285
    3. '```' → logprob: -5.4094109535217285
    4. ' new' → logprob: -5.7844109535217285
    5. 'new' → logprob: -6.7844109535217285
    6. '          ' → logprob: -7.0344109535217285
    7. '<|end|>' → logprob: -7.0344109535217285
    8. '                   ' → logprob: -7.2844109535217285
    9. '       ' → logprob: -7.2844109535217285
    10. ':' → logprob: -7.4094109535217285

Token 1260: ' par' (ID: 686)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7997226715087891
    2. ' new' → logprob: -1.299722671508789
    3. '=' → logprob: -2.049722671508789
    4. '+=' → logprob: -2.299722671508789
    5. '+' → logprob: -3.924722671508789
    6. ')' → logprob: -4.924722671508789
    7. ' +=' → logprob: -5.049722671508789
    8. 'mod' → logprob: -5.299722671508789
    9. '           ' → logprob: -6.049722671508789
    10. '       ' → logprob: -6.549722671508789

Token 1261: ' une' (ID: 2463)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.7516805529594421
    2. 'dp' → logprob: -1.251680612564087
    3. '2' → logprob: -2.001680612564087
    4. '(H' → logprob: -2.876680612564087
    5. 'k' → logprob: -4.251680374145508
    6. ' H' → logprob: -4.876680374145508
    7. 'mod' → logprob: -5.251680374145508
    8. 'pow' → logprob: -5.376680374145508
    9. '(dp' → logprob: -5.376680374145508
    10. ' dp' → logprob: -5.626680374145508

Token 1262: ' puissance' (ID: 63494)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.8192131519317627
    2. '2' → logprob: -1.1942131519317627
    3. ' H' → logprob: -2.4442131519317627
    4. 'k' → logprob: -3.1942131519317627
    5. '(H' → logprob: -3.6942131519317627
    6. 'mod' → logprob: -3.8192131519317627
    7. ' ' → logprob: -4.444212913513184
    8. '3' → logprob: -4.819212913513184
    9. ' (' → logprob: -4.819212913513184
    10. '10' → logprob: -4.819212913513184

Token 1263: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1061139777302742
    2. '2' → logprob: -2.356113910675049
    3. ' (' → logprob: -6.106113910675049
    4. 'mod' → logprob: -7.356113910675049
    5. '`' → logprob: -7.606113910675049
    6. '(
' → logprob: -7.606113910675049
    7. 'pow' → logprob: -7.731113910675049
    8. ' of' → logprob: -8.106114387512207
    9. 'of' → logprob: -8.356114387512207
    10. '```' → logprob: -8.481114387512207

Token 1264: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006826493190601468
    2. 'mod' → logprob: -7.875682830810547
    3. '10' → logprob: -9.000682830810547
    4. ' ' → logprob: -9.125682830810547
    5. '(' → logprob: -9.875682830810547
    6. ' two' → logprob: -12.500682830810547
    7. 'two' → logprob: -12.500682830810547
    8. '3' → logprob: -12.875682830810547
    9. '```' → logprob: -13.375682830810547
    10. 'pow' → logprob: -13.500682830810547

Token 1265: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013279760023579001
    2. 'mod' → logprob: -6.751327991485596
    3. '(' → logprob: -9.626327514648438
    4. '10' → logprob: -9.626327514648438
    5. ' ' → logprob: -11.251327514648438
    6. '```' → logprob: -12.876327514648438
    7. '3' → logprob: -13.126327514648438
    8. '``' → logprob: -13.501327514648438
    9. 'pow' → logprob: -13.501327514648438
    10. '(mod' → logprob: -13.501327514648438

Token 1266: ' ' (ID: 5310)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.48258593678474426
    2. '```' → logprob: -2.732585906982422
    3. '[' → logprob: -2.982585906982422
    4. '[i' → logprob: -3.107585906982422
    5. ',' → logprob: -3.482585906982422
    6. '   ' → logprob: -3.607585906982422
    7. '[k' → logprob: -3.732585906982422
    8. '       ' → logprob: -4.232585906982422
    9. ' **' → logprob: -4.357585906982422
    10. '`' → logprob: -4.482585906982422

Token 1267: ':
' (ID: 734)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3585394024848938
    2. '[' → logprob: -2.608539342880249
    3. ' (' → logprob: -3.108539342880249
    4. ')' → logprob: -3.358539342880249
    5. '(' → logprob: -3.608539342880249
    6. ' **' → logprob: -4.358539581298828
    7. '[k' → logprob: -4.483539581298828
    8. ',' → logprob: -4.483539581298828
    9. '```' → logprob: -4.483539581298828
    10. '(
' → logprob: -4.858539581298828

Token 1268: '           ' (ID: 352)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10507858544588089
    2. 'pow' → logprob: -3.35507869720459
    3. ' ' → logprob: -4.10507869720459
    4. ' new' → logprob: -4.35507869720459
    5. '```' → logprob: -4.85507869720459
    6. '   ' → logprob: -4.98007869720459
    7. ' pow' → logprob: -4.98007869720459
    8. 'new' → logprob: -5.60507869720459
    9. '`' → logprob: -6.10507869720459
    10. '**' → logprob: -6.10507869720459

Token 1269: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6691666841506958
    2. '2' → logprob: -1.5441666841506958
    3. 'new' → logprob: -1.5441666841506958
    4. 'pow' → logprob: -3.0441665649414062
    5. ' pow' → logprob: -5.544166564941406
    6. ' ' → logprob: -5.919166564941406
    7. '(' → logprob: -6.169166564941406
    8. '   ' → logprob: -6.544166564941406
    9. ' =' → logprob: -6.919166564941406
    10. '=' → logprob: -7.044166564941406

Token 1270: ' l' (ID: 305)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.18059243261814117
    2. ' new' → logprob: -1.93059241771698
    3. 'pow' → logprob: -4.1805925369262695
    4. '2' → logprob: -6.0555925369262695
    5. 'for' → logprob: -6.8055925369262695
    6. '   ' → logprob: -7.9305925369262695
    7. ' for' → logprob: -8.68059253692627
    8. '           ' → logprob: -8.93059253692627
    9. '=' → logprob: -9.18059253692627
    10. ' pow' → logprob: -9.30559253692627

Token 1271: ''ex' (ID: 23472)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19762203097343445
    2. 'pow' → logprob: -2.447622060775757
    3. '**' → logprob: -2.822622060775757
    4. ' pow' → logprob: -4.697621822357178
    5. '(' → logprob: -5.072621822357178
    6. ' **' → logprob: -5.322621822357178
    7. ' ' → logprob: -6.072621822357178
    8. '(pow' → logprob: -6.322621822357178
    9. '`' → logprob: -6.822621822357178
    10. '```' → logprob: -7.072621822357178

Token 1272: 'pos' (ID: 1103)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.044684458523988724
    2. 'ponent' → logprob: -4.044684410095215
    3. '```' → logprob: -4.794684410095215
    4. 'pow' → logprob: -4.919684410095215
    5. '**' → logprob: -5.169684410095215
    6. '2' → logprob: -5.919684410095215
    7. 'po' → logprob: -8.044684410095215
    8. '(' → logprob: -8.294684410095215
    9. 'pon' → logprob: -8.294684410095215
    10. '``' → logprob: -8.294684410095215

Token 1273: 'ant' (ID: 493)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1606857180595398
    2. '2' → logprob: -3.1606857776641846
    3. 'k' → logprob: -3.9106857776641846
    4. '**' → logprob: -4.1606855392456055
    5. '(i' → logprob: -4.2856855392456055
    6. 'o' → logprob: -4.4106855392456055
    7. '(' → logprob: -4.9106855392456055
    8. '`' → logprob: -4.9106855392456055
    9. '```' → logprob: -4.9106855392456055
    10. '[i' → logprob: -5.1606855392456055

Token 1274: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3524932563304901
    2. '=' → logprob: -1.2274932861328125
    3. '=k' → logprob: -6.1024932861328125
    4. '2' → logprob: -6.9774932861328125
    5. ' ' → logprob: -8.602493286132812
    6. '=i' → logprob: -8.727493286132812
    7. 'pow' → logprob: -9.602493286132812
    8. 'k' → logprob: -9.727493286132812
    9. ' +=' → logprob: -9.852493286132812
    10. 'i' → logprob: -10.477493286132812

Token 1275: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14668594300746918
    2. ' to' → logprob: -2.771685838699341
    3. '=k' → logprob: -3.271685838699341
    4. ' à' → logprob: -4.14668607711792
    5. 'to' → logprob: -4.77168607711792
    6. ' =' → logprob: -5.02168607711792
    7. '=len' → logprob: -7.14668607711792
    8. '2' → logprob: -7.14668607711792
    9. '=i' → logprob: -7.77168607711792
    10. '=max' → logprob: -8.146685600280762

Token 1276: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.19281552731990814
    2. '(k' → logprob: -2.3178155422210693
    3. 'dp' → logprob: -2.9428155422210693
    4. '(n' → logprob: -5.31781530380249
    5. 'new' → logprob: -5.56781530380249
    6. '2' → logprob: -5.81781530380249
    7. 'i' → logprob: -5.94281530380249
    8. '(i' → logprob: -5.94281530380249
    9. '(dp' → logprob: -6.44281530380249
    10. 'n' → logprob: -6.56781530380249

Token 1277: ' différence' (ID: 79196)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09991351515054703
    2. '(k' → logprob: -2.5999135971069336
    3. 'H' → logprob: -4.849913597106934
    4. 'i' → logprob: -5.224913597106934
    5. '(i' → logprob: -5.974913597106934
    6. '(H' → logprob: -6.724913597106934
    7. 'dp' → logprob: -6.849913597106934
    8. 'abs' → logprob: -6.974913597106934
    9. 'new' → logprob: -7.349913597106934
    10. '(n' → logprob: -8.599913597106934

Token 1278: ' H' (ID: 487)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8820912837982178
    2. '(k' → logprob: -1.0070912837982178
    3. 'k' → logprob: -2.0070912837982178
    4. '[k' → logprob: -3.2570912837982178
    5. '(' → logprob: -4.007091522216797
    6. ' (' → logprob: -4.257091522216797
    7. 'abs' → logprob: -6.132091522216797
    8. ' k' → logprob: -6.507091522216797
    9. '**' → logprob: -6.632091522216797
    10. '(i' → logprob: -6.632091522216797

Token 1279: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.6384584903717041
    2. '[i' → logprob: -0.7634584903717041
    3. '[' → logprob: -5.388458251953125
    4. 'i' → logprob: -7.638458251953125
    5. '```' → logprob: -8.763458251953125
    6. 'k' → logprob: -9.013458251953125
    7. ']' → logprob: -9.138458251953125
    8. '(k' → logprob: -9.888458251953125
    9. 'H' → logprob: -10.013458251953125
    10. '[j' → logprob: -10.013458251953125

Token 1280: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.17697423696517944
    2. '[k' → logprob: -2.176974296569824
    3. ']' → logprob: -3.301974296569824
    4. 'i' → logprob: -4.926974296569824
    5. '[' → logprob: -6.176974296569824
    6. 'k' → logprob: -7.176974296569824
    7. ']-' → logprob: -7.176974296569824
    8. '][' → logprob: -7.926974296569824
    9. '[j' → logprob: -8.676974296569824
    10. '[-' → logprob: -9.176974296569824

Token 1281: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.031166430562734604
    2. '-' → logprob: -4.5311665534973145
    3. '[' → logprob: -4.5311665534973145
    4. ' -' → logprob: -5.0311665534973145
    5. '[k' → logprob: -6.6561665534973145
    6. '```' → logprob: -8.031166076660156
    7. ']' → logprob: -8.531166076660156
    8. '[j' → logprob: -8.656166076660156
    9. '   ' → logprob: -9.406166076660156
    10. '-H' → logprob: -9.531166076660156

Token 1282: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0001801801408873871
    2. ' H' → logprob: -8.6251802444458
    3. '`' → logprob: -16.250179290771484
    4. 'k' → logprob: -16.375179290771484
    5. '```' → logprob: -16.625179290771484
    6. '1' → logprob: -17.000179290771484
    7. ' ' → logprob: -17.000179290771484
    8. '	H' → logprob: -17.125179290771484
    9. '   ' → logprob: -17.250179290771484
    10. '...' → logprob: -17.250179290771484

Token 1283: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5935118794441223
    2. 'i' → logprob: -1.2185118198394775
    3. '[k' → logprob: -2.4685118198394775
    4. 'k' → logprob: -2.7185118198394775
    5. '[' → logprob: -7.593512058258057
    6. '```' → logprob: -8.343511581420898
    7. 'H' → logprob: -8.843511581420898
    8. '`' → logprob: -9.093511581420898
    9. ' i' → logprob: -9.593511581420898
    10. ']' → logprob: -10.343511581420898

Token 1284: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05006885528564453
    2. ']
' → logprob: -3.9250688552856445
    3. '])' → logprob: -3.9250688552856445
    4. '])
' → logprob: -5.8000688552856445
    5. ']+' → logprob: -6.4250688552856445
    6. ')' → logprob: -7.1750688552856445
    7. '           ' → logprob: -7.5500688552856445
    8. ']))
' → logprob: -7.6750688552856445
    9. ']:
' → logprob: -7.6750688552856445
    10. ')]' → logprob: -7.9250688552856445

Token 1285: ' ' (ID: 5310)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.648859977722168
    2. ' **' → logprob: -1.648859977722168
    3. ' *' → logprob: -2.023859977722168
    4. 'new' → logprob: -3.023859977722168
    5. '   ' → logprob: -3.523859977722168
    6. ' new' → logprob: -3.898859977722168
    7. '```' → logprob: -4.273859977722168
    8. '2' → logprob: -4.898859977722168
    9. '*' → logprob: -5.023859977722168
    10. '           ' → logprob: -5.148859977722168

Token 1286: ';' (ID: 26)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3797920048236847
    2. ' **' → logprob: -1.3797919750213623
    3. '   ' → logprob: -4.004792213439941
    4. '           ' → logprob: -4.629792213439941
    5. '
' → logprob: -5.254792213439941
    6. ' *' → logprob: -5.254792213439941
    7. '       ' → logprob: -5.379792213439941
    8. '2' → logprob: -5.629792213439941
    9. '```' → logprob: -5.629792213439941
    10. ')' → logprob: -6.379792213439941

Token 1287: ' la' (ID: 557)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.20463642477989197
    2. ' new' → logprob: -1.7046364545822144
    3. '           ' → logprob: -6.079636573791504
    4. '```' → logprob: -7.829636573791504
    5. '**' → logprob: -8.954636573791504
    6. '2' → logprob: -9.204636573791504
    7. '               ' → logprob: -9.704636573791504
    8. '                   ' → logprob: -9.954636573791504
    9. '
' → logprob: -10.579636573791504
    10. '(new' → logprob: -10.829636573791504

Token 1288: ' multiplication' (ID: 86340)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.05856600031256676
    2. ' new' → logprob: -2.933566093444824
    3. '**' → logprob: -6.308566093444824
    4. ')' → logprob: -7.683566093444824
    5. 'pow' → logprob: -7.683566093444824
    6. '2' → logprob: -8.058566093444824
    7. '
' → logprob: -8.683566093444824
    8. ')new' → logprob: -9.308566093444824
    9. ']' → logprob: -9.558566093444824
    10. 'for' → logprob: -9.683566093444824

Token 1289: ' se' (ID: 458)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.9731833934783936
    2. '**' → logprob: -1.5981833934783936
    3. ' new' → logprob: -2.4731833934783936
    4. '=' → logprob: -2.9731833934783936
    5. 'new' → logprob: -2.9731833934783936
    6. '*=' → logprob: -2.9731833934783936
    7. ' **' → logprob: -3.0981833934783936
    8. ' <<=' → logprob: -3.5981833934783936
    9. ' =' → logprob: -3.8481833934783936
    10. '   ' → logprob: -4.098183631896973

Token 1290: ' fait' (ID: 7473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18471771478652954
    2. ' =' → logprob: -2.0597176551818848
    3. '**' → logprob: -3.9347176551818848
    4. '*=' → logprob: -4.434717655181885
    5. ' *=' → logprob: -6.684717655181885
    6. ' **' → logprob: -6.934717655181885
    7. '+=' → logprob: -7.059717655181885
    8. 'pow' → logprob: -7.059717655181885
    9. ' +=' → logprob: -7.559717655181885
    10. 'p' → logprob: -7.809717655181885

Token 1291: ' modulo' (ID: 112372)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -1.141771912574768
    2. '*' → logprob: -1.516771912574768
    3. ' *=' → logprob: -2.2667717933654785
    4. '%=' → logprob: -2.3917717933654785
    5. '%' → logprob: -2.6417717933654785
    6. 'mod' → logprob: -2.7667717933654785
    7. ' %=' → logprob: -2.8917717933654785
    8. ' <<=' → logprob: -3.3917717933654785
    9. ' mod' → logprob: -4.3917717933654785
    10. ' *' → logprob: -4.8917717933654785

Token 1292: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.014686733484268188
    2. ' mod' → logprob: -4.389686584472656
    3. '(mod' → logprob: -6.139686584472656
    4. ' (' → logprob: -11.264686584472656
    5. '(' → logprob: -12.514686584472656
    6. '	mod' → logprob: -14.139686584472656
    7. '
' → logprob: -14.514686584472656
    8. ' ' → logprob: -15.389686584472656
    9. 'MOD' → logprob: -15.389686584472656
    10. '```' → logprob: -15.389686584472656

Token 1293: '
' (ID: 198)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3452344834804535
    2. '[new' → logprob: -2.7202343940734863
    3. ' new' → logprob: -3.2202343940734863
    4. ' %' → logprob: -3.2202343940734863
    5. '
' → logprob: -3.4702343940734863
    6. '%' → logprob: -3.8452343940734863
    7. ' =' → logprob: -3.9702343940734863
    8. ' *' → logprob: -4.095234394073486
    9. '(new' → logprob: -4.220234394073486
    10. '=' → logprob: -4.970234394073486

Token 1294: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6605043411254883
    2. 'new' → logprob: -0.7855043411254883
    3. ' new' → logprob: -3.7855043411254883
    4. '[new' → logprob: -6.285504341125488
    5. '```' → logprob: -6.910504341125488
    6. '               ' → logprob: -7.410504341125488
    7. '*' → logprob: -8.160504341125488
    8. '(new' → logprob: -8.160504341125488
    9. '%' → logprob: -8.785504341125488
    10. '       ' → logprob: -9.160504341125488

Token 1295: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.10328258574008942
    2. ' new' → logprob: -2.3532826900482178
    3. '           ' → logprob: -5.853282451629639
    4. 'dp' → logprob: -8.728282928466797
    5. '(new' → logprob: -11.478282928466797
    6. '               ' → logprob: -11.978282928466797
    7. '```' → logprob: -11.978282928466797
    8. '       ' → logprob: -12.103282928466797
    9. ' dp' → logprob: -12.103282928466797
    10. '                   ' → logprob: -13.853282928466797

Token 1296: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -8.77627644513268e-06
    2. 'dp' → logprob: -11.875008583068848
    3. '	dp' → logprob: -15.000008583068848
    4. '[_' → logprob: -15.500008583068848
    5. '_dt' → logprob: -15.625008583068848
    6. '_dc' → logprob: -15.875008583068848
    7. '
' → logprob: -16.125009536743164
    8. '[' → logprob: -16.125009536743164
    9. '\' → logprob: -16.500009536743164
    10. '_df' → logprob: -16.625009536743164

Token 1297: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.2378600735682994e-05
    2. '[' → logprob: -10.500032424926758
    3. '=' → logprob: -12.875032424926758
    4. 'i' → logprob: -15.000032424926758
    5. '```' → logprob: -15.000032424926758
    6. '[I' → logprob: -15.125032424926758
    7. '[
' → logprob: -15.375032424926758
    8. ' =' → logprob: -15.625032424926758
    9. ' [' → logprob: -15.750032424926758
    10. '
' → logprob: -15.750032424926758

Token 1298: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08948484063148499
    2. ' =' → logprob: -2.464484930038452
    3. ']' → logprob: -8.089485168457031
    4. '=(' → logprob: -8.839485168457031
    5. '+=' → logprob: -10.339485168457031
    6. ']=' → logprob: -10.839485168457031
    7. '*=' → logprob: -11.714485168457031
    8. '   ' → logprob: -11.839485168457031
    9. ' =(' → logprob: -12.214485168457031
    10. ')' → logprob: -12.464485168457031

Token 1299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0018135826103389263
    2. ' =' → logprob: -6.3768134117126465
    3. '+=' → logprob: -9.751813888549805
    4. '=(' → logprob: -9.876813888549805
    5. '   ' → logprob: -14.126813888549805
    6. '%=' → logprob: -14.751813888549805
    7. '=((' → logprob: -15.501813888549805
    8. ' +=' → logprob: -15.626813888549805
    9. '*=' → logprob: -16.001813888549805
    10. ' =(' → logprob: -16.376813888549805

Token 1300: ' dp' (ID: 21546)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.588568925857544
    2. 'dp' → logprob: -0.838568925857544
    3. ' dp' → logprob: -4.463568687438965
    4. ' (' → logprob: -6.963568687438965
    5. '(d' → logprob: -10.213568687438965
    6. '(' → logprob: -10.838568687438965
    7. '	dp' → logprob: -11.338568687438965
    8. '   ' → logprob: -12.463568687438965
    9. '((' → logprob: -12.838568687438965
    10. '_dp' → logprob: -14.088568687438965

Token 1301: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00027730545843951404
    2. '[' → logprob: -8.375277519226074
    3. 'i' → logprob: -10.875277519226074
    4. '[
' → logprob: -11.250277519226074
    5. '```' → logprob: -12.500277519226074
    6. 'multip' → logprob: -13.250277519226074
    7. '(i' → logprob: -13.500277519226074
    8. ' [' → logprob: -13.625277519226074
    9. '[k' → logprob: -13.625277519226074
    10. '[I' → logprob: -13.625277519226074

Token 1302: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6327531337738037
    2. ' *' → logprob: -0.7577531337738037
    3. '*(' → logprob: -9.007753372192383
    4. '   ' → logprob: -11.382753372192383
    5. '(' → logprob: -12.507753372192383
    6. ' ' → logprob: -12.757753372192383
    7. '
' → logprob: -13.632753372192383
    8. '           ' → logprob: -13.757753372192383
    9. ' ' → logprob: -13.757753372192383
    10. '    ' → logprob: -14.007753372192383

Token 1303: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6331847310066223
    2. ' *' → logprob: -0.7581847310066223
    3. '*(' → logprob: -7.883184909820557
    4. '           ' → logprob: -9.508184432983398
    5. '(' → logprob: -10.258184432983398
    6. '   ' → logprob: -10.258184432983398
    7. '               ' → logprob: -11.383184432983398
    8. '       ' → logprob: -11.758184432983398
    9. ' (' → logprob: -12.008184432983398
    10. '          ' → logprob: -12.258184432983398

Token 1304: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4553321301937103
    2. '2' → logprob: -1.2053321599960327
    3. 'pow' → logprob: -2.830332040786743
    4. '(pow' → logprob: -5.080332279205322
    5. '((' → logprob: -7.080332279205322
    6. ' (' → logprob: -10.080331802368164
    7. '(
' → logprob: -10.455331802368164
    8. '(p' → logprob: -11.205331802368164
    9. '   ' → logprob: -12.330331802368164
    10. ' pow' → logprob: -12.455331802368164

Token 1305: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5520309805870056
    2. '2' → logprob: -1.1770310401916504
    3. 'pow' → logprob: -2.5520310401916504
    4. '(pow' → logprob: -3.3020310401916504
    5. '((' → logprob: -6.80203104019165
    6. '(m' → logprob: -10.302030563354492
    7. '(p' → logprob: -10.427030563354492
    8. ' (' → logprob: -10.552030563354492
    9. '(
' → logprob: -11.302030563354492
    10. 'mul' → logprob: -11.677030563354492

Token 1306: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.713478684425354
    2. '*' → logprob: -0.963478684425354
    3. '%' → logprob: -2.3384785652160645
    4. ' %' → logprob: -3.5884785652160645
    5. '*(' → logprob: -6.3384785652160645
    6. '   ' → logprob: -7.3384785652160645
    7. 'pow' → logprob: -7.5884785652160645
    8. '(' → logprob: -7.8384785652160645
    9. '           ' → logprob: -8.338479042053223
    10. ')' → logprob: -8.463479042053223

Token 1307: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -4.60414821645827e-06
    2. ' pow' → logprob: -13.000004768371582
    3. '(pow' → logprob: -13.000004768371582
    4. 'power' → logprob: -18.125003814697266
    5. '   ' → logprob: -20.250003814697266
    6. '(' → logprob: -20.875003814697266
    7. '_pow' → logprob: -21.250003814697266
    8. 'powers' → logprob: -21.375003814697266
    9. '.pow' → logprob: -21.625003814697266
    10. 'pw' → logprob: -22.000003814697266

Token 1308: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011050889268517494
    2. '2' → logprob: -4.511050701141357
    3. ' (' → logprob: -13.511051177978516
    4. '(
' → logprob: -13.761051177978516
    5. '```' → logprob: -14.636051177978516
    6. ' ' → logprob: -16.011051177978516
    7. '(
' → logprob: -17.136051177978516
    8. ',' → logprob: -17.761051177978516
    9. '  ' → logprob: -17.886051177978516
    10. 'two' → logprob: -18.136051177978516

Token 1309: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -12.500003814697266
    3. ' ' → logprob: -16.125003814697266
    4. '```' → logprob: -17.125003814697266
    5. '
' → logprob: -17.500003814697266
    6. '   ' → logprob: -18.375003814697266
    7. 'mod' → logprob: -18.500003814697266
    8. ',' → logprob: -18.875003814697266
    9. '10' → logprob: -19.750003814697266
    10. '           ' → logprob: -19.875003814697266

Token 1310: ',' (ID: 11)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.13410194218158722
    2. '[' → logprob: -2.2591018676757812
    3. ',' → logprob: -5.009101867675781
    4. '[(' → logprob: -5.259101867675781
    5. ' (' → logprob: -5.259101867675781
    6. '((' → logprob: -6.384101867675781
    7. '(' → logprob: -7.009101867675781
    8. 'H' → logprob: -7.134101867675781
    9. ')' → logprob: -8.259101867675781
    10. ',H' → logprob: -8.759101867675781

Token 1311: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.5759782791137695
    2. 'H' → logprob: -0.8259782791137695
    3. ' (' → logprob: -11.07597827911377
    4. ' H' → logprob: -11.57597827911377
    5. '(' → logprob: -12.07597827911377
    6. '((' → logprob: -12.07597827911377
    7. '	H' → logprob: -14.57597827911377
    8. '   ' → logprob: -14.95097827911377
    9. '(
' → logprob: -15.32597827911377
    10. '_H' → logprob: -15.45097827911377

Token 1312: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.0339031834737398e-05
    2. '[' → logprob: -11.375020027160645
    3. '[i' → logprob: -12.000020027160645
    4. 'k' → logprob: -13.375020027160645
    5. '[
' → logprob: -15.000020027160645
    6. '(k' → logprob: -15.250020027160645
    7. 'H' → logprob: -15.625020027160645
    8. '```' → logprob: -15.875020027160645
    9. '[j' → logprob: -16.50002098083496
    10. '{k' → logprob: -16.75002098083496

Token 1313: ']' (ID: 60)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.47554370760917664
    2. '[i' → logprob: -0.975543737411499
    3. 'k' → logprob: -7.35054349899292
    4. ']' → logprob: -7.97554349899292
    5. 'i' → logprob: -8.225543975830078
    6. '[' → logprob: -8.850543975830078
    7. '[
' → logprob: -10.475543975830078
    8. '-k' → logprob: -11.600543975830078
    9. '```' → logprob: -11.850543975830078
    10. '][' → logprob: -12.100543975830078

Token 1314: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6493191123008728
    2. '[i' → logprob: -0.7743191123008728
    3. ' -' → logprob: -4.899319171905518
    4. '[' → logprob: -5.024319171905518
    5. '```' → logprob: -6.649319171905518
    6. '[-' → logprob: -7.524319171905518
    7. '[
' → logprob: -8.02431869506836
    8. '-i' → logprob: -8.89931869506836
    9. '-
' → logprob: -9.39931869506836
    10. '``' → logprob: -10.27431869506836

Token 1315: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.696889623621246e-06
    2. 'i' → logprob: -13.50000286102295
    3. ' H' → logprob: -14.25000286102295
    4. '[i' → logprob: -14.62500286102295
    5. '[' → logprob: -17.875001907348633
    6. '```' → logprob: -18.375001907348633
    7. '   ' → logprob: -18.500001907348633
    8. '	H' → logprob: -20.375001907348633
    9. 'Hi' → logprob: -21.125001907348633
    10. '(i' → logprob: -21.375001907348633

Token 1316: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008160584256984293
    2. 'i' → logprob: -7.1258158683776855
    3. '[' → logprob: -12.250816345214844
    4. '```' → logprob: -12.250816345214844
    5. '[
' → logprob: -14.250816345214844
    6. ']' → logprob: -14.625816345214844
    7. ' i' → logprob: -15.125816345214844
    8. '[j' → logprob: -15.375816345214844
    9. '(i' → logprob: -15.625816345214844
    10. '][' → logprob: -16.000816345214844

Token 1317: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04945739358663559
    2. ')' → logprob: -3.049457311630249
    3. ' ,' → logprob: -7.549457550048828
    4. '])' → logprob: -8.549457550048828
    5. ']' → logprob: -10.299457550048828
    6. '),' → logprob: -10.549457550048828
    7. '))' → logprob: -11.049457550048828
    8. '[i' → logprob: -11.674457550048828
    9. '],' → logprob: -11.799457550048828
    10. ')])' → logprob: -11.799457550048828

Token 1318: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -16.0
    3. '	mod' → logprob: -20.75
    4. '(mod' → logprob: -23.125
    5. 'MOD' → logprob: -23.875
    6. '   ' → logprob: -24.0
    7. '_mod' → logprob: -24.5
    8. '
' → logprob: -24.75
    9. '           ' → logprob: -24.875
    10. ' мод' → logprob: -24.875

Token 1319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6330869197845459
    2. ',' → logprob: -0.7580869197845459
    3. ')%' → logprob: -7.758087158203125
    4. '   ' → logprob: -10.633087158203125
    5. '%' → logprob: -11.633087158203125
    6. ')
' → logprob: -12.258087158203125
    7. ' ,' → logprob: -12.508087158203125
    8. ' )' → logprob: -12.633087158203125
    9. ',
' → logprob: -12.883087158203125
    10. '       ' → logprob: -13.008087158203125

Token 1320: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1735595166683197
    2. ' %' → logprob: -1.923559546470642
    3. ')' → logprob: -4.548559665679932
    4. ')%' → logprob: -6.048559665679932
    5. '%n' → logprob: -8.923559188842773
    6. ']%' → logprob: -10.048559188842773
    7. '```' → logprob: -10.423559188842773
    8. '<|end|>' → logprob: -11.048559188842773
    9. '%A' → logprob: -11.423559188842773
    10. ']' → logprob: -11.548559188842773

Token 1321: ' #' (ID: 1069)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.08258357644081116
    2. ' %' → logprob: -2.5825836658477783
    3. ')' → logprob: -6.457583427429199
    4. '       ' → logprob: -7.457583427429199
    5. '
' → logprob: -7.707583427429199
    6. ')%' → logprob: -8.0825834274292
    7. '```' → logprob: -8.3325834274292
    8. '%n' → logprob: -8.9575834274292
    9. ']' → logprob: -9.5825834274292
    10. '   ' → logprob: -9.9575834274292

Token 1322: ' Sinon' (ID: 154924)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5447596907615662
    2. 'new' → logprob: -0.9197596907615662
    3. '       ' → logprob: -4.419759750366211
    4. ' else' → logprob: -5.919759750366211
    5. '   ' → logprob: -6.294759750366211
    6. ' new' → logprob: -6.669759750366211
    7. 'continue' → logprob: -6.919759750366211
    8. 'elif' → logprob: -7.169759750366211
    9. '```' → logprob: -7.294759750366211
    10. '           ' → logprob: -7.544759750366211

Token 1323: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13738861680030823
    2. 'else' → logprob: -2.8873887062072754
    3. '           ' → logprob: -3.0123887062072754
    4. '       ' → logprob: -4.387388706207275
    5. ':
' → logprob: -5.137388706207275
    6. 'new' → logprob: -6.137388706207275
    7. ' else' → logprob: -6.887388706207275
    8. 'continue' → logprob: -7.637388706207275
    9. 'elif' → logprob: -8.012388229370117
    10. ' :' → logprob: -8.137388229370117

Token 1324: ' si' (ID: 1784)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2411360889673233
    2. ' new' → logprob: -1.991136074066162
    3. '           ' → logprob: -2.991136074066162
    4. '       ' → logprob: -3.866136074066162
    5. 'pass' → logprob: -5.491136074066162
    6. 'continue' → logprob: -7.491136074066162
    7. ' pass' → logprob: -7.616136074066162
    8. '```' → logprob: -7.741136074066162
    9. 'else' → logprob: -8.11613655090332
    10. ' continue' → logprob: -8.86613655090332

Token 1325: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.22280913591384888
    2. 'new' → logprob: -2.597809076309204
    3. ' H' → logprob: -2.722809076309204
    4. ' new' → logprob: -3.472809076309204
    5. 'dp' → logprob: -4.347809314727783
    6. 'False' → logprob: -5.222809314727783
    7. 'not' → logprob: -6.222809314727783
    8. 'i' → logprob: -6.347809314727783
    9. 'k' → logprob: -6.472809314727783
    10. ' i' → logprob: -6.597809314727783

Token 1326: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0025383250322192907
    2. '[k' → logprob: -6.002538204193115
    3. '```' → logprob: -10.377538681030273
    4. '[' → logprob: -11.252538681030273
    5. 'i' → logprob: -11.752538681030273
    6. '[j' → logprob: -12.627538681030273
    7. ']' → logprob: -13.627538681030273
    8. '   ' → logprob: -13.627538681030273
    9. 'k' → logprob: -14.002538681030273
    10. 'else' → logprob: -14.002538681030273

Token 1327: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.019887201488018036
    2. ']' → logprob: -4.0198869705200195
    3. '[' → logprob: -6.7698869705200195
    4. '```' → logprob: -8.26988697052002
    5. '   ' → logprob: -9.39488697052002
    6. ']>' → logprob: -9.89488697052002
    7. '[j' → logprob: -10.01988697052002
    8. 'i' → logprob: -10.26988697052002
    9. '[k' → logprob: -10.39488697052002
    10. '>' → logprob: -11.01988697052002

Token 1328: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5236093997955322
    2. '1' → logprob: -0.8986093997955322
    3. ']' → logprob: -8.398609161376953
    4. ' i' → logprob: -8.648609161376953
    5. '0' → logprob: -10.148609161376953
    6. ' ' → logprob: -10.773609161376953
    7. 'k' → logprob: -11.898609161376953
    8. '-' → logprob: -12.648609161376953
    9. '(i' → logprob: -12.648609161376953
    10. '[i' → logprob: -13.148609161376953

Token 1329: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1440027356147766
    2. '1' → logprob: -2.019002676010132
    3. ']' → logprob: -6.769002914428711
    4. ' i' → logprob: -9.519002914428711
    5. '-' → logprob: -10.144002914428711
    6. '0' → logprob: -11.144002914428711
    7. '```' → logprob: -11.269002914428711
    8. '(i' → logprob: -11.519002914428711
    9. 'I' → logprob: -12.519002914428711
    10. ''i' → logprob: -12.519002914428711

Token 1330: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017841432243585587
    2. '[i' → logprob: -4.392841339111328
    3. ']>' → logprob: -5.392841339111328
    4. '>' → logprob: -8.392841339111328
    5. ']<' → logprob: -8.642841339111328
    6. '```' → logprob: -9.517841339111328
    7. ']:
' → logprob: -9.642841339111328
    8. '][' → logprob: -9.892841339111328
    9. '[' → logprob: -10.392841339111328
    10. ']
' → logprob: -11.017841339111328

Token 1331: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3689262270927429
    2. '<' → logprob: -2.2439262866973877
    3. ' <' → logprob: -2.4939262866973877
    4. ' >' → logprob: -2.8689262866973877
    5. ']' → logprob: -3.8689262866973877
    6. '[i' → logprob: -3.9939262866973877
    7. '<=' → logprob: -4.868926048278809
    8. '<i' → logprob: -4.868926048278809
    9. ' <=' → logprob: -5.118926048278809
    10. '```' → logprob: -7.618926048278809

Token 1332: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0004309076175559312
    2. ' H' → logprob: -7.750431060791016
    3. '   ' → logprob: -17.125431060791016
    4. '```' → logprob: -17.375431060791016
    5. '	H' → logprob: -17.500431060791016
    6. '_H' → logprob: -17.750431060791016
    7. '[' → logprob: -17.875431060791016
    8. '>' → logprob: -18.125431060791016
    9. 'i' → logprob: -18.500431060791016
    10. ' ' → logprob: -18.500431060791016

Token 1333: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.747814349073451e-05
    2. 'i' → logprob: -11.125017166137695
    3. '[' → logprob: -13.375017166137695
    4. '```' → logprob: -14.750017166137695
    5. '[k' → logprob: -15.125017166137695
    6. '(i' → logprob: -16.375017166137695
    7. '>' → logprob: -16.500017166137695
    8. ']' → logprob: -16.625017166137695
    9. '[
' → logprob: -16.625017166137695
    10. '   ' → logprob: -17.125017166137695

Token 1334: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5072557330131531
    2. ']:
' → logprob: -1.0072557926177979
    3. '[i' → logprob: -3.757255792617798
    4. ']:' → logprob: -5.007255554199219
    5. '):
' → logprob: -6.757255554199219
    6. '```' → logprob: -7.632255554199219
    7. ':
' → logprob: -8.882255554199219
    8. ']):
' → logprob: -9.007255554199219
    9. '   ' → logprob: -9.132255554199219
    10. '[k' → logprob: -9.257255554199219

Token 1335: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.42545756697654724
    2. ':' → logprob: -1.5504575967788696
    3. 'and' → logprob: -2.67545747756958
    4. '           ' → logprob: -3.67545747756958
    5. '       ' → logprob: -4.05045747756958
    6. ':
' → logprob: -4.30045747756958
    7. '```' → logprob: -4.92545747756958
    8. '   ' → logprob: -7.30045747756958
    9. '=' → logprob: -8.425457954406738
    10. ' :' → logprob: -8.800457954406738

Token 1336: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3893461227416992
    2. ':' → logprob: -1.7643461227416992
    3. ' elif' → logprob: -2.639346122741699
    4. '       ' → logprob: -3.389346122741699
    5. 'else' → logprob: -3.514346122741699
    6. ' else' → logprob: -5.139346122741699
    7. ':
' → logprob: -5.764346122741699
    8. ' and' → logprob: -6.264346122741699
    9. '           ' → logprob: -6.389346122741699
    10. '   ' → logprob: -6.889346122741699

Token 1337: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.061983149498701096
    2. ' H' → logprob: -2.811983108520508
    3. '(H' → logprob: -12.061983108520508
    4. '   ' → logprob: -12.436983108520508
    5. ' ' → logprob: -12.936983108520508
    6. '	H' → logprob: -13.311983108520508
    7. ' ' → logprob: -14.061983108520508
    8. '  ' → logprob: -15.061983108520508
    9. 'k' → logprob: -16.061983108520508
    10. ' (' → logprob: -16.436983108520508

Token 1338: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.1994775377388578e-05
    2. 'k' → logprob: -11.750012397766113
    3. '```' → logprob: -13.250012397766113
    4. '[' → logprob: -13.625012397766113
    5. '[
' → logprob: -14.750012397766113
    6. '(k' → logprob: -15.250012397766113
    7. '[i' → logprob: -16.000011444091797
    8. '#' → logprob: -16.125011444091797
    9. '``' → logprob: -17.500011444091797
    10. '`' → logprob: -17.875011444091797

Token 1339: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.78105628490448
    2. '-' → logprob: -0.90605628490448
    3. '[i' → logprob: -2.7810564041137695
    4. ' -' → logprob: -3.0310564041137695
    5. '[' → logprob: -4.4060564041137695
    6. '   ' → logprob: -5.4060564041137695
    7. '[k' → logprob: -5.4060564041137695
    8. '[-' → logprob: -5.7810564041137695
    9. '][' → logprob: -7.4060564041137695
    10. '```' → logprob: -7.6560564041137695

Token 1340: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.504040356958285e-05
    2. ' ' → logprob: -10.250064849853516
    3. '0' → logprob: -10.750064849853516
    4. 'i' → logprob: -13.562564849853516
    5. '2' → logprob: -13.687564849853516
    6. '```' → logprob: -13.687564849853516
    7. '-' → logprob: -13.750064849853516
    8. ']' → logprob: -14.125064849853516
    9. '   ' → logprob: -14.187564849853516
    10. 'k' → logprob: -15.375064849853516

Token 1341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.927930654550437e-05
    2. '0' → logprob: -11.125029563903809
    3. ' ' → logprob: -12.125029563903809
    4. '2' → logprob: -12.625029563903809
    5. 'k' → logprob: -13.125029563903809
    6. '```' → logprob: -13.750029563903809
    7. 'i' → logprob: -14.062529563903809
    8. '
' → logprob: -14.875029563903809
    9. '-' → logprob: -14.937529563903809
    10. '   ' → logprob: -15.812529563903809

Token 1342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010022972710430622
    2. ']>' → logprob: -5.38502311706543
    3. '>' → logprob: -5.63502311706543
    4. ' >' → logprob: -6.51002311706543
    5. ' ]' → logprob: -8.13502311706543
    6. '[' → logprob: -11.51002311706543
    7. '   ' → logprob: -12.13502311706543
    8. '[i' → logprob: -12.38502311706543
    9. '```' → logprob: -12.88502311706543
    10. '#' → logprob: -13.26002311706543

Token 1343: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06996166706085205
    2. ' >' → logprob: -2.6949615478515625
    3. '<' → logprob: -12.444961547851562
    4. '[' → logprob: -12.444961547851562
    5. '>
' → logprob: -12.569961547851562
    6. ' ' → logprob: -13.069961547851562
    7. '   ' → logprob: -13.069961547851562
    8. ' <' → logprob: -13.319961547851562
    9. '#' → logprob: -13.444961547851562
    10. ']' → logprob: -13.569961547851562

Token 1344: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0040793512016534805
    2. ' H' → logprob: -5.504079341888428
    3. '[' → logprob: -15.254079818725586
    4. '	H' → logprob: -15.379079818725586
    5. '>' → logprob: -16.129079818725586
    6. '   ' → logprob: -16.254079818725586
    7. ' ' → logprob: -16.504079818725586
    8. '<H' → logprob: -16.879079818725586
    9. '#' → logprob: -17.254079818725586
    10. '(H' → logprob: -17.754079818725586

Token 1345: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.029809964820742607
    2. 'k' → logprob: -3.5298099517822266
    3. '[' → logprob: -10.279809951782227
    4. 'H' → logprob: -10.779809951782227
    5. '   ' → logprob: -13.529809951782227
    6. '(k' → logprob: -14.154809951782227
    7. '```' → logprob: -14.279809951782227
    8. '[i' → logprob: -14.904809951782227
    9. ' k' → logprob: -15.279809951782227
    10. '	k' → logprob: -15.404809951782227

Token 1346: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13188238441944122
    2. ':' → logprob: -2.756882429122925
    3. ']:
' → logprob: -3.006882429122925
    4. '           ' → logprob: -5.006882190704346
    5. '       ' → logprob: -6.381882190704346
    6. '):
' → logprob: -7.131882190704346
    7. ']:' → logprob: -7.381882190704346
    8. ']' → logprob: -8.381882667541504
    9. ' and' → logprob: -8.631882667541504
    10. 'and' → logprob: -9.131882667541504

Token 1347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19141210615634918
    2. ':' → logprob: -1.941412091255188
    3. ':
' → logprob: -4.191411972045898
    4. 'new' → logprob: -5.316411972045898
    5. '```' → logprob: -5.566411972045898
    6. ' new' → logprob: -5.941411972045898
    7. '               ' → logprob: -6.191411972045898
    8. '       ' → logprob: -6.816411972045898
    9. '[new' → logprob: -8.191411972045898
    10. ' :' → logprob: -8.941411972045898

Token 1348: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5186871886253357
    2. ' new' → logprob: -1.5186872482299805
    3. '           ' → logprob: -1.7686872482299805
    4. '               ' → logprob: -4.7686872482299805
    5. '       ' → logprob: -6.0186872482299805
    6. '```' → logprob: -6.0186872482299805
    7. 'continue' → logprob: -7.8936872482299805
    8. 'for' → logprob: -7.8936872482299805
    9. 'if' → logprob: -8.26868724822998
    10. '   ' → logprob: -8.76868724822998

Token 1349: ' On' (ID: 2160)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.02796563319861889
    2. ' new' → logprob: -3.652965545654297
    3. '           ' → logprob: -6.777965545654297
    4. 'for' → logprob: -8.027965545654297
    5. '       ' → logprob: -9.777965545654297
    6. 'if' → logprob: -10.027965545654297
    7. '```' → logprob: -10.527965545654297
    8. 'dp' → logprob: -10.902965545654297
    9. 'continue' → logprob: -10.902965545654297
    10. ' for' → logprob: -11.027965545654297

Token 1350: ' ajoute' (ID: 91611)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.11690457165241241
    2. 'for' → logprob: -2.6169044971466064
    3. ' new' → logprob: -3.9919044971466064
    4. '[new' → logprob: -4.9919047355651855
    5. '=' → logprob: -5.7419047355651855
    6. 'continue' → logprob: -5.7419047355651855
    7. ' for' → logprob: -6.2419047355651855
    8. '+=' → logprob: -6.2419047355651855
    9. '       ' → logprob: -8.241904258728027
    10. '```' → logprob: -8.366904258728027

Token 1351: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.534436047077179
    2. 'new' → logprob: -0.909436047077179
    3. ' new' → logprob: -5.284436225891113
    4. '(dp' → logprob: -5.909436225891113
    5. ' dp' → logprob: -6.159436225891113
    6. '(' → logprob: -7.159436225891113
    7. '(new' → logprob: -7.784436225891113
    8. ' (' → logprob: -9.409436225891113
    9. '   ' → logprob: -11.034436225891113
    10. 'mod' → logprob: -11.909436225891113

Token 1352: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00801730528473854
    2. '[k' → logprob: -4.883017539978027
    3. 'i' → logprob: -8.258017539978027
    4. '[' → logprob: -9.633017539978027
    5. 'k' → logprob: -9.633017539978027
    6. 'new' → logprob: -11.883017539978027
    7. '[new' → logprob: -12.133017539978027
    8. ' [' → logprob: -13.133017539978027
    9. '[j' → logprob: -13.633017539978027
    10. '```' → logprob: -13.633017539978027

Token 1353: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.046239495277404785
    2. ')' → logprob: -3.5462393760681152
    3. 'new' → logprob: -5.171239376068115
    4. '*' → logprob: -6.046239376068115
    5. ']*' → logprob: -6.171239376068115
    6. '[i' → logprob: -6.421239376068115
    7. '[new' → logprob: -6.671239376068115
    8. ' *' → logprob: -7.046239376068115
    9. '           ' → logprob: -7.796239376068115
    10. ' new' → logprob: -8.046239852905273

Token 1354: ' et' (ID: 859)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4995597302913666
    2. '*' → logprob: -0.999559760093689
    3. ' +' → logprob: -5.1245598793029785
    4. '+' → logprob: -5.2495598793029785
    5. 'new' → logprob: -5.3745598793029785
    6. ' new' → logprob: -6.2495598793029785
    7. '   ' → logprob: -6.2495598793029785
    8. ')' → logprob: -6.8745598793029785
    9. '           ' → logprob: -6.8745598793029785
    10. ' +=' → logprob: -6.8745598793029785

Token 1355: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17611365020275116
    2. 'new' → logprob: -2.4261136054992676
    3. ' dp' → logprob: -2.9261136054992676
    4. ' new' → logprob: -4.051113605499268
    5. '(dp' → logprob: -6.426113605499268
    6. ' (' → logprob: -8.801114082336426
    7. '(' → logprob: -9.301114082336426
    8. '   ' → logprob: -9.926114082336426
    9. 'pow' → logprob: -10.176114082336426
    10. '(new' → logprob: -10.301114082336426

Token 1356: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0006597769097425044
    2. '[i' → logprob: -7.625659942626953
    3. 'k' → logprob: -8.750659942626953
    4. '```' → logprob: -12.125659942626953
    5. '[' → logprob: -13.125659942626953
    6. '[
' → logprob: -13.250659942626953
    7. '   ' → logprob: -14.375659942626953
    8. ' [' → logprob: -14.750659942626953
    9. '[n' → logprob: -14.875659942626953
    10. '
' → logprob: -14.875659942626953

Token 1357: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006809803890064359
    2. '])' → logprob: -7.750680923461914
    3. ']*' → logprob: -8.875680923461914
    4. '],' → logprob: -10.000680923461914
    5. '[i' → logprob: -11.500680923461914
    6. ']+' → logprob: -11.750680923461914
    7. ']%' → logprob: -11.750680923461914
    8. '];' → logprob: -12.000680923461914
    9. ' ]' → logprob: -12.500680923461914
    10. '']' → logprob: -12.500680923461914

Token 1358: ' résultat' (ID: 62556)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4378584921360016
    2. 'new' → logprob: -1.1878584623336792
    3. '           ' → logprob: -4.062858581542969
    4. 'dp' → logprob: -4.562858581542969
    5. ' dp' → logprob: -4.687858581542969
    6. '*' → logprob: -5.312858581542969
    7. ')' → logprob: -6.312858581542969
    8. '               ' → logprob: -6.562858581542969
    9. ' *' → logprob: -6.687858581542969
    10. '                   ' → logprob: -6.812858581542969

Token 1359: ' stock' (ID: 6546)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.8265437483787537
    2. '%' → logprob: -1.4515438079833984
    3. ' %' → logprob: -2.3265438079833984
    4. '%=' → logprob: -2.4515438079833984
    5. ')' → logprob: -2.5765438079833984
    6. ' new' → logprob: -4.201543807983398
    7. ' =' → logprob: -4.326543807983398
    8. 'new' → logprob: -4.576543807983398
    9. '[new' → logprob: -4.826543807983398
    10. '=' → logprob: -4.826543807983398

Token 1360: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.037309158593416214
    2. '=' → logprob: -3.787309169769287
    3. '[i' → logprob: -5.537309169769287
    4. 'dans' → logprob: -6.412309169769287
    5. 'new' → logprob: -6.537309169769287
    6. '[new' → logprob: -6.787309169769287
    7. 'ée' → logprob: -6.912309169769287
    8. 'e' → logprob: -7.037309169769287
    9. 'ed' → logprob: -7.162309169769287
    10. '[' → logprob: -7.412309169769287

Token 1361: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8690744638442993
    2. '=' → logprob: -1.3690744638442993
    3. ' new' → logprob: -1.3690744638442993
    4. 'new' → logprob: -3.2440743446350098
    5. ' +=' → logprob: -4.74407434463501
    6. ' à' → logprob: -5.24407434463501
    7. '+=' → logprob: -5.24407434463501
    8. ' in' → logprob: -5.74407434463501
    9. '[i' → logprob: -5.74407434463501
    10. '[new' → logprob: -6.49407434463501

Token 1362: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.11564543098211288
    2. ' new' → logprob: -2.240645408630371
    3. 'dp' → logprob: -6.865645408630371
    4. '(new' → logprob: -6.865645408630371
    5. ' (' → logprob: -8.115645408630371
    6. 'mod' → logprob: -8.740645408630371
    7. '[new' → logprob: -9.740645408630371
    8. '```' → logprob: -9.990645408630371
    9. ' dp' → logprob: -10.490645408630371
    10. '`' → logprob: -10.990645408630371

Token 1363: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0005538671393878758
    2. 'dp' → logprob: -7.500554084777832
    3. '```' → logprob: -15.250554084777832
    4. 'DP' → logprob: -15.750554084777832
    5. '	dp' → logprob: -15.875554084777832
    6. '_dt' → logprob: -16.125553131103516
    7. 'new' → logprob: -16.375553131103516
    8. 'Dp' → logprob: -17.000553131103516
    9. '`' → logprob: -17.375553131103516
    10. 'p' → logprob: -17.625553131103516

Token 1364: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00595202948898077
    2. '[k' → logprob: -5.130951881408691
    3. '```' → logprob: -11.630951881408691
    4. '[' → logprob: -12.130951881408691
    5. '[new' → logprob: -12.130951881408691
    6. '   ' → logprob: -13.380951881408691
    7. ' [' → logprob: -14.130951881408691
    8. '[j' → logprob: -14.880951881408691
    9. 'i' → logprob: -15.505951881408691
    10. 'new' → logprob: -15.505951881408691

Token 1365: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006325720809400082
    2. '[i' → logprob: -5.131325721740723
    3. ']
' → logprob: -8.756325721740723
    4. '           ' → logprob: -10.256325721740723
    5. ']=' → logprob: -10.256325721740723
    6. ' ]' → logprob: -10.381325721740723
    7. 'new' → logprob: -10.506325721740723
    8. '       ' → logprob: -10.756325721740723
    9. '   ' → logprob: -11.256325721740723
    10. ']+' → logprob: -11.256325721740723

Token 1366: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.926096498966217
    2. '=' → logprob: -1.5510964393615723
    3. '           ' → logprob: -1.8010964393615723
    4. ' new' → logprob: -1.8010964393615723
    5. 'new' → logprob: -3.4260964393615723
    6. ' +=' → logprob: -4.426096439361572
    7. '[new' → logprob: -4.801096439361572
    8. '```' → logprob: -5.676096439361572
    9. '               ' → logprob: -6.301096439361572
    10. '=new' → logprob: -6.801096439361572

Token 1367: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.1014399304986
    2. 'new' (adapté à ' new') → logprob: -2.476439952850342
    3. '=' → logprob: -4.601439952850342
    4. ' =' → logprob: -6.351439952850342
    5. '           ' → logprob: -8.226439476013184
    6. '               ' → logprob: -9.601439476013184
    7. '```' → logprob: -9.601439476013184
    8. '=new' → logprob: -9.976439476013184
    9. ' +=' → logprob: -10.101439476013184
    10. '+=' → logprob: -10.476439476013184

Token 1368: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -3.128163257315464e-07
    2. '_dt' → logprob: -16.875
    3. '_dc' → logprob: -17.75
    4. '_d' → logprob: -18.0
    5. '_' → logprob: -18.25
    6. '_df' → logprob: -18.375
    7. '_ds' → logprob: -18.5
    8. '_cp' → logprob: -18.75
    9. '_lp' → logprob: -18.75
    10. '_DP' → logprob: -18.75

Token 1369: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.37500286102295
    3. '```' → logprob: -14.00000286102295
    4. '[I' → logprob: -15.75000286102295
    5. 'i' → logprob: -16.250003814697266
    6. '
' → logprob: -16.500003814697266
    7. '[j' → logprob: -16.750003814697266
    8. '][' → logprob: -17.000003814697266
    9. ' [' → logprob: -17.125003814697266
    10. '\[' → logprob: -17.125003814697266

Token 1370: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16134461760520935
    2. '[i' → logprob: -1.9113446474075317
    3. ']=' → logprob: -7.286344528198242
    4. '[' → logprob: -8.536344528198242
    5. 'i' → logprob: -8.911344528198242
    6. '=' → logprob: -9.786344528198242
    7. ']+=' → logprob: -10.536344528198242
    8. '][' → logprob: -11.411344528198242
    9. ' ]' → logprob: -12.911344528198242
    10. '(i' → logprob: -13.661344528198242

Token 1371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018524127081036568
    2. ' =' → logprob: -4.018524169921875
    3. '+=' → logprob: -8.018524169921875
    4. ' +=' → logprob: -10.018524169921875
    5. '=i' → logprob: -16.143524169921875
    6. '[i' → logprob: -16.268524169921875
    7. '＝' → logprob: -17.393524169921875
    8. '+' → logprob: -17.768524169921875
    9. '[' → logprob: -17.768524169921875
    10. '=k' → logprob: -18.018524169921875

Token 1372: ' dp' (ID: 21546)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.42932993173599243
    2. 'dp' → logprob: -1.0543298721313477
    3. ' (' → logprob: -8.054329872131348
    4. ' dp' → logprob: -8.179329872131348
    5. '	dp' → logprob: -11.804329872131348
    6. '(' → logprob: -11.929329872131348
    7. '(d' → logprob: -11.929329872131348
    8. '   ' → logprob: -13.054329872131348
    9. '_dp' → logprob: -13.929329872131348
    10. '.dp' → logprob: -14.304329872131348

Token 1373: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.123899558791891e-05
    2. 'i' → logprob: -10.25007152557373
    3. '[k' → logprob: -10.87507152557373
    4. '[' → logprob: -11.25007152557373
    5. '```' → logprob: -14.12507152557373
    6. '[I' → logprob: -14.25007152557373
    7. '(i' → logprob: -14.50007152557373
    8. '[j' → logprob: -15.12507152557373
    9. '[
' → logprob: -15.12507152557373
    10. '+i' → logprob: -15.25007152557373

Token 1374: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408822178840637
    2. ' +' → logprob: -0.974088191986084
    3. ']' → logprob: -12.099088668823242
    4. ']+' → logprob: -12.349088668823242
    5. ')' → logprob: -14.849088668823242
    6. '+
' → logprob: -15.099088668823242
    7. ' ' → logprob: -15.724088668823242
    8. ' +
' → logprob: -16.224088668823242
    9. ')+' → logprob: -16.224088668823242
    10. '+k' → logprob: -16.349088668823242

Token 1375: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193825364112854
    2. ' +' → logprob: -1.5019382238388062
    3. '+
' → logprob: -12.376937866210938
    4. '%' → logprob: -13.501937866210938
    5. '   ' → logprob: -14.376937866210938
    6. '*' → logprob: -14.501937866210938
    7. ' +
' → logprob: -14.626937866210938
    8. '       ' → logprob: -14.876937866210938
    9. '+k' → logprob: -15.001937866210938
    10. '           ' → logprob: -15.626937866210938

Token 1376: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.5491004129871726e-05
    2. ' dp' → logprob: -10.000045776367188
    3. '	dp' → logprob: -17.500045776367188
    4. '_dp' → logprob: -19.750045776367188
    5. 'd' → logprob: -20.000045776367188
    6. '(dp' → logprob: -20.125045776367188
    7. 'dpi' → logprob: -21.625045776367188
    8. '.dp' → logprob: -21.750045776367188
    9. 'new' → logprob: -22.375045776367188
    10. 'dt' → logprob: -23.000045776367188

Token 1377: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.127333340875339e-06
    2. 'k' → logprob: -12.500003814697266
    3. '[' → logprob: -15.500003814697266
    4. '(k' → logprob: -16.625003814697266
    5. ' k' → logprob: -18.375003814697266
    6. '[
' → logprob: -18.750003814697266
    7. '{k' → logprob: -18.750003814697266
    8. '```' → logprob: -19.125003814697266
    9. '	k' → logprob: -19.250003814697266
    10. '[i' → logprob: -20.750003814697266

Token 1378: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013586864806711674
    2. '<|end|>' → logprob: -7.251358509063721
    3. ')' → logprob: -8.376358985900879
    4. '[i' → logprob: -8.626358985900879
    5. '       ' → logprob: -9.626358985900879
    6. ']%' → logprob: -10.126358985900879
    7. ']
' → logprob: -10.251358985900879
    8. '   ' → logprob: -10.501358985900879
    9. ' ]' → logprob: -10.626358985900879
    10. '<|end|>' → logprob: -11.001358985900879

Token 1379: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1205456554889679
    2. ' %' → logprob: -2.2455456256866455
    3. '           ' → logprob: -6.245545864105225
    4. '```' → logprob: -6.370545864105225
    5. '[new' → logprob: -7.120545864105225
    6. ')' → logprob: -7.245545864105225
    7. '       ' → logprob: -7.495545864105225
    8. '%n' → logprob: -7.495545864105225
    9. ' new' → logprob: -8.245545387268066
    10. 'new' → logprob: -8.370545387268066

Token 1380: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7019364833831787
    2. '%' → logprob: -0.8269364833831787
    3. 'else' → logprob: -3.3269364833831787
    4. ' %' → logprob: -4.201936721801758
    5. ' else' → logprob: -4.576936721801758
    6. '           ' → logprob: -5.576936721801758
    7. ')' → logprob: -7.326936721801758
    8. '   ' → logprob: -8.076936721801758
    9. 'new' → logprob: -8.576936721801758
    10. '               ' → logprob: -9.076936721801758

Token 1381: ' Sinon' (ID: 154924)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0012220130302011967
    2. '       ' → logprob: -7.001222133636475
    3. ' else' → logprob: -8.376221656799316
    4. '   ' → logprob: -9.751221656799316
    5. 'new' → logprob: -11.251221656799316
    6. 'elif' → logprob: -11.876221656799316
    7. 'continue' → logprob: -13.626221656799316
    8. '	else' → logprob: -14.626221656799316
    9. '           ' → logprob: -15.876221656799316
    10. '```' → logprob: -16.001222610473633

Token 1382: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24941220879554749
    2. 'else' → logprob: -2.4994122982025146
    3. ':
' → logprob: -2.7494122982025146
    4. 'new' → logprob: -3.4994122982025146
    5. '           ' → logprob: -3.6244122982025146
    6. '       ' → logprob: -4.2494120597839355
    7. '```' → logprob: -6.6244120597839355
    8. ':new' → logprob: -6.8744120597839355
    9. 'continue' → logprob: -7.2494120597839355
    10. '[new' → logprob: -8.874412536621094

Token 1383: 't' (ID: 83)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.41855818033218384
    2. ':' → logprob: -1.793558120727539
    3. 'else' → logprob: -2.543558120727539
    4. ':
' → logprob: -2.793558120727539
    5. ' new' → logprob: -4.418558120727539
    6. '   ' → logprob: -4.668558120727539
    7. '```' → logprob: -5.418558120727539
    8. '           ' → logprob: -5.918558120727539
    9. '[new' → logprob: -6.043558120727539
    10. '       ' → logprob: -6.418558120727539

Token 1384: 'outes' (ID: 8983)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09943194687366486
    2. 'ype' → logprob: -3.2244319915771484
    3. 'r' → logprob: -3.8494319915771484
    4. '```' → logprob: -4.974431991577148
    5. ' else' → logprob: -5.474431991577148
    6. 'p' → logprob: -5.724431991577148
    7. 'h' → logprob: -5.724431991577148
    8. 'rès' → logprob: -5.849431991577148
    9. 'rans' → logprob: -5.974431991577148
    10. 'elif' → logprob: -6.724431991577148

Token 1385: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25121328234672546
    2. ')' → logprob: -2.501213312149048
    3. ':' → logprob: -2.751213312149048
    4. '```' → logprob: -3.376213312149048
    5. '[' → logprob: -4.751213073730469
    6. '=' → logprob: -5.001213073730469
    7. ']' → logprob: -5.251213073730469
    8. 'es' → logprob: -6.376213073730469
    9. '_right' → logprob: -6.376213073730469
    10. '_rest' → logprob: -6.376213073730469

Token 1386: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.2258654236793518
    2. '```' → logprob: -2.850865364074707
    3. 'i' → logprob: -3.350865364074707
    4. ' autres' → logprob: -3.725865364074707
    5. ':' → logprob: -4.100865364074707
    6. 'else' → logprob: -4.100865364074707
    7. 'fois' → logprob: -4.350865364074707
    8. ''autres' → logprob: -5.100865364074707
    9. 'cases' → logprob: -5.225865364074707
    10. ' ' → logprob: -5.350865364074707

Token 1387: ' situations' (ID: 19527)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012468562461435795
    2. '):' → logprob: -5.512468338012695
    3. ')' → logprob: -5.637468338012695
    4. 'fois' → logprob: -7.137468338012695
    5. ' conditions' → logprob: -7.137468338012695
    6. '```' → logprob: -7.762468338012695
    7. 'conditions' → logprob: -7.887468338012695
    8. ' :' → logprob: -8.137468338012695
    9. 'cases' → logprob: -8.262468338012695
    10. 'i' → logprob: -8.387468338012695

Token 1388: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029850337654352188
    2. ':
' → logprob: -3.5298502445220947
    3. 'else' → logprob: -10.154850006103516
    4. '           ' → logprob: -10.904850006103516
    5. '       ' → logprob: -11.529850006103516
    6. '[i' → logprob: -11.529850006103516
    7. ':
' → logprob: -12.279850006103516
    8. '):
' → logprob: -12.654850006103516
    9. '   ' → logprob: -13.029850006103516
    10. '[' → logprob: -13.154850006103516

Token 1389: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9586431384086609
    2. '           ' → logprob: -1.7086431980133057
    3. '```' → logprob: -1.9586431980133057
    4. 'else' → logprob: -2.2086431980133057
    5. ':
' → logprob: -2.5836431980133057
    6. '       ' → logprob: -2.9586431980133057
    7. 'new' → logprob: -3.0836431980133057
    8. '[new' → logprob: -5.458642959594727
    9. ' else' → logprob: -5.958642959594727
    10. ':new' → logprob: -6.333642959594727

Token 1390: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0065608336590230465
    2. ' else' → logprob: -5.506560802459717
    3. '       ' → logprob: -6.006560802459717
    4. ':' → logprob: -11.506561279296875
    5. '[' → logprob: -13.256561279296875
    6. ':
' → logprob: -13.631561279296875
    7. '_else' → logprob: -13.756561279296875
    8. 'elif' → logprob: -13.881561279296875
    9. '```' → logprob: -14.506561279296875
    10. '	else' → logprob: -15.131561279296875

Token 1391: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.086494579911232
    2. ':
' → logprob: -2.5864946842193604
    3. '           ' → logprob: -4.961494445800781
    4. '       ' → logprob: -8.336494445800781
    5. '[' → logprob: -8.461494445800781
    6. '[new' → logprob: -10.336494445800781
    7. 'new' → logprob: -10.586494445800781
    8. ':
' → logprob: -11.211494445800781
    9. ':new' → logprob: -11.461494445800781
    10. '```' → logprob: -11.586494445800781

Token 1392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.604594886302948
    2. 'new' → logprob: -0.854594886302948
    3. ' new' → logprob: -3.6045949459075928
    4. '```' → logprob: -6.979594707489014
    5. '               ' → logprob: -9.854595184326172
    6. '[new' → logprob: -10.479595184326172
    7. 'continue' → logprob: -11.604595184326172
    8. '	new' → logprob: -11.979595184326172
    9. '``' → logprob: -11.979595184326172
    10. '       ' → logprob: -12.729595184326172

Token 1393: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.007642952259629965
    2. ' new' → logprob: -4.88264274597168
    3. '   ' → logprob: -11.38264274597168
    4. 'continue' → logprob: -11.38264274597168
    5. '           ' → logprob: -12.13264274597168
    6. 'pass' → logprob: -12.25764274597168
    7. '       ' → logprob: -13.13264274597168
    8. '```' → logprob: -13.88264274597168
    9. ' continue' → logprob: -15.25764274597168
    10. 'dp' → logprob: -15.25764274597168

Token 1394: ' On' (ID: 2160)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0004610551695805043
    2. ' new' → logprob: -7.750461101531982
    3. 'continue' → logprob: -11.000460624694824
    4. 'pass' → logprob: -11.375460624694824
    5. '   ' → logprob: -14.000460624694824
    6. '           ' → logprob: -14.250460624694824
    7. '```' → logprob: -14.625460624694824
    8. '       ' → logprob: -15.250460624694824
    9. '	new' → logprob: -17.12546157836914
    10. ' continue' → logprob: -17.50046157836914

Token 1395: ' addition' (ID: 5856)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.011937100440263748
    2. '[new' → logprob: -4.511937141418457
    3. ' new' → logprob: -7.886937141418457
    4. '[i' → logprob: -8.511937141418457
    5. 'continue' → logprob: -8.511937141418457
    6. '_new' → logprob: -9.386937141418457
    7. '```' → logprob: -11.011937141418457
    8. '[' → logprob: -12.636937141418457
    9. 'contin' → logprob: -13.011937141418457
    10. '[ind' → logprob: -14.011937141418457

Token 1396: 'ne' (ID: 611)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2937397062778473
    2. '           ' → logprob: -2.1687397956848145
    3. 'ner' → logprob: -2.9187397956848145
    4. 'ne' → logprob: -2.9187397956848145
    5. 'n' → logprob: -4.0437397956848145
    6. ' new' → logprob: -5.4187397956848145
    7. 'nal' → logprob: -5.9187397956848145
    8. 'er' → logprob: -6.0437397956848145
    9. '   ' → logprob: -6.4187397956848145
    10. '[new' → logprob: -7.6687397956848145

Token 1397: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1022430956363678
    2. 'new' → logprob: -2.352243185043335
    3. ' dp' → logprob: -6.727242946624756
    4. ' new' → logprob: -7.227242946624756
    5. '(dp' → logprob: -9.352243423461914
    6. '   ' → logprob: -11.227243423461914
    7. '	dp' → logprob: -12.727243423461914
    8. '```' → logprob: -12.852243423461914
    9. '(new' → logprob: -13.727243423461914
    10. '_dp' → logprob: -13.852243423461914

Token 1398: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006797884125262499
    2. '[k' → logprob: -7.500679969787598
    3. '[' → logprob: -9.375679969787598
    4. 'i' → logprob: -11.250679969787598
    5. '[new' → logprob: -11.625679969787598
    6. 'new' → logprob: -11.750679969787598
    7. '```' → logprob: -12.375679969787598
    8. 'k' → logprob: -12.875679969787598
    9. '[j' → logprob: -13.500679969787598
    10. '[I' → logprob: -14.500679969787598

Token 1399: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2845515310764313
    2. ']' → logprob: -1.4095515012741089
    3. ']+' → logprob: -6.659551620483398
    4. '][' → logprob: -7.284551620483398
    5. '+' → logprob: -7.534551620483398
    6. '[' → logprob: -8.159551620483398
    7. '           ' → logprob: -8.159551620483398
    8. ' +' → logprob: -9.284551620483398
    9. '```' → logprob: -9.284551620483398
    10. '   ' → logprob: -10.034551620483398

Token 1400: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7075409889221191
    2. '[i' → logprob: -1.0825409889221191
    3. ' +' → logprob: -2.082540988922119
    4. 'new' → logprob: -3.582540988922119
    5. '           ' → logprob: -4.707540988922119
    6. ' new' → logprob: -5.832540988922119
    7. '```' → logprob: -6.457540988922119
    8. '+i' → logprob: -7.582540988922119
    9. '[new' → logprob: -7.582540988922119
    10. '       ' → logprob: -8.207540512084961

Token 1401: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005195511621423066
    2. ' dp' → logprob: -7.750519752502441
    3. 'new' → logprob: -9.500519752502441
    4. '0' → logprob: -11.750519752502441
    5. '1' → logprob: -12.375519752502441
    6. ' new' → logprob: -14.750519752502441
    7. '   ' → logprob: -15.125519752502441
    8. '(dp' → logprob: -15.125519752502441
    9. '	dp' → logprob: -15.125519752502441
    10. '```' → logprob: -15.500519752502441

Token 1402: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0006492906250059605
    2. 'k' → logprob: -7.750649452209473
    3. '[i' → logprob: -8.625649452209473
    4. '[' → logprob: -11.375649452209473
    5. '```' → logprob: -11.625649452209473
    6. '[
' → logprob: -12.750649452209473
    7. '
' → logprob: -13.000649452209473
    8. '(k' → logprob: -13.000649452209473
    9. '   ' → logprob: -13.125649452209473
    10. 'new' → logprob: -13.375649452209473

Token 1403: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0766567811369896
    2. '[i' → logprob: -2.8266568183898926
    3. '[k' → logprob: -4.326656818389893
    4. '])' → logprob: -7.826656818389893
    5. '           ' → logprob: -8.201656341552734
    6. '][' → logprob: -8.701656341552734
    7. ']
' → logprob: -8.951656341552734
    8. ']+' → logprob: -9.201656341552734
    9. '```' → logprob: -9.201656341552734
    10. ']*' → logprob: -10.076656341552734

Token 1404: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.125018119812012
    3. 'k' → logprob: -13.500018119812012
    4. ']' → logprob: -14.000018119812012
    5. '```' → logprob: -15.250018119812012
    6. 'i' → logprob: -15.500018119812012
    7. '   ' → logprob: -16.250017166137695
    8. '`' → logprob: -16.375017166137695
    9. '１' → logprob: -17.500017166137695
    10. ')' → logprob: -18.312517166137695

Token 1405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. ']' → logprob: -12.25001049041748
    3. 'i' → logprob: -12.87501049041748
    4. ' ' → logprob: -13.12501049041748
    5. 'k' → logprob: -14.75001049041748
    6. '```' → logprob: -14.93751049041748
    7. '１' → logprob: -16.562511444091797
    8. '`' → logprob: -16.687511444091797
    9. '   ' → logprob: -16.937511444091797
    10. '۱' → logprob: -17.187511444091797

Token 1406: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.051861733198165894
    2. '[i' → logprob: -3.0518617630004883
    3. ']
' → logprob: -5.801861763000488
    4. '])' → logprob: -9.051861763000488
    5. ']+' → logprob: -10.426861763000488
    6. '```' → logprob: -10.801861763000488
    7. ']
' → logprob: -10.926861763000488
    8. '   ' → logprob: -11.801861763000488
    9. '           ' → logprob: -11.801861763000488
    10. ')' → logprob: -11.926861763000488

Token 1407: ' puis' (ID: 18766)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.09696721285581589
    2. 'new' → logprob: -2.4719672203063965
    3. '           ' → logprob: -4.8469672203063965
    4. '```' → logprob: -9.096966743469238
    5. '               ' → logprob: -11.846966743469238
    6. 'dp' → logprob: -12.346966743469238
    7. ' dp' → logprob: -12.346966743469238
    8. '            ' → logprob: -12.846966743469238
    9. '                   ' → logprob: -13.096966743469238
    10. '``' → logprob: -13.096966743469238

Token 1408: ' multipl' (ID: 44269)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6120324730873108
    2. ' new' → logprob: -0.9870324730873108
    3. 'dp' → logprob: -3.112032413482666
    4. ' dp' → logprob: -3.487032413482666
    5. ')' → logprob: -5.362032413482666
    6. 'mod' → logprob: -6.237032413482666
    7. '=' → logprob: -7.362032413482666
    8. '(dp' → logprob: -7.487032413482666
    9. '```' → logprob: -8.112032890319824
    10. '%' → logprob: -8.237032890319824

Token 1409: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.2957230508327484
    2. 'new' → logprob: -2.6707229614257812
    3. ' new' → logprob: -3.0457229614257812
    4. 'ule' → logprob: -3.5457229614257812
    5. 'iez' → logprob: -3.5457229614257812
    6. 'iple' → logprob: -4.295722961425781
    7. 'ipl' → logprob: -4.545722961425781
    8. '   ' → logprob: -5.170722961425781
    9. ']' → logprob: -5.295722961425781
    10. '_new' → logprob: -5.295722961425781

Token 1410: ' par' (ID: 686)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.13809846341609955
    2. 'par' → logprob: -2.1380984783172607
    3. ' par' → logprob: -5.638098239898682
    4. ' new' → logprob: -5.763098239898682
    5. '(new' → logprob: -6.013098239898682
    6. '```' → logprob: -7.263098239898682
    7. '_new' → logprob: -8.38809871673584
    8. '   ' → logprob: -8.51309871673584
    9. '=' → logprob: -8.63809871673584
    10. 'by' → logprob: -8.76309871673584

Token 1411: ' une' (ID: 2463)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00533099751919508
    2. ' ' → logprob: -5.380331039428711
    3. 'pow' → logprob: -7.505331039428711
    4. '```' → logprob: -9.755331039428711
    5. '1' → logprob: -10.380331039428711
    6. 'mod' → logprob: -10.630331039428711
    7. ' pow' → logprob: -11.005331039428711
    8. '(' → logprob: -11.880331039428711
    9. 'dp' → logprob: -12.380331039428711
    10. '`' → logprob: -13.005331039428711

Token 1412: ' puissance' (ID: 63494)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.050695352256298065
    2. ' ' → logprob: -3.6756954193115234
    3. 'pow' → logprob: -3.8006954193115234
    4. ' pow' → logprob: -6.925695419311523
    5. '(' → logprob: -8.550695419311523
    6. ')' → logprob: -8.675695419311523
    7. '1' → logprob: -8.800695419311523
    8. 'mod' → logprob: -9.300695419311523
    9. ' (' → logprob: -10.675695419311523
    10. '```' → logprob: -10.800695419311523

Token 1413: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.044766075909137726
    2. '_' → logprob: -4.044765949249268
    3. 'of' → logprob: -4.544765949249268
    4. '_new' → logprob: -4.919765949249268
    5. 'new' → logprob: -5.294765949249268
    6. '_of' → logprob: -6.044765949249268
    7. '```' → logprob: -8.794766426086426
    8. '_de' → logprob: -9.294766426086426
    9. '(new' → logprob: -9.419766426086426
    10. '`' → logprob: -9.544766426086426

Token 1414: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.167648876318708e-05
    2. ' ' → logprob: -10.125041961669922
    3. '(' → logprob: -14.750041961669922
    4. 'pow' → logprob: -14.750041961669922
    5. 'new' → logprob: -15.250041961669922
    6. '```' → logprob: -15.250041961669922
    7. 'two' → logprob: -15.875041961669922
    8. '`' → logprob: -17.125041961669922
    9. '   ' → logprob: -17.125041961669922
    10. ' two' → logprob: -17.125041961669922

Token 1415: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001097417771234177
    2. 'new' → logprob: -9.500109672546387
    3. ' ' → logprob: -10.625109672546387
    4. '(' → logprob: -12.250109672546387
    5. '```' → logprob: -12.625109672546387
    6. '`' → logprob: -14.000109672546387
    7. ' new' → logprob: -14.500109672546387
    8. 'pow' → logprob: -15.375109672546387
    9. '   ' → logprob: -15.625109672546387
    10. '``' → logprob: -15.750109672546387

Token 1416: ' ' (ID: 5310)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9784268140792847
    2. '[i' → logprob: -0.9784268140792847
    3. '(new' → logprob: -2.478426933288574
    4. '[new' → logprob: -2.603426933288574
    5. '   ' → logprob: -3.978426933288574
    6. '(i' → logprob: -4.103426933288574
    7. '(' → logprob: -4.228426933288574
    8. '[' → logprob: -4.478426933288574
    9. '```' → logprob: -4.853426933288574
    10. ' new' → logprob: -5.103426933288574

Token 1417: ':
' (ID: 734)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1747501641511917
    2. 'new' → logprob: -2.1747500896453857
    3. '           ' → logprob: -3.6747500896453857
    4. '   ' → logprob: -5.299750328063965
    5. ' new' → logprob: -5.299750328063965
    6. '[new' → logprob: -5.299750328063965
    7. '```' → logprob: -5.799750328063965
    8. '       ' → logprob: -6.924750328063965
    9. '[' → logprob: -7.049750328063965
    10. '               ' → logprob: -7.924750328063965

Token 1418: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4857654273509979
    2. 'new' → logprob: -0.9857654571533203
    3. '   ' → logprob: -5.23576545715332
    4. '```' → logprob: -6.36076545715332
    5. 'pow' → logprob: -6.48576545715332
    6. '       ' → logprob: -7.23576545715332
    7. '           ' → logprob: -7.48576545715332
    8. '(' → logprob: -7.86076545715332
    9. '2' → logprob: -7.98576545715332
    10. ' (' → logprob: -8.23576545715332

Token 1419: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5883204340934753
    2. 'new' → logprob: -0.8383204340934753
    3. 'pow' → logprob: -4.463320255279541
    4. ' pow' → logprob: -8.2133207321167
    5. '2' → logprob: -8.5883207321167
    6. '(' → logprob: -9.4633207321167
    7. ' (' → logprob: -9.5883207321167
    8. '```' → logprob: -9.8383207321167
    9. '(new' → logprob: -10.0883207321167
    10. '   ' → logprob: -10.2133207321167

Token 1420: ' Ex' (ID: 1771)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06207535043358803
    2. ' new' → logprob: -2.81207537651062
    3. '(new' → logprob: -9.6870756149292
    4. '```' → logprob: -10.5620756149292
    5. '           ' → logprob: -11.5620756149292
    6. 'pow' → logprob: -12.5620756149292
    7. '   ' → logprob: -12.8120756149292
    8. '(' → logprob: -13.8120756149292
    9. ')new' → logprob: -14.0620756149292
    10. '``' → logprob: -14.5620756149292

Token 1421: 'pos' (ID: 1103)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.1601550579071045
    2. '_dp' → logprob: -1.2851550579071045
    3. 'dp' → logprob: -1.9101550579071045
    4. 'p' → logprob: -2.1601550579071045
    5. 'ponent' → logprob: -2.4101550579071045
    6. '**' → logprob: -4.035155296325684
    7. '_new' → logprob: -4.160155296325684
    8. 'pow' → logprob: -5.410155296325684
    9. ']' → logprob: -5.910155296325684
    10. '`' → logprob: -6.035155296325684

Token 1422: 'ant' (ID: 493)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -1.0101096630096436
    2. 'ponent' → logprob: -1.0101096630096436
    3. '=' → logprob: -2.1351096630096436
    4. '   ' → logprob: -3.2601096630096436
    5. ' =' → logprob: -3.7601096630096436
    6. 'onent' → logprob: -4.010109901428223
    7. '```' → logprob: -4.010109901428223
    8. ')' → logprob: -4.260109901428223
    9. 'p' → logprob: -4.760109901428223
    10. ']' → logprob: -4.885109901428223

Token 1423: ' ' (ID: 5310)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5926418304443359
    2. ' =' → logprob: -0.8426418304443359
    3. '```' → logprob: -5.217641830444336
    4. 'new' → logprob: -5.717641830444336
    5. '(H' → logprob: -5.967641830444336
    6. '   ' → logprob: -7.092641830444336
    7. '[i' → logprob: -7.217641830444336
    8. ' H' → logprob: -7.592641830444336
    9. ')' → logprob: -7.842641830444336
    10. 'H' → logprob: -7.842641830444336

Token 1424: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014365050941705704
    2. ' =' → logprob: -4.264365196228027
    3. '```' → logprob: -9.264365196228027
    4. '   ' → logprob: -10.389365196228027
    5. 'new' → logprob: -11.389365196228027
    6. '2' → logprob: -11.514365196228027
    7. '=(' → logprob: -11.889365196228027
    8. 'pow' → logprob: -12.014365196228027
    9. '=
' → logprob: -12.014365196228027
    10. '(' → logprob: -12.264365196228027

Token 1425: ' différence' (ID: 79196)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.012937024235725403
    2. ' pow' → logprob: -5.012937068939209
    3. '2' → logprob: -5.887937068939209
    4. '(pow' → logprob: -6.637937068939209
    5. 'new' → logprob: -7.137937068939209
    6. '(' → logprob: -7.887937068939209
    7. ' (' → logprob: -8.63793659210205
    8. '(H' → logprob: -8.63793659210205
    9. 'H' → logprob: -8.88793659210205
    10. 'dp' → logprob: -9.13793659210205

Token 1426: ' H' (ID: 487)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6494024395942688
    2. '(H' → logprob: -1.274402379989624
    3. 'H' → logprob: -2.149402379989624
    4. 'new' → logprob: -3.649402379989624
    5. '=' → logprob: -3.774402379989624
    6. '2' → logprob: -4.149402618408203
    7. ' =' → logprob: -5.024402618408203
    8. ' H' → logprob: -6.149402618408203
    9. ' (' → logprob: -6.274402618408203
    10. '(new' → logprob: -6.274402618408203

Token 1427: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.011553249321877956
    2. '[i' → logprob: -4.6365532875061035
    3. 'k' → logprob: -6.5115532875061035
    4. 'H' → logprob: -9.511552810668945
    5. '```' → logprob: -10.011552810668945
    6. '[' → logprob: -10.136552810668945
    7. 'i' → logprob: -10.136552810668945
    8. '[
' → logprob: -10.636552810668945
    9. '#' → logprob: -11.386552810668945
    10. '
' → logprob: -11.511552810668945

Token 1428: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13939471542835236
    2. '[k' → logprob: -2.639394760131836
    3. '[i' → logprob: -3.014394760131836
    4. '-' → logprob: -4.889394760131836
    5. ']-' → logprob: -7.139394760131836
    6. 'i' → logprob: -8.014394760131836
    7. '[' → logprob: -8.264394760131836
    8. '[-' → logprob: -8.514394760131836
    9. '-k' → logprob: -9.389394760131836
    10. '[
' → logprob: -9.639394760131836

Token 1429: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3642938435077667
    2. ' -' → logprob: -1.3642938137054443
    3. '[i' → logprob: -3.1142938137054443
    4. '[k' → logprob: -6.489294052124023
    5. '```' → logprob: -6.489294052124023
    6. '   ' → logprob: -7.239294052124023
    7. '[' → logprob: -7.364294052124023
    8. ' ' → logprob: -8.739294052124023
    9. '-k' → logprob: -9.114294052124023
    10. ')' → logprob: -9.239294052124023

Token 1430: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0005365899996832013
    2. ' H' → logprob: -7.6255364418029785
    3. 'i' → logprob: -10.125536918640137
    4. '```' → logprob: -12.375536918640137
    5. '(H' → logprob: -13.750536918640137
    6. 'k' → logprob: -14.000536918640137
    7. '[i' → logprob: -14.500536918640137
    8. ' i' → logprob: -15.125536918640137
    9. '   ' → logprob: -15.250536918640137
    10. '(i' → logprob: -15.250536918640137

Token 1431: '[k' (ID: 14298)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43190833926200867
    2. '[i' → logprob: -1.056908369064331
    3. '[k' → logprob: -6.306908130645752
    4. 'k' → logprob: -6.681908130645752
    5. ' i' → logprob: -10.18190860748291
    6. '```' → logprob: -10.30690860748291
    7. '[' → logprob: -11.43190860748291
    8. 'H' → logprob: -11.80690860748291
    9. '[
' → logprob: -11.93190860748291
    10. ']' → logprob: -11.93190860748291

Token 1432: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007239448372274637
    2. ']' → logprob: -5.63223934173584
    3. 'i' → logprob: -6.13223934173584
    4. ' -' → logprob: -7.00723934173584
    5. '[i' → logprob: -7.88223934173584
    6. '-i' → logprob: -9.13223934173584
    7. '   ' → logprob: -11.50723934173584
    8. '[' → logprob: -12.00723934173584
    9. '(i' → logprob: -12.00723934173584
    10. '_i' → logprob: -12.25723934173584

Token 1433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.27099974633893e-05
    2. 'i' → logprob: -12.000012397766113
    3. '-' → logprob: -12.750012397766113
    4. '   ' → logprob: -13.875012397766113
    5. ' ' → logprob: -14.125012397766113
    6. 'k' → logprob: -14.625012397766113
    7. '```' → logprob: -14.625012397766113
    8. '
' → logprob: -15.250012397766113
    9. ']' → logprob: -16.00001335144043
    10. '(i' → logprob: -16.81251335144043

Token 1434: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09241610765457153
    2. ']
' → logprob: -2.4674160480499268
    3. ']:
' → logprob: -5.842416286468506
    4. ']
' → logprob: -8.717415809631348
    5. '```' → logprob: -8.842415809631348
    6. ']*' → logprob: -9.717415809631348
    7. '],' → logprob: -10.342415809631348
    8. '[i' → logprob: -10.717415809631348
    9. '']' → logprob: -10.842415809631348
    10. ']:' → logprob: -10.842415809631348

Token 1435: ' ;' (ID: 4605)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.967568039894104
    2. 'new' → logprob: -1.092568039894104
    3. '```' → logprob: -2.2175679206848145
    4. '   ' → logprob: -2.3425679206848145
    5. ' new' → logprob: -3.7175679206848145
    6. '=' → logprob: -4.0925679206848145
    7. ']' → logprob: -4.7175679206848145
    8. ' =' → logprob: -4.7175679206848145
    9. ')' → logprob: -4.8425679206848145
    10. '               ' → logprob: -5.9675679206848145

Token 1436: ' calcul' (ID: 7559)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.31818458437919617
    2. ' new' → logprob: -1.3181846141815186
    3. '(' → logprob: -5.9431843757629395
    4. '(new' → logprob: -7.4431843757629395
    5. ')' → logprob: -7.9431843757629395
    6. 'pow' → logprob: -8.068184852600098
    7. '```' → logprob: -8.068184852600098
    8. ' (' → logprob: -8.193184852600098
    9. '2' → logprob: -9.318184852600098
    10. '
' → logprob: -9.443184852600098

Token 1437: ' modulo' (ID: 112372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3097659647464752
    2. 'new' → logprob: -1.4347659349441528
    3. ' new' → logprob: -4.684765815734863
    4. ')' → logprob: -5.059765815734863
    5. ' =' → logprob: -5.434765815734863
    6. '           ' → logprob: -5.809765815734863
    7. ')new' → logprob: -6.934765815734863
    8. '(new' → logprob: -7.184765815734863
    9. 'mod' → logprob: -7.309765815734863
    10. '=new' → logprob: -7.309765815734863

Token 1438: ' mod' (ID: 1812)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4135565161705017
    2. 'mod' → logprob: -1.1635565757751465
    3. '2' → logprob: -4.1635565757751465
    4. ' (' → logprob: -5.1635565757751465
    5. '```' → logprob: -6.6635565757751465
    6. 'new' → logprob: -6.9135565757751465
    7. 'pow' → logprob: -6.9135565757751465
    8. ' mod' → logprob: -7.4135565757751465
    9. '(mod' → logprob: -7.7885565757751465
    10. ' ' → logprob: -8.538556098937988

Token 1439: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6654999852180481
    2. 'new' → logprob: -1.0404999256134033
    3. ' new' → logprob: -2.4154999256134033
    4. ' =' → logprob: -3.4154999256134033
    5. '   ' → logprob: -5.415500164031982
    6. '           ' → logprob: -5.915500164031982
    7. '(new' → logprob: -6.915500164031982
    8. ')' → logprob: -7.540500164031982
    9. '```' → logprob: -7.665500164031982
    10. '=new' → logprob: -7.790500164031982

Token 1440: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5578464269638062
    2. 'new' → logprob: -1.3078464269638062
    3. ' new' → logprob: -2.3078465461730957
    4. ' =' → logprob: -3.3078465461730957
    5. '[new' → logprob: -4.432846546173096
    6. '```' → logprob: -5.682846546173096
    7. '=new' → logprob: -6.057846546173096
    8. '   ' → logprob: -6.807846546173096
    9. '           ' → logprob: -6.932846546173096
    10. '(new' → logprob: -7.932846546173096

Token 1441: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6955980658531189
    2. 'new' (adapté à ' new') → logprob: -0.6955980658531189
    3. '           ' → logprob: -6.195598125457764
    4. '```' → logprob: -8.945597648620605
    5. '   ' → logprob: -9.070597648620605
    6. '               ' → logprob: -9.695597648620605
    7. '(new' → logprob: -10.070597648620605
    8. '	new' → logprob: -11.195597648620605
    9. '[new' → logprob: -11.195597648620605
    10. '                   ' → logprob: -12.070597648620605

Token 1442: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.688212614681106e-05
    2. 'dp' → logprob: -11.000017166137695
    3. '	dp' → logprob: -16.625017166137695
    4. 'new' → logprob: -17.750017166137695
    5. '
' → logprob: -17.875017166137695
    6. '```' → logprob: -18.125017166137695
    7. '_d' → logprob: -18.375017166137695
    8. '_dc' → logprob: -18.625017166137695
    9. '_dt' → logprob: -18.750017166137695
    10. '(dp' → logprob: -18.875017166137695

Token 1443: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -13.125003814697266
    3. '=' → logprob: -13.750003814697266
    4. '```' → logprob: -15.000003814697266
    5. ' =' → logprob: -16.625003814697266
    6. 'i' → logprob: -17.000003814697266
    7. '[
' → logprob: -17.000003814697266
    8. '
' → logprob: -17.250003814697266
    9. ' [' → logprob: -17.875003814697266
    10. '[j' → logprob: -18.125003814697266

Token 1444: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31352826952934265
    2. ' =' → logprob: -1.313528299331665
    3. ']' → logprob: -8.313528060913086
    4. '   ' → logprob: -11.813528060913086
    5. ']=' → logprob: -11.813528060913086
    6. ')' → logprob: -12.688528060913086
    7. '=(' → logprob: -14.063528060913086
    8. '```' → logprob: -14.063528060913086
    9. '=
' → logprob: -15.063528060913086
    10. ' ' → logprob: -15.438528060913086

Token 1445: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003178306156769395
    2. ' =' → logprob: -5.753178119659424
    3. '=(' → logprob: -14.628178596496582
    4. '   ' → logprob: -16.378177642822266
    5. '=((' → logprob: -17.378177642822266
    6. '＝' → logprob: -18.628177642822266
    7. '=
' → logprob: -19.003177642822266
    8. ' =(' → logprob: -19.378177642822266
    9. '+=' → logprob: -19.628177642822266
    10. '```' → logprob: -19.628177642822266

Token 1446: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00011915886716451496
    2. ' (' → logprob: -9.12511920928955
    3. 'dp' → logprob: -12.12511920928955
    4. '(' → logprob: -13.12511920928955
    5. '((' → logprob: -14.12511920928955
    6. '   ' → logprob: -14.50011920928955
    7. '(dx' → logprob: -15.00011920928955
    8. '(df' → logprob: -15.37511920928955
    9. '(dt' → logprob: -16.000118255615234
    10. '(d' → logprob: -16.125118255615234

Token 1447: 'dp' (ID: 19037)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.012562395073473454
    2. 'dp' → logprob: -4.387562274932861
    3. ' (' → logprob: -10.13756275177002
    4. '(' → logprob: -12.26256275177002
    5. '((' → logprob: -13.13756275177002
    6. ' dp' → logprob: -13.38756275177002
    7. '(d' → logprob: -14.13756275177002
    8. '	dp' → logprob: -14.13756275177002
    9. '   ' → logprob: -14.26256275177002
    10. '(dt' → logprob: -14.76256275177002

Token 1448: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3782830137643032e-05
    2. 'i' → logprob: -11.50001335144043
    3. '[k' → logprob: -13.00001335144043
    4. '[' → logprob: -13.87501335144043
    5. '[I' → logprob: -16.25001335144043
    6. '(i' → logprob: -16.62501335144043
    7. '[
' → logprob: -16.75001335144043
    8. '```' → logprob: -17.37501335144043
    9. '[j' → logprob: -17.50001335144043
    10. 'I' → logprob: -17.62501335144043

Token 1449: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868778944015503
    2. ' +' → logprob: -1.1368778944015503
    3. '+
' → logprob: -13.01187801361084
    4. '[' → logprob: -13.88687801361084
    5. ' +
' → logprob: -14.01187801361084
    6. '   ' → logprob: -14.38687801361084
    7. '+i' → logprob: -14.88687801361084
    8. '+k' → logprob: -15.76187801361084
    9. '	' → logprob: -15.88687801361084
    10. '+b' → logprob: -16.011877059936523

Token 1450: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10024397820234299
    2. ' +' → logprob: -2.3502440452575684
    3. '+
' → logprob: -10.35024356842041
    4. ' +
' → logprob: -13.10024356842041
    5. '   ' → logprob: -14.72524356842041
    6. '+k' → logprob: -14.72524356842041
    7. '[' → logprob: -14.72524356842041
    8. '+i' → logprob: -14.97524356842041
    9. '+b' → logprob: -15.47524356842041
    10. '
' → logprob: -15.60024356842041

Token 1451: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00013202552509028465
    2. ' dp' → logprob: -9.250131607055664
    3. '(dp' → logprob: -10.250131607055664
    4. 'new' → logprob: -15.750131607055664
    5. '   ' → logprob: -16.125131607055664
    6. 'pow' → logprob: -16.375131607055664
    7. '	dp' → logprob: -16.375131607055664
    8. 'dk' → logprob: -18.375131607055664
    9. '(' → logprob: -18.625131607055664
    10. ' (' → logprob: -18.625131607055664

Token 1452: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.9981420336989686e-05
    2. 'k' → logprob: -10.875020027160645
    3. '(k' → logprob: -14.625020027160645
    4. '[' → logprob: -15.250020027160645
    5. '[
' → logprob: -15.500020027160645
    6. '[i' → logprob: -17.750019073486328
    7. '[(' → logprob: -17.875019073486328
    8. '{k' → logprob: -18.125019073486328
    9. '[j' → logprob: -18.250019073486328
    10. ' k' → logprob: -18.500019073486328

Token 1453: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011059965938329697
    2. ' -' → logprob: -4.511059761047363
    3. '   ' → logprob: -12.511059761047363
    4. '[-' → logprob: -12.636059761047363
    5. '[' → logprob: -13.011059761047363
    6. ' ' → logprob: -13.886059761047363
    7. ']' → logprob: -15.011059761047363
    8. '[k' → logprob: -15.011059761047363
    9. '	' → logprob: -15.261059761047363
    10. '[i' → logprob: -15.636059761047363

Token 1454: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.500009536743164
    4. '```' → logprob: -16.875009536743164
    5. ']' → logprob: -18.062509536743164
    6. '           ' → logprob: -18.187509536743164
    7. '  ' → logprob: -18.250009536743164
    8. '       ' → logprob: -18.250009536743164
    9. '    ' → logprob: -18.562509536743164
    10. '[' → logprob: -18.937509536743164

Token 1455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.750003814697266
    3. '   ' → logprob: -14.062503814697266
    4. '```' → logprob: -14.125003814697266
    5. 'new' → logprob: -16.000003814697266
    6. ']' → logprob: -16.500003814697266
    7. '       ' → logprob: -16.500003814697266
    8. '           ' → logprob: -16.625003814697266
    9. '[' → logprob: -16.687503814697266
    10. '`' → logprob: -16.937503814697266

Token 1456: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001319063303526491
    2. '])' → logprob: -9.500131607055664
    3. ']' → logprob: -9.875131607055664
    4. '）' → logprob: -13.250131607055664
    5. ' )' → logprob: -13.250131607055664
    6. '   ' → logprob: -13.625131607055664
    7. '```' → logprob: -15.500131607055664
    8. '*' → logprob: -16.250131607055664
    9. '`)' → logprob: -16.250131607055664
    10. ')*' → logprob: -16.625131607055664

Token 1457: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5761051177978516
    2. '*' → logprob: -0.8261051177978516
    3. '   ' → logprob: -8.951105117797852
    4. '*(' → logprob: -11.326105117797852
    5. ' ' → logprob: -11.701105117797852
    6. ' ' → logprob: -12.701105117797852
    7. '```' → logprob: -13.076105117797852
    8. '    ' → logprob: -13.451105117797852
    9. ')' → logprob: -13.576105117797852
    10. '           ' → logprob: -13.576105117797852

Token 1458: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.0564331205387134e-05
    2. ' pow' → logprob: -11.50001049041748
    3. '2' → logprob: -15.25001049041748
    4. '(pow' → logprob: -15.87501049041748
    5. '   ' → logprob: -19.375011444091797
    6. 'pw' → logprob: -20.000011444091797
    7. 'power' → logprob: -20.500011444091797
    8. '_pow' → logprob: -21.250011444091797
    9. '(' → logprob: -21.625011444091797
    10. '.pow' → logprob: -22.000011444091797

Token 1459: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007108822464942932
    2. '2' → logprob: -7.250710964202881
    3. ' (' → logprob: -15.375710487365723
    4. '```' → logprob: -15.375710487365723
    5. '(
' → logprob: -15.500710487365723
    6. '<|end|>' → logprob: -15.750710487365723
    7. ' ' → logprob: -17.87571144104004
    8. 'tokens' → logprob: -18.00071144104004
    9. '[' → logprob: -18.12571144104004
    10. '<|end|>' → logprob: -18.25071144104004

Token 1460: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.1928003813372925e-05
    2. '(' → logprob: -9.875051498413086
    3. ' ' → logprob: -15.000051498413086
    4. '```' → logprob: -18.125051498413086
    5. '(
' → logprob: -19.625051498413086
    6. ')' → logprob: -20.625051498413086
    7. '   ' → logprob: -20.750051498413086
    8. '۲' → logprob: -21.125051498413086
    9. '[' → logprob: -21.250051498413086
    10. ' (' → logprob: -21.750051498413086

Token 1461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48667439818382263
    2. '(' → logprob: -0.986674427986145
    3. '(H' → logprob: -5.1116743087768555
    4. ',H' → logprob: -5.2366743087768555
    5. '[' → logprob: -8.361674308776855
    6. ' (' → logprob: -8.611674308776855
    7. '```' → logprob: -8.611674308776855
    8. '2' → logprob: -8.611674308776855
    9. ')' → logprob: -9.486674308776855
    10. ',(' → logprob: -9.486674308776855

Token 1462: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0034800972789525986
    2. '(H' → logprob: -5.753479957580566
    3. ' H' → logprob: -8.128479957580566
    4. '2' → logprob: -12.253479957580566
    5. ' (' → logprob: -13.378479957580566
    6. ' ' → logprob: -15.253479957580566
    7. '   ' → logprob: -15.253479957580566
    8. '	H' → logprob: -15.378479957580566
    9. '(' → logprob: -15.628479957580566
    10. '-H' → logprob: -16.628480911254883

Token 1463: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.1160349458805285e-05
    2. 'k' → logprob: -11.500011444091797
    3. '```' → logprob: -14.750011444091797
    4. '(k' → logprob: -15.000011444091797
    5. '[' → logprob: -16.125011444091797
    6. '{k' → logprob: -17.000011444091797
    7. '[
' → logprob: -17.500011444091797
    8. '   ' → logprob: -18.625011444091797
    9. ' k' → logprob: -19.250011444091797
    10. '	k' → logprob: -19.500011444091797

Token 1464: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015305745182558894
    2. '-' → logprob: -6.751530647277832
    3. ']-' → logprob: -8.876530647277832
    4. ' -' → logprob: -9.251530647277832
    5. '[k' → logprob: -9.501530647277832
    6. ']
' → logprob: -11.126530647277832
    7. '[i' → logprob: -11.501530647277832
    8. ' ]' → logprob: -12.126530647277832
    9. '[' → logprob: -12.376530647277832
    10. '-k' → logprob: -12.376530647277832

Token 1465: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01496720127761364
    2. ' -' → logprob: -4.38996696472168
    3. '[' → logprob: -7.01496696472168
    4. '[i' → logprob: -7.13996696472168
    5. '[k' → logprob: -7.63996696472168
    6. '[-' → logprob: -8.63996696472168
    7. '-k' → logprob: -10.26496696472168
    8. ']' → logprob: -10.76496696472168
    9. '<|end|>' → logprob: -11.38996696472168
    10. '```' → logprob: -11.51496696472168

Token 1466: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.4987974029500037e-05
    2. ' H' → logprob: -10.875024795532227
    3. '[k' → logprob: -12.500024795532227
    4. '[' → logprob: -14.125024795532227
    5. 'k' → logprob: -14.125024795532227
    6. '   ' → logprob: -15.000024795532227
    7. '```' → logprob: -15.250024795532227
    8. '(H' → logprob: -15.875024795532227
    9. '	H' → logprob: -16.875024795532227
    10. '(k' → logprob: -17.375024795532227

Token 1467: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3926107883453369
    2. 'i' → logprob: -1.142610788345337
    3. '[k' → logprob: -5.642610549926758
    4. '-' → logprob: -6.892610549926758
    5. 'k' → logprob: -7.517610549926758
    6. '[' → logprob: -8.392610549926758
    7. '[-' → logprob: -9.267610549926758
    8. '1' → logprob: -9.642610549926758
    9. '```' → logprob: -9.892610549926758
    10. ' [' → logprob: -10.017610549926758

Token 1468: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011461719404906034
    2. ' -' → logprob: -7.37614631652832
    3. '1' → logprob: -7.62614631652832
    4. ']' → logprob: -10.75114631652832
    5. '   ' → logprob: -12.75114631652832
    6. ' ' → logprob: -13.25114631652832
    7. '−' → logprob: -13.75114631652832
    8. '[' → logprob: -13.87614631652832
    9. ']-' → logprob: -14.12614631652832
    10. 'i' → logprob: -14.25114631652832

Token 1469: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -14.25000286102295
    3. 'i' → logprob: -14.50000286102295
    4. '   ' → logprob: -14.87500286102295
    5. '```' → logprob: -14.87500286102295
    6. '-' → logprob: -15.62500286102295
    7. '
' → logprob: -16.750001907348633
    8. ']' → logprob: -17.187501907348633
    9. '１' → logprob: -17.312501907348633
    10. '[' → logprob: -17.750001907348633

Token 1470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. 'i' → logprob: -10.750036239624023
    3. '-' → logprob: -12.500036239624023
    4. '```' → logprob: -12.500036239624023
    5. ']' → logprob: -13.000036239624023
    6. ' ' → logprob: -13.250036239624023
    7. '   ' → logprob: -14.375036239624023
    8. '(i' → logprob: -15.250036239624023
    9. '`' → logprob: -15.375036239624023
    10. '
' → logprob: -15.437536239624023

Token 1471: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.020842107012867928
    2. ',' → logprob: -3.8958420753479004
    3. '),' → logprob: -8.895842552185059
    4. ']' → logprob: -10.020842552185059
    5. '[i' → logprob: -10.020842552185059
    6. '```' → logprob: -10.145842552185059
    7. ''],' → logprob: -11.395842552185059
    8. '},' → logprob: -11.770842552185059
    9. '   ' → logprob: -13.145842552185059
    10. '],
' → logprob: -13.270842552185059

Token 1472: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.5491004129871726e-05
    2. ' mod' → logprob: -10.000045776367188
    3. '(mod' → logprob: -18.875045776367188
    4. '	mod' → logprob: -19.625045776367188
    5. 'MOD' → logprob: -20.625045776367188
    6. ')' → logprob: -20.625045776367188
    7. '```' → logprob: -21.250045776367188
    8. '_mod' → logprob: -21.875045776367188
    9. ' мод' → logprob: -23.125045776367188
    10. 'mods' → logprob: -23.375045776367188

Token 1473: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024817234370857477
    2. '%' → logprob: -6.502481937408447
    3. ')%' → logprob: -7.627481937408447
    4. ' %' → logprob: -8.002481460571289
    5. ' )' → logprob: -9.502481460571289
    6. ']' → logprob: -10.877481460571289
    7. '```' → logprob: -11.127481460571289
    8. '       ' → logprob: -11.502481460571289
    9. '           ' → logprob: -11.627481460571289
    10. '   ' → logprob: -11.877481460571289

Token 1474: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3278357684612274
    2. '%' → logprob: -1.3278357982635498
    3. ')' → logprob: -4.952835559844971
    4. '
' → logprob: -5.577835559844971
    5. '%n' → logprob: -6.452835559844971
    6. ')%' → logprob: -7.577835559844971
    7. '```' → logprob: -7.577835559844971
    8. '   ' → logprob: -7.952835559844971
    9. '[new' → logprob: -8.702836036682129
    10. '%c' → logprob: -9.452836036682129

Token 1475: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5236015915870667
    2. 'new' → logprob: -1.2736015319824219
    3. ' new' → logprob: -2.398601531982422
    4. '       ' → logprob: -4.148601531982422
    5. '%' → logprob: -4.523601531982422
    6. ' %' → logprob: -4.898601531982422
    7. '[new' → logprob: -7.023601531982422
    8. '
' → logprob: -7.273601531982422
    9. '```' → logprob: -8.398601531982422
    10. ' %=' → logprob: -8.523601531982422

Token 1476: ' Rés' (ID: 104378)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.009854190051555634
    2. ' new' → logprob: -4.759854316711426
    3. 'for' → logprob: -7.509854316711426
    4. '       ' → logprob: -7.759854316711426
    5. '   ' → logprob: -9.009854316711426
    6. 'if' → logprob: -9.509854316711426
    7. 'dp' → logprob: -10.009854316711426
    8. '
' → logprob: -11.509854316711426
    9. ' for' → logprob: -12.134854316711426
    10. '```' → logprob: -12.634854316711426

Token 1477: 'ultat' (ID: 133070)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0058478545397520065
    2. 'ult' → logprob: -5.755847930908203
    3. '       ' → logprob: -6.880847930908203
    4. ' new' → logprob: -7.755847930908203
    5. 'ultat' → logprob: -7.755847930908203
    6. 'e' → logprob: -8.130847930908203
    7. '=' → logprob: -9.255847930908203
    8. '   ' → logprob: -9.380847930908203
    9. 'ew' → logprob: -9.880847930908203
    10. '           ' → logprob: -9.880847930908203

Token 1478: ' modulo' (ID: 112372)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14339333772659302
    2. 'new' → logprob: -2.3933932781219482
    3. '
' → logprob: -4.018393516540527
    4. '[new' → logprob: -5.018393516540527
    5. ' %=' → logprob: -5.018393516540527
    6. '%' → logprob: -5.893393516540527
    7. ' new' → logprob: -5.893393516540527
    8. '```' → logprob: -6.893393516540527
    9. '%i' → logprob: -7.018393516540527
    10. '   ' → logprob: -7.143393516540527

Token 1479: ' mod' (ID: 1812)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.0238271951675415
    2. 'mod' → logprob: -1.0238271951675415
    3. 'new' → logprob: -1.5238271951675415
    4. ' mod' → logprob: -3.273827075958252
    5. '=' → logprob: -4.648827075958252
    6. ' =' → logprob: -4.898827075958252
    7. '(mod' → logprob: -5.898827075958252
    8. '`' → logprob: -6.773827075958252
    9. ' (' → logprob: -7.148827075958252
    10. ' %=' → logprob: -7.148827075958252

Token 1480: ' pour' (ID: 1930)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.935737133026123
    2. '[new' → logprob: -1.185737133026123
    3. 'new' → logprob: -1.810737133026123
    4. ' new' → logprob: -2.185737133026123
    5. '
' → logprob: -4.685737133026123
    6. '   ' → logprob: -4.685737133026123
    7. ' %=' → logprob: -6.560737133026123
    8. '       ' → logprob: -6.685737133026123
    9. '=' → logprob: -6.935737133026123
    10. ' =' → logprob: -6.935737133026123

Token 1481: ' rester' (ID: 54655)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.007732145953923464
    2. ' new' → logprob: -4.882731914520264
    3. '=' → logprob: -9.757732391357422
    4. 'i' → logprob: -11.007732391357422
    5. '
' → logprob: -11.382732391357422
    6. '%=' → logprob: -11.632732391357422
    7. '```' → logprob: -12.382732391357422
    8. '[i' → logprob: -12.632732391357422
    9. ' %=' → logprob: -12.632732391357422
    10. '_new' → logprob: -12.757732391357422

Token 1482: ' dans' (ID: 2671)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0889182090759277
    2. 'new' → logprob: -1.2139182090759277
    3. '%=' → logprob: -1.7139182090759277
    4. ' new' → logprob: -2.7139182090759277
    5. ' %=' → logprob: -2.7139182090759277
    6. 'mod' → logprob: -3.7139182090759277
    7. '=' → logprob: -3.7139182090759277
    8. '[new' → logprob: -6.463918209075928
    9. '```' → logprob: -6.713918209075928
    10. ' mod' → logprob: -7.088918209075928

Token 1483: ' l' (ID: 305)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0008155853138305247
    2. ' mod' → logprob: -7.500815391540527
    3. 'new' → logprob: -8.500815391540527
    4. '(mod' → logprob: -10.000815391540527
    5. '```' → logprob: -11.750815391540527
    6. ' new' → logprob: -12.375815391540527
    7. 'MOD' → logprob: -14.375815391540527
    8. '10' → logprob: -14.875815391540527
    9. '100' → logprob: -15.000815391540527
    10. '	mod' → logprob: -15.625815391540527

Token 1484: ''' (ID: 6)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.30142369866371155
    2. ' new' → logprob: -1.6764236688613892
    3. 'mod' → logprob: -2.9264237880706787
    4. 'ew' → logprob: -4.9264235496521
    5. '```' → logprob: -5.1764235496521
    6. ' mod' → logprob: -5.9264235496521
    7. '[new' → logprob: -6.0514235496521
    8. '_new' → logprob: -7.1764235496521
    9. '`' → logprob: -8.676424026489258
    10. '_mod' → logprob: -8.801424026489258

Token 1485: 'interval' (ID: 37558)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0002798087371047586
    2. 'new' → logprob: -8.500279426574707
    3. ' mod' → logprob: -9.500279426574707
    4. ' new' → logprob: -13.875279426574707
    5. '```' → logprob: -15.375279426574707
    6. '10' → logprob: -16.375280380249023
    7. 'MOD' → logprob: -16.375280380249023
    8. '100' → logprob: -16.625280380249023
    9. '(mod' → logprob: -17.125280380249023
    10. '`' → logprob: -18.000280380249023

Token 1486: 'le' (ID: 282)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2417847216129303
    2. 'e' → logprob: -2.2417848110198975
    3. 'mod' → logprob: -3.4917848110198975
    4. 'new' → logprob: -3.7417848110198975
    5. '_new' → logprob: -4.241784572601318
    6. ' =' → logprob: -4.616784572601318
    7. ')' → logprob: -5.116784572601318
    8. '=
' → logprob: -5.116784572601318
    9. ' new' → logprob: -5.741784572601318
    10. '(new' → logprob: -5.991784572601318

Token 1487: ' des' (ID: 731)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6327800154685974
    2. 'new' → logprob: -0.8827800154685974
    3. '[new' → logprob: -3.507780075073242
    4. '(new' → logprob: -4.632780075073242
    5. '=' → logprob: -5.632780075073242
    6. ' =' → logprob: -5.757780075073242
    7. '`' → logprob: -6.382780075073242
    8. '
' → logprob: -6.382780075073242
    9. ')' → logprob: -6.757780075073242
    10. '   ' → logprob: -7.382780075073242

Token 1488: ' ent' (ID: 1121)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.003710411721840501
    2. ' mod' → logprob: -5.7537102699279785
    3. 'new' → logprob: -8.128710746765137
    4. ' new' → logprob: -9.003710746765137
    5. '(mod' → logprob: -9.378710746765137
    6. '10' → logprob: -11.753710746765137
    7. '```' → logprob: -12.003710746765137
    8. '100' → logprob: -12.378710746765137
    9. '_mod' → logprob: -12.753710746765137
    10. ')' → logprob: -13.503710746765137

Token 1489: 'iers' (ID: 11012)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6525026559829712
    2. '=' → logprob: -2.1525025367736816
    3. '_mod' → logprob: -2.5275025367736816
    4. '```' → logprob: -2.6525025367736816
    5. 'new' → logprob: -2.9025025367736816
    6. 'er' → logprob: -3.4025025367736816
    7. ' =' → logprob: -3.9025025367736816
    8. 'ier' → logprob: -3.9025025367736816
    9. ' mod' → logprob: -4.152502536773682
    10. '_new' → logprob: -4.152502536773682

Token 1490: ' support' (ID: 2498)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8499948978424072
    2. '[new' → logprob: -1.7249948978424072
    3. ' %=' → logprob: -2.2249948978424072
    4. '%' → logprob: -2.3499948978424072
    5. ' new' → logprob: -2.4749948978424072
    6. ' %' → logprob: -3.0999948978424072
    7. '%=' → logprob: -3.5999948978424072
    8. '=' → logprob: -4.474994659423828
    9. ')' → logprob: -5.224994659423828
    10. ' =' → logprob: -5.349994659423828

Token 1491: 'és' (ID: 1756)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09240827709436417
    2. ' =' → logprob: -3.3424081802368164
    3. 'e' → logprob: -4.092408180236816
    4. ')' → logprob: -4.342408180236816
    5. 'mod' → logprob: -5.467408180236816
    6. ' %=' → logprob: -5.717408180236816
    7. '[new' → logprob: -5.842408180236816
    8. 'new' → logprob: -5.967408180236816
    9. '=new' → logprob: -5.967408180236816
    10. '%' → logprob: -6.592408180236816

Token 1492: '
' (ID: 198)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.4983333647251129
    2. 'new' → logprob: -2.12333345413208
    3. ' %=' → logprob: -2.24833345413208
    4. ' new' → logprob: -2.62333345413208
    5. '%=' → logprob: -3.12333345413208
    6. '=' → logprob: -3.99833345413208
    7. '[i' → logprob: -4.12333345413208
    8. '%' → logprob: -5.24833345413208
    9. ' =' → logprob: -5.99833345413208
    10. '
' → logprob: -6.12333345413208

Token 1493: '       ' (ID: 309)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.666290283203125
    2. '[new' → logprob: -1.416290283203125
    3. ' new' → logprob: -1.541290283203125
    4. ' %=' → logprob: -4.416290283203125
    5. '   ' → logprob: -4.791290283203125
    6. '%=' → logprob: -5.791290283203125
    7. '
' → logprob: -5.916290283203125
    8. '```' → logprob: -6.791290283203125
    9. '[i' → logprob: -7.541290283203125
    10. '%' → logprob: -7.791290283203125

Token 1494: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.16044498980045319
    2. ' new' → logprob: -1.910444974899292
    3. '[new' → logprob: -9.035445213317871
    4. '   ' → logprob: -9.535445213317871
    5. '[i' → logprob: -11.035445213317871
    6. '```' → logprob: -12.535445213317871
    7. '
' → logprob: -12.785445213317871
    8. '	new' → logprob: -13.285445213317871
    9. '       ' → logprob: -13.410445213317871
    10. '[' → logprob: -13.910445213317871

Token 1495: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.0280383548888494e-06
    2. 'dp' → logprob: -14.375000953674316
    3. '_' → logprob: -17.000001907348633
    4. '_dt' → logprob: -17.000001907348633
    5. '_d' → logprob: -17.125001907348633
    6. '	dp' → logprob: -17.125001907348633
    7. '_p' → logprob: -17.375001907348633
    8. '_dc' → logprob: -18.000001907348633
    9. '_DP' → logprob: -18.000001907348633
    10. '_np' → logprob: -18.125001907348633

Token 1496: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.951771421066951e-05
    2. '[' → logprob: -10.500029563903809
    3. '=' → logprob: -13.750029563903809
    4. ' =' → logprob: -15.250029563903809
    5. '[I' → logprob: -15.875029563903809
    6. '```' → logprob: -15.875029563903809
    7. '\[' → logprob: -16.250028610229492
    8. '[new' → logprob: -16.625028610229492
    9. 'i' → logprob: -17.000028610229492
    10. '[
' → logprob: -17.000028610229492

Token 1497: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00806791428476572
    2. '%=' → logprob: -5.633068084716797
    3. ')' → logprob: -5.758068084716797
    4. ' %=' → logprob: -7.508068084716797
    5. '%' → logprob: -7.758068084716797
    6. ']=' → logprob: -9.258068084716797
    7. '=' → logprob: -9.258068084716797
    8. ']%' → logprob: -9.258068084716797
    9. '[i' → logprob: -11.758068084716797
    10. '```' → logprob: -11.883068084716797

Token 1498: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0001732663222355768
    2. ' %=' → logprob: -8.875173568725586
    3. '=' → logprob: -10.625173568725586
    4. '%' → logprob: -11.625173568725586
    5. '```' → logprob: -17.250173568725586
    6. '//=' → logprob: -17.875173568725586
    7. ')' → logprob: -18.000173568725586
    8. ')%' → logprob: -18.250173568725586
    9. 'mod' → logprob: -18.375173568725586
    10. 'new' → logprob: -19.250173568725586

Token 1499: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -17.75
    3. '(mod' → logprob: -19.75
    4. '	mod' → logprob: -24.0
    5. '_mod' → logprob: -24.75
    6. 'MOD' → logprob: -25.0
    7. 'moder' → logprob: -25.625
    8. '```' → logprob: -26.375
    9. ' мод' → logprob: -26.625
    10. '.mod' → logprob: -27.125

Token 1500: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05026579275727272
    2. '<|end|>' → logprob: -3.0502657890319824
    3. 'dp' → logprob: -6.550265789031982
    4. '<|end|>' → logprob: -9.17526626586914
    5. ']' → logprob: -10.55026626586914
    6. ')' → logprob: -10.67526626586914
    7. '...' → logprob: -11.42526626586914
    8. '```' → logprob: -11.42526626586914
    9. '[' → logprob: -11.55026626586914
    10. '       ' → logprob: -11.80026626586914

Token 1501: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5766066908836365
    2. '   ' → logprob: -0.8266066908836365
    3. '<|end|>' → logprob: -8.201606750488281
    4. ' dp' → logprob: -8.326606750488281
    5. '	dp' → logprob: -9.826606750488281
    6. '(dp' → logprob: -11.076606750488281
    7. 'for' → logprob: -11.576606750488281
    8. '_dp' → logprob: -11.576606750488281
    9. '```' → logprob: -11.951606750488281
    10. 'new' → logprob: -12.076606750488281

Token 1502: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008913070894777775
    2. '   ' → logprob: -4.758913040161133
    3. ' dp' → logprob: -8.133913040161133
    4. '	dp' → logprob: -12.383913040161133
    5. '(dp' → logprob: -14.758913040161133
    6. '_dp' → logprob: -14.758913040161133
    7. '.dp' → logprob: -17.008913040161133
    8. '```' → logprob: -17.883913040161133
    9. '   ' → logprob: -19.008913040161133
    10. ' ' → logprob: -19.133913040161133

Token 1503: ' Mise' (ID: 157932)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.9361264946837764e-07
    2. ' dp' → logprob: -16.25
    3. '   ' → logprob: -18.875
    4. '	dp' → logprob: -22.5
    5. '    
' → logprob: -22.75
    6. '#' → logprob: -23.375
    7. '
' → logprob: -23.75
    8. '(dp' → logprob: -24.125
    9. '_dp' → logprob: -24.75
    10. 'dc' → logprob: -25.125

Token 1504: ' à' (ID: 1221)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3220272362232208
    2. '_dp' → logprob: -1.4470272064208984
    3. 'à' → logprob: -3.5720272064208984
    4. ' dp' → logprob: -5.322027206420898
    5. ' à' → logprob: -5.572027206420898
    6. '   ' → logprob: -6.197027206420898
    7. '	dp' → logprob: -7.572027206420898
    8. '(dp' → logprob: -7.947027206420898
    9. 'DP' → logprob: -9.697027206420898
    10. '=' → logprob: -9.822027206420898

Token 1505: ' jour' (ID: 8379)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08990973234176636
    2. 'jour' → logprob: -2.464909791946411
    3. ' jour' → logprob: -7.214909553527832
    4. 'jours' → logprob: -8.964909553527832
    5. 'day' → logprob: -10.089909553527832
    6. 'Jour' → logprob: -10.589909553527832
    7. 'jou' → logprob: -12.214909553527832
    8. 'place' → logprob: -12.464909553527832
    9. 'j' → logprob: -12.714909553527832
    10. ' dp' → logprob: -12.714909553527832

Token 1506: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0325924449716695e-05
    2. ' dp' → logprob: -12.00001049041748
    3. '(dp' → logprob: -12.75001049041748
    4. '   ' → logprob: -13.75001049041748
    5. '	dp' → logprob: -16.000009536743164
    6. '_dp' → logprob: -17.625009536743164
    7. '```' → logprob: -18.125009536743164
    8. '[' → logprob: -19.375009536743164
    9. '.dp' → logprob: -20.250009536743164
    10. '`' → logprob: -20.500009536743164

Token 1507: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.320199877838604e-07
    2. ' dp' → logprob: -14.75
    3. '	dp' → logprob: -19.875
    4. '(dp' → logprob: -21.625
    5. '_dp' → logprob: -22.375
    6. '   ' → logprob: -22.75
    7. 'dpi' → logprob: -24.125
    8. '.dp' → logprob: -25.0
    9. 'Dp' → logprob: -25.125
    10. 'd' → logprob: -25.125

Token 1508: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -7.493430894101039e-05
    2. ' =' → logprob: -9.500075340270996
    3. 'new' → logprob: -18.25007438659668
    4. '   ' → logprob: -18.62507438659668
    5. '=new' → logprob: -18.75007438659668
    6. '[:]' → logprob: -18.87507438659668
    7. 'dp' → logprob: -19.12507438659668
    8. '=
' → logprob: -19.12507438659668
    9. '.=' → logprob: -20.87507438659668
    10. ',' → logprob: -21.50007438659668

Token 1509: ' le' (ID: 505)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.9146995327901095e-05
    2. ' new' → logprob: -10.875019073486328
    3. '=new' → logprob: -16.750019073486328
    4. 'nou' → logprob: -17.250019073486328
    5. '[new' → logprob: -17.375019073486328
    6. '```' → logprob: -17.375019073486328
    7. '_new' → logprob: -17.625019073486328
    8. '(new' → logprob: -18.000019073486328
    9. ')new' → logprob: -18.250019073486328
    10. '=' → logprob: -18.750019073486328

Token 1510: ' nouvel' (ID: 76298)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00011653638648567721
    2. 'nou' → logprob: -9.500116348266602
    3. ' new' → logprob: -10.250116348266602
    4. 'copy' → logprob: -12.250116348266602
    5. '```' → logprob: -14.500116348266602
    6. ' nouveau' → logprob: -15.375116348266602
    7. '=new' → logprob: -16.0001163482666
    8. 'n' → logprob: -16.1251163482666
    9. '[new' → logprob: -16.2501163482666
    10. ')new' → logprob: -16.5001163482666

Token 1511: ' état' (ID: 59181)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -7.703443770878948e-06
    2. 'dp' → logprob: -12.000007629394531
    3. '_dt' → logprob: -14.875007629394531
    4. '```' → logprob: -15.000007629394531
    5. '_d' → logprob: -15.500007629394531
    6. '_dc' → logprob: -15.750007629394531
    7. '_' → logprob: -16.50000762939453
    8. '_dl' → logprob: -17.37500762939453
    9. '\' → logprob: -17.37500762939453
    10. '	dp' → logprob: -17.50000762939453

Token 1512: ' new' (ID: 620)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00021688752167392522
    2. ' dp' → logprob: -8.750216484069824
    3. '   ' → logprob: -9.750216484069824
    4. '_dp' → logprob: -18.12521743774414
    5. '(dp' → logprob: -18.25021743774414
    6. '	dp' → logprob: -18.25021743774414
    7. '=' → logprob: -19.50021743774414
    8. ' =' → logprob: -19.87521743774414
    9. '```' → logprob: -20.50021743774414
    10. 'DP' → logprob: -21.25021743774414

Token 1513: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -5.512236498361744e-07
    2. 'dp' → logprob: -14.500000953674316
    3. '_' → logprob: -18.625
    4. '_dt' → logprob: -19.125
    5. '_dc' → logprob: -19.5
    6. '	dp' → logprob: -20.125
    7. '_d' → logprob: -20.375
    8. '_pd' → logprob: -20.875
    9. '_df' → logprob: -21.125
    10. '_ds' → logprob: -21.375

Token 1514: ' calcul' (ID: 7559)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001627217628993094
    2. '   ' → logprob: -6.501627445220947
    3. ' dp' → logprob: -9.001626968383789
    4. '	dp' → logprob: -14.376626968383789
    5. '(dp' → logprob: -14.501626968383789
    6. '_dp' → logprob: -15.126626968383789
    7. '=' → logprob: -15.251626968383789
    8. '```' → logprob: -17.37662696838379
    9. '.dp' → logprob: -17.75162696838379
    10. ' =' → logprob: -18.75162696838379

Token 1515: 'é' (ID: 377)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7231265306472778
    2. '_dp' → logprob: -1.0981265306472778
    3. 'é' → logprob: -2.8481264114379883
    4. '[new' → logprob: -3.2231264114379883
    5. 'ée' → logprob: -3.7231264114379883
    6. 'new' → logprob: -4.348126411437988
    7. '=' → logprob: -4.473126411437988
    8. '[:]' → logprob: -4.848126411437988
    9. '(dp' → logprob: -4.973126411437988
    10. '[i' → logprob: -5.848126411437988

Token 1516: ' à' (ID: 1221)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0208759605884552
    2. '=' → logprob: -4.020875930786133
    3. ' dp' → logprob: -6.395875930786133
    4. '   ' → logprob: -7.145875930786133
    5. '	dp' → logprob: -9.270875930786133
    6. '_dp' → logprob: -9.395875930786133
    7. ' =' → logprob: -9.770875930786133
    8. '(dp' → logprob: -10.895875930786133
    9. '.dp' → logprob: -12.520875930786133
    10. '=
' → logprob: -13.020875930786133

Token 1517: ' cette' (ID: 7696)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00918396282941103
    2. 'l' → logprob: -5.259183883666992
    3. 'i' → logprob: -6.884183883666992
    4. ' k' → logprob: -7.259183883666992
    5. 'new' → logprob: -7.384183883666992
    6. '[k' → logprob: -7.384183883666992
    7. 'la' → logprob: -8.009183883666992
    8. 'copy' → logprob: -8.134183883666992
    9. 'index' → logprob: -9.009183883666992
    10. 'indice' → logprob: -10.384183883666992

Token 1518: ' it' (ID: 480)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04810271039605141
    2. '[k' → logprob: -4.423102855682373
    3. 'line' → logprob: -4.673102855682373
    4. 'ligne' → logprob: -5.048102855682373
    5. 'indent' → logprob: -5.548102855682373
    6. '=' → logprob: -6.048102855682373
    7. '+' → logprob: -6.298102855682373
    8. '=k' → logprob: -6.423102855682373
    9. ' k' → logprob: -6.548102855682373
    10. '(k' → logprob: -6.798102855682373

Token 1519: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.002531664213165641
    2. 'er' → logprob: -6.1275315284729
    3. 'ration' → logprob: -9.377532005310059
    4. 'érations' → logprob: -10.377532005310059
    5. 'é' → logprob: -10.502532005310059
    6. '+' → logprob: -10.627532005310059
    7. '#' → logprob: -11.002532005310059
    8. '   ' → logprob: -11.002532005310059
    9. 'égr' → logprob: -11.002532005310059
    10. 'ér' → logprob: -11.127532005310059

Token 1520: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0010076811304315925
    2. '   ' → logprob: -7.001007556915283
    3. ' dp' → logprob: -9.251008033752441
    4. '	dp' → logprob: -17.001007080078125
    5. '(dp' → logprob: -17.251007080078125
    6. '_dp' → logprob: -19.376007080078125
    7. '  ' → logprob: -22.126007080078125
    8. '```' → logprob: -22.251007080078125
    9. ' ' → logprob: -22.376007080078125
    10. '    
' → logprob: -22.376007080078125

Token 1521: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011171138845384121
    2. '   ' → logprob: -4.511171340942383
    3. ' dp' → logprob: -9.011171340942383
    4. '	dp' → logprob: -13.886171340942383
    5. '(dp' → logprob: -15.136171340942383
    6. '_dp' → logprob: -16.511171340942383
    7. '.dp' → logprob: -18.886171340942383
    8. 'DP' → logprob: -20.136171340942383
    9. '=' → logprob: -20.386171340942383
    10. '```' → logprob: -20.636171340942383

Token 1522: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.8624639324116288e-06
    2. ' dp' → logprob: -13.500001907348633
    3. '   ' → logprob: -14.750001907348633
    4. 'new' → logprob: -20.375001907348633
    5. '	dp' → logprob: -20.625001907348633
    6. '```' → logprob: -23.625001907348633
    7. '(dp' → logprob: -23.750001907348633
    8. '_dp' → logprob: -24.375001907348633
    9. 'dc' → logprob: -25.000001907348633
    10. 'dpi' → logprob: -25.500001907348633

Token 1523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003806257154792547
    2. ' =' → logprob: -7.875380516052246
    3. '[:]' → logprob: -15.000380516052246
    4. ',' → logprob: -16.125381469726562
    5. '.=' → logprob: -16.750381469726562
    6. '[' → logprob: -17.375381469726562
    7. '＝' → logprob: -18.000381469726562
    8. '=new' → logprob: -18.625381469726562
    9. '=}' → logprob: -18.750381469726562
    10. '=

' → logprob: -19.250381469726562

Token 1524: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -2.15310683415737e-05
    2. ' new' → logprob: -10.750021934509277
    3. '[new' → logprob: -19.50002098083496
    4. 'dp' → logprob: -21.00002098083496
    5. 'New' → logprob: -21.25002098083496
    6. '_new' → logprob: -22.00002098083496
    7. '   ' → logprob: -22.12502098083496
    8. '(new' → logprob: -22.37502098083496
    9. '新' → logprob: -22.62502098083496
    10. '[' → logprob: -22.87502098083496

Token 1525: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -7.896309739408025e-07
    2. 'dp' → logprob: -14.125000953674316
    3. '	dp' → logprob: -18.875
    4. '_dt' → logprob: -20.0
    5. '_pd' → logprob: -20.5
    6. '_dc' → logprob: -20.5
    7. '_DP' → logprob: -20.875
    8. '_df' → logprob: -21.375
    9. '.dp' → logprob: -21.75
    10. '_py' → logprob: -21.75

Token 1526: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1527: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020070301834493876
    2. 'result' → logprob: -6.252007007598877
    3. 'answer' → logprob: -10.127007484436035
    4. '#' → logprob: -11.377007484436035
    5. 'r' → logprob: -11.502007484436035
    6. 'res' → logprob: -12.127007484436035
    7. 'ans' → logprob: -12.252007484436035
    8. 'pr' → logprob: -12.627007484436035
    9. 'total' → logprob: -13.627007484436035
    10. 'p' → logprob: -14.377007484436035

Token 1528: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019460011390037835
    2. 'result' → logprob: -8.625194549560547
    3. 'answer' → logprob: -12.000194549560547
    4. '#' → logprob: -12.375194549560547
    5. 'ans' → logprob: -12.625194549560547
    6. 'res' → logprob: -13.875194549560547
    7. '#print' → logprob: -15.750194549560547
    8. 'rés' → logprob: -15.875194549560547
    9. 'r' → logprob: -16.250194549560547
    10. '```' → logprob: -17.125194549560547

Token 1529: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.5147238969802856
    2. 'ich' → logprob: -1.3897238969802856
    3. 'iche' → logprob: -2.139723777770996
    4. 'icher' → logprob: -3.889723777770996
    5. 'print' → logprob: -4.764723777770996
    6. '#' → logprob: -5.264723777770996
    7. '```' → logprob: -7.889723777770996
    8. '#print' → logprob: -8.514723777770996
    9. 'iché' → logprob: -8.639723777770996
    10. 'ic' → logprob: -9.139723777770996

Token 1530: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.8889261304575484e-06
    2. '(print' → logprob: -12.500003814697266
    3. '```' → logprob: -16.125003814697266
    4. ' print' → logprob: -17.375003814697266
    5. '(' → logprob: -20.375003814697266
    6. '#print' → logprob: -20.500003814697266
    7. 'pr' → logprob: -20.625003814697266
    8. '   ' → logprob: -20.625003814697266
    9. '``' → logprob: -20.625003814697266
    10. 'prin' → logprob: -21.125003814697266

Token 1531: ' dernier' (ID: 27982)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4131320118904114
    2. 'dp' → logprob: -1.1631319522857666
    3. '(dp' → logprob: -3.6631319522857666
    4. 'sum' → logprob: -8.538131713867188
    5. 'max' → logprob: -10.288131713867188
    6. 'result' → logprob: -11.413131713867188
    7. '(print' → logprob: -11.663131713867188
    8. '(max' → logprob: -11.913131713867188
    9. '(sum' → logprob: -12.038131713867188
    10. ' dp' → logprob: -13.788131713867188

Token 1532: ' élément' (ID: 99627)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1911115199327469
    2. '(dp' → logprob: -2.1911115646362305
    3. 'result' → logprob: -3.4411115646362305
    4. 'dp' → logprob: -3.5661115646362305
    5. 'rés' → logprob: -7.3161115646362305
    6. '```' → logprob: -8.06611156463623
    7. ')' → logprob: -8.44111156463623
    8. 'res' → logprob: -8.94111156463623
    9. ' résultat' → logprob: -9.19111156463623
    10. '(' → logprob: -9.31611156463623

Token 1533: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023991975467652082
    2. '(print' → logprob: -6.50239896774292
    3. '```' → logprob: -7.75239896774292
    4. '(dp' → logprob: -8.002399444580078
    5. 'dp' → logprob: -9.252399444580078
    6. ' print' → logprob: -11.377399444580078
    7. '``' → logprob: -12.127399444580078
    8. '`' → logprob: -12.252399444580078
    9. '[' → logprob: -12.377399444580078
    10. '.print' → logprob: -12.752399444580078

Token 1534: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -7.958325295476243e-05
    2. '(dp' → logprob: -9.750079154968262
    3. 'print' → logprob: -10.875079154968262
    4. ' dp' → logprob: -13.000079154968262
    5. 'la' → logprob: -17.000080108642578
    6. '```' → logprob: -17.250080108642578
    7. 'd' → logprob: -18.750080108642578
    8. 'new' → logprob: -19.125080108642578
    9. '``' → logprob: -19.375080108642578
    10. 'DP' → logprob: -19.750080108642578

Token 1535: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.000000953674316
    3. '``' → logprob: -17.5
    4. ' print' → logprob: -17.625
    5. '
' → logprob: -18.375
    6. '(print' → logprob: -22.0
    7. '.print' → logprob: -22.125
    8. '`
' → logprob: -22.125
    9. '#print' → logprob: -22.75
    10. 'for' → logprob: -23.75

Token 1536: 'dp' (ID: 19037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.061054359131958e-06
    2. 'dp' → logprob: -11.750007629394531
    3. ' print' → logprob: -15.750007629394531
    4. '```' → logprob: -20.75000762939453
    5. 'printf' → logprob: -22.87500762939453
    6. '#print' → logprob: -23.12500762939453
    7. '(print' → logprob: -23.12500762939453
    8. '``' → logprob: -23.50000762939453
    9. 'result' → logprob: -23.75000762939453
    10. '   ' → logprob: -23.87500762939453

Token 1537: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00862213596701622
    2. '[n' → logprob: -4.758622169494629
    3. '[' → logprob: -11.883622169494629
    4. '```' → logprob: -15.508622169494629
    5. '[N' → logprob: -16.508621215820312
    6. '[k' → logprob: -16.758621215820312
    7. '[len' → logprob: -16.883621215820312
    8. 'n' → logprob: -17.008621215820312
    9. '
' → logprob: -17.133621215820312
    10. ' [-' → logprob: -17.133621215820312

Token 1538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '])' → logprob: -14.125000953674316
    3. '-' → logprob: -18.25
    4. ' ' → logprob: -18.625
    5. '])
' → logprob: -19.25
    6. '(' → logprob: -19.375
    7. '
' → logprob: -19.75
    8. '```' → logprob: -20.0
    9. ']' → logprob: -20.375
    10. '   ' → logprob: -21.125

Token 1539: ']),' (ID: 19560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.000570667558349669
    2. ')' → logprob: -7.875570774078369
    3. ']' → logprob: -9.000570297241211
    4. '])
' → logprob: -10.375570297241211
    5. ' ])' → logprob: -10.625570297241211
    6. ')])' → logprob: -12.000570297241211
    7. ']))' → logprob: -13.875570297241211
    8. ']%' → logprob: -13.875570297241211
    9. '))' → logprob: -14.125570297241211
    10. '%' → logprob: -14.750570297241211

Token 1540: ' qui' (ID: 2780)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4747684597969055
    2. 'dp' → logprob: -0.9747684597969055
    3. 'end' → logprob: -8.09976863861084
    4. ' dp' → logprob: -8.09976863861084
    5. 'file' → logprob: -10.22476863861084
    6. 'flush' → logprob: -11.22476863861084
    7. ' print' → logprob: -11.72476863861084
    8. '```' → logprob: -11.84976863861084
    9. '
' → logprob: -12.59976863861084
    10. ')' → logprob: -12.84976863861084

Token 1541: ' représente' (ID: 88912)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2424249649047852
    2. 'print' → logprob: -1.3674249649047852
    3. '```' → logprob: -1.9924249649047852
    4. '=' → logprob: -2.242424964904785
    5. 'est' → logprob: -2.242424964904785
    6. 'rep' → logprob: -3.242424964904785
    7. ' représente' → logprob: -3.867424964904785
    8. ' =' → logprob: -4.742424964904785
    9. '%=' → logprob: -5.242424964904785
    10. '%' → logprob: -5.617424964904785

Token 1542: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0012032082304358482
    2. 'la' → logprob: -6.7512030601501465
    3. 'le' → logprob: -11.251203536987305
    4. 'print' → logprob: -11.376203536987305
    5. ' dp' → logprob: -12.751203536987305
    6. '(dp' → logprob: -12.751203536987305
    7. 'result' → logprob: -13.251203536987305
    8. 'len' → logprob: -15.251203536987305
    9. '#' → logprob: -15.626203536987305
    10. 'l' → logprob: -15.626203536987305

Token 1543: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22840142250061035
    2. 'dp' → logprob: -1.9784014225006104
    3. 'result' → logprob: -2.7284014225006104
    4. 'rés' → logprob: -8.728401184082031
    5. 'sum' → logprob: -8.853401184082031
    6. 'res' → logprob: -9.478401184082031
    7. 'answer' → logprob: -10.103401184082031
    8. 'final' → logprob: -10.228401184082031
    9. '#' → logprob: -10.603401184082031
    10. 'ans' → logprob: -10.728401184082031

Token 1544: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000586991140153259
    2. '```' → logprob: -8.375587463378906
    3. ')' → logprob: -8.875587463378906
    4. '()
' → logprob: -9.375587463378906
    5. ')
' → logprob: -9.750587463378906
    6. '
' → logprob: -10.250587463378906
    7. '(print' → logprob: -11.250587463378906
    8. '()' → logprob: -11.750587463378906
    9. '``' → logprob: -11.750587463378906
    10. '(' → logprob: -13.125587463378906

Token 1545: ' recher' (ID: 19259)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.2020991056924686e-05
    2. '```' → logprob: -10.625032424926758
    3. ')' → logprob: -12.875032424926758
    4. '(print' → logprob: -13.000032424926758
    5. '(' → logprob: -13.875032424926758
    6. ' print' → logprob: -14.875032424926758
    7. '``' → logprob: -15.000032424926758
    8. '()' → logprob: -15.250032424926758
    9. ')
' → logprob: -15.250032424926758
    10. '()
' → logprob: -15.250032424926758

Token 1546: 'ché' (ID: 27299)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.8108765482902527
    2. 'int' → logprob: -1.0608766078948975
    3. 'ut' → logprob: -2.1858766078948975
    4. 'nt' → logprob: -3.3108766078948975
    5. 'print' → logprob: -4.060876369476318
    6. ')' → logprob: -4.810876369476318
    7. 'er' → logprob: -4.935876369476318
    8. 'ultat' → logprob: -5.185876369476318
    9. 'é' → logprob: -5.560876369476318
    10. 'u' → logprob: -5.685876369476318

Token 1547: ' après' (ID: 16460)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018685187387745827
    2. '```' → logprob: -8.750186920166016
    3. '(print' → logprob: -11.500186920166016
    4. '``' → logprob: -12.000186920166016
    5. ' print' → logprob: -12.375186920166016
    6. ')
' → logprob: -12.750186920166016
    7. ')' → logprob: -13.500186920166016
    8. '(' → logprob: -13.750186920166016
    9. '(
' → logprob: -13.875186920166016
    10. '
' → logprob: -14.500186920166016

Token 1548: ' toutes' (ID: 17502)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007681157439947128
    2. 'n' → logprob: -5.007681369781494
    3. ' n' → logprob: -8.257680892944336
    4. '#' → logprob: -8.382680892944336
    5. 'dp' → logprob: -9.007680892944336
    6. 'calcul' → logprob: -9.007680892944336
    7. ' print' → logprob: -9.757680892944336
    8. '```' → logprob: -10.007680892944336
    9. 'len' → logprob: -10.257680892944336
    10. 'la' → logprob: -11.132680892944336

Token 1549: ' les' (ID: 1341)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.2263694703578949
    2. 'iterations' → logprob: -2.4763693809509277
    3. 'for' → logprob: -3.3513693809509277
    4. 'it' → logprob: -3.6013693809509277
    5. 'les' → logprob: -3.8513693809509277
    6. 'n' → logprob: -4.601369380950928
    7. '#' → logprob: -5.351369380950928
    8. 'bou' → logprob: -5.476369380950928
    9. 'la' → logprob: -5.601369380950928
    10. '```' → logprob: -5.976369380950928

Token 1550: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.42426738142967224
    2. 'iterations' → logprob: -1.6742674112319946
    3. 'calcul' → logprob: -2.299267292022705
    4. 'bou' → logprob: -3.049267292022705
    5. 'print' → logprob: -5.549267292022705
    6. 'for' → logprob: -5.799267292022705
    7. '#' → logprob: -6.924267292022705
    8. 'iter' → logprob: -7.799267292022705
    9. 'k' → logprob: -8.049267768859863
    10. 'ét' → logprob: -8.174267768859863

Token 1551: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.010641809552907944
    2. 'rés' → logprob: -5.635641574859619
    3. 't' → logprob: -6.010641574859619
    4. 'r' → logprob: -6.260641574859619
    5. 'ractions' → logprob: -7.010641574859619
    6. 'ter' → logprob: -7.135641574859619
    7. 'tr' → logprob: -8.760642051696777
    8. 'érés' → logprob: -8.885642051696777
    9. 'ré' → logprob: -9.385642051696777
    10. 're' → logprob: -9.760642051696777

Token 1552: '/pr' (ID: 73559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7385154428193346e-05
    2. '```' → logprob: -10.25003719329834
    3. '
' → logprob: -13.75003719329834
    4. '``' → logprob: -14.50003719329834
    5. ' print' → logprob: -15.25003719329834
    6. ')
' → logprob: -16.250038146972656
    7. '(print' → logprob: -17.875038146972656
    8. '`
' → logprob: -18.875038146972656
    9. ')' → logprob: -19.750038146972656
    10. '.print' → logprob: -19.875038146972656

Token 1553: 'ix' (ID: 1128)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5737703442573547
    2. 'ints' → logprob: -1.82377028465271
    3. 'éc' → logprob: -1.82377028465271
    4. 'oc' → logprob: -2.69877028465271
    5. 'ec' → logprob: -4.448770523071289
    6. 'intes' → logprob: -4.698770523071289
    7. 'é' → logprob: -4.948770523071289
    8. 'in' → logprob: -5.198770523071289
    9. 'oces' → logprob: -6.198770523071289
    10. '#' → logprob: -6.573770523071289

Token 1554: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16005389392375946
    2. '()' → logprob: -2.4100539684295654
    3. '()
' → logprob: -2.9100539684295654
    4. 'int' → logprob: -6.285053730010986
    5. '(print' → logprob: -7.410053730010986
    6. ')' → logprob: -7.535053730010986
    7. '(' → logprob: -9.160054206848145
    8. 'nt' → logprob: -9.160054206848145
    9. '
' → logprob: -9.410054206848145
    10. '```' → logprob: -10.035054206848145

Token 1555: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.0
    3. ' print' → logprob: -16.75
    4. '``' → logprob: -19.0
    5. '(print' → logprob: -19.875
    6. '
' → logprob: -21.25
    7. 'pr' → logprob: -23.375
    8. '	print' → logprob: -24.0
    9. '#print' → logprob: -24.125
    10. 'println' → logprob: -24.25

Token 1556: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.491498531133402e-06
    2. 'dp' → logprob: -11.625009536743164
    3. '(' → logprob: -14.500009536743164
    4. '((' → logprob: -18.250009536743164
    5. ' (' → logprob: -18.750009536743164
    6. ' dp' → logprob: -18.875009536743164
    7. '(df' → logprob: -18.875009536743164
    8. '()' → logprob: -19.000009536743164
    9. '	dp' → logprob: -19.125009536743164
    10. '(
' → logprob: -19.375009536743164

Token 1557: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -6.704273118884885e-07
    2. '-' → logprob: -14.750000953674316
    3. '[' → logprob: -15.250000953674316
    4. '][-' → logprob: -17.125
    5. ')' → logprob: -18.0
    6. ' [-' → logprob: -18.375
    7. '[n' → logprob: -18.5
    8. '   ' → logprob: -19.75
    9. '(-' → logprob: -20.75
    10. '```' → logprob: -21.0

Token 1558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '
' → logprob: -19.625
    4. '```' → logprob: -20.5
    5. '   ' → logprob: -21.25
    6. '１' → logprob: -21.625
    7. '-' → logprob: -21.625
    8. ']' → logprob: -22.0625
    9. '])' → logprob: -22.0625
    10. '`' → logprob: -22.1875

Token 1559: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.625000953674316
    3. ')`' → logprob: -16.25
    4. '))' → logprob: -16.5
    5. '})' → logprob: -16.5
    6. ')
' → logprob: -17.25
    7. '%)' → logprob: -17.375
    8. '%' → logprob: -17.75
    9. ')}' → logprob: -17.75
    10. '])' → logprob: -17.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1557
Tokens correctement prédits (1ère position, stricte): 350
Tokens correctement prédits (1ère position, avec adaptation): 370
Tokens correctement prédits (top 10): 856
Précision stricte (1ère position): 22.48%
Précision adaptée (1ère position): 23.76%
Précision (top 10): 54.98%
================================================================================
