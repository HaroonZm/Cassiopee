================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import re

S = input()

_result = re.sub('[a-z]', 'x', S)
print(_result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' re' (ID: 322)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'S' (ID: 50)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46488887071609497
    2. '\n' → logprob: -2.21488881111145
    3. '\b' → logprob: -2.21488881111145
    4. '[a' → logprob: -3.46488881111145
    5. '.' → logprob: -4.089889049530029
    6. 'g' → logprob: -4.464889049530029
    7. 'import' → logprob: -4.464889049530029
    8. '[^' → logprob: -4.714889049530029
    9. '```' → logprob: -4.714889049530029
    10. '\' → logprob: -4.839889049530029

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2651654779911041
    2. ' =' → logprob: -2.2651655673980713
    3. '=' → logprob: -3.3901655673980713
    4. 'tring' → logprob: -3.7651655673980713
    5. ')' → logprob: -4.515165328979492
    6. '[' → logprob: -4.640165328979492
    7. 'T' → logprob: -5.140165328979492
    8. ',' → logprob: -5.265165328979492
    9. 't' → logprob: -5.390165328979492
    10. 'tr' → logprob: -5.515165328979492

Token 5: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6568082571029663
    2. ''' → logprob: -0.7818082571029663
    3. 'r' → logprob: -4.531808376312256
    4. ' '' → logprob: -4.906808376312256
    5. ' "' → logprob: -5.406808376312256
    6. ' ' → logprob: -7.906808376312256
    7. ''r' → logprob: -8.031807899475098
    8. ' r' → logprob: -9.031807899475098
    9. '"""' → logprob: -9.031807899475098
    10. '`' → logprob: -10.031807899475098

Token 6: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008659643935970962
    2. '('' → logprob: -8.250865936279297
    3. '(
' → logprob: -8.750865936279297
    4. ''' → logprob: -9.125865936279297
    5. ')' → logprob: -9.375865936279297
    6. '("("' → logprob: -9.625865936279297
    7. '"' → logprob: -9.875865936279297
    8. '`' → logprob: -10.125865936279297
    9. ' (' → logprob: -10.750865936279297
    10. '```' → logprob: -10.875865936279297

Token 7: '_result' (ID: 11623)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9034581184387207
    2. 'if' → logprob: -1.4034581184387207
    3. 'pattern' → logprob: -1.9034581184387207
    4. 'print' → logprob: -2.9034581184387207
    5. 'r' → logprob: -3.1534581184387207
    6. 'm' → logprob: -3.7784581184387207
    7. 'match' → logprob: -4.153458118438721
    8. 're' → logprob: -4.278458118438721
    9. 'result' → logprob: -4.403458118438721
    10. '=' → logprob: -4.653458118438721

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2686227560043335
    2. '=' → logprob: -1.6436227560043335
    3. '_' → logprob: -3.393622875213623
    4. ')' → logprob: -5.393622875213623
    5. '.' → logprob: -5.768622875213623
    6. 's' → logprob: -8.393622398376465
    7. '[' → logprob: -8.893622398376465
    8. '_match' → logprob: -9.018622398376465
    9. '(' → logprob: -9.268622398376465
    10. ' ' → logprob: -9.393622398376465

Token 9: ' re' (ID: 322)
  Prédit: ' re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.3485111594200134
    2. 're' → logprob: -1.2235112190246582
    3. '_re' → logprob: -10.4735107421875
    4. ' []' → logprob: -11.3485107421875
    5. '[]' → logprob: -11.8485107421875
    6. '_' → logprob: -11.9735107421875
    7. '(re' → logprob: -13.0985107421875
    8. 'r' → logprob: -13.3485107421875
    9. ' ' → logprob: -13.4735107421875
    10. 'bool' → logprob: -13.8485107421875

Token 10: '.sub' (ID: 7619)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4284367859363556
    2. '.findall' → logprob: -1.1784367561340332
    3. '.match' → logprob: -3.678436756134033
    4. '.search' → logprob: -4.553436756134033
    5. '.compile' → logprob: -5.678436756134033
    6. '.find' → logprob: -7.428436756134033
    7. '\.' → logprob: -8.178437232971191
    8. '.full' → logprob: -8.428437232971191
    9. '.sub' → logprob: -9.178437232971191
    10. '.split' → logprob: -9.803437232971191

Token 11: '('[' (ID: 43265)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.023527180776000023
    2. '(' → logprob: -3.773527145385742
    3. '('' → logprob: -8.773527145385742
    4. '('\' → logprob: -10.023527145385742
    5. '\(' → logprob: -10.148527145385742
    6. '(pattern' → logprob: -11.898527145385742
    7. '\' → logprob: -12.273527145385742
    8. '("("' → logprob: -12.398527145385742
    9. '("\' → logprob: -12.523527145385742
    10. '(\' → logprob: -12.648527145385742

Token 12: 'a' (ID: 64)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -1.0001589059829712
    2. '^\' → logprob: -1.5001589059829712
    3. 'ae' → logprob: -1.8751589059829712
    4. '0' → logprob: -2.2501587867736816
    5. '\s' → logprob: -3.3751587867736816
    6. 'a' → logprob: -3.7501587867736816
    7. '\' → logprob: -3.8751587867736816
    8. '\d' → logprob: -4.375158786773682
    9. 'A' → logprob: -4.750158786773682
    10. ' \' → logprob: -5.000158786773682

Token 13: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.010368719696998596
    2. '-Za' → logprob: -5.510368824005127
    3. '-Z' → logprob: -5.635368824005127
    4. '-' → logprob: -6.510368824005127
    5. '0' → logprob: -7.885368824005127
    6. 'z' → logprob: -8.385368347167969
    7. 'A' → logprob: -9.135368347167969
    8. 'b' → logprob: -9.385368347167969
    9. '-e' → logprob: -9.760368347167969
    10. 'e' → logprob: -9.760368347167969

Token 14: ']',' (ID: 66429)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8094075918197632
    2. ']' → logprob: -1.1844075918197632
    3. ']',' → logprob: -1.5594075918197632
    4. ']+' → logprob: -4.184407711029053
    5. '']' → logprob: -4.809407711029053
    6. '0' → logprob: -4.934407711029053
    7. ']'' → logprob: -6.684407711029053
    8. 'a' → logprob: -6.809407711029053
    9. '-A' → logprob: -7.059407711029053
    10. 'z' → logprob: -7.309407711029053

Token 15: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9830365777015686
    2. ' '')' → logprob: -1.8580365180969238
    3. ' '' → logprob: -2.108036518096924
    4. '''' → logprob: -2.233036518096924
    5. ' ''' → logprob: -2.733036518096924
    6. ''*' → logprob: -2.733036518096924
    7. ''',' → logprob: -2.983036518096924
    8. ''A' → logprob: -3.983036518096924
    9. ' '',' → logprob: -5.108036518096924
    10. ' lambda' → logprob: -5.233036518096924

Token 16: 'x' (ID: 87)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2250988483428955
    2. ''*' → logprob: -2.9750988483428955
    3. '*' → logprob: -3.3500988483428955
    4. 'A' → logprob: -3.6000988483428955
    5. '_' → logprob: -3.9750988483428955
    6. ''A' → logprob: -3.9750988483428955
    7. '''' → logprob: -4.475098609924316
    8. '#' → logprob: -4.975098609924316
    9. ''',' → logprob: -4.975098609924316
    10. '')' → logprob: -5.225098609924316

Token 17: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.04373932257294655
    2. ''' → logprob: -3.5437393188476562
    3. '')' → logprob: -4.793739318847656
    4. ')',' → logprob: -5.543739318847656
    5. ']',' → logprob: -6.918739318847656
    6. ')' → logprob: -8.043739318847656
    7. 'a' → logprob: -9.168739318847656
    8. ']' → logprob: -9.543739318847656
    9. '']' → logprob: -10.043739318847656
    10. 'x' → logprob: -10.668739318847656

Token 18: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00977875292301178
    2. ' S' → logprob: -4.63477897644043
    3. ')' → logprob: -11.88477897644043
    4. ' ' → logprob: -12.00977897644043
    5. '   ' → logprob: -12.38477897644043
    6. '_S' → logprob: -13.00977897644043
    7. '  ' → logprob: -13.50977897644043
    8. '_' → logprob: -14.63477897644043
    9. ''S' → logprob: -14.75977897644043
    10. ' ' → logprob: -16.00977897644043

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. '))' → logprob: -13.125004768371582
    3. ')`' → logprob: -13.875004768371582
    4. '')' → logprob: -14.875004768371582
    5. '`)' → logprob: -14.875004768371582
    6. ' )' → logprob: -15.375004768371582
    7. ')
' → logprob: -15.750004768371582
    8. '),' → logprob: -16.625003814697266
    9. ',' → logprob: -17.125003814697266
    10. ')))' → logprob: -17.125003814697266

Token 20: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2916169762611389
    2. ')' → logprob: -1.4166169166564941
    3. '_' → logprob: -5.166616916656494
    4. '<|end|>' → logprob: -6.791616916656494
    5. '#' → logprob: -7.166616916656494
    6. '```' → logprob: -7.166616916656494
    7. '_print' → logprob: -7.541616916656494
    8. '
' → logprob: -8.291617393493652
    9. '_p' → logprob: -8.291617393493652
    10. '.' → logprob: -9.291617393493652

Token 21: '(_' (ID: 4963)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0901212990283966
    2. '(_' → logprob: -2.465121269226074
    3. '(_)' → logprob: -7.090121269226074
    4. '('' → logprob: -9.340121269226074
    5. '("("' → logprob: -9.340121269226074
    6. '(.' → logprob: -9.715121269226074
    7. '('_' → logprob: -11.090121269226074
    8. '(__' → logprob: -11.215121269226074
    9. '()' → logprob: -11.215121269226074
    10. '(`' → logprob: -11.465121269226074

Token 22: 'result' (ID: 2521)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.981667537620524e-06
    2. 'result' → logprob: -13.375001907348633
    3. '_r' → logprob: -16.125001907348633
    4. '_re' → logprob: -16.375001907348633
    5. '_res' → logprob: -16.625001907348633
    6. '_' → logprob: -17.625001907348633
    7. '_results' → logprob: -17.875001907348633
    8. ' _' → logprob: -18.625001907348633
    9. '_RESULT' → logprob: -19.250001907348633
    10. '_value' → logprob: -20.500001907348633

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. '))' → logprob: -12.125006675720215
    3. '`)' → logprob: -15.125006675720215
    4. '')' → logprob: -15.250006675720215
    5. ' )' → logprob: -15.250006675720215
    6. ')`' → logprob: -15.250006675720215
    7. '})' → logprob: -18.1250057220459
    8. ')
' → logprob: -18.2500057220459
    9. ')))' → logprob: -18.3750057220459
    10. ')}' → logprob: -18.5000057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 21
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 15
Précision stricte (1ère position): 28.57%
Précision adaptée (1ère position): 28.57%
Précision (top 10): 71.43%
================================================================================
