================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

# pas la meilleure présentation pour une fonction, mais bon...
def gcd(a, b):
    # Algo d'Euclide pdt que b != 0 (je crois que c'est ça)
    while b:
        a, b = b, a % b
    return a

N = int(input())
S = 0  # S ~ somme des deltas où b > a
Y = []  # va servir à stocker des paires

# On lit chaque ligne et on remplit Y et S
for i in range(N):
    a_str, b_str = input().split()
    a, b = int(a_str), int(b_str)
    if b > a:
        S += b - a
        Y.append((b, b))   # b, b ici, c'est ce qu'il faut d'après idée originale
    else:
        Y.append((a, b))

Y = sorted(Y) # un tri sur les tuples (étrange, mais on fait comme original)
YY = [0] * (N + 1)
for i in range(N):
    YY[i + 1] = YY[i] + Y[i][0]

# Aucune idée pour le nom de f, mais bon...
def f(i, n):
    # Je crois que c'est censé être comme une sorte de "slack"
    # Pas sûr pour la soustraction chelou mais je recopie
    return S - Y[i][0] + Y[i][1] - (YY[n] if n <= i else YY[n+1] - Y[i][0])

# Maximize "ma1/ma2" (fraction or something)
ma1 = 0
ma2 = 1

for i in range(N):
    l = 0
    r = N
    # Boucle un peu bizarre (?!) pour faire je crois une recherche binaire
    while r - l > 1:
        m = (l + r) // 2
        if f(i, m) >= 0:
            l = m
        else:
            r = m
    # Calcul chelou, mais c'est comme ça que ça tourne
    # Pas sur que min soit vraiment utile mais c'est là
    a = l * Y[i][1] + min(f(i, l), Y[i][1])
    b = N * Y[i][1]
    if a * ma2 > b * ma1:
        ma1, ma2 = a, b

# On simplifie la fraction (si jamais ils avaient un pgcd), normal ici
g = gcd(ma1, ma2)
print(ma1 // g, ma2 // g)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026315422728657722
    2. '.' → logprob: -6.252631664276123
    3. '(
' → logprob: -7.627631664276123
    4. '()' → logprob: -10.002631187438965
    5. ')' → logprob: -10.377631187438965
    6. ' (' → logprob: -10.377631187438965
    7. '(

' → logprob: -10.877631187438965
    8. '```' → logprob: -11.002631187438965
    9. '=' → logprob: -11.377631187438965
    10. '[' → logprob: -11.627631187438965

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06210717186331749
    2. 'sys' → logprob: -2.8121070861816406
    3. ' input' → logprob: -9.31210708618164
    4. 'input' → logprob: -10.06210708618164
    5. '	sys' → logprob: -12.93710708618164
    6. '=sys' → logprob: -13.18710708618164
    7. ' ' → logprob: -13.68710708618164
    8. '(sys' → logprob: -13.93710708618164
    9. ' system' → logprob: -16.18710708618164
    10. ' lambda' → logprob: -16.68710708618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010973773896694183
    2. ' .' → logprob: -4.885973930358887
    3. '.stdin' → logprob: -6.010973930358887
    4. '.import' → logprob: -7.885973930358887
    5. '.readline' → logprob: -8.885973930358887
    6. '.argv' → logprob: -9.135973930358887
    7. '.input' → logprob: -9.885973930358887
    8. '.stdout' → logprob: -10.135973930358887
    9. '.
' → logprob: -10.635973930358887
    10. '.exit' → logprob: -10.760973930358887

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4009254276752472
    2. '.' → logprob: -1.1509253978729248
    3. '.read' → logprob: -4.275925636291504
    4. '.readlines' → logprob: -10.650925636291504
    5. '.Read' → logprob: -11.400925636291504
    6. '```' → logprob: -12.150925636291504
    7. 'read' → logprob: -12.900925636291504
    8. '.​' → logprob: -13.275925636291504
    9. '.write' → logprob: -13.400925636291504
    10. '.

' → logprob: -13.650925636291504

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1419765055179596
    2. '(' → logprob: -2.2669765949249268
    3. '()
' → logprob: -4.266976356506348
    4. '(
' → logprob: -4.766976356506348
    5. '().' → logprob: -6.516976356506348
    6. '
' → logprob: -6.516976356506348
    7. '()\' → logprob: -7.016976356506348
    8. '()

' → logprob: -7.391976356506348
    9. '\' → logprob: -7.516976356506348
    10. '\n' → logprob: -7.641976356506348

Token 9: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01860499195754528
    2. '(' → logprob: -4.018604755401611
    3. '()
' → logprob: -8.89360523223877
    4. '().' → logprob: -9.26860523223877
    5. 'def' → logprob: -9.89360523223877
    6. '()

' → logprob: -9.89360523223877
    7. '(
' → logprob: -10.39360523223877
    8. '()\' → logprob: -10.39360523223877
    9. '())' → logprob: -11.76860523223877
    10. ')' → logprob: -12.26860523223877

Token 10: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014156579039990902
    2. ' #' → logprob: -5.639156341552734
    3. '#' → logprob: -6.014156341552734
    4. 's' → logprob: -6.389156341552734
    5. 'i' → logprob: -6.764156341552734
    6. 'a' → logprob: -6.764156341552734
    7. 'd' → logprob: -6.764156341552734
    8. 'n' → logprob: -8.014156341552734
    9. 'def' → logprob: -8.389156341552734
    10. 't' → logprob: -8.764156341552734

Token 11: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00976293720304966
    2. 'sw' → logprob: -5.134762763977051
    3. 'sage' → logprob: -6.634762763977051
    4. 'sl' → logprob: -7.634762763977051
    5. 'sing' → logprob: -8.00976276397705
    6. 'swap' → logprob: -8.00976276397705
    7. 'salt' → logprob: -8.38476276397705
    8. 'sal' → logprob: -8.75976276397705
    9. 'sport' → logprob: -9.00976276397705
    10. 'cal' → logprob: -9.13476276397705

Token 12: ' meilleure' (ID: 52387)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3756726384162903
    2. '#' → logprob: -1.6256725788116455
    3. '()' → logprob: -3.0006725788116455
    4. ')' → logprob: -3.3756725788116455
    5. ' ' → logprob: -5.125672817230225
    6. '(
' → logprob: -5.250672817230225
    7. 'def' → logprob: -5.500672817230225
    8. '=' → logprob: -5.500672817230225
    9. ':' → logprob: -5.875672817230225
    10. ',' → logprob: -6.125672817230225

Token 13: ' présentation' (ID: 88638)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24125288426876068
    2. ' 
' → logprob: -2.491252899169922
    3. '_' → logprob: -2.866252899169922
    4. '  
' → logprob: -2.991252899169922
    5. ' 

' → logprob: -4.366252899169922
    6. '\' → logprob: -5.491252899169922
    7. ' 
 
' → logprob: -6.866252899169922
    8. '   
' → logprob: -6.991252899169922
    9. '  

' → logprob: -7.241252899169922
    10. '  ' → logprob: -7.491252899169922

Token 14: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3756606876850128
    2. ' ' → logprob: -2.2506606578826904
    3. '\' → logprob: -3.1256606578826904
    4. ',' → logprob: -3.1256606578826904
    5. 'def' → logprob: -3.1256606578826904
    6. '\n' → logprob: -3.6256606578826904
    7. 'print' → logprob: -4.5006608963012695
    8. 'for' → logprob: -5.2506608963012695
    9. ' 
' → logprob: -5.3756608963012695
    10. '.' → logprob: -5.5006608963012695

Token 15: ' une' (ID: 2463)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.454182505607605
    2. ' la' → logprob: -1.579182505607605
    3. 'la' → logprob: -1.954182505607605
    4. ' le' → logprob: -2.5791826248168945
    5. ' les' → logprob: -2.8291826248168945
    6. ' un' → logprob: -2.9541826248168945
    7. ' l' → logprob: -3.2041826248168945
    8. 'les' → logprob: -3.3291826248168945
    9. ' une' → logprob: -3.5791826248168945
    10. 'une' → logprob: -3.7041826248168945

Token 16: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.8572341799736023
    2. ' phrase' → logprob: -2.357234239578247
    3. 'ligne' → logprob: -2.607234239578247
    4. ' fonction' → logprob: -2.607234239578247
    5. 'liste' → logprob: -3.357234239578247
    6. 'lecture' → logprob: -3.357234239578247
    7. ' ligne' → logprob: -3.357234239578247
    8. 'phrase' → logprob: -3.732234239578247
    9. 'entrée' → logprob: -3.732234239578247
    10. 'chaine' → logprob: -4.107234001159668

Token 17: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06015858054161072
    2. '\' → logprob: -2.9351584911346436
    3. 'd' → logprob: -5.810158729553223
    4. '\n' → logprob: -7.310158729553223
    5. '#' → logprob: -7.685158729553223
    6. 'de' → logprob: -7.935158729553223
    7. '
' → logprob: -8.935158729553223
    8. ',' → logprob: -9.185158729553223
    9. ' 
' → logprob: -9.185158729553223
    10. ' def' → logprob: -9.810158729553223

Token 18: ' mais' (ID: 2899)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.7218243479728699
    2. 'def' → logprob: -1.2218244075775146
    3. ' mais' → logprob: -2.4718244075775146
    4. ' def' → logprob: -2.9718244075775146
    5. ' ' → logprob: -3.2218244075775146
    6. ' 
' → logprob: -3.5968244075775146
    7. 'but' → logprob: -5.3468241691589355
    8. ',' → logprob: -5.8468241691589355
    9. 'b' → logprob: -6.2218241691589355
    10. 'd' → logprob: -6.5968241691589355

Token 19: ' bon' (ID: 4846)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4465387463569641
    2. ' ça' → logprob: -1.8215386867523193
    3. 'def' → logprob: -2.5715386867523193
    4. ' ' → logprob: -3.6965386867523193
    5. ' def' → logprob: -3.6965386867523193
    6. ' elle' → logprob: -4.571538925170898
    7. ' cela' → logprob: -4.571538925170898
    8. ' une' → logprob: -5.071538925170898
    9. ' a' → logprob: -5.196538925170898
    10. ' je' → logprob: -5.196538925170898

Token 20: '...
' (ID: 4908)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06501226127147675
    2. '\' → logprob: -2.815012216567993
    3. '\n' → logprob: -6.565012454986572
    4. '
' → logprob: -7.690012454986572
    5. 'de' → logprob: -8.565011978149414
    6. ' def' → logprob: -9.065011978149414
    7. '```' → logprob: -9.065011978149414
    8. ':' → logprob: -9.315011978149414
    9. ' 
' → logprob: -9.315011978149414
    10. '#' → logprob: -9.315011978149414

Token 21: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024440274573862553
    2. '\' → logprob: -6.877443790435791
    3. ' def' → logprob: -7.627443790435791
    4. '
' → logprob: -7.752443790435791
    5. '\n' → logprob: -7.877443790435791
    6. ' 
' → logprob: -10.50244426727295
    7. 'de' → logprob: -11.12744426727295
    8. '```' → logprob: -11.12744426727295
    9. '(
' → logprob: -12.37744426727295
    10. 'dé' → logprob: -12.50244426727295

Token 22: ' gcd' (ID: 106918)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6706186532974243
    2. ' read' → logprob: -1.9206186532974243
    3. ' add' → logprob: -2.2956185340881348
    4. ' test' → logprob: -3.4206185340881348
    5. ' ' → logprob: -3.7956185340881348
    6. ' factor' → logprob: -3.7956185340881348
    7. ' my' → logprob: -3.9206185340881348
    8. ' calculate' → logprob: -4.045618534088135
    9. ' factorial' → logprob: -4.295618534088135
    10. ' parse' → logprob: -4.420618534088135

Token 23: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024335073248948902
    2. ' (' → logprob: -9.000243186950684
    3. '_' → logprob: -10.125243186950684
    4. '(a' → logprob: -10.375243186950684
    5. '(x' → logprob: -11.250243186950684
    6. '<|end|>' → logprob: -11.875243186950684
    7. '<|end|>' → logprob: -12.250243186950684
    8. '(user' → logprob: -12.875243186950684
    9. '(
' → logprob: -13.000243186950684
    10. '(n' → logprob: -13.250243186950684

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004484269011300057
    2. ' ,' → logprob: -7.875448226928711
    3. ',b' → logprob: -10.125448226928711
    4. ',a' → logprob: -11.375448226928711
    5. ',)' → logprob: -11.625448226928711
    6. ')' → logprob: -12.250448226928711
    7. ' ' → logprob: -14.500448226928711
    8. ',

' → logprob: -15.375448226928711
    9. ',g' → logprob: -15.375448226928711
    10. ',n' → logprob: -15.375448226928711

Token 25: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12694060802459717
    2. 'b' → logprob: -2.1269407272338867
    3. ' ' → logprob: -11.376940727233887
    4. ',b' → logprob: -15.501940727233887
    5. '	b' → logprob: -15.501940727233887
    6. ' ' → logprob: -15.876940727233887
    7. ')b' → logprob: -15.876940727233887
    8. ',' → logprob: -16.12693977355957
    9. ' )' → logprob: -16.25193977355957
    10. ' ,' → logprob: -16.62693977355957

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012539674527943134
    2. ')' → logprob: -4.387539863586426
    3. ' ):' → logprob: -11.387539863586426
    4. ':' → logprob: -12.012539863586426
    5. '):
' → logprob: -12.012539863586426
    6. ',' → logprob: -12.512539863586426
    7. '   ' → logprob: -14.387539863586426
    8. '),' → logprob: -14.887539863586426
    9. ' ' → logprob: -15.012539863586426
    10. '*' → logprob: -15.512539863586426

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4866520166397095
    2. ':' → logprob: -0.9866520166397095
    3. ' :' → logprob: -4.86165189743042
    4. ' ' → logprob: -6.86165189743042
    5. ':
' → logprob: -7.23665189743042
    6. '	return' → logprob: -7.36165189743042
    7. ' if' → logprob: -7.48665189743042
    8. '):' → logprob: -7.86165189743042
    9. '	if' → logprob: -8.236652374267578
    10. ' return' → logprob: -8.486652374267578

Token 28: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7762381434440613
    2. '   ' → logprob: -1.026238203048706
    3. ' while' → logprob: -2.526238203048706
    4. ' ' → logprob: -3.026238203048706
    5. '    ' → logprob: -3.901238203048706
    6. ' return' → logprob: -4.151237964630127
    7. 'if' → logprob: -4.651237964630127
    8. ' i' → logprob: -5.526237964630127
    9. 'while' → logprob: -7.776237964630127
    10. 'i' → logprob: -7.776237964630127

Token 29: ' Algo' (ID: 131064)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9133318662643433
    2. ' if' → logprob: -1.6633318662643433
    3. ' while' → logprob: -2.163331985473633
    4. '    ' → logprob: -2.288331985473633
    5. ' return' → logprob: -2.413331985473633
    6. '   ' → logprob: -2.913331985473633
    7. 'if' → logprob: -4.788331985473633
    8. ' space' → logprob: -4.788331985473633
    9. 'space' → logprob: -5.038331985473633
    10. 'return' → logprob: -5.163331985473633

Token 30: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7823154330253601
    2. '   ' → logprob: -1.1573154926300049
    3. ' ' → logprob: -2.782315492630005
    4. 'def' → logprob: -2.907315492630005
    5. ' :' → logprob: -3.532315492630005
    6. '=' → logprob: -4.032315254211426
    7. ' def' → logprob: -4.282315254211426
    8. '  ' → logprob: -4.407315254211426
    9. ':' → logprob: -4.782315254211426
    10. ' +=' → logprob: -5.282315254211426

Token 31: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6451002955436707
    2. 'e' → logprob: -0.8951002955436707
    3. ''e' → logprob: -3.0201003551483154
    4. '   ' → logprob: -5.645100116729736
    5. ' Eu' → logprob: -6.395100116729736
    6. 'u' → logprob: -6.645100116729736
    7. 'l' → logprob: -6.895100116729736
    8. 'a' → logprob: -7.020100116729736
    9. ''é' → logprob: -7.020100116729736
    10. 'é' → logprob: -7.020100116729736

Token 32: 'Eu' (ID: 29824)
  Prédit: 'Eu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Eu' → logprob: -0.1938830465078354
    2. ''' → logprob: -1.9438830614089966
    3. 'e' → logprob: -3.943882942199707
    4. ''e' → logprob: -5.193882942199707
    5. 'eu' → logprob: -5.568882942199707
    6. 'E' → logprob: -6.318882942199707
    7. '%' → logprob: -7.443882942199707
    8. ' Eu' → logprob: -7.568882942199707
    9. '_e' → logprob: -7.943882942199707
    10. '```' → logprob: -8.818882942199707

Token 33: 'cl' (ID: 565)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0028990209102630615
    2. 'cl' → logprob: -7.377899169921875
    3. 'clid' → logprob: -7.502899169921875
    4. '   ' → logprob: -7.752899169921875
    5. 'clidean' → logprob: -7.752899169921875
    6. '  ' → logprob: -8.627899169921875
    7. '```' → logprob: -8.877899169921875
    8. '	' → logprob: -9.627899169921875
    9. 'g' → logprob: -9.627899169921875
    10. '	c' → logprob: -9.877899169921875

Token 34: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.2626132369041443
    2. 'id' → logprob: -2.137613296508789
    3. 'ène' → logprob: -2.637613296508789
    4. 'ene' → logprob: -3.637613296508789
    5. 'idean' → logprob: -5.262613296508789
    6. 'idé' → logprob: -5.512613296508789
    7. '   ' → logprob: -6.637613296508789
    8. 'de' → logprob: -6.887613296508789
    9. 'ides' → logprob: -7.887613296508789
    10. 'e' → logprob: -8.137613296508789

Token 35: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09171070903539658
    2. ':' → logprob: -3.0917108058929443
    3. ' :' → logprob: -3.3417108058929443
    4. '    ' → logprob: -6.466710567474365
    5. ' :
' → logprob: -6.591710567474365
    6. ' while' → logprob: -7.216710567474365
    7. '    
' → logprob: -7.341710567474365
    8. ' ' → logprob: -7.591710567474365
    9. ':
' → logprob: -8.091711044311523
    10. '       ' → logprob: -8.216711044311523

Token 36: 'dt' (ID: 12490)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01633944921195507
    2. 'our' → logprob: -4.516339302062988
    3. 'u' → logprob: -5.641339302062988
    4. '%' → logprob: -8.266339302062988
    5. 'a' → logprob: -8.766339302062988
    6. ':' → logprob: -8.766339302062988
    7. 'e' → logprob: -8.766339302062988
    8. 'ur' → logprob: -8.891339302062988
    9. ' r' → logprob: -9.141339302062988
    10. ''' → logprob: -9.266339302062988

Token 37: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7776011228561401
    2. '   ' → logprob: -1.9026011228561401
    3. ' l' → logprob: -2.2776012420654297
    4. ' a' → logprob: -2.6526012420654297
    5. '  ' → logprob: -2.9026012420654297
    6. ' le' → logprob: -3.1526012420654297
    7. ' la' → logprob: -3.2776012420654297
    8. '    ' → logprob: -3.9026012420654297
    9. ' '' → logprob: -4.52760124206543
    10. ' les' → logprob: -4.52760124206543

Token 38: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2520741820335388
    2. 'b' → logprob: -1.5020742416381836
    3. 'a' → logprob: -10.127074241638184
    4. ' a' → logprob: -10.252074241638184
    5. '	b' → logprob: -10.252074241638184
    6. ' ' → logprob: -10.627074241638184
    7. '   ' → logprob: -12.127074241638184
    8. '(b' → logprob: -12.627074241638184
    9. ' ' → logprob: -15.002074241638184
    10. '_b' → logprob: -15.002074241638184

Token 39: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.05100874602794647
    2. '!=' → logprob: -3.301008701324463
    3. ' and' → logprob: -4.551008701324463
    4. ':' → logprob: -7.176008701324463
    5. 'and' → logprob: -7.176008701324463
    6. ' >' → logprob: -7.801008701324463
    7. '>' → logprob: -8.176009178161621
    8. ' ' → logprob: -10.426009178161621
    9. ' ' → logprob: -10.551009178161621
    10. ' :' → logprob: -10.551009178161621

Token 40: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5760911703109741
    2. '0' → logprob: -0.8260911703109741
    3. ' ' → logprob: -8.826090812683105
    4. '  ' → logprob: -13.701090812683105
    5. 'a' → logprob: -13.826090812683105
    6. '   ' → logprob: -14.201090812683105
    7. '```' → logprob: -14.201090812683105
    8. '_' → logprob: -15.576090812683105
    9. '=' → logprob: -15.701090812683105
    10. 'None' → logprob: -15.701090812683105

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023246178403496742
    2. ' ' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.648245811462402
    4. 'a' → logprob: -16.64824676513672
    5. '```' → logprob: -16.77324676513672
    6. '   ' → logprob: -17.14824676513672
    7. '  ' → logprob: -18.52324676513672
    8. ':' → logprob: -18.89824676513672
    9. '_' → logprob: -19.14824676513672
    10. '=' → logprob: -19.27324676513672

Token 42: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7088020443916321
    2. '   ' → logprob: -0.9588020443916321
    3. ' :' → logprob: -2.2088019847869873
    4. ' :
' → logprob: -5.333802223205566
    5. '       ' → logprob: -5.708802223205566
    6. ':
' → logprob: -5.833802223205566
    7. '    ' → logprob: -6.333802223205566
    8. ',' → logprob: -7.458802223205566
    9. ' ' → logprob: -8.083802223205566
    10. '  ' → logprob: -8.583802223205566

Token 43: 'je' (ID: 1587)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.982306182384491
    2. ' )' → logprob: -1.4823062419891357
    3. ')' → logprob: -1.6073062419891357
    4. ' ):
' → logprob: -3.1073062419891357
    5. ' ):' → logprob: -3.2323062419891357
    6. '):' → logprob: -3.2323062419891357
    7. '    ' → logprob: -4.482306003570557
    8. '):
' → logprob: -4.482306003570557
    9. ' :' → logprob: -4.607306003570557
    10. ' ' → logprob: -4.857306003570557

Token 44: ' crois' (ID: 65485)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.25725477933883667
    2. ':' → logprob: -2.3822548389434814
    3. '!=' → logprob: -2.5072548389434814
    4. ')' → logprob: -3.3822548389434814
    5. '):' → logprob: -4.257254600524902
    6. ' )' → logprob: -7.132254600524902
    7. ' ' → logprob: -7.132254600524902
    8. ' ):' → logprob: -7.257254600524902
    9. '%' → logprob: -7.382254600524902
    10. ' :' → logprob: -7.507254600524902

Token 45: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5671911239624023
    2. '):' → logprob: -1.3171911239624023
    3. ')' → logprob: -2.9421911239624023
    4. ':' → logprob: -3.3171911239624023
    5. ' :' → logprob: -3.3171911239624023
    6. ' ):' → logprob: -3.9421911239624023
    7. ' )' → logprob: -4.692191123962402
    8. '):
' → logprob: -5.442191123962402
    9. '    ' → logprob: -5.817191123962402
    10. ' ):
' → logprob: -6.317191123962402

Token 46: ' c' (ID: 274)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10062974691390991
    2. 'b' → logprob: -2.3506298065185547
    3. ' a' → logprob: -8.475629806518555
    4. 'a' → logprob: -9.475629806518555
    5. ' ' → logprob: -9.850629806518555
    6. ')b' → logprob: -10.600629806518555
    7. ' )' → logprob: -10.850629806518555
    8. ')' → logprob: -11.225629806518555
    9. '	b' → logprob: -11.225629806518555
    10. '   ' → logprob: -12.475629806518555

Token 47: ''est' (ID: 6616)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.06342365592718124
    2. '!=' → logprob: -3.1884236335754395
    3. ')' → logprob: -4.9384236335754395
    4. ':' → logprob: -5.5634236335754395
    5. '):' → logprob: -5.5634236335754395
    6. ''' → logprob: -5.8134236335754395
    7. '%' → logprob: -7.4384236335754395
    8. ' ' → logprob: -8.063424110412598
    9. ' ):' → logprob: -8.313424110412598
    10. '>' → logprob: -8.688424110412598

Token 48: ' ça' (ID: 13590)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8837594985961914
    2. ' b' → logprob: -1.6337594985961914
    3. '0' → logprob: -2.5087594985961914
    4. 'b' → logprob: -2.5087594985961914
    5. ' ' → logprob: -2.7587594985961914
    6. ' vrai' → logprob: -2.7587594985961914
    7. ' non' → logprob: -3.5087594985961914
    8. 'not' → logprob: -4.133759498596191
    9. ' pas' → logprob: -4.508759498596191
    10. ' différent' → logprob: -4.758759498596191

Token 49: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7073580026626587
    2. ')' → logprob: -1.3323580026626587
    3. '   ' → logprob: -2.082357883453369
    4. '):
' → logprob: -2.707357883453369
    5. ':' → logprob: -3.707357883453369
    6. ' :' → logprob: -4.582357883453369
    7. ' ):' → logprob: -5.082357883453369
    8. ' )' → logprob: -5.332357883453369
    9. ' ):
' → logprob: -5.832357883453369
    10. ':
' → logprob: -7.082357883453369

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01007585134357214
    2. ' :' → logprob: -5.38507604598999
    3. ' while' → logprob: -6.13507604598999
    4. ':' → logprob: -6.38507604598999
    5. '    ' → logprob: -7.26007604598999
    6. '       ' → logprob: -7.76007604598999
    7. ' :
' → logprob: -9.010075569152832
    8. '	while' → logprob: -9.260075569152832
    9. '    
' → logprob: -9.635075569152832
    10. 'while' → logprob: -10.135075569152832

Token 51: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5047489404678345
    2. ' while' → logprob: -1.0047489404678345
    3. 'while' (adapté à ' while') → logprob: -3.629748821258545
    4. '	while' → logprob: -6.254748821258545
    5. '    ' → logprob: -7.129748821258545
    6. '       ' → logprob: -7.754748821258545
    7. ' if' → logprob: -8.004749298095703
    8. ' ' → logprob: -9.754749298095703
    9. 'if' → logprob: -10.254749298095703
    10. '    
' → logprob: -10.754749298095703

Token 52: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.08894165605306625
    2. 'b' → logprob: -2.4639415740966797
    3. ' ' → logprob: -13.46394157409668
    4. '	b' → logprob: -14.46394157409668
    5. ' ' → logprob: -16.21394157409668
    6. '(b' → logprob: -17.08894157409668
    7. '_b' → logprob: -17.46394157409668
    8. ' б' → logprob: -17.58894157409668
    9. '   ' → logprob: -17.96394157409668
    10. ')b' → logprob: -17.96394157409668

Token 53: ':
' (ID: 734)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6175686120986938
    2. ':' → logprob: -0.8675686120986938
    3. '!=' → logprob: -3.3675684928894043
    4. ' :' → logprob: -5.117568492889404
    5. '>' → logprob: -8.492568969726562
    6. ' >' → logprob: -9.867568969726562
    7. ' ' → logprob: -10.992568969726562
    8. ' ' → logprob: -12.117568969726562
    9. '):' → logprob: -12.367568969726562
    10. ')' → logprob: -12.742568969726562

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01684289425611496
    2. 'a' → logprob: -4.391842842102051
    3. ' a' → logprob: -5.641842842102051
    4. '   ' → logprob: -8.64184284210205
    5. '    ' → logprob: -9.39184284210205
    6. ' 
' → logprob: -9.51684284210205
    7. '0' → logprob: -9.51684284210205
    8. '        
' → logprob: -10.01684284210205
    9. '
' → logprob: -10.26684284210205
    10. ',' → logprob: -10.39184284210205

Token 55: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.31387007236480713
    2. ' a' → logprob: -1.3138700723648071
    3. '    ' → logprob: -8.688870429992676
    4. '       ' → logprob: -8.813870429992676
    5. ' =' → logprob: -9.313870429992676
    6. '	a' → logprob: -9.813870429992676
    7. '   ' → logprob: -9.938870429992676
    8. '=a' → logprob: -10.438870429992676
    9. '=' → logprob: -10.563870429992676
    10. '        ' → logprob: -11.563870429992676

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001987163443118334
    2. '%' → logprob: -7.001986980438232
    3. ' ,' → logprob: -7.001986980438232
    4. '%,' → logprob: -9.25198745727539
    5. ' %' → logprob: -10.50198745727539
    6. ' %=' → logprob: -11.50198745727539
    7. ',b' → logprob: -11.62698745727539
    8. '%b' → logprob: -11.62698745727539
    9. '%=' → logprob: -11.75198745727539
    10. ',%' → logprob: -13.00198745727539

Token 57: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.25193363428115845
    2. 'b' → logprob: -1.5019335746765137
    3. '<|end|>' → logprob: -12.626934051513672
    4. ' ' → logprob: -13.751934051513672
    5. '	b' → logprob: -16.626934051513672
    6. '%b' → logprob: -16.876934051513672
    7. ' ' → logprob: -17.126934051513672
    8. '>b' → logprob: -17.251934051513672
    9. '<|end|>' → logprob: -17.501934051513672
    10. '    ' → logprob: -18.126934051513672

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759411454200745
    2. ' =' → logprob: -0.8259411454200745
    3. ',' → logprob: -13.45094108581543
    4. '   ' → logprob: -17.45094108581543
    5. '=

' → logprob: -17.45094108581543
    6. '=b' → logprob: -17.57594108581543
    7. '=
' → logprob: -17.82594108581543
    8. '＝' → logprob: -17.95094108581543
    9. '%=' → logprob: -17.95094108581543
    10. ')' → logprob: -18.20094108581543

Token 59: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.043004110455513
    2. 'b' → logprob: -3.168004035949707
    3. ' ' → logprob: -12.418004035949707
    4. ' ' → logprob: -14.668004035949707
    5. '	b' → logprob: -15.793004035949707
    6. '>b' → logprob: -16.418004989624023
    7. '(b' → logprob: -16.668004989624023
    8. ' (' → logprob: -16.918004989624023
    9. '<|end|>' → logprob: -17.293004989624023
    10. '    ' → logprob: -17.543004989624023

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039063513395376503
    2. ' ,' → logprob: -7.875390529632568
    3. 'a' → logprob: -11.875391006469727
    4. ' a' → logprob: -13.125391006469727
    5. ',a' → logprob: -14.000391006469727
    6. ' ' → logprob: -14.500391006469727
    7. ',
' → logprob: -16.750391006469727
    8. '%' → logprob: -17.000391006469727
    9. '<|end|>' → logprob: -17.500391006469727
    10. '‌,' → logprob: -18.000391006469727

Token 61: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519313097000122
    2. ' a' → logprob: -1.5019313097000122
    3. ' ' → logprob: -13.501931190490723
    4. '	a' → logprob: -14.376931190490723
    5. ' ' → logprob: -15.626931190490723
    6. '_a' → logprob: -17.37693214416504
    7. '  ' → logprob: -18.25193214416504
    8. 'A' → logprob: -19.25193214416504
    9. '>a' → logprob: -19.31443214416504
    10. '(a' → logprob: -19.37693214416504

Token 62: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.12697377800941467
    2. '%' → logprob: -2.126973867416382
    3. ' ' → logprob: -10.251974105834961
    4. 'a' → logprob: -12.126974105834961
    5. ' ' → logprob: -12.876974105834961
    6. ' a' → logprob: -13.251974105834961
    7. ' %
' → logprob: -16.00197410583496
    8. '%b' → logprob: -16.25197410583496
    9. '%i' → logprob: -16.37697410583496
    10. '%A' → logprob: -16.50197410583496

Token 63: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019287518225610256
    2. ' b' → logprob: -6.251928806304932
    3. ' ' → logprob: -16.501928329467773
    4. '	b' → logprob: -19.501928329467773
    5. '<|end|>' → logprob: -20.251928329467773
    6. '  ' → logprob: -20.626928329467773
    7. '```' → logprob: -21.501928329467773
    8. '_b' → logprob: -21.501928329467773
    9. ')b' → logprob: -21.626928329467773
    10. '>b' → logprob: -22.251928329467773

Token 64: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15041309595108032
    2. '   ' → logprob: -2.1504130363464355
    3. ' return' → logprob: -3.7754130363464355
    4. '	return' → logprob: -8.900413513183594
    5. ':return' → logprob: -9.775413513183594
    6. ' ' → logprob: -10.150413513183594
    7. '    
' → logprob: -11.525413513183594
    8. 'eturn' → logprob: -12.150413513183594
    9. '       ' → logprob: -12.150413513183594
    10. '
' → logprob: -12.275413513183594

Token 67: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3868728280067444
    2. 'a' → logprob: -1.1368727684020996
    3. ' ' → logprob: -13.886873245239258
    4. '	a' → logprob: -14.636873245239258
    5. ' ' → logprob: -14.636873245239258
    6. '   ' → logprob: -18.011873245239258
    7. '_a' → logprob: -18.511873245239258
    8. '  ' → logprob: -18.886873245239258
    9. 'aul' → logprob: -19.636873245239258
    10. ' abs' → logprob: -19.761873245239258

Token 68: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1087881401181221
    2. '

' → logprob: -3.108788251876831
    3. '<|end|>' → logprob: -3.108788251876831
    4. '\n' → logprob: -4.983788013458252
    5. '```' → logprob: -5.733788013458252
    6. 'def' → logprob: -7.108788013458252
    7. '#' → logprob: -7.483788013458252
    8. '' → logprob: -7.858788013458252
    9. '<|end|>' → logprob: -8.10878849029541
    10. '  
' → logprob: -8.48378849029541

Token 69: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4832408130168915
    2. 'def' → logprob: -1.6082408428192139
    3. '<|end|>' → logprob: -1.9832408428192139
    4. '\n' → logprob: -4.358240604400635
    5. '```' → logprob: -4.858240604400635
    6. '

' → logprob: -4.983240604400635
    7. '#' → logprob: -5.233240604400635
    8. 'n' → logprob: -5.858240604400635
    9. '<|end|>' → logprob: -5.858240604400635
    10. '  
' → logprob: -6.108240604400635

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01270176563411951
    2. '=' → logprob: -4.762701988220215
    3. ' ' → logprob: -5.512701988220215
    4. '  ' → logprob: -10.762701988220215
    5. ',' → logprob: -11.762701988220215
    6. ' ,' → logprob: -12.387701988220215
    7. '.' → logprob: -12.762701988220215
    8. ' =
' → logprob: -13.512701988220215
    9. '=int' → logprob: -13.887701988220215
    10. 'space' → logprob: -14.262701988220215

Token 71: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47445032000541687
    2. 'int' → logprob: -0.9744503498077393
    3. '10' → logprob: -8.47445011138916
    4. ' ' → logprob: -8.84945011138916
    5. '5' → logprob: -12.09945011138916
    6. '20' → logprob: -12.84945011138916
    7. '[int' → logprob: -13.22445011138916
    8. ' input' → logprob: -13.34945011138916
    9. '100' → logprob: -13.47445011138916
    10. 'input' → logprob: -13.47445011138916

Token 72: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20150835812091827
    2. '(' → logprob: -1.7015084028244019
    3. '(sys' → logprob: -9.576508522033691
    4. 'input' → logprob: -11.076508522033691
    5. ' (' → logprob: -11.951508522033691
    6. '(
' → logprob: -13.576508522033691
    7. '('' → logprob: -14.076508522033691
    8. '()' → logprob: -14.451508522033691
    9. '(int' → logprob: -15.201508522033691
    10. '(s' → logprob: -15.326508522033691

Token 73: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004098823759704828
    2. '()' → logprob: -5.504098892211914
    3. '().' → logprob: -11.754098892211914
    4. ')' → logprob: -12.379098892211914
    5. ' ())' → logprob: -12.629098892211914
    6. '())
' → logprob: -12.879098892211914
    7. '()))' → logprob: -14.254098892211914
    8. '(' → logprob: -14.254098892211914
    9. '();)' → logprob: -14.629098892211914
    10. '()
' → logprob: -15.004098892211914

Token 74: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0029160976409912
    2. '
' → logprob: -2.127916097640991
    3. 'a' → logprob: -2.377916097640991
    4. 'data' → logprob: -2.627916097640991
    5. 'numbers' → logprob: -2.752916097640991
    6. 'result' → logprob: -3.002916097640991
    7. ' ' → logprob: -3.002916097640991
    8. 's' → logprob: -3.752916097640991
    9. ' 
' → logprob: -3.752916097640991
    10. 'results' → logprob: -4.00291633605957

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03378124535083771
    2. '=' → logprob: -3.5337812900543213
    3. 'um' → logprob: -6.658781051635742
    4. ' ' → logprob: -7.408781051635742
    5. '_' → logprob: -8.033781051635742
    6. 'quares' → logprob: -8.283781051635742
    7. '=[]' → logprob: -8.533781051635742
    8. 'tr' → logprob: -8.783781051635742
    9. 's' → logprob: -8.783781051635742
    10. 'paces' → logprob: -9.408781051635742

Token 76: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06588120013475418
    2. '[input' → logprob: -3.5658812522888184
    3. 'list' → logprob: -4.065881252288818
    4. ' input' → logprob: -4.440881252288818
    5. '[]' → logprob: -5.940881252288818
    6. 'set' → logprob: -6.440881252288818
    7. '[' → logprob: -7.315881252288818
    8. ' list' → logprob: -7.690881252288818
    9. '[int' → logprob: -8.06588077545166
    10. 'int' → logprob: -8.19088077545166

Token 77: '0' (ID: 15)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14173133671283722
    2. 'list' → logprob: -2.6417312622070312
    3. '[input' → logprob: -2.8917312622070312
    4. '[int' → logprob: -6.016731262207031
    5. 'set' → logprob: -6.891731262207031
    6. 'int' → logprob: -7.391731262207031
    7. '[list' → logprob: -8.266731262207031
    8. '[' → logprob: -8.266731262207031
    9. '[]' → logprob: -8.391731262207031
    10. '[str' → logprob: -8.891731262207031

Token 78: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029414402320981026
    2. 'for' → logprob: -3.654414415359497
    3. '<|end|>' → logprob: -6.404414176940918
    4. '
' → logprob: -7.029414176940918
    5. ' 
' → logprob: -8.654414176940918
    6. ' for' → logprob: -9.029414176940918
    7. '' → logprob: -9.154414176940918
    8. '

' → logprob: -9.779414176940918
    9. '<|end|>' → logprob: -10.779414176940918
    10. '\n' → logprob: -11.029414176940918

Token 79: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006835318170487881
    2. 'for' → logprob: -5.131835460662842
    3. '
' → logprob: -7.131835460662842
    4. '\n' → logprob: -10.631834983825684
    5. '+' → logprob: -10.756834983825684
    6. '' → logprob: -10.756834983825684
    7. ' 
' → logprob: -11.131834983825684
    8. '

' → logprob: -12.506834983825684
    9. ' for' → logprob: -12.881834983825684
    10. '<|end|>' → logprob: -12.881834983825684

Token 80: ' S' (ID: 336)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09380926191806793
    2. ' for' → logprob: -3.2188093662261963
    3. 'sum' → logprob: -3.4688093662261963
    4. 'range' → logprob: -4.718809127807617
    5. ' sum' → logprob: -5.968809127807617
    6. '_' → logprob: -6.468809127807617
    7. 'result' → logprob: -7.218809127807617
    8. 'max' → logprob: -7.593809127807617
    9. 'total' → logprob: -7.593809127807617
    10. 'input' → logprob: -7.718809127807617

Token 81: ' ~' (ID: 6574)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7238377928733826
    2. 'um' → logprob: -0.9738377928733826
    3. ' +=' → logprob: -3.2238378524780273
    4. '+=' → logprob: -3.4738378524780273
    5. ' =' → logprob: -3.5988378524780273
    6. 'omme' → logprob: -4.348837852478027
    7. '+' → logprob: -4.348837852478027
    8. 'umme' → logprob: -6.473837852478027
    9. 'total' → logprob: -6.973837852478027
    10. ':' → logprob: -7.098837852478027

Token 82: ' somme' (ID: 64484)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0985034629702568
    2. '=' → logprob: -3.098503351211548
    3. '+' → logprob: -4.223503589630127
    4. ' =' → logprob: -4.473503589630127
    5. ' +=' → logprob: -4.598503589630127
    6. '+=' → logprob: -5.473503589630127
    7. '0' → logprob: -6.348503589630127
    8. 'ur' → logprob: -6.848503589630127
    9. ' +' → logprob: -7.223503589630127
    10. 'uma' → logprob: -7.723503589630127

Token 83: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' del' (ID: 1083)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.0835423469543457
    2. 'i' → logprob: -1.8335423469543457
    3. 'g' → logprob: -2.4585423469543457
    4. ' i' → logprob: -2.8335423469543457
    5. 'fra' → logprob: -3.3335423469543457
    6. 'val' → logprob: -3.4585423469543457
    7. ' ' → logprob: -3.5835423469543457
    8. 'd' → logprob: -3.8335423469543457
    9. 'n' → logprob: -4.083542346954346
    10. 'a' → logprob: -4.083542346954346

Token 85: 'tas' (ID: 34419)
  Prédit: 'tas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tas' → logprob: -0.15200424194335938
    2. 'ta' → logprob: -2.4020042419433594
    3. 't' → logprob: -4.527004241943359
    4. '```' → logprob: -5.027004241943359
    5. 'ais' → logprob: -5.402004241943359
    6. 'etas' → logprob: -5.652004241943359
    7. 'ai' → logprob: -6.027004241943359
    8. 'et' → logprob: -6.027004241943359
    9. '{' → logprob: -6.152004241943359
    10. 'ays' → logprob: -6.402004241943359

Token 86: ' où' (ID: 15113)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5034804344177246
    2. '
' → logprob: -1.0034804344177246
    3. '<|end|>' → logprob: -4.378480434417725
    4. ' for' → logprob: -4.753480434417725
    5. ' 
' → logprob: -6.378480434417725
    6. '+' → logprob: -6.503480434417725
    7. '\n' → logprob: -7.503480434417725
    8. 's' → logprob: -7.628480434417725
    9. '<|end|>' → logprob: -7.753480434417725
    10. '[' → logprob: -7.753480434417725

Token 87: ' b' (ID: 287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6750652194023132
    2. ' i' → logprob: -1.300065279006958
    3. 'les' → logprob: -3.800065279006958
    4. 'a' → logprob: -3.800065279006958
    5. 'S' → logprob: -3.925065279006958
    6. 'abs' → logprob: -4.425065040588379
    7. 'j' → logprob: -4.425065040588379
    8. 'l' → logprob: -4.425065040588379
    9. ' les' → logprob: -4.425065040588379
    10. 'b' → logprob: -4.550065040588379

Token 88: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6268391609191895
    2. '>' → logprob: -1.3768391609191895
    3. ' !=' → logprob: -2.3768391609191895
    4. '!=' → logprob: -3.6268391609191895
    5. ' <' → logprob: -4.1268391609191895
    6. '-' → logprob: -4.2518391609191895
    7. '=' → logprob: -4.6268391609191895
    8. ' -' → logprob: -5.2518391609191895
    9. ' >=' → logprob: -5.2518391609191895
    10. '+' → logprob: -5.3768391609191895

Token 89: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.44218936562538147
    2. '0' → logprob: -1.067189335823059
    3. '1' → logprob: -5.1921892166137695
    4. ' ' → logprob: -5.1921892166137695
    5. ' a' → logprob: -7.1921892166137695
    6. '<|end|>' → logprob: -7.3171892166137695
    7. '>a' → logprob: -8.81718921661377
    8. '100' → logprob: -9.44218921661377
    9. '>' → logprob: -9.44218921661377
    10. '2' → logprob: -9.56718921661377

Token 90: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05380811169743538
    2. 'for' → logprob: -3.0538082122802734
    3. '<|end|>' → logprob: -6.053808212280273
    4. ' for' → logprob: -6.178808212280273
    5. '
' → logprob: -7.678808212280273
    6. ' 
' → logprob: -8.803808212280273
    7. '<|end|>' → logprob: -9.678808212280273
    8. '

' → logprob: -9.928808212280273
    9. '\n' → logprob: -11.178808212280273
    10. '```' → logprob: -11.428808212280273

Token 91: 'Y' (ID: 56)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05807672068476677
    2. '
' → logprob: -2.9330766201019287
    3. ' for' → logprob: -5.933076858520508
    4. '<|end|>' → logprob: -8.433076858520508
    5. '\n' → logprob: -9.058076858520508
    6. ' 
' → logprob: -9.933076858520508
    7. 's' → logprob: -10.683076858520508
    8. '\' → logprob: -10.933076858520508
    9. 'n' → logprob: -10.933076858520508
    10. '```' → logprob: -11.558076858520508

Token 92: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6945069432258606
    2. ' =' → logprob: -0.6945069432258606
    3. ',' → logprob: -7.694507122039795
    4. '_' → logprob: -8.694506645202637
    5. '=int' → logprob: -8.819506645202637
    6. 'es' → logprob: -9.944506645202637
    7. ' ' → logprob: -10.069506645202637
    8. 's' → logprob: -10.194506645202637
    9. 'ields' → logprob: -10.194506645202637
    10. '=[]' → logprob: -10.194506645202637

Token 93: ' []' (ID: 6126)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08242244273424149
    2. ' ' → logprob: -3.4574224948883057
    3. '[]' → logprob: -3.4574224948883057
    4. '1' → logprob: -5.082422256469727
    5. ' []' → logprob: -5.957422256469727
    6. 'int' → logprob: -6.082422256469727
    7. 'N' → logprob: -6.082422256469727
    8. '[' → logprob: -7.082422256469727
    9. '[int' → logprob: -7.582422256469727
    10. ' [' → logprob: -8.957422256469727

Token 94: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23993569612503052
    2. '
' → logprob: -1.7399356365203857
    3. '<|end|>' → logprob: -3.3649356365203857
    4. ' for' → logprob: -5.989935874938965
    5. '[' → logprob: -8.614935874938965
    6. ' 
' → logprob: -8.739935874938965
    7. '<|end|>' → logprob: -9.239935874938965
    8. '  
' → logprob: -9.614935874938965
    9. '
' → logprob: -10.114935874938965
    10. '[
' → logprob: -10.114935874938965

Token 95: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.702754474943504e-05
    2. ' for' → logprob: -10.75003719329834
    3. '
' → logprob: -11.62503719329834
    4. '=' → logprob: -12.62503719329834
    5. '[' → logprob: -13.75003719329834
    6. 'range' → logprob: -14.37503719329834
    7. ' =' → logprob: -15.12503719329834
    8. 'while' → logprob: -15.12503719329834
    9. 'f' → logprob: -16.000036239624023
    10. '<|end|>' → logprob: -16.125036239624023

Token 96: ' va' (ID: 3423)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005972165614366531
    2. 'list' → logprob: -6.130972385406494
    3. '[]
' → logprob: -6.505972385406494
    4. '[int' → logprob: -7.005972385406494
    5. ' []' → logprob: -7.630972385406494
    6. 'int' → logprob: -8.130971908569336
    7. '[' → logprob: -8.380971908569336
    8. 'input' → logprob: -8.880971908569336
    9. '0' → logprob: -9.755971908569336
    10. 'tuple' → logprob: -10.505971908569336

Token 97: ' servir' (ID: 42557)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9706719517707825
    2. '=[]' → logprob: -1.9706718921661377
    3. ' ' → logprob: -2.0956718921661377
    4. ' []' → logprob: -3.2206718921661377
    5. 's' → logprob: -3.4706718921661377
    6. 'venir' → logprob: -3.5956718921661377
    7. '   ' → logprob: -3.8456718921661377
    8. 't' → logprob: -4.095672130584717
    9. 'ient' → logprob: -4.345672130584717
    10. '.append' → logprob: -4.470672130584717

Token 98: ' à' (ID: 1221)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8355633020401001
    2. 'for' → logprob: -1.0855633020401
    3. '=[]' → logprob: -2.3355631828308105
    4. 'to' → logprob: -3.4605631828308105
    5. '=' → logprob: -3.7105631828308105
    6. '<|end|>' → logprob: -3.8355631828308105
    7. '[' → logprob: -4.3355631828308105
    8. ' to' → logprob: -4.5855631828308105
    9. ' =' → logprob: -4.5855631828308105
    10. ' for' → logprob: -5.4605631828308105

Token 99: ' stock' (ID: 6546)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6383591294288635
    2. 'stock' → logprob: -1.0133590698242188
    3. 'collect' → logprob: -3.1383590698242188
    4. '[' → logprob: -3.8883590698242188
    5. 'rec' → logprob: -4.138359069824219
    6. ' stock' → logprob: -4.638359069824219
    7. 'range' → logprob: -5.888359069824219
    8. 'store' → logprob: -6.138359069824219
    9. 'list' → logprob: -6.263359069824219
    10. 'prendre' → logprob: -6.388359069824219

Token 100: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.02503546141088009
    2. 'ir' → logprob: -4.150035381317139
    3. 'iner' → logprob: -5.400035381317139
    4. 'érer' → logprob: -5.900035381317139
    5. '[]' → logprob: -7.775035381317139
    6. 'r' → logprob: -8.650035858154297
    7. 'e' → logprob: -8.900035858154297
    8. 'ner' → logprob: -9.150035858154297
    9. 'îner' → logprob: -9.400035858154297
    10. 'erer' → logprob: -9.775035858154297

Token 101: ' des' (ID: 731)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05657406523823738
    2. '[a' → logprob: -4.306573867797852
    3. 'a' → logprob: -4.556573867797852
    4. '[' → logprob: -4.806573867797852
    5. 'b' → logprob: -5.181573867797852
    6. '[N' → logprob: -5.806573867797852
    7. 'for' → logprob: -6.181573867797852
    8. '[i' → logprob: -6.431573867797852
    9. 'N' → logprob: -6.931573867797852
    10. 'des' → logprob: -6.931573867797852

Token 102: ' p' (ID: 275)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -1.3154816627502441
    2. ' couples' → logprob: -2.065481662750244
    3. 'ent' → logprob: -2.190481662750244
    4. 'b' → logprob: -2.690481662750244
    5. 'val' → logprob: -2.940481662750244
    6. ' pairs' → logprob: -3.440481662750244
    7. ' ent' → logprob: -3.565481662750244
    8. 'élé' → logprob: -3.565481662750244
    9. ' valeurs' → logprob: -3.815481662750244
    10. 'fra' → logprob: -3.815481662750244

Token 103: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.20412498712539673
    2. 'airs' → logprob: -2.079124927520752
    3. 'lus' → logprob: -4.579124927520752
    4. 'a' → logprob: -4.579124927520752
    5. 'oints' → logprob: -4.704124927520752
    6. 'r' → logprob: -5.079124927520752
    7. 'air' → logprob: -5.204124927520752
    8. 'aire' → logprob: -6.516624927520752
    9. 'ro' → logprob: -6.579124927520752
    10. 'ar' → logprob: -6.766624927520752

Token 104: '

' (ID: 279)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3595532476902008
    2. '()' → logprob: -1.6095532178878784
    3. '(' → logprob: -3.234553337097168
    4. '<|end|>' → logprob: -4.234553337097168
    5. '[(' → logprob: -4.859553337097168
    6. 'for' → logprob: -5.234553337097168
    7. '[' → logprob: -5.484553337097168
    8. 's' → logprob: -5.859553337097168
    9. 'a' → logprob: -5.984553337097168
    10. ',' → logprob: -5.984553337097168

Token 105: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008133203955367208
    2. '
' → logprob: -7.5008134841918945
    3. ' for' → logprob: -8.375813484191895
    4. '[' → logprob: -12.000813484191895
    5. '[
' → logprob: -12.250813484191895
    6. 'range' → logprob: -13.125813484191895
    7. ' 
' → logprob: -13.125813484191895
    8. '<|end|>' → logprob: -13.250813484191895
    9. '[]' → logprob: -13.500813484191895
    10. '_' → logprob: -13.500813484191895

Token 106: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008248721715062857
    2. ' for' → logprob: -7.125824928283691
    3. '_' → logprob: -11.500824928283691
    4. 'range' → logprob: -11.625824928283691
    5. '_for' → logprob: -15.125824928283691
    6. '
' → logprob: -15.625824928283691
    7. 'For' → logprob: -15.750824928283691
    8. 'i' → logprob: -15.875824928283691
    9. 'N' → logprob: -16.250823974609375
    10. ' range' → logprob: -16.500823974609375

Token 107: ' lit' (ID: 11980)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04715760052204132
    2. 'range' → logprob: -3.4221575260162354
    3. ' for' → logprob: -4.4221577644348145
    4. ' range' → logprob: -7.4221577644348145
    5. 'r' → logprob: -8.547157287597656
    6. 'n' → logprob: -8.672157287597656
    7. 'or' → logprob: -8.922157287597656
    8. '=' → logprob: -9.422157287597656
    9. 'ranges' → logprob: -10.172157287597656
    10. ' =' → logprob: -10.422157287597656

Token 108: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04983161389827728
    2. ' for' → logprob: -3.4248316287994385
    3. 'N' → logprob: -4.799831390380859
    4. '_' → logprob: -5.424831390380859
    5. 'range' → logprob: -6.549831390380859
    6. ' N' → logprob: -6.674831390380859
    7. ' range' → logprob: -9.17483139038086
    8. 'les' → logprob: -9.29983139038086
    9. 'le' → logprob: -9.42483139038086
    10. '_N' → logprob: -9.54983139038086

Token 109: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.6847875118255615
    2. ' ligne' → logprob: -1.3097875118255615
    3. ' paire' → logprob: -3.0597875118255615
    4. 'pair' → logprob: -3.1847875118255615
    5. 'range' → logprob: -3.8097875118255615
    6. ' line' → logprob: -4.059787750244141
    7. 'a' → logprob: -4.184787750244141
    8. 'nombre' → logprob: -4.309787750244141
    9. ' pair' → logprob: -4.309787750244141
    10. ' couple' → logprob: -4.934787750244141

Token 110: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009119403548538685
    2. ' for' → logprob: -7.000911712646484
    3. '
' → logprob: -15.250911712646484
    4. 'range' → logprob: -16.500911712646484
    5. '_' → logprob: -17.125911712646484
    6. '_for' → logprob: -17.875911712646484
    7. 'pour' → logprob: -18.000911712646484
    8. 'n' → logprob: -18.750911712646484
    9. '```' → logprob: -18.750911712646484
    10. '	for' → logprob: -19.750911712646484

Token 111: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7786874175071716
    2. ' traite' → logprob: -1.5286874771118164
    3. 'trait' → logprob: -2.5286874771118164
    4. ' for' → logprob: -2.9036874771118164
    5. ' on' → logprob: -3.5286874771118164
    6. 'tra' → logprob: -3.9036874771118164
    7. 'process' → logprob: -4.153687477111816
    8. 'range' → logprob: -4.153687477111816
    9. 'on' → logprob: -4.403687477111816
    10. ' tra' → logprob: -4.653687477111816

Token 112: ' rem' (ID: 1662)
  Prédit: ' traite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traite' → logprob: -0.743721604347229
    2. 'tra' → logprob: -2.6187214851379395
    3. 'range' → logprob: -2.7437214851379395
    4. 'tr' → logprob: -2.8687214851379395
    5. 'for' → logprob: -3.2437214851379395
    6. 'stock' → logprob: -3.6187214851379395
    7. ' stock' → logprob: -3.6187214851379395
    8. 'split' → logprob: -3.7437214851379395
    9. ' calc' → logprob: -4.1187214851379395
    10. 'parse' → logprob: -4.1187214851379395

Token 113: 'plit' (ID: 4059)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.5097159147262573
    2. 'plit' → logprob: -1.6347159147262573
    3. 'p' → logprob: -2.134716033935547
    4. 'pl' → logprob: -2.884716033935547
    5. 'onte' → logprob: -3.759716033935547
    6. 'ple' → logprob: -5.884716033935547
    7. 'pile' → logprob: -6.509716033935547
    8. '_' → logprob: -7.134716033935547
    9. '#' → logprob: -7.759716033935547
    10. '_place' → logprob: -8.509716033935547

Token 114: ' Y' (ID: 865)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07890179008245468
    2. 'Y' → logprob: -3.078901767730713
    3. ' for' → logprob: -3.703901767730713
    4. 'range' → logprob: -5.828901767730713
    5. ' Y' → logprob: -6.453901767730713
    6. ' range' → logprob: -7.328901767730713
    7. '(range' → logprob: -10.828902244567871
    8. ' la' → logprob: -11.078902244567871
    9. ' ' → logprob: -12.203902244567871
    10. '[]' → logprob: -12.453902244567871

Token 115: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007137430948205292
    2. ' for' → logprob: -7.25071382522583
    3. '
' → logprob: -12.500713348388672
    4. '```' → logprob: -17.125713348388672
    5. '<|end|>' → logprob: -17.750713348388672
    6. '	for' → logprob: -18.375713348388672
    7. 'with' → logprob: -18.750713348388672
    8. 'range' → logprob: -18.875713348388672
    9. '``' → logprob: -19.375713348388672
    10. 'while' → logprob: -19.500713348388672

Token 116: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.004239500965923071
    2. ' S' → logprob: -5.629239559173584
    3. 'for' → logprob: -8.129239082336426
    4. 'calcul' → logprob: -9.379239082336426
    5. 'range' → logprob: -9.879239082336426
    6. ' ' → logprob: -10.879239082336426
    7. 'increment' → logprob: -11.004239082336426
    8. 'update' → logprob: -11.004239082336426
    9. 'continue' → logprob: -11.254239082336426
    10. 'a' → logprob: -11.379239082336426

Token 117: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004897649050690234
    2. ' for' → logprob: -7.875489711761475
    3. '
' → logprob: -9.125490188598633
    4. '```' → logprob: -14.500490188598633
    5. '<|end|>' → logprob: -15.625490188598633
    6. '\n' → logprob: -16.750490188598633
    7. '``' → logprob: -17.125490188598633
    8. '	for' → logprob: -18.250490188598633
    9. 'range' → logprob: -18.375490188598633
    10. 'while' → logprob: -18.500490188598633

Token 118: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012761499965563416
    2. ' for' → logprob: -9.250127792358398
    3. '
' → logprob: -10.375127792358398
    4. '```' → logprob: -15.875127792358398
    5. '<|end|>' → logprob: -17.1251277923584
    6. '	for' → logprob: -18.5001277923584
    7. 'range' → logprob: -18.6251277923584
    8. '``' → logprob: -19.0001277923584
    9. '
' → logprob: -20.3751277923584
    10. 'n' → logprob: -20.5001277923584

Token 119: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.048844076693058014
    2. '_' → logprob: -3.0488440990448
    3. ' i' → logprob: -8.298844337463379
    4. 'i' → logprob: -13.048844337463379
    5. ' ' → logprob: -13.173844337463379
    6. ' in' → logprob: -13.423844337463379
    7. '_i' → logprob: -13.548844337463379
    8. ' ' → logprob: -14.673844337463379
    9. ' range' → logprob: -14.673844337463379
    10. 'range' → logprob: -16.423843383789062

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03949352353811264
    2. 'in' → logprob: -3.2894935607910156
    3. ' ' → logprob: -6.789493560791016
    4. 'n' → logprob: -8.414493560791016
    5. '_' → logprob: -9.789493560791016
    6. '  ' → logprob: -11.039493560791016
    7. 'range' → logprob: -11.789493560791016
    8. ',' → logprob: -11.914493560791016
    9. ' n' → logprob: -13.164493560791016
    10. ' ' → logprob: -13.164493560791016

Token 121: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47408103942871094
    2. 'range' → logprob: -0.9740810394287109
    3. '	range' → logprob: -13.349081039428711
    4. '(range' → logprob: -14.099081039428711
    5. 'rang' → logprob: -14.224081039428711
    6. ' ' → logprob: -14.974081039428711
    7. 'in' → logprob: -15.974081039428711
    8. ' xrange' → logprob: -16.22408103942871
    9. 'ran' → logprob: -16.59908103942871
    10. 'r' → logprob: -16.84908103942871

Token 122: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.014171387068927288
    2. '(' → logprob: -4.264171600341797
    3. ' (' → logprob: -12.139171600341797
    4. '(n' → logprob: -13.639171600341797
    5. '(
' → logprob: -13.889171600341797
    6. ' N' → logprob: -15.514171600341797
    7. '(len' → logprob: -16.514171600341797
    8. '(int' → logprob: -16.639171600341797
    9. 'N' → logprob: -17.264171600341797
    10. '(I' → logprob: -18.014171600341797

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47799062728881836
    2. '):
' → logprob: -0.9779906272888184
    3. '):
' → logprob: -6.227990627288818
    4. '+' → logprob: -6.477990627288818
    5. ' ):' → logprob: -8.727991104125977
    6. ')' → logprob: -8.852991104125977
    7. ' ):
' → logprob: -9.727991104125977
    8. ':' → logprob: -10.602991104125977
    9. '   ' → logprob: -13.727991104125977
    10. ' +' → logprob: -13.727991104125977

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043481528759002686
    2. ' a' → logprob: -3.5434815883636475
    3. 'a' → logprob: -4.918481349945068
    4. ' line' → logprob: -6.043481349945068
    5. '	a' → logprob: -6.543481349945068
    6. '    
' → logprob: -7.293481349945068
    7. ',a' → logprob: -7.918481349945068
    8. '```' → logprob: -8.168481826782227
    9. ' A' → logprob: -8.793481826782227
    10. ',' → logprob: -9.168481826782227

Token 125: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.05601177364587784
    2. ' a' → logprob: -2.93101167678833
    3. '   ' → logprob: -7.05601167678833
    4. 'A' → logprob: -9.056012153625488
    5. '	a' → logprob: -9.806012153625488
    6. ' line' → logprob: -10.056012153625488
    7. 'x' → logprob: -10.556012153625488
    8. ' A' → logprob: -11.556012153625488
    9. '_a' → logprob: -12.681012153625488
    10. ' x' → logprob: -12.806012153625488

Token 126: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021402664424385875
    2. ',b' → logprob: -8.500213623046875
    3. ' ,' → logprob: -11.750213623046875
    4. ',n' → logprob: -14.500213623046875
    5. ',
' → logprob: -14.625213623046875
    6. 'b' → logprob: -14.625213623046875
    7. '=' → logprob: -15.125213623046875
    8. ',s' → logprob: -15.125213623046875
    9. ',int' → logprob: -16.500213623046875
    10. ',B' → logprob: -16.750213623046875

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28907591104507446
    2. '=' → logprob: -1.6640758514404297
    3. ' =' → logprob: -2.7890758514404297
    4. ' ,' → logprob: -9.66407585144043
    5. ',a' → logprob: -9.66407585144043
    6. ',b' → logprob: -9.78907585144043
    7. 'a' → logprob: -12.28907585144043
    8. '   ' → logprob: -12.53907585144043
    9. ')' → logprob: -13.28907585144043
    10. ',s' → logprob: -13.66407585144043

Token 128: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011048762127757072
    2. ' b' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.011048316955566
    4. 'space' → logprob: -16.886049270629883
    5. '<|end|>' → logprob: -17.136049270629883
    6. 's' → logprob: -17.261049270629883
    7. '  
' → logprob: -18.636049270629883
    8. ' s' → logprob: -18.761049270629883
    9. ' 
' → logprob: -19.136049270629883
    10. '>b' → logprob: -19.636049270629883

Token 129: '_str' (ID: 6182)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13089460134506226
    2. ' =' → logprob: -2.380894660949707
    3. '_str' → logprob: -3.505894660949707
    4. '_' → logprob: -9.255894660949707
    5. 'str' → logprob: -9.255894660949707
    6. '=str' → logprob: -13.130894660949707
    7. ',' → logprob: -13.130894660949707
    8. ' ' → logprob: -13.505894660949707
    9. '_=' → logprob: -13.505894660949707
    10. ')' → logprob: -14.005894660949707

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858794063329697
    2. ' =' → logprob: -3.0485880374908447
    3. '=input' → logprob: -14.423587799072266
    4. ',' → logprob: -17.048587799072266
    5. ' ' → logprob: -17.673587799072266
    6. ')' → logprob: -18.173587799072266
    7. 'a' → logprob: -18.548587799072266
    8. '=line' → logprob: -18.548587799072266
    9. '=

' → logprob: -18.798587799072266
    10. '=a' → logprob: -19.548587799072266

Token 131: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0040793512016534805
    2. ' input' → logprob: -5.504079341888428
    3. 'map' → logprob: -14.004079818725586
    4. '(input' → logprob: -18.504079818725586
    5. ' map' → logprob: -18.504079818725586
    6. ' ' → logprob: -19.004079818725586
    7. '	input' → logprob: -19.379079818725586
    8. '<input' → logprob: -20.004079818725586
    9. '[input' → logprob: -20.129079818725586
    10. '   ' → logprob: -20.129079818725586

Token 132: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005535095697268844
    2. '()' → logprob: -7.500553607940674
    3. '(' → logprob: -15.000553131103516
    4. ' ().' → logprob: -16.250553131103516
    5. '()
' → logprob: -16.875553131103516
    6. '()

' → logprob: -19.375553131103516
    7. '()].' → logprob: -19.625553131103516
    8. '.strip' → logprob: -19.750553131103516
    9. '.split' → logprob: -19.875553131103516
    10. '()).' → logprob: -19.875553131103516

Token 133: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20186585187911987
    2. 'strip' → logprob: -1.7018659114837646
    3. 'rstrip' → logprob: -7.7018656730651855
    4. ' split' → logprob: -15.201866149902344
    5. 'rs' → logprob: -16.076866149902344
    6. ' strip' → logprob: -17.576866149902344
    7. '(split' → logprob: -17.951866149902344
    8. 'spl' → logprob: -18.326866149902344
    9. '```' → logprob: -19.951866149902344
    10. '.strip' → logprob: -20.076866149902344

Token 134: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013369973748922348
    2. '()
' → logprob: -4.513370037078857
    3. '(' → logprob: -6.138370037078857
    4. ')' → logprob: -9.5133695602417
    5. '(
' → logprob: -10.7633695602417
    6. '()

' → logprob: -11.3883695602417
    7. '(a' → logprob: -11.3883695602417
    8. '()
' → logprob: -11.5133695602417
    9. 'a' → logprob: -11.7633695602417
    10. ',' → logprob: -12.0133695602417

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5361450910568237
    2. 'a' → logprob: -0.9111450910568237
    3. ' a' → logprob: -4.661145210266113
    4. '    
' → logprob: -6.286145210266113
    5. ' ' → logprob: -7.661145210266113
    6. ' 
' → logprob: -8.286145210266113
    7. '	a' → logprob: -8.286145210266113
    8. '  ' → logprob: -8.536145210266113
    9. '
' → logprob: -8.786145210266113
    10. '   
' → logprob: -9.161145210266113

Token 136: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.06196846812963486
    2. ' a' → logprob: -2.8119685649871826
    3. '   ' → logprob: -15.061968803405762
    4. '	a' → logprob: -15.436968803405762
    5. ' 
' → logprob: -15.561968803405762
    6. ' ' → logprob: -16.186967849731445
    7. ' ' → logprob: -16.936967849731445
    8. '_a' → logprob: -17.936967849731445
    9. '    ' → logprob: -18.061967849731445
    10. '    
' → logprob: -18.561967849731445

Token 137: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6698858737945557
    2. ' =' → logprob: -1.2948858737945557
    3. ',' → logprob: -1.5448858737945557
    4. ' ,' → logprob: -7.669885635375977
    5. '=int' → logprob: -7.669885635375977
    6. ' ' → logprob: -11.169885635375977
    7. '   ' → logprob: -12.419885635375977
    8. ',b' → logprob: -12.544885635375977
    9. 'int' → logprob: -13.044885635375977
    10. 'a' → logprob: -13.294885635375977

Token 138: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.25195151567459106
    2. 'b' → logprob: -1.5019514560699463
    3. 'int' → logprob: -11.376951217651367
    4. ' ' → logprob: -11.626951217651367
    5. ' int' → logprob: -13.626951217651367
    6. ' =' → logprob: -15.376951217651367
    7. '  ' → logprob: -16.251951217651367
    8. '<|end|>' → logprob: -16.626951217651367
    9. '	b' → logprob: -16.751951217651367
    10. '    ' → logprob: -16.751951217651367

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03807775676250458
    2. ' =' → logprob: -3.2880778312683105
    3. '=int' → logprob: -10.288077354431152
    4. ',' → logprob: -13.538077354431152
    5. ')' → logprob: -15.038077354431152
    6. '   ' → logprob: -15.913077354431152
    7. 'int' → logprob: -16.16307830810547
    8. '=

' → logprob: -16.16307830810547
    9. '=}' → logprob: -16.66307830810547
    10. ' ' → logprob: -16.78807830810547

Token 140: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519303858280182
    2. ' int' → logprob: -1.5019303560256958
    3. ' map' → logprob: -14.876930236816406
    4. '   ' → logprob: -15.001930236816406
    5. '[int' → logprob: -15.376930236816406
    6. 'map' → logprob: -15.501930236816406
    7. '	int' → logprob: -16.001930236816406
    8. ' ' → logprob: -16.751930236816406
    9. '(int' → logprob: -17.251930236816406
    10. '=int' → logprob: -17.376930236816406

Token 141: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.375000953674316
    3. 'a' → logprob: -16.375
    4. '(b' → logprob: -17.625
    5. ' (' → logprob: -20.5
    6. '(
' → logprob: -21.0
    7. '(A' → logprob: -21.625
    8. '(ai' → logprob: -21.625
    9. ' ' → logprob: -22.375
    10. '(i' → logprob: -22.5

Token 142: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.39895400404930115
    2. '(a' → logprob: -2.148953914642334
    3. 'a' → logprob: -2.273953914642334
    4. '),' → logprob: -2.273953914642334
    5. 'str' → logprob: -6.023953914642334
    6. ')' → logprob: -6.148953914642334
    7. '_a' → logprob: -7.523953914642334
    8. ')a' → logprob: -8.023954391479492
    9. ',' → logprob: -8.148954391479492
    10. ',a' → logprob: -8.648954391479492

Token 143: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20163309574127197
    2. '),' → logprob: -1.701633095741272
    3. ')' → logprob: -8.82663345336914
    4. ' ,' → logprob: -9.95163345336914
    5. ',b' → logprob: -11.07663345336914
    6. ' ),' → logprob: -12.07663345336914
    7. '   ' → logprob: -13.57663345336914
    8. ' ' → logprob: -14.07663345336914
    9. ',),' → logprob: -14.07663345336914
    10. 'b' → logprob: -14.95163345336914

Token 144: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10020849853754044
    2. ' int' → logprob: -2.3502085208892822
    3. '<int' → logprob: -14.225208282470703
    4. '[int' → logprob: -14.475208282470703
    5. '(int' → logprob: -15.350208282470703
    6. '=int' → logprob: -15.475208282470703
    7. ' ' → logprob: -16.475208282470703
    8. '	int' → logprob: -16.725208282470703
    9. ':int' → logprob: -16.975208282470703
    10. 'b' → logprob: -16.975208282470703

Token 145: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.005314635578542948
    2. 'b' → logprob: -5.380314826965332
    3. ' b' → logprob: -7.880314826965332
    4. '(' → logprob: -8.255314826965332
    5. ')' → logprob: -10.880314826965332
    6. 'int' → logprob: -11.630314826965332
    7. '_b' → logprob: -11.755314826965332
    8. ')b' → logprob: -11.755314826965332
    9. '(a' → logprob: -12.630314826965332
    10. ' (' → logprob: -13.005314826965332

Token 146: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -4.096126576769166e-05
    2. ')' → logprob: -10.375041007995605
    3. 'str' → logprob: -12.250041007995605
    4. '_b' → logprob: -13.000041007995605
    5. 'b' → logprob: -13.875041007995605
    6. ')b' → logprob: -14.750041007995605
    7. 'Str' → logprob: -15.125041007995605
    8. '(b' → logprob: -15.375041007995605
    9. '_' → logprob: -15.500041007995605
    10. ')_' → logprob: -15.625041007995605

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011021859245374799
    2. ')
' → logprob: -9.125110626220703
    3. '   ' → logprob: -14.125110626220703
    4. '<|end|>' → logprob: -15.125110626220703
    5. ')

' → logprob: -15.875110626220703
    6. ' )' → logprob: -16.000110626220703
    7. ')
' → logprob: -17.875110626220703
    8. '),' → logprob: -18.125110626220703
    9. '<|end|>' → logprob: -18.250110626220703
    10. '))' → logprob: -18.750110626220703

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03427634760737419
    2. '
' → logprob: -3.409276247024536
    3. '    
' → logprob: -7.784276485443115
    4. '<|end|>' → logprob: -9.159276008605957
    5. 'if' → logprob: -9.409276008605957
    6. ' if' → logprob: -11.409276008605957
    7. '  
' → logprob: -12.534276008605957
    8. '   
' → logprob: -13.034276008605957
    9. '
' → logprob: -13.159276008605957
    10. ' 
' → logprob: -13.409276008605957

Token 149: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006579423788934946
    2. '   ' → logprob: -5.256579399108887
    3. ' if' → logprob: -6.631579399108887
    4. 'Y' → logprob: -10.881579399108887
    5. '```' → logprob: -13.006579399108887
    6. 'S' → logprob: -13.131579399108887
    7. ' ' → logprob: -13.631579399108887
    8. '  ' → logprob: -14.006579399108887
    9. '    
' → logprob: -14.881579399108887
    10. '	if' → logprob: -15.006579399108887

Token 150: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.22664891183376312
    2. 'b' → logprob: -1.6016489267349243
    3. ' a' → logprob: -7.226648807525635
    4. 'a' → logprob: -7.601648807525635
    5. ' ' → logprob: -11.976649284362793
    6. '	b' → logprob: -13.851649284362793
    7. ' ' → logprob: -14.476649284362793
    8. '_b' → logprob: -14.976649284362793
    9. '   ' → logprob: -14.976649284362793
    10. '    ' → logprob: -15.726649284362793

Token 151: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1602458506822586
    2. ' >' → logprob: -1.9102458953857422
    3. ' ' → logprob: -11.160245895385742
    4. '">' → logprob: -13.410245895385742
    5. '   ' → logprob: -13.660245895385742
    6. '<|end|>' → logprob: -13.660245895385742
    7. '>a' → logprob: -14.660245895385742
    8. ' ' → logprob: -14.785245895385742
    9. '>b' → logprob: -14.910245895385742
    10. '  ' → logprob: -15.035245895385742

Token 152: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008619539439678192
    2. ' a' → logprob: -4.75861930847168
    3. '   ' → logprob: -12.38361930847168
    4. ' ' → logprob: -15.00861930847168
    5. '	a' → logprob: -15.50861930847168
    6. '>a' → logprob: -16.38361930847168
    7. '    ' → logprob: -16.88361930847168
    8. '  ' → logprob: -16.88361930847168
    9. '_a' → logprob: -18.25861930847168
    10. ')a' → logprob: -19.13361930847168

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43029478192329407
    2. ':
' → logprob: -1.0552947521209717
    3. '       ' → logprob: -6.680294990539551
    4. '   ' → logprob: -8.05529499053955
    5. ':
' → logprob: -11.55529499053955
    6. ' :
' → logprob: -12.80529499053955
    7. ' :' → logprob: -13.55529499053955
    8. '):
' → logprob: -13.93029499053955
    9. ' and' → logprob: -14.05529499053955
    10. '=' → logprob: -14.30529499053955

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007041074801236391
    2. ':' → logprob: -5.132040977478027
    3. ' S' → logprob: -7.757040977478027
    4. ':
' → logprob: -7.757040977478027
    5. '   ' → logprob: -8.757040977478027
    6. 'S' → logprob: -10.882040977478027
    7. ',' → logprob: -10.882040977478027
    8. '      ' → logprob: -11.507040977478027
    9. '<|end|>' → logprob: -11.882040977478027
    10. '):
' → logprob: -12.257040977478027

Token 155: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.07959141582250595
    2. ' S' → logprob: -2.5795915126800537
    3. '       ' → logprob: -7.329591274261475
    4. '   ' → logprob: -10.079591751098633
    5. '           ' → logprob: -13.329591751098633
    6. ' ' → logprob: -13.454591751098633
    7. '  ' → logprob: -15.704591751098633
    8. '	S' → logprob: -15.829591751098633
    9. '
' → logprob: -16.079591751098633
    10. '```' → logprob: -17.204591751098633

Token 156: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741043448448181
    2. '+=' → logprob: -0.9741043448448181
    3. '+' → logprob: -10.974103927612305
    4. '=' → logprob: -12.349103927612305
    5. '   ' → logprob: -12.849103927612305
    6. '    ' → logprob: -13.724103927612305
    7. '+=(' → logprob: -13.974103927612305
    8. ']+=' → logprob: -14.349103927612305
    9. ' =' → logprob: -15.599103927612305
    10. '       ' → logprob: -16.349103927612305

Token 157: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.030772794038057327
    2. ' b' → logprob: -4.030772686004639
    3. '(b' → logprob: -4.405772686004639
    4. ' (' → logprob: -8.030773162841797
    5. '   ' → logprob: -12.030773162841797
    6. '(' → logprob: -12.530773162841797
    7. '	b' → logprob: -13.405773162841797
    8. ' ' → logprob: -15.280773162841797
    9. '_b' → logprob: -16.405773162841797
    10. '  ' → logprob: -16.655773162841797

Token 158: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740923047065735
    2. ' -' → logprob: -0.9740923047065735
    3. ' ' → logprob: -11.974092483520508
    4. ' ' → logprob: -12.349092483520508
    5. '   ' → logprob: -12.849092483520508
    6. '-a' → logprob: -13.599092483520508
    7. '  ' → logprob: -15.474092483520508
    8. 'a' → logprob: -15.849092483520508
    9. '-
' → logprob: -16.474092483520508
    10. '[' → logprob: -17.099092483520508

Token 159: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00012356207298580557
    2. ' a' → logprob: -9.000123977661133
    3. '   ' → logprob: -17.250123977661133
    4. '<|end|>' → logprob: -18.000123977661133
    5. ' ' → logprob: -18.750123977661133
    6. '	a' → logprob: -18.875123977661133
    7. '  ' → logprob: -20.250123977661133
    8. '_a' → logprob: -20.625123977661133
    9. '>a' → logprob: -21.875123977661133
    10. ''a' → logprob: -22.000123977661133

Token 160: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22886882722377777
    2. '       ' → logprob: -1.603868842124939
    3. 'Y' → logprob: -6.3538689613342285
    4. '
' → logprob: -6.6038689613342285
    5. ' Y' → logprob: -8.60386848449707
    6. '    
' → logprob: -10.10386848449707
    7. 'else' → logprob: -10.22886848449707
    8. ' else' → logprob: -10.60386848449707
    9. ',' → logprob: -10.97886848449707
    10. '        
' → logprob: -11.35386848449707

Token 161: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024794181808829308
    2. '       ' → logprob: -3.774794101715088
    3. 'Y' → logprob: -7.024794101715088
    4. ' else' → logprob: -8.149794578552246
    5. 'else' → logprob: -8.274794578552246
    6. ' Y' → logprob: -9.524794578552246
    7. '```' → logprob: -11.149794578552246
    8. '
' → logprob: -12.399794578552246
    9. ',' → logprob: -12.399794578552246
    10. '    
' → logprob: -12.774794578552246

Token 162: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' (adapté à ' Y') → logprob: -0.0023090504109859467
    2. ' Y' → logprob: -6.2523088455200195
    3. '       ' → logprob: -8.12730884552002
    4. '   ' → logprob: -9.37730884552002
    5. '           ' → logprob: -15.12730884552002
    6. '	Y' → logprob: -15.87730884552002
    7. ' ' → logprob: -17.127309799194336
    8. '  ' → logprob: -18.002309799194336
    9. '```' → logprob: -18.877309799194336
    10. 'y' → logprob: -18.877309799194336

Token 163: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033903829171322286
    2. '.' → logprob: -8.00033950805664
    3. '.app' → logprob: -14.00033950805664
    4. '.add' → logprob: -14.25033950805664
    5. '.extend' → logprob: -14.62533950805664
    6. ' .' → logprob: -14.75033950805664
    7. '.Append' → logprob: -14.75033950805664
    8. '.ap' → logprob: -14.75033950805664
    9. ').' → logprob: -16.00033950805664
    10. '.push' → logprob: -16.25033950805664

Token 164: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0007383962511084974
    2. '(' → logprob: -7.250738620758057
    3. '(a' → logprob: -10.500738143920898
    4. '([' → logprob: -13.875738143920898
    5. '(b' → logprob: -16.7507381439209
    6. '(
' → logprob: -17.6257381439209
    7. '(((' → logprob: -17.8757381439209
    8. ' ((' → logprob: -18.3757381439209
    9. '(y' → logprob: -19.0007381439209
    10. '   ' → logprob: -19.2507381439209

Token 165: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005654225824400783
    2. 'b' → logprob: -7.500565528869629
    3. ' a' → logprob: -11.375565528869629
    4. '(a' → logprob: -14.625565528869629
    5. '   ' → logprob: -14.875565528869629
    6. '	a' → logprob: -17.125564575195312
    7. ' b' → logprob: -17.125564575195312
    8. ')a' → logprob: -17.375564575195312
    9. ')' → logprob: -18.000564575195312
    10. ''a' → logprob: -18.125564575195312

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004627598915249109
    2. ' ,' → logprob: -6.004627704620361
    3. ',a' → logprob: -6.379627704620361
    4. ' -' → logprob: -8.504627227783203
    5. '-' → logprob: -8.754627227783203
    6. ')' → logprob: -10.379627227783203
    7. ',
' → logprob: -10.754627227783203
    8. ' ' → logprob: -11.754627227783203
    9. '))' → logprob: -11.879627227783203
    10. 'a' → logprob: -11.879627227783203

Token 167: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0013548793504014611
    2. ' a' → logprob: -6.626354694366455
    3. ' ' → logprob: -12.001355171203613
    4. ')' → logprob: -12.251355171203613
    5. '   ' → logprob: -12.251355171203613
    6. '-a' → logprob: -13.001355171203613
    7. 'b' → logprob: -13.001355171203613
    8. '-' → logprob: -13.001355171203613
    9. ')a' → logprob: -13.626355171203613
    10. ''a' → logprob: -13.751355171203613

Token 168: '))' (ID: 915)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28176409006118774
    2. ' -' → logprob: -1.406764030456543
    3. '-a' → logprob: -8.281764030456543
    4. ')' → logprob: -8.656764030456543
    5. '))' → logprob: -9.031764030456543
    6. ',' → logprob: -10.656764030456543
    7. ' ' → logprob: -10.781764030456543
    8. '%' → logprob: -12.031764030456543
    9. '   ' → logprob: -12.156764030456543
    10. 'a' → logprob: -12.906764030456543

Token 169: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' b' (ID: 287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4491109848022461
    2. '<|end|>' → logprob: -1.074110984802246
    3. 'b' → logprob: -4.949110984802246
    4. 'a' → logprob: -5.199110984802246
    5. ')b' → logprob: -6.574110984802246
    6. ' ' → logprob: -6.574110984802246
    7. ' )' → logprob: -6.699110984802246
    8. ' b' → logprob: -7.199110984802246
    9. '0' → logprob: -7.824110984802246
    10. '<|end|>' → logprob: -7.949110984802246

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23844048380851746
    2. ')' → logprob: -2.36344051361084
    3. '<|end|>' → logprob: -2.48844051361084
    4. ' -' → logprob: -4.48844051361084
    5. ' ,' → logprob: -4.73844051361084
    6. '-' → logprob: -5.11344051361084
    7. ',b' → logprob: -6.11344051361084
    8. '+' → logprob: -6.73844051361084
    9. '<|end|>' → logprob: -6.98844051361084
    10. ',
' → logprob: -7.11344051361084

Token 173: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12989629805088043
    2. 'b' → logprob: -2.129896402359009
    3. ' a' → logprob: -6.37989616394043
    4. '0' → logprob: -7.25489616394043
    5. ' b' → logprob: -8.00489616394043
    6. ')' → logprob: -9.75489616394043
    7. '1' → logprob: -10.00489616394043
    8. ' ' → logprob: -10.50489616394043
    9. 'S' → logprob: -11.62989616394043
    10. ')a' → logprob: -11.62989616394043

Token 174: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ''est' (ID: 6616)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.3777891993522644
    2. ''est' → logprob: -1.5027892589569092
    3. 'est' → logprob: -3.252789258956909
    4. 'e' → logprob: -4.50278902053833
    5. ' parce' → logprob: -4.62778902053833
    6. 'on' → logprob: -5.50278902053833
    7. 'omme' → logprob: -5.50278902053833
    8. 'car' → logprob: -5.75278902053833
    9. ' car' → logprob: -6.50278902053833
    10. 'ont' → logprob: -6.62778902053833

Token 178: ' ce' (ID: 2357)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8495677709579468
    2. 'un' → logprob: -2.2245678901672363
    3. 'une' → logprob: -2.2245678901672363
    4. 'pour' → logprob: -2.3495678901672363
    5. '(b' → logprob: -2.9745678901672363
    6. ' un' → logprob: -3.3495678901672363
    7. ' intentional' → logprob: -3.8495678901672363
    8. ' deliberate' → logprob: -3.8495678901672363
    9. ' une' → logprob: -3.9745678901672363
    10. 'par' → logprob: -4.474567890167236

Token 179: ' qu' (ID: 474)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.5010696053504944
    2. 'qui' → logprob: -1.1260695457458496
    3. ' qui' → logprob: -3.8760695457458496
    4. ' que' → logprob: -4.00106954574585
    5. 'qu' → logprob: -4.25106954574585
    6. 'n' → logprob: -4.87606954574585
    7. 'pour' → logprob: -5.75106954574585
    8. ' qu' → logprob: -6.62606954574585
    9. 'b' → logprob: -7.00106954574585
    10. '```' → logprob: -7.50106954574585

Token 180: ''il' (ID: 14683)
  Prédit: ''on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.21346081793308258
    2. ''il' → logprob: -2.088460922241211
    3. 'on' → logprob: -4.088460922241211
    4. 'qui' → logprob: -4.463460922241211
    5. 'qu' → logprob: -4.713460922241211
    6. ' qu' → logprob: -4.713460922241211
    7. ' que' → logprob: -5.088460922241211
    8. 'que' → logprob: -5.088460922241211
    9. ' on' → logprob: -5.963460922241211
    10. 'b' → logprob: -6.213460922241211

Token 181: ' faut' (ID: 17821)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.15044519305229187
    2. ' faut' → logprob: -2.1504452228546143
    3. ' faudra' → logprob: -5.025444984436035
    4. ' faudrait' → logprob: -5.775444984436035
    5. 'rest' → logprob: -5.900444984436035
    6. ' reste' → logprob: -6.275444984436035
    7. 'fa' → logprob: -6.400444984436035
    8. 'fall' → logprob: -6.775444984436035
    9. ' fallait' → logprob: -7.150444984436035
    10. ' manque' → logprob: -7.525444984436035

Token 182: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: ''après' (ID: 105130)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9931976795196533
    2. 'e' → logprob: -1.1181976795196533
    3. 'eux' → logprob: -2.1181976795196533
    4. 'es' → logprob: -3.4931976795196533
    5. 'emain' → logprob: -3.8681976795196533
    6. 'ep' → logprob: -3.8681976795196533
    7. ''abord' → logprob: -4.118197441101074
    8. 'és' → logprob: -4.368197441101074
    9. 'onc' → logprob: -4.368197441101074
    10. 'ef' → logprob: -4.493197441101074

Token 184: ' idée' (ID: 64187)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2977268695831299
    2. 'l' → logprob: -2.54772686958313
    3. 'la' → logprob: -2.79772686958313
    4. ' le' → logprob: -3.29772686958313
    5. 'the' → logprob: -3.92272686958313
    6. ' la' → logprob: -4.047726631164551
    7. ' votre' → logprob: -4.297726631164551
    8. 'user' → logprob: -5.047726631164551
    9. ' l' → logprob: -5.922726631164551
    10. 'ton' → logprob: -5.922726631164551

Token 185: ' originale' (ID: 90997)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.20328404009342194
    2. '   ' → logprob: -1.8282840251922607
    3. ' else' → logprob: -4.20328426361084
    4. 'elif' → logprob: -4.82828426361084
    5. ' elif' → logprob: -8.70328426361084
    6. '<|end|>' → logprob: -9.82828426361084
    7. '	else' → logprob: -10.07828426361084
    8. ')' → logprob: -11.07828426361084
    9. '       ' → logprob: -11.70328426361084
    10. ' ' → logprob: -11.82828426361084

Token 189: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6650040149688721
    2. ':
' → logprob: -0.9150040149688721
    3. ':' → logprob: -2.665004014968872
    4. '   ' → logprob: -4.165003776550293
    5. '    ' → logprob: -11.290003776550293
    6. ' :
' → logprob: -11.415003776550293
    7. '     ' → logprob: -11.665003776550293
    8. '           ' → logprob: -11.665003776550293
    9. '      ' → logprob: -11.790003776550293
    10. '        ' → logprob: -11.790003776550293

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005451936274766922
    2. '   ' → logprob: -5.2554521560668945
    3. ' Y' → logprob: -9.005452156066895
    4. 'Y' → logprob: -9.630452156066895
    5. ' ' → logprob: -11.380452156066895
    6. '     ' → logprob: -12.380452156066895
    7. '    ' → logprob: -12.505452156066895
    8. '      ' → logprob: -13.130452156066895
    9. '           ' → logprob: -13.255452156066895
    10. '  ' → logprob: -13.755452156066895

Token 191: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' (adapté à ' Y') → logprob: -0.030271179974079132
    2. ' Y' → logprob: -3.530271291732788
    3. '   ' → logprob: -7.780271053314209
    4. '       ' → logprob: -10.030271530151367
    5. 'S' → logprob: -10.280271530151367
    6. '	Y' → logprob: -11.530271530151367
    7. ' ' → logprob: -12.530271530151367
    8. 'a' → logprob: -12.655271530151367
    9. '    ' → logprob: -13.530271530151367
    10. ' S' → logprob: -13.655271530151367

Token 192: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001249925117008388
    2. '.' → logprob: -9.00012493133545
    3. 'append' → logprob: -14.12512493133545
    4. ' .' → logprob: -15.25012493133545
    5. '.app' → logprob: -15.37512493133545
    6. '.extend' → logprob: -15.62512493133545
    7. '.ap' → logprob: -16.250125885009766
    8. '.setdefault' → logprob: -18.125125885009766
    9. '].' → logprob: -18.625125885009766
    10. ').' → logprob: -18.625125885009766

Token 193: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.62500286102295
    3. '(a' → logprob: -14.50000286102295
    4. '(('' → logprob: -15.12500286102295
    5. '((-' → logprob: -15.62500286102295
    6. '(b' → logprob: -15.87500286102295
    7. ' ((' → logprob: -16.500001907348633
    8. '(([' → logprob: -16.625001907348633
    9. '(((' → logprob: -17.000001907348633
    10. '(None' → logprob: -17.250001907348633

Token 194: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04922977089881897
    2. '(a' → logprob: -3.049229860305786
    3. 'b' → logprob: -7.674229621887207
    4. '(b' → logprob: -9.799229621887207
    5. ' a' → logprob: -10.049229621887207
    6. '(' → logprob: -10.424229621887207
    7. '0' → logprob: -10.924229621887207
    8. ')a' → logprob: -11.674229621887207
    9. '   ' → logprob: -12.299229621887207
    10. ' (' → logprob: -12.424229621887207

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020771251001860946
    2. ',a' → logprob: -9.125207901000977
    3. ',
' → logprob: -9.750207901000977
    4. ' ,' → logprob: -10.875207901000977
    5. 'a' → logprob: -11.500207901000977
    6. ',b' → logprob: -13.125207901000977
    7. ')' → logprob: -13.250207901000977
    8. '),' → logprob: -13.875207901000977
    9. ',

' → logprob: -13.875207901000977
    10. ',)' → logprob: -14.000207901000977

Token 196: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013942400924861431
    2. 'b' → logprob: -4.638942241668701
    3. ' a' → logprob: -5.513942241668701
    4. ' b' → logprob: -9.13894271850586
    5. ')' → logprob: -12.01394271850586
    6. '   ' → logprob: -12.01394271850586
    7. ' ' → logprob: -12.45144271850586
    8. '(a' → logprob: -12.82644271850586
    9. ')a' → logprob: -12.95144271850586
    10. '	a' → logprob: -13.07644271850586

Token 197: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3868805766105652
    2. ')' → logprob: -1.13688063621521
    3. '))
' → logprob: -12.636880874633789
    4. ')))' → logprob: -12.886880874633789
    5. ')
' → logprob: -13.261880874633789
    6. ' )' → logprob: -14.636880874633789
    7. ' ))' → logprob: -14.636880874633789
    8. ')}' → logprob: -15.136880874633789
    9. '),' → logprob: -15.511880874633789
    10. '})' → logprob: -16.26188087463379

Token 198: 'Y' (ID: 56)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0030140725430101156
    2. ' sorted' → logprob: -6.503014087677002
    3. 'list' → logprob: -7.128014087677002
    4. '[' → logprob: -7.503014087677002
    5. 'tuple' → logprob: -10.128013610839844
    6. '[(' → logprob: -10.253013610839844
    7. 'set' → logprob: -10.253013610839844
    8. '(sorted' → logprob: -11.253013610839844
    9. ' [' → logprob: -11.503013610839844
    10. 'dict' → logprob: -12.128013610839844

Token 201: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -2.3319124011322856e-05
    2. '(' → logprob: -11.125022888183594
    3. 'Y' → logprob: -12.125022888183594
    4. '((' → logprob: -12.875022888183594
    5. '(y' → logprob: -15.125022888183594
    6. '(S' → logprob: -16.875022888183594
    7. '(
' → logprob: -17.125022888183594
    8. '```' → logprob: -17.375022888183594
    9. ' (' → logprob: -17.750022888183594
    10. '[Y' → logprob: -18.000022888183594

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13357232511043549
    2. ',' → logprob: -2.5085723400115967
    3. ',key' → logprob: -3.1335723400115967
    4. '(key' → logprob: -11.133572578430176
    5. '(),' → logprob: -11.258572578430176
    6. '()' → logprob: -11.383572578430176
    7. 'key' → logprob: -11.508572578430176
    8. '())' → logprob: -11.508572578430176
    9. ' ,' → logprob: -11.633572578430176
    10. ' )' → logprob: -11.758572578430176

Token 203: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' un' (ID: 537)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7399239540100098
    2. 'result' → logprob: -2.9899239540100098
    3. 'res' → logprob: -3.1149239540100098
    4. 'dp' → logprob: -3.2399239540100098
    5. 'delta' → logprob: -3.3649239540100098
    6. '#' → logprob: -3.3649239540100098
    7. '[' → logprob: -3.6149239540100098
    8. 'total' → logprob: -3.6149239540100098
    9. 'idx' → logprob: -3.7399239540100098
    10. 'import' → logprob: -3.7399239540100098

Token 205: ' tri' (ID: 12665)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.1988784521818161
    2. 'e' → logprob: -2.573878526687622
    3. 'iquement' → logprob: -4.073878288269043
    4. '#' → logprob: -4.698878288269043
    5. 'sort' → logprob: -4.698878288269043
    6. ' sorted' → logprob: -5.198878288269043
    7. 'Y' → logprob: -5.198878288269043
    8. 'tri' → logprob: -5.323878288269043
    9. 's' → logprob: -5.573878288269043
    10. ']' → logprob: -5.573878288269043

Token 206: ' sur' (ID: 1512)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9659640192985535
    2. 'def' → logprob: -2.0909640789031982
    3. '<|end|>' → logprob: -2.2159640789031982
    4. '#' → logprob: -2.7159640789031982
    5. ',' → logprob: -3.0909640789031982
    6. ' =' → logprob: -3.2159640789031982
    7. '()
' → logprob: -3.3409640789031982
    8. '=' → logprob: -3.4659640789031982
    9. '(' → logprob: -3.7159640789031982
    10. 'for' → logprob: -3.8409640789031982

Token 207: ' les' (ID: 1341)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.009869183413684368
    2. 'lambda' → logprob: -5.25986909866333
    3. ' Y' → logprob: -5.63486909866333
    4. ' lambda' → logprob: -8.009869575500488
    5. '(Y' → logprob: -8.259869575500488
    6. 'len' → logprob: -8.634869575500488
    7. '(lambda' → logprob: -9.009869575500488
    8. '[Y' → logprob: -9.759869575500488
    9. 'l' → logprob: -10.009869575500488
    10. 'key' → logprob: -11.509869575500488

Token 208: ' tuples' (ID: 112464)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.011375305242836475
    2. 'prem' → logprob: -4.761375427246094
    3. 'lambda' → logprob: -6.511375427246094
    4. ' Y' → logprob: -8.386375427246094
    5. 't' → logprob: -8.761375427246094
    6. '[' → logprob: -9.511375427246094
    7. 'a' → logprob: -9.636375427246094
    8. 'x' → logprob: -9.761375427246094
    9. 'de' → logprob: -9.761375427246094
    10. '0' → logprob: -9.886375427246094

Token 209: ' (' (ID: 350)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.5459375381469727
    2. 'delta' → logprob: -2.1709375381469727
    3. 'total' → logprob: -2.5459375381469727
    4. 'dp' → logprob: -2.5459375381469727
    5. 'M' → logprob: -2.7959375381469727
    6. 'result' → logprob: -2.9209375381469727
    7. 'ans' → logprob: -3.0459375381469727
    8. 'diff' → logprob: -3.4209375381469727
    9. 'max' → logprob: -3.5459375381469727
    10. 'for' → logprob: -3.5459375381469727

Token 210: 'étr' (ID: 35025)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010050622513517737
    2. ')
' → logprob: -7.751005172729492
    3. ',' → logprob: -8.501005172729492
    4. '())' → logprob: -9.001005172729492
    5. '()' → logprob: -10.001005172729492
    6. '))' → logprob: -10.126005172729492
    7. 'Y' → logprob: -10.251005172729492
    8. ')#' → logprob: -10.751005172729492
    9. ' )' → logprob: -11.001005172729492
    10. 'key' → logprob: -11.251005172729492

Token 211: 'ange' (ID: 1052)
  Prédit: 'ange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.015885258093476295
    2. 'anges' → logprob: -4.640885353088379
    3. 'angement' → logprob: -5.765885353088379
    4. 'angle' → logprob: -7.140885353088379
    5. 'e' → logprob: -7.765885353088379
    6. 'ang' → logprob: -8.015885353088379
    7. 'a' → logprob: -8.015885353088379
    8. 'anger' → logprob: -8.140885353088379
    9. 'anged' → logprob: -8.515885353088379
    10. 'an' → logprob: -8.765885353088379

Token 212: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008985031396150589
    2. ',' → logprob: -4.7589850425720215
    3. ' )' → logprob: -8.883984565734863
    4. ')
' → logprob: -9.133984565734863
    5. '[' → logprob: -10.633984565734863
    6. '))' → logprob: -11.133984565734863
    7. ',)' → logprob: -11.133984565734863
    8. '),' → logprob: -11.883984565734863
    9. ')...' → logprob: -11.883984565734863
    10. ' ,' → logprob: -12.008984565734863

Token 213: ' mais' (ID: 2899)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.23124288022518158
    2. ' key' → logprob: -1.6062428951263428
    3. ')' → logprob: -5.981242656707764
    4. 'Y' → logprob: -6.606242656707764
    5. 'reverse' → logprob: -6.856242656707764
    6. ' reverse' → logprob: -8.356243133544922
    7. '),' → logprob: -8.981243133544922
    8. ' mais' → logprob: -9.481243133544922
    9. 'lambda' → logprob: -9.731243133544922
    10. ' Y' → logprob: -9.856243133544922

Token 214: ' on' (ID: 402)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.6169770359992981
    2. 'ça' → logprob: -1.4919769763946533
    3. 'c' → logprob: -3.4919769763946533
    4. 'utile' → logprob: -3.6169769763946533
    5. 'cela' → logprob: -3.8669769763946533
    6. 'normal' → logprob: -3.8669769763946533
    7. 'possible' → logprob: -4.491977214813232
    8. 'pas' → logprob: -4.491977214813232
    9. 'correct' → logprob: -4.491977214813232
    10. 'tout' → logprob: -4.491977214813232

Token 215: ' fait' (ID: 7473)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9338070750236511
    2. 'pe' → logprob: -1.433807134628296
    3. ')' → logprob: -1.808807134628296
    4. ' continue' → logprob: -3.183807134628296
    5. 'va' → logprob: -3.433807134628296
    6. 'a' → logprob: -4.183806896209717
    7. ' peut' → logprob: -4.308806896209717
    8. 'y' → logprob: -4.558806896209717
    9. 's' → logprob: -4.683806896209717
    10. 'n' → logprob: -5.183806896209717

Token 216: ' comme' (ID: 7971)
  Prédit: 'cela'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cela' → logprob: -0.6353119015693665
    2. 'comme' → logprob: -1.2603118419647217
    3. 'simple' → logprob: -3.5103118419647217
    4. 'con' → logprob: -4.010312080383301
    5. 'cel' → logprob: -4.135312080383301
    6. 'avec' → logprob: -4.260312080383301
    7. 'le' → logprob: -4.510312080383301
    8. 'au' → logprob: -4.635312080383301
    9. ' ça' → logprob: -4.885312080383301
    10. 'continue' → logprob: -4.885312080383301

Token 217: ' original' (ID: 4756)
  Prédit: 'ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ça' → logprob: -0.07195865362882614
    2. 'd' → logprob: -3.946958541870117
    3. 'cela' → logprob: -4.071958541870117
    4. 'avant' → logprob: -4.696958541870117
    5. 'Y' → logprob: -4.946958541870117
    6. 'l' → logprob: -6.321958541870117
    7. 'cel' → logprob: -6.446958541870117
    8. 'before' → logprob: -6.446958541870117
    9. 'ce' → logprob: -6.571958541870117
    10. 'python' → logprob: -6.571958541870117

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5120287066092715e-05
    2. ')
' → logprob: -11.375035285949707
    3. ' )' → logprob: -12.125035285949707
    4. '())' → logprob: -12.125035285949707
    5. '()' → logprob: -12.625035285949707
    6. '[' → logprob: -12.875035285949707
    7. '))' → logprob: -13.500035285949707
    8. '#' → logprob: -13.625035285949707
    9. 'Y' → logprob: -13.750035285949707
    10. ')#' → logprob: -13.875035285949707

Token 219: 'YY' (ID: 17848)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.2386997938156128
    2. 'X' → logprob: -2.1136999130249023
    3. 'for' → logprob: -2.3636999130249023
    4. 'R' → logprob: -2.8636999130249023
    5. 'res' → logprob: -2.9886999130249023
    6. 'total' → logprob: -3.4886999130249023
    7. 'dp' → logprob: -3.6136999130249023
    8. 'max' → logprob: -3.7386999130249023
    9. 'result' → logprob: -3.7386999130249023
    10. 'i' → logprob: -3.8636999130249023

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5777016282081604
    2. '=' → logprob: -0.8277016282081604
    3. '=[]' → logprob: -7.702701568603516
    4. '.sort' → logprob: -7.952701568603516
    5. '_' → logprob: -8.327701568603516
    6. '.append' → logprob: -9.327701568603516
    7. '_sorted' → logprob: -9.327701568603516
    8. ')' → logprob: -9.577701568603516
    9. ' ' → logprob: -9.702701568603516
    10. '[' → logprob: -9.952701568603516

Token 221: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16923211514949799
    2. '[' → logprob: -2.419232130050659
    3. '[Y' → logprob: -3.794232130050659
    4. '[len' → logprob: -3.919232130050659
    5. 'len' → logprob: -4.91923189163208
    6. '[S' → logprob: -5.66923189163208
    7. '[]
' → logprob: -5.79423189163208
    8. 'Y' → logprob: -5.91923189163208
    9. ' []' → logprob: -6.41923189163208
    10. '0' → logprob: -6.54423189163208

Token 222: '0' (ID: 15)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.8361752033233643
    2. '0' → logprob: -1.2111752033233643
    3. 'y' → logprob: -1.4611752033233643
    4. 'x' → logprob: -4.086174964904785
    5. '(' → logprob: -5.461174964904785
    6. ']' → logprob: -5.711174964904785
    7. '(y' → logprob: -6.336174964904785
    8. 'v' → logprob: -6.336174964904785
    9. 'S' → logprob: -6.461174964904785
    10. '1' → logprob: -6.586174964904785

Token 223: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0053710718639194965
    2. ',' → logprob: -6.13037109375
    3. ']
' → logprob: -6.75537109375
    4. '0' → logprob: -7.50537109375
    5. '[' → logprob: -7.75537109375
    6. 'for' → logprob: -8.13037109375
    7. ']*(' → logprob: -8.50537109375
    8. '][' → logprob: -8.75537109375
    9. ']*' → logprob: -9.00537109375
    10. ' for' → logprob: -9.00537109375

Token 224: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01992635615170002
    2. ',' → logprob: -4.26992654800415
    3. '0' → logprob: -6.39492654800415
    4. ']*(' → logprob: -6.89492654800415
    5. 'for' → logprob: -7.14492654800415
    6. ']*' → logprob: -7.26992654800415
    7. '<|end|>' → logprob: -7.39492654800415
    8. ']
' → logprob: -7.89492654800415
    9. ']+' → logprob: -8.644926071166992
    10. ' for' → logprob: -8.769926071166992

Token 225: ' (' (ID: 350)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.6167818307876587
    2. '(N' → logprob: -0.8667818307876587
    3. '(' → logprob: -3.241781711578369
    4. 'len' → logprob: -8.116782188415527
    5. ' (' → logprob: -8.366782188415527
    6. '(n' → logprob: -8.491782188415527
    7. 'N' → logprob: -9.366782188415527
    8. '(max' → logprob: -10.241782188415527
    9. '((' → logprob: -10.616782188415527
    10. '(NS' → logprob: -11.616782188415527

Token 226: 'N' (ID: 45)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5787532329559326
    2. 'N' → logprob: -1.8287532329559326
    3. '(len' → logprob: -1.8287532329559326
    4. '(N' → logprob: -2.2037532329559326
    5. '2' → logprob: -5.453753471374512
    6. '(' → logprob: -5.703753471374512
    7. ' len' → logprob: -10.078753471374512
    8. ' (' → logprob: -10.453753471374512
    9. ' N' → logprob: -11.078753471374512
    10. '1' → logprob: -11.578753471374512

Token 227: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001330360071733594
    2. ' +' → logprob: -6.626330375671387
    3. ')' → logprob: -12.751330375671387
    4. '+
' → logprob: -14.001330375671387
    5. '+)' → logprob: -14.876330375671387
    6. '1' → logprob: -15.126330375671387
    7. '*' → logprob: -16.50132942199707
    8. '2' → logprob: -17.62632942199707
    9. '```' → logprob: -18.12632942199707
    10. '0' → logprob: -18.25132942199707

Token 228: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003610878484323621
    2. '2' → logprob: -5.628611087799072
    3. ' ' → logprob: -11.628610610961914
    4. '3' → logprob: -13.878610610961914
    5. '10' → logprob: -15.003610610961914
    6. '5' → logprob: -15.753610610961914
    7. '11' → logprob: -16.253610610961914
    8. '4' → logprob: -16.628610610961914
    9. '   ' → logprob: -16.878610610961914
    10. '7' → logprob: -16.941110610961914

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015165306394919753
    2. '2' → logprob: -6.501516342163086
    3. ' ' → logprob: -11.376516342163086
    4. '3' → logprob: -13.751516342163086
    5. '10' → logprob: -14.251516342163086
    6. '5' → logprob: -15.126516342163086
    7. '   ' → logprob: -15.939016342163086
    8. '
' → logprob: -16.189016342163086
    9. '11' → logprob: -16.314016342163086
    10. '4' → logprob: -16.376516342163086

Token 230: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048619385808706284
    2. ')
' → logprob: -3.048619270324707
    3. ')
' → logprob: -11.048619270324707
    4. ' )' → logprob: -11.923619270324707
    5. ')

' → logprob: -12.048619270324707
    6. ' )
' → logprob: -13.923619270324707
    7. '+' → logprob: -13.923619270324707
    8. '
' → logprob: -14.548619270324707
    9. ')`
' → logprob: -15.548619270324707
    10. '[' → logprob: -15.673619270324707

Token 231: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.1093578804284334e-05
    2. ' for' → logprob: -10.375051498413086
    3. 'acc' → logprob: -11.750051498413086
    4. 'c' → logprob: -13.000051498413086
    5. 'prefix' → logprob: -13.250051498413086
    6. 'i' → logprob: -13.500051498413086
    7. 'total' → logprob: -13.625051498413086
    8. 'sum' → logprob: -13.625051498413086
    9. 'cum' → logprob: -13.875051498413086
    10. 's' → logprob: -14.000051498413086

Token 232: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07015939056873322
    2. ' i' → logprob: -2.695159435272217
    3. 'j' → logprob: -8.695158958435059
    4. 'k' → logprob: -10.820158958435059
    5. ' j' → logprob: -10.820158958435059
    6. '	i' → logprob: -11.945158958435059
    7. ' ' → logprob: -13.070158958435059
    8. '_i' → logprob: -13.320158958435059
    9. ' k' → logprob: -13.945158958435059
    10. 'x' → logprob: -14.320158958435059

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014195947907865047
    2. 'in' → logprob: -4.264195919036865
    3. ' ' → logprob: -10.764196395874023
    4. ',' → logprob: -12.514196395874023
    5. '+' → logprob: -13.139196395874023
    6. '   ' → logprob: -13.889196395874023
    7. '	in' → logprob: -14.139196395874023
    8. '```' → logprob: -14.514196395874023
    9. 'In' → logprob: -14.889196395874023
    10. '  ' → logprob: -15.014196395874023

Token 234: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014296548441052437
    2. ' range' → logprob: -4.264296531677246
    3. 'in' → logprob: -9.014296531677246
    4. ' in' → logprob: -12.014296531677246
    5. ' ' → logprob: -12.764296531677246
    6. '  ' → logprob: -13.889296531677246
    7. '   ' → logprob: -14.139296531677246
    8. '_' → logprob: -15.389296531677246
    9. ' xrange' → logprob: -15.639296531677246
    10. '	range' → logprob: -15.764296531677246

Token 235: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5760860443115234
    2. '(' → logprob: -0.8260860443115234
    3. 'range' → logprob: -9.951086044311523
    4. '(len' → logprob: -10.326086044311523
    5. 'in' → logprob: -10.326086044311523
    6. '(range' → logprob: -10.701086044311523
    7. 'N' → logprob: -12.701086044311523
    8. '(n' → logprob: -12.701086044311523
    9. '1' → logprob: -13.576086044311523
    10. ' (' → logprob: -13.951086044311523

Token 236: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13790281116962433
    2. '+' → logprob: -2.7629027366638184
    3. '):' → logprob: -3.1379027366638184
    4. '-' → logprob: -4.012902736663818
    5. ' -' → logprob: -6.387902736663818
    6. '):
' → logprob: -6.387902736663818
    7. ' +' → logprob: -7.387902736663818
    8. ')' → logprob: -9.262903213500977
    9. '1' → logprob: -9.387903213500977
    10. '   ' → logprob: -10.262903213500977

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.718606891809031e-05
    2. ' YY' → logprob: -10.625066757202148
    3. 'YY' → logprob: -10.750066757202148
    4. '```' → logprob: -11.625066757202148
    5. '   ' → logprob: -12.625066757202148
    6. '	' → logprob: -12.875066757202148
    7. '	yy' → logprob: -13.375066757202148
    8. '       ' → logprob: -13.625066757202148
    9. ' ' → logprob: -14.125066757202148
    10. '``' → logprob: -14.375066757202148

Token 238: ' YY' (ID: 45694)
  Prédit: 'YY'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YY' (adapté à ' YY') → logprob: -0.0004004024958703667
    2. '   ' → logprob: -8.00040054321289
    3. 'yy' → logprob: -10.25040054321289
    4. 'Y' → logprob: -10.75040054321289
    5. ' YY' → logprob: -12.37540054321289
    6. 'a' → logprob: -13.37540054321289
    7. 'YYYY' → logprob: -13.50040054321289
    8. 'YYY' → logprob: -15.50040054321289
    9. 'y' → logprob: -15.75040054321289
    10. 'XX' → logprob: -15.87540054321289

Token 239: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015300170343834907
    2. '[' → logprob: -8.875152587890625
    3. '[Y' → logprob: -12.500152587890625
    4. '[I' → logprob: -12.875152587890625
    5. ' [' → logprob: -13.750152587890625
    6. '```' → logprob: -13.750152587890625
    7. '[
' → logprob: -14.000152587890625
    8. '[N' → logprob: -14.250152587890625
    9. '
' → logprob: -14.375152587890625
    10. '   ' → logprob: -15.000152587890625

Token 240: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22603946924209595
    2. ']' → logprob: -1.6010394096374512
    3. ' +' → logprob: -7.476039409637451
    4. ']=' → logprob: -10.72603988647461
    5. '+]' → logprob: -11.10103988647461
    6. ']+=' → logprob: -11.47603988647461
    7. '+=' → logprob: -12.85103988647461
    8. '=' → logprob: -13.10103988647461
    9. '1' → logprob: -13.22603988647461
    10. '[' → logprob: -13.35103988647461

Token 241: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.360996485454962e-05
    2. ' ' → logprob: -9.7500638961792
    3. '   ' → logprob: -12.5000638961792
    4. '```' → logprob: -14.6250638961792
    5. 'i' → logprob: -15.1250638961792
    6. ')' → logprob: -16.375062942504883
    7. '>' → logprob: -16.437562942504883
    8. '<|end|>' → logprob: -16.562562942504883
    9. ']' → logprob: -16.875062942504883
    10. '`' → logprob: -16.937562942504883

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6100132496794686e-05
    2. ' ' → logprob: -9.875056266784668
    3. '   ' → logprob: -13.000056266784668
    4. 'i' → logprob: -13.937556266784668
    5. '```' → logprob: -15.437556266784668
    6. '
' → logprob: -15.687556266784668
    7. '  ' → logprob: -16.00005531311035
    8. '2' → logprob: -16.56255531311035
    9. '0' → logprob: -16.62505531311035
    10. '(i' → logprob: -16.75005531311035

Token 243: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00032950565218925476
    2. ']=' → logprob: -8.625329971313477
    3. ']+=' → logprob: -9.125329971313477
    4. '=' → logprob: -10.750329971313477
    5. ' ]' → logprob: -11.000329971313477
    6. ' =' → logprob: -13.375329971313477
    7. '+=' → logprob: -14.125329971313477
    8. ' +=' → logprob: -14.875329971313477
    9. ')' → logprob: -16.500329971313477
    10. ']+' → logprob: -16.625329971313477

Token 244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0020063186530023813
    2. ' =' → logprob: -6.502006530761719
    3. '+=' → logprob: -7.627006530761719
    4. ' +=' → logprob: -11.002006530761719
    5. '[' → logprob: -17.62700653076172
    6. '=

' → logprob: -18.00200653076172
    7. ']+=' → logprob: -18.00200653076172
    8. '+' → logprob: -18.25200653076172
    9. '=
' → logprob: -18.37700653076172
    10. '.=' → logprob: -18.50200653076172

Token 245: ' YY' (ID: 45694)
  Prédit: 'YY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YY' → logprob: -0.0005134754464961588
    2. ' YY' → logprob: -8.000513076782227
    3. 'Y' → logprob: -8.875513076782227
    4. '   ' → logprob: -10.500513076782227
    5. 'YYY' → logprob: -12.250513076782227
    6. 'YYYY' → logprob: -13.000513076782227
    7. 'yy' → logprob: -13.500513076782227
    8. 'max' → logprob: -14.250513076782227
    9. 'YS' → logprob: -14.375513076782227
    10. ' Y' → logprob: -15.750513076782227

Token 246: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.250000953674316
    3. 'i' → logprob: -15.875000953674316
    4. '```' → logprob: -16.5
    5. '[I' → logprob: -16.875
    6. '[
' → logprob: -18.25
    7. '
' → logprob: -18.875
    8. ' [' → logprob: -19.0
    9. '[N' → logprob: -19.0
    10. ' i' → logprob: -19.875

Token 247: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5346395969390869
    2. ']' → logprob: -1.034639596939087
    3. ' +' → logprob: -3.159639596939087
    4. ']+' → logprob: -4.284639358520508
    5. '[' → logprob: -6.284639358520508
    6. ')' → logprob: -7.409639358520508
    7. ')+' → logprob: -10.159639358520508
    8. ' ]' → logprob: -11.034639358520508
    9. '>' → logprob: -12.159639358520508
    10. '][' → logprob: -12.534639358520508

Token 248: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07526132464408875
    2. ' +' → logprob: -3.200261354446411
    3. '[' → logprob: -3.450261354446411
    4. '+[' → logprob: -12.450261116027832
    5. 'Y' → logprob: -12.950261116027832
    6. '+
' → logprob: -13.950261116027832
    7. '   ' → logprob: -14.450261116027832
    8. ' Y' → logprob: -14.825261116027832
    9. ' plus' → logprob: -14.950261116027832
    10. ' ' → logprob: -15.200261116027832

Token 249: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0004135112394578755
    2. ' Y' → logprob: -8.00041389465332
    3. 'S' → logprob: -10.37541389465332
    4. '   ' → logprob: -10.50041389465332
    5. 'abs' → logprob: -11.75041389465332
    6. '	Y' → logprob: -12.62541389465332
    7. '(Y' → logprob: -12.87541389465332
    8. ' ' → logprob: -13.00041389465332
    9. '  ' → logprob: -14.12541389465332
    10. '1' → logprob: -14.75041389465332

Token 250: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.6312321753939614e-05
    2. '[' → logprob: -10.250036239624023
    3. 'i' → logprob: -15.000036239624023
    4. ' [' → logprob: -15.375036239624023
    5. '```' → logprob: -15.500036239624023
    6. '[I' → logprob: -15.750036239624023
    7. '[
' → logprob: -17.375036239624023
    8. '[Y' → logprob: -17.375036239624023
    9. '
' → logprob: -18.125036239624023
    10. '[N' → logprob: -18.875036239624023

Token 251: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009358406066894531
    2. '][' → logprob: -4.7593584060668945
    3. '0' → logprob: -7.5093584060668945
    4. ')[' → logprob: -9.634358406066895
    5. '1' → logprob: -9.884358406066895
    6. ' [' → logprob: -9.884358406066895
    7. '   ' → logprob: -11.509358406066895
    8. '(' → logprob: -13.134358406066895
    9. '()[' → logprob: -13.384358406066895
    10. ''[' → logprob: -13.509358406066895

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17975318431854248
    2. '1' → logprob: -1.8047531843185425
    3. ' ' → logprob: -13.117253303527832
    4. '   ' → logprob: -13.179753303527832
    5. '[' → logprob: -13.304753303527832
    6. '
' → logprob: -14.679753303527832
    7. '-' → logprob: -14.742253303527832
    8. '01' → logprob: -15.679753303527832
    9. ']' → logprob: -15.929753303527832
    10. '_' → logprob: -16.117252349853516

Token 253: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012367196381092072
    2. ')' → logprob: -4.512367248535156
    3. '<|end|>' → logprob: -7.387367248535156
    4. ' ]' → logprob: -8.137367248535156
    5. ')]' → logprob: -8.637367248535156
    6. '])' → logprob: -9.262367248535156
    7. '```' → logprob: -9.387367248535156
    8. '   ' → logprob: -11.262367248535156
    9. '[' → logprob: -11.887367248535156
    10. '#' → logprob: -12.387367248535156

Token 254: '#' (ID: 2)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.6505024433135986
    2. 'for' → logprob: -1.6505024433135986
    3. 'm' → logprob: -2.5255024433135986
    4. '#' → logprob: -2.5255024433135986
    5. 'dp' → logprob: -2.7755024433135986
    6. 'max' → logprob: -3.0255024433135986
    7. 'i' → logprob: -3.1505024433135986
    8. 'low' → logprob: -3.1505024433135986
    9. 'l' → logprob: -3.1505024433135986
    10. 'lo' → logprob: -3.4005024433135986

Token 255: ' A' (ID: 355)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.2224197387695312
    2. 'l' → logprob: -2.3474197387695312
    3. 'low' → logprob: -2.4724197387695312
    4. 'M' → logprob: -2.7224197387695312
    5. 'lo' → logprob: -2.7224197387695312
    6. 'for' → logprob: -2.7224197387695312
    7. 'dp' → logprob: -2.8474197387695312
    8. 'ans' → logprob: -2.9724197387695312
    9. 'm' → logprob: -3.0974197387695312
    10. 'left' → logprob: -3.2224197387695312

Token 256: 'ucune' (ID: 165629)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.962388813495636
    2. '#' → logprob: -1.9623887538909912
    3. 'dp' → logprob: -2.337388753890991
    4. ' l' → logprob: -2.837388753890991
    5. 'low' → logprob: -2.962388753890991
    6. 'lo' → logprob: -3.087388753890991
    7. 'def' → logprob: -3.212388753890991
    8. 'best' → logprob: -3.962388753890991
    9. 'max' → logprob: -3.962388753890991
    10. 'left' → logprob: -4.08738899230957

Token 257: ' idée' (ID: 64187)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5337026119232178
    2. 'max' → logprob: -2.2837026119232178
    3. '#' → logprob: -2.4087026119232178
    4. 'for' → logprob: -2.4087026119232178
    5. '_' → logprob: -2.5337026119232178
    6. ' =' → logprob: -2.6587026119232178
    7. '=' → logprob: -2.9087026119232178
    8. 'best' → logprob: -3.2837026119232178
    9. 'min' → logprob: -3.7837026119232178
    10. 'import' → logprob: -3.7837026119232178

Token 258: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3367035686969757
    2. 'M' → logprob: -2.9617035388946533
    3. 'max' → logprob: -3.0867035388946533
    4. 'res' → logprob: -3.0867035388946533
    5. 'm' → logprob: -3.7117035388946533
    6. '#' → logprob: -3.9617035388946533
    7. 'best' → logprob: -4.336703777313232
    8. 'answer' → logprob: -4.461703777313232
    9. 'for' → logprob: -4.586703777313232
    10. 'low' → logprob: -4.961703777313232

Token 259: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08232034742832184
    2. 'la' → logprob: -3.45732045173645
    3. ' le' → logprob: -3.70732045173645
    4. 'l' → logprob: -4.957320213317871
    5. 'le' → logprob: -5.207320213317871
    6. ' l' → logprob: -5.457320213317871
    7. '#' → logprob: -5.707320213317871
    8. ' ce' → logprob: -6.707320213317871
    9. ' #' → logprob: -8.457320213317871
    10. 'suite' → logprob: -8.582320213317871

Token 260: ' nom' (ID: 8080)
  Prédit: ' moment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' moment' → logprob: -1.746163010597229
    2. 'for' → logprob: -1.871163010597229
    3. 'moment' → logprob: -1.871163010597229
    4. 'while' → logprob: -2.3711628913879395
    5. 'dp' → logprob: -2.6211628913879395
    6. 'result' → logprob: -3.1211628913879395
    7. 'i' → logprob: -3.2461628913879395
    8. '#' → logprob: -3.3711628913879395
    9. 'reste' → logprob: -3.6211628913879395
    10. ' reste' → logprob: -3.8711628913879395

Token 261: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.196974515914917
    2. 'res' → logprob: -2.071974515914917
    3. 'ans' → logprob: -2.321974515914917
    4. 'dp' → logprob: -2.446974515914917
    5. 'best' → logprob: -2.446974515914917
    6. 'answer' → logprob: -3.071974515914917
    7. 'M' → logprob: -3.571974515914917
    8. 'X' → logprob: -3.821974515914917
    9. 'max' → logprob: -3.946974515914917
    10. 'ret' → logprob: -4.071974754333496

Token 262: ' f' (ID: 285)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2483605593442917
    2. ' la' → logprob: -2.2483606338500977
    3. 'variable' → logprob: -2.7483606338500977
    4. 'fonction' → logprob: -3.9983606338500977
    5. 'i' → logprob: -4.998360633850098
    6. 'def' → logprob: -5.748360633850098
    7. 'l' → logprob: -5.748360633850098
    8. 'f' → logprob: -6.123360633850098
    9. ' variable' → logprob: -6.498360633850098
    10. 'function' → logprob: -6.498360633850098

Token 263: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003404659451916814
    2. 'f' → logprob: -5.75340461730957
    3. 'dp' → logprob: -9.00340461730957
    4. 'from' → logprob: -10.50340461730957
    5. '
' → logprob: -10.87840461730957
    6. 'F' → logprob: -11.12840461730957
    7. 'import' → logprob: -11.62840461730957
    8. '#' → logprob: -11.87840461730957
    9. 'DP' → logprob: -12.12840461730957
    10. '=' → logprob: -12.62840461730957

Token 264: ' mais' (ID: 2899)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04463304951786995
    2. 'f' → logprob: -3.169633150100708
    3. '#' → logprob: -7.544632911682129
    4. 'dp' → logprob: -7.919632911682129
    5. 'lambda' → logprob: -8.169632911682129
    6. 'M' → logprob: -9.044632911682129
    7. 'F' → logprob: -9.794632911682129
    8. 'N' → logprob: -10.169632911682129
    9. 'import' → logprob: -10.544632911682129
    10. 'max' → logprob: -10.544632911682129

Token 265: ' bon' (ID: 4846)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06895053386688232
    2. 'f' → logprob: -2.818950653076172
    3. '#' → logprob: -5.193950653076172
    4. 'dp' → logprob: -7.068950653076172
    5. 'res' → logprob: -8.818950653076172
    6. 'M' → logprob: -9.193950653076172
    7. 'F' → logprob: -9.818950653076172
    8. 'm' → logprob: -10.068950653076172
    9. 'for' → logprob: -10.068950653076172
    10. 'result' → logprob: -10.818950653076172

Token 266: '...
' (ID: 4908)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006892018136568367
    2. 'f' → logprob: -8.000689506530762
    3. 'dp' → logprob: -8.000689506530762
    4. 'from' → logprob: -12.000689506530762
    5. 'import' → logprob: -12.500689506530762
    6. 'DP' → logprob: -12.875689506530762
    7. 'max' → logprob: -13.250689506530762
    8. 'ans' → logprob: -14.125689506530762
    9. 'res' → logprob: -14.500689506530762
    10. 'INF' → logprob: -14.875689506530762

Token 267: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02653098851442337
    2. 'f' → logprob: -3.6515309810638428
    3. 'dp' → logprob: -9.026531219482422
    4. 'from' → logprob: -10.526531219482422
    5. 'for' → logprob: -10.651531219482422
    6. 'import' → logprob: -10.776531219482422
    7. 'max' → logprob: -11.526531219482422
    8. 'res' → logprob: -11.776531219482422
    9. '```' → logprob: -12.651531219482422
    10. 'M' → logprob: -12.901531219482422

Token 268: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.042646512389183044
    2. ' f' → logprob: -3.2926464080810547
    3. 'find' → logprob: -7.542646408081055
    4. 'solve' → logprob: -7.542646408081055
    5. ' find' → logprob: -7.667646408081055
    6. 'check' → logprob: -7.917646408081055
    7. 'possible' → logprob: -8.042646408081055
    8. 'can' → logprob: -8.417646408081055
    9. ' solve' → logprob: -8.542646408081055
    10. 'max' → logprob: -8.542646408081055

Token 269: '(i' (ID: 3649)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.3989938795566559
    2. '(x' → logprob: -1.3989938497543335
    3. '(i' → logprob: -3.898993968963623
    4. '(' → logprob: -4.898993968963623
    5. '(a' → logprob: -4.898993968963623
    6. '(m' → logprob: -4.898993968963623
    7. '(l' → logprob: -5.023993968963623
    8. '(mid' → logprob: -5.148993968963623
    9. '(K' → logprob: -5.273993968963623
    10. '(t' → logprob: -6.023993968963623

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013945228420197964
    2. '):' → logprob: -6.751394748687744
    3. ' ,' → logprob: -9.626394271850586
    4. ',j' → logprob: -9.626394271850586
    5. ',i' → logprob: -10.251394271850586
    6. ',n' → logprob: -11.376394271850586
    7. ',a' → logprob: -11.876394271850586
    8. ',k' → logprob: -11.876394271850586
    9. ',b' → logprob: -12.126394271850586
    10. '):
' → logprob: -12.751394271850586

Token 271: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4632174074649811
    2. ' x' → logprob: -2.3382174968719482
    3. 'k' → logprob: -2.9632174968719482
    4. 'j' → logprob: -3.0882174968719482
    5. 'm' → logprob: -3.4632174968719482
    6. ' j' → logprob: -4.713217258453369
    7. 'X' → logprob: -4.713217258453369
    8. 'd' → logprob: -4.838217258453369
    9. 'S' → logprob: -4.963217258453369
    10. ' k' → logprob: -5.088217258453369

Token 272: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056134168058633804
    2. '):' → logprob: -2.9311342239379883
    3. ')' → logprob: -7.431134223937988
    4. ' ,' → logprob: -7.806134223937988
    5. '):
' → logprob: -9.056134223937988
    6. ',i' → logprob: -10.056134223937988
    7. ',n' → logprob: -10.181134223937988
    8. ' ):' → logprob: -12.056134223937988
    9. '   ' → logprob: -12.181134223937988
    10. ',j' → logprob: -12.306134223937988

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020360851660370827
    2. ' if' → logprob: -4.145360946655273
    3. 'if' → logprob: -5.520360946655273
    4. '	if' → logprob: -9.270360946655273
    5. 'return' → logprob: -9.395360946655273
    6. ' return' → logprob: -9.770360946655273
    7. '   ' → logprob: -9.895360946655273
    8. '	return' → logprob: -11.895360946655273
    9. ' res' → logprob: -13.020360946655273
    10. ',' → logprob: -13.145360946655273

Token 274: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5731897950172424
    2. 'res' → logprob: -1.3231897354125977
    3. 'return' → logprob: -2.4481897354125977
    4. ' res' → logprob: -3.3231897354125977
    5. ' if' → logprob: -4.198189735412598
    6. '   ' → logprob: -5.198189735412598
    7. 'r' → logprob: -5.323189735412598
    8. 'm' → logprob: -5.323189735412598
    9. ' return' → logprob: -5.698189735412598
    10. 's' → logprob: -6.323189735412598

Token 275: ' Je' (ID: 4678)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4553515911102295
    2. 'res' → logprob: -1.4553515911102295
    3. 'return' → logprob: -2.8303515911102295
    4. 'r' → logprob: -3.9553515911102295
    5. 'x' → logprob: -4.705351829528809
    6. 'm' → logprob: -4.830351829528809
    7. 'ret' → logprob: -4.830351829528809
    8. ' res' → logprob: -5.830351829528809
    9. 's' → logprob: -5.955351829528809
    10. ' if' → logprob: -6.080351829528809

Token 276: ' crois' (ID: 65485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17913219332695007
    2. ' if' → logprob: -2.4291322231292725
    3. 'res' → logprob: -3.6791322231292725
    4. ' res' → logprob: -4.179131984710693
    5. 'r' → logprob: -4.429131984710693
    6. 'm' → logprob: -5.429131984710693
    7. 'for' → logprob: -5.554131984710693
    8. 'return' → logprob: -6.304131984710693
    9. 'ret' → logprob: -6.304131984710693
    10. 's' → logprob: -6.804131984710693

Token 277: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3492967188358307
    2. ' if' → logprob: -1.5992966890335083
    3. 'if' → logprob: -2.474296808242798
    4. 'return' → logprob: -5.849296569824219
    5. ' que' → logprob: -5.974296569824219
    6. ' return' → logprob: -6.099296569824219
    7. ' si' → logprob: -8.349296569824219
    8. '    ' → logprob: -8.849296569824219
    9. ' s' → logprob: -9.099296569824219
    10. '	if' → logprob: -9.849296569824219

Token 278: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5618715286254883
    2. 'res' → logprob: -2.0618715286254883
    3. ' res' → logprob: -2.4368715286254883
    4. 'Y' → logprob: -3.1868715286254883
    5. 'm' → logprob: -3.5618715286254883
    6. ' if' → logprob: -3.9368715286254883
    7. 'j' → logprob: -3.9368715286254883
    8. '   ' → logprob: -3.9368715286254883
    9. 'mid' → logprob: -4.186871528625488
    10. 'r' → logprob: -4.936871528625488

Token 279: ''est' (ID: 6616)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5256774425506592
    2. ''ai' → logprob: -1.9006774425506592
    3. 'e' → logprob: -2.650677442550659
    4. '#' → logprob: -2.900677442550659
    5. '=' → logprob: -3.900677442550659
    6. 'a' → logprob: -4.150677680969238
    7. 'Y' → logprob: -4.275677680969238
    8. ''' → logprob: -4.900677680969238
    9. '   ' → logprob: -5.025677680969238
    10. 'i' → logprob: -5.150677680969238

Token 280: ' cens' (ID: 55288)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.587109923362732
    2. 'Y' → logprob: -1.712109923362732
    3. ' n' → logprob: -2.0871100425720215
    4. '0' → logprob: -2.0871100425720215
    5. ' Y' → logprob: -2.5871100425720215
    6. '(' → logprob: -3.3371100425720215
    7. ' (' → logprob: -3.3371100425720215
    8. '   ' → logprob: -3.5871100425720215
    9. 'YY' → logprob: -3.5871100425720215
    10. '(n' → logprob: -3.7121100425720215

Token 281: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0006496482528746128
    2. 'ée' → logprob: -8.250649452209473
    3. 'u' → logprob: -8.375649452209473
    4. 'e' → logprob: -9.125649452209473
    5. 'és' → logprob: -10.625649452209473
    6. ''é' → logprob: -12.250649452209473
    7. 'è' → logprob: -12.250649452209473
    8. '   ' → logprob: -13.125649452209473
    9. '#' → logprob: -13.625649452209473
    10. '```' → logprob: -13.625649452209473

Token 282: ' être' (ID: 9104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6901776194572449
    2. '   ' → logprob: -0.8151776194572449
    3. ' return' → logprob: -3.0651776790618896
    4. '#' → logprob: -5.8151774406433105
    5. ':' → logprob: -7.0651774406433105
    6. '=' → logprob: -7.4401774406433105
    7. ' ' → logprob: -7.4401774406433105
    8. 'for' → logprob: -7.5651774406433105
    9. 'if' → logprob: -7.6901774406433105
    10. '       ' → logprob: -7.6901774406433105

Token 283: ' comme' (ID: 7971)
  Prédit: 'YY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'YY' → logprob: -1.184958815574646
    2. '0' → logprob: -1.559958815574646
    3. 'Y' → logprob: -1.559958815574646
    4. '(' → logprob: -1.934958815574646
    5. 'min' → logprob: -3.6849589347839355
    6. '(Y' → logprob: -3.9349589347839355
    7. 'max' → logprob: -4.0599589347839355
    8. '(n' → logprob: -4.3099589347839355
    9. 'N' → logprob: -4.8099589347839355
    10. '   ' → logprob: -5.1849589347839355

Token 284: ' une' (ID: 2463)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.690284252166748
    2. '0' → logprob: -2.065284252166748
    3. 'f' → logprob: -2.065284252166748
    4. 'range' → logprob: -2.440284252166748
    5. 'YY' → logprob: -3.690284252166748
    6. '   ' → logprob: -3.690284252166748
    7. ' Y' → logprob: -4.440284252166748
    8. '(' → logprob: -4.565284252166748
    9. 'min' → logprob: -4.690284252166748
    10. 'n' → logprob: -4.690284252166748

Token 285: ' sorte' (ID: 37800)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -1.4503554105758667
    2. 'range' → logprob: -2.0753555297851562
    3. 'min' → logprob: -2.2003555297851562
    4. 's' → logprob: -2.4503555297851562
    5. 'while' → logprob: -2.7003555297851562
    6. 'binary' → logprob: -2.8253555297851562
    7. 'return' → logprob: -3.0753555297851562
    8. 'def' → logprob: -3.3253555297851562
    9. 'b' → logprob: -3.3253555297851562
    10. 'for' → logprob: -3.4503555297851562

Token 286: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.19289171695709229
    2. '   ' → logprob: -2.3178915977478027
    3. 'de' → logprob: -2.8178915977478027
    4. 'd' → logprob: -5.317891597747803
    5. 'def' → logprob: -5.317891597747803
    6. ' d' → logprob: -5.442891597747803
    7. ' of' → logprob: -6.442891597747803
    8. 'of' → logprob: -7.567891597747803
    9. '    ' → logprob: -8.692892074584961
    10. ' ' → logprob: -8.942892074584961

Token 287: ' "' (ID: 392)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.417953610420227
    2. 'binary' → logprob: -1.792953610420227
    3. 'min' → logprob: -1.917953610420227
    4. 's' → logprob: -2.2929534912109375
    5. 'dp' → logprob: -2.6679534912109375
    6. 'fonction' → logprob: -2.9179534912109375
    7. 'max' → logprob: -3.5429534912109375
    8. 'bis' → logprob: -3.7929534912109375
    9. 'partition' → logprob: -3.9179534912109375
    10. 'while' → logprob: -4.1679534912109375

Token 288: 'sl' (ID: 4500)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.5867027044296265
    2. 's' → logprob: -2.086702823638916
    3. 'min' → logprob: -2.086702823638916
    4. 'b' → logprob: -2.211702823638916
    5. 'max' → logprob: -2.461702823638916
    6. 'dp' → logprob: -2.711702823638916
    7. 'binary' → logprob: -2.711702823638916
    8. 'if' → logprob: -3.336702823638916
    9. 'prefix' → logprob: -3.711702823638916
    10. 'for' → logprob: -3.836702823638916

Token 289: 'ack' (ID: 552)
  Prédit: 'ice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.3240215480327606
    2. 'iding' → logprob: -1.824021577835083
    3. 'ide' → logprob: -2.449021577835083
    4. 'icing' → logprob: -4.074021339416504
    5. 'i' → logprob: -6.199021339416504
    6. 'id' → logprob: -6.574021339416504
    7. 'ic' → logprob: -7.011521339416504
    8. 'idee' → logprob: -7.636521339416504
    9. '[' → logprob: -7.761521339416504
    10. 'a' → logprob: -7.824021339416504

Token 290: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5770313143730164
    2. '"' → logprob: -1.8270313739776611
    3. '):' → logprob: -2.202031373977661
    4. '_' → logprob: -2.452031373977661
    5. ' )' → logprob: -4.077031135559082
    6. ' ' → logprob: -4.702031135559082
    7. ' _' → logprob: -4.952031135559082
    8. ' "' → logprob: -4.952031135559082
    9. ' ):' → logprob: -4.952031135559082
    10. ')_' → logprob: -5.077031135559082

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02755228616297245
    2. ' if' → logprob: -3.902552366256714
    3. 'if' → logprob: -5.402552127838135
    4. ' return' → logprob: -6.777552127838135
    5. 'return' → logprob: -7.152552127838135
    6. ' res' → logprob: -8.527552604675293
    7. '   ' → logprob: -10.152552604675293
    8. 'res' → logprob: -10.277552604675293
    9. 'delta' → logprob: -10.527552604675293
    10. 'x' → logprob: -10.527552604675293

Token 292: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5355016589164734
    2. 'if' → logprob: -1.9105017185211182
    3. ' return' → logprob: -2.035501718521118
    4. 'res' → logprob: -3.285501718521118
    5. ' if' → logprob: -3.410501718521118
    6. ' res' → logprob: -4.035501480102539
    7. 'x' → logprob: -4.160501480102539
    8. '   ' → logprob: -4.285501480102539
    9. 'r' → logprob: -5.160501480102539
    10. 'ret' → logprob: -6.035501480102539

Token 293: ' Pas' (ID: 18323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5873967409133911
    2. 'if' → logprob: -1.7123967409133911
    3. ' return' → logprob: -2.8373966217041016
    4. 'res' → logprob: -2.8373966217041016
    5. 'x' → logprob: -3.2123966217041016
    6. '   ' → logprob: -3.3373966217041016
    7. ' if' → logprob: -4.337396621704102
    8. ' res' → logprob: -4.462396621704102
    9. 'r' → logprob: -4.837396621704102
    10. 'ret' → logprob: -4.962396621704102

Token 294: ' sûr' (ID: 46415)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.949320375919342
    2. '   ' → logprob: -1.1993203163146973
    3. 'de' → logprob: -2.4493203163146973
    4. 'def' → logprob: -3.0743203163146973
    5. '       ' → logprob: -3.9493203163146973
    6. '    ' → logprob: -4.324320316314697
    7. 'f' → logprob: -4.449320316314697
    8. '(' → logprob: -4.449320316314697
    9. 'abs' → logprob: -4.449320316314697
    10. '(n' → logprob: -4.824320316314697

Token 295: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008916379883885384
    2. ' if' → logprob: -5.38391637802124
    3. 'if' → logprob: -5.88391637802124
    4. 'return' → logprob: -6.88391637802124
    5. ' return' → logprob: -7.88391637802124
    6. ' ' → logprob: -10.883916854858398
    7. '       ' → logprob: -11.633916854858398
    8. '	if' → logprob: -12.008916854858398
    9. '  ' → logprob: -12.133916854858398
    10. '	return' → logprob: -12.133916854858398

Token 296: ' la' (ID: 557)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.8131489753723145
    2. ' Y' → logprob: -2.3131489753723145
    3. 'n' → logprob: -2.4381489753723145
    4. ' n' → logprob: -2.5631489753723145
    5. 'i' → logprob: -2.8131489753723145
    6. 'l' → logprob: -3.0631489753723145
    7. ' i' → logprob: -3.4381489753723145
    8. '   ' → logprob: -3.5631489753723145
    9. 'return' → logprob: -3.8131489753723145
    10. ' l' → logprob: -4.5631489753723145

Token 297: ' sou' (ID: 4069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.857332706451416
    2. ')' → logprob: -2.107332706451416
    3. 'return' → logprob: -2.107332706451416
    4. 'i' → logprob: -2.357332706451416
    5. ' return' → logprob: -2.607332706451416
    6. 'n' → logprob: -2.732332706451416
    7. '   ' → logprob: -2.857332706451416
    8. ' i' → logprob: -3.357332706451416
    9. ' n' → logprob: -3.357332706451416
    10. 'Y' → logprob: -3.482332706451416

Token 298: 'straction' (ID: 79887)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8387697339057922
    2. 'r' → logprob: -0.8387697339057922
    3. 'b' → logprob: -2.2137696743011475
    4. 'p' → logprob: -4.713769912719727
    5. 'mm' → logprob: -4.963769912719727
    6. 'ma' → logprob: -6.088769912719727
    7. 're' → logprob: -6.588769912719727
    8. 'f' → logprob: -7.213769912719727
    9. '#' → logprob: -7.338769912719727
    10. 'per' → logprob: -7.463769912719727

Token 299: ' che' (ID: 1378)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019719254225492477
    2. 'return' → logprob: -4.144719123840332
    3. ' return' → logprob: -5.644719123840332
    4. '       ' → logprob: -9.644719123840332
    5. '	return' → logprob: -10.644719123840332
    6. '   ' → logprob: -10.894719123840332
    7. '```' → logprob: -11.394719123840332
    8. '    
' → logprob: -12.269719123840332
    9. '
' → logprob: -12.394719123840332
    10. ' ' → logprob: -13.019719123840332

Token 300: 'lou' (ID: 133128)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3256618976593018
    2. '(' → logprob: -1.8256618976593018
    3. 'n' → logprob: -1.8256618976593018
    4. 'Y' → logprob: -2.2006618976593018
    5. '[' → logprob: -2.7006618976593018
    6. '(n' → logprob: -3.2006618976593018
    7. ')' → logprob: -3.5756618976593018
    8. ' Y' → logprob: -3.8256618976593018
    9. 'q' → logprob: -4.575661659240723
    10. ']' → logprob: -4.575661659240723

Token 301: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004222405143082142
    2. 'return' → logprob: -5.504222393035889
    3. ' return' → logprob: -8.879222869873047
    4. '       ' → logprob: -13.504222869873047
    5. '	return' → logprob: -13.504222869873047
    6. '   ' → logprob: -14.129222869873047
    7. ' ' → logprob: -14.879222869873047
    8. '```' → logprob: -15.129222869873047
    9. '
' → logprob: -15.379222869873047
    10. 'if' → logprob: -16.129222869873047

Token 302: ' je' (ID: 1264)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04285050556063652
    2. '       ' → logprob: -3.9178504943847656
    3. ' return' → logprob: -4.042850494384766
    4. 'return' → logprob: -5.792850494384766
    5. '    ' → logprob: -7.792850494384766
    6. ' if' → logprob: -7.792850494384766
    7. ' val' → logprob: -9.167850494384766
    8. '   ' → logprob: -9.542850494384766
    9. ' a' → logprob: -10.042850494384766
    10. 'if' → logprob: -10.292850494384766

Token 303: ' rec' (ID: 1369)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9131266474723816
    2. ' pense' → logprob: -1.9131267070770264
    3. 'n' → logprob: -2.4131267070770264
    4. 's' → logprob: -2.4131267070770264
    5. 'return' → logprob: -3.1631267070770264
    6. 'vais' → logprob: -3.2881267070770264
    7. ' vais' → logprob: -3.5381267070770264
    8. ' return' → logprob: -3.6631267070770264
    9. ')' → logprob: -4.038126468658447
    10. ' continue' → logprob: -4.163126468658447

Token 304: 'opie' (ID: 118895)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.9759222269058228
    2. 'up' → logprob: -1.3509222269058228
    3. 'u' → logprob: -1.9759222269058228
    4. 'ul' → logprob: -2.225922107696533
    5. 'op' → logprob: -4.100922107696533
    6. '[i' → logprob: -4.350922107696533
    7. 'on' → logprob: -4.350922107696533
    8. 'alc' → logprob: -4.850922107696533
    9. '[' → logprob: -4.975922107696533
    10. 'ule' → logprob: -5.100922107696533

Token 305: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3253738284111023
    2. 'return' → logprob: -1.325373888015747
    3. ' return' → logprob: -4.450373649597168
    4. '```' → logprob: -8.700373649597168
    5. '	return' → logprob: -9.700373649597168
    6. '
' → logprob: -10.200373649597168
    7. 'if' → logprob: -10.450373649597168
    8. '    
' → logprob: -11.325373649597168
    9. ' ' → logprob: -11.325373649597168
    10. '       ' → logprob: -11.450373649597168

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010868475772440434
    2. ' return' → logprob: -5.135868549346924
    3. 'return' → logprob: -5.385868549346924
    4. '	return' → logprob: -9.385868072509766
    5. ' if' → logprob: -9.885868072509766
    6. '       ' → logprob: -10.135868072509766
    7. '    ' → logprob: -10.135868072509766
    8. '
' → logprob: -10.260868072509766
    9. '    
' → logprob: -10.510868072509766
    10. ' ' → logprob: -11.260868072509766

Token 307: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09174463152885437
    2. '   ' → logprob: -2.9667446613311768
    3. ' return' → logprob: -3.3417446613311768
    4. 'if' → logprob: -7.466744422912598
    5. 'ret' → logprob: -9.466744422912598
    6. ' if' → logprob: -9.841744422912598
    7. '	return' → logprob: -9.966744422912598
    8. 'res' → logprob: -11.216744422912598
    9. ' ' → logprob: -11.466744422912598
    10. 'result' → logprob: -12.091744422912598

Token 308: ' S' (ID: 336)
  Prédit: 'YY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'YY' → logprob: -0.013588499277830124
    2. 'Y' → logprob: -5.6385884284973145
    3. ' YY' → logprob: -5.8885884284973145
    4. 'n' → logprob: -6.1385884284973145
    5. '(' → logprob: -6.2635884284973145
    6. 'max' → logprob: -6.8885884284973145
    7. 'S' → logprob: -6.8885884284973145
    8. 'i' → logprob: -8.388588905334473
    9. '(n' → logprob: -8.763588905334473
    10. 'min' → logprob: -8.888588905334473

Token 309: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9060733914375305
    2. ' -' → logprob: -1.1560733318328857
    3. ' +' → logprob: -1.6560733318328857
    4. '-' → logprob: -2.4060733318328857
    5. ' ' → logprob: -10.281073570251465
    6. '*' → logprob: -10.781073570251465
    7. ' ' → logprob: -10.906073570251465
    8. '>' → logprob: -11.406073570251465
    9. '+
' → logprob: -12.218573570251465
    10. '
' → logprob: -12.656073570251465

Token 310: ' Y' (ID: 865)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03776728734374046
    2. 'YY' → logprob: -3.412767171859741
    3. '(Y' → logprob: -5.91276741027832
    4. '(i' → logprob: -7.78776741027832
    5. '(n' → logprob: -7.78776741027832
    6. ' (' → logprob: -8.91276741027832
    7. '((' → logprob: -9.03776741027832
    8. 'Y' → logprob: -9.28776741027832
    9. ' YY' → logprob: -9.78776741027832
    10. '(S' → logprob: -10.78776741027832

Token 311: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -11.500011444091797
    3. '[I' → logprob: -14.375011444091797
    4. '[N' → logprob: -15.750011444091797
    5. '[j' → logprob: -15.875011444091797
    6. '[n' → logprob: -16.125011444091797
    7. ' [' → logprob: -16.625011444091797
    8. '[S' → logprob: -16.875011444091797
    9. '[f' → logprob: -16.875011444091797
    10. '[Y' → logprob: -16.875011444091797

Token 312: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00048262736527249217
    2. '[' → logprob: -8.000482559204102
    3. ' ][' → logprob: -9.375482559204102
    4. ']' → logprob: -10.750482559204102
    5. '0' → logprob: -11.250482559204102
    6. '   ' → logprob: -11.250482559204102
    7. '-' → logprob: -12.500482559204102
    8. '1' → logprob: -12.875482559204102
    9. '"][' → logprob: -13.812982559204102
    10. ' ' → logprob: -14.125482559204102

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2262953221797943
    2. '1' → logprob: -1.6012953519821167
    3. ' ' → logprob: -7.476295471191406
    4. '][' → logprob: -8.726295471191406
    5. '   ' → logprob: -9.226295471191406
    6. '[' → logprob: -10.476295471191406
    7. ']' → logprob: -12.288795471191406
    8. '
' → logprob: -12.538795471191406
    9. ':' → logprob: -12.788795471191406
    10. '  ' → logprob: -13.038795471191406

Token 314: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010141695849597454
    2. ']+' → logprob: -5.510141849517822
    3. ']*' → logprob: -6.010141849517822
    4. '+' → logprob: -6.510141849517822
    5. ' ]' → logprob: -7.260141849517822
    6. ' +' → logprob: -7.760141849517822
    7. ')' → logprob: -7.885141849517822
    8. '   ' → logprob: -8.635141372680664
    9. '*' → logprob: -9.135141372680664
    10. '-' → logprob: -9.510141372680664

Token 315: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6204619407653809
    2. ' +' → logprob: -0.8704619407653809
    3. ' -' → logprob: -3.495461940765381
    4. '-' → logprob: -4.620461940765381
    5. '*' → logprob: -6.120461940765381
    6. ' *' → logprob: -7.120461940765381
    7. '<|end|>' → logprob: -8.370462417602539
    8. ' ' → logprob: -9.870462417602539
    9. '   ' → logprob: -11.870462417602539
    10. ')' → logprob: -11.870462417602539

Token 316: ' Y' (ID: 865)
  Prédit: 'YY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'YY' → logprob: -0.002474943408742547
    2. 'Y' → logprob: -6.502474784851074
    3. ' YY' → logprob: -7.377474784851074
    4. 'n' → logprob: -8.627474784851074
    5. '(' → logprob: -9.252474784851074
    6. '(n' → logprob: -10.627474784851074
    7. '(Y' → logprob: -11.877474784851074
    8. 'YYY' → logprob: -12.002474784851074
    9. 'yy' → logprob: -12.127474784851074
    10. ' (' → logprob: -12.252474784851074

Token 317: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002317965030670166
    2. '[n' → logprob: -6.127317905426025
    3. '[' → logprob: -9.377318382263184
    4. '[j' → logprob: -10.752318382263184
    5. 'i' → logprob: -12.127318382263184
    6. '[N' → logprob: -12.627318382263184
    7. '```' → logprob: -12.752318382263184
    8. 'n' → logprob: -13.252318382263184
    9. '[f' → logprob: -13.252318382263184
    10. '][' → logprob: -13.502318382263184

Token 318: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0014716495061293244
    2. '-' → logprob: -7.626471519470215
    3. '[' → logprob: -7.626471519470215
    4. '1' → logprob: -8.376471519470215
    5. '+' → logprob: -9.626471519470215
    6. ']' → logprob: -10.126471519470215
    7. '+n' → logprob: -10.126471519470215
    8. 'n' → logprob: -10.376471519470215
    9. '[n' → logprob: -10.501471519470215
    10. ' ][' → logprob: -11.626471519470215

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. '0' → logprob: -11.750009536743164
    3. ' ' → logprob: -14.125009536743164
    4. '][' → logprob: -15.375009536743164
    5. 'n' → logprob: -15.750009536743164
    6. '```' → logprob: -16.125009536743164
    7. ']' → logprob: -16.500009536743164
    8. '   ' → logprob: -16.562509536743164
    9. '۱' → logprob: -16.812509536743164
    10. '-' → logprob: -17.250009536743164

Token 320: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48017385601997375
    2. ')' → logprob: -0.9801738262176514
    3. '])' → logprob: -5.4801740646362305
    4. '<|end|>' → logprob: -6.9801740646362305
    5. ' )' → logprob: -8.35517406463623
    6. ')]' → logprob: -8.60517406463623
    7. ' ]' → logprob: -8.85517406463623
    8. '}' → logprob: -9.10517406463623
    9. '[' → logprob: -9.35517406463623
    10. '   ' → logprob: -9.60517406463623

Token 321: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: ' (' (ID: 350)
  Prédit: 'YY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YY' → logprob: -0.12794607877731323
    2. '(' → logprob: -2.127946138381958
    3. ' YY' → logprob: -7.877945899963379
    4. ' (' → logprob: -8.502945899963379
    5. '(Y' → logprob: -8.752945899963379
    6. '(n' → logprob: -9.502945899963379
    7. 'Y' → logprob: -9.627945899963379
    8. 'f' → logprob: -10.502945899963379
    9. '((' → logprob: -10.877945899963379
    10. 'YYYY' → logprob: -11.127945899963379

Token 323: 'YY' (ID: 17848)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2826051414012909
    2. 'YY' → logprob: -1.4076051712036133
    3. ' (' → logprob: -7.532605171203613
    4. ' YY' → logprob: -7.907605171203613
    5. 'YYYY' → logprob: -9.407605171203613
    6. 'yy' → logprob: -9.407605171203613
    7. '   ' → logprob: -9.782605171203613
    8. '(
' → logprob: -10.032605171203613
    9. '((' → logprob: -10.157605171203613
    10. 'Y' → logprob: -10.157605171203613

Token 324: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0052650682628154755
    2. 'n' → logprob: -5.255265235900879
    3. '[i' → logprob: -10.630265235900879
    4. '[' → logprob: -13.380265235900879
    5. ' [' → logprob: -13.380265235900879
    6. '	n' → logprob: -14.005265235900879
    7. '[N' → logprob: -14.005265235900879
    8. '][' → logprob: -14.880265235900879
    9. '   ' → logprob: -15.005265235900879
    10. '[j' → logprob: -15.005265235900879

Token 325: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0063938298262655735
    2. ']-' → logprob: -5.131393909454346
    3. ' ]' → logprob: -8.506393432617188
    4. '])' → logprob: -9.006393432617188
    5. '-' → logprob: -9.506393432617188
    6. ' -' → logprob: -10.381393432617188
    7. '+' → logprob: -11.631393432617188
    8. '][' → logprob: -12.006393432617188
    9. ']
' → logprob: -12.381393432617188
    10. '[' → logprob: -12.506393432617188

Token 326: ' if' (ID: 538)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5919916033744812
    2. '-' → logprob: -0.8419916033744812
    3. ')' → logprob: -4.341991424560547
    4. '+' → logprob: -6.841991424560547
    5. ' ' → logprob: -7.716991424560547
    6. '   ' → logprob: -8.466991424560547
    7. '[' → logprob: -8.591991424560547
    8. '[i' → logprob: -8.591991424560547
    9. '<|end|>' → logprob: -8.591991424560547
    10. '-i' → logprob: -8.841991424560547

Token 327: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8034038543701172
    2. 'n' → logprob: -0.9284038543701172
    3. ' n' → logprob: -2.553403854370117
    4. ' i' → logprob: -2.553403854370117
    5. 'Y' → logprob: -8.553403854370117
    6. ' ' → logprob: -8.803403854370117
    7. 'False' → logprob: -8.803403854370117
    8. '   ' → logprob: -8.928403854370117
    9. '(i' → logprob: -9.053403854370117
    10. '0' → logprob: -9.178403854370117

Token 328: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7048430442810059
    2. ' is' → logprob: -0.9548430442810059
    3. '>' → logprob: -2.954843044281006
    4. ')' → logprob: -3.704843044281006
    5. ' ==' → logprob: -3.829843044281006
    6. 'else' → logprob: -5.204843044281006
    7. 'is' → logprob: -5.204843044281006
    8. '>=' → logprob: -5.704843044281006
    9. '!=' → logprob: -6.454843044281006
    10. ' else' → logprob: -6.829843044281006

Token 329: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05603228881955147
    2. ' i' → logprob: -2.931032180786133
    3. ' ' → logprob: -7.806032180786133
    4. '0' → logprob: -7.931032180786133
    5. '  ' → logprob: -9.306032180786133
    6. 'N' → logprob: -9.306032180786133
    7. '   ' → logprob: -9.431032180786133
    8. '	i' → logprob: -10.556032180786133
    9. ' N' → logprob: -11.181032180786133
    10. 'n' → logprob: -11.306032180786133

Token 330: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3869619369506836
    2. 'else' → logprob: -1.1369619369506836
    3. '   ' → logprob: -10.136961936950684
    4. ' ' → logprob: -11.136961936950684
    5. '	else' → logprob: -11.511961936950684
    6. '    ' → logprob: -12.011961936950684
    7. '       ' → logprob: -12.511961936950684
    8. ')' → logprob: -12.886961936950684
    9. '        ' → logprob: -12.886961936950684
    10. '  ' → logprob: -13.136961936950684

Token 331: ' YY' (ID: 45694)
  Prédit: 'YY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YY' → logprob: -0.021059708669781685
    2. ' YY' → logprob: -3.89605975151062
    3. '0' → logprob: -8.2710599899292
    4. ' ' → logprob: -9.1460599899292
    5. '   ' → logprob: -9.3960599899292
    6. 'Y' → logprob: -10.6460599899292
    7. '  ' → logprob: -11.2710599899292
    8. '(' → logprob: -11.3960599899292
    9. 'YYY' → logprob: -12.2710599899292
    10. 'YYYY' → logprob: -12.2710599899292

Token 332: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.2330390214920044
    2. '[i' → logprob: -1.6080390214920044
    3. 'n' → logprob: -5.733038902282715
    4. '[N' → logprob: -6.358038902282715
    5. 'i' → logprob: -6.608038902282715
    6. '[-' → logprob: -7.233038902282715
    7. '[' → logprob: -7.858038902282715
    8. '(n' → logprob: -9.733038902282715
    9. '   ' → logprob: -10.983038902282715
    10. 'N' → logprob: -11.233038902282715

Token 333: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5975958108901978
    2. '])' → logprob: -0.9725958108901978
    3. ']' → logprob: -2.722595691680908
    4. ' -' → logprob: -5.847595691680908
    5. ')' → logprob: -6.847595691680908
    6. ']-' → logprob: -6.972595691680908
    7. 'else' → logprob: -7.597595691680908
    8. '0' → logprob: -8.972596168518066
    9. '1' → logprob: -9.347596168518066
    10. '[' → logprob: -9.597596168518066

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010090597905218601
    2. '0' → logprob: -5.6350908279418945
    3. ' ' → logprob: -5.8850908279418945
    4. '-' → logprob: -6.1350908279418945
    5. '])' → logprob: -7.3850908279418945
    6. ')' → logprob: -7.6350908279418945
    7. ']' → logprob: -8.010090827941895
    8. ' -' → logprob: -10.385090827941895
    9. 'i' → logprob: -11.385090827941895
    10. '   ' → logprob: -11.385090827941895

Token 335: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5761737823486328
    2. ')' → logprob: -0.8261737823486328
    3. '})' → logprob: -10.201173782348633
    4. ')])' → logprob: -10.201173782348633
    5. ' )' → logprob: -10.326173782348633
    6. '))' → logprob: -10.451173782348633
    7. ']' → logprob: -10.451173782348633
    8. '<|end|>' → logprob: -11.576173782348633
    9. '])]' → logprob: -11.826173782348633
    10. ')
' → logprob: -11.951173782348633

Token 336: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016396844875998795
    2. ' )' → logprob: -9.375164031982422
    3. '<|end|>' → logprob: -10.625164031982422
    4. '[' → logprob: -11.250164031982422
    5. '   ' → logprob: -11.750164031982422
    6. ')
' → logprob: -12.375164031982422
    7. '])' → logprob: -12.500164031982422
    8. '-)' → logprob: -12.625164031982422
    9. '-' → logprob: -12.750164031982422
    10. '))' → logprob: -13.000164031982422

Token 337: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.18151986598968506
    2. 'YY' → logprob: -2.0565199851989746
    3. ' Y' → logprob: -3.5565199851989746
    4. ' YY' → logprob: -4.806519985198975
    5. '1' → logprob: -7.556519985198975
    6. 'YYY' → logprob: -8.181519508361816
    7. ' ' → logprob: -8.431519508361816
    8. '   ' → logprob: -9.306519508361816
    9. ')' → logprob: -10.056519508361816
    10. 'YYYY' → logprob: -10.056519508361816

Token 338: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.024230817332863808
    2. 'i' → logprob: -3.899230718612671
    3. '[n' → logprob: -5.64923095703125
    4. 'n' → logprob: -9.02423095703125
    5. '[' → logprob: -10.52423095703125
    6. '[j' → logprob: -12.52423095703125
    7. '   ' → logprob: -13.02423095703125
    8. '{i' → logprob: -13.02423095703125
    9. ' i' → logprob: -13.14923095703125
    10. ' [' → logprob: -13.64923095703125

Token 339: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16195045411586761
    2. '][' → logprob: -2.0369503498077393
    3. '1' → logprob: -4.661950588226318
    4. '0' → logprob: -4.661950588226318
    5. '   ' → logprob: -9.78695011138916
    6. '[i' → logprob: -10.16195011138916
    7. '-' → logprob: -10.91195011138916
    8. ']' → logprob: -11.41195011138916
    9. ' [' → logprob: -11.78695011138916
    10. ')[' → logprob: -12.03695011138916

Token 340: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03818482533097267
    2. '1' → logprob: -3.288184881210327
    3. ' ' → logprob: -9.038185119628906
    4. '[' → logprob: -11.038185119628906
    5. '   ' → logprob: -12.663185119628906
    6. '][' → logprob: -13.163185119628906
    7. ']' → logprob: -14.538185119628906
    8. '  ' → logprob: -14.663185119628906
    9. '۰' → logprob: -15.038185119628906
    10. '```' → logprob: -15.163185119628906

Token 341: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011050907196477056
    2. ' )' → logprob: -6.876105308532715
    3. '[' → logprob: -10.876105308532715
    4. '])' → logprob: -11.376105308532715
    5. '))' → logprob: -11.501105308532715
    6. '   ' → logprob: -11.626105308532715
    7. '[])' → logprob: -12.001105308532715
    8. ')
' → logprob: -12.626105308532715
    9. ' ' → logprob: -13.376105308532715
    10. '[i' → logprob: -14.001105308532715

Token 342: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6485925912857056
    2. '<|end|>' → logprob: -0.8985925912857056
    3. '
' → logprob: -3.023592472076416
    4. ':' → logprob: -4.273592472076416
    5. ' ' → logprob: -6.148592472076416
    6. '\n' → logprob: -6.148592472076416
    7. '```' → logprob: -6.773592472076416
    8. ':return' → logprob: -7.773592472076416
    9. '<|end|>' → logprob: -8.398592948913574
    10. '\' → logprob: -8.398592948913574

Token 343: ' Max' (ID: 10093)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22966086864471436
    2. ' ' → logprob: -1.8546608686447144
    3. '(' → logprob: -4.104660987854004
    4. ' )' → logprob: -4.229660987854004
    5. '[' → logprob: -5.604660987854004
    6. 'n' → logprob: -5.854660987854004
    7. 'i' → logprob: -6.479660987854004
    8. '   ' → logprob: -6.729660987854004
    9. ']' → logprob: -6.854660987854004
    10. ':' → logprob: -7.229660987854004

Token 344: 'imize' (ID: 16368)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.705883264541626
    2. '_' → logprob: -1.455883264541626
    3. '_value' → logprob: -2.080883264541626
    4. '_f' → logprob: -3.205883264541626
    5. '_res' → logprob: -3.830883264541626
    6. '_ans' → logprob: -3.955883264541626
    7. '_result' → logprob: -4.080883026123047
    8. '_i' → logprob: -4.205883026123047
    9. '_sum' → logprob: -4.455883026123047
    10. '_score' → logprob: -6.330883026123047

Token 345: ' "' (ID: 392)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2182490825653076
    2. 'res' → logprob: -1.5932490825653076
    3. 'answer' → logprob: -1.9682490825653076
    4. 'result' → logprob: -2.3432490825653076
    5. 'max' → logprob: -2.3432490825653076
    6. 'dp' → logprob: -2.8432490825653076
    7. ' ans' → logprob: -3.5932490825653076
    8. 'val' → logprob: -3.7182490825653076
    9. 'value' → logprob: -4.093249320983887
    10. '_' → logprob: -5.343249320983887

Token 346: 'ma' (ID: 809)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0488888025283813
    2. 'result' → logprob: -1.7988888025283813
    3. 'f' → logprob: -1.9238888025283813
    4. 'res' → logprob: -2.673888683319092
    5. 'score' → logprob: -2.923888683319092
    6. 'answer' → logprob: -3.298888683319092
    7. 'i' → logprob: -3.673888683319092
    8. 'value' → logprob: -4.173888683319092
    9. 'max' → logprob: -4.173888683319092
    10. ' ans' → logprob: -4.173888683319092

Token 347: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00019531534053385258
    2. 't' → logprob: -10.375195503234863
    3. 'xim' → logprob: -10.500195503234863
    4. 'sk' → logprob: -10.875195503234863
    5. 's' → logprob: -11.000195503234863
    6. 'th' → logprob: -11.250195503234863
    7. 'p' → logprob: -11.375195503234863
    8. 'r' → logprob: -11.625195503234863
    9. 'ss' → logprob: -11.875195503234863
    10. '```' → logprob: -12.125195503234863

Token 348: '/' (ID: 14)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002970214933156967
    2. '_' → logprob: -6.502970218658447
    3. ' =' → logprob: -7.752970218658447
    4. '_x' → logprob: -7.877970218658447
    5. '=' → logprob: -8.877969741821289
    6. 'X' → logprob: -8.877969741821289
    7. '
' → logprob: -10.127969741821289
    8. 'ximo' → logprob: -10.377969741821289
    9. ')' → logprob: -10.502969741821289
    10. 'p' → logprob: -10.752969741821289

Token 349: 'ma' (ID: 809)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19677230715751648
    2. 'n' → logprob: -2.571772336959839
    3. '2' → logprob: -3.571772336959839
    4. '1' → logprob: -4.44677209854126
    5. 'X' → logprob: -4.57177209854126
    6. 'i' → logprob: -5.07177209854126
    7. '(n' → logprob: -5.32177209854126
    8. 'ma' → logprob: -5.57177209854126
    9. 'm' → logprob: -5.57177209854126
    10. 'ss' → logprob: -5.69677209854126

Token 350: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0021294450853019953
    2. '1' → logprob: -6.502129554748535
    3. '2' → logprob: -8.502129554748535
    4. 't' → logprob: -9.127129554748535
    5. 'th' → logprob: -9.752129554748535
    6. 'ss' → logprob: -10.002129554748535
    7. 's' → logprob: -10.377129554748535
    8. '#' → logprob: -11.252129554748535
    9. 'c' → logprob: -11.252129554748535
    10. 'n' → logprob: -11.377129554748535

Token 351: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0650174617767334
    2. 'ma' → logprob: -2.0650174617767334
    3. ' =' → logprob: -2.1900174617767334
    4. '_' → logprob: -2.1900174617767334
    5. '1' → logprob: -2.6900174617767334
    6. 's' → logprob: -3.1900174617767334
    7. '=' → logprob: -3.5650174617767334
    8. '(' → logprob: -3.8150174617767334
    9. 'def' → logprob: -3.8150174617767334
    10. 'max' → logprob: -3.9400174617767334

Token 352: ' (' (ID: 350)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.06886406987905502
    2. '_' → logprob: -3.943864107131958
    3. 'max' → logprob: -4.318863868713379
    4. ' ma' → logprob: -4.568863868713379
    5. ':' → logprob: -4.943863868713379
    6. '_ma' → logprob: -5.193863868713379
    7. '
' → logprob: -5.568863868713379
    8. ' ' → logprob: -7.068863868713379
    9. '_
' → logprob: -7.068863868713379
    10. 'def' → logprob: -7.193863868713379

Token 353: 'fraction' (ID: 173249)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050746574997901917
    2. 'ma' → logprob: -3.4257466793060303
    3. 'i' → logprob: -5.550746440887451
    4. 'def' → logprob: -6.050746440887451
    5. ' ' → logprob: -6.300746440887451
    6. '<|end|>' → logprob: -6.300746440887451
    7. 'n' → logprob: -6.675746440887451
    8. ' )' → logprob: -6.800746440887451
    9. '#' → logprob: -7.175746440887451
    10. 'max' → logprob: -7.550746440887451

Token 354: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23761722445487976
    2. '<|end|>' → logprob: -2.737617254257202
    3. ' =' → logprob: -2.862617254257202
    4. ',' → logprob: -3.612617254257202
    5. '=' → logprob: -3.987617254257202
    6. '<|end|>' → logprob: -4.487617015838623
    7. 'def' → logprob: -4.987617015838623
    8. '   ' → logprob: -5.487617015838623
    9. ':' → logprob: -5.987617015838623
    10. '
' → logprob: -6.112617015838623

Token 355: ' something' (ID: 3543)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2891453504562378
    2. ')' → logprob: -1.7891453504562378
    3. 'None' → logprob: -2.0391454696655273
    4. '1' → logprob: -2.1641454696655273
    5. 'ma' → logprob: -2.4141454696655273
    6. 'int' → logprob: -3.9141454696655273
    7. 'max' → logprob: -3.9141454696655273
    8. 'n' → logprob: -4.039145469665527
    9. 'a' → logprob: -4.039145469665527
    10. 'def' → logprob: -4.726645469665527

Token 356: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.562065839767456
    2. 'ma' → logprob: -1.687065839767456
    3. ')' → logprob: -2.187065839767456
    4. '_' → logprob: -2.937065839767456
    5. 'def' → logprob: -4.312066078186035
    6. ',' → logprob: -4.437066078186035
    7. '_ma' → logprob: -4.687066078186035
    8. ':
' → logprob: -4.812066078186035
    9. 'i' → logprob: -5.312066078186035
    10. ' =' → logprob: -5.562066078186035

Token 357: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.0033824380952864885
    2. 'max' → logprob: -5.753382205963135
    3. 'm' → logprob: -9.628382682800293
    4. ' ma' → logprob: -10.003382682800293
    5. 'def' → logprob: -10.378382682800293
    6. '#' → logprob: -11.128382682800293
    7. 'import' → logprob: -12.253382682800293
    8. 'best' → logprob: -12.253382682800293
    9. 'ans' → logprob: -12.378382682800293
    10. 'result' → logprob: -12.378382682800293

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007770359516143799
    2. 'x' → logprob: -4.882770538330078
    3. '2' → logprob: -9.507770538330078
    4. '=' → logprob: -10.382770538330078
    5. ' =' → logprob: -10.757770538330078
    6. '_' → logprob: -11.382770538330078
    7. 'max' → logprob: -12.007770538330078
    8. 'i' → logprob: -12.257770538330078
    9. 'm' → logprob: -12.257770538330078
    10. '_x' → logprob: -13.132770538330078

Token 359: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15133830904960632
    2. ' =' → logprob: -2.2763383388519287
    3. ',' → logprob: -3.2763383388519287
    4. ' ,' → logprob: -11.526338577270508
    5. ')' → logprob: -13.026338577270508
    6. '=
' → logprob: -13.901338577270508
    7. ' ' → logprob: -14.651338577270508
    8. '```' → logprob: -14.651338577270508
    9. '=

' → logprob: -14.901338577270508
    10. '_' → logprob: -15.151338577270508

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0672970712184906
    2. '-' → logprob: -2.8172969818115234
    3. '1' → logprob: -5.817296981811523
    4. '-f' → logprob: -6.442296981811523
    5. 'float' → logprob: -8.317296981811523
    6. '-ma' → logprob: -8.692296981811523
    7. '-S' → logprob: -9.067296981811523
    8. '-s' → logprob: -9.192296981811523
    9. 'ma' → logprob: -10.942296981811523
    10. 'S' → logprob: -10.942296981811523

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03085162676870823
    2. '-' → logprob: -3.7808516025543213
    3. '1' → logprob: -5.1558518409729
    4. 'ma' → logprob: -7.2808518409729
    5. 'S' → logprob: -7.9058518409729
    6. 'float' → logprob: -8.780851364135742
    7. '-f' → logprob: -8.780851364135742
    8. '-ma' → logprob: -8.780851364135742
    9. '-s' → logprob: -9.405851364135742
    10. '-S' → logprob: -9.655851364135742

Token 362: '
' (ID: 198)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.05206873267889023
    2. ' ma' → logprob: -3.5520687103271484
    3. '
' → logprob: -4.177068710327148
    4. '<|end|>' → logprob: -5.802068710327148
    5. '_ma' → logprob: -6.177068710327148
    6. '=' → logprob: -7.427068710327148
    7. '(ma' → logprob: -7.927068710327148
    8. ' =' → logprob: -8.302068710327148
    9. ',' → logprob: -8.427068710327148
    10. '.ma' → logprob: -10.177068710327148

Token 363: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.0004430627159308642
    2. ' ma' → logprob: -8.000443458557129
    3. ' =' → logprob: -10.625443458557129
    4. '=' → logprob: -10.750443458557129
    5. '0' → logprob: -10.875443458557129
    6. ',' → logprob: -10.875443458557129
    7. ' ' → logprob: -11.375443458557129
    8. '_ma' → logprob: -13.125443458557129
    9. '(ma' → logprob: -13.125443458557129
    10. '   ' → logprob: -13.500443458557129

Token 364: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.069664333248511e-05
    2. '=' → logprob: -11.000020980834961
    3. ' =' → logprob: -13.375020980834961
    4. ',' → logprob: -14.125020980834961
    5. ' ' → logprob: -14.750020980834961
    6. '1' → logprob: -15.250020980834961
    7. '_' → logprob: -15.375020980834961
    8. '   ' → logprob: -15.625020980834961
    9. '```' → logprob: -15.750020980834961
    10. 'a' → logprob: -16.62502098083496

Token 365: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602243334054947
    2. ' =' → logprob: -1.9102243185043335
    3. ' ' → logprob: -15.910223960876465
    4. '=
' → logprob: -17.03522491455078
    5. '1' → logprob: -17.41022491455078
    6. ',' → logprob: -17.78522491455078
    7. '=int' → logprob: -18.53522491455078
    8. '=

' → logprob: -18.66022491455078
    9. ' =
' → logprob: -18.78522491455078
    10. '0' → logprob: -19.16022491455078

Token 366: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'N' → logprob: -16.0000057220459
    4. 'S' → logprob: -16.0000057220459
    5. '0' → logprob: -16.1250057220459
    6. '   ' → logprob: -17.3750057220459
    7. ' ' → logprob: -17.5000057220459
    8. '=' → logprob: -17.6875057220459
    9. '-' → logprob: -17.9375057220459
    10. '10' → logprob: -18.0000057220459

Token 367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.500004768371582
    3. '-' → logprob: -14.375004768371582
    4. '0' → logprob: -15.625004768371582
    5. '10' → logprob: -15.750004768371582
    6. 'int' → logprob: -16.7500057220459
    7. '100' → logprob: -16.7500057220459
    8. 'N' → logprob: -17.1250057220459
    9. '=' → logprob: -17.9375057220459
    10. '2' → logprob: -18.1250057220459

Token 368: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005151443183422089
    2. '
' → logprob: -8.12551498413086
    3. ' for' → logprob: -8.75051498413086
    4. '<|end|>' → logprob: -10.12551498413086
    5. 'i' → logprob: -11.00051498413086
    6. '0' → logprob: -13.87551498413086
    7. 'n' → logprob: -14.00051498413086
    8. 'from' → logprob: -15.12551498413086
    9. '```' → logprob: -15.25051498413086
    10. 'range' → logprob: -15.50051498413086

Token 369: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.666993507067673e-05
    2. 'i' → logprob: -10.875036239624023
    3. ' for' → logprob: -11.250036239624023
    4. '
' → logprob: -12.625036239624023
    5. 'n' → logprob: -14.500036239624023
    6. 'from' → logprob: -15.250036239624023
    7. '```' → logprob: -15.625036239624023
    8. 'range' → logprob: -15.750036239624023
    9. 'f' → logprob: -16.875036239624023
    10. '0' → logprob: -17.125036239624023

Token 370: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5335181355476379
    2. 'i' → logprob: -0.9085181355476379
    3. ' n' → logprob: -5.283518314361572
    4. 'n' → logprob: -5.658518314361572
    5. ' j' → logprob: -7.283518314361572
    6. 'j' → logprob: -7.658518314361572
    7. '_i' → logprob: -8.783517837524414
    8. '_' → logprob: -9.658517837524414
    9. 'a' → logprob: -9.908517837524414
    10. ' _' → logprob: -10.158517837524414

Token 371: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033681318163871765
    2. 'in' → logprob: -3.4086813926696777
    3. ',' → logprob: -11.28368091583252
    4. ' ' → logprob: -11.28368091583252
    5. 'range' → logprob: -13.15868091583252
    6. '   ' → logprob: -13.53368091583252
    7. 'n' → logprob: -13.65868091583252
    8. '0' → logprob: -13.78368091583252
    9. ')' → logprob: -13.78368091583252
    10. '```' → logprob: -14.28368091583252

Token 372: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47408756613731384
    2. ' range' → logprob: -0.9740875959396362
    3. ' ' → logprob: -12.224087715148926
    4. '0' → logprob: -13.224087715148926
    5. '  ' → logprob: -14.349087715148926
    6. '   ' → logprob: -14.349087715148926
    7. ' in' → logprob: -14.474087715148926
    8. 'in' → logprob: -14.599087715148926
    9. '(range' → logprob: -14.599087715148926
    10. ')' → logprob: -15.099087715148926

Token 373: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.006987918633967638
    2. '(range' → logprob: -5.881988048553467
    3. '(' → logprob: -6.381988048553467
    4. ' range' → logprob: -6.381988048553467
    5. 'range' → logprob: -7.631988048553467
    6. ' (' → logprob: -8.881987571716309
    7. '(n' → logprob: -9.381987571716309
    8. 'N' → logprob: -9.756987571716309
    9. ' N' → logprob: -12.131987571716309
    10. '(len' → logprob: -12.881987571716309

Token 374: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.186519056558609
    2. '):
' → logprob: -1.8115190267562866
    3. '+' → logprob: -5.311519145965576
    4. ':' → logprob: -6.561519145965576
    5. ',' → logprob: -8.686518669128418
    6. '   ' → logprob: -9.061518669128418
    7. '):
' → logprob: -9.686518669128418
    8. ' +' → logprob: -11.311518669128418
    9. ' ):' → logprob: -11.811518669128418
    10. '+:' → logprob: -11.936518669128418

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4394274652004242
    2. ' for' → logprob: -1.0644274950027466
    3. 'for' → logprob: -4.939427375793457
    4. ' n' → logprob: -6.439427375793457
    5. '    
' → logprob: -7.689427375793457
    6. ' if' → logprob: -8.064427375793457
    7. '```' → logprob: -8.314427375793457
    8. ' ' → logprob: -8.939427375793457
    9. ' j' → logprob: -9.314427375793457
    10. '    ' → logprob: -9.314427375793457

Token 376: ' l' (ID: 305)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3229239881038666
    2. 'for' → logprob: -1.322924017906189
    3. '   ' → logprob: -5.4479241371154785
    4. ' ma' → logprob: -6.5729241371154785
    5. 'ma' → logprob: -6.6979241371154785
    6. ' n' → logprob: -6.9479241371154785
    7. 'n' → logprob: -7.0729241371154785
    8. ' j' → logprob: -8.19792366027832
    9. '```' → logprob: -8.32292366027832
    10. ' range' → logprob: -8.82292366027832

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.833216667175293
    2. '=' → logprob: -0.958216667175293
    3. ',' → logprob: -1.708216667175293
    4. '   ' → logprob: -8.458216667175293
    5. ' ,' → logprob: -9.083216667175293
    6. 'f' → logprob: -9.833216667175293
    7. ' ' → logprob: -10.333216667175293
    8. ',j' → logprob: -10.583216667175293
    9. 'eft' → logprob: -10.708216667175293
    10. '=int' → logprob: -11.083216667175293

Token 378: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10820833593606949
    2. 'i' → logprob: -2.608208417892456
    3. ' ' → logprob: -3.983208417892456
    4. ' i' → logprob: -4.733208179473877
    5. '1' → logprob: -6.733208179473877
    6. ' -' → logprob: -9.108208656311035
    7. '-' → logprob: -9.358208656311035
    8. 'Y' → logprob: -10.858208656311035
    9. '(i' → logprob: -11.295708656311035
    10. ' Y' → logprob: -11.920708656311035

Token 379: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14590401947498322
    2. 'i' → logprob: -2.020904064178467
    3. '1' → logprob: -6.020904064178467
    4. '-' → logprob: -8.645903587341309
    5. ' ' → logprob: -8.645903587341309
    6. 'Y' → logprob: -8.895903587341309
    7. 'max' → logprob: -9.020903587341309
    8. ' i' → logprob: -9.770903587341309
    9. '(i' → logprob: -10.270903587341309
    10. 'N' → logprob: -10.645903587341309

Token 380: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2856830954551697
    2. '<|end|>' → logprob: -2.4106831550598145
    3. ' 
' → logprob: -2.6606831550598145
    4. ' ' → logprob: -3.4106831550598145
    5. 'r' → logprob: -3.7856831550598145
    6. ',' → logprob: -4.4106831550598145
    7. '   ' → logprob: -5.0356831550598145
    8. ' r' → logprob: -5.2856831550598145
    9. '  
' → logprob: -6.4106831550598145
    10. ' N' → logprob: -6.4106831550598145

Token 382: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.9434976577758789
    2. 'N' → logprob: -1.318497657775879
    3. ' N' → logprob: -2.068497657775879
    4. 'n' → logprob: -2.318497657775879
    5. ' r' → logprob: -2.443497657775879
    6. ' n' → logprob: -4.318497657775879
    7. 'u' → logprob: -5.318497657775879
    8. 'i' → logprob: -6.318497657775879
    9. '=' → logprob: -6.443497657775879
    10. 'l' → logprob: -6.443497657775879

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934792995452881
    2. ' =' → logprob: -0.6934792995452881
    3. ' N' → logprob: -8.443479537963867
    4. '=N' → logprob: -9.818479537963867
    5. '=i' → logprob: -10.693479537963867
    6. ' ' → logprob: -10.693479537963867
    7. 'N' → logprob: -11.943479537963867
    8. '   ' → logprob: -12.693479537963867
    9. ' =
' → logprob: -13.193479537963867
    10. '=n' → logprob: -13.818479537963867

Token 384: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.026401780545711517
    2. ' N' → logprob: -4.526401996612549
    3. 'i' → logprob: -4.651401996612549
    4. '10' → logprob: -5.901401996612549
    5. '100' → logprob: -6.901401996612549
    6. ' ' → logprob: -7.026401996612549
    7. ' i' → logprob: -8.15140151977539
    8. 'len' → logprob: -8.15140151977539
    9. 'int' → logprob: -8.40140151977539
    10. 'S' → logprob: -9.15140151977539

Token 385: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6299075484275818
    2. '
' → logprob: -1.3799076080322266
    3. '   ' → logprob: -2.3799076080322266
    4. ' +' → logprob: -2.6299076080322266
    5. '<|end|>' → logprob: -3.3799076080322266
    6. ' ' → logprob: -6.129907608032227
    7. ' 
' → logprob: -6.129907608032227
    8. '```' → logprob: -6.254907608032227
    9. '  
' → logprob: -6.379907608032227
    10. '<|end|>' → logprob: -6.379907608032227

Token 386: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21831831336021423
    2. '<|end|>' → logprob: -2.468318223953247
    3. '
' → logprob: -2.968318223953247
    4. ' while' → logprob: -3.718318223953247
    5. ' ' → logprob: -4.468318462371826
    6. ' 
' → logprob: -4.593318462371826
    7. '    
' → logprob: -5.843318462371826
    8. '	while' → logprob: -6.093318462371826
    9. '<|end|>' → logprob: -6.468318462371826
    10. '  
' → logprob: -6.593318462371826

Token 388: ' Bou' (ID: 33816)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.30805492401123047
    2. 'while' → logprob: -2.0580549240112305
    3. '   ' → logprob: -2.1830549240112305
    4. ' ' → logprob: -4.1830549240112305
    5. '	while' → logprob: -5.8080549240112305
    6. '    ' → logprob: -6.0580549240112305
    7. 'r' → logprob: -6.9330549240112305
    8. '  ' → logprob: -7.0580549240112305
    9. '_' → logprob: -7.5580549240112305
    10. ' r' → logprob: -8.05805492401123

Token 389: 'cle' (ID: 3170)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06863792985677719
    2. 'r' → logprob: -3.5686378479003906
    3. '       ' → logprob: -4.318637847900391
    4. '    ' → logprob: -4.568637847900391
    5. '  ' → logprob: -5.693637847900391
    6. 'n' → logprob: -5.693637847900391
    7. ' ' → logprob: -6.568637847900391
    8. ')' → logprob: -7.443637847900391
    9. '      ' → logprob: -7.568637847900391
    10. 'f' → logprob: -7.568637847900391

Token 390: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10212782770395279
    2. '<|end|>' → logprob: -3.10212779045105
    3. ':' → logprob: -4.102128028869629
    4. '    ' → logprob: -4.852128028869629
    5. ':
' → logprob: -4.852128028869629
    6. '
' → logprob: -5.477128028869629
    7. ' while' → logprob: -5.602128028869629
    8. ' ' → logprob: -5.852128028869629
    9. '	while' → logprob: -5.977128028869629
    10. '<|end|>' → logprob: -6.602128028869629

Token 391: ' peu' (ID: 9235)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1449439823627472
    2. ' while' → logprob: -2.894943952560425
    3. '       ' → logprob: -2.894943952560425
    4. 'while' → logprob: -4.394944190979004
    5. '    ' → logprob: -5.519944190979004
    6. 'ntil' → logprob: -6.519944190979004
    7. '  ' → logprob: -7.019944190979004
    8. ' ' → logprob: -7.269944190979004
    9. 'hile' → logprob: -7.394944190979004
    10. '```' → logprob: -7.519944190979004

Token 392: ' bizarre' (ID: 61150)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20456519722938538
    2. '    ' → logprob: -1.829565167427063
    3. '       ' → logprob: -4.704565048217773
    4. ' while' → logprob: -4.829565048217773
    5. '  ' → logprob: -6.829565048217773
    6. '    
' → logprob: -6.954565048217773
    7. ' ' → logprob: -7.079565048217773
    8. '	while' → logprob: -7.704565048217773
    9. '     
' → logprob: -7.829565048217773
    10. ' for' → logprob: -7.829565048217773

Token 393: ' (?' (ID: 148752)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6900764107704163
    2. ':' → logprob: -1.4400763511657715
    3. '<|end|>' → logprob: -1.5650763511657715
    4. ':
' → logprob: -4.0650763511657715
    5. ' ' → logprob: -4.6900763511657715
    6. '<|end|>' → logprob: -5.0650763511657715
    7. '
' → logprob: -5.4400763511657715
    8. '    ' → logprob: -5.6900763511657715
    9. ' while' → logprob: -6.1900763511657715
    10. ' 
' → logprob: -6.5650763511657715

Token 394: '!)' (ID: 19406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1335170418024063
    2. '   ' → logprob: -2.633517026901245
    3. ':' → logprob: -4.383517265319824
    4. '):
' → logprob: -4.633517265319824
    5. ' )' → logprob: -4.633517265319824
    6. '):' → logprob: -5.383517265319824
    7. '
' → logprob: -5.383517265319824
    8. ')
' → logprob: -5.758517265319824
    9. ':
' → logprob: -6.258517265319824
    10. ' ' → logprob: -6.883517265319824

Token 395: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: ' faire' (ID: 8119)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7856703400611877
    2. ' r' → logprob: -1.035670280456543
    3. ' l' → logprob: -2.660670280456543
    4. '   ' → logprob: -2.785670280456543
    5. '    ' → logprob: -3.535670280456543
    6. 'l' → logprob: -4.910670280456543
    7. ' ' → logprob: -5.035670280456543
    8. ' while' → logprob: -5.410670280456543
    9. 'while' → logprob: -5.785670280456543
    10. '(r' → logprob: -6.035670280456543

Token 397: ' je' (ID: 1264)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0885342359542847
    2. ' r' → logprob: -1.3385342359542847
    3. 'l' → logprob: -1.8385342359542847
    4. ' l' → logprob: -1.9635342359542847
    5. '   ' → logprob: -2.963534355163574
    6. ' while' → logprob: -3.838534355163574
    7. '    ' → logprob: -5.088534355163574
    8. 'while' → logprob: -5.088534355163574
    9. 'mid' → logprob: -5.838534355163574
    10. ' mid' → logprob: -5.963534355163574

Token 398: ' crois' (ID: 65485)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9436727166175842
    2. '   ' → logprob: -1.4436726570129395
    3. 't' → logprob: -1.9436726570129395
    4. ' n' → logprob: -2.6936726570129395
    5. '    ' → logprob: -2.8186726570129395
    6. 'ter' → logprob: -3.8186726570129395
    7. ' t' → logprob: -5.0686726570129395
    8. '  ' → logprob: -5.0686726570129395
    9. 'r' → logprob: -5.1936726570129395
    10. 'nd' → logprob: -5.1936726570129395

Token 399: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1688186675310135
    2. 'r' → logprob: -2.793818712234497
    3. '    ' → logprob: -3.168818712234497
    4. 'l' → logprob: -3.918818712234497
    5. ' r' → logprob: -4.418818473815918
    6. '       ' → logprob: -4.793818473815918
    7. ' l' → logprob: -4.918818473815918
    8. '(r' → logprob: -6.418818473815918
    9. ' while' → logprob: -7.043818473815918
    10. '  ' → logprob: -8.168818473815918

Token 400: ' recherche' (ID: 24975)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7645100355148315
    2. 'r' → logprob: -1.5145100355148315
    3. 'while' → logprob: -2.014510154724121
    4. ' r' → logprob: -2.889510154724121
    5. '   ' → logprob: -3.514510154724121
    6. 'b' → logprob: -3.639510154724121
    7. ' binary' → logprob: -4.389510154724121
    8. ' b' → logprob: -4.389510154724121
    9. 'binary' → logprob: -4.389510154724121
    10. 'mid' → logprob: -4.514510154724121

Token 401: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046719133853912354
    2. 'mid' → logprob: -4.046719074249268
    3. '  ' → logprob: -4.921719074249268
    4. 'while' → logprob: -5.421719074249268
    5. ' while' → logprob: -5.421719074249268
    6. ' mid' → logprob: -5.546719074249268
    7. ' ' → logprob: -5.796719074249268
    8. 'm' → logprob: -6.796719074249268
    9. '[mid' → logprob: -7.171719074249268
    10. '    ' → logprob: -7.296719074249268

Token 402: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.39367011189460754
    2. 'inary' → logprob: -1.5186700820922852
    3. 'inaire' → logprob: -2.268670082092285
    4. '   ' → logprob: -6.518670082092285
    5. 'inar' → logprob: -7.518670082092285
    6. 'i' → logprob: -7.768670082092285
    7. 'r' → logprob: -8.643670082092285
    8. 'y' → logprob: -9.893670082092285
    9. 'n' → logprob: -10.018670082092285
    10. 'inarily' → logprob: -10.143670082092285

Token 403: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1450156420469284
    2. '<|end|>' → logprob: -2.3950157165527344
    3. ':' → logprob: -3.7700157165527344
    4. '    ' → logprob: -5.020015716552734
    5. '       ' → logprob: -5.895015716552734
    6. ' ' → logprob: -5.895015716552734
    7. '	while' → logprob: -6.520015716552734
    8. '  ' → logprob: -6.770015716552734
    9. '<|end|>' → logprob: -6.895015716552734
    10. '\t' → logprob: -6.895015716552734

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11948279291391373
    2. '<|end|>' → logprob: -2.9944827556610107
    3. '	while' → logprob: -3.4944827556610107
    4. ' while' → logprob: -3.9944827556610107
    5. ':' → logprob: -5.61948299407959
    6. '    ' → logprob: -6.36948299407959
    7. ':
' → logprob: -6.99448299407959
    8. ' ' → logprob: -6.99448299407959
    9. '
' → logprob: -7.11948299407959
    10. '       ' → logprob: -7.36948299407959

Token 405: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1633584350347519
    2. '	while' → logprob: -2.538358449935913
    3. ' while' → logprob: -2.788358449935913
    4. 'while' (adapté à ' while') → logprob: -6.663358211517334
    5. '       ' → logprob: -6.663358211517334
    6. ' ' → logprob: -6.788358211517334
    7. '    ' → logprob: -7.038358211517334
    8. ' 
' → logprob: -7.038358211517334
    9. '\t' → logprob: -7.163358211517334
    10. '<|end|>' → logprob: -7.413358211517334

Token 406: ' r' (ID: 428)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2819174826145172
    2. 'l' → logprob: -1.4069174528121948
    3. 'r' → logprob: -7.656917572021484
    4. ' r' → logprob: -8.156917572021484
    5. ' ' → logprob: -13.031917572021484
    6. '   ' → logprob: -13.031917572021484
    7. '	l' → logprob: -13.406917572021484
    8. '```' → logprob: -14.281917572021484
    9. ' ' → logprob: -15.031917572021484
    10. '_l' → logprob: -15.781917572021484

Token 407: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2609102129936218
    2. ' -' → logprob: -1.6359102725982666
    3. '-l' → logprob: -3.7609102725982666
    4. '>' → logprob: -4.6359100341796875
    5. ' >' → logprob: -6.5109100341796875
    6. '-t' → logprob: -9.510910034179688
    7. '-r' → logprob: -9.635910034179688
    8. '-mid' → logprob: -10.385910034179688
    9. '   ' → logprob: -10.510910034179688
    10. '-token' → logprob: -10.635910034179688

Token 408: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16065657138824463
    2. '1' → logprob: -1.9106565713882446
    3. '>' → logprob: -8.410656929016113
    4. ' l' → logprob: -9.035656929016113
    5. '   ' → logprob: -9.910656929016113
    6. ' >' → logprob: -10.660656929016113
    7. 'r' → logprob: -11.535656929016113
    8. ' ' → logprob: -12.160656929016113
    9. '  ' → logprob: -13.410656929016113
    10. '	l' → logprob: -14.785656929016113

Token 409: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.011052886955440044
    2. ' >' → logprob: -4.511053085327148
    3. '1' → logprob: -13.761053085327148
    4. '()>' → logprob: -13.761053085327148
    5. ')>' → logprob: -14.761053085327148
    6. ' ' → logprob: -14.761053085327148
    7. '">' → logprob: -15.011053085327148
    8. '>b' → logprob: -15.011053085327148
    9. '<|end|>' → logprob: -15.761053085327148
    10. '>a' → logprob: -15.886053085327148

Token 410: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5690089639974758e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -14.000015258789062
    4. '>' → logprob: -17.500015258789062
    5. '2' → logprob: -17.750015258789062
    6. '  ' → logprob: -18.250015258789062
    7. '0' → logprob: -18.375015258789062
    8. '```' → logprob: -19.062515258789062
    9. '10' → logprob: -19.250015258789062
    10. '=' → logprob: -19.500015258789062

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.875004768371582
    3. '   ' → logprob: -13.625004768371582
    4. '2' → logprob: -14.750004768371582
    5. '>' → logprob: -15.125004768371582
    6. '10' → logprob: -15.250004768371582
    7. '100' → logprob: -16.2500057220459
    8. '0' → logprob: -16.8750057220459
    9. '3' → logprob: -17.1250057220459
    10. '4' → logprob: -17.3750057220459

Token 412: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6977189779281616
    2. ':
' → logprob: -0.6977189779281616
    3. '   ' → logprob: -5.822719097137451
    4. '       ' → logprob: -7.197719097137451
    5. ' and' → logprob: -8.072718620300293
    6. '<|end|>' → logprob: -8.697718620300293
    7. '=' → logprob: -8.947718620300293
    8. ' :
' → logprob: -9.322718620300293
    9. '):
' → logprob: -10.072718620300293
    10. ' :' → logprob: -11.197718620300293

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12232579290866852
    2. '   ' → logprob: -2.497325897216797
    3. ' mid' → logprob: -4.622325897216797
    4. '<|end|>' → logprob: -4.622325897216797
    5. ' m' → logprob: -5.372325897216797
    6. '    ' → logprob: -5.497325897216797
    7. 'm' → logprob: -6.497325897216797
    8. ' ' → logprob: -7.247325897216797
    9. '```' → logprob: -7.622325897216797
    10. '	   ' → logprob: -7.872325897216797

Token 414: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.07937352359294891
    2. ' m' → logprob: -2.579373598098755
    3. '   ' → logprob: -8.454373359680176
    4. ' mid' → logprob: -8.829373359680176
    5. 'mid' → logprob: -9.454373359680176
    6. '	m' → logprob: -10.454373359680176
    7. '       ' → logprob: -11.079373359680176
    8. ' ' → logprob: -15.079373359680176
    9. '           ' → logprob: -15.329373359680176
    10. '```' → logprob: -15.329373359680176

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022510588169098
    2. '=' → logprob: -2.3502252101898193
    3. '=int' → logprob: -11.975225448608398
    4. ' ' → logprob: -12.100225448608398
    5. '```' → logprob: -13.225225448608398
    6. ' =(' → logprob: -14.350225448608398
    7. ')' → logprob: -14.350225448608398
    8. '=m' → logprob: -14.350225448608398
    9. '=(' → logprob: -14.600225448608398
    10. ' =
' → logprob: -14.725225448608398

Token 416: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.011056660674512386
    2. ' (' → logprob: -4.511056423187256
    3. '(r' → logprob: -12.261056900024414
    4. '(' → logprob: -13.136056900024414
    5. '(m' → logprob: -14.261056900024414
    6. '(ls' → logprob: -14.886056900024414
    7. '   ' → logprob: -15.261056900024414
    8. '(L' → logprob: -15.386056900024414
    9. '(ll' → logprob: -16.011056900024414
    10. ' ' → logprob: -16.136056900024414

Token 417: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0001129602751461789
    2. 'r' → logprob: -9.125112533569336
    3. '(l' → logprob: -13.000112533569336
    4. ' l' → logprob: -13.500112533569336
    5. '   ' → logprob: -16.125112533569336
    6. '	l' → logprob: -16.500112533569336
    7. '```' → logprob: -18.000112533569336
    8. 'm' → logprob: -18.250112533569336
    9. '(r' → logprob: -18.625112533569336
    10. ' ' → logprob: -18.625112533569336

Token 418: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9491358399391174
    2. ' +' → logprob: -0.9491358399391174
    3. '+l' → logprob: -1.6991357803344727
    4. 'l' → logprob: -3.1991357803344727
    5. '+r' → logprob: -6.324135780334473
    6. ' l' → logprob: -8.199135780334473
    7. 'r' → logprob: -8.949135780334473
    8. '```' → logprob: -12.449135780334473
    9. '[l' → logprob: -13.449135780334473
    10. ' ' → logprob: -13.699135780334473

Token 419: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.15310683415737e-05
    2. ' r' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.00002098083496
    4. ' ' → logprob: -20.62502098083496
    5. '	r' → logprob: -21.00002098083496
    6. '```' → logprob: -21.87502098083496
    7. '    ' → logprob: -22.37502098083496
    8. '     ' → logprob: -22.37502098083496
    9. '  ' → logprob: -23.00002098083496
    10. 'm' → logprob: -23.12502098083496

Token 420: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007309010834433138
    2. ')//' → logprob: -7.250730991363525
    3. ')>>' → logprob: -11.000730514526367
    4. ' )' → logprob: -12.375730514526367
    5. ')
' → logprob: -16.375730514526367
    6. '）' → logprob: -19.125730514526367
    7. ')#' → logprob: -19.500730514526367
    8. '//' → logprob: -19.625730514526367
    9. ' //' → logprob: -19.875730514526367
    10. ']' → logprob: -20.125730514526367

Token 421: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05946275219321251
    2. '>>' → logprob: -4.059462547302246
    3. ' //' → logprob: -4.059462547302246
    4. '//' → logprob: -4.559462547302246
    5. ')//' → logprob: -4.809462547302246
    6. ' >>' → logprob: -6.059462547302246
    7. ')>>' → logprob: -6.184462547302246
    8. ' )' → logprob: -8.809462547302246
    9. '```' → logprob: -11.559462547302246
    10. '>' → logprob: -11.559462547302246

Token 422: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -20.250019073486328
    4. '```' → logprob: -21.500019073486328
    5. '۲' → logprob: -21.750019073486328
    6. '1' → logprob: -21.875019073486328
    7. '3' → logprob: -22.125019073486328
    8. '２' → logprob: -22.875019073486328
    9. '  ' → logprob: -23.875019073486328
    10. '२' → logprob: -24.000019073486328

Token 423: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. 'm' → logprob: -17.5
    4. '(m' → logprob: -17.75
    5. '(' → logprob: -18.625
    6. '1' → logprob: -18.875
    7. '((' → logprob: -19.75
    8. '(N' → logprob: -20.125
    9. 'r' → logprob: -21.25
    10. '   ' → logprob: -21.25

Token 424: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7504349946975708
    2. '
' → logprob: -1.1254349946975708
    3. '       ' → logprob: -2.3754348754882812
    4. 'if' → logprob: -2.7504348754882812
    5. '<|end|>' → logprob: -3.3754348754882812
    6. '        
' → logprob: -5.375434875488281
    7. ' 
' → logprob: -6.250434875488281
    8. '  
' → logprob: -6.750434875488281
    9. '<|end|>' → logprob: -7.125434875488281
    10. '	if' → logprob: -7.375434875488281

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08047295361757278
    2. ' if' → logprob: -2.830472946166992
    3. '
' → logprob: -4.705472946166992
    4. 'if' → logprob: -5.205472946166992
    5. '   ' → logprob: -6.455472946166992
    6. '        
' → logprob: -7.330472946166992
    7. '<|end|>' → logprob: -7.455472946166992
    8. ' 
' → logprob: -8.455472946166992
    9. '  
' → logprob: -8.705472946166992
    10. '        ' → logprob: -9.205472946166992

Token 426: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004853618796914816
    2. ' if' → logprob: -6.37985372543335
    3. '       ' → logprob: -6.62985372543335
    4. 'val' → logprob: -6.75485372543335
    5. '
' → logprob: -8.129853248596191
    6. 'v' → logprob: -9.129853248596191
    7. 'x' → logprob: -9.504853248596191
    8. 'diff' → logprob: -9.754853248596191
    9. 't' → logprob: -10.504853248596191
    10. 'ti' → logprob: -10.879853248596191

Token 427: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0003434488025959581
    2. ' f' → logprob: -8.375343322753906
    3. 'ma' → logprob: -10.500343322753906
    4. 'S' → logprob: -10.500343322753906
    5. 'Y' → logprob: -11.000343322753906
    6. 'i' → logprob: -11.500343322753906
    7. '(f' → logprob: -11.750343322753906
    8. 'm' → logprob: -12.125343322753906
    9. '   ' → logprob: -12.250343322753906
    10. '0' → logprob: -14.000343322753906

Token 428: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0008237993461079895
    2. '(m' → logprob: -7.125823974609375
    3. '(' → logprob: -11.000823974609375
    4. ' (' → logprob: -13.375823974609375
    5. ')' → logprob: -15.250823974609375
    6. '(l' → logprob: -15.375823974609375
    7. ')(' → logprob: -15.625823974609375
    8. 'm' → logprob: -16.000823974609375
    9. '(
' → logprob: -16.125823974609375
    10. ',i' → logprob: -17.125823974609375

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030540024861693382
    2. '(m' → logprob: -4.2805399894714355
    3. ',m' → logprob: -4.4055399894714355
    4. ' ,' → logprob: -5.9055399894714355
    5. '(i' → logprob: -7.6555399894714355
    6. ')' → logprob: -8.155540466308594
    7. 'm' → logprob: -8.405540466308594
    8. ',i' → logprob: -9.030540466308594
    9. '(' → logprob: -9.280540466308594
    10. ')(' → logprob: -10.405540466308594

Token 430: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.76628842484206e-05
    2. ' m' → logprob: -9.625067710876465
    3. ')' → logprob: -14.000067710876465
    4. ')m' → logprob: -14.250067710876465
    5. '       ' → logprob: -17.75006675720215
    6. '   ' → logprob: -18.25006675720215
    7. '	m' → logprob: -19.00006675720215
    8. '    ' → logprob: -20.50006675720215
    9. ' ' → logprob: -21.00006675720215
    10. '        ' → logprob: -22.00006675720215

Token 431: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027921271976083517
    2. ')>=' → logprob: -9.250279426574707
    3. ' )' → logprob: -9.500279426574707
    4. ')<' → logprob: -9.750279426574707
    5. ')>' → logprob: -10.125279426574707
    6. ')<=' → logprob: -12.000279426574707
    7. '   ' → logprob: -13.000279426574707
    8. ')
' → logprob: -14.875279426574707
    9. ' ' → logprob: -15.875279426574707
    10. ')==' → logprob: -16.18777847290039

Token 432: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0944163799285889
    2. '<' → logprob: -1.4694163799285889
    3. '>=' → logprob: -1.5944163799285889
    4. ' >' → logprob: -2.719416379928589
    5. ' >=' → logprob: -2.719416379928589
    6. ' <' → logprob: -2.844416379928589
    7. '<=' → logprob: -3.594416379928589
    8. ' <=' → logprob: -4.344416618347168
    9. '*' → logprob: -7.719416618347168
    10. ' *' → logprob: -8.094416618347168

Token 433: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015375965740531683
    2. 'ma' → logprob: -6.876537799835205
    3. 'f' → logprob: -7.876537799835205
    4. 'S' → logprob: -9.376537322998047
    5. ' ' → logprob: -10.501537322998047
    6. ' ma' → logprob: -13.001537322998047
    7. '1' → logprob: -13.126537322998047
    8. '(ma' → logprob: -13.126537322998047
    9. 'm' → logprob: -13.501537322998047
    10. '   ' → logprob: -14.251537322998047

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011653418187052011
    2. 'ma' → logprob: -7.126165390014648
    3. 'f' → logprob: -8.126165390014648
    4. 'S' → logprob: -10.251165390014648
    5. ' ' → logprob: -10.876165390014648
    6. ' ma' → logprob: -12.876165390014648
    7. 'm' → logprob: -13.126165390014648
    8. '(ma' → logprob: -13.501165390014648
    9. '1' → logprob: -14.001165390014648
    10. 'Y' → logprob: -14.126165390014648

Token 435: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26802822947502136
    2. ':
' → logprob: -1.7680282592773438
    3. ':l' → logprob: -3.5180282592773438
    4. '       ' → logprob: -3.7680282592773438
    5. '   ' → logprob: -4.643028259277344
    6. ' l' → logprob: -6.893028259277344
    7. ' :' → logprob: -7.893028259277344
    8. ' :
' → logprob: -8.393028259277344
    9. '):
' → logprob: -9.393028259277344
    10. 'l' → logprob: -9.393028259277344

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14934803545475006
    2. ' l' → logprob: -2.024348020553589
    3. '       ' → logprob: -5.649348258972168
    4. 'r' → logprob: -6.774348258972168
    5. 'l' → logprob: -7.024348258972168
    6. ' r' → logprob: -7.149348258972168
    7. '               ' → logprob: -9.899348258972168
    8. '
' → logprob: -10.149348258972168
    9. ' ' → logprob: -10.149348258972168
    10. '```' → logprob: -10.274348258972168

Token 437: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0001884015218820423
    2. 'r' → logprob: -8.875188827514648
    3. ' l' → logprob: -10.125188827514648
    4. '           ' → logprob: -12.625188827514648
    5. '
' → logprob: -13.000188827514648
    6. '	l' → logprob: -13.375188827514648
    7. '   ' → logprob: -14.000188827514648
    8. '       ' → logprob: -14.750188827514648
    9. '
' → logprob: -17.62518882751465
    10. '            
' → logprob: -18.00018882751465

Token 438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694543600082397
    2. '=' → logprob: -2.1269454956054688
    3. ' ' → logprob: -11.376945495605469
    4. '    ' → logprob: -12.501945495605469
    5. '        ' → logprob: -14.126945495605469
    6. '=r' → logprob: -15.376945495605469
    7. '=l' → logprob: -15.376945495605469
    8. ')' → logprob: -16.00194549560547
    9. ' +=' → logprob: -16.12694549560547
    10. ',' → logprob: -16.37694549560547

Token 439: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.662937372922897e-05
    2. ' m' → logprob: -9.250096321105957
    3. '	m' → logprob: -14.625096321105957
    4. '   ' → logprob: -19.125097274780273
    5. '       ' → logprob: -20.375097274780273
    6. '
' → logprob: -20.750097274780273
    7. ' м' → logprob: -21.125097274780273
    8. '    ' → logprob: -21.125097274780273
    9. '           ' → logprob: -21.375097274780273
    10. 'м' → logprob: -21.375097274780273

Token 440: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01793639175593853
    2. 'else' → logprob: -4.1429362297058105
    3. ' else' → logprob: -6.2679362297058105
    4. '	else' → logprob: -13.392936706542969
    5. '<|end|>' → logprob: -13.767936706542969
    6. '```' → logprob: -14.642936706542969
    7. 'r' → logprob: -15.017936706542969
    8. '	' → logprob: -15.517936706542969
    9. ':
' → logprob: -15.767936706542969
    10. '   ' → logprob: -15.892936706542969

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.101963572204113
    2. 'else' → logprob: -2.351963520050049
    3. ' else' → logprob: -6.351963520050049
    4. '```' → logprob: -12.101963996887207
    5. 'r' → logprob: -12.601963996887207
    6. '	else' → logprob: -13.726963996887207
    7. '<|end|>' → logprob: -14.601963996887207
    8. '   ' → logprob: -14.726963996887207
    9. '	' → logprob: -14.726963996887207
    10. '​' → logprob: -15.601963996887207

Token 442: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.026004161685705185
    2. '       ' → logprob: -3.7760040760040283
    3. ' else' → logprob: -5.901004314422607
    4. 'r' → logprob: -11.40100383758545
    5. '	else' → logprob: -12.52600383758545
    6. '   ' → logprob: -13.02600383758545
    7. '```' → logprob: -14.40100383758545
    8. '<|end|>' → logprob: -15.65100383758545
    9. '#else' → logprob: -16.401004791259766
    10. 's' → logprob: -17.026004791259766

Token 443: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013103283941745758
    2. '       ' → logprob: -4.388103485107422
    3. 'r' → logprob: -8.138103485107422
    4. ':
' → logprob: -9.013103485107422
    5. ':' → logprob: -10.138103485107422
    6. '```' → logprob: -10.138103485107422
    7. ' r' → logprob: -10.513103485107422
    8. '	       ' → logprob: -10.763103485107422
    9. '<|end|>' → logprob: -11.138103485107422
    10. '   ' → logprob: -11.638103485107422

Token 444: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04884737730026245
    2. 'r' → logprob: -3.0488474369049072
    3. '           ' → logprob: -8.298847198486328
    4. ' r' → logprob: -11.798847198486328
    5. '   ' → logprob: -13.173847198486328
    6. '	r' → logprob: -14.423847198486328
    7. '```' → logprob: -14.798847198486328
    8. '
' → logprob: -15.423847198486328
    9. 'n' → logprob: -16.673847198486328
    10. '_r' → logprob: -16.923847198486328

Token 445: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -1.8624639324116288e-06
    2. ' r' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.875001907348633
    4. '           ' → logprob: -18.125001907348633
    5. '       ' → logprob: -18.375001907348633
    6. '	r' → logprob: -18.500001907348633
    7. '
' → logprob: -19.125001907348633
    8. '_r' → logprob: -21.375001907348633
    9. '```' → logprob: -22.750001907348633
    10. '­r' → logprob: -22.750001907348633

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868762254714966
    2. '=' → logprob: -1.1368762254714966
    3. '=l' → logprob: -12.261876106262207
    4. ' ' → logprob: -15.761876106262207
    5. ')' → logprob: -16.011877059936523
    6. '=m' → logprob: -16.886877059936523
    7. '           ' → logprob: -16.886877059936523
    8. ' l' → logprob: -17.011877059936523
    9. '   ' → logprob: -17.511877059936523
    10. '=r' → logprob: -17.761877059936523

Token 447: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00027432903880253434
    2. ' m' → logprob: -8.250274658203125
    3. 'l' → logprob: -11.250274658203125
    4. '	m' → logprob: -17.250274658203125
    5. ' l' → logprob: -18.250274658203125
    6. '   ' → logprob: -18.625274658203125
    7. ' ' → logprob: -19.000274658203125
    8. '    ' → logprob: -20.750274658203125
    9. '  ' → logprob: -21.250274658203125
    10. '       ' → logprob: -21.625274658203125

Token 448: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03279099613428116
    2. '
' → logprob: -3.9077908992767334
    3. '    
' → logprob: -4.9077911376953125
    4. '<|end|>' → logprob: -6.0327911376953125
    5. ')' → logprob: -7.1577911376953125
    6. '  
' → logprob: -7.9077911376953125
    7. '<|end|>' → logprob: -8.157791137695312
    8. '        
' → logprob: -8.657791137695312
    9. ' 
' → logprob: -8.657791137695312
    10. '.' → logprob: -9.282791137695312

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21518486738204956
    2. 'ma' → logprob: -1.7151849269866943
    3. ' ma' → logprob: -5.340184688568115
    4. 'm' → logprob: -5.465184688568115
    5. ' if' → logprob: -5.715184688568115
    6. 'if' → logprob: -7.340184688568115
    7. ')' → logprob: -8.090185165405273
    8. '
' → logprob: -9.215185165405273
    9. '       ' → logprob: -9.590185165405273
    10. '1' → logprob: -9.840185165405273

Token 450: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7052722573280334
    2. 'ma' → logprob: -1.2052721977233887
    3. 'if' → logprob: -2.3302721977233887
    4. ' if' → logprob: -2.4552721977233887
    5. ' ma' → logprob: -4.580272197723389
    6. 'm' → logprob: -5.705272197723389
    7. '
' → logprob: -5.955272197723389
    8. 'val' → logprob: -6.205272197723389
    9. '    
' → logprob: -6.705272197723389
    10. ' val' → logprob: -7.205272197723389

Token 451: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11122610419988632
    2. '   ' → logprob: -2.7362260818481445
    3. ' if' → logprob: -3.7362260818481445
    4. 'ma' → logprob: -4.2362260818481445
    5. 'a' → logprob: -7.6112260818481445
    6. 't' → logprob: -7.9862260818481445
    7. 'val' → logprob: -8.111226081848145
    8. '       ' → logprob: -8.861226081848145
    9. '```' → logprob: -8.861226081848145
    10. 'ai' → logprob: -9.236226081848145

Token 452: ' che' (ID: 1378)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35843273997306824
    2. 'ma' → logprob: -1.8584327697753906
    3. ' ma' → logprob: -2.3584327697753906
    4. 'num' → logprob: -4.108432769775391
    5. ' num' → logprob: -5.233432769775391
    6. ' numerator' → logprob: -5.233432769775391
    7. ' if' → logprob: -5.858432769775391
    8. '1' → logprob: -5.858432769775391
    9. '```' → logprob: -6.233432769775391
    10. 'a' → logprob: -6.233432769775391

Token 453: 'lou' (ID: 133128)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2753280699253082
    2. '       ' → logprob: -2.1503281593322754
    3. ' ma' → logprob: -3.0253281593322754
    4. 'ma' → logprob: -3.4003281593322754
    5. '1' → logprob: -3.5253281593322754
    6. '    ' → logprob: -5.525328159332275
    7. '  ' → logprob: -6.400328159332275
    8. ' ' → logprob: -6.525328159332275
    9. '           ' → logprob: -6.650328159332275
    10. '     ' → logprob: -7.525328159332275

Token 454: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23974089324474335
    2. 'ma' → logprob: -2.2397408485412598
    3. ' if' → logprob: -2.4897408485412598
    4. 'if' → logprob: -4.11474084854126
    5. ' ma' → logprob: -5.36474084854126
    6. '    
' → logprob: -7.86474084854126
    7. '1' → logprob: -8.114741325378418
    8. 'm' → logprob: -8.239741325378418
    9. ',' → logprob: -8.239741325378418
    10. '```' → logprob: -8.239741325378418

Token 455: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21378250420093536
    2. 'ma' → logprob: -3.088782548904419
    3. ' if' → logprob: -3.088782548904419
    4. ' ma' → logprob: -3.213782548904419
    5. 'num' → logprob: -3.963782548904419
    6. ' num' → logprob: -4.08878231048584
    7. 'if' → logprob: -4.71378231048584
    8. ' numerator' → logprob: -5.08878231048584
    9. '```' → logprob: -6.08878231048584
    10. ' val' → logprob: -6.08878231048584

Token 456: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12892873585224152
    2. 'ma' → logprob: -2.8789286613464355
    3. 'a' → logprob: -4.2539286613464355
    4. 'val' → logprob: -4.7539286613464355
    5. ' ma' → logprob: -4.7539286613464355
    6. ' val' → logprob: -5.2539286613464355
    7. '       ' → logprob: -5.3789286613464355
    8. 'num' → logprob: -5.3789286613464355
    9. 'if' → logprob: -5.5039286613464355
    10. ' a' → logprob: -5.5039286613464355

Token 457: ''est' (ID: 6616)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0041099786758423
    2. '   ' → logprob: -1.1291099786758423
    3. '=' → logprob: -2.2541098594665527
    4. ' if' → logprob: -2.8791098594665527
    5. ' ma' → logprob: -3.0041098594665527
    6. 'ma' → logprob: -3.8791098594665527
    7. ' ' → logprob: -3.8791098594665527
    8. 'if' → logprob: -4.504109859466553
    9. '1' → logprob: -5.129109859466553
    10. 'a' → logprob: -5.254109859466553

Token 458: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8560492396354675
    2. 'f' → logprob: -0.9810492396354675
    3. ' f' → logprob: -3.1060492992401123
    4. 'ma' → logprob: -3.1060492992401123
    5. 'Y' → logprob: -3.4810492992401123
    6. '       ' → logprob: -3.6060492992401123
    7. ' Y' → logprob: -4.481049060821533
    8. 'S' → logprob: -4.981049060821533
    9. '(' → logprob: -5.231049060821533
    10. 'a' → logprob: -5.356049060821533

Token 459: ' ça' (ID: 13590)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.8051364421844482
    2. '   ' → logprob: -1.5551364421844482
    3. '       ' → logprob: -1.5551364421844482
    4. 'f' → logprob: -3.3051364421844482
    5. ' ma' → logprob: -3.8051364421844482
    6. 'a' → logprob: -4.055136680603027
    7. 'val' → logprob: -5.180136680603027
    8. ' f' → logprob: -5.180136680603027
    9. 'num' → logprob: -5.305136680603027
    10. 'l' → logprob: -5.680136680603027

Token 460: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07884406298398972
    2. 'ma' → logprob: -3.4538440704345703
    3. ' if' → logprob: -3.9538440704345703
    4. ' ma' → logprob: -4.57884407043457
    5. 'if' → logprob: -5.20384407043457
    6. ' numerator' → logprob: -6.20384407043457
    7. '```' → logprob: -6.45384407043457
    8. 'num' → logprob: -6.70384407043457
    9. '    
' → logprob: -6.95384407043457
    10. ' num' → logprob: -7.95384407043457

Token 461: ' ça' (ID: 13590)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.8052553534507751
    2. '   ' → logprob: -1.05525541305542
    3. '       ' → logprob: -1.68025541305542
    4. ' ma' → logprob: -5.05525541305542
    5. 'num' → logprob: -5.68025541305542
    6. 'val' → logprob: -6.18025541305542
    7. 'a' → logprob: -6.30525541305542
    8. 'if' → logprob: -6.68025541305542
    9. 'numer' → logprob: -6.93025541305542
    10. 'x' → logprob: -8.055254936218262

Token 462: ' tourne' (ID: 134461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7905240058898926
    2. 'ma' → logprob: -1.4155240058898926
    3. 'continue' → logprob: -1.4155240058898926
    4. ' continue' → logprob: -4.040524005889893
    5. ' continues' → logprob: -4.415524005889893
    6. 'contin' → logprob: -4.540524005889893
    7. 'go' → logprob: -5.290524005889893
    8. 'f' → logprob: -5.540524005889893
    9. ' ma' → logprob: -6.290524005889893
    10. '
' → logprob: -6.790524005889893

Token 463: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02095792256295681
    2. 'ma' → logprob: -4.270957946777344
    3. 'if' → logprob: -5.895957946777344
    4. ' if' → logprob: -6.145957946777344
    5. 'a' → logprob: -7.145957946777344
    6. ' ma' → logprob: -8.270957946777344
    7. '    
' → logprob: -8.645957946777344
    8. '```' → logprob: -8.645957946777344
    9. '1' → logprob: -9.270957946777344
    10. 'num' → logprob: -9.895957946777344

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019421862438321114
    2. 'ma' → logprob: -5.1444220542907715
    3. ' if' → logprob: -5.1444220542907715
    4. ' ma' → logprob: -5.2694220542907715
    5. 'if' → logprob: -7.6444220542907715
    6. ' a' → logprob: -7.8944220542907715
    7. ' val' → logprob: -8.144421577453613
    8. 'a' → logprob: -8.269421577453613
    9. ' t' → logprob: -8.519421577453613
    10. ' numerator' → logprob: -8.894421577453613

Token 465: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.7675668597221375
    2. '   ' → logprob: -1.3925669193267822
    3. 'ma' → logprob: -1.6425669193267822
    4. 'if' → logprob: -3.6425669193267822
    5. 'val' → logprob: -3.8925669193267822
    6. 'a' → logprob: -4.142566680908203
    7. 'v' → logprob: -4.892566680908203
    8. 'numer' → logprob: -5.017566680908203
    9. 'ai' → logprob: -5.642566680908203
    10. 'x' → logprob: -5.767566680908203

Token 466: ' Pas' (ID: 18323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7234480977058411
    2. 'num' → logprob: -1.0984480381011963
    3. 'ma' → logprob: -1.8484480381011963
    4. 'if' → logprob: -4.348448276519775
    5. 'numer' → logprob: -5.598448276519775
    6. 'a' → logprob: -5.973448276519775
    7. 'ai' → logprob: -6.973448276519775
    8. 'val' → logprob: -7.223448276519775
    9. ' ma' → logprob: -7.473448276519775
    10. ' num' → logprob: -7.973448276519775

Token 467: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2294904887676239
    2. 'ma' → logprob: -2.4794905185699463
    3. '       ' → logprob: -2.7294905185699463
    4. ' ma' → logprob: -4.354490280151367
    5. 'if' → logprob: -4.854490280151367
    6. '1' → logprob: -5.104490280151367
    7. '           ' → logprob: -5.229490280151367
    8. ' if' → logprob: -5.479490280151367
    9. '    ' → logprob: -5.979490280151367
    10. '_ma' → logprob: -5.979490280151367

Token 468: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0919775739312172
    2. ' if' → logprob: -2.966977596282959
    3. 'ma' → logprob: -3.966977596282959
    4. 'if' → logprob: -4.466977596282959
    5. ' ma' → logprob: -5.466977596282959
    6. 'a' → logprob: -7.841977596282959
    7. '    
' → logprob: -8.2169771194458
    8. '```' → logprob: -8.2169771194458
    9. ' ' → logprob: -9.3419771194458
    10. '       ' → logprob: -9.5919771194458

Token 469: ' min' (ID: 1349)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.22373485565185547
    2. ' ma' → logprob: -2.5987348556518555
    3. '(ma' → logprob: -2.5987348556518555
    4. '   ' → logprob: -3.4737348556518555
    5. 'l' → logprob: -4.3487348556518555
    6. ' l' → logprob: -6.4737348556518555
    7. 'm' → logprob: -6.5987348556518555
    8. ' (' → logprob: -7.0987348556518555
    9. '(m' → logprob: -7.0987348556518555
    10. 'la' → logprob: -7.3487348556518555

Token 470: ' soit' (ID: 17293)
  Prédit: '(ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ma' → logprob: -0.029975872486829758
    2. 'ma' → logprob: -4.029975891113281
    3. ' ma' → logprob: -5.529975891113281
    4. '(
' → logprob: -5.779975891113281
    5. '(' → logprob: -6.279975891113281
    6. '_ma' → logprob: -6.404975891113281
    7. ' =' → logprob: -8.154975891113281
    8. '=' → logprob: -8.279975891113281
    9. ' (' → logprob: -8.404975891113281
    10. '```' → logprob: -8.779975891113281

Token 471: ' vraiment' (ID: 26637)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.2648337781429291
    2. 'min' → logprob: -2.514833688735962
    3. '(min' → logprob: -2.514833688735962
    4. ' l' → logprob: -4.139833927154541
    5. '(' → logprob: -4.639833927154541
    6. ' max' → logprob: -4.764833927154541
    7. 'l' → logprob: -4.889833927154541
    8. 'max' → logprob: -5.014833927154541
    9. '(l' → logprob: -5.139833927154541
    10. ' correct' → logprob: -5.514833927154541

Token 472: ' utile' (ID: 68237)
  Prédit: '(ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ma' → logprob: -0.6361929178237915
    2. 'ma' → logprob: -1.6361929178237915
    3. '(min' → logprob: -2.761192798614502
    4. ' ma' → logprob: -2.886192798614502
    5. '(l' → logprob: -3.011192798614502
    6. 'l' → logprob: -3.886192798614502
    7. ' l' → logprob: -4.011192798614502
    8. ' min' → logprob: -4.261192798614502
    9. ' (' → logprob: -4.511192798614502
    10. '(' → logprob: -4.511192798614502

Token 473: ' mais' (ID: 2899)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.2879382371902466
    2. ' ma' → logprob: -1.7879382371902466
    3. '   ' → logprob: -2.662938117980957
    4. '(ma' → logprob: -5.412938117980957
    5. 'min' → logprob: -5.662938117980957
    6. ' min' → logprob: -7.037938117980957
    7. '```' → logprob: -7.537938117980957
    8. ',' → logprob: -7.662938117980957
    9. '(
' → logprob: -7.662938117980957
    10. ' (' → logprob: -7.787938117980957

Token 474: ' c' (ID: 274)
  Prédit: ' ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ma' → logprob: -0.6241390109062195
    2. '   ' → logprob: -1.4991390705108643
    3. 'ma' → logprob: -1.6241390705108643
    4. ' val' → logprob: -3.9991390705108643
    5. 'val' → logprob: -5.249138832092285
    6. '       ' → logprob: -6.124138832092285
    7. ' numerator' → logprob: -6.249138832092285
    8. '
' → logprob: -6.374138832092285
    9. '(ma' → logprob: -6.874138832092285
    10. ' ratio' → logprob: -6.874138832092285

Token 475: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8633103370666504
    2. ' l' → logprob: -1.6133103370666504
    3. '(
' → logprob: -1.9883103370666504
    4. '```' → logprob: -2.9883103370666504
    5. '=' → logprob: -3.4883103370666504
    6. '       ' → logprob: -3.7383103370666504
    7. '(' → logprob: -4.11331033706665
    8. ':
' → logprob: -4.36331033706665
    9. ')' → logprob: -4.36331033706665
    10. '(i' → logprob: -4.48831033706665

Token 476: ' là' (ID: 8052)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6469777226448059
    2. 'min' → logprob: -0.7719777226448059
    3. 'max' → logprob: -5.39697790145874
    4. '   ' → logprob: -5.52197790145874
    5. ' max' → logprob: -6.02197790145874
    6. 'ma' → logprob: -6.89697790145874
    7. 'l' → logprob: -7.52197790145874
    8. ' l' → logprob: -7.77197790145874
    9. '(min' → logprob: -8.021977424621582
    10. ' ma' → logprob: -8.521977424621582

Token 477: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055225491523742676
    2. 'ma' → logprob: -3.305225372314453
    3. '(ma' → logprob: -4.930225372314453
    4. ' ma' → logprob: -5.180225372314453
    5. '
' → logprob: -6.680225372314453
    6. '```' → logprob: -6.930225372314453
    7. '(' → logprob: -7.555225372314453
    8. '    
' → logprob: -8.180225372314453
    9. '  ' → logprob: -8.555225372314453
    10. '       ' → logprob: -8.555225372314453

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24278056621551514
    2. ' ma' → logprob: -2.2427806854248047
    3. 'ma' → logprob: -2.2427806854248047
    4. '```' → logprob: -6.867780685424805
    5. 'a' → logprob: -7.242780685424805
    6. '1' → logprob: -8.242780685424805
    7. '(ma' → logprob: -8.867780685424805
    8. 'v' → logprob: -9.242780685424805
    9. 'm' → logprob: -9.367780685424805
    10. ' a' → logprob: -9.492780685424805

Token 479: ' a' (ID: 261)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.46135178208351135
    2. '   ' → logprob: -1.836351752281189
    3. ' ma' → logprob: -1.961351752281189
    4. 'num' → logprob: -3.8363518714904785
    5. 'val' → logprob: -4.5863518714904785
    6. 'x' → logprob: -4.8363518714904785
    7. ' val' → logprob: -5.3363518714904785
    8. 'tmp' → logprob: -5.7113518714904785
    9. 'v' → logprob: -5.8363518714904785
    10. 'm' → logprob: -5.8363518714904785

Token 480: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14013485610485077
    2. '=' → logprob: -2.640134811401367
    3. '1' → logprob: -3.015134811401367
    4. ',' → logprob: -4.890134811401367
    5. '_val' → logprob: -7.140134811401367
    6. '=max' → logprob: -7.140134811401367
    7. '   ' → logprob: -8.140134811401367
    8. '_' → logprob: -8.390134811401367
    9. '_value' → logprob: -9.140134811401367
    10. 'ma' → logprob: -9.390134811401367

Token 481: ' l' (ID: 305)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06193698197603226
    2. ' min' → logprob: -3.436937093734741
    3. 'f' → logprob: -3.811937093734741
    4. 'max' → logprob: -6.061936855316162
    5. ' f' → logprob: -6.686936855316162
    6. 'ma' → logprob: -6.686936855316162
    7. 'Y' → logprob: -7.561936855316162
    8. 'S' → logprob: -9.68693733215332
    9. '   ' → logprob: -9.81193733215332
    10. ' ma' → logprob: -9.93693733215332

Token 482: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7490420341491699
    2. '+' → logprob: -0.9990420341491699
    3. '
' → logprob: -2.49904203414917
    4. ' if' → logprob: -3.12404203414917
    5. '<|end|>' → logprob: -4.37404203414917
    6. '   ' → logprob: -4.87404203414917
    7. 'if' → logprob: -5.62404203414917
    8. ',' → logprob: -5.87404203414917
    9. 'ma' → logprob: -6.49904203414917
    10. 'a' → logprob: -6.87404203414917

Token 483: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.22723519802093506
    2. 'ma' → logprob: -2.6022353172302246
    3. '(Y' → logprob: -2.9772353172302246
    4. 'f' → logprob: -3.3522353172302246
    5. '(ma' → logprob: -4.852235317230225
    6. 'S' → logprob: -4.852235317230225
    7. '(S' → logprob: -5.227235317230225
    8. ' Y' → logprob: -5.477235317230225
    9. '(' → logprob: -5.602235317230225
    10. 'YY' → logprob: -5.602235317230225

Token 484: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.375003814697266
    3. '[l' → logprob: -14.875003814697266
    4. '```' → logprob: -15.000003814697266
    5. '[m' → logprob: -15.375003814697266
    6. ' [' → logprob: -15.375003814697266
    7. '[j' → logprob: -15.625003814697266
    8. '   ' → logprob: -16.000003814697266
    9. '[a' → logprob: -16.250003814697266
    10. '[s' → logprob: -16.375003814697266

Token 485: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016726139932870865
    2. '[' → logprob: -4.141726016998291
    3. ' ][' → logprob: -8.39172649383545
    4. ']' → logprob: -8.51672649383545
    5. ')[' → logprob: -9.64172649383545
    6. '0' → logprob: -10.01672649383545
    7. '   ' → logprob: -10.14172649383545
    8. '```' → logprob: -11.39172649383545
    9. '"][' → logprob: -11.51672649383545
    10. '`' → logprob: -11.57922649383545

Token 486: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.44443862256594e-05
    2. ' ' → logprob: -10.125064849853516
    3. '1' → logprob: -11.500064849853516
    4. '   ' → logprob: -11.875064849853516
    5. '[' → logprob: -12.500064849853516
    6. '(' → logprob: -14.312564849853516
    7. '```' → logprob: -14.312564849853516
    8. '  ' → logprob: -14.687564849853516
    9. '][' → logprob: -15.125064849853516
    10. '
' → logprob: -15.187564849853516

Token 487: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06326734274625778
    2. '<|end|>' → logprob: -3.563267230987549
    3. '[' → logprob: -4.688267230987549
    4. '//' → logprob: -5.188267230987549
    5. '   ' → logprob: -5.313267230987549
    6. ' //' → logprob: -5.688267230987549
    7. ')' → logprob: -5.813267230987549
    8. '<|end|>' → logprob: -6.313267230987549
    9. ' ]' → logprob: -6.563267230987549
    10. '```' → logprob: -7.688267230987549

Token 488: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.22243531048297882
    2. 'S' → logprob: -1.8474353551864624
    3. 'f' → logprob: -3.847435235977173
    4. ' min' → logprob: -4.347435474395752
    5. '(min' → logprob: -5.847435474395752
    6. ' S' → logprob: -6.222435474395752
    7. '(' → logprob: -7.222435474395752
    8. ' f' → logprob: -7.597435474395752
    9. 'max' → logprob: -7.722435474395752
    10. '   ' → logprob: -8.347434997558594

Token 490: '(f' (ID: 1526)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.8774992227554321
    2. '(l' → logprob: -1.5024992227554321
    3. '(Y' → logprob: -1.7524992227554321
    4. '(' → logprob: -1.8774992227554321
    5. '((' → logprob: -3.5024991035461426
    6. '(s' → logprob: -6.877499103546143
    7. '(S' → logprob: -6.877499103546143
    8. '(N' → logprob: -7.127499103546143
    9. '(min' → logprob: -7.627499103546143
    10. '(m' → logprob: -7.627499103546143

Token 491: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.015661723911762238
    2. '(' → logprob: -4.515661716461182
    3. '(l' → logprob: -5.390661716461182
    4. ' (' → logprob: -11.01566219329834
    5. '(r' → logprob: -11.51566219329834
    6. '(s' → logprob: -12.51566219329834
    7. '(m' → logprob: -12.51566219329834
    8. ')' → logprob: -13.01566219329834
    9. '(
' → logprob: -13.14066219329834
    10. 'l' → logprob: -13.26566219329834

Token 492: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.611323624383658e-05
    2. '(' → logprob: -10.000065803527832
    3. ' (' → logprob: -11.125065803527832
    4. '(
' → logprob: -13.500065803527832
    5. ')' → logprob: -13.750065803527832
    6. '[i' → logprob: -13.875065803527832
    7. '```' → logprob: -14.250065803527832
    8. 'i' → logprob: -14.375065803527832
    9. ',i' → logprob: -14.625065803527832
    10. ')(' → logprob: -14.750065803527832

Token 493: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.159660890465602e-05
    2. ' i' → logprob: -9.62507152557373
    3. '   ' → logprob: -13.37507152557373
    4. ')' → logprob: -13.50007152557373
    5. '(i' → logprob: -13.50007152557373
    6. '
' → logprob: -14.75007152557373
    7. '```' → logprob: -15.25007152557373
    8. ' ' → logprob: -15.75007152557373
    9. ')i' → logprob: -16.000072479248047
    10. '	i' → logprob: -16.875072479248047

Token 494: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.902282178401947
    2. '(l' → logprob: -0.902282178401947
    3. '),' → logprob: -2.027282238006592
    4. '(i' → logprob: -3.402282238006592
    5. ',l' → logprob: -4.527282238006592
    6. '(' → logprob: -4.902282238006592
    7. '(r' → logprob: -6.902282238006592
    8. ' ,' → logprob: -6.902282238006592
    9. '   ' → logprob: -7.152282238006592
    10. ')' → logprob: -7.152282238006592

Token 495: ' Y' (ID: 865)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010565068805590272
    2. 'Y' → logprob: -7.251056671142578
    3. 'a' → logprob: -8.876056671142578
    4. ' ' → logprob: -9.001056671142578
    5. '(' → logprob: -10.751056671142578
    6. 'l' → logprob: -10.876056671142578
    7. 'ma' → logprob: -11.126056671142578
    8. '   ' → logprob: -11.751056671142578
    9. 'f' → logprob: -12.501056671142578
    10. ' Y' → logprob: -12.626056671142578

Token 496: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1517960956552997e-05
    2. 'i' → logprob: -12.250011444091797
    3. '[' → logprob: -13.000011444091797
    4. '[l' → logprob: -13.000011444091797
    5. '(i' → logprob: -14.875011444091797
    6. '[f' → logprob: -15.250011444091797
    7. '```' → logprob: -15.375011444091797
    8. '
' → logprob: -15.875011444091797
    9. ')' → logprob: -15.875011444091797
    10. ' [' → logprob: -16.000011444091797

Token 497: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.314625690924004e-05
    2. '[l' → logprob: -10.125073432922363
    3. '[r' → logprob: -11.625073432922363
    4. ')[' → logprob: -11.750073432922363
    5. '[' → logprob: -12.250073432922363
    6. 'i' → logprob: -12.500073432922363
    7. '][' → logprob: -13.000073432922363
    8. '   ' → logprob: -13.750073432922363
    9. '[m' → logprob: -14.375073432922363
    10. ' [' → logprob: -14.500073432922363

Token 498: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001650898833759129
    2. '1' → logprob: -7.251650810241699
    3. '0' → logprob: -7.626650810241699
    4. '[i' → logprob: -8.0016508102417
    5. ' i' → logprob: -10.2516508102417
    6. 'l' → logprob: -10.5016508102417
    7. '(i' → logprob: -10.6266508102417
    8. '
' → logprob: -11.7516508102417
    9. '	i' → logprob: -12.3766508102417
    10. '][' → logprob: -12.3766508102417

Token 499: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007110013975761831
    2. '))' → logprob: -7.375710964202881
    3. ' )' → logprob: -9.875711441040039
    4. '),' → logprob: -11.625711441040039
    5. ')))' → logprob: -12.375711441040039
    6. ',' → logprob: -12.500711441040039
    7. ')
' → logprob: -12.625711441040039
    8. '   ' → logprob: -12.875711441040039
    9. '())' → logprob: -13.250711441040039
    10. '-' → logprob: -13.250711441040039

Token 500: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: ' b' (ID: 287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1089489459991455
    2. ' if' → logprob: -1.6089489459991455
    3. '<|end|>' → logprob: -1.7339489459991455
    4. '   ' → logprob: -2.1089489459991455
    5. 'if' → logprob: -2.8589489459991455
    6. '/' → logprob: -3.3589489459991455
    7. ':' → logprob: -3.6089489459991455
    8. 'ma' → logprob: -4.608948707580566
    9. ' ' → logprob: -5.108948707580566
    10. 'a' → logprob: -5.108948707580566

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38723644614219666
    2. '=' → logprob: -1.137236475944519
    3. ',' → logprob: -9.012236595153809
    4. ' *=' → logprob: -9.387236595153809
    5. ' +=' → logprob: -9.762236595153809
    6. '*=' → logprob: -10.137236595153809
    7. ' ' → logprob: -11.512236595153809
    8. '+=' → logprob: -11.637236595153809
    9. ')' → logprob: -11.762236595153809
    10. '*' → logprob: -11.887236595153809

Token 503: ' N' (ID: 478)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05455046519637108
    2. 'Y' → logprob: -3.6795504093170166
    3. 'N' → logprob: -4.179550647735596
    4. 'ma' → logprob: -5.304550647735596
    5. 'a' → logprob: -5.804550647735596
    6. 'min' → logprob: -6.679550647735596
    7. ' l' → logprob: -6.929550647735596
    8. '(l' → logprob: -7.804550647735596
    9. 'YY' → logprob: -8.054550170898438
    10. 'S' → logprob: -8.179550170898438

Token 504: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7367682456970215
    2. ' *' → logprob: -0.7367682456970215
    3. '<|end|>' → logprob: -3.3617682456970215
    4. '*a' → logprob: -5.6117682456970215
    5. '*r' → logprob: -6.4867682456970215
    6. '*l' → logprob: -7.3617682456970215
    7. '*N' → logprob: -7.3617682456970215
    8. '*(' → logprob: -7.6117682456970215
    9. 'a' → logprob: -7.9867682456970215
    10. '<|end|>' → logprob: -8.86176872253418

Token 505: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.008834847249090672
    2. ' Y' → logprob: -5.1338348388671875
    3. 'l' → logprob: -6.8838348388671875
    4. '(Y' → logprob: -7.1338348388671875
    5. 'a' → logprob: -7.5088348388671875
    6. 'N' → logprob: -9.133834838867188
    7. '(' → logprob: -9.758834838867188
    8. ' (' → logprob: -9.883834838867188
    9. 'min' → logprob: -10.008834838867188
    10. '(a' → logprob: -10.383834838867188

Token 506: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.011373155459296e-05
    2. '[' → logprob: -11.250030517578125
    3. '[l' → logprob: -12.375030517578125
    4. '```' → logprob: -12.375030517578125
    5. ' [' → logprob: -13.000030517578125
    6. '[I' → logprob: -13.250030517578125
    7. '[j' → logprob: -14.375030517578125
    8. '[r' → logprob: -14.625030517578125
    9. '   ' → logprob: -14.625030517578125
    10. '`' → logprob: -14.875030517578125

Token 507: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.030248049646615982
    2. '][' → logprob: -3.5302481651306152
    3. '[' → logprob: -8.405247688293457
    4. '   ' → logprob: -8.655247688293457
    5. ']' → logprob: -10.530247688293457
    6. ')[' → logprob: -11.030247688293457
    7. ' [' → logprob: -11.280247688293457
    8. '```' → logprob: -11.530247688293457
    9. ' ][' → logprob: -12.030247688293457
    10. '}[' → logprob: -12.655247688293457

Token 508: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007129139266908169
    2. '1' → logprob: -5.007129192352295
    3. ' ' → logprob: -8.882128715515137
    4. '[' → logprob: -9.257128715515137
    5. 'i' → logprob: -9.632128715515137
    6. '[i' → logprob: -10.132128715515137
    7. '][' → logprob: -10.757128715515137
    8. '(i' → logprob: -11.007128715515137
    9. '   ' → logprob: -11.382128715515137
    10. '(' → logprob: -11.507128715515137

Token 509: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07302434742450714
    2. '<|end|>' → logprob: -2.698024272918701
    3. '   ' → logprob: -6.698024272918701
    4. ']' → logprob: -6.823024272918701
    5. '<|end|>' → logprob: -8.07302474975586
    6. '}' → logprob: -8.69802474975586
    7. '```' → logprob: -9.57302474975586
    8. '*' → logprob: -10.19802474975586
    9. '')' → logprob: -10.44802474975586
    10. ' ' → logprob: -10.82302474975586

Token 510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4719352722167969
    2. '<|end|>' → logprob: -1.2219352722167969
    3. '/' → logprob: -2.971935272216797
    4. ')' → logprob: -4.971935272216797
    5. ' if' → logprob: -6.096935272216797
    6. ' /' → logprob: -6.096935272216797
    7. '+' → logprob: -6.346935272216797
    8. 'if' → logprob: -6.346935272216797
    9. 'ma' → logprob: -6.596935272216797
    10. '
' → logprob: -6.721935272216797

Token 511: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14738479256629944
    2. ' if' → logprob: -3.3973848819732666
    3. 'if' (adapté à ' if') → logprob: -3.5223848819732666
    4. ')' → logprob: -3.7723848819732666
    5. '<|end|>' → logprob: -3.7723848819732666
    6. '/' → logprob: -4.1473846435546875
    7. ' /' → logprob: -5.5223846435546875
    8. '       ' → logprob: -6.6473846435546875
    9. '+' → logprob: -6.8973846435546875
    10. 'a' → logprob: -7.2723846435546875

Token 512: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09247653931379318
    2. ' a' → logprob: -2.4674766063690186
    3. 'ma' → logprob: -5.9674763679504395
    4. ' ma' → logprob: -7.0924763679504395
    5. '   ' → logprob: -9.217476844787598
    6. ' ' → logprob: -10.342476844787598
    7. '  ' → logprob: -13.717476844787598
    8. '	a' → logprob: -13.717476844787598
    9. '(a' → logprob: -13.842476844787598
    10. '(ma' → logprob: -13.967476844787598

Token 513: ' *' (ID: 425)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3327291011810303
    2. '>' → logprob: -1.4577291011810303
    3. ' *' → logprob: -3.3327291011810303
    4. '*' → logprob: -4.332729339599609
    5. '   ' → logprob: -7.707729339599609
    6. ' ' → logprob: -8.33272933959961
    7. '>b' → logprob: -9.08272933959961
    8. '  ' → logprob: -9.20772933959961
    9. '>a' → logprob: -9.70772933959961
    10. '*>' → logprob: -9.70772933959961

Token 514: ' ma' (ID: 831)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.0011709370883181691
    2. ' ma' → logprob: -6.751171112060547
    3. ' ' → logprob: -15.001171112060547
    4. '```' → logprob: -15.751171112060547
    5. '   ' → logprob: -16.251171112060547
    6. '(ma' → logprob: -16.626171112060547
    7. 'b' → logprob: -17.251171112060547
    8. '>' → logprob: -17.376171112060547
    9. '  ' → logprob: -18.251171112060547
    10. '_ma' → logprob: -18.376171112060547

Token 515: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -15.375000953674316
    3. '_' → logprob: -15.750000953674316
    4. '1' → logprob: -16.500001907348633
    5. '
' → logprob: -16.562501907348633
    6. ' ' → logprob: -16.687501907348633
    7. '₂' → logprob: -17.000001907348633
    8. '[' → logprob: -17.312501907348633
    9. 'b' → logprob: -17.312501907348633
    10. 'a' → logprob: -17.375001907348633

Token 516: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.061980459839105606
    2. ' >' → logprob: -2.8119804859161377
    3. '>=' → logprob: -12.811980247497559
    4. '&gt' → logprob: -12.936980247497559
    5. '>b' → logprob: -13.436980247497559
    6. '">' → logprob: -13.561980247497559
    7. ' ' → logprob: -13.936980247497559
    8. '＞' → logprob: -14.561980247497559
    9. ''>' → logprob: -14.936980247497559
    10. '   ' → logprob: -15.061980247497559

Token 517: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06378452479839325
    2. 'ma' → logprob: -2.813784599304199
    3. ' ma' → logprob: -6.563784599304199
    4. ' b' → logprob: -7.813784599304199
    5. '   ' → logprob: -14.5637845993042
    6. '(ma' → logprob: -16.188783645629883
    7. '  ' → logprob: -17.688783645629883
    8. 'm' → logprob: -17.813783645629883
    9. ' ' → logprob: -18.188783645629883
    10. '    ' → logprob: -18.188783645629883

Token 518: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.022962763905525208
    2. 'ma' → logprob: -4.52296257019043
    3. ' *' → logprob: -4.77296257019043
    4. ' ma' → logprob: -5.77296257019043
    5. '_ma' → logprob: -9.14796257019043
    6. ' ' → logprob: -9.27296257019043
    7. '   ' → logprob: -10.77296257019043
    8. '  ' → logprob: -10.89796257019043
    9. '<|end|>' → logprob: -11.39796257019043
    10. '(ma' → logprob: -11.52296257019043

Token 519: ' ma' (ID: 831)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -1.306760805164231e-05
    2. ' ma' → logprob: -11.25001335144043
    3. '(ma' → logprob: -19.25001335144043
    4. '_ma' → logprob: -20.37501335144043
    5. '
' → logprob: -21.50001335144043
    6. 'a' → logprob: -23.00001335144043
    7. 'me' → logprob: -23.12501335144043
    8. 'ма' → logprob: -23.12501335144043
    9. 'mi' → logprob: -23.25001335144043
    10. '=' → logprob: -23.50001335144043

Token 520: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. 'ma' → logprob: -17.625
    4. '```' → logprob: -18.5
    5. '   ' → logprob: -19.125
    6. '{' → logprob: -19.25
    7. '_' → logprob: -19.625
    8. '
' → logprob: -20.5625
    9. '  ' → logprob: -20.6875
    10. '`' → logprob: -20.8125

Token 521: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03432771936058998
    2. ':
' → logprob: -3.409327745437622
    3. '=' → logprob: -7.659327507019043
    4. 'a' → logprob: -9.534327507019043
    5. ' :' → logprob: -10.159327507019043
    6. '   ' → logprob: -10.284327507019043
    7. '):
' → logprob: -11.159327507019043
    8. ' :
' → logprob: -11.659327507019043
    9. '):' → logprob: -11.909327507019043
    10. '       ' → logprob: -12.409327507019043

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3903990685939789
    2. '   ' → logprob: -1.1403990983963013
    3. 'ma' → logprob: -6.015398979187012
    4. ' ma' → logprob: -6.890398979187012
    5. 'a' → logprob: -9.890398979187012
    6. '(ma' → logprob: -12.265398979187012
    7. '   ' → logprob: -13.515398979187012
    8. '
' → logprob: -13.890398979187012
    9. ' a' → logprob: -14.015398979187012
    10. '           ' → logprob: -14.140398979187012

Token 523: ' ma' (ID: 831)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' (adapté à ' ma') → logprob: -0.0017457427456974983
    2. '       ' → logprob: -7.251745700836182
    3. ' ma' → logprob: -7.626745700836182
    4. '   ' → logprob: -7.626745700836182
    5. 'a' → logprob: -9.75174617767334
    6. '_ma' → logprob: -14.00174617767334
    7. '           ' → logprob: -14.12674617767334
    8. '(ma' → logprob: -14.62674617767334
    9. ' ' → logprob: -15.75174617767334
    10. '  ' → logprob: -16.001745223999023

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_' → logprob: -17.625
    3. 'a' → logprob: -18.0
    4. '   ' → logprob: -18.0
    5. '=' → logprob: -18.8125
    6. '' → logprob: -18.875
    7. ' ' → logprob: -19.0
    8. '১' → logprob: -19.1875
    9. '१' → logprob: -19.25
    10. '１' → logprob: -19.25

Token 525: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07893749326467514
    2. ' =' → logprob: -2.578937530517578
    3. ',' → logprob: -9.953937530517578
    4. '＝' → logprob: -17.203937530517578
    5. '   ' → logprob: -17.453937530517578
    6. '<|end|>' → logprob: -17.578937530517578
    7. '    ' → logprob: -17.828937530517578
    8. ' ' → logprob: -17.953937530517578
    9. ' ,' → logprob: -18.078937530517578
    10. '.=' → logprob: -18.203937530517578

Token 526: ' ma' (ID: 831)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.010799139738082886
    2. ' ma' → logprob: -4.760798931121826
    3. 'a' → logprob: -6.135798931121826
    4. ' a' → logprob: -11.260799407958984
    5. 'b' → logprob: -12.260799407958984
    6. '   ' → logprob: -15.510799407958984
    7. '=' → logprob: -16.010799407958984
    8. ' =' → logprob: -16.260799407958984
    9. ' ' → logprob: -16.385799407958984
    10. '_ma' → logprob: -16.760799407958984

Token 527: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -15.500000953674316
    4. '_' → logprob: -16.375001907348633
    5. 'b' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '=' → logprob: -17.125001907348633
    8. '
' → logprob: -17.625001907348633
    9. '₂' → logprob: -18.250001907348633
    10. '1' → logprob: -18.250001907348633

Token 528: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197194382548332
    2. ' =' → logprob: -2.81197190284729
    3. ',' → logprob: -12.436971664428711
    4. '=a' → logprob: -16.31197166442871
    5. '=
' → logprob: -16.31197166442871
    6. '＝' → logprob: -16.43697166442871
    7. '   ' → logprob: -16.56197166442871
    8. '<|end|>' → logprob: -17.43697166442871
    9. '    ' → logprob: -17.56197166442871
    10. ' ' → logprob: -18.31197166442871

Token 529: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002613358374219388
    2. ' a' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.125261306762695
    4. '	a' → logprob: -17.500261306762695
    5. '(a' → logprob: -19.125261306762695
    6. ' ' → logprob: -20.750261306762695
    7. '
' → logprob: -21.250261306762695
    8. '_a' → logprob: -21.375261306762695
    9. '  ' → logprob: -21.750261306762695
    10. '    ' → logprob: -22.125261306762695

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007202170789241791
    2. ' ,' → logprob: -5.5072021484375
    3. ',b' → logprob: -6.0072021484375
    4. ' b' → logprob: -8.0072021484375
    5. ',
' → logprob: -8.8822021484375
    6. ',r' → logprob: -9.6322021484375
    7. 'b' → logprob: -9.6322021484375
    8. '<|end|>' → logprob: -10.8822021484375
    9. ',l' → logprob: -11.6322021484375
    10. ' ' → logprob: -11.8822021484375

Token 531: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. ' ' → logprob: -17.500553131103516
    4. '   ' → logprob: -18.125553131103516
    5. '	b' → logprob: -20.000553131103516
    6. ' ' → logprob: -20.250553131103516
    7. '  ' → logprob: -20.750553131103516
    8. '    ' → logprob: -21.250553131103516
    9. '```' → logprob: -21.500553131103516
    10. '       ' → logprob: -21.750553131103516

Token 532: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 533: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0070436866953969
    2. '<|end|>' → logprob: -5.507043838500977
    3. 'ma' → logprob: -6.757043838500977
    4. 'return' → logprob: -7.132043838500977
    5. 'result' → logprob: -8.132043838500977
    6. '#' → logprob: -8.132043838500977
    7. '```' → logprob: -8.132043838500977
    8. ')' → logprob: -10.757043838500977
    9. 'a' → logprob: -11.257043838500977
    10. 'ratio' → logprob: -11.382043838500977

Token 534: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. ' print' → logprob: -15.125000953674316
    3. 'ma' → logprob: -15.250000953674316
    4. '```' → logprob: -15.375000953674316
    5. 'import' → logprob: -15.750000953674316
    6. 'pr' → logprob: -17.000001907348633
    7. 'result' → logprob: -17.375001907348633
    8. 'from' → logprob: -18.125001907348633
    9. '
' → logprob: -18.625001907348633
    10. '#' → logprob: -18.750001907348633

Token 535: ' simpl' (ID: 15693)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002334568416699767
    2. ' print' → logprob: -8.62523365020752
    3. '#' → logprob: -11.25023365020752
    4. 'pr' → logprob: -11.37523365020752
    5. 'import' → logprob: -11.50023365020752
    6. '
' → logprob: -11.87523365020752
    7. 'for' → logprob: -13.12523365020752
    8. '```' → logprob: -13.12523365020752
    9. 'output' → logprob: -13.37523365020752
    10. 'prin' → logprob: -14.62523365020752

Token 536: 'ifie' (ID: 46409)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00034833617974072695
    2. ' print' → logprob: -9.500348091125488
    3. 'for' → logprob: -9.750348091125488
    4. '#' → logprob: -9.875348091125488
    5. '```' → logprob: -10.125348091125488
    6. 'import' → logprob: -11.000348091125488
    7. 'p' → logprob: -11.125348091125488
    8. '
' → logprob: -11.125348091125488
    9. 'if' → logprob: -11.625348091125488
    10. 'pr' → logprob: -12.000348091125488

Token 537: ' la' (ID: 557)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.48628783226013184
    2. 'from' → logprob: -1.7362878322601318
    3. 'd' → logprob: -1.8612878322601318
    4. 'def' → logprob: -2.986287832260132
    5. ' from' → logprob: -6.861288070678711
    6. 'import' → logprob: -6.986288070678711
    7. '_g' → logprob: -8.861288070678711
    8. '
' → logprob: -8.986288070678711
    9. '```' → logprob: -8.986288070678711
    10. 'print' → logprob: -9.111288070678711

Token 538: ' fraction' (ID: 33763)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13378581404685974
    2. 'g' → logprob: -2.5087857246398926
    3. 'while' → logprob: -3.8837857246398926
    4. 'def' → logprob: -4.383785724639893
    5. ' from' → logprob: -5.133785724639893
    6. 'import' → logprob: -6.133785724639893
    7. 'ma' → logprob: -6.633785724639893
    8. '#' → logprob: -7.633785724639893
    9. 'print' → logprob: -7.758785724639893
    10. 'd' → logprob: -8.63378620147705

Token 539: ' (' (ID: 350)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.28888222575187683
    2. 'd' → logprob: -1.6638822555541992
    3. 'from' → logprob: -3.163882255554199
    4. 'def' → logprob: -4.163882255554199
    5. 'import' → logprob: -6.288882255554199
    6. 'print' → logprob: -7.788882255554199
    7. 'p' → logprob: -8.1638822555542
    8. ' from' → logprob: -8.4138822555542
    9. '_g' → logprob: -8.7888822555542
    10. '```' → logprob: -9.1638822555542

Token 540: 'si' (ID: 4778)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1085394024848938
    2. 'print' → logprob: -3.608539342880249
    3. 'p' → logprob: -3.858539342880249
    4. 'd' → logprob: -3.858539342880249
    5. 'ma' → logprob: -4.483539581298828
    6. '
' → logprob: -4.608539581298828
    7. '   ' → logprob: -6.108539581298828
    8. ' gcd' → logprob: -6.358539581298828
    9. 'div' → logprob: -6.483539581298828
    10. 'q' → logprob: -6.608539581298828

Token 541: ' jamais' (ID: 23077)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.08020838350057602
    2. ' ma' → logprob: -2.5802083015441895
    3. '   ' → logprob: -7.3302083015441895
    4. '(ma' → logprob: -7.5802083015441895
    5. ' ' → logprob: -9.580208778381348
    6. '  ' → logprob: -10.830208778381348
    7. ' not' → logprob: -11.580208778381348
    8. 'not' → logprob: -12.080208778381348
    9. ' True' → logprob: -12.205208778381348
    10. 'a' → logprob: -12.330208778381348

Token 542: ' ils' (ID: 15387)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3868493437767029
    2. 'ma' → logprob: -1.2618494033813477
    3. 'print' → logprob: -4.511849403381348
    4. '   ' → logprob: -4.761849403381348
    5. '
' → logprob: -5.261849403381348
    6. ' ma' → logprob: -5.636849403381348
    7. ' gcd' → logprob: -5.761849403381348
    8. 'if' → logprob: -6.761849403381348
    9. '(ma' → logprob: -7.261849403381348
    10. 'd' → logprob: -7.261849403381348

Token 543: ' avaient' (ID: 60460)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7968572378158569
    2. '!=' → logprob: -0.7968572378158569
    3. ':' → logprob: -2.4218573570251465
    4. '!' → logprob: -5.6718573570251465
    5. '/' → logprob: -6.6718573570251465
    6. '>' → logprob: -7.0468573570251465
    7. ':
' → logprob: -7.2968573570251465
    8. '==' → logprob: -7.7968573570251465
    9. ',' → logprob: -7.7968573570251465
    10. ' ==' → logprob: -7.9218573570251465

Token 544: ' un' (ID: 537)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.09180423617362976
    2. ' ma' → logprob: -2.466804265975952
    3. '   ' → logprob: -6.716804027557373
    4. '(ma' → logprob: -7.591804027557373
    5. ' ' → logprob: -8.341804504394531
    6. 'a' → logprob: -8.716804504394531
    7. ' la' → logprob: -9.341804504394531
    8. ' !=' → logprob: -9.841804504394531
    9. 'la' → logprob: -9.841804504394531
    10. ' a' → logprob: -9.966804504394531

Token 545: ' pg' (ID: 32259)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1740366369485855
    2. ')' → logprob: -2.299036741256714
    3. 'common' → logprob: -3.174036741256714
    4. '/' → logprob: -5.424036502838135
    5. '```' → logprob: -6.049036502838135
    6. 'd' → logprob: -6.299036502838135
    7. 'div' → logprob: -6.799036502838135
    8. '=' → logprob: -6.799036502838135
    9. ' gcd' → logprob: -6.924036502838135
    10. 'ma' → logprob: -7.174036502838135

Token 546: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0011752246646210551
    2. 'c' → logprob: -6.751175403594971
    3. 'g' → logprob: -12.751174926757812
    4. '```' → logprob: -14.126174926757812
    5. 'cf' → logprob: -14.751174926757812
    6. 'dc' → logprob: -15.001174926757812
    7. 'd' → logprob: -16.126174926757812
    8. 'ct' → logprob: -16.501174926757812
    9. 'cdn' → logprob: -16.501174926757812
    10. 'a' → logprob: -16.501174926757812

Token 547: '),' (ID: 936)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06798047572374344
    2. ')' → logprob: -3.4429805278778076
    3. 'g' → logprob: -4.3179802894592285
    4. '   ' → logprob: -4.5679802894592285
    5. '
' → logprob: -5.3179802894592285
    6. ',' → logprob: -6.5679802894592285
    7. '):
' → logprob: -6.9429802894592285
    8. 'ma' → logprob: -7.1929802894592285
    9. '    
' → logprob: -8.317980766296387
    10. ':
' → logprob: -8.567980766296387

Token 548: ' normal' (ID: 6078)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.41573822498321533
    2. 'd' → logprob: -1.6657382249832153
    3. 'p' → logprob: -2.540738105773926
    4. 'pg' → logprob: -3.415738105773926
    5. 'print' → logprob: -3.540738105773926
    6. 'ma' → logprob: -6.415738105773926
    7. ' g' → logprob: -6.415738105773926
    8. ' d' → logprob: -6.540738105773926
    9. 'x' → logprob: -6.665738105773926
    10. '   ' → logprob: -7.040738105773926

Token 549: ' ici' (ID: 27994)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2763754725456238
    2. 'd' → logprob: -2.1513755321502686
    3. 'pg' → logprob: -2.7763755321502686
    4. 'p' → logprob: -2.9013755321502686
    5. 'x' → logprob: -5.7763752937316895
    6. 'ma' → logprob: -6.1513752937316895
    7. '   ' → logprob: -8.026375770568848
    8. 'a' → logprob: -8.151375770568848
    9. ' g' → logprob: -8.401375770568848
    10. 'm' → logprob: -8.776375770568848

Token 550: '
' (ID: 198)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.08319289982318878
    2. 'd' → logprob: -3.333192825317383
    3. 'pg' → logprob: -3.708192825317383
    4. 'p' → logprob: -4.083192825317383
    5. 'print' → logprob: -6.708192825317383
    6. 'x' → logprob: -7.958192825317383
    7. '_g' → logprob: -8.083192825317383
    8. '_pg' → logprob: -8.458192825317383
    9. 'from' → logprob: -8.833192825317383
    10. '```' → logprob: -9.208192825317383

Token 551: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.21095550060272217
    2. 'pg' → logprob: -1.8359555006027222
    3. 'print' → logprob: -3.7109556198120117
    4. 'd' → logprob: -5.835955619812012
    5. 'p' → logprob: -6.710955619812012
    6. 'from' → logprob: -6.835955619812012
    7. '```' → logprob: -7.835955619812012
    8. 'import' → logprob: -8.710955619812012
    9. '_pg' → logprob: -9.335955619812012
    10. ' pg' → logprob: -9.460955619812012

Token 552: ' =' (ID: 314)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0003924231859855354
    2. 'g' → logprob: -8.250391960144043
    3. 'ma' → logprob: -9.250391960144043
    4. 'c' → logprob: -11.250391960144043
    5. 'def' → logprob: -12.250391960144043
    6. 'a' → logprob: -12.250391960144043
    7. '=g' → logprob: -12.375391960144043
    8. '_cd' → logprob: -13.375391960144043
    9. 'cdn' → logprob: -13.625391960144043
    10. '=' → logprob: -13.625391960144043

Token 553: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0010329303331673145
    2. ' gcd' → logprob: -6.876032829284668
    3. '   ' → logprob: -17.001033782958984
    4. 'gcc' → logprob: -17.126033782958984
    5. '	g' → logprob: -17.251033782958984
    6. '_g' → logprob: -17.501033782958984
    7. 'gc' → logprob: -18.376033782958984
    8. '```' → logprob: -18.626033782958984
    9. ' g' → logprob: -19.126033782958984
    10. '(g' → logprob: -19.376033782958984

Token 554: '(ma' (ID: 166786)
  Prédit: '(ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ma' → logprob: -9.088346359931165e-07
    2. 'ma' → logprob: -14.000000953674316
    3. '(' → logprob: -18.375
    4. ' ma' → logprob: -20.25
    5. '_ma' → logprob: -20.25
    6. '(m' → logprob: -21.125
    7. '(mi' → logprob: -21.375
    8. '(a' → logprob: -21.5
    9. '(
' → logprob: -21.75
    10. '.ma' → logprob: -22.25

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00081963452976197
    2. '(ma' → logprob: -7.125819683074951
    3. ' ma' → logprob: -11.750819206237793
    4. 'ma' → logprob: -11.875819206237793
    5. '(' → logprob: -15.625819206237793
    6. 'a' → logprob: -16.00082015991211
    7. '_ma' → logprob: -16.37582015991211
    8. ')' → logprob: -17.12582015991211
    9. ' ' → logprob: -18.00082015991211
    10. 'g' → logprob: -19.50082015991211

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003373694489710033
    2. ' ,' → logprob: -8.000337600708008
    3. 'ma' → logprob: -14.125337600708008
    4. ' ma' → logprob: -14.375337600708008
    5. ',
' → logprob: -14.875337600708008
    6. '(ma' → logprob: -15.750337600708008
    7. '_ma' → logprob: -17.000337600708008
    8. '   ' → logprob: -18.125337600708008
    9. '_,' → logprob: -18.125337600708008
    10. 'g' → logprob: -18.750337600708008

Token 557: ' ma' (ID: 831)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.0007100477814674377
    2. ' ma' → logprob: -7.2507100105285645
    3. '(ma' → logprob: -16.375709533691406
    4. ' ' → logprob: -18.125709533691406
    5. '_ma' → logprob: -18.125709533691406
    6. '   ' → logprob: -18.375709533691406
    7. '
' → logprob: -19.000709533691406
    8. 'ма' → logprob: -20.500709533691406
    9. '  ' → logprob: -20.500709533691406
    10. '­ma' → logprob: -20.500709533691406

Token 558: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. 'ma' → logprob: -12.75000286102295
    3. ' ma' → logprob: -15.00000286102295
    4. ',' → logprob: -17.375003814697266
    5. 'a' → logprob: -17.625003814697266
    6. '₂' → logprob: -18.375003814697266
    7. '(ma' → logprob: -18.500003814697266
    8. ' ' → logprob: -18.500003814697266
    9. '1' → logprob: -19.000003814697266
    10. '
' → logprob: -19.375003814697266

Token 559: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.061980683356523514
    2. ')' → logprob: -2.811980724334717
    3. ')
' → logprob: -11.436980247497559
    4. ')

' → logprob: -13.936980247497559
    5. ' )
' → logprob: -14.186980247497559
    6. 'g' → logprob: -14.436980247497559
    7. '   ' → logprob: -17.311981201171875
    8. ',' → logprob: -17.561981201171875
    9. '),' → logprob: -17.686981201171875
    10. ' )' → logprob: -17.811981201171875

Token 560: 'print' (ID: 1598)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.061981577426195145
    2. 'print' → logprob: -2.811981678009033
    3. ' ma' → logprob: -11.561981201171875
    4. 'a' → logprob: -12.936981201171875
    5. ' print' → logprob: -13.561981201171875
    6. '(ma' → logprob: -14.436981201171875
    7. '```' → logprob: -16.186981201171875
    8. '
' → logprob: -16.811981201171875
    9. '#' → logprob: -17.811981201171875
    10. '#print' → logprob: -18.811981201171875

Token 561: '(ma' (ID: 166786)
  Prédit: '(ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ma' → logprob: -0.0005538671393878758
    2. 'ma' → logprob: -7.500554084777832
    3. '(f' → logprob: -14.000554084777832
    4. ' ma' → logprob: -17.750553131103516
    5. '_ma' → logprob: -18.500553131103516
    6. '(' → logprob: -18.500553131103516
    7. '(m' → logprob: -19.375553131103516
    8. '(mi' → logprob: -20.125553131103516
    9. 'f' → logprob: -20.625553131103516
    10. '((' → logprob: -21.125553131103516

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_' → logprob: -17.875
    3. '```' → logprob: -19.375
    4. ')' → logprob: -20.0
    5. '１' → logprob: -21.125
    6. '
' → logprob: -21.25
    7. 'g' → logprob: -21.75
    8. '১' → logprob: -21.8125
    9. '१' → logprob: -21.875
    10. ' ' → logprob: -21.875

Token 563: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1841396689414978
    2. '//' → logprob: -1.8091397285461426
    3. ',' → logprob: -5.434139728546143
    4. ' ' → logprob: -11.809139251708984
    5. ' ,' → logprob: -12.309139251708984
    6. ')' → logprob: -13.059139251708984
    7. 'g' → logprob: -13.684139251708984
    8. ',//' → logprob: -13.809139251708984
    9. ' ' → logprob: -14.059139251708984
    10. '//
' → logprob: -14.184139251708984

Token 564: ' g' (ID: 329)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.002476604888215661
    2. 'g' → logprob: -6.002476692199707
    3. ' ma' → logprob: -13.877476692199707
    4. '(ma' → logprob: -18.00247573852539
    5. 'ga' → logprob: -18.75247573852539
    6. '   ' → logprob: -20.25247573852539
    7. 'ма' → logprob: -20.50247573852539
    8. ' g' → logprob: -20.62747573852539
    9. '  ' → logprob: -20.87747573852539
    10. '_ma' → logprob: -21.00247573852539

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010212593479081988
    2. ' ,' → logprob: -7.001021385192871
    3. '//' → logprob: -9.626021385192871
    4. ')' → logprob: -10.751021385192871
    5. ' //' → logprob: -10.876021385192871
    6. ' ' → logprob: -13.751021385192871
    7. ',end' → logprob: -14.001021385192871
    8. ',"' → logprob: -14.376021385192871
    9. ',//' → logprob: -15.251021385192871
    10. ',
' → logprob: -16.001020431518555

Token 566: ' ma' (ID: 831)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.0004309076175559312
    2. ' ma' → logprob: -7.750431060791016
    3. '(ma' → logprob: -15.500431060791016
    4. ' ' → logprob: -19.375431060791016
    5. '   ' → logprob: -20.125431060791016
    6. '_ma' → logprob: -20.875431060791016
    7. 'mo' → logprob: -21.875431060791016
    8. 'g' → logprob: -22.000431060791016
    9. ')' → logprob: -22.375431060791016
    10. '  ' → logprob: -22.625431060791016

Token 567: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'ma' → logprob: -17.625
    3. ' ' → logprob: -18.125
    4. '_' → logprob: -18.75
    5. '₂' → logprob: -19.75
    6. '   ' → logprob: -19.875
    7. ' ma' → logprob: -20.75
    8. '1' → logprob: -21.0
    9. '(ma' → logprob: -21.25
    10. '```' → logprob: -21.25

Token 568: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.026604831218719482
    2. ' //' → logprob: -4.276604652404785
    3. ')' → logprob: -4.401604652404785
    4. '```' → logprob: -9.901604652404785
    5. ')//' → logprob: -10.401604652404785
    6. '#' → logprob: -11.776604652404785
    7. '<|end|>' → logprob: -12.026604652404785
    8. '[' → logprob: -12.526604652404785
    9. ')
' → logprob: -12.776604652404785
    10. ']' → logprob: -14.151604652404785

Token 569: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -4.320199877838604e-07
    2. ' g' → logprob: -14.875
    3. 'ma' → logprob: -18.625
    4. '   ' → logprob: -20.875
    5. ' ' → logprob: -21.0
    6. '```' → logprob: -21.0
    7. '
' → logprob: -21.625
    8. '	g' → logprob: -22.0
    9. '_g' → logprob: -22.25
    10. ')' → logprob: -22.375

Token 570: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.625000953674316
    3. '),' → logprob: -16.0
    4. ')
' → logprob: -16.25
    5. '))' → logprob: -17.0
    6. '<|end|>' → logprob: -17.0
    7. '```' → logprob: -17.375
    8. ')}' → logprob: -17.375
    9. '}' → logprob: -17.75
    10. ')`' → logprob: -18.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 568
Tokens correctement prédits (1ère position, stricte): 157
Tokens correctement prédits (1ère position, avec adaptation): 175
Tokens correctement prédits (top 10): 339
Précision stricte (1ère position): 27.64%
Précision adaptée (1ère position): 30.81%
Précision (top 10): 59.68%
================================================================================
