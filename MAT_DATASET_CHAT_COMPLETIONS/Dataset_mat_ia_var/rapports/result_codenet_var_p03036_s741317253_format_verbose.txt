================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
initial_amount, deduction_amount, initial_value = map(int, input().split())

for iteration_number in range(1, 11):
    initial_value = initial_amount * initial_value - deduction_amount
    print(initial_value)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'initial' (ID: 17493)
  → Token d'amorce (pas de prédiction)

Token 1: '_amount' (ID: 29145)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' deduction' (ID: 106545)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7047393918037415
    2. ' ' → logprob: -1.2047393321990967
    3. '=' → logprob: -2.9547393321990967
    4. ',' → logprob: -3.2047393321990967
    5. ')' → logprob: -3.5797393321990967
    6. ' ,' → logprob: -4.204739570617676
    7. '```' → logprob: -4.204739570617676
    8. '_discount' → logprob: -4.579739570617676
    9. '_space' → logprob: -4.829739570617676
    10. ' =' → logprob: -4.954739570617676

Token 4: '_amount' (ID: 29145)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36369332671165466
    2. '_' → logprob: -1.488693356513977
    3. ' =' → logprob: -3.3636932373046875
    4. '*' → logprob: -3.4886932373046875
    5. '```' → logprob: -4.9886932373046875
    6. '+' → logprob: -6.1136932373046875
    7. '-' → logprob: -6.1136932373046875
    8. ',' → logprob: -7.4886932373046875
    9. '**' → logprob: -7.4886932373046875
    10. ')' → logprob: -7.4886932373046875

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03170844167470932
    2. ' =' → logprob: -4.156708240509033
    3. '_' → logprob: -4.406708240509033
    4. '```' → logprob: -6.281708240509033
    5. '*' → logprob: -7.406708240509033
    6. '-' → logprob: -8.156708717346191
    7. ',' → logprob: -8.406708717346191
    8. '+' → logprob: -8.531708717346191
    9. '.' → logprob: -9.781708717346191
    10. ')' → logprob: -10.281708717346191

Token 6: ' initial' (ID: 4871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3142893612384796
    2. ',' → logprob: -1.4392893314361572
    3. ' =' → logprob: -3.6892893314361572
    4. ')' → logprob: -5.939289569854736
    5. '_' → logprob: -6.314289569854736
    6. 'remaining' → logprob: -7.814289569854736
    7. ' ' → logprob: -7.939289569854736
    8. '```' → logprob: -7.939289569854736
    9. '_total' → logprob: -8.189289093017578
    10. '_remaining' → logprob: -8.189289093017578

Token 7: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001777042169123888
    2. '=' → logprob: -7.001777172088623
    3. ' =' → logprob: -7.876777172088623
    4. '```' → logprob: -8.626776695251465
    5. '_=' → logprob: -9.251776695251465
    6. '_amount' → logprob: -9.501776695251465
    7. ' _' → logprob: -9.876776695251465
    8. '.' → logprob: -10.501776695251465
    9. '_space' → logprob: -11.751776695251465
    10. ')' → logprob: -11.876776695251465

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.115090012550354
    2. '_' → logprob: -2.8650898933410645
    3. ' =' → logprob: -2.9900898933410645
    4. '*' → logprob: -7.7400898933410645
    5. '```' → logprob: -7.7400898933410645
    6. '-' → logprob: -8.365090370178223
    7. ',' → logprob: -9.240090370178223
    8. '+' → logprob: -9.490090370178223
    9. ' ' → logprob: -10.115090370178223
    10. '_=' → logprob: -10.240090370178223

Token 9: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24527761340141296
    2. '0' → logprob: -1.6202776432037354
    3. ' initial' → logprob: -4.495277404785156
    4. 'initial' → logprob: -5.370277404785156
    5. ' [' → logprob: -6.495277404785156
    6. '100' → logprob: -6.995277404785156
    7. ' []' → logprob: -7.620277404785156
    8. '[]' → logprob: -8.745277404785156
    9. '[' → logprob: -9.120277404785156
    10. '1' → logprob: -9.120277404785156

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0845322608947754
    2. '<|end|>' → logprob: -1.0845322608947754
    3. '```' → logprob: -1.5845322608947754
    4. '(lambda' → logprob: -2.5845322608947754
    5. '<|end|>' → logprob: -4.084532260894775
    6. 'user' → logprob: -5.584532260894775
    7. '[' → logprob: -6.084532260894775
    8. '(int' → logprob: -6.459532260894775
    9. '(token' → logprob: -6.459532260894775
    10. '[int' → logprob: -6.584532260894775

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7709037065505981
    2. ')' → logprob: -1.3959037065505981
    3. '(input' → logprob: -1.7709037065505981
    4. '(user' → logprob: -2.8959035873413086
    5. '<|end|>' → logprob: -3.1459035873413086
    6. '('' → logprob: -4.520903587341309
    7. '<|end|>' → logprob: -6.770903587341309
    8. '(token' → logprob: -7.020903587341309
    9. '```' → logprob: -7.270903587341309
    10. '(data' → logprob: -7.395903587341309

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10027556121349335
    2. ' input' → logprob: -2.3502755165100098
    3. '(input' → logprob: -9.725275993347168
    4. ')' → logprob: -12.100275993347168
    5. ',input' → logprob: -13.850275993347168
    6. '<input' → logprob: -14.225275993347168
    7. '[input' → logprob: -14.475275993347168
    8. '=input' → logprob: -14.850275993347168
    9. '```' → logprob: -15.225275993347168
    10. 'list' → logprob: -15.975275993347168

Token 13: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.904938280582428
    2. ')' → logprob: -1.2799382209777832
    3. '()' → logprob: -2.154938220977783
    4. '())' → logprob: -2.279938220977783
    5. '```' → logprob: -3.779938220977783
    6. '().' → logprob: -4.654938220977783
    7. '('' → logprob: -4.654938220977783
    8. '(token' → logprob: -4.904938220977783
    9. 'token' → logprob: -5.279938220977783
    10. '.readline' → logprob: -5.404938220977783

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2723104848410003e-05
    2. 'strip' → logprob: -11.125022888183594
    3. 'rstrip' → logprob: -12.000022888183594
    4. 'spl' → logprob: -14.125022888183594
    5. ' split' → logprob: -14.250022888183594
    6. '(split' → logprob: -15.000022888183594
    7. 'startswith' → logprob: -16.250022888183594
    8. '```' → logprob: -17.500022888183594
    9. 'replace' → logprob: -17.625022888183594
    10. 'read' → logprob: -18.250022888183594

Token 15: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.720814049243927
    2. '())' → logprob: -0.970814049243927
    3. '(' → logprob: -2.2208139896392822
    4. '()' → logprob: -4.345814228057861
    5. '('' → logprob: -4.595814228057861
    6. '(
' → logprob: -6.970814228057861
    7. '))' → logprob: -7.720814228057861
    8. '`)' → logprob: -8.095813751220703
    9. '')' → logprob: -8.470813751220703
    10. '```' → logprob: -8.720813751220703

Token 16: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.118421196937561
    2. '+' → logprob: -1.868421196937561
    3. '#' → logprob: -1.993421196937561
    4. '*' → logprob: -2.7434210777282715
    5. ')' → logprob: -2.8684210777282715
    6. ',' → logprob: -2.9934210777282715
    7. '-' → logprob: -2.9934210777282715
    8. '```' → logprob: -3.3684210777282715
    9. ' if' → logprob: -3.7434210777282715
    10. '.' → logprob: -4.1184210777282715

Token 17: ' iteration' (ID: 43155)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5476887226104736
    2. '_' → logprob: -1.6726887226104736
    3. ' ' → logprob: -1.6726887226104736
    4. ' _' → logprob: -3.1726887226104736
    5. ' item' → logprob: -6.2976884841918945
    6. '  ' → logprob: -6.4226884841918945
    7. ' value' → logprob: -8.672688484191895
    8. 'i' → logprob: -8.797688484191895
    9. ' in' → logprob: -8.922688484191895
    10. ' token' → logprob: -9.547688484191895

Token 18: '_number' (ID: 11733)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6437951326370239
    2. 'in' → logprob: -1.143795132637024
    3. '_' → logprob: -2.0187950134277344
    4. ' ' → logprob: -4.018795013427734
    5. '_in' → logprob: -6.143795013427734
    6. '(' → logprob: -6.893795013427734
    7. ':' → logprob: -7.518795013427734
    8. ',' → logprob: -7.893795013427734
    9. '_space' → logprob: -8.518795013427734
    10. 'space' → logprob: -8.643795013427734

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2854973077774048
    2. 'in' → logprob: -1.4104973077774048
    3. ' ' → logprob: -6.285497188568115
    4. '<|end|>' → logprob: -7.410497188568115
    5. ',' → logprob: -7.785497188568115
    6. '(' → logprob: -8.160497665405273
    7. '  ' → logprob: -8.410497665405273
    8. ':' → logprob: -8.660497665405273
    9. '```' → logprob: -9.410497665405273
    10. '   ' → logprob: -9.410497665405273

Token 20: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12693293392658234
    2. 'range' → logprob: -2.1269328594207764
    3. ' ' → logprob: -13.001933097839355
    4. '	range' → logprob: -13.501933097839355
    5. '(range' → logprob: -14.251933097839355
    6. ' ' → logprob: -16.25193214416504
    7. '[' → logprob: -16.37693214416504
    8. '_range' → logprob: -16.50193214416504
    9. '```' → logprob: -16.87693214416504
    10. '  ' → logprob: -17.00193214416504

Token 21: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.599403423024341e-05
    2. '(len' → logprob: -10.250065803527832
    3. ' (' → logprob: -10.750065803527832
    4. '(
' → logprob: -11.750065803527832
    5. '(initial' → logprob: -14.750065803527832
    6. '(start' → logprob: -15.375065803527832
    7. '(

' → logprob: -16.00006675720215
    8. '(int' → logprob: -16.00006675720215
    9. '(length' → logprob: -16.37506675720215
    10. '(n' → logprob: -16.50006675720215

Token 22: '1' (ID: 16)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.4003660976886749
    2. '1' → logprob: -1.7753660678863525
    3. ' initial' → logprob: -2.1503660678863525
    4. '10' → logprob: -3.6503660678863525
    5. '100' → logprob: -4.775366306304932
    6. ' ' → logprob: -6.025366306304932
    7. '5' → logprob: -6.025366306304932
    8. 'iteration' → logprob: -7.025366306304932
    9. '0' → logprob: -7.150366306304932
    10. '3' → logprob: -7.650366306304932

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012525423429906368
    2. ' ,' → logprob: -4.38752555847168
    3. ' ' → logprob: -11.51252555847168
    4. ',len' → logprob: -12.76252555847168
    5. ' )' → logprob: -14.63752555847168
    6. ')' → logprob: -14.63752555847168
    7. ',)' → logprob: -15.13752555847168
    8. '```' → logprob: -15.38752555847168
    9. '1' → logprob: -15.63752555847168
    10. ',int' → logprob: -15.88752555847168

Token 24: ' ' (ID: 220)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.7614274024963379
    2. ' ' → logprob: -1.261427402496338
    3. '11' → logprob: -2.386427402496338
    4. '100' → logprob: -2.886427402496338
    5. 'initial' → logprob: -2.886427402496338
    6. '101' → logprob: -3.261427402496338
    7. '10' → logprob: -5.136427402496338
    8. '21' → logprob: -7.761427402496338
    9. ' iteration' → logprob: -8.01142692565918
    10. '51' → logprob: -8.01142692565918

Token 25: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.7682613730430603
    2. 'initial' → logprob: -1.393261432647705
    3. '101' → logprob: -1.893261432647705
    4. '100' → logprob: -2.268261432647705
    5. '10' → logprob: -4.018261432647705
    6. '51' → logprob: -5.768261432647705
    7. '21' → logprob: -5.768261432647705
    8. '6' → logprob: -6.018261432647705
    9. ' initial' → logprob: -6.643261432647705
    10. ' ' → logprob: -6.768261432647705

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007578118238598108
    2. ':' → logprob: -8.000758171081543
    3. '+' → logprob: -8.500758171081543
    4. ')' → logprob: -8.625758171081543
    5. '):
' → logprob: -10.750758171081543
    6. ' ):' → logprob: -11.500758171081543
    7. ',' → logprob: -12.875758171081543
    8. ' +' → logprob: -14.000758171081543
    9. '```' → logprob: -14.250758171081543
    10. '**' → logprob: -14.250758171081543

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38879668712615967
    2. ':' → logprob: -2.138796806335449
    3. '<|end|>' → logprob: -2.263796806335449
    4. ' ' → logprob: -2.888796806335449
    5. '    ' → logprob: -4.638796806335449
    6. ' 
' → logprob: -4.763796806335449
    7. '```' → logprob: -5.263796806335449
    8. ' print' → logprob: -5.513796806335449
    9. ' ' → logprob: -5.888796806335449
    10. ' ```' → logprob: -6.388796806335449

Token 28: ' initial' (ID: 4871)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.3658381700515747
    2. ' initial' → logprob: -2.115838050842285
    3. ' remaining' → logprob: -3.240838050842285
    4. ' result' → logprob: -3.240838050842285
    5. ' print' → logprob: -3.865838050842285
    6. ' total' → logprob: -3.865838050842285
    7. ' amount' → logprob: -4.115838050842285
    8. ' new' → logprob: -4.365838050842285
    9. ' value' → logprob: -4.615838050842285
    10. ' updated' → logprob: -4.740838050842285

Token 29: '_value' (ID: 6734)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.006276670843362808
    2. '_value' → logprob: -5.256276607513428
    3. '_' → logprob: -6.881276607513428
    4. '_am' → logprob: -12.006277084350586
    5. '_amt' → logprob: -13.131277084350586
    6. ' _' → logprob: -13.381277084350586
    7. '_a' → logprob: -14.131277084350586
    8. '_quantity' → logprob: -14.131277084350586
    9. '```' → logprob: -14.256277084350586
    10. '_number' → logprob: -14.381277084350586

Token 30: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.011962306685745716
    2. '-=' → logprob: -4.886962413787842
    3. '-' → logprob: -6.136962413787842
    4. '=' → logprob: -7.261962413787842
    5. ' =' → logprob: -7.261962413787842
    6. ' +=' → logprob: -7.511962413787842
    7. ' -' → logprob: -9.011961936950684
    8. '+=' → logprob: -9.886961936950684
    9. ' *=' → logprob: -11.011961936950684
    10. '    ' → logprob: -11.136961936950684

Token 31: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.0715949535369873
    2. 'initial' → logprob: -2.6965949535369873
    3. ' max' → logprob: -6.696595191955566
    4. 'max' → logprob: -8.696595191955566
    5. '(initial' → logprob: -8.696595191955566
    6. ' int' → logprob: -10.946595191955566
    7. ' ' → logprob: -11.071595191955566
    8. 'int' → logprob: -11.196595191955566
    9. '0' → logprob: -11.696595191955566
    10. ' deduction' → logprob: -12.321595191955566

Token 32: '_amount' (ID: 29145)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.007770239841192961
    2. '_amount' → logprob: -4.88277006149292
    3. '_' → logprob: -8.757770538330078
    4. '_val' → logprob: -12.382770538330078
    5. '_amt' → logprob: -14.257770538330078
    6. '__' → logprob: -15.007770538330078
    7. '_minus' → logprob: -15.507770538330078
    8. '_Value' → logprob: -15.507770538330078
    9. '_balance' → logprob: -16.007770538330078
    10. '_am' → logprob: -16.257770538330078

Token 33: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0435076579451561
    2. '-' → logprob: -3.2935075759887695
    3. '<|end|>' → logprob: -5.6685075759887695
    4. ' +' → logprob: -7.1685075759887695
    5. '+' → logprob: -8.16850757598877
    6. ')' → logprob: -8.54350757598877
    7. ' ' → logprob: -8.66850757598877
    8. ' *' → logprob: -8.79350757598877
    9. '   ' → logprob: -8.79350757598877
    10. '    ' → logprob: -8.91850757598877

Token 34: ' initial' (ID: 4871)
  Prédit: 'iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iteration' → logprob: -0.35796940326690674
    2. ' iteration' → logprob: -1.6079694032669067
    3. ' deduction' → logprob: -4.232969284057617
    4. '(' → logprob: -4.232969284057617
    5. ' initial' → logprob: -4.357969284057617
    6. 'initial' → logprob: -4.357969284057617
    7. 'ded' → logprob: -4.357969284057617
    8. ' (' → logprob: -4.482969284057617
    9. '2' → logprob: -4.857969284057617
    10. '0' → logprob: -5.482969284057617

Token 35: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.016912288963794708
    2. '_amount' → logprob: -4.141912460327148
    3. '_' → logprob: -7.266912460327148
    4. '_number' → logprob: -9.391912460327148
    5. 'value' → logprob: -9.641912460327148
    6. '_val' → logprob: -11.891912460327148
    7. '_quantity' → logprob: -12.266912460327148
    8. 'amount' → logprob: -12.516912460327148
    9. '_iteration' → logprob: -13.266912460327148
    10. '_Value' → logprob: -13.391912460327148

Token 36: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05141953378915787
    2. '-' → logprob: -3.676419496536255
    3. '<|end|>' → logprob: -4.051419734954834
    4. ' *' → logprob: -5.801419734954834
    5. ' ' → logprob: -6.176419734954834
    6. '    ' → logprob: -7.301419734954834
    7. '   ' → logprob: -7.551419734954834
    8. ' +' → logprob: -8.426419258117676
    9. '*' → logprob: -8.551419258117676
    10. ')' → logprob: -8.676419258117676

Token 37: ' deduction' (ID: 106545)
  Prédit: 'ded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ded' → logprob: -0.5233204364776611
    2. ' deduction' → logprob: -0.8983204364776611
    3. ' ' → logprob: -9.648320198059082
    4. '   ' → logprob: -10.023320198059082
    5. ' ded' → logprob: -10.898320198059082
    6. '  ' → logprob: -11.648320198059082
    7. ' dedication' → logprob: -11.773320198059082
    8. 'de' → logprob: -12.148320198059082
    9. ' deduct' → logprob: -12.335820198059082
    10. ' (' → logprob: -12.398320198059082

Token 38: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.0021393168717622757
    2. '_' → logprob: -6.252139091491699
    3. '_value' → logprob: -9.1271390914917
    4. '_amt' → logprob: -10.5021390914917
    5. ' _' → logprob: -10.6271390914917
    6. '_number' → logprob: -11.1271390914917
    7. '```' → logprob: -12.0021390914917
    8. '_am' → logprob: -12.2521390914917
    9. '_code' → logprob: -12.5021390914917
    10. '_token' → logprob: -12.8771390914917

Token 39: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5852609276771545
    2. '<|end|>' → logprob: -1.0852608680725098
    3. ')' → logprob: -2.5852608680725098
    4. '\n' → logprob: -4.46026086807251
    5. ' ' → logprob: -5.71026086807251
    6. '*' → logprob: -6.21026086807251
    7. '```' → logprob: -6.21026086807251
    8. '**' → logprob: -6.71026086807251
    9. ':' → logprob: -6.71026086807251
    10. '\' → logprob: -6.83526086807251

Token 41: ' print' (ID: 2123)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9633004069328308
    2. '<|end|>' → logprob: -1.0883004665374756
    3. '\n' → logprob: -2.2133004665374756
    4. ')' → logprob: -2.9633004665374756
    5. '```' → logprob: -3.3383004665374756
    6. 'print' (adapté à ' print') → logprob: -3.3383004665374756
    7. ' ' → logprob: -4.2133002281188965
    8. '\' → logprob: -4.8383002281188965
    9. ' if' → logprob: -5.7133002281188965
    10. ':' → logprob: -5.8383002281188965

Token 42: '(initial' (ID: 63456)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3883649408817291
    2. '(initial' → logprob: -1.1383649110794067
    3. '(f' → logprob: -6.888364791870117
    4. '()' → logprob: -8.638364791870117
    5. '('' → logprob: -9.388364791870117
    6. '("("' → logprob: -9.638364791870117
    7. '((' → logprob: -10.138364791870117
    8. '(iter' → logprob: -10.388364791870117
    9. '(int' → logprob: -11.013364791870117
    10. '(round' → logprob: -11.388364791870117

Token 43: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.3856492842023727e-06
    2. '_val' → logprob: -14.125000953674316
    3. '_number' → logprob: -15.125000953674316
    4. '_amount' → logprob: -16.125001907348633
    5. '_' → logprob: -16.375001907348633
    6. 'value' → logprob: -17.500001907348633
    7. ')_' → logprob: -18.250001907348633
    8. '_values' → logprob: -18.875001907348633
    9. '_Value' → logprob: -19.125001907348633
    10. '_va' → logprob: -19.500001907348633

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.750001907348633
    3. ')
' → logprob: -15.625001907348633
    4. '))' → logprob: -15.625001907348633
    5. ')`' → logprob: -16.875001907348633
    6. '')' → logprob: -17.000001907348633
    7. '`)' → logprob: -17.375001907348633
    8. '）' → logprob: -19.250001907348633
    9. ')")' → logprob: -19.250001907348633
    10. ' ' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 30.95%
Précision adaptée (1ère position): 30.95%
Précision (top 10): 71.43%
================================================================================
