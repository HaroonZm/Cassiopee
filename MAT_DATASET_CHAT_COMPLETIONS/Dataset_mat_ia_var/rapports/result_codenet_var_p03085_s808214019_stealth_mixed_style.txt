================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def ReadInput():
  return input()

def Solve(x):
    return {'A':'T','C':'G',"T":'A','G':"C"}[x]

class Runner:
    def run(self):
        y = ReadInput()
        result = Solve(y)
        print(result)

if __name__ == "__main__":
    app = Runner()
    app.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' Read' (ID: 5405)
  → Token d'amorce (pas de prédiction)

Token 2: 'Input' (ID: 3275)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002016331272898242
    2. ':' → logprob: -9.375201225280762
    3. '(:' → logprob: -9.750201225280762
    4. '():' → logprob: -10.625201225280762
    5. '```' → logprob: -11.125201225280762
    6. ' (' → logprob: -11.375201225280762
    7. '_' → logprob: -13.625201225280762
    8. '[' → logprob: -14.125201225280762
    9. '(`' → logprob: -14.500201225280762
    10. '(a' → logprob: -14.625201225280762

Token 4: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2320067882537842
    2. '\n' → logprob: -1.2320067882537842
    3. '\' → logprob: -1.6070067882537842
    4. '```' → logprob: -2.482006788253784
    5. '(' → logprob: -2.982006788253784
    6. ':' → logprob: -3.107006788253784
    7. '()' → logprob: -4.607007026672363
    8. '    
' → logprob: -5.482007026672363
    9. '
' → logprob: -6.232007026672363
    10. ' ' → logprob: -6.232007026672363

Token 5: ' return' (ID: 622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3256624639034271
    2. '\' → logprob: -2.57566237449646
    3. ' ' → logprob: -2.57566237449646
    4. '   ' → logprob: -3.20066237449646
    5. '```' → logprob: -3.45066237449646
    6. '\n' → logprob: -4.325662612915039
    7. ''' → logprob: -4.575662612915039
    8. '`' → logprob: -5.575662612915039
    9. ' (' → logprob: -5.700662612915039
    10. '    ' → logprob: -5.825662612915039

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.057647839188575745
    2. '"' → logprob: -3.682647943496704
    3. '  ' → logprob: -4.057647705078125
    4. ''' → logprob: -4.932647705078125
    5. ' None' → logprob: -6.557647705078125
    6. '<|end|>' → logprob: -6.557647705078125
    7. 'None' → logprob: -7.557647705078125
    8. 'input' → logprob: -7.807647705078125
    9. '`' → logprob: -8.182647705078125
    10. ' []' → logprob: -8.182647705078125

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038586279843002558
    2. '.' → logprob: -5.87885856628418
    3. '()' → logprob: -7.00385856628418
    4. ' (' → logprob: -10.50385856628418
    5. '(.)' → logprob: -10.62885856628418
    6. '(
' → logprob: -10.87885856628418
    7. '```' → logprob: -11.37885856628418
    8. ''' → logprob: -11.37885856628418
    9. '('' → logprob: -11.75385856628418
    10. '().' → logprob: -11.75385856628418

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4636305868625641
    2. '\n' → logprob: -1.7136305570602417
    3. '<|end|>' → logprob: -3.3386306762695312
    4. ':' → logprob: -3.8386306762695312
    5. '.' → logprob: -3.8386306762695312
    6. '\' → logprob: -4.088630676269531
    7. '
' → logprob: -4.213630676269531
    8. 'newline' → logprob: -4.338630676269531
    9. '(
' → logprob: -4.713630676269531
    10. '()' → logprob: -4.713630676269531

Token 9: ' Solve' (ID: 116151)
  Prédit: ' Write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Write' → logprob: -0.355613648891449
    2. ' Process' → logprob: -1.6056137084960938
    3. ' Calculate' → logprob: -2.8556137084960938
    4. ' Print' → logprob: -3.6056137084960938
    5. ' Read' → logprob: -5.980613708496094
    6. ' main' → logprob: -6.230613708496094
    7. ' Add' → logprob: -6.480613708496094
    8. ' Solve' → logprob: -6.605613708496094
    9. ' Save' → logprob: -6.730613708496094
    10. ' ' → logprob: -6.730613708496094

Token 10: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005800097715109587
    2. '():' → logprob: -5.255800247192383
    3. '()' → logprob: -8.880800247192383
    4. ' (' → logprob: -9.130800247192383
    5. '```' → logprob: -9.880800247192383
    6. ':' → logprob: -10.380800247192383
    7. '   ' → logprob: -10.505800247192383
    8. ' ' → logprob: -10.880800247192383
    9. '(
' → logprob: -11.130800247192383
    10. '('' → logprob: -11.130800247192383

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027046618051826954
    2. ')' → logprob: -6.252704620361328
    3. ':' → logprob: -7.752704620361328
    4. ' ):' → logprob: -8.127704620361328
    5. ',' → logprob: -10.752704620361328
    6. '=' → logprob: -11.627704620361328
    7. '**' → logprob: -12.752704620361328
    8. ' :' → logprob: -12.752704620361328
    9. ' ' → logprob: -13.002704620361328
    10. '):
' → logprob: -13.002704620361328

Token 12: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7903958559036255
    2. '   ' → logprob: -1.1653958559036255
    3. '(' → logprob: -2.415395736694336
    4. ' x' → logprob: -3.165395736694336
    5. ':' → logprob: -3.665395736694336
    6. '    ' → logprob: -3.915395736694336
    7. '(x' → logprob: -4.040395736694336
    8. 'x' → logprob: -4.540395736694336
    9. ' :' → logprob: -5.040395736694336
    10. ''' → logprob: -5.540395736694336

Token 13: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8179410099983215
    2. 'x' → logprob: -1.8179409503936768
    3. '   ' → logprob: -1.8179409503936768
    4. ' x' → logprob: -2.1929409503936768
    5. 'r' → logprob: -3.3179409503936768
    6. '    ' → logprob: -3.6929409503936768
    7. '(' → logprob: -3.8179409503936768
    8. ' if' → logprob: -4.692941188812256
    9. ' return' → logprob: -5.192941188812256
    10. ''' → logprob: -5.442941188812256

Token 14: ' {'' (ID: 11881)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0905679389834404
    2. 'x' → logprob: -2.4655678272247314
    3. ' ' → logprob: -6.5905680656433105
    4. '"' → logprob: -9.465567588806152
    5. ''' → logprob: -9.715567588806152
    6. ' None' → logprob: -10.965567588806152
    7. ' int' → logprob: -11.215567588806152
    8. '(x' → logprob: -11.215567588806152
    9. ' '' → logprob: -11.465567588806152
    10. ' "' → logprob: -11.590567588806152

Token 15: 'A' (ID: 32)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.8919046521186829
    2. 'x' → logprob: -1.141904592514038
    3. ''' → logprob: -1.516904592514038
    4. '"x' → logprob: -4.266904830932617
    5. '"' → logprob: -4.641904830932617
    6. ''+' → logprob: -5.266904830932617
    7. ''s' → logprob: -5.891904830932617
    8. '0' → logprob: -6.266904830932617
    9. 'True' → logprob: -6.266904830932617
    10. ''value' → logprob: -6.266904830932617

Token 16: '':'' (ID: 22947)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.045819517225027084
    2. '+' → logprob: -3.7958195209503174
    3. ''' → logprob: -4.795819282531738
    4. '':'' → logprob: -5.795819282531738
    5. '+'' → logprob: -5.795819282531738
    6. '+B' → logprob: -6.170819282531738
    7. ''}' → logprob: -6.670819282531738
    8. ''+' → logprob: -6.795819282531738
    9. 'BC' → logprob: -7.920819282531738
    10. 'B' → logprob: -8.170819282531738

Token 17: 'T' (ID: 51)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.7897156476974487
    2. 'B' → logprob: -1.9147156476974487
    3. 'Z' → logprob: -2.6647157669067383
    4. '1' → logprob: -2.7897157669067383
    5. 'x' → logprob: -2.7897157669067383
    6. ''' → logprob: -3.1647157669067383
    7. 'T' → logprob: -3.4147157669067383
    8. 'C' → logprob: -3.5397157669067383
    9. '4' → logprob: -4.289715766906738
    10. '0' → logprob: -4.289715766906738

Token 18: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.5641454458236694
    2. '',' → logprob: -0.9391454458236694
    3. ''' → logprob: -3.689145565032959
    4. ''}' → logprob: -4.314145565032959
    5. '',
' → logprob: -6.564145565032959
    6. ','' → logprob: -9.3141450881958
    7. ''}}' → logprob: -9.5641450881958
    8. ''})' → logprob: -9.5641450881958
    9. '',"' → logprob: -9.9391450881958
    10. 'G' → logprob: -10.1891450881958

Token 19: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6597294211387634
    2. 'G' → logprob: -1.1597294807434082
    3. 'T' → logprob: -1.7847294807434082
    4. 'U' → logprob: -6.659729480743408
    5. 'a' → logprob: -9.03472900390625
    6. ' C' → logprob: -9.78472900390625
    7. ' G' → logprob: -10.15972900390625
    8. ' T' → logprob: -10.65972900390625
    9. 'A' → logprob: -10.90972900390625
    10. 'B' → logprob: -11.28472900390625

Token 20: '':'' (ID: 22947)
  Prédit: '':''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.002299420302733779
    2. '':' → logprob: -6.1272993087768555
    3. ':'' → logprob: -9.502299308776855
    4. ':' → logprob: -10.377299308776855
    5. ''' → logprob: -12.377299308776855
    6. '':''' → logprob: -12.877299308776855
    7. ' ':'' → logprob: -14.127299308776855
    8. '":"' → logprob: -15.252299308776855
    9. ''=>'' → logprob: -15.502299308776855
    10. ''A' → logprob: -15.752299308776855

Token 21: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0007831838447600603
    2. ''' → logprob: -7.8757829666137695
    3. ' G' → logprob: -8.00078296661377
    4. 'A' → logprob: -9.75078296661377
    5. ' ' → logprob: -12.75078296661377
    6. '	G' → logprob: -13.75078296661377
    7. '')' → logprob: -13.87578296661377
    8. ')' → logprob: -14.25078296661377
    9. ' '' → logprob: -14.37578296661377
    10. '<|end|>' → logprob: -14.75078296661377

Token 22: '',"' (ID: 99319)
  Prédit: ',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ','' → logprob: -0.09898320585489273
    2. '','' → logprob: -2.5989832878112793
    3. ',' → logprob: -4.223983287811279
    4. '',' → logprob: -5.723983287811279
    5. '}' → logprob: -6.723983287811279
    6. ''}' → logprob: -7.473983287811279
    7. ''' → logprob: -9.473982810974121
    8. ''A' → logprob: -10.973982810974121
    9. ''T' → logprob: -11.098982810974121
    10. '')' → logprob: -11.473982810974121

Token 23: 'T' (ID: 51)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -1.265166997909546
    2. ''' → logprob: -1.515166997909546
    3. 'A' → logprob: -1.640166997909546
    4. 'G' → logprob: -1.890166997909546
    5. ''T' → logprob: -2.140166997909546
    6. 'T' → logprob: -3.640166997909546
    7. '"' → logprob: -5.640167236328125
    8. '"A' → logprob: -5.890167236328125
    9. '"G' → logprob: -6.765167236328125
    10. '"T' → logprob: -7.515167236328125

Token 24: '":' (ID: 1243)
  Prédit: '':''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.4839635491371155
    2. '":' → logprob: -1.6089634895324707
    3. '":"' → logprob: -1.9839634895324707
    4. '':' → logprob: -3.3589634895324707
    5. ''' → logprob: -4.983963489532471
    6. '"' → logprob: -6.233963489532471
    7. '":"'' → logprob: -6.608963489532471
    8. ':'' → logprob: -7.483963489532471
    9. ''A' → logprob: -8.108963966369629
    10. ':' → logprob: -9.358963966369629

Token 25: ''' (ID: 6)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.01843530312180519
    2. '"A' → logprob: -4.018435478210449
    3. 'A' → logprob: -8.39343547821045
    4. ''' → logprob: -10.51843547821045
    5. ' '' → logprob: -11.01843547821045
    6. '’A' → logprob: -12.26843547821045
    7. ' A' → logprob: -13.14343547821045
    8. '"' → logprob: -13.26843547821045
    9. '   ' → logprob: -13.51843547821045
    10. ' ' → logprob: -13.64343547821045

Token 26: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0008486981969326735
    2. ''A' → logprob: -7.250848770141602
    3. ' A' → logprob: -9.500848770141602
    4. '"A' → logprob: -10.125848770141602
    5. 'a' → logprob: -11.625848770141602
    6. ''' → logprob: -12.750848770141602
    7. '	A' → logprob: -13.000848770141602
    8. ' ' → logprob: -13.250848770141602
    9. '`' → logprob: -13.500848770141602
    10. '```' → logprob: -13.500848770141602

Token 27: '','' (ID: 4074)
  Prédit: ',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.18229800462722778
    2. '','' → logprob: -2.182297945022583
    3. ',' → logprob: -4.057298183441162
    4. '',"' → logprob: -4.182298183441162
    5. ',"' → logprob: -4.182298183441162
    6. '',' → logprob: -5.432298183441162
    7. ''' → logprob: -7.557298183441162
    8. '}' → logprob: -7.682298183441162
    9. '",'' → logprob: -8.182297706604004
    10. ',C' → logprob: -9.182297706604004

Token 28: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.04316189885139465
    2. 'C' → logprob: -3.1681618690490723
    3. ''' → logprob: -9.04316234588623
    4. ' G' → logprob: -10.91816234588623
    5. ''C' → logprob: -11.66816234588623
    6. '"' → logprob: -12.79316234588623
    7. 'GC' → logprob: -13.48066234588623
    8. 'g' → logprob: -13.48066234588623
    9. '"G' → logprob: -13.79316234588623
    10. ')' → logprob: -14.04316234588623

Token 29: '':' (ID: 2337)
  Prédit: '':''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.034980155527591705
    2. '':' → logprob: -3.534980058670044
    3. ':'' → logprob: -5.284980297088623
    4. ':' → logprob: -9.659979820251465
    5. ''' → logprob: -9.909979820251465
    6. '':''' → logprob: -10.784979820251465
    7. '":"' → logprob: -11.284979820251465
    8. ''}' → logprob: -13.909979820251465
    9. '":' → logprob: -14.659979820251465
    10. '":"'' → logprob: -15.284979820251465

Token 30: '"' (ID: 1)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.0007662679417990148
    2. ''' → logprob: -7.250766277313232
    3. '"C' → logprob: -10.250765800476074
    4. ' '' → logprob: -11.875765800476074
    5. 'C' → logprob: -12.250765800476074
    6. ''S' → logprob: -12.500765800476074
    7. ''T' → logprob: -12.875765800476074
    8. ''GC' → logprob: -13.625765800476074
    9. '"' → logprob: -15.125765800476074
    10. ' ' → logprob: -15.125765800476074

Token 31: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0010164948180317879
    2. ''C' → logprob: -7.001016616821289
    3. ''' → logprob: -9.876016616821289
    4. '"C' → logprob: -10.626016616821289
    5. ' C' → logprob: -10.876016616821289
    6. '"' → logprob: -11.751016616821289
    7. 'T' → logprob: -14.126016616821289
    8. ''s' → logprob: -15.251016616821289
    9. 'c' → logprob: -15.501016616821289
    10. ' ' → logprob: -15.626016616821289

Token 32: '"}' (ID: 18583)
  Prédit: '"}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"}' → logprob: -0.011992462910711765
    2. '}' → logprob: -4.761992454528809
    3. ''}' → logprob: -5.761992454528809
    4. '"' → logprob: -9.261992454528809
    5. '}"' → logprob: -9.761992454528809
    6. ''' → logprob: -10.761992454528809
    7. '"]' → logprob: -11.636992454528809
    8. '"}}' → logprob: -11.761992454528809
    9. ' "}' → logprob: -11.761992454528809
    10. '"}

' → logprob: -12.011992454528809

Token 33: '[' (ID: 58)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.4347396790981293
    2. '[' → logprob: -1.1847397089004517
    3. '.get' → logprob: -3.184739589691162
    4. '[get' → logprob: -5.809739589691162
    5. '[input' → logprob: -8.18474006652832
    6. '[c' → logprob: -8.30974006652832
    7. '[g' → logprob: -8.43474006652832
    8. '[s' → logprob: -8.55974006652832
    9. '```' → logprob: -8.93474006652832
    10. '[t' → logprob: -9.18474006652832

Token 34: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0206720617134124e-05
    2. ' x' → logprob: -11.50001049041748
    3. ' ' → logprob: -18.375009536743164
    4. ''x' → logprob: -19.250009536743164
    5. '"x' → logprob: -19.625009536743164
    6. '	x' → logprob: -19.875009536743164
    7. ')x' → logprob: -20.125009536743164
    8. '(x' → logprob: -21.250009536743164
    9. '{x' → logprob: -21.250009536743164
    10. '  ' → logprob: -21.875009536743164

Token 35: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005357906222343445
    2. ')]' → logprob: -5.25535774230957
    3. ')' → logprob: -9.50535774230957
    4. '])' → logprob: -10.88035774230957
    5. ' ]' → logprob: -10.88035774230957
    6. '']' → logprob: -12.00535774230957
    7. '}]' → logprob: -13.25535774230957
    8. ']}' → logprob: -13.63035774230957
    9. '}' → logprob: -13.75535774230957
    10. '`]' → logprob: -13.88035774230957

Token 36: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' Runner' (ID: 82168)
  Prédit: ' DNA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' DNA' → logprob: -0.23469460010528564
    2. ' Solution' → logprob: -1.7346946001052856
    3. ' D' → logprob: -4.109694480895996
    4. ' Complement' → logprob: -5.234694480895996
    5. ' DN' → logprob: -5.609694480895996
    6. ' ' → logprob: -6.109694480895996
    7. ' Pair' → logprob: -6.484694480895996
    8. ' My' → logprob: -7.234694480895996
    9. ' dna' → logprob: -7.734694480895996
    10. 'DNA' → logprob: -7.984694480895996

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001502636878285557
    2. '():' → logprob: -9.500150680541992
    3. '(' → logprob: -10.000150680541992
    4. ' :' → logprob: -11.375150680541992
    5. ':
' → logprob: -12.375150680541992
    6. ':def' → logprob: -12.750150680541992
    7. '(object' → logprob: -13.000150680541992
    8. ':**' → logprob: -13.375150680541992
    9. '>:' → logprob: -13.500150680541992
    10. '<|end|>' → logprob: -13.500150680541992

Token 39: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.687088131904602
    2. ' 
' → logprob: -1.562088131904602
    3. '<|end|>' → logprob: -1.562088131904602
    4. ' def' → logprob: -3.8120880126953125
    5. '   ' → logprob: -4.3120880126953125
    6. '  
' → logprob: -4.6870880126953125
    7. '
' → logprob: -4.9370880126953125
    8. '    ' → logprob: -4.9370880126953125
    9. 'def' → logprob: -5.5620880126953125
    10. '    
' → logprob: -5.9370880126953125

Token 40: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.004732010420411825
    2. 'def' (adapté à ' def') → logprob: -5.379732131958008
    3. ' d' → logprob: -10.004732131958008
    4. '   ' → logprob: -10.129732131958008
    5. ' de' → logprob: -11.504732131958008
    6. 'd' → logprob: -12.004732131958008
    7. 'de' → logprob: -12.504732131958008
    8. ' ' → logprob: -13.004732131958008
    9. '    ' → logprob: -13.129732131958008
    10. ' ```' → logprob: -14.504732131958008

Token 41: ' run' (ID: 2461)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.174082413315773
    2. ' ' → logprob: -1.9240823984146118
    3. ' Solve' → logprob: -5.424082279205322
    4. '_' → logprob: -6.174082279205322
    5. ' Init' → logprob: -6.299082279205322
    6. ' _' → logprob: -6.299082279205322
    7. ' init' → logprob: -6.924082279205322
    8. '__' → logprob: -7.049082279205322
    9. ' Read' → logprob: -7.174082279205322
    10. ' def' → logprob: -8.17408275604248

Token 42: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11692142486572266
    2. '(self' → logprob: -2.2419214248657227
    3. '()' → logprob: -5.616921424865723
    4. 'self' → logprob: -8.616921424865723
    5. '_' → logprob: -9.491921424865723
    6. '(
' → logprob: -9.866921424865723
    7. ' (' → logprob: -9.866921424865723
    8. ' ' → logprob: -11.116921424865723
    9. '(

' → logprob: -11.241921424865723
    10. 's' → logprob: -11.616921424865723

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43407580256462097
    2. ',' → logprob: -1.0590758323669434
    3. ')' → logprob: -6.059075832366943
    4. ' ,' → logprob: -7.059075832366943
    5. 'self' → logprob: -7.684075832366943
    6. ' ):' → logprob: -7.809075832366943
    7. '):
' → logprob: -8.059075355529785
    8. ',input' → logprob: -8.059075355529785
    9. ',args' → logprob: -8.184075355529785
    10. ',arg' → logprob: -9.309075355529785

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000444850797066465
    2. '        ' → logprob: -9.375444412231445
    3. '   ' → logprob: -9.625444412231445
    4. '        
' → logprob: -9.625444412231445
    5. '    ' → logprob: -10.000444412231445
    6. '      ' → logprob: -10.125444412231445
    7. ' ' → logprob: -10.125444412231445
    8. '     ' → logprob: -10.750444412231445
    9. '<|end|>' → logprob: -11.000444412231445
    10. '
' → logprob: -11.250444412231445

Token 45: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.35894033312797546
    2. 'while' → logprob: -2.108940362930298
    3. 'for' → logprob: -2.608940362930298
    4. ' while' → logprob: -3.483940362930298
    5. 's' → logprob: -4.108940124511719
    6. ' for' → logprob: -4.608940124511719
    7. ' x' → logprob: -4.608940124511719
    8. '   ' → logprob: -4.733940124511719
    9. 'n' → logprob: -5.108940124511719
    10. 'input' → logprob: -5.483940124511719

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14300894737243652
    2. '=' → logprob: -2.0180089473724365
    3. '=input' → logprob: -9.393009185791016
    4. '_' → logprob: -9.518009185791016
    5. ' ' → logprob: -9.643009185791016
    6. '   ' → logprob: -9.893009185791016
    7. '  ' → logprob: -11.393009185791016
    8. 'u' → logprob: -12.018009185791016
    9. ',' → logprob: -12.143009185791016
    10. 's' → logprob: -12.268009185791016

Token 47: ' Read' (ID: 5405)
  Prédit: 'Read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Read' → logprob: -0.6143473982810974
    2. ' Read' → logprob: -0.8643473982810974
    3. 'input' → logprob: -4.614347457885742
    4. ' input' → logprob: -4.614347457885742
    5. 'self' → logprob: -4.739347457885742
    6. ' self' → logprob: -4.739347457885742
    7. 'int' → logprob: -9.239347457885742
    8. '	Read' → logprob: -9.239347457885742
    9. ' ' → logprob: -9.364347457885742
    10. 'Solve' → logprob: -10.989347457885742

Token 48: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. 'In' → logprob: -18.375
    3. ' Input' → logprob: -18.5
    4. 'I' → logprob: -19.5
    5. '	Input' → logprob: -19.625
    6. '(Input' → logprob: -20.375
    7. 'input' → logprob: -20.625
    8. 'Inp' → logprob: -20.875
    9. 'Output' → logprob: -21.75
    10. '_input' → logprob: -21.875

Token 49: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.1054253011243418e-05
    2. '()
' → logprob: -11.375020980834961
    3. '()

' → logprob: -12.625020980834961
    4. ' ()' → logprob: -13.125020980834961
    5. '(' → logprob: -13.875020980834961
    6. '())' → logprob: -14.375020980834961
    7. '()]' → logprob: -14.500020980834961
    8. '().' → logprob: -15.000020980834961
    9. ']()' → logprob: -15.250020980834961
    10. '();' → logprob: -15.375020980834961

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5828115344047546
    2. '
' → logprob: -0.9578115344047546
    3. '<|end|>' → logprob: -3.8328115940093994
    4. ' for' → logprob: -4.08281135559082
    5. 'for' → logprob: -5.58281135559082
    6. '        
' → logprob: -5.95781135559082
    7. ' ' → logprob: -6.45781135559082
    8. '()' → logprob: -6.45781135559082
    9. '()
' → logprob: -6.70781135559082
    10. '\n' → logprob: -6.83281135559082

Token 51: ' result' (ID: 1534)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.9292505383491516
    2. 'print' → logprob: -1.3042504787445068
    3. 'r' → logprob: -1.8042504787445068
    4. 'result' (adapté à ' result') → logprob: -2.929250478744507
    5. 'for' → logprob: -3.179250478744507
    6. ' for' → logprob: -4.304250717163086
    7. 's' → logprob: -4.429250717163086
    8. ' result' → logprob: -5.179250717163086
    9. 'res' → logprob: -5.179250717163086
    10. 'p' → logprob: -5.179250717163086

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10033930093050003
    2. '=' → logprob: -2.350339412689209
    3. ' ' → logprob: -8.97533893585205
    4. 's' → logprob: -12.47533893585205
    5. '  ' → logprob: -13.85033893585205
    6. ' ' → logprob: -15.47533893585205
    7. ' =)' → logprob: -15.60033893585205
    8. '.' → logprob: -15.85033893585205
    9. '_' → logprob: -15.97533893585205
    10. ')' → logprob: -16.225339889526367

Token 53: ' Solve' (ID: 116151)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5568415522575378
    2. '""' → logprob: -1.4318416118621826
    3. '''.' → logprob: -2.0568416118621826
    4. '''' → logprob: -3.8068416118621826
    5. '[' → logprob: -4.0568413734436035
    6. ' "".' → logprob: -5.3068413734436035
    7. ' ''.' → logprob: -5.6818413734436035
    8. '"S' → logprob: -5.9318413734436035
    9. ' [' → logprob: -6.0568413734436035
    10. ''' → logprob: -6.3068413734436035

Token 54: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.1003161147236824
    2. '(' → logprob: -2.350316047668457
    3. '(
' → logprob: -9.475316047668457
    4. ' (' → logprob: -10.975316047668457
    5. '('' → logprob: -11.475316047668457
    6. '(

' → logprob: -13.350316047668457
    7. '(x' → logprob: -13.600316047668457
    8. '((' → logprob: -14.225316047668457
    9. '("("' → logprob: -14.350316047668457
    10. ' ' → logprob: -15.100316047668457

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6550729419104755e-05
    2. ')
' → logprob: -10.375036239624023
    3. '[' → logprob: -13.125036239624023
    4. ' )' → logprob: -13.250036239624023
    5. '))' → logprob: -14.000036239624023
    6. ')`' → logprob: -15.250036239624023
    7. ')

' → logprob: -16.000036239624023
    8. '   ' → logprob: -16.125036239624023
    9. ')))' → logprob: -17.000036239624023
    10. ')
' → logprob: -17.500036239624023

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5660744905471802
    2. '
' → logprob: -1.3160744905471802
    3. '<|end|>' → logprob: -1.8160744905471802
    4. '        
' → logprob: -8.19107437133789
    5. '<|end|>' → logprob: -8.19107437133789
    6. 'print' → logprob: -8.44107437133789
    7. '        ' → logprob: -9.06607437133789
    8. '   ' → logprob: -9.19107437133789
    9. '      ' → logprob: -9.81607437133789
    10. '#' → logprob: -10.31607437133789

Token 57: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.35431531071662903
    2. '       ' → logprob: -1.3543152809143066
    3. ' print' → logprob: -3.3543152809143066
    4. 'return' → logprob: -5.604315280914307
    5. ' return' → logprob: -7.854315280914307
    6. '
' → logprob: -7.854315280914307
    7. '   ' → logprob: -8.104315757751465
    8. '        
' → logprob: -8.479315757751465
    9. ' ' → logprob: -9.479315757751465
    10. ' 
' → logprob: -10.479315757751465

Token 58: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.5759843587875366
    2. '(' → logprob: -0.8259843587875366
    3. '('' → logprob: -10.950984001159668
    4. '()' → logprob: -11.075984001159668
    5. ' (' → logprob: -12.825984001159668
    6. '(f' → logprob: -12.950984001159668
    7. 'result' → logprob: -13.825984001159668
    8. '("("' → logprob: -13.825984001159668
    9. '(res' → logprob: -13.950984001159668
    10. '(
' → logprob: -14.325984001159668

Token 59: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.000001907348633
    5. '')' → logprob: -16.125001907348633
    6. '))' → logprob: -16.250001907348633
    7. '")' → logprob: -17.000001907348633
    8. '`)' → logprob: -17.250001907348633
    9. '       ' → logprob: -17.625001907348633
    10. '()' → logprob: -17.625001907348633

Token 60: 'if' (ID: 366)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5894261002540588
    2. '.' → logprob: -2.339426040649414
    3. '\n' → logprob: -2.464426040649414
    4. '
' → logprob: -2.714426040649414
    5. '<|end|>' → logprob: -2.839426040649414
    6. '#' → logprob: -3.214426040649414
    7. '_' → logprob: -3.464426040649414
    8. '\' → logprob: -4.214426040649414
    9. 'R' → logprob: -4.214426040649414
    10. '```' → logprob: -4.339426040649414

Token 61: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.031472936272621155
    2. '__' → logprob: -3.53147292137146
    3. ' ' → logprob: -6.781473159790039
    4. '_' → logprob: -7.656473159790039
    5. ' ' → logprob: -9.281473159790039
    6. ' _' → logprob: -11.781473159790039
    7. ' ' → logprob: -12.781473159790039
    8. '  ' → logprob: -12.906473159790039
    9. '_name' → logprob: -13.406473159790039
    10. '___' → logprob: -13.781473159790039

Token 62: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42588096857070923
    2. '__' → logprob: -1.4258809089660645
    3. '==' → logprob: -2.6758809089660645
    4. '.' → logprob: -4.1758809089660645
    5. ' __' → logprob: -4.4258809089660645
    6. '.__' → logprob: -5.1758809089660645
    7. '<|end|>' → logprob: -6.9258809089660645
    8. '__.__' → logprob: -7.0508809089660645
    9. ' .' → logprob: -7.4258809089660645
    10. '=="' → logprob: -7.9258809089660645

Token 63: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000351670227246359
    2. '__.__' → logprob: -8.875351905822754
    3. '==' → logprob: -9.750351905822754
    4. '_' → logprob: -10.000351905822754
    5. '__.' → logprob: -10.000351905822754
    6. '___' → logprob: -10.375351905822754
    7. '__["' → logprob: -11.750351905822754
    8. '____' → logprob: -12.750351905822754
    9. '__[' → logprob: -12.750351905822754
    10. ' ==' → logprob: -12.875351905822754

Token 64: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7166650295257568
    2. '[' → logprob: -1.8416650295257568
    3. '["' → logprob: -1.9666650295257568
    4. '<|end|>' → logprob: -2.091665029525757
    5. '['' → logprob: -3.216665029525757
    6. '.' → logprob: -4.466665267944336
    7. '==' → logprob: -4.591665267944336
    8. ' .' → logprob: -4.841665267944336
    9. '[
' → logprob: -5.716665267944336
    10. ' ' → logprob: -6.091665267944336

Token 65: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06504689157009125
    2. ''' → logprob: -2.815046787261963
    3. ' "__' → logprob: -5.815046787261963
    4. ' '__' → logprob: -9.440047264099121
    5. ' "' → logprob: -12.190047264099121
    6. '__' → logprob: -12.565047264099121
    7. '"user' → logprob: -13.315047264099121
    8. '"name' → logprob: -13.565047264099121
    9. '"class' → logprob: -15.815047264099121
    10. ''s' → logprob: -15.940047264099121

Token 66: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004690710920840502
    2. 'name' → logprob: -5.379690647125244
    3. '__' → logprob: -10.254691123962402
    4. 'ma' → logprob: -11.504691123962402
    5. ' "__' → logprob: -11.754691123962402
    6. 'built' → logprob: -12.004691123962402
    7. '_main' → logprob: -12.504691123962402
    8. ' main' → logprob: -13.129691123962402
    9. 'm' → logprob: -13.879691123962402
    10. '"' → logprob: -14.504691123962402

Token 67: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004089085850864649
    2. '__":
' → logprob: -5.504088878631592
    3. '__:' → logprob: -11.87908935546875
    4. '_' → logprob: -13.25408935546875
    5. '__["' → logprob: -14.12908935546875
    6. '_"' → logprob: -14.75408935546875
    7. '__':
' → logprob: -15.50408935546875
    8. '"' → logprob: -15.62908935546875
    9. '__("' → logprob: -15.75408935546875
    10. '__",' → logprob: -15.87908935546875

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03568197786808014
    2. ' Runner' → logprob: -3.535681962966919
    3. '    ' → logprob: -5.910682201385498
    4. '    
' → logprob: -6.535682201385498
    5. '<|end|>' → logprob: -7.035682201385498
    6. ' runner' → logprob: -8.66068172454834
    7. '   ' → logprob: -8.78568172454834
    8. '_runner' → logprob: -9.16068172454834
    9. ' 
' → logprob: -9.53568172454834
    10. ' ' → logprob: -9.91068172454834

Token 69: ' app' (ID: 1053)
  Prédit: ' Runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Runner' → logprob: -0.6326724886894226
    2. 'Runner' → logprob: -0.7576724886894226
    3. ' runner' → logprob: -10.132672309875488
    4. 'runner' → logprob: -11.007672309875488
    5. '_runner' → logprob: -11.757672309875488
    6. 'r' → logprob: -13.007672309875488
    7. '   ' → logprob: -13.382672309875488
    8. ' r' → logprob: -13.632672309875488
    9. ' run' → logprob: -13.757672309875488
    10. 'run' → logprob: -13.882672309875488

Token 70: ' =' (ID: 314)
  Prédit: '.run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -1.06404447555542
    2. '.Run' → logprob: -1.06404447555542
    3. '.' → logprob: -1.31404447555542
    4. ' =' → logprob: -4.06404447555542
    5. ' .' → logprob: -5.31404447555542
    6. '_runner' → logprob: -5.31404447555542
    7. '=' → logprob: -5.31404447555542
    8. '.py' → logprob: -5.93904447555542
    9. '.runner' → logprob: -6.43904447555542
    10. 'Runner' → logprob: -6.56404447555542

Token 71: ' Runner' (ID: 82168)
  Prédit: ' Runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Runner' → logprob: -6.623244553338736e-05
    2. 'Runner' → logprob: -9.625065803527832
    3. ' ' → logprob: -16.75006675720215
    4. ' Runnable' → logprob: -17.37506675720215
    5. ' Run' → logprob: -17.87506675720215
    6. ' Rider' → logprob: -18.00006675720215
    7. '_runner' → logprob: -19.50006675720215
    8. ' runner' → logprob: -19.62506675720215
    9. ' Solver' → logprob: -19.75006675720215
    10. ' Running' → logprob: -20.00006675720215

Token 72: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023258639499545097
    2. '()
' → logprob: -3.773258686065674
    3. '()

' → logprob: -11.648258209228516
    4. '()
' → logprob: -13.148258209228516
    5. '(' → logprob: -13.648258209228516
    6. '()\' → logprob: -14.023258209228516
    7. '().' → logprob: -15.398258209228516
    8. ' ()' → logprob: -15.898258209228516
    9. '()`' → logprob: -16.523258209228516
    10. '(
' → logprob: -16.648258209228516

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09035363048315048
    2. 'app' → logprob: -2.8403537273406982
    3. ' app' → logprob: -4.090353488922119
    4. '	app' → logprob: -5.215353488922119
    5. '_app' → logprob: -6.340353488922119
    6. '(app' → logprob: -6.715353488922119
    7. '.app' → logprob: -7.215353488922119
    8. ' ' → logprob: -7.590353488922119
    9. '<|end|>' → logprob: -7.590353488922119
    10. '
' → logprob: -8.090353965759277

Token 74: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -0.00020354038861114532
    2. ' app' → logprob: -8.500203132629395
    3. '.app' → logprob: -18.12520408630371
    4. '	app' → logprob: -18.25020408630371
    5. '(app' → logprob: -19.25020408630371
    6. 'run' → logprob: -19.50020408630371
    7. 'ap' → logprob: -20.50020408630371
    8. '_app' → logprob: -20.62520408630371
    9. 'appid' → logprob: -20.62520408630371
    10. '   ' → logprob: -20.87520408630371

Token 75: '.run' (ID: 14795)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5759723782539368
    2. '.run' → logprob: -0.8259723782539368
    3. ' .' → logprob: -10.700972557067871
    4. '.
' → logprob: -12.575972557067871
    5. '.mainloop' → logprob: -12.950972557067871
    6. '.Run' → logprob: -13.825972557067871
    7. '.

' → logprob: -13.950972557067871
    8. '<|end|>' → logprob: -14.950972557067871
    9. '.)' → logprob: -15.450972557067871
    10. '.readline' → logprob: -15.700972557067871

Token 76: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5451681974809617e-05
    2. '()
' → logprob: -11.750015258789062
    3. ' ()' → logprob: -12.875015258789062
    4. '(' → logprob: -13.250015258789062
    5. '()

' → logprob: -13.875015258789062
    6. '()`' → logprob: -14.500015258789062
    7. '())' → logprob: -15.375015258789062
    8. '()?' → logprob: -15.375015258789062
    9. '()<' → logprob: -15.500015258789062
    10. '().' → logprob: -15.500015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 74
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 28
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 35.14%
Précision adaptée (1ère position): 37.84%
Précision (top 10): 74.32%
================================================================================
