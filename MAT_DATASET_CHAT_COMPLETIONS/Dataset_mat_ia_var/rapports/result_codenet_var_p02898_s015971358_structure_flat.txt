================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k = map(int, input().split())
h = list(map(int, input().split()))
cnt = 0
i = 0
while i < n:
    if h[i] >= k:
        cnt = cnt + 1
    i = i + 1
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18331654369831085
    2. ' =' → logprob: -1.9333165884017944
    3. ',' → logprob: -3.933316469192505
    4. ' ' → logprob: -6.433316707611084
    5. '+' → logprob: -7.558316707611084
    6. ')' → logprob: -7.808316707611084
    7. '*' → logprob: -9.308316230773926
    8. ' =
' → logprob: -9.308316230773926
    9. ':' → logprob: -9.433316230773926
    10. '```' → logprob: -9.558316230773926

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3693707287311554
    2. ' map' → logprob: -2.244370698928833
    3. ' input' → logprob: -2.494370698928833
    4. ' n' → logprob: -3.244370698928833
    5. 'input' → logprob: -3.369370698928833
    6. '0' → logprob: -3.869370698928833
    7. 'map' → logprob: -3.994370698928833
    8. '10' → logprob: -5.869370937347412
    9. ' int' → logprob: -6.244370937347412
    10. 'int' → logprob: -7.119370937347412

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3105434477329254
    2. '<|end|>' → logprob: -1.685543417930603
    3. '(int' → logprob: -3.1855435371398926
    4. '(lambda' → logprob: -4.185543537139893
    5. '```' → logprob: -5.185543537139893
    6. '<|end|>' → logprob: -5.435543537139893
    7. '(str' → logprob: -5.435543537139893
    8. '[int' → logprob: -6.435543537139893
    9. ')' → logprob: -6.685543537139893
    10. '(len' → logprob: -7.248043537139893

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03236418589949608
    2. ')' → logprob: -4.282364368438721
    3. 'input' → logprob: -4.532364368438721
    4. '(' → logprob: -5.032364368438721
    5. ' input' → logprob: -8.407363891601562
    6. ',input' → logprob: -8.657363891601562
    7. '=input' → logprob: -9.657363891601562
    8. '```' → logprob: -9.782363891601562
    9. '(int' → logprob: -9.907363891601562
    10. '<input' → logprob: -9.907363891601562

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3133276700973511
    2. ' input' → logprob: -1.313327670097351
    3. '(input' → logprob: -9.68832778930664
    4. ')' → logprob: -12.81332778930664
    5. ',input' → logprob: -14.18832778930664
    6. '=input' → logprob: -16.06332778930664
    7. '```' → logprob: -16.18832778930664
    8. '[input' → logprob: -16.56332778930664
    9. '<input' → logprob: -17.06332778930664
    10. '	input' → logprob: -17.81332778930664

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.36879536509513855
    2. '()' → logprob: -1.493795394897461
    3. '(' → logprob: -3.618795394897461
    4. ')' → logprob: -3.868795394897461
    5. '().' → logprob: -4.368795394897461
    6. '`()' → logprob: -5.118795394897461
    7. '`)' → logprob: -6.118795394897461
    8. '```' → logprob: -6.118795394897461
    9. '();)' → logprob: -6.243795394897461
    10. '(""))' → logprob: -6.493795394897461

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015134313143789768
    2. 'strip' → logprob: -6.501513481140137
    3. 'rstrip' → logprob: -11.876513481140137
    4. ' split' → logprob: -12.876513481140137
    5. ')' → logprob: -14.001513481140137
    6. 'read' → logprob: -14.876513481140137
    7. '(split' → logprob: -15.501513481140137
    8. 'spl' → logprob: -15.876513481140137
    9. 'startswith' → logprob: -17.62651252746582
    10. '```' → logprob: -18.12651252746582

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017316220328211784
    2. '))' → logprob: -4.3923163414001465
    3. '())' → logprob: -5.3923163414001465
    4. '()' → logprob: -9.392315864562988
    5. '`)' → logprob: -9.767315864562988
    6. '(' → logprob: -9.892315864562988
    7. ')`' → logprob: -10.642315864562988
    8. '()))' → logprob: -11.642315864562988
    9. ')))' → logprob: -12.767315864562988
    10. ')")' → logprob: -13.142315864562988

Token 11: 'h' (ID: 71)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.132415771484375
    2. '```' → logprob: -1.632415771484375
    3. '\n' → logprob: -2.382415771484375
    4. ''' → logprob: -2.507415771484375
    5. '\' → logprob: -2.882415771484375
    6. '<|end|>' → logprob: -3.257415771484375
    7. '[' → logprob: -3.632415771484375
    8. 'if' → logprob: -4.007415771484375
    9. 'for' → logprob: -4.007415771484375
    10. '*' → logprob: -4.132415771484375

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0501495823264122
    2. 'e' → logprob: -3.42514967918396
    3. '[i' → logprob: -4.425149440765381
    4. '[e' → logprob: -6.425149440765381
    5. ' =' → logprob: -6.675149440765381
    6. 's' → logprob: -7.425149440765381
    7. '=' → logprob: -8.675149917602539
    8. '[]' → logprob: -8.675149917602539
    9. '_' → logprob: -9.050149917602539
    10. 't' → logprob: -9.800149917602539

Token 13: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6082995533943176
    2. ' list' → logprob: -1.4832994937896729
    3. '[int' → logprob: -2.358299493789673
    4. ' []' → logprob: -2.858299493789673
    5. 'list' → logprob: -3.108299493789673
    6. '[' → logprob: -3.983299493789673
    7. '[]' → logprob: -4.733299732208252
    8. '[list' → logprob: -5.983299732208252
    9. '[n' → logprob: -7.108299732208252
    10. ' int' → logprob: -8.358299255371094

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005532435141503811
    2. '(range' → logprob: -5.630532264709473
    3. '(h' → logprob: -6.630532264709473
    4. '((' → logprob: -9.755532264709473
    5. '(n' → logprob: -10.005532264709473
    6. '(map' → logprob: -10.130532264709473
    7. '(open' → logprob: -10.130532264709473
    8. '(np' → logprob: -10.255532264709473
    9. '```' → logprob: -10.255532264709473
    10. '()' → logprob: -10.255532264709473

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005381741560995579
    2. '(' → logprob: -5.2553815841674805
    3. '<int' → logprob: -10.38038158416748
    4. 'int' → logprob: -10.50538158416748
    5. '[int' → logprob: -10.50538158416748
    6. '(input' → logprob: -11.00538158416748
    7. '=int' → logprob: -11.13038158416748
    8. ')' → logprob: -11.38038158416748
    9. '```' → logprob: -12.25538158416748
    10. ',int' → logprob: -12.38038158416748

Token 16: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0508849173784256
    2. ',input' → logprob: -3.425884962081909
    3. ',' → logprob: -4.17588472366333
    4. '(' → logprob: -6.55088472366333
    5. '(int' → logprob: -8.425885200500488
    6. '=input' → logprob: -11.175885200500488
    7. ' ,' → logprob: -11.175885200500488
    8. 'input' → logprob: -11.300885200500488
    9. '(),' → logprob: -11.425885200500488
    10. ',int' → logprob: -11.925885200500488

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04858839511871338
    2. ' input' → logprob: -3.048588275909424
    3. '(input' → logprob: -14.048588752746582
    4. ',input' → logprob: -16.298587799072266
    5. '<input' → logprob: -17.423587799072266
    6. '=input' → logprob: -17.548587799072266
    7. '	input' → logprob: -17.798587799072266
    8. '_input' → logprob: -18.673587799072266
    9. ')' → logprob: -18.673587799072266
    10. '[input' → logprob: -18.673587799072266

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004994294140487909
    2. '()' → logprob: -5.3799943923950195
    3. '()))' → logprob: -8.75499439239502
    4. '(' → logprob: -9.37999439239502
    5. '())' → logprob: -10.00499439239502
    6. '(),' → logprob: -10.50499439239502
    7. ' ().' → logprob: -11.50499439239502
    8. '()));' → logprob: -11.50499439239502
    9. '(.' → logprob: -12.25499439239502
    10. '()-' → logprob: -12.37999439239502

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3856492842023727e-06
    2. 'strip' → logprob: -14.000000953674316
    3. ' split' → logprob: -15.125000953674316
    4. 'rstrip' → logprob: -15.750000953674316
    5. '(split' → logprob: -16.500001907348633
    6. 'spl' → logprob: -17.500001907348633
    7. 's' → logprob: -20.750001907348633
    8. ')' → logprob: -21.000001907348633
    9. 'plit' → logprob: -21.375001907348633
    10. '.split' → logprob: -21.750001907348633

Token 20: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1203124150633812
    2. '))' → logprob: -2.245312452316284
    3. '())' → logprob: -5.120312213897705
    4. '()' → logprob: -7.120312213897705
    5. ')' → logprob: -7.620312213897705
    6. '(' → logprob: -8.745312690734863
    7. '()));' → logprob: -11.745312690734863
    8. '()))
' → logprob: -11.870312690734863
    9. '()))

' → logprob: -12.870312690734863
    10. '()),' → logprob: -13.245312690734863

Token 21: 'cnt' (ID: 33160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.051978588104248
    2. 'd' → logprob: -1.801978588104248
    3. 'h' → logprob: -1.801978588104248
    4. 'count' → logprob: -2.926978588104248
    5. 'result' → logprob: -3.051978588104248
    6. 's' → logprob: -3.426978588104248
    7. 'sorted' → logprob: -3.426978588104248
    8. 'for' → logprob: -3.551978588104248
    9. 'c' → logprob: -3.801978588104248
    10. 'm' → logprob: -4.051978588104248

Token 22: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.749207079410553
    2. '=' → logprob: -1.1242070198059082
    3. '_' → logprob: -2.124207019805908
    4. ' =' → logprob: -2.499207019805908
    5. ' (' → logprob: -8.749207496643066
    6. ' ' → logprob: -8.999207496643066
    7. 's' → logprob: -9.749207496643066
    8. ')' → logprob: -9.874207496643066
    9. ',' → logprob: -9.874207496643066
    10. '_=' → logprob: -9.999207496643066

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10060646384954453
    2. ' ' → logprob: -2.3506064414978027
    3. '1' → logprob: -8.100606918334961
    4. ' h' → logprob: -10.725606918334961
    5. 'h' → logprob: -10.850606918334961
    6. '{}' → logprob: -11.100606918334961
    7. ' {}' → logprob: -11.475606918334961
    8. ' n' → logprob: -11.600606918334961
    9. 'n' → logprob: -12.100606918334961
    10. 'k' → logprob: -13.100606918334961

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004245435353368521
    2. '1' → logprob: -5.504245281219482
    3. 'n' → logprob: -9.12924575805664
    4. 'k' → logprob: -10.87924575805664
    5. '(' → logprob: -11.12924575805664
    6. ' ' → logprob: -11.25424575805664
    7. 'h' → logprob: -12.62924575805664
    8. 'sum' → logprob: -12.62924575805664
    9. '(n' → logprob: -13.37924575805664
    10. '[' → logprob: -14.37924575805664

Token 25: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1763184517621994
    2. '\n' → logprob: -2.426318407058716
    3. ' for' → logprob: -2.801318407058716
    4. '
' → logprob: -4.676318645477295
    5. '```' → logprob: -6.301318645477295
    6. '\' → logprob: -7.301318645477295
    7. '' → logprob: -7.801318645477295
    8. '<|end|>' → logprob: -9.801318168640137
    9. '
' → logprob: -10.051318168640137
    10. ' 
' → logprob: -10.051318168640137

Token 26: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000442351185483858
    2. ' for' → logprob: -8.375442504882812
    3. '\n' → logprob: -8.875442504882812
    4. '
' → logprob: -10.250442504882812
    5. '```' → logprob: -10.500442504882812
    6. 'd' → logprob: -13.625442504882812
    7. 'f' → logprob: -13.625442504882812
    8. '\' → logprob: -13.750442504882812
    9. 'n' → logprob: -14.125442504882812
    10. '`' → logprob: -14.125442504882812

Token 27: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0922802686691284
    2. ' =' → logprob: -1.2172802686691284
    3. '=' → logprob: -1.9672802686691284
    4. ' +=' → logprob: -2.092280387878418
    5. ' ' → logprob: -2.592280387878418
    6. 'f' → logprob: -3.842280387878418
    7. '+=' → logprob: -5.717280387878418
    8. ' +' → logprob: -5.967280387878418
    9. 'n' → logprob: -6.592280387878418
    10. '<|end|>' → logprob: -8.217280387878418

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10052981227636337
    2. '0' → logprob: -2.350529909133911
    3. '1' → logprob: -8.475529670715332
    4. ' n' → logprob: -9.350529670715332
    5. '2' → logprob: -11.475529670715332
    6. 'n' → logprob: -11.850529670715332
    7. ' k' → logprob: -12.350529670715332
    8. 'k' → logprob: -14.163029670715332
    9. ' i' → logprob: -14.288029670715332
    10. ' cnt' → logprob: -14.350529670715332

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00911934208124876
    2. ' ' → logprob: -4.884119510650635
    3. '1' → logprob: -6.634119510650635
    4. 'n' → logprob: -8.884119033813477
    5. ' n' → logprob: -10.134119033813477
    6. '2' → logprob: -11.759119033813477
    7. 'k' → logprob: -12.384119033813477
    8. '-' → logprob: -13.509119033813477
    9. 'i' → logprob: -13.884119033813477
    10. 'len' → logprob: -13.884119033813477

Token 30: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.18310782313346863
    2. 'while' → logprob: -3.058107852935791
    3. '\' → logprob: -3.183107852935791
    4. ' while' → logprob: -3.558107852935791
    5. '
' → logprob: -3.808107852935791
    6. '```' → logprob: -4.808107852935791
    7. ':' → logprob: -4.933107852935791
    8. ' 
' → logprob: -5.808107852935791
    9. ':
' → logprob: -5.933107852935791
    10. '' → logprob: -6.558107852935791

Token 31: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3133043944835663
    2. ' while' → logprob: -1.8133044242858887
    3. '\n' → logprob: -2.8133044242858887
    4. '
' → logprob: -3.6883044242858887
    5. '```' → logprob: -5.313304424285889
    6. ' 
' → logprob: -5.438304424285889
    7. '\' → logprob: -5.438304424285889
    8. '<|end|>' → logprob: -5.938304424285889
    9. ' ' → logprob: -6.688304424285889
    10. '  
' → logprob: -7.438304424285889

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06198583543300629
    2. 'i' → logprob: -2.811985731124878
    3. ' cnt' → logprob: -12.186985969543457
    4. ' n' → logprob: -12.561985969543457
    5. 'cnt' → logprob: -12.686985969543457
    6. 'n' → logprob: -13.311985969543457
    7. ' ' → logprob: -13.436985969543457
    8. ' True' → logprob: -13.561985969543457
    9. '(i' → logprob: -14.436985969543457
    10. 'True' → logprob: -14.936985969543457

Token 33: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.037286076694726944
    2. '<' → logprob: -3.7872860431671143
    3. ' <=' → logprob: -4.287286281585693
    4. '<=' → logprob: -8.787285804748535
    5. ' ' → logprob: -10.412285804748535
    6. '<n' → logprob: -12.537285804748535
    7. ' <
' → logprob: -12.662285804748535
    8. '+' → logprob: -12.787285804748535
    9. '<len' → logprob: -13.162285804748535
    10. ' ≤' → logprob: -14.412285804748535

Token 34: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5235173106193542
    2. ' n' → logprob: -0.8985173106193542
    3. 'k' → logprob: -8.398517608642578
    4. 'len' → logprob: -9.773517608642578
    5. ' k' → logprob: -9.773517608642578
    6. ' ' → logprob: -10.523517608642578
    7. ' len' → logprob: -10.648517608642578
    8. '	n' → logprob: -13.898517608642578
    9. '1' → logprob: -14.398517608642578
    10. '(n' → logprob: -14.836017608642578

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00389484572224319
    2. ' and' → logprob: -5.878894805908203
    3. ':
' → logprob: -7.253894805908203
    4. ' :' → logprob: -8.253894805908203
    5. 'and' → logprob: -9.628894805908203
    6. ' ' → logprob: -10.878894805908203
    7. '   ' → logprob: -11.253894805908203
    8. ':**' → logprob: -12.003894805908203
    9. 'if' → logprob: -12.753894805908203
    10. '[' → logprob: -13.253894805908203

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22203364968299866
    2. ' if' → logprob: -1.9720336198806763
    3. ' ' → logprob: -3.847033739089966
    4. '    ' → logprob: -4.222033500671387
    5. 'if' → logprob: -4.597033500671387
    6. ':' → logprob: -5.722033500671387
    7. ' and' → logprob: -5.722033500671387
    8. '  ' → logprob: -6.847033500671387
    9. '       ' → logprob: -6.972033500671387
    10. '    
' → logprob: -7.222033500671387

Token 37: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10839159041643143
    2. ' if' → logprob: -2.358391523361206
    3. '   ' → logprob: -4.983391761779785
    4. 'j' → logprob: -7.108391761779785
    5. 'max' → logprob: -8.608391761779785
    6. 'm' → logprob: -10.483391761779785
    7. 'h' → logprob: -10.483391761779785
    8. ' j' → logprob: -10.608391761779785
    9. ' ' → logprob: -10.733391761779785
    10. 'current' → logprob: -10.858391761779785

Token 38: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5004120469093323
    2. 'h' → logprob: -1.0004119873046875
    3. ' i' → logprob: -4.1254119873046875
    4. 'i' → logprob: -4.8754119873046875
    5. ' k' → logprob: -6.7504119873046875
    6. 'k' → logprob: -7.5004119873046875
    7. ' abs' → logprob: -8.625411987304688
    8. 'abs' → logprob: -9.375411987304688
    9. ' ' → logprob: -9.750411987304688
    10. ' (' → logprob: -10.250411987304688

Token 39: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005644689663313329
    2. '[' → logprob: -7.5005645751953125
    3. ' [' → logprob: -11.875564575195312
    4. '[h' → logprob: -13.500564575195312
    5. '[j' → logprob: -13.750564575195312
    6. '[
' → logprob: -14.500564575195312
    7. 'i' → logprob: -15.375564575195312
    8. '[k' → logprob: -15.375564575195312
    9. ' ' → logprob: -15.875564575195312
    10. '```' → logprob: -16.500564575195312

Token 40: ']' (ID: 60)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7215715646743774
    2. '>' → logprob: -1.7215715646743774
    3. '>=' → logprob: -1.9715715646743774
    4. ' >' → logprob: -2.971571445465088
    5. ']' → logprob: -3.096571445465088
    6. ' <=' → logprob: -3.346571445465088
    7. ' <' → logprob: -3.971571445465088
    8. ' ==' → logprob: -4.846571445465088
    9. '==' → logprob: -4.846571445465088
    10. '+' → logprob: -4.971571445465088

Token 41: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2926379442214966
    2. '>=' → logprob: -2.167637825012207
    3. ' >' → logprob: -2.917637825012207
    4. '%' → logprob: -3.542637825012207
    5. ' <' → logprob: -3.917637825012207
    6. '>' → logprob: -4.417637825012207
    7. ' %' → logprob: -4.917637825012207
    8. ' <=' → logprob: -5.167637825012207
    9. ' ==' → logprob: -5.292637825012207
    10. '==' → logprob: -6.167637825012207

Token 42: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00023214559769257903
    2. ' k' → logprob: -8.500231742858887
    3. 'h' → logprob: -11.250231742858887
    4. '1' → logprob: -12.500231742858887
    5. ' ' → logprob: -13.000231742858887
    6. '2' → logprob: -13.125231742858887
    7. '   ' → logprob: -13.625231742858887
    8. '0' → logprob: -13.625231742858887
    9. '5' → logprob: -14.000231742858887
    10. '10' → logprob: -14.375231742858887

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013350016670301557
    2. ':
' → logprob: -6.626335144042969
    3. '   ' → logprob: -12.876335144042969
    4. '):' → logprob: -13.251335144042969
    5. ' :' → logprob: -13.251335144042969
    6. '       ' → logprob: -13.376335144042969
    7. ':
' → logprob: -14.876335144042969
    8. '.' → logprob: -15.126335144042969
    9. ',' → logprob: -15.751335144042969
    10. ':i' → logprob: -16.00133514404297

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0221022367477417
    2. 'cnt' → logprob: -4.022102355957031
    3. ' cnt' → logprob: -6.647102355957031
    4. ':' → logprob: -6.647102355957031
    5. '   ' → logprob: -7.397102355957031
    6. ':
' → logprob: -8.647102355957031
    7. 'i' → logprob: -8.897102355957031
    8. '	cnt' → logprob: -9.022102355957031
    9. 'count' → logprob: -9.522102355957031
    10. '      ' → logprob: -9.772102355957031

Token 45: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.007091376464813948
    2. ' cnt' → logprob: -5.257091522216797
    3. '       ' → logprob: -7.132091522216797
    4. '   ' → logprob: -7.257091522216797
    5. 'i' → logprob: -8.507091522216797
    6. 'count' → logprob: -9.632091522216797
    7. '	cnt' → logprob: -9.882091522216797
    8. '           ' → logprob: -12.007091522216797
    9. '
' → logprob: -12.382091522216797
    10. 'break' → logprob: -12.507091522216797

Token 46: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931923627853394
    2. '+=' → logprob: -0.6931923627853394
    3. '=' → logprob: -10.318192481994629
    4. ' =' → logprob: -11.943192481994629
    5. '+' → logprob: -13.318192481994629
    6. ']+=' → logprob: -13.318192481994629
    7. '   ' → logprob: -13.443192481994629
    8. '```' → logprob: -15.568192481994629
    9. ')' → logprob: -15.943192481994629
    10. ' ' → logprob: -16.193191528320312

Token 47: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.5207481384277344
    2. 'cnt' → logprob: -1.3957481384277344
    3. '1' → logprob: -2.8957481384277344
    4. ' ' → logprob: -2.8957481384277344
    5. '0' → logprob: -3.8957481384277344
    6. '+' → logprob: -5.020748138427734
    7. ' i' → logprob: -5.145748138427734
    8. ' max' → logprob: -5.270748138427734
    9. 'max' → logprob: -5.520748138427734
    10. 'i' → logprob: -5.895748138427734

Token 48: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038059741258621216
    2. ' +' → logprob: -3.288059711456299
    3. '1' → logprob: -11.663060188293457
    4. '2' → logprob: -13.038060188293457
    5. '+
' → logprob: -13.288060188293457
    6. ' ' → logprob: -13.663060188293457
    7. '+i' → logprob: -13.663060188293457
    8. '＋' → logprob: -14.788060188293457
    9. '0' → logprob: -14.913060188293457
    10. '+=' → logprob: -15.038060188293457

Token 49: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016075778752565384
    2. ' ' → logprob: -4.141075611114502
    3. 'h' → logprob: -10.39107608795166
    4. ' h' → logprob: -11.89107608795166
    5. '2' → logprob: -13.14107608795166
    6. 'i' → logprob: -14.26607608795166
    7. '0' → logprob: -15.39107608795166
    8. '   ' → logprob: -15.51607608795166
    9. ' i' → logprob: -15.64107608795166
    10. '100' → logprob: -15.89107608795166

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016241880075540394
    2. 'h' → logprob: -9.500162124633789
    3. ' ' → logprob: -9.500162124633789
    4. 'i' → logprob: -12.375162124633789
    5. '2' → logprob: -12.750162124633789
    6. '0' → logprob: -13.500162124633789
    7. 'k' → logprob: -13.875162124633789
    8. '100' → logprob: -14.250162124633789
    9. '(h' → logprob: -14.375162124633789
    10. 'n' → logprob: -14.625162124633789

Token 51: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007454941514879465
    2. '
' → logprob: -5.757454872131348
    3. '\n' → logprob: -5.882454872131348
    4. '    
' → logprob: -7.507454872131348
    5. '   ' → logprob: -7.882454872131348
    6. 'i' → logprob: -8.882454872131348
    7. '[i' → logprob: -9.382454872131348
    8. ' 
' → logprob: -9.507454872131348
    9. '  
' → logprob: -9.632454872131348
    10. ' i' → logprob: -10.257454872131348

Token 52: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39288362860679626
    2. '   ' → logprob: -1.1428836584091187
    3. '       ' → logprob: -6.142883777618408
    4. ' i' → logprob: -6.142883777618408
    5. '```' → logprob: -7.267883777618408
    6. '
' → logprob: -7.392883777618408
    7. 'while' → logprob: -8.76788330078125
    8. 'else' → logprob: -10.01788330078125
    9. '    
' → logprob: -10.14288330078125
    10. '    ' → logprob: -10.76788330078125

Token 53: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6415138244628906
    2. 'i' (adapté à ' i') → logprob: -1.1415138244628906
    3. ' i' → logprob: -1.8915138244628906
    4. '```' → logprob: -6.641513824462891
    5. '
' → logprob: -7.391513824462891
    6. '	i' → logprob: -7.891513824462891
    7. '    
' → logprob: -8.14151382446289
    8. '[i' → logprob: -8.89151382446289
    9. ' ' → logprob: -9.01651382446289
    10. '       ' → logprob: -9.14151382446289

Token 54: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09083740413188934
    2. '+=' → logprob: -2.8408374786376953
    3. ' +=' → logprob: -3.7158374786376953
    4. ' +' → logprob: -5.840837478637695
    5. '++' → logprob: -7.465837478637695
    6. '=' → logprob: -7.465837478637695
    7. '+++' → logprob: -11.090837478637695
    8. ' ' → logprob: -11.215837478637695
    9. '<|end|>' → logprob: -11.340837478637695
    10. '```' → logprob: -11.965837478637695

Token 55: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31334516406059265
    2. ' i' → logprob: -1.313345193862915
    3. '1' → logprob: -9.688344955444336
    4. '+' → logprob: -11.063344955444336
    5. '0' → logprob: -12.813344955444336
    6. ' ' → logprob: -13.063344955444336
    7. 'n' → logprob: -15.188344955444336
    8. '	i' → logprob: -15.688344955444336
    9. ' +' → logprob: -16.563344955444336
    10. '+i' → logprob: -16.563344955444336

Token 56: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00020532844064291567
    2. ' +' → logprob: -8.500205039978027
    3. '+i' → logprob: -14.000205039978027
    4. '1' → logprob: -14.500205039978027
    5. '+
' → logprob: -15.000205039978027
    6. ' plus' → logprob: -16.625205993652344
    7. ' ' → logprob: -17.375205993652344
    8. '++' → logprob: -17.750205993652344
    9. '＋' → logprob: -18.125205993652344
    10. 'i' → logprob: -18.500205993652344

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.500019073486328
    4. '```' → logprob: -17.625019073486328
    5. '  ' → logprob: -19.875019073486328
    6. '１' → logprob: -20.187519073486328
    7. ' ' → logprob: -20.812519073486328
    8. '    ' → logprob: -20.875019073486328
    9. '2' → logprob: -21.125019073486328
    10. '۱' → logprob: -21.562519073486328

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.000003814697266
    4. '```' → logprob: -18.375003814697266
    5. '2' → logprob: -18.625003814697266
    6. '１' → logprob: -19.437503814697266
    7. '  ' → logprob: -19.625003814697266
    8. '3' → logprob: -20.062503814697266
    9. '0' → logprob: -20.375003814697266
    10. '4' → logprob: -20.875003814697266

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6736310124397278
    2. '<|end|>' → logprob: -1.173630952835083
    3. 'print' → logprob: -2.423630952835083
    4. '\n' → logprob: -2.673630952835083
    5. '```' → logprob: -4.173631191253662
    6. '#' → logprob: -5.923631191253662
    7. ')' → logprob: -6.423631191253662
    8. '\' → logprob: -7.548631191253662
    9. ' 
' → logprob: -7.923631191253662
    10. '<|end|>' → logprob: -8.173630714416504

Token 60: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8328845500946045
    2. '
' → logprob: -1.0828845500946045
    3. '<|end|>' → logprob: -1.9578845500946045
    4. '\n' → logprob: -2.7078845500946045
    5. '```' → logprob: -5.082884788513184
    6. '#' → logprob: -5.082884788513184
    7. ' print' → logprob: -7.207884788513184
    8. ' 
' → logprob: -7.457884788513184
    9. '\' → logprob: -7.457884788513184
    10. ')' → logprob: -7.457884788513184

Token 61: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014176084659993649
    2. '(cnt' → logprob: -4.264175891876221
    3. '()' → logprob: -12.264176368713379
    4. '(c' → logprob: -13.514176368713379
    5. '(count' → logprob: -13.639176368713379
    6. '('' → logprob: -13.639176368713379
    7. '((' → logprob: -14.264176368713379
    8. '(`' → logprob: -14.389176368713379
    9. '(C' → logprob: -14.389176368713379
    10. '(
' → logprob: -14.639176368713379

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -16.375
    4. '`)' → logprob: -17.0
    5. '')' → logprob: -17.125
    6. ')`' → logprob: -17.25
    7. ')
' → logprob: -18.0
    8. '）' → logprob: -18.75
    9. '")' → logprob: -18.875
    10. '(' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 36.67%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 90.00%
================================================================================
