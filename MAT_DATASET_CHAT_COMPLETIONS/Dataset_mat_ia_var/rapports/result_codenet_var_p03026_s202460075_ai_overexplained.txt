================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Importation du module sys pour l'entrée standard
from collections import deque  # Importation de deque depuis collections, qui est une file doublement aboutie (FIFO/LIFO)

def solve():
    # Redéfinir 'input' pour lire les entrées ligne par ligne efficacement
    input = sys.stdin.readline
    
    # Lire un nombre entier 'N' qui représente le nombre de sommets/points dans un graphe/arbre
    N = int(input())
    
    # Créer une liste de listes pour représenter la structure des arêtes/connectivités
    # Chaque index de la liste 'Edge' représente un sommet, et sa valeur est la liste des sommets adjacents (voisins)
    Edge = [[] for _ in range(N)]
    
    # Boucle 'N-1' fois car pour un arbre avec N sommets il y a toujours N-1 arêtes
    for _ in range(N-1):
        # Lire deux entiers séparés symbolisant une arête entre deux sommets
        a, b = map(int, input().split())
        # Ajouter b-1 à la liste des voisins de a-1 (décrémenté de 1 car indexation commence à 0 en Python)
        Edge[a-1].append(b-1)
        # Ajouter a-1 à la liste des voisins de b-1, car le graphe est non orienté (arête bidirectionnelle)
        Edge[b-1].append(a-1)
    
    # Lire une liste d'entiers qui représentent des valeurs associées aux sommets (par exemple des couleurs, coûts, etc.)
    C = [int(c) for c in input().split()]
    
    # Trier la liste C en ordre décroissant (reverse=True) pour utiliser les plus grandes valeurs en premier
    C.sort(reverse=True)
    
    # Créer une liste 'Color' de longueur N où chaque élément sera initialisé à None (aucune valeur assignée)
    Color = [None] * N
    
    # Assigner la première valeur (la plus grande dans C) au sommet d'index 0 (la racine de l'arbre)
    Color[0] = C[0]
    
    # Initialiser une file (deque) pour effectuer un parcours BFS (parcours en largeur)
    q = deque()
    # Pour chaque voisin 'e' du sommet racine (sommet 0), ajouter un tuple (e, 0) à la file
    # 'e' est le sommet voisin, 0 est le sommet parent (ici la racine)
    for e in Edge[0]:
        q.append((e, 0))
    
    # Initialiser un accumulateur 'ans' à 0, pour stocker la somme des valeurs affectées exceptée la racine
    ans = 0
    
    # De 1 à N-1 (puisqu'on a déjà assigné la racine), on va parcourir tous les sommets restants
    for i in range(1, N):
        # Extraire le prochain élément dans la file (tuple): (nowN, preN)
        # 'nowN' est le sommet actuel auquel on va assigner une valeur
        # 'preN' est le sommet parent d'où on arrive à 'nowN'
        nowN, preN = q.popleft()
        
        # Ajouter la i-ième valeur de C à 'ans' (accumulateur), car c'est la valeur assignée à ce sommet
        ans += C[i]
        # Assigner C[i] (la prochaine plus grande valeur restante) au sommet current 'nowN'
        Color[nowN] = C[i]
        
        # Pour chaque voisin 'e' du sommet actuel 'nowN'
        for e in Edge[nowN]:
            # Vérifier que 'e' N'EST PAS le parent (pour éviter de revenir en arrière)
            if e != preN:
                # Ajouter le voisin 'e' (futur sommet à traiter) et 'nowN' (le parent) à la file
                q.append((e, nowN))
    
    # Afficher la somme totale des valeurs assignées aux sommets non racines (accumulateur 'ans')
    print(ans)
    # Afficher les valeurs attribuées à chaque sommet, sous forme de chaîne d'entiers séparés par espace
    print(" ".join(map(str, Color)))
    
    # Retourner 0 à la fin de la fonction pour signaler que tout s'est bien passé
    return 0

# Ce bloc vérifie si ce fichier est exécuté comme programme principal (et non importé)
if __name__ == "__main__":
    solve()  # Appeler la fonction principale pour lancer la résolution du problème
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013863995671272278
    2. '\n' → logprob: -5.513864040374756
    3. '<|end|>' → logprob: -5.513864040374756
    4. '\' → logprob: -5.763864040374756
    5. 'import' → logprob: -7.263864040374756
    6. 'newline' → logprob: -7.388864040374756
    7. '```' → logprob: -8.513863563537598
    8. '' → logprob: -8.763863563537598
    9. '<|end|>' → logprob: -8.763863563537598
    10. '[' → logprob: -8.763863563537598

Token 4: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1398053765296936
    2. '.' → logprob: -3.139805316925049
    3. '  ' → logprob: -3.514805316925049
    4. '<|end|>' → logprob: -3.764805316925049
    5. '<|end|>' → logprob: -4.889805316925049
    6. 'import' → logprob: -5.014805316925049
    7. 'space' → logprob: -5.639805316925049
    8. '[' → logprob: -6.014805316925049
    9. ' .' → logprob: -6.139805316925049
    10. '#' → logprob: -6.264805316925049

Token 5: 'ation' (ID: 387)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0058843526057899
    2. ' .' → logprob: -6.005884170532227
    3. '<|end|>' → logprob: -6.630884170532227
    4. ' sys' → logprob: -8.505884170532227
    5. '<|end|>' → logprob: -8.505884170532227
    6. 'ing' → logprob: -8.630884170532227
    7. '.sys' → logprob: -8.630884170532227
    8. ' ' → logprob: -8.755884170532227
    9. '.system' → logprob: -8.880884170532227
    10. ',' → logprob: -8.880884170532227

Token 6: ' du' (ID: 1462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006231890991330147
    2. '<|end|>' → logprob: -6.256231784820557
    3. ',' → logprob: -6.381231784820557
    4. 'import' → logprob: -6.631231784820557
    5. '<|end|>' → logprob: -8.381232261657715
    6. '\' → logprob: -8.506232261657715
    7. '.import' → logprob: -9.131232261657715
    8. '\n' → logprob: -9.131232261657715
    9. '```' → logprob: -9.131232261657715
    10. 'newline' → logprob: -9.631232261657715

Token 7: ' module' (ID: 8827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6415266394615173
    2. ' sys' → logprob: -1.266526699066162
    3. '_' → logprob: -2.266526699066162
    4. ' module' → logprob: -4.141526699066162
    5. 'sys' → logprob: -4.141526699066162
    6. ' system' → logprob: -4.391526699066162
    7. ' système' → logprob: -4.391526699066162
    8. ' space' → logprob: -5.266526699066162
    9. 's' → logprob: -5.641526699066162
    10. 'es' → logprob: -5.641526699066162

Token 8: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11927881836891174
    2. ' ' → logprob: -3.119278907775879
    3. 'import' → logprob: -3.869278907775879
    4. '\' → logprob: -4.369278907775879
    5. '\n' → logprob: -4.494278907775879
    6. ',' → logprob: -4.494278907775879
    7. '' → logprob: -6.119278907775879
    8. '
' → logprob: -6.119278907775879
    9. '<|end|>' → logprob: -6.494278907775879
    10. 'newline' → logprob: -6.869278907775879

Token 9: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5689180493354797
    2. '\n' → logprob: -1.693917989730835
    3. '
' → logprob: -2.068917989730835
    4. 'import' → logprob: -2.693917989730835
    5. ' ' → logprob: -4.193918228149414
    6. 'newline' → logprob: -4.443918228149414
    7. '' → logprob: -4.818918228149414
    8. '\' → logprob: -4.818918228149414
    9. ',' → logprob: -5.818918228149414
    10. '

' → logprob: -6.068918228149414

Token 10: ' l' (ID: 305)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.9011421203613281
    2. ' gérer' → logprob: -1.2761421203613281
    3. ' l' → logprob: -2.401142120361328
    4. ' pouvoir' → logprob: -2.901142120361328
    5. 'l' → logprob: -2.901142120361328
    6. ' permettre' → logprob: -3.276142120361328
    7. ' la' → logprob: -3.651142120361328
    8. ' récupérer' → logprob: -4.901142120361328
    9. ' manipulation' → logprob: -5.026142120361328
    10. ' accéder' → logprob: -5.526142120361328

Token 11: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06841819733381271
    2. 'e' → logprob: -3.693418264389038
    3. ''utilisation' → logprob: -4.318418025970459
    4. ''' → logprob: -5.318418025970459
    5. 'es' → logprob: -5.568418025970459
    6. ''import' → logprob: -5.568418025970459
    7. ''entrée' → logprob: -6.318418025970459
    8. ''accès' → logprob: -6.318418025970459
    9. ''a' → logprob: -6.443418025970459
    10. ''ex' → logprob: -6.818418025970459

Token 12: ' standard' (ID: 7024)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7082884907722473
    2. '.' → logprob: -0.9582884907722473
    3. 'import' → logprob: -2.5832884311676025
    4. '\n' → logprob: -4.208288669586182
    5. ' ' → logprob: -4.458288669586182
    6. '\' → logprob: -5.458288669586182
    7. ';' → logprob: -5.958288669586182
    8. '#' → logprob: -5.958288669586182
    9. 'print' → logprob: -6.458288669586182
    10. '' → logprob: -6.458288669586182

Token 13: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3810717761516571
    2. '.' → logprob: -2.3810718059539795
    3. '
' → logprob: -2.5060718059539795
    4. 'import' → logprob: -2.6310718059539795
    5. '\' → logprob: -3.7560718059539795
    6. ',' → logprob: -3.7560718059539795
    7. '' → logprob: -4.7560715675354
    8. 'newline' → logprob: -5.5060715675354
    9. '

' → logprob: -6.0060715675354
    10. ' ' → logprob: -6.6310715675354

Token 14: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.35667306184768677
    2. '
' → logprob: -2.606673002243042
    3. '\n' → logprob: -2.606673002243042
    4. ',' → logprob: -2.981673002243042
    5. 'sys' → logprob: -3.731673002243042
    6. '#' → logprob: -3.981673002243042
    7. 'input' → logprob: -3.981673002243042
    8. '

' → logprob: -4.856673240661621
    9. 'print' → logprob: -4.856673240661621
    10. '' → logprob: -5.231673240661621

Token 15: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5520939826965332
    2. ' sys' → logprob: -1.5520939826965332
    3. ' io' → logprob: -2.427093982696533
    4. ' collections' → logprob: -2.552093982696533
    5. ' ' → logprob: -4.677093982696533
    6. ' pathlib' → logprob: -4.927093982696533
    7. 'os' → logprob: -5.302093982696533
    8. 'collections' → logprob: -5.552093982696533
    9. ' argparse' → logprob: -5.802093982696533
    10. ' typing' → logprob: -6.052093982696533

Token 16: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10021431744098663
    2. ' import' → logprob: -2.3502142429351807
    3. '	import' → logprob: -13.475214004516602
    4. '_import' → logprob: -13.725214004516602
    5. ' ' → logprob: -13.850214004516602
    6. 'abc' → logprob: -13.850214004516602
    7. '```' → logprob: -14.100214004516602
    8. '.' → logprob: -15.100214004516602
    9. '-import' → logprob: -15.350214004516602
    10. 'importe' → logprob: -15.475214004516602

Token 17: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.5396493673324585
    2. ' defaultdict' → logprob: -0.9146493673324585
    3. 'deque' → logprob: -4.289649486541748
    4. ' abc' → logprob: -6.539649486541748
    5. ' import' → logprob: -7.664649486541748
    6. ' named' → logprob: -8.16464900970459
    7. ' collections' → logprob: -8.53964900970459
    8. ' Counter' → logprob: -8.66464900970459
    9. ' counter' → logprob: -11.03964900970459
    10. 'abc' → logprob: -11.16464900970459

Token 18: ' ' (ID: 220)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.38557901978492737
    2. 'import' → logprob: -1.885578989982605
    3. '
' → logprob: -2.7605791091918945
    4. ' 

' → logprob: -3.2605791091918945
    5. '  

' → logprob: -4.0105791091918945
    6. '<|end|>' → logprob: -4.5105791091918945
    7. '\n' → logprob: -4.7605791091918945
    8. ' ' → logprob: -5.1355791091918945
    9. '```' → logprob: -5.1355791091918945
    10. '<|end|>' → logprob: -5.5105791091918945

Token 19: ' #' (ID: 1069)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6050131320953369
    2. 'import' → logprob: -1.855013132095337
    3. ' 

' → logprob: -2.230013132095337
    4. '
' → logprob: -2.355013132095337
    5. '  

' → logprob: -3.480013132095337
    6. ' ' → logprob: -3.730013132095337
    7. '<|end|>' → logprob: -4.730012893676758
    8. '  
  
' → logprob: -5.355012893676758
    9. '\n' → logprob: -5.730012893676758
    10. '


' → logprob: -6.105012893676758

Token 20: ' Import' (ID: 19998)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.17435841262340546
    2. ' Import' → logprob: -3.049358367919922
    3. ' collections' → logprob: -3.299358367919922
    4. 'Import' → logprob: -3.674358367919922
    5. ' collection' → logprob: -4.299358367919922
    6. 'import' → logprob: -4.299358367919922
    7. ' ' → logprob: -5.924358367919922
    8. ' file' → logprob: -6.049358367919922
    9. 'Collection' → logprob: -6.049358367919922
    10. ' ' → logprob: -6.174358367919922

Token 21: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.036686044186353683
    2. ' ' → logprob: -4.036685943603516
    3. 'er' → logprob: -4.786685943603516
    4. ' collections' → logprob: -5.286685943603516
    5. 'collections' → logprob: -6.911685943603516
    6. ' de' → logprob: -6.911685943603516
    7. 'from' → logprob: -7.161685943603516
    8. ' itertools' → logprob: -7.536685943603516
    9. ' from' → logprob: -8.661685943603516
    10. 'import' → logprob: -9.036685943603516

Token 22: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5142865180969238
    2. ' des' → logprob: -1.5142865180969238
    3. ' d' → logprob: -2.639286518096924
    4. ' de' → logprob: -3.014286518096924
    5. ' collections' → logprob: -3.639286518096924
    6. ' import' → logprob: -5.014286518096924
    7. ' from' → logprob: -5.014286518096924
    8. ' ' → logprob: -5.639286518096924
    9. ' du' → logprob: -5.764286518096924
    10. ' defaultdict' → logprob: -5.764286518096924

Token 23: ' deque' (ID: 90347)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.017367534339427948
    2. 'collections' → logprob: -4.517367362976074
    3. ' ' → logprob: -5.267367362976074
    4. ' queue' → logprob: -7.517367362976074
    5. ' collection' → logprob: -8.017367362976074
    6. '```' → logprob: -9.642367362976074
    7. '_' → logprob: -10.017367362976074
    8. ' sys' → logprob: -10.642367362976074
    9. ' space' → logprob: -11.142367362976074
    10. ' ' → logprob: -11.392367362976074

Token 24: ' depuis' (ID: 16277)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.3488147556781769
    2. ' collections' → logprob: -1.2238147258758545
    3. ' la' → logprob: -8.973814964294434
    4. ' ' → logprob: -9.473814964294434
    5. 'la' → logprob: -9.598814964294434
    6. '```' → logprob: -10.223814964294434
    7. '.collections' → logprob: -11.473814964294434
    8. 'collection' → logprob: -11.723814964294434
    9. 'col' → logprob: -11.848814964294434
    10. ' ' → logprob: -11.973814964294434

Token 26: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.08408069610595703
    2. '
' → logprob: -3.084080696105957
    3. 'import' → logprob: -4.209080696105957
    4. ' 

' → logprob: -5.084080696105957
    5. '  

' → logprob: -5.709080696105957
    6. '\n' → logprob: -5.834080696105957
    7. '


' → logprob: -6.084080696105957
    8. '```' → logprob: -6.834080696105957
    9. '<|end|>' → logprob: -6.959080696105957
    10. '



' → logprob: -7.459080696105957

Token 27: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -1.0785185098648071
    2. ' une' → logprob: -1.3285185098648071
    3. ' ' → logprob: -1.7035185098648071
    4. ' which' → logprob: -3.3285183906555176
    5. ' pour' → logprob: -3.4535183906555176
    6. ' un' → logprob: -3.7035183906555176
    7. 'qui' → logprob: -3.8285183906555176
    8. ' utilisé' → logprob: -3.8285183906555176
    9. ' utile' → logprob: -4.453518390655518
    10. ' permettant' → logprob: -4.953518390655518

Token 28: ' est' (ID: 893)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -1.4073299169540405
    2. ' est' → logprob: -1.5323299169540405
    3. ' facilite' → logprob: -2.03233003616333
    4. 'est' → logprob: -2.15733003616333
    5. ' sera' → logprob: -2.53233003616333
    6. 's' → logprob: -2.78233003616333
    7. 'fac' → logprob: -3.40733003616333
    8. 'sera' → logprob: -3.90733003616333
    9. ' fournit' → logprob: -4.28233003616333
    10. ' sert' → logprob: -4.40733003616333

Token 29: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.22871236503124237
    2. 'une' → logprob: -2.478712320327759
    3. ' utile' → logprob: -2.603712320327759
    4. ' utilisé' → logprob: -4.228712558746338
    5. 'util' → logprob: -4.353712558746338
    6. ' utilisée' → logprob: -5.228712558746338
    7. ' un' → logprob: -5.353712558746338
    8. 'utile' → logprob: -5.978712558746338
    9. 'un' → logprob: -6.853712558746338
    10. ' adaptée' → logprob: -7.103712558746338

Token 30: ' file' (ID: 1974)
  Prédit: 'structure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'structure' → logprob: -0.11567283421754837
    2. ' structure' → logprob: -2.2406728267669678
    3. 'file' → logprob: -6.240673065185547
    4. ' file' → logprob: -7.865673065185547
    5. 'struct' → logprob: -9.115673065185547
    6. 'str' → logprob: -9.365673065185547
    7. 'struktur' → logprob: -9.615673065185547
    8. 'structures' → logprob: -9.865673065185547
    9. 'data' → logprob: -9.990673065185547
    10. 'liste' → logprob: -10.490673065185547

Token 31: ' double' (ID: 3503)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4310879409313202
    2. 'd' → logprob: -2.3060879707336426
    3. 'from' → logprob: -3.0560879707336426
    4. ' vide' → logprob: -3.1810879707336426
    5. 'deque' → logprob: -3.1810879707336426
    6. 'vide' → logprob: -3.3060879707336426
    7. ' ' → logprob: -3.8060879707336426
    8. '.' → logprob: -4.431087970733643
    9. 's' → logprob: -4.681087970733643
    10. '<|end|>' → logprob: -5.056087970733643

Token 32: 'ment' (ID: 508)
  Prédit: '-ended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-ended' → logprob: -0.0037466296926140785
    2. '-' → logprob: -6.378746509552002
    3. ' ended' → logprob: -6.753746509552002
    4. 'ended' → logprob: -7.253746509552002
    5. '```' → logprob: -9.25374698638916
    6. 'queue' → logprob: -11.37874698638916
    7. 'file' → logprob: -11.75374698638916
    8. '-file' → logprob: -11.87874698638916
    9. 'import' → logprob: -12.00374698638916
    10. '-end' → logprob: -12.25374698638916

Token 33: ' about' (ID: 1078)
  Prédit: '-ended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-ended' → logprob: -0.16617046296596527
    2. ' ended' → logprob: -2.291170358657837
    3. 'ended' → logprob: -3.041170358657837
    4. 'linked' → logprob: -7.166170597076416
    5. '-' → logprob: -7.416170597076416
    6. ' liée' → logprob: -7.541170597076416
    7. 'termin' → logprob: -7.666170597076416
    8. ' linked' → logprob: -7.791170597076416
    9. '-linked' → logprob: -8.041170120239258
    10. 'terminated' → logprob: -9.041170120239258

Token 34: 'ie' (ID: 396)
  Prédit: '-ended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-ended' → logprob: -0.006047654896974564
    2. 'ended' → logprob: -5.50604772567749
    3. ' ended' → logprob: -7.25604772567749
    4. '-' → logprob: -7.75604772567749
    5. 't' → logprob: -8.506047248840332
    6. 'queue' → logprob: -9.506047248840332
    7. 'Ended' → logprob: -9.631047248840332
    8. 'e' → logprob: -9.756047248840332
    9. '-file' → logprob: -9.756047248840332
    10. 'file' → logprob: -10.006047248840332

Token 35: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6240862607955933
    2. ' 

' → logprob: -1.7490862607955933
    3. '

' → logprob: -1.7490862607955933
    4. ' ' → logprob: -1.9990862607955933
    5. 's' → logprob: -1.9990862607955933
    6. '' → logprob: -3.624086380004883
    7. '.' → logprob: -4.124086380004883
    8. '  

' → logprob: -4.124086380004883
    9. 'import' → logprob: -4.249086380004883
    10. ' 
' → logprob: -4.249086380004883

Token 36: 'FIFO' (ID: 196867)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001953371800482273
    2. ' )' → logprob: -7.876953601837158
    3. '),' → logprob: -8.501953125
    4. ' pour' → logprob: -8.626953125
    5. 'FIFO' → logprob: -9.001953125
    6. 'que' → logprob: -9.126953125
    7. 'la' → logprob: -9.251953125
    8. ').' → logprob: -9.251953125
    9. ' file' → logprob: -9.251953125
    10. 'pour' → logprob: -9.376953125

Token 37: '/L' (ID: 26049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002415014896541834
    2. 'queue' → logprob: -6.752415180206299
    3. ' queue' → logprob: -8.00241470336914
    4. ').' → logprob: -8.37741470336914
    5. 'et' → logprob: -9.25241470336914
    6. ',' → logprob: -9.25241470336914
    7. 'que' → logprob: -9.37741470336914
    8. ' et' → logprob: -9.37741470336914
    9. ' )' → logprob: -9.87741470336914
    10. 'Queue' → logprob: -9.87741470336914

Token 38: 'IFO' (ID: 79012)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.7499608993530273
    2. 'IFO' → logprob: -0.7499608993530273
    3. 'ifo' → logprob: -4.499960899353027
    4. 'a' → logprob: -4.499960899353027
    5. 'A' → logprob: -4.874960899353027
    6. 'O' → logprob: -4.999960899353027
    7. 'i' → logprob: -5.249960899353027
    8. '```' → logprob: -5.374960899353027
    9. 'E' → logprob: -6.624960899353027
    10. 'à' → logprob: -6.999960899353027

Token 39: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008606038754805923
    2. ').' → logprob: -8.250860214233398
    3. ' queue' → logprob: -8.750860214233398
    4. ' queues' → logprob: -8.875860214233398
    5. ' )' → logprob: -9.500860214233398
    6. 'queue' → logprob: -9.750860214233398
    7. ',' → logprob: -10.750860214233398
    8. '),' → logprob: -10.750860214233398
    9. '```' → logprob: -10.750860214233398
    10. ')
' → logprob: -11.000860214233398

Token 40: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9364569187164307
    2. '
' → logprob: -1.3114569187164307
    3. 'class' → logprob: -1.4364569187164307
    4. 'def' → logprob: -2.6864569187164307
    5. '#' → logprob: -4.561456680297852
    6. 'import' → logprob: -5.061456680297852
    7. '\n' → logprob: -5.811456680297852
    8. '```' → logprob: -5.811456680297852
    9. '\' → logprob: -6.061456680297852
    10. '
' → logprob: -6.811456680297852

Token 41: ' solve' (ID: 17722)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.7232516407966614
    2. ' ' → logprob: -1.9732515811920166
    3. ' main' → logprob: -2.2232515811920166
    4. ' ' → logprob: -2.5982515811920166
    5. ' process' → logprob: -3.0982515811920166
    6. ' breadth' → logprob: -3.2232515811920166
    7. ' a' → logprob: -4.223251819610596
    8. ' solution' → logprob: -4.598251819610596
    9. ' BFS' → logprob: -4.723251819610596
    10. ' solve' → logprob: -4.848251819610596

Token 42: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07918807864189148
    2. '():' → logprob: -2.704188108444214
    3. '_' → logprob: -4.829187870025635
    4. '()' → logprob: -7.954187870025635
    5. ' (' → logprob: -8.204188346862793
    6. '```' → logprob: -9.204188346862793
    7. ':' → logprob: -9.454188346862793
    8. '(
' → logprob: -9.954188346862793
    9. ' ():' → logprob: -10.579188346862793
    10. '("""' → logprob: -10.954188346862793

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35466355085372925
    2. '\' → logprob: -2.479663610458374
    3. '    
' → logprob: -2.854663610458374
    4. '```' → logprob: -3.354663610458374
    5. ' ' → logprob: -3.604663610458374
    6. '\n' → logprob: -3.729663610458374
    7. '(' → logprob: -4.354663372039795
    8. ' 
' → logprob: -4.354663372039795
    9. '<|end|>' → logprob: -4.354663372039795
    10. '
' → logprob: -4.979663372039795

Token 44: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0370185375213623
    2. 'n' → logprob: -1.2870185375213623
    3. '   ' → logprob: -1.7870185375213623
    4. ' input' → logprob: -2.0370185375213623
    5. 'input' → logprob: -2.9120185375213623
    6. ' import' → logprob: -5.287018775939941
    7. 'import' → logprob: -5.912018775939941
    8. ' lines' → logprob: -6.287018775939941
    9. 't' → logprob: -6.412018775939941
    10. ' N' → logprob: -6.662018775939941

Token 45: ' Red' (ID: 5952)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7224324941635132
    2. ' input' → logprob: -1.0974324941635132
    3. 'input' → logprob: -2.9724326133728027
    4. 'import' → logprob: -3.2224326133728027
    5. ' import' → logprob: -3.2224326133728027
    6. ' sys' → logprob: -3.8474326133728027
    7. 'n' → logprob: -4.972432613372803
    8. ' n' → logprob: -5.097432613372803
    9. '```' → logprob: -5.847432613372803
    10. ' line' → logprob: -6.347432613372803

Token 46: 'é' (ID: 377)
  Prédit: 'irect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'irect' → logprob: -1.132198691368103
    2. 'irection' → logprob: -1.882198691368103
    3. '   ' → logprob: -2.1321988105773926
    4. 'ir' → logprob: -2.3821988105773926
    5. 'e' → logprob: -3.0071988105773926
    6. 'irected' → logprob: -3.1321988105773926
    7. '=sys' → logprob: -3.8821988105773926
    8. 'uction' → logprob: -4.007198810577393
    9. '=' → logprob: -4.132198810577393
    10. 'ef' → logprob: -4.257198810577393

Token 47: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.038584958761930466
    2. 'é' → logprob: -3.5385849475860596
    3. '   ' → logprob: -5.788585186004639
    4. 'f' → logprob: -6.288585186004639
    5. ' finition' → logprob: -7.538585186004639
    6. 'ef' → logprob: -7.663585186004639
    7. 'éf' → logprob: -7.663585186004639
    8. '```' → logprob: -8.03858470916748
    9. '_fin' → logprob: -8.53858470916748
    10. '  ' → logprob: -8.91358470916748

Token 48: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.230036199092865
    2. 'ition' → logprob: -1.7300362586975098
    3. 'inition' → logprob: -4.73003625869751
    4. 'e' → logprob: -5.23003625869751
    5. '   ' → logprob: -5.23003625869751
    6. 'inir' → logprob: -5.85503625869751
    7. 'def' → logprob: -6.48003625869751
    8. 'fin' → logprob: -7.73003625869751
    9. '```' → logprob: -7.73003625869751
    10. 'issez' → logprob: -7.85503625869751

Token 49: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7712453007698059
    2. ' la' → logprob: -1.2712452411651611
    3. ' l' → logprob: -2.146245241165161
    4. ' ' → logprob: -3.146245241165161
    5. ' le' → logprob: -4.02124547958374
    6. '()' → logprob: -4.64624547958374
    7. ' sys' → logprob: -4.64624547958374
    8. 'input' → logprob: -4.89624547958374
    9. 'def' → logprob: -5.14624547958374
    10. ' input' → logprob: -5.14624547958374

Token 50: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005786227528005838
    2. ' input' → logprob: -5.255786418914795
    3. 'sys' → logprob: -8.255785942077637
    4. '   ' → logprob: -8.380785942077637
    5. 'stdin' → logprob: -10.505785942077637
    6. ' sys' → logprob: -11.380785942077637
    7. ' ' → logprob: -12.255785942077637
    8. 'print' → logprob: -12.755785942077637
    9. ''' → logprob: -13.005785942077637
    10. '=input' → logprob: -13.130785942077637

Token 51: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1471128612756729
    2. ' =' → logprob: -2.0221128463745117
    3. ' ='' → logprob: -6.272112846374512
    4. '()' → logprob: -6.647112846374512
    5. '=' → logprob: -7.022112846374512
    6. '='' → logprob: -8.897112846374512
    7. ')'' → logprob: -9.897112846374512
    8. '=lambda' → logprob: -10.272112846374512
    9. ''''' → logprob: -10.272112846374512
    10. ''=' → logprob: -10.647112846374512

Token 52: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011201790533959866
    2. '=' → logprob: -4.511201858520508
    3. '   ' → logprob: -9.886201858520508
    4. '=input' → logprob: -10.261201858520508
    5. '()' → logprob: -10.886201858520508
    6. ' ' → logprob: -10.886201858520508
    7. '    ' → logprob: -11.261201858520508
    8. 'input' → logprob: -12.011201858520508
    9. '_input' → logprob: -12.511201858520508
    10. ' =
' → logprob: -13.386201858520508

Token 53: ' lire' (ID: 46082)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0564456433057785
    2. ' input' → logprob: -3.181445598602295
    3. 'sys' → logprob: -4.431445598602295
    4. 'input' → logprob: -6.806445598602295
    5. ' lambda' → logprob: -8.431446075439453
    6. 'lambda' → logprob: -10.181446075439453
    7. '=sys' → logprob: -10.181446075439453
    8. '   ' → logprob: -10.931446075439453
    9. ' ' → logprob: -11.181446075439453
    10. ' raw' → logprob: -12.306446075439453

Token 54: ' les' (ID: 1341)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7349364161491394
    2. '()' → logprob: -0.8599364161491394
    3. '=sys' → logprob: -2.484936475753784
    4. 'sys' → logprob: -5.109936237335205
    5. ' sys' → logprob: -5.609936237335205
    6. '=' → logprob: -6.234936237335205
    7. '=lambda' → logprob: -7.859936237335205
    8. 'input' → logprob: -8.109936714172363
    9. '().' → logprob: -8.359936714172363
    10. '(sys' → logprob: -8.484936714172363

Token 55: ' entr' (ID: 7072)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.9503659605979919
    2. ' lignes' → logprob: -1.0753660202026367
    3. 'l' → logprob: -2.3253660202026367
    4. ' lines' → logprob: -3.5753660202026367
    5. 'lines' → logprob: -3.8253660202026367
    6. ' sys' → logprob: -4.075366020202637
    7. '()' → logprob: -4.075366020202637
    8. ' data' → logprob: -4.450366020202637
    9. 'stdin' → logprob: -4.450366020202637
    10. 'sys' → logprob: -4.700366020202637

Token 56: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0002703953068703413
    2. 'ée' → logprob: -8.75027084350586
    3. 'ees' → logprob: -9.12527084350586
    4. 'é' → logprob: -13.12527084350586
    5. 'es' → logprob: -15.37527084350586
    6. 'és' → logprob: -15.62527084350586
    7. '```' → logprob: -15.75027084350586
    8. 'ies' → logprob: -16.00027084350586
    9. 'er' → logprob: -16.00027084350586
    10. 'e' → logprob: -16.75027084350586

Token 57: ' ligne' (ID: 19583)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28604406118392944
    2. '=' → logprob: -1.4110441207885742
    3. '()' → logprob: -6.036044120788574
    4. '=sys' → logprob: -6.661044120788574
    5. '   ' → logprob: -7.911044120788574
    6. ' ' → logprob: -8.411044120788574
    7. '=input' → logprob: -8.536044120788574
    8. '_' → logprob: -9.411044120788574
    9. 'data' → logprob: -9.661044120788574
    10. '=lambda' → logprob: -9.661044120788574

Token 58: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1365503072738647
    2. ' =' → logprob: -1.7615503072738647
    3. '()' → logprob: -1.8865503072738647
    4. 'es' → logprob: -2.2615504264831543
    5. '=sys' → logprob: -2.2615504264831543
    6. '=' → logprob: -2.7615504264831543
    7. '=input' → logprob: -4.011550426483154
    8. 'par' → logprob: -4.261550426483154
    9. 'e' → logprob: -4.386550426483154
    10. ' ' → logprob: -5.261550426483154

Token 59: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.3907355070114136
    2. 'pass' → logprob: -2.015735626220703
    3. 'pend' → logprob: -3.390735626220703
    4. 'l' → logprob: -3.390735626220703
    5. 'entrée' → logprob: -3.890735626220703
    6. 'part' → logprob: -4.515735626220703
    7. 'line' → logprob: -4.640735626220703
    8. 'input' → logprob: -4.765735626220703
    9. 'put' → logprob: -5.265735626220703
    10. '```' → logprob: -5.515735626220703

Token 60: ' efficacement' (ID: 155449)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3058466911315918
    2. '   ' → logprob: -1.8058466911315918
    3. '=' → logprob: -3.055846691131592
    4. 'input' → logprob: -4.180846691131592
    5. '():' → logprob: -4.680846691131592
    6. '=input' → logprob: -4.805846691131592
    7. ':' → logprob: -4.930846691131592
    8. '()' → logprob: -5.180846691131592
    9. ' ' → logprob: -5.555846691131592
    10. ' input' → logprob: -7.430846691131592

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18331116437911987
    2. ' =' → logprob: -2.3083112239837646
    3. 'input' → logprob: -4.0583109855651855
    4. ':' → logprob: -4.4333109855651855
    5. '():' → logprob: -4.4333109855651855
    6. '=' → logprob: -4.5583109855651855
    7. '()' → logprob: -5.5583109855651855
    8. ' ' → logprob: -5.8083109855651855
    9. 'import' → logprob: -6.0583109855651855
    10. '
' → logprob: -6.0583109855651855

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016683118417859077
    2. ' =' → logprob: -4.766683101654053
    3. 'input' → logprob: -5.391683101654053
    4. '=' → logprob: -6.641683101654053
    5. ' input' → logprob: -7.141683101654053
    6. '=input' → logprob: -7.266683101654053
    7. ' ' → logprob: -8.891683578491211
    8. '()' → logprob: -9.141683578491211
    9. ':' → logprob: -9.266683578491211
    10. '_input' → logprob: -9.516683578491211

Token 63: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.228361576795578
    2. 'input' (adapté à ' input') → logprob: -1.6033616065979004
    3. '   ' → logprob: -5.9783616065979
    4. 'import' → logprob: -7.9783616065979
    5. ' import' → logprob: -10.228361129760742
    6. ' sys' → logprob: -11.353361129760742
    7. '	input' → logprob: -11.853361129760742
    8. '=input' → logprob: -12.853361129760742
    9. 'sys' → logprob: -13.103361129760742
    10. '_input' → logprob: -13.353361129760742

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2529442310333252
    2. '=' → logprob: -1.5029442310333252
    3. '()' → logprob: -7.127943992614746
    4. '_' → logprob: -9.752943992614746
    5. ' ' → logprob: -10.377943992614746
    6. '_line' → logprob: -10.502943992614746
    7. '(' → logprob: -11.002943992614746
    8. '=sys' → logprob: -11.002943992614746
    9. 's' → logprob: -11.502943992614746
    10. ')' → logprob: -12.127943992614746

Token 65: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0019301822176203132
    2. ' sys' → logprob: -6.251930236816406
    3. '=sys' → logprob: -14.126930236816406
    4. '	sys' → logprob: -14.626930236816406
    5. 'lambda' → logprob: -15.876930236816406
    6. 'input' → logprob: -16.251930236816406
    7. '(sys' → logprob: -16.376930236816406
    8. '_sys' → logprob: -19.251930236816406
    9. 'stdin' → logprob: -19.376930236816406
    10. 'deque' → logprob: -20.001930236816406

Token 66: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.5107177862082608e-05
    2. '.stdout' → logprob: -11.375024795532227
    3. '.' → logprob: -11.500024795532227
    4. '.readline' → logprob: -12.875024795532227
    5. '.std' → logprob: -14.500024795532227
    6. ' .' → logprob: -16.000024795532227
    7. '.argv' → logprob: -16.375024795532227
    8. 'stdin' → logprob: -16.375024795532227
    9. '._' → logprob: -17.625024795532227
    10. '.modules' → logprob: -18.000024795532227

Token 67: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.23917081207037e-05
    2. '.' → logprob: -10.250041961669922
    3. '.read' → logprob: -12.000041961669922
    4. '.readlines' → logprob: -14.125041961669922
    5. '.buffer' → logprob: -15.750041961669922
    6. ' readline' → logprob: -17.750041961669922
    7. ' .' → logprob: -19.000041961669922
    8. '.re' → logprob: -20.250041961669922
    9. '.stdin' → logprob: -21.000041961669922
    10. 'read' → logprob: -21.125041961669922

Token 68: '
    
' (ID: 15698)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0043108342215418816
    2. '()
' → logprob: -6.129310607910156
    3. '   ' → logprob: -7.504310607910156
    4. '
' → logprob: -7.629310607910156
    5. '().' → logprob: -7.629310607910156
    6. '(' → logprob: -8.254310607910156
    7. ' ()' → logprob: -9.004310607910156
    8. '()\' → logprob: -9.879310607910156
    9. ' ' → logprob: -10.254310607910156
    10. ')' → logprob: -10.504310607910156

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01917911507189274
    2. 'n' → logprob: -4.019179344177246
    3. '    
' → logprob: -7.519179344177246
    4. ' n' → logprob: -8.394179344177246
    5. 's' → logprob: -9.269179344177246
    6. '()' → logprob: -10.269179344177246
    7. 'a' → logprob: -11.019179344177246
    8. 'x' → logprob: -11.769179344177246
    9. '
' → logprob: -11.769179344177246
    10. '  ' → logprob: -12.019179344177246

Token 70: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18916568160057068
    2. '   ' → logprob: -2.5641655921936035
    3. 't' → logprob: -2.6891655921936035
    4. '#' (adapté à ' #') → logprob: -4.5641655921936035
    5. ' n' → logprob: -4.8141655921936035
    6. 'T' → logprob: -5.8141655921936035
    7. 'N' → logprob: -6.1891655921936035
    8. ' t' → logprob: -6.5641655921936035
    9. 'nb' → logprob: -7.1891655921936035
    10. 'q' → logprob: -7.9391655921936035

Token 71: ' Lire' (ID: 57624)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7091578245162964
    2. 'n' → logprob: -0.8341578245162964
    3. '   ' → logprob: -3.834157943725586
    4. 't' → logprob: -4.084157943725586
    5. '#' → logprob: -4.334157943725586
    6. ' t' → logprob: -4.834157943725586
    7. 'nombre' → logprob: -6.459157943725586
    8. ' #' → logprob: -6.584157943725586
    9. ' nombre' → logprob: -6.709157943725586
    10. ' N' → logprob: -6.834157943725586

Token 72: ' un' (ID: 537)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014334988372866064
    2. ' ()' → logprob: -9.750143051147461
    3. '().' → logprob: -11.125143051147461
    4. '())' → logprob: -11.375143051147461
    5. '   ' → logprob: -11.625143051147461
    6. '(' → logprob: -11.750143051147461
    7. 's' → logprob: -12.000143051147461
    8. 'n' → logprob: -12.125143051147461
    9. ' la' → logprob: -12.375143051147461
    10. 'int' → logprob: -12.375143051147461

Token 73: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01375935971736908
    2. '()' → logprob: -4.763759136199951
    3. 'int' → logprob: -6.638759136199951
    4. 'ent' → logprob: -6.763759136199951
    5. ' entier' → logprob: -7.013759136199951
    6. 'n' → logprob: -7.263759136199951
    7. 'nombre' → logprob: -8.01375961303711
    8. ' nombre' → logprob: -9.26375961303711
    9. 't' → logprob: -9.63875961303711
    10. 'a' → logprob: -9.63875961303711

Token 74: ' entier' (ID: 80473)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07170282304286957
    2. 'n' → logprob: -3.696702718734741
    3. '=int' → logprob: -4.32170295715332
    4. ' =' → logprob: -4.44670295715332
    5. 'int' → logprob: -5.57170295715332
    6. 's' → logprob: -5.69670295715332
    7. '(' → logprob: -6.07170295715332
    8. '_n' → logprob: -6.07170295715332
    9. '(int' → logprob: -6.57170295715332
    10. '_' → logprob: -7.07170295715332

Token 75: ' '' (ID: 461)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003044802288059145
    2. '(' → logprob: -8.500304222106934
    3. '(n' → logprob: -11.000304222106934
    4. '())' → logprob: -11.125304222106934
    5. ' ()' → logprob: -11.250304222106934
    6. '()\' → logprob: -11.375304222106934
    7. '();' → logprob: -11.750304222106934
    8. '().' → logprob: -12.250304222106934
    9. '   ' → logprob: -12.250304222106934
    10. '(),' → logprob: -12.500304222106934

Token 76: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05128489434719086
    2. 't' → logprob: -3.1762847900390625
    3. 'T' → logprob: -5.4262847900390625
    4. ' n' → logprob: -6.0512847900390625
    5. 'N' → logprob: -7.4262847900390625
    6. ' t' → logprob: -7.8012847900390625
    7. ' T' → logprob: -8.676284790039062
    8. ''' → logprob: -8.676284790039062
    9. '(n' → logprob: -10.176284790039062
    10. ')' → logprob: -10.301284790039062

Token 77: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8533101677894592
    2. ''' → logprob: -0.9783101677894592
    3. ' =' → logprob: -2.2283101081848145
    4. ')' → logprob: -2.8533101081848145
    5. ')'' → logprob: -4.4783101081848145
    6. '')' → logprob: -5.2283101081848145
    7. ' )' → logprob: -5.3533101081848145
    8. '   ' → logprob: -5.6033101081848145
    9. ' '' → logprob: -5.9783101081848145
    10. '=' → logprob: -6.3533101081848145

Token 78: ' qui' (ID: 2780)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001242772996192798
    2. '(' → logprob: -9.500123977661133
    3. '   ' → logprob: -10.750123977661133
    4. '=' → logprob: -11.375123977661133
    5. ' ()' → logprob: -12.000123977661133
    6. '()
' → logprob: -12.625123977661133
    7. ' =' → logprob: -13.000123977661133
    8. '()\' → logprob: -14.500123977661133
    9. '(N' → logprob: -14.625123977661133
    10. ')' → logprob: -14.625123977661133

Token 79: ' représente' (ID: 88912)
  Prédit: ' représente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.31172600388526917
    2. ' indique' → logprob: -2.0617260932922363
    3. ' correspond' → logprob: -2.3117260932922363
    4. 'ind' → logprob: -4.561726093292236
    5. ' repr' → logprob: -5.186726093292236
    6. ' =' → logprob: -5.436726093292236
    7. ' repres' → logprob: -5.436726093292236
    8. 'cor' → logprob: -5.811726093292236
    9. 'repr' → logprob: -6.436726093292236
    10. 'dé' → logprob: -6.436726093292236

Token 80: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.07669763267040253
    2. ' la' → logprob: -2.826697587966919
    3. 'le' → logprob: -5.576697826385498
    4. ' ' → logprob: -5.701697826385498
    5. ' l' → logprob: -5.826697826385498
    6. ' the' → logprob: -5.951697826385498
    7. 'l' → logprob: -7.576697826385498
    8. 'the' → logprob: -7.701697826385498
    9. '  ' → logprob: -8.45169734954834
    10. '_le' → logprob: -8.57669734954834

Token 81: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.009964311495423317
    2. 'nombre' → logprob: -4.759964466094971
    3. ' ' → logprob: -6.884964466094971
    4. ' nombres' → logprob: -8.634963989257812
    5. 's' → logprob: -9.509963989257812
    6. 'n' → logprob: -11.009963989257812
    7. '  ' → logprob: -11.884963989257812
    8. ' number' → logprob: -11.884963989257812
    9. '   ' → logprob: -11.884963989257812
    10. ' n' → logprob: -12.009963989257812

Token 82: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49840620160102844
    2. ' de' → logprob: -1.373406171798706
    3. ' d' → logprob: -2.123406171798706
    4. 'de' → logprob: -5.373406410217285
    5. ')' → logprob: -5.498406410217285
    6. ' )' → logprob: -5.998406410217285
    7. '_' → logprob: -6.373406410217285
    8. ' total' → logprob: -6.498406410217285
    9. 'd' → logprob: -6.748406410217285
    10. '  ' → logprob: -6.873406410217285

Token 83: ' somm' (ID: 44830)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02457471378147602
    2. ' lignes' → logprob: -4.7745747566223145
    3. ' espaces' → logprob: -5.2745747566223145
    4. 's' → logprob: -5.7745747566223145
    5. 'élé' → logprob: -6.5245747566223145
    6. ' éléments' → logprob: -6.5245747566223145
    7. ' joueurs' → logprob: -8.024574279785156
    8. ' l' → logprob: -8.274574279785156
    9. '_' → logprob: -8.524574279785156
    10. 'l' → logprob: -8.587074279785156

Token 84: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.02446664869785309
    2. 'es' → logprob: -4.024466514587402
    3. 'et' → logprob: -6.024466514587402
    4. 'e' → logprob: -6.149466514587402
    5. 'its' → logprob: -6.899466514587402
    6. 'it' → logprob: -8.274466514587402
    7. ')' → logprob: -9.149466514587402
    8. 'i' → logprob: -9.399466514587402
    9. '```' → logprob: -9.524466514587402
    10. '`' → logprob: -10.274466514587402

Token 85: '/' (ID: 14)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030769171193242073
    2. '()' → logprob: -3.780769109725952
    3. ' ' → logprob: -6.280769348144531
    4. ')' → logprob: -6.530769348144531
    5. '(
' → logprob: -7.030769348144531
    6. ' (' → logprob: -7.030769348144531
    7. '=' → logprob: -7.530769348144531
    8. ',' → logprob: -8.030769348144531
    9. 's' → logprob: -8.280769348144531
    10. '<|end|>' → logprob: -8.530769348144531

Token 86: 'points' (ID: 14011)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07052472978830338
    2. 's' → logprob: -2.8205246925354004
    3. ')' → logprob: -6.5705246925354
    4. ' )' → logprob: -7.0705246925354
    5. ' '' → logprob: -7.0705246925354
    6. ',' → logprob: -7.3205246925354
    7. ''s' → logprob: -7.3205246925354
    8. 'e' → logprob: -7.6955246925354
    9. ':' → logprob: -7.9455246925354
    10. ''' → logprob: -8.070525169372559

Token 87: ' dans' (ID: 2671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21261702477931976
    2. '()' → logprob: -1.712617039680481
    3. '(
' → logprob: -5.337616920471191
    4. ')' → logprob: -6.212616920471191
    5. ' ' → logprob: -6.837616920471191
    6. ' (' → logprob: -7.337616920471191
    7. ',' → logprob: -7.462616920471191
    8. '=' → logprob: -8.337616920471191
    9. '   ' → logprob: -8.462616920471191
    10. '\' → logprob: -8.587616920471191

Token 88: ' un' (ID: 537)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.41669586300849915
    2. ' la' → logprob: -1.7916958332061768
    3. ' l' → logprob: -2.0416958332061768
    4. 'l' → logprob: -3.5416958332061768
    5. 'le' → logprob: -5.666696071624756
    6. ' ' → logprob: -5.666696071624756
    7. ' un' → logprob: -5.791696071624756
    8. 'la' → logprob: -5.916696071624756
    9. ' ' → logprob: -7.041696071624756
    10. ' une' → logprob: -8.541695594787598

Token 89: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.0392690896987915
    2. ' grap' → logprob: -1.1642690896987915
    3. ' graph' → logprob: -1.1642690896987915
    4. ' graphique' → logprob: -4.664268970489502
    5. 'gr' → logprob: -4.914268970489502
    6. ' ' → logprob: -5.914268970489502
    7. '_graph' → logprob: -7.039268970489502
    8. '	graph' → logprob: -8.41426944732666
    9. ' espace' → logprob: -8.53926944732666
    10. ' ' → logprob: -9.16426944732666

Token 90: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.7427846789360046
    2. 'he' → logprob: -0.8677846789360046
    3. 'h' → logprob: -2.3677847385406494
    4. 'aph' → logprob: -5.74278450012207
    5. 'raph' → logprob: -6.61778450012207
    6. '   ' → logprob: -7.11778450012207
    7. 'ph' → logprob: -7.11778450012207
    8. 'phe' → logprob: -7.61778450012207
    9. '```' → logprob: -7.74278450012207
    10. '#' → logprob: -7.99278450012207

Token 91: '/ar' (ID: 191806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6738899350166321
    2. '(' → logprob: -1.0488898754119873
    3. '
' → logprob: -3.4238898754119873
    4. '\n' → logprob: -3.9238898754119873
    5. '   ' → logprob: -4.173890113830566
    6. '(N' → logprob: -4.298890113830566
    7. '(n' → logprob: -4.923890113830566
    8. '\' → logprob: -5.298890113830566
    9. ' =' → logprob: -5.423890113830566
    10. '    
' → logprob: -5.423890113830566

Token 92: 'bre' (ID: 9945)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0944623947143555
    2. 'ête' → logprob: -1.2194623947143555
    3. 'c' → logprob: -1.9694623947143555
    4. 'ê' → logprob: -2.5944623947143555
    5. 'êtes' → logprob: -2.8444623947143555
    6. 'êt' → logprob: -3.2194623947143555
    7. 'ch' → logprob: -4.5944623947143555
    8. 'es' → logprob: -5.3444623947143555
    9. 'ete' → logprob: -5.4694623947143555
    10. 't' → logprob: -5.4694623947143555

Token 93: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5868876576423645
    2. '(' → logprob: -0.8368876576423645
    3. ')' → logprob: -5.336887836456299
    4. '(
' → logprob: -6.586887836456299
    5. ',' → logprob: -6.836887836456299
    6. '=' → logprob: -6.961887836456299
    7. '   ' → logprob: -7.461887836456299
    8. '.' → logprob: -7.711887836456299
    9. '()
' → logprob: -8.21188735961914
    10. '(N' → logprob: -8.33688735961914

Token 94: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32597020268440247
    2. '(' → logprob: -1.82597017288208
    3. '   ' → logprob: -3.20097017288208
    4. '(N' → logprob: -4.82597017288208
    5. '
' → logprob: -4.95097017288208
    6. ')' → logprob: -4.95097017288208
    7. '0' → logprob: -5.07597017288208
    8. '=' → logprob: -5.20097017288208
    9. 'N' → logprob: -5.32597017288208
    10. 'n' → logprob: -5.45097017288208

Token 95: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.16229015588760376
    2. ' N' → logprob: -2.412290096282959
    3. 'n' → logprob: -4.287290096282959
    4. '(' → logprob: -4.787290096282959
    5. '   ' → logprob: -4.787290096282959
    6. ')' → logprob: -4.912290096282959
    7. ' ' → logprob: -5.412290096282959
    8. '()' → logprob: -5.537290096282959
    9. '(N' → logprob: -5.662290096282959
    10. ' =' → logprob: -5.787290096282959

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05491320416331291
    2. '=' → logprob: -2.929913282394409
    3. '=int' → logprob: -10.679913520812988
    4. ',' → logprob: -13.054913520812988
    5. ' ' → logprob: -13.054913520812988
    6. ')' → logprob: -13.179913520812988
    7. ' ' → logprob: -14.429913520812988
    8. '=input' → logprob: -14.679913520812988
    9. ' =
' → logprob: -15.429913520812988
    10. '>' → logprob: -15.929913520812988

Token 97: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.003759940154850483
    2. ' ' → logprob: -5.628759860992432
    3. 'int' → logprob: -8.75376033782959
    4. ' input' → logprob: -13.75376033782959
    5. ' in' → logprob: -15.25376033782959
    6. ' i' → logprob: -15.50376033782959
    7. ' ' → logprob: -15.87876033782959
    8. ' ‌' → logprob: -16.128759384155273
    9. '	int' → logprob: -16.628759384155273
    10. '=int' → logprob: -16.878759384155273

Token 98: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06199267506599426
    2. '(' → logprob: -2.811992645263672
    3. 'input' → logprob: -11.686992645263672
    4. ' (' → logprob: -11.811992645263672
    5. '(
' → logprob: -11.811992645263672
    6. '(

' → logprob: -15.061992645263672
    7. '(in' → logprob: -15.186992645263672
    8. ',input' → logprob: -15.436992645263672
    9. ' input' → logprob: -15.561992645263672
    10. '(s' → logprob: -15.686992645263672

Token 99: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07237999141216278
    2. '()' → logprob: -2.8223800659179688
    3. '().' → logprob: -4.572380065917969
    4. ' ())' → logprob: -11.072380065917969
    5. ')' → logprob: -12.197380065917969
    6. '())
' → logprob: -13.822380065917969
    7. '(' → logprob: -14.447380065917969
    8. '();)' → logprob: -14.697380065917969
    9. ' ()' → logprob: -14.822380065917969
    10. '()))' → logprob: -14.822380065917969

Token 100: '    
' (ID: 1944)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37066900730133057
    2. '
' → logprob: -1.9956690073013306
    3. '<|end|>' → logprob: -2.620668888092041
    4. ' ' → logprob: -2.870668888092041
    5. ' 
' → logprob: -4.495668888092041
    6. '  
' → logprob: -4.745668888092041
    7. '   ' → logprob: -5.370668888092041
    8. '    
' → logprob: -5.620668888092041
    9. '<|end|>' → logprob: -5.870668888092041
    10. ' )' → logprob: -5.995668888092041

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.093802310526371
    2. 'graph' → logprob: -3.5938022136688232
    3. ' graph' → logprob: -3.5938022136688232
    4. ' edges' → logprob: -4.468802452087402
    5. '    
' → logprob: -4.843802452087402
    6. ' adjacency' → logprob: -5.093802452087402
    7. 'g' → logprob: -6.343802452087402
    8. '#' → logprob: -6.343802452087402
    9. 'edges' → logprob: -7.093802452087402
    10. ' #' → logprob: -7.093802452087402

Token 102: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.02949369326233864
    2. '#' (adapté à ' #') → logprob: -4.279493808746338
    3. ' graph' → logprob: -5.029493808746338
    4. 'adj' → logprob: -5.154493808746338
    5. 'edges' → logprob: -6.404493808746338
    6. 'g' → logprob: -7.529493808746338
    7. ' edges' → logprob: -8.40449333190918
    8. ' adjacency' → logprob: -8.90449333190918
    9. 'tree' → logprob: -9.15449333190918
    10. ' #' → logprob: -9.90449333190918

Token 103: ' Cr' (ID: 5790)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.7847405076026917
    2. 'graph' → logprob: -1.4097404479980469
    3. ' adjacency' → logprob: -1.6597404479980469
    4. 'adj' → logprob: -3.534740447998047
    5. '#' → logprob: -3.659740447998047
    6. ' adj' → logprob: -3.659740447998047
    7. ' edges' → logprob: -4.034740447998047
    8. ' distances' → logprob: -6.034740447998047
    9. 'edges' → logprob: -6.409740447998047
    10. ' #' → logprob: -6.409740447998047

Token 104: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.025134388357400894
    2. 'é' → logprob: -4.150134563446045
    3. 'ée' → logprob: -5.150134563446045
    4. 'e' → logprob: -6.650134563446045
    5. 'a' → logprob: -6.775134563446045
    6. 'ea' → logprob: -8.775134086608887
    7. '#' → logprob: -9.400134086608887
    8. 'eer' → logprob: -9.400134086608887
    9. 'ar' → logprob: -9.900134086608887
    10. 'ép' → logprob: -10.275134086608887

Token 105: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.842832088470459
    2. ' un' → logprob: -1.467832088470459
    3. ' une' → logprob: -1.842832088470459
    4. ' ' → logprob: -2.592832088470459
    5. ' a' → logprob: -3.467832088470459
    6. '[]' → logprob: -4.217832088470459
    7. '[' → logprob: -4.217832088470459
    8. '_' → logprob: -5.092832088470459
    9. '()' → logprob: -5.092832088470459
    10. ')' → logprob: -5.342832088470459

Token 106: ' liste' (ID: 31719)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.23345309495925903
    2. ' adjacency' → logprob: -2.3584530353546143
    3. 'graph' → logprob: -2.6084530353546143
    4. ' liste' → logprob: -4.608453273773193
    5. ' list' → logprob: -4.733453273773193
    6. 'adj' → logprob: -5.358453273773193
    7. '[]' → logprob: -5.858453273773193
    8. 'deque' → logprob: -5.983453273773193
    9. 'list' → logprob: -6.233453273773193
    10. ' defaultdict' → logprob: -6.233453273773193

Token 107: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33060672879219055
    2. '[]' → logprob: -2.580606698989868
    3. ' des' → logprob: -2.955606698989868
    4. ' de' → logprob: -3.080606698989868
    5. 'des' → logprob: -4.080606937408447
    6. '()' → logprob: -4.080606937408447
    7. 's' → logprob: -4.205606937408447
    8. '(' → logprob: -4.330606937408447
    9. ' d' → logprob: -4.580606937408447
    10. '```' → logprob: -5.705606937408447

Token 108: ' listes' (ID: 179198)
  Prédit: ' listes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.6323774456977844
    2. ' adjacency' → logprob: -1.5073773860931396
    3. '[]' → logprob: -2.3823773860931396
    4. ' lists' → logprob: -3.1323773860931396
    5. 'list' → logprob: -3.3823773860931396
    6. 'adj' → logprob: -4.382377624511719
    7. ' ' → logprob: -4.507377624511719
    8. ' list' → logprob: -4.632377624511719
    9. '[' → logprob: -4.882377624511719
    10. ' liste' → logprob: -5.382377624511719

Token 109: ' pour' (ID: 1930)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6473934650421143
    2. '(' → logprob: -1.7723934650421143
    3. 'adj' → logprob: -2.8973934650421143
    4. '()' → logprob: -3.0223934650421143
    5. '[]' → logprob: -3.2723934650421143
    6. 'graph' → logprob: -3.7723934650421143
    7. ' [[]' → logprob: -4.147393226623535
    8. ' adjacency' → logprob: -4.272393226623535
    9. ' ()' → logprob: -4.397393226623535
    10. '([]' → logprob: -4.522393226623535

Token 110: ' représ' (ID: 31534)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.2968847453594208
    2. ' représ' → logprob: -1.4218847751617432
    3. 'stock' → logprob: -4.921884536743164
    4. ' adjacency' → logprob: -5.296884536743164
    5. ' adj' → logprob: -7.046884536743164
    6. ' represent' → logprob: -7.421884536743164
    7. 'represent' → logprob: -7.796884536743164
    8. 'adj' → logprob: -8.546884536743164
    9. ' graph' → logprob: -8.546884536743164
    10. ' accueillir' → logprob: -8.671884536743164

Token 111: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -8.061054359131958e-06
    2. 'ent' → logprob: -13.375007629394531
    3. ' enter' → logprob: -13.375007629394531
    4. 'enser' → logprob: -13.500007629394531
    5. 'anter' → logprob: -14.250007629394531
    6. 'ender' → logprob: -14.500007629394531
    7. '   ' → logprob: -14.750007629394531
    8. 'entation' → logprob: -15.125007629394531
    9. 'ENTER' → logprob: -15.125007629394531
    10. 'ente' → logprob: -15.625007629394531

Token 112: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8246868848800659
    2. ' l' → logprob: -1.324686884880066
    3. ' le' → logprob: -1.574686884880066
    4. ' la' → logprob: -3.8246870040893555
    5. ' ' → logprob: -4.0746870040893555
    6. 'l' → logprob: -4.5746870040893555
    7. ' adjacency' → logprob: -4.6996870040893555
    8. 'le' → logprob: -4.8246870040893555
    9. ' graph' → logprob: -5.3246870040893555
    10. '(' → logprob: -5.3246870040893555

Token 113: ' structure' (ID: 8866)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9858993887901306
    2. ' graph' → logprob: -1.1108994483947754
    3. 'gr' → logprob: -1.7358994483947754
    4. ' ' → logprob: -2.9858994483947754
    5. '   ' → logprob: -3.8608994483947754
    6. 'adj' → logprob: -4.235899448394775
    7. ' grap' → logprob: -4.485899448394775
    8. ' adjacency' → logprob: -4.985899448394775
    9. 's' → logprob: -5.235899448394775
    10. 'g' → logprob: -6.735899448394775

Token 114: ' des' (ID: 731)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.318603515625
    2. 'graph' → logprob: -1.568603515625
    3. ' graph' → logprob: -2.193603515625
    4. ' des' → logprob: -2.318603515625
    5. ' de' → logprob: -2.568603515625
    6. 'adj' → logprob: -2.568603515625
    7. '[]' → logprob: -3.193603515625
    8. 'd' → logprob: -3.568603515625
    9. ' adjacency' → logprob: -4.068603515625
    10. '_graph' → logprob: -4.068603515625

Token 115: ' ar' (ID: 646)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.1686275005340576
    2. ' adjacency' → logprob: -1.2936275005340576
    3. 'graph' → logprob: -2.0436275005340576
    4. ' voisins' → logprob: -2.4186275005340576
    5. ' adj' → logprob: -2.5436275005340576
    6. 'adj' → logprob: -2.6686275005340576
    7. ' ' → logprob: -4.043627738952637
    8. '```' → logprob: -4.793627738952637
    9. ' voisin' → logprob: -5.168627738952637
    10. '	graph' → logprob: -5.918627738952637

Token 116: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.28702446818351746
    2. 'bres' → logprob: -1.9120244979858398
    3. 'cs' → logprob: -3.03702449798584
    4. 'r' → logprob: -3.16202449798584
    5. 'c' → logprob: -4.91202449798584
    6. 'g' → logprob: -7.03702449798584
    7. 'tes' → logprob: -7.66202449798584
    8. '```' → logprob: -7.91202449798584
    9. 'e' → logprob: -8.41202449798584
    10. 'êts' → logprob: -8.41202449798584

Token 117: '/connect' (ID: 177359)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.1045445203781128
    2. '[' → logprob: -1.7295445203781128
    3. 'adj' → logprob: -1.9795445203781128
    4. '(edges' → logprob: -2.6045446395874023
    5. 'edges' → logprob: -2.8545446395874023
    6. '(graph' → logprob: -3.1045446395874023
    7. '[N' → logprob: -3.7295446395874023
    8. '[]' → logprob: -3.8545446395874023
    9. ' graph' → logprob: -3.8545446395874023
    10. ' edges' → logprob: -3.9795446395874023

Token 118: 'iv' (ID: 349)
  Prédit: 'ions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.004011914599686861
    2. 'ion' → logprob: -5.629012107849121
    3. 'iv' → logprob: -8.879012107849121
    4. 'ivité' → logprob: -8.879012107849121
    5. ' ions' → logprob: -9.879012107849121
    6. 'ivit' → logprob: -10.004012107849121
    7. 'es' → logprob: -11.754012107849121
    8. 'ées' → logprob: -12.004012107849121
    9. 'eurs' → logprob: -12.379012107849121
    10. 'ivities' → logprob: -12.754012107849121

Token 119: 'ités' (ID: 12479)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.22649873793125153
    2. 'é' → logprob: -1.8514987230300903
    3. 'es' → logprob: -3.85149884223938
    4. 'ités' → logprob: -4.226498603820801
    5. 'ité' → logprob: -4.726498603820801
    6. 'té' → logprob: -7.351498603820801
    7. 'e' → logprob: -9.6014986038208
    8. 'ées' → logprob: -9.8514986038208
    9. 't' → logprob: -10.1014986038208
    10. 'ites' → logprob: -10.1014986038208

Token 120: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1223820149898529
    2. ' graph' → logprob: -2.7473819255828857
    3. 'adj' → logprob: -3.6223819255828857
    4. '(' → logprob: -5.497382164001465
    5. '(graph' → logprob: -5.497382164001465
    6. '   ' → logprob: -5.747382164001465
    7. ' adjacency' → logprob: -5.747382164001465
    8. '[' → logprob: -6.497382164001465
    9. ' edges' → logprob: -6.622382164001465
    10. '_graph' → logprob: -6.622382164001465

Token 121: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4146040081977844
    2. ' graph' → logprob: -1.2896039485931396
    3. 'adj' → logprob: -3.9146039485931396
    4. '(graph' → logprob: -4.664604187011719
    5. ' edges' → logprob: -4.789604187011719
    6. ' adjacency' → logprob: -5.164604187011719
    7. ' adj' → logprob: -5.539604187011719
    8. '[' → logprob: -5.789604187011719
    9. '   ' → logprob: -6.289604187011719
    10. 'Graph' → logprob: -6.414604187011719

Token 122: ' #' (ID: 1069)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.1500713974237442
    2. 'graph' → logprob: -2.025071382522583
    3. ' edges' → logprob: -5.775071620941162
    4. ' adjacency' → logprob: -5.775071620941162
    5. ' adj' → logprob: -7.525071620941162
    6. 'adj' → logprob: -8.275071144104004
    7. '	graph' → logprob: -9.400071144104004
    8. 'edges' → logprob: -9.650071144104004
    9. ' grap' → logprob: -10.525071144104004
    10. 'Graph' → logprob: -10.650071144104004

Token 123: ' Chaque' (ID: 94758)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.17476317286491394
    2. 'graph' → logprob: -2.0497632026672363
    3. ' edges' → logprob: -4.049763202667236
    4. ' adjacency' → logprob: -4.674763202667236
    5. ' adj' → logprob: -5.924763202667236
    6. 'adj' → logprob: -6.799763202667236
    7. 'edges' → logprob: -7.424763202667236
    8. ' grap' → logprob: -9.299762725830078
    9. ' neighbors' → logprob: -9.424762725830078
    10. 'g' → logprob: -9.924762725830078

Token 124: ' index' (ID: 3472)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -1.0527347326278687
    2. '[]' → logprob: -1.5527347326278687
    3. '[' → logprob: -2.302734851837158
    4. ' graph' → logprob: -2.677734851837158
    5. '(' → logprob: -2.802734851837158
    6. '_' → logprob: -3.802734851837158
    7. '()' → logprob: -3.802734851837158
    8. ' edge' → logprob: -4.177734851837158
    9. ' edges' → logprob: -4.302734851837158
    10. ' sommet' → logprob: -4.427734851837158

Token 125: ' de' (ID: 334)
  Prédit: ' représente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.597806453704834
    2. ' ' → logprob: -2.097806453704834
    3. ' de' → logprob: -2.097806453704834
    4. ' represents' → logprob: -3.347806453704834
    5. ' correspond' → logprob: -3.472806453704834
    6. ' des' → logprob: -3.597806453704834
    7. 'e' → logprob: -4.097806453704834
    8. '[]' → logprob: -4.222806453704834
    9. ' corresponds' → logprob: -4.347806453704834
    10. ' contient' → logprob: -4.847806453704834

Token 126: ' la' (ID: 557)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.5332361459732056
    2. ' la' → logprob: -1.0332361459732056
    3. 'adj' → logprob: -3.658236026763916
    4. 'la' → logprob: -4.658236026763916
    5. ' adj' → logprob: -4.783236026763916
    6. 'graph' → logprob: -5.408236026763916
    7. ' graph' → logprob: -5.658236026763916
    8. 's' → logprob: -6.908236026763916
    9. ' ' → logprob: -7.033236026763916
    10. ' range' → logprob: -7.408236026763916

Token 127: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.7525715827941895
    2. 'liste' → logprob: -0.8775715827941895
    3. 'adj' → logprob: -3.3775715827941895
    4. 'list' → logprob: -3.3775715827941895
    5. ' adjacency' → logprob: -4.2525715827941895
    6. 'graph' → logprob: -4.2525715827941895
    7. 'gr' → logprob: -5.3775715827941895
    8. ' list' → logprob: -5.6275715827941895
    9. ' graph' → logprob: -6.6275715827941895
    10. 'lists' → logprob: -6.8775715827941895

Token 128: ' '' (ID: 461)
  Prédit: ' correspond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.7759559154510498
    2. ' représente' → logprob: -0.9009559154510498
    3. ' contient' → logprob: -3.02595591545105
    4. ' cont' → logprob: -3.02595591545105
    5. ' corresponds' → logprob: -4.400956153869629
    6. ' ' → logprob: -4.650956153869629
    7. ' represents' → logprob: -6.525956153869629
    8. '[]' → logprob: -6.525956153869629
    9. ' est' → logprob: -6.525956153869629
    10. '[' → logprob: -6.775956153869629

Token 129: 'Edge' (ID: 16577)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4570351243019104
    2. ' graph' → logprob: -1.4570350646972656
    3. 'adj' → logprob: -3.0820350646972656
    4. ' adjacency' → logprob: -3.0820350646972656
    5. 'edges' → logprob: -3.9570350646972656
    6. ' edges' → logprob: -4.207035064697266
    7. ' adj' → logprob: -5.332035064697266
    8. 'g' → logprob: -7.582035064697266
    9. 'connections' → logprob: -7.707035064697266
    10. 'neighbors' → logprob: -7.957035064697266

Token 130: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00988983828574419
    2. ''' → logprob: -4.759889602661133
    3. 'List' → logprob: -7.884889602661133
    4. '[s' → logprob: -8.509889602661133
    5. ' s' → logprob: -8.759889602661133
    6. ']' → logprob: -9.134889602661133
    7. '[]' → logprob: -9.759889602661133
    8. 'es' → logprob: -9.884889602661133
    9. ']'' → logprob: -10.384889602661133
    10. '']' → logprob: -10.509889602661133

Token 131: ' représente' (ID: 88912)
  Prédit: ' représente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.42721253633499146
    2. ' correspond' → logprob: -1.6772124767303467
    3. ' contient' → logprob: -2.6772124767303467
    4. ' =' → logprob: -3.9272124767303467
    5. '[]' → logprob: -4.552212715148926
    6. ' represents' → logprob: -4.677212715148926
    7. ' est' → logprob: -4.677212715148926
    8. ' cont' → logprob: -4.677212715148926
    9. ' ' → logprob: -5.302212715148926
    10. ' a' → logprob: -5.427212715148926

Token 132: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.0017301602056249976
    2. ' une' → logprob: -7.501729965209961
    3. ' le' → logprob: -8.251729965209961
    4. ' ' → logprob: -8.626729965209961
    5. ' les' → logprob: -8.626729965209961
    6. 'un' → logprob: -8.876729965209961
    7. ' a' → logprob: -8.876729965209961
    8. 's' → logprob: -9.501729965209961
    9. ' la' → logprob: -10.376729965209961
    10. ' l' → logprob: -10.626729965209961

Token 133: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.023158833384513855
    2. 'e' → logprob: -4.773159027099609
    3. ' noe' → logprob: -5.273159027099609
    4. ' node' → logprob: -5.648159027099609
    5. ' point' → logprob: -6.398159027099609
    6. ' n' → logprob: -6.523159027099609
    7. 'n' → logprob: -7.523159027099609
    8. 's' → logprob: -7.648159027099609
    9. ' ' → logprob: -7.648159027099609
    10. ' somm' → logprob: -8.27315902709961

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9881089925765991
    2. '[]' → logprob: -1.1131089925765991
    3. ' =' → logprob: -2.3631091117858887
    4. '[' → logprob: -2.7381091117858887
    5. '   ' → logprob: -3.3631091117858887
    6. 's' → logprob: -3.8631091117858887
    7. ' des' → logprob: -3.9881091117858887
    8. ' ,' → logprob: -4.238109111785889
    9. ' []' → logprob: -4.988109111785889
    10. ' ' → logprob: -4.988109111785889

Token 135: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.21874724328517914
    2. ' ' → logprob: -1.9687472581863403
    3. ' and' → logprob: -4.468747138977051
    4. ' qui' → logprob: -4.593747138977051
    5. ' contenant' → logprob: -4.968747138977051
    6. '   ' → logprob: -5.718747138977051
    7. '0' → logprob: -5.718747138977051
    8. ' où' → logprob: -6.093747138977051
    9. ' avec' → logprob: -6.343747138977051
    10. ' ,' → logprob: -6.593747138977051

Token 136: ' sa' (ID: 880)
  Prédit: ' contient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.17059729993343353
    2. ' ' → logprob: -3.1705973148345947
    3. ' les' → logprob: -3.1705973148345947
    4. ' la' → logprob: -3.5455973148345947
    5. ' cont' → logprob: -4.920597076416016
    6. ' l' → logprob: -4.920597076416016
    7. ' sa' → logprob: -5.295597076416016
    8. ' contains' → logprob: -5.420597076416016
    9. ' chaque' → logprob: -5.420597076416016
    10. ' son' → logprob: -6.045597076416016

Token 137: ' valeur' (ID: 41664)
  Prédit: ' voisin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voisin' → logprob: -1.3940880298614502
    2. ' adjacency' → logprob: -1.5190880298614502
    3. ' voisins' → logprob: -1.8940880298614502
    4. 's' → logprob: -2.39408802986145
    5. ' contenu' → logprob: -2.76908802986145
    6. ' liste' → logprob: -3.14408802986145
    7. ' contient' → logprob: -4.019087791442871
    8. ' ' → logprob: -4.019087791442871
    9. ' correspond' → logprob: -4.019087791442871
    10. ' adjacent' → logprob: -4.019087791442871

Token 138: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3348487913608551
    2. 's' → logprob: -2.3348488807678223
    3. ' =' → logprob: -2.3348488807678223
    4. '[]' → logprob: -3.0848488807678223
    5. ' ' → logprob: -3.8348488807678223
    6. ' sera' → logprob: -5.584848880767822
    7. '=' → logprob: -5.709848880767822
    8. 'es' → logprob: -5.709848880767822
    9. ' is' → logprob: -5.959848880767822
    10. ' s' → logprob: -6.709848880767822

Token 139: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7763934135437012
    2. '[]' → logprob: -1.2763934135437012
    3. ' []' → logprob: -1.4013934135437012
    4. 'une' → logprob: -5.151393413543701
    5. ' la' → logprob: -5.276393413543701
    6. ' ' → logprob: -6.651393413543701
    7. ' ' → logprob: -7.026393413543701
    8. ' un' → logprob: -7.526393413543701
    9. 's' → logprob: -8.52639389038086
    10. '[' → logprob: -9.02639389038086

Token 140: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.33942651748657227
    2. '[]' → logprob: -1.5894265174865723
    3. 'liste' → logprob: -3.0894265174865723
    4. ' []' → logprob: -4.089426517486572
    5. ' list' → logprob: -4.214426517486572
    6. 'list' → logprob: -5.964426517486572
    7. 's' → logprob: -6.214426517486572
    8. ' [' → logprob: -7.214426517486572
    9. 'deque' → logprob: -8.089426040649414
    10. ' ' → logprob: -8.214426040649414

Token 141: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.25889769196510315
    2. '[]' → logprob: -1.7588976621627808
    3. '<|end|>' → logprob: -4.13389778137207
    4. ' []' → logprob: -4.50889778137207
    5. ' de' → logprob: -4.75889778137207
    6. ' d' → logprob: -5.13389778137207
    7. ' ' → logprob: -5.50889778137207
    8. ' of' → logprob: -5.75889778137207
    9. 'des' → logprob: -6.13389778137207
    10. '[' → logprob: -6.38389778137207

Token 142: ' somm' (ID: 44830)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.05696488171815872
    2. ' somm' → logprob: -3.931964874267578
    3. ' points' → logprob: -4.431964874267578
    4. ' ar' → logprob: -4.681964874267578
    5. ' voisin' → logprob: -5.431964874267578
    6. ' ' → logprob: -5.806964874267578
    7. ' connex' → logprob: -6.056964874267578
    8. ' vois' → logprob: -6.806964874267578
    9. ' connections' → logprob: -6.806964874267578
    10. ' neighbors' → logprob: -8.056964874267578

Token 143: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.00474731856957078
    2. 'es' → logprob: -5.62974739074707
    3. 'êts' → logprob: -7.50474739074707
    4. 'és' → logprob: -7.87974739074707
    5. 'et' → logprob: -8.75474739074707
    6. 'its' → logprob: -12.25474739074707
    7. 'etés' → logprob: -12.25474739074707
    8. '```' → logprob: -12.50474739074707
    9. 'êtes' → logprob: -12.62974739074707
    10. 'ats' → logprob: -12.87974739074707

Token 144: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.4683074951171875
    2. ' connect' → logprob: -1.9683074951171875
    3. ' voisins' → logprob: -2.0933074951171875
    4. 'adj' → logprob: -2.8433074951171875
    5. 'connect' → logprob: -3.2183074951171875
    6. '_connect' → logprob: -5.9683074951171875
    7. ' adjacent' → logprob: -6.4683074951171875
    8. ' reli' → logprob: -6.7183074951171875
    9. ' connex' → logprob: -6.7183074951171875
    10. ' associés' → logprob: -6.9683074951171875

Token 145: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0019815717823803425
    2. 'acency' → logprob: -7.376981735229492
    3. 'oints' → logprob: -8.126981735229492
    4. '[' → logprob: -8.626981735229492
    5. 'acent' → logprob: -8.626981735229492
    6. '```' → logprob: -8.751981735229492
    7. 'a' → logprob: -9.626981735229492
    8. ']' → logprob: -10.126981735229492
    9. '{"' → logprob: -10.251981735229492
    10. 'c' → logprob: -10.376981735229492

Token 146: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.0005440961103886366
    2. 't' → logprob: -8.750544548034668
    3. 'nts' → logprob: -8.750544548034668
    4. 'ent' → logprob: -8.875544548034668
    5. 'd' → logprob: -11.000544548034668
    6. 'entes' → logprob: -11.000544548034668
    7. 'c' → logprob: -11.000544548034668
    8. 's' → logprob: -11.500544548034668
    9. 'cent' → logprob: -12.500544548034668
    10. 'g' → logprob: -12.875544548034668

Token 147: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9720837473869324
    2. ' =' → logprob: -1.8470838069915771
    3. '   ' → logprob: -2.097083806991577
    4. ',' → logprob: -2.347083806991577
    5. '[' → logprob: -2.472083806991577
    6. '()' → logprob: -3.097083806991577
    7. 's' → logprob: -3.472083806991577
    8. '(' → logprob: -3.847083806991577
    9. '[:]' → logprob: -4.347083568572998
    10. '.' → logprob: -5.222083568572998

Token 148: 'vo' (ID: 1190)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3520122170448303
    2. ' )' → logprob: -1.2270121574401855
    3. ' ' → logprob: -6.8520121574401855
    4. ' ' → logprob: -7.4770121574401855
    5. ' des' → logprob: -7.9770121574401855
    6. 's' → logprob: -8.352012634277344
    7. '[' → logprob: -8.352012634277344
    8. '[])' → logprob: -8.852012634277344
    9. '   ' → logprob: -9.102012634277344
    10. ').' → logprob: -9.352012634277344

Token 149: 'isins' (ID: 166400)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7750267386436462
    2. 'isins' → logprob: -1.400026798248291
    3. 'isin' → logprob: -3.025026798248291
    4. 's' → logprob: -3.150026798248291
    5. 'r' → logprob: -3.275026798248291
    6. 'is' → logprob: -3.525026798248291
    7. 't' → logprob: -3.525026798248291
    8. 'rt' → logprob: -3.775026798248291
    9. 'isine' → logprob: -4.150026798248291
    10. 'ins' → logprob: -4.525026798248291

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05684935301542282
    2. 's' → logprob: -3.806849241256714
    3. ']' → logprob: -4.306849479675293
    4. ' )' → logprob: -4.806849479675293
    5. '])' → logprob: -5.056849479675293
    6. 'es' → logprob: -5.806849479675293
    7. '[' → logprob: -7.431849479675293
    8. '   ' → logprob: -8.306849479675293
    9. ')
' → logprob: -8.431849479675293
    10. ' ]' → logprob: -8.556849479675293

Token 151: '   ' (ID: 271)
  Prédit: ' Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.6920759677886963
    2. 'Edge' → logprob: -1.1920759677886963
    3. 's' → logprob: -1.9420759677886963
    4. ' =' → logprob: -4.442075729370117
    5. 'Edges' → logprob: -4.442075729370117
    6. '_edge' → logprob: -5.067075729370117
    7. '
' → logprob: -5.192075729370117
    8. '_' → logprob: -6.067075729370117
    9. '<Edge' → logprob: -6.192075729370117
    10. '_edges' → logprob: -6.317075729370117

Token 152: ' Edge' (ID: 16396)
  Prédit: ' Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.8792792558670044
    2. '
' → logprob: -1.0042792558670044
    3. 'Edge' (adapté à ' Edge') → logprob: -1.8792792558670044
    4. ' 
' → logprob: -2.879279136657715
    5. '  
' → logprob: -5.629279136657715
    6. '[' → logprob: -6.754279136657715
    7. 'Edges' → logprob: -7.379279136657715
    8. '[
' → logprob: -7.504279136657715
    9. '<Edge' → logprob: -7.629279136657715
    10. '\n' → logprob: -7.754279136657715

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1058848649263382
    2. '=' → logprob: -2.3558847904205322
    3. 's' → logprob: -5.230885028839111
    4. '[' → logprob: -8.355884552001953
    5. '[]' → logprob: -10.730884552001953
    6. '=[' → logprob: -11.230884552001953
    7. '=[]' → logprob: -11.355884552001953
    8. '[s' → logprob: -11.605884552001953
    9. '[:]' → logprob: -12.355884552001953
    10. ']' → logprob: -12.355884552001953

Token 154: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.4745200574398041
    2. '[' → logprob: -0.9745200872421265
    3. ' [' → logprob: -7.724520206451416
    4. '[]' → logprob: -14.349519729614258
    5. ' ' → logprob: -15.599519729614258
    6. '   ' → logprob: -15.724519729614258
    7. '[N' → logprob: -16.724519729614258
    8. '[n' → logprob: -17.099519729614258
    9. '[[' → logprob: -17.099519729614258
    10. '[:]' → logprob: -18.099519729614258

Token 155: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22547504305839539
    2. 'for' → logprob: -1.6004750728607178
    3. ' ' → logprob: -10.100475311279297
    4. ')' → logprob: -11.475475311279297
    5. ']' → logprob: -12.600475311279297
    6. '   ' → logprob: -12.975475311279297
    7. '	for' → logprob: -12.975475311279297
    8. ' f' → logprob: -13.725475311279297
    9. 'f' → logprob: -14.975475311279297
    10. ' fo' → logprob: -15.225475311279297

Token 156: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.08832700550556183
    2. '_' → logprob: -2.713326930999756
    3. ' range' → logprob: -4.088326930999756
    4. ' ' → logprob: -6.963326930999756
    5. ' i' → logprob: -7.963326930999756
    6. 'range' → logprob: -8.838327407836914
    7. ' in' → logprob: -12.088327407836914
    8. '_range' → logprob: -12.588327407836914
    9. '(range' → logprob: -13.213327407836914
    10. '(' → logprob: -13.963327407836914

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6817039847373962
    2. 'range' → logprob: -1.306704044342041
    3. 'in' → logprob: -1.681704044342041
    4. ' range' → logprob: -3.306704044342041
    5. 'ange' → logprob: -7.431704044342041
    6. ' ' → logprob: -9.431703567504883
    7. 'i' → logprob: -9.806703567504883
    8. ' i' → logprob: -10.306703567504883
    9. 'x' → logprob: -10.806703567504883
    10. '(range' → logprob: -10.931703567504883

Token 158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889331132173538
    2. ' range' → logprob: -2.5788934230804443
    3. '(range' → logprob: -12.578893661499023
    4. 'rang' → logprob: -16.453893661499023
    5. ' ' → logprob: -16.953893661499023
    6. '	range' → logprob: -17.953893661499023
    7. ')' → logprob: -18.703893661499023
    8. '(N' → logprob: -19.578893661499023
    9. 'Range' → logprob: -19.578893661499023
    10. ' rang' → logprob: -19.703893661499023

Token 159: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.792751032160595e-05
    2. '(' → logprob: -9.37508773803711
    3. ' (' → logprob: -12.75008773803711
    4. '(n' → logprob: -16.50008773803711
    5. 'N' → logprob: -17.00008773803711
    6. '((' → logprob: -17.00008773803711
    7. '(
' → logprob: -18.50008773803711
    8. ' ' → logprob: -19.62508773803711
    9. '(int' → logprob: -19.75008773803711
    10. '   ' → logprob: -20.25008773803711

Token 160: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001021970878355205
    2. ' )' → logprob: -7.001021862030029
    3. ')' → logprob: -9.251022338867188
    4. '+' → logprob: -11.751022338867188
    5. ')],' → logprob: -13.376022338867188
    6. ' ]' → logprob: -14.126022338867188
    7. ')]
' → logprob: -14.126022338867188
    8. ']' → logprob: -14.251022338867188
    9. ')])' → logprob: -14.626022338867188
    10. ')]
' → logprob: -14.751022338867188

Token 161: '    
' (ID: 1944)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7480930685997009
    2. ' for' → logprob: -1.4980931282043457
    3. '   ' → logprob: -1.8730931282043457
    4. '
' → logprob: -2.6230931282043457
    5. '    
' → logprob: -2.6230931282043457
    6. '  
' → logprob: -6.373093128204346
    7. ' 
' → logprob: -7.123093128204346
    8. '<|end|>' → logprob: -7.373093128204346
    9. '	for' → logprob: -8.123092651367188
    10. '\n' → logprob: -8.248092651367188

Token 162: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020689141005277634
    2. ' for' → logprob: -4.020689010620117
    3. '   ' → logprob: -6.020689010620117
    4. '#' → logprob: -9.520689010620117
    5. '    
' → logprob: -11.145689010620117
    6. 'n' → logprob: -11.895689010620117
    7. '	for' → logprob: -11.895689010620117
    8. ' 
' → logprob: -13.395689010620117
    9. '
' → logprob: -14.520689010620117
    10. 'i' → logprob: -14.645689010620117

Token 163: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002625278721097857
    2. ' for' → logprob: -8.250262260437012
    3. '   ' → logprob: -13.875262260437012
    4. '#' (adapté à ' #') → logprob: -15.500262260437012
    5. '    
' → logprob: -17.500263214111328
    6. '	for' → logprob: -17.750263214111328
    7. '
' → logprob: -18.625263214111328
    8. 'For' → logprob: -18.875263214111328
    9. 'n' → logprob: -20.875263214111328
    10. ' ' → logprob: -21.125263214111328

Token 164: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06197787821292877
    2. ' for' → logprob: -2.8119778633117676
    3. 'range' → logprob: -11.811978340148926
    4. 'For' → logprob: -14.186978340148926
    5. ' range' → logprob: -14.436978340148926
    6. 'Pour' → logprob: -15.311978340148926
    7. '
' → logprob: -15.436978340148926
    8. 'pour' → logprob: -15.686978340148926
    9. ' ' → logprob: -15.936978340148926
    10. '#' → logprob: -15.936978340148926

Token 165: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.1361061930656433
    2. 'cler' → logprob: -2.136106252670288
    3. 'c' → logprob: -4.761106014251709
    4. '   ' → logprob: -7.761106014251709
    5. 'cl' → logprob: -9.636106491088867
    6. 'cles' → logprob: -10.386106491088867
    7. ' cle' → logprob: -10.886106491088867
    8. 'clé' → logprob: -11.136106491088867
    9. 'r' → logprob: -12.011106491088867
    10. '  ' → logprob: -13.011106491088867

Token 166: ' '' (ID: 461)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03202320262789726
    2. 'for' → logprob: -3.6570231914520264
    3. ' i' → logprob: -5.9070234298706055
    4. ' _' → logprob: -6.5320234298706055
    5. '_' → logprob: -6.6570234298706055
    6. ' ' → logprob: -10.157023429870605
    7. ' N' → logprob: -10.282023429870605
    8. ' ' → logprob: -10.282023429870605
    9. '   ' → logprob: -10.407023429870605
    10. 'i' → logprob: -10.782023429870605

Token 167: 'N' (ID: 45)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07836956530809402
    2. ' _' → logprob: -2.703369617462158
    3. ' i' → logprob: -5.453369617462158
    4. 'i' → logprob: -5.578369617462158
    5. ' for' → logprob: -8.578369140625
    6. '_i' → logprob: -9.328369140625
    7. 'for' → logprob: -10.703369140625
    8. '_N' → logprob: -11.078369140625
    9. ' ' → logprob: -12.078369140625
    10. ' N' → logprob: -12.703369140625

Token 168: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31367427110671997
    2. '-' → logprob: -1.3136742115020752
    3. '):' → logprob: -8.938673973083496
    4. ':' → logprob: -8.938673973083496
    5. ' ' → logprob: -10.313673973083496
    6. '):
' → logprob: -10.813673973083496
    7. ')' → logprob: -10.813673973083496
    8. '1' → logprob: -11.313673973083496
    9. '   ' → logprob: -11.438673973083496
    10. 'for' → logprob: -11.563673973083496

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '2' → logprob: -16.25020408630371
    4. '-' → logprob: -16.87520408630371
    5. '１' → logprob: -17.50020408630371
    6. '```' → logprob: -18.12520408630371
    7. '   ' → logprob: -18.37520408630371
    8. ' ' → logprob: -18.81270408630371
    9. '۱' → logprob: -19.06270408630371
    10. ' -' → logprob: -19.25020408630371

Token 170: ''' (ID: 6)
  Prédit: ' fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.3160226047039032
    2. ' times' → logprob: -1.8160226345062256
    3. ' for' → logprob: -3.1910226345062256
    4. ':' → logprob: -4.3160223960876465
    5. ' ' → logprob: -4.3160223960876465
    6. ' :' → logprob: -4.8160223960876465
    7. ' lines' → logprob: -5.0660223960876465
    8. ')' → logprob: -5.1910223960876465
    9. ' lignes' → logprob: -5.1910223960876465
    10. ' )' → logprob: -5.6910223960876465

Token 171: ' fois' (ID: 14697)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27771177887916565
    2. 'for' → logprob: -1.7777117490768433
    3. '<|end|>' → logprob: -2.902711868286133
    4. '
' → logprob: -4.777711868286133
    5. ':' → logprob: -6.027711868286133
    6. '<|end|>' → logprob: -6.152711868286133
    7. ' ' → logprob: -6.902711868286133
    8. ' times' → logprob: -7.527711868286133
    9. ':
' → logprob: -8.027711868286133
    10. 's' → logprob: -8.027711868286133

Token 172: ' car' (ID: 1669)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6929766535758972
    2. '   ' → logprob: -1.442976713180542
    3. ':' → logprob: -1.817976713180542
    4. 'for' → logprob: -2.442976713180542
    5. ':
' → logprob: -4.817976474761963
    6. '
' → logprob: -5.817976474761963
    7. ' :' → logprob: -7.067976474761963
    8. ',' → logprob: -7.442976474761963
    9. '	for' → logprob: -7.692976474761963
    10. ' to' → logprob: -8.067976951599121

Token 173: ' pour' (ID: 1930)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.9449702501296997
    2. ' les' → logprob: -1.1949702501296997
    3. ' on' → logprob: -1.8199702501296997
    4. ' for' → logprob: -3.19497013092041
    5. ' le' → logprob: -3.69497013092041
    6. ' chaque' → logprob: -4.19497013092041
    7. 'N' → logprob: -4.31997013092041
    8. ' ' → logprob: -4.56997013092041
    9. ' la' → logprob: -5.19497013092041
    10. ' il' → logprob: -5.19497013092041

Token 174: ' un' (ID: 537)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.537491500377655
    2. ' i' → logprob: -0.912491500377655
    3. 'i' → logprob: -5.412491321563721
    4. ' un' → logprob: -5.787491321563721
    5. ' ' → logprob: -6.662491321563721
    6. '_' → logprob: -6.787491321563721
    7. ' construire' → logprob: -6.912491321563721
    8. ' les' → logprob: -7.287491321563721
    9. ' chaque' → logprob: -7.537491321563721
    10. '(i' → logprob: -7.537491321563721

Token 175: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.002527268137782812
    2. 'ar' → logprob: -6.127527236938477
    3. ' tree' → logprob: -8.627527236938477
    4. ' grap' → logprob: -10.002527236938477
    5. 'arb' → logprob: -10.377527236938477
    6. ' arbres' → logprob: -10.877527236938477
    7. '   ' → logprob: -10.877527236938477
    8. ' ' → logprob: -11.252527236938477
    9. 'tree' → logprob: -11.502527236938477
    10. '```' → logprob: -12.252527236938477

Token 176: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08670403808355331
    2. ':' → logprob: -2.7117040157318115
    3. '   ' → logprob: -5.336704254150391
    4. ' ,' → logprob: -5.836704254150391
    5. ' for' → logprob: -6.336704254150391
    6. ' on' → logprob: -6.586704254150391
    7. ' :' → logprob: -6.711704254150391
    8. '
' → logprob: -7.461704254150391
    9. ' des' → logprob: -7.461704254150391
    10. ':
' → logprob: -7.461704254150391

Token 177: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.38787853717803955
    2. ' N' → logprob: -1.1378785371780396
    3. 'n' → logprob: -7.51287841796875
    4. ' ' → logprob: -8.76287841796875
    5. ' n' → logprob: -8.76287841796875
    6. '<|end|>' → logprob: -10.63787841796875
    7. ' ' → logprob: -11.01287841796875
    8. '`' → logprob: -11.01287841796875
    9. ' `' → logprob: -11.13787841796875
    10. 'import' → logprob: -11.63787841796875

Token 178: ' somm' (ID: 44830)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0946041345596313
    2. ' somm' → logprob: -1.0946041345596313
    3. 's' → logprob: -2.094604015350342
    4. ' nodes' → logprob: -2.969604015350342
    5. 'n' → logprob: -3.094604015350342
    6. ' ' → logprob: -3.344604015350342
    7. ' noe' → logprob: -3.344604015350342
    8. ' points' → logprob: -4.094604015350342
    9. ' vertices' → logprob: -4.969604015350342
    10. ' sommet' → logprob: -5.094604015350342

Token 179: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0005037044174969196
    2. 'es' → logprob: -8.000503540039062
    3. 'ats' → logprob: -10.125503540039062
    4. 'ts' → logprob: -10.250503540039062
    5. 'êts' → logprob: -10.500503540039062
    6. 'ents' → logprob: -11.000503540039062
    7. 'ètres' → logprob: -11.375503540039062
    8. 'és' → logprob: -11.375503540039062
    9. 'its' → logprob: -11.750503540039062
    10. '   ' → logprob: -12.500503540039062

Token 180: ' il' (ID: 1793)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13945071399211884
    2. ':' → logprob: -2.264450788497925
    3. '<|end|>' → logprob: -4.014450550079346
    4. '   ' → logprob: -5.889450550079346
    5. ':
' → logprob: -6.514450550079346
    6. ' for' → logprob: -6.639450550079346
    7. '<|end|>' → logprob: -6.764450550079346
    8. '
' → logprob: -7.264450550079346
    9. ' ,' → logprob: -8.139451026916504
    10. ',
' → logprob: -8.764451026916504

Token 181: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.049496881663799286
    2. ' faut' → logprob: -3.29949688911438
    3. 'y' → logprob: -5.799496650695801
    4. ' n' → logprob: -5.924496650695801
    5. ' manque' → logprob: -6.049496650695801
    6. ' faudra' → logprob: -6.424496650695801
    7. 's' → logprob: -8.0494966506958
    8. 'f' → logprob: -8.4244966506958
    9. ' existe' → logprob: -8.5494966506958
    10. ' a' → logprob: -8.6744966506958

Token 182: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.005951790604740381
    2. ' aura' → logprob: -5.505951881408691
    3. 'a' → logprob: -6.380951881408691
    4. ' y' → logprob: -9.505951881408691
    5. ''a' → logprob: -10.255951881408691
    6. ' existe' → logprob: -11.630951881408691
    7. ' ' → logprob: -11.755951881408691
    8. ' avait' → logprob: -12.005951881408691
    9. ' à' → logprob: -12.130951881408691
    10. '	a' → logprob: -12.130951881408691

Token 183: ' toujours' (ID: 16867)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.08391179144382477
    2. ' ' → logprob: -3.208911895751953
    3. 'N' → logprob: -3.333911895751953
    4. ' exactement' → logprob: -6.583911895751953
    5. ' n' → logprob: -6.833911895751953
    6. ' exactly' → logprob: -7.833911895751953
    7. 'n' → logprob: -8.083911895751953
    8. ' des' → logprob: -8.208911895751953
    9. ' une' → logprob: -8.458911895751953
    10. '  ' → logprob: -8.708911895751953

Token 184: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.10620177537202835
    2. ' ' → logprob: -2.8562018871307373
    3. ' exactement' → logprob: -3.9812018871307373
    4. 'N' → logprob: -4.356201648712158
    5. ' une' → logprob: -5.356201648712158
    6. ' exactly' → logprob: -5.356201648712158
    7. ' des' → logprob: -6.606201648712158
    8. 'exact' → logprob: -8.231202125549316
    9. ' un' → logprob: -8.356202125549316
    10. ' n' → logprob: -9.231202125549316

Token 185: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759457945823669
    2. '-' → logprob: -0.8259457945823669
    3. ' ' → logprob: -12.450945854187012
    4. ' ' → logprob: -13.825945854187012
    5. '<|end|>' → logprob: -14.325945854187012
    6. '  ' → logprob: -15.700945854187012
    7. '1' → logprob: -16.450944900512695
    8. '
' → logprob: -16.638444900512695
    9. '```' → logprob: -16.763444900512695
    10. '	' → logprob: -16.763444900512695

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007610293570905924
    2. ' ' → logprob: -4.882610321044922
    3. '-' → logprob: -12.757610321044922
    4. '2' → logprob: -14.632610321044922
    5. '```' → logprob: -15.257610321044922
    6. ' -' → logprob: -15.382610321044922
    7. ' ' → logprob: -16.132610321044922
    8. '`' → logprob: -17.132610321044922
    9. '   ' → logprob: -17.507610321044922
    10. '  ' → logprob: -17.507610321044922

Token 187: ' ar' (ID: 646)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5047594904899597
    2. ' ar' → logprob: -1.8797595500946045
    3. ' ' → logprob: -2.0047595500946045
    4. 'edges' → logprob: -2.7547595500946045
    5. '  
' → logprob: -4.379759311676025
    6. '
' → logprob: -5.004759311676025
    7. '_edges' → logprob: -5.504759311676025
    8. ' \' → logprob: -5.629759311676025
    9. 'ar' → logprob: -5.879759311676025
    10. ' 
' → logprob: -6.504759311676025

Token 188: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0007950932485982776
    2. 'tes' → logprob: -7.875794887542725
    3. 'etes' → logprob: -8.500795364379883
    4. 'ê' → logprob: -9.750795364379883
    5. 'ètes' → logprob: -9.750795364379883
    6. 'es' → logprob: -10.750795364379883
    7. 'êts' → logprob: -11.000795364379883
    8. 'cs' → logprob: -11.250795364379883
    9. 'ête' → logprob: -12.000795364379883
    10. 'c' → logprob: -12.375795364379883

Token 189: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0343728065490723
    2. ' for' → logprob: -1.4093728065490723
    3. 'for' → logprob: -1.5343728065490723
    4. ':' → logprob: -2.5343728065490723
    5. '
' → logprob: -2.9093728065490723
    6. ',' → logprob: -3.6593728065490723
    7. '    
' → logprob: -4.409372806549072
    8. ':
' → logprob: -5.284372806549072
    9. ' 
' → logprob: -6.284372806549072
    10. '    ' → logprob: -6.534372806549072

Token 190: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16759732365608215
    2. ' for' → logprob: -1.9175972938537598
    3. '   ' → logprob: -5.04259729385376
    4. '
' → logprob: -7.16759729385376
    5. '    
' → logprob: -9.292597770690918
    6. '	for' → logprob: -11.542597770690918
    7. ' 
' → logprob: -11.667597770690918
    8. '  
' → logprob: -12.917597770690918
    9. '\n' → logprob: -13.167597770690918
    10. ':' → logprob: -14.792597770690918

Token 191: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6940812468528748
    2. 'for' (adapté à ' for') → logprob: -0.6940812468528748
    3. '   ' → logprob: -7.0690813064575195
    4. '
' → logprob: -10.06908130645752
    5. '	for' → logprob: -10.56908130645752
    6. ' 
' → logprob: -12.19408130645752
    7. '    
' → logprob: -12.56908130645752
    8. 'i' → logprob: -13.94408130645752
    9. 'range' → logprob: -14.06908130645752
    10. ' _' → logprob: -14.19408130645752

Token 192: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5607824921607971
    2. ' ' → logprob: -0.9357824921607971
    3. ' i' → logprob: -3.3107824325561523
    4. '_' → logprob: -8.185782432556152
    5. ' range' → logprob: -8.810782432556152
    6. ' ' → logprob: -10.935782432556152
    7. ' N' → logprob: -11.810782432556152
    8. ' ‌' → logprob: -12.060782432556152
    9. '  ' → logprob: -12.185782432556152
    10. ' ▁' → logprob: -13.185782432556152

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22584660351276398
    2. 'in' → logprob: -1.6008466482162476
    3. ' ' → logprob: -7.850846767425537
    4. 'n' → logprob: -11.350846290588379
    5. '  ' → logprob: -12.225846290588379
    6. 'range' → logprob: -12.225846290588379
    7. '_' → logprob: -12.350846290588379
    8. ' i' → logprob: -12.475846290588379
    9. 'i' → logprob: -12.725846290588379
    10. 'import' → logprob: -12.850846290588379

Token 194: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029819689691066742
    2. ' range' → logprob: -3.5298197269439697
    3. 'ange' → logprob: -9.77981948852539
    4. '(range' → logprob: -11.77981948852539
    5. ' ' → logprob: -13.40481948852539
    6. '	range' → logprob: -13.90481948852539
    7. ' xrange' → logprob: -14.65481948852539
    8. '(' → logprob: -15.02981948852539
    9. '  ' → logprob: -15.27981948852539
    10. '```' → logprob: -15.40481948852539

Token 195: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.14427964389324188
    2. '(' → logprob: -2.394279718399048
    3. ' (' → logprob: -3.144279718399048
    4. '(n' → logprob: -11.894279479980469
    5. '(
' → logprob: -12.644279479980469
    6. '((' → logprob: -13.019279479980469
    7. ' ' → logprob: -13.144279479980469
    8. '(int' → logprob: -13.519279479980469
    9. ' N' → logprob: -13.894279479980469
    10. '(

' → logprob: -15.519279479980469

Token 196: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28121694922447205
    2. '-' → logprob: -1.4062169790267944
    3. '1' → logprob: -9.781216621398926
    4. ')' → logprob: -12.156216621398926
    5. ' ' → logprob: -12.531216621398926
    6. '   ' → logprob: -15.156216621398926
    7. ' -
' → logprob: -15.531216621398926
    8. '2' → logprob: -15.781216621398926
    9. '):
' → logprob: -15.906216621398926
    10. ' ' → logprob: -16.281217575073242

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003811025235336274
    2. ' ' → logprob: -7.875380992889404
    3. '2' → logprob: -15.250381469726562
    4. '-' → logprob: -15.812881469726562
    5. ')' → logprob: -15.937881469726562
    6. '   ' → logprob: -16.375381469726562
    7. '
' → logprob: -16.625381469726562
    8. '１' → logprob: -16.875381469726562
    9. '```' → logprob: -17.375381469726562
    10. '  ' → logprob: -17.750381469726562

Token 198: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.056196946650743484
    2. '):
' → logprob: -2.931196928024292
    3. ' ):' → logprob: -7.056197166442871
    4. ')' → logprob: -8.306197166442871
    5. '):
' → logprob: -9.306197166442871
    6. ':' → logprob: -9.806197166442871
    7. ' ):
' → logprob: -9.806197166442871
    8. ' )' → logprob: -13.306197166442871
    9. ':
' → logprob: -14.681197166442871
    10. '):

' → logprob: -14.931197166442871

Token 199: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4164159297943115
    2. '       ' → logprob: -1.4164159297943115
    3. ':' → logprob: -2.6664159297943115
    4. ' :' → logprob: -4.666416168212891
    5. '    ' → logprob: -5.166416168212891
    6. ' ' → logprob: -5.916416168212891
    7. '):' → logprob: -6.041416168212891
    8. '  ' → logprob: -6.666416168212891
    9. '<|end|>' → logprob: -6.666416168212891
    10. ' (' → logprob: -7.166416168212891

Token 200: ' #' (ID: 1069)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.08580086380243301
    2. ' a' → logprob: -3.085800886154175
    3. ' x' → logprob: -3.960800886154175
    4. 'a' → logprob: -4.710800647735596
    5. 'u' → logprob: -5.335800647735596
    6. 'x' → logprob: -6.835800647735596
    7. ' ' → logprob: -7.585800647735596
    8. ' line' → logprob: -7.710800647735596
    9. '   ' → logprob: -7.960800647735596
    10. '    ' → logprob: -8.460801124572754

Token 201: ' Lire' (ID: 57624)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.18893299996852875
    2. ' u' → logprob: -1.81393301486969
    3. 'a' → logprob: -4.8139328956604
    4. ' a' → logprob: -7.1889328956604
    5. 'x' → logprob: -8.688933372497559
    6. '   ' → logprob: -10.438933372497559
    7. ' line' → logprob: -10.563933372497559
    8. ' x' → logprob: -11.438933372497559
    9. 's' → logprob: -11.688933372497559
    10. 'A' → logprob: -12.188933372497559

Token 202: ' deux' (ID: 10301)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.0018745011184364557
    2. ' a' → logprob: -7.0018744468688965
    3. ' x' → logprob: -7.6268744468688965
    4. 'u' → logprob: -7.8768744468688965
    5. 'a' → logprob: -10.501874923706055
    6. ' v' → logprob: -11.251874923706055
    7. '(u' → logprob: -11.626874923706055
    8. ' un' → logprob: -11.751874923706055
    9. 'x' → logprob: -11.876874923706055
    10. ' ' → logprob: -12.001874923706055

Token 203: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49189385771751404
    2. ' integers' → logprob: -1.3668938875198364
    3. '<|end|>' → logprob: -3.241893768310547
    4. ' espaces' → logprob: -3.616893768310547
    5. ' )' → logprob: -4.366893768310547
    6. ' ,' → logprob: -4.991893768310547
    7. 's' → logprob: -4.991893768310547
    8. ' (' → logprob: -5.366893768310547
    9. ',' → logprob: -5.491893768310547
    10. ' vertices' → logprob: -5.741893768310547

Token 204: 'iers' (ID: 11012)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7355305552482605
    2. ' ,' → logprob: -1.7355306148529053
    3. '   ' → logprob: -2.3605306148529053
    4. 'iers' → logprob: -2.4855306148529053
    5. 's' → logprob: -3.1105306148529053
    6. 'ières' → logprob: -3.6105306148529053
    7. '  ' → logprob: -3.9855306148529053
    8. 't' → logprob: -4.360530376434326
    9. 'rees' → logprob: -5.110530376434326
    10. ' ' → logprob: -5.360530376434326

Token 205: ' sépar' (ID: 97160)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.028030551970005035
    2. 'u' → logprob: -4.2780303955078125
    3. '(u' → logprob: -5.2780303955078125
    4. ' a' → logprob: -5.7780303955078125
    5. 'a' → logprob: -6.2780303955078125
    6. '()' → logprob: -6.6530303955078125
    7. ',' → logprob: -7.1530303955078125
    8. ' (' → logprob: -7.2780303955078125
    9. ' ,' → logprob: -7.6530303955078125
    10. ',u' → logprob: -9.653030395507812

Token 206: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.2849178612232208
    2. 'é' → logprob: -1.4099178314208984
    3. 'e' → logprob: -6.784917831420898
    4. ' par' → logprob: -6.909917831420898
    5. 'es' → logprob: -7.534917831420898
    6. 'er' → logprob: -7.909917831420898
    7. '=' → logprob: -8.784917831420898
    8. ' by' → logprob: -9.284917831420898
    9. 'par' → logprob: -9.534917831420898
    10. 's' → logprob: -9.784917831420898

Token 207: ' symbol' (ID: 10038)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.014426033943891525
    2. 'par' → logprob: -4.389426231384277
    3. ' by' → logprob: -7.264426231384277
    4. '()' → logprob: -7.764426231384277
    5. 'by' → logprob: -8.139426231384277
    6. ' ' → logprob: -9.014426231384277
    7. 'e' → logprob: -9.264426231384277
    8. '_par' → logprob: -9.389426231384277
    9. '(' → logprob: -10.639426231384277
    10. '(par' → logprob: -10.764426231384277

Token 208: 'isant' (ID: 56111)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.9652893543243408
    2. 'és' → logprob: -1.7152893543243408
    3. '='' → logprob: -1.9652893543243408
    4. 'e' → logprob: -2.465289354324341
    5. ' by' → logprob: -2.715289354324341
    6. 'é' → logprob: -2.965289354324341
    7. 'es' → logprob: -3.090289354324341
    8. ' =' → logprob: -4.965289115905762
    9. 'by' → logprob: -5.215289115905762
    10. 'par' → logprob: -5.590289115905762

Token 209: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.6216883659362793
    2. ' une' → logprob: -1.8716883659362793
    3. ' des' → logprob: -2.1216883659362793
    4. ' les' → logprob: -2.2466883659362793
    5. ' u' → logprob: -2.2466883659362793
    6. ' ' → logprob: -2.3716883659362793
    7. ' l' → logprob: -2.8716883659362793
    8. ' la' → logprob: -3.1216883659362793
    9. '()' → logprob: -3.9966883659362793
    10. 's' → logprob: -3.9966883659362793

Token 210: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.07300262898206711
    2. ' are' → logprob: -3.448002576828003
    3. ' connexion' → logprob: -4.073002815246582
    4. ' edge' → logprob: -5.198002815246582
    5. ' ' → logprob: -5.573002815246582
    6. ' relation' → logprob: -5.573002815246582
    7. 'are' → logprob: -6.198002815246582
    8. ' connection' → logprob: -6.823002815246582
    9. ' arr' → logprob: -6.948002815246582
    10. ' a' → logprob: -7.073002815246582

Token 211: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.03458720073103905
    2. 'r' → logprob: -3.9095871448516846
    3. 'c' → logprob: -5.784587383270264
    4. '�' → logprob: -6.034587383270264
    5. 'bre' → logprob: -6.284587383270264
    6. 'te' → logprob: -6.784587383270264
    7. 'b' → logprob: -7.034587383270264
    8. 're' → logprob: -7.034587383270264
    9. 'e' → logprob: -7.534587383270264
    10. 'ê' → logprob: -7.784587383270264

Token 212: ' entre' (ID: 3853)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.8129742741584778
    2. ',' → logprob: -1.562974214553833
    3. 'u' → logprob: -2.187974214553833
    4. 'a' → logprob: -2.562974214553833
    5. '()' → logprob: -3.187974214553833
    6. '(u' → logprob: -3.312974214553833
    7. ' =' → logprob: -3.562974214553833
    8. '   ' → logprob: -4.437974452972412
    9. 's' → logprob: -4.562974452972412
    10. ')' → logprob: -4.937974452972412

Token 213: ' deux' (ID: 10301)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.181935653090477
    2. 's' → logprob: -2.6819355487823486
    3. ' deux' → logprob: -3.8069355487823486
    4. 'u' → logprob: -3.9319355487823486
    5. ' les' → logprob: -4.056935787200928
    6. 'a' → logprob: -4.556935787200928
    7. ' ' → logprob: -5.306935787200928
    8. ' )' → logprob: -5.931935787200928
    9. ' s' → logprob: -6.181935787200928
    10. ' a' → logprob: -6.181935787200928

Token 214: ' somm' (ID: 44830)
  Prédit: ' somm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somm' → logprob: -0.5013662576675415
    2. 's' → logprob: -1.5013662576675415
    3. ' nodes' → logprob: -2.626366138458252
    4. ' points' → logprob: -3.001366138458252
    5. ' noe' → logprob: -3.876366138458252
    6. ' n' → logprob: -4.876366138458252
    7. ' vertices' → logprob: -5.126366138458252
    8. ' sommet' → logprob: -5.501366138458252
    9. ' ' → logprob: -6.001366138458252
    10. 'n' → logprob: -6.251366138458252

Token 215: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.6783276796340942
    2. 'es' → logprob: -0.8033276796340942
    3. 'ents' → logprob: -5.053327560424805
    4. 'iers' → logprob: -5.178327560424805
    5. 'êtres' → logprob: -5.178327560424805
    6. 'oints' → logprob: -5.303327560424805
    7. 'et' → logprob: -5.303327560424805
    8. 'ites' → logprob: -5.303327560424805
    9. 's' → logprob: -6.053327560424805
    10. 'aires' → logprob: -6.178327560424805

Token 216: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6810932755470276
    2. 'a' → logprob: -2.056093215942383
    3. ' ,' → logprob: -2.181093215942383
    4. '()' → logprob: -2.931093215942383
    5. ' ' → logprob: -3.181093215942383
    6. ' a' → logprob: -3.431093215942383
    7. ' )' → logprob: -3.431093215942383
    8. ')' → logprob: -3.556093215942383
    9. '   ' → logprob: -4.056093215942383
    10. ' u' → logprob: -4.806093215942383

Token 217: '       ' (ID: 309)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.995047390460968
    2. ' u' → logprob: -1.4950473308563232
    3. ',' → logprob: -1.7450473308563232
    4. '   ' → logprob: -2.2450473308563232
    5. 'a' → logprob: -2.4950473308563232
    6. '(u' → logprob: -4.745047569274902
    7. ' a' → logprob: -5.120047569274902
    8. ' ' → logprob: -5.370047569274902
    9. ' ,' → logprob: -5.495047569274902
    10. '       ' → logprob: -5.620047569274902

Token 218: ' a' (ID: 261)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.31688401103019714
    2. 'u' → logprob: -1.3168840408325195
    3. 'a' (adapté à ' a') → logprob: -6.1918840408325195
    4. ' a' → logprob: -6.5668840408325195
    5. '   ' → logprob: -9.81688404083252
    6. 'x' → logprob: -9.94188404083252
    7. ' x' → logprob: -11.06688404083252
    8. ' ' → logprob: -11.56688404083252
    9. ' line' → logprob: -11.94188404083252
    10. '    ' → logprob: -12.56688404083252

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00767122209072113
    2. ',b' → logprob: -5.507671356201172
    3. ' ,' → logprob: -5.632671356201172
    4. ',a' → logprob: -12.632671356201172
    5. ',v' → logprob: -13.507671356201172
    6. 'b' → logprob: -14.007671356201172
    7. ' b' → logprob: -14.882671356201172
    8. ',n' → logprob: -15.132671356201172
    9. ',s' → logprob: -15.257671356201172
    10. ',int' → logprob: -15.757671356201172

Token 220: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16029033064842224
    2. 'b' → logprob: -1.9102903604507446
    3. ' ' → logprob: -9.660290718078613
    4. '<|end|>' → logprob: -13.660290718078613
    5. ' ' → logprob: -14.660290718078613
    6. '_' → logprob: -16.035289764404297
    7. 'space' → logprob: -16.285289764404297
    8. '  ' → logprob: -16.410289764404297
    9. ' =' → logprob: -16.410289764404297
    10. 'd' → logprob: -16.910289764404297

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141470432281494
    2. '=' → logprob: -1.701414704322815
    3. ')' → logprob: -14.326415061950684
    4. '=input' → logprob: -14.701415061950684
    5. ' ' → logprob: -16.201414108276367
    6. ')=' → logprob: -16.451414108276367
    7. ',' → logprob: -16.701414108276367
    8. '=int' → logprob: -16.951414108276367
    9. '=line' → logprob: -17.076414108276367
    10. '＝' → logprob: -17.326414108276367

Token 222: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.007607458624988794
    2. 'map' → logprob: -4.882607460021973
    3. ' list' → logprob: -14.382607460021973
    4. '	map' → logprob: -15.132607460021973
    5. ' ' → logprob: -15.382607460021973
    6. '(map' → logprob: -16.007606506347656
    7. '   ' → logprob: -16.382606506347656
    8. 'list' → logprob: -17.757606506347656
    9. 'm' → logprob: -17.882606506347656
    10. ' input' → logprob: -18.007606506347656

Token 223: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.19822828471660614
    2. '(input' → logprob: -2.198228359222412
    3. '(' → logprob: -2.698228359222412
    4. '(str' → logprob: -6.948228359222412
    5. '(lambda' → logprob: -8.073227882385254
    6. ' (' → logprob: -8.823227882385254
    7. '<int' → logprob: -10.948227882385254
    8. '(list' → logprob: -11.448227882385254
    9. 'int' → logprob: -12.198227882385254
    10. '(in' → logprob: -12.198227882385254

Token 224: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6394656896591187
    2. ',input' → logprob: -1.0144656896591187
    3. ',' → logprob: -2.264465808868408
    4. 'input' → logprob: -5.639465808868408
    5. '(' → logprob: -6.889465808868408
    6. ')' → logprob: -7.139465808868408
    7. ' ,' → logprob: -8.38946533203125
    8. ' input' → logprob: -8.63946533203125
    9. ' (' → logprob: -9.63946533203125
    10. ')(' → logprob: -10.76446533203125

Token 225: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020763427019119
    2. ' input' → logprob: -2.350207567214966
    3. '(input' → logprob: -14.600207328796387
    4. 'sys' → logprob: -15.350207328796387
    5. '=input' → logprob: -16.225208282470703
    6. ',input' → logprob: -16.225208282470703
    7. ')' → logprob: -16.475208282470703
    8. '	input' → logprob: -17.350208282470703
    9. ' sys' → logprob: -17.600208282470703
    10. '_input' → logprob: -18.475208282470703

Token 226: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.491498531133402e-06
    2. '()' → logprob: -11.625009536743164
    3. ')' → logprob: -15.375009536743164
    4. '())' → logprob: -16.500009536743164
    5. '(' → logprob: -17.000009536743164
    6. '()
' → logprob: -17.125009536743164
    7. ' ().' → logprob: -17.750009536743164
    8. ').' → logprob: -18.375009536743164
    9. '()).' → logprob: -18.500009536743164
    10. '   ' → logprob: -18.875009536743164

Token 227: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0031901898328214884
    2. 'strip' → logprob: -5.753190040588379
    3. 'rstrip' → logprob: -11.378190040588379
    4. ' split' → logprob: -14.253190040588379
    5. '(split' → logprob: -15.503190040588379
    6. 'spl' → logprob: -16.753190994262695
    7. ')' → logprob: -17.503190994262695
    8. '().' → logprob: -18.503190994262695
    9. ' strip' → logprob: -18.753190994262695
    10. '.split' → logprob: -19.128190994262695

Token 228: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01941017247736454
    2. ')' → logprob: -4.144410133361816
    3. '()' → logprob: -5.769410133361816
    4. '()))' → logprob: -9.269410133361816
    5. '())
' → logprob: -9.644410133361816
    6. '(' → logprob: -9.894410133361816
    7. '))' → logprob: -10.644410133361816
    8. ' ())' → logprob: -11.894410133361816
    9. ' )' → logprob: -12.644410133361816
    10. '());' → logprob: -14.394410133361816

Token 229: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0370599031448364
    2. '    
' → logprob: -1.7870599031448364
    3. '<|end|>' → logprob: -2.037059783935547
    4. ')' → logprob: -2.287059783935547
    5. '   ' → logprob: -2.537059783935547
    6. ' 
' → logprob: -2.912059783935547
    7. '       ' → logprob: -3.412059783935547
    8. '  
' → logprob: -3.662059783935547
    9. '\n' → logprob: -3.787059783935547
    10. '        
' → logprob: -4.912059783935547

Token 230: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10683919489383698
    2. '        
' → logprob: -3.106839179992676
    3. 'a' → logprob: -3.606839179992676
    4. '
' → logprob: -5.106839179992676
    5. 'Edge' → logprob: -5.231839179992676
    6. '    
' → logprob: -5.606839179992676
    7. '   ' → logprob: -5.731839179992676
    8. ' a' → logprob: -5.981839179992676
    9. ' Edge' → logprob: -5.981839179992676
    10. '#' (adapté à ' #') → logprob: -6.231839179992676

Token 231: ' Ajouter' (ID: 165754)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45958539843559265
    2. 'Edge' → logprob: -1.334585428237915
    3. ' Edge' → logprob: -2.834585428237915
    4. ' a' → logprob: -3.209585428237915
    5. '#' → logprob: -5.209585189819336
    6. '       ' → logprob: -8.334585189819336
    7. '   ' → logprob: -9.334585189819336
    8. 'A' → logprob: -9.459585189819336
    9. ' #' → logprob: -9.459585189819336
    10. '#a' → logprob: -10.084585189819336

Token 232: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.30342158675193787
    2. '(b' → logprob: -2.0534214973449707
    3. 'b' → logprob: -2.8034214973449707
    4. ' a' → logprob: -3.0534214973449707
    5. '(a' → logprob: -4.428421497344971
    6. ' (' → logprob: -4.928421497344971
    7. 'a' → logprob: -5.303421497344971
    8. '(' → logprob: -6.553421497344971
    9. ' ' → logprob: -10.928421974182129
    10. '	b' → logprob: -11.428421974182129

Token 233: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14269953966140747
    2. ' -' → logprob: -2.0176994800567627
    3. ' ' → logprob: -11.267699241638184
    4. 'a' → logprob: -12.142699241638184
    5. ' a' → logprob: -13.142699241638184
    6. ' to' → logprob: -13.767699241638184
    7. ' à' → logprob: -14.392699241638184
    8. ' -=' → logprob: -14.392699241638184
    9. '   ' → logprob: -14.767699241638184
    10. ')' → logprob: -14.892699241638184

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004884536610916257
    2. ' ' → logprob: -7.62548828125
    3. '-' → logprob: -15.50048828125
    4. '```' → logprob: -15.87548828125
    5. 'a' → logprob: -17.00048828125
    6. ',' → logprob: -17.12548828125
    7. ' -' → logprob: -17.25048828125
    8. ' a' → logprob: -17.37548828125
    9. '１' → logprob: -17.87548828125
    10. '   ' → logprob: -18.12548828125

Token 235: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5184735655784607
    2. ' à' → logprob: -1.1434736251831055
    3. ' to' → logprob: -3.3934736251831055
    4. ' ' → logprob: -4.6434736251831055
    5. 'à' → logprob: -5.0184736251831055
    6. ' aux' → logprob: -5.0184736251831055
    7. 'to' → logprob: -5.1434736251831055
    8. ' )' → logprob: -5.2684736251831055
    9. ' a' → logprob: -5.3934736251831055
    10. ',' → logprob: -5.5184736251831055

Token 236: ' la' (ID: 557)
  Prédit: ' Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.20143333077430725
    2. 'Edge' → logprob: -1.7014333009719849
    3. 'a' → logprob: -11.201433181762695
    4. ' a' → logprob: -13.076433181762695
    5. ' ' → logprob: -13.826433181762695
    6. ' edge' → logprob: -14.076433181762695
    7. ' l' → logprob: -14.326433181762695
    8. '_edge' → logprob: -14.451433181762695
    9. ' la' → logprob: -14.826433181762695
    10. 'l' → logprob: -15.201433181762695

Token 237: ' liste' (ID: 31719)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.038183439522981644
    2. ' Edge' → logprob: -3.2881834506988525
    3. '[a' → logprob: -9.288183212280273
    4. 'a' → logprob: -10.163183212280273
    5. '_edge' → logprob: -12.288183212280273
    6. '[' → logprob: -13.288183212280273
    7. ' edge' → logprob: -13.663183212280273
    8. ' a' → logprob: -14.038183212280273
    9. '.Edge' → logprob: -14.038183212280273
    10. '<Edge' → logprob: -14.663183212280273

Token 238: ' des' (ID: 731)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.06679485738277435
    2. '[' → logprob: -3.1917948722839355
    3. 'Edge' → logprob: -4.3167948722839355
    4. ' Edge' → logprob: -4.9417948722839355
    5. 'a' → logprob: -6.4417948722839355
    6. ' [' → logprob: -7.5667948722839355
    7. ' a' → logprob: -7.6917948722839355
    8. ' de' → logprob: -8.441794395446777
    9. '<Edge' → logprob: -9.441794395446777
    10. '   ' → logprob: -10.816794395446777

Token 239: ' voisins' (ID: 166720)
  Prédit: ' Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.3021279275417328
    2. 'Edge' → logprob: -1.9271279573440552
    3. ' voisins' → logprob: -2.3021278381347656
    4. 'adj' → logprob: -4.802127838134766
    5. 'a' → logprob: -6.427127838134766
    6. ' adj' → logprob: -6.552127838134766
    7. ' voisin' → logprob: -7.052127838134766
    8. ' neighbors' → logprob: -7.302127838134766
    9. 'neighbors' → logprob: -7.302127838134766
    10. ' adjacency' → logprob: -7.427127838134766

Token 240: ' de' (ID: 334)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -8.888114098226652e-05
    2. 'a' → logprob: -9.750088691711426
    3. ' [' → logprob: -11.500088691711426
    4. '[' → logprob: -11.500088691711426
    5. ' a' → logprob: -12.500088691711426
    6. '   ' → logprob: -12.750088691711426
    7. 'Edge' → logprob: -13.000088691711426
    8. ' Edge' → logprob: -14.250088691711426
    9. '       ' → logprob: -15.125088691711426
    10. '[A' → logprob: -15.875088691711426

Token 241: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4287761449813843
    2. 'a' → logprob: -1.0537761449813843
    3. ' Edge' → logprob: -11.053775787353516
    4. '[a' → logprob: -11.053775787353516
    5. 'Edge' → logprob: -11.428775787353516
    6. ' (' → logprob: -11.428775787353516
    7. '(a' → logprob: -11.678775787353516
    8. ' ' → logprob: -12.428775787353516
    9. '	a' → logprob: -12.553775787353516
    10. ' ' → logprob: -14.241275787353516

Token 242: '-' (ID: 12)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23352880775928497
    2. '[a' → logprob: -2.1085288524627686
    3. '-' → logprob: -2.6085288524627686
    4. ' -' → logprob: -4.8585286140441895
    5. '[-' → logprob: -5.7335286140441895
    6. 'a' → logprob: -7.1085286140441895
    7. ' [' → logprob: -7.3585286140441895
    8. '[i' → logprob: -8.233529090881348
    9. '[
' → logprob: -8.983529090881348
    10. ' ' → logprob: -9.608529090881348

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013500562636181712
    2. ' ' → logprob: -9.12513542175293
    3. '[' → logprob: -11.00013542175293
    4. '<|end|>' → logprob: -13.00013542175293
    5. ' [' → logprob: -13.62513542175293
    6. ',' → logprob: -13.62513542175293
    7. '```' → logprob: -13.87513542175293
    8. 'a' → logprob: -14.00013542175293
    9. ')' → logprob: -14.00013542175293
    10. '   ' → logprob: -14.37513542175293

Token 244: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.043647464364767075
    2. '[a' → logprob: -3.543647527694702
    3. '       ' → logprob: -4.543647289276123
    4. '   ' → logprob: -5.918647289276123
    5. '[
' → logprob: -9.543647766113281
    6. '.append' → logprob: -9.793647766113281
    7. '[E' → logprob: -10.293647766113281
    8. 'Edge' → logprob: -10.418647766113281
    9. '[A' → logprob: -10.418647766113281
    10. '    ' → logprob: -10.543647766113281

Token 245: 'dé' (ID: 98340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6318719387054443
    2. ' )' → logprob: -0.8818719387054443
    3. 'Edge' → logprob: -3.0068719387054443
    4. ' Edge' → logprob: -5.631872177124023
    5. 'a' → logprob: -8.131872177124023
    6. ' ]' → logprob: -8.256872177124023
    7. ' )
' → logprob: -8.881872177124023
    8. ']' → logprob: -9.381872177124023
    9. '   ' → logprob: -9.381872177124023
    10. '[' → logprob: -9.631872177124023

Token 246: 'cr' (ID: 798)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.16976763308048248
    2. 'cr' → logprob: -2.5447676181793213
    3. 'crement' → logprob: -3.1697676181793213
    4. 'f' → logprob: -4.4197678565979
    5. 'cré' → logprob: -4.6697678565979
    6. 'c' → logprob: -5.5447678565979
    7. 'cre' → logprob: -5.6697678565979
    8. '```' → logprob: -6.9197678565979
    9. '   ' → logprob: -7.0447678565979
    10. ' ' → logprob: -7.2947678565979

Token 247: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.15601129829883575
    2. 'é' → logprob: -2.7810113430023193
    3. 'és' → logprob: -3.6560113430023193
    4. 'em' → logprob: -4.03101110458374
    5. 'ement' → logprob: -4.28101110458374
    6. 'ém' → logprob: -4.78101110458374
    7. 'éf' → logprob: -5.65601110458374
    8. 'ment' → logprob: -5.90601110458374
    9. 'éc' → logprob: -6.53101110458374
    10. 'e' → logprob: -7.28101110458374

Token 248: 'é' (ID: 377)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7761305570602417
    2. '-' → logprob: -1.6511305570602417
    3. ' de' → logprob: -3.0261306762695312
    4. 'a' → logprob: -3.2761306762695312
    5. ' -' → logprob: -3.2761306762695312
    6. 'é' → logprob: -3.4011306762695312
    7. '=' → logprob: -3.4011306762695312
    8. 'er' → logprob: -3.4011306762695312
    9. '1' → logprob: -4.276130676269531
    10. '   ' → logprob: -4.401130676269531

Token 249: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05376743525266647
    2. ' )' → logprob: -3.803767442703247
    3. ' pour' → logprob: -4.803767204284668
    4. ' par' → logprob: -5.178767204284668
    5. ' de' → logprob: -5.428767204284668
    6. ' d' → logprob: -5.678767204284668
    7. ']' → logprob: -6.053767204284668
    8. '1' → logprob: -6.928767204284668
    9. '[' → logprob: -7.053767204284668
    10. ' ]' → logprob: -7.428767204284668

Token 250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3133200705051422
    2. ' ' → logprob: -1.3133200407028198
    3. ' un' → logprob: -10.56332015991211
    4. 'un' → logprob: -11.06332015991211
    5. ')' → logprob: -11.68832015991211
    6. ' one' → logprob: -13.06332015991211
    7. '```' → logprob: -13.18832015991211
    8. ' ' → logprob: -13.43832015991211
    9. '   ' → logprob: -14.18832015991211
    10. '-' → logprob: -14.43832015991211

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016045277938246727
    2. ' ' → logprob: -4.141045093536377
    3. ')' → logprob: -12.766045570373535
    4. 'un' → logprob: -12.891045570373535
    5. '```' → logprob: -13.391045570373535
    6. ' one' → logprob: -13.516045570373535
    7. ' un' → logprob: -14.016045570373535
    8. '   ' → logprob: -14.641045570373535
    9. ' ' → logprob: -15.391045570373535
    10. ',' → logprob: -15.516045570373535

Token 252: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004301337990909815
    2. ' )' → logprob: -5.62930154800415
    3. ']' → logprob: -8.004301071166992
    4. ')
' → logprob: -9.129301071166992
    5. '),' → logprob: -9.629301071166992
    6. '   ' → logprob: -9.629301071166992
    7. '[' → logprob: -10.629301071166992
    8. ' pour' → logprob: -10.629301071166992
    9. '       ' → logprob: -11.379301071166992
    10. ' ]' → logprob: -11.504301071166992

Token 253: ' index' (ID: 3472)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5903297662734985
    2. 'les' → logprob: -1.0903297662734985
    3. ' l' → logprob: -2.965329647064209
    4. 'l' → logprob: -3.965329647064209
    5. ' indices' → logprob: -4.590329647064209
    6. ' index' → logprob: -4.840329647064209
    7. 'index' → logprob: -4.965329647064209
    8. ' on' → logprob: -5.840329647064209
    9. 'indices' → logprob: -6.090329647064209
    10. ' ' → logprob: -6.340329647064209

Token 254: 'ation' (ID: 387)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.37504467368125916
    2. 'és' → logprob: -2.000044584274292
    3. '0' → logprob: -3.000044584274292
    4. '-' → logprob: -3.125044584274292
    5. 'ation' → logprob: -3.625044584274292
    6. ' ' → logprob: -3.750044584274292
    7. ' -' → logprob: -4.125044822692871
    8. ' à' → logprob: -5.750044822692871
    9. '-based' → logprob: -5.875044822692871
    10. ' des' → logprob: -6.375044822692871

Token 255: ' commence' (ID: 44755)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4880398213863373
    2. '0' → logprob: -1.6130398511886597
    3. ' basée' → logprob: -3.48803973197937
    4. ' starts' → logprob: -3.61303973197937
    5. '-' → logprob: -3.86303973197937
    6. ' ' → logprob: -4.113039970397949
    7. ' zero' → logprob: -4.363039970397949
    8. ' de' → logprob: -4.363039970397949
    9. ' -' → logprob: -4.488039970397949
    10. ' base' → logprob: -4.613039970397949

Token 256: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04062073305249214
    2. 'à' → logprob: -3.290620803833008
    3. ' at' → logprob: -6.540620803833008
    4. '0' → logprob: -7.290620803833008
    5. 'from' → logprob: -8.415620803833008
    6. 'at' → logprob: -9.040620803833008
    7. ' from' → logprob: -10.290620803833008
    8. 'de' → logprob: -11.165620803833008
    9. ' de' → logprob: -11.415620803833008
    10. 'a' → logprob: -11.790620803833008

Token 257: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006241570226848125
    2. ' ' → logprob: -7.875624179840088
    3. 'z' → logprob: -8.50062370300293
    4. ' zéro' → logprob: -10.50062370300293
    5. ' z' → logprob: -11.62562370300293
    6. 'zero' → logprob: -12.50062370300293
    7. ' zero' → logprob: -14.75062370300293
    8. '```' → logprob: -16.75062370300293
    9. ' ' → logprob: -17.75062370300293
    10. '۰' → logprob: -18.12562370300293

Token 258: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010533124441280961
    2. 'z' → logprob: -9.250104904174805
    3. 'zero' → logprob: -12.375104904174805
    4. ' zéro' → logprob: -12.625104904174805
    5. ' ' → logprob: -13.500104904174805
    6. ' z' → logprob: -16.000104904174805
    7. '```' → logprob: -16.625104904174805
    8. '۰' → logprob: -17.625104904174805
    9. ' zero' → logprob: -17.750104904174805
    10. '０' → logprob: -18.875104904174805

Token 259: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00776053499430418
    2. ' )' → logprob: -5.007760524749756
    3. '       ' → logprob: -7.257760524749756
    4. ')
' → logprob: -8.382761001586914
    5. '   ' → logprob: -9.882761001586914
    6. ' )
' → logprob: -11.382761001586914
    7. ']' → logprob: -11.382761001586914
    8. '),' → logprob: -11.507761001586914
    9. ')]' → logprob: -11.882761001586914
    10. ').' → logprob: -12.257761001586914

Token 260: ' Python' (ID: 26534)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.8579344749450684
    2. ' Python' → logprob: -1.1079344749450684
    3. 'python' → logprob: -1.4829344749450684
    4. ' python' → logprob: -4.107934474945068
    5. '0' → logprob: -6.732934474945068
    6. ' code' → logprob: -8.107934951782227
    7. ' ' → logprob: -8.232934951782227
    8. ' programmation' → logprob: -8.482934951782227
    9. 'py' → logprob: -9.982934951782227
    10. 'a' → logprob: -10.357934951782227

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10982656478881836
    2. ' )' → logprob: -2.7348265647888184
    3. ')
' → logprob: -4.109826564788818
    4. '       ' → logprob: -4.109826564788818
    5. ' )
' → logprob: -5.109826564788818
    6. '   ' → logprob: -8.859827041625977
    7. ')]' → logprob: -11.109827041625977
    8. ' ]' → logprob: -11.109827041625977
    9. ')
' → logprob: -11.234827041625977
    10. ' ' → logprob: -11.359827041625977

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7319427728652954
    2. '   ' → logprob: -0.9819427728652954
    3. 'Edge' → logprob: -2.356942653656006
    4. ' Edge' → logprob: -3.106942653656006
    5. ')' → logprob: -6.356942653656006
    6. '[' → logprob: -6.731942653656006
    7. '    ' → logprob: -7.856942653656006
    8. '.Edge' → logprob: -7.981942653656006
    9. '           ' → logprob: -8.356943130493164
    10. '<Edge' → logprob: -8.481943130493164

Token 263: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' (adapté à ' Edge') → logprob: -0.3872964382171631
    2. ' Edge' → logprob: -1.137296438217163
    3. '       ' → logprob: -8.262296676635742
    4. '   ' → logprob: -8.887296676635742
    5. '.Edge' → logprob: -11.637296676635742
    6. '<Edge' → logprob: -12.637296676635742
    7. '_edge' → logprob: -12.887296676635742
    8. ' ' → logprob: -13.262296676635742
    9. ' a' → logprob: -13.387296676635742
    10. '    ' → logprob: -13.637296676635742

Token 264: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.729906196298543e-06
    2. '[' → logprob: -11.875009536743164
    3. 'a' → logprob: -13.625009536743164
    4. '   ' → logprob: -14.250009536743164
    5. ' [' → logprob: -14.375009536743164
    6. '[A' → logprob: -15.750009536743164
    7. '       ' → logprob: -17.250009536743164
    8. ' a' → logprob: -18.500009536743164
    9. '[b' → logprob: -18.750009536743164
    10. '[int' → logprob: -18.875009536743164

Token 265: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008415285497903824
    2. ' -' → logprob: -4.883415222167969
    3. '[' → logprob: -7.133415222167969
    4. '[-' → logprob: -12.633415222167969
    5. '1' → logprob: -12.883415222167969
    6. '   ' → logprob: -13.508415222167969
    7. 'a' → logprob: -14.008415222167969
    8. ']-' → logprob: -14.258415222167969
    9. 's' → logprob: -15.258415222167969
    10. '()-' → logprob: -15.258415222167969

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '2' → logprob: -16.37502098083496
    4. '   ' → logprob: -16.75002098083496
    5. '```' → logprob: -16.75002098083496
    6. '<|end|>' → logprob: -17.56252098083496
    7. '[' → logprob: -18.06252098083496
    8. '１' → logprob: -18.75002098083496
    9. '-' → logprob: -19.06252098083496
    10. ']' → logprob: -19.18752098083496

Token 267: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -5.431207682704553e-05
    2. ']' → logprob: -10.125054359436035
    3. ' ].' → logprob: -11.750054359436035
    4. '.append' → logprob: -12.250054359436035
    5. ').' → logprob: -14.125054359436035
    6. '   ' → logprob: -14.500054359436035
    7. '.' → logprob: -15.250054359436035
    8. '       ' → logprob: -17.62505340576172
    9. ']).' → logprob: -18.12505340576172
    10. ''].' → logprob: -18.25005340576172

Token 268: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. ' append' → logprob: -17.5
    3. '.append' → logprob: -18.5
    4. 'appen' → logprob: -19.25
    5. 'app' → logprob: -20.0
    6. 'push' → logprob: -22.5
    7. '	append' → logprob: -22.75
    8. 'add' → logprob: -23.625
    9. '_append' → logprob: -23.875
    10. 'Append' → logprob: -24.25

Token 269: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.005237429868429899
    2. 'b' → logprob: -5.255237579345703
    3. '(' → logprob: -13.255237579345703
    4. ' b' → logprob: -13.505237579345703
    5. ' (' → logprob: -15.255237579345703
    6. '(
' → logprob: -15.380237579345703
    7. ')b' → logprob: -17.630237579345703
    8. '	b' → logprob: -17.880237579345703
    9. '((' → logprob: -19.130237579345703
    10. '[b' → logprob: -20.755237579345703

Token 270: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004627002868801355
    2. ' -' → logprob: -5.379627227783203
    3. '<|end|>' → logprob: -12.004627227783203
    4. ')-' → logprob: -14.754627227783203
    5. '<|end|>' → logprob: -16.004627227783203
    6. ')' → logprob: -16.004627227783203
    7. '()-' → logprob: -17.129627227783203
    8. '1' → logprob: -17.504627227783203
    9. '
' → logprob: -17.504627227783203
    10. '[' → logprob: -17.629627227783203

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -16.125011444091797
    4. '<|end|>' → logprob: -16.375011444091797
    5. ')' → logprob: -16.500011444091797
    6. '   ' → logprob: -16.750011444091797
    7. '2' → logprob: -16.875011444091797
    8. '`' → logprob: -18.125011444091797
    9. '-' → logprob: -18.375011444091797
    10. '
' → logprob: -18.375011444091797

Token 272: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.641841820150148e-05
    2. ')
' → logprob: -11.00002670288086
    3. ' )' → logprob: -11.62502670288086
    4. '       ' → logprob: -15.00002670288086
    5. '   ' → logprob: -15.12502670288086
    6. '),' → logprob: -16.62502670288086
    7. '<|end|>' → logprob: -16.75002670288086
    8. ')#' → logprob: -17.50002670288086
    9. ')add' → logprob: -18.00002670288086
    10. ')

' → logprob: -18.00002670288086

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009231330826878548
    2. 'Edge' → logprob: -5.0092315673828125
    3. ' Edge' → logprob: -6.3842315673828125
    4. '   ' → logprob: -7.2592315673828125
    5. '        
' → logprob: -10.134231567382812
    6. '     ' → logprob: -11.134231567382812
    7. '<Edge' → logprob: -11.259231567382812
    8. '    ' → logprob: -11.509231567382812
    9. '      ' → logprob: -11.759231567382812
    10. '           ' → logprob: -11.884231567382812

Token 274: ' #' (ID: 1069)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.15314923226833344
    2. ' Edge' → logprob: -2.528149127960205
    3. '       ' → logprob: -2.778149127960205
    4. '   ' → logprob: -11.028149604797363
    5. '.Edge' → logprob: -12.153149604797363
    6. '<Edge' → logprob: -12.403149604797363
    7. ' ' → logprob: -12.528149604797363
    8. '_edge' → logprob: -13.278149604797363
    9. ' ' → logprob: -13.403149604797363
    10. '      ' → logprob: -13.528149604797363

Token 275: ' Ajouter' (ID: 165754)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.25203222036361694
    2. ' Edge' → logprob: -1.5020322799682617
    3. '       ' → logprob: -9.252032279968262
    4. '   ' → logprob: -12.127032279968262
    5. ' ' → logprob: -14.627032279968262
    6. '_edge' → logprob: -15.127032279968262
    7. '.Edge' → logprob: -15.502032279968262
    8. ' ' → logprob: -15.627032279968262
    9. ' edge' → logprob: -15.752032279968262
    10. '<Edge' → logprob: -15.877032279968262

Token 276: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.43331006169319153
    2. ' a' → logprob: -1.0583100318908691
    3. ' Edge' → logprob: -6.058310031890869
    4. 'Edge' → logprob: -6.183310031890869
    5. '[a' → logprob: -8.808310508728027
    6. '(a' → logprob: -10.433310508728027
    7. '	a' → logprob: -12.433310508728027
    8. ' ' → logprob: -12.558310508728027
    9. ' (' → logprob: -12.808310508728027
    10. '[' → logprob: -13.183310508728027

Token 277: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002195933135226369
    2. '[' → logprob: -6.127195835113525
    3. ' -' → logprob: -11.752196311950684
    4. '[-' → logprob: -13.127196311950684
    5. 'Edge' → logprob: -14.877196311950684
    6. '-edge' → logprob: -15.502196311950684
    7. '[b' → logprob: -16.002195358276367
    8. '-[' → logprob: -16.377195358276367
    9. ')-' → logprob: -17.127195358276367
    10. ' Edge' → logprob: -17.127195358276367

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. '-' → logprob: -15.125000953674316
    4. '[' → logprob: -16.125
    5. '```' → logprob: -18.5
    6. '１' → logprob: -19.0
    7. 'b' → logprob: -19.25
    8. '
' → logprob: -20.5625
    9. 'Edge' → logprob: -21.1875
    10. '[b' → logprob: -21.375

Token 279: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04678328335285187
    2. ' .' → logprob: -4.046783447265625
    3. '[' → logprob: -4.296783447265625
    4. ').' → logprob: -5.046783447265625
    5. '.Edge' → logprob: -5.171783447265625
    6. '.append' → logprob: -6.546783447265625
    7. ' to' → logprob: -7.921783447265625
    8. ')' → logprob: -8.046783447265625
    9. '].' → logprob: -9.046783447265625
    10. 'Edge' → logprob: -9.546783447265625

Token 280: ' la' (ID: 557)
  Prédit: ' Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.2014906257390976
    2. 'Edge' → logprob: -1.7014906406402588
    3. ' l' → logprob: -10.57649040222168
    4. ' la' → logprob: -10.57649040222168
    5. 'l' → logprob: -10.95149040222168
    6. '<Edge' → logprob: -12.95149040222168
    7. '.Edge' → logprob: -13.57649040222168
    8. '[' → logprob: -13.57649040222168
    9. ' ' → logprob: -13.70149040222168
    10. 'la' → logprob: -14.70149040222168

Token 281: ' liste' (ID: 31719)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.0263528972864151
    2. ' Edge' → logprob: -3.651352882385254
    3. '[' → logprob: -10.026352882385254
    4. '_edge' → logprob: -13.026352882385254
    5. '.Edge' → logprob: -13.151352882385254
    6. '<Edge' → logprob: -13.526352882385254
    7. '[
' → logprob: -13.651352882385254
    8. '[]' → logprob: -14.901352882385254
    9. 'edge' → logprob: -14.901352882385254
    10. ' ' → logprob: -15.401352882385254

Token 282: ' des' (ID: 731)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.023719875141978264
    2. '[' → logprob: -4.023719787597656
    3. 'Edge' → logprob: -5.273719787597656
    4. 'b' → logprob: -8.273719787597656
    5. ' Edge' → logprob: -8.898719787597656
    6. '<Edge' → logprob: -10.523719787597656
    7. ' b' → logprob: -12.148719787597656
    8. '[a' → logprob: -13.148719787597656
    9. ' [' → logprob: -14.023719787597656
    10. '       ' → logprob: -14.648719787597656

Token 283: ' voisins' (ID: 166720)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.11017119139432907
    2. ' voisins' → logprob: -3.11017107963562
    3. ' Edge' → logprob: -3.36017107963562
    4. 'vo' → logprob: -3.98517107963562
    5. 'neighbors' → logprob: -5.235171318054199
    6. ' neighbors' → logprob: -7.610171318054199
    7. ' vo' → logprob: -8.9851713180542
    8. '[' → logprob: -9.1101713180542
    9. 'Vo' → logprob: -9.2351713180542
    10. ' voisin' → logprob: -9.3601713180542

Token 284: ' de' (ID: 334)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.08135141432285309
    2. '[' → logprob: -2.5813515186309814
    3. 'Edge' → logprob: -6.206351280212402
    4. 'b' → logprob: -8.331351280212402
    5. ' Edge' → logprob: -8.831351280212402
    6. ' [' → logprob: -10.581351280212402
    7. '<Edge' → logprob: -11.456351280212402
    8. ' of' → logprob: -11.581351280212402
    9. '[B' → logprob: -13.581351280212402
    10. '```' → logprob: -13.706351280212402

Token 285: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.29928985238075256
    2. 'b' → logprob: -1.5492898225784302
    3. ' Edge' → logprob: -3.2992899417877197
    4. 'Edge' → logprob: -4.674289703369141
    5. '[b' → logprob: -11.92428970336914
    6. '(b' → logprob: -12.29928970336914
    7. '<Edge' → logprob: -13.54928970336914
    8. '.Edge' → logprob: -14.17428970336914
    9. '	b' → logprob: -14.79928970336914
    10. ' ' → logprob: -14.79928970336914

Token 286: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016110969707369804
    2. '[' → logprob: -4.141110897064209
    3. ' -' → logprob: -10.141111373901367
    4. '[-' → logprob: -10.641111373901367
    5. 'Edge' → logprob: -11.766111373901367
    6. '-edge' → logprob: -13.391111373901367
    7. '.' → logprob: -13.766111373901367
    8. '   ' → logprob: -14.141111373901367
    9. '][' → logprob: -15.141111373901367
    10. ' [' → logprob: -15.641111373901367

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '-' → logprob: -13.875001907348633
    3. '[' → logprob: -14.875001907348633
    4. ' ' → logprob: -15.000001907348633
    5. '```' → logprob: -16.500001907348633
    6. '.' → logprob: -18.125001907348633
    7. '   ' → logprob: -19.375001907348633
    8. ')' → logprob: -19.625001907348633
    9. 'Edge' → logprob: -19.875001907348633
    10. 'b' → logprob: -20.000001907348633

Token 288: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10117967426776886
    2. '.' → logprob: -2.726179599761963
    3. '.Edge' → logprob: -4.351179599761963
    4. '       ' → logprob: -4.476179599761963
    5. '   ' → logprob: -5.976179599761963
    6. 'Edge' → logprob: -6.726179599761963
    7. ').' → logprob: -6.976179599761963
    8. ' .' → logprob: -7.601179599761963
    9. '[].' → logprob: -8.101180076599121
    10. ')' → logprob: -8.101180076599121

Token 289: ' car' (ID: 1669)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.5029812455177307
    2. ' Edge' → logprob: -1.002981185913086
    3. '<|end|>' → logprob: -4.252981185913086
    4. ')' → logprob: -5.252981185913086
    5. '       ' → logprob: -6.502981185913086
    6. '[' → logprob: -6.502981185913086
    7. ' ' → logprob: -7.127981185913086
    8. '<Edge' → logprob: -7.252981185913086
    9. ' car' → logprob: -7.627981185913086
    10. '.Edge' → logprob: -7.627981185913086

Token 290: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2879013121128082
    2. ' c' → logprob: -1.6629012823104858
    3. 'l' → logprob: -3.4129014015197754
    4. ' Edge' → logprob: -4.162901401519775
    5. 'Edge' → logprob: -4.912901401519775
    6. ' graph' → logprob: -6.537901401519775
    7. 'c' → logprob: -6.787901401519775
    8. ' le' → logprob: -8.162900924682617
    9. ' the' → logprob: -8.162900924682617
    10. ' ' → logprob: -8.287900924682617

Token 291: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.7650291323661804
    2. ' grap' → logprob: -1.1400291919708252
    3. 'graph' → logprob: -2.015029191970825
    4. ' graph' → logprob: -2.515029191970825
    5. ' arbre' → logprob: -7.640028953552246
    6. ' graphique' → logprob: -10.265028953552246
    7. 'ar' → logprob: -10.390028953552246
    8. '	graph' → logprob: -10.765028953552246
    9. 'gra' → logprob: -11.515028953552246
    10. '(graph' → logprob: -11.640028953552246

Token 292: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0005793657619506121
    2. 'h' → logprob: -7.875579357147217
    3. 'phe' → logprob: -9.250579833984375
    4. '[' → logprob: -10.000579833984375
    5. '#' → logprob: -10.750579833984375
    6. 'e' → logprob: -11.750579833984375
    7. 'ph' → logprob: -12.125579833984375
    8. 'aphe' → logprob: -13.125579833984375
    9. '[]' → logprob: -13.500579833984375
    10. 'pe' → logprob: -13.625579833984375

Token 293: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.02685263380408287
    2. 'est' → logprob: -3.901852607727051
    3. '#' → logprob: -5.776852607727051
    4. ' is' → logprob: -5.901852607727051
    5. 's' → logprob: -8.77685260772705
    6. ''est' → logprob: -9.27685260772705
    7. ' #' → logprob: -9.90185260772705
    8. 'is' → logprob: -10.27685260772705
    9. 'es' → logprob: -10.77685260772705
    10. ' n' → logprob: -11.27685260772705

Token 294: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.030014969408512115
    2. 'non' → logprob: -3.530014991760254
    3. 'und' → logprob: -8.905014991760254
    4. ' und' → logprob: -9.280014991760254
    5. ' ' → logprob: -11.905014991760254
    6. ' bid' → logprob: -11.905014991760254
    7. ' nond' → logprob: -11.905014991760254
    8. '   ' → logprob: -12.030014991760254
    9. ' un' → logprob: -13.030014991760254
    10. '_non' → logprob: -13.530014991760254

Token 295: ' orient' (ID: 13198)
  Prédit: ' orient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orient' → logprob: -0.6880832314491272
    2. 'orient' → logprob: -1.1880831718444824
    3. 'or' → logprob: -1.6880831718444824
    4. ' dirig' → logprob: -4.938083171844482
    5. ' oriented' → logprob: -7.813083171844482
    6. ' or' → logprob: -9.81308364868164
    7. '   ' → logprob: -9.93808364868164
    8. '-or' → logprob: -10.06308364868164
    9. '_or' → logprob: -10.93808364868164
    10. 'orien' → logprob: -11.68808364868164

Token 296: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.000871082826051861
    2. 'ed' → logprob: -7.125871181488037
    3. 'e' → logprob: -10.500870704650879
    4. 'ée' → logprob: -11.250870704650879
    5. '```' → logprob: -11.750870704650879
    6. 'és' → logprob: -12.250870704650879
    7. 'É' → logprob: -12.750870704650879
    8. '[' → logprob: -13.000870704650879
    9. 'ted' → logprob: -13.500870704650879
    10. 'è' → logprob: -13.750870704650879

Token 297: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5557062029838562
    2. 'Edge' → logprob: -1.055706262588501
    3. ' Edge' → logprob: -2.555706262588501
    4. '.Edge' → logprob: -7.930706024169922
    5. '   ' → logprob: -8.555706024169922
    6. '<Edge' → logprob: -9.180706024169922
    7. '        ' → logprob: -11.305706024169922
    8. '[' → logprob: -11.430706024169922
    9. '           ' → logprob: -11.555706024169922
    10. '.' → logprob: -11.680706024169922

Token 298: 'ar' (ID: 277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5932614207267761
    2. ' )' → logprob: -1.718261480331421
    3. 'Edge' → logprob: -1.968261480331421
    4. ' Edge' → logprob: -2.093261480331421
    5. '   ' → logprob: -6.718261241912842
    6. ' und' → logprob: -6.968261241912842
    7. ' )
' → logprob: -7.593261241912842
    8. '       ' → logprob: -7.718261241912842
    9. ' bid' → logprob: -8.21826171875
    10. ')
' → logprob: -8.59326171875

Token 299: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.826228141784668
    2. 'êtes' → logprob: -0.951228141784668
    3. 'ê' → logprob: -1.826228141784668
    4. 'e' → logprob: -5.201228141784668
    5. 'êt' → logprob: -5.201228141784668
    6. '�' → logprob: -7.576228141784668
    7. 'Ê' → logprob: -7.576228141784668
    8. 'bre' → logprob: -7.951228141784668
    9. '^' → logprob: -7.951228141784668
    10. 'é' → logprob: -8.326228141784668

Token 300: ' bid' (ID: 16023)
  Prédit: ' bid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bid' → logprob: -0.2595268785953522
    2. ' sym' → logprob: -2.1345269680023193
    3. ')' → logprob: -2.5095269680023193
    4. 'bid' → logprob: -5.13452672958374
    5. '<|end|>' → logprob: -5.13452672958374
    6. '_bid' → logprob: -5.75952672958374
    7. ' bi' → logprob: -6.00952672958374
    8. ' entre' → logprob: -6.50952672958374
    9. 'sym' → logprob: -6.50952672958374
    10. ' )' → logprob: -7.00952672958374

Token 301: 'irection' (ID: 7746)
  Prédit: 'irection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irection' → logprob: -0.306504487991333
    2. 'irectional' → logprob: -1.681504487991333
    3. 'ir' → logprob: -3.556504487991333
    4. 'irected' → logprob: -3.681504487991333
    5. 'irect' → logprob: -4.056504249572754
    6. 'rection' → logprob: -5.431504249572754
    7. 'ire' → logprob: -6.431504249572754
    8. 'i' → logprob: -8.181504249572754
    9. 'a' → logprob: -9.431504249572754
    10. 're' → logprob: -9.806504249572754

Token 302: 'nelle' (ID: 30805)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.01008257269859314
    2. 'é' → logprob: -5.010082721710205
    3. 'ale' → logprob: -6.385082721710205
    4. 'e' → logprob: -7.010082721710205
    5. 'ee' → logprob: -8.635082244873047
    6. '```' → logprob: -9.010082244873047
    7. 'onnée' → logprob: -9.260082244873047
    8. 'al' → logprob: -9.510082244873047
    9. 'nelle' → logprob: -10.135082244873047
    10. 'née' → logprob: -10.385082244873047

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044425477972254157
    2. ' )' → logprob: -7.875444412231445
    3. ').' → logprob: -10.250444412231445
    4. ')
' → logprob: -11.000444412231445
    5. '       ' → logprob: -12.375444412231445
    6. '   ' → logprob: -12.500444412231445
    7. ' ' → logprob: -14.250444412231445
    8. '),' → logprob: -14.500444412231445
    9. ')
' → logprob: -14.625444412231445
    10. '.' → logprob: -14.625444412231445

Token 304: '       ' (ID: 309)
  Prédit: ' Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.620647668838501
    2. 'Edge' → logprob: -1.245647668838501
    3. '       ' → logprob: -1.745647668838501
    4. '<Edge' → logprob: -9.745647430419922
    5. '.Edge' → logprob: -10.870647430419922
    6. '   ' → logprob: -11.120647430419922
    7. ' ' → logprob: -11.620647430419922
    8. ' ' → logprob: -12.495647430419922
    9. '      ' → logprob: -12.995647430419922
    10. '_edge' → logprob: -13.245647430419922

Token 305: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' (adapté à ' Edge') → logprob: -0.0007101670489646494
    2. ' Edge' → logprob: -7.2507100105285645
    3. '       ' → logprob: -15.625710487365723
    4. '   ' → logprob: -17.875709533691406
    5. '<Edge' → logprob: -18.250709533691406
    6. '.Edge' → logprob: -18.250709533691406
    7. '_edge' → logprob: -19.125709533691406
    8. 'edge' → logprob: -19.250709533691406
    9. 'Edges' → logprob: -19.625709533691406
    10. 'EDGE' → logprob: -19.750709533691406

Token 306: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.125006675720215
    3. '[a' → logprob: -14.375006675720215
    4. ' [' → logprob: -14.500006675720215
    5. 'b' → logprob: -14.625006675720215
    6. '```' → logprob: -17.37500762939453
    7. '[B' → logprob: -17.50000762939453
    8. '   ' → logprob: -17.75000762939453
    9. '[s' → logprob: -18.25000762939453
    10. ' ' → logprob: -18.87500762939453

Token 307: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.955703818472102e-05
    2. ' -' → logprob: -10.250059127807617
    3. '[' → logprob: -11.250059127807617
    4. '[-' → logprob: -11.500059127807617
    5. '-.' → logprob: -15.000059127807617
    6. '.' → logprob: -15.125059127807617
    7. ']-' → logprob: -15.750059127807617
    8. '1' → logprob: -16.125059127807617
    9. '   ' → logprob: -16.625059127807617
    10. '].' → logprob: -17.375059127807617

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.875001907348633
    3. '-' → logprob: -14.750001907348633
    4. ' ' → logprob: -16.000001907348633
    5. '```' → logprob: -16.500001907348633
    6. '<|end|>' → logprob: -16.750001907348633
    7. '.append' → logprob: -17.500001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '.' → logprob: -18.562501907348633
    10. 'append' → logprob: -18.937501907348633

Token 309: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0007401806069537997
    2. ').' → logprob: -7.375740051269531
    3. '.' → logprob: -9.750740051269531
    4. '.append' → logprob: -10.250740051269531
    5. ' ].' → logprob: -11.125740051269531
    6. ' .' → logprob: -13.000740051269531
    7. ']' → logprob: -13.250740051269531
    8. '}.' → logprob: -14.625740051269531
    9. '   ' → logprob: -14.750740051269531
    10. ' ).' → logprob: -16.25074005126953

Token 310: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. 'appen' → logprob: -16.25
    3. ' append' → logprob: -16.75
    4. '.append' → logprob: -16.875
    5. '	append' → logprob: -19.0
    6. 'add' → logprob: -20.375
    7. 'app' → logprob: -20.875
    8. ' ' → logprob: -22.0
    9. 'Append' → logprob: -22.125
    10. '   ' → logprob: -22.25

Token 311: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.0484450437361374e-05
    2. 'a' → logprob: -10.125040054321289
    3. '(' → logprob: -14.750040054321289
    4. ' (' → logprob: -18.00004005432129
    5. '(
' → logprob: -18.50004005432129
    6. ' a' → logprob: -18.87504005432129
    7. '[a' → logprob: -19.50004005432129
    8. '((' → logprob: -20.00004005432129
    9. ')a' → logprob: -20.37504005432129
    10. '(A' → logprob: -20.62504005432129

Token 312: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.662937372922897e-05
    2. ' -' → logprob: -9.250096321105957
    3. '[' → logprob: -15.750096321105957
    4. '[-' → logprob: -16.250097274780273
    5. '1' → logprob: -16.500097274780273
    6. ')-' → logprob: -16.500097274780273
    7. '   ' → logprob: -16.625097274780273
    8. '-
' → logprob: -17.500097274780273
    9. ')' → logprob: -17.750097274780273
    10. '```' → logprob: -18.125097274780273

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '-' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.125003814697266
    4. ')' → logprob: -15.500003814697266
    5. '<|end|>' → logprob: -17.125003814697266
    6. '```' → logprob: -18.000003814697266
    7. '[' → logprob: -18.625003814697266
    8. '   ' → logprob: -19.000003814697266
    9. '
' → logprob: -19.875003814697266
    10. '0' → logprob: -20.000003814697266

Token 314: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ')
' → logprob: -11.250017166137695
    3. ' )' → logprob: -12.625017166137695
    4. '   ' → logprob: -15.375017166137695
    5. '))' → logprob: -17.125017166137695
    6. '<|end|>' → logprob: -17.125017166137695
    7. ')
' → logprob: -17.500017166137695
    8. ')}' → logprob: -17.500017166137695
    9. ')

' → logprob: -17.625017166137695
    10. ')return' → logprob: -17.875017166137695

Token 315: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07671110332012177
    2. '    
' → logprob: -2.7017111778259277
    3. '   ' → logprob: -6.076711177825928
    4. '
    
' → logprob: -6.201711177825928
    5. '

' → logprob: -6.451711177825928
    6. '  
' → logprob: -8.82671070098877
    7. '    
    
' → logprob: -9.20171070098877
    8. 'def' → logprob: -9.32671070098877
    9. ' 
' → logprob: -9.32671070098877
    10. '   
' → logprob: -9.45171070098877

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3046643137931824
    2. '
' → logprob: -1.9296643733978271
    3. '    
' → logprob: -2.429664373397827
    4. 'distance' → logprob: -4.304664134979248
    5. 'visited' → logprob: -4.804664134979248
    6. '#' → logprob: -6.179664134979248
    7. 'def' → logprob: -6.304664134979248
    8. 'dist' → logprob: -6.429664134979248
    9. '```' → logprob: -6.929664134979248
    10. '  
' → logprob: -7.804664134979248

Token 317: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.3176344633102417
    2. '#' (adapté à ' #') → logprob: -1.4426344633102417
    3. 'dist' → logprob: -1.8176344633102417
    4. 'distance' → logprob: -2.0676345825195312
    5. '   ' → logprob: -2.6926345825195312
    6. '
' → logprob: -2.9426345825195312
    7. 'def' → logprob: -3.4426345825195312
    8. '    
' → logprob: -3.5676345825195312
    9. 'queue' → logprob: -4.192634582519531
    10. 'depth' → logprob: -5.692634582519531

Token 318: ' Lire' (ID: 57624)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.420825719833374
    2. 'visited' → logprob: -1.670825719833374
    3. '#' → logprob: -2.920825719833374
    4. 'distance' → logprob: -3.295825719833374
    5. 'def' → logprob: -3.795825719833374
    6. 'queue' → logprob: -4.545825958251953
    7. 'q' → logprob: -4.795825958251953
    8. 'start' → logprob: -5.170825958251953
    9. 'Q' → logprob: -5.295825958251953
    10. 'depth' → logprob: -5.795825958251953

Token 319: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9335722327232361
    2. ' K' → logprob: -1.5585722923278809
    3. ' Q' → logprob: -2.308572292327881
    4. 'Q' → logprob: -2.683572292327881
    5. 'K' → logprob: -3.183572292327881
    6. 'the' → logprob: -3.683572292327881
    7. ' a' → logprob: -4.058572292327881
    8. ' M' → logprob: -4.308572292327881
    9. 'a' → logprob: -4.308572292327881
    10. '(' → logprob: -4.433572292327881

Token 320: ' liste' (ID: 31719)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.0276832580566406
    2. ',' → logprob: -1.6526832580566406
    3. 'ligne' → logprob: -2.0276832580566406
    4. 'de' → logprob: -2.5276832580566406
    5. ' ' → logprob: -3.1526832580566406
    6. ' liste' → logprob: -3.6526832580566406
    7. 'liste' → logprob: -4.027683258056641
    8. ' valeur' → logprob: -4.152683258056641
    9. 's' → logprob: -4.402683258056641
    10. 'val' → logprob: -4.527683258056641

Token 321: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.657257616519928
    2. '=' → logprob: -1.2822575569152832
    3. '()' → logprob: -1.9072575569152832
    4. 's' → logprob: -3.657257556915283
    5. '(' → logprob: -5.282257556915283
    6. 'a' → logprob: -5.532257556915283
    7. 'of' → logprob: -6.032257556915283
    8. 'de' → logprob: -6.657257556915283
    9. '_' → logprob: -6.782257556915283
    10. 'C' → logprob: -6.907257556915283

Token 322: ''ent' (ID: 53422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2124580144882202
    2. '(int' → logprob: -1.2124580144882202
    3. 'int' → logprob: -1.4624580144882202
    4. '(' → logprob: -2.8374581336975098
    5. 'a' → logprob: -3.8374581336975098
    6. ' integers' → logprob: -4.58745813369751
    7. '[int' → logprob: -4.58745813369751
    8. 's' → logprob: -4.83745813369751
    9. 'des' → logprob: -4.96245813369751
    10. 'inte' → logprob: -5.08745813369751

Token 323: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.35722509026527405
    2. 't' → logprob: -1.2322250604629517
    3. 'ières' → logprob: -5.482224941253662
    4. 'ités' → logprob: -6.982224941253662
    5. 'ier' → logprob: -7.607224941253662
    6. 'er' → logprob: -7.857224941253662
    7. 'et' → logprob: -8.10722541809082
    8. 'um' → logprob: -8.35722541809082
    9. 'te' → logprob: -8.98222541809082
    10. 'ent' → logprob: -8.98222541809082

Token 324: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2632434368133545
    2. 'V' → logprob: -2.2632434368133545
    3. 'S' → logprob: -2.7632434368133545
    4. 'dist' → logprob: -3.1382434368133545
    5. ' K' → logprob: -3.2632434368133545
    6. 'A' → logprob: -3.3882434368133545
    7. ' V' → logprob: -3.5132434368133545
    8. 'K' → logprob: -3.6382434368133545
    9. 'C' → logprob: -3.7632434368133545
    10. '=' → logprob: -3.8882434368133545

Token 325: ' représentent' (ID: 169478)
  Prédit: ' représente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.7022302150726318
    2. ' =' → logprob: -1.2022302150726318
    3. '=' → logprob: -2.452230215072632
    4. ' repres' → logprob: -3.077230215072632
    5. 'represent' → logprob: -3.827230215072632
    6. ' repre' → logprob: -4.452230453491211
    7. 'rep' → logprob: -5.202230453491211
    8. 's' → logprob: -5.327230453491211
    9. ' correspond' → logprob: -5.577230453491211
    10. ' represent' → logprob: -5.577230453491211

Token 326: ' des' (ID: 731)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0164152383804321
    2. ' les' → logprob: -1.2664152383804321
    3. 'les' → logprob: -2.1414151191711426
    4. 'le' → logprob: -2.6414151191711426
    5. 'la' → logprob: -2.7664151191711426
    6. 'l' → logprob: -3.2664151191711426
    7. ' le' → logprob: -3.7664151191711426
    8. ' l' → logprob: -4.141415119171143
    9. 'une' → logprob: -5.016415119171143
    10. 'the' → logprob: -5.266415119171143

Token 327: ' valeurs' (ID: 73668)
  Prédit: ' somm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somm' → logprob: -1.020557165145874
    2. 'ord' → logprob: -2.270557165145874
    3. 'indices' → logprob: -2.520557165145874
    4. ' visites' → logprob: -2.770557165145874
    5. ' points' → logprob: -2.895557165145874
    6. 's' → logprob: -3.020557165145874
    7. ' indices' → logprob: -3.020557165145874
    8. 'points' → logprob: -3.395557165145874
    9. ' ord' → logprob: -3.520557165145874
    10. ' permutations' → logprob: -3.770557165145874

Token 328: ' associ' (ID: 5516)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42046794295310974
    2. 'V' → logprob: -2.0454678535461426
    3. 'val' → logprob: -3.1704678535461426
    4. '=' → logprob: -3.1704678535461426
    5. 'values' → logprob: -3.9204678535461426
    6. ' V' → logprob: -4.170467853546143
    7. 'vals' → logprob: -4.170467853546143
    8. 'd' → logprob: -4.795467853546143
    9. 'de' → logprob: -5.170467853546143
    10. 'a' → logprob: -5.170467853546143

Token 329: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.03774777427315712
    2. 'és' → logprob: -3.787747859954834
    3. 'é' → logprob: -4.537747859954834
    4. 'ée' → logprob: -6.037747859954834
    5. '=' → logprob: -6.912747859954834
    6. 'es' → logprob: -8.912747383117676
    7. 'à' → logprob: -9.787747383117676
    8. ' =' → logprob: -10.037747383117676
    9. ' à' → logprob: -10.662747383117676
    10. 'è' → logprob: -11.662747383117676

Token 330: ' aux' (ID: 5850)
  Prédit: ' aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.14259059727191925
    2. ' à' → logprob: -2.7675905227661133
    3. 'au' → logprob: -4.142590522766113
    4. ' au' → logprob: -4.517590522766113
    5. 'a' → logprob: -4.642590522766113
    6. ' a' → logprob: -5.017590522766113
    7. 'aux' → logprob: -5.142590522766113
    8. ' =' → logprob: -5.142590522766113
    9. ' des' → logprob: -5.392590522766113
    10. 's' → logprob: -6.142590522766113

Token 331: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9618830680847168
    2. 'cha' → logprob: -0.9618830680847168
    3. 'ch' → logprob: -2.586883068084717
    4. ' chaque' → logprob: -2.836883068084717
    5. 'som' → logprob: -3.586883068084717
    6. 'n' → logprob: -4.086883068084717
    7. ' somm' → logprob: -4.211883068084717
    8. 'each' → logprob: -4.836883068084717
    9. 'nodes' → logprob: -4.836883068084717
    10. 'points' → logprob: -5.086883068084717

Token 332: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.024068137630820274
    2. 'ètes' → logprob: -5.024068355560303
    3. 'es' → logprob: -5.649068355560303
    4. 'e' → logprob: -6.399068355560303
    5. 'ètres' → logprob: -6.649068355560303
    6. 'è' → logprob: -6.649068355560303
    7. 'mets' → logprob: -6.774068355560303
    8. 'vertices' → logprob: -7.149068355560303
    9. '`' → logprob: -7.149068355560303
    10. 'à' → logprob: -7.274068355560303

Token 333: ' (' (ID: 350)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.224065899848938
    2. 'vals' → logprob: -1.349065899848938
    3. '   ' → logprob: -1.974065899848938
    4. 'values' → logprob: -2.0990657806396484
    5. 'V' → logprob: -2.7240657806396484
    6. ' values' → logprob: -3.4740657806396484
    7. 'A' → logprob: -4.349065780639648
    8. ' V' → logprob: -4.724065780639648
    9. ' vals' → logprob: -4.724065780639648
    10. ' val' → logprob: -4.724065780639648

Token 334: 'par' (ID: 796)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.2363990545272827
    2. 'vals' → logprob: -1.2363990545272827
    3. 'values' → logprob: -1.3613990545272827
    4. ' values' → logprob: -2.6113991737365723
    5. ' vals' → logprob: -3.6113991737365723
    6. 'V' → logprob: -3.7363991737365723
    7. ' val' → logprob: -4.236399173736572
    8. ' V' → logprob: -5.611399173736572
    9. ' valeurs' → logprob: -5.611399173736572
    10. 'v' → logprob: -5.736399173736572

Token 335: ' exemple' (ID: 26320)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6352914571762085
    2. 'int' → logprob: -2.010291576385498
    3. 'input' → logprob: -2.260291576385498
    4. 'inte' → logprob: -3.010291576385498
    5. '=input' → logprob: -4.010291576385498
    6. 'ents' → logprob: -4.260291576385498
    7. 'val' → logprob: -4.385291576385498
    8. ')' → logprob: -4.510291576385498
    9. 'list' → logprob: -4.510291576385498
    10. 'ints' → logprob: -4.635291576385498

Token 336: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.380521297454834
    2. ' des' → logprob: -1.880521297454834
    3. ',' → logprob: -2.005521297454834
    4. ')' → logprob: -2.755521297454834
    5. 'les' → logprob: -2.880521297454834
    6. ' les' → logprob: -3.130521297454834
    7. ' la' → logprob: -3.255521297454834
    8. 'd' → logprob: -3.630521297454834
    9. ' à' → logprob: -3.880521297454834
    10. 'une' → logprob: -4.005521297454834

Token 337: ' couleurs' (ID: 54001)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0548573732376099
    2. ' poids' → logprob: -1.1798573732376099
    3. ' couleurs' → logprob: -2.0548572540283203
    4. 'po' → logprob: -2.4298572540283203
    5. ' valeurs' → logprob: -4.05485725402832
    6. 'scores' → logprob: -4.55485725402832
    7. ' points' → logprob: -4.92985725402832
    8. 'weights' → logprob: -5.05485725402832
    9. 'pop' → logprob: -5.05485725402832
    10. 'import' → logprob: -5.17985725402832

Token 338: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16493698954582214
    2. ' )' → logprob: -2.1649370193481445
    3. ',' → logprob: -3.6649370193481445
    4. ')
' → logprob: -5.5399370193481445
    5. ' ou' → logprob: -5.7899370193481445
    6. ' )
' → logprob: -6.2899370193481445
    7. ' ,' → logprob: -6.9149370193481445
    8. 'ou' → logprob: -7.7899370193481445
    9. ' or' → logprob: -7.9149370193481445
    10. 'values' → logprob: -7.9149370193481445

Token 339: ' coûts' (ID: 116912)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.7979188561439514
    2. 'val' → logprob: -2.0479187965393066
    3. 'po' → logprob: -2.1729187965393066
    4. ' poids' → logprob: -2.1729187965393066
    5. 'des' → logprob: -2.5479187965393066
    6. 'dist' → logprob: -3.5479187965393066
    7. 'ou' → logprob: -4.172918796539307
    8. 'labels' → logprob: -4.547918796539307
    9. 't' → logprob: -5.047918796539307
    10. ' des' → logprob: -5.422918796539307

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011516954749822617
    2. ')' → logprob: -4.76151704788208
    3. ' ,' → logprob: -6.63651704788208
    4. ' ou' → logprob: -7.51151704788208
    5. ' )' → logprob: -7.51151704788208
    6. 's' → logprob: -8.886516571044922
    7. 'ou' → logprob: -9.136516571044922
    8. '...)' → logprob: -9.636516571044922
    9. '...' → logprob: -10.011516571044922
    10. ',)' → logprob: -10.386516571044922

Token 341: ' etc' (ID: 5178)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.8471918702125549
    2. 'val' → logprob: -1.0971918106079102
    3. '...' → logprob: -2.72219181060791
    4. 'weights' → logprob: -2.97219181060791
    5. '#' → logprob: -3.47219181060791
    6. 'dist' → logprob: -3.97219181060791
    7. 'positions' → logprob: -3.97219181060791
    8. 'po' → logprob: -4.22219181060791
    9. 'indices' → logprob: -5.09719181060791
    10. 'points' → logprob: -5.34719181060791

Token 342: '.)
' (ID: 32616)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6355622410774231
    2. ')' → logprob: -0.7605622410774231
    3. 'values' → logprob: -6.385562419891357
    4. ',' → logprob: -8.2605619430542
    5. 'vals' → logprob: -8.3855619430542
    6. ' )
' → logprob: -8.8855619430542
    7. 'val' → logprob: -8.8855619430542
    8. ' )' → logprob: -9.2605619430542
    9. ')

' → logprob: -9.2605619430542
    10. 's' → logprob: -10.2605619430542

Token 343: '   ' (ID: 271)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.1997041702270508
    2. ' values' → logprob: -1.5747041702270508
    3. 'values' → logprob: -2.074704170227051
    4. ' val' → logprob: -2.574704170227051
    5. 'vals' → logprob: -2.699704170227051
    6. 'colors' → logprob: -3.574704170227051
    7. ' vals' → logprob: -3.699704170227051
    8. ' V' → logprob: -3.824704170227051
    9. ' colors' → logprob: -3.949704170227051
    10. 'V' → logprob: -4.199704170227051

Token 344: ' C' (ID: 363)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -1.014515995979309
    2. 'val' → logprob: -1.889515995979309
    3. 'vals' → logprob: -2.0145158767700195
    4. ' values' → logprob: -2.3895158767700195
    5. 'colors' → logprob: -3.2645158767700195
    6. 'value' → logprob: -3.2645158767700195
    7. 'C' (adapté à ' C') → logprob: -3.6395158767700195
    8. 'V' → logprob: -3.6395158767700195
    9. 'Values' → logprob: -4.2645158767700195
    10. 'color' → logprob: -4.3895158767700195

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408327460289
    2. ' =' → logprob: -0.9740833044052124
    3. 's' → logprob: -13.099082946777344
    4. ' ' → logprob: -13.849082946777344
    5. '   ' → logprob: -14.224082946777344
    6. '_' → logprob: -14.599082946777344
    7. '_values' → logprob: -14.849082946777344
    8. '＝' → logprob: -15.224082946777344
    9. '=[]' → logprob: -15.349082946777344
    10. 'values' → logprob: -15.599082946777344

Token 346: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02324547804892063
    2. ' list' → logprob: -3.7732455730438232
    3. 'lis' → logprob: -18.898244857788086
    4. '=list' → logprob: -19.398244857788086
    5. '[list' → logprob: -19.773244857788086
    6. 'List' → logprob: -20.273244857788086
    7. '[' → logprob: -20.398244857788086
    8. '	list' → logprob: -20.773244857788086
    9. 'li' → logprob: -20.773244857788086
    10. 'l' → logprob: -20.898244857788086

Token 347: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.896309739408025e-07
    2. '*' → logprob: -14.625000953674316
    3. ' int' → logprob: -15.625000953674316
    4. ']int' → logprob: -17.125
    5. '0' → logprob: -17.625
    6. 'in' → logprob: -18.375
    7. '   ' → logprob: -19.625
    8. ':int' → logprob: -19.625
    9. '<int' → logprob: -20.125
    10. 'map' → logprob: -20.5

Token 348: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.282061368227005
    2. '(input' → logprob: -1.5320613384246826
    3. '(x' → logprob: -3.6570613384246826
    4. '(i' → logprob: -5.782061576843262
    5. '(token' → logprob: -8.157061576843262
    6. ' (' → logprob: -8.782061576843262
    7. '(
' → logprob: -9.032061576843262
    8. 'input' → logprob: -10.032061576843262
    9. ')' → logprob: -10.282061576843262
    10. '(

' → logprob: -10.282061576843262

Token 349: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018322535324841738
    2. 'for' → logprob: -6.751832485198975
    3. '()' → logprob: -7.626832485198975
    4. ' for' → logprob: -9.501832008361816
    5. 'token' → logprob: -10.626832008361816
    6. 'input' → logprob: -10.751832008361816
    7. 'in' → logprob: -11.251832008361816
    8. ' )' → logprob: -11.251832008361816
    9. '(' → logprob: -12.001832008361816
    10. ' ' → logprob: -12.126832008361816

Token 350: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39313986897468567
    2. ' for' → logprob: -1.5181398391723633
    3. ')' → logprob: -2.2681398391723633
    4. '()' → logprob: -6.143139839172363
    5. 'in' → logprob: -9.268139839172363
    6. ' ' → logprob: -9.768139839172363
    7. '(' → logprob: -10.643139839172363
    8. 'input' → logprob: -11.018139839172363
    9. ']' → logprob: -11.268139839172363
    10. 'token' → logprob: -11.393139839172363

Token 351: ' c' (ID: 274)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5070409178733826
    2. ' input' → logprob: -1.1320409774780273
    3. 'c' → logprob: -2.8820409774780273
    4. ' c' → logprob: -4.382040977478027
    5. '_' → logprob: -5.257040977478027
    6. '_input' → logprob: -7.507040977478027
    7. 'in' → logprob: -8.382040977478027
    8. '=input' → logprob: -8.507040977478027
    9. ' in' → logprob: -8.757040977478027
    10. ' ' → logprob: -8.757040977478027

Token 352: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34856054186820984
    2. 'in' → logprob: -1.2235605716705322
    3. '_' → logprob: -10.223560333251953
    4. 's' → logprob: -10.598560333251953
    5. 'input' → logprob: -10.973560333251953
    6. 'c' → logprob: -11.348560333251953
    7. ' ' → logprob: -12.223560333251953
    8. 'import' → logprob: -12.473560333251953
    9. '(' → logprob: -12.723560333251953
    10. 'e' → logprob: -13.348560333251953

Token 353: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0040785204619169235
    2. ' input' → logprob: -5.504078388214111
    3. '(input' → logprob: -16.504077911376953
    4. ' ' → logprob: -17.004077911376953
    5. 'sys' → logprob: -18.004077911376953
    6. '   ' → logprob: -18.879077911376953
    7. 'output' → logprob: -19.004077911376953
    8. 'in' → logprob: -19.004077911376953
    9. '	input' → logprob: -19.004077911376953
    10. '<input' → logprob: -19.379077911376953

Token 354: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.941850526549388e-06
    2. '()' → logprob: -11.750007629394531
    3. ' ().' → logprob: -16.87500762939453
    4. '()].' → logprob: -19.62500762939453
    5. '()
' → logprob: -19.75000762939453
    6. '()]' → logprob: -20.25000762939453
    7. '(' → logprob: -21.87500762939453
    8. '()`' → logprob: -22.25000762939453
    9. '.' → logprob: -22.37500762939453
    10. '().'' → logprob: -22.50000762939453

Token 355: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.048608023673295975
    2. 'strip' → logprob: -3.0486080646514893
    3. 'rstrip' → logprob: -10.79860782623291
    4. ' strip' → logprob: -16.423608779907227
    5. '(split' → logprob: -16.548608779907227
    6. ' split' → logprob: -16.548608779907227
    7. 'spl' → logprob: -17.423608779907227
    8. 'read' → logprob: -19.298608779907227
    9. '(strip' → logprob: -21.423608779907227
    10. '.split' → logprob: -21.548608779907227

Token 356: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -2.8802491215174086e-05
    2. '()' → logprob: -10.750028610229492
    3. ']' → logprob: -12.000028610229492
    4. '(' → logprob: -14.625028610229492
    5. '())' → logprob: -15.125028610229492
    6. '()]
' → logprob: -15.250028610229492
    7. ')]' → logprob: -15.875028610229492
    8. ' ()' → logprob: -18.125028610229492
    9. '(),' → logprob: -18.250028610229492
    10. '()],' → logprob: -18.750028610229492

Token 357: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17084763944149017
    2. '    
' → logprob: -2.0458476543426514
    3. '   ' → logprob: -4.170847415924072
    4. '<|end|>' → logprob: -4.545847415924072
    5. '  
' → logprob: -7.670847415924072
    6. ' 
' → logprob: -8.54584789276123
    7. '
    
' → logprob: -8.67084789276123
    8. '

' → logprob: -8.67084789276123
    9. '   
' → logprob: -8.92084789276123
    10. '    
    
' → logprob: -9.42084789276123

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3598822057247162
    2. '    
' → logprob: -2.234882116317749
    3. 'distance' → logprob: -2.859882116317749
    4. '
' → logprob: -2.984882116317749
    5. 'visited' → logprob: -3.109882116317749
    6. 'queue' → logprob: -4.234882354736328
    7. '#' → logprob: -4.359882354736328
    8. 'dist' → logprob: -5.109882354736328
    9. 'depth' → logprob: -6.734882354736328
    10. 'q' → logprob: -6.859882354736328

Token 359: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6771414875984192
    2. 'visited' → logprob: -1.5521414279937744
    3. '#' (adapté à ' #') → logprob: -2.0521414279937744
    4. 'distance' → logprob: -3.5521414279937744
    5. 'color' → logprob: -3.8021414279937744
    6. 'Q' → logprob: -4.0521416664123535
    7. 'queue' → logprob: -4.0521416664123535
    8. 'depth' → logprob: -4.4271416664123535
    9. 'dp' → logprob: -4.5521416664123535
    10. 'q' → logprob: -4.6771416664123535

Token 360: ' Trier' (ID: 191551)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7833266258239746
    2. 'visited' → logprob: -0.9083266258239746
    3. '#' → logprob: -3.2833266258239746
    4. 'color' → logprob: -3.9083266258239746
    5. 'distance' → logprob: -4.283326625823975
    6. 'dp' → logprob: -4.283326625823975
    7. 'Q' → logprob: -4.658326625823975
    8. 'q' → logprob: -4.908326625823975
    9. 'from' → logprob: -4.908326625823975
    10. 'queue' → logprob: -5.033326625823975

Token 361: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.29163211584091187
    2. '(C' → logprob: -1.4166321754455566
    3. '(' → logprob: -5.041632175445557
    4. ' C' → logprob: -5.791632175445557
    5. '()' → logprob: -8.291631698608398
    6. '(
' → logprob: -8.541631698608398
    7. 'indices' → logprob: -8.666631698608398
    8. '   ' → logprob: -8.791631698608398
    9. ')' → logprob: -10.666631698608398
    10. ' (' → logprob: -10.916631698608398

Token 362: ' liste' (ID: 31719)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00023572170175611973
    2. ' C' → logprob: -8.500235557556152
    3. 'list' → logprob: -11.625235557556152
    4. 'sorted' → logprob: -12.250235557556152
    5. 'indices' → logprob: -13.000235557556152
    6. 'range' → logprob: -13.125235557556152
    7. ' list' → logprob: -13.125235557556152
    8. 'c' → logprob: -13.250235557556152
    9. 'edges' → logprob: -13.250235557556152
    10. ' edges' → logprob: -13.375235557556152

Token 363: ' C' (ID: 363)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.3804226815700531
    2. 'C' → logprob: -1.2554227113723755
    3. '(' → logprob: -3.755422592163086
    4. ' C' → logprob: -5.380422592163086
    5. '()' → logprob: -6.255422592163086
    6. '   ' → logprob: -7.380422592163086
    7. '(
' → logprob: -8.005422592163086
    8. 's' → logprob: -9.005422592163086
    9. '	C' → logprob: -9.005422592163086
    10. ' (' → logprob: -9.130422592163086

Token 364: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032488892320543528
    2. '.sort' → logprob: -6.503248691558838
    3. '()
' → logprob: -7.128248691558838
    4. '.' → logprob: -8.003249168395996
    5. '(C' → logprob: -8.253249168395996
    6. '   ' → logprob: -9.253249168395996
    7. '(' → logprob: -9.253249168395996
    8. '().' → logprob: -9.628249168395996
    9. ')' → logprob: -9.878249168395996
    10. 'sorted' → logprob: -11.503249168395996

Token 365: ' ordre' (ID: 103061)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.043084144592285156
    2. ' reverse' → logprob: -4.168084144592285
    3. 'ascending' → logprob: -4.293084144592285
    4. ' ascending' → logprob: -5.543084144592285
    5. 'place' → logprob: -5.668084144592285
    6. 'descending' → logprob: -6.543084144592285
    7. 'sorted' → logprob: -6.918084144592285
    8. ')' → logprob: -7.043084144592285
    9. 'asc' → logprob: -7.293084144592285
    10. '-place' → logprob: -7.793084144592285

Token 366: ' décro' (ID: 176854)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.7020736336708069
    2. 'asc' → logprob: -2.452073574066162
    3. '()' → logprob: -2.577073574066162
    4. ' cro' → logprob: -2.577073574066162
    5. 'C' → logprob: -2.952073574066162
    6. '(C' → logprob: -3.202073574066162
    7. ')' → logprob: -3.827073574066162
    8. '   ' → logprob: -3.952073574066162
    9. ' décro' → logprob: -4.077073574066162
    10. '(reverse' → logprob: -4.327073574066162

Token 367: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.008150805719196796
    2. 'isant' → logprob: -5.883150577545166
    3. 'dent' → logprob: -6.883150577545166
    4. 'd' → logprob: -6.883150577545166
    5. 'nd' → logprob: -7.008150577545166
    6. 's' → logprob: -7.633150577545166
    7. 'sent' → logprob: -7.758150577545166
    8. 'nant' → logprob: -7.883150577545166
    9. 'ss' → logprob: -8.008151054382324
    10. 'is' → logprob: -8.633151054382324

Token 368: ' (' (ID: 350)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.005575117189437151
    2. '.sort' → logprob: -6.255575180053711
    3. '=' → logprob: -7.005575180053711
    4. ')' → logprob: -7.505575180053711
    5. '(C' → logprob: -7.505575180053711
    6. 'sorted' → logprob: -7.880575180053711
    7. ' C' → logprob: -8.005575180053711
    8. '   ' → logprob: -9.005575180053711
    9. '.' → logprob: -9.255575180053711
    10. '(' → logprob: -9.255575180053711

Token 369: 'reverse' (ID: 53832)
  Prédit: 'reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.03936804458498955
    2. ' reverse' → logprob: -3.664368152618408
    3. ',' → logprob: -5.164368152618408
    4. ')' → logprob: -5.539368152618408
    5. '(reverse' → logprob: -5.914368152618408
    6. 'C' → logprob: -8.16436767578125
    7. ' ,' → logprob: -9.28936767578125
    8. '.reverse' → logprob: -9.53936767578125
    9. 'rev' → logprob: -10.16436767578125
    10. ' )' → logprob: -10.16436767578125

Token 370: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.014408760704100132
    2. '=' → logprob: -4.264408588409424
    3. ')' → logprob: -8.389409065246582
    4. ' =' → logprob: -11.139409065246582
    5. '=False' → logprob: -13.889409065246582
    6. '=T' → logprob: -14.764409065246582
    7. ' )' → logprob: -15.014409065246582
    8. ')=' → logprob: -15.014409065246582
    9. '=C' → logprob: -15.014409065246582
    10. ',' → logprob: -15.014409065246582

Token 371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ' )' → logprob: -12.000007629394531
    3. ')
' → logprob: -14.000007629394531
    4. '),' → logprob: -16.00000762939453
    5. '))' → logprob: -16.00000762939453
    6. ')#' → logprob: -16.62500762939453
    7. '   ' → logprob: -17.37500762939453
    8. ').' → logprob: -17.50000762939453
    9. '=True' → logprob: -17.62500762939453
    10. ',' → logprob: -17.62500762939453

Token 372: ' pour' (ID: 1930)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0029738990124315023
    2. ')' → logprob: -6.502974033355713
    3. ',' → logprob: -7.502974033355713
    4. '   ' → logprob: -7.877974033355713
    5. ' C' → logprob: -8.127973556518555
    6. ')
' → logprob: -9.502973556518555
    7. ',
' → logprob: -9.877973556518555
    8. '.' → logprob: -10.377973556518555
    9. '(C' → logprob: -10.877973556518555
    10. ',C' → logprob: -11.377973556518555

Token 373: ' utiliser' (ID: 43227)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.5112888813018799
    2. 'optim' → logprob: -2.38628888130188
    3. ' faciliter' → logprob: -2.88628888130188
    4. ' optimiser' → logprob: -3.13628888130188
    5. ' obtenir' → logprob: -3.26128888130188
    6. ' maxim' → logprob: -3.63628888130188
    7. ' pouvoir' → logprob: -3.76128888130188
    8. ' garantir' → logprob: -4.011288642883301
    9. 'tr' → logprob: -4.386288642883301
    10. 'max' → logprob: -4.761288642883301

Token 374: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -2.0102689266204834
    2. 'reverse' → logprob: -2.0102689266204834
    3. 'sorted' → logprob: -2.1352689266204834
    4. ' reverse' → logprob: -2.2602689266204834
    5. '<|end|>' → logprob: -2.3852689266204834
    6. 'C' → logprob: -2.3852689266204834
    7. 'sort' → logprob: -2.6352689266204834
    8. ')' → logprob: -3.7602689266204834
    9. ' le' → logprob: -3.8852689266204834
    10. ' sorted' → logprob: -4.0102691650390625

Token 375: ' plus' (ID: 2932)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.7879939079284668
    2. 'val' → logprob: -1.7879939079284668
    3. 'values' → logprob: -2.287993907928467
    4. ' valeurs' → logprob: -2.537993907928467
    5. ' meilleures' → logprob: -2.912993907928467
    6. 'largest' → logprob: -3.037993907928467
    7. 'plus' → logprob: -3.162993907928467
    8. ' meilleurs' → logprob: -3.162993907928467
    9. ' values' → logprob: -3.412993907928467
    10. ' C' → logprob: -3.537993907928467

Token 376: ' grandes' (ID: 16325)
  Prédit: ' grandes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grandes' → logprob: -1.2536219358444214
    2. ' large' → logprob: -1.3786219358444214
    3. ',' → logprob: -1.5036219358444214
    4. 'large' → logprob: -2.378622055053711
    5. '_large' → logprob: -3.003622055053711
    6. ' ,' → logprob: -3.628622055053711
    7. ' grands' → logprob: -4.003622055053711
    8. 'grand' → logprob: -5.003622055053711
    9. '_sorted' → logprob: -5.503622055053711
    10. '=' → logprob: -5.753622055053711

Token 377: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.3587532341480255
    2. ' values' → logprob: -1.9837532043457031
    3. '<|end|>' → logprob: -2.733753204345703
    4. 'values' → logprob: -2.858753204345703
    5. ')' → logprob: -4.108753204345703
    6. 'val' → logprob: -5.483753204345703
    7. ',' → logprob: -5.608753204345703
    8. ' ,' → logprob: -6.233753204345703
    9. '_values' → logprob: -6.233753204345703
    10. '.' → logprob: -6.358753204345703

Token 378: ' en' (ID: 469)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.12403928488492966
    2. '   ' → logprob: -2.7490391731262207
    3. ',' → logprob: -3.8740391731262207
    4. '.' → logprob: -3.8740391731262207
    5. ' C' → logprob: -5.374039173126221
    6. 'de' → logprob: -6.249039173126221
    7. ')' → logprob: -6.374039173126221
    8. ' afin' → logprob: -7.499039173126221
    9. ' de' → logprob: -7.624039173126221
    10. '#' → logprob: -8.124039649963379

Token 379: ' premier' (ID: 15506)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -1.0944715738296509
    2. ' priorité' → logprob: -1.4694715738296509
    3. 'prior' → logprob: -2.8444714546203613
    4. ' premier' → logprob: -3.0944714546203613
    5. ' profondeur' → logprob: -3.0944714546203613
    6. 't' → logprob: -3.4694714546203613
    7. 'b' → logprob: -3.8444714546203613
    8. ' BFS' → logprob: -4.344471454620361
    9. 'la' → logprob: -4.469471454620361
    10. 'placement' → logprob: -4.594471454620361

Token 380: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7803110480308533
    2. 'C' → logprob: -1.405311107635498
    3. '   ' → logprob: -1.655311107635498
    4. ')' → logprob: -3.030311107635498
    5. ',' → logprob: -3.280311107635498
    6. ' C' → logprob: -4.280311107635498
    7. ').' → logprob: -6.655311107635498
    8. '    
' → logprob: -6.655311107635498
    9. '.sort' → logprob: -7.030311107635498
    10. 'sorted' → logprob: -8.28031063079834

Token 381: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.11105115711688995
    2. '   ' → logprob: -2.736051082611084
    3. '
' → logprob: -4.236051082611084
    4. '.' → logprob: -4.486051082611084
    5. '    
' → logprob: -5.486051082611084
    6. ',' → logprob: -5.486051082611084
    7. ' C' → logprob: -6.111051082611084
    8. ')' → logprob: -6.236051082611084
    9. '.sort' → logprob: -8.111051559448242
    10. ')
' → logprob: -8.236051559448242

Token 382: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -1.8670179997570813e-05
    2. ' C' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.625019073486328
    4. '
' → logprob: -14.625019073486328
    5. 'sorted' → logprob: -16.000019073486328
    6. '    
' → logprob: -16.750019073486328
    7. '#' → logprob: -17.125019073486328
    8. ',' → logprob: -17.500019073486328
    9. 'c' → logprob: -17.750019073486328
    10. ')' → logprob: -17.750019073486328

Token 383: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.005278345663100481
    2. '.' → logprob: -5.25527811050415
    3. '=' → logprob: -10.630278587341309
    4. '.reverse' → logprob: -11.005278587341309
    5. 'sort' → logprob: -13.130278587341309
    6. ' .' → logprob: -14.130278587341309
    7. ' =' → logprob: -14.880278587341309
    8. ').' → logprob: -15.255278587341309
    9. '.sorted' → logprob: -16.005277633666992
    10. ' sort' → logprob: -16.505277633666992

Token 384: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.006072775460779667
    2. 'reverse' → logprob: -5.131072998046875
    3. '(' → logprob: -9.131072998046875
    4. ' reverse' → logprob: -10.631072998046875
    5. ',' → logprob: -12.506072998046875
    6. '_reverse' → logprob: -12.881072998046875
    7. '.reverse' → logprob: -12.881072998046875
    8. 'Reverse' → logprob: -13.506072998046875
    9. '()' → logprob: -13.756072998046875
    10. '(re' → logprob: -15.256072998046875

Token 385: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0017055326607078314
    2. '=' → logprob: -6.376705646514893
    3. ')' → logprob: -13.126705169677734
    4. '(True' → logprob: -14.001705169677734
    5. ')=' → logprob: -15.376705169677734
    6. '()' → logprob: -16.126705169677734
    7. '=T' → logprob: -16.751705169677734
    8. '())' → logprob: -16.751705169677734
    9. ' =' → logprob: -17.251705169677734
    10. '=
' → logprob: -17.501705169677734

Token 386: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ')
' → logprob: -12.625004768371582
    3. ' )' → logprob: -13.750004768371582
    4. '   ' → logprob: -15.125004768371582
    5. ')

' → logprob: -17.125003814697266
    6. ' ' → logprob: -18.500003814697266
    7. ')#' → logprob: -18.750003814697266
    8. '),' → logprob: -19.125003814697266
    9. '))' → logprob: -19.250003814697266
    10. ')
' → logprob: -19.250003814697266

Token 387: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5315921902656555
    2. '    
' → logprob: -1.9065921306610107
    3. '   ' → logprob: -1.9065921306610107
    4. '<|end|>' → logprob: -3.5315921306610107
    5. 'visited' → logprob: -3.9065921306610107
    6. 'distance' → logprob: -3.9065921306610107
    7. 'queue' → logprob: -4.53159236907959
    8. '#' → logprob: -4.65659236907959
    9. '  
' → logprob: -5.15659236907959
    10. 'dist' → logprob: -5.78159236907959

Token 388: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5283413529396057
    2. '#' → logprob: -1.403341293334961
    3. 'dist' → logprob: -2.528341293334961
    4. 'queue' → logprob: -3.903341293334961
    5. 'distance' → logprob: -4.278341293334961
    6. '   ' → logprob: -4.778341293334961
    7. 'color' → logprob: -4.778341293334961
    8. 'vis' → logprob: -5.403341293334961
    9. 'parent' → logprob: -5.528341293334961
    10. 'Q' → logprob: -5.528341293334961

Token 389: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9103718400001526
    2. 'color' → logprob: -1.9103717803955078
    3. 'dist' → logprob: -2.535371780395508
    4. '#' (adapté à ' #') → logprob: -2.660371780395508
    5. 'ans' → logprob: -2.785371780395508
    6. 'used' → logprob: -3.410371780395508
    7. 'from' → logprob: -3.660371780395508
    8. 'queue' → logprob: -3.660371780395508
    9. 'depth' → logprob: -4.035371780395508
    10. 'answer' → logprob: -4.035371780395508

Token 390: ' Cr' (ID: 5790)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4981665313243866
    2. 'dist' → logprob: -1.373166561126709
    3. 'queue' → logprob: -3.873166561126709
    4. 'color' → logprob: -4.248166561126709
    5. 'used' → logprob: -4.248166561126709
    6. 'q' → logprob: -4.748166561126709
    7. 'ans' → logprob: -4.748166561126709
    8. 'que' → logprob: -4.998166561126709
    9. 'distance' → logprob: -4.998166561126709
    10. 'Q' → logprob: -5.123166561126709

Token 391: 'éer' (ID: 83012)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04874508082866669
    2. 'ef' → logprob: -3.4237451553344727
    3. '#' → logprob: -5.548745155334473
    4. 'eed' → logprob: -5.548745155334473
    5. 'eft' → logprob: -6.423745155334473
    6. 'ed' → logprob: -6.673745155334473
    7. 'eef' → logprob: -6.673745155334473
    8. 'ep' → logprob: -7.423745155334473
    9. 'ue' → logprob: -7.548745155334473
    10. 'eded' → logprob: -8.923745155334473

Token 392: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6299145221710205
    2. 'une' → logprob: -1.5049145221710205
    3. 'dist' → logprob: -2.3799145221710205
    4. 'deque' → logprob: -2.8799145221710205
    5. 'a' → logprob: -3.6299145221710205
    6. 'visited' → logprob: -4.379914283752441
    7. ' un' → logprob: -4.504914283752441
    8. 'un' → logprob: -4.754914283752441
    9. ' a' → logprob: -5.129914283752441
    10. 'queue' → logprob: -5.254914283752441

Token 393: ' liste' (ID: 31719)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.39417514204978943
    2. 'visited' → logprob: -1.3941751718521118
    3. 'dist' → logprob: -3.8941750526428223
    4. 'distance' → logprob: -4.394175052642822
    5. 'queue' → logprob: -4.394175052642822
    6. 'vis' → logprob: -4.644175052642822
    7. 'liste' → logprob: -4.769175052642822
    8. 'list' → logprob: -5.144175052642822
    9. 'val' → logprob: -5.894175052642822
    10. '#' → logprob: -6.394175052642822

Token 394: ' '' (ID: 461)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.3004127740859985
    2. 'assign' → logprob: -1.8004127740859985
    3. 'visited' → logprob: -2.550412654876709
    4. 'assigned' → logprob: -2.550412654876709
    5. 'used' → logprob: -2.800412654876709
    6. 'val' → logprob: -2.925412654876709
    7. 'd' → logprob: -3.175412654876709
    8. 'des' → logprob: -3.300412654876709
    9. 'ans' → logprob: -3.425412654876709
    10. 'res' → logprob: -3.925412654876709

Token 395: 'Color' (ID: 2324)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.3582576513290405
    2. 'ans' → logprob: -1.4832576513290405
    3. 'res' → logprob: -1.8582576513290405
    4. 'used' → logprob: -2.60825777053833
    5. 'dist' → logprob: -2.60825777053833
    6. 'Ans' → logprob: -3.10825777053833
    7. 'answer' → logprob: -3.48325777053833
    8. 'color' → logprob: -3.98325777053833
    9. 'result' → logprob: -4.23325777053833
    10. 'Answer' → logprob: -4.35825777053833

Token 396: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10091827809810638
    2. 'ing' → logprob: -4.350918292999268
    3. 's' → logprob: -4.475918292999268
    4. '_order' → logprob: -4.475918292999268
    5. 'ed' → logprob: -4.600918292999268
    6. '=' → logprob: -4.850918292999268
    7. '_count' → logprob: -5.350918292999268
    8. '_assignment' → logprob: -5.350918292999268
    9. 'ation' → logprob: -5.475918292999268
    10. 'Order' → logprob: -5.600918292999268

Token 397: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934877038002014
    2. ' =' → logprob: -0.6934877038002014
    3. '=[' → logprob: -8.068488121032715
    4. ' =[' → logprob: -11.568488121032715
    5. ' ' → logprob: -11.818488121032715
    6. '[' → logprob: -12.943488121032715
    7. '=[]' → logprob: -13.443488121032715
    8. 'de' → logprob: -13.943488121032715
    9. ' de' → logprob: -14.193488121032715
    10. '   ' → logprob: -14.318488121032715

Token 398: ' longueur' (ID: 104613)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.6054288744926453
    2. '[-' → logprob: -1.10542893409729
    3. '[' → logprob: -2.10542893409729
    4. 'N' → logprob: -6.730428695678711
    5. '-' → logprob: -9.980428695678711
    6. 'None' → logprob: -10.855428695678711
    7. '[n' → logprob: -11.105428695678711
    8. ' [' → logprob: -11.980428695678711
    9. ' [-' → logprob: -12.480428695678711
    10. '0' → logprob: -12.855428695678711

Token 399: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.31516340374946594
    2. '(N' → logprob: -1.3151633739471436
    3. ' N' → logprob: -6.315163612365723
    4. '   ' → logprob: -10.190163612365723
    5. ' (' → logprob: -10.565163612365723
    6. '(' → logprob: -10.940163612365723
    7. '[N' → logprob: -12.440163612365723
    8. '	N' → logprob: -13.690163612365723
    9. 'n' → logprob: -13.815163612365723
    10. '=N' → logprob: -14.190163612365723

Token 400: ' où' (ID: 15113)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044481758028268814
    2. '=' → logprob: -3.1694817543029785
    3. ',' → logprob: -7.5444817543029785
    4. '=[' → logprob: -7.5444817543029785
    5. '   ' → logprob: -8.044482231140137
    6. ' ' → logprob: -10.794482231140137
    7. ' =[' → logprob: -11.044482231140137
    8. 'Color' → logprob: -11.544482231140137
    9. '[' → logprob: -11.669482231140137
    10. 'color' → logprob: -12.044482231140137

Token 401: ' chaque' (ID: 21194)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.8353626728057861
    2. ' Color' → logprob: -1.4603626728057861
    3. 'None' → logprob: -1.8353626728057861
    4. '0' → logprob: -2.335362672805786
    5. '-' → logprob: -2.835362672805786
    6. ' None' → logprob: -4.710362434387207
    7. ' -' → logprob: -5.585362434387207
    8. ' ' → logprob: -6.085362434387207
    9. 'False' → logprob: -6.835362434387207
    10. 'color' → logprob: -7.335362434387207

Token 402: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0169410090893507
    2. 'element' → logprob: -5.016941070556641
    3. '_' → logprob: -5.516941070556641
    4. ' élément' → logprob: -5.516941070556641
    5. ' element' → logprob: -7.391941070556641
    6. 'index' → logprob: -8.14194107055664
    7. 'elem' → logprob: -8.26694107055664
    8. ' ' → logprob: -8.39194107055664
    9. 'él' → logprob: -8.76694107055664
    10. 'é' → logprob: -8.76694107055664

Token 403: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6958070993423462
    2. ' =' → logprob: -0.6958070993423462
    3. ' est' → logprob: -6.820806980133057
    4. '=None' → logprob: -7.945806980133057
    5. ' is' → logprob: -8.195807456970215
    6. '<|end|>' → logprob: -8.695807456970215
    7. 's' → logprob: -8.820807456970215
    8. ' ' → logprob: -9.445807456970215
    9. '[' → logprob: -9.820807456970215
    10. '=[]' → logprob: -9.820807456970215

Token 404: ' initial' (ID: 4871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6187707781791687
    2. ' None' → logprob: -1.4937708377838135
    3. 'initial' → logprob: -2.2437708377838135
    4. 'None' → logprob: -2.8687708377838135
    5. ' initial' → logprob: -3.3687708377838135
    6. ' ' → logprob: -4.118770599365234
    7. '-' → logprob: -4.993770599365234
    8. ' la' → logprob: -5.493770599365234
    9. 'assign' → logprob: -6.118770599365234
    10. ' -' → logprob: -6.368770599365234

Token 405: 'isé' (ID: 30065)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.964080274105072
    2. 'isé' → logprob: -0.964080274105072
    3. 'ized' → logprob: -1.5890803337097168
    4. 'iz' → logprob: -3.714080333709717
    5. 'ize' → logprob: -5.839080333709717
    6. '[' → logprob: -6.214080333709717
    7. '```' → logprob: -7.464080333709717
    8. 'é' → logprob: -7.964080333709717
    9. 'is' → logprob: -8.214079856872559
    10. 'alis' → logprob: -8.214079856872559

Token 406: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5388022065162659
    2. 'à' → logprob: -0.9138022065162659
    3. '=' → logprob: -4.788802146911621
    4. '=None' → logprob: -6.663802146911621
    5. ' =' → logprob: -6.663802146911621
    6. 'a' → logprob: -7.038802146911621
    7. '0' → logprob: -7.288802146911621
    8. ''à' → logprob: -7.663802146911621
    9. ' ' → logprob: -7.788802146911621
    10. 'None' → logprob: -7.913802146911621

Token 407: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16161300241947174
    2. '0' → logprob: -1.9116129875183105
    3. 'None' → logprob: -7.0366129875183105
    4. ' -' → logprob: -7.9116129875183105
    5. ' ' → logprob: -9.786613464355469
    6. 'False' → logprob: -10.161613464355469
    7. ' None' → logprob: -12.036613464355469
    8. '-f' → logprob: -12.161613464355469
    9. '[' → logprob: -12.286613464355469
    10. '1' → logprob: -12.411613464355469

Token 408: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6145521402359009
    2. ',' → logprob: -1.9895521402359009
    3. 'Color' → logprob: -2.1145520210266113
    4. '[' → logprob: -2.7395520210266113
    5. '   ' → logprob: -2.9895520210266113
    6. '(' → logprob: -3.6145520210266113
    7. '([' → logprob: -3.8645520210266113
    8. '(Color' → logprob: -4.364552021026611
    9. '=' → logprob: -4.489552021026611
    10. ' Color' → logprob: -5.239552021026611

Token 409: 'auc' (ID: 11816)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.9630157351493835
    2. ')' → logprob: -1.2130157947540283
    3. ' )' → logprob: -1.7130157947540283
    4. 'None' → logprob: -1.9630157947540283
    5. '   ' → logprob: -8.96301555633545
    6. ' ' → logprob: -10.71301555633545
    7. ' ' → logprob: -11.83801555633545
    8. ' )
' → logprob: -11.96301555633545
    9. '(None' → logprob: -12.08801555633545
    10. ' N' → logprob: -12.58801555633545

Token 410: 'une' (ID: 2561)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.5432461500167847
    2. 'None' → logprob: -1.2932461500167847
    3. ' None' → logprob: -2.793246269226074
    4. '=' → logprob: -3.168246269226074
    5. '   ' → logprob: -3.418246269226074
    6. ' =' → logprob: -5.293246269226074
    7. ')' → logprob: -6.293246269226074
    8. 'ent' → logprob: -8.418246269226074
    9. '```' → logprob: -8.418246269226074
    10. 'e' → logprob: -8.543246269226074

Token 411: ' valeur' (ID: 41664)
  Prédit: ' couleur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.4114469587802887
    2. ' color' → logprob: -1.9114469289779663
    3. ')' → logprob: -2.661447048187256
    4. ' valeur' → logprob: -2.911447048187256
    5. ' value' → logprob: -4.286447048187256
    6. '=' → logprob: -4.411447048187256
    7. ' =' → logprob: -5.161447048187256
    8. ' assigned' → logprob: -5.411447048187256
    9. 'color' → logprob: -5.536447048187256
    10. ',' → logprob: -5.911447048187256

Token 412: ' assign' (ID: 14975)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003810287918895483
    2. ' assigned' → logprob: -6.503810405731201
    3. 'assigned' → logprob: -7.128810405731201
    4. ' pour' → logprob: -8.003809928894043
    5. ' )' → logprob: -8.378809928894043
    6. ',' → logprob: -8.378809928894043
    7. 'assign' → logprob: -8.503809928894043
    8. '   ' → logprob: -9.253809928894043
    9. ')
' → logprob: -9.253809928894043
    10. ' assign' → logprob: -10.128809928894043

Token 413: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0048532611690461636
    2. 'ée' → logprob: -5.379853248596191
    3. 'e' → logprob: -9.379853248596191
    4. 'None' → logprob: -9.879853248596191
    5. ')' → logprob: -10.254853248596191
    6. 'u' → logprob: -11.254853248596191
    7. 'ed' → logprob: -11.879853248596191
    8. 'ment' → logprob: -12.129853248596191
    9. 'ué' → logprob: -12.129853248596191
    10. 'ement' → logprob: -12.254853248596191

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010061351349577308
    2. ')
' → logprob: -7.626006126403809
    3. '()' → logprob: -8.001006126403809
    4. ' )' → logprob: -8.876006126403809
    5. '())' → logprob: -11.376006126403809
    6. '   ' → logprob: -11.376006126403809
    7. ',' → logprob: -12.376006126403809
    8. '),' → logprob: -13.126006126403809
    9. ').' → logprob: -13.376006126403809
    10. ')
' → logprob: -13.626006126403809

Token 415: '   ' (ID: 271)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.3700160086154938
    2. ' Color' → logprob: -1.7450159788131714
    3. '   ' → logprob: -2.245016098022461
    4. ' =' → logprob: -3.620016098022461
    5. ',' → logprob: -7.995016098022461
    6. '	Color' → logprob: -7.995016098022461
    7. '=' → logprob: -8.120016098022461
    8. '[' → logprob: -8.370016098022461
    9. '    
' → logprob: -8.870016098022461
    10. ' color' → logprob: -9.370016098022461

Token 416: ' Color' (ID: 6822)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' (adapté à ' Color') → logprob: -0.07911328971385956
    2. ' Color' → logprob: -2.579113245010376
    3. '[' → logprob: -8.579113006591797
    4. '	Color' → logprob: -11.579113006591797
    5. ' [' → logprob: -11.829113006591797
    6. ' color' → logprob: -11.954113006591797
    7. 'color' → logprob: -12.204113006591797
    8. '   ' → logprob: -12.454113006591797
    9. '_Color' → logprob: -14.079113006591797
    10. '<Color' → logprob: -14.079113006591797

Token 417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759474635124207
    2. '=' → logprob: -0.8259474635124207
    3. '=[' → logprob: -12.450947761535645
    4. '=[]' → logprob: -13.950947761535645
    5. ' =[' → logprob: -14.200947761535645
    6. '[' → logprob: -14.450947761535645
    7. ' ' → logprob: -14.450947761535645
    8. ')' → logprob: -14.825947761535645
    9. ']' → logprob: -15.325947761535645
    10. ',' → logprob: -15.325947761535645

Token 418: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0026937208604067564
    2. ' [' → logprob: -6.0026936531066895
    3. '[N' → logprob: -8.502694129943848
    4. '[n' → logprob: -11.127694129943848
    5. '   ' → logprob: -15.627694129943848
    6. ' ' → logprob: -16.87769317626953
    7. '[node' → logprob: -17.00269317626953
    8. '[num' → logprob: -17.00269317626953
    9. '[len' → logprob: -17.12769317626953
    10. '[int' → logprob: -17.25269317626953

Token 419: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.607391408877447e-05
    2. ' None' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.625036239624023
    4. '
' → logprob: -16.625036239624023
    5. '0' → logprob: -17.000036239624023
    6. '(None' → logprob: -17.000036239624023
    7. '_None' → logprob: -17.625036239624023
    8. 'N' → logprob: -17.750036239624023
    9. 'False' → logprob: -17.875036239624023
    10. '-' → logprob: -18.250036239624023

Token 420: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1903289407491684
    2. ' for' → logprob: -2.19032883644104
    3. 'for' → logprob: -2.81532883644104
    4. ']*' → logprob: -7.190329074859619
    5. '(N' → logprob: -8.440328598022461
    6. ' ]' → logprob: -8.565328598022461
    7. '   ' → logprob: -8.690328598022461
    8. ')' → logprob: -9.315328598022461
    9. '()' → logprob: -9.940328598022461
    10. '()]' → logprob: -10.315328598022461

Token 421: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31006211042404175
    2. 'for' → logprob: -2.3100621700286865
    3. ']' → logprob: -2.9350621700286865
    4. '(' → logprob: -3.0600621700286865
    5. '(N' → logprob: -3.0600621700286865
    6. ')' → logprob: -4.310061931610107
    7. '   ' → logprob: -6.185061931610107
    8. '<|end|>' → logprob: -6.935061931610107
    9. ']*' → logprob: -7.310061931610107
    10. ' (' → logprob: -7.560061931610107

Token 422: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.320199877838604e-07
    2. ' N' → logprob: -14.75
    3. '   ' → logprob: -18.25
    4. '(N' → logprob: -19.5
    5. '	N' → logprob: -20.625
    6. 'Ｎ' → logprob: -22.5
    7. '[N' → logprob: -22.75
    8. '_N' → logprob: -24.375
    9. '<N' → logprob: -24.5
    10. 'n' → logprob: -24.625

Token 423: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6574186682701111
    2. '    
' → logprob: -0.9074186682701111
    3. '
' → logprob: -2.782418727874756
    4. 'queue' → logprob: -4.907418727874756
    5. 'Color' → logprob: -5.282418727874756
    6. 'visited' → logprob: -6.532418727874756
    7. '  
' → logprob: -8.282418251037598
    8. 'stack' → logprob: -8.407418251037598
    9. '#' → logprob: -8.782418251037598
    10. '	
' → logprob: -8.907418251037598

Token 424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22876566648483276
    2. 'Color' → logprob: -1.7287657260894775
    3. 'queue' → logprob: -4.728765487670898
    4. ' Color' → logprob: -5.103765487670898
    5. '    
' → logprob: -5.853765487670898
    6. 'deque' → logprob: -5.978765487670898
    7. 'from' → logprob: -6.353765487670898
    8. '
' → logprob: -6.728765487670898
    9. ' queue' → logprob: -6.978765487670898
    10. 'de' → logprob: -7.728765487670898

Token 425: ' #' (ID: 1069)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.677053689956665
    2. 'queue' → logprob: -0.802053689956665
    3. 'visited' → logprob: -4.052053451538086
    4. 'q' → logprob: -5.052053451538086
    5. '#' (adapté à ' #') → logprob: -5.302053451538086
    6. 'deque' → logprob: -5.427053451538086
    7. '   ' → logprob: -5.927053451538086
    8. 'Q' → logprob: -6.677053451538086
    9. 'color' → logprob: -6.677053451538086
    10. 'from' → logprob: -6.927053451538086

Token 426: ' Ass' (ID: 4744)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.6661177277565002
    2. 'queue' → logprob: -1.0411176681518555
    3. 'visited' → logprob: -2.6661176681518555
    4. 'q' → logprob: -3.9161176681518555
    5. 'from' → logprob: -3.9161176681518555
    6. 'deque' → logprob: -5.0411176681518555
    7. 'que' → logprob: -5.5411176681518555
    8. 'def' → logprob: -5.6661176681518555
    9. 'dq' → logprob: -5.7911176681518555
    10. 'color' → logprob: -6.6661176681518555

Token 427: 'igner' (ID: 32459)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.5881922841072083
    2. 'igner' → logprob: -0.8381922841072083
    3. '   ' → logprob: -4.963192462921143
    4. 'igned' → logprob: -6.713192462921143
    5. 'ignment' → logprob: -6.713192462921143
    6. 'igning' → logprob: -6.838192462921143
    7. '#' → logprob: -7.588192462921143
    8. 'Ign' → logprob: -8.088191986083984
    9. 'sign' → logprob: -8.213191986083984
    10. 'ing' → logprob: -8.963191986083984

Token 428: ' la' (ID: 557)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.07320218533277512
    2. '0' → logprob: -2.823202133178711
    3. ' Color' → logprob: -4.573202133178711
    4. ' ' → logprob: -7.698202133178711
    5. 'C' → logprob: -8.823202133178711
    6. '1' → logprob: -9.073202133178711
    7. '[' → logprob: -9.698202133178711
    8. 'max' → logprob: -11.073202133178711
    9. '	Color' → logprob: -11.698202133178711
    10. 'color' → logprob: -12.073202133178711

Token 429: ' première' (ID: 23423)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.17695876955986023
    2. '0' → logprob: -1.9269587993621826
    3. 'max' → logprob: -5.5519585609436035
    4. 'cou' → logprob: -5.8019585609436035
    5. 'maximum' → logprob: -6.5519585609436035
    6. 'first' → logprob: -6.5519585609436035
    7. 'color' → logprob: -6.5519585609436035
    8. 'prem' → logprob: -7.4269585609436035
    9. 'queue' → logprob: -7.4269585609436035
    10. 'deque' → logprob: -7.4269585609436035

Token 430: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.39847996830940247
    2. ' couleur' → logprob: -2.14847993850708
    3. '_' → logprob: -3.02347993850708
    4. 'val' → logprob: -3.27347993850708
    5. '[' → logprob: -3.52347993850708
    6. '_color' → logprob: -4.39847993850708
    7. ' maximale' → logprob: -4.39847993850708
    8. ' ' → logprob: -4.39847993850708
    9. 'Color' → logprob: -5.02347993850708
    10. 'largest' → logprob: -5.27347993850708

Token 431: ' (' (ID: 350)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4419582188129425
    2. ' de' → logprob: -1.4419581890106201
    3. 'C' → logprob: -2.81695818901062
    4. ' =' → logprob: -3.56695818901062
    5. '=' → logprob: -3.81695818901062
    6. 'Color' → logprob: -5.191958427429199
    7. 'à' → logprob: -7.066958427429199
    8. '(C' → logprob: -7.191958427429199
    9. ' à' → logprob: -7.441958427429199
    10. '(' → logprob: -8.0669584274292

Token 432: 'la' (ID: 1675)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001393688376992941
    2. ' C' → logprob: -7.126393795013428
    3. ')' → logprob: -8.37639331817627
    4. '(C' → logprob: -9.25139331817627
    5. '0' → logprob: -9.37639331817627
    6. '=' → logprob: -9.87639331817627
    7. ' =' → logprob: -10.50139331817627
    8. '(' → logprob: -10.62639331817627
    9. 'Color' → logprob: -11.12639331817627
    10. '   ' → logprob: -11.37639331817627

Token 433: ' plus' (ID: 2932)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7346383333206177
    2. 'plus' → logprob: -0.8596383333206177
    3. ' plus' → logprob: -2.859638214111328
    4. 'largest' → logprob: -4.359638214111328
    5. ' C' → logprob: -4.734638214111328
    6. 'max' → logprob: -4.984638214111328
    7. 'me' → logprob: -5.109638214111328
    8. '0' → logprob: -6.359638214111328
    9. 'prem' → logprob: -6.734638214111328
    10. 'Color' → logprob: -8.234638214111328

Token 434: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.34177443385124207
    2. 'gr' → logprob: -1.8417744636535645
    3. 'import' → logprob: -2.7167744636535645
    4. 'é' → logprob: -3.4667744636535645
    5. 'grand' → logprob: -4.5917744636535645
    6. ' élevée' → logprob: -4.9667744636535645
    7. ' haute' → logprob: -5.0917744636535645
    8. ' forte' → logprob: -6.5917744636535645
    9. ')' → logprob: -6.5917744636535645
    10. 'large' → logprob: -6.8417744636535645

Token 435: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6101893186569214
    2. ' de' → logprob: -0.9851893186569214
    3. 'de' → logprob: -2.735189437866211
    4. ' )' → logprob: -4.610189437866211
    5. ' à' → logprob: -5.485189437866211
    6. ' ' → logprob: -6.735189437866211
    7. '()' → logprob: -6.985189437866211
    8. ',' → logprob: -7.485189437866211
    9. 'à' → logprob: -7.860189437866211
    10. '(' → logprob: -8.110189437866211

Token 436: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.16419455409049988
    2. ' C' → logprob: -2.0391945838928223
    3. ' la' → logprob: -5.039194583892822
    4. 'Color' → logprob: -5.164194583892822
    5. ')' → logprob: -5.414194583892822
    6. ' Color' → logprob: -6.664194583892822
    7. 'la' → logprob: -7.164194583892822
    8. 'le' → logprob: -7.289194583892822
    9. ' ' → logprob: -7.789194583892822
    10. ' le' → logprob: -7.914194583892822

Token 437: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002150142565369606
    2. ' )' → logprob: -6.752150058746338
    3. '[' → logprob: -7.002150058746338
    4. ')
' → logprob: -10.002150535583496
    5. ',' → logprob: -11.252150535583496
    6. '   ' → logprob: -13.002150535583496
    7. ')[' → logprob: -13.502150535583496
    8. ']' → logprob: -13.877150535583496
    9. 'Color' → logprob: -14.002150535583496
    10. ')

' → logprob: -14.127150535583496

Token 438: ' au' (ID: 2791)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.7677299380302429
    2. ' à' → logprob: -0.8927299380302429
    3. ' to' → logprob: -2.5177299976348877
    4. ' Color' → logprob: -4.017729759216309
    5. 'to' → logprob: -4.267729759216309
    6. 'à' → logprob: -4.642729759216309
    7. '[' → logprob: -5.892729759216309
    8. '
' → logprob: -8.017729759216309
    9. ' ' → logprob: -8.517729759216309
    10. ' =' → logprob: -9.017729759216309

Token 439: ' sommet' (ID: 130502)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.2294207215309143
    2. '0' → logprob: -1.6044206619262695
    3. 'som' → logprob: -5.8544206619262695
    4. ' Color' → logprob: -8.10442066192627
    5. 'node' → logprob: -8.10442066192627
    6. ' sommet' → logprob: -8.72942066192627
    7. 's' → logprob: -8.97942066192627
    8. 'Node' → logprob: -9.72942066192627
    9. 'summ' → logprob: -10.10442066192627
    10. 'root' → logprob: -10.47942066192627

Token 440: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00862521305680275
    2. '[' → logprob: -4.758625030517578
    3. ' ' → logprob: -11.508625030517578
    4. 'Color' → logprob: -15.383625030517578
    5. '[
' → logprob: -15.758625030517578
    6. ' [' → logprob: -16.633625030517578
    7. '   ' → logprob: -16.633625030517578
    8. 's' → logprob: -16.883625030517578
    9. 'color' → logprob: -16.883625030517578
    10. '#' → logprob: -17.758625030517578

Token 441: ''' (ID: 6)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11725194752216339
    2. 'index' → logprob: -2.7422518730163574
    3. ' index' → logprob: -3.9922518730163574
    4. 'indice' → logprob: -4.492251873016357
    5. 'e' → logprob: -5.242251873016357
    6. '[' → logprob: -5.617251873016357
    7. 'i' → logprob: -6.367251873016357
    8. ''origine' → logprob: -6.867251873016357
    9. ' indice' → logprob: -6.867251873016357
    10. ' ' → logprob: -7.367251873016357

Token 442: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.47444841265678406
    2. 'indice' → logprob: -0.9744484424591064
    3. '0' → logprob: -8.599448204040527
    4. 'ind' → logprob: -9.599448204040527
    5. 'indices' → logprob: -10.099448204040527
    6. 'origine' → logprob: -10.849448204040527
    7. 'é' → logprob: -11.349448204040527
    8. 'dé' → logprob: -11.349448204040527
    9. 'id' → logprob: -12.224448204040527
    10. ' index' → logprob: -12.349448204040527

Token 443: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. '[' → logprob: -14.625335693359375
    4. ' ' → logprob: -18.250335693359375
    5. '`' → logprob: -18.500335693359375
    6. '(' → logprob: -18.500335693359375
    7. '０' → logprob: -18.875335693359375
    8. '00' → logprob: -19.125335693359375
    9. '۰' → logprob: -19.125335693359375
    10. '   ' → logprob: -19.562835693359375

Token 444: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '[' → logprob: -15.500066757202148
    4. '０' → logprob: -17.75006675720215
    5. '۰' → logprob: -18.37506675720215
    6. '
' → logprob: -18.75006675720215
    7. '00' → logprob: -18.87506675720215
    8. '   ' → logprob: -19.12506675720215
    9. ' ' → logprob: -19.62506675720215
    10. '(' → logprob: -20.31256675720215

Token 445: ' (' (ID: 350)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.004853618796914816
    2. ' Color' → logprob: -6.12985372543335
    3. ' =' → logprob: -6.62985372543335
    4. '[' → logprob: -7.12985372543335
    5. '=' → logprob: -8.254853248596191
    6. '
' → logprob: -9.129853248596191
    7. '0' → logprob: -9.379853248596191
    8. '   ' → logprob: -10.129853248596191
    9. '(Color' → logprob: -11.504853248596191
    10. 'C' → logprob: -11.629853248596191

Token 446: 'la' (ID: 1675)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35885390639305115
    2. ')' → logprob: -1.7338539361953735
    3. 'Color' → logprob: -2.233853816986084
    4. ' ' → logprob: -5.108853816986084
    5. ' )' → logprob: -5.233853816986084
    6. ' Color' → logprob: -5.233853816986084
    7. '   ' → logprob: -8.608854293823242
    8. '#' → logprob: -8.858854293823242
    9. ' =' → logprob: -9.358854293823242
    10. '=' → logprob: -9.358854293823242

Token 447: ' rac' (ID: 12334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09306801110506058
    2. 'Color' → logprob: -3.3430681228637695
    3. ' ' → logprob: -3.5930681228637695
    4. ')' → logprob: -5.3430681228637695
    5. '```' → logprob: -5.7180681228637695
    6. 'color' → logprob: -5.9680681228637695
    7. '[' → logprob: -5.9680681228637695
    8. ']' → logprob: -6.5930681228637695
    9. '`' → logprob: -6.5930681228637695
    10. ' ]' → logprob: -6.7180681228637695

Token 448: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.1272682547569275
    2. 'e' → logprob: -3.6272683143615723
    3. 'o' → logprob: -3.6272683143615723
    4. '```' → logprob: -4.502268314361572
    5. '0' → logprob: -4.752268314361572
    6. 'ot' → logprob: -5.002268314361572
    7. 'oine' → logprob: -5.627268314361572
    8. 'ó' → logprob: -5.627268314361572
    9. 'œur' → logprob: -6.252268314361572
    10. 'ò' → logprob: -6.627268314361572

Token 449: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08658631145954132
    2. ']' → logprob: -2.7115862369537354
    3. 'Color' → logprob: -5.0865864753723145
    4. ')
' → logprob: -5.2115864753723145
    5. ' )' → logprob: -6.2115864753723145
    6. '   ' → logprob: -6.4615864753723145
    7. ' Color' → logprob: -7.5865864753723145
    8. ' ]' → logprob: -8.961585998535156
    9. ']
' → logprob: -8.961585998535156
    10. ',' → logprob: -9.211585998535156

Token 450: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2300841212272644
    2. ' l' → logprob: -1.6050841808319092
    3. ' Color' → logprob: -6.10508394241333
    4. 'Color' → logprob: -7.35508394241333
    5. ' la' → logprob: -7.48008394241333
    6. '0' → logprob: -8.105084419250488
    7. 'la' → logprob: -8.480084419250488
    8. ')' → logprob: -8.605084419250488
    9. 'the' → logprob: -8.605084419250488
    10. ' the' → logprob: -9.480084419250488

Token 451: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.2490372210741043
    2. 'ar' → logprob: -1.624037265777588
    3. ' arbre' → logprob: -3.999037265777588
    4. ''' → logprob: -5.749037265777588
    5. '’ar' → logprob: -7.249037265777588
    6. 'a' → logprob: -7.624037265777588
    7. 'arb' → logprob: -8.99903678894043
    8. 'e' → logprob: -9.24903678894043
    9. ')' → logprob: -9.37403678894043
    10. '_ar' → logprob: -9.87403678894043

Token 452: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -2.6656825866666622e-05
    2. 'b' → logprob: -10.75002670288086
    3. 'bo' → logprob: -13.50002670288086
    4. 'e' → logprob: -14.62502670288086
    5. 'Bre' → logprob: -15.00002670288086
    6. 'br' → logprob: -15.25002670288086
    7. 'ble' → logprob: -15.25002670288086
    8. '
' → logprob: -15.37502670288086
    9. '```' → logprob: -15.50002670288086
    10. 'r' → logprob: -15.62502670288086

Token 453: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034930426627397537
    2. ' )' → logprob: -6.128492832183838
    3. ')
' → logprob: -6.753492832183838
    4. '[' → logprob: -10.253493309020996
    5. 'Color' → logprob: -10.628493309020996
    6. '   ' → logprob: -10.753493309020996
    7. ').' → logprob: -11.003493309020996
    8. ',' → logprob: -11.378493309020996
    9. ']' → logprob: -11.503493309020996
    10. ' )
' → logprob: -11.503493309020996

Token 454: '   ' (ID: 271)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -1.1160349458805285e-05
    2. ' Color' → logprob: -11.750011444091797
    3. '
' → logprob: -13.375011444091797
    4. '   ' → logprob: -13.625011444091797
    5. '	Color' → logprob: -15.750011444091797
    6. '    
' → logprob: -16.625011444091797
    7. ' =' → logprob: -17.375011444091797
    8. '=' → logprob: -17.500011444091797
    9. '[' → logprob: -18.000011444091797
    10. '(Color' → logprob: -18.375011444091797

Token 455: ' Color' (ID: 6822)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' (adapté à ' Color') → logprob: -1.306760805164231e-05
    2. ' Color' → logprob: -11.25001335144043
    3. '	Color' → logprob: -18.75001335144043
    4. 'color' → logprob: -19.37501335144043
    5. '   ' → logprob: -19.62501335144043
    6. 'C' → logprob: -19.62501335144043
    7. '_Color' → logprob: -20.00001335144043
    8. '_color' → logprob: -21.12501335144043
    9. '.Color' → logprob: -21.62501335144043
    10. 'Colour' → logprob: -22.12501335144043

Token 456: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0683535037969705e-05
    2. ' [' → logprob: -11.50001049041748
    3. ' =' → logprob: -15.87501049041748
    4. '=' → logprob: -16.375011444091797
    5. '][' → logprob: -16.375011444091797
    6. '```' → logprob: -16.625011444091797
    7. '\[' → logprob: -16.750011444091797
    8. '0' → logprob: -16.875011444091797
    9. ')[' → logprob: -17.250011444091797
    10. '[
' → logprob: -18.125011444091797

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.125
    3. ' ' → logprob: -16.375
    4. '۰' → logprob: -19.25
    5. '   ' → logprob: -20.5
    6. '０' → logprob: -20.75
    7. '00' → logprob: -21.375
    8. '```' → logprob: -21.375
    9. ')' → logprob: -21.625
    10. '০' → logprob: -22.0625

Token 458: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.4849443838757e-06
    2. ']=' → logprob: -12.375004768371582
    3. ' ]' → logprob: -15.250004768371582
    4. '=' → logprob: -16.875003814697266
    5. ')' → logprob: -18.625003814697266
    6. ']
' → logprob: -19.875003814697266
    7. '`]' → logprob: -20.375003814697266
    8. '[' → logprob: -20.625003814697266
    9. '   ' → logprob: -20.750003814697266
    10. '']' → logprob: -21.000003814697266

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052350712940096855
    2. ' =' → logprob: -5.255235195159912
    3. '=C' → logprob: -13.630234718322754
    4. ',' → logprob: -17.75523567199707
    5. '=

' → logprob: -18.00523567199707
    6. '＝' → logprob: -18.38023567199707
    7. '=color' → logprob: -18.88023567199707
    8. '=c' → logprob: -19.63023567199707
    9. '=int' → logprob: -19.75523567199707
    10. ')' → logprob: -19.88023567199707

Token 460: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.6240566083070007e-06
    2. ' C' → logprob: -13.375001907348633
    3. 'c' → logprob: -17.000001907348633
    4. '0' → logprob: -17.000001907348633
    5. 'max' → logprob: -18.625001907348633
    6. '   ' → logprob: -18.875001907348633
    7. '	C' → logprob: -19.250001907348633
    8. '[C' → logprob: -20.000001907348633
    9. '_C' → logprob: -21.125001907348633
    10. '<C' → logprob: -21.250001907348633

Token 461: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048588622361421585
    2. '[' → logprob: -3.048588514328003
    3. ' ' → logprob: -14.048588752746582
    4. '   ' → logprob: -15.548588752746582
    5. '```' → logprob: -15.673588752746582
    6. ' [' → logprob: -16.923587799072266
    7. '[
' → logprob: -17.298587799072266
    8. '#' → logprob: -17.673587799072266
    9. '\[' → logprob: -17.673587799072266
    10. '1' → logprob: -18.298587799072266

Token 462: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '[' → logprob: -19.75
    4. '۰' → logprob: -20.0
    5. '   ' → logprob: -20.0
    6. '<|end|>' → logprob: -20.125
    7. '```' → logprob: -21.625
    8. '
' → logprob: -21.8125
    9. '০' → logprob: -21.875
    10. '000' → logprob: -22.1875

Token 463: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004700803197920322
    2. ']' → logprob: -5.379700660705566
    3. ' )' → logprob: -10.379700660705566
    4. '<|end|>' → logprob: -11.004700660705566
    5. '}' → logprob: -11.129700660705566
    6. ')
' → logprob: -11.754700660705566
    7. ')]' → logprob: -12.129700660705566
    8. '   ' → logprob: -13.129700660705566
    9. ' ]' → logprob: -14.004700660705566
    10. '])' → logprob: -15.254700660705566

Token 464: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3558216989040375
    2. '   ' → logprob: -1.6058217287063599
    3. '    
' → logprob: -2.4808216094970703
    4. ' 
' → logprob: -5.23082160949707
    5. '  
' → logprob: -5.98082160949707
    6. 'deque' → logprob: -6.48082160949707
    7. ' queue' → logprob: -6.60582160949707
    8. 'queue' → logprob: -7.23082160949707
    9. '   
' → logprob: -7.73082160949707
    10. '	
' → logprob: -7.85582160949707

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12177775800228119
    2. 'queue' → logprob: -2.7467777729034424
    3. '    
' → logprob: -3.4967777729034424
    4. ' queue' → logprob: -4.246777534484863
    5. '
' → logprob: -5.371777534484863
    6. 'q' → logprob: -7.746777534484863
    7. 'visited' → logprob: -8.121777534484863
    8. 'deque' → logprob: -9.246777534484863
    9. '  
' → logprob: -9.746777534484863
    10. '   
' → logprob: -9.996777534484863

Token 466: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.007685062475502491
    2. 'q' → logprob: -5.75768518447876
    3. 'visited' → logprob: -5.75768518447876
    4. 'que' → logprob: -7.88268518447876
    5. '    
' → logprob: -8.507684707641602
    6. 'dq' → logprob: -8.632684707641602
    7. '#' (adapté à ' #') → logprob: -8.757684707641602
    8. '   ' → logprob: -8.882684707641602
    9. 'deque' → logprob: -9.382684707641602
    10. '
' → logprob: -9.632684707641602

Token 467: ' Initial' (ID: 9209)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.27044764161109924
    2. 'visited' → logprob: -2.1454477310180664
    3. 'q' → logprob: -2.7704477310180664
    4. 'que' → logprob: -3.7704477310180664
    5. 'dq' → logprob: -3.7704477310180664
    6. 'Q' → logprob: -5.270447731018066
    7. 'deque' → logprob: -6.270447731018066
    8. '#' → logprob: -7.270447731018066
    9. 'color' → logprob: -7.395447731018066
    10. 'd' → logprob: -7.520447731018066

Token 468: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.06042870879173279
    2. 'queue' → logprob: -3.6854286193847656
    3. 'visited' → logprob: -4.060428619384766
    4. 'ized' → logprob: -4.560428619384766
    5. 'iser' → logprob: -6.060428619384766
    6. 'ise' → logprob: -7.060428619384766
    7. 'izer' → logprob: -7.060428619384766
    8. 'e' → logprob: -7.185428619384766
    9. '#' → logprob: -8.685428619384766
    10. '=' → logprob: -8.810428619384766

Token 469: ' une' (ID: 2463)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.006958207581192255
    2. 'que' → logprob: -6.0069580078125
    3. 'visited' → logprob: -6.1319580078125
    4. 'q' → logprob: -6.6319580078125
    5. 'deque' → logprob: -7.7569580078125
    6. ' queue' → logprob: -7.7569580078125
    7. 'dq' → logprob: -9.5069580078125
    8. 'Q' → logprob: -11.6319580078125
    9. 'vis' → logprob: -12.0069580078125
    10. 'a' → logprob: -12.1319580078125

Token 470: ' file' (ID: 1974)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.01625899039208889
    2. 'deque' → logprob: -4.64125919342041
    3. ' queue' → logprob: -5.14125919342041
    4. 'visited' → logprob: -7.89125919342041
    5. 'que' → logprob: -9.01625919342041
    6. 'file' → logprob: -9.26625919342041
    7. ' deque' → logprob: -11.51625919342041
    8. '
' → logprob: -11.51625919342041
    9. 'q' → logprob: -12.01625919342041
    10. ' visited' → logprob: -12.39125919342041

Token 471: ' (' (ID: 350)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.22965480387210846
    2. 'queue' → logprob: -2.4796547889709473
    3. '=' → logprob: -3.1046547889709473
    4. ' =' → logprob: -3.2296547889709473
    5. 'de' → logprob: -4.229654788970947
    6. '(queue' → logprob: -4.604654788970947
    7. 'q' → logprob: -5.729654788970947
    8. 'que' → logprob: -6.229654788970947
    9. 'd' → logprob: -6.354654788970947
    10. '   ' → logprob: -6.854654788970947

Token 472: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.3144752085208893
    2. 'queue' → logprob: -1.314475178718567
    3. ' queue' → logprob: -7.814475059509277
    4. 'q' → logprob: -8.064475059509277
    5. 'que' → logprob: -8.064475059509277
    6. ' deque' → logprob: -9.064475059509277
    7. 'dq' → logprob: -9.814475059509277
    8. 'Q' → logprob: -12.314475059509277
    9. 'd' → logprob: -14.064475059509277
    10. '```' → logprob: -14.064475059509277

Token 473: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2121647447347641
    2. '()' → logprob: -1.7121647596359253
    3. '())' → logprob: -5.212164878845215
    4. '(' → logprob: -6.212164878845215
    5. '(queue' → logprob: -6.462164878845215
    6. '()
' → logprob: -7.587164878845215
    7. 'queue' → logprob: -8.462164878845215
    8. '([' → logprob: -8.587164878845215
    9. ',' → logprob: -8.712164878845215
    10. ')
' → logprob: -9.212164878845215

Token 474: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01798451878130436
    2. '(' → logprob: -4.267984390258789
    3. '(queue' → logprob: -6.517984390258789
    4. '()
' → logprob: -6.892984390258789
    5. 'deque' → logprob: -7.892984390258789
    6. '([' → logprob: -8.017984390258789
    7. 'de' → logprob: -8.892984390258789
    8. '([(' → logprob: -9.142984390258789
    9. 'queue' → logprob: -9.767984390258789
    10. '=' → logprob: -10.017984390258789

Token 475: ' effectuer' (ID: 98625)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5266789197921753
    2. 'queue' → logprob: -2.026679039001465
    3. 'b' → logprob: -2.401679039001465
    4. ' la' → logprob: -2.651679039001465
    5. ' bfs' → logprob: -3.776679039001465
    6. 'que' → logprob: -3.901679039001465
    7. ' BFS' → logprob: -4.026679039001465
    8. 'B' → logprob: -4.151679039001465
    9. 'faire' → logprob: -4.276679039001465
    10. ' queue' → logprob: -4.401679039001465

Token 476: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8899755477905273
    2. 'la' → logprob: -1.0149755477905273
    3. 'b' → logprob: -2.3899755477905273
    4. ' une' → logprob: -2.6399755477905273
    5. 'B' → logprob: -3.1399755477905273
    6. 'une' → logprob: -4.764975547790527
    7. ' BFS' → logprob: -4.764975547790527
    8. ' bfs' → logprob: -6.764975547790527
    9. ' le' → logprob: -7.139975547790527
    10. 'le' → logprob: -7.264975547790527

Token 477: ' parcours' (ID: 62625)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1397377997636795
    2. ' BFS' → logprob: -2.639737844467163
    3. 'B' → logprob: -3.639737844467163
    4. ' bfs' → logprob: -4.264737606048584
    5. ' parcours' → logprob: -4.639737606048584
    6. 'par' → logprob: -4.889737606048584
    7. 'bread' → logprob: -7.764737606048584
    8. 'e' → logprob: -7.764737606048584
    9. ' breadth' → logprob: -7.889737606048584
    10. 'Bread' → logprob: -10.014738082885742

Token 478: ' BFS' (ID: 190016)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.035864513367414474
    2. 'b' → logprob: -3.4108645915985107
    3. ' BFS' → logprob: -6.910864353179932
    4. 'de' → logprob: -7.785864353179932
    5. ' bfs' → logprob: -7.910864353179932
    6. 'deque' → logprob: -9.28586483001709
    7. 'Bread' → logprob: -9.66086483001709
    8. 'en' → logprob: -9.91086483001709
    9. 'que' → logprob: -9.91086483001709
    10. 'queue' → logprob: -10.53586483001709

Token 479: ' (' (ID: 350)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3508235216140747
    2. 'q' → logprob: -1.8508235216140747
    3. ' queue' → logprob: -3.225823402404785
    4. 'Q' → logprob: -3.600823402404785
    5. '(queue' → logprob: -3.725823402404785
    6. '   ' → logprob: -3.850823402404785
    7. 'que' → logprob: -3.975823402404785
    8. 'b' → logprob: -6.100823402404785
    9. '(' → logprob: -6.225823402404785
    10. 'B' → logprob: -7.725823402404785

Token 480: 'par' (ID: 796)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.19036728143692017
    2. 'Bread' → logprob: -3.0653672218322754
    3. 'que' → logprob: -3.3153672218322754
    4. ')' → logprob: -3.5653672218322754
    5. 'Color' → logprob: -3.6903672218322754
    6. 'queue' → logprob: -4.190367221832275
    7. 'deque' → logprob: -4.440367221832275
    8. ' Edge' → logprob: -5.315367221832275
    9. 'b' → logprob: -6.565367221832275
    10. 'edge' → logprob: -7.315367221832275

Token 481: 'cours' (ID: 165989)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.9883211255073547
    2. 'b' → logprob: -2.23832106590271
    3. 'queue' → logprob: -2.61332106590271
    4. 'court' → logprob: -2.73832106590271
    5. 'cours' → logprob: -3.11332106590271
    6. 'level' → logprob: -3.36332106590271
    7. 'ordre' → logprob: -3.48832106590271
    8. 'bread' → logprob: -3.73832106590271
    9. 'cour' → logprob: -3.73832106590271
    10. 'niveau' → logprob: -3.98832106590271

Token 482: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5056218504905701
    2. 'en' → logprob: -1.0056219100952148
    3. 'b' → logprob: -4.380621910095215
    4. ' breadth' → logprob: -5.130621910095215
    5. ')' → logprob: -5.630621910095215
    6. 'de' → logprob: -6.380621910095215
    7. 'bread' → logprob: -6.630621910095215
    8. 'à' → logprob: -6.630621910095215
    9. 'deque' → logprob: -7.130621910095215
    10. ' largeur' → logprob: -7.505621910095215

Token 483: ' largeur' (ID: 180807)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.0012992846313863993
    2. ' largeur' → logprob: -7.0012993812561035
    3. 'Large' → logprob: -8.376298904418945
    4. ' large' → logprob: -9.126298904418945
    5. '_large' → logprob: -10.376298904418945
    6. 'bread' → logprob: -11.751298904418945
    7. 'queue' → logprob: -12.126298904418945
    8. 'larg' → logprob: -14.251298904418945
    9. '```' → logprob: -14.626298904418945
    10. 'width' → logprob: -14.626298904418945

Token 484: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03703038766980171
    2. '()' → logprob: -3.5370304584503174
    3. ')
' → logprob: -5.162030220031738
    4. '())' → logprob: -7.162030220031738
    5. '()
' → logprob: -7.787030220031738
    6. ')
' → logprob: -8.537030220031738
    7. '())
' → logprob: -9.912030220031738
    8. '(' → logprob: -10.912030220031738
    9. '()
' → logprob: -11.287030220031738
    10. ' )' → logprob: -11.537030220031738

Token 485: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.34854933619499207
    2. 'q' → logprob: -1.8485493659973145
    3. ' queue' → logprob: -2.4735493659973145
    4. '   ' → logprob: -3.5985493659973145
    5. 'Q' → logprob: -4.2235493659973145
    6. 'que' → logprob: -5.9735493659973145
    7. '
' → logprob: -6.4735493659973145
    8. 'deque' → logprob: -6.4735493659973145
    9. 'b' → logprob: -6.9735493659973145
    10. ' q' → logprob: -7.0985493659973145

Token 486: ' q' (ID: 2335)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.09364025294780731
    2. ' queue' → logprob: -3.0936403274536133
    3. 'q' (adapté à ' q') → logprob: -3.4686403274536133
    4. 'Q' → logprob: -4.843640327453613
    5. 'que' → logprob: -5.593640327453613
    6. 'dq' → logprob: -7.843640327453613
    7. 'deque' → logprob: -8.218640327453613
    8. ' q' → logprob: -8.343640327453613
    9. ' que' → logprob: -8.968640327453613
    10. '   ' → logprob: -9.468640327453613

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326720118522644
    2. ' =' → logprob: -1.3132672309875488
    3. '.' → logprob: -12.93826675415039
    4. ')' → logprob: -14.18826675415039
    5. ' ' → logprob: -14.43826675415039
    6. '()' → logprob: -14.68826675415039
    7. '=[]' → logprob: -14.93826675415039
    8. '   ' → logprob: -15.06326675415039
    9. '(' → logprob: -15.81326675415039
    10. '	' → logprob: -15.81326675415039

Token 488: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -2.7610454708337784e-05
    2. ' deque' → logprob: -10.500027656555176
    3. 'Deque' → logprob: -20.00002670288086
    4. 'collections' → logprob: -22.62502670288086
    5. 'de' → logprob: -22.75002670288086
    6. 'dq' → logprob: -23.00002670288086
    7. '```' → logprob: -23.00002670288086
    8. '   ' → logprob: -23.25002670288086
    9. 'queue' → logprob: -23.25002670288086
    10. 'que' → logprob: -24.50002670288086

Token 489: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.010216751135885715
    2. '()' → logprob: -5.01021671295166
    3. '()
' → logprob: -5.76021671295166
    4. '([(' → logprob: -8.01021671295166
    5. '(' → logprob: -11.88521671295166
    6. '[' → logprob: -12.88521671295166
    7. '()

' → logprob: -13.63521671295166
    8. '((' → logprob: -14.51021671295166
    9. '[(' → logprob: -14.63521671295166
    10. '([])
' → logprob: -15.01021671295166

Token 490: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.16011473536491394
    2. '(' → logprob: -2.2851147651672363
    3. '(q' → logprob: -3.9101147651672363
    4. '   ' → logprob: -4.035114765167236
    5. ' q' → logprob: -5.410114765167236
    6. '[' → logprob: -6.410114765167236
    7. '()' → logprob: -7.285114765167236
    8. ' (' → logprob: -7.535114765167236
    9. '([' → logprob: -8.160114288330078
    10. '0' → logprob: -8.910114288330078

Token 491: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03807477280497551
    2. ' q' → logprob: -3.7880747318267822
    3. '(' → logprob: -4.288074970245361
    4. '(q' → logprob: -7.288074970245361
    5. ' (' → logprob: -8.788074493408203
    6. '0' → logprob: -9.913074493408203
    7. '   ' → logprob: -10.913074493408203
    8. '()' → logprob: -11.163074493408203
    9. '[' → logprob: -11.413074493408203
    10. '  
' → logprob: -11.913074493408203

Token 492: ' Pour' (ID: 13931)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.5954712075181305e-05
    2. ' q' → logprob: -10.250036239624023
    3. '   ' → logprob: -15.000036239624023
    4. '	q' → logprob: -16.000036239624023
    5. 'append' → logprob: -16.250036239624023
    6. '```' → logprob: -17.750036239624023
    7. '_q' → logprob: -18.250036239624023
    8. '0' → logprob: -18.750036239624023
    9. '
' → logprob: -19.500036239624023
    10. 'enqueue' → logprob: -19.750036239624023

Token 493: ' chaque' (ID: 21194)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.1963736116886139
    2. 'q' → logprob: -2.446373701095581
    3. 'append' → logprob: -3.821373701095581
    4. 'Color' → logprob: -3.946373701095581
    5. '.append' → logprob: -4.946373462677002
    6. '0' → logprob: -5.196373462677002
    7. ' ' → logprob: -5.196373462677002
    8. ' i' → logprob: -5.196373462677002
    9. ' Color' → logprob: -5.696373462677002
    10. 'i' → logprob: -5.821373462677002

Token 494: ' voisin' (ID: 145411)
  Prédit: ' neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.4736739993095398
    2. 'neighbor' → logprob: -1.4736740589141846
    3. ' voisin' → logprob: -2.2236740589141846
    4. ' v' → logprob: -3.7236740589141846
    5. ' node' → logprob: -4.4736738204956055
    6. 'v' → logprob: -6.2236738204956055
    7. 'node' → logprob: -7.8486738204956055
    8. ' neighbour' → logprob: -8.223673820495605
    9. ' nei' → logprob: -8.598673820495605
    10. 'nei' → logprob: -8.598673820495605

Token 495: ' '' (ID: 461)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9056009650230408
    2. ' in' → logprob: -1.0306010246276855
    3. ' =' → logprob: -2.1556010246276855
    4. '=' → logprob: -3.1556010246276855
    5. ' de' → logprob: -3.2806010246276855
    6. 's' → logprob: -4.7806010246276855
    7. '[' → logprob: -5.0306010246276855
    8. '(' → logprob: -5.5306010246276855
    9. 'de' → logprob: -5.5306010246276855
    10. 'of' → logprob: -5.6556010246276855

Token 496: 'e' (ID: 68)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4840824007987976
    2. ' in' → logprob: -1.3590824604034424
    3. ' v' → logprob: -3.4840824604034424
    4. 'neighbor' → logprob: -3.6090824604034424
    5. ' of' → logprob: -4.234082221984863
    6. 'in' → logprob: -4.234082221984863
    7. 'nei' → logprob: -4.609082221984863
    8. 'node' → logprob: -5.109082221984863
    9. 'of' → logprob: -5.484082221984863
    10. ' nei' → logprob: -5.484082221984863

Token 497: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18512168526649475
    2. ' in' → logprob: -1.9351216554641724
    3. 'in' → logprob: -4.185121536254883
    4. ' '' → logprob: -5.185121536254883
    5. ''in' → logprob: -7.060121536254883
    6. 'e' → logprob: -8.060121536254883
    7. ' ' → logprob: -8.310121536254883
    8. ' of' → logprob: -8.435121536254883
    9. 'n' → logprob: -8.685121536254883
    10. ')' → logprob: -8.685121536254883

Token 498: ' du' (ID: 1462)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05942804366350174
    2. 'in' → logprob: -2.9344279766082764
    3. ' of' → logprob: -5.5594282150268555
    4. 'of' → logprob: -7.9344282150268555
    5. ' ' → logprob: -9.059428215026855
    6. ')' → logprob: -9.934428215026855
    7. '   ' → logprob: -10.684428215026855
    8. 'e' → logprob: -10.684428215026855
    9. ' de' → logprob: -11.059428215026855
    10. '  ' → logprob: -11.309428215026855

Token 499: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017469677550252527
    2. ' ' → logprob: -8.875174522399902
    3. 'Edge' → logprob: -10.375174522399902
    4. '[' → logprob: -14.375174522399902
    5. ' Edge' → logprob: -14.625174522399902
    6. 'Edges' → logprob: -14.750174522399902
    7. '   ' → logprob: -15.000174522399902
    8. 'Color' → logprob: -15.125174522399902
    9. 'q' → logprob: -15.375174522399902
    10. '(' → logprob: -15.625174522399902

Token 500: ' rac' (ID: 12334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013646948151290417
    2. ' ' → logprob: -4.513647079467773
    3. '[' → logprob: -6.013647079467773
    4. '(' → logprob: -10.013647079467773
    5. 's' → logprob: -10.513647079467773
    6. 'Color' → logprob: -10.888647079467773
    7. 'q' → logprob: -11.638647079467773
    8. ' =' → logprob: -11.763647079467773
    9. ' [' → logprob: -12.013647079467773
    10. ' (' → logprob: -12.138647079467773

Token 501: 'ine' (ID: 514)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7909971475601196
    2. '   ' → logprob: -1.2909971475601196
    3. '```' → logprob: -2.16599702835083
    4. 'e' → logprob: -3.04099702835083
    5. 'ot' → logprob: -3.91599702835083
    6. '       ' → logprob: -4.04099702835083
    7. 'Node' → logprob: -4.41599702835083
    8. 'oot' → logprob: -4.91599702835083
    9. ']' → logprob: -5.04099702835083
    10. 'ex' → logprob: -5.41599702835083

Token 502: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6601014733314514
    2. ' in' → logprob: -0.9101014733314514
    3. ',' → logprob: -3.5351014137268066
    4. '   ' → logprob: -3.9101014137268066
    5. ' :' → logprob: -5.035101413726807
    6. ':
' → logprob: -5.535101413726807
    7. '[' → logprob: -5.785101413726807
    8. '0' → logprob: -5.910101413726807
    9. ' q' → logprob: -6.035101413726807
    10. 'in' → logprob: -6.160101413726807

Token 503: 'som' (ID: 35641)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015284325927495956
    2. ' ' → logprob: -6.501528263092041
    3. ')' → logprob: -11.7515287399292
    4. 'Edge' → logprob: -11.8765287399292
    5. '   ' → logprob: -13.0015287399292
    6. 'e' → logprob: -13.5015287399292
    7. 'Color' → logprob: -13.8765287399292
    8. ' Edge' → logprob: -14.2515287399292
    9. '[' → logprob: -14.4390287399292
    10. ',' → logprob: -14.5015287399292

Token 504: 'met' (ID: 3001)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8108317852020264
    2. 'met' → logprob: -0.8108317852020264
    3. 'ge' → logprob: -3.5608317852020264
    4. 'q' → logprob: -3.9358317852020264
    5. 'ot' → logprob: -4.8108320236206055
    6. 'ma' → logprob: -4.8108320236206055
    7. 'Edge' → logprob: -4.8108320236206055
    8. 'ur' → logprob: -5.4358320236206055
    9. 'it' → logprob: -5.4358320236206055
    10. 'me' → logprob: -5.5608320236206055

Token 505: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05386921390891075
    2. '[' → logprob: -3.5538692474365234
    3. ' ' → logprob: -4.178869247436523
    4. '=' → logprob: -6.178869247436523
    5. ')' → logprob: -6.178869247436523
    6. ' =' → logprob: -7.178869247436523
    7. 'e' → logprob: -7.553869247436523
    8. ' [' → logprob: -7.678869247436523
    9. ' e' → logprob: -7.803869247436523
    10. 's' → logprob: -8.178869247436523

Token 506: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025842348113656044
    2. '=' → logprob: -4.150842189788818
    3. '[' → logprob: -4.900842189788818
    4. ' =' → logprob: -7.650842189788818
    5. 'e' → logprob: -7.900842189788818
    6. ' ' → logprob: -8.150842666625977
    7. 's' → logprob: -8.650842666625977
    8. 'de' → logprob: -8.650842666625977
    9. 'Edge' → logprob: -9.025842666625977
    10. ')' → logprob: -9.025842666625977

Token 507: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14073972404003143
    2. '):
' → logprob: -2.265739679336548
    3. ')' → logprob: -4.015739917755127
    4. '),' → logprob: -4.890739917755127
    5. ':' → logprob: -6.640739917755127
    6. ' ):' → logprob: -9.140739440917969
    7. ' in' → logprob: -9.265739440917969
    8. '0' → logprob: -9.515739440917969
    9. '):
' → logprob: -9.640739440917969
    10. '   ' → logprob: -9.640739440917969

Token 508: ' ajouter' (ID: 78457)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.21585898101329803
    2. '   ' → logprob: -1.7158589363098145
    3. 'q' → logprob: -4.7158589363098145
    4. '       ' → logprob: -5.5908589363098145
    5. '    ' → logprob: -7.9658589363098145
    6. '    
' → logprob: -8.215859413146973
    7. '	q' → logprob: -8.465859413146973
    8. ' ' → logprob: -8.590859413146973
    9. ' for' → logprob: -9.090859413146973
    10. ' 
' → logprob: -9.340859413146973

Token 509: ' un' (ID: 537)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4130447804927826
    2. ' e' → logprob: -1.663044810295105
    3. '(e' → logprob: -1.913044810295105
    4. 'q' → logprob: -7.7880449295043945
    5. ' (' → logprob: -8.913044929504395
    6. '	e' → logprob: -9.163044929504395
    7. '(' → logprob: -9.288044929504395
    8. ' q' → logprob: -9.413044929504395
    9. 'Edge' → logprob: -9.413044929504395
    10. ' Edge' → logprob: -9.788044929504395

Token 510: ' tuple' (ID: 31311)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2073507010936737
    2. ' e' → logprob: -1.707350730895996
    3. 'q' → logprob: -6.457350730895996
    4. ' espace' → logprob: -6.457350730895996
    5. '(e' → logprob: -6.707350730895996
    6. ' ' → logprob: -8.082350730895996
    7. 'space' → logprob: -8.207350730895996
    8. ')' → logprob: -8.707350730895996
    9. ' q' → logprob: -8.832350730895996
    10. 's' → logprob: -9.332350730895996

Token 511: ' (' (ID: 350)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.17288044095039368
    2. '(' → logprob: -2.0478804111480713
    3. ' (' → logprob: -3.5478804111480713
    4. '((' → logprob: -7.29788064956665
    5. '   ' → logprob: -9.047880172729492
    6. '(q' → logprob: -9.297880172729492
    7. '(E' → logprob: -10.797880172729492
    8. '(queue' → logprob: -11.797880172729492
    9. '(de' → logprob: -11.922880172729492
    10. ' ' → logprob: -12.297880172729492

Token 512: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.002367562847211957
    2. '(e' → logprob: -6.3773674964904785
    3. '0' → logprob: -7.8773674964904785
    4. ' e' → logprob: -9.127367973327637
    5. '(' → logprob: -9.377367973327637
    6. ',' → logprob: -10.377367973327637
    7. ')' → logprob: -10.752367973327637
    8. ' (' → logprob: -11.127367973327637
    9. ')e' → logprob: -11.877367973327637
    10. ',e' → logprob: -12.252367973327637

Token 513: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018268341955263168
    2. ' ,' → logprob: -8.75018310546875
    3. ')' → logprob: -11.00018310546875
    4. ',e' → logprob: -13.12518310546875
    5. '),' → logprob: -14.00018310546875
    6. ',
' → logprob: -14.50018310546875
    7. ',color' → logprob: -14.75018310546875
    8. '‌,' → logprob: -14.87518310546875
    9. '   ' → logprob: -15.12518310546875
    10. '0' → logprob: -15.25018310546875

Token 514: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6776944398880005
    2. '1' → logprob: -0.8026944398880005
    3. 'C' → logprob: -3.802694320678711
    4. 'Color' → logprob: -4.177694320678711
    5. 'e' → logprob: -6.302694320678711
    6. '-' → logprob: -7.052694320678711
    7. 'q' → logprob: -7.177694320678711
    8. ' ' → logprob: -7.427694320678711
    9. 'None' → logprob: -7.427694320678711
    10. 'False' → logprob: -7.677694320678711

Token 515: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.521781861782074
    2. '1' → logprob: -1.1467819213867188
    3. 'Color' → logprob: -2.8967819213867188
    4. 'C' → logprob: -3.8967819213867188
    5. 'None' → logprob: -5.271781921386719
    6. 'e' → logprob: -6.146781921386719
    7. ' ' → logprob: -6.771781921386719
    8. '-' → logprob: -7.021781921386719
    9. 'q' → logprob: -7.146781921386719
    10. ')' → logprob: -7.146781921386719

Token 516: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003044802288059145
    2. ',' → logprob: -8.500304222106934
    3. ' )' → logprob: -9.375304222106934
    4. '),' → logprob: -12.125304222106934
    5. '   ' → logprob: -12.250304222106934
    6. '))' → logprob: -13.625304222106934
    7. ')
' → logprob: -13.750304222106934
    8. ')`' → logprob: -14.000304222106934
    9. ' ,' → logprob: -14.625304222106934
    10. '    ' → logprob: -14.625304222106934

Token 517: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015759242698550224
    2. ',' → logprob: -5.265759468078613
    3. '<|end|>' → logprob: -5.390759468078613
    4. ' )' → logprob: -5.765759468078613
    5. '(q' → logprob: -7.640759468078613
    6. '   ' → logprob: -7.765759468078613
    7. '<|end|>' → logprob: -8.640759468078613
    8. ' ' → logprob: -8.765759468078613
    9. ')
' → logprob: -8.890759468078613
    10. '    
' → logprob: -8.890759468078613

Token 518: ' la' (ID: 557)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8575612306594849
    2. ' la' → logprob: -1.1075612306594849
    3. ' q' → logprob: -1.4825612306594849
    4. 'la' → logprob: -4.107561111450195
    5. 'the' → logprob: -7.107561111450195
    6. '`' → logprob: -8.607561111450195
    7. 'a' → logprob: -8.732561111450195
    8. ' ' → logprob: -8.982561111450195
    9. '	q' → logprob: -9.107561111450195
    10. 's' → logprob: -9.357561111450195

Token 519: ' file' (ID: 1974)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.707997428951785e-05
    2. ' q' → logprob: -9.500077247619629
    3. 'deque' → logprob: -13.875077247619629
    4. 'queue' → logprob: -14.875077247619629
    5. '	q' → logprob: -15.125077247619629
    6. ' queue' → logprob: -15.625077247619629
    7. 'que' → logprob: -16.250076293945312
    8. '
' → logprob: -16.500076293945312
    9. '```' → logprob: -16.625076293945312
    10. '_q' → logprob: -17.125076293945312

Token 520: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45932143926620483
    2. ')' → logprob: -1.3343214988708496
    3. '
' → logprob: -2.8343214988708496
    4. '    
' → logprob: -3.8343214988708496
    5. '<|end|>' → logprob: -5.33432149887085
    6. ',' → logprob: -5.58432149887085
    7. ')
' → logprob: -6.20932149887085
    8. '  
' → logprob: -6.20932149887085
    9. '    ' → logprob: -6.45932149887085
    10. '(q' → logprob: -6.70932149887085

Token 521: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31633350253105164
    2. '
' → logprob: -1.441333532333374
    3. ')' → logprob: -4.316333293914795
    4. '    
' → logprob: -4.441333293914795
    5. 'q' → logprob: -6.441333293914795
    6. '  
' → logprob: -6.691333293914795
    7. '	q' → logprob: -6.941333293914795
    8. '<|end|>' → logprob: -7.191333293914795
    9. ')
' → logprob: -7.316333293914795
    10. ' ' → logprob: -7.691333293914795

Token 522: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.9632880091667175
    2. '(q' → logprob: -1.2132880687713623
    3. '(' → logprob: -2.3382880687713623
    4. 'for' → logprob: -2.8382880687713623
    5. ' q' → logprob: -3.2132880687713623
    6. '   ' → logprob: -3.3382880687713623
    7. '(e' → logprob: -3.7132880687713623
    8. ' for' → logprob: -3.8382880687713623
    9. ' (' → logprob: -3.8382880687713623
    10. '(
' → logprob: -5.713287830352783

Token 523: ' '' (ID: 461)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0385507345199585
    2. 'for' → logprob: -1.0385507345199585
    3. ' q' → logprob: -1.7885507345199585
    4. 'q' → logprob: -2.663550853729248
    5. '   ' → logprob: -3.038550853729248
    6. '
' → logprob: -6.663550853729248
    7. '(q' → logprob: -6.663550853729248
    8. ' ' → logprob: -6.913550853729248
    9. ')' → logprob: -6.913550853729248
    10. ' 
' → logprob: -7.288550853729248

Token 524: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.23079852759838104
    2. '(e' → logprob: -2.3557984828948975
    3. 'q' → logprob: -2.7307984828948975
    4. 'for' → logprob: -3.4807984828948975
    5. ' (' → logprob: -5.105798721313477
    6. ' e' → logprob: -5.355798721313477
    7. ' for' → logprob: -6.230798721313477
    8. '   ' → logprob: -7.605798721313477
    9. '(q' → logprob: -8.105798721313477
    10. '(' → logprob: -8.105798721313477

Token 525: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010198289528489113
    2. ' ,' → logprob: -7.1260199546813965
    3. ',e' → logprob: -9.001019477844238
    4. 'e' → logprob: -10.251019477844238
    5. ')' → logprob: -10.626019477844238
    6. '),' → logprob: -12.376019477844238
    7. ','' → logprob: -13.001019477844238
    8. ',
' → logprob: -13.063519477844238
    9. '',' → logprob: -13.188519477844238
    10. ',n' → logprob: -13.501019477844238

Token 526: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019030551193282008
    2. ' ,' → logprob: -6.626903057098389
    3. ')' → logprob: -8.50190258026123
    4. ',e' → logprob: -9.00190258026123
    5. ' represents' → logprob: -9.62690258026123
    6. '<|end|>' → logprob: -9.75190258026123
    7. ',
' → logprob: -10.50190258026123
    8. ',q' → logprob: -11.00190258026123
    9. '   ' → logprob: -11.75190258026123
    10. 'e' → logprob: -11.81440258026123

Token 527: ' le' (ID: 505)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6213418841362
    2. ' e' → logprob: -1.3713419437408447
    3. '(e' → logprob: -2.3713419437408447
    4. ' (' → logprob: -2.6213419437408447
    5. '<|end|>' → logprob: -4.496341705322266
    6. ' the' → logprob: -4.621341705322266
    7. ',' → logprob: -5.621341705322266
    8. 'the' → logprob: -5.871341705322266
    9. ',e' → logprob: -6.121341705322266
    10. '(' → logprob: -6.371341705322266

Token 528: ' sommet' (ID: 130502)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -1.0180277824401855
    2. ' voisin' → logprob: -1.1430277824401855
    3. 'som' → logprob: -1.7680277824401855
    4. ' sommet' → logprob: -2.0180277824401855
    5. ' noe' → logprob: -5.7680277824401855
    6. 'neighbor' → logprob: -6.1430277824401855
    7. 's' → logprob: -6.2680277824401855
    8. ' prochain' → logprob: -6.3930277824401855
    9. 'n' → logprob: -6.6430277824401855
    10. 'next' → logprob: -7.0180277824401855

Token 529: ' voisin' (ID: 145411)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011674728244543076
    2. ' ,' → logprob: -4.636674880981445
    3. '   ' → logprob: -7.136674880981445
    4. ' voisin' → logprob: -7.886674880981445
    5. ' e' → logprob: -8.636674880981445
    6. 'e' → logprob: -8.886674880981445
    7. ',e' → logprob: -8.886674880981445
    8. ',
' → logprob: -9.386674880981445
    9. ')' → logprob: -9.886674880981445
    10. '<|end|>' → logprob: -10.261674880981445

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11486240476369858
    2. ')' → logprob: -2.2398624420166016
    3. '   ' → logprob: -6.864862442016602
    4. ' ,' → logprob: -7.864862442016602
    5. ',
' → logprob: -8.489862442016602
    6. '),' → logprob: -8.489862442016602
    7. ' )' → logprob: -9.864862442016602
    8. ')
' → logprob: -9.864862442016602
    9. ',q' → logprob: -10.364862442016602
    10. ',)' → logprob: -11.489862442016602

Token 531: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26002228260040283
    2. ' ' → logprob: -1.6350222826004028
    3. '   ' → logprob: -4.510022163391113
    4. ' e' → logprob: -4.885022163391113
    5. '    ' → logprob: -5.760022163391113
    6. ' '' → logprob: -5.885022163391113
    7. ',' → logprob: -6.135022163391113
    8. ' q' → logprob: -6.385022163391113
    9. 'e' → logprob: -6.510022163391113
    10. '  ' → logprob: -6.760022163391113

Token 532: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1849130094051361
    2. ',' → logprob: -2.184912919998169
    3. ' ' → logprob: -3.434912919998169
    4. ' ,' → logprob: -4.934913158416748
    5. 'e' → logprob: -5.184913158416748
    6. ' e' → logprob: -5.809913158416748
    7. '1' → logprob: -6.059913158416748
    8. ''' → logprob: -7.184913158416748
    9. 'q' → logprob: -7.309913158416748
    10. '   ' → logprob: -7.309913158416748

Token 533: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5791566371917725
    2. ')' → logprob: -0.8291566371917725
    3. '),' → logprob: -6.954156875610352
    4. '<|end|>' → logprob: -7.329156875610352
    5. ' ,' → logprob: -7.579156875610352
    6. ' )' → logprob: -8.079156875610352
    7. '   ' → logprob: -8.204156875610352
    8. ' represents' → logprob: -8.579156875610352
    9. ' ' → logprob: -10.579156875610352
    10. ',)' → logprob: -10.954156875610352

Token 534: ' le' (ID: 505)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3982084393501282
    2. '0' → logprob: -2.3982083797454834
    3. 'le' → logprob: -2.3982083797454834
    4. 'l' → logprob: -2.8982083797454834
    5. 'la' → logprob: -3.2732083797454834
    6. ' la' → logprob: -4.0232086181640625
    7. ' the' → logprob: -4.5232086181640625
    8. '#' → logprob: -4.7732086181640625
    9. 'e' → logprob: -5.7732086181640625
    10. ' ' → logprob: -6.0232086181640625

Token 535: ' sommet' (ID: 130502)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.8994028568267822
    2. 'index' → logprob: -1.7744028568267822
    3. 'parent' → logprob: -1.8994028568267822
    4. 'som' → logprob: -2.2744028568267822
    5. '0' → logprob: -3.0244028568267822
    6. ' Color' → logprob: -3.1494028568267822
    7. 'niveau' → logprob: -3.8994028568267822
    8. ' sommet' → logprob: -4.149402618408203
    9. 'indice' → logprob: -4.524402618408203
    10. 'color' → logprob: -5.524402618408203

Token 536: ' parent' (ID: 5980)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.4037883281707764
    2. 'parent' → logprob: -1.4037883281707764
    3. ' actuel' → logprob: -2.1537883281707764
    4. ' de' → logprob: -2.6537883281707764
    5. 'source' → logprob: -3.0287883281707764
    6. 'cour' → logprob: -3.0287883281707764
    7. 'current' → logprob: -3.1537883281707764
    8. ' parent' → logprob: -3.5287883281707764
    9. ')' → logprob: -3.7787883281707764
    10. 'index' → logprob: -3.7787883281707764

Token 537: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3927309811115265
    2. ')' → logprob: -1.142730951309204
    3. ')
' → logprob: -5.517731189727783
    4. '
' → logprob: -7.517731189727783
    5. '    
' → logprob: -7.767731189727783
    6. ',' → logprob: -8.767730712890625
    7. '    ' → logprob: -9.017730712890625
    8. '  ' → logprob: -9.267730712890625
    9. ' ' → logprob: -9.642730712890625
    10. '  
' → logprob: -10.017730712890625

Token 538: 'ici' (ID: 3757)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09171527624130249
    2. '0' → logprob: -2.8417153358459473
    3. ' )' → logprob: -3.7167153358459473
    4. 'e' → logprob: -6.091715335845947
    5. ' ' → logprob: -6.966715335845947
    6. 'parent' → logprob: -7.716715335845947
    7. ',' → logprob: -8.216714859008789
    8. ' e' → logprob: -8.591714859008789
    9. '),' → logprob: -8.966714859008789
    10. ')\' → logprob: -9.341714859008789

Token 539: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05062702298164368
    2. ' )' → logprob: -3.9256269931793213
    3. 'le' → logprob: -4.4256272315979
    4. ',' → logprob: -5.0506272315979
    5. ' le' → logprob: -6.1756272315979
    6. ' la' → logprob: -6.3006272315979
    7. 'parent' → logprob: -6.5506272315979
    8. ' parent' → logprob: -6.5506272315979
    9. 'l' → logprob: -6.8006272315979
    10. 'la' → logprob: -7.1756272315979

Token 540: ' rac' (ID: 12334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9856682419776917
    2. ' rac' → logprob: -1.2356681823730469
    3. ')' → logprob: -2.235668182373047
    4. 'root' → logprob: -2.610668182373047
    5. 'rac' → logprob: -2.735668182373047
    6. ' ' → logprob: -3.360668182373047
    7. ' root' → logprob: -3.360668182373047
    8. ' )' → logprob: -4.235668182373047
    9. ' ' → logprob: -6.985668182373047
    10. 'r' → logprob: -7.110668182373047

Token 541: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.00011927806917810813
    2. 'e' → logprob: -9.12511920928955
    3. '```' → logprob: -12.87511920928955
    4. '1' → logprob: -14.00011920928955
    5. '#' → logprob: -14.25011920928955
    6. 'i' → logprob: -14.25011920928955
    7. 'in' → logprob: -14.37511920928955
    8. ')' → logprob: -14.37511920928955
    9. '   ' → logprob: -14.37511920928955
    10. 'ïne' → logprob: -14.62511920928955

Token 542: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010449681576574221
    2. ' )' → logprob: -10.250104904174805
    3. ')
' → logprob: -11.000104904174805
    4. '   ' → logprob: -11.500104904174805
    5. ',' → logprob: -12.125104904174805
    6. '0' → logprob: -12.125104904174805
    7. '),' → logprob: -12.125104904174805
    8. ')`' → logprob: -12.250104904174805
    9. '')' → logprob: -12.500104904174805
    10. '))' → logprob: -12.875104904174805

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5089327692985535
    2. '
' → logprob: -1.1339328289031982
    3. '    
' → logprob: -3.2589328289031982
    4. 'for' → logprob: -4.258932590484619
    5. '  
' → logprob: -4.633932590484619
    6. 'q' → logprob: -5.383932590484619
    7. ' for' → logprob: -5.758932590484619
    8. '   
' → logprob: -6.008932590484619
    9. ' 
' → logprob: -6.633932590484619
    10. '	q' → logprob: -6.758932590484619

Token 544: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7335020899772644
    2. '   ' → logprob: -0.9835020899772644
    3. 'q' → logprob: -1.9835021495819092
    4. ' for' → logprob: -5.23350191116333
    5. '    
' → logprob: -6.60850191116333
    6. ' q' → logprob: -7.48350191116333
    7. '
' → logprob: -7.73350191116333
    8. '	q' → logprob: -8.608502388000488
    9. '```' → logprob: -9.608502388000488
    10. ' 
' → logprob: -9.733502388000488

Token 545: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5759473443031311
    2. ' e' → logprob: -0.8259473443031311
    3. '	e' → logprob: -12.200947761535645
    4. 'neighbor' → logprob: -13.950947761535645
    5. ' ' → logprob: -14.950947761535645
    6. '   ' → logprob: -15.200947761535645
    7. '_e' → logprob: -15.638447761535645
    8. 'ｅ' → logprob: -15.950947761535645
    9. ' ' → logprob: -16.138446807861328
    10. '(e' → logprob: -16.388446807861328

Token 546: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13096372783184052
    2. 'in' → logprob: -2.1309638023376465
    3. ',' → logprob: -5.6309638023376465
    4. ' ' → logprob: -8.380963325500488
    5. ' ,' → logprob: -8.630963325500488
    6. '	in' → logprob: -11.005963325500488
    7. '  ' → logprob: -12.380963325500488
    8. ')' → logprob: -12.880963325500488
    9. ',in' → logprob: -12.880963325500488
    10. 's' → logprob: -13.380963325500488

Token 547: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.000804745068307966
    2. ' Edge' → logprob: -7.125804901123047
    3. '<Edge' → logprob: -16.125804901123047
    4. ' ' → logprob: -16.250804901123047
    5. 'edge' → logprob: -17.125804901123047
    6. '   ' → logprob: -17.125804901123047
    7. 'Range' → logprob: -17.500804901123047
    8. 'range' → logprob: -17.500804901123047
    9. '.Edge' → logprob: -17.625804901123047
    10. '[' → logprob: -17.625804901123047

Token 548: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.5
    3. ' [' → logprob: -17.125
    4. 's' → logprob: -18.25
    5. '[
' → logprob: -18.375
    6. '```' → logprob: -18.75
    7. '   ' → logprob: -19.0
    8. '\[' → logprob: -19.875
    9. 'a' → logprob: -20.0
    10. 'import' → logprob: -20.6875

Token 549: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.625003814697266
    3. ' ' → logprob: -16.375003814697266
    4. '(' → logprob: -19.625003814697266
    5. '   ' → logprob: -19.625003814697266
    6. '۰' → logprob: -19.625003814697266
    7. '```' → logprob: -20.375003814697266
    8. '][' → logprob: -20.375003814697266
    9. '０' → logprob: -20.687503814697266
    10. '[
' → logprob: -21.437503814697266

Token 550: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0007737740525044501
    2. ']' → logprob: -7.375773906707764
    3. ']:
' → logprob: -9.500773429870605
    4. ']:
' → logprob: -10.500773429870605
    5. ':' → logprob: -10.750773429870605
    6. '):' → logprob: -11.250773429870605
    7. ' ]' → logprob: -13.000773429870605
    8. ']>' → logprob: -13.250773429870605
    9. ']):' → logprob: -13.375773429870605
    10. '>:' → logprob: -14.000773429870605

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023509375751018524
    2. '	q' → logprob: -4.148509502410889
    3. ' q' → logprob: -5.523509502410889
    4. 'q' → logprob: -6.648509502410889
    5. '   ' → logprob: -6.773509502410889
    6. ':' → logprob: -8.39850902557373
    7. '	   ' → logprob: -9.27350902557373
    8. '[q' → logprob: -9.27350902557373
    9. '	' → logprob: -9.39850902557373
    10. ',q' → logprob: -9.52350902557373

Token 552: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -4.179569077678025e-05
    2. '   ' → logprob: -10.125041961669922
    3. ' q' → logprob: -13.875041961669922
    4. 'Color' → logprob: -15.000041961669922
    5. '       ' → logprob: -15.375041961669922
    6. '	q' → logprob: -15.750041961669922
    7. '           ' → logprob: -18.375041961669922
    8. '    
' → logprob: -19.125041961669922
    9. '```' → logprob: -19.125041961669922
    10. 'color' → logprob: -19.500041961669922

Token 553: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024827925954014063
    2. '.' → logprob: -6.002482891082764
    3. '.enqueue' → logprob: -12.627482414245605
    4. '.app' → logprob: -14.252482414245605
    5. 'append' → logprob: -14.502482414245605
    6. '.extend' → logprob: -14.627482414245605
    7. '.Append' → logprob: -14.627482414245605
    8. '.put' → logprob: -14.877482414245605
    9. '.push' → logprob: -14.877482414245605
    10. '   ' → logprob: -15.127482414245605

Token 554: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.007244306616485119
    2. '(' → logprob: -5.507244110107422
    3. '(e' → logprob: -5.757244110107422
    4. ' (' → logprob: -14.382244110107422
    5. '(E' → logprob: -15.882244110107422
    6. '   ' → logprob: -16.132244110107422
    7. ' ((' → logprob: -16.507244110107422
    8. '([' → logprob: -16.757244110107422
    9. '(
' → logprob: -16.882244110107422
    10. ' ' → logprob: -17.507244110107422

Token 555: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -2.1008713702030946e-06
    2. ' e' → logprob: -13.125001907348633
    3. ')e' → logprob: -18.000001907348633
    4. '(e' → logprob: -19.125001907348633
    5. '	e' → logprob: -19.250001907348633
    6. ',e' → logprob: -19.500001907348633
    7. '   ' → logprob: -19.500001907348633
    8. ''e' → logprob: -19.625001907348633
    9. '_e' → logprob: -20.500001907348633
    10. ',' → logprob: -20.875001907348633

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.47495681833243e-05
    2. ' ,' → logprob: -10.625024795532227
    3. ',
' → logprob: -15.750024795532227
    4. '0' → logprob: -16.125024795532227
    5. '   ' → logprob: -16.875024795532227
    6. ' ' → logprob: -18.375024795532227
    7. '```' → logprob: -18.750024795532227
    8. ')' → logprob: -19.125024795532227
    9. '‌,' → logprob: -19.250024795532227
    10. '),' → logprob: -19.500024795532227

Token 557: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.750011444091797
    4. '۰' → logprob: -19.625011444091797
    5. '０' → logprob: -20.812511444091797
    6. '  ' → logprob: -21.062511444091797
    7. '[' → logprob: -21.125011444091797
    8. ')' → logprob: -21.500011444091797
    9. '00' → logprob: -21.687511444091797
    10. '    ' → logprob: -22.000011444091797

Token 558: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -19.5
    4. '۰' → logprob: -19.625
    5. '０' → logprob: -20.375
    6. '[' → logprob: -20.875
    7. '00' → logprob: -21.625
    8. '০' → logprob: -22.0625
    9. '```' → logprob: -22.3125
    10. '  ' → logprob: -22.8125

Token 559: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4740934371948242
    2. ')' → logprob: -0.9740934371948242
    3. '))
' → logprob: -12.224093437194824
    4. '),' → logprob: -12.849093437194824
    5. ')))' → logprob: -12.849093437194824
    6. ' )' → logprob: -13.349093437194824
    7. ' ))' → logprob: -13.349093437194824
    8. ')
' → logprob: -13.474093437194824
    9. ',' → logprob: -14.599093437194824
    10. '   ' → logprob: -15.224093437194824

Token 560: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16374115645885468
    2. '    
' → logprob: -2.663741111755371
    3. '<|end|>' → logprob: -2.913741111755371
    4. '```' → logprob: -4.913741111755371
    5. 'while' → logprob: -5.038741111755371
    6. ')' → logprob: -5.663741111755371
    7. '
' → logprob: -6.413741111755371
    8. '  
' → logprob: -7.038741111755371
    9. '   
' → logprob: -7.038741111755371
    10. 'Color' → logprob: -7.038741111755371

Token 561: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.286690890789032
    2. 'index' → logprob: -2.1616909503936768
    3. 'i' → logprob: -2.2866909503936768
    4. '   ' → logprob: -3.6616909503936768
    5. '    
' → logprob: -5.911690711975098
    6. 'color' → logprob: -6.786690711975098
    7. 'indice' → logprob: -7.911690711975098
    8. 'current' → logprob: -8.036690711975098
    9. 'count' → logprob: -8.036690711975098
    10. 'next' → logprob: -8.036690711975098

Token 562: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4296611547470093
    2. 'while' → logprob: -1.8046611547470093
    3. '   ' → logprob: -2.179661273956299
    4. 'i' → logprob: -3.304661273956299
    5. 'index' → logprob: -3.679661273956299
    6. ' while' → logprob: -6.054661273956299
    7. ' idx' → logprob: -6.429661273956299
    8. '    
' → logprob: -6.554661273956299
    9. 'color' → logprob: -6.929661273956299
    10. 'pos' → logprob: -7.054661273956299

Token 563: ' Initial' (ID: 9209)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.12816831469535828
    2. 'index' → logprob: -2.3781683444976807
    3. 'i' → logprob: -4.378168106079102
    4. 'pos' → logprob: -4.753168106079102
    5. 'visited' → logprob: -6.128168106079102
    6. 'color' → logprob: -6.628168106079102
    7. 'current' → logprob: -7.753168106079102
    8. 'cnt' → logprob: -7.878168106079102
    9. 'count' → logprob: -8.128168106079102
    10. 'indice' → logprob: -8.253168106079102

Token 564: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.639876663684845
    2. 'izer' → logprob: -1.5148766040802002
    3. 'ize' → logprob: -1.6398766040802002
    4. 'index' → logprob: -4.514876842498779
    5. 'ized' → logprob: -4.764876842498779
    6. '#' → logprob: -4.764876842498779
    7. '_counter' → logprob: -5.389876842498779
    8. '_index' → logprob: -5.514876842498779
    9. 'ization' → logprob: -5.514876842498779
    10. 'er' → logprob: -5.639876842498779

Token 565: ' un' (ID: 537)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09924975782632828
    2. 'index' → logprob: -2.474249839782715
    3. 'i' → logprob: -5.974249839782715
    4. 'used' → logprob: -6.099249839782715
    5. 'pos' → logprob: -6.349249839782715
    6. 'cnt' → logprob: -7.599249839782715
    7. 'count' → logprob: -7.724249839782715
    8. 'color' → logprob: -7.724249839782715
    9. 'visited' → logprob: -7.849249839782715
    10. 'current' → logprob: -7.849249839782715

Token 566: ' accumulate' (ID: 74226)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.23407116532325745
    2. 'index' → logprob: -1.734071135520935
    3. 'visited' → logprob: -4.609071254730225
    4. 'count' → logprob: -4.859071254730225
    5. 'pos' → logprob: -5.609071254730225
    6. 'counter' → logprob: -6.234071254730225
    7. 'cnt' → logprob: -6.234071254730225
    8. 'pointer' → logprob: -6.484071254730225
    9. 'color' → logprob: -6.609071254730225
    10. 'ptr' → logprob: -6.734071254730225

Token 567: 'ur' (ID: 330)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09477714449167252
    2. 'r' → logprob: -2.5947771072387695
    3. 'ur' → logprob: -4.2197771072387695
    4. 'u' → logprob: -7.8447771072387695
    5. ' ' → logprob: -8.46977710723877
    6. '=' → logprob: -8.59477710723877
    7. ' =' → logprob: -9.71977710723877
    8. '   ' → logprob: -9.96977710723877
    9. ' d' → logprob: -10.59477710723877
    10. '_' → logprob: -10.84477710723877

Token 568: ' '' (ID: 461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2421081066131592
    2. 'sum' → logprob: -1.3671081066131592
    3. 'total' → logprob: -1.9921081066131592
    4. ' ans' → logprob: -2.117108106613159
    5. ' total' → logprob: -2.867108106613159
    6. '=' → logprob: -3.492108106613159
    7. ' sum' → logprob: -3.742108106613159
    8. 'answer' → logprob: -3.867108106613159
    9. 'ans' → logprob: -4.242108345031738
    10. 's' → logprob: -4.617108345031738

Token 569: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9888625741004944
    2. 'answer' → logprob: -1.6138625144958496
    3. 'res' → logprob: -1.9888625144958496
    4. 'total' → logprob: -2.1138625144958496
    5. 'sum' → logprob: -2.8638625144958496
    6. 'result' → logprob: -3.1138625144958496
    7. 's' → logprob: -3.3638625144958496
    8. 'acc' → logprob: -3.9888625144958496
    9. 'score' → logprob: -5.36386251449585
    10. 'S' → logprob: -5.86386251449585

Token 570: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002778962254524231
    2. '=' → logprob: -6.002779006958008
    3. ',' → logprob: -8.377779006958008
    4. '_sum' → logprob: -11.002779006958008
    5. ')' → logprob: -11.127779006958008
    6. ' ' → logprob: -11.502779006958008
    7. '_value' → logprob: -11.752779006958008
    8. '_' → logprob: -11.877779006958008
    9. ' ,' → logprob: -12.377779006958008
    10. '_val' → logprob: -13.377779006958008

Token 571: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740893542766571
    2. '=' → logprob: -0.9740893840789795
    3. ',' → logprob: -12.224089622497559
    4. '   ' → logprob: -13.099089622497559
    5. '=
' → logprob: -13.599089622497559
    6. ' ' → logprob: -14.224089622497559
    7. ' =
' → logprob: -14.224089622497559
    8. '=sum' → logprob: -14.974089622497559
    9. '0' → logprob: -15.099089622497559
    10. ' ans' → logprob: -15.224089622497559

Token 572: ' ' (ID: 220)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.31655511260032654
    2. 'Color' → logprob: -1.941555142402649
    3. '0' → logprob: -2.0665550231933594
    4. ' C' → logprob: -7.316555023193359
    5. ' Color' → logprob: -7.816555023193359
    6. ' ' → logprob: -9.69155502319336
    7. 'color' → logprob: -10.56655502319336
    8. 'int' → logprob: -11.19155502319336
    9. 'COLOR' → logprob: -11.31655502319336
    10. 'max' → logprob: -11.81655502319336

Token 573: '0' (ID: 15)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.49538421630859375
    2. '0' → logprob: -1.3703842163085938
    3. 'Color' → logprob: -1.9953842163085938
    4. 'color' → logprob: -9.120384216308594
    5. ' C' → logprob: -9.245384216308594
    6. ' Color' → logprob: -9.245384216308594
    7. 'sum' → logprob: -9.245384216308594
    8. '-' → logprob: -9.620384216308594
    9. ' ' → logprob: -9.995384216308594
    10. '-color' → logprob: -10.370384216308594

Token 574: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4428566098213196
    2. ' ans' → logprob: -1.5678565502166748
    3. '
' → logprob: -2.442856550216675
    4. '   ' → logprob: -3.442856550216675
    5. '(ans' → logprob: -4.567856788635254
    6. ' =' → logprob: -4.692856788635254
    7. '	ans' → logprob: -5.567856788635254
    8. '    
' → logprob: -5.942856788635254
    9. '=' → logprob: -6.192856788635254
    10. '\n' → logprob: -6.817856788635254

Token 575: ' pour' (ID: 1930)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.068684697151184
    2. ' ans' → logprob: -1.693684697151184
    3. '0' → logprob: -2.1936845779418945
    4. ' 
' → logprob: -2.3186845779418945
    5. '   ' → logprob: -2.4436845779418945
    6. ' ' → logprob: -3.1936845779418945
    7. '    
' → logprob: -3.5686845779418945
    8. '\n' → logprob: -3.9436845779418945
    9. '    ' → logprob: -4.3186845779418945
    10. '#' → logprob: -4.4436845779418945

Token 576: ' stock' (ID: 6546)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.2221381962299347
    2. 'sum' → logprob: -2.5971381664276123
    3. 'ans' → logprob: -2.9721381664276123
    4. 'Color' → logprob: -4.097138404846191
    5. ' accum' → logprob: -4.347138404846191
    6. ' accumulate' → logprob: -4.722138404846191
    7. 'calcul' → logprob: -5.097138404846191
    8. '0' → logprob: -5.222138404846191
    9. 'C' → logprob: -5.222138404846191
    10. 'i' → logprob: -5.597138404846191

Token 577: 'er' (ID: 259)
  Prédit: 'uler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -1.1301323175430298
    2. 'érer' → logprob: -1.2551323175430298
    3. 'er' → logprob: -1.5051323175430298
    4. 'urer' → logprob: -2.3801321983337402
    5. '   ' → logprob: -3.3801321983337402
    6. 'iner' → logprob: -3.8801321983337402
    7. '=' → logprob: -4.25513219833374
    8. 'uer' → logprob: -5.75513219833374
    9. 'u' → logprob: -6.25513219833374
    10. 'e' → logprob: -6.88013219833374

Token 578: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7661917209625244
    2. 'Color' → logprob: -1.5161917209625244
    3. '0' → logprob: -1.7661917209625244
    4. 'C' → logprob: -2.0161917209625244
    5. 'the' → logprob: -5.266191482543945
    6. 'ans' → logprob: -6.016191482543945
    7. ' sum' → logprob: -6.891191482543945
    8. 'color' → logprob: -7.141191482543945
    9. ' Color' → logprob: -7.516191482543945
    10. 'max' → logprob: -7.891191482543945

Token 579: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.17601919174194336
    2. 's' → logprob: -2.5510191917419434
    3. 'Color' → logprob: -3.0510191917419434
    4. 'ans' → logprob: -4.551019191741943
    5. 'max' → logprob: -4.676019191741943
    6. '0' → logprob: -5.301019191741943
    7. 'total' → logprob: -5.676019191741943
    8. 'C' → logprob: -6.676019191741943
    9. ' sum' → logprob: -6.801019191741943
    10. 'som' → logprob: -6.801019191741943

Token 580: ' des' (ID: 731)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6637793183326721
    2. ' =' → logprob: -1.7887792587280273
    3. ' +=' → logprob: -1.9137792587280273
    4. '=' → logprob: -2.1637792587280273
    5. 'ans' → logprob: -3.9137792587280273
    6. '   ' → logprob: -4.538779258728027
    7. '(ans' → logprob: -4.913779258728027
    8. ' ans' → logprob: -5.163779258728027
    9. '+' → logprob: -5.538779258728027
    10. 'Color' → logprob: -5.788779258728027

Token 581: ' valeurs' (ID: 73668)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.006097535137087107
    2. 'C' → logprob: -5.631097316741943
    3. 'values' → logprob: -7.256097316741943
    4. 'color' → logprob: -7.506097316741943
    5. 'val' → logprob: -8.131097793579102
    6. 'c' → logprob: -8.256097793579102
    7. ' Color' → logprob: -8.506097793579102
    8. 'min' → logprob: -9.381097793579102
    9. 'x' → logprob: -9.631097793579102
    10. 'v' → logprob: -9.756097793579102

Token 582: ' affect' (ID: 7902)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.659321129322052
    2. '=' → logprob: -1.5343210697174072
    3. 'ans' → logprob: -1.7843210697174072
    4. ' ans' → logprob: -3.2843210697174072
    5. '+=' → logprob: -3.6593210697174072
    6. ' +=' → logprob: -3.7843210697174072
    7. '(ans' → logprob: -5.534321308135986
    8. 'Color' → logprob: -6.159321308135986
    9. '   ' → logprob: -6.284321308135986
    10. '
' → logprob: -6.909321308135986

Token 583: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.022368526086211205
    2. 'ée' → logprob: -4.397368431091309
    3. 'és' → logprob: -5.147368431091309
    4. '   ' → logprob: -6.397368431091309
    5. 'Color' → logprob: -6.772368431091309
    6. 'é' → logprob: -7.272368431091309
    7. '[' → logprob: -9.522368431091309
    8. 'assigned' → logprob: -9.772368431091309
    9. 'nées' → logprob: -10.147368431091309
    10. '=' → logprob: -10.147368431091309

Token 584: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8976392149925232
    2. ' ans' → logprob: -1.397639274597168
    3. 'ans' → logprob: -1.522639274597168
    4. '
' → logprob: -3.272639274597168
    5. '(ans' → logprob: -3.647639274597168
    6. '=' → logprob: -3.772639274597168
    7. ' =' → logprob: -3.897639274597168
    8. '    
' → logprob: -4.897639274597168
    9. ',' → logprob: -5.147639274597168
    10. '	ans' → logprob: -6.272639274597168

Token 585: 'ée' (ID: 2894)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7272958159446716
    2. 'é' → logprob: -1.1022958755493164
    3. '=' → logprob: -2.3522958755493164
    4. 'Color' → logprob: -3.1022958755493164
    5. '0' → logprob: -4.102295875549316
    6. ' ' → logprob: -4.477295875549316
    7. ' Color' → logprob: -4.852295875549316
    8. '   ' → logprob: -6.352295875549316
    9. ' =' → logprob: -6.477295875549316
    10. '(' → logprob: -7.102295875549316

Token 586: ' la' (ID: 557)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.2839285731315613
    2. ' Color' → logprob: -1.783928632736206
    3. 'la' → logprob: -3.158928632736206
    4. ' la' → logprob: -3.533928632736206
    5. 'le' → logprob: -5.658928394317627
    6. '0' → logprob: -6.658928394317627
    7. 'l' → logprob: -6.783928394317627
    8. ' le' → logprob: -7.908928394317627
    9. 'C' → logprob: -8.033928871154785
    10. 'the' → logprob: -8.283928871154785

Token 587: ' rac' (ID: 12334)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.2710586190223694
    2. 'plus' → logprob: -1.5210585594177246
    3. 'val' → logprob: -5.021058559417725
    4. 'Color' → logprob: -5.146058559417725
    5. '0' → logprob: -6.271058559417725
    6. ' plus' → logprob: -6.771058559417725
    7. 'rac' → logprob: -7.521058559417725
    8. '[' → logprob: -7.771058559417725
    9. ' première' → logprob: -7.771058559417725
    10. 'max' → logprob: -7.896058559417725

Token 588: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.010436915792524815
    2. '[' → logprob: -5.63543701171875
    3. '   ' → logprob: -5.88543701171875
    4. 'e' → logprob: -7.01043701171875
    5. 'ote' → logprob: -7.51043701171875
    6. 'une' → logprob: -7.63543701171875
    7. '#' → logprob: -8.38543701171875
    8. 'ute' → logprob: -8.63543701171875
    9. '       ' → logprob: -8.88543701171875
    10. ' ' → logprob: -8.88543701171875

Token 589: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4034707546234131
    2. '
' → logprob: -1.153470754623413
    3. '   ' → logprob: -4.403470993041992
    4. ' ans' → logprob: -6.528470993041992
    5. '    
' → logprob: -7.278470993041992
    6. '\n' → logprob: -7.778470993041992
    7. ' =' → logprob: -7.903470993041992
    8. '	ans' → logprob: -7.903470993041992
    9. '(ans' → logprob: -8.153470993041992
    10. '=' → logprob: -8.778470993041992

Token 590: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.25534966588020325
    2. '
' → logprob: -2.380349636077881
    3. '   ' → logprob: -2.880349636077881
    4. ' ans' → logprob: -3.380349636077881
    5. ' =' → logprob: -4.255349636077881
    6. '	ans' → logprob: -4.880349636077881
    7. '=' → logprob: -5.130349636077881
    8. '(ans' → logprob: -5.380349636077881
    9. '\n' → logprob: -6.005349636077881
    10. '    
' → logprob: -6.755349636077881

Token 591: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -4.644463479053229e-05
    2. ' ans' → logprob: -10.125046730041504
    3. '   ' → logprob: -12.500046730041504
    4. '
' → logprob: -14.250046730041504
    5. '0' → logprob: -14.500046730041504
    6. '	ans' → logprob: -14.875046730041504
    7. 'for' → logprob: -15.125046730041504
    8. '(ans' → logprob: -15.250046730041504
    9. '```' → logprob: -16.250045776367188
    10. 'q' → logprob: -16.625045776367188

Token 592: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687509298324585
    2. '=' → logprob: -1.1368751525878906
    3. ' +=' → logprob: -13.51187515258789
    4. ',' → logprob: -13.63687515258789
    5. ' ' → logprob: -14.38687515258789
    6. '+=' → logprob: -15.13687515258789
    7. ')' → logprob: -15.38687515258789
    8. ' =
' → logprob: -15.63687515258789
    9. '=int' → logprob: -16.38687515258789
    10. '  ' → logprob: -17.26187515258789

Token 593: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020522393751889467
    2. ' ' → logprob: -6.502052307128906
    3. 'C' → logprob: -7.627052307128906
    4. ' C' → logprob: -10.377052307128906
    5. 'sum' → logprob: -10.627052307128906
    6. 'Color' → logprob: -12.252052307128906
    7. ' sum' → logprob: -13.252052307128906
    8. ' Color' → logprob: -14.877052307128906
    9. ' ' → logprob: -16.752052307128906
    10. '   ' → logprob: -17.314552307128906

Token 594: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005510857328772545
    2. 'C' → logprob: -5.8805108070373535
    3. 'sum' → logprob: -6.0055108070373535
    4. 'Color' → logprob: -8.380511283874512
    5. 'color' → logprob: -13.130511283874512
    6. ' ' → logprob: -13.380511283874512
    7. 'Sum' → logprob: -14.380511283874512
    8. 'max' → logprob: -14.630511283874512
    9. ' sum' → logprob: -14.755511283874512
    10. 'COLOR' → logprob: -15.193011283874512

Token 595: '
    
' (ID: 15698)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.28108230233192444
    2. 'i' → logprob: -1.906082272529602
    3. '   ' → logprob: -3.0310823917388916
    4. 'index' → logprob: -3.9060823917388916
    5. ' i' → logprob: -4.7810821533203125
    6. '    
' → logprob: -5.1560821533203125
    7. ' idx' → logprob: -5.4060821533203125
    8. 'for' → logprob: -6.1560821533203125
    9. '
' → logprob: -6.4060821533203125
    10. 'pos' → logprob: -6.6560821533203125

Token 596: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4277860224246979
    2. 'i' → logprob: -1.3027859926223755
    3. '   ' → logprob: -3.177786111831665
    4. 'index' → logprob: -3.427786111831665
    5. 'pos' → logprob: -7.302785873413086
    6. 'color' → logprob: -7.802785873413086
    7. 'for' → logprob: -8.302785873413086
    8. '    
' → logprob: -8.302785873413086
    9. '#' → logprob: -9.302785873413086
    10. 'ptr' → logprob: -9.427785873413086

Token 597: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2388993501663208
    2. 'i' → logprob: -1.7388993501663208
    3. 'index' → logprob: -3.3638992309570312
    4. 'pos' → logprob: -6.613899230957031
    5. 'for' → logprob: -8.488899230957031
    6. 'while' → logprob: -9.238899230957031
    7. 'current' → logprob: -9.363899230957031
    8. 'color' → logprob: -9.488899230957031
    9. 'ptr' → logprob: -9.613899230957031
    10. 'visited' → logprob: -9.738899230957031

Token 598: ' De' (ID: 1516)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06721615791320801
    2. 'index' → logprob: -3.067216157913208
    3. 'i' → logprob: -4.067215919494629
    4. 'pos' → logprob: -7.442215919494629
    5. 'color' → logprob: -7.817215919494629
    6. 'cnt' → logprob: -9.442215919494629
    7. 'current' → logprob: -10.192215919494629
    8. ' idx' → logprob: -10.317215919494629
    9. 'ptr' → logprob: -10.442215919494629
    10. 'c' → logprob: -10.567215919494629

Token 599: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.23308396339416504
    2. 'while' → logprob: -1.608083963394165
    3. 'que' → logprob: -5.233083724975586
    4. 'q' → logprob: -7.358083724975586
    5. 'pth' → logprob: -7.608083724975586
    6. ' while' → logprob: -8.358083724975586
    7. 'ep' → logprob: -8.483083724975586
    8. '   ' → logprob: -8.983083724975586
    9. 'but' → logprob: -9.108083724975586
    10. 'queue' → logprob: -9.358083724975586

Token 600: '1' (ID: 16)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5003337264060974
    2. 'que' → logprob: -1.8753337860107422
    3. 'q' → logprob: -2.375333786010742
    4. 'range' → logprob: -2.750333786010742
    5. 'queue' → logprob: -3.500333786010742
    6. 'while' → logprob: -3.625333786010742
    7. 'len' → logprob: -5.250333786010742
    8. ' range' → logprob: -5.875333786010742
    9. '1' → logprob: -6.000333786010742
    10. 'i' → logprob: -6.000333786010742

Token 601: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7507951259613037
    2. ',' → logprob: -0.8757951259613037
    3. 'for' → logprob: -3.5007951259613037
    4. ' ' → logprob: -4.625795364379883
    5. '```' → logprob: -4.750795364379883
    6. 'import' → logprob: -4.875795364379883
    7. '  ' → logprob: -5.000795364379883
    8. '   ' → logprob: -5.375795364379883
    9. ',len' → logprob: -5.375795364379883
    10. ' for' → logprob: -5.375795364379883

Token 602: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.975612187583465e-05
    2. ' N' → logprob: -11.125029563903809
    3. 'len' → logprob: -11.500029563903809
    4. '1' → logprob: -12.375029563903809
    5. 'n' → logprob: -15.125029563903809
    6. '
' → logprob: -16.375030517578125
    7. '   ' → logprob: -16.500030517578125
    8. ')' → logprob: -17.125030517578125
    9. ' ' → logprob: -17.250030517578125
    10. '```' → logprob: -17.250030517578125

Token 603: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16874293982982635
    2. '[' → logprob: -3.1687428951263428
    3. ',' → logprob: -3.4187428951263428
    4. '(' → logprob: -3.6687428951263428
    5. 'for' → logprob: -3.6687428951263428
    6. ')' → logprob: -5.043743133544922
    7. ' :' → logprob: -5.418743133544922
    8. 'range' → logprob: -6.043743133544922
    9. ' for' → logprob: -6.168743133544922
    10. ' in' → logprob: -6.418743133544922

Token 604: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. '-' → logprob: -11.250032424926758
    3. ' ' → logprob: -12.000032424926758
    4. 'N' → logprob: -12.125032424926758
    5. ':' → logprob: -12.375032424926758
    6. ')' → logprob: -14.000032424926758
    7. '   ' → logprob: -14.125032424926758
    8. '```' → logprob: -14.125032424926758
    9. 'for' → logprob: -14.625032424926758
    10. 'range' → logprob: -15.625032424926758

Token 605: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7196331024169922
    2. 'for' → logprob: -1.2196331024169922
    3. ' for' → logprob: -1.5946331024169922
    4. ':
' → logprob: -4.844633102416992
    5. ',' → logprob: -5.594633102416992
    6. '   ' → logprob: -6.969633102416992
    7. '):' → logprob: -7.344633102416992
    8. ' :' → logprob: -7.969633102416992
    9. 'in' → logprob: -8.469633102416992
    10. ')' → logprob: -8.469633102416992

Token 606: 'p' (ID: 79)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2776782512664795
    2. ':' → logprob: -1.6526782512664795
    3. '):
' → logprob: -4.152678489685059
    4. ',' → logprob: -4.777678489685059
    5. ' ):' → logprob: -4.902678489685059
    6. 'for' → logprob: -5.402678489685059
    7. ')' → logprob: -5.777678489685059
    8. ' :' → logprob: -5.777678489685059
    9. '1' → logprob: -6.027678489685059
    10. '
' → logprob: -6.152678489685059

Token 607: 'uis' (ID: 4560)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7606946229934692
    2. '):' → logprob: -0.7606946229934692
    3. ')' → logprob: -4.26069450378418
    4. 'range' → logprob: -4.51069450378418
    5. 'r' → logprob: -4.76069450378418
    6. 'for' → logprob: -5.01069450378418
    7. '#' → logprob: -5.13569450378418
    8. ':
' → logprob: -5.26069450378418
    9. '):
' → logprob: -5.38569450378418
    10. 'ar' → logprob: -6.01069450378418

Token 608: 'qu' (ID: 351)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1931561976671219
    2. ')' → logprob: -2.3181562423706055
    3. 'N' → logprob: -3.4431562423706055
    4. ':' → logprob: -3.9431562423706055
    5. '1' → logprob: -4.1931562423706055
    6. '):
' → logprob: -5.8181562423706055
    7. 'range' → logprob: -6.5681562423706055
    8. ' N' → logprob: -7.0681562423706055
    9. ',' → logprob: -7.3181562423706055
    10. '   ' → logprob: -7.4431562423706055

Token 609: ''on' (ID: 25812)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4401894509792328
    2. ')' → logprob: -2.1901893615722656
    3. 'N' → logprob: -2.6901893615722656
    4. ' ' → logprob: -2.8151893615722656
    5. ' in' → logprob: -3.1901893615722656
    6. ' N' → logprob: -3.4401893615722656
    7. '):' → logprob: -4.565189361572266
    8. ' i' → logprob: -5.190189361572266
    9. 'i' → logprob: -5.440189361572266
    10. ' )' → logprob: -5.815189361572266

Token 610: ' a' (ID: 261)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6310020089149475
    2. 'range' → logprob: -1.2560019493103027
    3. ')' → logprob: -2.6310019493103027
    4. ' in' → logprob: -4.131001949310303
    5. ' <' → logprob: -4.256001949310303
    6. ' a' → logprob: -4.381001949310303
    7. 'for' → logprob: -4.881001949310303
    8. ' for' → logprob: -4.881001949310303
    9. '<' → logprob: -5.131001949310303
    10. ' is' → logprob: -5.131001949310303

Token 611: ' déjà' (ID: 21229)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2376495599746704
    2. ' in' → logprob: -2.237649440765381
    3. ')' → logprob: -3.487649440765381
    4. 'range' → logprob: -3.487649440765381
    5. 'in' → logprob: -3.737649440765381
    6. ' range' → logprob: -4.862649440765381
    7. 'for' → logprob: -6.112649440765381
    8. '   ' → logprob: -6.237649440765381
    9. ' not' → logprob: -7.112649440765381
    10. ' ' → logprob: -7.112649440765381

Token 612: ' assign' (ID: 14975)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -1.2020679712295532
    2. ' utilisé' → logprob: -2.2020678520202637
    3. 'assign' → logprob: -2.2020678520202637
    4. 'assigned' → logprob: -2.2020678520202637
    5. 'used' → logprob: -2.5770678520202637
    6. ' attrib' → logprob: -2.7020678520202637
    7. ' affect' → logprob: -2.9520678520202637
    8. 'range' → logprob: -3.2020678520202637
    9. 'dé' → logprob: -3.8270678520202637
    10. ' used' → logprob: -3.9520678520202637

Token 613: 'é' (ID: 377)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6086446642875671
    2. 'é' → logprob: -1.483644723892212
    3. 'i' → logprob: -1.858644723892212
    4. '1' → logprob: -3.858644723892212
    5. 'ed' → logprob: -4.483644485473633
    6. '(' → logprob: -4.733644485473633
    7. ')' → logprob: -4.858644485473633
    8. '   ' → logprob: -4.983644485473633
    9. 'ion' → logprob: -6.108644485473633
    10. ']' → logprob: -6.483644485473633

Token 614: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5673097372055054
    2. '(' → logprob: -1.5673097372055054
    3. 'i' → logprob: -1.8173097372055054
    4. ' i' → logprob: -3.567309856414795
    5. '
' → logprob: -4.567309856414795
    6. ')' → logprob: -4.567309856414795
    7. ' ' → logprob: -5.192309856414795
    8. '(i' → logprob: -6.817309856414795
    9. '   ' → logprob: -7.067309856414795
    10. ' the' → logprob: -7.567309856414795

Token 615: ' rac' (ID: 12334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013250032206997275
    2. ' ' → logprob: -8.626324653625488
    3. ')' → logprob: -9.251324653625488
    4. 'i' → logprob: -9.501324653625488
    5. 'first' → logprob: -9.501324653625488
    6. 'range' → logprob: -9.501324653625488
    7. 'for' → logprob: -9.626324653625488
    8. 'value' → logprob: -9.626324653625488
    9. '0' → logprob: -9.626324653625488
    10. 'N' → logprob: -9.751324653625488

Token 616: 'ine' (ID: 514)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1256788969039917
    2. '[' → logprob: -1.6256788969039917
    3. 'ine' → logprob: -2.5006790161132812
    4. 'ot' → logprob: -2.5006790161132812
    5. 'e' → logprob: -3.2506790161132812
    6. '#' → logprob: -3.2506790161132812
    7. '1' → logprob: -3.3756790161132812
    8. 'Color' → logprob: -3.8756790161132812
    9. 'nge' → logprob: -3.8756790161132812
    10. '  ' → logprob: -4.375679016113281

Token 617: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.776188313961029
    2. '):' → logprob: -1.4011883735656738
    3. '),' → logprob: -1.6511883735656738
    4. ',' → logprob: -3.151188373565674
    5. '):
' → logprob: -3.901188373565674
    6. 'for' → logprob: -4.276188373565674
    7. '
' → logprob: -5.526188373565674
    8. 'i' → logprob: -5.526188373565674
    9. ' for' → logprob: -5.776188373565674
    10. ')
' → logprob: -6.276188373565674

Token 618: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04547993838787079
    2. ' for' → logprob: -3.4204800128936768
    3. 'idx' → logprob: -4.795479774475098
    4. 'index' → logprob: -6.295479774475098
    5. '   ' → logprob: -6.920479774475098
    6. ' idx' → logprob: -8.295479774475098
    7. 'i' → logprob: -8.420479774475098
    8. 'j' → logprob: -9.170479774475098
    9. ' i' → logprob: -10.545479774475098
    10. ' index' → logprob: -10.545479774475098

Token 619: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22097639739513397
    2. ' for' → logprob: -1.9709763526916504
    3. '=' → logprob: -3.0959763526916504
    4. ' =' → logprob: -5.59597635269165
    5. 's' → logprob: -6.34597635269165
    6. ' will' → logprob: -7.34597635269165
    7. 'x' → logprob: -7.47097635269165
    8. '   ' → logprob: -7.47097635269165
    9. 'nd' → logprob: -7.59597635269165
    10. 'n' → logprob: -7.59597635269165

Token 620: ' parcour' (ID: 130642)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9015429615974426
    2. 'assign' → logprob: -1.0265429019927979
    3. 'for' → logprob: -1.7765429019927979
    4. ' assign' → logprob: -3.651542901992798
    5. ' for' → logprob: -3.776542901992798
    6. 'range' → logprob: -5.401543140411377
    7. ' use' → logprob: -5.651543140411377
    8. 'use' → logprob: -6.151543140411377
    9. 'j' → logprob: -7.151543140411377
    10. ' range' → logprob: -7.401543140411377

Token 621: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.9781461358070374
    2. 'er' → logprob: -1.2281460762023926
    3. 'range' → logprob: -1.4781460762023926
    4. 're' → logprob: -2.4781460762023926
    5. 'r' → logprob: -4.478146076202393
    6. 'iner' → logprob: -5.853146076202393
    7. 'ager' → logprob: -7.103146076202393
    8. 'i' → logprob: -7.353146076202393
    9. 'ire' → logprob: -7.478146076202393
    10. 'ure' → logprob: -7.853146076202393

Token 622: ' tous' (ID: 10688)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4503072202205658
    2. 'range' → logprob: -2.0753071308135986
    3. 'i' → logprob: -2.2003071308135986
    4. ' range' → logprob: -2.4503071308135986
    5. ' the' → logprob: -4.200307369232178
    6. 'the' → logprob: -5.325307369232178
    7. ' ' → logprob: -5.450307369232178
    8. ')' → logprob: -5.450307369232178
    9. '   ' → logprob: -6.075307369232178
    10. ' for' → logprob: -6.700307369232178

Token 623: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.308919221162796
    2. 'i' → logprob: -2.6839191913604736
    3. 'range' → logprob: -2.6839191913604736
    4. ' range' → logprob: -3.1839191913604736
    5. 'indices' → logprob: -4.183919429779053
    6. ' the' → logprob: -4.308919429779053
    7. ' indices' → logprob: -4.433919429779053
    8. ',' → logprob: -4.808919429779053
    9. 'the' → logprob: -5.183919429779053
    10. ' for' → logprob: -5.308919429779053

Token 624: ' somm' (ID: 44830)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06818126887083054
    2. 'indices' → logprob: -3.193181276321411
    3. 'nodes' → logprob: -4.693181037902832
    4. 'vertices' → logprob: -5.818181037902832
    5. 'for' → logprob: -6.443181037902832
    6. 'Color' → logprob: -6.443181037902832
    7. 'index' → logprob: -6.568181037902832
    8. 'range' → logprob: -6.818181037902832
    9. 'indexes' → logprob: -6.818181037902832
    10. 'N' → logprob: -6.943181037902832

Token 625: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.23720254004001617
    2. 'es' → logprob: -2.4872026443481445
    3. 'ents' → logprob: -4.4872026443481445
    4. 'ières' → logprob: -4.6122026443481445
    5. '   ' → logprob: -4.7372026443481445
    6. 'oints' → logprob: -4.8622026443481445
    7. 'ètres' → logprob: -4.8622026443481445
    8. 'êtres' → logprob: -4.8622026443481445
    9. 'és' → logprob: -4.9872026443481445
    10. 'êts' → logprob: -5.2372026443481445

Token 626: ' rest' (ID: 2867)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5902520418167114
    2. 'for' → logprob: -1.5902520418167114
    3. '   ' → logprob: -1.7152520418167114
    4. ' i' → logprob: -2.965251922607422
    5. ',' → logprob: -5.340251922607422
    6. '	for' → logprob: -5.715251922607422
    7. '    ' → logprob: -7.590251922607422
    8. 'i' → logprob: -7.715251922607422
    9. '    
' → logprob: -8.715251922607422
    10. ' in' → logprob: -8.840251922607422

Token 627: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.846118152141571
    2. 'ants' → logprob: -1.4711182117462158
    3. 'range' → logprob: -1.7211182117462158
    4. 'au' → logprob: -2.846118211746216
    5. '   ' → logprob: -2.971118211746216
    6. 'ages' → logprob: -3.971118211746216
    7. 'u' → logprob: -4.721117973327637
    8. 'a' → logprob: -5.346117973327637
    9. 'age' → logprob: -5.846117973327637
    10. 'aux' → logprob: -6.346117973327637

Token 628: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17084342241287231
    2. ' for' → logprob: -2.0458433628082275
    3. '   ' → logprob: -3.9208433628082275
    4. ' i' → logprob: -5.545843601226807
    5. 'i' → logprob: -6.170843601226807
    6. '
' → logprob: -7.170843601226807
    7. ',' → logprob: -7.920843601226807
    8. '    
' → logprob: -7.920843601226807
    9. 'idx' → logprob: -8.920843124389648
    10. '	for' → logprob: -9.045843124389648

Token 629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11114545166492462
    2. 'for' → logprob: -3.486145496368408
    3. ' for' → logprob: -3.736145496368408
    4. ' i' → logprob: -3.736145496368408
    5. 'i' → logprob: -4.611145496368408
    6. '    
' → logprob: -5.236145496368408
    7. ',' → logprob: -5.486145496368408
    8. ' 
' → logprob: -6.486145496368408
    9. '  
' → logprob: -7.111145496368408
    10. ' ' → logprob: -7.361145496368408

Token 630: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.747299313545227
    2. 'i' → logprob: -1.122299313545227
    3. 'idx' → logprob: -2.6222991943359375
    4. '   ' → logprob: -3.2472991943359375
    5. 'index' → logprob: -3.3722991943359375
    6. ' for' → logprob: -3.3722991943359375
    7. ' i' → logprob: -4.4972991943359375
    8. 'color' → logprob: -5.4972991943359375
    9. ' idx' → logprob: -5.7472991943359375
    10. ' index' → logprob: -7.4972991943359375

Token 631: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06559408456087112
    2. ' i' → logprob: -2.94059419631958
    3. 'idx' → logprob: -5.44059419631958
    4. ' idx' → logprob: -6.31559419631958
    5. 'index' → logprob: -6.44059419631958
    6. '_i' → logprob: -6.44059419631958
    7. ' index' → logprob: -8.565593719482422
    8. '_index' → logprob: -8.815593719482422
    9. '_' → logprob: -8.940593719482422
    10. '(i' → logprob: -9.565593719482422

Token 632: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0435078889131546
    2. 'in' → logprob: -3.1685078144073486
    3. '1' → logprob: -8.66850757598877
    4. ',' → logprob: -8.79350757598877
    5. ' ' → logprob: -9.29350757598877
    6. '(' → logprob: -11.04350757598877
    7. ' i' → logprob: -11.29350757598877
    8. ' ,' → logprob: -11.54350757598877
    9. '   ' → logprob: -11.66850757598877
    10. '[' → logprob: -11.91850757598877

Token 633: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04862596467137337
    2. ' range' → logprob: -3.048625946044922
    3. '(range' → logprob: -10.423625946044922
    4. 'in' → logprob: -12.423625946044922
    5. '   ' → logprob: -12.923625946044922
    6. '1' → logprob: -14.298625946044922
    7. ' in' → logprob: -14.298625946044922
    8. '	range' → logprob: -14.923625946044922
    9. ' ' → logprob: -15.048625946044922
    10. '(' → logprob: -15.298625946044922

Token 634: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.641841820150148e-05
    2. '1' → logprob: -10.62502670288086
    3. ' (' → logprob: -13.37502670288086
    4. '(
' → logprob: -15.25002670288086
    5. ',' → logprob: -16.37502670288086
    6. '   ' → logprob: -16.37502670288086
    7. ')' → logprob: -18.62502670288086
    8. '(i' → logprob: -19.37502670288086
    9. '[' → logprob: -19.75002670288086
    10. ' ' → logprob: -20.50002670288086

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.125005722045898
    4. 'N' → logprob: -17.3750057220459
    5. '(' → logprob: -18.2500057220459
    6. 'len' → logprob: -18.3750057220459
    7. '１' → logprob: -18.9375057220459
    8. '```' → logprob: -19.0000057220459
    9. '۱' → logprob: -19.0000057220459
    10. '2' → logprob: -19.3125057220459

Token 636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038044729735702276
    2. ',N' → logprob: -6.003804683685303
    3. ' ,' → logprob: -6.628804683685303
    4. ',n' → logprob: -12.503804206848145
    5. ',len' → logprob: -14.003804206848145
    6. ',
' → logprob: -14.878804206848145
    7. '1' → logprob: -15.003804206848145
    8. 'N' → logprob: -15.253804206848145
    9. ' ' → logprob: -16.12880516052246
    10. '‌,' → logprob: -16.12880516052246

Token 637: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.2994620242971e-06
    2. ' N' → logprob: -11.875008583068848
    3. '   ' → logprob: -13.625008583068848
    4. 'len' → logprob: -17.50000762939453
    5. '	N' → logprob: -18.75000762939453
    6. ' ' → logprob: -20.62500762939453
    7. '       ' → logprob: -20.75000762939453
    8. '    ' → logprob: -21.12500762939453
    9. '  ' → logprob: -21.12500762939453
    10. 'n' → logprob: -21.75000762939453

Token 638: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021225102245807648
    2. '):
' → logprob: -3.8962252140045166
    3. ':' → logprob: -7.5212249755859375
    4. '   ' → logprob: -9.146224975585938
    5. ')' → logprob: -11.521224975585938
    6. ',' → logprob: -11.646224975585938
    7. ' ):' → logprob: -12.396224975585938
    8. '):
' → logprob: -12.896224975585938
    9. '**' → logprob: -13.146224975585938
    10. '+' → logprob: -13.896224975585938

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1367534101009369
    2. '   ' → logprob: -2.1367533206939697
    3. '    
' → logprob: -6.261753559112549
    4. 'Color' → logprob: -6.261753559112549
    5. ':' → logprob: -7.011753559112549
    6. '        
' → logprob: -7.136753559112549
    7. ',' → logprob: -7.386753559112549
    8. '```' → logprob: -7.636753559112549
    9. ')' → logprob: -7.886753559112549
    10. '):' → logprob: -8.13675308227539

Token 640: ' #' (ID: 1069)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7518561482429504
    2. 'ans' → logprob: -2.1268560886383057
    3. 'color' → logprob: -2.1268560886383057
    4. 'c' → logprob: -2.3768560886383057
    5. 'v' → logprob: -2.3768560886383057
    6. 'Color' → logprob: -3.5018560886383057
    7. 'cur' → logprob: -3.8768560886383057
    8. 'u' → logprob: -4.376856327056885
    9. 'current' → logprob: -4.626856327056885
    10. '   ' → logprob: -4.876856327056885

Token 641: ' Extra' (ID: 31621)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4119153320789337
    2. 'v' → logprob: -1.2869153022766113
    3. 'cur' → logprob: -4.161915302276611
    4. 'current' → logprob: -4.536915302276611
    5. 'ans' → logprob: -5.161915302276611
    6. 'e' → logprob: -5.161915302276611
    7. 'u' → logprob: -5.411915302276611
    8. 'child' → logprob: -5.411915302276611
    9. 'color' → logprob: -5.786915302276611
    10. 'c' → logprob: -6.286915302276611

Token 642: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.3621577322483063
    2. 'e' → logprob: -1.7371577024459839
    3. 'act' → logprob: -2.6121578216552734
    4. 'm' → logprob: -4.237157821655273
    5. 'v' → logprob: -5.112157821655273
    6. '   ' → logprob: -5.612157821655273
    7. 't' → logprob: -5.612157821655273
    8. 'xt' → logprob: -5.862157821655273
    9. ',' → logprob: -6.112157821655273
    10. 'nt' → logprob: -6.362157821655273

Token 643: ' le' (ID: 505)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5513309240341187
    2. 'node' → logprob: -1.0513309240341187
    3. 'v' → logprob: -2.676331043243408
    4. 'u' → logprob: -6.051331043243408
    5. ' node' → logprob: -7.176331043243408
    6. 'current' → logprob: -7.176331043243408
    7. ' e' → logprob: -7.676331043243408
    8. 'vertex' → logprob: -8.30133056640625
    9. 'cur' → logprob: -8.42633056640625
    10. '   ' → logprob: -8.67633056640625

Token 644: ' prochain' (ID: 52413)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.38461390137672424
    2. 'node' → logprob: -1.3846138715744019
    3. 'v' → logprob: -3.2596139907836914
    4. 'current' → logprob: -4.009613990783691
    5. 'u' → logprob: -5.509613990783691
    6. 'vertex' → logprob: -5.884613990783691
    7. 'cur' → logprob: -6.384613990783691
    8. 'curr' → logprob: -6.884613990783691
    9. 'som' → logprob: -6.884613990783691
    10. 'next' → logprob: -8.259613990783691

Token 645: ' élément' (ID: 99627)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.36942142248153687
    2. 'node' → logprob: -1.2444214820861816
    3. 'vertex' → logprob: -4.869421482086182
    4. '(e' → logprob: -5.494421482086182
    5. 'token' → logprob: -5.994421482086182
    6. 'v' → logprob: -6.119421482086182
    7. ' node' → logprob: -6.744421482086182
    8. ' e' → logprob: -7.619421482086182
    9. '(node' → logprob: -7.744421482086182
    10. 'element' → logprob: -7.994421482086182

Token 646: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2894591093063354
    2. 'node' → logprob: -1.9144591093063354
    3. '   ' → logprob: -2.039459228515625
    4. 'e' → logprob: -2.164459228515625
    5. ' =' → logprob: -2.664459228515625
    6. '=' → logprob: -2.664459228515625
    7. '(e' → logprob: -2.914459228515625
    8. 'from' → logprob: -3.539459228515625
    9. 'v' → logprob: -3.664459228515625
    10. 'token' → logprob: -4.664459228515625

Token 647: ' la' (ID: 557)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.007946459576487541
    2. 'C' → logprob: -6.007946491241455
    3. ' q' → logprob: -6.007946491241455
    4. 'Color' → logprob: -6.382946491241455
    5. 'the' → logprob: -7.132946491241455
    6. ' the' → logprob: -7.882946491241455
    7. '
' → logprob: -10.757946014404297
    8. ' C' → logprob: -10.757946014404297
    9. ' Color' → logprob: -10.757946014404297
    10. ' ' → logprob: -11.132946014404297

Token 648: ' file' (ID: 1974)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04868025332689285
    2. 'queue' → logprob: -3.173680305480957
    3. 'deque' → logprob: -5.923680305480957
    4. ' queue' → logprob: -6.673680305480957
    5. 'que' → logprob: -7.423680305480957
    6. 'for' → logprob: -7.923680305480957
    7. 'while' → logprob: -8.798680305480957
    8. 'b' → logprob: -8.923680305480957
    9. ' q' → logprob: -9.173680305480957
    10. '```' → logprob: -9.548680305480957

Token 649: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19643308222293854
    2. ')' → logprob: -2.9464330673217773
    3. '(' → logprob: -3.8214330673217773
    4. '()' → logprob: -3.8214330673217773
    5. ' =' → logprob: -3.9464330673217773
    6. '=' → logprob: -4.196433067321777
    7. '   ' → logprob: -4.446433067321777
    8. ' (' → logprob: -4.696433067321777
    9. 'e' → logprob: -5.071433067321777
    10. ':' → logprob: -5.696433067321777

Token 650: 'tuple' (ID: 52834)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.762748658657074
    2. 'node' → logprob: -1.2627487182617188
    3. 'v' → logprob: -1.8877487182617188
    4. 'q' → logprob: -2.8877487182617188
    5. 'vertex' → logprob: -4.012748718261719
    6. 'current' → logprob: -4.637748718261719
    7. ')' → logprob: -5.137748718261719
    8. 'u' → logprob: -5.762748718261719
    9. ' node' → logprob: -6.512748718261719
    10. 'cur' → logprob: -6.637748718261719

Token 651: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.200250267982483
    2. '=' → logprob: -1.700250267982483
    3. ' =' → logprob: -1.700250267982483
    4. '(e' → logprob: -1.700250267982483
    5. ' (' → logprob: -3.2002501487731934
    6. '       ' → logprob: -3.7002501487731934
    7. ',' → logprob: -4.450250148773193
    8. '   ' → logprob: -4.575250148773193
    9. '),' → logprob: -4.575250148773193
    10. '(' → logprob: -4.825250148773193

Token 652: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.678820788860321
    2. 'node' → logprob: -0.803820788860321
    3. '   ' → logprob: -4.428820610046387
    4. 'u' → logprob: -4.428820610046387
    5. 'e' → logprob: -4.803820610046387
    6. 'current' → logprob: -5.553820610046387
    7. ' node' → logprob: -5.928820610046387
    8. ' v' → logprob: -6.303820610046387
    9. 'cur' → logprob: -6.428820610046387
    10. 'curr' → logprob: -7.428820610046387

Token 653: 'now' (ID: 6201)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6794472336769104
    2. 'v' → logprob: -0.8044472336769104
    3. 'u' → logprob: -3.9294471740722656
    4. 'current' → logprob: -4.304447174072266
    5. 'cur' → logprob: -5.304447174072266
    6. 'now' → logprob: -6.054447174072266
    7. 'curr' → logprob: -6.804447174072266
    8. 'x' → logprob: -6.804447174072266
    9. ' node' → logprob: -7.179447174072266
    10. '   ' → logprob: -7.429447174072266

Token 654: 'N' (ID: 45)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020461321400944144
    2. ' ,' → logprob: -9.750205039978027
    3. '),' → logprob: -10.000205039978027
    4. ',)' → logprob: -10.125205039978027
    5. ')' → logprob: -10.625205039978027
    6. ',),' → logprob: -11.375205039978027
    7. ',e' → logprob: -11.625205039978027
    8. ',
' → logprob: -12.500205039978027
    9. ',n' → logprob: -13.250205039978027
    10. ',node' → logprob: -13.250205039978027

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001910073566250503
    2. ' ,' → logprob: -6.626910209655762
    3. '),' → logprob: -8.501910209655762
    4. ')' → logprob: -8.626910209655762
    5. ',)' → logprob: -9.626910209655762
    6. ',
' → logprob: -10.626910209655762
    7. '`,' → logprob: -11.001910209655762
    8. ',e' → logprob: -11.376910209655762
    9. ',n' → logprob: -11.501910209655762
    10. 'e' → logprob: -11.626910209655762

Token 656: ' pre' (ID: 876)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.956455409526825
    2. 'par' → logprob: -1.4564554691314697
    3. 'parent' → logprob: -1.8314554691314697
    4. ' now' → logprob: -2.4564554691314697
    5. ' parent' → logprob: -3.3314554691314697
    6. 'p' → logprob: -3.5814554691314697
    7. 'pa' → logprob: -3.7064554691314697
    8. ' par' → logprob: -4.456455230712891
    9. 'pre' → logprob: -4.831455230712891
    10. 'prev' → logprob: -4.831455230712891

Token 657: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28108006715774536
    2. 'v' → logprob: -1.7810800075531006
    3. 'N' → logprob: -3.1560800075531006
    4. 's' → logprob: -4.28108024597168
    5. 'V' → logprob: -4.78108024597168
    6. 'vious' → logprob: -6.15608024597168
    7. ')`' → logprob: -6.53108024597168
    8. '_node' → logprob: -6.78108024597168
    9. 'Node' → logprob: -6.78108024597168
    10. 'vi' → logprob: -7.28108024597168

Token 658: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004350797680672258
    2. ')=' → logprob: -8.250434875488281
    3. ')
' → logprob: -10.000434875488281
    4. ' )' → logprob: -10.125434875488281
    5. '   ' → logprob: -10.125434875488281
    6. ' =' → logprob: -10.750434875488281
    7. '=' → logprob: -11.250434875488281
    8. ')`' → logprob: -12.750434875488281
    9. '       ' → logprob: -12.875434875488281
    10. '),' → logprob: -13.000434875488281

Token 659: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4951203763484955
    2. '=' → logprob: -1.2451204061508179
    3. '       ' → logprob: -3.2451202869415283
    4. 'now' → logprob: -3.6201202869415283
    5. ' now' → logprob: -3.8701202869415283
    6. '   ' → logprob: -5.120120525360107
    7. ',' → logprob: -5.745120525360107
    8. ')' → logprob: -5.995120525360107
    9. '
' → logprob: -6.745120525360107
    10. '[now' → logprob: -7.370120525360107

Token 660: ' #' (ID: 1069)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.05390175059437752
    2. ' now' → logprob: -3.0539016723632812
    3. '       ' → logprob: -5.678901672363281
    4. '   ' → logprob: -6.928901672363281
    5. '(now' → logprob: -7.928901672363281
    6. '	now' → logprob: -7.928901672363281
    7. '[now' → logprob: -8.803901672363281
    8. '_now' → logprob: -11.803901672363281
    9. '.now' → logprob: -12.053901672363281
    10. ' ' → logprob: -12.428901672363281

Token 661: ' '' (ID: 461)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0444476492702961
    2. ' now' → logprob: -3.169447660446167
    3. '   ' → logprob: -7.544447422027588
    4. '(now' → logprob: -7.544447422027588
    5. '       ' → logprob: -8.419447898864746
    6. '	now' → logprob: -9.419447898864746
    7. '[now' → logprob: -9.544447898864746
    8. ' (' → logprob: -12.919447898864746
    9. ' ' → logprob: -13.294447898864746
    10. '_now' → logprob: -13.294447898864746

Token 662: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.004198067355901003
    2. ' now' → logprob: -5.62919807434082
    3. '(now' → logprob: -7.50419807434082
    4. '[now' → logprob: -11.25419807434082
    5. 'while' → logprob: -11.62919807434082
    6. 'nown' → logprob: -12.62919807434082
    7. ')' → logprob: -12.87919807434082
    8. '	now' → logprob: -12.87919807434082
    9. 'n' → logprob: -13.12919807434082
    10. '(' → logprob: -13.12919807434082

Token 663: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00030078491545282304
    2. ',' → logprob: -8.125300407409668
    3. ')' → logprob: -13.375300407409668
    4. '[' → logprob: -14.125300407409668
    5. ',N' → logprob: -14.250300407409668
    6. '```' → logprob: -14.750300407409668
    7. '.' → logprob: -15.000300407409668
    8. '_N' → logprob: -15.625300407409668
    9. ' N' → logprob: -15.625300407409668
    10. '`' → logprob: -15.875300407409668

Token 664: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006096287979744375
    2. '),' → logprob: -8.000609397888184
    3. ' ,' → logprob: -8.500609397888184
    4. ')' → logprob: -11.250609397888184
    5. ',
' → logprob: -11.375609397888184
    6. '=' → logprob: -12.125609397888184
    7. ',q' → logprob: -12.250609397888184
    8. ',),' → logprob: -12.375609397888184
    9. ',_' → logprob: -12.625609397888184
    10. ',)' → logprob: -12.875609397888184

Token 665: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.909333023941144e-05
    2. ',
' → logprob: -10.500068664550781
    3. '=' → logprob: -10.875068664550781
    4. ' ,' → logprob: -11.250068664550781
    5. ',q' → logprob: -12.875068664550781
    6. ')' → logprob: -14.250068664550781
    7. ' =' → logprob: -14.750068664550781
    8. ',is' → logprob: -14.750068664550781
    9. ',n' → logprob: -14.875068664550781
    10. ',)' → logprob: -14.875068664550781

Token 666: ' le' (ID: 505)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.11216950416564941
    2. ' q' → logprob: -2.4871695041656494
    3. 'now' → logprob: -4.73716926574707
    4. 'e' → logprob: -5.11216926574707
    5. ' now' → logprob: -6.48716926574707
    6. 'None' → logprob: -6.48716926574707
    7. ',' → logprob: -6.98716926574707
    8. 'next' → logprob: -7.23716926574707
    9. '   ' → logprob: -7.48716926574707
    10. ',q' → logprob: -7.98716926574707

Token 667: ' sommet' (ID: 130502)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7246373891830444
    2. 'next' → logprob: -1.3496373891830444
    3. 'e' → logprob: -2.349637508392334
    4. ' next' → logprob: -2.724637508392334
    5. 'current' → logprob: -3.349637508392334
    6. 'node' → logprob: -4.724637508392334
    7. 'queue' → logprob: -4.849637508392334
    8. ' current' → logprob: -4.974637508392334
    9. ' q' → logprob: -5.099637508392334
    10. 'i' → logprob: -5.349637508392334

Token 668: ' actuel' (ID: 113646)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004648696631193161
    2. ',q' → logprob: -8.50046443939209
    3. ',
' → logprob: -9.75046443939209
    4. ' ,' → logprob: -9.75046443939209
    5. ',current' → logprob: -10.37546443939209
    6. ')' → logprob: -11.00046443939209
    7. 'current' → logprob: -11.50046443939209
    8. ',e' → logprob: -11.87546443939209
    9. ',j' → logprob: -12.00046443939209
    10. ',user' → logprob: -12.25046443939209

Token 669: ' auquel' (ID: 136484)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017089712200686336
    2. '=' → logprob: -6.501708984375
    3. ')' → logprob: -9.876708984375
    4. '       ' → logprob: -10.376708984375
    5. ',
' → logprob: -10.376708984375
    6. ',q' → logprob: -10.376708984375
    7. ' ,' → logprob: -10.751708984375
    8. '),' → logprob: -11.251708984375
    9. ' =' → logprob: -11.501708984375
    10. ',)' → logprob: -12.876708984375

Token 670: ' on' (ID: 402)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -1.213043212890625
    2. 'q' → logprob: -1.463043212890625
    3. ',' → logprob: -1.713043212890625
    4. ' on' → logprob: -2.463043212890625
    5. 'Color' → logprob: -3.463043212890625
    6. ',q' → logprob: -3.588043212890625
    7. 'color' → logprob: -3.713043212890625
    8. 'on' → logprob: -3.963043212890625
    9. ' ,' → logprob: -4.088043212890625
    10. 'que' → logprob: -4.338043212890625

Token 671: ' va' (ID: 3423)
  Prédit: 'va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'va' → logprob: -0.535196840763092
    2. 'attrib' → logprob: -2.1601967811584473
    3. 'aff' → logprob: -2.4101967811584473
    4. ' va' → logprob: -2.9101967811584473
    5. 'ass' → logprob: -3.0351967811584473
    6. 'assign' → logprob: -3.6601967811584473
    7. '   ' → logprob: -4.410196781158447
    8. 'a' → logprob: -4.410196781158447
    9. 'don' → logprob: -4.535196781158447
    10. ' attrib' → logprob: -5.535196781158447

Token 672: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.15186834335327148
    2. 'aff' → logprob: -2.0268683433532715
    3. ' affect' → logprob: -5.5268683433532715
    4. 'attrib' → logprob: -5.5268683433532715
    5. 'assoc' → logprob: -8.40186882019043
    6. '   ' → logprob: -8.52686882019043
    7. ' assign' → logprob: -8.52686882019043
    8. 'ass' → logprob: -8.90186882019043
    9. 'color' → logprob: -9.40186882019043
    10. 'don' → logprob: -9.77686882019043

Token 673: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0013596400385722518
    2. '=' → logprob: -7.251359462738037
    3. ' =' → logprob: -8.501359939575195
    4. '   ' → logprob: -8.876359939575195
    5. '       ' → logprob: -9.126359939575195
    6. ' ' → logprob: -10.126359939575195
    7. 'e' → logprob: -10.876359939575195
    8. '[' → logprob: -11.001359939575195
    9. 'Color' → logprob: -11.001359939575195
    10. 'r' → logprob: -11.251359939575195

Token 674: ' une' (ID: 2463)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.7389883995056152
    2. ',' → logprob: -1.4889883995056152
    3. '_' → logprob: -2.6139883995056152
    4. ')' → logprob: -2.6139883995056152
    5. '_color' → logprob: -2.6139883995056152
    6. ' Color' → logprob: -3.8639883995056152
    7. ' ,' → logprob: -4.488988399505615
    8. '_Color' → logprob: -4.988988399505615
    9. '<|end|>' → logprob: -5.488988399505615
    10. 'color' → logprob: -5.613988399505615

Token 675: ' valeur' (ID: 41664)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -1.3176196813583374
    2. ' couleur' → logprob: -1.3176196813583374
    3. ' color' → logprob: -1.5676196813583374
    4. ' Color' → logprob: -1.8176196813583374
    5. 'color' → logprob: -2.692619800567627
    6. ' value' → logprob: -5.192619800567627
    7. '_color' → logprob: -5.567619800567627
    8. ')' → logprob: -5.567619800567627
    9. 'cou' → logprob: -5.817619800567627
    10. ' valeur' → logprob: -6.067619800567627

Token 676: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33232006430625916
    2. '=' → logprob: -1.8323200941085815
    3. ' =' → logprob: -2.332319974899292
    4. ')' → logprob: -4.207320213317871
    5. '       ' → logprob: -5.957320213317871
    6. '   ' → logprob: -5.957320213317871
    7. ',
' → logprob: -6.082320213317871
    8. ',q' → logprob: -7.332320213317871
    9. ' ,' → logprob: -7.457320213317871
    10. '),' → logprob: -7.707320213317871

Token 677: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.683696448802948
    2. ' =' → logprob: -2.0586965084075928
    3. 'now' → logprob: -2.1836965084075928
    4. ' now' → logprob: -2.9336965084075928
    5. '=' → logprob: -3.0586965084075928
    6. ' ,' → logprob: -3.0586965084075928
    7. '       ' → logprob: -3.5586965084075928
    8. ')' → logprob: -3.5586965084075928
    9. '   ' → logprob: -4.058696269989014
    10. '[now' → logprob: -4.808696269989014

Token 678: ' #' (ID: 1069)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.14258264005184174
    2. ' now' → logprob: -2.142582654953003
    3. '       ' → logprob: -4.267582416534424
    4. ',' → logprob: -7.642582416534424
    5. '(now' → logprob: -7.767582416534424
    6. '   ' → logprob: -8.017582893371582
    7. '	now' → logprob: -9.142582893371582
    8. '[now' → logprob: -9.642582893371582
    9. ' (' → logprob: -10.892582893371582
    10. ' ,' → logprob: -11.392582893371582

Token 679: ' '' (ID: 461)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.03452536463737488
    2. ' now' → logprob: -3.9095253944396973
    3. 'pre' → logprob: -4.534525394439697
    4. '(now' → logprob: -6.534525394439697
    5. '   ' → logprob: -7.159525394439697
    6. '       ' → logprob: -7.659525394439697
    7. ' pre' → logprob: -8.909524917602539
    8. '	now' → logprob: -9.409524917602539
    9. '[now' → logprob: -9.784524917602539
    10. '(pre' → logprob: -10.284524917602539

Token 680: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.0003377270477358252
    2. 'now' → logprob: -9.000337600708008
    3. 'Color' → logprob: -10.125337600708008
    4. ' pre' → logprob: -10.250337600708008
    5. 'prev' → logprob: -10.625337600708008
    6. '_' → logprob: -11.062837600708008
    7. 'Now' → logprob: -11.562837600708008
    8. '
' → logprob: -11.750337600708008
    9. 'color' → logprob: -11.812837600708008
    10. '```' → logprob: -12.062837600708008

Token 681: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00024358915106859058
    2. ',' → logprob: -8.375243186950684
    3. '```' → logprob: -11.875243186950684
    4. ')' → logprob: -13.125243186950684
    5. '=' → logprob: -14.250243186950684
    6. '[' → logprob: -14.375243186950684
    7. '`' → logprob: -14.875243186950684
    8. '_' → logprob: -15.000243186950684
    9. ',N' → logprob: -15.125243186950684
    10. ' ,' → logprob: -15.125243186950684

Token 682: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.48369377851486206
    2. ')'' → logprob: -1.3586938381195068
    3. ',' → logprob: -2.233693838119507
    4. ')' → logprob: -4.608693599700928
    5. ','' → logprob: -5.108693599700928
    6. '')' → logprob: -6.108693599700928
    7. '',' → logprob: -7.733693599700928
    8. ']'' → logprob: -8.983694076538086
    9. '   ' → logprob: -9.108694076538086
    10. ' '' → logprob: -9.608694076538086

Token 683: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1787264049053192
    2. '=' → logprob: -2.3037264347076416
    3. ' =' → logprob: -2.8037264347076416
    4. ')' → logprob: -6.0537261962890625
    5. ' is' → logprob: -7.6787261962890625
    6. ' ,' → logprob: -8.803726196289062
    7. ',
' → logprob: -10.428726196289062
    8. '   ' → logprob: -10.553726196289062
    9. '),' → logprob: -10.803726196289062
    10. ' ' → logprob: -10.928726196289062

Token 684: ' le' (ID: 505)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.3583279252052307
    2. 'q' → logprob: -1.858327865600586
    3. ' the' → logprob: -2.233327865600586
    4. 'the' → logprob: -3.858327865600586
    5. ' now' → logprob: -5.733327865600586
    6. 'None' → logprob: -5.858327865600586
    7. ')' → logprob: -6.233327865600586
    8. 'now' → logprob: -6.608327865600586
    9. 'previous' → logprob: -6.858327865600586
    10. ' previous' → logprob: -6.983327865600586

Token 685: ' sommet' (ID: 130502)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6805434226989746
    2. 'parent' → logprob: -1.5555434226989746
    3. ' parent' → logprob: -2.1805434226989746
    4. ' q' → logprob: -3.0555434226989746
    5. 'queue' → logprob: -3.8055434226989746
    6. 'node' → logprob: -3.9305434226989746
    7. ' node' → logprob: -3.9305434226989746
    8. 'current' → logprob: -4.430543422698975
    9. 'previous' → logprob: -4.430543422698975
    10. ' current' → logprob: -4.555543422698975

Token 686: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.9210391640663147
    2. ',parent' → logprob: -1.42103910446167
    3. ',' → logprob: -1.67103910446167
    4. '_parent' → logprob: -2.04603910446167
    5. '<|end|>' → logprob: -4.54603910446167
    6. ')' → logprob: -4.67103910446167
    7. ' ,' → logprob: -5.42103910446167
    8. ' parent' → logprob: -5.54603910446167
    9. 'pr' → logprob: -5.92103910446167
    10. 'preced' → logprob: -6.42103910446167

Token 687: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3568418323993683
    2. ' =' → logprob: -1.731841802597046
    3. '=' → logprob: -3.106841802597046
    4. ',' → logprob: -3.106841802597046
    5. '   ' → logprob: -4.606842041015625
    6. '),' → logprob: -4.981842041015625
    7. '       ' → logprob: -4.981842041015625
    8. ')=' → logprob: -5.106842041015625
    9. ')
' → logprob: -7.356842041015625
    10. ' )' → logprob: -7.731842041015625

Token 688: ''où' (ID: 186468)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.006324063055217266
    2. ' now' → logprob: -5.631324291229248
    3. '[now' → logprob: -6.881324291229248
    4. '(now' → logprob: -7.131324291229248
    5. 'nown' → logprob: -8.25632381439209
    6. '_now' → logprob: -8.38132381439209
    7. 'current' → logprob: -9.13132381439209
    8. ')' → logprob: -9.38132381439209
    9. '	now' → logprob: -9.88132381439209
    10. 'the' → logprob: -10.13132381439209

Token 689: ' on' (ID: 402)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.7331151366233826
    2. ' q' → logprob: -1.2331151962280273
    3. ' now' → logprob: -1.8581151962280273
    4. 'q' → logprob: -3.7331151962280273
    5. 'on' → logprob: -4.483115196228027
    6. ' on' → logprob: -4.733115196228027
    7. ' maintenant' → logprob: -4.858115196228027
    8. ' we' → logprob: -5.233115196228027
    9. '   ' → logprob: -5.858115196228027
    10. ',' → logprob: -6.483115196228027

Token 690: ' arrive' (ID: 18338)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.459754228591919
    2. 'vient' → logprob: -1.459754228591919
    3. 'p' → logprob: -1.709754228591919
    4. 'arr' → logprob: -2.334754228591919
    5. 'append' → logprob: -3.084754228591919
    6. 'est' → logprob: -3.709754228591919
    7. 'queued' → logprob: -3.959754228591919
    8. ' vient' → logprob: -3.959754228591919
    9. 'opleft' → logprob: -3.959754228591919
    10. ' a' → logprob: -4.45975399017334

Token 691: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06990163773298264
    2. '       ' → logprob: -3.694901704788208
    3. '=' → logprob: -3.944901704788208
    4. ')' → logprob: -4.194901466369629
    5. '   ' → logprob: -4.944901466369629
    6. ',' → logprob: -8.194901466369629
    7. ')
' → logprob: -8.444901466369629
    8. '	' → logprob: -8.694901466369629
    9. '    ' → logprob: -9.819901466369629
    10. ' now' → logprob: -10.194901466369629

Token 692: ' '' (ID: 461)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.02094017155468464
    2. ' now' → logprob: -3.895940065383911
    3. 'q' → logprob: -8.520939826965332
    4. ' maintenant' → logprob: -9.645939826965332
    5. ' q' → logprob: -10.020939826965332
    6. 'maint' → logprob: -11.520939826965332
    7. '   ' → logprob: -11.520939826965332
    8. '[now' → logprob: -11.520939826965332
    9. '(now' → logprob: -11.770939826965332
    10. ' que' → logprob: -11.770939826965332

Token 693: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.00018935515254270285
    2. ' now' → logprob: -8.625189781188965
    3. '[now' → logprob: -12.375189781188965
    4. '	now' → logprob: -13.375189781188965
    5. 'nown' → logprob: -13.750189781188965
    6. '_now' → logprob: -14.625189781188965
    7. '(now' → logprob: -14.875189781188965
    8. '   ' → logprob: -15.125189781188965
    9. ')' → logprob: -15.125189781188965
    10. '
' → logprob: -15.250189781188965

Token 694: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.054500666621607e-06
    2. ',' → logprob: -13.62500286102295
    3. ')' → logprob: -14.62500286102295
    4. '   ' → logprob: -15.25000286102295
    5. 'n' → logprob: -15.50000286102295
    6. '```' → logprob: -15.50000286102295
    7. ' N' → logprob: -15.75000286102295
    8. '[' → logprob: -16.000003814697266
    9. 'now' → logprob: -16.250003814697266
    10. '
' → logprob: -16.625003814697266

Token 695: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01717749983072281
    2. '       ' → logprob: -4.892177581787109
    3. '')' → logprob: -5.517177581787109
    4. ')
' → logprob: -5.642177581787109
    5. '   ' → logprob: -7.267177581787109
    6. ')
' → logprob: -8.01717758178711
    7. '):' → logprob: -8.39217758178711
    8. ')`' → logprob: -8.39217758178711
    9. ')'' → logprob: -9.39217758178711
    10. '')
' → logprob: -9.51717758178711

Token 696: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6604019999504089
    2. ' now' → logprob: -1.4104020595550537
    3. '	now' → logprob: -1.9104020595550537
    4. '       ' → logprob: -3.0354020595550537
    5. 'now' → logprob: -3.4104020595550537
    6. '    
' → logprob: -6.035401821136475
    7. ' while' → logprob: -6.410401821136475
    8. '[now' → logprob: -6.785401821136475
    9. ' for' → logprob: -7.160401821136475
    10. '
' → logprob: -7.285401821136475

Token 697: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.010736394673585892
    2. ' now' → logprob: -4.760736465454102
    3. '   ' → logprob: -6.385736465454102
    4. '(now' → logprob: -8.885736465454102
    5. 'while' → logprob: -9.260736465454102
    6. '       ' → logprob: -9.635736465454102
    7. '	now' → logprob: -9.760736465454102
    8. '[now' → logprob: -10.135736465454102
    9. '
' → logprob: -12.010736465454102
    10. '```' → logprob: -12.385736465454102

Token 698: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0036461607087403536
    2. ',' → logprob: -5.628646373748779
    3. ',N' → logprob: -10.128645896911621
    4. ',_' → logprob: -13.503645896911621
    5. '_N' → logprob: -13.753645896911621
    6. '=' → logprob: -14.378645896911621
    7. '_,' → logprob: -14.628645896911621
    8. '```' → logprob: -14.878645896911621
    9. '.' → logprob: -15.441145896911621
    10. ' N' → logprob: -15.753645896911621

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.988221684878226e-06
    2. ',q' → logprob: -12.750006675720215
    3. ' ,' → logprob: -13.750006675720215
    4. ',
' → logprob: -14.250006675720215
    5. ',parent' → logprob: -14.250006675720215
    6. ',n' → logprob: -14.375006675720215
    7. ',color' → logprob: -15.500006675720215
    8. '=' → logprob: -15.625006675720215
    9. ',p' → logprob: -16.25000762939453
    10. ',next' → logprob: -16.87500762939453

Token 700: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.008619539439678192
    2. ' pre' → logprob: -4.75861930847168
    3. 'prev' → logprob: -12.75861930847168
    4. 'q' → logprob: -14.00861930847168
    5. '	pre' → logprob: -14.63361930847168
    6. 'p' → logprob: -15.25861930847168
    7. 'pr' → logprob: -15.88361930847168
    8. ' q' → logprob: -16.00861930847168
    9. '(pre' → logprob: -16.38361930847168
    10. 'prem' → logprob: -16.63361930847168

Token 701: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -14.875000953674316
    3. ' N' → logprob: -16.5
    4. '   ' → logprob: -16.625
    5. '=' → logprob: -17.0
    6. '[' → logprob: -17.0
    7. '_' → logprob: -17.5
    8. '0' → logprob: -17.5
    9. '_N' → logprob: -17.625
    10. '```' → logprob: -18.0

Token 702: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21676304936408997
    2. ' =' → logprob: -1.7167630195617676
    3. ')' → logprob: -4.216763019561768
    4. ')=' → logprob: -7.841763019561768
    5. '   ' → logprob: -9.966763496398926
    6. '=q' → logprob: -10.841763496398926
    7. ' ' → logprob: -11.841763496398926
    8. '       ' → logprob: -12.091763496398926
    9. '	' → logprob: -12.966763496398926
    10. ' )' → logprob: -13.216763496398926

Token 703: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0003812217037193477
    2. ' q' → logprob: -7.875380992889404
    3. '   ' → logprob: -13.875381469726562
    4. 'None' → logprob: -16.750381469726562
    5. 'deque' → logprob: -16.750381469726562
    6. '	q' → logprob: -16.875381469726562
    7. ' ' → logprob: -17.125381469726562
    8. '    ' → logprob: -17.125381469726562
    9. '  ' → logprob: -17.750381469726562
    10. 'input' → logprob: -18.250381469726562

Token 704: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -9.968312951968983e-06
    2. '.' → logprob: -12.000009536743164
    3. '.pop' → logprob: -12.750009536743164
    4. ' .' → logprob: -15.500009536743164
    5. 'p' → logprob: -15.625009536743164
    6. '   ' → logprob: -15.750009536743164
    7. 'opleft' → logprob: -15.875009536743164
    8. '.append' → logprob: -16.875009536743164
    9. '```' → logprob: -16.875009536743164
    10. ').' → logprob: -17.375009536743164

Token 705: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.01105170976370573
    2. 'op' → logprob: -4.511051654815674
    3. 'ople' → logprob: -12.886052131652832
    4. 'append' → logprob: -15.136052131652832
    5. 'p' → logprob: -15.386052131652832
    6. 'opt' → logprob: -15.386052131652832
    7. 'opf' → logprob: -15.636052131652832
    8. 'opl' → logprob: -16.136051177978516
    9. '```' → logprob: -16.261051177978516
    10. 'opup' → logprob: -16.386051177978516

Token 706: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7601883411407471
    2. '<|end|>' → logprob: -0.8851883411407471
    3. '   ' → logprob: -3.260188341140747
    4. '
' → logprob: -3.635188341140747
    5. '       ' → logprob: -3.885188341140747
    6. '    
' → logprob: -4.010188102722168
    7. '<|end|>' → logprob: -4.885188102722168
    8. '        
' → logprob: -6.260188102722168
    9. ')
' → logprob: -6.760188102722168
    10. '    ' → logprob: -7.010188102722168

Token 707: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15199296176433563
    2. '    
' → logprob: -2.5269930362701416
    3. 'Color' → logprob: -3.6519930362701416
    4. '       ' → logprob: -4.6519927978515625
    5. '
' → logprob: -5.1519927978515625
    6. '  
' → logprob: -5.6519927978515625
    7. '        
' → logprob: -5.6519927978515625
    8. '   
' → logprob: -5.9019927978515625
    9. 'ans' → logprob: -6.2769927978515625
    10. 'for' → logprob: -6.9019927978515625

Token 708: '       ' (ID: 309)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.1411653757095337
    2. '       ' → logprob: -2.391165256500244
    3. '   ' → logprob: -3.516165256500244
    4. 'ans' → logprob: -4.766165256500244
    5. 'for' → logprob: -7.016165256500244
    6. ' Color' → logprob: -7.891165256500244
    7. '#' → logprob: -8.641165733337402
    8. '```' → logprob: -8.641165733337402
    9. 'color' → logprob: -9.016165733337402
    10. ' ans' → logprob: -10.391165733337402

Token 709: ' #' (ID: 1069)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.0065135713666677475
    2. 'ans' → logprob: -5.631513595581055
    3. 'for' → logprob: -6.881513595581055
    4. '#' (adapté à ' #') → logprob: -7.381513595581055
    5. '       ' → logprob: -7.631513595581055
    6. 'while' → logprob: -7.631513595581055
    7. '   ' → logprob: -8.881513595581055
    8. 'color' → logprob: -9.506513595581055
    9. 'if' → logprob: -11.631513595581055
    10. 'available' → logprob: -11.631513595581055

Token 710: ' Ajouter' (ID: 165754)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.005118596367537975
    2. 'ans' → logprob: -5.380118370056152
    3. 'while' → logprob: -8.380118370056152
    4. '#' → logprob: -9.130118370056152
    5. 'for' → logprob: -9.505118370056152
    6. 'color' → logprob: -10.255118370056152
    7. 'if' → logprob: -10.880118370056152
    8. ' Color' → logprob: -12.005118370056152
    9. 'val' → logprob: -12.505118370056152
    10. '   ' → logprob: -12.880118370056152

Token 711: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0006313055637292564
    2. 'ans' → logprob: -8.000631332397461
    3. ' C' → logprob: -8.875631332397461
    4. ' ans' → logprob: -10.000631332397461
    5. '(C' → logprob: -10.250631332397461
    6. '(ans' → logprob: -10.500631332397461
    7. 'Color' → logprob: -11.125631332397461
    8. '   ' → logprob: -11.250631332397461
    9. '       ' → logprob: -11.375631332397461
    10. '           ' → logprob: -13.000631332397461

Token 712: ' i' (ID: 575)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -8.220573363360018e-05
    2. 'Color' → logprob: -10.500082015991211
    3. ' C' → logprob: -10.625082015991211
    4. 'ans' → logprob: -11.375082015991211
    5. 'i' → logprob: -11.750082015991211
    6. ' ans' → logprob: -12.500082015991211
    7. '[i' → logprob: -13.500082015991211
    8. '`' → logprob: -14.375082015991211
    9. '           ' → logprob: -14.375082015991211
    10. '
' → logprob: -14.500082015991211

Token 713: '-i' (ID: 18499)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10437862575054169
    2. 'nd' → logprob: -3.3543787002563477
    3. 'th' → logprob: -4.229378700256348
    4. 'nt' → logprob: -4.979378700256348
    5. ')' → logprob: -5.354378700256348
    6. 'd' → logprob: -5.604378700256348
    7. ']-' → logprob: -5.729378700256348
    8. ']+=' → logprob: -5.979378700256348
    9. ' ]' → logprob: -6.104378700256348
    10. '-' → logprob: -6.354378700256348

Token 714: 'ème' (ID: 9767)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.3507964313030243
    2. ']' → logprob: -1.7257964611053467
    3. 'token' → logprob: -3.1007964611053467
    4. 'tem' → logprob: -3.7257964611053467
    5. '-token' → logprob: -4.225796222686768
    6. 'ndice' → logprob: -4.600796222686768
    7. 'nde' → logprob: -5.100796222686768
    8. 'nt' → logprob: -5.350796222686768
    9. 'dx' → logprob: -5.850796222686768
    10. '```' → logprob: -6.600796222686768

Token 715: ' valeur' (ID: 41664)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41904759407043457
    2. 'C' → logprob: -1.9190475940704346
    3. 'value' → logprob: -3.0440475940704346
    4. 'Color' → logprob: -3.7940475940704346
    5. ')' → logprob: -4.1690473556518555
    6. ' value' → logprob: -4.2940473556518555
    7. 'élé' → logprob: -4.2940473556518555
    8. ' valeur' → logprob: -5.0440473556518555
    9. ' ]' → logprob: -5.1690473556518555
    10. ' C' → logprob: -5.2940473556518555

Token 716: ' de' (ID: 334)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0024421238340437412
    2. '(Color' → logprob: -6.752442359924316
    3. '(' → logprob: -7.502442359924316
    4. 'C' → logprob: -8.377442359924316
    5. '(
' → logprob: -8.752442359924316
    6. ' (' → logprob: -9.002442359924316
    7. 'Color' → logprob: -9.502442359924316
    8. ')' → logprob: -10.752442359924316
    9. '<|end|>' → logprob: -10.877442359924316
    10. 's' → logprob: -11.127442359924316

Token 717: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.000252160825766623
    2. ' C' → logprob: -8.375251770019531
    3. 'Color' → logprob: -10.875251770019531
    4. '`' → logprob: -13.625251770019531
    5. ' Color' → logprob: -15.000251770019531
    6. '```' → logprob: -15.250251770019531
    7. ''C' → logprob: -16.00025177001953
    8. 'color' → logprob: -16.25025177001953
    9. '>C' → logprob: -16.25025177001953
    10. '(C' → logprob: -16.37525177001953

Token 718: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15336135029792786
    2. '[' → logprob: -2.2783613204956055
    3. '[C' → logprob: -3.9033613204956055
    4. ' to' → logprob: -5.2783613204956055
    5. 'C' → logprob: -5.4033613204956055
    6. 'to' → logprob: -5.7783613204956055
    7. '[now' → logprob: -6.0283613204956055
    8. '<|end|>' → logprob: -7.1533613204956055
    9. '(C' → logprob: -7.2783613204956055
    10. ')' → logprob: -7.5283613204956055

Token 719: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.153795766294934e-06
    2. ' ans' → logprob: -12.875005722045898
    3. 'Color' → logprob: -12.875005722045898
    4. '(ans' → logprob: -14.625005722045898
    5. '	ans' → logprob: -15.125005722045898
    6. 'now' → logprob: -15.500005722045898
    7. '`' → logprob: -17.2500057220459
    8. 'ann' → logprob: -18.5000057220459
    9. '
' → logprob: -18.5000057220459
    10. 'a' → logprob: -18.8750057220459

Token 720: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.333223139634356e-05
    2. ' ans' → logprob: -11.000033378601074
    3. 'Color' → logprob: -11.125033378601074
    4. '(ans' → logprob: -14.125033378601074
    5. '	ans' → logprob: -14.750033378601074
    6. 'a' → logprob: -16.250032424926758
    7. ' Color' → logprob: -16.500032424926758
    8. '`' → logprob: -16.500032424926758
    9. '   ' → logprob: -16.750032424926758
    10. 'now' → logprob: -17.000032424926758

Token 721: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.622511088848114
    2. ' +' → logprob: -1.1225111484527588
    3. '+' → logprob: -2.247511148452759
    4. '+=' → logprob: -3.497511148452759
    5. ')' → logprob: -6.62251091003418
    6. ' +
' → logprob: -8.62251091003418
    7. '       ' → logprob: -8.99751091003418
    8. '<|end|>' → logprob: -9.74751091003418
    9. ' ' → logprob: -10.12251091003418
    10. '        ' → logprob: -10.24751091003418

Token 722: ' (' (ID: 350)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.410501629114151
    2. ' +=' → logprob: -1.1605015993118286
    3. '+' → logprob: -3.910501718521118
    4. ' +' → logprob: -6.035501480102539
    5. ' ans' → logprob: -7.285501480102539
    6. '
' → logprob: -9.660501480102539
    7. 'ans' → logprob: -9.660501480102539
    8. '(ans' → logprob: -9.910501480102539
    9. '   ' → logprob: -10.910501480102539
    10. '       ' → logprob: -11.285501480102539

Token 723: 'acc' (ID: 3717)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00870463252067566
    2. ' C' → logprob: -5.133704662322998
    3. '+' → logprob: -6.633704662322998
    4. 'ans' → logprob: -7.758704662322998
    5. ' ans' → logprob: -8.00870418548584
    6. '+=' → logprob: -8.13370418548584
    7. '+C' → logprob: -8.25870418548584
    8. ' +' → logprob: -10.00870418548584
    9. ')' → logprob: -10.25870418548584
    10. ' +=' → logprob: -10.50870418548584

Token 724: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.3938479721546173
    2. 'um' → logprob: -1.518847942352295
    3. ' +=' → logprob: -3.018847942352295
    4. 'umulator' → logprob: -4.018847942352295
    5. ' ans' → logprob: -4.268847942352295
    6. '+=' → logprob: -4.768847942352295
    7. ')' → logprob: -5.268847942352295
    8. '(ans' → logprob: -6.268847942352295
    9. '[i' → logprob: -6.768847942352295
    10. ' ' → logprob: -6.768847942352295

Token 725: 'ur' (ID: 330)
  Prédit: 'eur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eur' → logprob: -1.3460415601730347
    2. 'or' → logprob: -1.4710415601730347
    3. ')' → logprob: -1.5960415601730347
    4. 'er' → logprob: -1.7210415601730347
    5. '   ' → logprob: -3.846041679382324
    6. '+' → logprob: -3.846041679382324
    7. ' +=' → logprob: -3.971041679382324
    8. 'r' → logprob: -4.221041679382324
    9. 'uer' → logprob: -4.346041679382324
    10. '+=' → logprob: -4.596041679382324

Token 726: '),' (ID: 936)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8348732590675354
    2. ' +=' → logprob: -0.9598732590675354
    3. '+=' → logprob: -2.4598731994628906
    4. '+' → logprob: -2.7098731994628906
    5. ')' → logprob: -3.5848731994628906
    6. '       ' → logprob: -6.459873199462891
    7. ')+' → logprob: -7.334873199462891
    8. ' +
' → logprob: -8.45987319946289
    9. '   ' → logprob: -8.58487319946289
    10. ')
' → logprob: -9.08487319946289

Token 727: ' car' (ID: 1669)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6263422966003418
    2. ' C' → logprob: -1.1263422966003418
    3. 'C' → logprob: -2.001342296600342
    4. ' +=' → logprob: -5.751342296600342
    5. 'ans' → logprob: -6.001342296600342
    6. '+=' → logprob: -8.8763427734375
    7. '(ans' → logprob: -9.6263427734375
    8. '+' → logprob: -10.2513427734375
    9. ' +' → logprob: -10.2513427734375
    10. ' =' → logprob: -10.3763427734375

Token 728: ' c' (ID: 274)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.789854884147644
    2. ' i' → logprob: -1.664854884147644
    3. ' C' → logprob: -2.0398550033569336
    4. 'Color' → logprob: -2.6648550033569336
    5. ' now' → logprob: -2.7898550033569336
    6. ' Color' → logprob: -3.0398550033569336
    7. 'i' → logprob: -3.5398550033569336
    8. 'now' → logprob: -4.664855003356934
    9. ' maintenant' → logprob: -4.914855003356934
    10. ' not' → logprob: -7.414855003356934

Token 729: ''est' (ID: 6616)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.692050576210022
    2. 'i' → logprob: -1.817050576210022
    3. ''est' → logprob: -1.817050576210022
    4. '[i' → logprob: -1.942050576210022
    5. '=' → logprob: -2.6920504570007324
    6. '#' → logprob: -3.4420504570007324
    7. '+=' → logprob: -3.6920504570007324
    8. '!=' → logprob: -3.8170504570007324
    9. ' is' → logprob: -3.9420504570007324
    10. 'e' → logprob: -3.9420504570007324

Token 730: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.28586289286613464
    2. ' C' → logprob: -2.535862922668457
    3. ' la' → logprob: -3.285862922668457
    4. 'la' → logprob: -3.660862922668457
    5. 'Color' → logprob: -3.660862922668457
    6. ' une' → logprob: -3.660862922668457
    7. ' Color' → logprob: -3.785862922668457
    8. 'une' → logprob: -4.410862922668457
    9. 'le' → logprob: -5.160862922668457
    10. ' le' → logprob: -6.410862922668457

Token 731: ' valeur' (ID: 41664)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01958693563938141
    2. ' C' → logprob: -4.51958703994751
    3. 'Color' → logprob: -6.01958703994751
    4. 'val' → logprob: -6.64458703994751
    5. 'i' → logprob: -7.01958703994751
    6. ' valeur' → logprob: -7.51958703994751
    7. ' value' → logprob: -7.76958703994751
    8. 'value' → logprob: -7.76958703994751
    9. '```' → logprob: -8.144586563110352
    10. ' i' → logprob: -8.269586563110352

Token 732: ' assign' (ID: 14975)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.0596966743469238
    2. '#' → logprob: -1.8096966743469238
    3. 'assign' → logprob: -2.184696674346924
    4. '[i' → logprob: -2.434696674346924
    5. '   ' → logprob: -2.559696674346924
    6. 'assigned' → logprob: -2.684696674346924
    7. 'Color' → logprob: -3.059696674346924
    8. '       ' → logprob: -4.309696674346924
    9. ' assigned' → logprob: -4.434696674346924
    10. 'de' → logprob: -4.684696674346924

Token 733: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0007316163973882794
    2. 'é' → logprob: -7.250731468200684
    3. '[' → logprob: -12.250731468200684
    4. 'ee' → logprob: -12.500731468200684
    5. 'e' → logprob: -12.625731468200684
    6. '=' → logprob: -12.625731468200684
    7. '   ' → logprob: -13.500731468200684
    8. ']' → logprob: -14.000731468200684
    9. 'è' → logprob: -14.125731468200684
    10. ')' → logprob: -14.125731468200684

Token 734: ' à' (ID: 1221)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4468032419681549
    2. '+' → logprob: -1.6968032121658325
    3. ' +=' → logprob: -1.9468032121658325
    4. ' +' → logprob: -4.446803092956543
    5. '[' → logprob: -4.696803092956543
    6. '[i' → logprob: -5.321803092956543
    7. '(ans' → logprob: -6.071803092956543
    8. '       ' → logprob: -6.696803092956543
    9. '=' → logprob: -6.821803092956543
    10. ' to' → logprob: -7.071803092956543

Token 735: ' ce' (ID: 2357)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.13088999688625336
    2. 'Color' → logprob: -2.130889892578125
    3. ' now' → logprob: -6.130889892578125
    4. ' Color' → logprob: -6.630889892578125
    5. 'C' → logprob: -8.380889892578125
    6. '[now' → logprob: -9.255889892578125
    7. 'ans' → logprob: -10.755889892578125
    8. 'maint' → logprob: -10.880889892578125
    9. '```' → logprob: -10.880889892578125
    10. ' maintenant' → logprob: -11.380889892578125

Token 736: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.2571844458580017
    2. ' node' → logprob: -1.8821845054626465
    3. 'node' → logprob: -3.7571845054626465
    4. ' now' → logprob: -4.2571845054626465
    5. 'som' → logprob: -5.0071845054626465
    6. 'vertex' → logprob: -5.3821845054626465
    7. 'now' → logprob: -5.3821845054626465
    8. 's' → logprob: -5.8821845054626465
    9. ' som' → logprob: -6.2571845054626465
    10. 'token' → logprob: -6.2571845054626465

Token 737: '
' (ID: 198)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.18282051384449005
    2. '+' → logprob: -2.5578205585479736
    3. ' +=' → logprob: -2.5578205585479736
    4. '
' → logprob: -5.4328203201293945
    5. ' +' → logprob: -5.5578203201293945
    6. '=' → logprob: -7.0578203201293945
    7. '+
' → logprob: -7.1828203201293945
    8. '       ' → logprob: -7.1828203201293945
    9. '(ans' → logprob: -7.6828203201293945
    10. 'ans' → logprob: -7.9328203201293945

Token 738: '       ' (ID: 309)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7115424275398254
    2. ' +=' → logprob: -1.0865423679351807
    3. ' ans' → logprob: -2.4615423679351807
    4. '+' → logprob: -3.7115423679351807
    5. 'C' → logprob: -3.7115423679351807
    6. ' C' → logprob: -4.58654260635376
    7. ' +' → logprob: -4.83654260635376
    8. '=' → logprob: -5.33654260635376
    9. 'ans' → logprob: -5.33654260635376
    10. '       ' → logprob: -5.33654260635376

Token 739: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.015407013706862926
    2. 'C' → logprob: -4.265407085418701
    3. ' ans' → logprob: -6.765407085418701
    4. ' C' → logprob: -9.765406608581543
    5. '+=' → logprob: -11.515406608581543
    6. '(ans' → logprob: -11.640406608581543
    7. '+' → logprob: -12.390406608581543
    8. '	ans' → logprob: -12.640406608581543
    9. '+C' → logprob: -13.265406608581543
    10. '```' → logprob: -13.390406608581543

Token 740: ' +=' (ID: 2757)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12418302148580551
    2. '+' → logprob: -2.624182939529419
    3. ' +=' → logprob: -3.124182939529419
    4. '+=' → logprob: -8.12418270111084
    5. ' +
' → logprob: -12.74918270111084
    6. ' =' → logprob: -13.12418270111084
    7. ' ' → logprob: -13.12418270111084
    8. ' ' → logprob: -13.24918270111084
    9. ')' → logprob: -13.62418270111084
    10. '[' → logprob: -14.37418270111084

Token 741: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.018150296062231064
    2. ' C' → logprob: -4.018150329589844
    3. '	C' → logprob: -15.143150329589844
    4. '   ' → logprob: -16.268150329589844
    5. '_C' → logprob: -17.518150329589844
    6. ' ' → logprob: -17.893150329589844
    7. '>C' → logprob: -19.393150329589844
    8. '(C' → logprob: -19.393150329589844
    9. 'Color' → logprob: -19.518150329589844
    10. ' ' → logprob: -19.768150329589844

Token 742: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003573919821064919
    2. '[' → logprob: -8.000357627868652
    3. 'i' → logprob: -10.750357627868652
    4. '[
' → logprob: -16.375356674194336
    5. ' i' → logprob: -16.500356674194336
    6. ' [' → logprob: -16.625356674194336
    7. '[I' → logprob: -16.625356674194336
    8. '\[' → logprob: -17.125356674194336
    9. '[int' → logprob: -17.625356674194336
    10. '   ' → logprob: -17.750356674194336

Token 743: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0059457444585859776
    2. '])' → logprob: -5.255945682525635
    3. '[i' → logprob: -7.880945682525635
    4. ')' → logprob: -8.505946159362793
    5. '[' → logprob: -9.255946159362793
    6. ' ]' → logprob: -10.755946159362793
    7. ']
' → logprob: -11.755946159362793
    8. ')]' → logprob: -12.880946159362793
    9. '   ' → logprob: -13.880946159362793
    10. ' ])' → logprob: -14.630946159362793

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2603851854801178
    2. 'Color' → logprob: -1.6353851556777954
    3. '        
' → logprob: -3.635385274887085
    4. '#' → logprob: -5.260385036468506
    5. '   ' → logprob: -6.260385036468506
    6. '    
' → logprob: -7.635385036468506
    7. '	Color' → logprob: -9.135385513305664
    8. '
' → logprob: -9.760385513305664
    9. '  
' → logprob: -10.260385513305664
    10. '```' → logprob: -10.385385513305664

Token 745: ' #' (ID: 1069)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.1255750060081482
    2. '       ' → logprob: -2.250575065612793
    3. '   ' → logprob: -4.625575065612793
    4. '	Color' → logprob: -6.500575065612793
    5. '        
' → logprob: -7.625575065612793
    6. '```' → logprob: -8.125575065612793
    7. ' Color' → logprob: -8.625575065612793
    8. '    
' → logprob: -9.375575065612793
    9. '
' → logprob: -9.625575065612793
    10. '<|end|>' → logprob: -9.875575065612793

Token 746: ' Ass' (ID: 4744)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -7.584239938296378e-06
    2. ' Color' → logprob: -12.875007629394531
    3. 'for' → logprob: -13.125007629394531
    4. '       ' → logprob: -13.625007629394531
    5. '   ' → logprob: -13.875007629394531
    6. 'color' → logprob: -14.500007629394531
    7. '```' → logprob: -16.25000762939453
    8. '_color' → logprob: -16.62500762939453
    9. '#' → logprob: -17.00000762939453
    10. '	Color' → logprob: -17.25000762939453

Token 747: 'igner' (ID: 32459)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.0005115681560710073
    2. 'Ign' → logprob: -8.375511169433594
    3. '   ' → logprob: -9.500511169433594
    4. ' ign' → logprob: -10.250511169433594
    5. 'ing' → logprob: -10.500511169433594
    6. '       ' → logprob: -10.625511169433594
    7. 'igner' → logprob: -10.750511169433594
    8. 'i' → logprob: -11.000511169433594
    9. '#' → logprob: -11.250511169433594
    10. 'ignor' → logprob: -11.250511169433594

Token 748: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.10068698972463608
    2. 'Color' → logprob: -2.350687026977539
    3. ' C' → logprob: -8.100687026977539
    4. ' Color' → logprob: -8.725687026977539
    5. 'now' → logprob: -11.975687026977539
    6. '   ' → logprob: -12.350687026977539
    7. '       ' → logprob: -14.225687026977539
    8. ' now' → logprob: -14.475687026977539
    9. '           ' → logprob: -14.975687026977539
    10. ' ' → logprob: -15.100687026977539

Token 749: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.00000286102295
    3. '[C' → logprob: -15.50000286102295
    4. '```' → logprob: -16.125003814697266
    5. ' [' → logprob: -16.250003814697266
    6. 'Color' → logprob: -16.250003814697266
    7. '[I' → logprob: -16.625003814697266
    8. '[color' → logprob: -16.875003814697266
    9. '[now' → logprob: -17.125003814697266
    10. 'i' → logprob: -17.125003814697266

Token 750: ']' (ID: 60)
  Prédit: '[now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.5587345361709595
    2. '[i' → logprob: -0.9337345361709595
    3. '[' → logprob: -3.68373441696167
    4. ')' → logprob: -5.18373441696167
    5. ']' → logprob: -5.80873441696167
    6. '[next' → logprob: -7.30873441696167
    7. '[to' → logprob: -8.183734893798828
    8. ' [' → logprob: -10.058734893798828
    9. '(now' → logprob: -10.058734893798828
    10. '[current' → logprob: -10.308734893798828

Token 751: ' (' (ID: 350)
  Prédit: '[now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.0038213373627513647
    2. '[' → logprob: -5.62882137298584
    3. '[to' → logprob: -9.00382137298584
    4. '[next' → logprob: -9.62882137298584
    5. ' to' → logprob: -11.00382137298584
    6. ' now' → logprob: -12.12882137298584
    7. '(now' → logprob: -12.75382137298584
    8. '
' → logprob: -13.50382137298584
    9. ')' → logprob: -13.62882137298584
    10. '[i' → logprob: -14.00382137298584

Token 752: 'la' (ID: 1675)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.9161240458488464
    2. 'C' → logprob: -1.2911241054534912
    3. 'now' → logprob: -1.9161241054534912
    4. '[now' → logprob: -2.416124105453491
    5. ' now' → logprob: -3.291124105453491
    6. '[i' → logprob: -3.541124105453491
    7. ')' → logprob: -4.291123867034912
    8. ' Color' → logprob: -5.666123867034912
    9. 'i' → logprob: -6.791123867034912
    10. ' C' → logprob: -7.041123867034912

Token 753: ' prochaine' (ID: 78876)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0036748945713043213
    2. 'i' → logprob: -6.1286749839782715
    3. ' i' → logprob: -7.0036749839782715
    4. 'C' → logprob: -7.6286749839782715
    5. ' C' → logprob: -10.253674507141113
    6. '```' → logprob: -11.003674507141113
    7. ')' → logprob: -11.128674507141113
    8. '[' → logprob: -12.128674507141113
    9. ' [' → logprob: -12.378674507141113
    10. '   ' → logprob: -12.503674507141113

Token 754: ' plus' (ID: 2932)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.18793921172618866
    2. ')' → logprob: -2.687939167022705
    3. '[i' → logprob: -2.812939167022705
    4. ' value' → logprob: -3.437939167022705
    5. 'value' → logprob: -6.187939167022705
    6. ']' → logprob: -6.687939167022705
    7. ' token' → logprob: -6.812939167022705
    8. '[' → logprob: -7.062939167022705
    9. ' couleur' → logprob: -7.062939167022705
    10. ' )' → logprob: -7.187939167022705

Token 755: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -1.1820982694625854
    2. ']' → logprob: -1.8070982694625854
    3. 'large' → logprob: -1.9320982694625854
    4. '_large' → logprob: -2.182098388671875
    5. ' large' → logprob: -2.807098388671875
    6. '[i' → logprob: -3.432098388671875
    7. ')' → logprob: -3.557098388671875
    8. ' ' → logprob: -3.807098388671875
    9. '[' → logprob: -3.807098388671875
    10. '   ' → logprob: -3.807098388671875

Token 756: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.6062878966331482
    2. ')' → logprob: -1.356287956237793
    3. ' value' → logprob: -1.981287956237793
    4. 'value' → logprob: -3.356287956237793
    5. ']' → logprob: -4.731287956237793
    6. 'val' → logprob: -5.106287956237793
    7. ' )' → logprob: -6.231287956237793
    8. '()' → logprob: -6.481287956237793
    9. '_value' → logprob: -6.731287956237793
    10. ' ' → logprob: -7.106287956237793

Token 757: ' restante' (ID: 130202)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008510672487318516
    2. ' à' → logprob: -5.008510589599609
    3. '[i' → logprob: -7.383510589599609
    4. ' )' → logprob: -7.758510589599609
    5. 'à' → logprob: -8.00851058959961
    6. '[next' → logprob: -9.25851058959961
    7. '[' → logprob: -9.38351058959961
    8. '[now' → logprob: -9.88351058959961
    9. ']' → logprob: -10.25851058959961
    10. ' au' → logprob: -10.88351058959961

Token 758: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018984097987413406
    2. ' à' → logprob: -6.876898288726807
    3. ' )' → logprob: -7.126898288726807
    4. 'à' → logprob: -10.251898765563965
    5. '[i' → logprob: -11.501898765563965
    6. ']' → logprob: -12.751898765563965
    7. ')`' → logprob: -13.251898765563965
    8. ' au' → logprob: -13.501898765563965
    9. '[' → logprob: -13.501898765563965
    10. ',' → logprob: -13.751898765563965

Token 759: ' au' (ID: 2791)
  Prédit: '[now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.06937292963266373
    2. '[' → logprob: -2.9443728923797607
    3. ' to' → logprob: -4.94437313079834
    4. '[next' → logprob: -5.44437313079834
    5. '[to' → logprob: -6.19437313079834
    6. 'to' → logprob: -7.81937313079834
    7. ' now' → logprob: -8.56937313079834
    8. '       ' → logprob: -9.19437313079834
    9. '<|end|>' → logprob: -9.56937313079834
    10. '
' → logprob: -10.19437313079834

Token 760: ' sommet' (ID: 130502)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.5876148343086243
    2. 'now' → logprob: -0.8376148343086243
    3. ' now' → logprob: -4.837615013122559
    4. '[now' → logprob: -5.837615013122559
    5. ' Color' → logprob: -7.212615013122559
    6. 'Now' → logprob: -11.462615013122559
    7. ' maintenant' → logprob: -12.837615013122559
    8. '(now' → logprob: -12.962615013122559
    9. '[' → logprob: -13.212615013122559
    10. '```' → logprob: -13.337615013122559

Token 761: ' current' (ID: 2208)
  Prédit: '[now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.035989291965961456
    2. ' now' → logprob: -4.035989284515381
    3. 'now' → logprob: -4.035989284515381
    4. '[' → logprob: -11.785989761352539
    5. '(now' → logprob: -12.660989761352539
    6. '	now' → logprob: -14.535989761352539
    7. '```' → logprob: -14.660989761352539
    8. ' maintenant' → logprob: -15.160989761352539
    9. 'Now' → logprob: -15.285989761352539
    10. 'Color' → logprob: -15.660989761352539

Token 762: ' '' (ID: 461)
  Prédit: '[now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.0005911595653742552
    2. ' now' → logprob: -7.875591278076172
    3. 'now' → logprob: -9.375591278076172
    4. '(now' → logprob: -9.750591278076172
    5. '[' → logprob: -9.875591278076172
    6. 'Color' → logprob: -11.375591278076172
    7. '```' → logprob: -14.000591278076172
    8. '[
' → logprob: -14.000591278076172
    9. ']' → logprob: -14.250591278076172
    10. '
' → logprob: -14.500591278076172

Token 763: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -4.4894986785948277e-05
    2. ' now' → logprob: -10.375044822692871
    3. '[now' → logprob: -11.250044822692871
    4. '(now' → logprob: -15.500044822692871
    5. 'Color' → logprob: -15.875044822692871
    6. '   ' → logprob: -16.500045776367188
    7. 'nown' → logprob: -16.625045776367188
    8. 'Now' → logprob: -16.875045776367188
    9. '	now' → logprob: -16.875045776367188
    10. '```' → logprob: -17.875045776367188

Token 764: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.750000953674316
    3. '```' → logprob: -15.500000953674316
    4. ' N' → logprob: -17.125
    5. '#' → logprob: -17.25
    6. '`' → logprob: -17.375
    7. ')' → logprob: -17.75
    8. ',' → logprob: -18.125
    9. 'Color' → logprob: -18.125
    10. ']' → logprob: -18.25

Token 765: ''
' (ID: 2207)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022869201377034187
    2. ')' → logprob: -4.647869110107422
    3. '       ' → logprob: -4.647869110107422
    4. '   ' → logprob: -6.147869110107422
    5. ' ]' → logprob: -7.022869110107422
    6. '[' → logprob: -8.147869110107422
    7. ']
' → logprob: -10.272869110107422
    8. '    ' → logprob: -11.147869110107422
    9. '        ' → logprob: -11.647869110107422
    10. ' )' → logprob: -11.772869110107422

Token 766: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2052687555551529
    2. ' =' → logprob: -2.4552688598632812
    3. '=' → logprob: -2.7052688598632812
    4. 'Color' → logprob: -3.7052688598632812
    5. '    
' → logprob: -6.580268859863281
    6. '   ' → logprob: -6.705268859863281
    7. '        
' → logprob: -7.330268859863281
    8. '[next' → logprob: -7.330268859863281
    9. '`' → logprob: -7.455268859863281
    10. '[
' → logprob: -7.955268859863281

Token 767: ' Color' (ID: 6822)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' (adapté à ' Color') → logprob: -3.531315314830863e-06
    2. ' Color' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.500003814697266
    4. '	Color' → logprob: -17.375003814697266
    5. 'C' → logprob: -18.875003814697266
    6. '_Color' → logprob: -19.000003814697266
    7. '       ' → logprob: -19.250003814697266
    8. '.Color' → logprob: -19.750003814697266
    9. 'color' → logprob: -19.750003814697266
    10. '```' → logprob: -20.500003814697266

Token 768: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -12.75000286102295
    3. '[next' → logprob: -16.375003814697266
    4. '[current' → logprob: -17.500003814697266
    5. '```' → logprob: -17.875003814697266
    6. ' now' → logprob: -17.875003814697266
    7. '\[' → logprob: -19.250003814697266
    8. ' [' → logprob: -19.250003814697266
    9. '[
' → logprob: -19.375003814697266
    10. '	now' → logprob: -19.500003814697266

Token 769: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.000001907348633
    3. '```' → logprob: -17.125001907348633
    4. '   ' → logprob: -19.125001907348633
    5. '-' → logprob: -19.500001907348633
    6. ']' → logprob: -19.875001907348633
    7. 'n' → logprob: -20.000001907348633
    8. ' N' → logprob: -20.125001907348633
    9. '.' → logprob: -20.250001907348633
    10. '[N' → logprob: -20.500001907348633

Token 770: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.4285862057004124e-05
    2. ']=' → logprob: -10.37503433227539
    3. ' ]' → logprob: -12.75003433227539
    4. '[' → logprob: -16.37503433227539
    5. '=' → logprob: -18.75003433227539
    6. ')' → logprob: -19.00003433227539
    7. '   ' → logprob: -19.12503433227539
    8. ']
' → logprob: -19.87503433227539
    9. ']='' → logprob: -20.00003433227539
    10. '']' → logprob: -20.25003433227539

Token 771: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '＝' → logprob: -15.828889846801758
    4. ')' → logprob: -17.328889846801758
    5. ']' → logprob: -17.703889846801758
    6. ']=' → logprob: -17.953889846801758
    7. ')=' → logprob: -18.203889846801758
    8. '=int' → logprob: -18.453889846801758
    9. '=

' → logprob: -18.953889846801758
    10. '[' → logprob: -19.203889846801758

Token 772: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -6.2729995988775045e-06
    2. ' C' → logprob: -12.000006675720215
    3. '   ' → logprob: -21.2500057220459
    4. '	C' → logprob: -22.0000057220459
    5. 'c' → logprob: -24.0000057220459
    6. ' ' → logprob: -25.0000057220459
    7. '  ' → logprob: -25.0000057220459
    8. 'Ｃ' → logprob: -25.1250057220459
    9. '=C' → logprob: -25.1250057220459
    10. '*C' → logprob: -25.1250057220459

Token 773: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -19.375
    3. '[' → logprob: -20.125
    4. '```' → logprob: -21.375
    5. '[
' → logprob: -23.25
    6. '[I' → logprob: -23.375
    7. '[index' → logprob: -24.5
    8. ' [' → logprob: -24.625
    9. '
' → logprob: -24.75
    10. '   ' → logprob: -24.875

Token 774: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023420631885528564
    2. ']' → logprob: -3.773420572280884
    3. ')
' → logprob: -8.898420333862305
    4. '       ' → logprob: -11.273420333862305
    5. '])' → logprob: -11.898420333862305
    6. ')]' → logprob: -12.148420333862305
    7. '   ' → logprob: -12.523420333862305
    8. ' )' → logprob: -12.898420333862305
    9. ']
' → logprob: -13.023420333862305
    10. '）' → logprob: -13.523420333862305

Token 775: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46638020873069763
    2. 'for' → logprob: -1.46638023853302
    3. '        
' → logprob: -2.2163801193237305
    4. '   ' → logprob: -3.5913801193237305
    5. '    
' → logprob: -5.9663801193237305
    6. ' for' → logprob: -6.4663801193237305
    7. '```' → logprob: -6.8413801193237305
    8. '       
' → logprob: -9.84138011932373
    9. '
' → logprob: -10.46638011932373
    10. '           ' → logprob: -10.84138011932373

Token 776: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6120830774307251
    2. 'for' → logprob: -0.8620830774307251
    3. '   ' → logprob: -3.3620829582214355
    4. ' for' → logprob: -7.7370829582214355
    5. '        
' → logprob: -8.237083435058594
    6. '```' → logprob: -9.362083435058594
    7. '    
' → logprob: -10.237083435058594
    8. '	for' → logprob: -12.362083435058594
    9. '           ' → logprob: -12.612083435058594
    10. '``' → logprob: -13.862083435058594

Token 777: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003297012997791171
    2. '#' (adapté à ' #') → logprob: -5.753296852111816
    3. '   ' → logprob: -9.378296852111816
    4. '       ' → logprob: -10.378296852111816
    5. ' for' → logprob: -12.628296852111816
    6. '	for' → logprob: -15.628296852111816
    7. '```' → logprob: -15.878296852111816
    8. '    
' → logprob: -17.378297805786133
    9. '
' → logprob: -17.503297805786133
    10. 'For' → logprob: -18.003297805786133

Token 778: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3782830137643032e-05
    2. '   ' → logprob: -11.87501335144043
    3. '#' → logprob: -12.50001335144043
    4. '       ' → logprob: -13.37501335144043
    5. ' for' → logprob: -13.50001335144043
    6. '	for' → logprob: -17.25001335144043
    7. '```' → logprob: -17.75001335144043
    8. '
' → logprob: -17.75001335144043
    9. 'For' → logprob: -18.50001335144043
    10. ' ' → logprob: -19.25001335144043

Token 779: ' chaque' (ID: 21194)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.025377443060278893
    2. 'next' → logprob: -5.02537727355957
    3. ' e' → logprob: -5.27537727355957
    4. 'ne' → logprob: -5.52537727355957
    5. 'neighbor' → logprob: -5.90037727355957
    6. 'v' → logprob: -6.15037727355957
    7. 'ee' → logprob: -6.90037727355957
    8. 'n' → logprob: -7.40037727355957
    9. ' nxt' → logprob: -7.40037727355957
    10. 'nei' → logprob: -7.52537727355957

Token 780: ' voisin' (ID: 145411)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1826103925704956
    2. ' e' → logprob: -2.307610511779785
    3. 'ne' → logprob: -3.807610511779785
    4. 'v' → logprob: -4.682610511779785
    5. 'n' → logprob: -4.932610511779785
    6. 'next' → logprob: -4.932610511779785
    7. 'neighbor' → logprob: -5.057610511779785
    8. ' nxt' → logprob: -5.807610511779785
    9. 'ee' → logprob: -6.057610511779785
    10. ' next' → logprob: -6.432610511779785

Token 781: ' '' (ID: 461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.217934712767601
    2. ' e' → logprob: -1.8429347276687622
    3. ' of' → logprob: -3.8429346084594727
    4. 'e' → logprob: -4.842934608459473
    5. ' nxt' → logprob: -6.967934608459473
    6. 'v' → logprob: -7.092934608459473
    7. ' next' → logprob: -7.092934608459473
    8. 'next' → logprob: -7.217934608459473
    9. '(e' → logprob: -7.342934608459473
    10. 'in' → logprob: -7.592934608459473

Token 782: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03815210983157158
    2. 'next' → logprob: -4.66315221786499
    3. 'ne' → logprob: -4.78815221786499
    4. 'n' → logprob: -4.78815221786499
    5. 'v' → logprob: -5.41315221786499
    6. 'now' → logprob: -6.66315221786499
    7. 'x' → logprob: -6.66315221786499
    8. ' e' → logprob: -6.78815221786499
    9. 'neighbor' → logprob: -7.28815221786499
    10. 'nei' → logprob: -7.53815221786499

Token 783: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16022726893424988
    2. 'in' → logprob: -1.9102272987365723
    3. ' ' → logprob: -12.910226821899414
    4. '	in' → logprob: -15.035226821899414
    5. '  ' → logprob: -16.160226821899414
    6. 's' → logprob: -16.660226821899414
    7. 'In' → logprob: -16.910226821899414
    8. '   ' → logprob: -17.410226821899414
    9. ' of' → logprob: -17.660226821899414
    10. 'd' → logprob: -17.660226821899414

Token 784: ' du' (ID: 1462)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4740852415561676
    2. ' in' → logprob: -0.9740852117538452
    3. '	in' → logprob: -12.474084854125977
    4. ' ' → logprob: -12.974084854125977
    5. ' of' → logprob: -14.599084854125977
    6. 'of' → logprob: -14.724084854125977
    7. '   ' → logprob: -14.974084854125977
    8. '  ' → logprob: -15.224084854125977
    9. 'd' → logprob: -15.974084854125977
    10. '    ' → logprob: -16.474084854125977

Token 785: ' sommet' (ID: 130502)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.000718030845746398
    2. ' now' → logprob: -7.250718116760254
    3. 'Edge' → logprob: -12.000718116760254
    4. '[now' → logprob: -14.000718116760254
    5. 'Now' → logprob: -14.750718116760254
    6. 'nown' → logprob: -15.375718116760254
    7. 'n' → logprob: -16.000717163085938
    8. ' maintenant' → logprob: -16.375717163085938
    9. '	now' → logprob: -16.750717163085938
    10. '(now' → logprob: -16.875717163085938

Token 786: ' actuel' (ID: 113646)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.004903669934719801
    2. ' now' → logprob: -5.379903793334961
    3. '[now' → logprob: -8.254903793334961
    4. '(now' → logprob: -11.129903793334961
    5. 'nown' → logprob: -13.004903793334961
    6. ' maintenant' → logprob: -13.129903793334961
    7. 'Now' → logprob: -13.629903793334961
    8. '	now' → logprob: -13.879903793334961
    9. '_now' → logprob: -14.504903793334961
    10. '```' → logprob: -14.629903793334961

Token 787: ' '' (ID: 461)
  Prédit: '[now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.3303458094596863
    2. ' in' → logprob: -2.455345869064331
    3. 'now' → logprob: -2.455345869064331
    4. 'in' → logprob: -3.205345869064331
    5. ':' → logprob: -3.330345869064331
    6. ' now' → logprob: -3.580345869064331
    7. '(now' → logprob: -6.455345630645752
    8. '[' → logprob: -6.580345630645752
    9. '   ' → logprob: -7.455345630645752
    10. ':
' → logprob: -7.955345630645752

Token 788: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.00023166877508629113
    2. ' now' → logprob: -8.375231742858887
    3. '[now' → logprob: -14.125231742858887
    4. '(now' → logprob: -15.750231742858887
    5. 'nown' → logprob: -16.37523078918457
    6. '	now' → logprob: -17.25023078918457
    7. '_now' → logprob: -17.62523078918457
    8. 'Now' → logprob: -18.12523078918457
    9. '   ' → logprob: -18.12523078918457
    10. '.now' → logprob: -18.75023078918457

Token 789: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.4121114822482923e-06
    2. 'now' → logprob: -13.250003814697266
    3. ' now' → logprob: -13.875003814697266
    4. '```' → logprob: -15.500003814697266
    5. ' N' → logprob: -16.125003814697266
    6. 'n' → logprob: -16.500003814697266
    7. 'Now' → logprob: -17.250003814697266
    8. '
' → logprob: -17.625003814697266
    9. 'e' → logprob: -17.875003814697266
    10. ',' → logprob: -18.000003814697266

Token 790: ''
' (ID: 2207)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019361643120646477
    2. ':
' → logprob: -4.14436149597168
    3. '       ' → logprob: -6.39436149597168
    4. ',' → logprob: -7.39436149597168
    5. '           ' → logprob: -7.89436149597168
    6. '):' → logprob: -8.51936149597168
    7. '):
' → logprob: -9.14436149597168
    8. '':' → logprob: -9.39436149597168
    9. ' :' → logprob: -9.39436149597168
    10. '   ' → logprob: -10.64436149597168

Token 791: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5781565308570862
    2. ':' → logprob: -0.8281565308570862
    3. ':
' → logprob: -6.953156471252441
    4. ',' → logprob: -7.203156471252441
    5. '   ' → logprob: -9.078156471252441
    6. ' for' → logprob: -9.203156471252441
    7. ' :' → logprob: -9.453156471252441
    8. ' in' → logprob: -10.078156471252441
    9. '<|end|>' → logprob: -10.578156471252441
    10. '	' → logprob: -10.828156471252441

Token 792: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8114956617355347
    2. 'for' (adapté à ' for') → logprob: -0.9364956617355347
    3. '       ' → logprob: -1.8114956617355347
    4. '   ' → logprob: -8.686495780944824
    5. '	for' → logprob: -9.061495780944824
    6. ' in' → logprob: -10.186495780944824
    7. '        ' → logprob: -11.186495780944824
    8. ' ' → logprob: -11.436495780944824
    9. '           ' → logprob: -11.811495780944824
    10. '```' → logprob: -11.936495780944824

Token 793: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.3132622241973877
    2. 'e' → logprob: -1.3132622241973877
    3. '	e' → logprob: -14.938261985778809
    4. ' ' → logprob: -17.313262939453125
    5. 'ｅ' → logprob: -17.813262939453125
    6. '_e' → logprob: -18.063262939453125
    7. ')e' → logprob: -18.188262939453125
    8. '   ' → logprob: -18.625762939453125
    9. '%e' → logprob: -18.875762939453125
    10. 's' → logprob: -18.938262939453125

Token 794: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.313273549079895
    2. 'in' → logprob: -1.313273549079895
    3. ' ' → logprob: -11.688273429870605
    4. '	in' → logprob: -13.188273429870605
    5. '  ' → logprob: -14.813273429870605
    6. 'not' → logprob: -15.688273429870605
    7. ',' → logprob: -15.813273429870605
    8. 'e' → logprob: -15.938273429870605
    9. ' not' → logprob: -15.938273429870605
    10. 'In' → logprob: -16.188274383544922

Token 795: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.0005538671393878758
    2. ' Edge' → logprob: -7.500554084777832
    3. '<Edge' → logprob: -14.875554084777832
    4. '.Edge' → logprob: -16.000553131103516
    5. '_edge' → logprob: -16.125553131103516
    6. ' ' → logprob: -16.500553131103516
    7. '   ' → logprob: -16.625553131103516
    8. '[' → logprob: -16.625553131103516
    9. 'edge' → logprob: -18.125553131103516
    10. 'Answer' → logprob: -18.500553131103516

Token 796: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -1.6240566083070007e-06
    2. 'now' → logprob: -14.125001907348633
    3. '[current' → logprob: -15.375001907348633
    4. '[' → logprob: -15.375001907348633
    5. ' now' → logprob: -15.750001907348633
    6. '   ' → logprob: -16.250001907348633
    7. '(now' → logprob: -17.125001907348633
    8. ' [' → logprob: -17.375001907348633
    9. '[next' → logprob: -17.375001907348633
    10. '       ' → logprob: -18.750001907348633

Token 797: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.049705829471349716
    2. 'now' → logprob: -3.049705743789673
    3. '[now' → logprob: -7.049705982208252
    4. ' now' → logprob: -9.049705505371094
    5. '[' → logprob: -9.299705505371094
    6. '.now' → logprob: -10.799705505371094
    7. '(now' → logprob: -12.549705505371094
    8. '   ' → logprob: -12.549705505371094
    9. 'n' → logprob: -12.674705505371094
    10. 'Now' → logprob: -13.424705505371094

Token 798: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.10278923064470291
    2. ':' → logprob: -2.8527891635894775
    3. ']:
' → logprob: -3.3527891635894775
    4. ']:
' → logprob: -5.602789402008057
    5. ':
' → logprob: -7.352789402008057
    6. ']' → logprob: -7.727789402008057
    7. '):' → logprob: -9.227788925170898
    8. '):
' → logprob: -10.602788925170898
    9. ':
' → logprob: -10.727788925170898
    10. '   ' → logprob: -10.727788925170898

Token 799: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3415350615978241
    2. ' if' → logprob: -1.8415350914001465
    3. '	       ' → logprob: -2.5915350914001465
    4. '       ' → logprob: -3.7165350914001465
    5. '        ' → logprob: -4.4665350914001465
    6. '<|end|>' → logprob: -5.3415350914001465
    7. 'if' → logprob: -5.8415350914001465
    8. '		' → logprob: -6.0915350914001465
    9. '               ' → logprob: -6.7165350914001465
    10. '   ' → logprob: -6.8415350914001465

Token 800: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03080388717353344
    2. ' if' → logprob: -4.030803680419922
    3. '               ' → logprob: -4.530803680419922
    4. '           ' → logprob: -6.530803680419922
    5. '   ' → logprob: -8.030803680419922
    6. '	if' → logprob: -11.905803680419922
    7. '       ' → logprob: -12.405803680419922
    8. '            ' → logprob: -13.030803680419922
    9. ' ' → logprob: -13.530803680419922
    10. '	           ' → logprob: -14.030803680419922

Token 801: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.65707261255011e-06
    2. ' if' → logprob: -11.750008583068848
    3. '           ' → logprob: -14.250008583068848
    4. '#' → logprob: -16.250009536743164
    5. '   ' → logprob: -17.500009536743164
    6. '               ' → logprob: -19.750009536743164
    7. '       ' → logprob: -20.125009536743164
    8. '```' → logprob: -20.375009536743164
    9. 'q' → logprob: -20.875009536743164
    10. '	if' → logprob: -21.125009536743164

Token 802: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027168119326233864
    2. '           ' → logprob: -4.027168273925781
    3. 'ifie' → logprob: -6.027168273925781
    4. 'ifier' → logprob: -6.152168273925781
    5. 'ifiez' → logprob: -6.277168273925781
    6. '               ' → logprob: -6.652168273925781
    7. 'f' → logprob: -7.902168273925781
    8. '       ' → logprob: -8.152168273925781
    9. '   ' → logprob: -8.527168273925781
    10. 'ify' → logprob: -8.652168273925781

Token 803: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1202067136764526
    2. ' if' → logprob: -1.1202067136764526
    3. 'e' → logprob: -1.3702067136764526
    4. ' e' → logprob: -2.370206832885742
    5. '(e' → logprob: -10.495206832885742
    6. 'Color' → logprob: -11.495206832885742
    7. 'color' → logprob: -11.620206832885742
    8. '   ' → logprob: -12.370206832885742
    9. ' color' → logprob: -12.495206832885742
    10. ' Color' → logprob: -12.745206832885742

Token 804: ' '' (ID: 461)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03823919966816902
    2. 'Color' → logprob: -3.2882392406463623
    3. ' e' → logprob: -8.663239479064941
    4. ' Color' → logprob: -10.663239479064941
    5. '   ' → logprob: -15.038239479064941
    6. '_Color' → logprob: -15.413239479064941
    7. 'color' → logprob: -15.538239479064941
    8. '(e' → logprob: -15.538239479064941
    9. '	e' → logprob: -16.413238525390625
    10. ' ' → logprob: -16.538238525390625

Token 805: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06198561564087868
    2. 'Color' → logprob: -2.811985731124878
    3. ' e' → logprob: -11.561985969543457
    4. 'color' → logprob: -12.811985969543457
    5. ' Color' → logprob: -12.936985969543457
    6. '(e' → logprob: -14.436985969543457
    7. '_Color' → logprob: -14.811985969543457
    8. '   ' → logprob: -15.186985969543457
    9. 'not' → logprob: -15.311985969543457
    10. 'COLOR' → logprob: -15.499485969543457

Token 806: ''' (ID: 6)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5761233568191528
    2. '!=' → logprob: -0.8261233568191528
    3. ')!=' → logprob: -9.326123237609863
    4. ']!=' → logprob: -9.951123237609863
    5. ' not' → logprob: -10.951123237609863
    6. '()!=' → logprob: -11.076123237609863
    7. '!=-' → logprob: -12.076123237609863
    8. 'not' → logprob: -12.951123237609863
    9. '!=(' → logprob: -13.576123237609863
    10. '!==' → logprob: -13.701123237609863

Token 807: ' N' (ID: 478)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.029790064319968224
    2. ' !=' → logprob: -3.529790163040161
    3. ')!=' → logprob: -11.029789924621582
    4. '()!=' → logprob: -11.404789924621582
    5. ']!=' → logprob: -11.779789924621582
    6. '!=-' → logprob: -12.904789924621582
    7. '!==' → logprob: -13.779789924621582
    8. '!=(' → logprob: -14.529789924621582
    9. 'is' → logprob: -15.529789924621582
    10. '!='' → logprob: -16.1547908782959

Token 808: ''' (ID: 6)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.28878962993621826
    2. 'e' → logprob: -1.5387896299362183
    3. ' !=' → logprob: -3.413789749145508
    4. ' e' → logprob: -6.288789749145508
    5. 'ot' → logprob: -7.288789749145508
    6. 'not' → logprob: -8.538789749145508
    7. '```' → logprob: -8.788789749145508
    8. ' not' → logprob: -9.038789749145508
    9. '!==' → logprob: -9.663789749145508
    10. 'if' → logprob: -10.288789749145508

Token 809: 'EST' (ID: 8292)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.14596520364284515
    2. 'not' → logprob: -2.395965099334717
    3. ' not' → logprob: -3.770965099334717
    4. 'e' → logprob: -4.520965099334717
    5. '!=' → logprob: -4.770965099334717
    6. 'o' → logprob: -6.895965099334717
    7. ' !=' → logprob: -7.270965099334717
    8. ' is' → logprob: -8.520965576171875
    9. '```' → logprob: -9.270965576171875
    10. ' e' → logprob: -9.645965576171875

Token 810: ' PAS' (ID: 66794)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.009420881979167461
    2. ' pas' → logprob: -5.759420871734619
    3. '!=' → logprob: -5.884420871734619
    4. 'different' → logprob: -6.134420871734619
    5. '_pas' → logprob: -7.884420871734619
    6. 'not' → logprob: -8.259421348571777
    7. '<>' → logprob: -8.634421348571777
    8. 'e' → logprob: -9.009421348571777
    9. ' différent' → logprob: -9.759421348571777
    10. 'diff' → logprob: -9.884421348571777

Token 811: ' le' (ID: 505)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.6772054433822632
    2. 'le' → logprob: -0.9272054433822632
    3. 'now' → logprob: -3.4272055625915527
    4. 'equal' → logprob: -4.177205562591553
    5. 'Color' → logprob: -4.302205562591553
    6. 'pré' → logprob: -4.802205562591553
    7. '=' → logprob: -6.052205562591553
    8. ' le' → logprob: -6.177205562591553
    9. 'e' → logprob: -6.177205562591553
    10. 'egal' → logprob: -6.177205562591553

Token 812: ' parent' (ID: 5980)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -6.420598219847307e-05
    2. ' pre' → logprob: -10.0000638961792
    3. 'pré' → logprob: -11.1250638961792
    4. 'parent' → logprob: -12.6250638961792
    5. 'preced' → logprob: -15.0000638961792
    6. 'pr' → logprob: -15.7500638961792
    7. ' pré' → logprob: -16.500064849853516
    8. 'prem' → logprob: -17.125064849853516
    9. 'previous' → logprob: -18.125064849853516
    10. 'prev' → logprob: -18.250064849853516

Token 813: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2659585475921631
    2. 'and' → logprob: -1.515958547592163
    3. 'pre' → logprob: -5.390958786010742
    4. 'e' → logprob: -6.515958786010742
    5. ' now' → logprob: -6.765958786010742
    6. ' if' → logprob: -7.015958786010742
    7. ' e' → logprob: -7.140958786010742
    8. 'if' → logprob: -7.140958786010742
    9. 'now' → logprob: -7.265958786010742
    10. '[now' → logprob: -7.390958786010742

Token 814: 'pour' (ID: 52723)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.0014277365989983082
    2. ' pre' → logprob: -7.50142765045166
    3. 'now' → logprob: -7.75142765045166
    4. 'e' → logprob: -7.87642765045166
    5. ' now' → logprob: -9.75142765045166
    6. ' e' → logprob: -12.25142765045166
    7. '(pre' → logprob: -14.62642765045166
    8. ')' → logprob: -14.75142765045166
    9. '	pre' → logprob: -15.12642765045166
    10. '=' → logprob: -15.75142765045166

Token 815: ' éviter' (ID: 64013)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.014522972516715527
    2. ' e' → logprob: -4.264523029327393
    3. 'pre' → logprob: -8.139522552490234
    4. ' pre' → logprob: -11.014522552490234
    5. ' éviter' → logprob: -11.264522552490234
    6. 'prevent' → logprob: -12.014522552490234
    7. 'é' → logprob: -12.514522552490234
    8. 'None' → logprob: -12.764522552490234
    9. ' now' → logprob: -12.889522552490234
    10. 'pré' → logprob: -13.014522552490234

Token 816: ' de' (ID: 334)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.6410793662071228
    2. 'e' → logprob: -1.0160794258117676
    3. ' pre' → logprob: -2.8910794258117676
    4. ' e' → logprob: -2.8910794258117676
    5. ' now' → logprob: -8.89107894897461
    6. 'now' → logprob: -10.26607894897461
    7. 'equal' → logprob: -10.76607894897461
    8. ' equal' → logprob: -12.14107894897461
    9. ' pré' → logprob: -12.26607894897461
    10. '(pre' → logprob: -12.26607894897461

Token 817: ' revenir' (ID: 88322)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3638671040534973
    2. 'pre' → logprob: -1.2388670444488525
    3. 'now' → logprob: -4.738867282867432
    4. ' e' → logprob: -5.488867282867432
    5. 'pré' → logprob: -7.113867282867432
    6. ' now' → logprob: -8.363866806030273
    7. 're' → logprob: -8.363866806030273
    8. 'maint' → logprob: -8.613866806030273
    9. ' pre' → logprob: -8.738866806030273
    10. ' maintenant' → logprob: -9.113866806030273

Token 818: ' en' (ID: 469)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4513011872768402
    2. 'à' → logprob: -1.4513012170791626
    3. 'au' → logprob: -3.701301097869873
    4. ' en' → logprob: -3.701301097869873
    5. ' au' → logprob: -3.951301097869873
    6. '   ' → logprob: -4.326301097869873
    7. 'e' → logprob: -4.451301097869873
    8. 'en' → logprob: -4.576301097869873
    9. ' e' → logprob: -4.701301097869873
    10. 'pre' → logprob: -5.451301097869873

Token 819: ' arrière' (ID: 100451)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.6497890949249268
    2. 'pre' → logprob: -1.1497890949249268
    3. 'e' → logprob: -2.8997890949249268
    4. ' ' → logprob: -2.8997890949249268
    5. ' pre' → logprob: -4.274788856506348
    6. ' Color' → logprob: -4.399788856506348
    7. ' now' → logprob: -5.524788856506348
    8. 'now' → logprob: -5.649788856506348
    9. 'Color' → logprob: -5.899788856506348
    10. ' q' → logprob: -6.274788856506348

Token 820: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12374070286750793
    2. ' and' → logprob: -2.4987406730651855
    3. 'and' → logprob: -4.1237406730651855
    4. '):' → logprob: -5.4987406730651855
    5. '           ' → logprob: -5.7487406730651855
    6. ' or' → logprob: -5.9987406730651855
    7. '):
' → logprob: -6.1237406730651855
    8. ' )' → logprob: -6.6237406730651855
    9. ' if' → logprob: -6.8737406730651855
    10. ' dans' → logprob: -7.1237406730651855

Token 821: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048989493399858475
    2. ' and' → logprob: -3.4239895343780518
    3. 'and' → logprob: -5.548989295959473
    4. '		' → logprob: -5.923989295959473
    5. ' if' → logprob: -5.923989295959473
    6. '               ' → logprob: -6.048989295959473
    7. '            ' → logprob: -6.423989295959473
    8. ',' → logprob: -7.423989295959473
    9. 'if' → logprob: -7.798989295959473
    10. '	       ' → logprob: -8.798989295959473

Token 822: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5783088803291321
    2. 'if' (adapté à ' if') → logprob: -0.8283088803291321
    3. '           ' → logprob: -6.078309059143066
    4. '               ' → logprob: -10.078309059143066
    5. '            ' → logprob: -11.578309059143066
    6. 'not' → logprob: -12.578309059143066
    7. ' not' → logprob: -12.578309059143066
    8. 'and' → logprob: -12.703309059143066
    9. '	if' → logprob: -12.703309059143066
    10. ' and' → logprob: -13.078309059143066

Token 823: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2519320547580719
    2. ' e' → logprob: -1.5019320249557495
    3. '   ' → logprob: -13.001932144165039
    4. '	e' → logprob: -15.126932144165039
    5. ' ' → logprob: -15.876932144165039
    6. '    ' → logprob: -16.25193214416504
    7. '           ' → logprob: -16.50193214416504
    8. '  ' → logprob: -17.00193214416504
    9. 'not' → logprob: -17.25193214416504
    10. '(e' → logprob: -17.50193214416504

Token 824: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.048600319772958755
    2. ' !=' → logprob: -3.048600435256958
    3. '()!=' → logprob: -12.423600196838379
    4. ')!=' → logprob: -12.673600196838379
    5. '!==' → logprob: -13.048600196838379
    6. ']!=' → logprob: -13.798600196838379
    7. '!=(' → logprob: -13.923600196838379
    8. ' ' → logprob: -14.423600196838379
    9. ' not' → logprob: -15.298600196838379
    10. '!=-' → logprob: -15.548600196838379

Token 825: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -2.339278580620885e-06
    2. ' pre' → logprob: -13.000001907348633
    3. 'now' → logprob: -19.125001907348633
    4. '	pre' → logprob: -19.125001907348633
    5. '   ' → logprob: -20.750001907348633
    6. '(pre' → logprob: -21.125001907348633
    7. 'per' → logprob: -21.250001907348633
    8. ' ' → logprob: -21.375001907348633
    9. 'preh' → logprob: -21.875001907348633
    10. 'pr' → logprob: -22.250001907348633

Token 826: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. '#' → logprob: -19.5
    3. ' N' → logprob: -19.5
    4. '```' → logprob: -20.375
    5. '[' → logprob: -20.5
    6. '-' → logprob: -20.75
    7. '
' → logprob: -21.0
    8. '   ' → logprob: -21.0
    9. ' ' → logprob: -21.125
    10. 'n' → logprob: -21.375

Token 827: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36026084423065186
    2. ':
' → logprob: -1.2352608442306519
    3. '               ' → logprob: -4.985260963439941
    4. '):
' → logprob: -5.985260963439941
    5. '           ' → logprob: -6.610260963439941
    6. '):' → logprob: -7.735260963439941
    7. ' and' → logprob: -7.985260963439941
    8. ')' → logprob: -8.860260963439941
    9. ' :
' → logprob: -10.735260963439941
    10. ':
' → logprob: -11.485260963439941

Token 828: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000740538293030113
    2. ' q' → logprob: -8.000741004943848
    3. 'q' → logprob: -8.375741004943848
    4. '           ' → logprob: -10.000741004943848
    5. '	           ' → logprob: -10.000741004943848
    6. '	       ' → logprob: -10.625741004943848
    7. ':' → logprob: -11.375741004943848
    8. '		       ' → logprob: -11.375741004943848
    9. '              ' → logprob: -11.875741004943848
    10. '	q' → logprob: -12.000741004943848

Token 829: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008766306564211845
    2. '                   ' → logprob: -5.008766174316406
    3. ' q' → logprob: -6.758766174316406
    4. '               ' → logprob: -8.008766174316406
    5. '	q' → logprob: -8.008766174316406
    6. '                       ' → logprob: -9.008766174316406
    7. '   ' → logprob: -10.133766174316406
    8. '                    ' → logprob: -11.383766174316406
    9. '           ' → logprob: -12.008766174316406
    10. '                ' → logprob: -12.008766174316406

Token 830: ' Ajouter' (ID: 165754)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.723973582556937e-05
    2. '                   ' → logprob: -11.625017166137695
    3. '               ' → logprob: -12.125017166137695
    4. ' q' → logprob: -12.875017166137695
    5. '                       ' → logprob: -15.875017166137695
    6. '
' → logprob: -17.375017166137695
    7. '                ' → logprob: -17.875017166137695
    8. '   ' → logprob: -17.875017166137695
    9. '	q' → logprob: -17.875017166137695
    10. '                    ' → logprob: -18.000017166137695

Token 831: ' le' (ID: 505)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0026309462264180183
    2. ' (' → logprob: -6.127630710601807
    3. '((' → logprob: -7.877630710601807
    4. '(' → logprob: -9.752631187438965
    5. '(E' → logprob: -13.252631187438965
    6. '(q' → logprob: -13.252631187438965
    7. '   ' → logprob: -13.377631187438965
    8. ' ' → logprob: -14.502631187438965
    9. '               ' → logprob: -14.877631187438965
    10. '	' → logprob: -15.377631187438965

Token 832: ' voisin' (ID: 145411)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00012035090912831947
    2. ' (' → logprob: -9.375120162963867
    3. '(' → logprob: -10.250120162963867
    4. '(E' → logprob: -16.125120162963867
    5. 'e' → logprob: -17.875120162963867
    6. 'token' → logprob: -18.125120162963867
    7. '(token' → logprob: -18.375120162963867
    8. '(
' → logprob: -18.375120162963867
    9. '((' → logprob: -18.500120162963867
    10. ' ' → logprob: -18.625120162963867

Token 833: ' '' (ID: 461)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4915830194950104
    2. '(e' → logprob: -0.991582989692688
    3. ' (' → logprob: -4.116582870483398
    4. '               ' → logprob: -7.616582870483398
    5. '(' → logprob: -8.241582870483398
    6. '                   ' → logprob: -9.241582870483398
    7. '(
' → logprob: -9.491582870483398
    8. '```' → logprob: -10.366582870483398
    9. ',' → logprob: -10.616582870483398
    10. '           ' → logprob: -10.866582870483398

Token 834: 'e' (ID: 68)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0001955537445610389
    2. '(' → logprob: -8.875195503234863
    3. ' (' → logprob: -9.875195503234863
    4. 'e' → logprob: -12.625195503234863
    5. '((' → logprob: -14.875195503234863
    6. '(
' → logprob: -15.625195503234863
    7. ',' → logprob: -16.50019645690918
    8. '(E' → logprob: -16.50019645690918
    9. ',e' → logprob: -16.62519645690918
    10. ')' → logprob: -17.50019645690918

Token 835: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004872588906437159
    2. ',e' → logprob: -6.129872798919678
    3. ' ,' → logprob: -6.504872798919678
    4. '(e' → logprob: -7.254872798919678
    5. ',(' → logprob: -8.50487232208252
    6. '(' → logprob: -9.25487232208252
    7. '               ' → logprob: -10.00487232208252
    8. ' (' → logprob: -10.25487232208252
    9. ',
' → logprob: -10.87987232208252
    10. '                   ' → logprob: -11.00487232208252

Token 836: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18861328065395355
    2. '(e' → logprob: -2.063613176345825
    3. ',(' → logprob: -3.313613176345825
    4. '(' → logprob: -5.938613414764404
    5. ' (' → logprob: -6.063613414764404
    6. '((' → logprob: -7.313613414764404
    7. ',e' → logprob: -7.813613414764404
    8. ' ,' → logprob: -7.813613414764404
    9. ')' → logprob: -7.938613414764404
    10. '.append' → logprob: -8.438612937927246

Token 837: 'f' (ID: 69)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.003107368713244796
    2. '(' → logprob: -6.62810754776001
    3. 'e' → logprob: -6.62810754776001
    4. ' (' → logprob: -8.378107070922852
    5. ',' → logprob: -8.628107070922852
    6. ',e' → logprob: -10.378107070922852
    7. ')' → logprob: -11.378107070922852
    8. ' e' → logprob: -13.003107070922852
    9. '(
' → logprob: -13.003107070922852
    10. ')e' → logprob: -14.253107070922852

Token 838: 'utur' (ID: 75719)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5725255608558655
    2. ',e' → logprob: -1.3225255012512207
    3. ',' → logprob: -1.9475255012512207
    4. '(e' → logprob: -4.197525501251221
    5. ''e' → logprob: -5.072525501251221
    6. 'or' → logprob: -6.697525501251221
    7. ')' → logprob: -6.822525501251221
    8. ')e' → logprob: -7.197525501251221
    9. ' e' → logprob: -8.072525978088379
    10. '```' → logprob: -8.822525978088379

Token 839: ' sommet' (ID: 130502)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03405976668000221
    2. 'e' → logprob: -4.284060001373291
    3. ',e' → logprob: -4.284060001373291
    4. '(e' → logprob: -5.909060001373291
    5. ' ,' → logprob: -6.159060001373291
    6. 'node' → logprob: -8.159059524536133
    7. ')' → logprob: -8.784059524536133
    8. ' e' → logprob: -9.034059524536133
    9. ',node' → logprob: -9.159059524536133
    10. 'vertex' → logprob: -9.534059524536133

Token 840: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018268341955263168
    2. ',e' → logprob: -9.25018310546875
    3. ' ,' → logprob: -10.25018310546875
    4. ')' → logprob: -10.62518310546875
    5. '),' → logprob: -11.37518310546875
    6. 'e' → logprob: -11.50018310546875
    7. '               ' → logprob: -13.50018310546875
    8. '                   ' → logprob: -14.12518310546875
    9. '```' → logprob: -14.25018310546875
    10. '           ' → logprob: -14.87518310546875

Token 841: ' traiter' (ID: 105852)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.6883691549301147
    2. ' visiter' → logprob: -2.1883692741394043
    3. 'vis' → logprob: -2.3133692741394043
    4. 'trait' → logprob: -2.6883692741394043
    5. 'assign' → logprob: -3.0633692741394043
    6. 'color' → logprob: -3.1883692741394043
    7. 'visit' → logprob: -3.6883692741394043
    8. ' traiter' → logprob: -3.8133692741394043
    9. 'visited' → logprob: -4.188369274139404
    10. 'aff' → logprob: -4.313369274139404

Token 842: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006227265694178641
    2. ' ,' → logprob: -7.875622749328613
    3. ',e' → logprob: -9.375622749328613
    4. '(e' → logprob: -9.625622749328613
    5. ',(' → logprob: -10.250622749328613
    6. '               ' → logprob: -10.875622749328613
    7. ')' → logprob: -11.000622749328613
    8. '                   ' → logprob: -11.500622749328613
    9. '),' → logprob: -13.000622749328613
    10. ' (' → logprob: -13.125622749328613

Token 843: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00550718791782856
    2. '               ' → logprob: -6.630506992340088
    3. ',(' → logprob: -6.755506992340088
    4. '                   ' → logprob: -7.130506992340088
    5. ' ,' → logprob: -7.505506992340088
    6. '(e' → logprob: -8.005507469177246
    7. ',e' → logprob: -8.630507469177246
    8. ')' → logprob: -8.630507469177246
    9. ',q' → logprob: -8.630507469177246
    10. ' (' → logprob: -8.880507469177246

Token 844: ' '' (ID: 461)
  Prédit: '(now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(now' → logprob: -9.388769103679806e-05
    2. ' (' → logprob: -9.500093460083008
    3. '[now' → logprob: -11.625093460083008
    4. 'now' → logprob: -12.375093460083008
    5. '(current' → logprob: -13.375093460083008
    6. '(' → logprob: -13.625093460083008
    7. '(no' → logprob: -13.625093460083008
    8. ' now' → logprob: -14.250093460083008
    9. '(next' → logprob: -14.500093460083008
    10. '(n' → logprob: -15.125093460083008

Token 845: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.006021349225193262
    2. '(now' → logprob: -5.131021499633789
    3. ' now' → logprob: -9.381021499633789
    4. '[now' → logprob: -11.881021499633789
    5. 'nown' → logprob: -14.381021499633789
    6. '	now' → logprob: -15.256021499633789
    7. ' (' → logprob: -15.506021499633789
    8. '.now' → logprob: -15.881021499633789
    9. '(' → logprob: -16.13102149963379
    10. '_now' → logprob: -16.50602149963379

Token 846: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. '[' → logprob: -18.875
    3. ' N' → logprob: -19.0
    4. ',' → logprob: -19.0
    5. '<|end|>' → logprob: -19.0
    6. '(' → logprob: -19.125
    7. '#' → logprob: -19.125
    8. '=' → logprob: -19.5
    9. '(N' → logprob: -19.75
    10. 'n' → logprob: -20.125

Token 847: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0384603887796402
    2. ',' → logprob: -3.4134604930877686
    3. '(now' → logprob: -6.2884602546691895
    4. '(e' → logprob: -7.1634602546691895
    5. '(' → logprob: -7.5384602546691895
    6. ' )' → logprob: -7.5384602546691895
    7. '))' → logprob: -8.913460731506348
    8. '),' → logprob: -9.038460731506348
    9. 'to' → logprob: -9.163460731506348
    10. '(n' → logprob: -9.288460731506348

Token 848: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19637037813663483
    2. ')' → logprob: -2.0713703632354736
    3. '               ' → logprob: -4.571370601654053
    4. 'to' → logprob: -4.571370601654053
    5. ' à' → logprob: -5.071370601654053
    6. ' (' → logprob: -5.321370601654053
    7. '(' → logprob: -5.446370601654053
    8. ' to' → logprob: -5.571370601654053
    9. ' ,' → logprob: -5.821370601654053
    10. ',q' → logprob: -5.821370601654053

Token 849: 'le' (ID: 282)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0028238967061042786
    2. ' now' → logprob: -5.877823829650879
    3. ' maintenant' → logprob: -11.502823829650879
    4. '(now' → logprob: -12.502823829650879
    5. 'nown' → logprob: -12.877823829650879
    6. 'maint' → logprob: -14.002823829650879
    7. '[now' → logprob: -14.252823829650879
    8. ')' → logprob: -14.877823829650879
    9. '	now' → logprob: -15.252823829650879
    10. 'e' → logprob: -16.002824783325195

Token 850: ' parent' (ID: 5980)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0007255369564518332
    2. ' now' → logprob: -7.250725746154785
    3. '[now' → logprob: -12.125725746154785
    4. 'current' → logprob: -12.500725746154785
    5. 'maint' → logprob: -13.625725746154785
    6. '(now' → logprob: -13.750725746154785
    7. 'no' → logprob: -13.875725746154785
    8. 'nown' → logprob: -14.250725746154785
    9. ' maintenant' → logprob: -14.750725746154785
    10. ')' → logprob: -14.875725746154785

Token 851: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.221884101862088e-05
    2. ' )' → logprob: -10.625092506408691
    3. 'à' → logprob: -10.750092506408691
    4. ')`' → logprob: -11.750092506408691
    5. ')
' → logprob: -11.875092506408691
    6. '))' → logprob: -12.250092506408691
    7. '```' → logprob: -12.625092506408691
    8. ' à' → logprob: -12.625092506408691
    9. 'dans' → logprob: -13.000092506408691
    10. '   ' → logprob: -13.250092506408691

Token 852: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3121226131916046
    2. ',' → logprob: -1.9371225833892822
    3. '               ' → logprob: -2.9371225833892822
    4. ' to' → logprob: -3.8121225833892822
    5. 'to' → logprob: -3.8121225833892822
    6. ',q' → logprob: -4.687122821807861
    7. '                   ' → logprob: -4.812122821807861
    8. '),' → logprob: -5.937122821807861
    9. '(q' → logprob: -6.062122821807861
    10. 'q' → logprob: -7.812122821807861

Token 853: ' la' (ID: 557)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06889756768941879
    2. ' la' → logprob: -3.3188974857330322
    3. 'la' → logprob: -4.068897724151611
    4. ' q' → logprob: -4.568897724151611
    5. 'the' → logprob: -6.068897724151611
    6. ')' → logprob: -8.443897247314453
    7. '(q' → logprob: -8.943897247314453
    8. ' the' → logprob: -9.443897247314453
    9. 'deque' → logprob: -10.068897247314453
    10. 'le' → logprob: -10.568897247314453

Token 854: ' file' (ID: 1974)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005846785381436348
    2. 'deque' → logprob: -5.630846977233887
    3. 'queue' → logprob: -6.255846977233887
    4. ' queue' → logprob: -8.380846977233887
    5. 'que' → logprob: -9.880846977233887
    6. ' deque' → logprob: -10.130846977233887
    7. ' q' → logprob: -13.005846977233887
    8. 'de' → logprob: -15.130846977233887
    9. 'dq' → logprob: -15.130846977233887
    10. ')' → logprob: -15.130846977233887

Token 855: '
' (ID: 198)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.11826873570680618
    2. '               ' → logprob: -3.1182687282562256
    3. '(' → logprob: -3.3682687282562256
    4. ' (' → logprob: -3.7432687282562256
    5. 'q' → logprob: -6.118268966674805
    6. '(n' → logprob: -6.243268966674805
    7. '                   ' → logprob: -6.868268966674805
    8. '.' → logprob: -7.618268966674805
    9. ',' → logprob: -7.868268966674805
    10. ')' → logprob: -7.993268966674805

Token 856: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22125764191150665
    2. '(q' → logprob: -2.3462576866149902
    3. ' (' → logprob: -2.7212576866149902
    4. '                   ' → logprob: -3.7212576866149902
    5. '                       ' → logprob: -5.97125768661499
    6. ')' → logprob: -6.09625768661499
    7. '(' → logprob: -6.47125768661499
    8. ' q' → logprob: -6.47125768661499
    9. 'q' → logprob: -6.59625768661499
    10. '           ' → logprob: -7.09625768661499

Token 857: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -2.696889623621246e-06
    2. ' q' → logprob: -13.00000286102295
    3. '                   ' → logprob: -15.50000286102295
    4. '               ' → logprob: -16.375001907348633
    5. '	q' → logprob: -17.125001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '                       ' → logprob: -19.250001907348633
    8. '           ' → logprob: -20.500001907348633
    9. '       ' → logprob: -21.000001907348633
    10. '(q' → logprob: -21.125001907348633

Token 858: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.36574100604048e-06
    2. '.' → logprob: -12.500004768371582
    3. 'append' → logprob: -15.250004768371582
    4. '.enqueue' → logprob: -15.750004768371582
    5. ').' → logprob: -16.375003814697266
    6. '.extend' → logprob: -17.500003814697266
    7. '.app' → logprob: -17.625003814697266
    8. '.Append' → logprob: -17.875003814697266
    9. ' .' → logprob: -18.125003814697266
    10. '.put' → logprob: -19.500003814697266

Token 859: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.704065213445574e-05
    2. '(' → logprob: -10.125046730041504
    3. '(e' → logprob: -12.500046730041504
    4. ' (' → logprob: -13.000046730041504
    5. ' ((' → logprob: -14.125046730041504
    6. '(
' → logprob: -16.50004768371582
    7. '```' → logprob: -18.50004768371582
    8. '   ' → logprob: -18.62504768371582
    9. ' ' → logprob: -18.87504768371582
    10. '(E' → logprob: -19.87504768371582

Token 860: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1472419600977446e-06
    2. ' e' → logprob: -13.750000953674316
    3. '(e' → logprob: -17.250001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '	e' → logprob: -18.750001907348633
    6. ')e' → logprob: -18.875001907348633
    7. 'ｅ' → logprob: -21.500001907348633
    8. 'е' → logprob: -21.500001907348633
    9. ''e' → logprob: -21.750001907348633
    10. '```' → logprob: -21.750001907348633

Token 861: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016934791579842567
    2. ',e' → logprob: -4.141934871673584
    3. 'e' → logprob: -7.141934871673584
    4. ' ,' → logprob: -9.391934394836426
    5. '(e' → logprob: -11.141934394836426
    6. ' e' → logprob: -12.641934394836426
    7. ',
' → logprob: -13.391934394836426
    8. '[' → logprob: -13.391934394836426
    9. ')' → logprob: -13.766934394836426
    10. '[e' → logprob: -14.016934394836426

Token 862: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0015035520773380995
    2. ' now' → logprob: -6.5015034675598145
    3. 'nown' → logprob: -14.626503944396973
    4. '	now' → logprob: -14.876503944396973
    5. '[now' → logprob: -15.126503944396973
    6. '   ' → logprob: -16.751502990722656
    7. 'Now' → logprob: -17.126502990722656
    8. '(now' → logprob: -17.126502990722656
    9. 'no' → logprob: -17.501502990722656
    10. 'n' → logprob: -18.376502990722656

Token 863: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -17.125
    3. '```' → logprob: -17.375
    4. ' N' → logprob: -17.5
    5. ',' → logprob: -18.125
    6. '[' → logprob: -18.375
    7. '   ' → logprob: -18.5
    8. '‌' → logprob: -18.8125
    9. '(' → logprob: -19.0
    10. '`' → logprob: -19.1875

Token 864: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002330992283532396
    2. '))
' → logprob: -9.000232696533203
    3. ')' → logprob: -9.125232696533203
    4. ')))' → logprob: -14.500232696533203
    5. ')
' → logprob: -16.875232696533203
    6. '))

' → logprob: -17.125232696533203
    7. '))
' → logprob: -17.625232696533203
    8. ' ))' → logprob: -17.875232696533203
    9. '()))' → logprob: -18.000232696533203
    10. '       ' → logprob: -19.125232696533203

Token 865: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 866: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024201376363635063
    2. 'print' → logprob: -4.399201393127441
    3. 'return' → logprob: -5.524201393127441
    4. '    
' → logprob: -5.649201393127441
    5. '
' → logprob: -6.149201393127441
    6. '```' → logprob: -6.274201393127441
    7. '<|end|>' → logprob: -10.024201393127441
    8. '``' → logprob: -11.274201393127441
    9. '#' → logprob: -12.524201393127441
    10. '  
' → logprob: -12.524201393127441

Token 867: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37626826763153076
    2. 'return' → logprob: -1.6262682676315308
    3. 'print' → logprob: -2.6262683868408203
    4. '```' → logprob: -3.8762683868408203
    5. '    
' → logprob: -4.37626838684082
    6. '
' → logprob: -4.50126838684082
    7. '``' → logprob: -9.87626838684082
    8. ' return' → logprob: -10.12626838684082
    9. '#' (adapté à ' #') → logprob: -10.37626838684082
    10. '  
' → logprob: -10.62626838684082

Token 868: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.080963092041202e-06
    2. '```' → logprob: -12.875004768371582
    3. '
' → logprob: -13.750004768371582
    4. '   ' → logprob: -14.000004768371582
    5. '#' → logprob: -15.375004768371582
    6. '#print' → logprob: -15.750004768371582
    7. 'return' → logprob: -16.0000057220459
    8. ' print' → logprob: -16.2500057220459
    9. '    
' → logprob: -16.7500057220459
    10. '``' → logprob: -17.0000057220459

Token 869: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.29081711173057556
    2. 'print' → logprob: -1.540817141532898
    3. 'ich' → logprob: -4.0408172607421875
    4. '#' → logprob: -5.1658172607421875
    5. 'iche' → logprob: -5.2908172607421875
    6. '   ' → logprob: -5.5408172607421875
    7. 'ichage' → logprob: -6.0408172607421875
    8. '#print' → logprob: -6.6658172607421875
    9. 'f' → logprob: -7.4158172607421875
    10. '```' → logprob: -7.4158172607421875

Token 870: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.002225310541689396
    2. 'ans' → logprob: -6.127225399017334
    3. '(' → logprob: -10.252224922180176
    4. '()' → logprob: -13.627224922180176
    5. ' ans' → logprob: -14.002224922180176
    6. '(
' → logprob: -14.377224922180176
    7. '   ' → logprob: -14.877224922180176
    8. '(sum' → logprob: -15.002224922180176
    9. '0' → logprob: -15.252224922180176
    10. '(f' → logprob: -15.377224922180176

Token 871: ' somme' (ID: 64484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.23675228655338287
    2. '(ans' → logprob: -1.7367522716522217
    3. 'print' → logprob: -3.3617522716522217
    4. ' ans' → logprob: -10.6117525100708
    5. 'sum' → logprob: -12.2367525100708
    6. '(' → logprob: -12.3617525100708
    7. '0' → logprob: -13.1117525100708
    8. 'answer' → logprob: -13.1117525100708
    9. '	ans' → logprob: -13.4867525100708
    10. '(
' → logprob: -13.4867525100708

Token 872: ' totale' (ID: 52898)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02329416014254093
    2. '(' → logprob: -3.77329421043396
    3. 'ans' → logprob: -10.273294448852539
    4. ' (' → logprob: -12.523294448852539
    5. '()' → logprob: -12.773294448852539
    6. '   ' → logprob: -12.898294448852539
    7. '(
' → logprob: -13.023294448852539
    8. 'print' → logprob: -13.898294448852539
    9. '(`' → logprob: -14.273294448852539
    10. '(answer' → logprob: -15.523294448852539

Token 873: ' des' (ID: 731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.40346962213516235
    2. '   ' → logprob: -1.1534695625305176
    3. '(ans' → logprob: -4.528469562530518
    4. '(' → logprob: -5.403469562530518
    5. '()' → logprob: -7.403469562530518
    6. '(print' → logprob: -7.903469562530518
    7. 'ans' → logprob: -9.778470039367676
    8. ' print' → logprob: -9.903470039367676
    9. '```' → logprob: -10.528470039367676
    10. ')' → logprob: -11.028470039367676

Token 874: ' valeurs' (ID: 73668)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014199115335941315
    2. '(ans' → logprob: -4.514199256896973
    3. ' ans' → logprob: -5.764199256896973
    4. 'Color' → logprob: -12.639199256896973
    5. 'color' → logprob: -13.514199256896973
    6. '	ans' → logprob: -13.764199256896973
    7. '(
' → logprob: -14.139199256896973
    8. ')' → logprob: -14.764199256896973
    9. '(' → logprob: -15.264199256896973
    10. 'assigned' → logprob: -15.639199256896973

Token 875: ' assign' (ID: 14975)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6628181338310242
    2. '(ans' → logprob: -1.412818193435669
    3. '   ' → logprob: -1.662818193435669
    4. '(' → logprob: -3.037818193435669
    5. '(print' → logprob: -6.16281795501709
    6. '()' → logprob: -7.03781795501709
    7. '```' → logprob: -8.41281795501709
    8. 'ans' → logprob: -8.78781795501709
    9. ' print' → logprob: -10.03781795501709
    10. '(
' → logprob: -10.16281795501709

Token 876: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.04118144512176514
    2. 'ée' → logprob: -4.041181564331055
    3. 'es' → logprob: -4.166181564331055
    4. 'ies' → logprob: -6.041181564331055
    5. '(' → logprob: -6.791181564331055
    6. '()' → logprob: -6.916181564331055
    7. 'nées' → logprob: -6.916181564331055
    8. 'print' → logprob: -8.041181564331055
    9. 'e' → logprob: -8.166181564331055
    10. 'ees' → logprob: -8.291181564331055

Token 877: ' aux' (ID: 5850)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34905725717544556
    2. '(ans' → logprob: -1.3490571975708008
    3. '(' → logprob: -4.349057197570801
    4. '()' → logprob: -4.599057197570801
    5. '(print' → logprob: -5.099057197570801
    6. '   ' → logprob: -5.474057197570801
    7. '()
' → logprob: -6.849057197570801
    8. '(
' → logprob: -8.2240571975708
    9. 'ans' → logprob: -8.3490571975708
    10. '("\' → logprob: -9.3490571975708

Token 878: ' somm' (ID: 44830)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.007994833402335644
    2. ' Color' → logprob: -5.132994651794434
    3. 'vertices' → logprob: -7.257994651794434
    4. 'nodes' → logprob: -7.882994651794434
    5. '(Color' → logprob: -8.382994651794434
    6. 's' → logprob: -9.007994651794434
    7. ' nodes' → logprob: -9.132994651794434
    8. 'range' → logprob: -9.507994651794434
    9. 'color' → logprob: -9.507994651794434
    10. ' vertices' → logprob: -10.007994651794434

Token 879: 'ets' (ID: 1719)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.9630750417709351
    2. 'és' → logprob: -1.588075041770935
    3. 'ets' → logprob: -1.713075041770935
    4. 'ents' → logprob: -1.713075041770935
    5. 'ts' → logprob: -3.7130751609802246
    6. 'ats' → logprob: -4.338075160980225
    7. 'nts' → logprob: -4.838075160980225
    8. 'aux' → logprob: -6.713075160980225
    9. 'ès' → logprob: -7.213075160980225
    10. 'ots' → logprob: -7.213075160980225

Token 880: ' non' (ID: 2893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023846877738833427
    2. '   ' → logprob: -6.752384662628174
    3. '()' → logprob: -7.877384662628174
    4. ')' → logprob: -8.002385139465332
    5. '()
' → logprob: -8.252385139465332
    6. '(' → logprob: -9.877385139465332
    7. '(ans' → logprob: -10.127385139465332
    8. ')
' → logprob: -10.252385139465332
    9. ' print' → logprob: -10.377385139465332
    10. '(print' → logprob: -10.502385139465332

Token 881: ' rac' (ID: 12334)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.14468137919902802
    2. '0' → logprob: -2.394681453704834
    3. ' rac' → logprob: -3.144681453704834
    4. 'root' → logprob: -8.269680976867676
    5. '   ' → logprob: -9.519680976867676
    6. '```' → logprob: -10.769680976867676
    7. 'ra' → logprob: -11.019680976867676
    8. 'r' → logprob: -11.144680976867676
    9. ' ' → logprob: -11.269680976867676
    10. '`' → logprob: -11.894680976867676

Token 882: 'ines' (ID: 2028)
  Prédit: 'ines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.19527080655097961
    2. 'es' → logprob: -2.5702707767486572
    3. 'e' → logprob: -2.8202707767486572
    4. 'ine' → logprob: -3.9452707767486572
    5. '```' → logprob: -5.070271015167236
    6. '``' → logprob: -5.320271015167236
    7. '
' → logprob: -5.945271015167236
    8. 'tes' → logprob: -6.320271015167236
    9. 'és' → logprob: -6.570271015167236
    10. '`' → logprob: -7.570271015167236

Token 883: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.490809417096898e-05
    2. '
' → logprob: -10.875055313110352
    3. ' print' → logprob: -11.375055313110352
    4. '```' → logprob: -11.625055313110352
    5. ')
' → logprob: -11.750055313110352
    6. '   ' → logprob: -12.125055313110352
    7. ')' → logprob: -13.500055313110352
    8. '``' → logprob: -15.000055313110352
    9. '\n' → logprob: -15.375055313110352
    10. '    
' → logprob: -15.750055313110352

Token 884: 'acc' (ID: 3717)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.031053991988301277
    2. '(ans' → logprob: -4.0310540199279785
    3. 'print' → logprob: -4.5310540199279785
    4. ')' → logprob: -7.1560540199279785
    5. ')
' → logprob: -7.1560540199279785
    6. '   ' → logprob: -8.15605354309082
    7. '
' → logprob: -8.78105354309082
    8. ' ans' → logprob: -10.03105354309082
    9. '	ans' → logprob: -13.28105354309082
    10. 'f' → logprob: -13.40605354309082

Token 885: 'umulate' (ID: 134636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26523086428642273
    2. 'print' → logprob: -2.265230894088745
    3. 'int' → logprob: -2.515230894088745
    4. ' print' → logprob: -3.890230894088745
    5. ')
' → logprob: -4.640230655670166
    6. ')' → logprob: -5.390230655670166
    7. 'ans' → logprob: -5.765230655670166
    8. '(ans' → logprob: -6.515230655670166
    9. '#print' → logprob: -6.515230655670166
    10. '    ' → logprob: -6.890230655670166

Token 886: 'ur' (ID: 330)
  Prédit: 'ated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.29413798451423645
    2. 'ate' → logprob: -1.669137954711914
    3. 'print' → logprob: -3.419137954711914
    4. '   ' → logprob: -5.044137954711914
    5. 'é' → logprob: -5.169137954711914
    6. 'ed' → logprob: -5.294137954711914
    7. 'e' → logprob: -5.419137954711914
    8. ')' → logprob: -5.544137954711914
    9. 'ée' → logprob: -6.169137954711914
    10. 'ateur' → logprob: -6.419137954711914

Token 887: ' '' (ID: 461)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07424618303775787
    2. ')' → logprob: -2.6992461681365967
    3. 'print' → logprob: -6.074246406555176
    4. '   ' → logprob: -7.324246406555176
    5. ',' → logprob: -7.699246406555176
    6. '()' → logprob: -8.324246406555176
    7. '())
' → logprob: -8.324246406555176
    8. '(ans' → logprob: -8.699246406555176
    9. '()
' → logprob: -8.949246406555176
    10. ')
' → logprob: -9.699246406555176

Token 888: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0182265043258667
    2. '(ans' → logprob: -4.018226623535156
    3. ' ans' → logprob: -9.518226623535156
    4. ')' → logprob: -13.643226623535156
    5. '	ans' → logprob: -13.643226623535156
    6. 'print' → logprob: -14.768226623535156
    7. '_ans' → logprob: -15.643226623535156
    8. ')
' → logprob: -16.893226623535156
    9. '   ' → logprob: -17.018226623535156
    10. 'Ans' → logprob: -17.768226623535156

Token 889: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5765212178230286
    2. ')' → logprob: -0.8265212178230286
    3. ')
' → logprob: -8.326520919799805
    4. ',' → logprob: -8.451520919799805
    5. ' )
' → logprob: -9.951520919799805
    6. '   ' → logprob: -10.951520919799805
    7. ' )' → logprob: -11.201520919799805
    8. 'print' → logprob: -11.326520919799805
    9. '())
' → logprob: -11.576520919799805
    10. '()' → logprob: -11.826520919799805

Token 890: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10068429261445999
    2. '   ' → logprob: -2.350684404373169
    3. '
' → logprob: -8.47568416595459
    4. ' print' → logprob: -8.60068416595459
    5. '```' → logprob: -9.47568416595459
    6. '    
' → logprob: -12.35068416595459
    7. '	print' → logprob: -13.60068416595459
    8. '``' → logprob: -13.60068416595459
    9. '`' → logprob: -15.10068416595459
    10. '\n' → logprob: -15.47568416595459

Token 891: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.101369894575328e-05
    2. ' print' → logprob: -10.000081062316895
    3. '   ' → logprob: -10.250081062316895
    4. '```' → logprob: -15.875081062316895
    5. '
' → logprob: -16.875080108642578
    6. '	print' → logprob: -19.500080108642578
    7. '    
' → logprob: -19.875080108642578
    8. '`' → logprob: -21.500080108642578
    9. '``' → logprob: -22.250080108642578
    10. 'sys' → logprob: -22.500080108642578

Token 892: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.000340945553034544
    2. '(' → logprob: -8.000341415405273
    3. '()' → logprob: -12.875341415405273
    4. ' (' → logprob: -12.875341415405273
    5. '('' → logprob: -15.625341415405273
    6. 'ans' → logprob: -17.000341415405273
    7. '("' → logprob: -17.125341415405273
    8. '(
' → logprob: -17.500341415405273
    9. '(sum' → logprob: -17.875341415405273
    10. '(f' → logprob: -18.125341415405273

Token 893: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.664371848164592e-05
    2. ',' → logprob: -11.500016212463379
    3. '()' → logprob: -12.875016212463379
    4. ' )' → logprob: -13.000016212463379
    5. '())' → logprob: -14.625016212463379
    6. ')
' → logprob: -14.750016212463379
    7. '))' → logprob: -15.750016212463379
    8. ',)' → logprob: -15.750016212463379
    9. ')`' → logprob: -15.750016212463379
    10. '+' → logprob: -15.875016212463379

Token 894: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0300630871206522
    2. '    
' → logprob: -4.155063152313232
    3. 'Color' → logprob: -5.530063152313232
    4. 'print' → logprob: -5.655063152313232
    5. '
' → logprob: -5.655063152313232
    6. '<|end|>' → logprob: -6.905063152313232
    7. '```' → logprob: -7.155063152313232
    8. '  
' → logprob: -7.530063152313232
    9. '	Color' → logprob: -9.280062675476074
    10. '\n' → logprob: -9.655062675476074

Token 895: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20236967504024506
    2. '   ' → logprob: -1.7023696899414062
    3. 'for' → logprob: -7.327369689941406
    4. '```' → logprob: -8.202369689941406
    5. ' print' → logprob: -11.077369689941406
    6. '    
' → logprob: -12.202369689941406
    7. '	print' → logprob: -13.827369689941406
    8. '#' (adapté à ' #') → logprob: -14.202369689941406
    9. '``' → logprob: -14.827369689941406
    10. 'return' → logprob: -14.827369689941406

Token 896: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3663994371891022
    2. '   ' → logprob: -1.2413994073867798
    3. 'for' → logprob: -4.86639928817749
    4. 'return' → logprob: -5.36639928817749
    5. '#' → logprob: -5.49139928817749
    6. 'if' → logprob: -6.99139928817749
    7. ' print' → logprob: -8.866399765014648
    8. ' for' → logprob: -9.491399765014648
    9. '#print' → logprob: -9.491399765014648
    10. '```' → logprob: -9.866399765014648

Token 897: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -1.323307991027832
    2. 'ich' → logprob: -1.448307991027832
    3. 'er' → logprob: -1.823307991027832
    4. 'print' → logprob: -1.948307991027832
    5. '(Color' → logprob: -2.448307991027832
    6. '()' → logprob: -4.073307991027832
    7. '(' → logprob: -4.073307991027832
    8. 'iche' → logprob: -5.073307991027832
    9. '#' → logprob: -5.073307991027832
    10. 'ic' → logprob: -5.198307991027832

Token 898: ' les' (ID: 1341)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.2890274226665497
    2. '('' → logprob: -1.539027452468872
    3. '("' → logprob: -3.664027452468872
    4. '(' → logprob: -4.539027214050293
    5. '(Color' → logprob: -10.164027214050293
    6. '()' → logprob: -10.164027214050293
    7. 'Color' → logprob: -12.039027214050293
    8. '(*(' → logprob: -12.039027214050293
    9. '(
' → logprob: -12.164027214050293
    10. '(*)' → logprob: -12.789027214050293

Token 899: ' valeurs' (ID: 73668)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.15154312551021576
    2. '(' → logprob: -2.776543140411377
    3. '('' → logprob: -2.776543140411377
    4. '("' → logprob: -4.401543140411377
    5. '()' → logprob: -5.901543140411377
    6. 'Color' → logprob: -7.401543140411377
    7. '(Color' → logprob: -8.276542663574219
    8. '*' → logprob: -8.651542663574219
    9. '(
' → logprob: -10.151542663574219
    10. '(*)' → logprob: -11.776542663574219

Token 900: ' attrib' (ID: 72186)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.866041898727417
    2. '('' → logprob: -0.991041898727417
    3. '("' → logprob: -2.241041898727417
    4. '(' → logprob: -2.366041898727417
    5. '()' → logprob: -5.366042137145996
    6. '(Color' → logprob: -5.866042137145996
    7. 'Color' → logprob: -8.241042137145996
    8. '(
' → logprob: -10.116042137145996
    9. '('\' → logprob: -10.241042137145996
    10. '(*)' → logprob: -10.241042137145996

Token 901: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005085391458123922
    2. 'ué' → logprob: -5.380085468292236
    3. 'uée' → logprob: -7.880085468292236
    4. 'ues' → logprob: -10.255084991455078
    5. ' u' → logprob: -10.880084991455078
    6. 'uer' → logprob: -11.630084991455078
    7. 'ées' → logprob: -11.630084991455078
    8. 'ue' → logprob: -11.880084991455078
    9. '[u' → logprob: -13.380084991455078
    10. '   ' → logprob: -13.630084991455078

Token 902: 'ées' (ID: 5161)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.005318192765116692
    2. 'ées' → logprob: -5.5053181648254395
    3. 'és' → logprob: -6.8803181648254395
    4. 'é' → logprob: -8.880318641662598
    5. 's' → logprob: -10.130318641662598
    6. 'e' → logprob: -11.130318641662598
    7. ' es' → logprob: -11.505318641662598
    8. ' ' → logprob: -13.630318641662598
    9. '_es' → logprob: -13.630318641662598
    10. '```' → logprob: -13.630318641662598

Token 903: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.910797655582428
    2. '('' → logprob: -1.2857975959777832
    3. '("' → logprob: -1.9107975959777832
    4. '()' → logprob: -2.535797595977783
    5. '(*' → logprob: -2.910797595977783
    6. '('\' → logprob: -3.910797595977783
    7. '("\' → logprob: -4.785797595977783
    8. '()
' → logprob: -5.285797595977783
    9. '(Color' → logprob: -5.410797595977783
    10. '(
' → logprob: -6.660797595977783

Token 904: ' chaque' (ID: 21194)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.004787057172507048
    2. ''' → logprob: -6.629786968231201
    3. '"' → logprob: -7.004786968231201
    4. '*' → logprob: -7.254786968231201
    5. '(Color' → logprob: -7.254786968231201
    6. ' Color' → logprob: -8.00478744506836
    7. '(*' → logprob: -8.12978744506836
    8. '('' → logprob: -9.25478744506836
    9. 'color' → logprob: -9.37978744506836
    10. '(' → logprob: -9.37978744506836

Token 905: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.425471693277359
    2. 'Color' → logprob: -1.5504716634750366
    3. 's' → logprob: -2.925471782684326
    4. ' sommet' → logprob: -2.925471782684326
    5. 'node' → logprob: -4.425471782684326
    6. 'vertex' → logprob: -5.050471782684326
    7. 'summ' → logprob: -5.550471782684326
    8. ' Color' → logprob: -6.425471782684326
    9. 'color' → logprob: -6.550471782684326
    10. ' somm' → logprob: -7.675471782684326

Token 906: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5687246322631836
    2. 'print' → logprob: -1.8187246322631836
    3. '()' → logprob: -1.9437246322631836
    4. '('\' → logprob: -3.0687246322631836
    5. '()
' → logprob: -3.3187246322631836
    6. '("\' → logprob: -4.193724632263184
    7. '(' → logprob: -4.443724632263184
    8. '(Color' → logprob: -4.943724632263184
    9. '('' → logprob: -5.068724632263184
    10. '("' → logprob: -6.818724632263184

Token 907: ' sous' (ID: 14487)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04808430373668671
    2. ''' → logprob: -3.548084259033203
    3. '"' → logprob: -4.048084259033203
    4. ' *' → logprob: -7.798084259033203
    5. ')' → logprob: -9.798084259033203
    6. '*"' → logprob: -9.798084259033203
    7. 'sep' → logprob: -10.298084259033203
    8. ' '' → logprob: -10.423084259033203
    9. '   ' → logprob: -10.423084259033203
    10. 'print' → logprob: -10.548084259033203

Token 908: ' forme' (ID: 27450)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8257837891578674
    2. 'la' → logprob: -0.8257837891578674
    3. ''' → logprob: -2.8257837295532227
    4. 'forme' → logprob: -3.7007837295532227
    5. 'le' → logprob: -4.200783729553223
    6. 'une' → logprob: -5.075783729553223
    7. 'form' → logprob: -5.575783729553223
    8. ' forme' → logprob: -5.825783729553223
    9. ' la' → logprob: -6.075783729553223
    10. 'c' → logprob: -6.700783729553223

Token 909: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6606494188308716
    2. 'd' → logprob: -1.1606494188308716
    3. ''' → logprob: -2.035649299621582
    4. ' de' → logprob: -4.035649299621582
    5. 'de' → logprob: -4.160649299621582
    6. '('' → logprob: -6.410649299621582
    7. 'join' → logprob: -7.035649299621582
    8. '*' → logprob: -7.160649299621582
    9. ''d' → logprob: -7.535649299621582
    10. ' join' → logprob: -8.410649299621582

Token 910: ' chaîne' (ID: 89288)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0053378744050860405
    2. '"' → logprob: -5.255337715148926
    3. 'print' → logprob: -9.755337715148926
    4. '*' → logprob: -10.755337715148926
    5. ' '' → logprob: -11.255337715148926
    6. ''une' → logprob: -12.755337715148926
    7. ''un' → logprob: -13.880337715148926
    8. ''s' → logprob: -13.880337715148926
    9. 'str' → logprob: -13.880337715148926
    10. ' print' → logprob: -14.255337715148926

Token 911: ' d' (ID: 272)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5654241442680359
    2. ''' → logprob: -1.5654242038726807
    3. '"' → logprob: -2.1904242038726807
    4. '(' → logprob: -2.8154242038726807
    5. '("' → logprob: -3.0654242038726807
    6. 'join' → logprob: -6.440423965454102
    7. '()' → logprob: -7.190423965454102
    8. '(*' → logprob: -7.190423965454102
    9. '(
' → logprob: -8.065423965454102
    10. 'print' → logprob: -8.565423965454102

Token 912: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7772763967514038
    2. ''' → logprob: -1.0272763967514038
    3. ''e' → logprob: -2.7772765159606934
    4. 'es' → logprob: -3.2772765159606934
    5. ''ex' → logprob: -3.7772765159606934
    6. ''espace' → logprob: -3.7772765159606934
    7. ''un' → logprob: -4.902276515960693
    8. 'ecode' → logprob: -5.277276515960693
    9. ''es' → logprob: -5.527276515960693
    10. ''esp' → logprob: -5.527276515960693

Token 913: 'iers' (ID: 11012)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.46002453565597534
    2. ''' → logprob: -2.21002459526062
    3. 'er' → logprob: -3.21002459526062
    4. 'print' → logprob: -3.46002459526062
    5. 'e' → logprob: -3.83502459526062
    6. 'join' → logprob: -3.83502459526062
    7. '"' → logprob: -4.085024356842041
    8. 'r' → logprob: -4.210024356842041
    9. 'erg' → logprob: -4.335024356842041
    10. 'code' → logprob: -4.460024356842041

Token 914: ' sépar' (ID: 97160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1485220193862915
    2. '('' → logprob: -2.523521900177002
    3. '("' → logprob: -3.648521900177002
    4. ''' → logprob: -5.023521900177002
    5. '"' → logprob: -5.148521900177002
    6. '()' → logprob: -5.398521900177002
    7. '('\' → logprob: -5.773521900177002
    8. '("\' → logprob: -6.023521900177002
    9. ' print' → logprob: -6.023521900177002
    10. '   ' → logprob: -6.023521900177002

Token 915: 'és' (ID: 1756)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.5210727453231812
    2. ' par' → logprob: -2.2710728645324707
    3. 'es' → logprob: -2.3960728645324707
    4. 'par' → logprob: -2.7710728645324707
    5. 'ée' → logprob: -3.0210728645324707
    6. 'é' → logprob: -3.5210728645324707
    7. 'e' → logprob: -4.021072864532471
    8. ' by' → logprob: -4.146072864532471
    9. 'ées' → logprob: -4.146072864532471
    10. 'space' → logprob: -5.021072864532471

Token 916: ' par' (ID: 686)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15598458051681519
    2. '"' → logprob: -2.90598464012146
    3. '('' → logprob: -3.03098464012146
    4. ' by' → logprob: -3.90598464012146
    5. 'by' → logprob: -4.280984401702881
    6. 'print' → logprob: -5.530984401702881
    7. '("' → logprob: -7.030984401702881
    8. '(' → logprob: -7.655984401702881
    9. '`' → logprob: -8.280984878540039
    10. '```' → logprob: -8.280984878540039

Token 917: ' espace' (ID: 66004)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06579088419675827
    2. ''espace' → logprob: -4.19079065322876
    3. 'space' → logprob: -4.31579065322876
    4. ' espaces' → logprob: -4.56579065322876
    5. ''esp' → logprob: -4.94079065322876
    6. 'es' → logprob: -5.19079065322876
    7. 'esp' → logprob: -5.44079065322876
    8. 'spaces' → logprob: -5.81579065322876
    9. '"' → logprob: -6.56579065322876
    10. ' espace' → logprob: -6.81579065322876

Token 918: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004989674314856529
    2. ' print' → logprob: -5.3799896240234375
    3. '"' → logprob: -8.879989624023438
    4. '   ' → logprob: -9.504989624023438
    5. '
' → logprob: -9.879989624023438
    6. ',' → logprob: -10.379989624023438
    7. ')' → logprob: -10.379989624023438
    8. ''' → logprob: -11.004989624023438
    9. ')
' → logprob: -11.879989624023438
    10. '('' → logprob: -12.754989624023438

Token 919: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002671768015716225
    2. ' print' → logprob: -8.375267028808594
    3. '
' → logprob: -10.500267028808594
    4. '   ' → logprob: -11.750267028808594
    5. '    
' → logprob: -15.125267028808594
    6. '"' → logprob: -15.750267028808594
    7. '```' → logprob: -15.750267028808594
    8. '  
' → logprob: -16.000267028808594
    9. ' 
' → logprob: -16.375267028808594
    10. ',' → logprob: -16.375267028808594

Token 920: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -14.75
    3. '```' → logprob: -23.75
    4. '   ' → logprob: -25.5
    5. '`' → logprob: -26.25
    6. '	print' → logprob: -27.125
    7. '
' → logprob: -27.875
    8. '    
' → logprob: -28.0
    9. ' 
' → logprob: -28.125
    10. 'Print' → logprob: -28.5

Token 921: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08073129504919052
    2. '(*' → logprob: -3.0807313919067383
    3. '("' → logprob: -3.5807313919067383
    4. '(' → logprob: -5.580731391906738
    5. '(*)' → logprob: -12.705731391906738
    6. ''' → logprob: -12.955731391906738
    7. '"' → logprob: -13.580731391906738
    8. '()' → logprob: -14.330731391906738
    9. '*' → logprob: -16.330730438232422
    10. '(*(' → logprob: -16.330730438232422

Token 922: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.054947055876255035
    2. ''' → logprob: -2.9299471378326416
    3. '*' → logprob: -9.929946899414062
    4. '"*' → logprob: -12.554946899414062
    5. ' "' → logprob: -13.179946899414062
    6. '"user' → logprob: -13.554946899414062
    7. '{}' → logprob: -13.679946899414062
    8. '""' → logprob: -13.804946899414062
    9. '"value' → logprob: -13.804946899414062
    10. '"+"' → logprob: -14.554946899414062

Token 923: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.6240566083070007e-06
    2. 'print' → logprob: -14.250001907348633
    3. ' join' → logprob: -14.375001907348633
    4. '".' → logprob: -16.125001907348633
    5. '.join' → logprob: -16.250001907348633
    6. '"' → logprob: -16.375001907348633
    7. 'jo' → logprob: -16.875001907348633
    8. 'j' → logprob: -17.500001907348633
    9. '.' → logprob: -18.500001907348633
    10. '(join' → logprob: -20.500001907348633

Token 924: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4066843092441559
    2. '(map' → logprob: -1.1566842794418335
    3. 'str' → logprob: -4.406684398651123
    4. '(str' → logprob: -4.906684398651123
    5. '[str' → logprob: -10.906683921813965
    6. ' map' → logprob: -11.906683921813965
    7. '	map' → logprob: -14.781683921813965
    8. '.map' → logprob: -15.906683921813965
    9. ' str' → logprob: -16.15668487548828
    10. ',map' → logprob: -16.90668487548828

Token 925: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.02325153350830078
    2. 'str' → logprob: -3.773251533508301
    3. ' str' → logprob: -12.8982515335083
    4. '(' → logprob: -13.5232515335083
    5. '[str' → logprob: -13.6482515335083
    6. '=str' → logprob: -14.3982515335083
    7. '```' → logprob: -15.1482515335083
    8. '	str' → logprob: -16.523250579833984
    9. ')' → logprob: -17.648250579833984
    10. ',str' → logprob: -17.773250579833984

Token 926: ',' (ID: 11)
  Prédit: '(Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Color' → logprob: -2.3795937522663735e-05
    2. ',' → logprob: -11.37502384185791
    3. 'Color' → logprob: -11.37502384185791
    4. '	Color' → logprob: -15.25002384185791
    5. ')' → logprob: -15.75002384185791
    6. '<Color' → logprob: -16.000022888183594
    7. ' Color' → logprob: -16.125022888183594
    8. '(C' → logprob: -16.625022888183594
    9. '(' → logprob: -16.625022888183594
    10. ' (' → logprob: -17.125022888183594

Token 927: ' Color' (ID: 6822)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -5.512236498361744e-07
    2. ' Color' → logprob: -14.500000953674316
    3. '(Color' → logprob: -18.375
    4. '	Color' → logprob: -18.75
    5. '_Color' → logprob: -21.25
    6. '   ' → logprob: -21.25
    7. 'C' → logprob: -21.625
    8. '<Color' → logprob: -21.625
    9. '.Color' → logprob: -22.75
    10. 'COLOR' → logprob: -23.5

Token 928: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00022403974435292184
    2. '))' → logprob: -9.000224113464355
    3. ')' → logprob: -9.375224113464355
    4. '[' → logprob: -12.250224113464355
    5. ' ' → logprob: -12.250224113464355
    6. '))))' → logprob: -12.750224113464355
    7. ')))
' → logprob: -13.125224113464355
    8. ')));' → logprob: -15.000224113464355
    9. ')))

' → logprob: -15.125224113464355
    10. '   ' → logprob: -15.750224113464355

Token 929: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 930: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 931: ' #' (ID: 1069)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.4260544776916504
    2. '```' → logprob: -1.6760544776916504
    3. '<|end|>' → logprob: -2.8010544776916504
    4. 'if' → logprob: -2.9260544776916504
    5. '
' → logprob: -3.4260544776916504
    6. '#' (adapté à ' #') → logprob: -5.17605447769165
    7. ' solve' → logprob: -5.30105447769165
    8. 'validate' → logprob: -8.176054000854492
    9. 'def' → logprob: -8.176054000854492
    10. '()' → logprob: -8.176054000854492

Token 932: ' Retour' (ID: 146830)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 933: 'ner' (ID: 1247)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 934: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.007681038696318865
    2. ' None' → logprob: -4.882680892944336
    3. 'ans' → logprob: -9.757680892944336
    4. '(None' → logprob: -11.882680892944336
    5. 'return' → logprob: -12.632680892944336
    6. '<|end|>' → logprob: -13.007680892944336
    7. ',None' → logprob: -14.257680892944336
    8. '0' → logprob: -14.257680892944336
    9. '_None' → logprob: -14.507680892944336
    10. 'none' → logprob: -14.882680892944336

Token 935: '0' (ID: 15)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011050998233258724
    2. 'None' → logprob: -4.511051177978516
    3. '(ans' → logprob: -13.636051177978516
    4. '0' → logprob: -13.761051177978516
    5. 'Color' → logprob: -14.386051177978516
    6. ' ans' → logprob: -16.011051177978516
    7. ' None' → logprob: -16.136051177978516
    8. 'none' → logprob: -17.136051177978516
    9. 'Ans' → logprob: -17.261051177978516
    10. '	ans' → logprob: -17.261051177978516

Token 936: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09217546135187149
    2. '
' → logprob: -3.5921754837036133
    3. '\n' → logprob: -4.342175483703613
    4. '<|end|>' → logprob: -4.342175483703613
    5. '0' → logprob: -4.592175483703613
    6. 'return' → logprob: -4.717175483703613
    7. ' ' → logprob: -5.592175483703613
    8. ' return' → logprob: -5.717175483703613
    9. '	return' → logprob: -6.092175483703613
    10. '\' → logprob: -6.217175483703613

Token 937: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 938: ' fin' (ID: 2131)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07262523472309113
    2. 'fin' → logprob: -3.197625160217285
    3. 'end' → logprob: -4.197625160217285
    4. ' return' → logprob: -5.697625160217285
    5. ' end' → logprob: -6.072625160217285
    6. 'None' → logprob: -6.197625160217285
    7. 'main' → logprob: -6.322625160217285
    8. 'finish' → logprob: -6.572625160217285
    9. 'final' → logprob: -7.197625160217285
    10. '0' → logprob: -7.822625160217285

Token 939: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1744838953018188
    2. '<|end|>' → logprob: -1.5494838953018188
    3. '
' → logprob: -1.7994838953018188
    4. 'return' → logprob: -2.4244837760925293
    5. '```' → logprob: -2.5494837760925293
    6. '\n' → logprob: -3.0494837760925293
    7. ' return' → logprob: -3.5494837760925293
    8. ' ' → logprob: -4.174483776092529
    9. '\' → logprob: -4.174483776092529
    10. '	return' → logprob: -4.799483776092529

Token 940: ' la' (ID: 557)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.030530208721756935
    2. ' solve' → logprob: -4.155529975891113
    3. ' ' → logprob: -4.655529975891113
    4. ' the' → logprob: -6.155529975891113
    5. 'None' → logprob: -7.280529975891113
    6. 'the' → logprob: -7.530529975891113
    7. 'def' → logprob: -7.655529975891113
    8. ' None' → logprob: -8.405529975891113
    9. ')' → logprob: -8.530529975891113
    10. '  ' → logprob: -9.280529975891113

Token 941: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11556047946214676
    2. 'solve' → logprob: -2.990560531616211
    3. 'fonction' → logprob: -3.365560531616211
    4. 'function' → logprob: -3.740560531616211
    5. ' function' → logprob: -8.865560531616211
    6. ' solve' → logprob: -9.490560531616211
    7. 'main' → logprob: -9.490560531616211
    8. 'programme' → logprob: -9.740560531616211
    9. 'program' → logprob: -9.990560531616211
    10. 'func' → logprob: -10.240560531616211

Token 942: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5023376941680908
    2. '<|end|>' → logprob: -1.0023376941680908
    3. '
' → logprob: -4.127337455749512
    4. '\n' → logprob: -5.752337455749512
    5. '```' → logprob: -6.502337455749512
    6. '\' → logprob: -6.502337455749512
    7. 'return' → logprob: -6.627337455749512
    8. '	return' → logprob: -7.002337455749512
    9. '    
' → logprob: -7.127337455749512
    10. ' ' → logprob: -7.377337455749512

Token 943: ' signal' (ID: 12884)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 944: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -4.4849443838757e-06
    2. '#' → logprob: -13.375004768371582
    3. 'al' → logprob: -13.625004768371582
    4. 'aler' → logprob: -13.750004768371582
    5. 'def' → logprob: -16.125003814697266
    6. '```' → logprob: -16.250003814697266
    7. 'ant' → logprob: -16.500003814697266
    8. 'ler' → logprob: -17.000003814697266
    9. 'ale' → logprob: -17.125003814697266
    10. 'r' → logprob: -17.250003814697266

Token 945: ' que' (ID: 661)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012063038302585483
    2. ' ' → logprob: -6.751206398010254
    3. '<|end|>' → logprob: -11.001206398010254
    4. 'return' → logprob: -11.501206398010254
    5. 'None' → logprob: -11.876206398010254
    6. 'False' → logprob: -14.126206398010254
    7. 'True' → logprob: -14.251206398010254
    8. ' return' → logprob: -15.001206398010254
    9. ' None' → logprob: -15.376206398010254
    10. '   ' → logprob: -15.501206398010254

Token 946: ' tout' (ID: 5501)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.14244401454925537
    2. ' None' → logprob: -3.142444133758545
    3. 'True' → logprob: -3.267444133758545
    4. '0' → logprob: -4.017444133758545
    5. 'solve' → logprob: -4.142444133758545
    6. ' True' → logprob: -5.142444133758545
    7. ' la' → logprob: -6.392444133758545
    8. ' ' → logprob: -6.392444133758545
    9. '<|end|>' → logprob: -6.392444133758545
    10. 'the' → logprob: -6.517444133758545

Token 947: ' s' (ID: 265)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2957638502120972
    2. ' s' → logprob: -1.7957638502120972
    3. ' is' → logprob: -2.1707639694213867
    4. ' was' → logprob: -2.1707639694213867
    5. ' return' → logprob: -2.5457639694213867
    6. ' correct' → logprob: -2.7957639694213867
    7. ' ' → logprob: -2.9207639694213867
    8. '_' → logprob: -3.9207639694213867
    9. ' est' → logprob: -4.295763969421387
    10. ' completed' → logprob: -4.545763969421387

Token 948: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.12741224467754364
    2. 'est' → logprob: -2.1274123191833496
    3. 'e' → logprob: -8.252411842346191
    4. '’est' → logprob: -8.752411842346191
    5. '_est' → logprob: -10.752411842346191
    6. ''' → logprob: -11.877411842346191
    7. '`' → logprob: -11.877411842346191
    8. 's' → logprob: -12.252411842346191
    9. ''s' → logprob: -12.377411842346191
    10. ''était' → logprob: -12.377411842346191

Token 949: ' bien' (ID: 5340)
  Prédit: ' bien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bien' → logprob: -0.38744619488716125
    2. 'bien' → logprob: -1.1374461650848389
    3. ' correctement' → logprob: -8.262446403503418
    4. 'correct' → logprob: -8.762446403503418
    5. ' well' → logprob: -9.887446403503418
    6. ' correct' → logprob: -10.262446403503418
    7. ' correctly' → logprob: -10.887446403503418
    8. 'Bien' → logprob: -11.387446403503418
    9. 'b' → logprob: -11.637446403503418
    10. 'bon' → logprob: -11.887446403503418

Token 950: ' passé' (ID: 40520)
  Prédit: ' bien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bien' → logprob: -0.5458065867424011
    2. ' pass' → logprob: -2.295806646347046
    3. 'pass' → logprob: -2.295806646347046
    4. ' well' → logprob: -2.670806646347046
    5. 'bien' → logprob: -2.920806646347046
    6. ' return' → logprob: -3.795806646347046
    7. 'return' → logprob: -4.170806407928467
    8. ' done' → logprob: -4.795806407928467
    9. 'execut' → logprob: -4.920806407928467
    10. '_pass' → logprob: -5.045806407928467

Token 951: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 952: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 953: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005246769287623465
    2. '   ' → logprob: -7.750524520874023
    3. ' return' → logprob: -9.625524520874023
    4. '0' → logprob: -11.000524520874023
    5. '```' → logprob: -12.000524520874023
    6. '	return' → logprob: -12.875524520874023
    7. ':return' → logprob: -13.750524520874023
    8. '{return' → logprob: -14.625524520874023
    9. '
' → logprob: -14.875524520874023
    10. '@return' → logprob: -15.750524520874023

Token 954: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018186114728450775
    2. ' ' → logprob: -4.018186092376709
    3. ' None' → logprob: -10.893186569213867
    4. 'None' → logprob: -11.018186569213867
    5. '<|end|>' → logprob: -13.893186569213867
    6. '  
' → logprob: -16.518186569213867
    7. ' ' → logprob: -16.893186569213867
    8. '  ' → logprob: -17.143186569213867
    9. ' 
' → logprob: -17.268186569213867
    10. '   ' → logprob: -17.393186569213867

Token 955: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'None' → logprob: -23.5
    4. '00' → logprob: -25.5
    5. '000' → logprob: -25.625
    6. '۰' → logprob: -25.75
    7. 'True' → logprob: -26.0
    8. '  ' → logprob: -26.625
    9. '   ' → logprob: -26.625
    10. '０' → logprob: -26.875

Token 956: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 957: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 958: ' Ce' (ID: 14228)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 959: ' bloc' (ID: 51218)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1139087677001953
    2. '<|end|>' → logprob: -1.2389087677001953
    3. 'def' → logprob: -1.6139087677001953
    4. 'if' → logprob: -2.9889087677001953
    5. '```' → logprob: -3.1139087677001953
    6. '_' → logprob: -3.6139087677001953
    7. '()' → logprob: -4.113908767700195
    8. ' ' → logprob: -4.613908767700195
    9. '<|end|>' → logprob: -5.113908767700195
    10. 'n' → logprob: -5.488908767700195

Token 960: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008569891564548016
    2. '
' → logprob: -5.008569717407227
    3. ' if' → logprob: -7.133569717407227
    4. '```' → logprob: -7.258569717407227
    5. '

' → logprob: -8.508569717407227
    6. '<|end|>' → logprob: -9.633569717407227
    7. '  
' → logprob: -11.383569717407227
    8. '``' → logprob: -11.508569717407227
    9. '#' → logprob: -11.758569717407227
    10. '_' → logprob: -12.008569717407227

Token 961: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.019066844135522842
    2. 'if' → logprob: -4.01906681060791
    3. 'ify' → logprob: -8.26906681060791
    4. 'ifier' → logprob: -8.39406681060791
    5. 'ifies' → logprob: -9.01906681060791
    6. 'ification' → logprob: -9.26906681060791
    7. 'i' → logprob: -9.76906681060791
    8. ' if' → logprob: -10.39406681060791
    9. 'ifié' → logprob: -10.39406681060791
    10. '```' → logprob: -10.39406681060791

Token 962: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1617409884929657
    2. ' if' → logprob: -1.911741018295288
    3. '<|end|>' → logprob: -7.411740779876709
    4. '
' → logprob: -7.911740779876709
    5. '```' → logprob: -9.036741256713867
    6. '_' → logprob: -9.161741256713867
    7. '

' → logprob: -9.286741256713867
    8. '{' → logprob: -10.411741256713867
    9. '	if' → logprob: -10.661741256713867
    10. ' ' → logprob: -10.786741256713867

Token 963: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06197351589798927
    2. ' __' → logprob: -2.8119735717773438
    3. 'name' → logprob: -12.811973571777344
    4. '_name' → logprob: -13.811973571777344
    5. ' ' → logprob: -14.436973571777344
    6. '___' → logprob: -15.061973571777344
    7. '```' → logprob: -15.186973571777344
    8. '/__' → logprob: -15.311973571777344
    9. '.__' → logprob: -15.811973571777344
    10. ' "__' → logprob: -16.186973571777344

Token 964: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.038170360028743744
    2. ' __' → logprob: -3.538170337677002
    3. '_' → logprob: -5.038170337677002
    4. 'if' → logprob: -7.038170337677002
    5. ' ==' → logprob: -8.03817081451416
    6. ' ' → logprob: -8.16317081451416
    7. '==' → logprob: -9.16317081451416
    8. '_name' → logprob: -9.66317081451416
    9. '```' → logprob: -10.16317081451416
    10. 'n' → logprob: -10.28817081451416

Token 965: ' est' (ID: 893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2759489417076111
    2. '__' → logprob: -1.6509490013122559
    3. 'name' → logprob: -4.525949001312256
    4. ' if' → logprob: -4.525949001312256
    5. '_name' → logprob: -4.650949001312256
    6. '```' → logprob: -5.025949001312256
    7. ' ==' → logprob: -5.150949001312256
    8. ' __' → logprob: -6.150949001312256
    9. ':' → logprob: -6.400949001312256
    10. '==' → logprob: -7.525949001312256

Token 966: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013339038006961346
    2. ' __' → logprob: -4.388339042663574
    3. '_le' → logprob: -8.013339042663574
    4. '_name' → logprob: -8.388339042663574
    5. '_' → logprob: -9.263339042663574
    6. 'le' → logprob: -9.638339042663574
    7. '___' → logprob: -10.513339042663574
    8. 'name' → logprob: -10.888339042663574
    9. ' le' → logprob: -10.888339042663574
    10. '```' → logprob: -11.638339042663574

Token 967: 'é' (ID: 377)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.20548756420612335
    2. '__' → logprob: -2.3304874897003174
    3. 'en' → logprob: -2.4554874897003174
    4. '_en' → logprob: -7.0804877281188965
    5. ' __' → logprob: -7.2054877281188965
    6. 'comme' → logprob: -8.455487251281738
    7. ' comme' → logprob: -8.830487251281738
    8. 'direct' → logprob: -8.830487251281738
    9. 'if' → logprob: -9.080487251281738
    10. 'dans' → logprob: -9.580487251281738

Token 968: ' comme' (ID: 7971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.061150431632995605
    2. ' if' → logprob: -3.061150550842285
    3. '__' → logprob: -5.186150550842285
    4. '```' → logprob: -6.061150550842285
    5. '
' → logprob: -6.936150550842285
    6. ' __' → logprob: -7.061150550842285
    7. '_if' → logprob: -7.311150550842285
    8. ' en' → logprob: -7.311150550842285
    9. 'dans' → logprob: -8.311150550842285
    10. 'en' → logprob: -8.936150550842285

Token 969: ' programme' (ID: 18190)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015821782872080803
    2. ' le' → logprob: -5.015821933746338
    3. 'le' → logprob: -5.515821933746338
    4. ' __' → logprob: -5.640821933746338
    5. '_le' → logprob: -7.390821933746338
    6. 'main' → logprob: -7.765821933746338
    7. 'principal' → logprob: -9.01582145690918
    8. 'un' → logprob: -9.39082145690918
    9. '_main' → logprob: -9.76582145690918
    10. ' main' → logprob: -10.26582145690918

Token 970: ' principal' (ID: 10589)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09147661924362183
    2. '
' → logprob: -2.4664766788482666
    3. ' if' → logprob: -6.4664764404296875
    4. ':
' → logprob: -7.4664764404296875
    5. '```' → logprob: -8.716476440429688
    6. ':' → logprob: -9.466476440429688
    7. '  
' → logprob: -9.716476440429688
    8. '\n' → logprob: -10.091476440429688
    9. ' 
' → logprob: -10.841476440429688
    10. '

' → logprob: -11.341476440429688

Token 971: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05185167118906975
    2. 'if' → logprob: -3.176851749420166
    3. '  
' → logprob: -5.926851749420166
    4. '

' → logprob: -6.176851749420166
    5. '\n' → logprob: -6.426851749420166
    6. '```' → logprob: -7.176851749420166
    7. ':
' → logprob: -7.676851749420166
    8. ' if' → logprob: -8.176851272583008
    9. ' 
' → logprob: -8.176851272583008
    10. ':' → logprob: -8.301851272583008

Token 972: 'et' (ID: 292)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0024484232999384403
    2. ' if' → logprob: -6.127448558807373
    3. '__' → logprob: -8.377448081970215
    4. '
' → logprob: -11.127448081970215
    5. '```' → logprob: -11.127448081970215
    6. ' __' → logprob: -13.377448081970215
    7. '`' → logprob: -14.877448081970215
    8. ':' → logprob: -15.252448081970215
    9. '``' → logprob: -15.252448081970215
    10. ')' → logprob: -15.252448081970215

Token 973: ' non' (ID: 2893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.6369038820266724
    2. 'est' → logprob: -2.261903762817383
    3. ' non' → logprob: -2.511903762817383
    4. ' est' → logprob: -2.636903762817383
    5. ' __' → logprob: -2.761903762817383
    6. '__' → logprob: -2.761903762817383
    7. ' pas' → logprob: -2.761903762817383
    8. ' not' → logprob: -3.011903762817383
    9. 'pas' → logprob: -3.386903762817383
    10. '#' → logprob: -3.511903762817383

Token 974: ' import' (ID: 1588)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.196663737297058
    2. ' en' → logprob: -1.446663737297058
    3. 'import' → logprob: -1.446663737297058
    4. ' pas' → logprob: -2.3216638565063477
    5. ' import' → logprob: -3.3216638565063477
    6. ' comme' → logprob: -3.8216638565063477
    7. '__' → logprob: -3.9466638565063477
    8. 'pas' → logprob: -4.321663856506348
    9. 'un' → logprob: -4.571663856506348
    10. ' __' → logprob: -4.696663856506348

Token 975: 'é' (ID: 377)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6317681074142456
    2. '__' → logprob: -0.8817681074142456
    3. 'é' → logprob: -3.006768226623535
    4. ' if' → logprob: -5.631768226623535
    5. 'able' → logprob: -7.881768226623535
    6. 'ed' → logprob: -8.756768226623535
    7. ' __' → logprob: -9.131768226623535
    8. 'import' → logprob: -9.131768226623535
    9. '==' → logprob: -9.256768226623535
    10. '```' → logprob: -9.631768226623535

Token 976: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05797402188181877
    2. 'if' → logprob: -3.182974100112915
    3. ':
' → logprob: -4.432973861694336
    4. ' if' → logprob: -6.807973861694336
    5. '):
' → logprob: -7.807973861694336
    6. '():
' → logprob: -7.932973861694336
    7. ' :' → logprob: -8.432973861694336
    8. '```' → logprob: -8.557973861694336
    9. '):' → logprob: -8.682973861694336
    10. ')' → logprob: -9.182973861694336

Token 977: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.511406809295295e-06
    2. ' if' → logprob: -12.000006675720215
    3. '```' → logprob: -15.125006675720215
    4. '
' → logprob: -16.6250057220459
    5. '``' → logprob: -19.8750057220459
    6. '@if' → logprob: -19.8750057220459
    7. '#if' → logprob: -20.5000057220459
    8. '  
' → logprob: -20.8750057220459
    9. '    
' → logprob: -21.1250057220459
    10. ';if' → logprob: -21.3750057220459

Token 978: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38761526346206665
    2. ' __' → logprob: -1.1376152038574219
    3. ' ' → logprob: -7.762615203857422
    4. '_' → logprob: -8.637615203857422
    5. 'name' → logprob: -9.762615203857422
    6. '_name' → logprob: -10.137615203857422
    7. '___' → logprob: -11.887615203857422
    8. ' ' → logprob: -11.887615203857422
    9. ' ' → logprob: -12.387615203857422
    10. 'space' → logprob: -12.637615203857422

Token 979: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002854924649000168
    2. '==' → logprob: -6.127854824066162
    3. ' ==' → logprob: -7.627854824066162
    4. ' __' → logprob: -8.87785530090332
    5. '_' → logprob: -10.62785530090332
    6. 'name' → logprob: -11.50285530090332
    7. '=="' → logprob: -12.62785530090332
    8. '___' → logprob: -13.37785530090332
    9. '=='' → logprob: -14.00285530090332
    10. '=' → logprob: -14.37785530090332

Token 980: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.657694418914616e-05
    2. '==' → logprob: -9.875056266784668
    3. '=="' → logprob: -13.250056266784668
    4. '__.__' → logprob: -13.375056266784668
    5. '___' → logprob: -14.625056266784668
    6. ' ==' → logprob: -14.750056266784668
    7. '__('' → logprob: -15.375056266784668
    8. '____' → logprob: -15.375056266784668
    9. '=='' → logprob: -16.500057220458984
    10. ' __' → logprob: -16.500057220458984

Token 981: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008643174543976784
    2. '==' → logprob: -4.75864315032959
    3. '=="' → logprob: -10.75864315032959
    4. '=' → logprob: -13.00864315032959
    5. '=='' → logprob: -13.50864315032959
    6. ' ==' → logprob: -13.75864315032959
    7. '____' → logprob: -14.75864315032959
    8. '==
' → logprob: -14.75864315032959
    9. '__.__' → logprob: -14.88364315032959
    10. '___' → logprob: -15.13364315032959

Token 982: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00677682738751173
    2. ''' → logprob: -5.006776809692383
    3. ' "__' → logprob: -9.756776809692383
    4. '__' → logprob: -12.756776809692383
    5. ' '__' → logprob: -14.506776809692383
    6. '"name' → logprob: -17.131776809692383
    7. '("__' → logprob: -17.381776809692383
    8. '"user' → logprob: -18.131776809692383
    9. ''"' → logprob: -18.506776809692383
    10. '"'' → logprob: -18.631776809692383

Token 983: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. 'name' → logprob: -16.625
    3. ' main' → logprob: -18.25
    4. '_main' → logprob: -19.375
    5. 'ma' → logprob: -20.125
    6. 'm' → logprob: -20.875
    7. '"' → logprob: -21.0
    8. '	main' → logprob: -21.5
    9. '(main' → logprob: -21.875
    10. 'maine' → logprob: -22.5

Token 984: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.313597172498703
    2. '__' → logprob: -1.3135972023010254
    3. '__:' → logprob: -8.438596725463867
    4. '__':
' → logprob: -9.063596725463867
    5. '__["' → logprob: -13.313596725463867
    6. '__",' → logprob: -14.188596725463867
    7. '__("' → logprob: -15.563596725463867
    8. '__
' → logprob: -15.813596725463867
    9. '__
' → logprob: -15.813596725463867
    10. '__.__' → logprob: -16.188596725463867

Token 985: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015512440353631973
    2. ' solve' → logprob: -4.515512466430664
    3. 'solve' → logprob: -5.765512466430664
    4. '	s' → logprob: -6.890512466430664
    5. '.solve' → logprob: -8.390512466430664
    6. '    
' → logprob: -10.640512466430664
    7. '```' → logprob: -11.265512466430664
    8. '<|end|>' → logprob: -11.265512466430664
    9. '(s' → logprob: -11.765512466430664
    10. '   ' → logprob: -13.140512466430664

Token 986: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.000001907348633
    3. ' solve' → logprob: -14.000001907348633
    4. '.solve' → logprob: -17.750001907348633
    5. 'sys' → logprob: -18.500001907348633
    6. '```' → logprob: -20.375001907348633
    7. 'resolve' → logprob: -20.875001907348633
    8. '  ' → logprob: -21.125001907348633
    9. 'exit' → logprob: -21.375001907348633
    10. '    
' → logprob: -21.625001907348633

Token 987: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010711929644457996
    2. '(' → logprob: -10.000106811523438
    3. '()
' → logprob: -10.125106811523438
    4. ' ()' → logprob: -11.250106811523438
    5. '()`' → logprob: -12.750106811523438
    6. '()<' → logprob: -13.125106811523438
    7. '()]' → logprob: -14.625106811523438
    8. '()\' → logprob: -14.750106811523438
    9. '();' → logprob: -15.000106811523438
    10. '()"' → logprob: -15.000106811523438

Token 988: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 989: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 990: ' App' (ID: 2583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 991: 'eler' (ID: 6998)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.1605023592710495
    2. 'eler' → logprob: -1.910502314567566
    3. 'elle' → logprob: -8.785502433776855
    4. 'eller' → logprob: -9.285502433776855
    5. 'ly' → logprob: -11.535502433776855
    6. 'ler' → logprob: -11.660502433776855
    7. 'ell' → logprob: -12.785502433776855
    8. 'l' → logprob: -12.910502433776855
    9. 'le' → logprob: -12.910502433776855
    10. 'elé' → logprob: -12.910502433776855

Token 992: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -14.000001907348633
    3. ' ()' → logprob: -14.875001907348633
    4. 'solve' → logprob: -15.375001907348633
    5. '();' → logprob: -16.375001907348633
    6. '()
' → logprob: -16.625001907348633
    7. '()<' → logprob: -16.625001907348633
    8. '())' → logprob: -16.750001907348633
    9. '()`' → logprob: -17.250001907348633
    10. '()%' → logprob: -17.250001907348633

Token 993: ' fonction' (ID: 17610)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.3716244101524353
    2. '()' → logprob: -1.24662446975708
    3. '(' → logprob: -3.99662446975708
    4. '(
' → logprob: -6.12162446975708
    5. '<|end|>' → logprob: -7.49662446975708
    6. ' solve' → logprob: -7.74662446975708
    7. 'solver' → logprob: -8.121623992919922
    8. 'function' → logprob: -8.621623992919922
    9. '()
' → logprob: -8.746623992919922
    10. ')' → logprob: -8.871623992919922

Token 994: ' principale' (ID: 68926)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 995: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 996: ' lancer' (ID: 82697)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.11450642347335815
    2. 'rés' → logprob: -2.614506483078003
    3. 'l' → logprob: -3.614506483078003
    4. 'execut' → logprob: -5.239506244659424
    5. ' résoudre' → logprob: -7.364506244659424
    6. 'trait' → logprob: -7.489506244659424
    7. ' ex' → logprob: -7.614506244659424
    8. 'effect' → logprob: -7.614506244659424
    9. 'solver' → logprob: -8.989506721496582
    10. 'execute' → logprob: -9.239506721496582

Token 997: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00437897490337491
    2. 'solve' → logprob: -6.129378795623779
    3. '```' → logprob: -6.629378795623779
    4. '<|end|>' → logprob: -7.879378795623779
    5. ')' → logprob: -8.129379272460938
    6. ' ()' → logprob: -10.379379272460938
    7. '())' → logprob: -10.504379272460938
    8. '(' → logprob: -10.879379272460938
    9. '[]' → logprob: -11.004379272460938
    10. 'the' → logprob: -11.129379272460938

Token 998: ' résolution' (ID: 147402)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.27112215757369995
    2. 'rés' → logprob: -1.5211222171783447
    3. 'fonction' → logprob: -5.146121978759766
    4. 'programme' → logprob: -5.271121978759766
    5. ' résolution' → logprob: -5.771121978759766
    6. 'programm' → logprob: -6.021121978759766
    7. 'solve' → logprob: -6.521121978759766
    8. 'program' → logprob: -7.521121978759766
    9. 's' → logprob: -8.646121978759766
    10. 'resolution' → logprob: -8.896121978759766

Token 999: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1000: ' problème' (ID: 35630)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.11761965602636337
    2. 'pro' → logprob: -2.367619752883911
    3. 'program' → logprob: -5.242619514465332
    4. 'code' → logprob: -5.617619514465332
    5. 'solve' → logprob: -5.867619514465332
    6. 'problem' → logprob: -5.867619514465332
    7. 'proble' → logprob: -6.242619514465332
    8. 'script' → logprob: -7.992619514465332
    9. 'programm' → logprob: -8.992619514465332
    10. ' programme' → logprob: -9.242619514465332


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 998
Tokens correctement prédits (1ère position, stricte): 270
Tokens correctement prédits (1ère position, avec adaptation): 288
Tokens correctement prédits (top 10): 578
Précision stricte (1ère position): 27.05%
Précision adaptée (1ère position): 28.86%
Précision (top 10): 57.92%
================================================================================
