================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir une ligne sur l'entrée standard (habituellement le clavier).
# La fonction 'input()' lit cette ligne en tant que chaîne de caractères (string).
# 'split()' sépare cette chaîne en une liste de sous-chaînes, ici en utilisant l'espace comme séparateur par défaut.
# Par exemple, si l'utilisateur saisit "8 3", alors input().split() devient ['8', '3'].
# La fonction 'map(int, ...)' applique la fonction 'int' à chaque élément de la liste
# résultant en des entiers : map(int, ['8', '3']) donne un itérable équivalent à [8, 3].
# L'affectation multiple 'a, b = ...' permet d'attribuer respectivement le premier élément à 'a' et le second à 'b'.
a, b = map(int, input().split())

# On calcule la valeur de la variable 'gap', qui correspond à la différence entre
# 'a' et deux fois la valeur de 'b'. Cela s'écrit : gap = a - 2 * b.
gap = a - 2 * b

# La structure conditionnelle 'if' permet d'exécuter un bloc de code si une condition est vérifiée.
# Ici, on teste si 'gap' est strictement supérieur à 0.
if gap > 0:
    # Si la condition précédente est vraie, on affiche la valeur de 'gap' avec la fonction 'print'.
    print(gap)
else:
    # Si la condition précédente est fausse (gap <= 0), l'instruction après 'else' s'exécute.
    # On affiche alors la valeur 0.
    print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2601135969161987
    2. ' ' → logprob: -1.5101135969161987
    3. ':' → logprob: -1.6351135969161987
    4. 's' → logprob: -1.7601135969161987
    5. ' =' → logprob: -3.5101137161254883
    6. ''' → logprob: -3.7601137161254883
    7. '_' → logprob: -3.7601137161254883
    8. ' d' → logprob: -4.260113716125488
    9. '```' → logprob: -4.385113716125488
    10. ' :' → logprob: -4.760113716125488

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00851953960955143
    2. ' l' → logprob: -5.008519649505615
    3. 'util' → logprob: -7.133519649505615
    4. 'user' → logprob: -7.633519649505615
    5. '#' → logprob: -8.508519172668457
    6. ''' → logprob: -10.383519172668457
    7. '```' → logprob: -10.383519172668457
    8. 'input' → logprob: -10.508519172668457
    9. 'la' → logprob: -10.633519172668457
    10. '`' → logprob: -10.758519172668457

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.036522276699543
    2. ''' → logprob: -4.161522388458252
    3. 'u' → logprob: -4.661522388458252
    4. 'util' → logprob: -5.661522388458252
    5. '’utilisateur' → logprob: -5.661522388458252
    6. 'a' → logprob: -6.161522388458252
    7. ' utilisateur' → logprob: -6.786522388458252
    8. ''util' → logprob: -8.661521911621094
    9. ''user' → logprob: -9.161521911621094
    10. ''us' → logprob: -9.411521911621094

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.49866652488708496
    2. 'name' → logprob: -1.373666524887085
    3. 'user' → logprob: -2.623666524887085
    4. 'input' → logprob: -4.248666763305664
    5. 'print' → logprob: -4.748666763305664
    6. 's' → logprob: -4.998666763305664
    7. ' nom' → logprob: -5.248666763305664
    8. 'n' → logprob: -5.498666763305664
    9. 'username' → logprob: -5.748666763305664
    10. 'prenom' → logprob: -5.998666763305664

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6045140624046326
    2. ' saisir' → logprob: -1.3545141220092773
    3. ' ' → logprob: -2.3545141220092773
    4. ' ' → logprob: -3.8545141220092773
    5. 'r' → logprob: -4.104514122009277
    6. 'entr' → logprob: -4.354514122009277
    7. '```' → logprob: -4.729514122009277
    8. '_' → logprob: -4.854514122009277
    9. 'entrée' → logprob: -5.104514122009277
    10. ' entrer' → logprob: -5.104514122009277

Token 8: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4754936993122101
    2. ' un' → logprob: -1.4754936695098877
    3. ' une' → logprob: -2.2254936695098877
    4. ''' → logprob: -4.350493907928467
    5. 's' → logprob: -5.725493907928467
    6. ''un' → logprob: -5.850493907928467
    7. ' ' → logprob: -5.850493907928467
    8. 'un' → logprob: -6.100493907928467
    9. 'une' → logprob: -6.225493907928467
    10. ''une' → logprob: -6.350493907928467

Token 9: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5553601980209351
    2. ' chaîne' → logprob: -1.180360198020935
    3. ' phrase' → logprob: -2.8053603172302246
    4. 'chaine' → logprob: -3.8053603172302246
    5. ' chaine' → logprob: -4.555360317230225
    6. ' ligne' → logprob: -4.680360317230225
    7. 'phrase' → logprob: -5.430360317230225
    8. ' valeur' → logprob: -5.930360317230225
    9. ' string' → logprob: -6.555360317230225
    10. ' ' → logprob: -6.680360317230225

Token 10: ' sur' (ID: 1512)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.837379515171051
    2. 'input' → logprob: -1.3373794555664062
    3. 'user' → logprob: -2.2123794555664062
    4. 's' → logprob: -2.4623794555664062
    5. 'i' → logprob: -3.0873794555664062
    6. 'u' → logprob: -3.5873794555664062
    7. '_' → logprob: -4.337379455566406
    8. 'ligne' → logprob: -4.712379455566406
    9. 'print' → logprob: -5.587379455566406
    10. '#' → logprob: -6.462379455566406

Token 11: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8631518483161926
    2. 'l' → logprob: -1.2381517887115479
    3. 'input' → logprob: -2.363151788711548
    4. 'la' → logprob: -2.488151788711548
    5. 'une' → logprob: -3.738151788711548
    6. ' input' → logprob: -4.113152027130127
    7. ' l' → logprob: -4.613152027130127
    8. ' laquelle' → logprob: -4.613152027130127
    9. '=input' → logprob: -4.738152027130127
    10. ' ' → logprob: -4.988152027130127

Token 12: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0054626124911010265
    2. ''' → logprob: -6.005462646484375
    3. 'e' → logprob: -6.380462646484375
    4. ''a' → logprob: -7.505462646484375
    5. ''entrée' → logprob: -8.505462646484375
    6. ''#' → logprob: -9.005462646484375
    7. ''utilisateur' → logprob: -9.380462646484375
    8. ''''' → logprob: -10.130462646484375
    9. 'input' → logprob: -10.255462646484375
    10. ' a' → logprob: -10.505462646484375

Token 13: ' standard' (ID: 7024)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.40480494499206543
    2. '_' → logprob: -1.7798049449920654
    3. 'user' → logprob: -2.9048049449920654
    4. 'i' → logprob: -3.0298049449920654
    5. 's' → logprob: -3.9048049449920654
    6. 'f' → logprob: -4.9048051834106445
    7. '`' → logprob: -5.1548051834106445
    8. 'l' → logprob: -5.2798051834106445
    9. 'u' → logprob: -5.5298051834106445
    10. '=' → logprob: -6.0298051834106445

Token 14: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5322957038879395
    2. 'user' → logprob: -1.2822957038879395
    3. 'l' → logprob: -2.7822957038879395
    4. 's' → logprob: -3.7822957038879395
    5. 'ligne' → logprob: -4.5322957038879395
    6. 'u' → logprob: -4.6572957038879395
    7. 'i' → logprob: -4.7822957038879395
    8. '_' → logprob: -5.6572957038879395
    9. 'line' → logprob: -5.6572957038879395
    10. '`' → logprob: -5.6572957038879395

Token 15: 'habit' (ID: 183262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006467971485108137
    2. 'input' → logprob: -6.256467819213867
    3. '")' → logprob: -6.256467819213867
    4. '')' → logprob: -7.256467819213867
    5. ' )' → logprob: -7.506467819213867
    6. '`)' → logprob: -7.506467819213867
    7. '#' → logprob: -8.631467819213867
    8. '):' → logprob: -9.506467819213867
    9. 's' → logprob: -9.631467819213867
    10. '))' → logprob: -9.881467819213867

Token 16: 'uellement' (ID: 36026)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7565010190010071
    2. '#' → logprob: -1.3815009593963623
    3. 'te' → logprob: -2.1315009593963623
    4. 'e' → logprob: -2.6315009593963623
    5. 'ale' → logprob: -3.8815009593963623
    6. 't' → logprob: -4.506501197814941
    7. 'nte' → logprob: -5.131501197814941
    8. 'é' → logprob: -5.381501197814941
    9. 'ent' → logprob: -5.506501197814941
    10. 'n' → logprob: -5.631501197814941

Token 17: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.116940975189209
    2. 'le' → logprob: -1.241940975189209
    3. 'la' → logprob: -1.991940975189209
    4. 'stdin' → logprob: -2.616940975189209
    5. 'une' → logprob: -3.116940975189209
    6. 'standard' → logprob: -3.241940975189209
    7. ' la' → logprob: -3.366940975189209
    8. ' clavier' → logprob: -4.491940975189209
    9. ' une' → logprob: -4.991940975189209
    10. ' l' → logprob: -4.991940975189209

Token 18: ' clavier' (ID: 187878)
  Prédit: 'terminal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terminal' → logprob: -1.256675362586975
    2. 'stdin' → logprob: -1.381675362586975
    3. ' clavier' → logprob: -1.881675362586975
    4. '#' → logprob: -3.1316752433776855
    5. 'standard' → logprob: -3.1316752433776855
    6. 's' → logprob: -3.2566752433776855
    7. ' terminal' → logprob: -3.5066752433776855
    8. ')' → logprob: -4.0066752433776855
    9. 'input' → logprob: -4.1316752433776855
    10. 'cl' → logprob: -4.2566752433776855

Token 19: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006629953859373927
    2. '#' → logprob: -7.500662803649902
    3. '`)' → logprob: -10.875662803649902
    4. '")' → logprob: -11.000662803649902
    5. ')#' → logprob: -11.250662803649902
    6. ')
' → logprob: -11.375662803649902
    7. ' )' → logprob: -11.375662803649902
    8. '):' → logprob: -11.750662803649902
    9. '')' → logprob: -12.250662803649902
    10. 'e' → logprob: -12.250662803649902

Token 20: '#' (ID: 2)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0082906484603882
    2. 'user' → logprob: -2.0082907676696777
    3. 'i' → logprob: -2.3832907676696777
    4. 'u' → logprob: -2.5082907676696777
    5. 's' → logprob: -2.5082907676696777
    6. '\' → logprob: -2.7582907676696777
    7. '\n' → logprob: -3.1332907676696777
    8. 'n' → logprob: -3.3832907676696777
    9. '```' → logprob: -3.5082907676696777
    10. '_' → logprob: -4.133290767669678

Token 21: ' La' (ID: 3038)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.830725371837616
    2. 'input' → logprob: -0.830725371837616
    3. 'l' → logprob: -2.9557254314422607
    4. 's' → logprob: -4.080725193023682
    5. '#' → logprob: -4.580725193023682
    6. 'u' → logprob: -4.580725193023682
    7. 'i' → logprob: -4.830725193023682
    8. ' ' → logprob: -5.080725193023682
    9. 'n' → logprob: -5.455725193023682
    10. 'line' → logprob: -5.830725193023682

Token 22: ' fonction' (ID: 17610)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.1569215059280396
    2. 'ligne' → logprob: -1.2819215059280396
    3. 's' → logprob: -1.4069215059280396
    4. 'input' → logprob: -3.28192138671875
    5. 'l' → logprob: -3.40692138671875
    6. ' input' → logprob: -4.28192138671875
    7. ' sais' → logprob: -4.40692138671875
    8. 'line' → logprob: -4.53192138671875
    9. 'user' → logprob: -5.15692138671875
    10. ' variable' → logprob: -5.28192138671875

Token 23: ' '' (ID: 461)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10031212866306305
    2. ' input' → logprob: -2.3503122329711914
    3. '=input' → logprob: -9.600312232971191
    4. 'def' → logprob: -11.600312232971191
    5. 's' → logprob: -12.100312232971191
    6. '`' → logprob: -12.100312232971191
    7. '(input' → logprob: -13.100312232971191
    8. 'raw' → logprob: -13.225312232971191
    9. ' readline' → logprob: -13.225312232971191
    10. '```' → logprob: -13.350312232971191

Token 24: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00042447797022759914
    2. ' input' → logprob: -8.1254243850708
    3. 'read' → logprob: -9.1254243850708
    4. '<input' → logprob: -12.8754243850708
    5. 's' → logprob: -13.1254243850708
    6. '=input' → logprob: -13.2504243850708
    7. 'getline' → logprob: -13.3754243850708
    8. 'print' → logprob: -13.5004243850708
    9. 'raw' → logprob: -13.5004243850708
    10. '	input' → logprob: -13.7504243850708

Token 25: '()' (ID: 416)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.005033798050135374
    2. '()' → logprob: -6.25503396987915
    3. ')'' → logprob: -6.25503396987915
    4. ''' → logprob: -7.38003396987915
    5. '(' → logprob: -8.130033493041992
    6. '("' → logprob: -8.755033493041992
    7. '("'' → logprob: -9.880033493041992
    8. '')' → logprob: -10.630033493041992
    9. ')' → logprob: -11.005033493041992
    10. '('"' → logprob: -12.880033493041992

Token 26: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9717479348182678
    2. '('' → logprob: -1.471747875213623
    3. ' )' → logprob: -1.846747875213623
    4. ')'' → logprob: -2.221747875213623
    5. ''' → logprob: -2.846747875213623
    6. '')' → logprob: -3.346747875213623
    7. ' '' → logprob: -4.471747875213623
    8. '()' → logprob: -5.471747875213623
    9. '(' → logprob: -6.471747875213623
    10. ' ')' → logprob: -6.596747875213623

Token 27: ' lit' (ID: 11980)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.707374095916748
    2. '(' → logprob: -1.082374095916748
    3. ')' → logprob: -2.832374095916748
    4. ' )' → logprob: -2.957374095916748
    5. ' (' → logprob: -3.707374095916748
    6. '()' → logprob: -4.582374095916748
    7. '<|end|>' → logprob: -5.707374095916748
    8. ',' → logprob: -6.332374095916748
    9. '('' → logprob: -6.457374095916748
    10. ' est' → logprob: -6.707374095916748

Token 28: ' cette' (ID: 7696)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.29830166697502136
    2. ' la' → logprob: -1.6733016967773438
    3. 'une' → logprob: -3.6733016967773438
    4. ' l' → logprob: -4.548301696777344
    5. ' jusqu' → logprob: -4.798301696777344
    6. 'l' → logprob: -4.923301696777344
    7. 'la' → logprob: -5.423301696777344
    8. ' ' → logprob: -5.673301696777344
    9. ' toute' → logprob: -5.923301696777344
    10. '()' → logprob: -6.048301696777344

Token 29: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.12989503145217896
    2. ' chaîne' → logprob: -3.129894971847534
    3. ' ' → logprob: -3.879894971847534
    4. ' entrée' → logprob: -4.504895210266113
    5. '()' → logprob: -4.629895210266113
    6. 'ligne' → logprob: -4.879895210266113
    7. '_' → logprob: -5.129895210266113
    8. 'entrée' → logprob: -5.379895210266113
    9. ' line' → logprob: -6.129895210266113
    10. ' chaine' → logprob: -6.754895210266113

Token 30: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.608803927898407
    2. '.' → logprob: -1.2338039875030518
    3. ',' → logprob: -2.9838039875030518
    4. '_' → logprob: -3.3588039875030518
    5. ')' → logprob: -3.7338039875030518
    6. '(' → logprob: -3.8588039875030518
    7. '#' → logprob: -4.983803749084473
    8. 's' → logprob: -5.358803749084473
    9. 'e' → logprob: -5.858803749084473
    10. '\' → logprob: -6.108803749084473

Token 31: ' tant' (ID: 16235)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.9382251501083374
    2. 't' → logprob: -2.063225269317627
    3. ' une' → logprob: -2.438225269317627
    4. ' Python' → logprob: -2.438225269317627
    5. ' entrée' → logprob: -2.813225269317627
    6. 'cha' → logprob: -3.063225269317627
    7. 's' → logprob: -3.063225269317627
    8. 'chaine' → logprob: -3.188225269317627
    9. 'string' → logprob: -3.313225269317627
    10. 'entrée' → logprob: -3.438225269317627

Token 32: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.1317570060491562
    2. ' ' → logprob: -3.1317570209503174
    3. ' qu' → logprob: -3.3817570209503174
    4. 'que' → logprob: -3.5067570209503174
    5. 'qu' → logprob: -4.756756782531738
    6. '_' → logprob: -5.506756782531738
    7. 'q' → logprob: -6.381756782531738
    8. '#' → logprob: -7.381756782531738
    9. ' q' → logprob: -7.881756782531738
    10. ' ' → logprob: -8.756756782531738

Token 33: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.21641936898231506
    2. 'chaine' → logprob: -2.4664194583892822
    3. 'cha' → logprob: -2.8414194583892822
    4. 'str' → logprob: -4.091419219970703
    5. 'string' → logprob: -4.216419219970703
    6. ' chaine' → logprob: -4.466419219970703
    7. ' string' → logprob: -4.966419219970703
    8. 's' → logprob: -7.591419219970703
    9. ' str' → logprob: -8.466419219970703
    10. ' ' → logprob: -8.466419219970703

Token 34: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3322955369949341
    2. ' ' → logprob: -2.3322954177856445
    3. '.' → logprob: -2.4572954177856445
    4. ',' → logprob: -3.5822954177856445
    5. ' de' → logprob: -3.8322954177856445
    6. 'de' → logprob: -4.7072954177856445
    7. ')' → logprob: -4.9572954177856445
    8. '\' → logprob: -4.9572954177856445
    9. '(' → logprob: -5.3322954177856445
    10. '"' → logprob: -6.2072954177856445

Token 35: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.047871824353933334
    2. ' caractères' → logprob: -3.1728718280792236
    3. 'de' → logprob: -6.1728715896606445
    4. 'texte' → logprob: -7.5478715896606445
    5. 'chaine' → logprob: -7.7978715896606445
    6. 'str' → logprob: -7.9228715896606445
    7. 'entrée' → logprob: -8.297871589660645
    8. ' caract' → logprob: -8.547871589660645
    9. ' caracteres' → logprob: -8.672871589660645
    10. 'une' → logprob: -8.672871589660645

Token 36: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.7662904262542725
    2. '.' → logprob: -2.0162904262542725
    3. '\n' → logprob: -2.1412904262542725
    4. '#' → logprob: -2.3912904262542725
    5. 'user' → logprob: -2.5162904262542725
    6. '\' → logprob: -2.5162904262542725
    7. 'u' → logprob: -2.6412904262542725
    8. '_' → logprob: -3.1412904262542725
    9. ')' → logprob: -3.5162904262542725
    10. ',' → logprob: -3.5162904262542725

Token 37: 'string' (ID: 1655)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010698179714381695
    2. ').' → logprob: -4.760698318481445
    3. ' )' → logprob: -6.510698318481445
    4. '),' → logprob: -8.885698318481445
    5. '')' → logprob: -9.010698318481445
    6. 's' → logprob: -9.510698318481445
    7. ',' → logprob: -10.260698318481445
    8. '.' → logprob: -10.385698318481445
    9. 'chaine' → logprob: -10.885698318481445
    10. 'de' → logprob: -11.010698318481445

Token 38: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010708003537729383
    2. ').' → logprob: -7.376070976257324
    3. '')' → logprob: -9.001070976257324
    4. ' )' → logprob: -9.126070976257324
    5. '#' → logprob: -9.501070976257324
    6. 'e' → logprob: -9.626070976257324
    7. 's' → logprob: -11.001070976257324
    8. ')#' → logprob: -11.751070976257324
    9. '`)' → logprob: -11.876070976257324
    10. ',' → logprob: -12.001070976257324

Token 39: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5680458545684814
    2. 'u' → logprob: -1.3180458545684814
    3. '#' → logprob: -3.3180458545684814
    4. 'l' → logprob: -3.6930458545684814
    5. 'user' → logprob: -3.9430458545684814
    6. 's' → logprob: -4.193045616149902
    7. 'nom' → logprob: -4.318045616149902
    8. 'm' → logprob: -4.443045616149902
    9. '\' → logprob: -5.443045616149902
    10. 'a' → logprob: -5.443045616149902

Token 40: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7770876884460449
    2. 'u' → logprob: -1.402087688446045
    3. 'user' → logprob: -2.402087688446045
    4. '#' → logprob: -3.027087688446045
    5. 'nom' → logprob: -3.152087688446045
    6. 'l' → logprob: -3.652087688446045
    7. 's' → logprob: -3.902087688446045
    8. 'a' → logprob: -4.402087688446045
    9. 'name' → logprob: -4.527087688446045
    10. 'x' → logprob: -4.902087688446045

Token 41: 'split' (ID: 13627)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.3695864975452423
    2. 'nom' → logprob: -1.86958646774292
    3. 'username' → logprob: -3.74458646774292
    4. 's' → logprob: -3.86958646774292
    5. 'name' → logprob: -3.99458646774292
    6. 'texte' → logprob: -4.11958646774292
    7. 'message' → logprob: -4.11958646774292
    8. '#' → logprob: -4.49458646774292
    9. 'ligne' → logprob: -4.99458646774292
    10. 'util' → logprob: -5.24458646774292

Token 42: '()' (ID: 416)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6119351387023926
    2. '(' → logprob: -0.9869351387023926
    3. '()' → logprob: -2.4869351387023926
    4. '("("' → logprob: -6.986935138702393
    5. '("' → logprob: -8.361934661865234
    6. ''' → logprob: -8.361934661865234
    7. '('.')' → logprob: -9.236934661865234
    8. '(',' → logprob: -9.361934661865234
    9. '(
' → logprob: -9.986934661865234
    10. '("""' → logprob: -10.111934661865234

Token 43: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6057642102241516
    2. '(' → logprob: -1.1057641506195068
    3. '('' → logprob: -2.355764150619507
    4. ')' → logprob: -3.730764150619507
    5. ''' → logprob: -7.105764389038086
    6. '("' → logprob: -7.105764389038086
    7. ' )' → logprob: -7.480764389038086
    8. '())' → logprob: -7.480764389038086
    9. '')' → logprob: -7.980764389038086
    10. '(
' → logprob: -8.605764389038086

Token 44: ' sé' (ID: 7462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44518986344337463
    2. '()' → logprob: -1.0701898336410522
    3. '('' → logprob: -5.070189952850342
    4. '<|end|>' → logprob: -5.195189952850342
    5. ')' → logprob: -6.445189952850342
    6. '#' → logprob: -7.945189952850342
    7. ' (' → logprob: -8.195189476013184
    8. '().' → logprob: -8.320189476013184
    9. '("' → logprob: -8.445189476013184
    10. ' )' → logprob: -8.445189476013184

Token 45: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.00024001303245313466
    2. 'par' → logprob: -8.875240325927734
    3. 'p' → logprob: -10.250240325927734
    4. 'parer' → logprob: -10.250240325927734
    5. 'parent' → logprob: -11.500240325927734
    6. 'paration' → logprob: -11.750240325927734
    7. 'pa' → logprob: -13.125240325927734
    8. ' pare' → logprob: -13.375240325927734
    9. 'paren' → logprob: -13.500240325927734
    10. 'para' → logprob: -13.875240325927734

Token 46: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.31640926003456116
    2. '()' → logprob: -2.1914093494415283
    3. ' ' → logprob: -2.8164093494415283
    4. 'la' → logprob: -3.6914093494415283
    5. '(' → logprob: -4.191409111022949
    6. ' l' → logprob: -4.816409111022949
    7. 'l' → logprob: -4.941409111022949
    8. 'le' → logprob: -5.066409111022949
    9. ' les' → logprob: -5.066409111022949
    10. 'les' → logprob: -5.441409111022949

Token 47: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.8193883895874023
    2. ' ' → logprob: -1.1943883895874023
    3. ' ligne' → logprob: -1.5693883895874023
    4. 'chaine' → logprob: -4.444388389587402
    5. 'ligne' → logprob: -4.569388389587402
    6. 's' → logprob: -4.944388389587402
    7. ' chaine' → logprob: -5.319388389587402
    8. ' string' → logprob: -5.694388389587402
    9. '  ' → logprob: -5.819388389587402
    10. ' )' → logprob: -6.569388389587402

Token 48: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0360596179962158
    2. '()' → logprob: -1.4110596179962158
    3. '<|end|>' → logprob: -1.6610596179962158
    4. ')' → logprob: -2.286059617996216
    5. '(' → logprob: -3.036059617996216
    6. '[' → logprob: -3.911059617996216
    7. '[]' → logprob: -4.911059379577637
    8. ' )' → logprob: -5.286059379577637
    9. ' (' → logprob: -5.911059379577637
    10. '<|end|>' → logprob: -5.911059379577637

Token 49: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.24345698952674866
    2. ' des' → logprob: -1.8684569597244263
    3. 'une' → logprob: -3.243457078933716
    4. 'des' → logprob: -5.368456840515137
    5. ' espaces' → logprob: -5.493456840515137
    6. ' les' → logprob: -5.743456840515137
    7. ' un' → logprob: -5.993456840515137
    8. 's' → logprob: -6.368456840515137
    9. ' ' → logprob: -6.743456840515137
    10. 'les' → logprob: -6.868456840515137

Token 50: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.0923878476023674
    2. 'liste' → logprob: -2.4673879146575928
    3. 's' → logprob: -6.092387676239014
    4. 'list' → logprob: -7.342387676239014
    5. ' list' → logprob: -8.842388153076172
    6. ' chaîne' → logprob: -9.467388153076172
    7. ' listes' → logprob: -9.467388153076172
    8. 'chaine' → logprob: -9.717388153076172
    9. ' ' → logprob: -9.967388153076172
    10. ' ou' → logprob: -10.467388153076172

Token 51: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3555264472961426
    2. ' ' → logprob: -1.6055264472961426
    3. ' des' → logprob: -1.6055264472961426
    4. '<|end|>' → logprob: -2.7305264472961426
    5. 's' → logprob: -2.8555264472961426
    6. '.' → logprob: -3.3555264472961426
    7. ' de' → logprob: -3.3555264472961426
    8. 'tokens' → logprob: -3.7305264472961426
    9. ')' → logprob: -3.8555264472961426
    10. '()' → logprob: -4.230526447296143

Token 52: ' sous' (ID: 14487)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mots' → logprob: -1.0435861349105835
    2. 'm' → logprob: -1.1685861349105835
    3. ' chaînes' → logprob: -1.2935861349105835
    4. 'cha' → logprob: -3.418586254119873
    5. ' espaces' → logprob: -4.668586254119873
    6. 'mot' → logprob: -5.418586254119873
    7. 'esp' → logprob: -5.543586254119873
    8. 'chain' → logprob: -6.293586254119873
    9. ' ' → logprob: -6.418586254119873
    10. 'car' → logprob: -6.793586254119873

Token 53: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.9768282771110535
    2. '-cha' → logprob: -1.2268283367156982
    3. '-' → logprob: -1.4768283367156982
    4. '_' → logprob: -3.2268283367156982
    5. '-chain' → logprob: -3.3518283367156982
    6. '   ' → logprob: -5.226828098297119
    7. 'cha' → logprob: -5.351828098297119
    8. 'chain' → logprob: -5.726828098297119
    9. '_chain' → logprob: -5.976828098297119
    10. '' → logprob: -6.226828098297119

Token 54: 'înes' (ID: 171517)
  Prédit: 'nes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.019356967881321907
    2. 'înes' → logprob: -4.769357204437256
    3. 'nés' → logprob: -5.519357204437256
    4. 'ne' → logprob: -5.894357204437256
    5. 'r' → logprob: -6.394357204437256
    6. ' nes' → logprob: -7.269357204437256
    7. 'n' → logprob: -8.269356727600098
    8. '```' → logprob: -8.269356727600098
    9. 'nées' → logprob: -8.644356727600098
    10. 'né' → logprob: -8.644356727600098

Token 55: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8029283285140991
    2. ',' → logprob: -1.5529283285140991
    3. 's' → logprob: -2.0529284477233887
    4. '[' → logprob: -2.1779284477233887
    5. '(' → logprob: -3.4279284477233887
    6. 'tokens' → logprob: -4.177928447723389
    7. ')' → logprob: -4.802928447723389
    8. '```' → logprob: -4.927928447723389
    9. ' (' → logprob: -5.177928447723389
    10. '()' → logprob: -5.802928447723389

Token 56: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' en' (ID: 469)
  Prédit: ' selon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' selon' → logprob: -1.1502538919448853
    2. ' par' → logprob: -1.2752538919448853
    3. 'par' → logprob: -1.6502538919448853
    4. ' en' → logprob: -2.2752537727355957
    5. ' sur' → logprob: -3.2752537727355957
    6. 'au' → logprob: -3.7752537727355957
    7. 'sur' → logprob: -4.650253772735596
    8. ' au' → logprob: -4.650253772735596
    9. ' ' → logprob: -5.275253772735596
    10. ' à' → logprob: -5.650253772735596

Token 58: ' utilisant' (ID: 92474)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.28037288784980774
    2. 'fonction' → logprob: -1.7803728580474854
    3. ' utilisant' → logprob: -4.1553730964660645
    4. 's' → logprob: -4.6553730964660645
    5. ' espaces' → logprob: -4.7803730964660645
    6. ' ' → logprob: -4.9053730964660645
    7. ' fonctions' → logprob: -5.0303730964660645
    8. '['' → logprob: -5.2803730964660645
    9. ' ['' → logprob: -6.0303730964660645
    10. '```' → logprob: -6.1553730964660645

Token 59: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3421235084533691
    2. ''' → logprob: -1.4671235084533691
    3. ' l' → logprob: -1.8421235084533691
    4. ''un' → logprob: -2.342123508453369
    5. 'un' → logprob: -2.842123508453369
    6. 'le' → logprob: -2.967123508453369
    7. ' un' → logprob: -3.467123508453369
    8. '"' → logprob: -4.342123508453369
    9. ' ' → logprob: -4.342123508453369
    10. ' ' → logprob: -4.467123508453369

Token 60: ''espace' (ID: 118124)
  Prédit: ''espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''espace' → logprob: -0.2974518835544586
    2. ''' → logprob: -1.6724518537521362
    3. ''esp' → logprob: -3.547451972961426
    4. 'a' → logprob: -4.172451972961426
    5. 'e' → logprob: -4.297451972961426
    6. 'es' → logprob: -5.172451972961426
    7. ''a' → logprob: -5.922451972961426
    8. ''e' → logprob: -7.047451972961426
    9. '’espace' → logprob: -7.297451972961426
    10. ''un' → logprob: -7.797451972961426

Token 61: ' comme' (ID: 7971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8947243094444275
    2. 's' → logprob: -1.1447243690490723
    3. ''' → logprob: -2.1447243690490723
    4. '"' → logprob: -3.2697243690490723
    5. '.' → logprob: -3.3947243690490723
    6. ' )' → logprob: -3.7697243690490723
    7. ' ' → logprob: -3.8947243690490723
    8. '<|end|>' → logprob: -4.519724369049072
    9. '#' → logprob: -5.144724369049072
    10. '```' → logprob: -5.519724369049072

Token 62: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.5352578163146973
    2. 'sé' → logprob: -1.4102578163146973
    3. 'dé' → logprob: -2.4102578163146973
    4. 's' → logprob: -2.7852578163146973
    5. ' dé' → logprob: -4.285257816314697
    6. 'd' → logprob: -6.910257816314697
    7. 'delimiter' → logprob: -7.035257816314697
    8. 'se' → logprob: -7.285257816314697
    9. 'del' → logprob: -7.535257816314697
    10. ' séparation' → logprob: -7.660257816314697

Token 63: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.004113188479095697
    2. 'ation' → logprob: -6.25411319732666
    3. 'ate' → logprob: -7.37911319732666
    4. 'ateurs' → logprob: -8.25411319732666
    5. 'ator' → logprob: -8.25411319732666
    6. 'a' → logprob: -8.37911319732666
    7. '```' → logprob: -8.62911319732666
    8. 'par' → logprob: -8.75411319732666
    9. 'ar' → logprob: -9.12911319732666
    10. '#' → logprob: -9.37911319732666

Token 64: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.698078989982605
    2. '.' → logprob: -1.698078989982605
    3. ',' → logprob: -2.1980791091918945
    4. ' ' → logprob: -2.6980791091918945
    5. '[' → logprob: -2.8230791091918945
    6. 'user' → logprob: -4.1980791091918945
    7. 'n' → logprob: -4.4480791091918945
    8. 'tokens' → logprob: -4.4480791091918945
    9. 'u' → logprob: -4.8230791091918945
    10. '_' → logprob: -5.9480791091918945

Token 65: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.6831768751144409
    2. ' défaut' → logprob: -0.8081768751144409
    3. 'default' → logprob: -3.3081769943237305
    4. 'def' → logprob: -4.9331769943237305
    5. 'd' → logprob: -6.0581769943237305
    6. ' default' → logprob: -6.4331769943237305
    7. '#' → logprob: -7.5581769943237305
    8. ' déf' → logprob: -8.43317699432373
    9. ' def' → logprob: -8.68317699432373
    10. ' dé' → logprob: -9.05817699432373

Token 66: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7158041596412659
    2. 's' → logprob: -1.715804100036621
    3. 'u' → logprob: -2.965804100036621
    4. '_' → logprob: -3.340804100036621
    5. 'l' → logprob: -3.465804100036621
    6. ' ' → logprob: -3.590804100036621
    7. ',' → logprob: -3.715804100036621
    8. 'i' → logprob: -3.965804100036621
    9. 'a' → logprob: -3.965804100036621
    10. '[' → logprob: -3.965804100036621

Token 67: '#' (ID: 2)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5092798471450806
    2. 'n' → logprob: -1.5092798471450806
    3. 'u' → logprob: -3.134279727935791
    4. 'user' → logprob: -3.384279727935791
    5. 's' → logprob: -3.509279727935791
    6. '#' → logprob: -4.009279727935791
    7. 'i' → logprob: -4.759279727935791
    8. 'm' → logprob: -4.884279727935791
    9. 'a' → logprob: -4.884279727935791
    10. 'ligne' → logprob: -5.134279727935791

Token 68: ' Par' (ID: 3371)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0977263450622559
    2. 'n' → logprob: -1.2227263450622559
    3. '#' → logprob: -1.7227263450622559
    4. 'u' → logprob: -2.097726345062256
    5. 's' → logprob: -3.972726345062256
    6. 'a' → logprob: -4.472726345062256
    7. 'user' → logprob: -4.722726345062256
    8. 'i' → logprob: -5.097726345062256
    9. 't' → logprob: -5.597726345062256
    10. 'r' → logprob: -5.847726345062256

Token 69: ' exemple' (ID: 26320)
  Prédit: ' défaut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' défaut' → logprob: -0.828986406326294
    2. ' exemple' → logprob: -1.453986406326294
    3. ' conséquent' → logprob: -2.828986406326294
    4. 'ex' → logprob: -2.953986406326294
    5. 'dé' → logprob: -3.078986406326294
    6. '```' → logprob: -3.578986406326294
    7. 'default' → logprob: -3.578986406326294
    8. 'ce' → logprob: -4.078986167907715
    9. ' default' → logprob: -4.203986167907715
    10. 'e' → logprob: -4.578986167907715

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24517527222633362
    2. ' ,' → logprob: -2.120175361633301
    3. ' :' → logprob: -2.620175361633301
    4. ':' → logprob: -4.745175361633301
    5. 's' → logprob: -5.245175361633301
    6. ' ' → logprob: -5.370175361633301
    7. '#' → logprob: -5.870175361633301
    8. ' #' → logprob: -7.995175361633301
    9. ' d' → logprob: -8.4951753616333
    10. ' la' → logprob: -8.4951753616333

Token 71: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.604205310344696
    2. ' on' → logprob: -2.479205369949341
    3. ' l' → logprob: -2.729205369949341
    4. ' la' → logprob: -3.104205369949341
    5. 'si' → logprob: -3.854205369949341
    6. 's' → logprob: -3.979205369949341
    7. '#' → logprob: -4.104205131530762
    8. 'l' → logprob: -4.354205131530762
    9. ' if' → logprob: -4.354205131530762
    10. ' ' → logprob: -4.354205131530762

Token 72: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.04874451458454132
    2. ' on' → logprob: -3.7987444400787354
    3. 'l' → logprob: -4.4237446784973145
    4. ' vous' → logprob: -4.9237446784973145
    5. ' tu' → logprob: -6.6737446784973145
    6. ' ' → logprob: -6.7987446784973145
    7. 'vous' → logprob: -7.2987446784973145
    8. ' user' → logprob: -7.9237446784973145
    9. ' je' → logprob: -8.173744201660156
    10. ' utilisateur' → logprob: -8.423744201660156

Token 73: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -1.2463282346725464
    2. 'a' → logprob: -1.6213282346725464
    3. ' utilisateur' → logprob: -1.6213282346725464
    4. ' l' → logprob: -1.9963282346725464
    5. 'u' → logprob: -3.371328353881836
    6. ' on' → logprob: -3.621328353881836
    7. ' a' → logprob: -3.746328353881836
    8. 'l' → logprob: -3.746328353881836
    9. ' user' → logprob: -4.621328353881836
    10. ''' → logprob: -4.746328353881836

Token 74: ' sais' (ID: 30010)
  Prédit: ' sais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sais' → logprob: -0.8389202952384949
    2. ' entre' → logprob: -0.9639202952384949
    3. ' tape' → logprob: -1.9639203548431396
    4. ' sa' → logprob: -3.8389203548431396
    5. 's' → logprob: -4.2139201164245605
    6. ' a' → logprob: -6.2139201164245605
    7. ' ' → logprob: -6.2139201164245605
    8. 'entre' → logprob: -6.4639201164245605
    9. ' écrit' → logprob: -6.5889201164245605
    10. 'sa' → logprob: -7.7139201164245605

Token 75: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.023902051150798798
    2. 'it' → logprob: -3.77390193939209
    3. '#' → logprob: -9.02390193939209
    4. 'et' → logprob: -9.39890193939209
    5. 's' → logprob: -9.52390193939209
    6. 'sit' → logprob: -9.52390193939209
    7. 'e' → logprob: -9.77390193939209
    8. 'er' → logprob: -10.14890193939209
    9. '```' → logprob: -10.27390193939209
    10. '   ' → logprob: -11.27390193939209

Token 76: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7170552015304565
    2. ' "' → logprob: -0.8420552015304565
    3. ' :' → logprob: -3.467055320739746
    4. ' ' → logprob: -4.592055320739746
    5. ' '' → logprob: -4.592055320739746
    6. ':' → logprob: -4.592055320739746
    7. ''' → logprob: -4.842055320739746
    8. ' ' → logprob: -6.467055320739746
    9. ' un' → logprob: -6.842055320739746
    10. '1' → logprob: -6.842055320739746

Token 77: '8' (ID: 23)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7820457816123962
    2. '3' → logprob: -1.907045841217041
    3. '10' → logprob: -2.032045841217041
    4. '12' → logprob: -2.532045841217041
    5. 'Bonjour' → logprob: -2.532045841217041
    6. '2' → logprob: -3.282045841217041
    7. 'bonjour' → logprob: -4.032045841217041
    8. '"' → logprob: -4.532045841217041
    9. '123' → logprob: -4.657045841217041
    10. 'je' → logprob: -5.282045841217041

Token 78: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2301948219537735
    2. ' +' → logprob: -1.7301948070526123
    3. ' *' → logprob: -4.230195045471191
    4. '+' → logprob: -4.730195045471191
    5. '0' → logprob: -6.355195045471191
    6. '7' → logprob: -7.355195045471191
    7. '5' → logprob: -7.855195045471191
    8. '*' → logprob: -7.855195045471191
    9. '8' → logprob: -8.230195045471191
    10. '2' → logprob: -8.355195045471191

Token 79: '3' (ID: 18)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -1.4799060821533203
    2. '10' → logprob: -1.6049060821533203
    3. '+' → logprob: -1.7299060821533203
    4. '4' → logprob: -2.2299060821533203
    5. '3' → logprob: -2.6049060821533203
    6. '5' → logprob: -2.8549060821533203
    7. '2' → logprob: -3.2299060821533203
    8. '9' → logprob: -3.8549060821533203
    9. '7' → logprob: -4.10490608215332
    10. '20' → logprob: -4.22990608215332

Token 80: '",' (ID: 672)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5816524624824524
    2. ' +' → logprob: -0.9566524624824524
    3. '+' → logprob: -3.9566524028778076
    4. '7' → logprob: -4.581652641296387
    5. '5' → logprob: -5.331652641296387
    6. ' +"' → logprob: -5.331652641296387
    7. '"' → logprob: -5.581652641296387
    8. ' "' → logprob: -5.706652641296387
    9. '4' → logprob: -5.831652641296387
    10. '2' → logprob: -6.081652641296387

Token 81: ' alors' (ID: 17971)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.46867066621780396
    2. ' le' → logprob: -2.218670606613159
    3. ' ' → logprob: -2.718670606613159
    4. ' les' → logprob: -3.593670606613159
    5. ' l' → logprob: -3.718670606613159
    6. ' alors' → logprob: -3.843670606613159
    7. ' on' → logprob: -4.343670845031738
    8. ' ' → logprob: -4.593670845031738
    9. 'split' → logprob: -4.593670845031738
    10. ' split' → logprob: -4.718670845031738

Token 82: ' input' (ID: 3422)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4044979512691498
    2. ' input' → logprob: -2.0294978618621826
    3. 'la' → logprob: -3.2794978618621826
    4. 'input' → logprob: -3.5294978618621826
    5. 'split' → logprob: -3.6544978618621826
    6. ' split' → logprob: -4.029498100280762
    7. ' on' → logprob: -4.154498100280762
    8. ' l' → logprob: -4.279498100280762
    9. '['' → logprob: -4.529498100280762
    10. ' le' → logprob: -4.779498100280762

Token 83: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.76878422498703
    2. '().' → logprob: -0.76878422498703
    3. '()' → logprob: -2.643784284591675
    4. '.' → logprob: -6.893784046173096
    5. '(
' → logprob: -8.143784523010254
    6. '(

' → logprob: -8.768784523010254
    7. '('' → logprob: -9.143784523010254
    8. '("' → logprob: -10.143784523010254
    9. ')' → logprob: -10.768784523010254
    10. 's' → logprob: -10.893784523010254

Token 84: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0025008674710989
    2. ' split' → logprob: -6.002501010894775
    3. 'strip' → logprob: -10.752500534057617
    4. 'spl' → logprob: -13.002500534057617
    5. '.split' → logprob: -14.877500534057617
    6. '```' → logprob: -15.002500534057617
    7. '(split' → logprob: -15.252500534057617
    8. 'rstrip' → logprob: -15.252500534057617
    9. 's' → logprob: -15.877500534057617
    10. '_split' → logprob: -16.502500534057617

Token 85: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06353643536567688
    2. '(' → logprob: -2.8135364055633545
    3. '('' → logprob: -6.688536643981934
    4. '(
' → logprob: -9.688536643981934
    5. '("' → logprob: -10.188536643981934
    6. '()
' → logprob: -10.313536643981934
    7. '("("' → logprob: -10.688536643981934
    8. ' ()' → logprob: -10.938536643981934
    9. '()">' → logprob: -10.938536643981934
    10. '()[' → logprob: -11.063536643981934

Token 86: ' devient' (ID: 63488)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4532366394996643
    2. '['' → logprob: -1.7032365798950195
    3. ' ' → logprob: -2.5782365798950195
    4. ' ['' → logprob: -3.4532365798950195
    5. ' ren' → logprob: -4.0782365798950195
    6. 'produ' → logprob: -4.4532365798950195
    7. ' retourne' → logprob: -4.8282365798950195
    8. '["' → logprob: -4.9532365798950195
    9. 'ren' → logprob: -5.2032365798950195
    10. ' donnera' → logprob: -5.4532365798950195

Token 87: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.034263793379068375
    2. '["' → logprob: -3.409263849258423
    3. ' ['' → logprob: -7.659263610839844
    4. '[' → logprob: -8.909263610839844
    5. ' ["' → logprob: -11.534263610839844
    6. '```' → logprob: -15.284263610839844
    7. ''' → logprob: -15.534263610839844
    8. '['_' → logprob: -15.784263610839844
    9. ' ' → logprob: -15.909263610839844
    10. '[
' → logprob: -16.284263610839844

Token 88: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.125
    3. '"' → logprob: -17.125
    4. ' ' → logprob: -17.875
    5. ''' → logprob: -17.875
    6. '８' → logprob: -18.0
    7. '88' → logprob: -18.4375
    8. '۸' → logprob: -18.9375
    9. '৮' → logprob: -19.0
    10. '1' → logprob: -19.125

Token 89: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.46303901076316833
    2. '3' → logprob: -1.0880390405654907
    3. '','' → logprob: -3.463038921356201
    4. ''' → logprob: -6.588038921356201
    5. ',' → logprob: -7.338038921356201
    6. ' ',' → logprob: -8.33803939819336
    7. ' ','' → logprob: -9.83803939819336
    8. '',"' → logprob: -10.33803939819336
    9. ' ' → logprob: -10.71303939819336
    10. '8' → logprob: -10.96303939819336

Token 90: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00862414762377739
    2. ' '' → logprob: -4.758624076843262
    3. ' ' → logprob: -12.633624076843262
    4. '3' → logprob: -12.633624076843262
    5. '"' → logprob: -14.383624076843262
    6. '',' → logprob: -14.633624076843262
    7. ''s' → logprob: -14.758624076843262
    8. '8' → logprob: -15.133624076843262
    9. ' ' → logprob: -15.633624076843262
    10. ''m' → logprob: -15.883624076843262

Token 91: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.200166469876422e-06
    2. ''' → logprob: -12.375004768371582
    3. '','' → logprob: -15.125004768371582
    4. '']' → logprob: -15.625004768371582
    5. '8' → logprob: -16.1250057220459
    6. '',' → logprob: -16.1250057220459
    7. '1' → logprob: -16.1250057220459
    8. ' ' → logprob: -16.5000057220459
    9. ''s' → logprob: -17.1250057220459
    10. '３' → logprob: -17.3750057220459

Token 92: '']' (ID: 1089)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4742686450481415
    2. '']' → logprob: -0.9742686748504639
    3. ''' → logprob: -9.099268913269043
    4. '"]' → logprob: -9.849268913269043
    5. ' ]' → logprob: -11.099268913269043
    6. ',' → logprob: -12.849268913269043
    7. '',' → logprob: -13.099268913269043
    8. ' ']' → logprob: -13.099268913269043
    9. ']'' → logprob: -14.099268913269043
    10. '`]' → logprob: -14.224268913269043

Token 93: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7113348841667175
    2. 'n' → logprob: -1.2113349437713623
    3. 'a' → logprob: -1.9613349437713623
    4. 'x' → logprob: -2.9613349437713623
    5. '[' → logprob: -6.086334705352783
    6. 'b' → logprob: -6.336334705352783
    7. '8' → logprob: -6.461334705352783
    8. 'l' → logprob: -6.586334705352783
    9. 'nombre' → logprob: -6.586334705352783
    10. ' 
' → logprob: -6.711334705352783

Token 94: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7500266432762146
    2. 'n' → logprob: -0.8750266432762146
    3. 'a' → logprob: -2.5000267028808594
    4. 'x' → logprob: -3.8750267028808594
    5. 'b' → logprob: -6.375026702880859
    6. 'l' → logprob: -6.625026702880859
    7. 'nombre' → logprob: -7.125026702880859
    8. '\' → logprob: -7.875026702880859
    9. 's' → logprob: -7.875026702880859
    10. '```' → logprob: -7.875026702880859

Token 95: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3377916216850281
    2. '#' → logprob: -1.7127916812896729
    3. 'x' → logprob: -3.337791681289673
    4. 'a' → logprob: -3.462791681289673
    5. 'l' → logprob: -3.837791681289673
    6. 'i' → logprob: -5.462791442871094
    7. 's' → logprob: -5.462791442871094
    8. 'u' → logprob: -5.712791442871094
    9. 'v' → logprob: -7.462791442871094
    10. 'm' → logprob: -7.587791442871094

Token 96: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2014436721801758
    2. 'a' → logprob: -1.7014436721801758
    3. '#' → logprob: -1.9514436721801758
    4. 'l' → logprob: -2.076443672180176
    5. 's' → logprob: -2.326443672180176
    6. 'x' → logprob: -3.576443672180176
    7. ' ligne' → logprob: -3.951443672180176
    8. 'ligne' → logprob: -4.451443672180176
    9. ' #' → logprob: -4.576443672180176
    10. 'tail' → logprob: -4.576443672180176

Token 97: ' '' (ID: 461)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2783379852771759
    2. ' input' → logprob: -2.6533379554748535
    3. ' int' → logprob: -3.0283379554748535
    4. 'map' → logprob: -3.2783379554748535
    5. ' list' → logprob: -3.4033379554748535
    6. ' =' → logprob: -4.2783379554748535
    7. 'int' → logprob: -5.0283379554748535
    8. ' ' → logprob: -5.1533379554748535
    9. ' n' → logprob: -5.5283379554748535
    10. '=' → logprob: -5.7783379554748535

Token 98: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06274832785129547
    2. ' map' → logprob: -3.562748432159424
    3. 'int' → logprob: -4.062748432159424
    4. 'input' → logprob: -4.437748432159424
    5. 'list' → logprob: -5.937748432159424
    6. 'print' → logprob: -8.437747955322266
    7. ' input' → logprob: -8.562747955322266
    8. ' int' → logprob: -8.687747955322266
    9. ' list' → logprob: -9.687747955322266
    10. '[int' → logprob: -9.937747955322266

Token 99: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0924067571759224
    2. '(int' → logprob: -2.967406749725342
    3. '(lambda' → logprob: -3.967406749725342
    4. '(str' → logprob: -4.217406749725342
    5. '(
' → logprob: -6.842406749725342
    6. '('' → logprob: -7.092406749725342
    7. '<|end|>' → logprob: -7.967406749725342
    8. '()' → logprob: -8.8424072265625
    9. '(float' → logprob: -9.7174072265625
    10. '(f' → logprob: -9.9674072265625

Token 100: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023178455885499716
    2. ',' → logprob: -6.627317905426025
    3. ')'' → logprob: -7.377317905426025
    4. ')`' → logprob: -8.877317428588867
    5. ' )' → logprob: -9.627317428588867
    6. '<|end|>' → logprob: -11.002317428588867
    7. '),' → logprob: -11.127317428588867
    8. '')' → logprob: -11.127317428588867
    9. ')">' → logprob: -11.252317428588867
    10. ')(' → logprob: -11.252317428588867

Token 101: ' ...' (ID: 2550)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14697043597698212
    2. ' input' → logprob: -2.021970510482788
    3. ')' → logprob: -5.521970272064209
    4. ' )' → logprob: -8.771970748901367
    5. '(input' → logprob: -9.396970748901367
    6. ' ' → logprob: -11.521970748901367
    7. 'user' → logprob: -11.771970748901367
    8. '<input' → logprob: -12.146970748901367
    9. '=input' → logprob: -12.396970748901367
    10. '...)' → logprob: -13.084470748901367

Token 102: ')'' (ID: 45517)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.318514347076416
    2. ')' → logprob: -1.568514347076416
    3. ')'' → logprob: -3.568514347076416
    4. '(' → logprob: -3.943514347076416
    5. 'input' → logprob: -4.943514347076416
    6. '('' → logprob: -6.068514347076416
    7. ' )' → logprob: -6.068514347076416
    8. '())' → logprob: -6.568514347076416
    9. ')`' → logprob: -6.693514347076416
    10. '(...' → logprob: -7.568514347076416

Token 103: ' applique' (ID: 180579)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.07485591620206833
    2. 'convert' → logprob: -3.4498558044433594
    3. ' transforme' → logprob: -4.074855804443359
    4. ' applique' → logprob: -4.824855804443359
    5. '<|end|>' → logprob: -5.324855804443359
    6. ' applies' → logprob: -6.324855804443359
    7. ' converts' → logprob: -6.574855804443359
    8. ' apply' → logprob: -6.699855804443359
    9. ')' → logprob: -6.949855804443359
    10. '(convert' → logprob: -6.949855804443359

Token 104: ' la' (ID: 557)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.13120964169502258
    2. 'int' → logprob: -2.1312096118927
    3. ' la' → logprob: -5.506209850311279
    4. ' ' → logprob: -9.381209373474121
    5. '(int' → logprob: -10.381209373474121
    6. ' une' → logprob: -10.881209373474121
    7. ' ' → logprob: -10.881209373474121
    8. ' à' → logprob: -11.131209373474121
    9. ' l' → logprob: -11.756209373474121
    10. ' a' → logprob: -12.131209373474121

Token 105: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2579030692577362
    2. ' int' → logprob: -1.7579030990600586
    3. 'fonction' → logprob: -3.1329030990600586
    4. ' fonction' → logprob: -4.507903099060059
    5. ' function' → logprob: -9.257903099060059
    6. ' conversion' → logprob: -9.507903099060059
    7. 'function' → logprob: -10.257903099060059
    8. ' ' → logprob: -10.632903099060059
    9. 'conversion' → logprob: -11.257903099060059
    10. '`' → logprob: -11.882903099060059

Token 106: ' '' (ID: 461)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08947186917066574
    2. 'int' → logprob: -2.4644718170166016
    3. '(int' → logprob: -8.339471817016602
    4. ' ' → logprob: -9.089471817016602
    5. ' ' → logprob: -10.464471817016602
    6. ' `' → logprob: -10.464471817016602
    7. '<int' → logprob: -10.589471817016602
    8. ' '' → logprob: -11.089471817016602
    9. ' map' → logprob: -11.464471817016602
    10. '[int' → logprob: -11.464471817016602

Token 107: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009991695173084736
    2. ' int' → logprob: -4.634991645812988
    3. 'str' → logprob: -8.509991645812988
    4. 'split' → logprob: -11.384991645812988
    5. 'input' → logprob: -11.509991645812988
    6. '<int' → logprob: -12.759991645812988
    7. ' str' → logprob: -13.009991645812988
    8. '(int' → logprob: -13.259991645812988
    9. 'strip' → logprob: -13.759991645812988
    10. '=int' → logprob: -13.759991645812988

Token 108: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004269527271389961
    2. ' )' → logprob: -6.004269599914551
    3. ')'' → logprob: -6.504269599914551
    4. ')`' → logprob: -9.50426959991455
    5. '(' → logprob: -9.62926959991455
    6. '())' → logprob: -10.37926959991455
    7. ''' → logprob: -10.50426959991455
    8. '')' → logprob: -11.12926959991455
    9. '()' → logprob: -11.25426959991455
    10. ' ' → logprob: -11.37926959991455

Token 109: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4137100875377655
    2. ')' → logprob: -1.163710117340088
    3. '()' → logprob: -4.538710117340088
    4. ' à' → logprob: -5.288710117340088
    5. ' )' → logprob: -6.163710117340088
    6. ' sur' → logprob: -6.288710117340088
    7. 'sur' → logprob: -6.663710117340088
    8. '(
' → logprob: -6.788710117340088
    9. ' aux' → logprob: -7.038710117340088
    10. '(s' → logprob: -7.288710117340088

Token 110: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.02901173196732998
    2. 'cha' → logprob: -4.6540117263793945
    3. ' chacune' → logprob: -4.6540117263793945
    4. ' chacun' → logprob: -5.2790117263793945
    5. ' each' → logprob: -6.0290117263793945
    6. ' cha' → logprob: -7.4040117263793945
    7. 'ch' → logprob: -7.7790117263793945
    8. 'Chaque' → logprob: -7.9040117263793945
    9. 'each' → logprob: -8.654011726379395
    10. 't' → logprob: -9.029011726379395

Token 111: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0059718117117881775
    2. ' élément' → logprob: -5.130971908569336
    3. 'element' → logprob: -11.130971908569336
    4. 'é' → logprob: -11.380971908569336
    5. 'él' → logprob: -12.380971908569336
    6. ' ' → logprob: -12.630971908569336
    7. ' él' → logprob: -12.880971908569336
    8. ' element' → logprob: -13.130971908569336
    9. ' éléments' → logprob: -13.255971908569336
    10. ' Él' → logprob: -13.755971908569336

Token 112: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20254531502723694
    2. ' de' → logprob: -2.202545404434204
    3. ' des' → logprob: -3.202545404434204
    4. ')' → logprob: -4.702545166015625
    5. '(
' → logprob: -5.327545166015625
    6. '()' → logprob: -5.327545166015625
    7. 'de' → logprob: -5.702545166015625
    8. 'des' → logprob: -5.827545166015625
    9. ',' → logprob: -6.452545166015625
    10. ' (' → logprob: -6.952545166015625

Token 113: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.23004983365535736
    2. 'l' → logprob: -2.4800498485565186
    3. ' input' → logprob: -2.6050498485565186
    4. ' la' → logprob: -3.8550498485565186
    5. '['' → logprob: -4.6050496101379395
    6. 'la' → logprob: -4.9800496101379395
    7. ' l' → logprob: -5.3550496101379395
    8. '[input' → logprob: -6.6050496101379395
    9. ' ' → logprob: -6.9800496101379395
    10. ')' → logprob: -7.3550496101379395

Token 114: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.22077158093452454
    2. ' liste' → logprob: -2.470771551132202
    3. 'input' → logprob: -2.720771551132202
    4. 'list' → logprob: -3.095771551132202
    5. ' input' → logprob: -7.095771789550781
    6. 'entrée' → logprob: -8.470771789550781
    7. 'result' → logprob: -8.470771789550781
    8. 'split' → logprob: -8.595771789550781
    9. 'lista' → logprob: -8.970771789550781
    10. 'Liste' → logprob: -8.970771789550781

Token 115: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5412846803665161
    2. ' ' → logprob: -1.5412846803665161
    3. ',' → logprob: -2.2912845611572266
    4. ' )' → logprob: -2.2912845611572266
    5. 's' → logprob: -2.5412845611572266
    6. ' de' → logprob: -3.1662845611572266
    7. ' 
' → logprob: -3.7912845611572266
    8. ' input' → logprob: -3.9162845611572266
    9. ' ,' → logprob: -4.041284561157227
    10. '.' → logprob: -4.041284561157227

Token 116: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.541175901889801
    2. ',' → logprob: -1.1661758422851562
    3. '(' → logprob: -3.0411758422851562
    4. 's' → logprob: -4.541175842285156
    5. ''' → logprob: -4.791175842285156
    6. '(
' → logprob: -5.041175842285156
    7. '[' → logprob: -5.416175842285156
    8. '.' → logprob: -5.916175842285156
    9. ' (' → logprob: -5.916175842285156
    10. ' )' → logprob: -5.916175842285156

Token 117: ' résult' (ID: 31657)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4255695343017578
    2. ')' → logprob: -2.675569534301758
    3. '.' → logprob: -2.675569534301758
    4. ',
' → logprob: -3.550569534301758
    5. 'user' → logprob: -3.675569534301758
    6. 's' → logprob: -3.675569534301758
    7. ' pour' → logprob: -4.425569534301758
    8. 'n' → logprob: -4.800569534301758
    9. ' )' → logprob: -4.800569534301758
    10. ' ,' → logprob: -4.800569534301758

Token 118: 'ant' (ID: 493)
  Prédit: 'ante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.16639497876167297
    2. 'e' → logprob: -1.9163949489593506
    3. 'ant' → logprob: -5.91639518737793
    4. 'ue' → logprob: -7.04139518737793
    5. 'ate' → logprob: -7.16639518737793
    6. 'at' → logprob: -7.66639518737793
    7. 'a' → logprob: -8.04139518737793
    8. '#' → logprob: -8.16639518737793
    9. ' e' → logprob: -8.66639518737793
    10. ' en' → logprob: -9.04139518737793

Token 119: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8505606651306152
    2. 'e' → logprob: -0.8505606651306152
    3. ' en' → logprob: -2.8505606651306152
    4. ']' → logprob: -3.8505606651306152
    5. ' de' → logprob: -3.8505606651306152
    6. 's' → logprob: -4.975560665130615
    7. ' e' → logprob: -5.100560665130615
    8. '[' → logprob: -5.225560665130615
    9. 'ent' → logprob: -5.350560665130615
    10. ' )' → logprob: -5.475560665130615

Token 120: ' des' (ID: 731)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2047603875398636
    2. ' un' → logprob: -1.7047604322433472
    3. 'une' → logprob: -6.454760551452637
    4. ' des' → logprob: -7.329760551452637
    5. ' ' → logprob: -7.454760551452637
    6. 'un' → logprob: -8.954760551452637
    7. ' a' → logprob: -9.579760551452637
    8. ' u' → logprob: -9.704760551452637
    9. 'a' → logprob: -9.829760551452637
    10. ' ' → logprob: -9.954760551452637

Token 121: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.6058586239814758
    2. 'ent' → logprob: -1.480858564376831
    3. ' nombres' → logprob: -1.855858564376831
    4. ' objets' → logprob: -3.480858564376831
    5. ' integers' → logprob: -4.10585880279541
    6. ' entier' → logprob: -5.60585880279541
    7. ' valeurs' → logprob: -5.60585880279541
    8. ' int' → logprob: -5.73085880279541
    9. ' liste' → logprob: -6.48085880279541
    10. ' listes' → logprob: -6.73085880279541

Token 122: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.032653018832206726
    2. 'i' → logprob: -3.5326530933380127
    3. 'ières' → logprob: -5.907652854919434
    4. '#' → logprob: -9.407652854919434
    5. '```' → logprob: -10.157652854919434
    6. '   ' → logprob: -11.157652854919434
    7. '_i' → logprob: -11.657652854919434
    8. 'ié' → logprob: -12.282652854919434
    9. ' i' → logprob: -12.407652854919434
    10. '[i' → logprob: -12.657652854919434

Token 123: ' :' (ID: 712)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9676597714424133
    2. 'a' → logprob: -1.4676597118377686
    3. 's' → logprob: -2.2176597118377686
    4. ',' → logprob: -2.3426597118377686
    5. 'x' → logprob: -2.9676597118377686
    6. ')' → logprob: -3.4676597118377686
    7. 'r' → logprob: -3.9676597118377686
    8. '.' → logprob: -4.217659950256348
    9. ':' → logprob: -4.842659950256348
    10. 'e' → logprob: -5.342659950256348

Token 124: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8087118268013
    2. ' a' → logprob: -0.9337118268013
    3. 'n' → logprob: -2.8087117671966553
    4. ' n' → logprob: -3.8087117671966553
    5. ' A' → logprob: -4.433712005615234
    6. 'A' → logprob: -4.433712005615234
    7. ' numbers' → logprob: -4.808712005615234
    8. 'numbers' → logprob: -5.058712005615234
    9. 'N' → logprob: -5.433712005615234
    10. ' L' → logprob: -5.683712005615234

Token 125: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5387872457504272
    2. '(int' → logprob: -0.9137872457504272
    3. '(lambda' → logprob: -4.538787364959717
    4. '<int' → logprob: -5.788787364959717
    5. '(
' → logprob: -7.288787364959717
    6. '[int' → logprob: -8.038786888122559
    7. ' (' → logprob: -8.413786888122559
    8. '(str' → logprob: -9.038786888122559
    9. '(list' → logprob: -9.288786888122559
    10. '<|end|>' → logprob: -9.788786888122559

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16741664707660675
    2. '(input' → logprob: -2.417416572570801
    3. ')' → logprob: -3.167416572570801
    4. '(' → logprob: -4.542416572570801
    5. ',input' → logprob: -4.667416572570801
    6. '(user' → logprob: -7.417416572570801
    7. ' ,' → logprob: -7.417416572570801
    8. ' (' → logprob: -8.2924165725708
    9. ',)' → logprob: -8.4174165725708
    10. ' )' → logprob: -8.7924165725708

Token 127: ' ['' (ID: 5140)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6956383585929871
    2. ' input' → logprob: -0.6956383585929871
    3. ')' → logprob: -6.320638179779053
    4. ' )' → logprob: -8.320638656616211
    5. '[input' → logprob: -9.070638656616211
    6. '(input' → logprob: -9.570638656616211
    7. '['' → logprob: -9.945638656616211
    8. ' ['' → logprob: -9.945638656616211
    9. 'user' → logprob: -10.570638656616211
    10. '<input' → logprob: -10.820638656616211

Token 128: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0009607735555619001
    2. ''' → logprob: -7.250960826873779
    3. '"' → logprob: -8.500960350036621
    4. ' ' → logprob: -10.125960350036621
    5. 'input' → logprob: -13.000960350036621
    6. '1' → logprob: -13.500960350036621
    7. ')' → logprob: -14.750960350036621
    8. ' '' → logprob: -14.875960350036621
    9. '2' → logprob: -14.875960350036621
    10. '3' → logprob: -15.250960350036621

Token 129: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0010318574495613575
    2. ' ',' → logprob: -7.626031875610352
    3. ''' → logprob: -7.751031875610352
    4. '','' → logprob: -9.751031875610352
    5. ',' → logprob: -10.376031875610352
    6. '3' → logprob: -11.501031875610352
    7. '',
' → logprob: -12.501031875610352
    8. ' ' → logprob: -12.751031875610352
    9. '2' → logprob: -13.376031875610352
    10. ''s' → logprob: -14.126031875610352

Token 130: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07311543822288513
    2. ' '' → logprob: -2.948115348815918
    3. '3' → logprob: -4.073115348815918
    4. ' ' → logprob: -6.948115348815918
    5. '8' → logprob: -10.448115348815918
    6. '2' → logprob: -11.573115348815918
    7. '"' → logprob: -11.573115348815918
    8. ' 
' → logprob: -11.698115348815918
    9. ' ' → logprob: -12.573115348815918
    10. '4' → logprob: -12.948115348815918

Token 131: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.408677290892228e-05
    2. ' ' → logprob: -9.7500638961792
    3. ''' → logprob: -12.6250638961792
    4. '',' → logprob: -14.1250638961792
    5. '','' → logprob: -14.3750638961792
    6. '']' → logprob: -15.6250638961792
    7. ' '' → logprob: -16.000064849853516
    8. '   ' → logprob: -16.125064849853516
    9. '  ' → logprob: -16.437564849853516
    10. '
' → logprob: -16.562564849853516

Token 132: ''])' (ID: 11775)
  Prédit: ''])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.16114819049835205
    2. '])' → logprob: -1.911148190498352
    3. ')' → logprob: -7.5361480712890625
    4. '']' → logprob: -8.411148071289062
    5. '"])' → logprob: -9.786148071289062
    6. ']' → logprob: -9.911148071289062
    7. ' ])' → logprob: -11.161148071289062
    8. ''' → logprob: -11.411148071289062
    9. ''])
' → logprob: -11.411148071289062
    10. '']))' → logprob: -12.161148071289062

Token 133: ' donne' (ID: 30004)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012075377628207207
    2. ' )' → logprob: -5.012075424194336
    3. ',' → logprob: -6.387075424194336
    4. '(' → logprob: -7.762075424194336
    5. ')
' → logprob: -7.762075424194336
    6. '
' → logprob: -7.887075424194336
    7. '#' → logprob: -8.387075424194336
    8. '()' → logprob: -8.887075424194336
    9. 'x' → logprob: -9.012075424194336
    10. ' =' → logprob: -9.137075424194336

Token 134: ' un' (ID: 537)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4058963358402252
    2. ' [' → logprob: -1.2808963060379028
    3. ' <' → logprob: -3.6558964252471924
    4. ' map' → logprob: -4.405896186828613
    5. 'map' → logprob: -5.030896186828613
    6. ' ' → logprob: -5.155896186828613
    7. '<' → logprob: -5.405896186828613
    8. '<int' → logprob: -7.530896186828613
    9. '8' → logprob: -9.280896186828613
    10. ' (' → logprob: -9.280896186828613

Token 135: ' it' (ID: 480)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.054768193513154984
    2. '<' → logprob: -3.4297680854797363
    3. ' map' → logprob: -3.9297680854797363
    4. '<m' → logprob: -7.929768085479736
    5. '_map' → logprob: -8.179768562316895
    6. ' <' → logprob: -8.679768562316895
    7. ' ' → logprob: -8.804768562316895
    8. 'm' → logprob: -9.554768562316895
    9. 'iter' → logprob: -10.054768562316895
    10. 'it' → logprob: -10.554768562316895

Token 136: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.003291782923042774
    2. 'era' → logprob: -6.628291606903076
    3. 'e' → logprob: -6.878291606903076
    4. 'érateur' → logprob: -7.378291606903076
    5. 'ér' → logprob: -9.503292083740234
    6. 'erat' → logprob: -9.878292083740234
    7. 'ERATOR' → logprob: -10.003292083740234
    8. 'ера' → logprob: -10.503292083740234
    9. 'erar' → logprob: -11.253292083740234
    10. '_' → logprob: -11.628292083740234

Token 137: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.05221367999911308
    2. 'ator' → logprob: -3.302213668823242
    3. 'ateur' → logprob: -4.302213668823242
    4. 'a' → logprob: -8.927213668823242
    5. 'abl' → logprob: -9.302213668823242
    6. 'acteur' → logprob: -10.177213668823242
    7. 'ab' → logprob: -10.552213668823242
    8. '   ' → logprob: -10.677213668823242
    9. 'artor' → logprob: -10.927213668823242
    10. '```' → logprob: -11.052213668823242

Token 138: ' équ' (ID: 18899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: 'ivalent' (ID: 19253)
  Prédit: 'ivalent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivalent' → logprob: -0.0008153468370437622
    2. 'iv' → logprob: -7.875815391540527
    3. 'ival' → logprob: -8.125815391540527
    4. 'val' → logprob: -9.000815391540527
    5. 'ivant' → logprob: -12.375815391540527
    6. 'i' → logprob: -13.375815391540527
    7. 'iva' → logprob: -13.500815391540527
    8. '```' → logprob: -13.750815391540527
    9. '

' → logprob: -13.875815391540527
    10. 'al' → logprob: -14.000815391540527

Token 140: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.00533574353903532
    2. ' ' → logprob: -6.505335807800293
    3. ' to' → logprob: -6.755335807800293
    4. ' a' → logprob: -7.005335807800293
    5. 'à' → logprob: -7.255335807800293
    6. ',' → logprob: -8.380335807800293
    7. ')' → logprob: -8.505335807800293
    8. '[' → logprob: -8.880335807800293
    9. ' aux' → logprob: -9.130335807800293
    10. 'a' → logprob: -10.130335807800293

Token 141: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.031008459627628326
    2. ' [' → logprob: -3.53100848197937
    3. '(' → logprob: -6.906008243560791
    4. ' (' → logprob: -8.78100872039795
    5. ' ' → logprob: -9.78100872039795
    6. 'map' → logprob: -11.03100872039795
    7. '<int' → logprob: -11.53100872039795
    8. '[int' → logprob: -11.53100872039795
    9. ' map' → logprob: -12.28100872039795
    10. 'range' → logprob: -13.28100872039795

Token 142: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00150390958879143
    2. ' ' → logprob: -6.501503944396973
    3. 'int' → logprob: -14.501503944396973
    4. '  ' → logprob: -15.626503944396973
    5. '   ' → logprob: -15.626503944396973
    6. '

' → logprob: -16.251502990722656
    7. ']' → logprob: -16.314002990722656
    8. '
' → logprob: -16.439002990722656
    9. ',' → logprob: -16.501502990722656
    10. '1' → logprob: -16.751502990722656

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016432604752480984
    2. ' ,' → logprob: -8.750164031982422
    3. ' ' → logprob: -12.875164031982422
    4. ',
' → logprob: -13.125164031982422
    5. ',

' → logprob: -14.625164031982422
    6. '',' → logprob: -15.500164031982422
    7. '2' → logprob: -16.375164031982422
    8. '<|end|>' → logprob: -16.750164031982422
    9. '‌,' → logprob: -16.875164031982422
    10. '8' → logprob: -16.875164031982422

Token 144: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3132769465446472
    2. ' ' → logprob: -1.313277006149292
    3. ' ' → logprob: -11.563277244567871
    4. ' 
' → logprob: -12.688277244567871
    5. '9' → logprob: -14.813277244567871
    6. '
' → logprob: -15.063277244567871
    7. ',' → logprob: -15.188277244567871
    8. '  ' → logprob: -15.188277244567871
    9. '7' → logprob: -15.563277244567871
    10. '  
' → logprob: -15.625777244567871

Token 145: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00861468818038702
    2. ' ' → logprob: -4.758614540100098
    3. '  ' → logprob: -17.008615493774414
    4. ',' → logprob: -17.508615493774414
    5. ' ' → logprob: -17.633615493774414
    6. '   ' → logprob: -18.008615493774414
    7. '1' → logprob: -18.508615493774414
    8. '```' → logprob: -18.758615493774414
    9. ' 
' → logprob: -19.133615493774414
    10. '
' → logprob: -19.133615493774414

Token 146: '].
' (ID: 49887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06893095374107361
    2. ']' → logprob: -2.9439308643341064
    3. '])' → logprob: -4.3189311027526855
    4. ')
' → logprob: -8.193930625915527
    5. ')]' → logprob: -8.693930625915527
    6. ' )' → logprob: -9.818930625915527
    7. ',' → logprob: -10.943930625915527
    8. '#' → logprob: -11.193930625915527
    9. ' ]' → logprob: -11.193930625915527
    10. ']
' → logprob: -11.193930625915527

Token 147: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32512709498405457
    2. 'n' → logprob: -1.950127124786377
    3. 'x' → logprob: -2.200127124786377
    4. 'A' → logprob: -5.200127124786377
    5. ',' → logprob: -5.325127124786377
    6. '#' → logprob: -5.575127124786377
    7. 'i' → logprob: -6.700127124786377
    8. '[' → logprob: -6.825127124786377
    9. 'N' → logprob: -7.075127124786377
    10. 'r' → logprob: -7.075127124786377

Token 148: ' L' (ID: 451)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1014680415391922
    2. 'A' → logprob: -3.226468086242676
    3. 'n' → logprob: -3.476468086242676
    4. 'x' → logprob: -4.476468086242676
    5. '#' → logprob: -5.101468086242676
    6. 'N' → logprob: -5.601468086242676
    7. 'l' → logprob: -6.476468086242676
    8. 'H' → logprob: -6.601468086242676
    9. 'L' → logprob: -7.476468086242676
    10. 'h' → logprob: -8.101468086242676

Token 149: ''aff' (ID: 53397)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.0876060724258423
    2. ',' → logprob: -2.5876059532165527
    3. '1' → logprob: -2.5876059532165527
    4. 'iste' → logprob: -2.5876059532165527
    5. 'a' → logprob: -2.7126059532165527
    6. 'ignes' → logprob: -2.8376059532165527
    7. ' =' → logprob: -3.2126059532165527
    8. 'e' → logprob: -3.2126059532165527
    9. 'igne' → logprob: -3.2126059532165527
    10. 's' → logprob: -3.5876059532165527

Token 150: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.009018577635288239
    2. 'ichage' → logprob: -4.884018421173096
    3. 'ec' → logprob: -7.509018421173096
    4. 'ection' → logprob: -8.384018898010254
    5. 'ecta' → logprob: -9.009018898010254
    6. 'e' → logprob: -9.134018898010254
    7. 'ic' → logprob: -9.259018898010254
    8. 'ich' → logprob: -9.759018898010254
    9. 'iche' → logprob: -9.759018898010254
    10. '#' → logprob: -9.884018898010254

Token 151: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.32504984736442566
    2. 'a' → logprob: -1.575049877166748
    3. ' a' → logprob: -3.325049877166748
    4. 'n' → logprob: -4.075049877166748
    5. 'e' → logprob: -4.825049877166748
    6. 'er' → logprob: -6.075049877166748
    7. 'at' → logprob: -6.200049877166748
    8. ' at' → logprob: -6.575049877166748
    9. 'r' → logprob: -8.07504940032959
    10. 'ect' → logprob: -8.20004940032959

Token 152: ' multiple' (ID: 7598)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01975245401263237
    2. ' a' → logprob: -4.394752502441406
    3. 'x' → logprob: -5.394752502441406
    4. 'n' → logprob: -6.394752502441406
    5. 'A' → logprob: -7.769752502441406
    6. 'l' → logprob: -9.394752502441406
    7. ' x' → logprob: -9.894752502441406
    8. ',' → logprob: -10.019752502441406
    9. ' n' → logprob: -10.394752502441406
    10. 'L' → logprob: -10.394752502441406

Token 153: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46292638778686523
    2. ' a' → logprob: -1.8379263877868652
    3. ' ' → logprob: -2.4629263877868652
    4. 'n' → logprob: -3.3379263877868652
    5. 'x' → logprob: -3.4629263877868652
    6. ' n' → logprob: -3.9629263877868652
    7. ' x' → logprob: -4.212926387786865
    8. ',' → logprob: -4.587926387786865
    9. 'i' → logprob: -5.337926387786865
    10. ' i' → logprob: -5.587926387786865

Token 154: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04496177285909653
    2. 'n' → logprob: -3.91996169090271
    3. 'x' → logprob: -4.419961929321289
    4. 'N' → logprob: -5.169961929321289
    5. 'A' → logprob: -5.419961929321289
    6. 'm' → logprob: -7.419961929321289
    7. 'l' → logprob: -8.419961929321289
    8. 'H' → logprob: -8.669961929321289
    9. ' a' → logprob: -8.794961929321289
    10. 'h' → logprob: -8.794961929321289

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007494816090911627
    2. ' ,' → logprob: -5.132494926452637
    3. ',b' → logprob: -7.257494926452637
    4. '1' → logprob: -7.257494926452637
    5. 'b' → logprob: -10.507494926452637
    6. 'e' → logprob: -10.757494926452637
    7. 's' → logprob: -11.257494926452637
    8. ',s' → logprob: -11.632494926452637
    9. ',a' → logprob: -11.757494926452637
    10. ' =' → logprob: -11.882494926452637

Token 156: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3133068382740021
    2. 'b' → logprob: -1.3133068084716797
    3. ' ' → logprob: -10.06330680847168
    4. ' ' → logprob: -14.06330680847168
    5. ' n' → logprob: -15.18830680847168
    6. '  ' → logprob: -15.50080680847168
    7. 'n' → logprob: -15.56330680847168
    8. ' ' → logprob: -15.75080680847168
    9. '	b' → logprob: -15.81330680847168
    10. 's' → logprob: -16.37580680847168

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026613300666213036
    2. '=' → logprob: -3.651613235473633
    3. ' ='' → logprob: -8.901613235473633
    4. ''' → logprob: -9.151613235473633
    5. '='' → logprob: -10.776613235473633
    6. ']' → logprob: -10.776613235473633
    7. ')' → logprob: -11.776613235473633
    8. ' ' → logprob: -12.026613235473633
    9. ' ' → logprob: -12.401613235473633
    10. '=input' → logprob: -13.276613235473633

Token 158: ' ...' (ID: 2550)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1822977215051651
    2. 'map' → logprob: -1.807297706604004
    3. ' input' → logprob: -6.307297706604004
    4. 'input' → logprob: -7.432297706604004
    5. ' list' → logprob: -9.682297706604004
    6. 'list' → logprob: -10.307297706604004
    7. ' ' → logprob: -11.182297706604004
    8. '(map' → logprob: -12.307297706604004
    9. 'int' → logprob: -12.432297706604004
    10. 'm' → logprob: -12.557297706604004

Token 159: ''' (ID: 6)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.1377851366996765
    2. 'input' → logprob: -2.8877851963043213
    3. ')' → logprob: -3.6377851963043213
    4. ']'' → logprob: -4.012784957885742
    5. ''' → logprob: -4.637784957885742
    6. ' )' → logprob: -5.512784957885742
    7. '')' → logprob: -6.012784957885742
    8. '('' → logprob: -6.512784957885742
    9. '(input' → logprob: -6.637784957885742
    10. ' =' → logprob: -6.762784957885742

Token 160: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.2446151077747345
    2. ' attrib' → logprob: -3.369615077972412
    3. ' affect' → logprob: -3.494615077972412
    4. ' ass' → logprob: -3.494615077972412
    5. ' a' → logprob: -3.619615077972412
    6. ' =' → logprob: -4.119615077972412
    7. ' continue' → logprob: -4.244615077972412
    8. 'per' → logprob: -4.619615077972412
    9. 'a' → logprob: -4.869615077972412
    10. '=' → logprob: -4.869615077972412

Token 161: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9813351035118103
    2. ' d' → logprob: -1.106335163116455
    3. 'de' → logprob: -1.606335163116455
    4. 'd' → logprob: -2.481335163116455
    5. ' ' → logprob: -5.231335163116455
    6. 't' → logprob: -6.856335163116455
    7. ' ' → logprob: -7.356335163116455
    8. 'a' → logprob: -7.606335163116455
    9. ' à' → logprob: -7.981335163116455
    10. '	' → logprob: -8.106334686279297

Token 162: ''at' (ID: 85437)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2248455435037613
    2. 'é' → logprob: -1.9748455286026
    3. 'éc' → logprob: -3.5998456478118896
    4. ' affect' → logprob: -4.4748454093933105
    5. ''aff' → logprob: -5.0998454093933105
    6. ''obtenir' → logprob: -5.7248454093933105
    7. 'assign' → logprob: -5.9748454093933105
    8. ' assign' → logprob: -6.3498454093933105
    9. ' attrib' → logprob: -6.5998454093933105
    10. 'aff' → logprob: -6.7248454093933105

Token 163: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.004568254109472036
    2. 'r' → logprob: -6.254568099975586
    3. 'tri' → logprob: -7.004568099975586
    4. 'rib' → logprob: -7.004568099975586
    5. 'tr' → logprob: -8.254568099975586
    6. 't' → logprob: -8.504568099975586
    7. 'tir' → logprob: -8.754568099975586
    8. 'tribution' → logprob: -9.504568099975586
    9. 'tributor' → logprob: -10.504568099975586
    10. 'rier' → logprob: -10.504568099975586

Token 164: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.011245639994740486
    2. 'ue' → logprob: -4.6362457275390625
    3. 'u' → logprob: -6.6362457275390625
    4. 'uera' → logprob: -9.386245727539062
    5. 'ué' → logprob: -11.011245727539062
    6. 'er' → logprob: -11.011245727539062
    7. 'uée' → logprob: -12.011245727539062
    8. 'uere' → logprob: -12.011245727539062
    9. 'uez' → logprob: -12.136245727539062
    10. '#' → logprob: -12.261245727539062

Token 165: ' respect' (ID: 5618)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7141028642654419
    2. ' a' → logprob: -1.214102864265442
    3. ' deux' → logprob: -2.4641027450561523
    4. ' à' → logprob: -3.2141027450561523
    5. 'a' → logprob: -3.8391027450561523
    6. ' aux' → logprob: -4.339102745056152
    7. ' ' → logprob: -4.464102745056152
    8. ' the' → logprob: -4.589102745056152
    9. ' two' → logprob: -4.964102745056152
    10. ' des' → logprob: -5.464102745056152

Token 166: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.6431641578674316
    2. 'ue' → logprob: -1.0181641578674316
    3. 'ent' → logprob: -3.1431641578674316
    4. 'iquement' → logprob: -3.2681641578674316
    5. 'u' → logprob: -3.8931641578674316
    6. 'uellement' → logprob: -5.143164157867432
    7. 'ement' → logprob: -6.768164157867432
    8. 'e' → logprob: -7.393164157867432
    9. ' à' → logprob: -8.268163681030273
    10. 'emment' → logprob: -8.393163681030273

Token 167: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.21886046230793
    2. ' a' → logprob: -2.843860387802124
    3. 'a' → logprob: -3.218860387802124
    4. 'les' → logprob: -3.718860387802124
    5. ' à' → logprob: -3.718860387802124
    6. ' aux' → logprob: -3.968860387802124
    7. ' ces' → logprob: -4.343860626220703
    8. ' deux' → logprob: -4.718860626220703
    9. ' la' → logprob: -5.843860626220703
    10. ' ' → logprob: -6.218860626220703

Token 168: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.20193307101726532
    2. ' premier' → logprob: -2.2019331455230713
    3. 'val' → logprob: -3.3269331455230713
    4. 'a' → logprob: -3.5769331455230713
    5. 'ent' → logprob: -5.576932907104492
    6. 'nombre' → logprob: -6.701932907104492
    7. ' valeurs' → logprob: -7.326932907104492
    8. ' ' → logprob: -7.451932907104492
    9. ' a' → logprob: -7.951932907104492
    10. ' premiers' → logprob: -8.076932907104492

Token 169: ' élément' (ID: 99627)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.48155611753463745
    2. 'a' → logprob: -1.3565561771392822
    3. ' ' → logprob: -3.2315561771392822
    4. ' and' → logprob: -3.6065561771392822
    5. ' élément' → logprob: -3.7315561771392822
    6. ' et' → logprob: -5.106555938720703
    7. 'élé' → logprob: -5.606555938720703
    8. 'ent' → logprob: -5.731555938720703
    9. ' entier' → logprob: -5.856555938720703
    10. ' espace' → logprob: -5.981555938720703

Token 170: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7315939664840698
    2. ' ' → logprob: -1.7315939664840698
    3. ' a' → logprob: -1.8565939664840698
    4. 'a' → logprob: -2.2315940856933594
    5. ' ,' → logprob: -3.3565940856933594
    6. ' à' → logprob: -3.9815940856933594
    7. ' et' → logprob: -4.481594085693359
    8. ' des' → logprob: -4.731594085693359
    9. ' de' → logprob: -6.356594085693359
    10. 's' → logprob: -7.481594085693359

Token 171: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12692968547344208
    2. ' a' → logprob: -2.126929759979248
    3. ' ' → logprob: -14.75192928314209
    4. '	a' → logprob: -14.75192928314209
    5. ''a' → logprob: -14.75192928314209
    6. ' ' → logprob: -15.25192928314209
    7. '_a' → logprob: -16.251930236816406
    8. ' '' → logprob: -16.876930236816406
    9. '"a' → logprob: -17.501930236816406
    10. ' `' → logprob: -18.251930236816406

Token 172: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009130131802521646
    2. ' a' → logprob: -7.000913143157959
    3. ' ' → logprob: -14.1259126663208
    4. ''a' → logprob: -15.0009126663208
    5. 'b' → logprob: -16.375913619995117
    6. '	a' → logprob: -16.500913619995117
    7. '
' → logprob: -17.125913619995117
    8. ''' → logprob: -17.500913619995117
    9. ' '' → logprob: -17.750913619995117
    10. ' ' → logprob: -17.875913619995117

Token 173: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004896434955298901
    2. ''' → logprob: -5.754896640777588
    3. ' ,' → logprob: -6.629896640777588
    4. ' et' → logprob: -8.87989616394043
    5. ' '' → logprob: -9.12989616394043
    6. ','' → logprob: -9.62989616394043
    7. ' ,'' → logprob: -10.50489616394043
    8. ' ' → logprob: -10.87989616394043
    9. 'et' → logprob: -10.87989616394043
    10. '',' → logprob: -12.12989616394043

Token 174: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003662429517135024
    2. ' et' → logprob: -6.003662586212158
    3. 'et' → logprob: -7.253662586212158
    4. ' ,' → logprob: -7.878662586212158
    5. 'a' → logprob: -10.628662109375
    6. ' ' → logprob: -10.628662109375
    7. 'e' → logprob: -11.628662109375
    8. ' and' → logprob: -11.628662109375
    9. ',b' → logprob: -11.628662109375
    10. 'and' → logprob: -12.253662109375

Token 175: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7640347480773926
    2. ' au' → logprob: -1.0140347480773926
    3. 'au' → logprob: -2.6390347480773926
    4. 'le' → logprob: -2.8890347480773926
    5. ' ' → logprob: -3.2640347480773926
    6. ' ' → logprob: -5.764034748077393
    7. 'second' → logprob: -6.514034748077393
    8. ' second' → logprob: -7.139034748077393
    9. ' la' → logprob: -9.514034271240234
    10. ' the' → logprob: -9.639034271240234

Token 176: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.7370335459709167
    2. 'de' → logprob: -1.3620336055755615
    3. 'second' → logprob: -1.3620336055755615
    4. ' deuxième' → logprob: -4.737033367156982
    5. ' ' → logprob: -8.86203384399414
    6. 's' → logprob: -9.23703384399414
    7. 'se' → logprob: -9.61203384399414
    8. ' deux' → logprob: -10.48703384399414
    9. '
' → logprob: -11.61203384399414
    10. '_second' → logprob: -11.61203384399414

Token 177: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.22857245802879333
    2. 'élé' → logprob: -2.353572368621826
    3. ' élément' → logprob: -2.603572368621826
    4. ' element' → logprob: -4.228572368621826
    5. ' ' → logprob: -4.978572368621826
    6. ' a' → logprob: -5.478572368621826
    7. 'à' → logprob: -5.728572368621826
    8. 'element' → logprob: -5.853572368621826
    9. ',' → logprob: -6.353572368621826
    10. ' éléments' → logprob: -7.728572368621826

Token 178: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16027845442295074
    2. ' b' → logprob: -1.9102784395217896
    3. ' ' → logprob: -10.0352783203125
    4. ''b' → logprob: -11.7852783203125
    5. ' ' → logprob: -13.7852783203125
    6. ' '' → logprob: -14.4102783203125
    7. ''' → logprob: -15.1602783203125
    8. '	b' → logprob: -15.2852783203125
    9. '_b' → logprob: -15.5352783203125
    10. '  ' → logprob: -16.5352783203125

Token 179: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020389800192788243
    2. ' b' → logprob: -8.500204086303711
    3. ''' → logprob: -15.375204086303711
    4. ''b' → logprob: -16.62520408630371
    5. ' ' → logprob: -17.00020408630371
    6. 'a' → logprob: -17.25020408630371
    7. '')' → logprob: -18.37520408630371
    8. '
' → logprob: -18.75020408630371
    9. '	b' → logprob: -18.75020408630371
    10. 's' → logprob: -19.12520408630371

Token 180: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11843066662549973
    2. 'a' → logprob: -2.6184306144714355
    3. '
' → logprob: -4.4934306144714355
    4. '#' → logprob: -5.6184306144714355
    5. ').' → logprob: -5.7434306144714355
    6. ')
' → logprob: -5.8684306144714355
    7. ')a' → logprob: -5.9934306144714355
    8. ',' → logprob: -6.1184306144714355
    9. '.' → logprob: -6.1184306144714355
    10. ']' → logprob: -6.2434306144714355

Token 181: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.049239423125982285
    2. '
' → logprob: -3.04923939704895
    3. '

' → logprob: -8.674239158630371
    4. '  
' → logprob: -8.924239158630371
    5. ' 
' → logprob: -8.924239158630371
    6. '#' → logprob: -9.299239158630371
    7. '```' → logprob: -10.674239158630371
    8. '
' → logprob: -10.799239158630371
    9. ' a' → logprob: -11.174239158630371
    10. 'n' → logprob: -11.549239158630371

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014358940534293652
    2. ' ,' → logprob: -4.264358997344971
    3. ' ' → logprob: -9.264358520507812
    4. ' =' → logprob: -10.014358520507812
    5. ',b' → logprob: -10.264358520507812
    6. '=' → logprob: -11.889358520507812
    7. 'a' → logprob: -12.514358520507812
    8. 'b' → logprob: -12.639358520507812
    9. ',
' → logprob: -13.139358520507812
    10. ' b' → logprob: -13.764358520507812

Token 183: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0160658098757267
    2. 'b' → logprob: -4.14106559753418
    3. ' ' → logprob: -11.01606559753418
    4. ' ' → logprob: -11.14106559753418
    5. ' ' → logprob: -14.89106559753418
    6. '	b' → logprob: -16.26606559753418
    7. '<|end|>' → logprob: -16.51606559753418
    8. '_b' → logprob: -16.89106559753418
    9. ' ‌' → logprob: -17.14106559753418
    10. ' б' → logprob: -17.76606559753418

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019492254359647632
    2. '=' → logprob: -6.251949310302734
    3. ' =
' → logprob: -11.501949310302734
    4. ' ' → logprob: -11.626949310302734
    5. '=input' → logprob: -14.501949310302734
    6. ' ' → logprob: -15.001949310302734
    7. ' =
' → logprob: -15.126949310302734
    8. ')' → logprob: -15.876949310302734
    9. ',' → logprob: -16.251949310302734
    10. ' =[' → logprob: -16.251949310302734

Token 185: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.38687798380851746
    2. ' map' → logprob: -1.1368780136108398
    3. 'input' → logprob: -13.26187801361084
    4. ' ' → logprob: -13.51187801361084
    5. ' ' → logprob: -14.26187801361084
    6. 'list' → logprob: -14.38687801361084
    7. 'int' → logprob: -14.51187801361084
    8. 'm' → logprob: -14.51187801361084
    9. ' input' → logprob: -14.63687801361084
    10. '	map' → logprob: -14.63687801361084

Token 186: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04883614555001259
    2. '(' → logprob: -3.0488362312316895
    3. '(input' → logprob: -8.673835754394531
    4. ' (' → logprob: -9.673835754394531
    5. '<int' → logprob: -12.173835754394531
    6. '(str' → logprob: -12.423835754394531
    7. '(
' → logprob: -13.048835754394531
    8. '(in' → logprob: -14.048835754394531
    9. '[int' → logprob: -14.298835754394531
    10. '(lambda' → logprob: -14.923835754394531

Token 187: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005201471503823996
    2. '(' → logprob: -8.000519752502441
    3. ' (' → logprob: -8.750519752502441
    4. ',input' → logprob: -10.875519752502441
    5. ')' → logprob: -12.500519752502441
    6. 'input' → logprob: -12.875519752502441
    7. ' input' → logprob: -15.125519752502441
    8. '=input' → logprob: -15.125519752502441
    9. '(
' → logprob: -15.625519752502441
    10. ',' → logprob: -16.000520706176758

Token 188: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02975824475288391
    2. ' input' → logprob: -3.5297582149505615
    3. '(input' → logprob: -11.77975845336914
    4. ')' → logprob: -17.40475845336914
    5. '<input' → logprob: -17.65475845336914
    6. ' ' → logprob: -18.02975845336914
    7. '=input' → logprob: -18.52975845336914
    8. '	input' → logprob: -18.65475845336914
    9. ',input' → logprob: -19.27975845336914
    10. '_input' → logprob: -19.40475845336914

Token 189: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018357714638113976
    2. '()' → logprob: -4.018357753753662
    3. '())' → logprob: -8.518357276916504
    4. '()))' → logprob: -13.518357276916504
    5. ' ().' → logprob: -13.518357276916504
    6. '()[' → logprob: -13.768357276916504
    7. '()
' → logprob: -14.143357276916504
    8. ' ()' → logprob: -14.518357276916504
    9. '().'' → logprob: -14.643357276916504
    10. '()`' → logprob: -15.018357276916504

Token 190: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.0
    3. 'strip' → logprob: -17.375
    4. ')' → logprob: -20.375
    5. 'spl' → logprob: -20.75
    6. '(split' → logprob: -21.75
    7. 'rstrip' → logprob: -23.125
    8. '_split' → logprob: -23.5
    9. 's' → logprob: -23.625
    10. 'sp' → logprob: -23.875

Token 191: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002891894429922104
    2. '()' → logprob: -6.502892017364502
    3. '()))' → logprob: -6.627892017364502
    4. ')' → logprob: -10.252891540527344
    5. '())
' → logprob: -11.002891540527344
    6. ' ())' → logprob: -11.627891540527344
    7. '))' → logprob: -12.877891540527344
    8. '(' → logprob: -14.002891540527344
    9. '()))
' → logprob: -14.877891540527344
    10. '()
' → logprob: -15.002891540527344

Token 192: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9558014869689941
    2. 'if' → logprob: -1.4558014869689941
    3. 'print' → logprob: -2.080801486968994
    4. ' 
' → logprob: -2.205801486968994
    5. '#' → logprob: -3.080801486968994
    6. '+
' → logprob: -3.330801486968994
    7. '  
' → logprob: -4.330801486968994
    8. '+' → logprob: -4.455801486968994
    9. ' if' → logprob: -4.455801486968994
    10. 'a' → logprob: -4.955801486968994

Token 193: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1628934144973755
    2. 'if' → logprob: -2.037893295288086
    3. '#' → logprob: -4.537893295288086
    4. 'c' → logprob: -5.537893295288086
    5. 'result' → logprob: -6.162893295288086
    6. 'for' → logprob: -6.162893295288086
    7. 's' → logprob: -7.912893295288086
    8. 'sum' → logprob: -8.162893295288086
    9. 'r' → logprob: -8.787893295288086
    10. 'total' → logprob: -9.412893295288086

Token 194: ' calc' (ID: 25691)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21404603123664856
    2. 'print' → logprob: -2.464046001434326
    3. '_' → logprob: -3.339046001434326
    4. 's' → logprob: -3.839046001434326
    5. 'if' → logprob: -3.839046001434326
    6. 'pr' → logprob: -5.089046001434326
    7. ' #' → logprob: -5.214046001434326
    8. ' somme' → logprob: -5.339046001434326
    9. ' if' → logprob: -6.589046001434326
    10. 'r' → logprob: -6.839046001434326

Token 195: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.007708362303674221
    2. 'ul' → logprob: -5.132708549499512
    3. 'cule' → logprob: -7.257708549499512
    4. '#' → logprob: -8.132708549499512
    5. 'ulé' → logprob: -8.257708549499512
    6. 'uler' → logprob: -9.132708549499512
    7. '*' → logprob: -9.632708549499512
    8. 'u' → logprob: -9.757708549499512
    9. '```' → logprob: -10.257708549499512
    10. 'ulte' → logprob: -10.507708549499512

Token 196: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42870640754699707
    2. 'a' → logprob: -1.553706407546997
    3. '(a' → logprob: -2.303706407546997
    4. ' ' → logprob: -4.053706169128418
    5. ' la' → logprob: -5.428706169128418
    6. ' a' → logprob: -5.678706169128418
    7. '_' → logprob: -5.803706169128418
    8. 'c' → logprob: -5.803706169128418
    9. ' (' → logprob: -6.428706169128418
    10. 'l' → logprob: -6.553706169128418

Token 197: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4451429545879364
    2. ' somme' → logprob: -1.0701429843902588
    3. 'pu' → logprob: -4.57014274597168
    4. ' puissance' → logprob: -6.57014274597168
    5. 'sum' → logprob: -7.07014274597168
    6. 'plus' → logprob: -7.19514274597168
    7. 'som' → logprob: -7.19514274597168
    8. '#' → logprob: -8.07014274597168
    9. 'max' → logprob: -8.44514274597168
    10. ' différence' → logprob: -8.94514274597168

Token 198: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1499453783035278
    2. ' =' → logprob: -1.3999453783035278
    3. 'c' → logprob: -2.3999452590942383
    4. '=' → logprob: -2.7749452590942383
    5. '_' → logprob: -2.7749452590942383
    6. ' a' → logprob: -2.8999452590942383
    7. 's' → logprob: -3.1499452590942383
    8. ' ' → logprob: -3.3999452590942383
    9. 'max' → logprob: -3.6499452590942383
    10. ' de' → logprob: -3.8999452590942383

Token 199: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.025297829881310463
    2. ' a' → logprob: -3.9002978801727295
    3. '(a' → logprob: -6.02529764175415
    4. 'max' → logprob: -7.52529764175415
    5. ' (' → logprob: -7.90029764175415
    6. ' la' → logprob: -8.025298118591309
    7. 'pow' → logprob: -8.400298118591309
    8. 'la' → logprob: -8.525298118591309
    9. 'abs' → logprob: -9.150298118591309
    10. ' ' → logprob: -9.150298118591309

Token 200: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1689882129430771
    2. 'a' → logprob: -2.6689882278442383
    3. 'pu' → logprob: -3.0439882278442383
    4. ' somme' → logprob: -3.9189882278442383
    5. 'diff' → logprob: -5.043988227844238
    6. 'som' → logprob: -5.918988227844238
    7. 'sum' → logprob: -6.043988227844238
    8. ' puissance' → logprob: -6.668988227844238
    9. 'b' → logprob: -7.043988227844238
    10. 'division' → logprob: -7.668988227844238

Token 201: ' '' (ID: 461)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7065773606300354
    2. ' c' → logprob: -1.4565773010253906
    3. 's' → logprob: -2.3315773010253906
    4. ' s' → logprob: -2.9565773010253906
    5. 'result' → logprob: -3.0815773010253906
    6. ' result' → logprob: -3.7065773010253906
    7. ' somme' → logprob: -4.331577301025391
    8. 'a' → logprob: -4.581577301025391
    9. ' a' → logprob: -5.206577301025391
    10. ' max' → logprob: -5.831577301025391

Token 202: 'gap' (ID: 61115)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1060079336166382
    2. 's' → logprob: -1.3560079336166382
    3. 'a' → logprob: -1.6060079336166382
    4. 'result' → logprob: -1.7310079336166382
    5. 'rés' → logprob: -4.481008052825928
    6. 'r' → logprob: -5.231008052825928
    7. 'res' → logprob: -5.356008052825928
    8. 'sum' → logprob: -5.731008052825928
    9. 'max' → logprob: -6.481008052825928
    10. 'som' → logprob: -6.606008052825928

Token 203: '',' (ID: 787)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5026895999908447
    2. ''' → logprob: -1.0026895999908447
    3. ' '' → logprob: -4.002689361572266
    4. '=' → logprob: -4.752689361572266
    5. '_' → logprob: -8.377689361572266
    6. ' ='' → logprob: -8.377689361572266
    7. ' ' → logprob: -8.502689361572266
    8. 'a' → logprob: -9.002689361572266
    9. ')' → logprob: -9.377689361572266
    10. '_between' → logprob: -9.502689361572266

Token 204: ' qui' (ID: 2780)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14260518550872803
    2. ' b' → logprob: -2.5176053047180176
    3. 'abs' → logprob: -3.3926053047180176
    4. ' abs' → logprob: -4.267605304718018
    5. 'a' → logprob: -5.517605304718018
    6. ' a' → logprob: -8.14260482788086
    7. ' ' → logprob: -8.64260482788086
    8. 'max' → logprob: -11.01760482788086
    9. ' max' → logprob: -11.14260482788086
    10. 'gap' → logprob: -11.14260482788086

Token 205: ' correspond' (ID: 11095)
  Prédit: ' correspond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.8699648380279541
    2. ' est' → logprob: -1.619964838027954
    3. 'est' → logprob: -2.494964838027954
    4. ' =' → logprob: -2.619964838027954
    5. 'a' → logprob: -2.869964838027954
    6. '=' → logprob: -2.994964838027954
    7. ' représente' → logprob: -3.119964838027954
    8. 'cor' → logprob: -3.494964838027954
    9. 'b' → logprob: -4.369964599609375
    10. ' ' → logprob: -5.369964599609375

Token 206: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1428331732749939
    2. ' au' → logprob: -2.7678332328796387
    3. ' a' → logprob: -3.3928332328796387
    4. 'au' → logprob: -4.517833232879639
    5. ' =' → logprob: -5.142833232879639
    6. 'à' → logprob: -5.267833232879639
    7. ' ' → logprob: -5.767833232879639
    8. ' to' → logprob: -5.767833232879639
    9. '=' → logprob: -5.892833232879639
    10. 'a' → logprob: -5.892833232879639

Token 207: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5794514417648315
    2. ' b' → logprob: -1.4544514417648315
    3. ' abs' → logprob: -2.204451560974121
    4. 'abs' → logprob: -2.579451560974121
    5. 'a' → logprob: -4.579451560974121
    6. ' max' → logprob: -5.829451560974121
    7. ' a' → logprob: -6.079451560974121
    8. ' la' → logprob: -6.204451560974121
    9. 'max' → logprob: -6.704451560974121
    10. ' ' → logprob: -7.829451560974121

Token 208: ' différence' (ID: 79196)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7841382026672363
    2. 'b' → logprob: -1.0341382026672363
    3. 'diff' → logprob: -2.0341382026672363
    4. ' abs' → logprob: -3.7841382026672363
    5. 'distance' → logprob: -4.659138202667236
    6. 'val' → logprob: -5.034138202667236
    7. 'difference' → logprob: -5.159138202667236
    8. ' différence' → logprob: -5.909138202667236
    9. ' b' → logprob: -6.034138202667236
    10. ' valeur' → logprob: -6.159138202667236

Token 209: ' entre' (ID: 3853)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.27501943707466125
    2. 'b' → logprob: -2.025019407272339
    3. ' abs' → logprob: -3.275019407272339
    4. ' between' → logprob: -3.650019407272339
    5. 'a' → logprob: -4.150019645690918
    6. 'entre' → logprob: -4.775019645690918
    7. 'between' → logprob: -4.900019645690918
    8. '(abs' → logprob: -5.275019645690918
    9. ' b' → logprob: -5.775019645690918
    10. ' entre' → logprob: -6.150019645690918

Token 210: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5689969658851624
    2. 'b' → logprob: -1.1939969062805176
    3. ' b' → logprob: -2.6939969062805176
    4. ' a' → logprob: -2.9439969062805176
    5. ' abs' → logprob: -5.193996906280518
    6. 'abs' → logprob: -5.568996906280518
    7. ' les' → logprob: -7.568996906280518
    8. ' la' → logprob: -8.443997383117676
    9. 'les' → logprob: -8.943997383117676
    10. 'l' → logprob: -9.568997383117676

Token 211: '#' (ID: 2)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5189313292503357
    2. 'a' → logprob: -1.0189313888549805
    3. ' b' → logprob: -3.5189313888549805
    4. ' a' → logprob: -4.2689313888549805
    5. ' abs' → logprob: -9.01893138885498
    6. 'abs' → logprob: -9.26893138885498
    7. ' the' → logprob: -12.39393138885498
    8. ' max' → logprob: -12.51893138885498
    9. 'max' → logprob: -12.64393138885498
    10. ' ' → logprob: -12.76893138885498

Token 212: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5770044922828674
    2. 'a' → logprob: -0.8270044922828674
    3. 'abs' → logprob: -7.577004432678223
    4. ' b' → logprob: -8.202004432678223
    5. ' a' → logprob: -8.327004432678223
    6. 'max' → logprob: -10.952004432678223
    7. ' abs' → logprob: -10.952004432678223
    8. ' max' → logprob: -14.702004432678223
    9. '	b' → logprob: -15.827004432678223
    10. ' ' → logprob: -15.952004432678223

Token 213: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2859460115432739
    2. 'a' → logprob: -1.410946011543274
    3. ' b' → logprob: -5.660945892333984
    4. ' a' → logprob: -6.660945892333984
    5. 'abs' → logprob: -11.410945892333984
    6. 'max' → logprob: -12.160945892333984
    7. ' abs' → logprob: -12.660945892333984
    8. ' ' → logprob: -13.473445892333984
    9. '	b' → logprob: -14.473445892333984
    10. ' max' → logprob: -14.535945892333984

Token 214: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05091143772006035
    2. ' '' → logprob: -3.0509114265441895
    3. 'b' → logprob: -6.3009114265441895
    4. ' et' → logprob: -8.550911903381348
    5. 'et' → logprob: -9.300911903381348
    6. 'a' → logprob: -9.800911903381348
    7. ' b' → logprob: -9.925911903381348
    8. ''b' → logprob: -10.175911903381348
    9. ' ' → logprob: -10.300911903381348
    10. ' a' → logprob: -12.050911903381348

Token 215: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.38897454738616943
    2. 'et' → logprob: -1.1389745473861694
    3. ' and' → logprob: -6.388974666595459
    4. ' ' → logprob: -8.6389741897583
    5. 'b' → logprob: -9.5139741897583
    6. ',' → logprob: -9.7639741897583
    7. 'and' → logprob: -9.8889741897583
    8. 'a' → logprob: -11.7639741897583
    9. ' a' → logprob: -12.0139741897583
    10. 'e' → logprob: -12.1389741897583

Token 216: ' deux' (ID: 10301)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08161205053329468
    2. ' b' → logprob: -2.7066121101379395
    3. ''b' → logprob: -4.7066121101379395
    4. ' '' → logprob: -6.0816121101379395
    5. ''' → logprob: -8.206611633300781
    6. ' ' → logprob: -11.831611633300781
    7. ''s' → logprob: -12.956611633300781
    8. ' ' → logprob: -13.081611633300781
    9. '`' → logprob: -14.331611633300781
    10. '>b' → logprob: -14.831611633300781

Token 217: ' fois' (ID: 14697)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.13559511303901672
    2. '*' → logprob: -2.7605950832366943
    3. '*b' → logprob: -2.8855950832366943
    4. 'b' → logprob: -5.260595321655273
    5. ' b' → logprob: -6.385595321655273
    6. ' fois' → logprob: -8.135595321655273
    7. 'times' → logprob: -9.010595321655273
    8. ' '' → logprob: -9.260595321655273
    9. ' ' → logprob: -9.260595321655273
    10. ' times' → logprob: -9.385595321655273

Token 218: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0574728399515152
    2. ' b' → logprob: -2.9324729442596436
    3. ''b' → logprob: -6.3074727058410645
    4. ' '' → logprob: -7.3074727058410645
    5. ''' → logprob: -10.182473182678223
    6. ' la' → logprob: -10.432473182678223
    7. '*b' → logprob: -11.682473182678223
    8. ' ' → logprob: -12.182473182678223
    9. 'la' → logprob: -12.432473182678223
    10. 'l' → logprob: -13.057473182678223

Token 219: ' valeur' (ID: 41664)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.259079363080673e-05
    2. ' b' → logprob: -11.750012397766113
    3. 'value' → logprob: -12.750012397766113
    4. 'val' → logprob: -14.375012397766113
    5. ''b' → logprob: -14.625012397766113
    6. 'a' → logprob: -15.625012397766113
    7. ' valeur' → logprob: -16.25001335144043
    8. '`' → logprob: -16.25001335144043
    9. 'variable' → logprob: -16.50001335144043
    10. '*b' → logprob: -17.00001335144043

Token 220: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6776129603385925
    2. 'b' → logprob: -0.8026129603385925
    3. 'de' → logprob: -3.6776130199432373
    4. ' b' → logprob: -4.177612781524658
    5. ' of' → logprob: -6.677612781524658
    6. ''b' → logprob: -6.927612781524658
    7. ' ' → logprob: -8.177613258361816
    8. ' '' → logprob: -8.552613258361816
    9. 'a' → logprob: -8.802613258361816
    10. '#' → logprob: -8.927613258361816

Token 221: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018154975026845932
    2. ' b' → logprob: -4.018155097961426
    3. ''b' → logprob: -12.893155097961426
    4. ' ' → logprob: -14.268155097961426
    5. 'a' → logprob: -14.268155097961426
    6. ' ' → logprob: -15.143155097961426
    7. '`' → logprob: -15.518155097961426
    8. ' '' → logprob: -15.893155097961426
    9. ')b' → logprob: -16.14315414428711
    10. ''' → logprob: -16.26815414428711

Token 222: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033832306507974863
    2. ' b' → logprob: -8.000338554382324
    3. 'a' → logprob: -12.750338554382324
    4. ' a' → logprob: -18.125337600708008
    5. ''b' → logprob: -18.750337600708008
    6. ')b' → logprob: -18.875337600708008
    7. ' ' → logprob: -19.500337600708008
    8. 'gap' → logprob: -19.750337600708008
    9. '	b' → logprob: -20.125337600708008
    10. ' ' → logprob: -20.125337600708008

Token 223: ''.' (ID: 6120)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017489612801000476
    2. ' )' → logprob: -7.001749038696289
    3. 'a' → logprob: -7.251749038696289
    4. '*' → logprob: -10.001749038696289
    5. '')' → logprob: -11.376749038696289
    6. '-' → logprob: -11.501749038696289
    7. '#' → logprob: -11.501749038696289
    8. ')
' → logprob: -11.876749038696289
    9. ')a' → logprob: -12.501749038696289
    10. '()' → logprob: -12.501749038696289

Token 224: ' Cela' (ID: 44403)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.07004335522651672
    2. ' gap' → logprob: -2.6950433254241943
    3. 'a' → logprob: -10.320043563842773
    4. '_gap' → logprob: -10.570043563842773
    5. '-gap' → logprob: -11.195043563842773
    6. '
' → logprob: -11.445043563842773
    7. ' 
' → logprob: -11.820043563842773
    8. ')' → logprob: -12.320043563842773
    9. 'g' → logprob: -13.195043563842773
    10. ' a' → logprob: -13.570043563842773

Token 225: ' s' (ID: 265)
  Prédit: ' correspond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.7791644930839539
    2. ' =' → logprob: -2.5291645526885986
    3. ' peut' → logprob: -2.5291645526885986
    4. ' permet' → logprob: -2.7791645526885986
    5. ' gap' → logprob: -3.0291645526885986
    6. ' a' → logprob: -3.2791645526885986
    7. ' vaut' → logprob: -3.5291645526885986
    8. ' signifie' → logprob: -3.7791645526885986
    9. ' représente' → logprob: -3.9041645526885986
    10. ' continue' → logprob: -4.4041643142700195

Token 226: ''é' (ID: 12728)
  Prédit: 'era'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'era' → logprob: -0.7475767135620117
    2. 'e' → logprob: -1.3725767135620117
    3. ''agit' → logprob: -2.2475767135620117
    4. 'ert' → logprob: -3.3725767135620117
    5. 'ur' → logprob: -3.7475767135620117
    6. 'a' → logprob: -4.247576713562012
    7. ''appelle' → logprob: -4.247576713562012
    8. 'et' → logprob: -4.372576713562012
    9. ''' → logprob: -4.872576713562012
    10. ''é' → logprob: -5.122576713562012

Token 227: 'crit' (ID: 15345)
  Prédit: 'crit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crit' → logprob: -0.6310779452323914
    2. 'ffect' → logprob: -2.506078004837036
    3. 'q' → logprob: -2.631078004837036
    4. 'c' → logprob: -2.756078004837036
    5. 'quiv' → logprob: -2.756078004837036
    6. 't' → logprob: -3.631078004837036
    7. 'g' → logprob: -3.631078004837036
    8. 'value' → logprob: -4.256077766418457
    9. 'x' → logprob: -4.381077766418457
    10. '=' → logprob: -4.381077766418457

Token 228: ' :' (ID: 712)
  Prédit: ' gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.2653248608112335
    2. 'gap' → logprob: -1.5153248310089111
    3. 'a' → logprob: -4.76532506942749
    4. ' a' → logprob: -6.14032506942749
    5. ':' → logprob: -6.64032506942749
    6. ' :' → logprob: -7.64032506942749
    7. ' ' → logprob: -8.390324592590332
    8. ' =' → logprob: -8.390324592590332
    9. '_gap' → logprob: -8.765324592590332
    10. ',' → logprob: -9.640324592590332

Token 229: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.18843647837638855
    2. ' gap' → logprob: -2.063436508178711
    3. 'a' → logprob: -3.188436508178711
    4. ' a' → logprob: -5.688436508178711
    5. 'abs' → logprob: -9.938436508178711
    6. ' abs' → logprob: -10.688436508178711
    7. '_gap' → logprob: -11.438436508178711
    8. '-gap' → logprob: -11.688436508178711
    9. ' ' → logprob: -12.813436508178711
    10. 'Gap' → logprob: -12.938436508178711

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00976293720304966
    2. '=' → logprob: -4.634762763977051
    3. ' ' → logprob: -12.25976276397705
    4. 'a' → logprob: -13.50976276397705
    5. 'gap' → logprob: -15.00976276397705
    6. ' =
' → logprob: -15.13476276397705
    7. ' ' → logprob: -15.63476276397705
    8. 's' → logprob: -16.759763717651367
    9. '=a' → logprob: -16.884763717651367
    10. ' gap' → logprob: -16.884763717651367

Token 231: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014164329506456852
    2. ' a' → logprob: -4.264164447784424
    3. 'abs' → logprob: -14.389163970947266
    4. ' abs' → logprob: -15.264163970947266
    5. ' ' → logprob: -17.139163970947266
    6. '	a' → logprob: -17.139163970947266
    7. '(a' → logprob: -18.264163970947266
    8. '   ' → logprob: -18.764163970947266
    9. '  ' → logprob: -19.389163970947266
    10. ''a' → logprob: -19.514163970947266

Token 232: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07899113744497299
    2. '-' → logprob: -2.578991174697876
    3. ' ' → logprob: -9.203990936279297
    4. ' ' → logprob: -15.078990936279297
    5. ' -
' → logprob: -15.953990936279297
    6. 'a' → logprob: -16.828990936279297
    7. ' -(' → logprob: -17.328990936279297
    8. ')' → logprob: -17.578990936279297
    9. '2' → logprob: -17.953990936279297
    10. '>' → logprob: -18.078990936279297

Token 233: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6936994791030884
    2. ' ' → logprob: -0.6936994791030884
    3. ' (' → logprob: -7.943699359893799
    4. '(' → logprob: -8.568699836730957
    5. 'b' → logprob: -12.568699836730957
    6. ' b' → logprob: -13.068699836730957
    7. ' ' → logprob: -13.818699836730957
    8. '  ' → logprob: -15.818699836730957
    9. '   ' → logprob: -16.44369888305664
    10. ' two' → logprob: -16.56869888305664

Token 234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025868352968245745
    2. ' ' → logprob: -6.252586841583252
    3. '(' → logprob: -7.377586841583252
    4. ' (' → logprob: -10.377586364746094
    5. 'b' → logprob: -13.502586364746094
    6. '(b' → logprob: -15.877586364746094
    7. '   ' → logprob: -16.877586364746094
    8. ' b' → logprob: -17.127586364746094
    9. '  ' → logprob: -17.502586364746094
    10. ' ' → logprob: -17.502586364746094

Token 235: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10494936257600784
    2. ' *' → logprob: -2.354949474334717
    3. '*b' → logprob: -5.354949474334717
    4. ' ' → logprob: -13.479948997497559
    5. '**' → logprob: -13.479948997497559
    6. 'b' → logprob: -13.604948997497559
    7. ' ' → logprob: -13.854948997497559
    8. '```' → logprob: -15.479948997497559
    9. '*
' → logprob: -15.729948997497559
    10. '*a' → logprob: -15.729948997497559

Token 236: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047814972698689
    2. ' b' → logprob: -4.511047840118408
    3. '	b' → logprob: -17.26104736328125
    4. ' ' → logprob: -18.01104736328125
    5. ' ' → logprob: -18.26104736328125
    6. ')b' → logprob: -19.13604736328125
    7. '(b' → logprob: -20.38604736328125
    8. '_b' → logprob: -21.13604736328125
    9. '*b' → logprob: -21.13604736328125
    10. ' б' → logprob: -21.26104736328125

Token 237: '.
' (ID: 558)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.003418793436139822
    2. '
' → logprob: -5.753418922424316
    3. ' gap' → logprob: -9.128418922424316
    4. 'a' → logprob: -9.628418922424316
    5. ')
' → logprob: -11.128418922424316
    6. '_gap' → logprob: -11.253418922424316
    7. '
' → logprob: -11.503418922424316
    8. '-gap' → logprob: -12.003418922424316
    9. ')' → logprob: -12.128418922424316
    10. ' 
' → logprob: -12.253418922424316

Token 238: 'gap' (ID: 61115)
  Prédit: 'gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -3.292907877039397e-06
    2. '
' → logprob: -12.87500286102295
    3. ' gap' → logprob: -14.50000286102295
    4. '

' → logprob: -18.000003814697266
    5. '_gap' → logprob: -18.000003814697266
    6. 'g' → logprob: -18.125003814697266
    7. '```' → logprob: -18.125003814697266
    8. '  
' → logprob: -18.375003814697266
    9. ' 
' → logprob: -18.500003814697266
    10. 'a' → logprob: -18.625003814697266

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34256511926651
    2. ' ' → logprob: -1.4675650596618652
    3. '=' → logprob: -2.8425650596618652
    4. ' ==' → logprob: -7.842565059661865
    5. '_' → logprob: -8.592565536499023
    6. ')' → logprob: -9.342565536499023
    7. ' -' → logprob: -9.342565536499023
    8. ' ,' → logprob: -9.467565536499023
    9. ' ' → logprob: -9.967565536499023
    10. '-' → logprob: -10.092565536499023

Token 240: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005233763717114925
    2. ' a' → logprob: -5.2552337646484375
    3. '	a' → logprob: -18.130233764648438
    4. ' ' → logprob: -19.380233764648438
    5. '_a' → logprob: -19.380233764648438
    6. '(a' → logprob: -21.130233764648438
    7. '   ' → logprob: -21.755233764648438
    8. ' ' → logprob: -22.130233764648438
    9. 'а' → logprob: -22.630233764648438
    10. '  ' → logprob: -22.630233764648438

Token 241: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.010050944983959198
    2. '-' → logprob: -4.6350507736206055
    3. ' ' → logprob: -8.135050773620605
    4. ' ' → logprob: -13.635050773620605
    5. ' -
' → logprob: -15.260050773620605
    6. ')' → logprob: -15.885050773620605
    7. '_' → logprob: -16.885051727294922
    8. ' −' → logprob: -17.010051727294922
    9. ' ­' → logprob: -17.260051727294922
    10. '"' → logprob: -17.385051727294922

Token 242: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3132617771625519
    2. ' ' → logprob: -1.3132617473602295
    3. ' ' → logprob: -16.188261032104492
    4. ' (' → logprob: -18.813261032104492
    5. '(' → logprob: -19.188261032104492
    6. '   ' → logprob: -19.563261032104492
    7. 'b' → logprob: -19.688261032104492
    8. '２' → logprob: -19.938261032104492
    9. '  ' → logprob: -20.063261032104492
    10. ' two' → logprob: -20.313261032104492

Token 243: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '(' → logprob: -19.75020408630371
    4. '  ' → logprob: -19.87520408630371
    5. '２' → logprob: -20.12520408630371
    6. '   ' → logprob: -20.25020408630371
    7. 'b' → logprob: -20.50020408630371
    8. '```' → logprob: -20.75020408630371
    9. ' (' → logprob: -20.87520408630371
    10. '۲' → logprob: -20.87520408630371

Token 244: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31412410736083984
    2. '*' → logprob: -1.3141241073608398
    3. '*b' → logprob: -7.06412410736084
    4. ' ' → logprob: -12.18912410736084
    5. ' ' → logprob: -13.68912410736084
    6. 'b' → logprob: -14.81412410736084
    7. ' b' → logprob: -15.68912410736084
    8. '**' → logprob: -17.814125061035156
    9. '*object' → logprob: -18.064125061035156
    10. '```' → logprob: -18.314125061035156

Token 245: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. '	b' → logprob: -20.000553131103516
    4. ' ' → logprob: -20.500553131103516
    5. ')b' → logprob: -20.875553131103516
    6. '```' → logprob: -22.750553131103516
    7. '_b' → logprob: -23.000553131103516
    8. ''b' → logprob: -23.375553131103516
    9. '*b' → logprob: -23.500553131103516
    10. '\b' → logprob: -23.750553131103516

Token 246: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18075622618198395
    2. '
' → logprob: -2.1807563304901123
    3. 'if' → logprob: -3.1807563304901123
    4. '#' → logprob: -4.680756092071533
    5. ')' → logprob: -7.930756092071533
    6. '<|end|>' → logprob: -8.180756568908691
    7. '

' → logprob: -8.430756568908691
    8. '
' → logprob: -8.680756568908691
    9. '#print' → logprob: -8.680756568908691
    10. ' if' → logprob: -9.055756568908691

Token 247: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18152661621570587
    2. 'print' → logprob: -1.8065266609191895
    3. '#' → logprob: -6.8065266609191895
    4. '
' → logprob: -7.5565266609191895
    5. ' if' → logprob: -9.056526184082031
    6. '#
' → logprob: -11.556526184082031
    7. '#print' → logprob: -12.681526184082031
    8. '
' → logprob: -13.181526184082031
    9. '#if' → logprob: -13.181526184082031
    10. ' print' → logprob: -13.556526184082031

Token 248: ' La' (ID: 3038)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1603623330593109
    2. 'print' → logprob: -1.9103623628616333
    3. '#' → logprob: -9.285362243652344
    4. 'result' → logprob: -10.535362243652344
    5. ' if' → logprob: -12.285362243652344
    6. 'for' → logprob: -12.535362243652344
    7. 'while' → logprob: -13.160362243652344
    8. '#print' → logprob: -13.410362243652344
    9. 'prin' → logprob: -13.535362243652344
    10. 'pr' → logprob: -14.410362243652344

Token 249: ' structure' (ID: 8866)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004422166850417852
    2. 'print' → logprob: -5.504422187805176
    3. '#' → logprob: -8.004422187805176
    4. 'result' → logprob: -12.629422187805176
    5. ' if' → logprob: -13.379422187805176
    6. 'for' → logprob: -13.629422187805176
    7. '
' → logprob: -13.879422187805176
    8. '#print' → logprob: -14.004422187805176
    9. '#if' → logprob: -14.504422187805176
    10. 'while' → logprob: -14.629422187805176

Token 250: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0031777136027812958
    2. ' if' → logprob: -5.753177642822266
    3. 'If' → logprob: -16.753177642822266
    4. 'ifs' → logprob: -17.378177642822266
    5. '#' → logprob: -19.628177642822266
    6. 'try' → logprob: -19.753177642822266
    7. 'for' → logprob: -19.753177642822266
    8. '#if' → logprob: -19.753177642822266
    9. '```' → logprob: -19.878177642822266
    10. '@if' → logprob: -20.003177642822266

Token 251: 'nelle' (ID: 30805)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00023512568441219628
    2. ' if' → logprob: -8.625235557556152
    3. 'nelle' → logprob: -9.875235557556152
    4. 'elle' → logprob: -13.125235557556152
    5. 'elif' → logprob: -14.375235557556152
    6. 'ife' → logprob: -15.375235557556152
    7. 'el' → logprob: -15.500235557556152
    8. 'al' → logprob: -15.625235557556152
    9. '#' → logprob: -15.750235557556152
    10. '```' → logprob: -15.750235557556152

Token 252: ' '' (ID: 461)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023246178403496742
    2. ' if' → logprob: -3.7732462882995605
    3. 'ifs' → logprob: -14.898245811462402
    4. '
' → logprob: -16.02324676513672
    5. 'If' → logprob: -16.02324676513672
    6. ':' → logprob: -16.39824676513672
    7. '```' → logprob: -16.77324676513672
    8. ' suivante' → logprob: -17.77324676513672
    9. 'ift' → logprob: -17.89824676513672
    10. '(if' → logprob: -18.39824676513672

Token 253: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.339278580620885e-06
    2. ' if' → logprob: -13.000001907348633
    3. '```' → logprob: -20.250001907348633
    4. 'ifs' → logprob: -20.500001907348633
    5. 'If' → logprob: -20.625001907348633
    6. 'i' → logprob: -21.000001907348633
    7. '
' → logprob: -21.375001907348633
    8. 'ift' → logprob: -23.375001907348633
    9. 'elif' → logprob: -23.750001907348633
    10. '`' → logprob: -24.375001907348633

Token 254: ''' (ID: 6)
  Prédit: ' gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.0023167727049440145
    2. 'gap' → logprob: -6.127316951751709
    3. ' ' → logprob: -9.75231647491455
    4. ''' → logprob: -10.50231647491455
    5. ' '' → logprob: -10.62731647491455
    6. ' ' → logprob: -11.25231647491455
    7. '_gap' → logprob: -13.00231647491455
    8. '  ' → logprob: -13.25231647491455
    9. ' a' → logprob: -13.62731647491455
    10. 'Gap' → logprob: -14.25231647491455

Token 255: ' permet' (ID: 11798)
  Prédit: ' gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.06302572786808014
    2. ' if' → logprob: -2.813025712966919
    3. 'gap' → logprob: -7.438025951385498
    4. 'if' → logprob: -7.938025951385498
    5. ' a' → logprob: -10.06302547454834
    6. ' ' → logprob: -10.06302547454834
    7. '_gap' → logprob: -12.06302547454834
    8. ' condition' → logprob: -12.93802547454834
    9. ' elif' → logprob: -13.06302547454834
    10. ' is' → logprob: -13.18802547454834

Token 256: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07196209579706192
    2. ' d' → logprob: -2.6969621181488037
    3. 'de' → logprob: -6.571961879730225
    4. ' ' → logprob: -7.946961879730225
    5. 'd' → logprob: -8.446962356567383
    6. ' ' → logprob: -10.946962356567383
    7. '#' → logprob: -11.696962356567383
    8. ' to' → logprob: -12.196962356567383
    9. '<|end|>' → logprob: -12.821962356567383
    10. 'to' → logprob: -12.946962356567383

Token 257: ''ex' (ID: 23472)
  Prédit: ''effect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''effect' → logprob: -1.2806962728500366
    2. ''ex' → logprob: -1.5306962728500366
    3. ''é' → logprob: -1.7806962728500366
    4. 'e' → logprob: -2.280696392059326
    5. 'eterm' → logprob: -2.280696392059326
    6. 'éc' → logprob: -3.155696392059326
    7. ''aff' → logprob: -4.405696392059326
    8. 'é' → logprob: -4.530696392059326
    9. ''' → logprob: -4.655696392059326
    10. ''assurer' → logprob: -4.905696392059326

Token 258: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.008489641360938549
    2. 'ecut' → logprob: -5.133489608764648
    3. 'ec' → logprob: -6.383489608764648
    4. 'ecute' → logprob: -7.633489608764648
    5. 'é' → logprob: -8.383489608764648
    6. 'am' → logprob: -10.133489608764648
    7. 'pliquer' → logprob: -10.758489608764648
    8. 'primer' → logprob: -10.883489608764648
    9. 'ister' → logprob: -11.133489608764648
    10. 'e' → logprob: -11.133489608764648

Token 259: 'uter' (ID: 23469)
  Prédit: 'uter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uter' → logprob: -0.0009371895575895905
    2. 'ute' → logprob: -7.250936985015869
    3. 'uer' → logprob: -8.750937461853027
    4. 'u' → logprob: -9.875937461853027
    5. 'utter' → logprob: -13.125937461853027
    6. 'urer' → logprob: -13.125937461853027
    7. 'ut' → logprob: -13.250937461853027
    8. 'user' → logprob: -13.250937461853027
    9. ' u' → logprob: -13.375937461853027
    10. 'uyer' → logprob: -13.375937461853027

Token 260: ' un' (ID: 537)
  Prédit: ' gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.614025354385376
    2. ' une' → logprob: -0.989025354385376
    3. ' a' → logprob: -2.989025354385376
    4. 'gap' → logprob: -4.489025115966797
    5. ' ' → logprob: -4.864025115966797
    6. ' un' → logprob: -5.114025115966797
    7. ' la' → logprob: -5.739025115966797
    8. ' if' → logprob: -5.989025115966797
    9. ' des' → logprob: -6.989025115966797
    10. ' True' → logprob: -7.114025115966797

Token 261: ' bloc' (ID: 51218)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7564567923545837
    2. ' bloc' → logprob: -0.7564567923545837
    3. ' block' → logprob: -3.6314568519592285
    4. ' code' → logprob: -3.8814568519592285
    5. 'bloc' → logprob: -5.1314568519592285
    6. ' print' → logprob: -6.1314568519592285
    7. ' e' → logprob: -6.3814568519592285
    8. 'print' → logprob: -6.5064568519592285
    9. 'a' → logprob: -7.3814568519592285
    10. 'if' → logprob: -7.6314568519592285

Token 262: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5002136826515198
    2. ' de' → logprob: -1.625213623046875
    3. ' ' → logprob: -2.750213623046875
    4. 'if' → logprob: -3.125213623046875
    5. ' des' → logprob: -3.625213623046875
    6. ' d' → logprob: -4.000213623046875
    7. ':' → logprob: -4.750213623046875
    8. ' code' → logprob: -5.625213623046875
    9. ' a' → logprob: -5.750213623046875
    10. ' 
' → logprob: -6.000213623046875

Token 263: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.2528975009918213
    2. 'code' → logprob: -1.5028975009918213
    3. 'codes' → logprob: -7.502897262573242
    4. ' instructions' → logprob: -8.877897262573242
    5. ' codes' → logprob: -8.877897262573242
    6. 'instructions' → logprob: -9.627897262573242
    7. 'cod' → logprob: -10.627897262573242
    8. '_code' → logprob: -11.627897262573242
    9. '
' → logprob: -11.752897262573242
    10. ' ' → logprob: -11.877897262573242

Token 264: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18363265693187714
    2. 'if' → logprob: -1.8086326122283936
    3. ' si' → logprob: -6.683632850646973
    4. ':' → logprob: -6.808632850646973
    5. '#' → logprob: -7.433632850646973
    6. 'si' → logprob: -8.433632850646973
    7. 's' → logprob: -9.183632850646973
    8. ' a' → logprob: -9.558632850646973
    9. ' #' → logprob: -9.558632850646973
    10. ',' → logprob: -9.933632850646973

Token 265: ' une' (ID: 2463)
  Prédit: ' gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.033647771924734116
    2. 'gap' → logprob: -3.4086477756500244
    3. ' a' → logprob: -14.158647537231445
    4. ' ' → logprob: -14.533647537231445
    5. '_gap' → logprob: -15.033647537231445
    6. ' ' → logprob: -15.158647537231445
    7. 'a' → logprob: -15.908647537231445
    8. 'Gap' → logprob: -17.908647537231445
    9. 'g' → logprob: -18.033647537231445
    10. '  ' → logprob: -18.033647537231445

Token 266: ' condition' (ID: 7060)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -1.0459736585617065
    2. ' condition' → logprob: -1.2959736585617065
    3. ' gap' → logprob: -1.2959736585617065
    4. 'condition' → logprob: -2.295973777770996
    5. '_gap' → logprob: -8.795973777770996
    6. ' ' → logprob: -8.920973777770996
    7. ' a' → logprob: -9.420973777770996
    8. ' ' → logprob: -9.795973777770996
    9. '(condition' → logprob: -9.920973777770996
    10. ' espace' → logprob: -10.295973777770996

Token 267: ' est' (ID: 893)
  Prédit: ' gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.0273932795971632
    2. 'gap' → logprob: -3.652393341064453
    3. ':' → logprob: -7.902393341064453
    4. ' est' → logprob: -8.152393341064453
    5. ' True' → logprob: -8.402393341064453
    6. ' a' → logprob: -10.027393341064453
    7. '_gap' → logprob: -10.277393341064453
    8. ' ' → logprob: -10.402393341064453
    9. ' true' → logprob: -10.527393341064453
    10. ' :' → logprob: -11.277393341064453

Token 268: ' vér' (ID: 42524)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7270191311836243
    2. 'gap' → logprob: -1.4770190715789795
    3. ' True' → logprob: -2.4770190715789795
    4. ' gap' → logprob: -2.4770190715789795
    5. ' vraie' → logprob: -2.4770190715789795
    6. 'True' → logprob: -3.8520190715789795
    7. ' vér' → logprob: -4.977019309997559
    8. ' vrai' → logprob: -5.977019309997559
    9. ' v' → logprob: -6.977019309997559
    10. 'a' → logprob: -6.977019309997559

Token 269: 'ifiée' (ID: 88506)
  Prédit: 'ifiée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiée' → logprob: -0.24268601834774017
    2. 'ifie' → logprob: -2.1176860332489014
    3. 'f' → logprob: -2.9926860332489014
    4. 'e' → logprob: -4.617685794830322
    5. 'if' → logprob: -4.617685794830322
    6. 'r' → logprob: -5.492685794830322
    7. 'fi' → logprob: -5.617685794830322
    8. 'rie' → logprob: -5.867685794830322
    9. 'a' → logprob: -6.367685794830322
    10. 'ie' → logprob: -6.617685794830322

Token 270: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03823885694146156
    2. ':
' → logprob: -4.288239002227783
    3. ' :' → logprob: -4.288239002227783
    4. 'gap' → logprob: -5.288239002227783
    5. ' gap' → logprob: -6.163239002227783
    6. 'if' → logprob: -7.163239002227783
    7. ' :
' → logprob: -7.413239002227783
    8. '.' → logprob: -7.913239002227783
    9. ' ' → logprob: -7.913239002227783
    10. ',' → logprob: -7.913239002227783

Token 271: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.584861744660884e-05
    2. ' if' → logprob: -10.000045776367188
    3. 'i' → logprob: -15.375045776367188
    4. '
' → logprob: -15.875045776367188
    5. '#' → logprob: -16.625045776367188
    6. 'If' → logprob: -17.125045776367188
    7. '```' → logprob: -17.750045776367188
    8. 'elif' → logprob: -18.250045776367188
    9. 'print' → logprob: -18.750045776367188
    10. 'ifs' → logprob: -19.500045776367188

Token 272: ' Ici' (ID: 145754)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7120533811976202e-05
    2. ' if' → logprob: -11.000017166137695
    3. '```' → logprob: -15.875017166137695
    4. 'print' → logprob: -16.250017166137695
    5. 'i' → logprob: -16.500017166137695
    6. 'If' → logprob: -17.000017166137695
    7. 'elif' → logprob: -17.875017166137695
    8. '
' → logprob: -18.125017166137695
    9. 'ifs' → logprob: -19.500017166137695
    10. '#' → logprob: -19.750017166137695

Token 273: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34988248348236084
    2. 'if' → logprob: -1.2248824834823608
    3. ':' → logprob: -7.22488260269165
    4. ' gap' → logprob: -7.84988260269165
    5. ' on' → logprob: -9.474882125854492
    6. ' ' → logprob: -9.974882125854492
    7. '
' → logprob: -10.099882125854492
    8. ' a' → logprob: -10.099882125854492
    9. ' si' → logprob: -10.349882125854492
    10. ':
' → logprob: -10.849882125854492

Token 274: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023345522582530975
    2. ' if' → logprob: -3.773345470428467
    3. 'gap' → logprob: -9.398345947265625
    4. ' gap' → logprob: -11.023345947265625
    5. 'print' → logprob: -14.648345947265625
    6. ' si' → logprob: -15.023345947265625
    7. 'si' → logprob: -16.398345947265625
    8. '
' → logprob: -16.773345947265625
    9. 'elif' → logprob: -18.273345947265625
    10. ' 
' → logprob: -18.398345947265625

Token 275: ' teste' (ID: 62670)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03382953628897667
    2. ' if' → logprob: -3.4088294506073
    3. 'print' → logprob: -9.033829689025879
    4. ' print' → logprob: -10.908829689025879
    5. ' veut' → logprob: -11.658829689025879
    6. ' si' → logprob: -12.158829689025879
    7. 'si' → logprob: -12.408829689025879
    8. ' met' → logprob: -12.658829689025879
    9. ' souhaite' → logprob: -12.908829689025879
    10. ' vér' → logprob: -13.033829689025879

Token 276: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.561545729637146
    2. 'if' → logprob: -0.936545729637146
    3. ' si' → logprob: -3.6865458488464355
    4. ' gap' → logprob: -4.8115458488464355
    5. ' ' → logprob: -6.0615458488464355
    6. 'gap' → logprob: -7.0615458488464355
    7. 'si' → logprob: -7.1865458488464355
    8. ' ' → logprob: -8.061545372009277
    9. '  ' → logprob: -8.811545372009277
    10. '   ' → logprob: -9.686545372009277

Token 277: ' '' (ID: 461)
  Prédit: ' gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.07889717072248459
    2. 'gap' → logprob: -2.57889723777771
    3. ' ' → logprob: -12.703897476196289
    4. ' ' → logprob: -13.078897476196289
    5. ' a' → logprob: -14.328897476196289
    6. ' abs' → logprob: -14.703897476196289
    7. 'a' → logprob: -14.828897476196289
    8. '_gap' → logprob: -15.078897476196289
    9. '  ' → logprob: -15.828897476196289
    10. 'g' → logprob: -16.07889747619629

Token 278: 'gap' (ID: 61115)
  Prédit: 'gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.006744269747287035
    2. ' gap' → logprob: -5.006744384765625
    3. 'a' → logprob: -11.256744384765625
    4. 'abs' → logprob: -11.506744384765625
    5. ' ' → logprob: -13.131744384765625
    6. 'g' → logprob: -14.381744384765625
    7. ' a' → logprob: -14.381744384765625
    8. ' abs' → logprob: -14.631744384765625
    9. 'b' → logprob: -14.631744384765625
    10. '  ' → logprob: -14.756744384765625

Token 279: ''' (ID: 6)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.843544602394104
    2. '>' → logprob: -1.593544602394104
    3. ' >=' → logprob: -1.718544602394104
    4. '>=' → logprob: -2.8435444831848145
    5. ' ==' → logprob: -3.2185444831848145
    6. ' <' → logprob: -3.2185444831848145
    7. ' <=' → logprob: -3.9685444831848145
    8. '==' → logprob: -4.2185444831848145
    9. '<' → logprob: -4.9685444831848145
    10. '<=' → logprob: -5.2185444831848145

Token 280: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4352072477340698
    2. '>' → logprob: -2.1852073669433594
    3. ' >=' → logprob: -2.3102073669433594
    4. ' <' → logprob: -2.9352073669433594
    5. ' ==' → logprob: -3.0602073669433594
    6. ' <=' → logprob: -4.435207366943359
    7. '>=' → logprob: -4.435207366943359
    8. '==' → logprob: -4.685207366943359
    9. ' ' → logprob: -5.685207366943359
    10. '<' → logprob: -5.810207366943359

Token 281: ' strict' (ID: 12035)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.23183274269104
    2. ' >=' → logprob: -1.23183274269104
    3. ' >' → logprob: -1.73183274269104
    4. '>=' → logprob: -2.35683274269104
    5. ' supérieur' → logprob: -3.10683274269104
    6. '<' → logprob: -3.23183274269104
    7. ' positif' → logprob: -4.231832504272461
    8. ' ' → logprob: -4.231832504272461
    9. ' <' → logprob: -4.731832504272461
    10. 'sup' → logprob: -5.856832504272461

Token 282: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.00035143180866725743
    2. '>' → logprob: -8.250351905822754
    3. '<' → logprob: -10.000351905822754
    4. 'e' → logprob: -10.625351905822754
    5. 'emen' → logprob: -12.750351905822754
    6. 'lement' → logprob: -12.750351905822754
    7. 'ly' → logprob: -12.750351905822754
    8. 'ements' → logprob: -12.875351905822754
    9. 'ment' → logprob: -13.000351905822754
    10. 'em' → logprob: -13.250351905822754

Token 283: ' supérieur' (ID: 98491)
  Prédit: ' supérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -1.1561946868896484
    2. 'posit' → logprob: -1.4061946868896484
    3. '>' → logprob: -1.9061946868896484
    4. 'sup' → logprob: -2.1561946868896484
    5. ' positif' → logprob: -2.1561946868896484
    6. 'inf' → logprob: -3.6561946868896484
    7. 'super' → logprob: -4.531194686889648
    8. ' inférieur' → logprob: -4.656194686889648
    9. ' nég' → logprob: -5.406194686889648
    10. ' >' → logprob: -6.031194686889648

Token 284: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6379854679107666
    2. ' à' → logprob: -0.7629854679107666
    3. 'a' → logprob: -5.6379852294921875
    4. ' a' → logprob: -7.0129852294921875
    5. ' ' → logprob: -8.012985229492188
    6. ''à' → logprob: -8.262985229492188
    7. '```' → logprob: -9.262985229492188
    8. '0' → logprob: -9.887985229492188
    9. ',' → logprob: -10.512985229492188
    10. ' ' → logprob: -10.512985229492188

Token 285: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11283145844936371
    2. ' ' → logprob: -2.2378313541412354
    3. ' ' → logprob: -12.362831115722656
    4. '1' → logprob: -13.612831115722656
    5. '10' → logprob: -14.487831115722656
    6. 'z' → logprob: -14.737831115722656
    7. '  ' → logprob: -14.862831115722656
    8. '2' → logprob: -14.925331115722656
    9. '5' → logprob: -14.987831115722656
    10. '3' → logprob: -14.987831115722656

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034535606391727924
    2. ' ' → logprob: -8.000345230102539
    3. '1' → logprob: -12.875345230102539
    4. 'z' → logprob: -13.500345230102539
    5. '10' → logprob: -13.625345230102539
    6. '5' → logprob: -13.750345230102539
    7. '2' → logprob: -14.250345230102539
    8. '3' → logprob: -14.625345230102539
    9. ' ' → logprob: -14.750345230102539
    10. '4' → logprob: -14.875345230102539

Token 287: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06260567903518677
    2. ':' → logprob: -3.187605619430542
    3. ':
' → logprob: -4.062605857849121
    4. ' if' → logprob: -6.312605857849121
    5. '.' → logprob: -8.437605857849121
    6. '.
' → logprob: -9.312605857849121
    7. '
' → logprob: -10.062605857849121
    8. ' :
' → logprob: -11.312605857849121
    9. '```' → logprob: -11.687605857849121
    10. ' :' → logprob: -11.687605857849121

Token 288: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.512236498361744e-07
    2. ' if' → logprob: -14.500000953674316
    3. 'i' → logprob: -19.25
    4. '
' → logprob: -19.625
    5. '```' → logprob: -20.0
    6. 'If' → logprob: -20.375
    7. 'print' → logprob: -21.125
    8. '#' → logprob: -21.25
    9. 'ifs' → logprob: -22.125
    10. ';if' → logprob: -23.75

Token 289: ' gap' (ID: 19953)
  Prédit: ' gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.00010008628305513412
    2. ' ' → logprob: -9.375100135803223
    3. 'gap' → logprob: -11.375100135803223
    4. ' ' → logprob: -12.500100135803223
    5. '  ' → logprob: -16.875099182128906
    6. ' space' → logprob: -17.375099182128906
    7. '_gap' → logprob: -17.875099182128906
    8. ' g' → logprob: -19.750099182128906
    9. ' gaps' → logprob: -20.125099182128906
    10. ' (' → logprob: -20.375099182128906

Token 290: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.00193458900321275
    2. '>' → logprob: -6.25193452835083
    3. ' ' → logprob: -13.001935005187988
    4. ':' → logprob: -13.251935005187988
    5. ' :' → logprob: -14.001935005187988
    6. ' ' → logprob: -14.251935005187988
    7. ' >
' → logprob: -16.001934051513672
    8. ' >
' → logprob: -16.376934051513672
    9. ' >

' → logprob: -16.876934051513672
    10. ' <=' → logprob: -17.751934051513672

Token 291: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868710398674011
    2. ' ' → logprob: -1.136871099472046
    3. ' ' → logprob: -17.636871337890625
    4. '  ' → logprob: -17.886871337890625
    5. '۰' → logprob: -19.761871337890625
    6. '<|end|>' → logprob: -20.136871337890625
    7. '=' → logprob: -20.136871337890625
    8. '```' → logprob: -20.324371337890625
    9. ' ' → logprob: -20.699371337890625
    10. '   ' → logprob: -20.886871337890625

Token 292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '۰' → logprob: -22.500158309936523
    4. '  ' → logprob: -22.750158309936523
    5. '00' → logprob: -23.250158309936523
    6. ' ' → logprob: -23.375158309936523
    7. ' ' → logprob: -24.125158309936523
    8. '```' → logprob: -24.375158309936523
    9. '０' → logprob: -24.500158309936523
    10. '=' → logprob: -24.750158309936523

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002495279535651207
    2. ':
' → logprob: -6.002495288848877
    3. ' :' → logprob: -10.877494812011719
    4. ' :
' → logprob: -15.002494812011719
    5. ':
' → logprob: -15.252494812011719
    6. '   ' → logprob: -17.00249481201172
    7. '):' → logprob: -17.25249481201172
    8. ':#' → logprob: -17.25249481201172
    9. ':

' → logprob: -17.37749481201172
    10. 'print' → logprob: -17.75249481201172

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034049857407808304
    2. 'print' → logprob: -3.6590497493743896
    3. ' print' → logprob: -4.909049987792969
    4. '   ' → logprob: -8.659049987792969
    5. '	print' → logprob: -9.659049987792969
    6. ':' → logprob: -9.659049987792969
    7. '    
' → logprob: -10.909049987792969
    8. ':
' → logprob: -12.159049987792969
    9. '   ' → logprob: -12.784049987792969
    10. '
' → logprob: -12.784049987792969

Token 295: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.032079193741083145
    2. ' print' → logprob: -3.6570792198181152
    3. '   ' → logprob: -5.157079219818115
    4. '	print' → logprob: -14.032078742980957
    5. 'prin' → logprob: -14.157078742980957
    6. ' ' → logprob: -14.407078742980957
    7. 'result' → logprob: -14.782078742980957
    8. '
' → logprob: -15.407078742980957
    9. '    
' → logprob: -15.407078742980957
    10. 'pr' → logprob: -15.407078742980957

Token 296: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4766820967197418
    2. ' print' → logprob: -0.9766820669174194
    3. '   ' → logprob: -5.976682186126709
    4. 'prin' → logprob: -11.10168170928955
    5. ' ' → logprob: -11.35168170928955
    6. 'result' → logprob: -12.35168170928955
    7. '	print' → logprob: -12.35168170928955
    8. 'pr' → logprob: -12.35168170928955
    9. '    ' → logprob: -12.47668170928955
    10. '    
' → logprob: -12.60168170928955

Token 297: ' la' (ID: 557)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3461623787879944
    2. 'print' → logprob: -1.3461623191833496
    3. '   ' → logprob: -3.7211623191833496
    4. ' gap' → logprob: -4.97116231918335
    5. 'gap' → logprob: -7.34616231918335
    6. '    ' → logprob: -8.221162796020508
    7. ' ' → logprob: -8.846162796020508
    8. ' a' → logprob: -9.971162796020508
    9. '  ' → logprob: -10.471162796020508
    10. '	print' → logprob: -11.096162796020508

Token 298: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.137029230594635
    2. ' print' → logprob: -2.1370291709899902
    3. '   ' → logprob: -5.26202917098999
    4. ' gap' → logprob: -6.26202917098999
    5. 'gap' → logprob: -6.51202917098999
    6. ' ' → logprob: -7.76202917098999
    7. '
' → logprob: -8.762029647827148
    8. '#' → logprob: -9.012029647827148
    9. ' valeur' → logprob: -9.137029647827148
    10. 'difference' → logprob: -9.637029647827148

Token 299: ' précédente' (ID: 177319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035339243710041046
    2. ':' → logprob: -3.78533935546875
    3. ' print' → logprob: -4.66033935546875
    4. 'print' → logprob: -6.91033935546875
    5. '    ' → logprob: -7.66033935546875
    6. ' :' → logprob: -7.66033935546875
    7. ' est' → logprob: -8.66033935546875
    8. '   ' → logprob: -8.66033935546875
    9. '   ' → logprob: -9.91033935546875
    10. '       ' → logprob: -10.03533935546875

Token 300: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25882112979888916
    2. '   ' → logprob: -1.6338211297988892
    3. ' print' → logprob: -3.8838210105895996
    4. 'print' → logprob: -5.3838210105896
    5. ' :' → logprob: -5.5088210105896
    6. ':
' → logprob: -6.0088210105896
    7. ',' → logprob: -7.1338210105896
    8. '    ' → logprob: -9.258821487426758
    9. ' est' → logprob: -9.758821487426758
    10. ' :
' → logprob: -10.258821487426758

Token 301: ' vraie' (ID: 105841)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.166390523314476
    2. ' True' → logprob: -2.0413904190063477
    3. ' vraie' → logprob: -4.541390419006348
    4. 'v' → logprob: -4.791390419006348
    5. '   ' → logprob: -6.166390419006348
    6. 'V' → logprob: -6.291390419006348
    7. ' vrai' → logprob: -8.541390419006348
    8. ' vér' → logprob: -8.916390419006348
    9. ' V' → logprob: -9.541390419006348
    10. ' vra' → logprob: -10.541390419006348

Token 302: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05599035695195198
    2. '   ' → logprob: -3.30599045753479
    3. ':
' → logprob: -4.305990219116211
    4. ',' → logprob: -6.305990219116211
    5. ' :' → logprob: -7.055990219116211
    6. ' print' → logprob: -7.180990219116211
    7. 'print' → logprob: -7.430990219116211
    8. '       ' → logprob: -8.680990219116211
    9. ' :
' → logprob: -10.180990219116211
    10. '    ' → logprob: -11.555990219116211

Token 303: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.20833291113376617
    2. '   ' → logprob: -1.833332896232605
    3. 'print' → logprob: -3.5833330154418945
    4. '    ' → logprob: -8.833333015441895
    5. '
' → logprob: -9.708333015441895
    6. '	print' → logprob: -9.708333015441895
    7. ' ' → logprob: -10.208333015441895
    8. '    
' → logprob: -10.583333015441895
    9. '  ' → logprob: -10.833333015441895
    10. '   ' → logprob: -11.083333015441895

Token 304: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0538727231323719
    2. 'print' → logprob: -3.17887282371521
    3. '   ' → logprob: -4.553872585296631
    4. '    ' → logprob: -9.053873062133789
    5. '	print' → logprob: -10.303873062133789
    6. 'pr' → logprob: -10.428873062133789
    7. ' imprime' → logprob: -10.553873062133789
    8. ' prin' → logprob: -11.303873062133789
    9. ' ' → logprob: -11.428873062133789
    10. '#' → logprob: -11.803873062133789

Token 305: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.20096763968467712
    2. '(g' → logprob: -1.8259676694869995
    3. '(' → logprob: -4.700967788696289
    4. 'gap' → logprob: -4.950967788696289
    5. '('' → logprob: -5.700967788696289
    6. '"' → logprob: -7.450967788696289
    7. '(a' → logprob: -8.075967788696289
    8. 'print' → logprob: -8.450967788696289
    9. 'g' → logprob: -8.950967788696289
    10. 'a' → logprob: -9.950967788696289

Token 306: ' valeur' (ID: 41664)
  Prédit: ' gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.469963401556015
    2. 'gap' → logprob: -1.0949634313583374
    3. ' résultat' → logprob: -4.719963550567627
    4. ' message' → logprob: -5.219963550567627
    5. '"' → logprob: -5.469963550567627
    6. 'rés' → logprob: -5.719963550567627
    7. 'print' → logprob: -5.719963550567627
    8. 'result' → logprob: -5.844963550567627
    9. ' nombre' → logprob: -6.094963550567627
    10. 'val' → logprob: -6.219963550567627

Token 307: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.35614144802093506
    2. ' de' → logprob: -2.2311415672302246
    3. 'print' → logprob: -2.2311415672302246
    4. '(' → logprob: -3.6061415672302246
    5. '   ' → logprob: -3.7311415672302246
    6. '("' → logprob: -3.9811415672302246
    7. '(g' → logprob: -5.481141567230225
    8. 'gap' → logprob: -5.481141567230225
    9. '('' → logprob: -6.731141567230225
    10. '(de' → logprob: -6.856141567230225

Token 308: ' '' (ID: 461)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.0024881421122699976
    2. ' gap' → logprob: -6.002488136291504
    3. 'g' → logprob: -11.877488136291504
    4. 'a' → logprob: -12.877488136291504
    5. '"' → logprob: -13.377488136291504
    6. ''' → logprob: -14.877488136291504
    7. ' ' → logprob: -15.377488136291504
    8. '   ' → logprob: -16.00248908996582
    9. '_gap' → logprob: -16.00248908996582
    10. '-gap' → logprob: -16.25248908996582

Token 309: 'gap' (ID: 61115)
  Prédit: 'gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.0004892880679108202
    2. ' gap' → logprob: -7.625489234924316
    3. 'a' → logprob: -14.500489234924316
    4. 'g' → logprob: -14.625489234924316
    5. '-gap' → logprob: -16.750490188598633
    6. '_gap' → logprob: -16.750490188598633
    7. 'Gap' → logprob: -17.000490188598633
    8. 'gain' → logprob: -17.125490188598633
    9. ''' → logprob: -17.375490188598633
    10. 'abs' → logprob: -18.000490188598633

Token 310: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05366677790880203
    2. ')' → logprob: -3.178666830062866
    3. ',' → logprob: -4.928666591644287
    4. 'print' → logprob: -5.928666591644287
    5. ' print' → logprob: -8.178667068481445
    6. ' )' → logprob: -9.178667068481445
    7. ')
' → logprob: -9.428667068481445
    8. '    ' → logprob: -9.428667068481445
    9. '.' → logprob: -9.803667068481445
    10. '  ' → logprob: -10.928667068481445

Token 311: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2286863774061203
    2. 'print' → logprob: -1.6036863327026367
    3. ' print' → logprob: -6.228686332702637
    4. '
' → logprob: -7.228686332702637
    5. ',' → logprob: -8.353686332702637
    6. '    
' → logprob: -8.728686332702637
    7. ':' → logprob: -9.978686332702637
    8. '.' → logprob: -10.478686332702637
    9. ')' → logprob: -10.478686332702637
    10. '(' → logprob: -10.728686332702637

Token 312: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02975604310631752
    2. ' print' → logprob: -3.5297560691833496
    3. '   ' → logprob: -12.279755592346191
    4. 'pr' → logprob: -14.904755592346191
    5. ' ' → logprob: -15.654755592346191
    6. '	print' → logprob: -15.904755592346191
    7. '(print' → logprob: -16.279756546020508
    8. 'prin' → logprob: -16.779756546020508
    9. '```' → logprob: -16.904756546020508
    10. ' la' → logprob: -17.404756546020508

Token 313: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024780353996902704
    2. ' print' → logprob: -6.002478122711182
    3. '```' → logprob: -13.752477645874023
    4. 'fonction' → logprob: -15.127477645874023
    5. '
' → logprob: -15.377477645874023
    6. '   ' → logprob: -15.377477645874023
    7. '`' → logprob: -15.752477645874023
    8. '#print' → logprob: -16.502477645874023
    9. '	print' → logprob: -16.627477645874023
    10. ' ' → logprob: -16.627477645874023

Token 314: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014166918583214283
    2. ' print' → logprob: -4.264166831970215
    3. '   ' → logprob: -13.264166831970215
    4. '```' → logprob: -13.764166831970215
    5. '(print' → logprob: -15.014166831970215
    6. '`' → logprob: -15.389166831970215
    7. '	print' → logprob: -17.13916778564453
    8. ' ' → logprob: -18.01416778564453
    9. '
' → logprob: -18.26416778564453
    10. '``' → logprob: -18.38916778564453

Token 315: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7610454708337784e-05
    2. ' print' → logprob: -10.500027656555176
    3. 'prin' → logprob: -18.62502670288086
    4. 'pr' → logprob: -19.12502670288086
    5. '```' → logprob: -19.50002670288086
    6. '
' → logprob: -20.25002670288086
    7. '   ' → logprob: -20.25002670288086
    8. '	print' → logprob: -20.50002670288086
    9. '`' → logprob: -22.00002670288086
    10. '(print' → logprob: -22.12502670288086

Token 316: ''.
' (ID: 49980)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.05280537158250809
    2. '()' → logprob: -3.1778054237365723
    3. '(' → logprob: -4.677805423736572
    4. '('' → logprob: -8.052804946899414
    5. '("' → logprob: -9.552804946899414
    6. ')' → logprob: -10.552804946899414
    7. '   ' → logprob: -11.927804946899414
    8. '(print' → logprob: -12.177804946899414
    9. 'g' → logprob: -12.552804946899414
    10. ''' → logprob: -12.802804946899414

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007224413566291332
    2. 'print' → logprob: -7.625722408294678
    3. ' print' → logprob: -8.375722885131836
    4. '       ' → logprob: -12.500722885131836
    5. '   ' → logprob: -15.125722885131836
    6. '```' → logprob: -16.875722885131836
    7. '	print' → logprob: -17.250722885131836
    8. '  ' → logprob: -18.000722885131836
    9. '    
' → logprob: -19.250722885131836
    10. ' ' → logprob: -19.625722885131836

Token 318: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7333731055259705
    2. 'print' (adapté à ' print') → logprob: -0.7333731055259705
    3. ' print' → logprob: -3.2333731651306152
    4. '       ' → logprob: -13.608372688293457
    5. '	print' → logprob: -13.858372688293457
    6. '  ' → logprob: -15.233372688293457
    7. ' ' → logprob: -15.358372688293457
    8. '   ' → logprob: -15.483372688293457
    9. 'pr' → logprob: -15.858372688293457
    10. '    ' → logprob: -16.483373641967773

Token 319: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.2519741356372833
    2. '(' → logprob: -1.501974105834961
    3. ' (' → logprob: -10.376974105834961
    4. '("' → logprob: -11.876974105834961
    5. '('' → logprob: -12.876974105834961
    6. '()' → logprob: -13.001974105834961
    7. '((' → logprob: -14.501974105834961
    8. '(f' → logprob: -14.876974105834961
    9. '(a' → logprob: -15.376974105834961
    10. '(abs' → logprob: -16.12697410583496

Token 320: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -7.107425062713446e-06
    2. 'gap' → logprob: -12.000006675720215
    3. ' gap' → logprob: -14.750006675720215
    4. ' ap' → logprob: -15.375006675720215
    5. 'a' → logprob: -15.625006675720215
    6. '	ap' → logprob: -16.37500762939453
    7. 'ап' → logprob: -18.37500762939453
    8. '   ' → logprob: -18.62500762939453
    9. '(ap' → logprob: -18.75000762939453
    10. '_gap' → logprob: -19.25000762939453

Token 321: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '))' → logprob: -16.875001907348633
    5. ')#' → logprob: -17.000001907348633
    6. '()' → logprob: -17.250001907348633
    7. '())' → logprob: -17.750001907348633
    8. ')`' → logprob: -18.375001907348633
    9. '*' → logprob: -18.750001907348633
    10. '')' → logprob: -19.000001907348633

Token 322: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00942596048116684
    2. 'elif' → logprob: -4.759426116943359
    3. ' else' → logprob: -7.134426116943359
    4. '<|end|>' → logprob: -12.38442611694336
    5. '```' → logprob: -12.63442611694336
    6. ' elif' → logprob: -12.63442611694336
    7. ')' → logprob: -13.25942611694336
    8. 'endif' → logprob: -14.88442611694336
    9. 'e' → logprob: -15.25942611694336
    10. '#else' → logprob: -15.25942611694336

Token 323: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00862213596701622
    2. ':
' → logprob: -4.758622169494629
    3. ' :' → logprob: -12.383622169494629
    4. '   ' → logprob: -12.883622169494629
    5. ' :
' → logprob: -14.258622169494629
    6. ':
' → logprob: -15.508622169494629
    7. ':

' → logprob: -17.008621215820312
    8. 'print' → logprob: -19.133621215820312
    9. '():' → logprob: -19.133621215820312
    10. ':def' → logprob: -19.383621215820312

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034972332417964935
    2. '0' → logprob: -3.4099724292755127
    3. 'print' → logprob: -6.659972190856934
    4. ' ' → logprob: -11.659972190856934
    5. '(' → logprob: -11.784972190856934
    6. ' print' → logprob: -11.784972190856934
    7. '    
' → logprob: -12.034972190856934
    8. '   ' → logprob: -12.659972190856934
    9. ':' → logprob: -13.159972190856934
    10. '1' → logprob: -13.159972190856934

Token 325: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11570554226636887
    2. '   ' → logprob: -2.2407054901123047
    3. '0' → logprob: -6.490705490112305
    4. ' print' → logprob: -6.615705490112305
    5. ' ' → logprob: -11.740705490112305
    6. '	print' → logprob: -12.615705490112305
    7. '  ' → logprob: -13.115705490112305
    8. '    ' → logprob: -13.490705490112305
    9. '    
' → logprob: -13.615705490112305
    10. 'pr' → logprob: -13.990705490112305

Token 326: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05235612392425537
    2. '   ' → logprob: -3.177356243133545
    3. ' print' → logprob: -4.677356243133545
    4. '	print' → logprob: -12.427355766296387
    5. '    ' → logprob: -13.552355766296387
    6. ' ' → logprob: -13.802355766296387
    7. '  ' → logprob: -14.302355766296387
    8. '0' → logprob: -14.302355766296387
    9. 'Print' → logprob: -14.677355766296387
    10. '```' → logprob: -15.364855766296387

Token 327: ' la' (ID: 557)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0632207915186882
    2. '   ' → logprob: -2.813220739364624
    3. ':
' → logprob: -7.938220977783203
    4. ' :' → logprob: -8.063220977783203
    5. 'print' → logprob: -8.188220977783203
    6. '  ' → logprob: -9.313220977783203
    7. 'gap' → logprob: -9.438220977783203
    8. '    ' → logprob: -9.813220977783203
    9. ' print' → logprob: -10.563220977783203
    10. ' gap' → logprob: -10.688220977783203

Token 328: ' condition' (ID: 7060)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.5007131099700928
    2. ' gap' → logprob: -1.5007131099700928
    3. 'print' → logprob: -1.8757131099700928
    4. 'condition' → logprob: -5.000713348388672
    5. ' print' → logprob: -5.500713348388672
    6. ' condition' → logprob: -6.000713348388672
    7. '   ' → logprob: -7.125713348388672
    8. ' valeur' → logprob: -7.375713348388672
    9. 'diff' → logprob: -7.625713348388672
    10. 'else' → logprob: -7.750713348388672

Token 329: ' précédente' (ID: 177319)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01140877977013588
    2. ':
' → logprob: -4.886408805847168
    3. '   ' → logprob: -5.761408805847168
    4. 'print' → logprob: -7.886408805847168
    5. ' :' → logprob: -9.136408805847168
    6. ' print' → logprob: -9.636408805847168
    7. '  ' → logprob: -11.011408805847168
    8. ' ' → logprob: -11.136408805847168
    9. ' gap' → logprob: -11.261408805847168
    10. 'gap' → logprob: -11.511408805847168

Token 330: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022291175555437803
    2. '   ' → logprob: -6.8772292137146
    3. ':
' → logprob: -7.1272292137146
    4. ' :' → logprob: -8.377228736877441
    5. 'print' → logprob: -9.627228736877441
    6. ' print' → logprob: -10.002228736877441
    7. ' est' → logprob: -10.627228736877441
    8. ',' → logprob: -11.877228736877441
    9. 'est' → logprob: -12.502228736877441
    10. '  ' → logprob: -13.127228736877441

Token 331: ' fa' (ID: 2229)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6508402228355408
    2. 'false' → logprob: -1.7758402824401855
    3. 'fa' → logprob: -1.9008402824401855
    4. 'f' → logprob: -2.7758402824401855
    5. 'n' → logprob: -3.6508402824401855
    6. ' False' → logprob: -3.7758402824401855
    7. 'not' → logprob: -4.6508402824401855
    8. 'True' → logprob: -4.6508402824401855
    9. '0' → logprob: -4.7758402824401855
    10. ' fa' → logprob: -5.6508402824401855

Token 332: 'usse' (ID: 32419)
  Prédit: 'ile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.08575228601694107
    2. 'lse' → logprob: -3.585752248764038
    3. 'ible' → logprob: -4.085752487182617
    4. 's' → logprob: -4.460752487182617
    5. 'ute' → logprob: -4.585752487182617
    6. 'usse' → logprob: -4.710752487182617
    7. 'st' → logprob: -6.460752487182617
    8. 'lle' → logprob: -6.710752487182617
    9. 'se' → logprob: -6.835752487182617
    10. 'c' → logprob: -7.460752487182617

Token 333: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0641760304570198
    2. ':
' → logprob: -3.064176082611084
    3. '   ' → logprob: -4.189176082611084
    4. ',' → logprob: -8.189175605773926
    5. 'print' → logprob: -10.939175605773926
    6. ' :' → logprob: -12.439175605773926
    7. ' :
' → logprob: -12.689175605773926
    8. ' print' → logprob: -13.564175605773926
    9. '.' → logprob: -13.689175605773926
    10. ':
' → logprob: -13.939175605773926

Token 334: 'gap' (ID: 61115)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0463968887925148
    2. 'print' → logprob: -3.2963969707489014
    3. ')' → logprob: -5.921396732330322
    4. ' print' → logprob: -6.171396732330322
    5. '0' → logprob: -6.796396732330322
    6. '  ' → logprob: -7.171396732330322
    7. ',' → logprob: -7.421396732330322
    8. '    ' → logprob: -8.17139720916748
    9. '),' → logprob: -8.54639720916748
    10. ' ' → logprob: -8.92139720916748

Token 335: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.09384084492921829
    2. '<=' → logprob: -2.4688408374786377
    3. ' ==' → logprob: -5.718841075897217
    4. '==' → logprob: -7.718841075897217
    5. '   ' → logprob: -7.843841075897217
    6. ' <' → logprob: -8.218840599060059
    7. ' >=' → logprob: -8.593840599060059
    8. ' ' → logprob: -8.968840599060059
    9. ' ≤' → logprob: -10.093840599060059
    10. '<' → logprob: -10.718840599060059

Token 336: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043003082275390625
    2. ' ' → logprob: -3.1680030822753906
    3. ' ' → logprob: -12.91800308227539
    4. '   ' → logprob: -13.66800308227539
    5. '),' → logprob: -15.91800308227539
    6. ')' → logprob: -16.54300308227539
    7. '  ' → logprob: -16.66800308227539
    8. '```' → logprob: -18.04300308227539
    9. ' ),' → logprob: -18.29300308227539
    10. '=' → logprob: -18.54300308227539

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.87509536743164
    4. ' ' → logprob: -17.00009536743164
    5. '  ' → logprob: -17.75009536743164
    6. ')' → logprob: -18.00009536743164
    7. '```' → logprob: -19.37509536743164
    8. '),' → logprob: -19.68759536743164
    9. '۰' → logprob: -19.87509536743164
    10. '	' → logprob: -19.93759536743164

Token 338: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2738698422908783
    2. '):
' → logprob: -2.273869752883911
    3. '):' → logprob: -2.898869752883911
    4. ':' → logprob: -3.148869752883911
    5. '   ' → logprob: -3.398869752883911
    6. 'print' → logprob: -6.14886999130249
    7. ':
' → logprob: -6.64886999130249
    8. ')' → logprob: -7.14886999130249
    9. ' ),' → logprob: -7.64886999130249
    10. ' print' → logprob: -8.523869514465332

Token 339: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10550206899642944
    2. 'print' → logprob: -2.730502128601074
    3. ' print' → logprob: -3.355502128601074
    4. '    ' → logprob: -10.730502128601074
    5. '   ' → logprob: -11.855502128601074
    6. '	print' → logprob: -11.980502128601074
    7. '  ' → logprob: -12.855502128601074
    8. '
' → logprob: -12.855502128601074
    9. ' ' → logprob: -13.105502128601074
    10. '       ' → logprob: -13.355502128601074

Token 340: ''in' (ID: 17942)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7372012138366699
    2. 'a' → logprob: -0.8622012138366699
    3. 'e' → logprob: -2.36220121383667
    4. '   ' → logprob: -5.61220121383667
    5. ' print' → logprob: -7.23720121383667
    6. '#' → logprob: -8.112201690673828
    7. 'es' → logprob: -8.862201690673828
    8. ' a' → logprob: -9.737201690673828
    9. ''' → logprob: -10.237201690673828
    10. 'else' → logprob: -10.737201690673828

Token 341: 'struction' (ID: 5316)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6475024223327637
    2. 'print' → logprob: -1.5225024223327637
    3. 'e' → logprob: -2.2725024223327637
    4. 'struction' → logprob: -2.5225024223327637
    5. 'else' → logprob: -3.5225024223327637
    6. 'put' → logprob: -4.397502422332764
    7. '   ' → logprob: -5.272502422332764
    8. 'ter' → logprob: -5.272502422332764
    9. 'it' → logprob: -5.647502422332764
    10. 'sert' → logprob: -5.772502422332764

Token 342: ' après' (ID: 16460)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16388364136219025
    2. ' print' → logprob: -2.413883686065674
    3. '   ' → logprob: -2.788883686065674
    4. '#' → logprob: -9.788883209228516
    5. '  ' → logprob: -10.038883209228516
    6. ' ' → logprob: -10.663883209228516
    7. '	print' → logprob: -11.038883209228516
    8. '    ' → logprob: -11.413883209228516
    9. '(' → logprob: -11.913883209228516
    10. '(print' → logprob: -12.038883209228516

Token 343: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13830101490020752
    2. '   ' → logprob: -2.638300895690918
    3. ' print' → logprob: -3.888300895690918
    4. ':' → logprob: -4.138300895690918
    5. 'else' → logprob: -4.388300895690918
    6. '#' → logprob: -6.513300895690918
    7. '  ' → logprob: -6.638300895690918
    8. ''' → logprob: -6.763300895690918
    9. 'le' → logprob: -6.888300895690918
    10. ' ' → logprob: -7.263300895690918

Token 344: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.19372022151947021
    2. 'print' → logprob: -1.8187202215194702
    3. ' else' → logprob: -5.06872034072876
    4. ' print' → logprob: -5.19372034072876
    5. '   ' → logprob: -6.69372034072876
    6. ''' → logprob: -8.568719863891602
    7. 'if' → logprob: -9.193719863891602
    8. '#' → logprob: -9.318719863891602
    9. 'elif' → logprob: -9.318719863891602
    10. '`' → logprob: -9.943719863891602

Token 345: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1799294650554657
    2. '   ' → logprob: -2.054929494857788
    3. 'print' → logprob: -4.429929256439209
    4. ':'' → logprob: -4.554929256439209
    5. ' :' → logprob: -4.804929256439209
    6. ' print' → logprob: -5.304929256439209
    7. ':
' → logprob: -8.054929733276367
    8. ''' → logprob: -8.304929733276367
    9. ':`' → logprob: -8.929929733276367
    10. '  ' → logprob: -10.054929733276367

Token 346: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5766247510910034
    2. 'print' → logprob: -0.9516247510910034
    3. ':' → logprob: -3.326624870300293
    4. ' print' → logprob: -4.201624870300293
    5. '    ' → logprob: -8.576624870300293
    6. '  ' → logprob: -9.076624870300293
    7. '.' → logprob: -9.201624870300293
    8. '    
' → logprob: -9.326624870300293
    9. '(print' → logprob: -9.451624870300293
    10. '.print' → logprob: -9.701624870300293

Token 347: ''ex' (ID: 23472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18636652827262878
    2. 'e' → logprob: -3.061366558074951
    3. 'er' → logprob: -3.436366558074951
    4. 'u' → logprob: -4.186366558074951
    5. '   ' → logprob: -4.311366558074951
    6. 'uper' → logprob: -4.561366558074951
    7. 'era' → logprob: -4.936366558074951
    8. 'im' → logprob: -5.061366558074951
    9. ''aff' → logprob: -5.061366558074951
    10. 'up' → logprob: -5.811366558074951

Token 348: 'éc' (ID: 5675)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.564785897731781
    2. 'éc' → logprob: -0.939785897731781
    3. 'é' → logprob: -3.814785957336426
    4. 'print' → logprob: -5.189785957336426
    5. 'écut' → logprob: -5.689785957336426
    6. 'ec' → logprob: -5.939785957336426
    7. 'cute' → logprob: -6.189785957336426
    8. 'e' → logprob: -6.314785957336426
    9. 'éf' → logprob: -7.564785957336426
    10. 'ecut' → logprob: -8.064785957336426

Token 349: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -7.219262624857947e-05
    2. 'cute' → logprob: -9.875072479248047
    3. 'ut' → logprob: -11.250072479248047
    4. '
' → logprob: -12.625072479248047
    5. 'ue' → logprob: -14.375072479248047
    6. 'u' → logprob: -14.500072479248047
    7. 'ecute' → logprob: -14.500072479248047
    8. 'ure' → logprob: -14.625072479248047
    9. 'UTE' → logprob: -14.875072479248047
    10. 'ут' → logprob: -15.250072479248047

Token 350: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18151667714118958
    2. ':' → logprob: -1.9315166473388672
    3. 'print' → logprob: -3.931516647338867
    4. ':
' → logprob: -7.556516647338867
    5. ' print' → logprob: -7.806516647338867
    6. '.' → logprob: -8.181516647338867
    7. '()' → logprob: -8.806516647338867
    8. '  ' → logprob: -10.806516647338867
    9. ')' → logprob: -11.431516647338867
    10. '    ' → logprob: -12.056516647338867

Token 351: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10662180930376053
    2. '0' → logprob: -2.606621742248535
    3. '   ' → logprob: -3.606621742248535
    4. ' print' → logprob: -8.731621742248535
    5. '```' → logprob: -11.731621742248535
    6. 'Print' → logprob: -12.356621742248535
    7. 'pr' → logprob: -12.481621742248535
    8. '(' → logprob: -12.606621742248535
    9. '	print' → logprob: -12.606621742248535
    10. ' ' → logprob: -12.731621742248535

Token 352: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14632022380828857
    2. '0' → logprob: -2.021320343017578
    3. '   ' → logprob: -5.646320343017578
    4. ' print' → logprob: -9.521320343017578
    5. 'prin' → logprob: -11.521320343017578
    6. 'pr' → logprob: -12.146320343017578
    7. '```' → logprob: -12.646320343017578
    8. '    
' → logprob: -12.771320343017578
    9. 'pass' → logprob: -13.271320343017578
    10. '	print' → logprob: -13.646320343017578

Token 353: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00047726318007335067
    2. '   ' → logprob: -8.125476837158203
    3. '0' → logprob: -9.250476837158203
    4. ' print' → logprob: -9.500476837158203
    5. 'prin' → logprob: -12.750476837158203
    6. 'pr' → logprob: -12.875476837158203
    7. 'pass' → logprob: -13.250476837158203
    8. 'Print' → logprob: -13.500476837158203
    9. '	print' → logprob: -14.750476837158203
    10. ' ' → logprob: -15.625476837158203

Token 354: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.022262899205088615
    2. '   ' → logprob: -4.397263050079346
    3. ' print' → logprob: -4.647263050079346
    4. '    ' → logprob: -11.022262573242188
    5. '.print' → logprob: -11.022262573242188
    6. '  ' → logprob: -11.147262573242188
    7. ' ' → logprob: -11.272262573242188
    8. '	print' → logprob: -11.272262573242188
    9. 'pr' → logprob: -12.147262573242188
    10. 'printf' → logprob: -12.397262573242188

Token 355: ' alors' (ID: 17971)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009430214762687683
    2. '0' → logprob: -4.759430408477783
    3. '(abs' → logprob: -8.134429931640625
    4. '(-' → logprob: -8.384429931640625
    5. '("' → logprob: -9.259429931640625
    6. '(a' → logprob: -9.759429931640625
    7. 'abs' → logprob: -10.134429931640625
    8. '(b' → logprob: -10.384429931640625
    9. '('' → logprob: -10.884429931640625
    10. 'a' → logprob: -11.134429931640625

Token 356: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16274714469909668
    2. '0' → logprob: -1.9127471446990967
    3. '("' → logprob: -6.787747383117676
    4. '(-' → logprob: -7.287747383117676
    5. '(abs' → logprob: -8.537747383117676
    6. 'abs' → logprob: -9.037747383117676
    7. '('' → logprob: -9.287747383117676
    8. '(a' → logprob: -9.537747383117676
    9. 'print' → logprob: -10.037747383117676
    10. 'a' → logprob: -10.162747383117676

Token 357: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012951197568327188
    2. 'b' → logprob: -7.75129508972168
    3. 'print' → logprob: -8.37629508972168
    4. 'a' → logprob: -8.50129508972168
    5. '(' → logprob: -8.50129508972168
    6. ' ' → logprob: -9.50129508972168
    7. 'abs' → logprob: -10.25129508972168
    8. 'string' → logprob: -10.75129508972168
    9. '"' → logprob: -10.75129508972168
    10. '-' → logprob: -11.00129508972168

Token 358: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10334226489067078
    2. '0' → logprob: -2.353342294692993
    3. '(abs' → logprob: -6.853342056274414
    4. '(-' → logprob: -7.603342056274414
    5. 'abs' → logprob: -7.728342056274414
    6. '("' → logprob: -8.353342056274414
    7. 'b' → logprob: -8.478342056274414
    8. '(b' → logprob: -8.603342056274414
    9. '(a' → logprob: -8.853342056274414
    10. '   ' → logprob: -8.853342056274414

Token 359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519913613796234
    2. '(' → logprob: -1.5019913911819458
    3. '(-' → logprob: -10.376991271972656
    4. '("' → logprob: -11.626991271972656
    5. ' ' → logprob: -12.251991271972656
    6. '('' → logprob: -12.876991271972656
    7. 'a' → logprob: -13.001991271972656
    8. '(
' → logprob: -13.251991271972656
    9. ' (' → logprob: -13.376991271972656
    10. '1' → logprob: -13.501991271972656

Token 360: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0984983965754509
    2. 'print' → logprob: -3.0984983444213867
    3. '0' → logprob: -3.4734983444213867
    4. ')' → logprob: -4.598498344421387
    5. '()' → logprob: -5.348498344421387
    6. '.' → logprob: -6.098498344421387
    7. '(' → logprob: -8.473498344421387
    8. ' print' → logprob: -8.973498344421387
    9. '  ' → logprob: -9.848498344421387
    10. '(print' → logprob: -9.848498344421387

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.694602370262146
    2. 'print' → logprob: -0.694602370262146
    3. '0' → logprob: -6.6946024894714355
    4. ' print' → logprob: -8.444602012634277
    5. '```' → logprob: -13.694602012634277
    6. '	print' → logprob: -15.319602012634277
    7. '1' → logprob: -16.944602966308594
    8. '   ' → logprob: -17.069602966308594
    9. '       ' → logprob: -17.569602966308594
    10. ' ' → logprob: -17.569602966308594

Token 362: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.7146746763028204e-05
    2. '   ' → logprob: -10.25003719329834
    3. ' print' → logprob: -13.75003719329834
    4. '0' → logprob: -14.37503719329834
    5. '```' → logprob: -19.625036239624023
    6. '	print' → logprob: -20.375036239624023
    7. 'pr' → logprob: -21.125036239624023
    8. '  ' → logprob: -21.625036239624023
    9. 'prin' → logprob: -21.750036239624023
    10. '.print' → logprob: -22.625036239624023

Token 363: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5597102396423e-05
    2. '0' → logprob: -10.250035285949707
    3. ' (' → logprob: -15.875035285949707
    4. '(
' → logprob: -17.125036239624023
    5. '()' → logprob: -17.875036239624023
    6. '(

' → logprob: -19.750036239624023
    7. '((' → logprob: -21.000036239624023
    8. ' ' → logprob: -22.750036239624023
    9. '('' → logprob: -23.125036239624023
    10. '(
' → logprob: -23.250036239624023

Token 364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.625
    3. ')' → logprob: -22.75
    4. '   ' → logprob: -26.75
    5. '(' → logprob: -27.625
    6. '０' → logprob: -28.125
    7. '۰' → logprob: -28.25
    8. '```' → logprob: -29.25
    9. '"' → logprob: -29.5
    10. '00' → logprob: -30.125

Token 365: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.375
    3. ')
' → logprob: -16.875
    4. ')`' → logprob: -20.375
    5. '))' → logprob: -20.875
    6. ')#' → logprob: -21.5
    7. '')' → logprob: -22.25
    8. ')

' → logprob: -22.875
    9. '）' → logprob: -23.0
    10. ')}' → logprob: -23.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 363
Tokens correctement prédits (1ère position, stricte): 109
Tokens correctement prédits (1ère position, avec adaptation): 110
Tokens correctement prédits (top 10): 237
Précision stricte (1ère position): 30.03%
Précision adaptée (1ère position): 30.30%
Précision (top 10): 65.29%
================================================================================
