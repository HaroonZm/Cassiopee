================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    # Demander à l'utilisateur de saisir deux nombres entiers séparés par un espace sur une seule ligne
    # La fonction input() lit la ligne entrée par l'utilisateur au clavier sous forme de chaîne de caractères
    # Par exemple, l'utilisateur peut entrer : 5 2
    utiles = input()
    # La méthode split() va couper la chaîne 'utiles' en séparant selon les espaces et retourne une liste des sous-chaînes
    # Donc '5 2' devient ['5', '2']
    morceaux = utiles.split()
    # La fonction map() applique la fonction int à chaque élément de la liste 'morceaux'
    # Cela transforme chaque sous-chaîne de chiffres en un entier
    # La liste ['5', '2'] devient [5, 2]
    valeurs = map(int, morceaux)
    # On utilise un "unpacking" (dépaquetage) pour assigner successivement les deux valeurs entières respectivement aux variables 'a' et 'b'
    a, b = valeurs

    # On veut calculer la valeur de 'a' moins le double de 'b', c'est-à-dire : a - b*2
    resultat = a - b * 2
    # Cependant, on ne veut pas que ce résultat soit négatif
    # La fonction max(0, resultat) compare 0 et 'resultat' puis retourne la plus grande des deux valeurs
    # Donc, si 'resultat' est négatif, 0 sera retourné ; sinon, 'resultat' sera retourné
    final = max(0, resultat)

    # On affiche la valeur finale calculée à l'utilisateur
    print(final)

# Cette condition spéciale vérifie si ce fichier est exécuté directement par l'utilisateur
# '__name__' est une variable spéciale qui vaut '__main__' si ce fichier est le programme principal
# Si c'est le cas, on appelle la fonction main() pour démarrer l'exécution du programme
if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8402498960494995
    2. '   ' → logprob: -0.8402498960494995
    3. '\n' → logprob: -2.840250015258789
    4. '```' → logprob: -3.840250015258789
    5. ''' → logprob: -4.340250015258789
    6. '    
' → logprob: -4.465250015258789
    7. ' ' → logprob: -4.965250015258789
    8. '(' → logprob: -5.340250015258789
    9. '    ' → logprob: -5.465250015258789
    10. ' 
' → logprob: -5.715250015258789

Token 4: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8913612365722656
    2. '   ' → logprob: -1.0163612365722656
    3. 'pass' → logprob: -1.7663612365722656
    4. 'return' → logprob: -3.2663612365722656
    5. '```' → logprob: -5.141361236572266
    6. '#' (adapté à ' #') → logprob: -6.016361236572266
    7. ' pass' → logprob: -6.016361236572266
    8. '    ' → logprob: -6.266361236572266
    9. '\' → logprob: -6.516361236572266
    10. '    
' → logprob: -7.016361236572266

Token 5: ' Dem' (ID: 9458)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.036638010293245316
    2. '    ' → logprob: -4.036637783050537
    3. '   ' → logprob: -4.911637783050537
    4. ' pass' → logprob: -5.661637783050537
    5. '#' → logprob: -5.786637783050537
    6. '  ' → logprob: -7.286637783050537
    7. '_' → logprob: -7.286637783050537
    8. 'pass' → logprob: -7.661637783050537
    9. '     ' → logprob: -7.786637783050537
    10. ''' → logprob: -7.786637783050537

Token 6: 'ander' (ID: 9330)
  Prédit: 'onstr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onstr' → logprob: -0.3668912947177887
    2. 'and' → logprob: -1.3668912649154663
    3. 'a' → logprob: -3.991891384124756
    4. 'on' → logprob: -4.241891384124756
    5. 'o' → logprob: -4.366891384124756
    6. 'ands' → logprob: -6.366891384124756
    7. '   ' → logprob: -6.491891384124756
    8. ' on' → logprob: -6.741891384124756
    9. '```' → logprob: -6.866891384124756
    10. 'an' → logprob: -8.866890907287598

Token 7: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.170888751745224
    2. '   ' → logprob: -2.670888662338257
    3. '    ' → logprob: -3.420888662338257
    4. '  ' → logprob: -4.170888900756836
    5. ' des' → logprob: -4.545888900756836
    6. '(' → logprob: -4.795888900756836
    7. ' de' → logprob: -5.795888900756836
    8. ' )' → logprob: -5.920888900756836
    9. ' la' → logprob: -6.045888900756836
    10. ' a' → logprob: -6.295888900756836

Token 8: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7087835073471069
    2. ' ' → logprob: -1.333783507347107
    3. '   ' → logprob: -1.708783507347107
    4. ' user' → logprob: -4.0837836265563965
    5. ' l' → logprob: -4.5837836265563965
    6. 'user' → logprob: -5.0837836265563965
    7. ''' → logprob: -5.0837836265563965
    8. '  ' → logprob: -5.5837836265563965
    9. 'un' → logprob: -5.9587836265563965
    10. ' )' → logprob: -6.2087836265563965

Token 9: ''utilisateur' (ID: 140803)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8725219368934631
    2. 'a' → logprob: -1.3725218772888184
    3. ''utilisateur' → logprob: -1.8725218772888184
    4. 'u' → logprob: -2.2475218772888184
    5. 'es' → logprob: -3.8725218772888184
    6. ''espace' → logprob: -3.9975218772888184
    7. '’utilisateur' → logprob: -4.997521877288818
    8. ''' → logprob: -5.247521877288818
    9. '_' → logprob: -5.747521877288818
    10. ' a' → logprob: -5.747521877288818

Token 10: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23289594054222107
    2. ''' → logprob: -3.107895851135254
    3. '   ' → logprob: -3.107895851135254
    4. ' d' → logprob: -3.107895851135254
    5. ' de' → logprob: -3.732895851135254
    6. '  ' → logprob: -4.357895851135254
    7. '    ' → logprob: -4.607895851135254
    8. '_' → logprob: -4.732895851135254
    9. ' )' → logprob: -4.732895851135254
    10. ' a' → logprob: -6.607895851135254

Token 11: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.44189339876174927
    2. 's' → logprob: -1.4418933391571045
    3. ' entrer' → logprob: -3.3168933391571045
    4. 'r' → logprob: -3.4418933391571045
    5. 'entr' → logprob: -3.5668933391571045
    6. ' ' → logprob: -4.816893577575684
    7. ' enter' → logprob: -5.316893577575684
    8. ' sais' → logprob: -6.316893577575684
    9. ' input' → logprob: -6.566893577575684
    10. 'enter' → logprob: -6.816893577575684

Token 12: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0520712248980999
    2. ' un' → logprob: -4.4270710945129395
    3. '   ' → logprob: -4.5520710945129395
    4. '_' → logprob: -4.9270710945129395
    5. ''' → logprob: -5.0520710945129395
    6. ' )' → logprob: -5.6770710945129395
    7. '  ' → logprob: -5.8020710945129395
    8. ' une' → logprob: -6.3020710945129395
    9. ' a' → logprob: -6.5520710945129395
    10. '    ' → logprob: -6.9270710945129395

Token 13: ' nombres' (ID: 76205)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018543554469943047
    2. ' espaces' → logprob: -4.518543720245361
    3. ' nombres' → logprob: -5.143543720245361
    4. '  ' → logprob: -8.018543243408203
    5. ' espace' → logprob: -9.143543243408203
    6. 'n' → logprob: -9.143543243408203
    7. '_' → logprob: -9.143543243408203
    8. ' ,' → logprob: -9.268543243408203
    9. '   ' → logprob: -9.518543243408203
    10. ' mots' → logprob: -9.518543243408203

Token 14: ' ent' (ID: 1121)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0389806032180786
    2. '\' → logprob: -1.1639806032180786
    3. '   ' → logprob: -1.4139806032180786
    4. '    
' → logprob: -2.788980484008789
    5. '  
' → logprob: -5.538980484008789
    6. '    ' → logprob: -5.663980484008789
    7. '```' → logprob: -5.663980484008789
    8. '
' → logprob: -5.788980484008789
    9. ''\' → logprob: -5.788980484008789
    10. '   
' → logprob: -6.288980484008789

Token 15: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5831197500228882
    2. 'iers' → logprob: -0.8331197500228882
    3. 'ier' → logprob: -5.708119869232178
    4. '```' → logprob: -6.833119869232178
    5. 'r' → logprob: -7.083119869232178
    6. 'rs' → logprob: -7.458119869232178
    7. 'ières' → logprob: -8.58311939239502
    8. 'ié' → logprob: -8.83311939239502
    9. '   ' → logprob: -9.08311939239502
    10. '`' → logprob: -9.20811939239502

Token 16: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0873289629817009
    2. '\n' → logprob: -3.2123289108276367
    3. '    
' → logprob: -3.9623289108276367
    4. '\' → logprob: -4.337328910827637
    5. '```' → logprob: -5.837328910827637
    6. '
' → logprob: -5.962328910827637
    7. 'n' → logprob: -6.212328910827637
    8. '`' → logprob: -7.087328910827637
    9. '    ' → logprob: -7.337328910827637
    10. '  
' → logprob: -8.087328910827637

Token 17: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.011070222593843937
    2. 'é' → logprob: -4.511070251464844
    3. 'ées' → logprob: -12.386070251464844
    4. 'es' → logprob: -12.386070251464844
    5. 'ès' → logprob: -12.511070251464844
    6. 'ÉS' → logprob: -12.761070251464844
    7. '```' → logprob: -13.636070251464844
    8. 'ément' → logprob: -14.386070251464844
    9. ',' → logprob: -14.386070251464844
    10. 'É' → logprob: -14.511070251464844

Token 18: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1729792207479477
    2. 'par' → logprob: -2.0479791164398193
    3. '  ' → logprob: -4.422979354858398
    4. 'es' → logprob: -5.422979354858398
    5. ' ' → logprob: -5.672979354858398
    6. 'e' → logprob: -5.797979354858398
    7. ',' → logprob: -6.297979354858398
    8. '```' → logprob: -7.047979354858398
    9. 's' → logprob: -7.297979354858398
    10. ' by' → logprob: -7.922979354858398

Token 19: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.45323511958122253
    2. 'un' → logprob: -1.453235149383545
    3. 'une' → logprob: -2.453235149383545
    4. ' une' → logprob: -3.828235149383545
    5. ' ' → logprob: -4.953235149383545
    6. ''un' → logprob: -5.078235149383545
    7. ' a' → logprob: -6.703235149383545
    8. ''' → logprob: -6.703235149383545
    9. 'space' → logprob: -6.828235149383545
    10. 'a' → logprob: -6.828235149383545

Token 20: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.35945016145706177
    2. 'es' → logprob: -1.859450101852417
    3. ''espace' → logprob: -2.109450101852417
    4. 'space' → logprob: -4.609450340270996
    5. 'esp' → logprob: -5.359450340270996
    6. '’espace' → logprob: -5.984450340270996
    7. 'e' → logprob: -6.359450340270996
    8. '```' → logprob: -6.609450340270996
    9. '  ' → logprob: -6.859450340270996
    10. ' ' → logprob: -6.984450340270996

Token 21: ' sur' (ID: 1512)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6915916204452515
    2. '   ' → logprob: -1.0665916204452515
    3. '\' → logprob: -2.941591739654541
    4. 'n' → logprob: -2.941591739654541
    5. '    
' → logprob: -4.441591739654541
    6. ' ' → logprob: -4.691591739654541
    7. '  
' → logprob: -5.191591739654541
    8. '\r' → logprob: -5.441591739654541
    9. ' 
' → logprob: -5.941591739654541
    10. '
' → logprob: -5.941591739654541

Token 22: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6086183786392212
    2. ' la' → logprob: -1.3586183786392212
    3. ' ' → logprob: -1.7336183786392212
    4. 'une' → logprob: -4.608618259429932
    5. '   ' → logprob: -5.108618259429932
    6. ' ' → logprob: -5.983618259429932
    7. 'e' → logprob: -6.608618259429932
    8. 'la' → logprob: -7.108618259429932
    9. 'l' → logprob: -7.733618259429932
    10. '  ' → logprob: -8.10861873626709

Token 23: ' seule' (ID: 41983)
  Prédit: ' seule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -0.9103670716285706
    2. ' ' → logprob: -1.0353670120239258
    3. ' ligne' → logprob: -2.285367012023926
    4. 'ligne' → logprob: -2.410367012023926
    5. ' ' → logprob: -4.410367012023926
    6. '\n' → logprob: -4.910367012023926
    7. '   ' → logprob: -5.410367012023926
    8. ' seul' → logprob: -5.785367012023926
    9. 'l' → logprob: -5.785367012023926
    10. ' input' → logprob: -5.785367012023926

Token 24: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2668459117412567
    2. ' ligne' → logprob: -1.641845941543579
    3. 'ligne' → logprob: -3.391845941543579
    4. 'l' → logprob: -5.266845703125
    5. ' ' → logprob: -7.641845703125
    6. '   ' → logprob: -7.641845703125
    7. ' line' → logprob: -7.766845703125
    8. '  ' → logprob: -9.391845703125
    9. 'line' → logprob: -9.766845703125
    10. '  

' → logprob: -10.016845703125

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3409843444824219
    2. 'n' → logprob: -1.8409843444824219
    3. '    
' → logprob: -2.840984344482422
    4. '\n' → logprob: -4.465984344482422
    5. ' 
' → logprob: -4.590984344482422
    6. '\' → logprob: -4.840984344482422
    7. ' ' → logprob: -4.965984344482422
    8. 'user' → logprob: -5.090984344482422
    9. '   
' → logprob: -5.090984344482422
    10. '  
' → logprob: -5.215984344482422

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6185723543167114
    2. 'n' → logprob: -0.9935723543167114
    3. ' ' → logprob: -2.868572235107422
    4. '    
' → logprob: -4.993572235107422
    5. ' 
' → logprob: -5.368572235107422
    6. '\n' → logprob: -5.368572235107422
    7. 'user' → logprob: -5.743572235107422
    8. ' n' → logprob: -6.118572235107422
    9. '  
' → logprob: -6.493572235107422
    10. '   
' → logprob: -6.618572235107422

Token 27: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09050772339105606
    2. ' ' → logprob: -3.215507745742798
    3. 'x' → logprob: -4.715507507324219
    4. 'user' → logprob: -4.965507507324219
    5. '   ' → logprob: -4.965507507324219
    6. 'u' → logprob: -5.090507507324219
    7. ' n' → logprob: -5.090507507324219
    8. 's' → logprob: -5.465507507324219
    9. 'i' → logprob: -6.465507507324219
    10. 'a' → logprob: -6.590507507324219

Token 28: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5556949973106384
    2. '   ' → logprob: -1.4306950569152832
    3. 'user' → logprob: -2.930695056915283
    4. ' user' → logprob: -3.055695056915283
    5. ' n' → logprob: -3.430695056915283
    6. ' ' → logprob: -4.680695056915283
    7. 's' → logprob: -4.805695056915283
    8. 'input' → logprob: -4.805695056915283
    9. 'numbers' → logprob: -5.180695056915283
    10. ' input' → logprob: -5.555695056915283

Token 29: ' fonction' (ID: 17610)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5215018391609192
    2. ' sais' → logprob: -2.2715017795562744
    3. ' suite' → logprob: -3.0215017795562744
    4. ' ligne' → logprob: -3.0215017795562744
    5. ' ' → logprob: -3.1465017795562744
    6. '   ' → logprob: -3.1465017795562744
    7. 'suite' → logprob: -3.6465017795562744
    8. 'l' → logprob: -4.0215020179748535
    9. 'ligne' → logprob: -4.5215020179748535
    10. 'n' → logprob: -4.6465020179748535

Token 30: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.006658296100795269
    2. 'input' → logprob: -5.13165807723999
    3. '   ' → logprob: -8.256658554077148
    4. ' split' → logprob: -8.756658554077148
    5. ' ' → logprob: -9.381658554077148
    6. ' return' → logprob: -9.631658554077148
    7. '=input' → logprob: -10.506658554077148
    8. ' user' → logprob: -10.881658554077148
    9. ' print' → logprob: -11.006658554077148
    10. 'split' → logprob: -11.006658554077148

Token 31: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04646676778793335
    2. ' ' → logprob: -4.296466827392578
    3. '()' → logprob: -4.796466827392578
    4. ' (' → logprob: -5.421466827392578
    5. ')' → logprob: -5.546466827392578
    6. 's' → logprob: -5.671466827392578
    7. 'user' → logprob: -5.796466827392578
    8. '   ' → logprob: -6.546466827392578
    9. '('' → logprob: -6.671466827392578
    10. '<|end|>' → logprob: -7.171466827392578

Token 32: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1513514220714569
    2. ' ' → logprob: -2.1513514518737793
    3. ' (' → logprob: -5.401351451873779
    4. ' )' → logprob: -5.526351451873779
    5. ' =' → logprob: -5.776351451873779
    6. ')' → logprob: -5.901351451873779
    7. '()' → logprob: -6.026351451873779
    8. ',' → logprob: -6.776351451873779
    9. '   ' → logprob: -6.776351451873779
    10. 's' → logprob: -7.276351451873779

Token 33: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5065408945083618
    2. ' une' → logprob: -2.2565407752990723
    3. '   ' → logprob: -2.6315407752990723
    4. ' la' → logprob: -3.0065407752990723
    5. ' l' → logprob: -3.1315407752990723
    6. '  ' → logprob: -3.3815407752990723
    7. ' un' → logprob: -4.006540775299072
    8. '    ' → logprob: -4.506540775299072
    9. '()' → logprob: -4.506540775299072
    10. ' )' → logprob: -4.631540775299072

Token 34: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1272660493850708
    2. ' ligne' → logprob: -2.7522659301757812
    3. 's' → logprob: -3.6272659301757812
    4. ' chaîne' → logprob: -4.127265930175781
    5. '  ' → logprob: -6.127265930175781
    6. ' l' → logprob: -6.502265930175781
    7. 'l' → logprob: -7.127265930175781
    8. ' sais' → logprob: -7.377265930175781
    9. ' )' → logprob: -7.377265930175781
    10. '   ' → logprob: -7.502265930175781

Token 35: ' entrée' (ID: 95590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2859356999397278
    2. 's' → logprob: -2.660935640335083
    3. '   ' → logprob: -3.285935640335083
    4. '    ' → logprob: -3.785935640335083
    5. ' ,' → logprob: -3.910935640335083
    6. ' )' → logprob: -4.035935878753662
    7. ',' → logprob: -4.160935878753662
    8. '    
' → logprob: -4.410935878753662
    9. 'n' → logprob: -5.285935878753662
    10. 'user' → logprob: -5.285935878753662

Token 36: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5066096782684326
    2. ' ' → logprob: -1.7566096782684326
    3. ',' → logprob: -2.2566096782684326
    4. ' ,' → logprob: -3.3816096782684326
    5. 's' → logprob: -3.5066096782684326
    6. '    ' → logprob: -4.631609916687012
    7. ')' → logprob: -4.756609916687012
    8. ' )' → logprob: -4.756609916687012
    9. '  ' → logprob: -5.131609916687012
    10. 'user' → logprob: -5.256609916687012

Token 37: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4752344489097595
    2. ' l' → logprob: -0.9752344489097595
    3. ' ' → logprob: -7.850234508514404
    4. '	l' → logprob: -7.850234508514404
    5. '   ' → logprob: -8.975234031677246
    6. 'util' → logprob: -9.475234031677246
    7. ' utilisateur' → logprob: -10.225234031677246
    8. ' ' → logprob: -10.350234031677246
    9. ''utilisateur' → logprob: -11.600234031677246
    10. 'lap' → logprob: -11.600234031677246

Token 38: ''utilisateur' (ID: 140803)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0937849283218384
    2. ''utilisateur' → logprob: -1.3437849283218384
    3. ''' → logprob: -1.5937849283218384
    4. ''u' → logprob: -1.7187849283218384
    5. ''us' → logprob: -4.593784809112549
    6. ''util' → logprob: -5.218784809112549
    7. ''\' → logprob: -6.468784809112549
    8. ''user' → logprob: -6.593784809112549
    9. '')' → logprob: -7.218784809112549
    10. ''use' → logprob: -7.218784809112549

Token 39: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23497331142425537
    2. '    
' → logprob: -2.734973430633545
    3. 'n' → logprob: -2.859973430633545
    4. ' ' → logprob: -4.109973430633545
    5. '
' → logprob: -4.609973430633545
    6. '   
' → logprob: -4.734973430633545
    7. ' 
' → logprob: -4.984973430633545
    8. '\' → logprob: -4.984973430633545
    9. '  
' → logprob: -4.984973430633545
    10. '\n' → logprob: -5.234973430633545

Token 40: ' clavier' (ID: 187878)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09979959577322006
    2. ''' → logprob: -4.099799633026123
    3. '   ' → logprob: -4.474799633026123
    4. 'u' → logprob: -4.724799633026123
    5. 's' → logprob: -4.849799633026123
    6. 'n' → logprob: -4.974799633026123
    7. ' )' → logprob: -5.224799633026123
    8. '_' → logprob: -5.349799633026123
    9. 'es' → logprob: -5.474799633026123
    10. '`' → logprob: -5.474799633026123

Token 41: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09862379729747772
    2. '    
' → logprob: -3.473623752593994
    3. 'n' → logprob: -3.598623752593994
    4. ' ' → logprob: -4.973623752593994
    5. '    ' → logprob: -5.223623752593994
    6. '\' → logprob: -5.348623752593994
    7. '   
' → logprob: -5.973623752593994
    8. '  
' → logprob: -6.098623752593994
    9. '\n' → logprob: -6.223623752593994
    10. '     
' → logprob: -6.348623752593994

Token 42: ' forme' (ID: 27450)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0959652662277222
    2. ' l' → logprob: -1.9709652662277222
    3. ' la' → logprob: -1.9709652662277222
    4. ' une' → logprob: -1.9709652662277222
    5. 'l' → logprob: -2.9709653854370117
    6. '()' → logprob: -3.4709653854370117
    7. ' forme' → logprob: -3.4709653854370117
    8. ' ' → logprob: -3.5959653854370117
    9. '```' → logprob: -4.095965385437012
    10. ' )' → logprob: -4.720965385437012

Token 43: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.05328866466879845
    2. 'd' → logprob: -3.053288698196411
    3. 'de' → logprob: -6.678288459777832
    4. ' de' → logprob: -6.803288459777832
    5. 's' → logprob: -6.928288459777832
    6. ')' → logprob: -7.053288459777832
    7. ''' → logprob: -9.428288459777832
    8. 'def' → logprob: -9.553288459777832
    9. '<|end|>' → logprob: -9.678288459777832
    10. '`' → logprob: -10.303288459777832

Token 44: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.3828010559082031
    2. 'chaine' → logprob: -2.007801055908203
    3. 'cha' → logprob: -2.257801055908203
    4. ' chaine' → logprob: -3.757801055908203
    5. 's' → logprob: -3.882801055908203
    6. ' string' → logprob: -4.882801055908203
    7. 'c' → logprob: -5.132801055908203
    8. ' chaînes' → logprob: -5.132801055908203
    9. ' cha' → logprob: -5.132801055908203
    10. ' ' → logprob: -5.757801055908203

Token 45: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13701529800891876
    2. 'n' → logprob: -3.1370153427124023
    3. '    
' → logprob: -3.2620153427124023
    4. ' ' → logprob: -4.512015342712402
    5. 's' → logprob: -5.762015342712402
    6. '\' → logprob: -5.762015342712402
    7. '`' → logprob: -5.887015342712402
    8. '   
' → logprob: -5.887015342712402
    9. '  
' → logprob: -6.012015342712402
    10. ''' → logprob: -6.012015342712402

Token 46: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.18391506373882294
    2. ' caractères' → logprob: -1.8089150190353394
    3. ' caract' → logprob: -6.433915138244629
    4. ' caracteres' → logprob: -6.933915138244629
    5. 'texte' → logprob: -7.183915138244629
    6. 'c' → logprob: -8.058915138244629
    7. ' ' → logprob: -8.183915138244629
    8. 'ca' → logprob: -10.058915138244629
    9. ' car' → logprob: -10.058915138244629
    10. ' caractère' → logprob: -10.183915138244629

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030381273478269577
    2. 'n' → logprob: -3.655381202697754
    3. '    
' → logprob: -6.030381202697754
    4. ' ' → logprob: -7.780381202697754
    5. '\n' → logprob: -8.405381202697754
    6. '    ' → logprob: -8.530381202697754
    7. 's' → logprob: -8.780381202697754
    8. '  ' → logprob: -9.405381202697754
    9. '   
' → logprob: -9.655381202697754
    10. ' 
' → logprob: -9.780381202697754

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0394064337015152
    2. 'n' → logprob: -4.0394062995910645
    3. '    
' → logprob: -4.6644062995910645
    4. '
' → logprob: -6.0394062995910645
    5. '```' → logprob: -6.4144062995910645
    6. '\' → logprob: -6.5394062995910645
    7. '\n' → logprob: -6.9144062995910645
    8. 'r' → logprob: -7.4144062995910645
    9. 'a' → logprob: -7.5394062995910645
    10. '`' → logprob: -7.7894062995910645

Token 49: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6927962899208069
    2. 'n' → logprob: -0.9427962899208069
    3. ' ' → logprob: -2.692796230316162
    4. 'r' → logprob: -4.567796230316162
    5. '    
' → logprob: -4.942796230316162
    6. 's' → logprob: -5.942796230316162
    7. '    ' → logprob: -6.067796230316162
    8. 'u' → logprob: -6.067796230316162
    9. 'x' → logprob: -6.067796230316162
    10. 'a' → logprob: -6.192796230316162

Token 50: ' Par' (ID: 3371)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7816123962402344
    2. '   ' → logprob: -1.0316123962402344
    3. ' ' → logprob: -1.9066123962402344
    4. 's' → logprob: -5.281612396240234
    5. 'r' → logprob: -5.406612396240234
    6. 'i' → logprob: -5.656612396240234
    7. 'u' → logprob: -5.781612396240234
    8. 'a' → logprob: -5.781612396240234
    9. '    ' → logprob: -6.281612396240234
    10. 'x' → logprob: -6.281612396240234

Token 51: ' exemple' (ID: 26320)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7687044739723206
    2. ' a' → logprob: -1.2687044143676758
    3. ' la' → logprob: -2.143704414367676
    4. 'a' → logprob: -3.143704414367676
    5. ' exemple' → logprob: -4.643704414367676
    6. '_' → logprob: -4.893704414367676
    7. ' convertir' → logprob: -5.018704414367676
    8. 's' → logprob: -5.268704414367676
    9. ' user' → logprob: -5.268704414367676
    10. ' split' → logprob: -5.393704414367676

Token 52: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4038962423801422
    2. '   ' → logprob: -1.5288962125778198
    3. 'a' → logprob: -3.4038963317871094
    4. 'n' → logprob: -3.4038963317871094
    5. '    ' → logprob: -4.028896331787109
    6. '  ' → logprob: -5.403896331787109
    7. ' ,' → logprob: -5.653896331787109
    8. '_' → logprob: -5.903896331787109
    9. ',' → logprob: -5.903896331787109
    10. 's' → logprob: -6.028896331787109

Token 53: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40253546833992004
    2. 'n' → logprob: -1.9025354385375977
    3. 'a' → logprob: -3.1525354385375977
    4. '   ' → logprob: -3.1525354385375977
    5. ' n' → logprob: -3.7775354385375977
    6. ' a' → logprob: -4.152535438537598
    7. '    ' → logprob: -4.402535438537598
    8. '  ' → logprob: -5.527535438537598
    9. ' x' → logprob: -5.652535438537598
    10. '     
' → logprob: -5.652535438537598

Token 54: ''utilisateur' (ID: 140803)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.0247769355773926
    2. 'u' → logprob: -1.3997769355773926
    3. 'e' → logprob: -1.8997769355773926
    4. ''' → logprob: -3.2747769355773926
    5. ' ' → logprob: -3.3997769355773926
    6. 'n' → logprob: -3.6497769355773926
    7. ' user' → logprob: -3.8997769355773926
    8. ' n' → logprob: -3.8997769355773926
    9. ''utilisateur' → logprob: -4.274776935577393
    10. 'a' → logprob: -4.524776935577393

Token 55: ' peut' (ID: 9216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7258910536766052
    2. ' ' → logprob: -1.60089111328125
    3. ' s' → logprob: -1.85089111328125
    4. 's' → logprob: -2.97589111328125
    5. '       ' → logprob: -3.85089111328125
    6. ' )' → logprob: -3.97589111328125
    7. '    ' → logprob: -4.35089111328125
    8. '  ' → logprob: -4.72589111328125
    9. ' sais' → logprob: -4.85089111328125
    10. ' a' → logprob: -5.10089111328125

Token 56: ' entrer' (ID: 111917)
  Prédit: ' saisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.2988811135292053
    2. ' ' → logprob: -1.6738810539245605
    3. ' entrer' → logprob: -3.7988810539245605
    4. ''' → logprob: -3.9238810539245605
    5. 's' → logprob: -4.5488810539245605
    6. ' s' → logprob: -5.9238810539245605
    7. ' continuer' → logprob: -6.4238810539245605
    8. ' ' → logprob: -6.9238810539245605
    9. ' entr' → logprob: -7.1738810539245605
    10. ' '' → logprob: -7.1738810539245605

Token 57: ' :' (ID: 712)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5022225975990295
    2. '"' → logprob: -1.8772225379943848
    3. '1' → logprob: -2.1272225379943848
    4. ''' → logprob: -3.1272225379943848
    5. ' "' → logprob: -3.6272225379943848
    6. '3' → logprob: -4.252222537994385
    7. '2' → logprob: -4.502222537994385
    8. ' '' → logprob: -5.002222537994385
    9. '4' → logprob: -6.002222537994385
    10. ' ' → logprob: -6.252222537994385

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6704428195953369
    2. '"' → logprob: -1.420442819595337
    3. '1' → logprob: -1.670442819595337
    4. '3' → logprob: -3.795442819595337
    5. ' "' → logprob: -4.420442581176758
    6. '2' → logprob: -4.920442581176758
    7. ''' → logprob: -4.920442581176758
    8. '5' → logprob: -5.670442581176758
    9. '4' → logprob: -6.670442581176758
    10. '12' → logprob: -7.170442581176758

Token 59: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6785332560539246
    2. '"' → logprob: -1.4285333156585693
    3. '3' → logprob: -2.3035333156585693
    4. ' ' → logprob: -2.8035333156585693
    5. '2' → logprob: -3.3035333156585693
    6. '5' → logprob: -3.5535333156585693
    7. '12' → logprob: -4.92853307723999
    8. '4' → logprob: -5.05353307723999
    9. '10' → logprob: -5.42853307723999
    10. ''' → logprob: -5.80353307723999

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11171619594097137
    2. '  ' → logprob: -3.3617162704467773
    3. ',' → logprob: -3.4867162704467773
    4. ' ,' → logprob: -4.111716270446777
    5. '2' → logprob: -4.861716270446777
    6. '   ' → logprob: -5.611716270446777
    7. '0' → logprob: -6.611716270446777
    8. ''' → logprob: -6.611716270446777
    9. '    ' → logprob: -6.736716270446777
    10. ' )' → logprob: -6.736716270446777

Token 61: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1797473132610321
    2. '3' → logprob: -2.4297473430633545
    3. '7' → logprob: -3.5547473430633545
    4. '   ' → logprob: -4.179747104644775
    5. '8' → logprob: -4.804747104644775
    6. '  ' → logprob: -5.054747104644775
    7. '2' → logprob: -5.304747104644775
    8. '10' → logprob: -5.429747104644775
    9. '6' → logprob: -5.804747104644775
    10. '4' → logprob: -6.054747104644775

Token 62: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11337634176015854
    2. 'n' → logprob: -3.3633763790130615
    3. '    
' → logprob: -3.3633763790130615
    4. '
' → logprob: -3.8633763790130615
    5. '\n' → logprob: -4.738376140594482
    6. '  
' → logprob: -5.988376140594482
    7. '   
' → logprob: -6.363376140594482
    8. ' 
' → logprob: -7.113376140594482
    9. '\' → logprob: -7.238376140594482
    10. ' ' → logprob: -7.738376140594482

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006133671849966049
    2. '    
' → logprob: -5.506133556365967
    3. '
' → logprob: -6.506133556365967
    4. 'n' → logprob: -8.381134033203125
    5. '    ' → logprob: -9.631134033203125
    6. '   
' → logprob: -9.881134033203125
    7. '```' → logprob: -10.381134033203125
    8. '\n' → logprob: -10.506134033203125
    9. '  
' → logprob: -10.631134033203125
    10. '  ' → logprob: -10.881134033203125

Token 64: ' utiles' (ID: 121161)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.201987624168396
    2. 'n' → logprob: -2.0769877433776855
    3. ' ' → logprob: -3.9519877433776855
    4. '    
' → logprob: -4.0769877433776855
    5. '    ' → logprob: -5.5769877433776855
    6. ' 
' → logprob: -5.8269877433776855
    7. 'r' → logprob: -5.9519877433776855
    8. 'a' → logprob: -6.2019877433776855
    9. '   
' → logprob: -6.4519877433776855
    10. '  ' → logprob: -6.9519877433776855

Token 65: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0573036670684814
    2. ' =' → logprob: -1.5573036670684814
    3. ' ' → logprob: -2.0573036670684814
    4. ':' → logprob: -2.1823036670684814
    5. '.' → logprob: -3.0573036670684814
    6. '(' → logprob: -3.4323036670684814
    7. 'n' → logprob: -3.6823036670684814
    8. 'u' → logprob: -4.432303428649902
    9. '   ' → logprob: -4.432303428649902
    10. 's' → logprob: -4.682303428649902

Token 66: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.180393785238266
    2. 'input' → logprob: -1.8053938150405884
    3. ' list' → logprob: -8.055394172668457
    4. ' ' → logprob: -9.055394172668457
    5. 'list' → logprob: -9.680394172668457
    6. '   ' → logprob: -9.805394172668457
    7. 'int' → logprob: -11.055394172668457
    8. ' ' → logprob: -11.680394172668457
    9. '[input' → logprob: -11.680394172668457
    10. ' [' → logprob: -11.805394172668457

Token 67: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33322539925575256
    2. '("("' → logprob: -1.5832253694534302
    3. '()' → logprob: -3.0832254886627197
    4. '("' → logprob: -4.208225250244141
    5. '('' → logprob: -4.208225250244141
    6. '("")' → logprob: -6.708225250244141
    7. '("(' → logprob: -6.833225250244141
    8. '("""' → logprob: -9.33322525024414
    9. '(">' → logprob: -10.08322525024414
    10. '(`' → logprob: -11.08322525024414

Token 68: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026885593309998512
    2. '.split' → logprob: -3.651885509490967
    3. '.strip' → logprob: -8.026885986328125
    4. '.s' → logprob: -9.526885986328125
    5. 'split' → logprob: -9.776885986328125
    6. ' .' → logprob: -10.026885986328125
    7. ')' → logprob: -10.651885986328125
    8. ').' → logprob: -10.901885986328125
    9. ',' → logprob: -11.776885986328125
    10. ' ' → logprob: -11.776885986328125

Token 69: ' #' (ID: 1069)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.4254905581474304
    2. '.' → logprob: -1.3004906177520752
    3. '.strip' → logprob: -3.800490617752075
    4. '_util' → logprob: -4.675490379333496
    5. '.s' → logprob: -4.800490379333496
    6. 's' → logprob: -4.800490379333496
    7. ' ' → logprob: -5.300490379333496
    8. 'split' → logprob: -5.550490379333496
    9. ' .' → logprob: -6.050490379333496
    10. ')' → logprob: -6.300490379333496

Token 70: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1061397790908813
    2. 'numbers' → logprob: -1.4811397790908813
    3. ' nombres' → logprob: -1.8561397790908813
    4. '#' → logprob: -2.481139659881592
    5. ' numbers' → logprob: -3.356139659881592
    6. 'a' → logprob: -3.481139659881592
    7. 'split' → logprob: -3.731139659881592
    8. 'nombre' → logprob: -4.106139659881592
    9. 'val' → logprob: -4.231139659881592
    10. 'nums' → logprob: -4.231139659881592

Token 71: ' méthode' (ID: 71490)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0630942583084106
    2. 'a' → logprob: -1.6880942583084106
    3. '#' → logprob: -2.438094139099121
    4. ' nombres' → logprob: -2.438094139099121
    5. 'val' → logprob: -2.813094139099121
    6. ' a' → logprob: -3.188094139099121
    7. 'numbers' → logprob: -3.438094139099121
    8. ' valeurs' → logprob: -3.563094139099121
    9. 's' → logprob: -3.688094139099121
    10. 'x' → logprob: -3.938094139099121

Token 72: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.7000892162322998
    2. 'split' → logprob: -0.7000892162322998
    3. '.split' → logprob: -5.825089454650879
    4. ' strip' → logprob: -6.325089454650879
    5. 'strip' → logprob: -7.575089454650879
    6. 's' → logprob: -7.950089454650879
    7. 'spl' → logprob: -8.075089454650879
    8. ' .' → logprob: -8.700089454650879
    9. '.strip' → logprob: -8.700089454650879
    10. ' utiles' → logprob: -8.825089454650879

Token 73: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005458340048789978
    2. '(' → logprob: -5.255458354949951
    3. '('' → logprob: -8.880457878112793
    4. '().' → logprob: -10.130457878112793
    5. '("' → logprob: -11.130457878112793
    6. ' ()' → logprob: -11.630457878112793
    7. '()]' → logprob: -12.630457878112793
    8. '(),' → logprob: -13.005457878112793
    9. '()

' → logprob: -13.130457878112793
    10. '()
' → logprob: -13.755457878112793

Token 74: ' va' (ID: 3423)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01914309710264206
    2. '(' → logprob: -4.144143104553223
    3. '().' → logprob: -6.394143104553223
    4. '('' → logprob: -7.519143104553223
    5. '<|end|>' → logprob: -8.269143104553223
    6. '.' → logprob: -9.519143104553223
    7. ' ()' → logprob: -9.644143104553223
    8. 's' → logprob: -9.769143104553223
    9. 'split' → logprob: -9.894143104553223
    10. '("' → logprob: -10.019143104553223

Token 75: ' couper' (ID: 135212)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7374377250671387
    2. 'split' → logprob: -1.7374377250671387
    3. '()' → logprob: -2.7374377250671387
    4. ' split' → logprob: -2.9874377250671387
    5. 's' → logprob: -3.2374377250671387
    6. '   ' → logprob: -4.112437725067139
    7. '[' → logprob: -4.237437725067139
    8. ' splitter' → logprob: -4.362437725067139
    9. 'spl' → logprob: -4.487437725067139
    10. ' permettre' → logprob: -4.487437725067139

Token 76: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20264597237110138
    2. '('' → logprob: -1.827646017074585
    3. '(' → logprob: -4.077645778656006
    4. ' ' → logprob: -6.577645778656006
    5. '("' → logprob: -6.702645778656006
    6. '[' → logprob: -7.577645778656006
    7. 'l' → logprob: -7.952645778656006
    8. ' la' → logprob: -8.077646255493164
    9. ' ()' → logprob: -8.202646255493164
    10. ''' → logprob: -8.702646255493164

Token 77: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.9497934579849243
    2. ' chaînes' → logprob: -1.5747934579849243
    3. 'chaine' → logprob: -1.6997934579849243
    4. 'cha' → logprob: -2.9497933387756348
    5. 'utile' → logprob: -3.4497933387756348
    6. 's' → logprob: -3.4497933387756348
    7. 'util' → logprob: -3.9497933387756348
    8. ' ' → logprob: -3.9497933387756348
    9. ' utiles' → logprob: -4.074793338775635
    10. 'string' → logprob: -4.324793338775635

Token 78: ' '' (ID: 461)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4911330938339233
    2. ' ' → logprob: -1.6161330938339233
    3. ' utiles' → logprob: -1.8661330938339233
    4. 'utile' → logprob: -2.241133213043213
    5. '(util' → logprob: -2.991133213043213
    6. ' utile' → logprob: -3.116133213043213
    7. '[]' → logprob: -3.366133213043213
    8. 'es' → logprob: -3.741133213043213
    9. 'au' → logprob: -4.116133213043213
    10. ' en' → logprob: -4.491133213043213

Token 79: 'util' (ID: 2056)
  Prédit: ' utiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiles' → logprob: -0.20344649255275726
    2. 'util' → logprob: -2.078446388244629
    3. '(util' → logprob: -3.953446388244629
    4. ' ' → logprob: -4.328446388244629
    5. 'utile' → logprob: -4.703446388244629
    6. 'ut' → logprob: -5.578446388244629
    7. ''util' → logprob: -5.828446388244629
    8. 'utils' → logprob: -6.078446388244629
    9. ' utile' → logprob: -6.578446388244629
    10. ' util' → logprob: -6.828446388244629

Token 80: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00029995047952979803
    2. 'ises' → logprob: -9.250300407409668
    3. '```' → logprob: -9.875300407409668
    4. 'is' → logprob: -10.125300407409668
    5. '   ' → logprob: -10.500300407409668
    6. 'iles' → logprob: -11.250300407409668
    7. 'ies' → logprob: -11.375300407409668
    8. ' es' → logprob: -11.375300407409668
    9. 'ites' → logprob: -12.375300407409668
    10. 'e' → logprob: -12.375300407409668

Token 81: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07756085693836212
    2. ' '' → logprob: -3.4525609016418457
    3. '()' → logprob: -3.8275609016418457
    4. '(util' → logprob: -4.827560901641846
    5. 'util' → logprob: -5.327560901641846
    6. ' en' → logprob: -6.452560901641846
    7. ''en' → logprob: -6.952560901641846
    8. 'en' → logprob: -7.077560901641846
    9. ' ' → logprob: -7.327560901641846
    10. '('' → logprob: -7.452560901641846

Token 82: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02092066965997219
    2. '('' → logprob: -4.770920753479004
    3. '(' → logprob: -5.520920753479004
    4. ' par' → logprob: -6.395920753479004
    5. ' en' → logprob: -6.520920753479004
    6. ' ' → logprob: -6.770920753479004
    7. ' ()' → logprob: -7.020920753479004
    8. ' (' → logprob: -7.270920753479004
    9. '[' → logprob: -8.145920753479004
    10. ' au' → logprob: -8.270920753479004

Token 83: ' sépar' (ID: 97160)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.3235293626785278
    2. ' ' → logprob: -1.6985293626785278
    3. ' un' → logprob: -1.6985293626785278
    4. ' espaces' → logprob: -2.5735292434692383
    5. ' ['' → logprob: -2.6985292434692383
    6. 's' → logprob: -3.3235292434692383
    7. '<|end|>' → logprob: -3.3235292434692383
    8. '['' → logprob: -3.8235292434692383
    9. '[]' → logprob: -4.323529243469238
    10. ' a' → logprob: -4.448529243469238

Token 84: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.019945047795772552
    2. 'er' → logprob: -4.76994514465332
    3. 'ée' → logprob: -5.14494514465332
    4. 'e' → logprob: -6.39494514465332
    5. 'é' → logprob: -7.01994514465332
    6. 'és' → logprob: -7.26994514465332
    7. 'ées' → logprob: -7.26994514465332
    8. 'a' → logprob: -7.89494514465332
    9. 'ateur' → logprob: -8.26994514465332
    10. 'at' → logprob: -8.26994514465332

Token 85: ' selon' (ID: 27571)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13401144742965698
    2. '()' → logprob: -3.7590115070343018
    3. ' les' → logprob: -4.134011268615723
    4. 's' → logprob: -4.259011268615723
    5. ' au' → logprob: -4.759011268615723
    6. '<|end|>' → logprob: -4.759011268615723
    7. ' l' → logprob: -4.884011268615723
    8. ' la' → logprob: -5.384011268615723
    9. 'au' → logprob: -5.509011268615723
    10. ' par' → logprob: -5.509011268615723

Token 86: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.561919093132019
    2. ' les' → logprob: -1.936919093132019
    3. 'l' → logprob: -2.0619192123413086
    4. ''' → logprob: -2.4369192123413086
    5. 's' → logprob: -4.561919212341309
    6. ''un' → logprob: -4.686919212341309
    7. 'les' → logprob: -4.811919212341309
    8. ' '' → logprob: -5.061919212341309
    9. ' le' → logprob: -5.186919212341309
    10. ' ' → logprob: -5.436919212341309

Token 87: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.034434717148542404
    2. 'esp' → logprob: -3.7844347953796387
    3. ''esp' → logprob: -4.909434795379639
    4. 'es' → logprob: -6.284434795379639
    5. ''espace' → logprob: -7.284434795379639
    6. ' espace' → logprob: -7.409434795379639
    7. ''' → logprob: -8.78443431854248
    8. 'spaces' → logprob: -9.03443431854248
    9. ' '' → logprob: -9.15943431854248
    10. ' espacios' → logprob: -10.53443431854248

Token 88: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.7029757499694824
    2. 'u' → logprob: -1.7029757499694824
    3. 'util' → logprob: -1.8279757499694824
    4. '_util' → logprob: -1.8279757499694824
    5. ')' → logprob: -2.4529757499694824
    6. 'ut' → logprob: -3.0779757499694824
    7. '   ' → logprob: -3.3279757499694824
    8. '[' → logprob: -3.5779757499694824
    9. ',' → logprob: -3.9529757499694824
    10. '.util' → logprob: -4.327975749969482

Token 89: ' retourne' (ID: 178818)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.9585443735122681
    2. ' ren' → logprob: -1.583544373512268
    3. 'ren' → logprob: -2.2085442543029785
    4. ' retourner' → logprob: -2.3335442543029785
    5. ' créer' → logprob: -2.7085442543029785
    6. ' les' → logprob: -2.8335442543029785
    7. ' return' → logprob: -3.8335442543029785
    8. 'stock' → logprob: -3.8335442543029785
    9. 'return' → logprob: -4.7085442543029785
    10. 'assign' → logprob: -5.4585442543029785

Token 90: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.11182151734828949
    2. ' un' → logprob: -2.986821413040161
    3. 'une' → logprob: -3.361821413040161
    4. '[' → logprob: -4.86182165145874
    5. ' ['' → logprob: -5.86182165145874
    6. '['' → logprob: -6.36182165145874
    7. ' ' → logprob: -6.36182165145874
    8. ' a' → logprob: -6.61182165145874
    9. '[]' → logprob: -6.61182165145874
    10. ' ' → logprob: -7.11182165145874

Token 91: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.25505247712135315
    2. 'liste' → logprob: -1.5050524473190308
    3. 'list' → logprob: -5.88005256652832
    4. ' list' → logprob: -9.13005256652832
    5. 's' → logprob: -9.63005256652832
    6. ' ' → logprob: -9.88005256652832
    7. 'Liste' → logprob: -10.88005256652832
    8. '['' → logprob: -11.50505256652832
    9. '<|end|>' → logprob: -11.63005256652832
    10. 'l' → logprob: -11.63005256652832

Token 92: ' des' (ID: 731)
  Prédit: '_util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.3650133013725281
    2. 'util' → logprob: -2.740013360977173
    3. '[' → logprob: -3.115013360977173
    4. 'u' → logprob: -3.740013360977173
    5. '_' → logprob: -3.865013360977173
    6. ' utiles' → logprob: -3.865013360977173
    7. ',' → logprob: -4.115013122558594
    8. '   ' → logprob: -4.490013122558594
    9. ' des' → logprob: -4.615013122558594
    10. '(util' → logprob: -4.740013122558594

Token 93: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.6012365221977234
    2. 'élé' → logprob: -1.6012365818023682
    3. 'm' → logprob: -2.476236581802368
    4. 'tokens' → logprob: -3.226236581802368
    5. ' mots' → logprob: -3.226236581802368
    6. 'cha' → logprob: -3.726236581802368
    7. 'chain' → logprob: -3.851236581802368
    8. ' éléments' → logprob: -4.101236343383789
    9. ' tokens' → logprob: -4.976236343383789
    10. ' chain' → logprob: -4.976236343383789

Token 94: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.038748279213905334
    2. '-cha' → logprob: -3.663748264312744
    3. '-' → logprob: -5.288748264312744
    4. 'cha' → logprob: -5.913748264312744
    5. '-chain' → logprob: -6.288748264312744
    6. 'chain' → logprob: -7.288748264312744
    7. 'strings' → logprob: -7.788748264312744
    8. ' chain' → logprob: -8.038748741149902
    9. 's' → logprob: -8.163748741149902
    10. '   ' → logprob: -8.788748741149902

Token 95: 'înes' (ID: 171517)
  Prédit: 'î'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'î' → logprob: -0.31811192631721497
    2. 'înes' → logprob: -1.3181118965148926
    3. 'i' → logprob: -6.693111896514893
    4. 'Î' → logprob: -7.318111896514893
    5. 'în' → logprob: -7.443111896514893
    6. 'îne' → logprob: -7.693111896514893
    7. 'ï' → logprob: -7.943111896514893
    8. '   ' → logprob: -7.943111896514893
    9. '```' → logprob: -8.31811237335205
    10. 'ines' → logprob: -8.44311237335205

Token 96: '
' (ID: 198)
  Prédit: ' utiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiles' → logprob: -1.7522568702697754
    2. '   ' → logprob: -2.0022568702697754
    3. '    
' → logprob: -2.5022568702697754
    4. ' ut' → logprob: -2.6272568702697754
    5. ' nombres' → logprob: -2.7522568702697754
    6. ' n' → logprob: -2.7522568702697754
    7. ' ,' → logprob: -2.8772568702697754
    8. ',' → logprob: -3.1272568702697754
    9. 'n' → logprob: -3.3772568702697754
    10. 'util' → logprob: -3.5022568702697754

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0548838376998901
    2. 'u' → logprob: -1.4298838376998901
    3. 'util' → logprob: -2.4298839569091797
    4. 'n' → logprob: -2.4298839569091797
    5. '_util' → logprob: -2.4298839569091797
    6. '    
' → logprob: -3.1798839569091797
    7. ',' → logprob: -3.8048839569091797
    8. 's' → logprob: -4.30488395690918
    9. '_' → logprob: -4.30488395690918
    10. '[' → logprob: -4.55488395690918

Token 98: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5666008591651917
    2. ' nombres' → logprob: -1.8166007995605469
    3. ' n' → logprob: -1.9416007995605469
    4. ' numbers' → logprob: -3.316600799560547
    5. 'numbers' → logprob: -3.691600799560547
    6. '    
' → logprob: -4.816600799560547
    7. 'u' → logprob: -5.566600799560547
    8. ' valeurs' → logprob: -5.566600799560547
    9. 'val' → logprob: -5.566600799560547
    10. ' utiles' → logprob: -5.691600799560547

Token 99: ' Donc' (ID: 88837)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.772022545337677
    2. ' nombres' → logprob: -1.1470224857330322
    3. ' numbers' → logprob: -2.5220224857330322
    4. 'numbers' → logprob: -2.5220224857330322
    5. '   ' → logprob: -4.022022724151611
    6. ' n' → logprob: -4.647022724151611
    7. 'nums' → logprob: -5.272022724151611
    8. ' parts' → logprob: -5.522022724151611
    9. ' chiffres' → logprob: -5.772022724151611
    10. 'ent' → logprob: -5.897022724151611

Token 100: ' '' (ID: 461)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.6299583911895752
    2. ' numbers' → logprob: -2.254958391189575
    3. ' utiles' → logprob: -2.379958391189575
    4. 'n' → logprob: -3.379958391189575
    5. ' n' → logprob: -3.504958391189575
    6. ' la' → logprob: -3.629958391189575
    7. ' ' → logprob: -3.629958391189575
    8. ' les' → logprob: -3.754958391189575
    9. ' ut' → logprob: -4.379958152770996
    10. ' util' → logprob: -4.504958152770996

Token 101: '5' (ID: 20)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.029855774715542793
    2. ' utiles' → logprob: -3.654855728149414
    3. ' util' → logprob: -6.779855728149414
    4. 'utile' → logprob: -7.029855728149414
    5. 'utils' → logprob: -8.029855728149414
    6. ' ' → logprob: -8.029855728149414
    7. 'ut' → logprob: -8.529855728149414
    8. ''util' → logprob: -9.654855728149414
    9. ' utile' → logprob: -9.904855728149414
    10. 'result' → logprob: -10.092355728149414

Token 102: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35499894618988037
    2. ' '' → logprob: -1.9799989461898804
    3. '<|end|>' → logprob: -2.72999906539917
    4. ' "' → logprob: -4.22999906539917
    5. ' ').' → logprob: -4.22999906539917
    6. ' ')' → logprob: -4.47999906539917
    7. '.split' → logprob: -4.47999906539917
    8. '  ' → logprob: -5.10499906539917
    9. '   ' → logprob: -5.10499906539917
    10. '<|end|>' → logprob: -5.47999906539917

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002165299083571881
    2. ' ' → logprob: -8.500216484069824
    3. '   ' → logprob: -12.625216484069824
    4. '  ' → logprob: -12.875216484069824
    5. '3' → logprob: -13.125216484069824
    6. ''' → logprob: -14.125216484069824
    7. '1' → logprob: -14.250216484069824
    8. '')' → logprob: -14.750216484069824
    9. '    ' → logprob: -14.750216484069824
    10. 'util' → logprob: -14.875216484069824

Token 104: ''' (ID: 6)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.006818497087806463
    2. ''' → logprob: -5.3818182945251465
    3. ' '.' → logprob: -7.1318182945251465
    4. '".' → logprob: -7.6318182945251465
    5. '').' → logprob: -8.381818771362305
    6. 'util' → logprob: -8.756818771362305
    7. '   ' → logprob: -9.006818771362305
    8. '.split' → logprob: -9.381818771362305
    9. '.' → logprob: -9.631818771362305
    10. ').' → logprob: -10.131818771362305

Token 105: ' devient' (ID: 63488)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.01688579097390175
    2. 'util' → logprob: -5.391885757446289
    3. '.' → logprob: -5.891885757446289
    4. 'split' → logprob: -6.016885757446289
    5. ' .' → logprob: -6.141885757446289
    6. '.strip' → logprob: -6.891885757446289
    7. '_util' → logprob: -6.891885757446289
    8. '   ' → logprob: -7.516885757446289
    9. '.util' → logprob: -8.016885757446289
    10. ' =' → logprob: -8.016885757446289

Token 106: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.4755915105342865
    2. ' ['' → logprob: -0.9755915403366089
    3. '["' → logprob: -6.850591659545898
    4. '[' → logprob: -8.225591659545898
    5. ' ["' → logprob: -8.725591659545898
    6. ' [' → logprob: -10.850591659545898
    7. ' ' → logprob: -14.225591659545898
    8. ' ' → logprob: -14.225591659545898
    9. '[['' → logprob: -14.350591659545898
    10. '['_' → logprob: -14.475591659545898

Token 107: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.3856492842023727e-06
    2. ''' → logprob: -13.750000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '2' → logprob: -17.375001907348633
    5. 'util' → logprob: -17.500001907348633
    6. '55' → logprob: -17.625001907348633
    7. '```' → logprob: -17.875001907348633
    8. '1' → logprob: -18.375001907348633
    9. '53' → logprob: -18.437501907348633
    10. '"' → logprob: -18.437501907348633

Token 108: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.023313960060477257
    2. '','' → logprob: -3.7733139991760254
    3. ',' → logprob: -9.898313522338867
    4. ''' → logprob: -11.273313522338867
    5. '',"' → logprob: -13.148313522338867
    6. ','' → logprob: -13.648313522338867
    7. '",' → logprob: -14.148313522338867
    8. '',
' → logprob: -14.273313522338867
    9. '2' → logprob: -14.523313522338867
    10. '5' → logprob: -16.023313522338867

Token 109: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.000526938121765852
    2. ' '' → logprob: -7.6255269050598145
    3. '5' → logprob: -10.625527381896973
    4. '2' → logprob: -11.500527381896973
    5. ' ' → logprob: -12.875527381896973
    6. '3' → logprob: -14.875527381896973
    7. '   ' → logprob: -15.000527381896973
    8. '',' → logprob: -15.375527381896973
    9. ''s' → logprob: -15.500527381896973
    10. '1' → logprob: -15.750527381896973

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0073283216916024685
    2. '5' → logprob: -5.007328510284424
    3. '']' → logprob: -7.757328510284424
    4. ''' → logprob: -9.507328033447266
    5. '',' → logprob: -9.882328033447266
    6. '','' → logprob: -10.382328033447266
    7. '1' → logprob: -11.632328033447266
    8. ' ' → logprob: -12.132328033447266
    9. ''],' → logprob: -12.257328033447266
    10. '3' → logprob: -13.507328033447266

Token 111: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0014721262268722057
    2. ']' → logprob: -6.626471996307373
    3. ''' → logprob: -9.251472473144531
    4. '']
' → logprob: -10.501472473144531
    5. '   ' → logprob: -11.501472473144531
    6. '"]' → logprob: -11.876472473144531
    7. ' ']' → logprob: -13.126472473144531
    8. '']
' → logprob: -14.251472473144531
    9. '',' → logprob: -14.251472473144531
    10. ' ]' → logprob: -14.501472473144531

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26626768708229065
    2. 'n' → logprob: -2.016267776489258
    3. '    
' → logprob: -2.891267776489258
    4. 'u' → logprob: -5.016267776489258
    5. '
' → logprob: -5.016267776489258
    6. '  
' → logprob: -5.016267776489258
    7. ' n' → logprob: -5.266267776489258
    8. 'a' → logprob: -5.766267776489258
    9. '   
' → logprob: -5.891267776489258
    10. ' 
' → logprob: -6.266267776489258

Token 113: ' morceaux' (ID: 133321)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8414402604103088
    2. '    
' → logprob: -2.341440200805664
    3. 'numbers' → logprob: -2.341440200805664
    4. 'a' → logprob: -2.466440200805664
    5. '   ' → logprob: -2.591440200805664
    6. ' nombres' → logprob: -2.841440200805664
    7. ' numbers' → logprob: -3.341440200805664
    8. ' a' → logprob: -3.591440200805664
    9. ' n' → logprob: -3.841440200805664
    10. 'num' → logprob: -4.216440200805664

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014436572790146
    2. '=' → logprob: -1.7014436721801758
    3. '_' → logprob: -11.576443672180176
    4. 's' → logprob: -11.576443672180176
    5. '_util' → logprob: -12.076443672180176
    6. '=[]' → logprob: -13.451443672180176
    7. '[]' → logprob: -14.326443672180176
    8. ')' → logprob: -14.576443672180176
    9. '[' → logprob: -14.576443672180176
    10. '   ' → logprob: -15.201443672180176

Token 115: ' utiles' (ID: 121161)
  Prédit: ' utiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiles' → logprob: -0.01905222237110138
    2. 'util' → logprob: -4.019052028656006
    3. 'utils' → logprob: -7.894052028656006
    4. ' ' → logprob: -8.894052505493164
    5. ' util' → logprob: -8.894052505493164
    6. 'ut' → logprob: -9.519052505493164
    7. 'utile' → logprob: -9.894052505493164
    8. '```' → logprob: -10.769052505493164
    9. ' útiles' → logprob: -11.269052505493164
    10. ' utile' → logprob: -11.269052505493164

Token 116: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3140186369419098
    2. '.split' → logprob: -1.3140186071395874
    3. ' .' → logprob: -7.314018726348877
    4. '.strip' → logprob: -9.439018249511719
    5. '.s' → logprob: -12.689018249511719
    6. '().' → logprob: -12.814018249511719
    7. 'split' → logprob: -13.689018249511719
    8. '.Split' → logprob: -14.189018249511719
    9. '()' → logprob: -14.439018249511719
    10. '.util' → logprob: -14.564018249511719

Token 117: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.317657470703125
    2. '(' → logprob: -1.317657470703125
    3. '('' → logprob: -5.442657470703125
    4. '("("' → logprob: -10.317657470703125
    5. ' ()' → logprob: -12.067657470703125
    6. '("' → logprob: -12.442657470703125
    7. '(
' → logprob: -13.192657470703125
    8. ' (' → logprob: -13.442657470703125
    9. '(`' → logprob: -13.692657470703125
    10. '()`' → logprob: -13.942657470703125

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34548330307006836
    2. 'n' → logprob: -1.8454833030700684
    3. 'a' → logprob: -2.9704833030700684
    4. '[' → logprob: -3.2204833030700684
    5. '    
' → logprob: -3.8454833030700684
    6. '  
' → logprob: -5.095483303070068
    7. ',' → logprob: -6.095483303070068
    8. ' ' → logprob: -6.345483303070068
    9. 'x' → logprob: -6.595483303070068
    10. '   
' → logprob: -6.720483303070068

Token 119: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35648587346076965
    2. 'n' → logprob: -1.4814858436584473
    3. 'a' → logprob: -3.1064858436584473
    4. '   ' → logprob: -4.606485843658447
    5. ',' → logprob: -5.606485843658447
    6. 'x' → logprob: -6.231485843658447
    7. 'i' → logprob: -6.481485843658447
    8. 's' → logprob: -6.731485843658447
    9. '1' → logprob: -6.856485843658447
    10. '0' → logprob: -6.981485843658447

Token 120: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48478227853775024
    2. ' a' → logprob: -2.2347822189331055
    3. 'n' → logprob: -2.4847822189331055
    4. '#' → logprob: -2.4847822189331055
    5. 'nombre' → logprob: -3.4847822189331055
    6. 'x' → logprob: -3.7347822189331055
    7. 'num' → logprob: -4.2347822189331055
    8. ' n' → logprob: -4.6097822189331055
    9. ' nombre' → logprob: -5.2347822189331055
    10. ' #' → logprob: -5.3597822189331055

Token 121: ' fonction' (ID: 17610)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.8184001445770264
    2. 'a' → logprob: -1.3184001445770264
    3. '#' → logprob: -2.4434001445770264
    4. ' première' → logprob: -3.4434001445770264
    5. 'n' → logprob: -3.5684001445770264
    6. ' a' → logprob: -3.5684001445770264
    7. ' valeur' → logprob: -4.0684003829956055
    8. ' premiere' → logprob: -4.0684003829956055
    9. 'x' → logprob: -4.3184003829956055
    10. ' premier' → logprob: -4.5684003829956055

Token 122: ' map' (ID: 4014)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2580697536468506
    2. 'int' → logprob: -1.5080697536468506
    3. 'a' → logprob: -5.63306999206543
    4. ' a' → logprob: -6.38306999206543
    5. '[int' → logprob: -9.13306999206543
    6. ' ' → logprob: -9.25806999206543
    7. ' len' → logprob: -9.50806999206543
    8. 'm' → logprob: -9.75806999206543
    9. '#' → logprob: -9.88306999206543
    10. 'len' → logprob: -10.00806999206543

Token 123: '()' (ID: 416)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02709653042256832
    2. '(' → logprob: -3.6520965099334717
    3. '(lambda' → logprob: -7.277096748352051
    4. 'int' → logprob: -9.90209674835205
    5. '(
' → logprob: -10.40209674835205
    6. '(str' → logprob: -11.65209674835205
    7. '(float' → logprob: -11.90209674835205
    8. '<int' → logprob: -12.77709674835205
    9. '[int' → logprob: -13.40209674835205
    10. ' int' → logprob: -14.02709674835205

Token 124: ' applique' (ID: 180579)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018925314769148827
    2. '(' → logprob: -4.143925189971924
    3. '(lambda' → logprob: -6.018925189971924
    4. 'int' → logprob: -8.643925666809082
    5. ' int' → logprob: -9.643925666809082
    6. '(
' → logprob: -9.893925666809082
    7. '   ' → logprob: -9.893925666809082
    8. ' (' → logprob: -10.518925666809082
    9. '(float' → logprob: -10.643925666809082
    10. '<int' → logprob: -11.393925666809082

Token 125: ' la' (ID: 557)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.28486084938049316
    2. 'int' → logprob: -2.034860849380493
    3. ' int' → logprob: -2.159860849380493
    4. '(' → logprob: -6.534860610961914
    5. '   ' → logprob: -8.909860610961914
    6. '<int' → logprob: -9.909860610961914
    7. '(lambda' → logprob: -10.034860610961914
    8. '=int' → logprob: -10.159860610961914
    9. '[int' → logprob: -10.534860610961914
    10. ' (' → logprob: -10.784860610961914

Token 126: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07004091143608093
    2. ' int' → logprob: -2.6950409412384033
    3. 'lambda' → logprob: -9.820040702819824
    4. ' lambda' → logprob: -10.820040702819824
    5. '   ' → logprob: -11.570040702819824
    6. '(int' → logprob: -11.570040702819824
    7. ' ' → logprob: -13.070040702819824
    8. 'str' → logprob: -13.195040702819824
    9. 'fonction' → logprob: -13.320040702819824
    10. '=int' → logprob: -13.695040702819824

Token 127: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5760067105293274
    2. 'int' → logprob: -0.8260067105293274
    3. '(int' → logprob: -10.201006889343262
    4. '=int' → logprob: -11.826006889343262
    5. '<int' → logprob: -11.826006889343262
    6. '```' → logprob: -12.201006889343262
    7. '	int' → logprob: -12.576006889343262
    8. ' ' → logprob: -13.451006889343262
    9. '   ' → logprob: -13.451006889343262
    10. ':int' → logprob: -13.576006889343262

Token 128: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15520383417606354
    2. ' à' → logprob: -3.1552038192749023
    3. ' sur' → logprob: -3.6552038192749023
    4. '(int' → logprob: -3.7802038192749023
    5. ' ' → logprob: -4.280203819274902
    6. '(lambda' → logprob: -4.405203819274902
    7. ' aux' → logprob: -4.655203819274902
    8. '()' → logprob: -5.280203819274902
    9. '   ' → logprob: -6.280203819274902
    10. 'sur' → logprob: -6.405203819274902

Token 129: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.021835871040821075
    2. 'cha' → logprob: -4.271835803985596
    3. ' tous' → logprob: -6.396835803985596
    4. ' each' → logprob: -6.396835803985596
    5. ' chacun' → logprob: -6.646835803985596
    6. 'm' → logprob: -7.021835803985596
    7. ' morceaux' → logprob: -7.146835803985596
    8. ' chacune' → logprob: -7.521835803985596
    9. 'each' → logprob: -8.396836280822754
    10. 'ch' → logprob: -8.521836280822754

Token 130: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.47187408804893494
    2. ' morceau' → logprob: -1.9718741178512573
    3. 'm' → logprob: -2.0968739986419678
    4. ' élément' → logprob: -2.5968739986419678
    5. ' morceaux' → logprob: -3.3468739986419678
    6. '(m' → logprob: -5.846874237060547
    7. ' éléments' → logprob: -7.471874237060547
    8. ' ' → logprob: -8.596874237060547
    9. ' element' → logprob: -8.721874237060547
    10. ' m' → logprob: -8.721874237060547

Token 131: ' de' (ID: 334)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.11230888217687607
    2. ' des' → logprob: -2.862308979034424
    3. ' de' → logprob: -4.112308979034424
    4. '(' → logprob: -4.237308979034424
    5. ' (' → logprob: -5.362308979034424
    6. 'm' → logprob: -5.362308979034424
    7. 'des' → logprob: -5.987308979034424
    8. 's' → logprob: -6.237308979034424
    9. '   ' → logprob: -6.362308979034424
    10. ' morceaux' → logprob: -7.362308979034424

Token 132: ' la' (ID: 557)
  Prédit: ' morceaux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' morceaux' → logprob: -0.18126501142978668
    2. 'm' → logprob: -1.8062649965286255
    3. 'la' → logprob: -6.931264877319336
    4. ' ' → logprob: -8.931264877319336
    5. ' la' → logprob: -8.931264877319336
    6. 'mo' → logprob: -9.306264877319336
    7. 'l' → logprob: -9.931264877319336
    8. 'mor' → logprob: -10.056264877319336
    9. 'list' → logprob: -10.931264877319336
    10. ' fragments' → logprob: -11.681264877319336

Token 133: ' liste' (ID: 31719)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3574446737766266
    2. 'liste' → logprob: -2.2324447631835938
    3. ' morceaux' → logprob: -2.3574447631835938
    4. 'list' → logprob: -2.4824447631835938
    5. ' liste' → logprob: -4.357444763183594
    6. 'mor' → logprob: -7.357444763183594
    7. ' listes' → logprob: -7.732444763183594
    8. ' ' → logprob: -8.357444763183594
    9. ' list' → logprob: -8.482444763183594
    10. 'mo' → logprob: -8.857444763183594

Token 134: ' '' (ID: 461)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3595680892467499
    2. '(' → logprob: -1.2345681190490723
    3. '(
' → logprob: -5.234568119049072
    4. ' (' → logprob: -5.859568119049072
    5. '(util' → logprob: -6.484568119049072
    6. 'm' → logprob: -7.484568119049072
    7. ',' → logprob: -7.984568119049072
    8. ')' → logprob: -9.734567642211914
    9. '()' → logprob: -9.859567642211914
    10. '.' → logprob: -10.234567642211914

Token 135: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07155179232358932
    2. ' morceaux' → logprob: -2.69655179977417
    3. 'mor' → logprob: -6.94655179977417
    4. ' ' → logprob: -8.946551322937012
    5. ' mor' → logprob: -8.946551322937012
    6. '   ' → logprob: -9.446551322937012
    7. 'mo' → logprob: -9.446551322937012
    8. '	m' → logprob: -9.946551322937012
    9. '(m' → logprob: -10.446551322937012
    10. ' ' → logprob: -10.696551322937012

Token 136: 'orce' (ID: 22941)
  Prédit: 'orce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orce' → logprob: -0.0027731433510780334
    2. 'or' → logprob: -6.627773284912109
    3. 'orc' → logprob: -6.627773284912109
    4. 'orch' → logprob: -10.00277328491211
    5. 'orp' → logprob: -10.75277328491211
    6. ' morceaux' → logprob: -10.87777328491211
    7. '   ' → logprob: -12.00277328491211
    8. '```' → logprob: -12.00277328491211
    9. 'orque' → logprob: -12.12777328491211
    10. 'orz' → logprob: -12.62777328491211

Token 137: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -4.191489642835222e-05
    2. 'au' → logprob: -10.375041961669922
    3. 'a' → logprob: -11.875041961669922
    4. 'uvres' → logprob: -13.750041961669922
    5. 'Aux' → logprob: -13.875041961669922
    6. '```' → logprob: -14.875041961669922
    7. '
' → logprob: -15.250041961669922
    8. 'e' → logprob: -15.375041961669922
    9. 'ux' → logprob: -15.750041961669922
    10. 'eux' → logprob: -16.000041961669922

Token 138: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20622365176677704
    2. ',' → logprob: -2.081223726272583
    3. ' )' → logprob: -3.206223726272583
    4. ' ,' → logprob: -4.081223487854004
    5. '   ' → logprob: -6.831223487854004
    6. '(m' → logprob: -7.206223487854004
    7. ')
' → logprob: -7.831223487854004
    8. '(util' → logprob: -7.831223487854004
    9. ' )
' → logprob: -8.081223487854004
    10. '),' → logprob: -8.206223487854004

Token 139: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7002720236778259
    2. ',' → logprob: -1.3252720832824707
    3. '   ' → logprob: -2.3252720832824707
    4. '(' → logprob: -2.5752720832824707
    5. ' )' → logprob: -4.200272083282471
    6. '(util' → logprob: -4.450272083282471
    7. '()' → logprob: -4.950272083282471
    8. ' ,' → logprob: -5.075272083282471
    9. '(
' → logprob: -5.575272083282471
    10. '(m' → logprob: -5.825272083282471

Token 140: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2306886911392212
    2. 'result' → logprob: -1.4806886911392212
    3. ',' → logprob: -1.7306886911392212
    4. ' result' → logprob: -2.6056885719299316
    5. 'n' → logprob: -3.2306885719299316
    6. ' nombres' → logprob: -3.7306885719299316
    7. ' n' → logprob: -4.105688571929932
    8. '(numbers' → logprob: -4.355688571929932
    9. ' numbers' → logprob: -4.480688571929932
    10. ' integers' → logprob: -4.605688571929932

Token 141: ' Cela' (ID: 44403)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ent' → logprob: -1.245803713798523
    2. 'n' → logprob: -1.495803713798523
    3. 'ent' → logprob: -1.620803713798523
    4. ' nombres' → logprob: -2.1208038330078125
    5. ' n' → logprob: -3.4958038330078125
    6. ' a' → logprob: -3.7458038330078125
    7. ' numbers' → logprob: -4.1208038330078125
    8. 'a' → logprob: -4.2458038330078125
    9. ' result' → logprob: -4.6208038330078125
    10. 'result' → logprob: -4.6208038330078125

Token 142: ' transforme' (ID: 184109)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.7049816250801086
    2. ' convert' → logprob: -1.4549815654754639
    3. ' transforme' → logprob: -1.7049815654754639
    4. ' va' → logprob: -3.704981565475464
    5. ' crée' → logprob: -3.954981565475464
    6. 'convert' → logprob: -4.204981803894043
    7. ' donne' → logprob: -4.704981803894043
    8. ' ' → logprob: -5.329981803894043
    9. ' retourne' → logprob: -5.704981803894043
    10. ' revient' → logprob: -6.329981803894043

Token 143: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.7254151701927185
    2. ' la' → logprob: -1.6004152297973633
    3. ' morceaux' → logprob: -1.8504152297973633
    4. ' les' → logprob: -2.1004152297973633
    5. 'm' → logprob: -4.850415229797363
    6. ' ' → logprob: -5.350415229797363
    7. '   ' → logprob: -5.600415229797363
    8. ' map' → logprob: -5.850415229797363
    9. ' each' → logprob: -5.850415229797363
    10. 'la' → logprob: -5.975415229797363

Token 144: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.13638685643672943
    2. ' élément' → logprob: -2.1363868713378906
    3. ' chaîne' → logprob: -5.511386871337891
    4. 'm' → logprob: -6.136386871337891
    5. ' ' → logprob: -6.886386871337891
    6. ' morceau' → logprob: -6.886386871337891
    7. 'chaine' → logprob: -7.761386871337891
    8. ' chaine' → logprob: -8.63638687133789
    9. ' element' → logprob: -9.01138687133789
    10. '   ' → logprob: -9.38638687133789

Token 145: '-cha' (ID: 163177)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.11201424151659012
    2. ' chaîne' → logprob: -3.6120142936706543
    3. '_' → logprob: -4.237014293670654
    4. '   ' → logprob: -4.362014293670654
    5. ' chaine' → logprob: -4.862014293670654
    6. 'élé' → logprob: -5.112014293670654
    7. '-chain' → logprob: -5.112014293670654
    8. ' chaînes' → logprob: -5.612014293670654
    9. '-cha' → logprob: -5.737014293670654
    10. '_chain' → logprob: -5.737014293670654

Token 146: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.026045504957437515
    2. 'î' → logprob: -4.276045322418213
    3. 'ne' → logprob: -5.026045322418213
    4. 'ine' → logprob: -5.901045322418213
    5. 'ïne' → logprob: -7.026045322418213
    6. 'Î' → logprob: -8.026045799255371
    7. 'în' → logprob: -8.526045799255371
    8. 'înes' → logprob: -9.026045799255371
    9. '```' → logprob: -9.026045799255371
    10. 'ı' → logprob: -9.401045799255371

Token 147: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.009092885069549084
    2. 'en' → logprob: -5.509092807769775
    3. ' ' → logprob: -6.384092807769775
    4. ' de' → logprob: -6.509092807769775
    5. 'm' → logprob: -7.634092807769775
    6. ',' → logprob: -8.259093284606934
    7. ''en' → logprob: -8.759093284606934
    8. ' morceaux' → logprob: -8.884093284606934
    9. '   ' → logprob: -9.259093284606934
    10. ' '' → logprob: -9.384093284606934

Token 148: ' chiffres' (ID: 105565)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.7788297533988953
    2. ' la' → logprob: -1.40382981300354
    3. 'm' → logprob: -2.27882981300354
    4. 'la' → logprob: -2.90382981300354
    5. 'car' → logprob: -3.65382981300354
    6. ' chaîne' → logprob: -3.65382981300354
    7. 'chaine' → logprob: -3.90382981300354
    8. 'str' → logprob: -4.028829574584961
    9. ' morceaux' → logprob: -4.028829574584961
    10. ' chaînes' → logprob: -4.653829574584961

Token 149: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.029718440026044846
    2. 'en' → logprob: -4.029718399047852
    3. ''en' → logprob: -5.154718399047852
    4. ' '' → logprob: -6.529718399047852
    5. ''' → logprob: -6.904718399047852
    6. ' de' → logprob: -7.029718399047852
    7. ',' → logprob: -7.404718399047852
    8. ' ' → logprob: -7.404718399047852
    9. 'm' → logprob: -7.779718399047852
    10. '   ' → logprob: -8.779718399047852

Token 150: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.23531131446361542
    2. ' int' → logprob: -2.485311269760132
    3. 'int' → logprob: -2.985311269760132
    4. ' entier' → logprob: -3.610311269760132
    5. 'ent' → logprob: -3.860311269760132
    6. ' des' → logprob: -4.735311508178711
    7. 'un' → logprob: -4.735311508178711
    8. ' ent' → logprob: -5.110311508178711
    9. ' ' → logprob: -6.610311508178711
    10. ' nombre' → logprob: -7.235311508178711

Token 151: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.31167954206466675
    2. ' entier' → logprob: -1.4366796016693115
    3. ' nombre' → logprob: -4.561679363250732
    4. 'int' → logprob: -4.561679363250732
    5. 'nombre' → logprob: -4.936679363250732
    6. ' int' → logprob: -7.186679363250732
    7. ' ent' → logprob: -7.436679363250732
    8. ' ' → logprob: -8.81167984008789
    9. ' integer' → logprob: -9.68667984008789
    10. 'élé' → logprob: -9.93667984008789

Token 152: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16264623403549194
    2. ',' → logprob: -3.7876462936401367
    3. 'n' → logprob: -3.7876462936401367
    4. '(' → logprob: -4.412646293640137
    5. ' n' → logprob: -4.412646293640137
    6. 's' → logprob: -4.537646293640137
    7. ' a' → logprob: -5.037646293640137
    8. ' integers' → logprob: -5.037646293640137
    9. '(n' → logprob: -5.412646293640137
    10. ' (' → logprob: -5.412646293640137

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3088146448135376
    2. 'n' → logprob: -1.5588146448135376
    3. ' 
' → logprob: -2.433814525604248
    4. 'a' → logprob: -2.808814525604248
    5. 'u' → logprob: -2.933814525604248
    6. ' ' → logprob: -3.433814525604248
    7. ',' → logprob: -3.558814525604248
    8. ')' → logprob: -3.683814525604248
    9. 'i' → logprob: -3.683814525604248
    10. '(' → logprob: -3.683814525604248

Token 154: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8472310900688171
    2. 'result' → logprob: -1.347231149673462
    3. 'a' → logprob: -2.347231149673462
    4. ' a' → logprob: -3.597231149673462
    5. ' result' → logprob: -3.597231149673462
    6. ' n' → logprob: -3.847231149673462
    7. '   ' → logprob: -4.097230911254883
    8. ' ' → logprob: -4.347230911254883
    9. 's' → logprob: -4.472230911254883
    10. 'x' → logprob: -4.722230911254883

Token 155: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5468098521232605
    2. 'ent' → logprob: -2.0468099117279053
    3. ' ent' → logprob: -2.1718099117279053
    4. ' nombres' → logprob: -2.9218099117279053
    5. 'a' → logprob: -3.4218099117279053
    6. ' n' → logprob: -4.171809673309326
    7. ' a' → logprob: -4.296809673309326
    8. '   ' → logprob: -4.421809673309326
    9. ' numbers' → logprob: -4.796809673309326
    10. 'numbers' → logprob: -5.046809673309326

Token 156: ' liste' (ID: 31719)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0284364223480225
    2. 'val' → logprob: -2.4034364223480225
    3. 'liste' → logprob: -2.4034364223480225
    4. '#' → logprob: -2.9034364223480225
    5. 'a' → logprob: -2.9034364223480225
    6. ' liste' → logprob: -2.9034364223480225
    7. 'fonction' → logprob: -3.0284364223480225
    8. ' ligne' → logprob: -3.2784364223480225
    9. 'ligne' → logprob: -3.6534364223480225
    10. 'suite' → logprob: -3.6534364223480225

Token 157: ' ['' (ID: 5140)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8428442478179932
    2. 'ent' → logprob: -1.8428442478179932
    3. ' ent' → logprob: -2.092844247817993
    4. ' =' → logprob: -2.092844247817993
    5. ' n' → logprob: -2.967844247817993
    6. ' result' → logprob: -3.842844247817993
    7. ' est' → logprob: -4.592844009399414
    8. ' entière' → logprob: -4.592844009399414
    9. ' integers' → logprob: -4.842844009399414
    10. ' a' → logprob: -4.842844009399414

Token 158: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.003193874144926667
    2. 'int' → logprob: -6.1281938552856445
    3. 'm' → logprob: -7.2531938552856445
    4. '2' → logprob: -9.003193855285645
    5. ' ' → logprob: -9.503193855285645
    6. '3' → logprob: -10.628193855285645
    7. '']' → logprob: -11.128193855285645
    8. 'util' → logprob: -11.253193855285645
    9. ')' → logprob: -11.753193855285645
    10. '1' → logprob: -12.128193855285645

Token 159: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.10038436949253082
    2. ',' → logprob: -2.350384473800659
    3. ''' → logprob: -9.725384712219238
    4. ' ',' → logprob: -10.225384712219238
    5. ' ,' → logprob: -10.600384712219238
    6. '','' → logprob: -10.725384712219238
    7. '",' → logprob: -11.850384712219238
    8. ' ' → logprob: -12.350384712219238
    9. '   ' → logprob: -12.350384712219238
    10. '2' → logprob: -12.600384712219238

Token 160: ' '' (ID: 461)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03415769711136818
    2. ' ' → logprob: -3.4091577529907227
    3. ''' → logprob: -8.159157752990723
    4. ' '' → logprob: -8.534157752990723
    5. ',' → logprob: -11.909157752990723
    6. '   ' → logprob: -12.159157752990723
    7. '1' → logprob: -12.659157752990723
    8. '    ' → logprob: -13.284157752990723
    9. '3' → logprob: -13.534157752990723
    10. 'int' → logprob: -13.659157752990723

Token 161: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.933173426659778e-05
    2. ' ' → logprob: -9.625069618225098
    3. ''' → logprob: -13.375069618225098
    4. ',' → logprob: -14.375069618225098
    5. '   ' → logprob: -15.000069618225098
    6. '']' → logprob: -15.500069618225098
    7. '  ' → logprob: -15.875069618225098
    8. '',' → logprob: -16.50006866455078
    9. '```' → logprob: -17.00006866455078
    10. '')' → logprob: -17.06256866455078

Token 162: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.523571789264679
    2. ']' → logprob: -0.898571789264679
    3. 'int' → logprob: -9.398571968078613
    4. '])' → logprob: -9.898571968078613
    5. '   ' → logprob: -10.023571968078613
    6. ' ]' → logprob: -10.273571968078613
    7. ''])' → logprob: -10.273571968078613
    8. '"]' → logprob: -10.648571968078613
    9. ' ']' → logprob: -10.773571968078613
    10. '']
' → logprob: -10.898571968078613

Token 163: ' devient' (ID: 63488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23074761033058167
    2. ' est' → logprob: -2.355747699737549
    3. '=' → logprob: -3.480747699737549
    4. ' devient' → logprob: -3.480747699737549
    5. 'ent' → logprob: -4.480747699737549
    6. ')' → logprob: -5.355747699737549
    7. ',' → logprob: -5.480747699737549
    8. 'est' → logprob: -5.480747699737549
    9. '   ' → logprob: -5.730747699737549
    10. 's' → logprob: -5.980747699737549

Token 164: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4065159559249878
    2. ' list' → logprob: -1.1565159559249878
    3. '[' → logprob: -4.531516075134277
    4. 'list' → logprob: -4.906516075134277
    5. '[int' → logprob: -7.656516075134277
    6. ' map' → logprob: -7.656516075134277
    7. '[list' → logprob: -8.406516075134277
    8. '   ' → logprob: -9.656516075134277
    9. 'map' → logprob: -10.781516075134277
    10. ' ' → logprob: -11.406516075134277

Token 165: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00030424181022681296
    2. ' ' → logprob: -8.500304222106934
    3. 'int' → logprob: -9.250304222106934
    4. ' int' → logprob: -13.500304222106934
    5. ',' → logprob: -13.750304222106934
    6. '   ' → logprob: -14.375304222106934
    7. ']' → logprob: -14.500304222106934
    8. '<int' → logprob: -15.750304222106934
    9. ']int' → logprob: -16.00030517578125
    10. '  ' → logprob: -16.12530517578125

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016098834748845547
    2. ' ,' → logprob: -8.750161170959473
    3. ',
' → logprob: -13.875161170959473
    4. '   ' → logprob: -14.000161170959473
    5. ',int' → logprob: -15.625161170959473
    6. ' ' → logprob: -16.375160217285156
    7. '2' → logprob: -16.625160217285156
    8. '1' → logprob: -16.875160217285156
    9. '‌,' → logprob: -16.875160217285156
    10. ',

' → logprob: -17.000160217285156

Token 167: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4740845859050751
    2. ' ' → logprob: -0.9740846157073975
    3. '    ' → logprob: -12.724084854125977
    4. '   ' → logprob: -12.724084854125977
    5. '  ' → logprob: -13.599084854125977
    6. '10' → logprob: -17.224084854125977
    7. ' ' → logprob: -17.349084854125977
    8. '```' → logprob: -17.536584854125977
    9. '12' → logprob: -17.724084854125977
    10. ',' → logprob: -17.786584854125977

Token 168: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031781906727701426
    2. ' ' → logprob: -5.753178119659424
    3. '   ' → logprob: -14.878178596496582
    4. '  ' → logprob: -16.503177642822266
    5. 'int' → logprob: -16.628177642822266
    6. '    ' → logprob: -17.503177642822266
    7. ',' → logprob: -18.628177642822266
    8. '```' → logprob: -18.878177642822266
    9. '1' → logprob: -19.128177642822266
    10. ' int' → logprob: -19.628177642822266

Token 169: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002556995954364538
    2. ']
' → logprob: -6.252556800842285
    3. '])' → logprob: -7.627556800842285
    4. ' ]' → logprob: -9.377556800842285
    5. '   ' → logprob: -10.377556800842285
    6. '])
' → logprob: -11.877556800842285
    7. ')' → logprob: -11.877556800842285
    8. ']
' → logprob: -12.877556800842285
    9. ']int' → logprob: -13.127556800842285
    10. ',' → logprob: -13.252556800842285

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.899966299533844
    2. ' a' → logprob: -1.6499662399291992
    3. ' nombres' → logprob: -2.274966239929199
    4. 'a' → logprob: -2.524966239929199
    5. ' ent' → logprob: -2.774966239929199
    6. 'n' → logprob: -3.274966239929199
    7. '    
' → logprob: -3.774966239929199
    8. ' numbers' → logprob: -3.774966239929199
    9. ' x' → logprob: -3.899966239929199
    10. ' n' → logprob: -4.524966239929199

Token 171: ' valeurs' (ID: 73668)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5138546228408813
    2. 'ent' → logprob: -1.6388546228408813
    3. 'a' → logprob: -2.013854503631592
    4. 'numbers' → logprob: -4.263854503631592
    5. 'nums' → logprob: -4.763854503631592
    6. ' a' → logprob: -4.763854503631592
    7. ' ent' → logprob: -5.013854503631592
    8. ' nombres' → logprob: -5.013854503631592
    9. 'x' → logprob: -5.138854503631592
    10. '   ' → logprob: -5.263854503631592

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018151111900806427
    2. '=' → logprob: -4.01815128326416
    3. 's' → logprob: -14.26815128326416
    4. '=int' → logprob: -15.39315128326416
    5. ',' → logprob: -15.89315128326416
    6. ' ' → logprob: -16.518150329589844
    7. ')' → logprob: -17.393150329589844
    8. ' ' → logprob: -17.518150329589844
    9. ' =
' → logprob: -17.768150329589844
    10. '=list' → logprob: -17.768150329589844

Token 173: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2947648763656616
    2. ' map' → logprob: -1.7947648763656616
    3. 'list' → logprob: -2.544764995574951
    4. 'map' → logprob: -4.544764995574951
    5. ' ' → logprob: -12.294764518737793
    6. '   ' → logprob: -12.294764518737793
    7. ' ' → logprob: -13.794764518737793
    8. ' tuple' → logprob: -14.044764518737793
    9. 'm' → logprob: -15.419764518737793
    10. '	map' → logprob: -15.544764518737793

Token 174: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12706637382507324
    2. '(' → logprob: -2.1270663738250732
    3. '(
' → logprob: -9.002066612243652
    4. '(lambda' → logprob: -11.627066612243652
    5. 'int' → logprob: -13.127066612243652
    6. '(

' → logprob: -13.502066612243652
    7. '<int' → logprob: -13.752066612243652
    8. ' (' → logprob: -14.127066612243652
    9. '(str' → logprob: -15.002066612243652
    10. '[int' → logprob: -15.502066612243652

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007525347173213959
    2. ',m' → logprob: -5.132525444030762
    3. '(m' → logprob: -6.757525444030762
    4. ' ,' → logprob: -8.132525444030762
    5. 'm' → logprob: -9.007525444030762
    6. ')' → logprob: -11.382525444030762
    7. '(' → logprob: -13.132525444030762
    8. '   ' → logprob: -13.507525444030762
    9. ',
' → logprob: -14.257525444030762
    10. 's' → logprob: -14.382525444030762

Token 176: ' morceaux' (ID: 133321)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.31359952688217163
    2. ' morceaux' → logprob: -1.3135995864868164
    3. ')' → logprob: -8.688599586486816
    4. '   ' → logprob: -9.813599586486816
    5. ')m' → logprob: -10.063599586486816
    6. 'mor' → logprob: -11.063599586486816
    7. ' ' → logprob: -11.188599586486816
    8. '(m' → logprob: -11.813599586486816
    9. '    ' → logprob: -11.938599586486816
    10. ' mor' → logprob: -12.188599586486816

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.50000286102295
    3. ')
' → logprob: -14.00000286102295
    4. '))' → logprob: -16.250001907348633
    5. '()' → logprob: -17.375001907348633
    6. '())' → logprob: -18.250001907348633
    7. ')`' → logprob: -18.500001907348633
    8. ')

' → logprob: -18.750001907348633
    9. '),' → logprob: -19.125001907348633
    10. ');' → logprob: -20.000001907348633

Token 178: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7092151045799255
    2. ' a' → logprob: -1.0842151641845703
    3. '   ' → logprob: -2.0842151641845703
    4. 'n' → logprob: -4.33421516418457
    5. 'val' → logprob: -4.58421516418457
    6. 'x' → logprob: -5.20921516418457
    7. ' val' → logprob: -5.33421516418457
    8. ' x' → logprob: -5.83421516418457
    9. '    
' → logprob: -5.95921516418457
    10. ' n' → logprob: -7.20921516418457

Token 179: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5895699858665466
    2. ' a' → logprob: -1.4645700454711914
    3. 'n' → logprob: -2.5895700454711914
    4. 'val' → logprob: -2.9645700454711914
    5. '   ' → logprob: -3.7145700454711914
    6. 'x' → logprob: -4.214570045471191
    7. ' val' → logprob: -4.214570045471191
    8. ' x' → logprob: -4.589570045471191
    9. '    
' → logprob: -5.214570045471191
    10. ' n' → logprob: -5.464570045471191

Token 180: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3900633156299591
    2. 'val' → logprob: -1.6400632858276367
    3. 'n' → logprob: -2.8900632858276367
    4. 'x' → logprob: -3.6400632858276367
    5. 'ent' → logprob: -4.140063285827637
    6. 'nombre' → logprob: -4.515063285827637
    7. ' a' → logprob: -4.765063285827637
    8. '#' → logprob: -6.265063285827637
    9. ' val' → logprob: -6.765063285827637
    10. 'num' → logprob: -6.765063285827637

Token 181: ' utilise' (ID: 70283)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6328558325767517
    2. 'a' → logprob: -1.6328558921813965
    3. ' x' → logprob: -2.3828558921813965
    4. ' valeurs' → logprob: -2.8828558921813965
    5. 'val' → logprob: -3.2578558921813965
    6. 'x' → logprob: -3.6328558921813965
    7. ' val' → logprob: -3.7578558921813965
    8. ' n' → logprob: -3.8828558921813965
    9. 'n' → logprob: -5.8828558921813965
    10. ' values' → logprob: -6.0078558921813965

Token 182: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0507481098175049
    2. 'val' → logprob: -1.3007481098175049
    3. ' list' → logprob: -1.9257481098175049
    4. 'list' → logprob: -2.425748109817505
    5. ' val' → logprob: -2.800748109817505
    6. ' valeurs' → logprob: -3.675748109817505
    7. 'values' → logprob: -4.175747871398926
    8. ' values' → logprob: -4.925747871398926
    9. ' tuple' → logprob: -5.050747871398926
    10. 'tuple' → logprob: -6.175747871398926

Token 183: ' "' (ID: 392)
  Prédit: ' unpack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' unpack' → logprob: -1.4080548286437988
    2. 'tuple' → logprob: -1.6580548286437988
    3. 'un' → logprob: -2.283054828643799
    4. 's' → logprob: -2.283054828643799
    5. ' tuple' → logprob: -2.408054828643799
    6. 'list' → logprob: -3.033054828643799
    7. 'aster' → logprob: -3.283054828643799
    8. 'es' → logprob: -3.533054828643799
    9. 'a' → logprob: -3.533054828643799
    10. '_' → logprob: -3.658054828643799

Token 184: 'un' (ID: 373)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6825161576271057
    2. 'tuple' → logprob: -1.557516098022461
    3. 'list' → logprob: -2.557516098022461
    4. 'un' → logprob: -3.432516098022461
    5. 'aster' → logprob: -3.557516098022461
    6. '*' → logprob: -3.682516098022461
    7. 'liste' → logprob: -3.682516098022461
    8. 'x' → logprob: -3.807516098022461
    9. 'val' → logprob: -4.432516098022461
    10. 'for' → logprob: -4.557516098022461

Token 185: 'packing' (ID: 173195)
  Prédit: 'pack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pack' → logprob: -0.20674340426921844
    2. 'packing' → logprob: -1.7067433595657349
    3. 'packer' → logprob: -6.081743240356445
    4. 'packed' → logprob: -6.331743240356445
    5. 'pa' → logprob: -7.456743240356445
    6. 'pac' → logprob: -8.331743240356445
    7. '*' → logprob: -8.581743240356445
    8. 'a' → logprob: -9.831743240356445
    9. ' packing' → logprob: -9.956743240356445
    10. ' pack' → logprob: -10.081743240356445

Token 186: '"' (ID: 1)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0646934062242508
    2. ' *' → logprob: -3.3146934509277344
    3. 'val' → logprob: -4.564693450927734
    4. ' val' → logprob: -5.689693450927734
    5. ' pour' → logprob: -6.064693450927734
    6. ' ' → logprob: -6.689693450927734
    7. '   ' → logprob: -6.689693450927734
    8. 'values' → logprob: -6.939693450927734
    9. ' a' → logprob: -7.314693450927734
    10. ' opér' → logprob: -7.439693450927734

Token 187: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.086747407913208
    2. ' val' → logprob: -1.086747407913208
    3. 'val' → logprob: -2.086747407913208
    4. 'a' → logprob: -2.586747407913208
    5. '*' → logprob: -2.711747407913208
    6. ' valeurs' → logprob: -3.836747407913208
    7. ' *' → logprob: -4.961747169494629
    8. ' pour' → logprob: -5.086747169494629
    9. 'values' → logprob: -5.461747169494629
    10. ' des' → logprob: -5.586747169494629

Token 188: 'dé' (ID: 98340)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9346573352813721
    2. ' val' → logprob: -1.059657335281372
    3. '*' → logprob: -1.684657335281372
    4. 'a' → logprob: -3.309657335281372
    5. ' a' → logprob: -3.809657335281372
    6. '*a' → logprob: -5.059657096862793
    7. ' *' → logprob: -5.559657096862793
    8. '*)' → logprob: -6.184657096862793
    9. ')' → logprob: -6.684657096862793
    10. '   ' → logprob: -7.309657096862793

Token 189: 'pa' (ID: 3899)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.3053230941295624
    2. 'pa' → logprob: -1.8053231239318848
    3. 'pack' → logprob: -2.8053231239318848
    4. 'packing' → logprob: -4.680323123931885
    5. 'composition' → logprob: -5.055323123931885
    6. 'bal' → logprob: -5.180323123931885
    7. 'x' → logprob: -5.805323123931885
    8. '```' → logprob: -5.930323123931885
    9. 'comp' → logprob: -6.430323123931885
    10. 'package' → logprob: -6.555323123931885

Token 190: 'quet' (ID: 18133)
  Prédit: 'ck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ck' → logprob: -0.0003818140830844641
    2. 'ch' → logprob: -9.375381469726562
    3. 'cc' → logprob: -10.000381469726562
    4. 'c' → logprob: -10.125381469726562
    5. '```' → logprob: -10.250381469726562
    6. 'qu' → logprob: -10.500381469726562
    7. 'cker' → logprob: -10.625381469726562
    8. 'acking' → logprob: -11.125381469726562
    9. 'q' → logprob: -11.125381469726562
    10. '   ' → logprob: -11.375381469726562

Token 191: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.013460304588079453
    2. '*' → logprob: -4.638460159301758
    3. 't' → logprob: -6.638460159301758
    4. 'tage' → logprob: -6.638460159301758
    5. 'ing' → logprob: -8.388460159301758
    6. 'rage' → logprob: -9.013460159301758
    7. 'ager' → logprob: -9.388460159301758
    8. 'ter' → logprob: -9.388460159301758
    9. 'agement' → logprob: -9.888460159301758
    10. 'aging' → logprob: -9.888460159301758

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23947109282016754
    2. 'a' → logprob: -2.489471197128296
    3. 'val' → logprob: -3.364471197128296
    4. ' a' → logprob: -3.489471197128296
    5. ' )' → logprob: -3.989471197128296
    6. '   ' → logprob: -4.114470958709717
    7. ' val' → logprob: -5.239470958709717
    8. ')a' → logprob: -5.364470958709717
    9. 'x' → logprob: -5.739470958709717
    10. ',' → logprob: -5.739470958709717

Token 193: ' pour' (ID: 1930)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46551787853240967
    2. ' a' → logprob: -1.3405178785324097
    3. 'val' → logprob: -3.340517997741699
    4. ' val' → logprob: -3.340517997741699
    5. 'x' → logprob: -4.215517997741699
    6. ' x' → logprob: -4.715517997741699
    7. 'n' → logprob: -5.090517997741699
    8. 'nombre' → logprob: -5.965517997741699
    9. ' n' → logprob: -6.340517997741699
    10. '   ' → logprob: -6.590517997741699

Token 194: ' assign' (ID: 14975)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15515096485614777
    2. 'x' → logprob: -2.655150890350342
    3. ' a' → logprob: -2.905150890350342
    4. 'val' → logprob: -5.030150890350342
    5. ' x' → logprob: -5.155150890350342
    6. 'assign' → logprob: -6.780150890350342
    7. ' affect' → logprob: -6.780150890350342
    8. ' val' → logprob: -6.780150890350342
    9. 'aff' → logprob: -6.905150890350342
    10. '   ' → logprob: -7.905150890350342

Token 195: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -3.845798710244708e-05
    2. 'a' → logprob: -10.625038146972656
    3. 'n' → logprob: -12.000038146972656
    4. 'ner' → logprob: -12.250038146972656
    5. 'val' → logprob: -14.000038146972656
    6. ' a' → logprob: -14.000038146972656
    7. 'e' → logprob: -14.625038146972656
    8. 'x' → logprob: -15.125038146972656
    9. 'r' → logprob: -15.875038146972656
    10. 'ent' → logprob: -16.000038146972656

Token 196: ' success' (ID: 3505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.27740487456321716
    2. ' a' → logprob: -2.27740478515625
    3. 'val' → logprob: -2.77740478515625
    4. 'x' → logprob: -2.90240478515625
    5. ' val' → logprob: -4.40240478515625
    6. ' x' → logprob: -5.02740478515625
    7. 'n' → logprob: -6.52740478515625
    8. 'nombre' → logprob: -7.77740478515625
    9. ' n' → logprob: -7.90240478515625
    10. 'num' → logprob: -8.15240478515625

Token 197: 'ivement' (ID: 37978)
  Prédit: 'vement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vement' → logprob: -0.7520433068275452
    2. 'vel' → logprob: -1.0020432472229004
    3. 'val' → logprob: -2.3770432472229004
    4. 'v' → logprob: -3.5020432472229004
    5. 've' → logprob: -3.8770432472229004
    6. 'ves' → logprob: -4.7520432472229
    7. 'ivement' → logprob: -5.1270432472229
    8. 'vem' → logprob: -7.3770432472229
    9. 'values' → logprob: -7.7520432472229
    10. 'va' → logprob: -8.002043724060059

Token 198: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1256261020898819
    2. ' a' → logprob: -3.1256260871887207
    3. 'val' → logprob: -3.2506260871887207
    4. 'x' → logprob: -3.6256260871887207
    5. 'n' → logprob: -5.500626087188721
    6. ' val' → logprob: -6.375626087188721
    7. ' x' → logprob: -7.125626087188721
    8. 'nombre' → logprob: -7.625626087188721
    9. ' n' → logprob: -7.875626087188721
    10. 'num' → logprob: -8.250626564025879

Token 199: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34429502487182617
    2. 'val' → logprob: -1.3442950248718262
    3. 'x' → logprob: -4.344295024871826
    4. 'n' → logprob: -5.219295024871826
    5. ' a' → logprob: -5.219295024871826
    6. 'ent' → logprob: -6.469295024871826
    7. 'nombre' → logprob: -6.594295024871826
    8. 'prem' → logprob: -6.594295024871826
    9. ' val' → logprob: -7.094295024871826
    10. 'num' → logprob: -7.969295024871826

Token 200: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.45950108766555786
    2. ' valeurs' → logprob: -2.334501028060913
    3. ' nombres' → logprob: -2.584501028060913
    4. ' val' → logprob: -2.959501028060913
    5. 'n' → logprob: -3.209501028060913
    6. 'a' → logprob: -3.209501028060913
    7. 'x' → logprob: -4.084501266479492
    8. ' a' → logprob: -4.209501266479492
    9. 'ent' → logprob: -4.709501266479492
    10. ' ent' → logprob: -5.084501266479492

Token 201: ' ent' (ID: 1121)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0764702782034874
    2. ' a' → logprob: -2.951470375061035
    3. 'x' → logprob: -4.201470375061035
    4. 'n' → logprob: -6.201470375061035
    5. 'val' → logprob: -6.826470375061035
    6. ' x' → logprob: -6.951470375061035
    7. ' n' → logprob: -7.576470375061035
    8. ' val' → logprob: -7.826470375061035
    9. 'nombre' → logprob: -7.826470375061035
    10. '   ' → logprob: -8.076470375061035

Token 202: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.8950191140174866
    2. 't' → logprob: -1.1450190544128418
    3. 'iers' → logprob: -2.020019054412842
    4. ' =' → logprob: -3.020019054412842
    5. '=' → logprob: -3.895019054412842
    6. 'val' → logprob: -4.270019054412842
    7. 'érées' → logprob: -4.395019054412842
    8. 'ière' → logprob: -4.645019054412842
    9. 'ier' → logprob: -4.895019054412842
    10. 'ti' → logprob: -5.395019054412842

Token 203: ' respect' (ID: 5618)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06788313388824463
    2. ' a' → logprob: -2.942883014678955
    3. 'x' → logprob: -4.942883014678955
    4. 'n' → logprob: -6.317883014678955
    5. ',' → logprob: -7.067883014678955
    6. 'nombre' → logprob: -7.317883014678955
    7. '   ' → logprob: -7.442883014678955
    8. ' x' → logprob: -7.692883014678955
    9. 'val' → logprob: -7.942883014678955
    10. ' n' → logprob: -8.192883491516113

Token 204: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -9.85366350505501e-05
    2. 'iv' → logprob: -10.62509822845459
    3. 'ement' → logprob: -10.75009822845459
    4. 'ent' → logprob: -11.75009822845459
    5. 'ue' → logprob: -12.00009822845459
    6. 'ively' → logprob: -12.00009822845459
    7. 'emment' → logprob: -12.00009822845459
    8. '   ' → logprob: -12.62509822845459
    9. 'ives' → logprob: -12.87509822845459
    10. 'ive' → logprob: -13.12509822845459

Token 205: ' aux' (ID: 5850)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12370720505714417
    2. 'x' → logprob: -3.1237072944641113
    3. 'n' → logprob: -3.9987072944641113
    4. ' à' → logprob: -3.9987072944641113
    5. 'à' → logprob: -4.248707294464111
    6. ' a' → logprob: -4.498707294464111
    7. 'val' → logprob: -5.248707294464111
    8. 'nombre' → logprob: -6.623707294464111
    9. 'num' → logprob: -6.873707294464111
    10. ',' → logprob: -7.373707294464111

Token 206: ' variables' (ID: 13955)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06555913388729095
    2. 'x' → logprob: -3.190559148788452
    3. ' a' → logprob: -4.065558910369873
    4. 'val' → logprob: -6.315558910369873
    5. 'n' → logprob: -6.690558910369873
    6. ' x' → logprob: -6.940558910369873
    7. 'nombre' → logprob: -7.690558910369873
    8. ' nombres' → logprob: -8.815559387207031
    9. 'de' → logprob: -9.190559387207031
    10. 'ent' → logprob: -9.190559387207031

Token 207: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09138589352369308
    2. ' a' → logprob: -2.591385841369629
    3. 'x' → logprob: -4.591385841369629
    4. ' x' → logprob: -6.466385841369629
    5. 'nombre' → logprob: -8.091385841369629
    6. 'n' → logprob: -8.841385841369629
    7. ' nombre' → logprob: -8.966385841369629
    8. 'num' → logprob: -9.466385841369629
    9. ' n' → logprob: -10.966385841369629
    10. ' num' → logprob: -11.091385841369629

Token 208: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026186378672719002
    2. 'x' → logprob: -4.151186466217041
    3. 'nombre' → logprob: -5.651186466217041
    4. ' a' → logprob: -6.151186466217041
    5. 'val' → logprob: -6.276186466217041
    6. 'n' → logprob: -6.526186466217041
    7. 'num' → logprob: -7.651186466217041
    8. 'nb' → logprob: -8.151185989379883
    9. 'prem' → logprob: -8.901185989379883
    10. ' x' → logprob: -9.901185989379883

Token 209: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009145628428086638
    2. ' ,' → logprob: -7.375914573669434
    3. 'a' → logprob: -8.750914573669434
    4. ',a' → logprob: -9.000914573669434
    5. ',b' → logprob: -12.750914573669434
    6. '1' → logprob: -13.000914573669434
    7. 'et' → logprob: -14.875914573669434
    8. ',
' → logprob: -15.875914573669434
    9. 's' → logprob: -16.500913619995117
    10. 'e' → logprob: -16.625913619995117

Token 210: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046689616283401847
    2. 'a' → logprob: -8.125467300415039
    3. ' ,' → logprob: -9.000467300415039
    4. ',a' → logprob: -10.250467300415039
    5. ' a' → logprob: -12.875467300415039
    6. ' et' → logprob: -13.250467300415039
    7. 'et' → logprob: -13.250467300415039
    8. 's' → logprob: -13.500467300415039
    9. '<|end|>' → logprob: -13.625467300415039
    10. '   ' → logprob: -14.125467300415039

Token 211: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889761030673981
    2. ' b' → logprob: -2.578897714614868
    3. ' ' → logprob: -12.078897476196289
    4. ''b' → logprob: -14.203897476196289
    5. ''' → logprob: -14.703897476196289
    6. '   ' → logprob: -14.828897476196289
    7. ' ' → logprob: -15.328897476196289
    8. '`' → logprob: -16.20389747619629
    9. ' '' → logprob: -16.32889747619629
    10. '	b' → logprob: -16.45389747619629

Token 212: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001584850688232109
    2. ' b' → logprob: -8.750158309936523
    3. '_b' → logprob: -21.000158309936523
    4. 'a' → logprob: -21.625158309936523
    5. ' ' → logprob: -21.750158309936523
    6. ' ' → logprob: -22.500158309936523
    7. '	b' → logprob: -22.750158309936523
    8. '   ' → logprob: -23.250158309936523
    9. 's' → logprob: -23.500158309936523
    10. '```' → logprob: -23.500158309936523

Token 213: ''
' (ID: 2207)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.042337238788604736
    2. ',' → logprob: -3.66733717918396
    3. ' a' → logprob: -4.542337417602539
    4. ')' → logprob: -5.417337417602539
    5. '   ' → logprob: -8.167337417602539
    6. ',a' → logprob: -8.417337417602539
    7. '(a' → logprob: -9.167337417602539
    8. ')a' → logprob: -9.542337417602539
    9. ']' → logprob: -10.292337417602539
    10. ' ,' → logprob: -10.542337417602539

Token 214: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00441480940207839
    2. ' a' → logprob: -5.504415035247803
    3. '   ' → logprob: -8.004414558410645
    4. '    
' → logprob: -13.879414558410645
    5. '	a' → logprob: -14.754414558410645
    6. ',' → logprob: -15.004414558410645
    7. '(a' → logprob: -15.879414558410645
    8. '
' → logprob: -15.879414558410645
    9. ' ' → logprob: -15.879414558410645
    10. ' 
' → logprob: -16.12941551208496

Token 215: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -5.943783253314905e-05
    2. ' a' → logprob: -9.750059127807617
    3. '   ' → logprob: -13.875059127807617
    4. '    
' → logprob: -16.000059127807617
    5. '
' → logprob: -17.250059127807617
    6. '	a' → logprob: -17.875059127807617
    7. '(a' → logprob: -18.375059127807617
    8. '[a' → logprob: -19.500059127807617
    9. '_a' → logprob: -19.875059127807617
    10. ''a' → logprob: -20.125059127807617

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.288163083605468e-05
    2. ',b' → logprob: -9.875052452087402
    3. ' ,' → logprob: -13.625052452087402
    4. ',a' → logprob: -16.12505340576172
    5. 'b' → logprob: -17.25005340576172
    6. ',
' → logprob: -17.62505340576172
    7. 'a' → logprob: -18.37505340576172
    8. ',

' → logprob: -19.50005340576172
    9. ' b' → logprob: -19.87505340576172
    10. '‌,' → logprob: -20.00005340576172

Token 217: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.026493040844798088
    2. 'b' → logprob: -3.6514930725097656
    3. ' ' → logprob: -8.651493072509766
    4. ' ' → logprob: -11.276493072509766
    5. '<|end|>' → logprob: -12.401493072509766
    6. 'space' → logprob: -15.026493072509766
    7. 's' → logprob: -15.776493072509766
    8. ' ‌' → logprob: -16.276493072509766
    9. ' ' → logprob: -16.526493072509766
    10. '	b' → logprob: -16.651493072509766

Token 218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03806237503886223
    2. ' =' → logprob: -3.288062334060669
    3. ',' → logprob: -10.78806209564209
    4. '=

' → logprob: -15.28806209564209
    5. '=}' → logprob: -17.913063049316406
    6. ')' → logprob: -18.038063049316406
    7. ' ' → logprob: -18.788063049316406
    8. '*=' → logprob: -18.788063049316406
    9. '＝' → logprob: -18.788063049316406
    10. ')=' → logprob: -18.913063049316406

Token 219: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.04898938164114952
    2. ' valeurs' → logprob: -3.0489892959594727
    3. 'list' → logprob: -8.298989295959473
    4. ' val' → logprob: -9.173989295959473
    5. 'values' → logprob: -10.673989295959473
    6. ' list' → logprob: -11.173989295959473
    7. ' values' → logprob: -13.048989295959473
    8. ' vale' → logprob: -13.298989295959473
    9. 'tuple' → logprob: -13.673989295959473
    10. 'vals' → logprob: -13.798989295959473

Token 220: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5770838260650635
    2. '   ' → logprob: -1.3270838260650635
    3. '<|end|>' → logprob: -2.3270838260650635
    4. '    
' → logprob: -2.9520838260650635
    5. '  
' → logprob: -4.327083587646484
    6. ' 
' → logprob: -5.577083587646484
    7. '   
' → logprob: -6.702083587646484
    8. ')' → logprob: -6.827083587646484
    9. '<|end|>' → logprob: -7.077083587646484
    10. 'print' → logprob: -7.452083587646484

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25902605056762695
    2. '
' → logprob: -1.884026050567627
    3. '    
' → logprob: -2.884026050567627
    4. '  
' → logprob: -4.509026050567627
    5. ' 
' → logprob: -6.134026050567627
    6. 'result' → logprob: -6.259026050567627
    7. 'if' → logprob: -6.509026050567627
    8. ' if' → logprob: -6.884026050567627
    9. '   
' → logprob: -7.134026050567627
    10. 'print' → logprob: -7.259026050567627

Token 222: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.39219409227371216
    2. 'if' → logprob: -1.5171940326690674
    3. 'print' → logprob: -3.3921940326690674
    4. 's' → logprob: -3.3921940326690674
    5. 'c' → logprob: -4.2671942710876465
    6. '#' (adapté à ' #') → logprob: -4.7671942710876465
    7. '   ' → logprob: -5.7671942710876465
    8. 'return' → logprob: -5.7671942710876465
    9. 'som' → logprob: -6.7671942710876465
    10. 'diff' → logprob: -6.8921942710876465

Token 223: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.22686119377613068
    2. 's' → logprob: -2.8518612384796143
    3. 'print' → logprob: -3.1018612384796143
    4. 'if' → logprob: -3.4768612384796143
    5. 'return' → logprob: -4.226861000061035
    6. 'c' → logprob: -4.476861000061035
    7. '#' → logprob: -4.601861000061035
    8. 'rés' → logprob: -4.976861000061035
    9. ' result' → logprob: -5.351861000061035
    10. 'sum' → logprob: -5.476861000061035

Token 224: ' veut' (ID: 41653)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.976535975933075
    2. 'if' → logprob: -1.6015360355377197
    3. ' #' → logprob: -2.1015360355377197
    4. 'print' → logprob: -2.6015360355377197
    5. '#' → logprob: -2.8515360355377197
    6. ' print' → logprob: -2.8515360355377197
    7. '   ' → logprob: -3.2265360355377197
    8. ' somme' → logprob: -3.2265360355377197
    9. 'result' → logprob: -5.101535797119141
    10. ' result' → logprob: -5.851535797119141

Token 225: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.45057055354118347
    2. ' afficher' → logprob: -2.075570583343506
    3. ' vérifier' → logprob: -2.825570583343506
    4. ' addition' → logprob: -2.950570583343506
    5. 'calcul' → logprob: -4.200570583343506
    6. ' print' → logprob: -4.200570583343506
    7. '   ' → logprob: -4.325570583343506
    8. ' effectuer' → logprob: -4.575570583343506
    9. ' ' → logprob: -4.575570583343506
    10. ' comparer' → logprob: -4.575570583343506

Token 226: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0005069229518994689
    2. 'ate' → logprob: -7.87550687789917
    3. '   ' → logprob: -10.000507354736328
    4. '#' → logprob: -11.375507354736328
    5. 'ater' → logprob: -11.500507354736328
    6. 'uler' → logprob: -11.625507354736328
    7. 'e' → logprob: -11.625507354736328
    8. ' er' → logprob: -12.250507354736328
    9. '```' → logprob: -12.875507354736328
    10. 'ateur' → logprob: -13.000507354736328

Token 227: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.059441182762384415
    2. 'la' → logprob: -3.184441089630127
    3. 'c' → logprob: -5.559441089630127
    4. ' le' → logprob: -5.684441089630127
    5. ' c' → logprob: -5.809441089630127
    6. '   ' → logprob: -6.059441089630127
    7. 'le' → logprob: -6.184441089630127
    8. ' l' → logprob: -7.809441089630127
    9. ' ' → logprob: -8.309441566467285
    10. 'l' → logprob: -8.434441566467285

Token 228: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20535847544670105
    2. 'plus' → logprob: -2.8303585052490234
    3. 'pu' → logprob: -3.7053585052490234
    4. 'pg' → logprob: -3.9553585052490234
    5. 'produ' → logprob: -4.080358505249023
    6. '#' → logprob: -4.205358505249023
    7. 'result' → logprob: -4.830358505249023
    8. 'c' → logprob: -4.955358505249023
    9. 'rés' → logprob: -4.955358505249023
    10. ' somme' → logprob: -4.955358505249023

Token 229: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7958908081054688
    2. 'max' → logprob: -1.7958908081054688
    3. ' max' → logprob: -2.6708908081054688
    4. 'de' → logprob: -2.6708908081054688
    5. ' ' → logprob: -2.9208908081054688
    6. ' maximale' → logprob: -2.9208908081054688
    7. '   ' → logprob: -3.2958908081054688
    8. 'a' → logprob: -3.5458908081054688
    9. 's' → logprob: -4.170890808105469
    10. ' a' → logprob: -4.420890808105469

Token 230: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2854485511779785
    2. ' a' → logprob: -1.4104485511779785
    3. ' (' → logprob: -6.7854485511779785
    4. 'pow' → logprob: -7.4104485511779785
    5. '(a' → logprob: -7.7854485511779785
    6. ' max' → logprob: -7.9104485511779785
    7. ' ' → logprob: -7.9104485511779785
    8. 'max' → logprob: -7.9104485511779785
    9. ' pow' → logprob: -8.53544807434082
    10. '(' → logprob: -8.78544807434082

Token 231: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008012881153263152
    2. '(a' → logprob: -7.750801086425781
    3. ' a' → logprob: -8.875801086425781
    4. 'pow' → logprob: -9.875801086425781
    5. 'max' → logprob: -10.125801086425781
    6. '2' → logprob: -10.375801086425781
    7. '(' → logprob: -10.875801086425781
    8. 'c' → logprob: -11.125801086425781
    9. 'la' → logprob: -11.250801086425781
    10. 'result' → logprob: -11.375801086425781

Token 232: ''' (ID: 6)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20752787590026855
    2. '+' → logprob: -1.9575278759002686
    3. ' **' → logprob: -5.082528114318848
    4. ' *' → logprob: -5.082528114318848
    5. '+b' → logprob: -5.082528114318848
    6. '**' → logprob: -5.207528114318848
    7. ' ' → logprob: -5.207528114318848
    8. ' %' → logprob: -5.207528114318848
    9. ' plus' → logprob: -5.332528114318848
    10. '*' → logprob: -5.582528114318848

Token 233: ' moins' (ID: 15924)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.45358601212501526
    2. ' +' → logprob: -1.2035859823226929
    3. '**' → logprob: -3.7035861015319824
    4. ' **' → logprob: -4.203586101531982
    5. ' ' → logprob: -4.828586101531982
    6. '*' → logprob: -4.828586101531982
    7. ' *' → logprob: -4.953586101531982
    8. ',' → logprob: -7.328586101531982
    9. '%' → logprob: -8.078585624694824
    10. '+b' → logprob: -8.328585624694824

Token 234: ' le' (ID: 505)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5236520171165466
    2. 'b' → logprob: -0.8986520171165466
    3. ' ' → logprob: -8.398652076721191
    4. ''' → logprob: -8.648652076721191
    5. ' '' → logprob: -9.773652076721191
    6. '  ' → logprob: -10.773652076721191
    7. ''b' → logprob: -11.398652076721191
    8. '<|end|>' → logprob: -11.648652076721191
    9. '   ' → logprob: -12.148652076721191
    10. '	b' → logprob: -12.273652076721191

Token 235: ' double' (ID: 3503)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14305801689624786
    2. ' b' → logprob: -2.3930580615997314
    3. 'a' → logprob: -4.393057823181152
    4. 'nombre' → logprob: -5.393057823181152
    5. ''' → logprob: -5.893057823181152
    6. ' ' → logprob: -6.018057823181152
    7. 'plus' → logprob: -6.143057823181152
    8. '"' → logprob: -6.143057823181152
    9. ' nombre' → logprob: -6.643057823181152
    10. ' '' → logprob: -6.643057823181152

Token 236: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03315063193440437
    2. 'de' → logprob: -3.6581506729125977
    3. '*' → logprob: -6.033150672912598
    4. 'a' → logprob: -7.158150672912598
    5. ' of' → logprob: -7.408150672912598
    6. ',' → logprob: -7.658150672912598
    7. ' ' → logprob: -7.658150672912598
    8. '_' → logprob: -8.033150672912598
    9. ' *' → logprob: -8.033150672912598
    10. ' a' → logprob: -8.158150672912598

Token 237: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022564470767975
    2. ' b' → logprob: -1.9102256298065186
    3. ' ' → logprob: -14.785225868225098
    4. '(b' → logprob: -15.410225868225098
    5. ')b' → logprob: -15.535225868225098
    6. ' ' → logprob: -16.41022491455078
    7. '	b' → logprob: -16.41022491455078
    8. '>b' → logprob: -16.53522491455078
    9. ' la' → logprob: -16.66022491455078
    10. 'l' → logprob: -16.78522491455078

Token 238: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018151817843317986
    2. ' b' → logprob: -4.018151760101318
    3. ''b' → logprob: -14.143152236938477
    4. ' ' → logprob: -14.768152236938477
    5. ' ' → logprob: -15.018152236938477
    6. 'a' → logprob: -16.393152236938477
    7. '	b' → logprob: -16.768152236938477
    8. ''' → logprob: -16.768152236938477
    9. ')b' → logprob: -16.768152236938477
    10. '`' → logprob: -16.893152236938477

Token 239: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.407682329416275
    2. '   ' → logprob: -1.2826822996139526
    3. '*' → logprob: -3.782682418823242
    4. ',' → logprob: -4.657682418823242
    5. '.' → logprob: -4.907682418823242
    6. ' ' → logprob: -5.657682418823242
    7. '<|end|>' → logprob: -5.657682418823242
    8. '}' → logprob: -6.032682418823242
    9. ' )' → logprob: -6.782682418823242
    10. ']' → logprob: -7.032682418823242

Token 240: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26884180307388306
    2. ' a' → logprob: -2.6438417434692383
    3. ' 
' → logprob: -2.8938417434692383
    4. '   ' → logprob: -4.393841743469238
    5. 'a' → logprob: -4.393841743469238
    6. ''' → logprob: -4.643841743469238
    7. ' return' → logprob: -4.643841743469238
    8. ' i' → logprob: -4.768841743469238
    9. 'result' → logprob: -5.268841743469238
    10. '"' → logprob: -5.268841743469238

Token 241: ''est' (ID: 6616)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.7536436319351196
    2. 'omme' → logprob: -1.2536436319351196
    3. 'al' → logprob: -2.75364351272583
    4. 'e' → logprob: -2.87864351272583
    5. 'alc' → logprob: -3.75364351272583
    6. 'a' → logprob: -4.25364351272583
    7. 'es' → logprob: -4.25364351272583
    8. ''' → logprob: -4.87864351272583
    9. 'om' → logprob: -5.00364351272583
    10. ''est' → logprob: -5.00364351272583

Token 242: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.8501795530319214
    2. '-' → logprob: -1.6001795530319214
    3. ' ' → logprob: -2.350179672241211
    4. ' =' → logprob: -2.600179672241211
    5. '   ' → logprob: -3.100179672241211
    6. '=' → logprob: -3.100179672241211
    7. 'a' → logprob: -3.475179672241211
    8. ' a' → logprob: -3.725179672241211
    9. '-a' → logprob: -4.225179672241211
    10. ' b' → logprob: -4.600179672241211

Token 243: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.8717145323753357
    2. 'à' → logprob: -0.9967145323753357
    3. 'a' → logprob: -2.3717145919799805
    4. '   ' → logprob: -2.8717145919799805
    5. '-à' → logprob: -4.2467145919799805
    6. '```' → logprob: -4.6217145919799805
    7. '-dire' → logprob: -5.1217145919799805
    8. ':' → logprob: -5.2467145919799805
    9. 'la' → logprob: -5.3717145919799805
    10. '#' → logprob: -5.4967145919799805

Token 244: ' :' (ID: 712)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5761547088623047
    2. 'a' → logprob: -0.8261547088623047
    3. ' (' → logprob: -9.201154708862305
    4. ' ' → logprob: -10.201154708862305
    5. '   ' → logprob: -10.451154708862305
    6. '(a' → logprob: -11.201154708862305
    7. ' ' → logprob: -11.701154708862305
    8. '(' → logprob: -12.076154708862305
    9. '_a' → logprob: -12.826154708862305
    10. '	a' → logprob: -12.826154708862305

Token 245: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5778191685676575
    2. ' a' → logprob: -0.8278191685676575
    3. ' ' → logprob: -6.577819347381592
    4. ' return' → logprob: -9.327818870544434
    5. 'result' → logprob: -9.452818870544434
    6. ' result' → logprob: -9.577818870544434
    7. ' 
' → logprob: -9.702818870544434
    8. ' (' → logprob: -10.827818870544434
    9. '   ' → logprob: -10.827818870544434
    10. ''' → logprob: -11.452818870544434

Token 246: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023387335240840912
    2. '-' → logprob: -3.7733874320983887
    3. ' ' → logprob: -9.52338695526123
    4. ' ' → logprob: -9.64838695526123
    5. 'space' → logprob: -14.39838695526123
    6. '_' → logprob: -14.77338695526123
    7. ' ‌' → logprob: -14.77338695526123
    8. 'a' → logprob: -15.14838695526123
    9. ' ,' → logprob: -15.14838695526123
    10. ')' → logprob: -15.27338695526123

Token 247: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07605530321598053
    2. '2' → logprob: -2.7010552883148193
    3. ' (' → logprob: -5.201055526733398
    4. '(' → logprob: -7.451055526733398
    5. ' ' → logprob: -12.201055526733398
    6. '  ' → logprob: -13.701055526733398
    7. ' b' → logprob: -13.951055526733398
    8. '3' → logprob: -14.826055526733398
    9. '   ' → logprob: -15.076055526733398
    10. 'b' → logprob: -15.326055526733398

Token 248: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6326879262924194
    2. '*' → logprob: -0.7576879262924194
    3. ' ' → logprob: -9.63268756866455
    4. ' ' → logprob: -11.50768756866455
    5. '2' → logprob: -11.88268756866455
    6. 's' → logprob: -13.50768756866455
    7. '  ' → logprob: -13.63268756866455
    8. ')' → logprob: -13.75768756866455
    9. '**' → logprob: -14.13268756866455
    10. '1' → logprob: -14.50768756866455

Token 249: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0380416102707386
    2. ' ' → logprob: -3.288041591644287
    3. ' ' → logprob: -15.913042068481445
    4. '²' → logprob: -18.288042068481445
    5. '  ' → logprob: -18.288042068481445
    6. '۲' → logprob: -18.538042068481445
    7. '２' → logprob: -18.663042068481445
    8. '*' → logprob: -18.913042068481445
    9. '(' → logprob: -19.288042068481445
    10. '3' → logprob: -19.413042068481445

Token 250: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41827160120010376
    2. ' 
' → logprob: -2.543271541595459
    3. '    
' → logprob: -2.668271541595459
    4. '   ' → logprob: -2.918271541595459
    5. '\n' → logprob: -2.918271541595459
    6. '  
' → logprob: -3.668271541595459
    7. ' return' → logprob: -3.793271541595459
    8. 'return' → logprob: -3.918271541595459
    9. '   
' → logprob: -4.418271541595459
    10. '\' → logprob: -7.043271541595459

Token 251: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.076191782951355
    2. '
' → logprob: -1.326191782951355
    3. '  
' → logprob: -1.951191782951355
    4. '    
' → logprob: -1.951191782951355
    5. '   ' → logprob: -2.7011919021606445
    6. '   
' → logprob: -3.8261919021606445
    7. ' return' → logprob: -4.5761919021606445
    8. 'return' → logprob: -5.3261919021606445
    9. ' ' → logprob: -6.5761919021606445
    10. '\n' → logprob: -6.7011919021606445

Token 252: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04867548123002052
    2. ' result' → logprob: -3.298675537109375
    3. '   ' → logprob: -5.423675537109375
    4. ' resultat' → logprob: -5.423675537109375
    5. 'c' → logprob: -7.423675537109375
    6. ' résultat' → logprob: -7.923675537109375
    7. '    
' → logprob: -8.173675537109375
    8. 'res' → logprob: -8.548675537109375
    9. 'rés' → logprob: -8.923675537109375
    10. '
' → logprob: -9.548675537109375

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132691979408264
    2. '=' → logprob: -1.3132691383361816
    3. 's' → logprob: -13.06326961517334
    4. ' ' → logprob: -13.18826961517334
    5. ' ' → logprob: -14.31326961517334
    6. ' =
' → logprob: -14.43826961517334
    7. '_' → logprob: -14.56326961517334
    8. ')' → logprob: -14.56326961517334
    9. ',' → logprob: -14.56326961517334
    10. '=

' → logprob: -15.56326961517334

Token 254: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759404301643372
    2. ' a' → logprob: -0.8259404301643372
    3. '	a' → logprob: -14.325940132141113
    4. ' ' → logprob: -15.825940132141113
    5. '   ' → logprob: -16.07594108581543
    6. ' ' → logprob: -16.32594108581543
    7. '_a' → logprob: -16.57594108581543
    8. '(a' → logprob: -17.32594108581543
    9. '  ' → logprob: -19.13844108581543
    10. 'A' → logprob: -19.70094108581543

Token 255: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005419804248958826
    2. '-' → logprob: -5.255419731140137
    3. ' ' → logprob: -8.755419731140137
    4. ' ' → logprob: -10.755419731140137
    5. '<|end|>' → logprob: -12.380419731140137
    6. ' ­' → logprob: -14.755419731140137
    7. ' ‌' → logprob: -14.880419731140137
    8. ' minus' → logprob: -15.005419731140137
    9. ')' → logprob: -15.005419731140137
    10. ' -
' → logprob: -15.255419731140137

Token 256: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04876131936907768
    2. 'b' → logprob: -3.0487613677978516
    3. ' ' → logprob: -9.173761367797852
    4. '2' → logprob: -9.673761367797852
    5. ' (' → logprob: -12.173761367797852
    6. ' ' → logprob: -13.548761367797852
    7. '(b' → logprob: -15.048761367797852
    8. '	b' → logprob: -15.298761367797852
    9. '(' → logprob: -16.29876136779785
    10. '4' → logprob: -17.04876136779785

Token 257: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.313269704580307
    2. ' *' → logprob: -1.3132697343826294
    3. '2' → logprob: -12.06326961517334
    4. ' ' → logprob: -13.56326961517334
    5. '**' → logprob: -14.68826961517334
    6. ' ' → logprob: -15.81326961517334
    7. '*
' → logprob: -16.938270568847656
    8. '```' → logprob: -17.063270568847656
    9. '
' → logprob: -17.188270568847656
    10. '   ' → logprob: -17.438270568847656

Token 258: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. ' ' → logprob: -19.38604736328125
    4. '۲' → logprob: -20.13604736328125
    5. '   ' → logprob: -20.76104736328125
    6. '```' → logprob: -21.01104736328125
    7. '  ' → logprob: -21.26104736328125
    8. '２' → logprob: -21.63604736328125
    9. '٢' → logprob: -23.01104736328125
    10. '	' → logprob: -23.13604736328125

Token 259: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۲' → logprob: -20.0000057220459
    4. '```' → logprob: -20.3750057220459
    5. '２' → logprob: -21.6250057220459
    6. '   ' → logprob: -21.7500057220459
    7. '  ' → logprob: -22.3750057220459
    8. '<|end|>' → logprob: -22.7500057220459
    9. '٢' → logprob: -23.0000057220459
    10. ' ' → logprob: -23.3750057220459

Token 260: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07315488904714584
    2. '
' → logprob: -2.698154926300049
    3. '<|end|>' → logprob: -6.573154926300049
    4. 'print' → logprob: -7.073154926300049
    5. '    
' → logprob: -7.073154926300049
    6. ')' → logprob: -10.69815444946289
    7. 'return' → logprob: -10.69815444946289
    8. '  
' → logprob: -10.94815444946289
    9. '<|end|>' → logprob: -11.19815444946289
    10. '```' → logprob: -11.44815444946289

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012617830652743578
    2. '
' → logprob: -7.6262617111206055
    3. '    
' → logprob: -7.6262617111206055
    4. '<|end|>' → logprob: -8.376261711120605
    5. 'print' → logprob: -10.626261711120605
    6. 'return' → logprob: -10.876261711120605
    7. '```' → logprob: -12.251261711120605
    8. '  
' → logprob: -12.876261711120605
    9. ' return' → logprob: -13.251261711120605
    10. ')' → logprob: -13.501261711120605

Token 262: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16052712500095367
    2. 'print' → logprob: -1.9105271100997925
    3. '    
' → logprob: -8.535527229309082
    4. 'return' → logprob: -9.410527229309082
    5. ' print' → logprob: -11.160527229309082
    6. '
' → logprob: -12.410527229309082
    7. '```' → logprob: -12.785527229309082
    8. '<|end|>' → logprob: -14.285527229309082
    9. '	print' → logprob: -14.410527229309082
    10. '#print' → logprob: -14.535527229309082

Token 263: ' Cependant' (ID: 74480)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003017385315615684
    2. '   ' → logprob: -8.750301361083984
    3. ' print' → logprob: -9.000301361083984
    4. 'return' → logprob: -10.875301361083984
    5. '#' → logprob: -14.375301361083984
    6. '#print' → logprob: -15.750301361083984
    7. 'prin' → logprob: -17.000301361083984
    8. 'pr' → logprob: -17.000301361083984
    9. '    
' → logprob: -17.375301361083984
    10. '```' → logprob: -17.750301361083984

Token 264: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4435875713825226
    2. ' print' → logprob: -1.3185875415802002
    3. '
' → logprob: -3.0685875415802
    4. ' if' → logprob: -4.193587779998779
    5. ',' → logprob: -4.318587779998779
    6. '#' → logprob: -5.443587779998779
    7. '<|end|>' → logprob: -5.693587779998779
    8. ' 
' → logprob: -6.318587779998779
    9. '   ' → logprob: -6.693587779998779
    10. ' ,' → logprob: -6.943587779998779

Token 265: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.275456964969635
    2. ' print' → logprob: -1.9004569053649902
    3. '#' → logprob: -3.0254569053649902
    4. ' if' → logprob: -3.6504569053649902
    5. 'if' → logprob: -5.02545690536499
    6. '   ' → logprob: -5.40045690536499
    7. 'result' → logprob: -6.27545690536499
    8. ' #' → logprob: -6.40045690536499
    9. ' result' → logprob: -7.27545690536499
    10. 'return' → logprob: -7.52545690536499

Token 266: ' ne' (ID: 453)
  Prédit: ' veut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' veut' → logprob: -0.67619389295578
    2. ' souhaite' → logprob: -0.80119389295578
    3. ' if' → logprob: -4.426193714141846
    4. 'if' → logprob: -4.801193714141846
    5. ' print' → logprob: -5.176193714141846
    6. 'print' → logprob: -5.551193714141846
    7. ' doit' → logprob: -5.801193714141846
    8. ' veux' → logprob: -6.426193714141846
    9. ' wants' → logprob: -6.551193714141846
    10. ' want' → logprob: -6.926193714141846

Token 267: ' veut' (ID: 41653)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.48330965638160706
    2. ' veut' → logprob: -1.3583096265792847
    3. ' souhaite' → logprob: -2.858309745788574
    4. 'aff' → logprob: -3.983309745788574
    5. 'veux' → logprob: -4.108309745788574
    6. ' print' → logprob: -4.858309745788574
    7. ' doit' → logprob: -4.858309745788574
    8. 've' → logprob: -5.483309745788574
    9. 'voud' → logprob: -5.983309745788574
    10. 'do' → logprob: -6.108309745788574

Token 268: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.35025250911712646
    2. ' afficher' → logprob: -1.6002525091171265
    3. 'pas' → logprob: -2.975252628326416
    4. 'print' → logprob: -3.850252628326416
    5. ' impr' → logprob: -5.100252628326416
    6. ' que' → logprob: -5.350252628326416
    7. 'aff' → logprob: -5.475252628326416
    8. 'Afficher' → logprob: -6.350252628326416
    9. ' print' → logprob: -6.725252628326416
    10. ' retourner' → logprob: -6.975252628326416

Token 269: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6879805326461792
    2. ' afficher' → logprob: -0.8129805326461792
    3. 'aff' → logprob: -3.9379806518554688
    4. 'print' → logprob: -4.437980651855469
    5. ' impr' → logprob: -4.687980651855469
    6. 'que' → logprob: -5.437980651855469
    7. ' retourner' → logprob: -6.187980651855469
    8. '#' → logprob: -6.187980651855469
    9. ' print' → logprob: -6.937980651855469
    10. 'Afficher' → logprob: -6.937980651855469

Token 270: ' ce' (ID: 2357)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1717634201049805
    2. ' que' → logprob: -1.4217634201049805
    3. 'print' → logprob: -1.7967634201049805
    4. ' le' → logprob: -2.0467634201049805
    5. 'le' → logprob: -2.2967634201049805
    6. ' resultat' → logprob: -3.5467634201049805
    7. ' result' → logprob: -5.0467634201049805
    8. 'que' → logprob: -5.4217634201049805
    9. ' résultat' → logprob: -5.4217634201049805
    10. '   ' → logprob: -5.6717634201049805

Token 271: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11136506497859955
    2. ' resultat' → logprob: -3.2363650798797607
    3. ' résultat' → logprob: -3.2363650798797607
    4. 'rés' → logprob: -4.111364841461182
    5. ' result' → logprob: -5.861364841461182
    6. 'print' → logprob: -6.361364841461182
    7. 'res' → logprob: -6.736364841461182
    8. 'so' → logprob: -6.986364841461182
    9. '#' → logprob: -7.111364841461182
    10. 'resultado' → logprob: -7.611364841461182

Token 272: ' soit' (ID: 17293)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.20673584938049316
    2. ' soit' → logprob: -1.7067358493804932
    3. ' so' → logprob: -6.081735610961914
    4. 'dev' → logprob: -6.956735610961914
    5. '_so' → logprob: -7.456735610961914
    6. ' sois' → logprob: -7.456735610961914
    7. 's' → logprob: -9.081735610961914
    8. ' dev' → logprob: -9.081735610961914
    9. ' So' → logprob: -9.206735610961914
    10. ' puisse' → logprob: -9.206735610961914

Token 273: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.006723183207213879
    2. 'neg' → logprob: -5.631723403930664
    3. ' negatif' → logprob: -6.131723403930664
    4. 'n' → logprob: -7.631723403930664
    5. ' negative' → logprob: -8.881723403930664
    6. ' inférieur' → logprob: -9.381723403930664
    7. '<' → logprob: -10.256723403930664
    8. ' negativ' → logprob: -10.381723403930664
    9. 'negative' → logprob: -10.506723403930664
    10. '_' → logprob: -11.381723403930664

Token 274: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -4.894790981779806e-05
    2. 'at' → logprob: -10.875048637390137
    3. 'a' → logprob: -11.500048637390137
    4. 'ative' → logprob: -11.625048637390137
    5. '   ' → logprob: -12.375048637390137
    6. 'ati' → logprob: -13.625048637390137
    7. ' at' → logprob: -13.625048637390137
    8. 'al' → logprob: -14.500048637390137
    9. '

' → logprob: -14.625048637390137
    10. '       ' → logprob: -14.750048637390137

Token 275: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7463245987892151
    2. ' if' → logprob: -1.4963245391845703
    3. 'if' → logprob: -1.4963245391845703
    4. 'result' → logprob: -3.6213245391845703
    5. '   ' → logprob: -4.24632453918457
    6. '    
' → logprob: -4.37132453918457
    7. '  
' → logprob: -4.99632453918457
    8. 'i' → logprob: -5.62132453918457
    9. 's' → logprob: -5.87132453918457
    10. ',' → logprob: -6.12132453918457

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14997147023677826
    2. '
' → logprob: -2.3999714851379395
    3. '    
' → logprob: -3.1499714851379395
    4. ' if' → logprob: -6.1499714851379395
    5. '  
' → logprob: -6.7749714851379395
    6. 'result' → logprob: -7.2749714851379395
    7. '   
' → logprob: -7.8999714851379395
    8. '<|end|>' → logprob: -8.274971008300781
    9. 'if' → logprob: -8.399971008300781
    10. ' 
' → logprob: -8.524971008300781

Token 277: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6488934755325317
    2. '   ' → logprob: -1.2738934755325317
    3. ' if' → logprob: -1.6488934755325317
    4. 'result' → logprob: -5.398893356323242
    5. '    
' → logprob: -7.523893356323242
    6. ' result' → logprob: -8.898893356323242
    7. '
' → logprob: -9.523893356323242
    8. ' ' → logprob: -10.773893356323242
    9. '  ' → logprob: -11.273893356323242
    10. ' 
' → logprob: -11.773893356323242

Token 278: ' La' (ID: 3038)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2938491702079773
    2. ' if' → logprob: -1.543849229812622
    3. '   ' → logprob: -3.793849229812622
    4. 'result' → logprob: -4.043848991394043
    5. ' result' → logprob: -7.043848991394043
    6. 'print' → logprob: -10.043848991394043
    7. ' resultat' → logprob: -10.043848991394043
    8. '    
' → logprob: -11.793848991394043
    9. 'If' → logprob: -11.918848991394043
    10. ' ' → logprob: -11.918848991394043

Token 279: ' fonction' (ID: 17610)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.789675235748291
    2. 'if' → logprob: -1.039675235748291
    3. ' result' → logprob: -2.414675235748291
    4. ' if' → logprob: -2.539675235748291
    5. ' resultat' → logprob: -3.789675235748291
    6. 'print' → logprob: -8.539674758911133
    7. ' résultat' → logprob: -8.789674758911133
    8. '   ' → logprob: -8.789674758911133
    9. 'res' → logprob: -9.039674758911133
    10. '#' → logprob: -9.039674758911133

Token 280: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31335312128067017
    2. ' max' → logprob: -1.3133530616760254
    3. 'abs' → logprob: -9.813353538513184
    4. 'print' → logprob: -10.438353538513184
    5. ' abs' → logprob: -12.188353538513184
    6. ' print' → logprob: -13.438353538513184
    7. '=max' → logprob: -14.938353538513184
    8. 'result' → logprob: -15.688353538513184
    9. '	max' → logprob: -16.063352584838867
    10. '(max' → logprob: -16.313352584838867

Token 281: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1433381736278534
    2. '(result' → logprob: -2.018338203430176
    3. 'result' → logprob: -8.018338203430176
    4. ' (' → logprob: -8.518338203430176
    5. '(max' → logprob: -9.393338203430176
    6. '(
' → logprob: -11.268338203430176
    7. '()' → logprob: -12.018338203430176
    8. ' result' → logprob: -12.143338203430176
    9. '(resultado' → logprob: -12.268338203430176
    10. '(

' → logprob: -12.893338203430176

Token 282: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7960813045501709
    2. '(result' → logprob: -0.7960813045501709
    3. ')' → logprob: -3.046081304550171
    4. 'result' → logprob: -3.296081304550171
    5. '0' → logprob: -4.42108154296875
    6. ',result' → logprob: -7.54608154296875
    7. ' ' → logprob: -8.04608154296875
    8. ' (' → logprob: -9.17108154296875
    9. ')(' → logprob: -9.79608154296875
    10. '1' → logprob: -10.92108154296875

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016314979875460267
    2. ',result' → logprob: -6.501631259918213
    3. ' ,' → logprob: -9.501631736755371
    4. ')' → logprob: -10.001631736755371
    5. '   ' → logprob: -12.501631736755371
    6. 'result' → logprob: -13.251631736755371
    7. ',
' → logprob: -14.001631736755371
    8. ',res' → logprob: -14.251631736755371
    9. '(result' → logprob: -14.501631736755371
    10. '```' → logprob: -15.126631736755371

Token 284: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -2.6656825866666622e-05
    2. ' resultat' → logprob: -10.75002670288086
    3. ' result' → logprob: -12.25002670288086
    4. '(result' → logprob: -15.87502670288086
    5. '[result' → logprob: -16.00002670288086
    6. ')' → logprob: -16.87502670288086
    7. 'resultado' → logprob: -17.50002670288086
    8. ' ' → logprob: -17.62502670288086
    9. '$result' → logprob: -17.75002670288086
    10. ',result' → logprob: -17.75002670288086

Token 285: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7954958821064793e-05
    2. ' )' → logprob: -11.875018119812012
    3. '))' → logprob: -12.250018119812012
    4. '())' → logprob: -13.000018119812012
    5. '()' → logprob: -13.625018119812012
    6. ')
' → logprob: -13.750018119812012
    7. ')`' → logprob: -14.375018119812012
    8. ')))' → logprob: -14.875018119812012
    9. '   ' → logprob: -15.750018119812012
    10. '(' → logprob: -16.375017166137695

Token 286: ' compare' (ID: 12221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19200722873210907
    2. 'return' → logprob: -2.692007303237915
    3. ' garantit' → logprob: -3.567007303237915
    4. ' ren' → logprob: -3.692007303237915
    5. ' retourne' → logprob: -4.317007064819336
    6. ' permet' → logprob: -4.567007064819336
    7. ' return' → logprob: -4.692007064819336
    8. 'ren' → logprob: -4.942007064819336
    9. ' )' → logprob: -5.692007064819336
    10. ' assure' → logprob: -5.942007064819336

Token 287: ' ' (ID: 220)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.7913216352462769
    2. 'result' → logprob: -1.1663216352462769
    3. '(' → logprob: -1.5413216352462769
    4. '0' → logprob: -4.666321754455566
    5. ' result' → logprob: -4.916321754455566
    6. ' (' → logprob: -6.291321754455566
    7. ')' → logprob: -7.541321754455566
    8. ' ' → logprob: -7.541321754455566
    9. ',result' → logprob: -8.041321754455566
    10. ' le' → logprob: -8.166321754455566

Token 288: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0806327685713768
    2. 'result' → logprob: -2.5806326866149902
    3. '(result' → logprob: -6.95563268661499
    4. '(' → logprob: -7.58063268661499
    5. ' ' → logprob: -8.455633163452148
    6. ' result' → logprob: -10.080633163452148
    7. 'le' → logprob: -11.955633163452148
    8. ' resultat' → logprob: -12.330633163452148
    9. ',result' → logprob: -12.955633163452148
    10. ')' → logprob: -13.455633163452148

Token 289: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006291598547250032
    2. ',result' → logprob: -7.75062894821167
    3. ' ,' → logprob: -8.750629425048828
    4. '<|end|>' → logprob: -11.125629425048828
    5. 'et' → logprob: -12.000629425048828
    6. 'result' → logprob: -12.625629425048828
    7. ' and' → logprob: -12.750629425048828
    8. ',
' → logprob: -13.000629425048828
    9. ' ' → logprob: -13.000629425048828
    10. ')' → logprob: -13.000629425048828

Token 290: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.018596326932311058
    2. ' resultat' → logprob: -4.018596172332764
    3. ' result' → logprob: -7.768596172332764
    4. ' résultat' → logprob: -11.143596649169922
    5. 'res' → logprob: -12.643596649169922
    6. ' ' → logprob: -13.268596649169922
    7. 'rés' → logprob: -14.143596649169922
    8. '(result' → logprob: -14.643596649169922
    9. '$result' → logprob: -14.768596649169922
    10. '	result' → logprob: -14.768596649169922

Token 291: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0012172595597803593
    2. ' resultat' → logprob: -6.751217365264893
    3. ' result' → logprob: -10.001216888427734
    4. ' résultat' → logprob: -14.626216888427734
    5. 'res' → logprob: -15.126216888427734
    6. 'resultado' → logprob: -15.501216888427734
    7. 'rés' → logprob: -15.751216888427734
    8. ' ' → logprob: -15.876216888427734
    9. '(result' → logprob: -16.501216888427734
    10. '	result' → logprob: -16.501216888427734

Token 292: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.128163257315464e-07
    2. 'result' → logprob: -15.125
    3. 'ат' → logprob: -17.5
    4. ' at' → logprob: -18.875
    5. 'AT' → logprob: -20.375
    6. 'a' → logprob: -20.5
    7. '	at' → logprob: -21.125
    8. 'At' → logprob: -21.5
    9. 'ats' → logprob: -21.5
    10. '   ' → logprob: -21.875

Token 293: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09892803430557251
    2. ')' → logprob: -2.4739279747009277
    3. ',result' → logprob: -5.473927974700928
    4. '),' → logprob: -6.223927974700928
    5. ' et' → logprob: -6.723927974700928
    6. ' ,' → logprob: -6.848927974700928
    7. 'result' → logprob: -6.848927974700928
    8. 'et' → logprob: -9.348928451538086
    9. ' )' → logprob: -9.848928451538086
    10. ' and' → logprob: -9.848928451538086

Token 294: ' puis' (ID: 18766)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17518121004104614
    2. ')' → logprob: -1.9251811504364014
    3. ' et' → logprob: -4.9251813888549805
    4. '),' → logprob: -5.5501813888549805
    5. '   ' → logprob: -6.5501813888549805
    6. ' ,' → logprob: -7.0501813888549805
    7. ' and' → logprob: -8.17518138885498
    8. 'et' → logprob: -8.55018138885498
    9. 'return' → logprob: -8.67518138885498
    10. ' )' → logprob: -9.17518138885498

Token 295: ' retourne' (ID: 178818)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.14548955857753754
    2. 'return' → logprob: -2.145489454269409
    3. ' retourne' → logprob: -4.895489692687988
    4. 'ren' → logprob: -5.645489692687988
    5. ' return' → logprob: -5.895489692687988
    6. ' ret' → logprob: -6.645489692687988
    7. ' ren' → logprob: -6.770489692687988
    8. ' prend' → logprob: -7.270489692687988
    9. ' chois' → logprob: -8.270489692687988
    10. 'cho' → logprob: -8.270489692687988

Token 296: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8064296245574951
    2. ' max' → logprob: -1.3064296245574951
    3. ' le' → logprob: -1.9314296245574951
    4. ' la' → logprob: -2.431429624557495
    5. 'result' → logprob: -4.556429862976074
    6. ' celui' → logprob: -4.931429862976074
    7. 'leur' → logprob: -5.056429862976074
    8. ' result' → logprob: -5.056429862976074
    9. 'le' → logprob: -5.306429862976074
    10. '0' → logprob: -5.431429862976074

Token 297: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13230624794960022
    2. ' plus' → logprob: -3.0073063373565674
    3. 'plus' → logprob: -3.5073063373565674
    4. ' max' → logprob: -3.8823063373565674
    5. 'maximum' → logprob: -4.382306098937988
    6. ' maximum' → logprob: -5.382306098937988
    7. ' maximale' → logprob: -6.007306098937988
    8. '>' → logprob: -6.507306098937988
    9. 'result' → logprob: -7.257306098937988
    10. 'ma' → logprob: -7.882306098937988

Token 298: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.19497668743133545
    2. 'max' → logprob: -2.569976806640625
    3. 'gr' → logprob: -3.069976806640625
    4. 'grand' → logprob: -3.694976806640625
    5. 'large' → logprob: -3.944976806640625
    6. ')' → logprob: -6.194976806640625
    7. ' large' → logprob: -6.694976806640625
    8. ' élevée' → logprob: -7.194976806640625
    9. ',' → logprob: -7.569976806640625
    10. ' ' → logprob: -7.694976806640625

Token 299: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8439862728118896
    2. ' valeur' → logprob: -1.3439862728118896
    3. ' des' → logprob: -1.8439862728118896
    4. 'val' → logprob: -2.5939862728118896
    5. ')' → logprob: -3.4689862728118896
    6. 'des' → logprob: -4.343986511230469
    7. ' entre' → logprob: -4.593986511230469
    8. 'value' → logprob: -5.218986511230469
    9. 'entre' → logprob: -5.593986511230469
    10. ' value' → logprob: -5.843986511230469

Token 300: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.00910812709480524
    2. ' deux' → logprob: -4.759108066558838
    3. '2' → logprob: -8.759108543395996
    4. ')' → logprob: -9.134108543395996
    5. '(de' → logprob: -9.884108543395996
    6. '(' → logprob: -9.884108543395996
    7. ' ' → logprob: -10.134108543395996
    8. 'ces' → logprob: -10.134108543395996
    9. '_de' → logprob: -11.134108543395996
    10. '0' → logprob: -11.884108543395996

Token 301: ' valeurs' (ID: 73668)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.38591939210891724
    2. '   ' → logprob: -1.5109193325042725
    3. '
' → logprob: -3.3859193325042725
    4. 'return' → logprob: -4.010919570922852
    5. ' result' → logprob: -4.135919570922852
    6. ' return' → logprob: -4.760919570922852
    7. '    
' → logprob: -5.510919570922852
    8. '()' → logprob: -5.635919570922852
    9. '()
' → logprob: -5.760919570922852
    10. ')
' → logprob: -6.135919570922852

Token 302: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21831130981445312
    2. '
' → logprob: -1.7183113098144531
    3. '    
' → logprob: -4.468311309814453
    4. ' return' → logprob: -6.468311309814453
    5. 'result' → logprob: -6.593311309814453
    6. 'return' → logprob: -6.593311309814453
    7. '  
' → logprob: -8.218311309814453
    8. '   
' → logprob: -8.343311309814453
    9. ' 
' → logprob: -8.593311309814453
    10. ')
' → logprob: -9.843311309814453

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09811967611312866
    2. '
' → logprob: -2.7231197357177734
    3. ' return' → logprob: -4.223119735717773
    4. '    
' → logprob: -5.348119735717773
    5. 'result' → logprob: -5.598119735717773
    6. 'return' → logprob: -5.973119735717773
    7. ' result' → logprob: -7.223119735717773
    8. '  
' → logprob: -7.223119735717773
    9. ' 
' → logprob: -8.223119735717773
    10. '   
' → logprob: -8.723119735717773

Token 304: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3876759707927704
    2. 'return' → logprob: -1.2626760005950928
    3. '   ' → logprob: -4.137675762176514
    4. 'result' → logprob: -4.137675762176514
    5. ' result' → logprob: -5.387675762176514
    6. ' print' → logprob: -7.387675762176514
    7. 'print' → logprob: -7.512675762176514
    8. ' resultat' → logprob: -7.512675762176514
    9. '    
' → logprob: -9.762676239013672
    10. ' retour' → logprob: -10.012676239013672

Token 305: ' Donc' (ID: 88837)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.253779798746109
    2. 'return' → logprob: -2.128779888153076
    3. '   ' → logprob: -2.878779888153076
    4. ' result' → logprob: -3.753779888153076
    5. 'result' → logprob: -4.128779888153076
    6. ' resultat' → logprob: -5.503779888153076
    7. ' print' → logprob: -5.628779888153076
    8. 'print' → logprob: -7.003779888153076
    9. ' retour' → logprob: -8.128779411315918
    10. ' final' → logprob: -8.503779411315918

Token 306: ',' (ID: 11)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.4618990123271942
    2. ' max' → logprob: -2.0868990421295166
    3. ' resultat' → logprob: -2.0868990421295166
    4. 'result' → logprob: -2.3368990421295166
    5. 'max' → logprob: -4.0868988037109375
    6. '   ' → logprob: -5.8368988037109375
    7. ' return' → logprob: -6.2118988037109375
    8. ' print' → logprob: -6.9618988037109375
    9. 'print' → logprob: -7.4618988037109375
    10. ' résultat' → logprob: -7.7118988037109375

Token 307: ' si' (ID: 1784)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.37566161155700684
    2. ' result' → logprob: -2.125661611557007
    3. 'print' → logprob: -2.375661611557007
    4. ' resultat' → logprob: -2.875661611557007
    5. ' max' → logprob: -3.875661611557007
    6. 'result' → logprob: -4.500661849975586
    7. ' final' → logprob: -5.625661849975586
    8. 'max' → logprob: -6.250661849975586
    9. ' output' → logprob: -6.750661849975586
    10. ' res' → logprob: -7.125661849975586

Token 308: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.026582997292280197
    2. ' resultat' → logprob: -3.651582956314087
    3. ' result' → logprob: -8.401582717895508
    4. 'res' → logprob: -10.776582717895508
    5. ' résultat' → logprob: -11.026582717895508
    6. ' ' → logprob: -12.276582717895508
    7. '(result' → logprob: -12.276582717895508
    8. '   ' → logprob: -13.026582717895508
    9. 'max' → logprob: -13.276582717895508
    10. 'resultado' → logprob: -13.776582717895508

Token 309: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.001729444949887693
    2. ' resultat' → logprob: -6.376729488372803
    3. ' result' → logprob: -11.001729011535645
    4. '   ' → logprob: -13.001729011535645
    5. ' ' → logprob: -13.126729011535645
    6. 'res' → logprob: -13.376729011535645
    7. '(result' → logprob: -13.876729011535645
    8. ' résultat' → logprob: -14.001729011535645
    9. 'resultado' → logprob: -14.001729011535645
    10. '  ' → logprob: -14.501729011535645

Token 310: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.3856492842023727e-06
    2. 'result' → logprob: -13.750000953674316
    3. 'ат' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.875001907348633
    5. 'a' → logprob: -17.125001907348633
    6. ' at' → logprob: -17.125001907348633
    7. ' ' → logprob: -17.875001907348633
    8. ' resultat' → logprob: -18.000001907348633
    9. '=result' → logprob: -18.375001907348633
    10. '_result' → logprob: -18.375001907348633

Token 311: ''' (ID: 6)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.018971286714076996
    2. '<' → logprob: -4.2689714431762695
    3. ''' → logprob: -5.8939714431762695
    4. ' '' → logprob: -6.8939714431762695
    5. ' ' → logprob: -8.01897144317627
    6. ' >' → logprob: -8.64397144317627
    7. ' est' → logprob: -8.76897144317627
    8. ' is' → logprob: -8.89397144317627
    9. '<'' → logprob: -9.26897144317627
    10. '<|end|>' → logprob: -9.89397144317627

Token 312: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9748514294624329
    2. ' est' → logprob: -0.9748514294624329
    3. '<' → logprob: -1.599851369857788
    4. '<|end|>' → logprob: -3.849851369857788
    5. ' is' → logprob: -3.974851369857788
    6. 'est' → logprob: -6.224851608276367
    7. ' ' → logprob: -7.099851608276367
    8. ' devient' → logprob: -8.474851608276367
    9. '<|end|>' → logprob: -10.099851608276367
    10. ' <=' → logprob: -10.099851608276367

Token 313: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.09107065200805664
    2. 'negative' → logprob: -3.0910706520080566
    3. 'neg' → logprob: -3.9660706520080566
    4. ' negative' → logprob: -4.591070652008057
    5. 'n' → logprob: -4.966070652008057
    6. '<' → logprob: -6.591070652008057
    7. 'positive' → logprob: -6.841070652008057
    8. ' negatif' → logprob: -7.216070652008057
    9. ' negativa' → logprob: -7.341070652008057
    10. ' positive' → logprob: -7.466070652008057

Token 314: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.0014557128306478262
    2. 'eg' → logprob: -7.001455783843994
    3. 'g' → logprob: -8.251455307006836
    4. 'ative' → logprob: -8.751455307006836
    5. 'ég' → logprob: -10.376455307006836
    6. 'ag' → logprob: -10.501455307006836
    7. '   ' → logprob: -10.751455307006836
    8. 'ativ' → logprob: -11.751455307006836
    9. '<' → logprob: -11.876455307006836
    10. 'ativement' → logprob: -12.251455307006836

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015575936995446682
    2. ')' → logprob: -4.390575885772705
    3. ' ,' → logprob: -6.140575885772705
    4. '),' → logprob: -7.515575885772705
    5. '):' → logprob: -9.140576362609863
    6. ',
' → logprob: -9.640576362609863
    7. '   ' → logprob: -9.765576362609863
    8. ':' → logprob: -9.765576362609863
    9. ',result' → logprob: -10.640576362609863
    10. ' )' → logprob: -11.390576362609863

Token 316: ' ' (ID: 220)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5518776774406433
    2. ' resultat' → logprob: -1.676877737045288
    3. ' max' → logprob: -2.426877737045288
    4. '0' → logprob: -2.426877737045288
    5. 'result' → logprob: -2.926877737045288
    6. ' résultat' → logprob: -5.801877498626709
    7. 'max' → logprob: -6.426877498626709
    8. ' ' → logprob: -6.551877498626709
    9. ' on' → logprob: -7.676877498626709
    10. ' return' → logprob: -9.176877975463867

Token 317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010951373726129532
    2. 'result' → logprob: -5.135951519012451
    3. ' ' → logprob: -5.760951519012451
    4. ' result' → logprob: -7.135951519012451
    5. 'max' → logprob: -7.135951519012451
    6. ' max' → logprob: -8.885951042175293
    7. ' resultat' → logprob: -9.885951042175293
    8. ' on' → logprob: -10.010951042175293
    9. '   ' → logprob: -11.135951042175293
    10. ' la' → logprob: -12.635951042175293

Token 318: ' sera' (ID: 15511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012077613733708858
    2. '<|end|>' → logprob: -5.262077808380127
    3. ',' → logprob: -6.012077808380127
    4. ' )' → logprob: -6.637077808380127
    5. ')return' → logprob: -7.387077808380127
    6. 'return' → logprob: -7.512077808380127
    7. ' else' → logprob: -7.887077808380127
    8. '),' → logprob: -8.012077331542969
    9. 'else' → logprob: -8.512077331542969
    10. ' est' → logprob: -8.512077331542969

Token 319: ' retourn' (ID: 150215)
  Prédit: ' retourn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourn' → logprob: -0.6220788955688477
    2. 'ret' → logprob: -1.3720788955688477
    3. ' returned' → logprob: -2.6220788955688477
    4. 'returned' → logprob: -2.7470788955688477
    5. ')' → logprob: -2.9970788955688477
    6. 'return' → logprob: -4.497078895568848
    7. ' reten' → logprob: -5.997078895568848
    8. ' ' → logprob: -6.747078895568848
    9. ' retorn' → logprob: -6.872078895568848
    10. 'reten' → logprob: -6.997078895568848

Token 320: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.13351726531982422
    2. 'ée' → logprob: -2.258517265319824
    3. '0' → logprob: -4.633517265319824
    4. 'ed' → logprob: -4.633517265319824
    5. 'e' → logprob: -7.258517265319824
    6. 'er' → logprob: -8.258517265319824
    7. 'ee' → logprob: -10.758517265319824
    8. 'É' → logprob: -11.008517265319824
    9. 'è' → logprob: -11.633517265319824
    10. 'era' → logprob: -12.133517265319824

Token 321: ' ;' (ID: 4605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017961567267775536
    2. '
' → logprob: -4.267961502075195
    3. '    
' → logprob: -5.767961502075195
    4. 'return' → logprob: -7.642961502075195
    5. ' return' → logprob: -9.142961502075195
    6. '   
' → logprob: -11.267961502075195
    7. '  
' → logprob: -11.517961502075195
    8. 'result' → logprob: -11.517961502075195
    9. 'print' → logprob: -11.892961502075195
    10. ' 
' → logprob: -12.017961502075195

Token 322: ' sinon' (ID: 52915)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6594958305358887
    2. '   ' → logprob: -1.4094958305358887
    3. ' print' → logprob: -1.5344958305358887
    4. ')' → logprob: -4.034495830535889
    5. ' return' → logprob: -6.034495830535889
    6. 'return' → logprob: -6.409495830535889
    7. ' )' → logprob: -7.909495830535889
    8. 'result' → logprob: -8.159496307373047
    9. ')
' → logprob: -9.034496307373047
    10. '  ' → logprob: -9.534496307373047

Token 323: ',' (ID: 11)
  Prédit: ' resultat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' resultat' → logprob: -0.07031207531690598
    2. 'result' → logprob: -3.195312023162842
    3. ' result' → logprob: -3.695312023162842
    4. ' résultat' → logprob: -6.445312023162842
    5. ',' → logprob: -8.5703125
    6. ',result' → logprob: -9.1953125
    7. ' return' → logprob: -9.8203125
    8. ' ' → logprob: -10.1953125
    9. ' resultado' → logprob: -10.4453125
    10. ' retour' → logprob: -10.6953125

Token 324: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06432592123746872
    2. ' resultat' → logprob: -2.8143258094787598
    3. ' result' → logprob: -6.06432580947876
    4. ' résultat' → logprob: -11.189326286315918
    5. ' ' → logprob: -12.189326286315918
    6. 'res' → logprob: -12.439326286315918
    7. 'ret' → logprob: -12.939326286315918
    8. 'return' → logprob: -14.064326286315918
    9. 'max' → logprob: -14.189326286315918
    10. '`' → logprob: -14.939326286315918

Token 325: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.001093307975679636
    2. ' resultat' → logprob: -7.00109338760376
    3. ' result' → logprob: -8.626092910766602
    4. ' résultat' → logprob: -14.001092910766602
    5. 'resultado' → logprob: -14.626092910766602
    6. 'res' → logprob: -15.126092910766602
    7. 'ret' → logprob: -15.876092910766602
    8. 'rés' → logprob: -16.0010929107666
    9. '   ' → logprob: -16.3760929107666
    10. ' ' → logprob: -16.5010929107666

Token 326: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -7.147740689106286e-05
    2. 'result' → logprob: -9.75007152557373
    3. 'ultat' → logprob: -12.00007152557373
    4. ' resultat' → logprob: -13.25007152557373
    5. '_result' → logprob: -13.50007152557373
    6. '   ' → logprob: -14.12507152557373
    7. 'ат' → logprob: -14.37507152557373
    8. 'a' → logprob: -14.62507152557373
    9. ' at' → logprob: -15.00007152557373
    10. 'ul' → logprob: -15.25007152557373

Token 327: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09272310882806778
    2. ' sera' → logprob: -3.0927231311798096
    3. '<|end|>' → logprob: -3.5927231311798096
    4. ' est' → logprob: -5.0927228927612305
    5. ' )' → logprob: -5.8427228927612305
    6. '   ' → logprob: -6.2177228927612305
    7. 'return' → logprob: -6.9677228927612305
    8. 'sera' → logprob: -7.2177228927612305
    9. '),' → logprob: -8.09272289276123
    10. '<|end|>' → logprob: -8.21772289276123

Token 328: ' sera' (ID: 15511)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: ' retourn' (ID: 150215)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.011536046862602234
    2. 'result' → logprob: -4.511536121368408
    3. ' retourn' → logprob: -7.886536121368408
    4. 'returned' → logprob: -9.88653564453125
    5. ' result' → logprob: -10.88653564453125
    6. ' resultat' → logprob: -11.38653564453125
    7. 'reten' → logprob: -12.01153564453125
    8. ' ret' → logprob: -12.13653564453125
    9. ' returned' → logprob: -12.26153564453125
    10. 'return' → logprob: -12.76153564453125

Token 330: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.03854871913790703
    2. 'ed' → logprob: -3.413548707962036
    3. 'ée' → logprob: -5.663548946380615
    4. 'e' → logprob: -7.288548946380615
    5. 'd' → logprob: -8.538548469543457
    6. '   ' → logprob: -9.163548469543457
    7. 'result' → logprob: -9.413548469543457
    8. 'éd' → logprob: -9.538548469543457
    9. 'n' → logprob: -10.288548469543457
    10. ' ' → logprob: -10.288548469543457

Token 331: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003460848471149802
    2. 'print' → logprob: -6.128460884094238
    3. 'return' → logprob: -7.378460884094238
    4. '    
' → logprob: -8.003460884094238
    5. '
' → logprob: -8.378460884094238
    6. ' return' → logprob: -10.128460884094238
    7. ' print' → logprob: -10.253460884094238
    8. 'result' → logprob: -12.628460884094238
    9. '  
' → logprob: -13.378460884094238
    10. '   
' → logprob: -13.503460884094238

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011671547777950764
    2. 'print' → logprob: -4.511671543121338
    3. ' print' → logprob: -8.011672019958496
    4. 'return' → logprob: -8.511672019958496
    5. '    
' → logprob: -9.636672019958496
    6. ' return' → logprob: -10.761672019958496
    7. '
' → logprob: -13.386672019958496
    8. '```' → logprob: -13.636672019958496
    9. '	print' → logprob: -14.636672019958496
    10. '   
' → logprob: -15.386672019958496

Token 333: ' final' (ID: 1721)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.067694902420044
    2. '   ' → logprob: -1.317694902420044
    3. 'print' → logprob: -1.567694902420044
    4. ' return' → logprob: -1.942694902420044
    5. ' print' → logprob: -3.317694902420044
    6. '    
' → logprob: -8.317694664001465
    7. '
' → logprob: -9.567694664001465
    8. 'result' → logprob: -11.067694664001465
    9. '```' → logprob: -11.567694664001465
    10. '  ' → logprob: -12.192694664001465

Token 334: ' =' (ID: 314)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.6819145083427429
    2. '_' → logprob: -1.1819145679473877
    3. ' =' → logprob: -2.1819145679473877
    4. '=' → logprob: -3.1819145679473877
    5. ' ' → logprob: -4.556914329528809
    6. 'result' → logprob: -5.056914329528809
    7. 'at' → logprob: -5.431914329528809
    8. 'e' → logprob: -5.681914329528809
    9. '=result' → logprob: -6.181914329528809
    10. ')' → logprob: -6.431914329528809

Token 335: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5759395360946655
    2. ' max' → logprob: -0.8259395360946655
    3. ' ' → logprob: -17.325939178466797
    4. ' ' → logprob: -18.325939178466797
    5. '(max' → logprob: -18.325939178466797
    6. '   ' → logprob: -18.700939178466797
    7. '	max' → logprob: -18.950939178466797
    8. '0' → logprob: -19.200939178466797
    9. '=max' → logprob: -20.200939178466797
    10. '_max' → logprob: -21.325939178466797

Token 336: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.759734732331708e-05
    2. ' (' → logprob: -11.000017166137695
    3. '(
' → logprob: -14.375017166137695
    4. '0' → logprob: -16.125017166137695
    5. '(final' → logprob: -16.250017166137695
    6. '(

' → logprob: -18.625017166137695
    7. '(max' → logprob: -18.875017166137695
    8. '```' → logprob: -20.125017166137695
    9. '((' → logprob: -20.250017166137695
    10. 'final' → logprob: -20.625017166137695

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '(' → logprob: -17.125009536743164
    4. ')' → logprob: -19.000009536743164
    5. '   ' → logprob: -19.375009536743164
    6. '  ' → logprob: -20.125009536743164
    7. '```' → logprob: -21.125009536743164
    8. ',' → logprob: -21.250009536743164
    9. '۰' → logprob: -21.375009536743164
    10. '[' → logprob: -22.250009536743164

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020628207130357623
    2. ' ,' → logprob: -8.875205993652344
    3. ',result' → logprob: -9.625205993652344
    4. ',
' → logprob: -15.500205993652344
    5. 'final' → logprob: -16.625205993652344
    6. ',res' → logprob: -18.375205993652344
    7. 'result' → logprob: -18.375205993652344
    8. ',f' → logprob: -18.375205993652344
    9. ')' → logprob: -18.625205993652344
    10. ' ' → logprob: -18.625205993652344

Token 339: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.014366932213306427
    2. ' resultat' → logprob: -4.26436710357666
    3. ' result' → logprob: -8.51436710357666
    4. ' résultat' → logprob: -13.51436710357666
    5. 'res' → logprob: -14.76436710357666
    6. 'resultado' → logprob: -15.26436710357666
    7. ' ' → logprob: -15.38936710357666
    8. ' resultado' → logprob: -15.88936710357666
    9. '   ' → logprob: -16.014366149902344
    10. '	result' → logprob: -16.389366149902344

Token 340: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018153218552470207
    2. ')
' → logprob: -4.018153190612793
    3. ' )' → logprob: -13.268153190612793
    4. ')
' → logprob: -14.143153190612793
    5. '   ' → logprob: -14.393153190612793
    6. ')

' → logprob: -15.768153190612793
    7. ' )
' → logprob: -15.893153190612793
    8. ' ' → logprob: -18.26815414428711
    9. ')`' → logprob: -18.64315414428711
    10. ')return' → logprob: -19.26815414428711

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006559623870998621
    2. 'print' → logprob: -8.125656127929688
    3. '    
' → logprob: -8.250656127929688
    4. '
' → logprob: -9.750656127929688
    5. 'return' → logprob: -10.375656127929688
    6. '<|end|>' → logprob: -12.500656127929688
    7. ' return' → logprob: -13.625656127929688
    8. '  
' → logprob: -13.875656127929688
    9. '	return' → logprob: -14.250656127929688
    10. '```' → logprob: -14.375656127929688

Token 342: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.313662588596344
    2. 'print' → logprob: -1.3136625289916992
    3. 'return' → logprob: -8.1886625289917
    4. ' print' → logprob: -9.1886625289917
    5. '    
' → logprob: -11.0636625289917
    6. '	print' → logprob: -12.6886625289917
    7. ' return' → logprob: -13.8136625289917
    8. '```' → logprob: -15.0636625289917
    9. '    ' → logprob: -16.063663482666016
    10. '  ' → logprob: -16.063663482666016

Token 343: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022343553137034178
    2. 'return' → logprob: -7.12723445892334
    3. '   ' → logprob: -7.25223445892334
    4. ' print' → logprob: -7.25223445892334
    5. 'pr' → logprob: -12.25223445892334
    6. ' return' → logprob: -12.87723445892334
    7. 'prin' → logprob: -12.87723445892334
    8. 'p' → logprob: -15.12723445892334
    9. '#' → logprob: -15.12723445892334
    10. '  ' → logprob: -15.25223445892334

Token 344: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25200867652893066
    2. ' print' → logprob: -1.5020086765289307
    3. '   ' → logprob: -9.752008438110352
    4. '.print' → logprob: -12.002008438110352
    5. '#' → logprob: -12.627008438110352
    6. '#print' → logprob: -12.877008438110352
    7. '_print' → logprob: -13.127008438110352
    8. 'pr' → logprob: -14.127008438110352
    9. '	print' → logprob: -14.127008438110352
    10. ' ' → logprob: -14.252008438110352

Token 345: ' la' (ID: 557)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.0029675960540771484
    2. 'final' → logprob: -6.002967834472656
    3. '(' → logprob: -7.627967834472656
    4. ' final' → logprob: -13.127967834472656
    5. '(fin' → logprob: -13.627967834472656
    6. '(f' → logprob: -13.877967834472656
    7. ' (' → logprob: -14.502967834472656
    8. '("' → logprob: -16.377967834472656
    9. '(
' → logprob: -16.377967834472656
    10. '(fi' → logprob: -16.752967834472656

Token 346: ' valeur' (ID: 41664)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.0446600615978241
    2. ' final' → logprob: -3.1696600914001465
    3. '(final' → logprob: -6.6696600914001465
    4. '(' → logprob: -8.919659614562988
    5. 'result' → logprob: -9.044659614562988
    6. 'f' → logprob: -9.419659614562988
    7. ' result' → logprob: -11.419659614562988
    8. 'fin' → logprob: -11.669659614562988
    9. ' finale' → logprob: -11.669659614562988
    10. 'r' → logprob: -12.544659614562988

Token 347: ' finale' (ID: 37759)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.024194393306970596
    2. '(' → logprob: -3.7741944789886475
    3. 'final' → logprob: -7.274194240570068
    4. '   ' → logprob: -9.149194717407227
    5. '()' → logprob: -9.649194717407227
    6. ' (' → logprob: -10.149194717407227
    7. '(
' → logprob: -10.399194717407227
    8. ' final' → logprob: -12.774194717407227
    9. '("' → logprob: -13.024194717407227
    10. '(fin' → logprob: -13.274194717407227

Token 348: ' calcul' (ID: 7559)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10330474376678467
    2. 'print' → logprob: -2.603304862976074
    3. ' print' → logprob: -3.728304862976074
    4. '(print' → logprob: -11.103304862976074
    5. '```' → logprob: -11.228304862976074
    6. '	print' → logprob: -11.478304862976074
    7. 'final' → logprob: -11.603304862976074
    8. '()' → logprob: -11.603304862976074
    9. '(' → logprob: -11.853304862976074
    10. '    
' → logprob: -11.978304862976074

Token 349: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0007408959208987653
    2. 'ee' → logprob: -7.625741004943848
    3. 'é' → logprob: -8.750741004943848
    4. 'final' → logprob: -9.750741004943848
    5. 'e' → logprob: -10.625741004943848
    6. 'er' → logprob: -12.125741004943848
    7. ' final' → logprob: -13.125741004943848
    8. '#' → logprob: -13.250741004943848
    9. 'Final' → logprob: -13.375741004943848
    10. '   ' → logprob: -14.875741004943848

Token 350: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20776061713695526
    2. '   ' → logprob: -1.8327605724334717
    3. ' print' → logprob: -3.8327605724334717
    4. '(print' → logprob: -5.582760810852051
    5. '(final' → logprob: -7.082760810852051
    6. '(' → logprob: -7.332760810852051
    7. 'final' → logprob: -7.707760810852051
    8. '
' → logprob: -9.70776081085205
    9. '    
' → logprob: -9.83276081085205
    10. '()
' → logprob: -10.20776081085205

Token 351: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10198219865560532
    2. 'la' → logprob: -2.4769821166992188
    3. ' l' → logprob: -5.101982116699219
    4. '   ' → logprob: -5.976982116699219
    5. 'print' → logprob: -6.226982116699219
    6. ' la' → logprob: -7.351982116699219
    7. ' ' → logprob: -7.476982116699219
    8. 'a' → logprob: -8.851982116699219
    9. 'aff' → logprob: -9.476982116699219
    10. 'lac' → logprob: -9.476982116699219

Token 352: ''utilisateur' (ID: 140803)
  Prédit: ''écran'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.024527834728360176
    2. 'a' → logprob: -4.0245280265808105
    3. ''utilisateur' → logprob: -5.3995280265808105
    4. '’écran' → logprob: -6.8995280265808105
    5. 'print' → logprob: -8.274527549743652
    6. 'e' → logprob: -8.524527549743652
    7. 'é' → logprob: -9.399527549743652
    8. ''aide' → logprob: -9.524527549743652
    9. 'console' → logprob: -9.649527549743652
    10. 'screen' → logprob: -10.274527549743652

Token 353: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2899826169013977
    2. 'print' → logprob: -1.539982557296753
    3. ' print' → logprob: -3.289982557296753
    4. '
' → logprob: -10.039982795715332
    5. '    
' → logprob: -10.789982795715332
    6. '	print' → logprob: -11.414982795715332
    7. '```' → logprob: -13.039982795715332
    8. '  
' → logprob: -13.664982795715332
    9. '  ' → logprob: -13.664982795715332
    10. '(print' → logprob: -13.664982795715332

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10039536654949188
    2. 'print' → logprob: -2.600395441055298
    3. ' print' → logprob: -3.850395441055298
    4. '
' → logprob: -12.725395202636719
    5. '```' → logprob: -13.850395202636719
    6. '    
' → logprob: -14.850395202636719
    7. '	print' → logprob: -15.225395202636719
    8. '(print' → logprob: -18.10039520263672
    9. '  ' → logprob: -18.35039520263672
    10. '       ' → logprob: -18.60039520263672

Token 355: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.03968110680580139
    2. 'print' (adapté à ' print') → logprob: -3.2896811962127686
    3. '   ' → logprob: -6.4146809577941895
    4. '```' → logprob: -14.914681434631348
    5. ' prin' → logprob: -15.664681434631348
    6. '	print' → logprob: -16.28968048095703
    7. '    ' → logprob: -16.66468048095703
    8. ' 
' → logprob: -16.78968048095703
    9. '    
' → logprob: -16.78968048095703
    10. ' ' → logprob: -17.28968048095703

Token 356: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.0040799472481012344
    2. '(' → logprob: -5.504079818725586
    3. '(fin' → logprob: -14.379079818725586
    4. ' (' → logprob: -15.129079818725586
    5. '(f' → logprob: -15.504079818725586
    6. 'final' → logprob: -15.629079818725586
    7. '()' → logprob: -15.754079818725586
    8. '(fi' → logprob: -16.504079818725586
    9. '(F' → logprob: -17.004079818725586
    10. '(
' → logprob: -17.754079818725586

Token 357: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.625000953674316
    3. '()' → logprob: -17.250001907348633
    4. '())' → logprob: -17.500001907348633
    5. ')`' → logprob: -17.500001907348633
    6. '))' → logprob: -17.625001907348633
    7. ')
' → logprob: -17.625001907348633
    8. '')' → logprob: -19.000001907348633
    9. '`)' → logprob: -19.750001907348633
    10. '")' → logprob: -20.500001907348633

Token 358: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: ' Cette' (ID: 27383)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004500261973589659
    2. 'main' → logprob: -5.504500389099121
    3. 'i' → logprob: -8.129500389099121
    4. ' if' → logprob: -9.379500389099121
    5. '(main' → logprob: -11.254500389099121
    6. ' main' → logprob: -11.254500389099121
    7. 'm' → logprob: -11.754500389099121
    8. '```' → logprob: -13.254500389099121
    9. '(' → logprob: -13.379500389099121
    10. '()' → logprob: -13.629500389099121

Token 360: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1992766261100769
    2. ' ligne' → logprob: -2.4492766857147217
    3. ' if' → logprob: -2.8242766857147217
    4. ' line' → logprob: -5.199276447296143
    5. 'ligne' → logprob: -5.699276447296143
    6. ':' → logprob: -5.699276447296143
    7. '__' → logprob: -5.824276447296143
    8. '_' → logprob: -5.824276447296143
    9. ' condition' → logprob: -5.949276447296143
    10. 'def' → logprob: -5.949276447296143

Token 361: ' spéciale' (ID: 142408)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5342282056808472
    2. ' if' → logprob: -0.9092282056808472
    3. '_' → logprob: -5.784228324890137
    4. '__' → logprob: -5.784228324890137
    5. ' __' → logprob: -6.409228324890137
    6. ' =' → logprob: -7.284228324890137
    7. '_if' → logprob: -7.784228324890137
    8. ':' → logprob: -7.909228324890137
    9. ' ' → logprob: -8.409228324890137
    10. ' ==' → logprob: -8.409228324890137

Token 362: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14287614822387695
    2. ' if' → logprob: -2.017876148223877
    3. ':' → logprob: -8.767875671386719
    4. ' permet' → logprob: -11.267875671386719
    5. ' ensures' → logprob: -11.392875671386719
    6. '__' → logprob: -12.017875671386719
    7. '```' → logprob: -12.017875671386719
    8. ':
' → logprob: -13.392875671386719
    9. ' checks' → logprob: -13.517875671386719
    10. ' allows' → logprob: -13.892875671386719

Token 363: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.06205787509679794
    2. 'if' → logprob: -2.8120579719543457
    3. '__' → logprob: -9.937057495117188
    4. ' if' → logprob: -11.562057495117188
    5. 'ifiez' → logprob: -11.812057495117188
    6. 'ifi' → logprob: -12.562057495117188
    7. '```' → logprob: -12.687057495117188
    8. 'i' → logprob: -12.687057495117188
    9. 'ification' → logprob: -12.937057495117188
    10. 'ify' → logprob: -13.187057495117188

Token 364: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.8965004086494446
    2. 'if' → logprob: -1.1465003490447998
    3. 'si' → logprob: -1.3965003490447998
    4. ' if' → logprob: -3.6465003490448
    5. '__' → logprob: -7.396500587463379
    6. '_si' → logprob: -9.896500587463379
    7. 'que' → logprob: -11.146500587463379
    8. '```' → logprob: -11.771500587463379
    9. ' __' → logprob: -12.021500587463379
    10. ' que' → logprob: -12.271500587463379

Token 365: ' ce' (ID: 2357)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023246755823493004
    2. '__' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.773246765136719
    4. ' ' → logprob: -15.148246765136719
    5. ' "__' → logprob: -15.273246765136719
    6. '_name' → logprob: -15.898246765136719
    7. '/__' → logprob: -16.39824676513672
    8. 'name' → logprob: -16.77324676513672
    9. ' _' → logprob: -17.89824676513672
    10. '_' → logprob: -17.89824676513672

Token 366: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.40956079959869385
    2. ' __' → logprob: -1.1595607995986938
    3. '_' → logprob: -4.284560680389404
    4. ' script' → logprob: -5.534560680389404
    5. ' nom' → logprob: -7.034560680389404
    6. '_name' → logprob: -7.034560680389404
    7. ' _' → logprob: -7.784560680389404
    8. ' ' → logprob: -8.034561157226562
    9. ' programme' → logprob: -8.159561157226562
    10. 'name' → logprob: -8.284561157226562

Token 367: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11945454031229019
    2. 'est' → logprob: -2.7444546222686768
    3. ' __' → logprob: -3.4944546222686768
    4. ' est' → logprob: -4.119454383850098
    5. 'name' → logprob: -7.744454383850098
    6. ' ==' → logprob: -7.869454383850098
    7. '_est' → logprob: -8.369454383850098
    8. '_name' → logprob: -8.994454383850098
    9. '```' → logprob: -9.119454383850098
    10. ' is' → logprob: -9.244454383850098

Token 368: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12997490167617798
    2. ' __' → logprob: -2.129974842071533
    3. ' exécut' → logprob: -7.004974842071533
    4. 'le' → logprob: -7.254974842071533
    5. ' "__' → logprob: -7.629974842071533
    6. ' le' → logprob: -7.754974842071533
    7. '_' → logprob: -9.254975318908691
    8. '_le' → logprob: -9.254975318908691
    9. 'name' → logprob: -9.379975318908691
    10. '_name' → logprob: -9.629975318908691

Token 369: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015172583051025867
    2. ' __' → logprob: -4.765172481536865
    3. ' en' → logprob: -5.265172481536865
    4. '_en' → logprob: -7.890172481536865
    5. 'en' → logprob: -8.015172958374023
    6. '_' → logprob: -8.640172958374023
    7. 'é' → logprob: -9.390172958374023
    8. '_name' → logprob: -9.390172958374023
    9. 'e' → logprob: -9.765172958374023
    10. ' directement' → logprob: -9.765172958374023

Token 370: ' directement' (ID: 52317)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.1537327766418457
    2. 'direct' → logprob: -1.2787327766418457
    3. '__' → logprob: -1.6537327766418457
    4. ' en' → logprob: -2.2787327766418457
    5. ' directement' → logprob: -2.9037327766418457
    6. ' __' → logprob: -3.5287327766418457
    7. '_en' → logprob: -4.903732776641846
    8. '_direct' → logprob: -4.903732776641846
    9. ' directly' → logprob: -5.028732776641846
    10. 'dep' → logprob: -6.778732776641846

Token 371: ' par' (ID: 686)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6877655386924744
    2. 'if' → logprob: -0.8127655386924744
    3. ':
' → logprob: -4.312765598297119
    4. ' if' → logprob: -4.437765598297119
    5. ':' → logprob: -5.187765598297119
    6. ' 
' → logprob: -5.312765598297119
    7. '  
' → logprob: -5.687765598297119
    8. ' rather' → logprob: -5.812765598297119
    9. '_
' → logprob: -6.437765598297119
    10. '```' → logprob: -6.437765598297119

Token 372: ' l' (ID: 305)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.3527691662311554
    2. 'python' → logprob: -1.477769136428833
    3. 'le' → logprob: -3.477769136428833
    4. '__' → logprob: -3.602769136428833
    5. 'l' → logprob: -5.352769374847412
    6. ' Python' → logprob: -5.477769374847412
    7. ' l' → logprob: -6.977769374847412
    8. ' le' → logprob: -7.977769374847412
    9. ' python' → logprob: -7.977769374847412
    10. 'un' → logprob: -9.227768898010254

Token 373: ''utilisateur' (ID: 140803)
  Prédit: ''inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''inter' → logprob: -0.6245805621147156
    2. 'e' → logprob: -1.3745806217193604
    3. 'a' → logprob: -2.6245806217193604
    4. ''utilisateur' → logprob: -2.9995806217193604
    5. 'es' → logprob: -3.1245806217193604
    6. 'inter' → logprob: -3.9995806217193604
    7. '__' → logprob: -4.499580383300781
    8. ''' → logprob: -4.624580383300781
    9. '_inter' → logprob: -5.999580383300781
    10. ''application' → logprob: -6.999580383300781

Token 374: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1188477948307991
    2. '
' → logprob: -2.2438478469848633
    3. ' if' → logprob: -5.868847846984863
    4. ':
' → logprob: -7.118847846984863
    5. ':' → logprob: -7.243847846984863
    6. '```' → logprob: -7.743847846984863
    7. '

' → logprob: -7.993847846984863
    8. '\n' → logprob: -8.493847846984863
    9. '  
' → logprob: -8.618847846984863
    10. '\' → logprob: -8.618847846984863

Token 375: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00019090480054728687
    2. 'i' → logprob: -9.125190734863281
    3. '
' → logprob: -10.000190734863281
    4. ' if' → logprob: -10.250190734863281
    5. '```' → logprob: -14.125190734863281
    6. ' 
' → logprob: -15.375190734863281
    7. '  
' → logprob: -16.25019073486328
    8. '

' → logprob: -17.87519073486328
    9. ' i' → logprob: -17.87519073486328
    10. '\n' → logprob: -18.12519073486328

Token 376: ' '__' (ID: 28278)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1472419600977446e-06
    2. ' if' → logprob: -13.750000953674316
    3. 'i' → logprob: -18.125001907348633
    4. '```' → logprob: -21.000001907348633
    5. 'If' → logprob: -22.500001907348633
    6. '
' → logprob: -23.000001907348633
    7. '#' → logprob: -23.750001907348633
    8. '﻿' → logprob: -24.625001907348633
    9. '	if' → logprob: -25.000001907348633
    10. 'ifs' → logprob: -25.375001907348633

Token 377: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -9.615255839889869e-05
    2. 'main' → logprob: -9.250096321105957
    3. 'na' → logprob: -17.75009536743164
    4. 'nam' → logprob: -17.87509536743164
    5. ' name' → logprob: -20.12509536743164
    6. 'n' → logprob: -22.00009536743164
    7. '```' → logprob: -22.25009536743164
    8. 'nom' → logprob: -22.37509536743164
    9. '__' → logprob: -23.75009536743164
    10. 'if' → logprob: -24.50009536743164

Token 378: '__' (ID: 771)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6684392690658569
    2. ' ==' → logprob: -0.7934392690658569
    3. '__' → logprob: -3.5434393882751465
    4. '=='' → logprob: -5.5434393882751465
    5. ''' → logprob: -6.6684393882751465
    6. '=' → logprob: -7.7934393882751465
    7. '_' → logprob: -8.918438911437988
    8. '=="' → logprob: -9.043438911437988
    9. ' =='' → logprob: -9.168438911437988
    10. ')==' → logprob: -9.293438911437988

Token 379: ''' (ID: 6)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5336549282073975
    2. ' ==' → logprob: -0.9086549282073975
    3. '=='' → logprob: -4.783655166625977
    4. ''' → logprob: -6.408655166625977
    5. '__' → logprob: -8.783655166625977
    6. '=="' → logprob: -8.908655166625977
    7. '=' → logprob: -10.158655166625977
    8. ' =='' → logprob: -10.158655166625977
    9. '```' → logprob: -10.408655166625977
    10. ')==' → logprob: -10.908655166625977

Token 380: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04011455178260803
    2. '==' → logprob: -3.290114641189575
    3. '=' → logprob: -6.540114402770996
    4. ' =' → logprob: -7.790114402770996
    5. ' ' → logprob: -10.040114402770996
    6. ' =="' → logprob: -10.165114402770996
    7. ' =='' → logprob: -10.290114402770996
    8. '=="' → logprob: -10.540114402770996
    9. '=='' → logprob: -10.540114402770996
    10. '<|end|>' → logprob: -11.290114402770996

Token 381: ' une' (ID: 2463)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.392089307308197
    2. ' ==' → logprob: -2.267089366912842
    3. ' '__' → logprob: -2.267089366912842
    4. '"' → logprob: -3.017089366912842
    5. '__' → logprob: -3.517089366912842
    6. '==' → logprob: -4.142089366912842
    7. ' __' → logprob: -4.267089366912842
    8. ' "__' → logprob: -4.892089366912842
    9. ' equal' → logprob: -7.767089366912842
    10. '=' → logprob: -8.767088890075684

Token 382: ' variable' (ID: 11076)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08983999490737915
    2. '"' → logprob: -2.9648399353027344
    3. 'variable' → logprob: -4.964839935302734
    4. 'string' → logprob: -5.214839935302734
    5. '==' → logprob: -5.339839935302734
    6. 'space' → logprob: -5.839839935302734
    7. ' __' → logprob: -5.839839935302734
    8. ''' → logprob: -5.839839935302734
    9. ' ==' → logprob: -6.089839935302734
    10. '=="' → logprob: -6.714839935302734

Token 383: ' spéciale' (ID: 142408)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13311590254306793
    2. '==' → logprob: -2.1331160068511963
    3. '=' → logprob: -5.383115768432617
    4. ' =' → logprob: -7.008115768432617
    5. '=='' → logprob: -7.883115768432617
    6. '=="' → logprob: -8.758115768432617
    7. '__' → logprob: -9.508115768432617
    8. ' ' → logprob: -11.258115768432617
    9. '_' → logprob: -11.258115768432617
    10. ' ===' → logprob: -11.383115768432617

Token 384: ' qui' (ID: 2780)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009100803174078465
    2. '==' → logprob: -4.759100914001465
    3. ' =' → logprob: -8.134100914001465
    4. '=' → logprob: -9.259100914001465
    5. ' ' → logprob: -9.884100914001465
    6. '=="' → logprob: -11.509100914001465
    7. '=='' → logprob: -11.759100914001465
    8. 'if' → logprob: -12.009100914001465
    9. '__' → logprob: -12.384100914001465
    10. ' ===' → logprob: -12.384100914001465

Token 385: ' vaut' (ID: 83004)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07931945472955704
    2. '==' → logprob: -2.579319477081299
    3. '=' → logprob: -8.70431900024414
    4. '=="' → logprob: -9.32931900024414
    5. ' =' → logprob: -9.82931900024414
    6. '=='' → logprob: -9.82931900024414
    7. ' ===' → logprob: -11.20431900024414
    8. ' ' → logprob: -11.45431900024414
    9. '__' → logprob: -11.45431900024414
    10. ' =="' → logprob: -11.82931900024414

Token 386: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5832045674324036
    2. '"' → logprob: -0.8332045674324036
    3. ' "__' → logprob: -5.333204746246338
    4. ' '__' → logprob: -6.208204746246338
    5. '__' → logprob: -8.08320426940918
    6. ''"' → logprob: -10.45820426940918
    7. '("__' → logprob: -10.95820426940918
    8. '('__' → logprob: -11.70820426940918
    9. '"'' → logprob: -12.08320426940918
    10. ''s' → logprob: -12.08320426940918

Token 387: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. 'name' → logprob: -17.75
    3. ' main' → logprob: -17.875
    4. '_main' → logprob: -18.75
    5. '"' → logprob: -19.5
    6. '__' → logprob: -20.25
    7. '	main' → logprob: -20.75
    8. '(main' → logprob: -21.0
    9. 'ma' → logprob: -21.75
    10. ''' → logprob: -22.625

Token 388: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03804321587085724
    2. '__':
' → logprob: -3.288043260574341
    3. ''' → logprob: -13.538043022155762
    4. '__
' → logprob: -15.663043022155762
    5. '___' → logprob: -16.163043975830078
    6. '__":
' → logprob: -16.163043975830078
    7. '_'' → logprob: -17.163043975830078
    8. '__.' → logprob: -17.413043975830078
    9. '_' → logprob: -18.663043975830078
    10. '__)' → logprob: -18.788043975830078

Token 389: ''' (ID: 6)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3076540529727936
    2. ''' → logprob: -1.6826540231704712
    3. '__':
' → logprob: -2.5576541423797607
    4. '':' → logprob: -7.057653903961182
    5. ''
' → logprob: -9.18265438079834
    6. '':
' → logprob: -9.43265438079834
    7. '_' → logprob: -9.80765438079834
    8. '___' → logprob: -9.80765438079834
    9. '_'' → logprob: -9.80765438079834
    10. 'if' → logprob: -9.93265438079834

Token 390: ' si' (ID: 1784)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6075747609138489
    2. 'if' → logprob: -0.8575747609138489
    3. ':
' → logprob: -4.232574939727783
    4. ' if' → logprob: -4.232574939727783
    5. '
' → logprob: -7.857574939727783
    6. ' and' → logprob: -8.232574462890625
    7. '```' → logprob: -8.357574462890625
    8. ' :' → logprob: -8.607574462890625
    9. ' ' → logprob: -8.732574462890625
    10. '   ' → logprob: -8.982574462890625

Token 391: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04858771339058876
    2. ' __' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.298587799072266
    4. '_' → logprob: -17.423587799072266
    5. '(__' → logprob: -17.423587799072266
    6. '_name' → logprob: -18.048587799072266
    7. '/__' → logprob: -18.048587799072266
    8. '___' → logprob: -18.173587799072266
    9. 'name' → logprob: -18.298587799072266
    10. ' ' → logprob: -18.673587799072266

Token 392: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12712979316711426
    2. ' ==' → logprob: -2.6271297931671143
    3. ' __' → logprob: -3.7521297931671143
    4. '_' → logprob: -4.752129554748535
    5. '==' → logprob: -4.752129554748535
    6. 'if' → logprob: -6.877129554748535
    7. '_f' → logprob: -7.002129554748535
    8. 'file' → logprob: -7.252129554748535
    9. 'f' → logprob: -7.502129554748535
    10. ' fichier' → logprob: -7.627129554748535

Token 393: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.590680718421936
    2. ' ==' → logprob: -0.840680718421936
    3. '__' → logprob: -4.9656805992126465
    4. 'est' → logprob: -5.0906805992126465
    5. ' est' → logprob: -7.3406805992126465
    6. ' __' → logprob: -8.340681076049805
    7. '=' → logprob: -8.590681076049805
    8. '=="' → logprob: -9.590681076049805
    9. ' ' → logprob: -9.965681076049805
    10. '=='' → logprob: -10.090681076049805

Token 394: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5835157632827759
    2. ' exécut' → logprob: -0.9585157632827759
    3. 'le' → logprob: -3.7085156440734863
    4. 'ex' → logprob: -4.333515644073486
    5. 'execut' → logprob: -4.583515644073486
    6. ' __' → logprob: -5.833515644073486
    7. ''ex' → logprob: -6.458515644073486
    8. ' le' → logprob: -6.583515644073486
    9. '"' → logprob: -6.583515644073486
    10. ' "__' → logprob: -6.833515644073486

Token 395: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.5165131688117981
    2. 'point' → logprob: -1.0165131092071533
    3. 'script' → logprob: -3.8915131092071533
    4. 'f' → logprob: -4.766513347625732
    5. ' programme' → logprob: -5.016513347625732
    6. 'program' → logprob: -6.266513347625732
    7. ' point' → logprob: -6.516513347625732
    8. 'principal' → logprob: -6.766513347625732
    9. ' script' → logprob: -7.891513347625732
    10. ' fichier' → logprob: -8.016512870788574

Token 396: ' principal' (ID: 10589)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6032593846321106
    2. 'if' → logprob: -1.3532593250274658
    3. '_name' → logprob: -2.978259325027466
    4. ':' → logprob: -3.478259325027466
    5. '```' → logprob: -3.728259325027466
    6. ''' → logprob: -3.853259325027466
    7. '   ' → logprob: -4.603259563446045
    8. ' if' → logprob: -4.978259563446045
    9. ' ' → logprob: -4.978259563446045
    10. '_' → logprob: -5.228259563446045

Token 397: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008275188505649567
    2. '
' → logprob: -5.508275032043457
    3. ':
' → logprob: -5.883275032043457
    4. ':' → logprob: -6.883275032043457
    5. ' if' → logprob: -8.258275032043457
    6. '  
' → logprob: -9.633275032043457
    7. ' 
' → logprob: -11.133275032043457
    8. '    
' → logprob: -11.383275032043457
    9. '   ' → logprob: -12.008275032043457
    10. '

' → logprob: -12.008275032043457

Token 398: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001402025343850255
    2. '
' → logprob: -7.126401901245117
    3. ' if' → logprob: -7.501401901245117
    4. '  
' → logprob: -10.876401901245117
    5. '    
' → logprob: -11.751401901245117
    6. ' 
' → logprob: -11.751401901245117
    7. '

' → logprob: -12.876401901245117
    8. '   ' → logprob: -12.876401901245117
    9. 'i' → logprob: -13.251401901245117
    10. ':
' → logprob: -13.751401901245117

Token 399: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.941850526549388e-06
    2. ' if' → logprob: -11.750007629394531
    3. '
' → logprob: -23.25000762939453
    4. '```' → logprob: -23.37500762939453
    5. '	if' → logprob: -24.62500762939453
    6. 'If' → logprob: -24.75000762939453
    7. '__' → logprob: -24.75000762939453
    8. '#' → logprob: -25.37500762939453
    9. 'elif' → logprob: -25.50000762939453
    10. '  
' → logprob: -26.12500762939453

Token 400: ' c' (ID: 274)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3132653534412384
    2. ' __' → logprob: -1.313265323638916
    3. ' ' → logprob: -12.938265800476074
    4. 'True' → logprob: -14.938265800476074
    5. 'name' → logprob: -15.063265800476074
    6. ' ' → logprob: -15.563265800476074
    7. ' True' → logprob: -15.688265800476074
    8. '(__' → logprob: -16.688264846801758
    9. '```' → logprob: -16.813264846801758
    10. 'if' → logprob: -17.063264846801758

Token 401: ''est' (ID: 6616)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07916142046451569
    2. ' __' → logprob: -2.5791614055633545
    3. '_' → logprob: -8.704161643981934
    4. '_name' → logprob: -9.579161643981934
    5. 'if' → logprob: -10.829161643981934
    6. '___' → logprob: -11.954161643981934
    7. 'name' → logprob: -12.579161643981934
    8. ' _' → logprob: -13.204161643981934
    9. ' ' → logprob: -13.329161643981934
    10. ' ' → logprob: -14.329161643981934

Token 402: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.061972957104444504
    2. ' __' → logprob: -2.8119728565216064
    3. 'True' → logprob: -13.686972618103027
    4. '_' → logprob: -13.936972618103027
    5. ' ' → logprob: -14.061972618103027
    6. ' True' → logprob: -14.811972618103027
    7. '  ' → logprob: -14.936972618103027
    8. 'le' → logprob: -15.311972618103027
    9. '_name' → logprob: -15.561972618103027
    10. ' le' → logprob: -15.561972618103027

Token 403: ' cas' (ID: 2108)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0035982904955744743
    2. ' __' → logprob: -6.628598213195801
    3. 'nom' → logprob: -6.753598213195801
    4. 'name' → logprob: -7.003598213195801
    5. ' nom' → logprob: -9.7535982131958
    6. '_' → logprob: -10.6285982131958
    7. 'main' → logprob: -10.7535982131958
    8. 'programme' → logprob: -10.7535982131958
    9. 'f' → logprob: -11.1285982131958
    10. 'v' → logprob: -11.5035982131958

Token 404: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1474415808916092
    2. ':
' → logprob: -2.0224416255950928
    3. 'if' → logprob: -5.397441387176514
    4. ' :
' → logprob: -9.772441864013672
    5. ' if' → logprob: -9.897441864013672
    6. ':

' → logprob: -10.272441864013672
    7. '   ' → logprob: -10.522441864013672
    8. ' :' → logprob: -10.897441864013672
    9. '```' → logprob: -11.647441864013672
    10. ',' → logprob: -11.772441864013672

Token 405: ' on' (ID: 402)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06405818462371826
    2. 'main' → logprob: -2.814058303833008
    3. ' __' → logprob: -7.189058303833008
    4. '   ' → logprob: -7.814058303833008
    5. 'if' → logprob: -8.064058303833008
    6. '	main' → logprob: -8.314058303833008
    7. ' ' → logprob: -9.564058303833008
    8. ' if' → logprob: -9.814058303833008
    9. '__' → logprob: -10.064058303833008
    10. ' 
' → logprob: -10.189058303833008

Token 406: ' appelle' (ID: 111796)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.9549456238746643
    2. ' main' → logprob: -1.2049455642700195
    3. ' appelle' → logprob: -1.2049455642700195
    4. ':' → logprob: -4.9549455642700195
    5. ''appelle' → logprob: -6.4549455642700195
    6. 'app' → logprob: -6.7049455642700195
    7. 'execute' → logprob: -6.9549455642700195
    8. '	main' → logprob: -7.8299455642700195
    9. '_main' → logprob: -7.9549455642700195
    10. ' souhaite' → logprob: -8.20494556427002

Token 407: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0015117661096155643
    2. ' main' → logprob: -6.501511573791504
    3. '(main' → logprob: -11.751511573791504
    4. '	main' → logprob: -13.501511573791504
    5. '   ' → logprob: -16.50151252746582
    6. '_main' → logprob: -16.62651252746582
    7. '(' → logprob: -17.37651252746582
    8. 'ma' → logprob: -17.62651252746582
    9. 'def' → logprob: -18.37651252746582
    10. ' ' → logprob: -19.00151252746582

Token 408: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.002240535570308566
    2. ' main' → logprob: -6.1272406578063965
    3. 'def' → logprob: -10.002240180969238
    4. 'function' → logprob: -12.002240180969238
    5. '(main' → logprob: -13.002240180969238
    6. '	main' → logprob: -14.377240180969238
    7. 'fonction' → logprob: -15.377240180969238
    8. '_main' → logprob: -16.002241134643555
    9. '()' → logprob: -16.002241134643555
    10. 'ma' → logprob: -16.252241134643555

Token 409: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006721536163240671
    2. ' main' → logprob: -5.006721496582031
    3. '(main' → logprob: -12.131721496582031
    4. '(' → logprob: -14.631721496582031
    5. '	main' → logprob: -15.256721496582031
    6. '()' → logprob: -17.63172149658203
    7. '_main' → logprob: -18.13172149658203
    8. '(
' → logprob: -18.63172149658203
    9. '.main' → logprob: -19.00672149658203
    10. 'ma' → logprob: -19.13172149658203

Token 410: '()' (ID: 416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02642279677093029
    2. '
' → logprob: -3.7764227390289307
    3. '

' → logprob: -6.40142297744751
    4. ':
' → logprob: -7.15142297744751
    5. '```' → logprob: -8.526422500610352
    6. ' if' → logprob: -8.651422500610352
    7. '()
' → logprob: -8.776422500610352
    8. ':' → logprob: -9.776422500610352
    9. ':

' → logprob: -10.526422500610352
    10. '\n' → logprob: -10.651422500610352

Token 411: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.474505215883255
    2. 'if' → logprob: -0.9745051860809326
    3. ' if' → logprob: -8.849505424499512
    4. '

' → logprob: -9.474505424499512
    5. '  
' → logprob: -9.724505424499512
    6. '
' → logprob: -10.224505424499512
    7. ' 
' → logprob: -10.224505424499512
    8. '\n' → logprob: -10.474505424499512
    9. '```' → logprob: -10.849505424499512
    10. '    
' → logprob: -11.349505424499512

Token 412: ' dém' (ID: 34947)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.4892396926879883
    2. ' ex' → logprob: -2.1142396926879883
    3. ' execut' → logprob: -2.6142396926879883
    4. ' lancer' → logprob: -2.6142396926879883
    5. 'l' → logprob: -2.7392396926879883
    6. 'execut' → logprob: -2.9892396926879883
    7. 'dem' → logprob: -7.114239692687988
    8. 'execute' → logprob: -7.364239692687988
    9. 'exec' → logprob: -7.614239692687988
    10. ' effectuer' → logprob: -7.614239692687988

Token 413: 'arrer' (ID: 85856)
  Prédit: 'arrer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrer' → logprob: -0.000708501785993576
    2. 'arer' → logprob: -7.62570858001709
    3. 'arr' → logprob: -8.87570858001709
    4. 'ar' → logprob: -10.12570858001709
    5. '|' → logprob: -12.62570858001709
    6. '"' → logprob: -12.62570858001709
    7. 'arrera' → logprob: -12.75070858001709
    8. '```' → logprob: -12.87570858001709
    9. '   ' → logprob: -13.00070858001709
    10. '**' → logprob: -13.00070858001709

Token 414: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21166014671325684
    2. '
' → logprob: -1.7116601467132568
    3. ':
' → logprob: -5.711660385131836
    4. ' if' → logprob: -6.336660385131836
    5. '()
' → logprob: -6.586660385131836
    6. '  
' → logprob: -6.961660385131836
    7. '

' → logprob: -7.336660385131836
    8. ':' → logprob: -7.711660385131836
    9. '```' → logprob: -7.711660385131836
    10. ' 
' → logprob: -7.961660385131836

Token 415: ''ex' (ID: 23472)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.9192314743995667
    2. 'program' → logprob: -1.4192314147949219
    3. 'ain' → logprob: -1.7942314147949219
    4. ' programme' → logprob: -2.669231414794922
    5. 'a' → logprob: -2.794231414794922
    6. ' program' → logprob: -4.169231414794922
    7. '_program' → logprob: -4.169231414794922
    8. 'main' → logprob: -4.544231414794922
    9. '```' → logprob: -5.419231414794922
    10. ''ex' → logprob: -5.544231414794922

Token 416: 'écution' (ID: 122423)
  Prédit: 'écution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écution' → logprob: -0.11326904594898224
    2. 'ecution' → logprob: -2.238269090652466
    3. 'éc' → logprob: -8.363268852233887
    4. 'é' → logprob: -9.488268852233887
    5. 'ec' → logprob: -9.613268852233887
    6. 'ection' → logprob: -10.738268852233887
    7. 'if' → logprob: -11.488268852233887
    8. 'ecute' → logprob: -11.613268852233887
    9. 'c' → logprob: -11.738268852233887
    10. 'écut' → logprob: -12.613268852233887

Token 417: ' du' (ID: 1462)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.474608451128006
    2. 'if' → logprob: -0.9746084213256836
    3. '

' → logprob: -7.974608421325684
    4. ' if' → logprob: -8.974608421325684
    5. '```' → logprob: -10.099608421325684
    6. '  
' → logprob: -12.099608421325684
    7. '
' → logprob: -12.224608421325684
    8. ' 
' → logprob: -12.349608421325684
    9. '\n' → logprob: -13.224608421325684
    10. ':
' → logprob: -13.849608421325684

Token 418: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.004750745836645365
    2. ' programme' → logprob: -6.004750728607178
    3. 'program' → logprob: -6.254750728607178
    4. 'script' → logprob: -8.004751205444336
    5. 'code' → logprob: -11.379751205444336
    6. ' script' → logprob: -12.504751205444336
    7. 'programm' → logprob: -14.379751205444336
    8. ' program' → logprob: -14.879751205444336
    9. 'programma' → logprob: -15.004751205444336
    10. 'Programme' → logprob: -15.379751205444336

Token 419: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06303602457046509
    2. 'if' → logprob: -2.8130359649658203
    3. '

' → logprob: -6.93803596496582
    4. '```' → logprob: -10.68803596496582
    5. '  
' → logprob: -10.81303596496582
    6. '
' → logprob: -11.18803596496582
    7. ' 
' → logprob: -11.43803596496582
    8. ' if' → logprob: -11.43803596496582
    9. '\n' → logprob: -11.68803596496582
    10. ':
' → logprob: -12.56303596496582

Token 420: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007578118238598108
    2. '
' → logprob: -7.250757694244385
    3. ' if' → logprob: -10.000758171081543
    4. '```' → logprob: -13.875758171081543
    5. '  
' → logprob: -14.625758171081543
    6. ' 
' → logprob: -14.875758171081543
    7. '    
' → logprob: -15.500758171081543
    8. '\n' → logprob: -15.750758171081543
    9. '

' → logprob: -16.125757217407227
    10. '\' → logprob: -16.375757217407227

Token 421: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0015764019917696714
    2. '__' → logprob: -6.6265764236450195
    3. ' ' → logprob: -8.87657642364502
    4. ' ' → logprob: -9.25157642364502
    5. '  ' → logprob: -12.00157642364502
    6. '_' → logprob: -12.62657642364502
    7. ' ' → logprob: -12.87657642364502
    8. ' _' → logprob: -14.50157642364502
    9. 'space' → logprob: -14.50157642364502
    10. ' ‌' → logprob: -15.25157642364502

Token 422: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.36312630772590637
    2. ' ==' → logprob: -1.238126277923584
    3. '==' → logprob: -4.488126277923584
    4. ' __' → logprob: -5.738126277923584
    5. '_' → logprob: -9.863126754760742
    6. '=="' → logprob: -10.488126754760742
    7. 'name' → logprob: -11.488126754760742
    8. '=='' → logprob: -12.238126754760742
    9. ' =="' → logprob: -12.738126754760742
    10. ' ' → logprob: -12.863126754760742

Token 423: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3856492842023727e-06
    2. '==' → logprob: -14.500000953674316
    3. '_' → logprob: -14.625000953674316
    4. ' __' → logprob: -15.875000953674316
    5. ' ==' → logprob: -15.875000953674316
    6. '__
' → logprob: -16.750001907348633
    7. '__.__' → logprob: -17.625001907348633
    8. '____' → logprob: -18.500001907348633
    9. '___' → logprob: -18.750001907348633
    10. '__

' → logprob: -19.000001907348633

Token 424: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05667319893836975
    2. '==' → logprob: -3.056673288345337
    3. '__' → logprob: -5.056673049926758
    4. '=="' → logprob: -6.681673049926758
    5. '=='' → logprob: -7.806673049926758
    6. '=' → logprob: -11.931673049926758
    7. '"' → logprob: -12.306673049926758
    8. ' =="' → logprob: -12.306673049926758
    9. ' ' → logprob: -12.556673049926758
    10. ' =' → logprob: -13.556673049926758

Token 425: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048713743686676025
    2. ''' → logprob: -3.0487136840820312
    3. ' "__' → logprob: -9.423713684082031
    4. '__' → logprob: -10.173713684082031
    5. ' '__' → logprob: -11.923713684082031
    6. '"'' → logprob: -15.298713684082031
    7. ''"' → logprob: -16.04871368408203
    8. '("__' → logprob: -16.17371368408203
    9. '('__' → logprob: -16.17371368408203
    10. 'main' → logprob: -16.54871368408203

Token 426: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. ' main' → logprob: -19.625
    3. 'ma' → logprob: -20.625
    4. 'name' → logprob: -20.75
    5. 'mai' → logprob: -20.75
    6. 'm' → logprob: -22.375
    7. '_main' → logprob: -22.75
    8. '	main' → logprob: -23.625
    9. 'maine' → logprob: -23.75
    10. '__' → logprob: -25.125

Token 427: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.100211963057518
    2. '__' → logprob: -2.3502118587493896
    3. '_' → logprob: -12.225212097167969
    4. '__":
' → logprob: -14.725212097167969
    5. '___' → logprob: -18.97521209716797
    6. '__:' → logprob: -19.35021209716797
    7. '_'' → logprob: -19.85021209716797
    8. '__
' → logprob: -20.72521209716797
    9. '__('' → logprob: -21.85021209716797
    10. '____' → logprob: -22.22521209716797

Token 428: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.024580415338277817
    2. 'main' → logprob: -4.274580478668213
    3. '   ' → logprob: -4.774580478668213
    4. '	main' → logprob: -6.649580478668213
    5. ':' → logprob: -8.024580001831055
    6. '(main' → logprob: -9.649580001831055
    7. ' 
' → logprob: -9.774580001831055
    8. ':
' → logprob: -10.149580001831055
    9. '    
' → logprob: -10.274580001831055
    10. '_main' → logprob: -10.524580001831055

Token 429: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0007099286303855479
    2. ' main' → logprob: -7.2507100105285645
    3. '	main' → logprob: -17.000709533691406
    4. 'm' → logprob: -20.125709533691406
    5. 'ma' → logprob: -20.250709533691406
    6. '(main' → logprob: -20.375709533691406
    7. '   ' → logprob: -20.375709533691406
    8. '.main' → logprob: -21.000709533691406
    9. 'mai' → logprob: -21.125709533691406
    10. 'maine' → logprob: -21.250709533691406

Token 430: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11059851199388504
    2. '<|end|>' → logprob: -2.360598564147949
    3. ')' → logprob: -5.985598564147949
    4. '
' → logprob: -6.235598564147949
    5. '(' → logprob: -6.235598564147949
    6. '```' → logprob: -6.610598564147949
    7. '()
' → logprob: -6.735598564147949
    8. '\n' → logprob: -7.860598564147949
    9. '<|end|>' → logprob: -8.36059856414795
    10. '#' → logprob: -8.73559856414795


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 428
Tokens correctement prédits (1ère position, stricte): 131
Tokens correctement prédits (1ère position, avec adaptation): 133
Tokens correctement prédits (top 10): 263
Précision stricte (1ère position): 30.61%
Précision adaptée (1ère position): 31.07%
Précision (top 10): 61.45%
================================================================================
